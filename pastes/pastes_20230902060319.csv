id,title,username,language,date,content
tiRVNU2Q,DFS,jayati,C++,Saturday 2nd of September 2023 12:51:47 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    
    void dfs(int start,vector<int> adj[],int vis[],vector<int> &ls)
    {
        vis[start]=1;
        ls.push_back(start);
        for(auto it:adj[start])
        {
            if(!vis[it])
            {
                dfs(it,adj,vis,ls);
            }
        }
        
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V]={0};
        int start=0;
        vector<int> ls;
        dfs(start,adj,vis,ls);
        return ls;
        
    }
};

//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >> E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.dfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << "" "";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
//  https://practice.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/"
y4kGChVr,Spammers and Scammers [9-1/2023],bombaires,HTML,Saturday 2nd of September 2023 12:50:21 AM CDT,"<a href=""mailto:hjedsjbj@steppom.knawhusomailbox.com"">hjedsjbj@steppom.knawhusomailbox.com</a>
<a href=""mailto:barristerjavierlopez122@yahoo.com"">barristerjavierlopez122@yahoo.com</a>
<a href=""mailto:barristerjavierlopez72@yahoo.com"">barristerjavierlopez72@yahoo.com</a>
<a href=""mailto:info@helferpillen.org"">info@helferpillen.org</a>
<a href=""mailto:m@marketion.ru"">m@marketion.ru</a>"
Lfjwg66i,IJunior - Программа под паролем,s5upchikis,C#,Saturday 2nd of September 2023 12:37:29 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace RobotKrytoi
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string userPassword = ""StoryDex"";
            string userInput;
            bool isContinue = true;

            Console.Write(""Введите пароль для доступа: "");

            userInput = Console.ReadLine();

            for (int attempts = 3; userInput != userPassword; attempts--)
            {

                Console.BackgroundColor = ConsoleColor.Red;
                Console.WriteLine($""У вас осталось {attempts} попыток"");
                Console.ResetColor();

                if (attempts == 0)
                {
                    isContinue = false;
                    Environment.Exit(0);
                }
                else
                {
                    Console.Write(""Повторите попытку: "");

                    userInput = Console.ReadLine();
                }
            }

            Console.BackgroundColor = ConsoleColor.Green;
            Console.WriteLine(""Вы подобрали пароль от пентагона, молодцы!"");
            Console.ResetColor();

            Console.ReadKey();
        }
    }
}

"
Kj9Le8EF,BFS,jayati,C++,Saturday 2nd of September 2023 12:33:51 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V]={0};
        vis[0]=1;
        
        vector<int> bfs;
        queue<int> q;
        q.push(0);
        while(!q.empty())
        {
            int node= q.front();
            q.pop();
            bfs.push_back(node);
            for(auto u:adj[node])
            {
                if(!vis[u])
                {
                    vis[u]=1;
                    q.push(u);
                }
            }
        }
        return bfs;
    }
};

//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >>

            E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            // 		adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.bfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << "" "";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
// https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/"
s4vM958m,sudo apt install,taw420,Bash,Saturday 2nd of September 2023 12:22:57 AM CDT,sudo apt install nano exa make automake autoconf zstd gzip bzip2 brotli bison binutils psmisc psutils rsync rclone sshpass autossh mosh clang cmake extra-cmake-modules llvm pkg-config openssl ca-certificates build-essential software-properties-common bridge-utils debootstrap debianutils busybox bash-completion tmux screen e2fsprogs dosfstools btrfs-progs squashfuse unionfs-fuse fuse3 iperf3 iproute2 sshfs lxc lxc-utils lxcfs lxct1 less file parallel gnupg git gh hub dnsmasq net-tools nmap netcat-openbsd socat screen tmux figlet toilet cowsay boxes lolcat fortune-mod dpkg-dev apt-utils apt-file keychain snap snapd flatpak appstream apparmor tor i2p apt-transport-tor apt-transport-https php perl ruby ruby nodejs golang python3 python3-pip python3-setuptools python3-venv python3-tk python3-cryptography python3-apt
3hJxtztU,snowybot 3.14 completed,coinwalk,JavaScript,Saturday 2nd of September 2023 12:09:59 AM CDT,"var kozster = $('#pct_balance').val();
var gobbie = ((kozster/144000).toFixed(8));
var zeggar = gobbie;
var target = (kozster*2000);
var tens = (gobbie*10);
var sevens = (gobbie*6.9);
var tuba = ((Math.floor(kozster/tens))*tens);
var tubit = ((Math.floor(kozster/tens))*tens);
var burgzie = kozster;
var bone = ((Math.floor(kozster/tens))*tens);
var razzle = 0;
var lower = 2.9;
var boon = true;
var getld = 0;
var boon = true;
var zimple = kozster;
var blowzy = false;
var nope = 1;
var upper = 6.9;
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;


function get(){
console.clear();
var burgzie = $('#pct_balance').val();
var good = ((burgzie-kozster).toFixed(8));
console.log(""profit"");
console.log(good);
if (burgzie>(tuba+(zeggar*upper))){
    zeggar = Number((zeggar*2).toFixed(8));
    lower = 4.9;
    upper = 4.9;
    tuba = parseFloat(burgzie);
}
if (burgzie<(tuba-(zeggar*lower))){
    zeggar = Number((zeggar*2).toFixed(8));
    lower = 4.9;
    upper = 4.9;
    nope = 0;
    tuba = parseFloat(burgzie);
}
if ((burgzie>=(bone+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    lower = 2.9;
    upper = 6.9;
    nope = 1;
    tuba = parseFloat((Math.floor(burgzie/tens))*tens);
    bone = parseFloat((Math.floor(burgzie/tens))*tens);
}
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==razzle)&&(getld>=1)&&(homer>brother)&&(!boon)){
final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
boon = true;
}
if ((final<49.5000)&&(blowzy)){
zimple = zimple+zeggar
blowzy = false;
}
if ((final>=49.5000)&&(blowzy)){
zimple = zimple-zeggar;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = parseFloat(burgzie);
if (((milk>razzle)&&(getld>=1)&&(homer>brother))||((ficked>migg)&&(!blowzy)&&(getld>=2))||((ficked<migg)&&(!blowzy)&&(getld>=2))||((milk<razzle)&&(getld>=1)&&(homer>brother))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(boon)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
getld = getld+1;
blowzy = true;
boon = false;
homer = 0;
}
setTimeout(() => get(), 1);
}
get();
"
JGV5ZgLU,lab07,LMSV,C++,Friday 1st of September 2023 11:55:22 PM CDT,"#include<stdio.h>
#include<windows.h>
#include<conio.h>
#include<time.h>

void setcursor(int visable);
void setcolor(int fg, int bg);
void gotoxy(int x, int y);
void draw_ship(int x, int y);
void erase_ship(int x, int y);
void draw_bullet(int round);
void erase_bullet(int round);
void draw_star();
void draw_score();
char cursor(int x, int y);

struct Bullet {
    int active;
    int x, y;
};
Bullet bullet[5];
int point = 0;

int main() {
    char ch = '\0';
    char move = ' ';
    int x = 38, y = 20;

    srand(time(NULL));
    for (int i = 0; i < 20; i++) 
        draw_star();
    
    setcursor(0);
    draw_ship(x, y);
    do {

        draw_score();
        if (_kbhit()) 
        {
            ch = _getch();
            fflush(stdin);

            if (ch == ' ') 
                for (int i = 0; i < 5; i++) 
                    if (bullet[i].active == 0) {
                        bullet[i].active = 1;
                        bullet[i].x = x + 3;
                        bullet[i].y = 20;
                        break;
                    }

            if      (ch == 'a') move = 'a';
            else if (ch == 'd') move = 'd';
            else if (ch == 's') move = 's';
        }

        //erase zone
        for (int i = 0; i < 5; i++)
            if (bullet[i].active == 1)
                erase_bullet(i);
        erase_ship(x, y);

        //move
        if (move == 'a' && x > 0)         x--;
        else if (move == 'd' && x < 80)   x++;

        //draw zone
        for (int i = 0; i < 5; i++)
            if (bullet[i].active == 1)
                draw_bullet(i);
        draw_ship(x, y);

        Sleep(10);
    } while (ch != 'x');

    return 0;
}

void gotoxy(int x, int y) {
    COORD c = { x, y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);
}

void draw_ship(int x, int y) {
    gotoxy(x, y);
    setcolor(2, 4);
    printf("" <-0-> "");
}

void erase_ship(int x, int y) {
    gotoxy(x, y);
    setcolor(0, 0);
    printf(""       "");
}

void setcursor(int visible)
{
    HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_CURSOR_INFO lpCursor;
    lpCursor.bVisible = visible;
    lpCursor.dwSize = 20;
    SetConsoleCursorInfo(console, &lpCursor);
}

void setcolor(int fg, int bg) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, bg * 16 + fg);
}

void draw_bullet(int round) {
    if (bullet[round].active == 0)
        return;
    int x = bullet[round].x;
    int y = bullet[round].y;
    gotoxy(x, y);
    
    //if shoot star
    if (cursor(x, y) == '*') {
        Beep(1000, 80);
        setcolor(0, 0);
        printf("" "");
        bullet[round].active = 0;

        // draw new star
        draw_star();
        point++;
        return;
    }
    setcolor(0, 7);
    printf(""^"");
}

void erase_bullet(int round) {
    int x = bullet[round].x;
    int y = bullet[round].y;
    gotoxy(x, y);
    setcolor(0, 0);
    printf("" "");
    if (y == 0) {
        bullet[round].active = 0;
    }
    else bullet[round].y--;
}

void draw_star() {
    
    int x = rand() % 71;
    while (x < 10)
        x = rand() % 71;

    int y = rand() % 6;
    while (y < 2)
        y = rand() % 6;

    gotoxy(x, y);
    setcolor(6, 0);
    printf(""*"");
}

void draw_score() {
    gotoxy(80, 2);
    setcolor(6, 0);
    printf(""Score : %d"",point);
}

char cursor(int x, int y) {
    HANDLE hStd = GetStdHandle(STD_OUTPUT_HANDLE);
    char buf[2]; COORD c = { x,y }; DWORD num_read;
    if (!ReadConsoleOutputCharacter(hStd, (LPTSTR)buf, 1, c, (LPDWORD)&num_read))
        return '\0';
    else
        return buf[0];
}"
5pWd2iPa,IJunior - Вывод имени,s5upchikis,C#,Friday 1st of September 2023 11:52:28 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace RobotKrytoi
{
    internal class Program
    {
        static void Main(string[] args)
        {
            double enterSymbolInUpString;
            double indent = 1;


            Console.Write(""Введите имя: "");

            string userName = Console.ReadLine();

            Console.Clear();
            Console.Write(""Введите символ: "");

            string inputSymbol = (Console.ReadLine()); 

            Console.Clear();

            enterSymbolInUpString = userName.Length + indent;

            for (int abc = 0; abc <= enterSymbolInUpString; abc++)
            {
                Console.Write($""{inputSymbol}"");
            }

            Console.WriteLine($""\n{inputSymbol}{userName}{inputSymbol}"");

            for (int abc = 0; abc <= enterSymbolInUpString; abc++)
            {
                Console.Write($""{inputSymbol}"");
            }
            
            Console.WriteLine(""\n"");

            Console.ReadKey();
        }
    }
}

"
dQDa4Uvy,xanmod kernel,taw420,Bash,Friday 1st of September 2023 11:06:21 PM CDT,"#!/bin/bash

wget -qO - https://dl.xanmod.org/archive.key | sudo gpg --dearmor -o /usr/share/keyrings/xanmod-archive-keyring.gpg

echo 'deb [signed-by=/usr/share/keyrings/xanmod-archive-keyring.gpg] http://deb.xanmod.org releases main' | sudo tee /etc/apt/sources.list.d/xanmod-release.list

sudo apt update -y

sudo apt install -y linux-xanmod-x64v3

#EOF"
uPGZM6aQ,Total Roblox Drama SEE VOTES!!,2AreYouMental110,Lua,Friday 1st of September 2023 10:05:46 PM CDT,"local lol = {}
local success,err = pcall(function()
    for k,v in pairs(getgc(true)) do -- https://v3rmillion.net/showthread.php?tid=1209519
        if pcall(function() return rawget(v,""indexInstance"") end) and type(rawget(v,""indexInstance"")) == ""table"" and  (rawget(v,""indexInstance""))[1] == ""kick"" then
            bypassed = true
            v.tvk = {""kick"",function() return game.Workspace:WaitForChild("""") end}
        end
    end
end)

if getgenv().trdshowvotesgui then
    getgenv().trdshowvotesdeletefunc()
end

local gui = Instance.new(""ScreenGui"")
gui.Name = """"
for i=1,50 do
    gui.Name = gui.Name..tostring(math.random(1,9))
end
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui
getgenv().trdshowvotesgui = gui

local mainframe = Instance.new(""Frame"")
mainframe.Size = UDim2.new(.3,0,.0,0)
mainframe.Position = UDim2.new(.35,0,.2)
mainframe.Active = true
mainframe.Draggable = true
mainframe.Parent = gui
local title = Instance.new(""TextLabel"")
title.Size = UDim2.new(1,0,.125,0)
title.BackgroundColor3 = Color3.fromRGB(50,50,50)
title.BorderColor3 = Color3.fromRGB(255,255,255)
title.TextColor3 = Color3.fromRGB(255,255,255)
title.TextScaled = true
title.Text = ""Total Roblox Drama See Votes""
title.Parent = mainframe
local credits = Instance.new(""TextLabel"")
credits.Position = UDim2.new(0,0,.125,0)
credits.Size = UDim2.new(1,0,.075,0)
credits.BackgroundColor3 = Color3.fromRGB(50,50,50)
credits.BorderColor3 = Color3.fromRGB(255,255,255)
credits.TextColor3 = Color3.fromRGB(255,255,255)
credits.TextScaled = true
credits.Text = ""By 2AreYouMental110""
credits.Parent = mainframe
local constraint = Instance.new(""UIAspectRatioConstraint"")
constraint.AspectType = Enum.AspectType.ScaleWithParentSize
constraint.AspectRatio = 1.5
constraint.Parent = mainframe

local voteframe = Instance.new(""ScrollingFrame"")
local votelogframe = Instance.new(""ScrollingFrame"")

voteframe.Position = UDim2.new(0,0,.2,0)
voteframe.Size = UDim2.new(.5,0,.8,0)
voteframe.BackgroundColor3 = Color3.fromRGB(50,50,50)
voteframe.BorderColor3 = Color3.fromRGB(255,255,255)
voteframe.CanvasSize = UDim2.new(0,0,1000,0)
voteframe.Parent = mainframe
votelogframe.Position = UDim2.new(.5,0,.2,0)
votelogframe.Size = UDim2.new(.5,0,.8,0)
votelogframe.BackgroundColor3 = Color3.fromRGB(50,50,50)
votelogframe.BorderColor3 = Color3.fromRGB(255,255,255)
votelogframe.CanvasSize = UDim2.new(0,0,1000,0)
votelogframe.Parent = mainframe

local voteframesort = Instance.new(""UIGridLayout"")
local votelogframesort = Instance.new(""UIListLayout"")

voteframesort.CellSize = UDim2.new(0.3,0,0.0002,0)
voteframesort.CellPadding = UDim2.new(0,0,0,0)
voteframesort.Parent = voteframe
votelogframesort.Parent = votelogframe

local votingfolder = game.ReplicatedStorage.Season.Voting
table.insert(lol,votingfolder.Players.ChildAdded:Connect(function(plr)
    local plrname = plr.Name
    if game.ReplicatedStorage:FindFirstChild(""Season"") and game.ReplicatedStorage.Season:FindFirstChild(""Players"") and game.ReplicatedStorage.Season.Players:FindFirstChild(plrname) then
        plrname = game.ReplicatedStorage.Season.Players[plrname].Value
    end
    local votes = plr:WaitForChild(""Votes"",math.huge)
    local frame = Instance.new(""Frame"")
    frame.BackgroundColor3 = Color3.fromRGB(50,50,50)
    frame.BorderColor3 = Color3.fromRGB(255,255,255)
    local plrnametext = Instance.new(""TextLabel"")
    plrnametext.BackgroundColor3 = Color3.fromRGB(75,75,75)
    plrnametext.BorderColor3 = Color3.fromRGB(255,255,255)
    plrnametext.TextColor3 = Color3.fromRGB(255,255,255)
    plrnametext.TextScaled = true
    plrnametext.Size = UDim2.new(1,0,.4,0)
    plrnametext.Position = UDim2.new(0,0,.6,0)
    plrnametext.Text = plrname
    local votetext = Instance.new(""TextLabel"")
    votetext.BackgroundColor3 = Color3.fromRGB(75,75,75)
    votetext.BorderColor3 = Color3.fromRGB(255,255,255)
    votetext.TextColor3 = Color3.fromRGB(255,255,255)
    votetext.TextScaled = true
    votetext.Size = UDim2.new(1,0,.6,0)
    votetext.Text = ""Votes: ""..tostring(votes.Value)
    plrnametext.Parent = frame
    votetext.Parent = frame
    frame.Name = plrname
    table.insert(lol,votes:GetPropertyChangedSignal(""Value""):Connect(function()
        votetext.Text = ""Votes: ""..tostring(votes.Value)
    end))
    frame.Parent = voteframe
end))
table.insert(lol,votingfolder.Votes.ChildAdded:Connect(function(vote)
    local whovoted = vote.Value
    local votedfor = vote.Name
    if game.ReplicatedStorage:FindFirstChild(""Season"") and game.ReplicatedStorage.Season:FindFirstChild(""Players"") and game.ReplicatedStorage.Season.Players:FindFirstChild(whovoted) then
        whovoted = game.ReplicatedStorage.Season.Players[whovoted].Value
    end
    if game.ReplicatedStorage:FindFirstChild(""Season"") and game.ReplicatedStorage.Season:FindFirstChild(""Players"") and game.ReplicatedStorage.Season.Players:FindFirstChild(votedfor) then
        votedfor = game.ReplicatedStorage.Season.Players[votedfor].Value
    end
    local text = Instance.new(""TextLabel"")
    text.Name = whovoted
    text.Size = UDim2.new(1,0,0.00005)
    text.BackgroundTransparency = 1
    text.TextColor3 = Color3.fromRGB(255,255,255)
    text.Text = whovoted.."" Voted For ""..votedfor
    text.Parent = votelogframe
end))
table.insert(lol,votingfolder.Voting:GetPropertyChangedSignal(""Value""):Connect(function()
    if votingfolder.Voting.Value == false then
        wait(15)
        for i,v in pairs(votelogframe:GetChildren()) do
            if v:IsA(""TextLabel"") then
                v:Destroy()
            end
        end
        for i,v in pairs(voteframe:GetChildren()) do
            if v:IsA(""Frame"") then
                v:Destroy()
            end
        end
    end
end))

function deletegui()
    gui:Destroy()
    for i,v in pairs(lol) do
        v:Disconnect()
    end
end
getgenv().trdshowvotesdeletefunc = deletegui
game:GetService(""StarterGui""):SetCore(""SendNotification"",{Title=""Done loading"",Text=""Done loading""})"
p8EbVqXd,coinwalk rocks,coinwalk,JavaScript,Friday 1st of September 2023 10:02:30 PM CDT,"var kozster = $('#pct_balance').val();
var gobbie = ((kozster/144000).toFixed(8));
var zeggar = gobbie;
var target = (kozster*2000);
var tens = (gobbie*10);
var sevens = (gobbie*6.9);
var tuba = ((Math.floor(kozster/tens))*tens);
var tubit = ((Math.floor(kozster/tens))*tens);
var burgzie = kozster;
var bone = ((Math.floor(kozster/tens))*tens);
var razzle = 0;
var lower = 3;
var boon = true;
var getld = 0;
var boon = true;
var zimple = kozster;
var blowzy = false;
var nope = 1;
var upper = 7;
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;


function get(){
console.clear();
var burgzie = $('#pct_balance').val();
var good = ((burgzie-kozster).toFixed(8));
console.log(""profit"");
console.log(good);
if (burgzie>=(tuba+(zeggar*upper))){
    zeggar = Number((zeggar*2).toFixed(8));
    lower = 5;
    upper = 5;
    tuba = parseFloat(burgzie);
}
if (burgzie<=(tuba-(zeggar*lower))){
    zeggar = Number((zeggar*2).toFixed(8));
    lower = 5;
    upper = 5;
    nope = 0;
    tuba = parseFloat(burgzie);
}
if ((burgzie>=(bone+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    lower = 3;
    upper = 7;
    nope = 1;
    tuba = parseFloat((Math.floor(burgzie/tens))*tens);
    bone = parseFloat((Math.floor(burgzie/tens))*tens);
}
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==razzle)&&(getld>=1)&&(homer>brother)&&(!boon)){
final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
boon = true;
}
if ((final<49.5000)&&(blowzy)){
zimple = zimple+zeggar
blowzy = false;
}
if ((final>=49.5000)&&(blowzy)){
zimple = zimple-zeggar;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = parseFloat(burgzie);
if (((milk>razzle)&&(getld>=1)&&(homer>brother))||((ficked>migg)&&(!blowzy)&&(getld>=2))||((ficked<migg)&&(!blowzy)&&(getld>=2))||((milk<razzle)&&(getld>=1)&&(homer>brother))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(boon)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
getld = getld+1;
blowzy = true;
boon = false;
homer = 0;
}
setTimeout(() => get(), 1);
}
get();
"
NX2jZNWT,dw script by ZaNoob023621,lezOP,Lua,Friday 1st of September 2023 09:49:41 PM CDT,"loadstring(game:HttpGet('https://raw.githubusercontent.com/MrWhite1110/Decaying-Winter-Op-Script-V2/main/Decaying%20Winter%20Op%20script'))()
---credit to ZaNoob023621 (on scriptblox) for making this awesome script"
QmTMSCHe,Range And Curve Extensions,Pro_Unit,C#,Friday 1st of September 2023 09:48:30 PM CDT,"	public static bool InRange(this float current, float min, float max) => current >= min && current <= max;

	public static bool InRange(this int current, float min, float max) => current >= min && current <= max;

	public static RangeFloat AsRange(this float max) => new(0f, max);

	public static RangeFloat AsRange(this float min, float max) => new(min, max);

	public static RangeInt AsRange(this int max) => new(0, max);
	
	public static RangeInt AsRange(this int min, int max) => new(min, max);
	
	public static Keyframe First(this AnimationCurve curve) => curve[0];
	public static Keyframe Last(this AnimationCurve curve) => curve[curve.length - 1];
	
	public static bool InRange(this AnimationCurve curve, float time)
	{
		if (curve == null || curve.length == 0 )
			return false;
		
		Keyframe first = curve.First();
		Keyframe last = curve.Last();
		
		return time.InRange(first.time, last.time);
	}"
KzKB8U8C,Range,Pro_Unit,C#,Friday 1st of September 2023 09:46:27 PM CDT,"using UnityEngine;

public class RangeInt
{
	public int Min { get; }

	public int Max { get; }

	public RangeInt(int min, int max)
	{
		Min = min;
		Max = max;
	}

	public bool Include(int value) => Min <= value && value <= Max;

	public bool IncludeMin(int value) => Min <= value && value < Max;

	public bool IncludeMax(int value) => Min < value && value <= Max;

	public bool Exclude(int value) => Min < value && value < Max;

	public bool ExcludeMin(int value) => Min < value && value <= Max;

	public bool ExcludeMax(int value) => Min <= value && value < Max;
}

public class RangeFloat
{
	public float Min { get; }

	public float Max { get; }

	public RangeFloat(float min, float max)
	{
		Min = min;
		Max = max;
	}

	public bool Include(float value) => Min <= value && value <= Max;

	public bool IncludeMin(float value) => Min <= value && value < Max;

	public bool IncludeMax(float value) => Min < value && value <= Max;

	public bool Exclude(float value) => Min < value && value < Max;

	public bool ExcludeMin(float value) => Min < value && value <= Max;

	public bool ExcludeMax(float value) => Min <= value && value < Max;

	public float Lerp(float value) => Mathf.Lerp(Min, Max, Normalize(value));

	public float Normalize(float value) => value / Magnitude;

	public float InverseLerp(float value) => Mathf.InverseLerp(Min, Max, value);
	
	public float Evaluate(float value, AnimationCurve curve) => curve.Evaluate(Normalize(value));
	public float Magnitude => Max - Min;
	
}
"
U0K0NLt9,funky friday auto play,lezOP,Lua,Friday 1st of September 2023 09:44:34 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/ShowerHead-FluxTeam/scripts/main/funky-friday-autoplay""))()
---idk who made this but credit to them"
iVFfyrX6,MOK layout ngwerty jawa,dksetiavan,YAML,Friday 1st of September 2023 09:43:24 PM CDT,"{
""title"":""ngwerty jawa"",
""onScreen"":{
""main"":[
""꧑꧒꧓꧔꧕꧖꧗꧘꧙꧐"",
""ꦔꦮꦺꦫꦠꦪꦸꦶꦴꦥ"",
""ꦼꦱꦢꦉꦒꦲꦗꦏꦭꦿ"",
""[SHIFT]ꦝꦛꦕꦚꦧꦤꦩ꧀[DEL]"",
""[TOOL][ALTGR:꧈][SPACE][][][SYM:꧉][ENTER]""
],

""shifted"":[
""ꦷꦻꦍꦬꦐꦇꦅꦵ꧇꦳"",
""ꦁꦹꦌꦂꦡꦾꦈꦆꦎꦦ"",
""ꦄꦰꦣꦊꦓꦃꦙꦑꦋꦽ"",
""[SHIFT]ꦞꦜꦖꦘꦨꦟꦯꧏ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""sym"":[
""꧁꧃꧌꧄꧍꧅꧂"",
""[MC:꧅꧉ꦧ꧀ꦖ꧉꧅][MC:꧅꧉ꦟ꧀ꦢꦿ꧉꧅][MC:꧅꧉ꦆ꧉꧅]"",
""[MC:꧌꧍[LEFT]:꧌…꧍]꧊ꦀ꧞꧟͜꧆꧈꧉꧋[MC:꧁꧂[LEFT]:꧁… ꧂]"",
""[SHIFT]([,![MC:ꦎꦴꦀ][]?.])[DEL]"",
""[LOCK][ALTGR:[MC:꧉꧆꧉]][SPACE][][][SYM:[MC:꧋꧆꧋]][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]zxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
Xgs8fDMC,day 26 connection to table only,HarrJ,Java,Friday 1st of September 2023 08:58:15 PM CDT,"package day26;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Day26BCRUD {
    private String address = ""jdbc:mysql://127.0.0.1:3306/db_mng_batch5"";
    private String userName = ""root"";
    private String passWord = """";
    
    public String addToDateSample(String dtIn, String noteIn, double numIn, boolean isTrue) {
        String outputMessage = """";
        int rowsAffected = 0;
        
        String sqlQuery = ""INSERT INTO tbl_date_sample(date_rec, dt_note, dt_number, dt_boolean)""
                + "" VALUES (?,?,?,?);"";
        
        try {
            java.sql.Date sqlDtIn = java.sql.Date.valueOf(dtIn);
            
            Connection conn = DriverManager.getConnection(
                    address,userName,passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setDate(1, sqlDtIn);
            stmt.setString(2, noteIn);
            stmt.setDouble(3, numIn);
            stmt.setBoolean(4, isTrue);
            
            rowsAffected = stmt.executeUpdate();
            
            switch (rowsAffected) {
                case 1:
                    outputMessage = ""Row added"";
                    break;
                default:
                    outputMessage = ""There is a problem. Please try again"";
            }

            conn.close();
        } catch (Exception e) {
            outputMessage = e.toString();
        }
        return outputMessage;
    }
    
    public String updateDateSample(String dtIn, String noteIn, double numIn, boolean isTrue, int id) {
        String outputMessage = """";
        int rowsAffected = 0;
        
        String sqlQuery = ""UPDATE tbl_date_sample""
                + "" SET date_rec=?""
                + "", dt_note=?""
                + "", dt_number=?""
                + "", dt_boolean=?""
                + "" WHERE dt_id=?;"";
        
        try {
            java.sql.Date sqlDtIn = java.sql.Date.valueOf(dtIn);
            
            Connection conn = DriverManager.getConnection(
                    address,userName,passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setDate(1, sqlDtIn);
            stmt.setString(2, noteIn);
            stmt.setDouble(3, numIn);
            stmt.setBoolean(4, isTrue);
            stmt.setInt(5, id);
            
            rowsAffected = stmt.executeUpdate();
            
            switch (rowsAffected) {
                case 1:
                    outputMessage = ""Row added"";
                    break;
                default:
                    outputMessage = ""There is a problem. Please try again"";
            }
            
            conn.close();
        } catch (Exception e) {
            outputMessage = e.toString();
        }
        return outputMessage;
    }
    
    public String deleteDateSample(int id) {
        String outputMessage = """";
        int rowsAffected = 0;
        
        String sqlQuery = ""DELETE FROM tbl_date_sample""
                + "" WHERE dt_id=?;"";
        
        try {
            Connection conn = DriverManager.getConnection(
                    address,userName,passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setInt(1, id);
            
            rowsAffected = stmt.executeUpdate();
            
            switch (rowsAffected) {
                case 1:
                    outputMessage = ""Row added"";
                    break;
                default:
                    outputMessage = ""There is a problem. Please try again"";
            }
            
            conn.close();
        } catch (Exception e) {
            outputMessage = e.toString();
        }
        return outputMessage;
    }

    private void getAllRows(JTable tableUsed){
        DefaultTableModel tableModel = (DefaultTableModel)tableUsed.getModel();
        tableModel.setRowCount(0); // pang delete ng laman ng table
        String sqlQuery = ""SELECT * FROM tbl_date_sample;"";
        
        try {
            Connection conn = DriverManager.getConnection(
                    address,userName,passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) { 
                tableModel.addRow(new Object[]{
                    rs.getInt(1)
                    ,rs.getString(2)
                    ,rs.getString(3)
                    ,rs.getDouble(4)
                    ,rs.getBoolean(5)
                });
            }
            
            conn.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void getAllRows(JTable tableUsed,String searchVal, String searchField){
        DefaultTableModel tableModel = (DefaultTableModel)tableUsed.getModel();
        tableModel.setRowCount(0);
        String fieldName;
        searchVal = ""%""+searchVal+""%"";
        // kung String, puro VARCHAR lang na column or field ang gagamitan
        switch (searchField) {
            case ""Note"":
            default:
                fieldName = ""dt_note"";
                break;
        } 
        
        String sqlQuery = ""SELECT * FROM tbl_date_sample WHERE "" + fieldName + "" LIKE ?;"";
        
        try {
            Connection conn = DriverManager.getConnection(
                    address,userName,passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setString(1, searchVal);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) { 
                tableModel.addRow(new Object[]{
                    rs.getInt(1)
                    ,rs.getString(2)
                    ,rs.getString(3)
                    ,rs.getDouble(4)
                    ,rs.getBoolean(5)
                });
            }
            
            conn.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
"
V9MdcwAX,Drachen male enhancement - Buygoods - - Scam! Spam!,bombaires,HTML,Friday 1st of September 2023 08:48:46 PM CDT,"<a href=""mailto:support@trydrachen.com"">support@trydrachen.com</a>
<a href=""mailto:support@getdrachen.com"">support@getdrachen.com</a>
<a href=""mailto:contact@getdrachen.com"">contact@getdrachen.com</a>
<a href=""mailto:aff@trydrachen.com"">aff@trydrachen.com</a>
<a href=""mailto:support@buygoods.com"">support@buygoods.com</a>
<a href=""mailto:nzedidisidk2332@gmail.com"">nzedidisidk2332@gmail.com</a>
<a href=""mailto:nzed.id.is.i.dk.2.332@gmail.com"">nzed.id.is.i.dk.2.332@gmail.com</a>
<a href=""mailto:n.ze.did.i.si.dk2.332@gmail.com"">n.ze.did.i.si.dk2.332@gmail.com</a>
<a href=""mailto:nz.ed.i.d.is.id.k.2332@gmail.com"">nz.ed.i.d.is.id.k.2332@gmail.com</a>
<a href=""mailto:nz.edidi.si.dk233.2@gmail.com"">nz.edidi.si.dk233.2@gmail.com</a>
<a href=""mailto:nze.di.di.sid.k2.332@gmail.com"">nze.di.di.sid.k2.332@gmail.com</a>
<a href=""mailto:n.zed.i.d.isid.k2332@gmail.com"">n.zed.i.d.isid.k2332@gmail.com</a>
<a href=""mailto:nz.edidi.si.d.k2.332@gmail.com"">nz.edidi.si.d.k2.332@gmail.com</a>
<a href=""mailto:n.ze.didi.sidk.2.33.2@gmail.com"">n.ze.didi.sidk.2.33.2@gmail.com</a>
<a href=""mailto:nze.d.id.i.s.idk.2.332@gmail.com"">nze.d.id.i.s.idk.2.332@gmail.com</a>
<a href=""mailto:n.zed.id.i.s.i.d.k2.3.3.2@gmail.com"">n.zed.id.i.s.i.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:nz.e.di.dis.idk.2.332@gmail.com"">nz.e.di.dis.idk.2.332@gmail.com</a>
<a href=""mailto:nz.ed.idi.sidk.2.33.2@gmail.com"">nz.ed.idi.sidk.2.33.2@gmail.com</a>
<a href=""mailto:nzed.id.i.s.i.d.k23.32@gmail.com"">nzed.id.i.s.i.d.k23.32@gmail.com</a>
<a href=""mailto:nzedi.dis.i.d.k.23.32@gmail.com"">nzedi.dis.i.d.k.23.32@gmail.com</a>
<a href=""mailto:nz.ed.i.d.isid.k.2.3.32@gmail.com"">nz.ed.i.d.isid.k.2.3.32@gmail.com</a>
<a href=""mailto:n.ze.d.id.i.s.i.dk23.32@gmail.com"">n.ze.d.id.i.s.i.dk23.32@gmail.com</a>
<a href=""mailto:n.zed.id.i.si.d.k2332@gmail.com"">n.zed.id.i.si.d.k2332@gmail.com</a>
<a href=""mailto:nzed.i.disidk.2332@gmail.com"">nzed.i.disidk.2332@gmail.com</a>
<a href=""mailto:nze.didis.id.k2.332@gmail.com"">nze.didis.id.k2.332@gmail.com</a>
<a href=""mailto:n.zedi.d.i.s.idk2.332@gmail.com"">n.zedi.d.i.s.idk2.332@gmail.com</a>
<a href=""mailto:nz.edidi.s.idk.2.3.32@gmail.com"">nz.edidi.s.idk.2.3.32@gmail.com</a>
<a href=""mailto:n.zedid.i.s.id.k233.2@gmail.com"">n.zedid.i.s.id.k233.2@gmail.com</a>
<a href=""mailto:nz.ed.i.di.si.d.k.2.3.3.2@gmail.com"">nz.ed.i.di.si.d.k.2.3.3.2@gmail.com</a>
<a href=""mailto:nzedid.i.s.i.d.k.233.2@gmail.com"">nzedid.i.s.i.d.k.233.2@gmail.com</a>
<a href=""mailto:n.zed.i.di.s.id.k2.332@gmail.com"">n.zed.i.di.s.id.k2.332@gmail.com</a>
<a href=""mailto:nz.edid.i.sid.k.23.32@gmail.com"">nz.edid.i.sid.k.23.32@gmail.com</a>
<a href=""mailto:n.ze.d.i.d.i.sidk.23.3.2@gmail.com"">n.ze.d.i.d.i.sidk.23.3.2@gmail.com</a>
<a href=""mailto:n.z.e.didi.s.i.d.k2.33.2@gmail.com"">n.z.e.didi.s.i.d.k2.33.2@gmail.com</a>
<a href=""mailto:nz.edidis.i.d.k233.2@gmail.com"">nz.edidis.i.d.k233.2@gmail.com</a>
<a href=""mailto:nz.ed.i.d.i.s.id.k233.2@gmail.com"">nz.ed.i.d.i.s.id.k233.2@gmail.com</a>
<a href=""mailto:nzed.idi.si.dk.2332@gmail.com"">nzed.idi.si.dk.2332@gmail.com</a>
<a href=""mailto:nz.edi.d.i.s.i.dk.2.3.32@gmail.com"">nz.edi.d.i.s.i.dk.2.3.32@gmail.com</a>
<a href=""mailto:nz.edi.di.si.d.k.2.332@gmail.com"">nz.edi.di.si.d.k.2.332@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.is.id.k.2.332@gmail.com"">n.z.ed.i.d.is.id.k.2.332@gmail.com</a>
<a href=""mailto:nz.e.d.idi.sid.k.2.3.32@gmail.com"">nz.e.d.idi.sid.k.2.3.32@gmail.com</a>
<a href=""mailto:n.zedi.d.isidk233.2@gmail.com"">n.zedi.d.isidk233.2@gmail.com</a>
<a href=""mailto:nze.did.is.idk.2.3.32@gmail.com"">nze.did.is.idk.2.3.32@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.i.s.idk2.3.3.2@gmail.com"">n.z.ed.i.d.i.s.idk2.3.3.2@gmail.com</a>
<a href=""mailto:n.z.e.didisidk.23.3.2@gmail.com"">n.z.e.didisidk.23.3.2@gmail.com</a>
<a href=""mailto:nz.edi.d.i.sid.k2.3.32@gmail.com"">nz.edi.d.i.sid.k2.3.32@gmail.com</a>
<a href=""mailto:nze.di.dis.i.d.k2332@gmail.com"">nze.di.dis.i.d.k2332@gmail.com</a>
<a href=""mailto:nzed.idis.idk.2.3.3.2@gmail.com"">nzed.idis.idk.2.3.3.2@gmail.com</a>
<a href=""mailto:nz.ed.i.d.i.si.d.k2.33.2@gmail.com"">nz.ed.i.d.i.si.d.k2.33.2@gmail.com</a>
<a href=""mailto:n.z.e.d.idi.s.i.dk23.3.2@gmail.com"">n.z.e.d.idi.s.i.dk23.3.2@gmail.com</a>
<a href=""mailto:nz.e.d.idi.sidk.2.33.2@gmail.com"">nz.e.d.idi.sidk.2.33.2@gmail.com</a>
<a href=""mailto:nz.e.d.id.i.s.id.k23.32@gmail.com"">nz.e.d.id.i.s.id.k23.32@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.isidk.233.2@gmail.com"">n.z.ed.i.d.isidk.233.2@gmail.com</a>
<a href=""mailto:nz.edid.i.sidk2332@gmail.com"">nz.edid.i.sidk2332@gmail.com</a>
<a href=""mailto:nzed.i.dis.i.d.k.233.2@gmail.com"">nzed.i.dis.i.d.k.233.2@gmail.com</a>
<a href=""mailto:n.z.e.did.isi.dk.23.32@gmail.com"">n.z.e.did.isi.dk.23.32@gmail.com</a>
<a href=""mailto:n.zed.id.i.sidk2.332@gmail.com"">n.zed.id.i.sidk2.332@gmail.com</a>
<a href=""mailto:nze.d.i.d.isidk.23.32@gmail.com"">nze.d.i.d.isidk.23.32@gmail.com</a>
<a href=""mailto:nze.d.id.isi.dk.2.3.32@gmail.com"">nze.d.id.isi.dk.2.3.32@gmail.com</a>
<a href=""mailto:nz.e.d.idi.si.d.k23.32@gmail.com"">nz.e.d.idi.si.d.k23.32@gmail.com</a>
<a href=""mailto:nze.d.idi.si.d.k.233.2@gmail.com"">nze.d.idi.si.d.k.233.2@gmail.com</a>
<a href=""mailto:n.zedi.di.s.i.d.k.2.3.3.2@gmail.com"">n.zedi.di.s.i.d.k.2.3.3.2@gmail.com</a>
<a href=""mailto:nzedid.isi.d.k233.2@gmail.com"">nzedid.isi.d.k233.2@gmail.com</a>
<a href=""mailto:n.ze.d.idi.s.idk.233.2@gmail.com"">n.ze.d.idi.s.idk.233.2@gmail.com</a>
<a href=""mailto:nz.edid.is.i.d.k.2.3.32@gmail.com"">nz.edid.is.i.d.k.2.3.32@gmail.com</a>
<a href=""mailto:nz.ed.id.isidk2.3.32@gmail.com"">nz.ed.id.isidk2.3.32@gmail.com</a>
<a href=""mailto:n.z.edi.di.sidk.2.33.2@gmail.com"">n.z.edi.di.sidk.2.33.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.disi.d.k.2332@gmail.com"">n.z.ed.i.disi.d.k.2332@gmail.com</a>
<a href=""mailto:nz.e.di.d.isi.dk2.3.3.2@gmail.com"">nz.e.di.d.isi.dk2.3.3.2@gmail.com</a>
<a href=""mailto:n.zedid.i.s.idk.2.3.3.2@gmail.com"">n.zedid.i.s.idk.2.3.3.2@gmail.com</a>
<a href=""mailto:n.ze.didi.s.i.dk23.32@gmail.com"">n.ze.didi.s.i.dk23.32@gmail.com</a>
<a href=""mailto:nzedidisidk2.33.2@gmail.com"">nzedidisidk2.33.2@gmail.com</a>
<a href=""mailto:nz.edid.i.sid.k.23.3.2@gmail.com"">nz.edid.i.sid.k.23.3.2@gmail.com</a>
<a href=""mailto:nz.ed.i.d.isidk2.3.3.2@gmail.com"">nz.ed.i.d.isidk2.3.3.2@gmail.com</a>
<a href=""mailto:n.z.e.di.dis.i.d.k2.3.32@gmail.com"">n.z.e.di.dis.i.d.k2.3.32@gmail.com</a>
<a href=""mailto:nz.e.d.id.is.i.d.k2.3.3.2@gmail.com"">nz.e.d.id.is.i.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:n.zedi.di.s.id.k.2.33.2@gmail.com"">n.zedi.di.s.id.k.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.d.id.i.si.dk.23.32@gmail.com"">n.ze.d.id.i.si.dk.23.32@gmail.com</a>
<a href=""mailto:n.z.e.d.idisid.k2332@gmail.com"">n.z.e.d.idisid.k2332@gmail.com</a>
<a href=""mailto:n.z.e.di.di.sidk.2.332@gmail.com"">n.z.e.di.di.sidk.2.332@gmail.com</a>
<a href=""mailto:n.ze.didi.si.d.k2332@gmail.com"">n.ze.didi.si.d.k2332@gmail.com</a>
<a href=""mailto:nze.di.d.i.s.idk23.3.2@gmail.com"">nze.di.d.i.s.idk23.3.2@gmail.com</a>
<a href=""mailto:n.z.e.didi.si.d.k2.3.3.2@gmail.com"">n.z.e.didi.si.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:nzed.i.d.i.s.idk23.32@gmail.com"">nzed.i.d.i.s.idk23.32@gmail.com</a>
<a href=""mailto:n.z.e.didisid.k.2.33.2@gmail.com"">n.z.e.didisid.k.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.d.idis.i.d.k2.33.2@gmail.com"">n.ze.d.idis.i.d.k2.33.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.disidk23.32@gmail.com"">n.z.ed.i.disidk23.32@gmail.com</a>
<a href=""mailto:nzed.i.di.s.id.k2.332@gmail.com"">nzed.i.di.s.id.k2.332@gmail.com</a>
<a href=""mailto:n.zedi.d.is.i.d.k.2332@gmail.com"">n.zedi.d.is.i.d.k.2332@gmail.com</a>
<a href=""mailto:n.ze.di.d.i.s.i.d.k2.332@gmail.com"">n.ze.di.d.i.s.i.d.k2.332@gmail.com</a>
<a href=""mailto:nzedi.d.i.s.id.k.2.3.32@gmail.com"">nzedi.d.i.s.id.k.2.3.32@gmail.com</a>
<a href=""mailto:n.z.e.di.di.sidk.23.3.2@gmail.com"">n.z.e.di.di.sidk.23.3.2@gmail.com</a>
<a href=""mailto:nze.d.i.disi.dk.2.332@gmail.com"">nze.d.i.disi.dk.2.332@gmail.com</a>
<a href=""mailto:n.z.e.d.id.isid.k.2.3.3.2@gmail.com"">n.z.e.d.id.isid.k.2.3.3.2@gmail.com</a>
<a href=""mailto:nze.d.id.i.sid.k2.332@gmail.com"">nze.d.id.i.sid.k2.332@gmail.com</a>
<a href=""mailto:nze.d.idis.i.d.k23.32@gmail.com"">nze.d.idis.i.d.k23.32@gmail.com</a>
<a href=""mailto:nzed.id.i.si.d.k2332@gmail.com"">nzed.id.i.si.d.k2332@gmail.com</a>
<a href=""mailto:nzed.id.i.si.dk.2332@gmail.com"">nzed.id.i.si.dk.2332@gmail.com</a>
<a href=""mailto:nze.didis.i.dk.23.32@gmail.com"">nze.didis.i.dk.23.32@gmail.com</a>
<a href=""mailto:nz.edid.isi.d.k2.3.3.2@gmail.com"">nz.edid.isi.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:nz.e.di.dis.idk2332@gmail.com"">nz.e.di.dis.idk2332@gmail.com</a>
<a href=""mailto:n.z.e.d.i.d.is.i.d.k233.2@gmail.com"">n.z.e.d.i.d.is.i.d.k233.2@gmail.com</a>
<a href=""mailto:nze.didisi.d.k.233.2@gmail.com"">nze.didisi.d.k.233.2@gmail.com</a>
<a href=""mailto:nz.ed.i.di.si.d.k.2.33.2@gmail.com"">nz.ed.i.di.si.d.k.2.33.2@gmail.com</a>
<a href=""mailto:n.z.ed.id.i.s.i.d.k.2.33.2@gmail.com"">n.z.ed.id.i.s.i.d.k.2.33.2@gmail.com</a>
<a href=""mailto:nz.ed.i.di.sid.k2.3.3.2@gmail.com"">nz.ed.i.di.sid.k2.3.3.2@gmail.com</a>
<a href=""mailto:nzedi.d.is.i.dk233.2@gmail.com"">nzedi.d.is.i.dk233.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.isidk.2332@gmail.com"">n.z.ed.i.d.isidk.2332@gmail.com</a>
<a href=""mailto:nze.di.d.i.si.dk2332@gmail.com"">nze.di.d.i.si.dk2332@gmail.com</a>
<a href=""mailto:n.zed.i.d.i.si.dk23.3.2@gmail.com"">n.zed.i.d.i.si.dk23.3.2@gmail.com</a>
<a href=""mailto:n.z.edi.d.is.i.d.k.2.33.2@gmail.com"">n.z.edi.d.is.i.d.k.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.did.isidk.2332@gmail.com"">n.ze.did.isidk.2332@gmail.com</a>
<a href=""mailto:n.z.e.d.i.di.sidk23.32@gmail.com"">n.z.e.d.i.di.sidk23.32@gmail.com</a>
<a href=""mailto:n.z.ed.id.i.sidk.23.32@gmail.com"">n.z.ed.id.i.sidk.23.32@gmail.com</a>
<a href=""mailto:nzedi.d.isid.k.23.3.2@gmail.com"">nzedi.d.isid.k.23.3.2@gmail.com</a>
<a href=""mailto:nze.d.idis.i.d.k.23.32@gmail.com"">nze.d.idis.i.d.k.23.32@gmail.com</a>
<a href=""mailto:nze.d.idi.sid.k2332@gmail.com"">nze.d.idi.sid.k2332@gmail.com</a>
<a href=""mailto:nze.did.is.i.dk.23.32@gmail.com"">nze.did.is.i.dk.23.32@gmail.com</a>
<a href=""mailto:n.z.ed.i.disid.k2.3.32@gmail.com"">n.z.ed.i.disid.k2.3.32@gmail.com</a>
<a href=""mailto:nze.didisidk.2.3.32@gmail.com"">nze.didisidk.2.3.32@gmail.com</a>
<a href=""mailto:n.z.ed.id.i.si.dk.2.3.3.2@gmail.com"">n.z.ed.id.i.si.dk.2.3.3.2@gmail.com</a>
<a href=""mailto:nze.di.dis.id.k23.3.2@gmail.com"">nze.di.dis.id.k23.3.2@gmail.com</a>
<a href=""mailto:n.z.e.di.d.isi.dk2.3.3.2@gmail.com"">n.z.e.di.d.isi.dk2.3.3.2@gmail.com</a>
<a href=""mailto:n.z.e.d.i.disi.d.k.23.32@gmail.com"">n.z.e.d.i.disi.d.k.23.32@gmail.com</a>
<a href=""mailto:nz.ed.i.d.i.s.i.d.k.2.3.3.2@gmail.com"">nz.ed.i.d.i.s.i.d.k.2.3.3.2@gmail.com</a>
<a href=""mailto:n.zed.i.d.is.id.k2.3.3.2@gmail.com"">n.zed.i.d.is.id.k2.3.3.2@gmail.com</a>
<a href=""mailto:nzed.idis.i.d.k2332@gmail.com"">nzed.idis.i.d.k2332@gmail.com</a>
<a href=""mailto:n.ze.d.idi.sid.k.2.332@gmail.com"">n.ze.d.idi.sid.k.2.332@gmail.com</a>
<a href=""mailto:nzedid.isi.d.k2.33.2@gmail.com"">nzedid.isi.d.k2.33.2@gmail.com</a>
<a href=""mailto:nz.edi.dis.i.dk2.332@gmail.com"">nz.edi.dis.i.dk2.332@gmail.com</a>
<a href=""mailto:n.z.e.d.id.i.s.idk233.2@gmail.com"">n.z.e.d.id.i.s.idk233.2@gmail.com</a>
<a href=""mailto:n.z.edi.d.is.i.dk.2.3.32@gmail.com"">n.z.edi.d.is.i.dk.2.3.32@gmail.com</a>
<a href=""mailto:n.z.edi.d.i.sidk.23.32@gmail.com"">n.z.edi.d.i.sidk.23.32@gmail.com</a>
<a href=""mailto:n.z.e.did.i.s.i.d.k2.3.32@gmail.com"">n.z.e.did.i.s.i.d.k2.3.32@gmail.com</a>
<a href=""mailto:n.z.edid.i.sid.k.233.2@gmail.com"">n.z.edid.i.sid.k.233.2@gmail.com</a>
<a href=""mailto:nz.ed.i.d.isid.k2.33.2@gmail.com"">nz.ed.i.d.isid.k2.33.2@gmail.com</a>
<a href=""mailto:n.zed.id.i.si.dk.2332@gmail.com"">n.zed.id.i.si.dk.2332@gmail.com</a>
<a href=""mailto:n.z.e.di.dis.i.dk.2332@gmail.com"">n.z.e.di.dis.i.dk.2332@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.isidk.2.3.3.2@gmail.com"">n.z.ed.i.d.isidk.2.3.3.2@gmail.com</a>
<a href=""mailto:nz.e.d.id.isidk2.3.3.2@gmail.com"">nz.e.d.id.isidk2.3.3.2@gmail.com</a>
<a href=""mailto:nzed.i.d.isi.d.k.23.32@gmail.com"">nzed.i.d.isi.d.k.23.32@gmail.com</a>
<a href=""mailto:n.z.ed.id.isid.k.233.2@gmail.com"">n.z.ed.id.isid.k.233.2@gmail.com</a>
<a href=""mailto:nz.edidi.s.idk.23.3.2@gmail.com"">nz.edidi.s.idk.23.3.2@gmail.com</a>
<a href=""mailto:nz.e.d.i.di.s.idk2332@gmail.com"">nz.e.d.i.di.s.idk2332@gmail.com</a>
<a href=""mailto:n.z.edi.dis.i.d.k.2.33.2@gmail.com"">n.z.edi.dis.i.d.k.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.didis.i.dk.233.2@gmail.com"">n.ze.didis.i.dk.233.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.dis.i.d.k2.3.32@gmail.com"">n.z.ed.i.dis.i.d.k2.3.32@gmail.com</a>
<a href=""mailto:nze.did.i.sid.k.23.32@gmail.com"">nze.did.i.sid.k.23.32@gmail.com</a>
<a href=""mailto:nz.e.d.i.disi.d.k.233.2@gmail.com"">nz.e.d.i.disi.d.k.233.2@gmail.com</a>
<a href=""mailto:n.ze.di.dis.idk.2.33.2@gmail.com"">n.ze.di.dis.idk.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.di.disi.d.k2.3.3.2@gmail.com"">n.ze.di.disi.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:nz.e.d.i.di.sid.k.2.332@gmail.com"">nz.e.d.i.di.sid.k.2.332@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.i.s.idk.2.3.32@gmail.com"">n.z.ed.i.d.i.s.idk.2.3.32@gmail.com</a>
<a href=""mailto:nz.edid.i.s.id.k.2.33.2@gmail.com"">nz.edid.i.s.id.k.2.33.2@gmail.com</a>
<a href=""mailto:nz.edid.is.id.k.2.3.32@gmail.com"">nz.edid.is.id.k.2.3.32@gmail.com</a>
<a href=""mailto:n.z.ed.id.i.s.i.d.k23.32@gmail.com"">n.z.ed.id.i.s.i.d.k23.32@gmail.com</a>
<a href=""mailto:nze.d.idis.idk.2.33.2@gmail.com"">nze.d.idis.idk.2.33.2@gmail.com</a>
<a href=""mailto:nz.edi.d.i.s.i.d.k.23.3.2@gmail.com"">nz.edi.d.i.s.i.d.k.23.3.2@gmail.com</a>
<a href=""mailto:nz.e.d.idi.si.d.k.2.332@gmail.com"">nz.e.d.idi.si.d.k.2.332@gmail.com</a>
<a href=""mailto:nz.e.didi.s.i.d.k.2.33.2@gmail.com"">nz.e.didi.s.i.d.k.2.33.2@gmail.com</a>
<a href=""mailto:n.ze.di.dis.idk.23.32@gmail.com"">n.ze.di.dis.idk.23.32@gmail.com</a>
<a href=""mailto:nze.d.id.i.s.idk2.332@gmail.com"">nze.d.id.i.s.idk2.332@gmail.com</a>
<a href=""mailto:nzed.id.is.i.d.k.2.3.32@gmail.com"">nzed.id.is.i.d.k.2.3.32@gmail.com</a>
<a href=""mailto:n.ze.d.id.isidk.23.3.2@gmail.com"">n.ze.d.id.isidk.23.3.2@gmail.com</a>
<a href=""mailto:n.ze.d.i.di.si.d.k23.32@gmail.com"">n.ze.d.i.di.si.d.k23.32@gmail.com</a>
<a href=""mailto:nz.e.di.d.is.i.d.k23.3.2@gmail.com"">nz.e.di.d.is.i.d.k23.3.2@gmail.com</a>
<a href=""mailto:n.ze.d.idi.s.idk2.332@gmail.com"">n.ze.d.idi.s.idk2.332@gmail.com</a>
<a href=""mailto:n.z.e.d.id.isid.k.2332@gmail.com"">n.z.e.d.id.isid.k.2332@gmail.com</a>
<a href=""mailto:n.zedidis.id.k2.33.2@gmail.com"">n.zedidis.id.k2.33.2@gmail.com</a>
<a href=""mailto:nz.e.did.is.i.dk.2.3.3.2@gmail.com"">nz.e.did.is.i.dk.2.3.3.2@gmail.com</a>
<a href=""mailto:n.zedi.d.i.si.d.k233.2@gmail.com"">n.zedi.d.i.si.d.k233.2@gmail.com</a>
<a href=""mailto:n.ze.d.i.d.i.s.id.k.23.32@gmail.com"">n.ze.d.i.d.i.s.id.k.23.32@gmail.com</a>
<a href=""mailto:n.z.e.d.id.is.i.d.k.2.332@gmail.com"">n.z.e.d.id.is.i.d.k.2.332@gmail.com</a>
<a href=""mailto:n.z.e.didis.id.k.2.3.3.2@gmail.com"">n.z.e.didis.id.k.2.3.3.2@gmail.com</a>
<a href=""mailto:nzed.id.i.sid.k.23.32@gmail.com"">nzed.id.i.sid.k.23.32@gmail.com</a>
<a href=""mailto:nzed.i.disi.d.k2.332@gmail.com"">nzed.i.disi.d.k2.332@gmail.com</a>
<a href=""mailto:nz.e.d.i.d.isi.dk233.2@gmail.com"">nz.e.d.i.d.isi.dk233.2@gmail.com</a>
<a href=""mailto:n.zedi.dis.id.k.2.3.3.2@gmail.com"">n.zedi.dis.id.k.2.3.3.2@gmail.com</a>
<a href=""mailto:nze.d.idi.s.idk2.332@gmail.com"">nze.d.idi.s.idk2.332@gmail.com</a>
<a href=""mailto:nz.e.d.idi.sid.k23.3.2@gmail.com"">nz.e.d.idi.sid.k23.3.2@gmail.com</a>
<a href=""mailto:nzed.idis.i.dk23.32@gmail.com"">nzed.idis.i.dk23.32@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.isidk.2.3.32@gmail.com"">n.z.ed.i.d.isidk.2.3.32@gmail.com</a>
<a href=""mailto:n.zedi.d.i.sidk23.3.2@gmail.com"">n.zedi.d.i.sidk23.3.2@gmail.com</a>
<a href=""mailto:nze.didisi.dk23.32@gmail.com"">nze.didisi.dk23.32@gmail.com</a>
<a href=""mailto:nze.d.i.d.is.idk2.332@gmail.com"">nze.d.i.d.is.idk2.332@gmail.com</a>
<a href=""mailto:n.z.edid.isidk.2332@gmail.com"">n.z.edid.isidk.2332@gmail.com</a>
<a href=""mailto:nze.di.di.s.i.d.k2.3.3.2@gmail.com"">nze.di.di.s.i.d.k2.3.3.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.d.i.si.d.k23.32@gmail.com"">n.z.ed.i.d.i.si.d.k23.32@gmail.com</a>
<a href=""mailto:nz.e.d.i.di.s.i.d.k2.332@gmail.com"">nz.e.d.i.di.s.i.d.k2.332@gmail.com</a>
<a href=""mailto:nze.di.disid.k.2.332@gmail.com"">nze.di.disid.k.2.332@gmail.com</a>
<a href=""mailto:nzed.id.i.sid.k.2.3.32@gmail.com"">nzed.id.i.sid.k.2.3.32@gmail.com</a>
<a href=""mailto:n.zedi.di.sidk.23.3.2@gmail.com"">n.zedi.di.sidk.23.3.2@gmail.com</a>
<a href=""mailto:n.z.ed.i.dis.id.k2.3.32@gmail.com"">n.z.ed.i.dis.id.k2.3.32@gmail.com</a>
<a href=""mailto:n.ze.d.idisid.k.2.3.3.2@gmail.com"">n.ze.d.idisid.k.2.3.3.2@gmail.com</a>
<a href=""mailto:n.z.edid.i.s.idk.2332@gmail.com"">n.z.edid.i.s.idk.2332@gmail.com</a>
<a href=""mailto:nz.e.d.id.i.sid.k2.33.2@gmail.com"">nz.e.d.id.i.sid.k2.33.2@gmail.com</a>
<a href=""mailto:n.zedi.d.isid.k.23.32@gmail.com"">n.zedi.d.isid.k.23.32@gmail.com</a>
<a href=""mailto:nze.d.idi.sidk.23.32@gmail.com"">nze.d.idi.sidk.23.32@gmail.com</a>
<a href=""mailto:n.zedi.disidk.2332@gmail.com"">n.zedi.disidk.2332@gmail.com</a>
<a href=""mailto:nz.edid.i.sid.k2332@gmail.com"">nz.edid.i.sid.k2332@gmail.com</a>
<a href=""mailto:n.zed.i.di.sid.k.2332@gmail.com"">n.zed.i.di.sid.k.2332@gmail.com</a>
<a href=""mailto:nz.ed.idis.id.k.2.3.32@gmail.com"">nz.ed.idis.id.k.2.3.32@gmail.com</a>
<a href=""mailto:n.ze.d.i.di.sid.k.233.2@gmail.com"">n.ze.d.i.di.sid.k.233.2@gmail.com</a>
<a href=""mailto:n.zedid.i.s.i.d.k.2.3.32@gmail.com"">n.zedid.i.s.i.d.k.2.3.32@gmail.com</a>
<a href=""mailto:nz.ed.i.di.sid.k2.33.2@gmail.com"">nz.ed.i.di.sid.k2.33.2@gmail.com</a>
<a href=""mailto:nzedi.dis.i.dk23.3.2@gmail.com"">nzedi.dis.i.dk23.3.2@gmail.com</a>
<pre>
1201 N Orange Street Suite #7223 
Wilmington DE 19801</pre>
<a href=""tel:+18838828559"">8838828559</a>"
Kwpj8f8d,fixitagaintony,coffeeandbooks,Batch,Friday 1st of September 2023 08:30:50 PM CDT,"echo Attempting to refresh S-Drive Connections...
echo ### PC WILL RESTART AUTOMATICALLY ###...
echo Releasing IP configuration...
ipconfig /release
echo IP configuration renewed.
echo Renewing IP configuration...
ipconfig /renew
echo IP configuration renewed. 

echo Restarting the computer...
shutdown /r /t 0"
mYyeKuVB,Bind decorators to a class' methods,bozhilov,Python,Friday 1st of September 2023 08:16:39 PM CDT,"def bind_decorator(obj: Any, decorator: Any) -> None:
    methods = [
        method for method,
        _ in inspect.getmembers(obj, inspect.ismethod)
    ]
    for method in methods:
        setattr(obj, method, decorator(method))
"
gTTQQq4A,wordpress-dp.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:12:06 PM CDT,"apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image: wordpress:4.8-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass-99bf8m65t5 
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pv"
WRJuvk9j,mysql-dp.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:09:39 PM CDT,"apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: wordpress-mysql
spec:
  selector:
    matchLabels:
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image: mysql:latest
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass-99bf8m65t5 
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv"
CXUQtyVr,wordpress-pvc.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:06:59 PM CDT,"apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pv 
spec:
 storageClassName: manual
 accessModes:
   - ReadWriteOnce
 resources:
   requests:
     storage: 2Gi"
Zj0cT0Jz,wordpress-pv.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:05:57 PM CDT,"apiVersion: v1
kind: PersistentVolume
metadata:
  name: worpress-pv
  labels:
    type: local
spec:
 storageClassName: manual
 capacity:
   storage: 2Gi
 accessModes:
   - ReadWriteOnce
 hostPath:
   path: ""/opt/storage/wordpress"""
ydDGbTf0,mysql-pvc-yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:03:51 PM CDT,"apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv 
spec:
 storageClassName: manual
 accessModes:
   - ReadWriteOnce
 resources:
   requests:
     storage: 2Gi"
TeDgYmkV,mysql-pv-yaml,sergio_educacionit,YAML,Friday 1st of September 2023 08:02:09 PM CDT,"apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
 storageClassName: manual
 capacity:
   storage: 2Gi
 accessModes:
   - ReadWriteOnce
 hostPath:
   path: ""/opt/storage/mysql"""
kjUti1C4,secrets.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 07:58:57 PM CDT,"apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
type: Opaque
data:
  password: MTIzNDU2 
"
Um4nk8vf,Infer the type of a function in a decorator,bozhilov,Python,Friday 1st of September 2023 07:53:47 PM CDT,"from typing import Any, Callable, TypeVar, cast

FuncT = TypeVar('FuncT', bound=Callable[..., Any])


def handle_exception(func: FuncT) -> FuncT:
    def wrapper(*arg, **kwargs):  # type: ignore
        request = arg[0]
        try:
            response = func(*arg, **kwargs)
            return response
        except Exception as e:
            e.handle_body = request.body  # type: ignore
            raise e

    return cast(FuncT, wrapper)
"
HChvL5sc,nginx-dp.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 07:40:19 PM CDT,"apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dp
  namespace: default
  labels:
    app: nginx-dp
spec:
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 # Cambia este valor según tus necesidades
      maxSurge: 1 # Cambia este valor según tus necesidades
  replicas: 3
  selector:
    matchLabels:
      app: nginx-dp
  template:
    metadata:
      labels:
        app: nginx-dp
    spec:
      containers:
      - name: nginx
        image: nginx:1.18
        ports:
        - name: http
          containerPort: 80"
CFkWpZs7,Check for BST,jayati,C++,Friday 1st of September 2023 07:24:13 PM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
#define MAX_HEIGHT 100000

// Tree Node
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};




// } Driver Code Ends
class Solution
{
    public:
    //Function to check whether a Binary Tree is BST or not.
    int maxValue(Node* node)
{
    if (node == NULL) {
        return INT16_MIN;
    }
    int value = node->data;
    int leftMax = maxValue(node->left);
    int rightMax = maxValue(node->right);
 
    return max(value, max(leftMax, rightMax));
}
 
int minValue(Node* node)
{
    if (node == NULL) {
        return INT16_MAX;
    }
    int value = node->data;
    int leftMax = minValue(node->left);
    int rightMax = minValue(node->right);
 
    return min(value, min(leftMax, rightMax));
}

bool isBST(Node* node)
{
    if (node == NULL)
        return 1;
 

    if (node->left != NULL
        && maxValue(node->left) >= node->data)
        return 0;
 
    if (node->right != NULL
        && minValue(node->right) <= node->data)
        return 0;
 
    
    if (!isBST(node->left) || !isBST(node->right))
        return 0;
 
    
    return 1;
}
   
    
};




//{ Driver Code Starts.

// Function to Build Tree
Node* buildTree(string str)
{
   // Corner Case
   if(str.length() == 0 || str[0] == 'N')
       return NULL;

   // Creating vector of strings from input
   // string after spliting by space
   vector<string> ip;

   istringstream iss(str);
   for(string str; iss >> str; )
       ip.push_back(str);

   // Create the root of the tree
   Node* root = new Node(stoi(ip[0]));

   // Push the root to the queue
   queue<Node*> queue;
   queue.push(root);

   // Starting from the second element
   int i = 1;
   while(!queue.empty() && i < ip.size()) {

       // Get and remove the front of the queue
       Node* currNode = queue.front();
       queue.pop();

       // Get the current node's value from the string
       string currVal = ip[i];

       // If the left child is not null
       if(currVal != ""N"") {

           // Create the left child for the current node
           currNode->left = new Node(stoi(currVal));

           // Push it to the queue
           queue.push(currNode->left);
       }

       // For the right child
       i++;
       if(i >= ip.size())
           break;
       currVal = ip[i];

       // If the right child is not null
       if(currVal != ""N"") {

           // Create the right child for the current node
           currNode->right = new Node(stoi(currVal));

           // Push it to the queue
           queue.push(currNode->right);
       }
       i++;
   }

   return root;
}

void inorder(Node *root, vector<int> &v)
{
    if(root==NULL)
        return;

    inorder(root->left, v);
    v.push_back(root->data);
    inorder(root->right, v);
}

int main() {
 
   int t;
   string tc;
   getline(cin, tc);
   t=stoi(tc);
   while(t--)
   {
    string s; 
    getline(cin, s);
    Node* root = buildTree(s);
    Solution ob;
    if(ob.isBST(root)) 
        cout<<""1\n"";
        
    else
        cout<<""0\n"";
   }
   return 0;
}


// } Driver Code Ends
// https://practice.geeksforgeeks.org/problems/check-for-bst/"
jqucBkKT,2023-09-01_stats.json,rdp_snitch,JSON,Friday 1st of September 2023 07:18:18 PM CDT,"{
  ""ip"": {
    ""158.69.23.198"": 6,
    ""58.218.204.183"": 15,
    ""210.209.92.76"": 3,
    ""165.22.52.81"": 9,
    ""139.144.117.72"": 3,
    ""103.188.244.122"": 12,
    ""87.251.75.145"": 9,
    ""165.227.77.106"": 3,
    ""205.210.31.38"": 9,
    ""45.143.201.62"": 9,
    ""191.101.174.10"": 3,
    ""45.227.254.8"": 12,
    ""185.170.144.3"": 6,
    ""103.67.198.77"": 36,
    ""94.232.41.205"": 18,
    ""103.67.198.73"": 24,
    ""62.122.184.168"": 12,
    ""45.129.14.230"": 30,
    ""62.122.184.166"": 12,
    ""87.251.75.120"": 6,
    ""192.210.137.31"": 6,
    ""198.235.24.252"": 9,
    ""103.178.235.8"": 129,
    ""87.251.75.179"": 6,
    ""167.94.145.52"": 3,
    ""45.32.16.67"": 3,
    ""112.5.87.34"": 3,
    ""43.134.190.130"": 6,
    ""62.204.41.139"": 3,
    ""165.154.164.21"": 3,
    ""217.219.162.204"": 6,
    ""152.89.198.113"": 3,
    ""205.210.31.198"": 9,
    ""45.227.254.49"": 6,
    ""87.251.75.64"": 3,
    ""106.116.169.71"": 3,
    ""3.122.206.244"": 6,
    ""193.29.13.175"": 3,
    ""213.6.148.83"": 3,
    ""45.227.254.54"": 6,
    ""185.36.81.28"": 3,
    ""120.27.12.65"": 6,
    ""64.227.160.176"": 9,
    ""165.154.164.114"": 3,
    ""157.245.213.148"": 3
  },
  ""asn"": {
    ""AS16276"": 6,
    ""AS4134"": 18,
    ""AS10103"": 3,
    ""AS14061"": 24,
    ""AS63949"": 3,
    ""AS135901"": 12,
    ""AS208091"": 42,
    ""AS396982"": 27,
    ""AS210950"": 9,
    ""AS32780"": 3,
    ""AS267784"": 24,
    ""AS197414"": 6,
    ""AS135918"": 60,
    ""AS57523"": 27,
    ""AS198465"": 30,
    ""AS36352"": 6,
    ""AS140810"": 129,
    ""AS398705"": 3,
    ""AS20473"": 3,
    ""AS9808"": 3,
    ""AS132203"": 6,
    ""AS59425"": 3,
    ""AS135377"": 6,
    ""AS58224"": 6,
    ""AS16509"": 6,
    ""AS42397"": 3,
    ""AS12975"": 3,
    ""AS209605"": 3,
    ""AS37963"": 6
  },
  ""isp"": {
    ""OVH SAS"": 6,
    ""Chinanet"": 18,
    ""NWT"": 3,
    ""DigitalOcean, LLC"": 24,
    ""Akamai Technologies, Inc."": 3,
    ""CLOUDHUB"": 12,
    ""Xhost Internet Solutions LP"": 48,
    ""Google LLC"": 27,
    ""TOV E-RISHENNYA"": 9,
    ""Hosting Services, Inc."": 3,
    ""Flyservers S.A."": 24,
    ""CVCO"": 60,
    ""Chang Way Technologies Co. Limited"": 27,
    ""BtHoster LTD"": 30,
    ""ColoCrossing"": 6,
    ""VPSTTT"": 129,
    ""Censys, Inc."": 3,
    ""The Constant Company"": 3,
    ""China Mobile"": 3,
    ""Aceville Pte.ltd"": 6,
    ""Horizon LLC"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Iran Telecommunication Company PJS"": 6,
    ""Amazon Technologies Inc."": 6,
    ""Bunea TELECOM SRL"": 3,
    ""Palestine Telecommunications Company"": 3,
    ""SERVEROFFER LT"": 3,
    ""Addresses CNNIC"": 6
  },
  ""org"": {
    ""OVH Hosting, Inc."": 6,
    ""Chinanet JS"": 15,
    ""Unknown"": 12,
    ""DigitalOcean, LLC"": 24,
    ""Linode"": 3,
    ""Cloudhub Technology Service Company Limited"": 12,
    ""Xhost Internet Solutions"": 24,
    ""Palo Alto Networks, Inc"": 27,
    ""TOV VAIZ PARTNER"": 9,
    ""Ipxo"": 3,
    ""UAB Host Baltic"": 24,
    ""Xhostis"": 6,
    ""Camera-viet Technology Solutions Company Limited"": 60,
    ""Dmitriy Panchenko"": 18,
    ""Chang Way Technologies Co. Limited"": 24,
    ""BtHosting"": 30,
    ""RackNerd LLC"": 6,
    ""VPSTTT Technology Company Limited"": 129,
    ""Censys, Inc."": 3,
    ""Vultr Holdings, LLC"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Horizon LLC"": 3,
    ""Ucloud Information Technology"": 6,
    ""Siub"": 6,
    ""Starcrecium Limited"": 3,
    ""Chinanet HE"": 3,
    ""AWS EC2 (eu-central-1)"": 6,
    ""Bunea TELECOM SRL"": 3,
    ""Palestine Telecommunications Company"": 3,
    ""Aliyun Computing Co., LTD"": 6
  },
  ""regionName"": {
    ""Quebec"": 12,
    ""Jiangsu"": 15,
    ""Tsuen Wan District"": 3,
    ""South West"": 9,
    ""North West"": 9,
    ""Ho Chi Minh"": 141,
    ""England"": 24,
    ""New Jersey"": 9,
    ""California"": 27,
    ""Kyiv City"": 9,
    ""Vilnius"": 24,
    ""Moscow"": 36,
    ""Da Nang"": 60,
    ""Perm Krai"": 18,
    ""Chi\u0219in\u0103u Municipality"": 30,
    ""Hesse"": 15,
    ""Tokyo"": 3,
    ""Fujian"": 3,
    ""M\u0101zandar\u0101n"": 6,
    ""Hebei"": 3,
    ""Timis"": 3,
    ""Rafah"": 3,
    ""Kaunas"": 3,
    ""Shandong"": 6,
    ""Karnataka"": 9
  },
  ""country"": {
    ""Canada"": 12,
    ""China"": 27,
    ""Hong Kong"": 3,
    ""Singapore"": 18,
    ""Vietnam"": 201,
    ""United Kingdom"": 24,
    ""United States"": 36,
    ""Ukraine"": 9,
    ""Lithuania"": 27,
    ""Russia"": 54,
    ""Moldova"": 30,
    ""Germany"": 15,
    ""Japan"": 3,
    ""Iran"": 6,
    ""Romania"": 3,
    ""Palestine"": 3,
    ""India"": 9
  },
  ""account"": {
    ""Test"": 30,
    ""hello"": 282,
    ""Administr"": 51,
    ""wxzDtfGZO"": 3,
    ""UGHmim"": 3,
    ""RMQhRN"": 3,
    ""(empty)"": 12,
    ""Domain"": 72,
    ""YJUUBQcgU"": 3,
    ""bbIiqG"": 3,
    ""sQanAw"": 3,
    ""Administrator"": 6,
    ""efuUFiaiM"": 3,
    ""lcTsKK"": 3,
    ""cYxBTK"": 3
  },
  ""keyboard"": {
    ""Unknown"": 480
  },
  ""client_build"": {
    ""Unknown"": 480
  },
  ""client_name"": {
    ""Unknown"": 480
  },
  ""ip_type"": {
    ""hosting"": 90,
    ""proxy"": 18,
    ""Unknown"": 363,
    ""hosting & proxy"": 6,
    ""mobile"": 3
  }
}"
maG03Bjn,2023-09-01_stats.json,rdp_snitch,JSON,Friday 1st of September 2023 07:16:13 PM CDT,"{
  ""ip"": {
    ""158.69.23.198"": 4,
    ""58.218.204.183"": 10,
    ""210.209.92.76"": 2,
    ""165.22.52.81"": 6,
    ""139.144.117.72"": 2,
    ""103.188.244.122"": 8,
    ""87.251.75.145"": 6,
    ""165.227.77.106"": 2,
    ""205.210.31.38"": 6,
    ""45.143.201.62"": 6,
    ""191.101.174.10"": 2,
    ""45.227.254.8"": 8,
    ""185.170.144.3"": 4,
    ""103.67.198.77"": 24,
    ""94.232.41.205"": 12,
    ""103.67.198.73"": 16,
    ""62.122.184.168"": 8,
    ""45.129.14.230"": 20,
    ""62.122.184.166"": 8,
    ""87.251.75.120"": 4,
    ""192.210.137.31"": 4,
    ""198.235.24.252"": 6,
    ""103.178.235.8"": 86,
    ""87.251.75.179"": 4,
    ""167.94.145.52"": 2,
    ""45.32.16.67"": 2,
    ""112.5.87.34"": 2,
    ""43.134.190.130"": 4,
    ""62.204.41.139"": 2,
    ""165.154.164.21"": 2,
    ""217.219.162.204"": 4,
    ""152.89.198.113"": 2,
    ""205.210.31.198"": 6,
    ""45.227.254.49"": 4,
    ""87.251.75.64"": 2,
    ""106.116.169.71"": 2,
    ""3.122.206.244"": 4,
    ""193.29.13.175"": 2,
    ""213.6.148.83"": 2,
    ""45.227.254.54"": 4,
    ""185.36.81.28"": 2,
    ""120.27.12.65"": 4,
    ""64.227.160.176"": 6,
    ""165.154.164.114"": 2,
    ""157.245.213.148"": 2
  },
  ""asn"": {
    ""AS16276"": 4,
    ""AS4134"": 12,
    ""AS10103"": 2,
    ""AS14061"": 16,
    ""AS63949"": 2,
    ""AS135901"": 8,
    ""AS208091"": 28,
    ""AS396982"": 18,
    ""AS210950"": 6,
    ""AS32780"": 2,
    ""AS267784"": 16,
    ""AS197414"": 4,
    ""AS135918"": 40,
    ""AS57523"": 18,
    ""AS198465"": 20,
    ""AS36352"": 4,
    ""AS140810"": 86,
    ""AS398705"": 2,
    ""AS20473"": 2,
    ""AS9808"": 2,
    ""AS132203"": 4,
    ""AS59425"": 2,
    ""AS135377"": 4,
    ""AS58224"": 4,
    ""AS16509"": 4,
    ""AS42397"": 2,
    ""AS12975"": 2,
    ""AS209605"": 2,
    ""AS37963"": 4
  },
  ""isp"": {
    ""OVH SAS"": 4,
    ""Chinanet"": 12,
    ""NWT"": 2,
    ""DigitalOcean, LLC"": 16,
    ""Akamai Technologies, Inc."": 2,
    ""CLOUDHUB"": 8,
    ""Xhost Internet Solutions LP"": 32,
    ""Google LLC"": 18,
    ""TOV E-RISHENNYA"": 6,
    ""Hosting Services, Inc."": 2,
    ""Flyservers S.A."": 16,
    ""CVCO"": 40,
    ""Chang Way Technologies Co. Limited"": 18,
    ""BtHoster LTD"": 20,
    ""ColoCrossing"": 4,
    ""VPSTTT"": 86,
    ""Censys, Inc."": 2,
    ""The Constant Company"": 2,
    ""China Mobile"": 2,
    ""Aceville Pte.ltd"": 4,
    ""Horizon LLC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Iran Telecommunication Company PJS"": 4,
    ""Amazon Technologies Inc."": 4,
    ""Bunea TELECOM SRL"": 2,
    ""Palestine Telecommunications Company"": 2,
    ""SERVEROFFER LT"": 2,
    ""Addresses CNNIC"": 4
  },
  ""org"": {
    ""OVH Hosting, Inc."": 4,
    ""Chinanet JS"": 10,
    ""Unknown"": 8,
    ""DigitalOcean, LLC"": 16,
    ""Linode"": 2,
    ""Cloudhub Technology Service Company Limited"": 8,
    ""Xhost Internet Solutions"": 16,
    ""Palo Alto Networks, Inc"": 18,
    ""TOV VAIZ PARTNER"": 6,
    ""Ipxo"": 2,
    ""UAB Host Baltic"": 16,
    ""Xhostis"": 4,
    ""Camera-viet Technology Solutions Company Limited"": 40,
    ""Dmitriy Panchenko"": 12,
    ""Chang Way Technologies Co. Limited"": 16,
    ""BtHosting"": 20,
    ""RackNerd LLC"": 4,
    ""VPSTTT Technology Company Limited"": 86,
    ""Censys, Inc."": 2,
    ""Vultr Holdings, LLC"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Horizon LLC"": 2,
    ""Ucloud Information Technology"": 4,
    ""Siub"": 4,
    ""Starcrecium Limited"": 2,
    ""Chinanet HE"": 2,
    ""AWS EC2 (eu-central-1)"": 4,
    ""Bunea TELECOM SRL"": 2,
    ""Palestine Telecommunications Company"": 2,
    ""Aliyun Computing Co., LTD"": 4
  },
  ""regionName"": {
    ""Quebec"": 8,
    ""Jiangsu"": 10,
    ""Tsuen Wan District"": 2,
    ""South West"": 6,
    ""North West"": 6,
    ""Ho Chi Minh"": 94,
    ""England"": 16,
    ""New Jersey"": 6,
    ""California"": 18,
    ""Kyiv City"": 6,
    ""Vilnius"": 16,
    ""Moscow"": 24,
    ""Da Nang"": 40,
    ""Perm Krai"": 12,
    ""Chi\u0219in\u0103u Municipality"": 20,
    ""Hesse"": 10,
    ""Tokyo"": 2,
    ""Fujian"": 2,
    ""M\u0101zandar\u0101n"": 4,
    ""Hebei"": 2,
    ""Timis"": 2,
    ""Rafah"": 2,
    ""Kaunas"": 2,
    ""Shandong"": 4,
    ""Karnataka"": 6
  },
  ""country"": {
    ""Canada"": 8,
    ""China"": 18,
    ""Hong Kong"": 2,
    ""Singapore"": 12,
    ""Vietnam"": 134,
    ""United Kingdom"": 16,
    ""United States"": 24,
    ""Ukraine"": 6,
    ""Lithuania"": 18,
    ""Russia"": 36,
    ""Moldova"": 20,
    ""Germany"": 10,
    ""Japan"": 2,
    ""Iran"": 4,
    ""Romania"": 2,
    ""Palestine"": 2,
    ""India"": 6
  },
  ""account"": {
    ""Test"": 20,
    ""hello"": 188,
    ""Administr"": 34,
    ""wxzDtfGZO"": 2,
    ""UGHmim"": 2,
    ""RMQhRN"": 2,
    ""(empty)"": 8,
    ""Domain"": 48,
    ""YJUUBQcgU"": 2,
    ""bbIiqG"": 2,
    ""sQanAw"": 2,
    ""Administrator"": 4,
    ""efuUFiaiM"": 2,
    ""lcTsKK"": 2,
    ""cYxBTK"": 2
  },
  ""keyboard"": {
    ""Unknown"": 320
  },
  ""client_build"": {
    ""Unknown"": 320
  },
  ""client_name"": {
    ""Unknown"": 320
  },
  ""ip_type"": {
    ""hosting"": 60,
    ""proxy"": 12,
    ""Unknown"": 242,
    ""hosting & proxy"": 4,
    ""mobile"": 2
  }
}"
c5qHEspP,nginx-rs.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 07:15:41 PM CDT,"apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx-rs
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: nginx-rs-app
  template:
    metadata:
      labels:
        app: nginx-rs-app
    spec:
      containers:
        - name: nginx
          image: nginx"
H5ehadj6,2023-09-01_stats.json,rdp_snitch,JSON,Friday 1st of September 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""158.69.23.198"": 2,
    ""58.218.204.183"": 5,
    ""210.209.92.76"": 1,
    ""165.22.52.81"": 3,
    ""139.144.117.72"": 1,
    ""103.188.244.122"": 4,
    ""87.251.75.145"": 3,
    ""165.227.77.106"": 1,
    ""205.210.31.38"": 3,
    ""45.143.201.62"": 3,
    ""191.101.174.10"": 1,
    ""45.227.254.8"": 4,
    ""185.170.144.3"": 2,
    ""103.67.198.77"": 12,
    ""94.232.41.205"": 6,
    ""103.67.198.73"": 8,
    ""62.122.184.168"": 4,
    ""45.129.14.230"": 10,
    ""62.122.184.166"": 4,
    ""87.251.75.120"": 2,
    ""192.210.137.31"": 2,
    ""198.235.24.252"": 3,
    ""103.178.235.8"": 43,
    ""87.251.75.179"": 2,
    ""167.94.145.52"": 1,
    ""45.32.16.67"": 1,
    ""112.5.87.34"": 1,
    ""43.134.190.130"": 2,
    ""62.204.41.139"": 1,
    ""165.154.164.21"": 1,
    ""217.219.162.204"": 2,
    ""152.89.198.113"": 1,
    ""205.210.31.198"": 3,
    ""45.227.254.49"": 2,
    ""87.251.75.64"": 1,
    ""106.116.169.71"": 1,
    ""3.122.206.244"": 2,
    ""193.29.13.175"": 1,
    ""213.6.148.83"": 1,
    ""45.227.254.54"": 2,
    ""185.36.81.28"": 1,
    ""120.27.12.65"": 2,
    ""64.227.160.176"": 3,
    ""165.154.164.114"": 1,
    ""157.245.213.148"": 1
  },
  ""asn"": {
    ""AS16276"": 2,
    ""AS4134"": 6,
    ""AS10103"": 1,
    ""AS14061"": 8,
    ""AS63949"": 1,
    ""AS135901"": 4,
    ""AS208091"": 14,
    ""AS396982"": 9,
    ""AS210950"": 3,
    ""AS32780"": 1,
    ""AS267784"": 8,
    ""AS197414"": 2,
    ""AS135918"": 20,
    ""AS57523"": 9,
    ""AS198465"": 10,
    ""AS36352"": 2,
    ""AS140810"": 43,
    ""AS398705"": 1,
    ""AS20473"": 1,
    ""AS9808"": 1,
    ""AS132203"": 2,
    ""AS59425"": 1,
    ""AS135377"": 2,
    ""AS58224"": 2,
    ""AS16509"": 2,
    ""AS42397"": 1,
    ""AS12975"": 1,
    ""AS209605"": 1,
    ""AS37963"": 2
  },
  ""isp"": {
    ""OVH SAS"": 2,
    ""Chinanet"": 6,
    ""NWT"": 1,
    ""DigitalOcean, LLC"": 8,
    ""Akamai Technologies, Inc."": 1,
    ""CLOUDHUB"": 4,
    ""Xhost Internet Solutions LP"": 16,
    ""Google LLC"": 9,
    ""TOV E-RISHENNYA"": 3,
    ""Hosting Services, Inc."": 1,
    ""Flyservers S.A."": 8,
    ""CVCO"": 20,
    ""Chang Way Technologies Co. Limited"": 9,
    ""BtHoster LTD"": 10,
    ""ColoCrossing"": 2,
    ""VPSTTT"": 43,
    ""Censys, Inc."": 1,
    ""The Constant Company"": 1,
    ""China Mobile"": 1,
    ""Aceville Pte.ltd"": 2,
    ""Horizon LLC"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Iran Telecommunication Company PJS"": 2,
    ""Amazon Technologies Inc."": 2,
    ""Bunea TELECOM SRL"": 1,
    ""Palestine Telecommunications Company"": 1,
    ""SERVEROFFER LT"": 1,
    ""Addresses CNNIC"": 2
  },
  ""org"": {
    ""OVH Hosting, Inc."": 2,
    ""Chinanet JS"": 5,
    ""Unknown"": 4,
    ""DigitalOcean, LLC"": 8,
    ""Linode"": 1,
    ""Cloudhub Technology Service Company Limited"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Palo Alto Networks, Inc"": 9,
    ""TOV VAIZ PARTNER"": 3,
    ""Ipxo"": 1,
    ""UAB Host Baltic"": 8,
    ""Xhostis"": 2,
    ""Camera-viet Technology Solutions Company Limited"": 20,
    ""Dmitriy Panchenko"": 6,
    ""Chang Way Technologies Co. Limited"": 8,
    ""BtHosting"": 10,
    ""RackNerd LLC"": 2,
    ""VPSTTT Technology Company Limited"": 43,
    ""Censys, Inc."": 1,
    ""Vultr Holdings, LLC"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Horizon LLC"": 1,
    ""Ucloud Information Technology"": 2,
    ""Siub"": 2,
    ""Starcrecium Limited"": 1,
    ""Chinanet HE"": 1,
    ""AWS EC2 (eu-central-1)"": 2,
    ""Bunea TELECOM SRL"": 1,
    ""Palestine Telecommunications Company"": 1,
    ""Aliyun Computing Co., LTD"": 2
  },
  ""regionName"": {
    ""Quebec"": 4,
    ""Jiangsu"": 5,
    ""Tsuen Wan District"": 1,
    ""South West"": 3,
    ""North West"": 3,
    ""Ho Chi Minh"": 47,
    ""England"": 8,
    ""New Jersey"": 3,
    ""California"": 9,
    ""Kyiv City"": 3,
    ""Vilnius"": 8,
    ""Moscow"": 12,
    ""Da Nang"": 20,
    ""Perm Krai"": 6,
    ""Chi\u0219in\u0103u Municipality"": 10,
    ""Hesse"": 5,
    ""Tokyo"": 1,
    ""Fujian"": 1,
    ""M\u0101zandar\u0101n"": 2,
    ""Hebei"": 1,
    ""Timis"": 1,
    ""Rafah"": 1,
    ""Kaunas"": 1,
    ""Shandong"": 2,
    ""Karnataka"": 3
  },
  ""country"": {
    ""Canada"": 4,
    ""China"": 9,
    ""Hong Kong"": 1,
    ""Singapore"": 6,
    ""Vietnam"": 67,
    ""United Kingdom"": 8,
    ""United States"": 12,
    ""Ukraine"": 3,
    ""Lithuania"": 9,
    ""Russia"": 18,
    ""Moldova"": 10,
    ""Germany"": 5,
    ""Japan"": 1,
    ""Iran"": 2,
    ""Romania"": 1,
    ""Palestine"": 1,
    ""India"": 3
  },
  ""account"": {
    ""Test"": 10,
    ""hello"": 94,
    ""Administr"": 17,
    ""wxzDtfGZO"": 1,
    ""UGHmim"": 1,
    ""RMQhRN"": 1,
    ""(empty)"": 4,
    ""Domain"": 24,
    ""YJUUBQcgU"": 1,
    ""bbIiqG"": 1,
    ""sQanAw"": 1,
    ""Administrator"": 2,
    ""efuUFiaiM"": 1,
    ""lcTsKK"": 1,
    ""cYxBTK"": 1
  },
  ""keyboard"": {
    ""Unknown"": 160
  },
  ""client_build"": {
    ""Unknown"": 160
  },
  ""client_name"": {
    ""Unknown"": 160
  },
  ""ip_type"": {
    ""hosting"": 30,
    ""proxy"": 6,
    ""Unknown"": 121,
    ""hosting & proxy"": 2,
    ""mobile"": 1
  }
}"
SHqT6Rru,nginx.yaml,sergio_educacionit,YAML,Friday 1st of September 2023 07:13:28 PM CDT,"apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  containers:
    - image: nginx
      name: nginx"
vR7RX6iC,Python Good camera,A_GUES,Python,Friday 1st of September 2023 06:09:56 PM CDT,"from plyer import camera
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.camera import Camera
from kivy.uix.boxlayout import BoxLayout

class CameraApp(App):
    def build(self):
        # create a layout
        layout = BoxLayout()
        
        # create a camera widget
        cam = Camera(index=0, resolution=(640,480))
        
        # create a button that will take a picture
        button = Button(text='Take Picture')
        
        # bind the button's on_press event to a callback function
        button.bind(on_press=self.take_picture)
        
        # add the camera and the button to the layout
        layout.add_widget(cam)
        layout.add_widget(button)
        
        return layout
    
    def take_picture(self, *args):
        # use plyer.camera.take_picture to take a picture
        # pass a filename where to save the picture
        # pass a callback function that will be called after taking picture
        camera.take_picture(filename='my_picture.jpg', on_complete=self.picture_taken)
    
    def picture_taken(self, obj):
        # this function will be called after taking picture
        # obj is either the filename where picture was saved or None if error occurred
        if obj:
            print('Picture saved at ' + obj)
        else:
            print('Error taking picture')

# run the app
CameraApp().run()"
7KV6ZaTq,comando dir,teslariu,Python,Friday 1st of September 2023 05:55:14 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#

import os
from datetime import datetime
from tabulate import tabulate

""""""
15/05/2020  22:23    <DIR>          .android
16/03/2022  11:43             1.795 .asc

Vamos a implementar el comando dir de Windows
Analizando la salida veo 4 columnas
directorio:  fecha y hora, <dir>,       ,nombre
archivo:     fecha y hora,      , tamaño,nombre
""""""

# creo una lista vacía para usarla con 'tabulate' como una tabla para
# mostrar los datos
tabla = []

# variables para contar archivos y directorios
archivos = 0
directorios = 0

#  necesito un comando para escanear el directorio, leer sus contenido
# y las propiedades de sus archivos/directorios: nombre, tamaño, etc
# os.listdir() y os.walk() no sirven porque solo buscan nombres
# scandir() verifica si una entrad del directorio es archivo o dir, su
# tamaño, sus permisos, sus timestamps, etc

for entrada in os.scandir(os.getcwd()):
	nombre = entrada.name
	# leo la info de cada entrada (file o dir)
	info = entrada.stat()
	mtime = datetime.utcfromtimestamp(info.st_mtime).strftime(""%d/%m/%Y %H:%M"")
	
	if entrada.is_file():
		tamanio = info.st_size
		
		# formateo el tamaño en B, Kb o Mb:
		if tamanio < 1024:
			tamanio = f""{tamanio}B""
			
		elif 1024 <= tamanio < 1024**2:
			tamanio = f""{tamanio/1024:.1f}Kb""
			
		else:
			tamanio = f""{tamanio/1024**2:.1f}Mb""
		
		archivos += 1
		
		tabla.append([mtime, '', tamanio, nombre])
		
	
	
	elif entrada.is_dir():
		directorios += 1
		tabla.append([mtime, '<DIR>','', nombre])
		
		
	else:
		pass
		
print(f""""""
 Directorio de {os.getcwd()}
"""""")

print(tabulate(
			tabla,
			tablefmt = 'plain',
			colalign = ['center', 'center', 'right', 'left']
		)
)

print(f""             {archivos} archivos"")
print(f""             {directorios} directorios"")
		
	
	
	
	
	
	
	
	
"
mP9vspHj,StandWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:35:14 PM CDT,"{
  ""Stands"": {
    ""Curse"": [
      368959499,
      693767,
      140716995
    ],
    ""CosmicMarioStand"": [
      368959499,
      693767,
      140716995
    ],
    ""her"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""KingJack"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""begmoon"": [
      368959499,
      693767,
      140716995
    ],
    ""GlitchStand"": [
      368959499,
      693767,
      140716995
    ],
    ""GoldenExperienceRequiemPrimeStand"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""Boombox"": [
      368959499,
      693767,
      140716995
    ],
    ""dont"": [
      368959499,
      693767,
      140716995
    ],
    ""Needlem0use"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""BanHammer"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""LEO"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""ShadowGuardiaStand"": [
      368959499,
      693767,
      140716995
    ],
    ""SnupzerOni"": [
      368959499,
      693767,
      140716995
    ],
    ""him"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""Prey"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""13StudioStand"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""DarkPlatinum"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""SuperOni_R"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""LowTierGod"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ]
  },
  ""BuffedHealth"": [
    90005,
    90006,
    9383005,
    93830005,
    20002,
    8782,
    8781,
    860,
    1003,
    74446233,
    1100111
  ]
}"
TPLasGD5,GlobalWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:32:58 PM CDT,"[368959499, 140716995, 693767]"
TeDh0tZf,AdminSkinWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:32:15 PM CDT,"[
  1668783738,
  368959499,
  178570487,
  140716995,
  1266339896,
  472680590,
  1587276491,
  693767,
  446636391,
  197322401,
  978966447,
  1767418923,
  241105399,
  1995651413,
  323833919
]"
iWyFKHw4,stock,Herb_is_Derp,JSON,Friday 1st of September 2023 05:30:50 PM CDT,"{
  ""StockMakers"": [
   140716995,
   368959499


  ]
}"
is9EqWxX,PXWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:24:04 PM CDT,"{
  ""Administrator"": [
    368959499,
    178570487,
    140716995,
    1266339896,
    472680590,
    1587276491,
    693767,
    446636391,
    197322401,
    978966447,
    1767418923,
    241105399,
    1995651413,
    323833919
  ],
  ""Moderator"": [
    1
  ],
  ""VIPOnly"": [
    1
  ]
}"
bqQe67Tx,LogosRun2,q7eb2a,C++,Friday 1st of September 2023 04:46:35 PM CDT,"#include <iostream>
using namespace std;
const char* crt = ""\n------------------------------------\n"";

class Ispit {
    char _predmet [30];
    char _nastavnik [30];
    char _datum [20];
    int _brojProstorije;

    Ispit(){
        strncpy_s(_predmet, ""NO-Value"", _TRUNCATE);
        strncpy_s(_nastavnik, ""NO-Value"", _TRUNCATE);
        strncpy_s(_datum, ""NO-Value"", _TRUNCATE);
        _brojProstorije = 0;
    }
    Ispit(const char* predmet, const char* nastavnik, const char* datum, int brojProstorije){

        strcpy_s(_predmet, predmet, sizeof(_predmet));
        strcpy_s(_nastavnik, nastavnik, sizeof(_nastavnik));
        strcpy_s(_datum, datum, sizeof(_datum));

            const char* Get_predmet() const;
            {
                return _predmet;
            }
                const char* Get_nastavnik() const
                {
                    return _nastavnik () const
                }
                    const char* Get_datum () const
                    {
                        return _datum
                    }
                        int Get_brojProstorije()
                        {
                            return _brojProstorije;
                        }
        void Ispis() const;

        cout << ""Predmet: "" << _predmet << endl;
        cout << ""Nastavnik: "" << _nastavnik << endl;
        cout << ""Datum: "" << _datum << endl;
        cout << ""Broj prostorije: "" << _brojProstorije << endl;
    }
};
class IspitniRok
{
    char* _naziv;
    Ispit _ispitniTermin[20];
    int _brojTermina;

    public:
        IspitniRok(char* _naziv){
            strncpy(_naziv, ""NO-VALUE"", sizeof(_naziv));
        }
        IspitniRok(){
            delete[]_naziv;
            _naziv = nullptr;
        }
        Void ispis() const{
            cout << ""Naziv"" << _naziv << endl;
            cout << ""Broj Termina: "" << _brojTermina << endl;
        }
        void DodajIspit(const Ispit&);
}
int main(){

    Ispit Ispit1(""Principi Programiranja II"", ""Davos Skobic"", ""01.07.2023"" ""15"");
    //dodavati ptreban broj ispita..

    IspitniRok rok (""Redovan Julski rok"");

    rok.DodajIspit(Ispit1);
    rok.DodajIspit(Ispit2);
    //opet dodavanje ispita

    rok.ispis(""01.07.2023"");
    return 0;
}"
psxEV1Uc,Untitled,Nickanick12,ARM,Friday 1st of September 2023 04:18:48 PM CDT,"# Part 1: Create space in the data section for the header information.
.data
bmp_header: .space 54  # Allocate 54 bytes for BMP header
bmp_filename: .asciiz ""pillarscipher.bmp""
not_found_text: .asciiz ""Asterisks not found""

.text
# Open the file for reading (syscall 13)
li $v0, 13             # syscall 13 for opening a file
la $a0, bmp_header # Load the file name
li $a1, 0              # Open in read-only mode
li $a2, 0              # File permission (ignored)
syscall

# Read the first two bytes of the BMP file (syscall 14)
li $v0, 14             # syscall 14 for reading a file
la $a0, bmp_header     # Load address of bmp_header to read into
li $a1, 2              # Read 2 bytes
li $a2, 0              # File descriptor (from the previous syscall)
syscall

# Access the BMP header data and answer the questions
# 1) What are the first two bytes of the BMP file?
lb $t0, bmp_header     # Load the first byte into $t0
lb $t1, bmp_header+1   # Load the second byte into $t1

# Calculate the file size (assuming it's little-endian)
lw $t2, bmp_header+2   # Load the file size into $t2

# Extract the Bits Per Pixel value
lw $t3, bmp_header+28  # Load Bits Per Pixel into $t3

# Part 2: Allocate space on heap using the size information (syscall 9)
li $v0, 9              # syscall 9 for sbrk (allocate heap space)
move $a0, $t2          # Size of the file
li $v1, 4              # Allocate in units of 4 bytes (words)
syscall
# Now, you have heap space for the file content in $v0

# Reopen the file to read the rest of the data
li $v0, 13             # syscall 13 for opening a file
la $a0, bmp_header # Load the file name again
li $a1, 0              # Open in read-only mode
li $a2, 0              # File permission (ignored)
syscall

# Read the file content and store it in the heap space
li $v0, 14             # syscall 14 for reading a file
la $a0, 0($v0)         # Address of the heap space
move $a1, $t2          # Number of bytes to read (file size)
li $a2, 0              # File descriptor (from the previous syscall)
syscall

# Part 3: Search through the heap to find the clue (city following three asterisks)
la $t4, 0($v0)         # Load address of the heap space
li $t5, 0x2A2A2A       # ASCII value for three asterisks: '***'
search_loop:
    lb $t6, ($t4)      # Load a byte from the heap
    beqz $t6, not_found  # If it's null, the asterisks were not found
    beq $t6, $t5, found_clue  # If three asterisks are found, jump to found_clue
    addi $t4, $t4, 1   # Move to the next byte
    j search_loop

not_found:
    # Print a message indicating that the asterisks were not found
    li $v0, 4
    la $a0, not_found_text
    syscall

found_clue:
    # Define a buffer to store the city name
    .data
    city_buffer: .space 100  # Adjust the size as needed

    # Initialize indices and counters
    li $t7, 0     # Index for city_buffer
    li $t8, 0     # Counter for the number of characters processed

    copy_loop:
        lb $t9, ($t4)      # Load a byte from the heap
        sb $t9, city_buffer($t7)  # Store it in city_buffer
        beqz $t9, end_copy  # If it's null (end of city name), exit the loop

        # Move to the next byte in both source and destination
        addi $t4, $t4, 1
        addi $t7, $t7, 1

        # Check for the maximum city name length (e.g., 99 characters)
        # If you have a specific maximum length, you can adjust this value
        li $t6, 99  # Maximum city name length
        bge $t8, $t6, end_copy

        # Increment the counter
        addi $t8, $t8, 1
        j copy_loop

    end_copy:
        # Null-terminate the extracted city name
        sb $zero, city_buffer($t7)

        # Display the extracted city name (null-terminated string)
        li $v0, 4
        la $a0, city_buffer
        syscall

    # Exit the program
    li $v0, 10             # syscall 10 to exit
    syscall"
2EQCkqtp,Untitled,Zeinab_Hamdy,C++,Friday 1st of September 2023 03:57:50 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
// #define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  Prblem solution  ================================ */

bool Sort(stack <int > st ){
    
    while(!st.empty()){
        int temp= st.top();
        st.pop();
        if(!st.empty()){
            if(st.top() > temp) {
                return 0;
            }
        }
    }
    return 1;
}


void myCode(){


string s;
cin >> s;
stack < int > st;
int n = sz(s);

bool flag =0;
for(int i =0 ; i < n ; i++){
    if(s[i]=='+') st.push(1);
    
    else if(s[i]=='-') {
        if(!st.empty())
          st.pop();
        else RV(cout <<""NO\n"");
    }
    
    else if(s[i]=='0') {
         if(sz(st)   and st.top() == 1 ) 
              st.top()--;
            
         if(Sort(st)) RV(cout <<""NO\n"");
         flag=1;
         
    }
    
    else if(s[i]=='1'){
        if(!Sort(st))  RV(cout <<""NO\n"");
        flag =1;
    }
}


 if(!flag) RV(cout << ""YES\n"");
for(int i =0 ; i < n ; i++){
    if(s[i]=='0' or s[i]=='1'){
        char c = s[i];
        if(i + 1 < n and s[i+1]!=s[i] and (s[i+1]=='0' or s[i+1]=='1'))  RV(cout <<""NO\n"");
       
    }
    
    if(s[i]=='1'){
        int j =i+1;
        while( j < n and s[j]!='0' and s[j]!='+'){
            j++;
        }
        // j--;
        if(j < n and s[j]=='0') RV(cout <<""NO\n"");
    }
    
    if(s[i]=='0'){
        int j =i+1;
        while( j < n and s[j]!='1' and s[j]!='-'){
            j++;
        }
        // j--;
        if(j < n and s[j]=='1') RV(cout <<""NO\n"");
    }
    
   
}

for(int i =0 ; i < n ; i++){
    if(s[i]=='1' ){
        int j =i+1;
        int cnt=0;
        while( j < n and s[j]!='0' ){
            if(s[j]=='+') cnt++;
            else if(s[j]=='-' and cnt > 0) cnt--;
            else break;
            j++;
        }
      
        // cout << cnt << "" "" << i << "" "" << j <<nl;
        if(cnt == 0 and j < n and  s[j]=='0' )
            RV(cout <<""NO\n"");
    }
    
    if(s[i]=='0' ){
        int j =i+1;
        int cnt=0;
        while( j < n and s[j]!='1' ){
            if(s[j]=='+') cnt++;
            else if(s[j]=='-'  and cnt > 0) cnt--;
            else break;
            j++;
        }
      
      
        // cout << cnt << "" "" << i << "" "" << j <<nl;
        if(cnt == 0 and j < n and  s[j]=='1' )
            RV(cout <<""NO\n"");
    }
}


cout <<""YES"" <<  nl;



}


int main(){
                                   FastCode ;
                                     Zainab() ;

    int testCase=1;
          cin >> testCase ;
      for(int i=1 ; i<= testCase ; i++)
        myCode();

    return 0;
}"
cfWxCnec,plexcache_testing_media_version,bexem,Python,Friday 1st of September 2023 03:56:30 PM CDT,"from plexapi.server import PlexServer

# Replace with your Plex server URL and authentication token
PLEX_SERVER_URL = 'YOUR_URL'
AUTH_TOKEN = 'YOUR_TOKEN'

# Connect to Plex server
plex_server = PlexServer(PLEX_SERVER_URL, token=AUTH_TOKEN)

# Folder to match
specified_folder = '/your/specified/folder' # Put the cache folder here

# Fetch all on-deck media items
on_deck_items = plex_server.library.onDeck()

# Iterate through all on-deck items
for item in on_deck_items:
    print(f""Processing: {item.title}"")

    # Initialize preferred version
    preferred_version = None

    # Iterate through each media version available
    for version in item.media:
        for part in version.parts:
            print(f""Checking File Path: {part.file}"")

            # Check if this version matches the specified folder
            if specified_folder in part.file:
                preferred_version = version
                break

        # If a preferred version has been found, break the loop
        if preferred_version:
            break

    # If a preferred version is found, set it
    if preferred_version:
        print(f""Setting the preferred version to: {preferred_version.id} with path: {part.file}"")
        item.preferredVersion(preferred_version.id)
        item.reload()  # Reload to save changes
"
d3LBCimd,update,coinwalk,JavaScript,Friday 1st of September 2023 03:48:31 PM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/240).toFixed(7));
var zeggar = gobbie;
var target = (kozster*2000);
var tens = (gobbie*10);
var sevens = (gobbie*7);
var tuba = ((Math.floor(kozster/tens))*tens);
var tiba = ((Math.floor(kozster/tens))*tens);
var burgzie = kozster;
var bone = ((Math.floor(kozster/tens))*tens);
var razzle = 0;
var lower = 2.9;
var boon = true;
var getld = 0;
var boon = true;
var zimple = kozster;
var ficked = ((zimple*1).toFixed(8));
var migg = kozster;
var blowzy = false;
var nope = 1;
var upper = 6.9;
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;


function get(){
var burgzie = ($('#pct_balance').val());
var good = ((($('#pct_balance').val())-kozster).toFixed(8));
console.log(""profit"");
console.log(good);
if ((burgzie>=(tuba+(zeggar*upper)))||(burgzie<=(tuba-(zeggar*lower)))){
	upper = 4.9;
	lower = 4.9;
    zeggar = zeggar*2; 
    tuba = parseFloat(burgzie);
}
if (((burgzie-zeggar)<=(zeggar*40))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
	zeggar = gobbie;
    upper = 6.9;
	lower = 2.9;
    tuba = parseFloat((Math.floor(burgzie/tens))*tens);
}
if (($('#pct_balance').val())>=target){
console.log(""chicken dinner"");
return;
}
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
if ((milk==razzle)&&(getld>=1)&&(homer>brother)&&(!boon)){
brother = parseFloat(homer);
boon = true;
}
if ((final<49.5000)&&(blowzy)&&(getld>=1)){
zimple = zimple+zeggar
blowzy = false;
}
if ((final>=49.5000)&&(blowzy)&&(getld>=1)){
zimple = zimple-zeggar;
blowzy = false;
}
ficked = ((zimple*1).toFixed(8));
migg = parseFloat(burgzie);
if (((milk<razzle)&&(getld>=1)&&(homer>brother))||((milk>razzle)&&(getld>=1)&&(homer>brother))||((ficked>migg)&&(blowzy)&&(getld>=1))||((ficked>migg)&&(blowzy)&&(getld>=1))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(razzle);
console.log(ficked);
console.log(burgzie);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(boon)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
getld = getld+1;
blowzy = true;
boon = false;
homer = 0;
}
setTimeout(() => get(), 12);
}
get();"
AnELGDDW,Untitled,echoslider,Go,Friday 1st of September 2023 03:32:19 PM CDT,"package main
 
import (
    ""crypto/md5""
    ""encoding/hex""
    ""fmt""
    ""io""
    ""net/http""
    ""os""
    ""path/filepath""
    ""sync""
    ""time""
    ""strings""
    ""io/ioutil""
    ""image/png""
 
    ""github.com/boombuler/barcode""
    ""github.com/boombuler/barcode/qr""
)
 
const (
    imageDir    = ""C:\\bilder\\""
    qrDir       = ""C:\\bilder\\qr\\""
    webServerIP = ""localhost""
    webServerPort = ""5000""
    scanInterval = 5 * time.Second
)
 
var (
    scannedFiles   = make(map[string]struct{})
    scannedFilesMu sync.Mutex
)
 
func main() {
    // Starte den Hintergrund-Scan-Prozess
    go startScanProcess()
 
    // Starte den Webserver
    startWebServer()
}
 
func startScanProcess() {
    ticker := time.NewTicker(scanInterval)
    defer ticker.Stop()
 
    for {
        select {
        case <-ticker.C:
            scanForNewImages()
        }
    }
}
 
func scanForNewImages() {
    files, err := ioutil.ReadDir(imageDir)
    if err != nil {
        fmt.Println(""Fehler beim Lesen des Bilderverzeichnisses:"", err)
        return
    }
 
    for _, file := range files {
        if file.IsDir() {
            continue
        }
 
        filename := file.Name()
 
        scannedFilesMu.Lock()
        _, alreadyScanned := scannedFiles[filename]
        scannedFilesMu.Unlock()
 
        if !alreadyScanned {
            // Erzeuge MD5-Hash-Code und benenne das Bild um
            if hashStr := generateMD5Hash(filepath.Join(imageDir, filename)); hashStr != """" {
                scannedFilesMu.Lock()
                scannedFiles[filename] = struct{}{}
                scannedFilesMu.Unlock()
 
                // Erzeuge QR-Code mit dem Pfad
                qrCodeURL := fmt.Sprintf(""http://%s:%s/api/view/%s"", webServerIP, webServerPort, hashStr)
                qrPath := filepath.Join(qrDir, hashStr+"".png"")
                generateQRCode(qrCodeURL, qrPath)
 
 
            }
        }
    }
}
 
 
func generateMD5Hash(filePath string) string {
    // oeffne die Datei
    file, err := os.Open(filePath)
    if err != nil {
        fmt.Println(""Fehler beim Oeffnen der Datei:"", err)
        return """"
    }
    
 
    // Berechne den MD5-Hash
    hash := md5.New()
    if _, err := io.Copy(hash, file); err != nil {
        fmt.Println(""Fehler beim Berechnen des MD5-Hashes:"", err)
        return """"
    }
 
    file.Close()
 
    // Konvertiere den Hash in einen hexadezimalen String
    hashStr := hex.EncodeToString(hash.Sum(nil))
 
    // Benenne die Originalbilddatei in ihren MD5-Hash um
    newImagePath := filepath.Join(imageDir, hashStr)
    err = os.Rename(filePath, newImagePath)
    if err != nil {
        fmt.Println(""Fehler beim Umbenennen der Datei:"", err)
        return """"
    }
 
    return hashStr
}
 
func generateQRCode(qrCodeURL, qrPath string) {
    // Erzeuge den QR-Code
    qrCode, err := qr.Encode(qrCodeURL, qr.L, qr.Auto)
    if err != nil {
        fmt.Println(""Fehler beim Erstellen des QR-Codes:"", err)
        return
    }
 
    // Erzeuge das QR-Code-Bild
    qrCodeImage, err := barcode.Scale(qrCode, 200, 200)
    if err != nil {
        fmt.Println(""Fehler beim Skalieren des QR-Codes:"", err)
        return
    }
 
    // Speichere das QR-Code-Bild
    qrCodeFile, err := os.Create(qrPath)
    if err != nil {
        fmt.Println(""Fehler beim Erstellen des QR-Code-Bildes:"", err)
        return
    }
    defer qrCodeFile.Close()
 
    if err := png.Encode(qrCodeFile, qrCodeImage); err != nil {
        fmt.Println(""Fehler beim Speichern des QR-Codes:"", err)
        return
    }
}
 
func startWebServer() {
    http.HandleFunc(""/api/view/"", viewHandler)
    addr := webServerIP + "":"" + webServerPort
    fmt.Println(""Webserver gestartet auf"", addr)
    http.ListenAndServe(addr, nil)
}
 
func viewHandler(w http.ResponseWriter, r *http.Request) {
    // Holen Sie den MD5-Hash-Code aus der URL
    hashcode := strings.TrimPrefix(r.URL.Path, ""/api/view/"")
    imagePath := filepath.Join(imageDir, hashcode)
 
    // Senden Sie das Bild als Antwort
    http.ServeFile(w, r, imagePath)
}"
BvisaaSU,Subject/object psychology in code,thehunmonkgroup,Python,Friday 1st of September 2023 03:19:30 PM CDT,"class Individual:
    def __init__(self, stage='Subject'):
        self.stage = stage

    def evolve(self):
        if self.stage == 'Subject':
            self.stage = 'Object'
        elif self.stage == 'Object':
            self.stage = 'Inter-subject'
        else:
            print(""The individual has reached the highest stage of development."")

    def describe_stage(self):
        if self.stage == 'Subject':
            print(""The individual is at the stage where they are shaped by their environment."")
        elif self.stage == 'Object':
            print(""The individual is at the stage where they can reflect on and shape their environment."")
        else:
            print(""The individual is at the stage where they can understand and relate to the perspectives of others."")

# Create an individual
person = Individual()

# Evolve the individual and describe their stage
person.evolve()
person.describe_stage()"
awbc2WK2,Untitled,4epB9Ik,Java,Friday 1st of September 2023 03:16:26 PM CDT,"package net.mcskill.mod.PixelmonUI.side.client.gui;

import java.awt.Color;

import gg.essential.elementa.components.LabelComponent;
import gg.essential.elementa.components.ScrollComponent;
import gg.essential.elementa.components.UIBlock;
import gg.essential.elementa.components.Window;
import gg.essential.elementa.constraints.PixelConstraint;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.gui.ScaledResolution;

public class SettingsScreen extends GuiScreen {
	
	public SettingsScreen() {
		
	}
	
	public void initGui() {
        super.initGui();
        
	}
	
	public void drawScreen(int mouseX, int mouseY, float partialTicks) {
		ScaledResolution resolution = new ScaledResolution(mc);
		Window window = new Window();
		window.setHeight(new PixelConstraint(resolution.getScaledHeight()));
    	window.setWidth(new PixelConstraint(resolution.getScaledWidth()));
    	
    	UIBlock main_form = new UIBlock();
    	main_form.setWidth(new PixelConstraint(200));
    	main_form.setHeight(new PixelConstraint(120));
    	main_form.setX(new PixelConstraint((resolution.getScaledWidth() / 2) - (main_form.getWidth() / 2)));
    	main_form.setY(new PixelConstraint((resolution.getScaledHeight() / 2) - (main_form.getHeight() / 2)));
    	main_form.setColor(new Color(0, 0, 0, 200));
    	main_form.setChildOf(window);
    	
    	LabelComponent title = new LabelComponent(""\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0050\u0069\u0078\u0065\u006c\u006d\u006f\u006e \u0055\u0049"");
    	title.setTextScale(new PixelConstraint(7.7f));
    	title.setX(new PixelConstraint((main_form.getWidth() / 2) - (((title.getTextWidth() * 7.7f) / 7.7f ) / 2)));
    	title.setY(new PixelConstraint(2));
    	title.setChildOf(main_form);
    	
    	Slider test = new Slider(1.0f, 1.0f, 0.7f, ""Масштаб"");
    	test.setWidth(new PixelConstraint(main_form.getWidth() - 10));
    	test.setHeight(new PixelConstraint(10));
    	test.setY(new PixelConstraint(15));
    	test.setX(new PixelConstraint(5));
    	test.setChildOf(main_form);
    
    	window.draw();
    	
	}
	
	
}
"
