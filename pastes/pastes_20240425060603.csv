id,title,username,language,date,content
u0S4rhFJ,Untitled,ariswb22,SQL,Thursday 25th of April 2024 01:01:32 AM CDT,"SELECT 
    [COUNTER_PARTY_ID] AS 'counter_party_id'
    ,HC.[SNAPSHOT_DATE] AS 'snapshot_date'
    ,HC.[ENTITY] AS 'entity'
    ,HC.[ORIGIN_CONTRACTID] AS 'origin_contractid'
    ,HC.[ORIGIN_COUNTER_PARTYDID] AS 'origin_counter_partydid'
    ,HC.[ORIGIN_SYSTEMID] AS 'origin_systemid'
    ,[PRODUCT_TYPE] AS 'product_type'
    ,[PRODUCT_SUBTYPE] AS 'product_subtype'
    ,[BUSINESS_UNIT] AS 'business_unit'
    ,[SEGMENT] AS 'segment'
    ,HC.[CURRENCY] AS 'currency'
    ,[MATURITY_DATE] AS 'maturity_date'
    ,[OBSERVATION_DATE] AS 'observation_date'
    ,[OUTSTANDING_AMT] AS 'outstanding_amt'
    ,[COLLECTIBILITY] AS 'collectibility'
    ,[DYS_PAST_DUE] AS 'dys_past_due'
    ,[DISCOUNT_RATE]/100 AS 'discount_rate'
    ,[DP_IND] AS 'dp_ind'
    ,[CDD_IND] AS 'cdd_ind'
    ,[IS_REPO] AS 'is_repo'
    ,CASE WHEN [IS_REPO] = 1 THEN 'true' ELSE 'false' END AS 'is_defaulted'
    ,HC.[FLAG_JF] AS 'flag_jf'
    ,HC.[BANK_JF] AS 'bank_jf'
	,HR.[RECOVERY_AMT] AS 'recovery_amt'
	,HR.[RECOVERY_DATE] AS 'recovery_date'
FROM [PSAK71_STG].[dbo].[PSAK_HISTORICAL_CONTRACT] HC
LEFT JOIN [PSAK71_STG].[dbo].[PSAK_HISTORICAL_RECOVERIES] HR 
ON HC.[ORIGIN_CONTRACTID] = HR.[ORIGIN_CONTRACTID] AND HC.[SNAPSHOT_DATE] = HR.[SNAPSHOT_DATE]
WHERE 1=1
    AND HC.[SNAPSHOT_DATE] = @ReportingDate"
xg0pBLkn,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Thursday 25th of April 2024 12:05:33 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_901528.pdf

Working as of:
25 April 2024"
swQemYu9,NodeMCU Amica RC Bluino App,andretafta,Arduino,Wednesday 24th of April 2024 11:15:38 PM CDT,"/**************** WiFi Robot Remote Control Mode ********************/
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <ArduinoOTA.h>

// connections for drive Motors
int PWM_A = D1;
int PWM_B = D2;
int DIR_A = D3;
int DIR_B = D4;

const int buzPin = D5;      // set digital pin D5 as buzzer pin (use active buzzer)
const int ledPin = D8;      // set digital pin D8 as LED pin (use super bright LED)
const int wifiLedPin = D0;  // set digital pin D0 as indication, the LED turn on if NodeMCU connected to WiFi as STA mode

String command;          // String to store app command state.
int SPEED = 1023;        // 330 - 1023.
int speed_Coeff = 3;

ESP8266WebServer server(80);      // Create a webserver object that listens for HTTP request on port 80

unsigned long previousMillis = 0;

String sta_ssid = """";      // set Wifi networks you want to connect to
String sta_password = """";  // set password for Wifi networks


void setup(){
  Serial.begin(115200);    // set up Serial library at 115200 bps
  Serial.println();
  Serial.println(""*WiFi Robot Remote Control Mode*"");
  Serial.println(""--------------------------------------"");

  pinMode(buzPin, OUTPUT);      // sets the buzzer pin as an Output
  pinMode(ledPin, OUTPUT);      // sets the LED pin as an Output
  pinMode(wifiLedPin, OUTPUT);  // sets the Wifi LED pin as an Output
  digitalWrite(buzPin, LOW);
  digitalWrite(ledPin, LOW);
  digitalWrite(wifiLedPin, HIGH);
   
  // Set all the motor control pins to outputs
  pinMode(PWM_A, OUTPUT);
  pinMode(PWM_B, OUTPUT);
  pinMode(DIR_A, OUTPUT);
  pinMode(DIR_B, OUTPUT);
 
  // Turn off motors - Initial state
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, 0);
  analogWrite(PWM_B, 0);

  // set NodeMCU Wifi hostname based on chip mac address
  String chip_id = String(ESP.getChipId(), HEX);
  int i = chip_id.length()-4;
  chip_id = chip_id.substring(i);
  chip_id = ""wificar-"" + chip_id;
  String hostname(chip_id);
 
  Serial.println();
  Serial.println(""Hostname: ""+hostname);

  // first, set NodeMCU as STA mode to connect with a Wifi network
  WiFi.mode(WIFI_STA);
  WiFi.begin(sta_ssid.c_str(), sta_password.c_str());
  Serial.println("""");
  Serial.print(""Connecting to: "");
  Serial.println(sta_ssid);
  Serial.print(""Password: "");
  Serial.println(sta_password);

  // try to connect with Wifi network about 10 seconds
  unsigned long currentMillis = millis();
  previousMillis = currentMillis;
  while (WiFi.status() != WL_CONNECTED && currentMillis - previousMillis <= 10000) {
    delay(500);
    Serial.print(""."");
    currentMillis = millis();
  }

  // if failed to connect with Wifi network set NodeMCU as AP mode
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("""");
    Serial.println(""*WiFi-STA-Mode*"");
    Serial.print(""IP: "");
    Serial.println(WiFi.localIP());
    digitalWrite(wifiLedPin, LOW);    // Wifi LED on when connected to Wifi as STA mode
    delay(3000);
  } else {
    WiFi.mode(WIFI_AP);
    WiFi.softAP(hostname.c_str());
    IPAddress myIP = WiFi.softAPIP();
    Serial.println("""");
    Serial.println(""WiFi failed connected to "" + sta_ssid);
    Serial.println("""");
    Serial.println(""*WiFi-AP-Mode*"");
    Serial.print(""AP IP address: "");
    Serial.println(myIP);
    digitalWrite(wifiLedPin, HIGH);   // Wifi LED off when status as AP mode
    delay(3000);
  }


  server.on ( ""/"", HTTP_handleRoot );       // call the 'handleRoot' function when a client requests URI ""/""
  server.onNotFound ( HTTP_handleRoot );    // when a client requests an unknown URI (i.e. something other than ""/""), call function ""handleNotFound""
  server.begin();                           // actually start the server
 
  ArduinoOTA.begin();                       // enable to receive update/uploade firmware via Wifi OTA
}


void loop() {
    ArduinoOTA.handle();          // listen for update OTA request from clients
    server.handleClient();        // listen for HTTP requests from clients
   
      command = server.arg(""State"");          // check HTPP request, if has arguments ""State"" then saved the value
      if (command == ""F"") Forward();          // check string then call a function or set a value
      else if (command == ""B"") Backward();
      else if (command == ""R"") TurnRight();
      else if (command == ""L"") TurnLeft();
      else if (command == ""G"") ForwardLeft();
      else if (command == ""H"") BackwardLeft();
      else if (command == ""I"") ForwardRight();
      else if (command == ""J"") BackwardRight();
      else if (command == ""S"") Stop();
      else if (command == ""V"") BeepHorn();
      else if (command == ""W"") TurnLightOn();
      else if (command == ""w"") TurnLightOff();
      else if (command == ""0"") SPEED = 330;
      else if (command == ""1"") SPEED = 400;
      else if (command == ""2"") SPEED = 470;
      else if (command == ""3"") SPEED = 540;
      else if (command == ""4"") SPEED = 610;
      else if (command == ""5"") SPEED = 680;
      else if (command == ""6"") SPEED = 750;
      else if (command == ""7"") SPEED = 820;
      else if (command == ""8"") SPEED = 890;
      else if (command == ""9"") SPEED = 960;
      else if (command == ""q"") SPEED = 1023;
}

// function prototypes for HTTP handlers
void HTTP_handleRoot(void){
  server.send ( 200, ""text/html"", """" );       // Send HTTP status 200 (Ok) and send some text to the browser/client
 
  if( server.hasArg(""State"") ){
     Serial.println(server.arg(""State""));
  }
}

void handleNotFound(){
  server.send(404, ""text/plain"", ""404: Not found""); // Send HTTP status 404 (Not Found) when there's no handler for the URI in the request
}

// function to move forward
void Forward(){
  digitalWrite(DIR_A, HIGH);
  digitalWrite(DIR_B, HIGH);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED);
}

// function to move backward
void Backward(){
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED);
}

// function to turn right
void TurnRight(){
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, HIGH);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED);
}

// function to turn left
void TurnLeft(){
  digitalWrite(DIR_A, HIGH);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED);
}

// function to move forward left
void ForwardLeft(){
  digitalWrite(DIR_A, HIGH);
  digitalWrite(DIR_B, HIGH);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED/speed_Coeff);
}

// function to move backward left
void BackwardLeft(){
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, SPEED);
  analogWrite(PWM_B, SPEED/speed_Coeff);
}

// function to move forward right
void ForwardRight(){
  digitalWrite(DIR_A, HIGH);
  digitalWrite(DIR_B, HIGH);
  analogWrite(PWM_A, SPEED/speed_Coeff);
  analogWrite(PWM_B, SPEED);
}

// function to move backward left
void BackwardRight(){
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, SPEED/speed_Coeff);
  analogWrite(PWM_B, SPEED);
}

// function to stop motors
void Stop(){ 
  digitalWrite(DIR_A, LOW);
  digitalWrite(DIR_B, LOW);
  analogWrite(PWM_A, 0);
  analogWrite(PWM_B, 0);
}

// function to beep a buzzer
void BeepHorn(){
  digitalWrite(buzPin, HIGH);
  delay(150);
  digitalWrite(buzPin, LOW);
  delay(80);
}

// function to turn on LED
void TurnLightOn(){
  digitalWrite(ledPin, HIGH);
}

// function to turn off LED
void TurnLightOff(){
  digitalWrite(ledPin, LOW);
} "
DahmnW27,at_command_sim7600_en_reg,mikroavr,Arduino,Wednesday 24th of April 2024 11:15:21 PM CDT,"#define RXD2 26
#define TXD2 27

#define PKEY 14
#define RST 12

#define pin_en 13

#define SerialMon Serial
#define SerialAT Serial2

int ledState = LOW;
const int ledPin =  15;
int counter = 0;

unsigned long cur_time_led, old_time_led;
unsigned long cur_time, old_time;
bool hold = 0;

#define TINY_GSM_MODEM_SIM7600
#if !defined(TINY_GSM_RX_BUFFER)
#define TINY_GSM_RX_BUFFER 650
#endif
#define TINY_GSM_DEBUG SerialMon
// set GSM PIN, if any
#define GSM_PIN """"

// Your GPRS credentials, if any
const char apn[]      = ""Internet"";
const char gprsUser[] = """";
const char gprsPass[] = """";

const char server[]   = ""vsh.pp.ua"";
const char resource[] = ""/TinyGSM/logo.txt"";
const int  port       = 80;

#include <TinyGsmClient.h>
#include <ArduinoHttpClient.h>

#ifdef DUMP_AT_COMMANDS
#include <StreamDebugger.h>
StreamDebugger debugger(SerialAT, SerialMon);
TinyGsm        modem(debugger);
#else
TinyGsm        modem(SerialAT);
#endif

TinyGsmClient client(modem);
HttpClient    http(client, server, port);


void setup() {
  // put your setup code here, to run once:
  SerialMon.begin(115200);
  SerialAT.begin(115200, SERIAL_8N1, RXD2, TXD2);
  delay(250);
  SerialMon.println(""test at mulai"");
  pinMode(ledPin, OUTPUT);
  pinMode(RST, OUTPUT);
  pinMode(PKEY, OUTPUT);
  pinMode(pin_en, OUTPUT);

  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  digitalWrite(PKEY, HIGH);
  digitalWrite(RST, HIGH);
  delay(1000);
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);

  SerialMon.println(""Initializing modem..."");
  modem.restart();
  wRespon(5000);
  if(res_cmd(""AT"",""OK"",5000)){
    Serial.println(""sim7600 on"");
  }else{
    Serial.println(""sim7600 nok"");
    digitalWrite(pin_en,HIGH);delay(1000);
    digitalWrite(pin_en,LOW); delay(1000);
    ESP.restart();
  }
  


  //bool res = modem.sendSMS(""082165062273"", ""bismillaah, ini dari saya,monitoring smart farming , testing ya"");
  //DBG(""SMS:"", res ? ""OK"" : ""fail"");
  /*SerialAT.println(""AT"");
    wRespon(1000);
    SerialAT.println(""AT+IPREX?"");
    wRespon(1000);
    SerialAT.println(""AT+IPREX=115200"");
    wRespon(1000);
    SerialAT.println(""AT&W"");
    wRespon(1000);22,21m
    SerialAT.begin(115200, SERIAL_8N1, RXD2, TXD2);
  */
}

void loop() {
  // put your main code here, to run repeatedly:
  SerialMon.println(""SEND AT"");

  cur_time_led = millis();
  if (cur_time_led - old_time_led >= 1000) {
    counter++;
    switch (counter) {
      case 1:
        send_at(""AT+CPIN?"");
        break;
      case 2:
        send_at(""AT+CSQ"");
        break;
      case 3:
        send_at(""AT+CPSI?"");
        break;
      case 4:
        send_at(""ATI"");
        break;
      case 5:
        send_at(""AT+IPR?"");
        counter = 0;
        break;
    }

    if (ledState == LOW) {
      ledState = HIGH;
    } else {
      ledState = LOW;
    }

    digitalWrite(ledPin, ledState);
    old_time_led = cur_time_led;
  }
}

void send_at(char *_command) {
  SerialAT.println(_command);
  wRespon(1000);
}

void wRespon(long waktu) {
  cur_time = millis();
  old_time = cur_time;
  while (cur_time - old_time < waktu ) {
    cur_time = millis();
    while (SerialAT.available() > 0) {
      SerialMon.print(SerialAT.readString());
    }
  }
}


void reset_sim() {
  digitalWrite(RST, HIGH);
}

void wakeup_sim() {
  SerialMon.println(""wakeup sim7600"");
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  digitalWrite(PKEY, HIGH);
  digitalWrite(RST, HIGH);
  delay(1000);
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  wRespon(15000);
}

int8_t res_cmd(char* ATcommand, char* expected_answer, unsigned int timeout) {
  uint8_t x = 0, answer = 0;
  char response[100];
  unsigned long prevMillis;
  memset(response, '\0', 100);
  delay(100);

  while (SerialAT.available() > 0)SerialAT.read();
  SerialAT.println(ATcommand);
  prevMillis = millis();
  do {
    if (SerialAT.available() != 0) {
      response[x] = SerialAT.read();
      x++;
      if (strstr(response, expected_answer) != NULL) {
        answer = 1;
      }
    }
  } while ((answer == 0) && ((millis() - prevMillis) < timeout));
  return answer;
}"
bwdzPGZP,index.php,Dominikus_22,PHP,Wednesday 24th of April 2024 10:36:32 PM CDT,"<?php include 'koneksi.php';
session_start() ?>
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>UKK 2024 | Website Galeri Foto</title>
    <link rel=""stylesheet"" href=""assets/css/bootstrap.min.css"">
    <link rel=""stylesheet"" href=""assets/css/style.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"" integrity=""sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer"" />
</head>
<body>
    <nav class=""navbar navbar-expand-lg navbar-dark bg-primary"">
        <div class=""container"">
            <a class=""navbar-brand"" href=""?url=home"">Gallery Foto</a>
            <button class=""navbar-toggler"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#navbarNavAltMarkup"" aria-controls=""navbarNavAltMarkup"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                <span class=""navbar-toggler-icon""></span>
            </button>
            <div class=""collapse navbar-collapse"" id=""navbarNavAltMarkup"">
                <div class=""navbar-nav"">
                    <a class=""nav-link"" href=""?url=home"">Home</a>
                    <?php if (isset($_SESSION['user_id'])) : ?>
                        <a class=""nav-link"" href=""?url=upload"">Upload</a>
                        <a class=""nav-link"" href=""?url=album"">Album</a>
                        <a class=""nav-link"" href=""?url=profile""><?= ucwords($_SESSION['username']) ?></a>
                        <a href=""?url=logout"" class=""nav-link"">Logout</a>
                    <?php else : ?>
                        <a class=""nav-link"" href=""login.php"">Login</a>
                        <a class=""nav-link"" href=""daftar.php"">Daftar</a>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </nav>
    <?php
    $url = @$_GET[""url""];
    if ($url == 'home') {
        include 'page/home.php';
    } elseif ($url == 'profile') {
        include 'page/profil.php';
    } else if ($url == 'upload') {
        include 'page/upload.php';
    } else if ($url == 'album') {
        include 'page/album.php';
    } else if ($url == 'like') {
        include 'page/like.php';
    } else if ($url == 'komentar') {
        include 'page/komentar.php';
    } else if ($url == 'detail') {
        include 'page/detail.php';
    } else if ($url == 'kategori') {
        include 'page/kategori.php';
    } else if ($url == 'logout') {
        session_destroy();
        header(""Location: ?url=home"");
    } else {
        include 'page/home.php';
    }
    ?>
    <script src=""assets/js/bootstrap.bundle.min.js""></script>
    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
    <div class=""col-xl-12"">
        <p class=""copy_right text-center"">
            <!-- Bagian Dari Footer -->
            Copyright &copy;UKK SMKN 11 Malang Tahun Ajaran <?php echo date('Y') ?> All rights reserved | <i class=""fa fa-heart-o"" aria-hidden=""true""></i>Author by Dominikus Tripuspa Mahardika | <a href=""https://www.instagram.com/zeapplefjx_dika/?igsh=M2R2aDZ0dXI3aTFr"" target=""_blank"">INSTAGRAM : @zeapplefjx_dika</a>
            <!-- Bagian Dari Footer -->
        </p>
    </div>
</body>
</html>"
C0fr0uCs,daftar.php,Dominikus_22,PHP,Wednesday 24th of April 2024 10:35:04 PM CDT,"<?php include 'koneksi.php'; ?>
<!DOCTYPE html>
<html lang=""en"">

<head>
   <meta charset=""UTF-8"">
   <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
   <title>UKK 2024 | Website Galeri Foto</title>
   <link rel=""stylesheet"" href=""assets/css/bootstrap.min.css"">
   <link rel=""stylesheet"" href=""assets/css/style.css"">
</head>
<body class=""bg-danger"">
   <div class=""container"">
      <div class=""row justify-content-center align-items-center vh-100"">
         <div class=""col-5"">
            <div class=""card"">
               <div class=""card-body"">
                  <h4 class=""card-title"">Halaman Daftar</h4>
                  <p class=""card-title"">Daftar Akun</p>
                  <?php
                  //ambil data yang di kirim kan oleh <form> dengan method post
                  $submit = @$_POST['submit'];
                  if ($submit == 'Daftar') {
                     $username = @$_POST['username'];
                     $password = md5(@$_POST['password']);
                     $email = @$_POST['email'];
                     $nama_lengkap = @$_POST['nama_lengkap'];
                     $alamat = @$_POST['alamat'];
                     //cek apakah ada username dan email yang sama
                     //jika ada yang sama maka daftar akan gagal karena username atau email sudah di pakai orang lain
                     $cek = mysqli_num_rows(mysqli_query($conn, ""SELECT * FROM user WHERE Username='$username' OR Email='$email' ""));
                     if ($cek == 0) {
                        mysqli_query($conn, ""INSERT INTO user VALUES('','$username','$password','$email','$nama_lengkap','$alamat')"");
                        echo ""<script> alert('Daftar Berhasil, Silahkan Login!!')</script>"";
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=login.php"">';
                     } else {
                        echo ""<script> alert('Maaf Akun Yang Anda Masukan Sudah Ada!!')</script>"";
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=daftar.php"">';
                     }
                  }
                  ?>
                  <form action=""daftar.php"" method=""post"">
                     <div class=""form-group"">
                        <label>Username</label>
                        <input type=""text"" class=""form-control"" name=""username"" required>
                     </div>
                     <div class=""form-group"">
                        <label>Password</label>
                        <input type=""password"" class=""form-control"" name=""password"" required>
                     </div>
                     <div class=""form-group"">
                        <label>Email</label>
                        <input type=""email"" class=""form-control"" name=""email"" required>
                     </div>
                     <div class=""form-group"">
                        <label>Nama Lengkap</label>
                        <input type=""text"" class=""form-control"" name=""nama_lengkap"" required>
                     </div>
                     <div class=""form-group"">
                        <label>Alamat</label>
                        <input type=""text"" class=""form-control"" name=""alamat"" required>
                     </div>
                     <input type=""submit"" value=""Daftar"" class=""btn btn-danger my-3"" name=""submit"">
                     <p>Sudah Punya Akun? <a href=""login.php"" class=""link-danger"">Login Sekarang</a></p>
                  </form>
               </div>
            </div>
         </div>
      </div>
   </div>
   <script src=""assets/js/bootstrap.bundle.min.js""></script>
   <div class=""col-xl-12"">
      <p class=""copy_right text-center"">
         <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
         Copyright &copy; All rights reserved | <i class=""fa fa-heart-o"" aria-hidden=""true""></i> by <a href=""https://www.instagram.com/zeapplefjx_dika/?igsh=M2R2aDZ0dXI3aTFr"" target=""_blank"">IG : zeapplefjx_dika</a>
         <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
      </p>
   </div>
</body>
</html>"
bAsuJ8jv,login.php,Dominikus_22,PHP,Wednesday 24th of April 2024 10:34:02 PM CDT,"<?php include 'koneksi.php';
session_start() ?>
<!DOCTYPE html>
<html lang=""en"">
<head>
   <meta charset=""UTF-8"">
   <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
   <title>UKK 2024 | Website Galeri Foto</title>
   <link rel=""stylesheet"" href=""assets/css/bootstrap.min.css"">
   <link rel=""stylesheet"" href=""assets/css/style.css"">
</head>
<body class=""bg-danger"">
   <div class=""container"">
      <div class=""row justify-content-center align-items-center vh-100"">
         <div class=""col-5"">
            <div class=""card"">
               <div class=""card-body"">
                  <h4 class=""card-title"">Halaman Login</h4>
                  <p class=""card-title"">Login Akun</p>
                  <?php
                  //ambil data yang di kirim kan oleh <form> dengan method post
                  $submit = @$_POST['submit'];
                  if ($submit == 'Login') {
                     $username = $_POST['username'];
                     $password = md5($_POST['password']);
                     //cek apakah username dan password yang di masukan ke dalam <input> ada di database
                     $sql = mysqli_query($conn, ""SELECT * FROM user WHERE Username='$username' AND Password='$password'"");
                     $cek = mysqli_num_rows($sql);
                     if ($cek != 0) {
                        //ambil data dari database untuk membuat session
                        $sesi = mysqli_fetch_array($sql);
                        echo ""<script> alert('Login Berhasil!!')</script>"";
                        $_SESSION['username'] = $sesi['Username'];
                        $_SESSION['user_id'] = $sesi['UserID'];
                        $_SESSION['email'] = $sesi['Email'];
                        $_SESSION['nama_lengkap'] = $sesi['NamaLengkap'];
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=./"">';
                     } else {
                        echo ""<script> alert('Login Gagal!!')</script>"";
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=login.php"">';
                     }
                  }
                  ?>
                  <form action=""login.php"" method=""post"">
                     <div class=""form-group"">
                        <label>Username</label>
                        <input type=""text"" class=""form-control"" name=""username"" required>
                     </div>
                     <div class=""form-group"">
                        <label>Password</label>
                        <input type=""password"" class=""form-control"" name=""password"" required>
                     </div>
                     <input type=""submit"" value=""Login"" class=""btn btn-danger my-3"" name=""submit"">
                     <p>Belum Punya Akun? <a href=""daftar.php"" class=""link-danger"">Daftar Sekarang</a></p>
                  </form>
               </div>
            </div>
         </div>
      </div>
   </div>
   <script src=""assets/js/bootstrap.bundle.min.js""></script>
   <div class=""col-xl-12"">
      <p class=""copy_right text-center"">
         <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
         Copyright &copy; All rights reserved | <i class=""fa fa-heart-o"" aria-hidden=""true""></i> by <a href=""https://www.instagram.com/zeapplefjx_dika/?igsh=M2R2aDZ0dXI3aTFr"" target=""_blank"">IG : zeapplefjx_dika</a>
         <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
      </p>
   </div>
</body>
</html>"
rSMxypR0,profil.php,Dominikus_22,PHP,Wednesday 24th of April 2024 10:32:57 PM CDT,"<div class=""container"">
    <div class=""row justify-content-center"">
        <div class=""col-7"">
            <div class=""card"">
                <div class=""card-body"">
                    <h2>Halaman Profile</h2>
                    <?php
                    $user = mysqli_fetch_array(mysqli_query($conn, ""SELECT * FROM user WHERE UserID='{$_SESSION['user_id']}'""));
                    if (isset($_POST['editprofile'])) {
                        $nama = $_POST['nama'];
                        $email = $_POST['email'];
                        $username = $_POST['username'];
                        $alamat = $_POST['alamat'];
                        if (isset($username) && isset($email)) {
                            if ($username == $user['Username'] && $email == $user['Email'] && $alamat == $user['Alamat']) {
                                $ubah = mysqli_query($conn, ""UPDATE user SET NamaLengkap='$nama' WHERE UserID='$_SESSION[user_id]'"");
                                $session = mysqli_fetch_array(mysqli_query($conn, ""SELECT * FROM user WHERE UserID='$_SESSION[user_id]'""));
                                if ($ubah) {
                                    $_SESSION['userid'] = $session['UserID'];
                                    $_SESSION['username'] = $session['Username'];
                                    $_SESSION['namalengkap'] = $session['NamaLengkap'];
                                    $_SESSION['email'] = $session['Email'];
                                    $alert = 'Ubah nama berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                } else {
                                    $alert = 'Ubah nama gagal';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                }
                            } else if ($username == $user['Username'] && $email == $user['Email'] && $nama == $user['NamaLengkap']) {
                                $ubah = mysqli_query($conn, ""UPDATE user SET Alamat='$alamat' WHERE UserID='$_SESSION[user_id]'"");
                                if ($ubah) {
                                    $alert = 'Ubah alamat berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                } else {
                                    $alert = 'Ubah alamat berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                }
                            } else if ($username == $user['Username'] && $alamat == $user['Alamat'] && $nama == $user['NamaLengkap']) {
                                $ubah = mysqli_query($conn, ""UPDATE user SET Email='$email' WHERE UserID='$_SESSION[user_id]'"");
                                $session = mysqli_fetch_array(mysqli_query($conn, ""SELECT * FROM user WHERE UserID='$_SESSION[user_id]'""));
                                if ($ubah) {
                                    $_SESSION['userid'] = $session['UserID'];
                                    $_SESSION['username'] = $session['Username'];
                                    $_SESSION['namalengkap'] = $session['NamaLengkap'];
                                    $_SESSION['email'] = $session['Email'];
                                    $alert = 'Ubah email berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                } else {
                                    $alert = 'Ubah email berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                }
                            } else if ($email == $user['Email'] && $alamat == $user['Alamat'] && $nama == $user['NamaLengkap']) {
                                $ubah = mysqli_query($conn, ""UPDATE user SET Username='$username' WHERE UserID='$_SESSION[user_id]'"");
                                $session = mysqli_fetch_array(mysqli_query($conn, ""SELECT * FROM user WHERE UserID='$_SESSION[user_id]'""));
                                if ($ubah) {
                                    $_SESSION['userid'] = $session['UserID'];
                                    $_SESSION['username'] = $session['Username'];
                                    $_SESSION['namalengkap'] = $session['NamaLengkap'];
                                    $_SESSION['email'] = $session['Email'];
                                    $alert = 'Ubah username berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                } else {
                                    $alert = 'Ubah username berhasil';
                                    echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editprofile"">';
                                }
                            }
                        }
                    } else if (isset($_POST['editpassword'])) {
                        $password = md5($_POST['password']);
                        if ($password != $user['Password']) {
                            $ubah = mysqli_query($conn, ""UPDATE user SET Password='$password' WHERE UserID='$_SESSION[user_id]'"");
                            if ($ubah) {
                                $alert = 'Ubah password berhasil';
                                echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editpassword"">';
                            } else {
                                $alert = 'Ubah password gagal';
                                echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=profile&&proses=editpassword"">';
                            }
                        }
                    }
                    ?>
                    <?php echo @$alert;
                    if (@$_GET['proses'] == 'editprofile') : ?>
                        <form action=""?url=profile&&proses=editprofile"" method=""post"">
                            <div class=""input-group mb-3"">
                                <label for=""nama"" class=""input-group-text""><i class=""fa-solid fa-circle-user fa-fw fa-lg""></i></label>
                                <input type=""text"" class=""form-control"" value=""<?= $user['NamaLengkap'] ?>"" id=""nama"" name=""nama"" required placeholder=""Masukan Nama Lengkap"">
                            </div>
                            <div class=""input-group mb-3"">
                                <label for=""email"" class=""input-group-text""><i class=""fa-solid fa-envelope fa-fw fa-lg""></i></label>
                                <input type=""email"" class=""form-control"" value=""<?= $user['Email'] ?>"" id=""email"" name=""email"" required placeholder=""Masukan Email Anda"">
                            </div>
                            <div class=""input-group mb-3"">
                                <label for=""username"" class=""input-group-text""><i class=""fa-solid fa-at fa-fw fa-lg""></i></label>
                                <input type=""text"" class=""form-control"" value=""<?= $user['Username'] ?>"" id=""username"" name=""username"" required placeholder=""Masukan Username"">
                            </div>
                            <div class=""input-group mb-4"">
                                <label for=""alamat"" class=""input-group-text""><i class=""fa-solid fa-address-book fa-fw fa-lg""></i></label>
                                <input type=""text"" class=""form-control"" id=""alamat"" value=""<?= $user['Alamat'] ?>"" name=""alamat"" required placeholder=""Masukan Alamat Lengkap"">
                            </div>
                            <a href=""?url=profile"" class=""btn btn-dark fw-semibold"">Kembali</a>
                            <input type=""submit"" value=""Simpan Perubahan"" name=""editprofile"" class=""btn btn-primary fw-semibold"">
                        </form>
                    <?php elseif (@$_GET['proses'] == 'editpassword') : ?>
                        <form action=""?url=profile&&proses=editpassword"" method=""post"">
                            <div class=""input-group mb-4"">
                                <label for=""password"" class=""input-group-text""><i class=""fa-solid fa-lock fa-fw fa-lg""></i></label>
                                <input type=""password"" class=""form-control"" id=""password"" name=""password"" required placeholder=""Masukan Password Baru"">
                            </div>
                            <a href=""?url=profile"" class=""btn btn-dark fw-semibold"">Kembali</a>
                            <input type=""submit"" value=""Simpan Perubahan"" name=""editpassword"" class=""btn btn-primary fw-semibold"">
                        </form>
                    <?php else : ?>
                        <div class=""table-responsive"">
                            <table class=""table table-white table-hover"">
                                <tr>
                                    <th style=""width: 20%;"" class=""py-3"">Nama Lengkap</th>
                                    <td class=""py-3 text-muted""><?= $user['NamaLengkap'] ?></td>
                                </tr>
                                <tr>
                                    <th style=""width: 20%;"" class=""py-3"">Email</th>
                                    <td class=""py-3 text-muted""><?= $user['Email'] ?></td>
                                </tr>
                                <tr>
                                    <th style=""width: 20%;"" class=""py-3"">Username</th>
                                    <td class=""py-3 text-muted""><?= $user['Username'] ?></td>
                                </tr>
                                <tr>
                                    <th style=""width: 20%;"" class=""py-3"">Alamat</th>
                                    <td class=""py-3 text-muted""><?= $user['Alamat'] ?></td>
                                </tr>
                            </table>
                        </div>
                        <a href=""?url=profile&&proses=editprofile"" class=""btn btn-danger"">Edit Profil</a>
                        <a href=""?url=profile&&proses=editpassword"" class=""btn btn-primary"">Edit Password</a>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </div>
</div>"
2X1QDpKe,album.php,Dominikus_22,PHP,Wednesday 24th of April 2024 10:31:20 PM CDT,"<div class=""container"">
   <div class=""row"">
      <div class=""col-5"">
         <div class=""card"">
            <div class=""card-body"">
               <h4>Halaman Album</h4>
               <?php
               //ambil data yang di kirim oleh <form>
               $submit = @$_POST['submit'];
               $albumID = @$_GET['albumid'];
               if ($submit == 'Simpan') {
                  $nama_album = @$_POST['nama_album'];
                  $deskripsi_album = @$_POST['deskripsi_album'];
                  $tanggal = date('Y-m-d');
                  $user_id = @$_SESSION['user_id'];
                  $insert = mysqli_query($conn, ""INSERT INTO album VALUES('','$nama_album','$deskripsi_album','$tanggal','$user_id')"");
                  if ($insert) {
                     echo ""<script> alert('Berhasil Membuat Album!!!')</script>"";
                     echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                  } else {
                     echo ""<script> alert('Gagal Membuat Album!!!')</script>"";
                     echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                  }
               } elseif (isset($_GET['edit'])) {
                  if ($submit == 'Ubah') {
                     $nama_album = @$_POST['nama_album'];
                     $deskripsi_album = @$_POST['deskripsi_album'];
                     $tanggal = date('Y-m-d');
                     $user_id = @$_SESSION['user_id'];
                     $update = mysqli_query($conn, ""UPDATE album SET NamaAlbum='$nama_album', Deskripsi='$deskripsi_album' WHERE AlbumID='$albumID'"");
                     if ($update) {
                        echo ""<script> alert('Berhasil Mengubah Album!!!')</script>"";
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                     } else {
                        echo ""<script> alert('Gagal Mengubah Album!!!')</script>"";
                        echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                     }
                  }
               } elseif (isset($_GET['hapus'])) {
                  $hapus = mysqli_query($conn, ""DELETE FROM album WHERE AlbumID='$albumID'"");
                  if ($hapus) {
                     echo ""<script> alert('Berhasil Hapus Album!!!')</script>"";
                     echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                  } else {
                     echo ""<script> alert('Gagagl Menghapus Album!!!')</script>"";
                     echo '<meta http-equiv=""refresh"" content=""0.8; url=?url=album"">';
                  }
               }
               $val = mysqli_fetch_array(mysqli_query($conn, ""SELECT * FROM album WHERE AlbumID='$albumID' ""));
               ?>
               <?php if (!isset($_GET['edit'])) : ?>
                  <form action=""?url=album"" method=""post"">
                     <div class=""form-group"">
                        <label>Nama Album</label>
                        <input type=""text"" class=""form-control"" required name=""nama_album"">
                     </div>
                     <div class=""form-group"">
                        <label>Deskripsi Album</label>
                        <textarea name=""deskripsi_album"" class=""form-control"" required cols=""30"" rows=""5""></textarea>
                     </div>
                     <input type=""submit"" value=""Simpan"" name=""submit"" class=""btn btn-danger my-3"">
                  </form>
               <?php elseif (isset($_GET['edit'])) : ?>
                  <form action=""?url=album&&edit&&albumid=<?= $val['AlbumID'] ?>"" method=""post"">
                     <div class=""form-group"">
                        <label>Nama Album</label>
                        <input type=""text"" class=""form-control"" value=""<?= $val['NamaAlbum'] ?>"" required name=""nama_album"">
                     </div>
                     <div class=""form-group"">
                        <label>Deskripsi Album</label>
                        <textarea name=""deskripsi_album"" class=""form-control"" required cols=""30"" rows=""5""><?= $val['Deskripsi'] ?></textarea>
                     </div>
                     <input type=""submit"" value=""Ubah"" name=""submit"" class=""btn btn-danger my-3"">
                  </form>
               <?php endif; ?>
            </div>
         </div>
      </div>
      <div class=""col-7"">
         <div class=""card"">
            <div class=""card-body"">
               <table class=""table table-hovered"">
                  <thead>
                     <tr>
                        <th>No</th>
                        <th>Nama Album</th>
                        <th>Deskripsi Album</th>
                        <th>Tanggal Dibuat</th>
                        <th>Aksi</th>
                     </tr>
                  </thead>
                  <tbody>
                     <?php
                     $i = 1;
                     $userid = @$_SESSION['user_id'];
                     $albums = mysqli_query($conn, ""SELECT * FROM album WHERE UserID='$userid'"");
                     foreach ($albums as $album) :
                     ?>
                        <tr>
                           <td><?= $i++ ?></td>
                           <td><?= $album['NamaAlbum'] ?></td>
                           <td><?= $album['Deskripsi'] ?></td>
                           <td><?= $album['TanggalDibuat'] ?></td>
                           <td>
                              <a href=""?url=album&&edit&&albumid=<?= $album['AlbumID'] ?>"" class=""btn btn-sm btn-warning"">Edit</a>
                              <a href=""?url=album&&hapus&&albumid=<?= $album['AlbumID'] ?>"" class=""btn btn-sm btn-danger"">Hapus</a>
                              <a href=""?url=kategori&&albumid=<?= $album['AlbumID'] ?>"" class=""btn btn-sm btn-success"">Lihat Foto</a>
                           </td>
                        </tr>
                     <?php endforeach; ?>
                  </tbody>
               </table>
            </div>
         </div>
      </div>
   </div>
</div>"
tfCqq2QV,LC净化脚本,Huxulm,JavaScript,Wednesday 24th of April 2024 10:09:59 PM CDT,"// ==UserScript==
// @name         隐藏元素
// @namespace    http://tampermonkey.net/
// @version      2024-04-23
// @description  try to take over the world!
// @author       You
// @match        https://leetcode.cn/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=leetcode.cn
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const hides = [
        'a[class=""mb-0.5 flex items-center mr-8""]', // brand
        'ul[class=""relative mr-2 flex h-10 items-center""]',// brand
        'a[class=""-mr-2 md:mr-0""]', // 推荐
        'div[class=""mt-8""]', // 学习计划
        'div[class=""-mr-2 md:mr-0""]', // 学习计划
        'div[class=""col-span-4 md:col-span-1""]', // 侧边栏
        'footer',
    ];
    var fn = () => {
        hides.forEach(function(v) {
            const node = document.querySelector(v);
            if (node && node.style) {
                node.style.display = ""none"";
            }
        })
    };

    [500, 1000, 3000].forEach(t => setTimeout(fn, t));
    setInterval(fn, 10000);
})();"
avD1uTdn,HA earthquake alert automation,xangin,YAML,Wednesday 24th of April 2024 09:41:21 PM CDT,"- id: '1714012413709'
  alias: earthquake_automation
  description: 地震預報通知
  mode: single
  trigger:
  - platform: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: trigger_ea_command
  condition: []
  action:
  - variables:
      lv: '{{ trigger.json.level[:1] | int }}'
      time: '{{ trigger.json.seconds }}'
  - alias: Line通知
    service: notify.line_notify
    data:
      message: 警告!{{ lv }}級地震將在{{ time }}秒後抵達
"
Wv8Zypwq,Untitled,Mysoft,FreeBasic,Wednesday 24th of April 2024 09:31:45 PM CDT,"#include ""crt.bi""

function WildMatch( sWildText as string , sCompare as string , iCaseSensitive as boolean = false ) as boolean
  dim as integer iTxt, iCmp
  
  'if any of them is empty... then result is direct
  if sCompare[0] = 0 then return false  
  do
    var iCT = sWildText[iTxt] : iTxt += 1
    var iCC = sCompare[iCmp] : iCmp += 1 
    'print iTxt-1;"" "";chr(iCT),iCmp-1;"" "";chr(iCC)
    select case iCT
    case 0        : return iCC=0 'once it text reachs end.. it's a success
    case asc(""^""),asc(""~"") 'white space (at least 1, at least 0)
      dim as long iNum = 0
      do
        select case iCC
        case asc("" ""),asc(!""\r""),asc(!""\n""),asc(!""\t"") 
          iNum += 1 : iCC = sCompare[iCmp] : iCmp += 1
        case else
          if iCT=asc(""^"") andalso iNum=0 then return false 'must at least have one blank
          iCmp -= 1 : continue do,do 'continue repeating same char
        end select
      loop          
    case asc(""?"") : 'if it's a single char wild
      'we're done if reached end of comparsion
      'and it will be true if next wildtext is also done
      if iCC=0 then return sWildText[iTxt]=0        
    case asc(""*"")       
      var iCT2 = sWildText[iTxt]
      'if matching anything after then it will be true if it's the end of wildtext
      if iCT2 = 0 then return true
      'if is not another wildcard then must continue checking
      if iCT2 <> asc(""?"") andalso iCT2 <> asc(""*"") then         
        'if end of compare text happened then it's false!
        if iCC = 0 then return false
        'if found matching char then continue matching
        if iCT2 = asc(""^"") orelse asc(""~"") then
          select case iCC
          case asc("" ""),asc(!""\r""),asc(!""\n""),asc(!""\t"") 
            iCmp -= 1 : continue do
          end select
        elseif iCaseSensitive then
          if iCC=iCT2 then iTxt += 1: continue do
        else
          if ToLower(iCC)=ToLower(iCT2) then iTxt += 1: continue do
        end if
        'otherwise goes back on wildtext (to compare against *) again
        iTxt -= 1 : continue do
      end if
      'next is also a wildcard, so we will process that
    case else 'is a direct comparsion... 
      'if compare string finished or didnt match then we failed
      if iCC=0 then return false
      if iCaseSensitive then
        if iCC<>iCT then return false
      else
        if ToLower(iCC)<>ToLower(iCT) then return false
      end if
    end select
  loop
end function

#define WildMatchTest(_A,_B,_C...) WildMatch(_A,_B,_C),""'"" _A ""'"", ""'"" _B ""'""
print ""Expected"",""Result"",""WildCards"",""Comparsion""
print string(60,""-"")
print true,  WildMatchTest(""Hello"",""Hello"")
print false, WildMatchTest(""Hell"",""Hello"")
print false, WildMatchTest(""Hello"",""Hell"")
print false, WildMatchTest(""Hello"",""HELLO"",true)
print false, WildMatchTest(""Hello"",""World"")
print true,  WildMatchTest(""B?n"",""Bin"")
print true,  WildMatchTest(""b?n"",""Ben"")
print false, WildMatchTest(""B?n"",""Bem"")
print true,  WildMatchTest(""*us"",""jealous"")
print false, WildMatchTest(""*us"",""jealously"")
print true,  WildMatchTest(""Bang*"",""Bangaloo"")
print false, WildMatchTest(""Leap*"",""lip"")
print false, WildMatchTest(""Bi*us"",""Binocculus"") 'want this to be true?
print true,  WildMatchTest(""Bi*us"",""Binocc?lus"")
print true,  wildMatchTest(""*cup*"",""Porcupine"")
print true,  WildMatchTest(""*Hi*Ta*"",""Hippopotamus"")
print true,  WildMatchTest("" Hello"",!""\t \t Hello"")
print false, WildMatchTest("" Hello"",""Hello"")
print true,  WildMatchTest(""~Hello~;"","" Hello;"")
print true,  WildMatchTest(""*~Hello;"",!""World\t Hello;"")
print true,  WildMatchTest(""*^Hello;"",!""World Hello;"")
print false,  WildMatchTest(""*~Hello;"",""WorldHello;"")

sleep
"
RdZ67mxW,new Earthquake shell script,xangin,Bash,Wednesday 24th of April 2024 08:43:29 PM CDT,"#!/bin/bash
#將全部內容複製後，另存為ea.sh，之後在地牛wake up中選擇此檔案執行，
#需要先安裝curl指令:sudo apt install curl
#修改成自己HA的IP:PORT，注意等號左右不能有空格唷!!
DST=http://192.168.xxx.xxx:8123
 
curl -X POST \
  -H ""Content-Type: application/json"" \
  -d ""{ \""level\"": \""$1\"" , \""seconds\"": \""$2\"" }"" \
  $DST/api/webhook/trigger_ea_command
 "
KZeKXKtL,SNN,aurko96,Python,Wednesday 24th of April 2024 08:34:34 PM CDT,"from keras.datasets import mnist
from brian2 import *
import brian2.numpy_ as np
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

# Load MNIST dataset
(X_train, y_train), (X_test, y_test) = mnist.load_data()

# # Simplified classification (0, 1, and 8)
# X_train = X_train[(y_train == 1) | (y_train == 0) | (y_train == 8)]
# y_train = y_train[(y_train == 1) | (y_train == 0) | (y_train == 8)]
# X_test = X_test[(y_test == 1) | (y_test == 0) | (y_test == 8)]
# y_test = y_test[(y_test == 1) | (y_test == 0) | (y_test == 8)]

# Pixel intensity to firing rate (255 becomes ~63Hz)
X_train = X_train / 4 
X_test = X_test / 4

# Flatten the images
X_train = X_train.reshape(X_train.shape[0], -1)
X_test = X_test.reshape(X_test.shape[0], -1)

# Define SNN parameters
n_input = 28*28  # Input layer
n_e = 100        # Excitatory neurons
n_i = n_e        # Inhibitory neurons

v_rest_e = -60.*mV  # Membrane potential
v_reset_e = -65.*mV
v_thresh_e = -52.*mV

v_rest_i = -60.*mV
v_reset_i = -45.*mV
v_thresh_i = -40.*mV

taupre = 20*ms
taupost = taupre
gmax = .05
dApre = .01
dApost = -dApre * taupre / taupost * 1.05
dApost *= gmax 
dApre *= gmax 

# Define STDP equations
stdp_eqs = '''
    w : 1
    lr : 1 (shared)
    dApre/dt = -Apre / taupre : 1 (event-driven)
    dApost/dt = -Apost / taupost : 1 (event-driven)'''

# Pre-synaptic spike update
stdp_pre = '''
    ge += w
    Apre += dApre
    w = clip(w + lr*Apost, 0, gmax)'''

# Post-synaptic spike update
stdp_post = '''
    Apost += dApost
    w = clip(w + lr*Apre, 0, gmax)'''

class Model():
    
    def __init__(self):
        # Input Poisson Group
        self.PG = PoissonGroup(n_input, rates=np.zeros(n_input)*Hz, name='PG')
        
        # Excitatory Neuron Group
        self.EG = NeuronGroup(n_e, '''
            dv/dt = (ge*(0*mV-v) + gi*(-100*mV-v) + (v_rest_e-v)) / (100*ms) : volt
            dge/dt = -ge / (5*ms) : 1
            dgi/dt = -gi / (10*ms) : 1
            ''',
            threshold='v>v_thresh_e', refractory=5*ms, reset='v=v_reset_e', method='euler', name='EG')
        self.EG.v = v_rest_e - 20.*mV
        
        # Inhibitory Neuron Group
        self.IG = NeuronGroup(n_i, '''
            dv/dt = (ge*(0*mV-v) + (v_rest_i-v)) / (10*ms) : volt
            dge/dt = -ge / (5*ms) : 1
            ''',
            threshold='v>v_thresh_i', refractory=2*ms, reset='v=v_reset_i', method='euler', name='IG')
        self.IG.v = v_rest_i - 20.*mV
        
        # Synapses between Poisson Group and Excitatory Neurons
        self.S1 = Synapses(self.PG, self.EG, stdp_eqs, on_pre=stdp_pre, on_post=stdp_post, method='euler', name='S1')
        self.S1.connect()
        self.S1.w = 'rand()*gmax'  # Random weights initialization
        self.S1.lr = 1               # Enable STDP
        
        # Synapses between Excitatory and Inhibitory Neurons
        self.S2 = Synapses(self.EG, self.IG, 'w : 1', on_pre='ge += w', name='S2')
        self.S2.connect(j='i')
        self.S2.delay = 'rand()*10*ms'
        self.S2.w = 3                # Very strong fixed weights
        
        # Synapses between Inhibitory and Excitatory Neurons
        self.S3 = Synapses(self.IG, self.EG, 'w : 1', on_pre='gi += w', name='S3')
        self.S3.connect(condition='i!=j')
        self.S3.delay = 'rand()*5*ms'
        self.S3.w = .03              # Balanced weights
        
        # Initialize Brian2 Network
        self.net = Network(self.PG, self.EG, self.IG, self.S1, self.S2, self.S3)
        self.net.run(0*second)
        
    def train(self, X, epoch=1):        
        self.S1.lr = 1  # Enable STDP
        
        for ep in range(epoch):
            for idx in range(len(X)):
                # Active mode
                self.PG.rates = X[idx].ravel()*Hz
                self.net.run(0.35*second)

                # Passive mode
                self.PG.rates = np.zeros(n_input)*Hz
                self.net.run(0.15*second)
        
    def evaluate(self, X):       
        self.S1.lr = 0  # Disable STDP
        
        features = []
        for idx in range(len(X)):
            # Rate monitor to count spikes
            mon = SpikeMonitor(self.EG, name='RM')
            self.net.add(mon)
            
            # Active mode
            self.PG.rates = X[idx].ravel()*Hz
            self.net.run(0.35*second)
            
            # Spikes per neuron for each image
            features.append(np.array(mon.count, dtype=int8))
            
            # Passive mode
            self.PG.rates = np.zeros(n_input)*Hz
            self.net.run(0.15*second)
            
            self.net.remove(self.net['RM'])
            
        return features


import seaborn as sns

# Test the SNN model with evaluation metrics and confusion matrix plotting
def test_snn(train_items=500, assign_items=100, eval_items=100):
    seed(0)
    
    model = Model()
    model.train(X_train[:train_items], epoch=1)
    
    train_features = model.evaluate(X_train[:assign_items])
    test_features = model.evaluate(X_test[:eval_items])
    
    # Perform classification using a simple thresholding method
    threshold = 10  # Example threshold value
    train_predictions = [1 if np.sum(f) > threshold else 0 for f in train_features]
    test_predictions = [1 if np.sum(f) > threshold else 0 for f in test_features]
    
#     # Perform classification using argmax to determine the predicted class
#     train_predictions = np.argmax(train_features, axis=1)
#     test_predictions = np.argmax(test_features, axis=1)
    
    # Calculate evaluation metrics
    train_accuracy = accuracy_score(y_train[:assign_items], train_predictions)
    test_accuracy = accuracy_score(y_test[:eval_items], test_predictions)
    
    train_precision = precision_score(y_train[:assign_items], train_predictions, average='weighted')
    test_precision = precision_score(y_test[:eval_items], test_predictions, average='weighted')
    
    train_recall = recall_score(y_train[:assign_items], train_predictions, average='weighted')
    test_recall = recall_score(y_test[:eval_items], test_predictions, average='weighted')
    
    train_f1 = f1_score(y_train[:assign_items], train_predictions, average='weighted')
    test_f1 = f1_score(y_test[:eval_items], test_predictions, average='weighted')
    
    train_confusion_matrix = confusion_matrix(y_train[:assign_items], train_predictions)
    test_confusion_matrix = confusion_matrix(y_test[:eval_items], test_predictions)
    
    print(""Train Accuracy:"", train_accuracy)
    print(""Test Accuracy:"", test_accuracy)
    
    print(""Train Precision:"", train_precision)
    print(""Test Precision:"", test_precision)
    
    print(""Train Recall:"", train_recall)
    print(""Test Recall:"", test_recall)
    
    print(""Train F1 Score:"", train_f1)
    print(""Test F1 Score:"", test_f1)
    
    print(""Train Confusion Matrix:\n"", train_confusion_matrix)
    print(""Test Confusion Matrix:\n"", test_confusion_matrix)
    
    # Plot confusion matrices
    plot_confusion_matrix(train_confusion_matrix, np.arange(10)) # np.arange(10)
    plot_confusion_matrix(test_confusion_matrix, np.arange(10)) # np.arange(10)
    
    return train_features, test_features

# Function to plot confusion matrix
def plot_confusion_matrix(confusion_matrix, labels):
    plt.figure(figsize=(10, 8))
    sns.heatmap(confusion_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=labels, yticklabels=labels)
    plt.xlabel('Predicted Labels')
    plt.ylabel('True Labels')
    plt.title('Confusion Matrix')
    plt.show()

# Example usage
train_features, test_features = test_snn(train_items=500, assign_items=100, eval_items=100)"
FSPxHWq5,SNN-RandomForest,aurko96,Python,Wednesday 24th of April 2024 08:33:28 PM CDT,"from keras.datasets import mnist
from brian2 import *
import brian2.numpy_ as np
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix
import seaborn as sns

(X_train, y_train), (X_test, y_test) = mnist.load_data()

# pixel intensity to Hz (255 becoms ~63Hz)
X_train = X_train / 4 
X_test = X_test / 4

X_train.shape, X_test.shape

plt.figure(figsize=(16,8))
for img in range(32):
    plt.subplot(4,8,1+img)
    plt.title(y_train[img])
    plt.imshow(X_train[img])
    plt.axis('off')

n_input = 28*28 # input layer
n_e = 100 # e - excitatory
n_i = n_e # i - inhibitory

v_rest_e = -60.*mV # v - membrane potential
v_reset_e = -65.*mV
v_thresh_e = -52.*mV

v_rest_i = -60.*mV
v_reset_i = -45.*mV
v_thresh_i = -40.*mV

taupre = 20*ms
taupost = taupre
gmax = .05 #.01
dApre = .01
dApost = -dApre * taupre / taupost * 1.05
dApost *= gmax 
dApre *= gmax 

# Apre and Apost - presynaptic and postsynaptic traces, lr - learning rate
stdp='''w : 1
    lr : 1 (shared)
    dApre/dt = -Apre / taupre : 1 (event-driven)
    dApost/dt = -Apost / taupost : 1 (event-driven)'''
pre='''ge += w
    Apre += dApre
    w = clip(w + lr*Apost, 0, gmax)'''
post='''Apost += dApost
    w = clip(w + lr*Apre, 0, gmax)'''

class Model():
    
    def __init__(self, debug=False):
        app = {}
                
        # input images as rate encoded Poisson generators
        app['PG'] = PoissonGroup(n_input, rates=np.zeros(n_input)*Hz, name='PG')
        
        # excitatory group
        neuron_e = '''
            dv/dt = (ge*(0*mV-v) + gi*(-100*mV-v) + (v_rest_e-v)) / (100*ms) : volt
            dge/dt = -ge / (5*ms) : 1
            dgi/dt = -gi / (10*ms) : 1
            '''
        app['EG'] = NeuronGroup(n_e, neuron_e, threshold='v>v_thresh_e', refractory=5*ms, reset='v=v_reset_e', method='euler', name='EG')
        app['EG'].v = v_rest_e - 20.*mV
        
        if (debug):
            app['ESP'] = SpikeMonitor(app['EG'], name='ESP')
            app['ESM'] = StateMonitor(app['EG'], ['v'], record=True, name='ESM')
            app['ERM'] = PopulationRateMonitor(app['EG'], name='ERM')
        
        # ibhibitory group
        neuron_i = '''
            dv/dt = (ge*(0*mV-v) + (v_rest_i-v)) / (10*ms) : volt
            dge/dt = -ge / (5*ms) : 1
            '''
        app['IG'] = NeuronGroup(n_i, neuron_i, threshold='v>v_thresh_i', refractory=2*ms, reset='v=v_reset_i', method='euler', name='IG')
        app['IG'].v = v_rest_i - 20.*mV

        if (debug):
            app['ISP'] = SpikeMonitor(app['IG'], name='ISP')
            app['ISM'] = StateMonitor(app['IG'], ['v'], record=True, name='ISM')
            app['IRM'] = PopulationRateMonitor(app['IG'], name='IRM')
        
        # poisson generators one-to-all excitatory neurons with plastic connections 
        app['S1'] = Synapses(app['PG'], app['EG'], stdp, on_pre=pre, on_post=post, method='euler', name='S1')
        app['S1'].connect()
        app['S1'].w = 'rand()*gmax' # random weights initialisation
        app['S1'].lr = 1 # enable stdp        
        
        if (debug):
            # some synapses
            app['S1M'] = StateMonitor(app['S1'], ['w', 'Apre', 'Apost'], record=app['S1'][380,:4], name='S1M') 
        
        # excitatory neurons one-to-one inhibitory neurons
        app['S2'] = Synapses(app['EG'], app['IG'], 'w : 1', on_pre='ge += w', name='S2')
        app['S2'].connect(j='i')
        app['S2'].delay = 'rand()*10*ms'
        app['S2'].w = 3 # very strong fixed weights to ensure corresponding inhibitory neuron will always fire

        # inhibitory neurons one-to-all-except-one excitatory neurons
        app['S3'] = Synapses(app['IG'], app['EG'], 'w : 1', on_pre='gi += w', name='S3')
        app['S3'].connect(condition='i!=j')
        app['S3'].delay = 'rand()*5*ms'
        app['S3'].w = .03 # weights are selected in such a way as to maintain a balance between excitation and ibhibition
        
        self.net = Network(app.values())
        self.net.run(0*second)
        
    def __getitem__(self, key):
        return self.net[key]
    
    def train(self, X, epoch=1):        
        self.net['S1'].lr = 1 # stdp on
        
        for ep in range(epoch):
            for idx in range(len(X)):
                # active mode
                self.net['PG'].rates = X[idx].ravel()*Hz
                self.net.run(0.35*second)

                # passive mode
                self.net['PG'].rates = np.zeros(n_input)*Hz
                self.net.run(0.15*second)
        
    def evaluate(self, X):       
        self.net['S1'].lr = 0  # stdp off
        
        features = []
        for idx in range(len(X)):
            # rate monitor to count spikes
            mon = SpikeMonitor(self.net['EG'], name='RM')
            self.net.add(mon)
            
            # active mode
            self.net['PG'].rates = X[idx].ravel()*Hz
            self.net.run(0.35*second)
            
            # spikes per neuron foreach image
            features.append(np.array(mon.count, dtype=int8))
            
            # passive mode
            self.net['PG'].rates = np.zeros(n_input)*Hz
            self.net.run(0.15*second)
            
            self.net.remove(self.net['RM'])
            
        return features

def plot_w(S1M):
    plt.rcParams[""figure.figsize""] = (20,10)
    subplot(311)
    plot(S1M.t/ms, S1M.w.T/gmax)
    ylabel('w / wmax')
    subplot(312)
    plot(S1M.t/ms, S1M.Apre.T)
    ylabel('apre')
    subplot(313)
    plot(S1M.t/ms, S1M.Apost.T)
    ylabel('apost')
    tight_layout()
    show();
    
def plot_v(ESM, ISM, neuron=13):
    plt.rcParams[""figure.figsize""] = (20,6)
    cnt = -50000 # tail
    plot(ESM.t[cnt:]/ms, ESM.v[neuron][cnt:]/mV, label='exc', color='r')
    plot(ISM.t[cnt:]/ms, ISM.v[neuron][cnt:]/mV, label='inh', color='b')
    plt.axhline(y=v_thresh_e/mV, color='pink', label='v_thresh_e')
    plt.axhline(y=v_thresh_i/mV, color='silver', label='v_thresh_i')
    legend()
    ylabel('v')
    show();
    
def plot_rates(ERM, IRM):
    plt.rcParams[""figure.figsize""] = (20,6)
    plot(ERM.t/ms, ERM.smooth_rate(window='flat', width=0.1*ms)*Hz, color='r')
    plot(IRM.t/ms, IRM.smooth_rate(window='flat', width=0.1*ms)*Hz, color='b')
    ylabel('Rate')
    show();
    
def plot_spikes(ESP, ISP):
    plt.rcParams[""figure.figsize""] = (20,6)
    plot(ESP.t/ms, ESP.i, '.r')
    plot(ISP.t/ms, ISP.i, '.b')
    ylabel('Neuron index')
    show();

def test0(train_items=30):
    '''
    STDP visualisation
    '''
    seed(0)
    
    model = Model(debug=True)
    model.train(X_train[:train_items], epoch=1)
    
    plot_w(model['S1M'])
    plot_v(model['ESM'], model['ISM'])
    plot_rates(model['ERM'], model['IRM'])
    plot_spikes(model['ESP'], model['ISP'])
    
test0()

def test1(train_items=500, assign_items=100, eval_items=100):
    '''
    Feed train set to SNN with STDP
    Freeze STDP
    Feed train set to SNN again and collect generated features
    Train RandomForest on the top of these features and labels provided
    Feed test set to SNN and collect new features
    Predict labels with RandomForest and calculate accuacy score
    '''
    seed(0)
    
    model = Model()
    model.train(X_train[:train_items], epoch=1)
    model.net.store('train', 'train.b2')
    #model.net.restore('train', './train.b2')
    
    f_train = model.evaluate(X_train[:assign_items])
    clf = RandomForestClassifier(max_depth=4, random_state=0)
    clf.fit(f_train, y_train[:assign_items])
    print(clf.score(f_train, y_train[:assign_items]))

    f_test = model.evaluate(X_test[:eval_items])
    y_pred = clf.predict(f_test)
    print(accuracy_score(y_pred, y_test[:eval_items]))

#     cm = confusion_matrix(y_pred, y_test[:eval_items])
#     print(cm)
    
    
    
#     # Calculate evaluation metrics
#     train_accuracy = accuracy_score(y_train[:assign_items], train_predictions)
    test_accuracy = accuracy_score(y_test[:eval_items], y_pred)
    
#     train_precision = precision_score(y_train[:assign_items], train_predictions, average='weighted')
    test_precision = precision_score(y_test[:eval_items], y_pred, average='weighted')
    
#     train_recall = recall_score(y_train[:assign_items], train_predictions, average='weighted')
    test_recall = recall_score(y_test[:eval_items], y_pred, average='weighted')
    
#     train_f1 = f1_score(y_train[:assign_items], train_predictions, average='weighted')
    test_f1 = f1_score(y_test[:eval_items], y_pred, average='weighted')
    
#     train_confusion_matrix = confusion_matrix(y_train[:assign_items], train_predictions)
    test_confusion_matrix = confusion_matrix(y_test[:eval_items], y_pred)
    
#     print(""Train Accuracy:"", train_accuracy)
    print(""Test Accuracy:"", test_accuracy)
    
#     print(""Train Precision:"", train_precision)
    print(""Test Precision:"", test_precision)
    
#     print(""Train Recall:"", train_recall)
    print(""Test Recall:"", test_recall)
    
#     print(""Train F1 Score:"", train_f1)
    print(""Test F1 Score:"", test_f1)
    
#     print(""Train Confusion Matrix:\n"", train_confusion_matrix)
    print(""Test Confusion Matrix:\n"", test_confusion_matrix)
    
    # Plot confusion matrices
#     plot_confusion_matrix(train_confusion_matrix, np.arange(10)) # np.arange(10)
    plot_confusion_matrix(test_confusion_matrix, np.arange(10)) # np.arange(10)
    
    # Function to plot confusion matrix
def plot_confusion_matrix(confusion_matrix, labels):
    plt.figure(figsize=(10, 8))
    sns.heatmap(confusion_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=labels, yticklabels=labels)
    plt.xlabel('Predicted Labels')
    plt.ylabel('True Labels')
    plt.title('Confusion Matrix')
    plt.show()
    
    
test1()"
REwSxh0U,CNN-RNN,aurko96,Python,Wednesday 24th of April 2024 08:31:08 PM CDT,"# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, SimpleRNN
from tensorflow.keras.utils import to_categorical
from sklearn.metrics import precision_score, recall_score, f1_score, confusion_matrix
import seaborn as sns
from brian2 import *

# Load MNIST dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Preprocess the data
x_train = x_train.reshape(x_train.shape[0], 28, 28, 1).astype('float32') / 255
x_test = x_test.reshape(x_test.shape[0], 28, 28, 1).astype('float32') / 255
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

num_classes = 10

# Define the CNN model
cnn_model = Sequential([
    Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D(pool_size=(2, 2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

cnn_model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the CNN model
cnn_history = cnn_model.fit(x_train, y_train, batch_size=128, epochs=20, validation_split=0.1)

# Evaluate the CNN model
cnn_loss, cnn_accuracy = cnn_model.evaluate(x_test, y_test)
cnn_predictions = cnn_model.predict(x_test)
cnn_predictions = np.argmax(cnn_predictions, axis=1)
cnn_true_labels = np.argmax(y_test, axis=1)

cnn_precision = precision_score(cnn_true_labels, cnn_predictions, average='weighted')
cnn_recall = recall_score(cnn_true_labels, cnn_predictions, average='weighted')
cnn_f1 = f1_score(cnn_true_labels, cnn_predictions, average='weighted')
cnn_conf_matrix = confusion_matrix(cnn_true_labels, cnn_predictions)

print(f'CNN Test Accuracy: {cnn_accuracy}')
print(f'CNN Precision: {cnn_precision}')
print(f'CNN Recall: {cnn_recall}')
print(f'CNN F1 Score: {cnn_f1}')

# Plot confusion matrix for CNN
plt.figure(figsize=(8, 6))
sns.heatmap(cnn_conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=range(num_classes), yticklabels=range(num_classes))
plt.title('Confusion Matrix - CNN')
plt.xlabel('Predicted')
plt.ylabel('True')
plt.show()

# Define the RNN model
rnn_model = Sequential([
    SimpleRNN(128, input_shape=(28, 28), activation='relu', return_sequences=False),
    Dense(10, activation='softmax')
])

rnn_model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the RNN model
rnn_history = rnn_model.fit(x_train, y_train, batch_size=128, epochs=20, validation_split=0.1)

# Evaluate the RNN model
rnn_loss, rnn_accuracy = rnn_model.evaluate(x_test, y_test)
rnn_predictions = rnn_model.predict(x_test)
rnn_predictions = np.argmax(rnn_predictions, axis=1)
rnn_true_labels = np.argmax(y_test, axis=1)

rnn_precision = precision_score(rnn_true_labels, rnn_predictions, average='weighted')
rnn_recall = recall_score(rnn_true_labels, rnn_predictions, average='weighted')
rnn_f1 = f1_score(rnn_true_labels, rnn_predictions, average='weighted')
rnn_conf_matrix = confusion_matrix(rnn_true_labels, rnn_predictions)

print(f'RNN Test Accuracy: {rnn_accuracy}')
print(f'RNN Precision: {rnn_precision}')
print(f'RNN Recall: {rnn_recall}')
print(f'RNN F1 Score: {rnn_f1}')

# Plot confusion matrix for RNN
plt.figure(figsize=(8, 6))
sns.heatmap(rnn_conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=range(num_classes), yticklabels=range(num_classes))
plt.title('Confusion Matrix - RNN')
plt.xlabel('Predicted')
plt.ylabel('True')
plt.show()

# Plot training history for CNN and RNN
plt.plot(cnn_history.history['accuracy'], label='CNN Train Accuracy')
plt.plot(cnn_history.history['val_accuracy'], label='CNN Validation Accuracy')
plt.plot(rnn_history.history['accuracy'], label='RNN Train Accuracy')
plt.plot(rnn_history.history['val_accuracy'], label='RNN Validation Accuracy')
plt.title('CNN and RNN Model Training History')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()
plt.show()

"
2gyAAeD4,Untitled,Mysoft,FreeBasic,Wednesday 24th of April 2024 07:54:47 PM CDT,"#include ""crt.bi""

function WildMatch( sWildText as string , sCompare as string , iCaseSensitive as boolean = false ) as boolean
  dim as integer iTxt, iCmp
  
  'if any of them is empty... then result is direct
  if sCompare[0] = 0 then return false  
  do
    var iCT = sWildText[iTxt] : iTxt += 1
    var iCC = sCompare[iCmp] : iCmp += 1 
    'print iTxt-1;"" "";chr(iCT),iCmp-1;"" "";chr(iCC)
    select case iCT
    case 0        : return iCC=0 'once it text reachs end.. it's a success
    case asc("" ""),asc(""~"") 'white space (at least 1, at least 0)
      dim as long iNum = 0
      do
        select case iCC
        case asc("" ""),asc(!""\r""),asc(!""\n""),asc(!""\t"") 
          iNum += 1 : iCC = sCompare[iCmp] : iCmp += 1
        case else
          if iCT=asc("" "") andalso iNum=0 then return false 'must at least have one blank
          iCmp -= 1 : continue do,do 'continue repeating same char
        end select
      loop          
    case asc(""?"") : 'if it's a single char wild
      'we're done if reached end of comparsion
      'and it will be true if next wildtext is also done
      if iCC=0 then return sWildText[iTxt]=0        
    case asc(""*"")       
      var iCT2 = sWildText[iTxt]
      'if matching anything after then it will be true if it's the end of wildtext
      if iCT2 = 0 then return true
      'if is not another wildcard then must continue checking
      if iCT2 <> asc(""?"") andalso iCT2 <> asc(""*"") then         
        'if end of compare text happened then it's false!
        if iCC = 0 then return false
        'if found matching char then continue matching
        if iCT2 = asc("" "") orelse asc(""~"") then
          select case iCC
          case asc("" ""),asc(!""\r""),asc(!""\n""),asc(!""\t"") 
            continue do
          end select
        elseif iCaseSensitive then
          if iCC=iCT2 then iTxt += 1: continue do
        else
          if ToLower(iCC)=ToLower(iCT2) then iTxt += 1: continue do
        end if
        'otherwise goes back on wildtext (to compare against *) again
        iTxt -= 1 : continue do
      end if
      'next is also a wildcard, so we will process that
    case else 'is a direct comparsion... 
      'if compare string finished or didnt match then we failed
      if iCC=0 then return false
      if iCaseSensitive then
        if iCC<>iCT then return false
      else
        if ToLower(iCC)<>ToLower(iCT) then return false
      end if
    end select
  loop
end function

#define WildMatchTest(_A,_B,_C...) WildMatch(_A,_B,_C),""'"" _A ""'"", ""'"" _B ""'""
print ""Expected"",""Result"",""WildCards"",""Comparsion""
print string(60,""-"")
print true,  WildMatchTest(""Hello"",""Hello"")
print false, WildMatchTest(""Hell"",""Hello"")
print false, WildMatchTest(""Hello"",""Hell"")
print false, WildMatchTest(""Hello"",""HELLO"",true)
print false, WildMatchTest(""Hello"",""World"")
print true,  WildMatchTest(""B?n"",""Bin"")
print true,  WildMatchTest(""b?n"",""Ben"")
print false, WildMatchTest(""B?n"",""Bem"")
print true,  WildMatchTest(""*us"",""jealous"")
print false, WildMatchTest(""*us"",""jealously"")
print true,  WildMatchTest(""Bang*"",""Bangaloo"")
print false, WildMatchTest(""Leap*"",""lip"")
print false, WildMatchTest(""Bi*us"",""Binocculus"") 'want this to be true?
print true,  WildMatchTest(""Bi*us"",""Binocc?lus"")
print true,  wildMatchTest(""*cup*"",""Porcupine"")
print true,  WildMatchTest(""*Hi*Ta*"",""Hippopotamus"")
print true,  WildMatchTest("" Hello"",!""\t \t Hello"")
print false, WildMatchTest("" Hello"",""Hello"")
print true,  WildMatchTest(""~Hello~;"","" Hello;"")
print true,  WildMatchTest(""*~Hello;"",!""World\t Hello;"")
print false,  WildMatchTest(""*~Hello;"",""WorldHello;"")

sleep
"
repYJNVi,News April24 24,Newscaster_Ned,Email,Wednesday 24th of April 2024 07:19:43 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎

T‎i‎m‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎n‎ ‎u‎p‎d‎a‎t‎e‎ ‎o‎n‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎h‎a‎p‎p‎y‎ ‎a‎n‎d‎ ‎u‎p‎l‎i‎f‎t‎i‎n‎g‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎i‎n‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎

B‎i‎d‎e‎n‎'‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎:‎ ‎E‎c‎u‎a‎d‎o‎r‎a‎n‎ ‎M‎a‎n‎ ‎V‎i‎s‎i‎t‎s‎ ‎U‎.‎S‎.‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎B‎e‎i‎n‎g‎ ‎W‎a‎n‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎
S‎C‎O‎T‎U‎S‎ ‎S‎e‎e‎m‎s‎ ‎S‎p‎l‎i‎t‎ ‎o‎n‎ ‎B‎i‎d‎e‎n‎ ‎M‎a‎n‎d‎a‎t‎i‎n‎g‎ ‎E‎R‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎s‎
P‎A‎ ‎G‎o‎v‎.‎ ‎S‎h‎a‎p‎i‎r‎o‎:‎ ‎S‎c‎h‎o‎o‎l‎s‎ ‎'‎O‎u‎t‎ ‎o‎f‎ ‎C‎o‎n‎t‎r‎o‎l‎,‎'‎ ‎A‎l‎l‎o‎w‎i‎n‎g‎ ‎R‎u‎l‎e‎s‎ ‎t‎o‎ ‎B‎e‎ ‎B‎r‎o‎k‎e‎n‎
P‎A‎ ‎G‎o‎v‎.‎ ‎S‎h‎a‎p‎i‎r‎o‎:‎ ‎L‎e‎f‎t‎i‎e‎s‎ ‎O‎p‎p‎o‎s‎e‎d‎ ‎t‎o‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎E‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎W‎i‎l‎l‎ ‎B‎a‎c‎k‎ ‎t‎o‎ ‎B‎i‎d‎e‎n‎
S‎e‎n‎a‎t‎o‎r‎s‎ ‎C‎a‎l‎l‎ ‎O‎n‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎t‎o‎ ‎H‎i‎k‎e‎ ‎A‎l‎u‎m‎i‎n‎u‎m‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎t‎o‎ ‎S‎a‎v‎e‎ ‎U‎.‎S‎.‎ ‎J‎o‎b‎s‎
B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎ ‎S‎e‎c‎r‎e‎t‎l‎y‎ ‎S‎h‎i‎p‎p‎e‎d‎ ‎L‎o‎n‎g‎-‎R‎a‎n‎g‎e‎ ‎M‎i‎s‎s‎i‎l‎e‎s‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎i‎n‎ ‎M‎a‎r‎c‎h‎
'‎A‎l‎l‎ ‎A‎b‎o‎u‎t‎ ‎T‎h‎e‎m‎'‎:‎ ‎T‎o‎m‎ ‎B‎r‎a‎d‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎T‎o‎d‎a‎y‎'‎s‎ ‎A‎t‎h‎l‎e‎t‎e‎s‎ ‎T‎o‎o‎ ‎S‎e‎l‎f‎-‎A‎b‎s‎o‎r‎b‎e‎d‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
B‎i‎d‎e‎n‎ ‎C‎o‎n‎j‎u‎r‎e‎s‎ ‎O‎r‎w‎e‎l‎l‎’‎s‎ ‎1‎9‎8‎4‎ ‎N‎e‎w‎s‎p‎e‎a‎k‎

’‎I‎t‎’‎s‎ ‎a‎ ‎G‎o‎o‎d‎ ‎D‎a‎y‎ ‎f‎o‎r‎ ‎W‎o‎r‎l‎d‎ ‎P‎e‎a‎c‎e‎’‎ ‎A‎f‎t‎e‎r‎ ‎A‎p‎p‎r‎o‎v‎i‎n‎g‎ ‎M‎a‎s‎s‎i‎v‎e‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎C‎a‎c‎h‎e‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎
U‎.‎S‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎(‎R‎)‎ ‎w‎e‎l‎c‎o‎m‎e‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎V‎o‎l‎o‎d‎y‎m‎y‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎W‎h‎i‎t‎e‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎s‎u‎g‎g‎e‎s‎t‎e‎d‎ ‎w‎a‎r‎ ‎i‎s‎ ‎p‎e‎a‎c‎e‎ ‎o‎n‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎ ‎a‎f‎t‎e‎r‎ ‎h‎e‎ ‎s‎i‎g‎n‎e‎d‎ ‎l‎e‎g‎i‎s‎l‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎p‎r‎o‎v‎i‎d‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎t‎h‎e‎ ‎f‎u‎n‎d‎s‎ ‎t‎o‎ ‎c‎o‎n‎d‎u‎c‎t‎ ‎a‎ ‎w‎a‎r‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎R‎u‎s‎s‎i‎a‎.‎

T‎e‎l‎e‎p‎r‎o‎m‎p‎t‎e‎r‎ ‎B‎a‎t‎t‎l‎e‎s‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎8‎1‎,‎ ‎S‎a‎y‎s‎ ‎‘‎P‎a‎u‎s‎e‎’‎ ‎I‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎P‎a‎u‎s‎i‎n‎g‎ ‎f‎o‎r‎ ‎A‎p‎p‎l‎a‎u‎s‎e‎
T‎e‎l‎e‎p‎r‎o‎m‎p‎t‎e‎r‎ ‎W‎o‎e‎s‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎'‎P‎a‎u‎s‎e‎'‎ ‎I‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎P‎a‎u‎s‎i‎n‎g‎ ‎f‎o‎r‎ ‎A‎p‎p‎l‎a‎u‎s‎e‎
6‎8‎6‎
P‎o‎p‎ ‎S‎e‎n‎s‎a‎t‎i‎o‎n‎ ‎B‎i‎l‎l‎i‎e‎ ‎E‎i‎l‎i‎s‎h‎:‎ ‎I‎’‎v‎e‎ ‎B‎e‎e‎n‎ ‎i‎n‎ ‎L‎o‎v‎e‎ ‎W‎i‎t‎h‎ ‎G‎i‎r‎l‎s‎ ‎M‎y‎ ‎W‎h‎o‎l‎e‎ ‎L‎i‎f‎e‎,‎ ‎R‎e‎c‎e‎n‎t‎l‎y‎ ‎R‎e‎a‎l‎i‎z‎e‎d‎ ‎‘‎I‎ ‎W‎
P‎o‎p‎ ‎S‎t‎a‎r‎ ‎B‎i‎l‎l‎i‎e‎ ‎E‎i‎l‎i‎s‎h‎:‎ ‎'‎I‎'‎v‎e‎ ‎B‎e‎e‎n‎ ‎i‎n‎ ‎L‎o‎v‎e‎ ‎W‎i‎t‎h‎ ‎G‎i‎r‎l‎s‎ ‎f‎o‎r‎ ‎M‎y‎ ‎W‎h‎o‎l‎e‎ ‎L‎i‎f‎e‎'‎
4‎5‎2‎
N‎o‎l‎t‎e‎:‎ ‎W‎i‎l‎l‎i‎a‎m‎ ‎S‎h‎a‎t‎n‎e‎r‎ ‎U‎n‎d‎e‎r‎ ‎F‎i‎r‎e‎ ‎f‎o‎r‎ ‎‘‎A‎I‎-‎G‎e‎n‎e‎r‎a‎t‎e‎d‎’‎ ‎A‎l‎b‎u‎m‎ ‎C‎o‎v‎e‎r‎
N‎o‎l‎t‎e‎:‎ ‎W‎i‎l‎l‎i‎a‎m‎ ‎S‎h‎a‎t‎n‎e‎r‎ ‎U‎n‎d‎e‎r‎ ‎F‎i‎r‎e‎ ‎f‎o‎r‎ ‎‘‎A‎I‎-‎G‎e‎n‎e‎r‎a‎t‎e‎d‎’‎ ‎A‎l‎b‎u‎m‎ ‎C‎o‎v‎e‎r‎
1‎7‎2‎
N‎o‎l‎t‎e‎:‎ ‎E‎l‎i‎t‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎B‎r‎e‎e‎d‎ ‎t‎h‎e‎ ‎N‎e‎w‎ ‎H‎i‎t‎l‎e‎r‎ ‎Y‎o‎u‎t‎h‎
N‎o‎l‎t‎e‎:‎ ‎E‎l‎i‎t‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎B‎r‎e‎e‎d‎ ‎t‎h‎e‎ ‎N‎e‎w‎ ‎H‎i‎t‎l‎e‎r‎ ‎Y‎o‎u‎t‎h‎
4‎,‎4‎2‎4‎
P‎o‎l‎l‎:‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎e‎p‎ ‎U‎n‎d‎e‎r‎w‎a‎t‎e‎r‎ ‎o‎n‎ ‎T‎o‎p‎ ‎I‎s‎s‎u‎e‎s‎ ‎o‎f‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎,‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎
P‎o‎l‎l‎:‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎e‎p‎ ‎U‎n‎d‎e‎r‎w‎a‎t‎e‎r‎ ‎o‎n‎ ‎T‎o‎p‎ ‎I‎s‎s‎u‎e‎s‎ ‎o‎f‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎,‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎
2‎2‎7‎
F‎B‎I‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎C‎h‎r‎i‎s‎t‎o‎p‎h‎e‎r‎ ‎W‎r‎a‎y‎ ‎C‎o‎n‎c‎e‎r‎n‎e‎d‎ ‎A‎b‎o‎u‎t‎ ‎‘‎S‎o‎m‎e‎ ‎K‎i‎n‎d‎ ‎o‎f‎ ‎C‎o‎o‎r‎d‎i‎n‎a‎t‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎’‎ ‎o‎n‎ ‎H‎o‎m‎e‎
F‎B‎I‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎C‎o‎n‎c‎e‎r‎n‎e‎d‎ ‎A‎b‎o‎u‎t‎ ‎'‎S‎o‎m‎e‎ ‎K‎i‎n‎d‎ ‎o‎f‎ ‎C‎o‎o‎r‎d‎i‎n‎a‎t‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎'‎ ‎o‎n‎ ‎U‎.‎S‎.‎
1‎,‎1‎6‎2‎
G‎a‎g‎ ‎O‎r‎d‎e‎r‎ ‎H‎e‎a‎r‎i‎n‎g‎:‎ ‎J‎u‎d‎g‎e‎ ‎M‎e‎r‎c‎h‎a‎n‎ ‎C‎o‎u‎l‎d‎ ‎S‎e‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎J‎a‎i‎l‎ ‎f‎o‎r‎ ‎u‎p‎ ‎t‎o‎ ‎3‎0‎ ‎D‎a‎y‎s‎
J‎u‎d‎g‎e‎ ‎M‎e‎r‎c‎h‎a‎n‎ ‎C‎o‎u‎l‎d‎ ‎S‎e‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎J‎a‎i‎l‎ ‎f‎o‎r‎ ‎U‎p‎ ‎t‎o‎ ‎3‎0‎ ‎D‎a‎y‎s‎ ‎f‎o‎r‎ ‎G‎a‎g‎ ‎O‎r‎d‎e‎r‎
6‎,‎0‎6‎7‎
P‎a‎u‎l‎ ‎R‎y‎a‎n‎ ‎P‎r‎a‎i‎s‎e‎s‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎f‎o‎r‎ ‎A‎l‎l‎o‎w‎i‎n‎g‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎t‎o‎ ‎S‎e‎i‎z‎e‎ ‎H‎o‎u‎s‎e‎ ‎
P‎a‎u‎l‎ ‎R‎y‎a‎n‎ ‎P‎r‎a‎i‎s‎e‎s‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎f‎o‎r‎ ‎A‎l‎l‎o‎w‎i‎n‎g‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎t‎o‎ ‎S‎e‎i‎z‎e‎ ‎H‎o‎u‎s‎e‎ ‎
4‎,‎5‎0‎4‎
R‎e‎p‎o‎r‎t‎:‎ ‎C‎o‎p‎s‎ ‎S‎t‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎T‎r‎u‎m‎p‎ ‎—‎ ‎N‎Y‎P‎D‎ ‎U‎s‎e‎s‎ ‎D‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎ ‎t‎o‎ ‎B‎l‎o‎c‎k‎ ‎M‎e‎d‎i‎a‎ ‎F‎i‎l‎m‎i‎n‎g‎ ‎E‎n‎t‎r‎a‎n‎c‎e‎,‎ ‎E‎x‎i‎t‎ ‎f‎r‎
C‎o‎p‎s‎ ‎S‎t‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎T‎r‎u‎m‎p‎:‎ ‎N‎Y‎P‎D‎ ‎U‎s‎e‎s‎ ‎D‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎ ‎t‎o‎ ‎B‎l‎o‎c‎k‎ ‎M‎e‎d‎i‎a‎ ‎F‎i‎l‎m‎i‎n‎g‎ ‎E‎n‎t‎r‎a‎n‎c‎e‎
1‎,‎0‎6‎0‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎C‎o‎u‎l‎d‎ ‎S‎a‎v‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎f‎r‎o‎m‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎G‎O‎P‎ ‎O‎u‎s‎t‎e‎r‎ ‎E‎f‎f‎o‎r‎t‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎C‎o‎u‎l‎d‎ ‎S‎a‎v‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎f‎r‎o‎m‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎G‎O‎P‎ ‎O‎u‎s‎t‎e‎r‎ ‎E‎f‎f‎o‎r‎t‎

N‎e‎g‎r‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎D‎a‎y‎t‎o‎n‎a‎ ‎B‎e‎a‎c‎h‎,‎ ‎L‎e‎a‎v‎i‎n‎g‎ ‎H‎i‎m‎ ‎P‎a‎r‎a‎l‎y‎z‎e‎d‎.‎

A‎n‎d‎ ‎h‎i‎s‎ ‎s‎t‎u‎p‎i‎d‎ ‎G‎u‎i‎d‎o‎ ‎h‎a‎i‎r‎c‎u‎t‎ ‎f‎r‎i‎e‎n‎d‎ ‎h‎e‎l‎p‎e‎d‎ ‎h‎i‎m‎ ‎o‎u‎t‎.‎


B‎a‎b‎o‎o‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎N‎i‎g‎l‎e‎t‎ ‎M‎u‎l‎a‎t‎t‎o‎ ‎S‎o‎n‎.‎


M‎o‎n‎k‎e‎y‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎H‎e‎r‎ ‎M‎o‎m‎ ‎i‎n‎ ‎L‎o‎n‎g‎v‎i‎e‎w‎.‎


G‎o‎r‎i‎l‎l‎a‎ ‎W‎h‎o‎ ‎W‎h‎i‎p‎p‎e‎d‎ ‎H‎i‎s‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎S‎e‎t‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎s‎ ‎A‎b‎l‎a‎z‎e‎ ‎G‎e‎t‎s‎ ‎F‎u‎r‎t‎h‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎u‎n‎c‎h‎i‎n‎g‎ ‎H‎i‎s‎ ‎L‎a‎w‎y‎e‎r‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎3‎°‎
/‎6‎9‎°‎
1‎1‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎ ‎|‎ ‎D‎a‎y‎
8‎3‎°‎
1‎1‎%‎
S‎S‎E‎
1‎2‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎8‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎3‎ ‎p‎m‎
W‎e‎d‎ ‎2‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎9‎°‎
2‎1‎%‎
S‎S‎E‎
1‎2‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎,‎ ‎t‎h‎e‎n‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
9‎:‎0‎1‎ ‎p‎m‎
F‎u‎l‎l‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎0‎6‎ ‎a‎m‎
T‎h‎u‎ ‎2‎5‎
C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎7‎1‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎7‎2‎°‎
3‎6‎%‎
S‎ ‎1‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
8‎4‎°‎
/‎7‎2‎°‎
2‎0‎%‎
S‎S‎E‎ ‎2‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎7‎1‎°‎
7‎3‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎8‎°‎
4‎8‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎8‎°‎
4‎3‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎5‎°‎
/‎6‎7‎°‎
2‎4‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎6‎°‎
/‎6‎9‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎7‎0‎°‎
2‎0‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎4‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎9‎°‎
/‎7‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎7‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎8‎°‎
3‎7‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎5‎°‎
3‎8‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎6‎6‎°‎
3‎7‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎B‎r‎i‎t‎f‎a‎g‎s‎.‎ ‎🧐

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎i‎s‎h‎t‎a‎n‎k‎
F‎i‎s‎h‎t‎a‎n‎k‎,‎ ‎a‎l‎s‎o‎ ‎c‎a‎l‎l‎e‎d‎ ‎F‎i‎s‎h‎t‎a‎n‎k‎ ‎L‎i‎v‎e‎ ‎i‎s‎ ‎a‎n‎ ‎i‎n‎t‎e‎r‎w‎e‎b‎z‎-‎h‎o‎s‎t‎e‎d‎ ‎""‎r‎e‎a‎l‎i‎t‎y‎ ‎s‎h‎o‎w‎""‎/‎""‎g‎a‎m‎e‎ ‎s‎h‎o‎w‎""‎ ‎f‎o‎u‎n‎d‎e‎d‎ ‎i‎n‎ ‎2‎0‎2‎3‎ ‎b‎y‎ ‎A‎m‎e‎r‎i‎c‎u‎n‎t‎ ‎c‎o‎m‎e‎d‎y‎ ‎h‎a‎c‎k‎ ‎(‎a‎n‎d‎ ‎n‎o‎t‎o‎r‎i‎o‎u‎s‎ ‎t‎e‎r‎r‎o‎r‎i‎s‎t‎)‎ ‎S‎a‎m‎ ‎H‎y‎d‎e‎,‎ ‎e‎r‎,‎ ‎""‎J‎a‎s‎o‎n‎ ‎G‎o‎l‎d‎s‎t‎r‎i‎k‎e‎r‎""‎ ‎a‎n‎d‎ ‎m‎e‎d‎i‎a‎ ‎p‎r‎o‎d‎u‎c‎e‎r‎ ‎J‎e‎t‎ ‎N‎e‎p‎t‎u‎n‎e‎.‎ ‎T‎h‎e‎ ‎b‎a‎s‎i‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎ ‎i‎s‎ ‎t‎h‎e‎ ‎d‎r‎e‎a‎m‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎ ‎O‎G‎-‎s‎t‎y‎l‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎t‎r‎o‎l‎l‎ ‎a‎n‎d‎ ‎l‎o‎l‎c‎o‎w‎ ‎e‎n‎t‎h‎u‎s‎i‎a‎s‎t‎:‎ ‎G‎e‎t‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎a‎u‎t‎i‎s‎t‎s‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎I‎R‎L‎ ‎i‎n‎ ‎a‎ ‎h‎o‎u‎s‎e‎,‎ ‎r‎e‎m‎o‎v‎e‎ ‎t‎h‎e‎i‎r‎ ‎p‎h‎o‎n‎e‎s‎,‎ ‎a‎n‎d‎ ‎f‎o‎r‎c‎e‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎c‎o‎m‎p‎e‎t‎e‎ ‎i‎n‎ ‎d‎e‎p‎r‎a‎v‎e‎d‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎e‎s‎ ‎f‎o‎r‎ ‎""‎m‎o‎n‎e‎y‎""‎,‎ ‎w‎h‎i‎l‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎n‎l‎i‎n‎e‎ ‎w‎a‎t‎c‎h‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎ ‎e‎n‎s‎u‎e‎.‎ ‎T‎h‎e‎ ‎i‎n‎i‎t‎i‎a‎l‎ ‎p‎r‎i‎z‎e‎ ‎o‎f‎f‎e‎r‎e‎d‎ ‎(‎i‎n‎ ‎S‎e‎a‎s‎o‎n‎ ‎1‎)‎ ‎t‎o‎ ‎t‎h‎e‎ ‎u‎n‎l‎u‎c‎k‎y‎ ‎""‎w‎i‎n‎n‎e‎r‎""‎ ‎w‎a‎s‎ ‎a‎ ‎m‎e‎r‎e‎ ‎$‎1‎0‎,‎0‎0‎0‎.‎0‎0‎ ‎o‎f‎ ‎'‎M‎u‎r‎i‎c‎a‎n‎ ‎m‎o‎n‎e‎y‎ ‎(‎w‎h‎i‎c‎h‎ ‎i‎s‎n‎'‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎t‎h‎a‎t‎ ‎m‎u‎c‎h‎)‎ ‎-‎ ‎b‎u‎t‎ ‎i‎t‎ ‎w‎a‎s‎ ‎e‎v‎e‎n‎t‎u‎a‎l‎l‎y‎ ‎u‎p‎p‎e‎d‎ ‎t‎o‎ ‎$‎3‎0‎K‎ ‎U‎S‎D‎.‎ ‎T‎h‎i‎s‎ ‎s‎h‎i‎t‎s‎h‎o‎w‎ ‎l‎a‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎j‎u‎s‎t‎ ‎a‎ ‎b‎i‎t‎ ‎u‎n‎d‎e‎r‎ ‎t‎w‎o‎ ‎m‎o‎n‎t‎h‎s‎ ‎i‎n‎ ‎2‎0‎2‎3‎ ‎b‎e‎f‎o‎r‎e‎ ‎e‎n‎d‎i‎n‎g‎ ‎i‎t‎s‎ ‎f‎i‎r‎s‎t‎ ‎s‎e‎a‎s‎o‎n‎.‎ ‎A‎ ‎s‎e‎c‎o‎n‎d‎ ‎s‎e‎a‎s‎o‎n‎ ‎b‎e‎g‎a‎n‎ ‎i‎n‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎2‎0‎2‎3‎ ‎a‎n‎d‎ ‎i‎s‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎a‎b‎o‎u‎t‎ ‎t‎o‎ ‎e‎n‎d‎ ‎-‎ ‎W‎H‎O‎ ‎W‎I‎L‎L‎ ‎W‎I‎N‎ ‎S‎E‎A‎S‎O‎N‎ ‎2‎?‎?‎?‎


(‎(‎ ‎W‎H‎O‎ ‎W‎I‎L‎L‎ ‎""‎W‎I‎N‎""‎ ‎T‎H‎I‎S‎ ‎S‎E‎A‎S‎O‎N‎?‎?‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

L‎u‎i‎s‎ ‎W‎a‎l‎t‎e‎r‎ ‎A‎l‎v‎a‎r‎e‎z‎ ‎(‎1‎9‎1‎1‎–‎1‎9‎8‎8‎)‎ ‎w‎a‎s‎ ‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎e‎x‎p‎e‎r‎i‎m‎e‎n‎t‎a‎l‎ ‎p‎h‎y‎s‎i‎c‎i‎s‎t‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎a‎w‎a‎r‎d‎e‎d‎ ‎t‎h‎e‎ ‎N‎o‎b‎e‎l‎ ‎P‎r‎i‎z‎e‎ ‎i‎n‎ ‎P‎h‎y‎s‎i‎c‎s‎ ‎i‎n‎ ‎1‎9‎6‎8‎ ‎f‎o‎r‎ ‎h‎i‎s‎ ‎d‎i‎s‎c‎o‎v‎e‎r‎y‎ ‎o‎f‎ ‎r‎e‎s‎o‎n‎a‎n‎c‎e‎ ‎s‎t‎a‎t‎e‎s‎ ‎i‎n‎ ‎p‎a‎r‎t‎i‎c‎l‎e‎ ‎p‎h‎y‎s‎i‎c‎s‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎h‎y‎d‎r‎o‎g‎e‎n‎ ‎b‎u‎b‎b‎l‎e‎ ‎c‎h‎a‎m‎b‎e‎r‎.‎ ‎A‎f‎t‎e‎r‎ ‎r‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎h‎i‎s‎ ‎P‎h‎D‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎o‎f‎ ‎C‎h‎i‎c‎a‎g‎o‎ ‎i‎n‎ ‎1‎9‎3‎6‎,‎ ‎A‎l‎v‎a‎r‎e‎z‎ ‎w‎e‎n‎t‎ ‎t‎o‎ ‎w‎o‎r‎k‎ ‎f‎o‎r‎ ‎E‎r‎n‎e‎s‎t‎ ‎L‎a‎w‎r‎e‎n‎c‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎R‎a‎d‎i‎a‎t‎i‎o‎n‎ ‎L‎a‎b‎o‎r‎a‎t‎o‎r‎y‎ ‎a‎t‎ ‎t‎h‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎o‎f‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎,‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎.‎ ‎H‎e‎ ‎j‎o‎i‎n‎e‎d‎ ‎M‎I‎T‎ ‎R‎a‎d‎i‎a‎t‎i‎o‎n‎ ‎L‎a‎b‎o‎r‎a‎t‎o‎r‎y‎ ‎i‎n‎ ‎1‎9‎4‎0‎,‎ ‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎c‎o‎n‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎t‎o‎ ‎a‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎W‎o‎r‎l‎d‎ ‎W‎a‎r‎ ‎I‎I‎ ‎r‎a‎d‎a‎r‎ ‎p‎r‎o‎j‎e‎c‎t‎s‎ ‎a‎n‎d‎ ‎w‎o‎r‎k‎e‎d‎ ‎a‎s‎ ‎a‎ ‎t‎e‎s‎t‎ ‎p‎i‎l‎o‎t‎,‎ ‎b‎e‎f‎o‎r‎e‎ ‎j‎o‎i‎n‎i‎n‎g‎ ‎R‎o‎b‎e‎r‎t‎ ‎O‎p‎p‎e‎n‎h‎e‎i‎m‎e‎r‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎a‎n‎h‎a‎t‎t‎a‎n‎ ‎P‎r‎o‎j‎e‎c‎t‎ ‎i‎n‎ ‎1‎9‎4‎3‎.‎ ‎H‎e‎ ‎m‎o‎v‎e‎d‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎ ‎a‎s‎ ‎a‎ ‎f‎u‎l‎l‎ ‎p‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎w‎a‎r‎,‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎t‎o‎ ‎u‎s‎e‎ ‎h‎i‎s‎ ‎k‎n‎o‎w‎l‎e‎d‎g‎e‎ ‎i‎n‎ ‎w‎o‎r‎k‎ ‎o‎n‎ ‎i‎m‎p‎r‎o‎v‎i‎n‎g‎ ‎p‎a‎r‎t‎i‎c‎l‎e‎ ‎a‎c‎c‎e‎l‎e‎r‎a‎t‎o‎r‎s‎.‎ ‎T‎h‎i‎s‎ ‎1‎9‎6‎9‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎A‎l‎v‎a‎r‎e‎z‎ ‎w‎i‎t‎h‎ ‎a‎ ‎m‎a‎g‎n‎e‎t‎i‎c‎ ‎m‎o‎n‎o‎p‎o‎l‎e‎ ‎d‎e‎t‎e‎c‎t‎o‎r‎ ‎a‎t‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎L‎a‎w‎r‎e‎n‎c‎e‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎L‎a‎b‎o‎r‎a‎t‎o‎r‎y‎ ‎/‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎o‎f‎ ‎E‎n‎e‎r‎g‎y‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎b‎e‎a‎t‎ ‎s‎o‎m‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎a‎ ‎b‎a‎g‎u‎e‎t‎t‎e‎.‎ ‎"
8P50baj5,2024-04-24_stats.json,rdp_snitch,JSON,Wednesday 24th of April 2024 07:18:26 PM CDT,"{
  ""ip"": {
    ""62.204.41.225"": 30,
    ""194.165.16.11"": 6,
    ""81.19.135.2"": 9,
    ""169.150.209.215"": 3,
    ""45.227.254.49"": 6,
    ""172.232.250.53"": 2058,
    ""112.4.139.162"": 6,
    ""198.235.24.122"": 9,
    ""185.122.204.179"": 3,
    ""195.234.28.44"": 3,
    ""58.218.204.183"": 18,
    ""185.242.226.23"": 3,
    ""192.119.160.206"": 9,
    ""116.140.196.215"": 3,
    ""185.170.144.3"": 6,
    ""203.210.164.177"": 3,
    ""101.36.117.15"": 3,
    ""87.251.75.145"": 9,
    ""111.32.83.155"": 3,
    ""205.210.31.76"": 9,
    ""43.250.254.49"": 3,
    ""36.91.222.100"": 3,
    ""27.8.44.19"": 3,
    ""36.50.12.157"": 18,
    ""194.165.16.10"": 6,
    ""45.227.254.9"": 9,
    ""194.165.16.76"": 6,
    ""80.94.95.114"": 9,
    ""205.210.31.58"": 9,
    ""167.94.146.60"": 3,
    ""87.251.75.64"": 3,
    ""205.210.31.241"": 9
  },
  ""asn"": {
    ""AS59425"": 30,
    ""AS48721"": 18,
    ""AS209588"": 9,
    ""AS212238"": 3,
    ""AS267784"": 15,
    ""AS63949"": 2058,
    ""AS56046"": 6,
    ""AS396982"": 36,
    ""AS57523"": 3,
    ""AS43872"": 3,
    ""AS4134"": 18,
    ""AS202425"": 3,
    ""AS9009"": 9,
    ""AS4837"": 6,
    ""AS197414"": 6,
    ""AS45899"": 3,
    ""AS135377"": 3,
    ""AS208091"": 12,
    ""AS38019"": 3,
    ""AS133676"": 3,
    ""AS7713"": 3,
    ""AS135407"": 18,
    ""AS204428"": 9,
    ""AS398705"": 3
  },
  ""isp"": {
    ""Horizon LLC"": 30,
    ""Flyservers S.A."": 42,
    ""Datacamp Limited"": 3,
    ""Akamai Technologies, Inc."": 2058,
    ""China Mobile Communications Corporation"": 6,
    ""Google LLC"": 36,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Optinet U.K. Limited"": 3,
    ""Chinanet"": 18,
    ""IP Volume inc"": 3,
    ""Madgenius.com"": 9,
    ""China Unicom CHINA169 Network"": 3,
    ""Xhost Internet Solutions LP"": 18,
    ""VNPT Corp"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile communications corporation"": 3,
    ""Precious netcom pvt ltd"": 3,
    ""PT Telekomunikasi Indonesia"": 3,
    ""China Unicom Chongqing Province Network"": 3,
    ""Trans World Enterprise Services (Private) Limited"": 18,
    ""SS-Net"": 9,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Horizon LLC"": 30,
    ""Flyservers S.A"": 18,
    ""Alviva Holding Limited"": 9,
    ""DataCamp Limited"": 3,
    ""UAB Host Baltic"": 15,
    ""Akamai Technologies, Inc."": 2058,
    ""China Mobile Communications Corporation"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Starcrecium Limited"": 3,
    ""Optinet U.K. Limited"": 3,
    ""Chinanet JS"": 18,
    ""AI Spera"": 3,
    ""A2F Networks"": 9,
    ""China United Network Communications Corporation Limited"": 3,
    ""Xhostis"": 6,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Xhost Internet Solutions"": 12,
    ""China Mobile"": 3,
    ""Gstech Software Systems Pvt Ltd"": 3,
    ""Telekomunikasi Indonesia"": 3,
    ""Unknown"": 3,
    ""Trans World Enterprise Services (Private) Limited"": 18,
    ""Unmanaged LTD"": 9,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""Moscow"": 33,
    ""Kaunas"": 18,
    ""Hesse"": 15,
    ""Vilnius"": 15,
    ""Jakarta"": 2061,
    ""Jiangsu"": 24,
    ""California"": 36,
    ""England"": 3,
    ""North Holland"": 21,
    ""New York"": 9,
    ""Beijing"": 3,
    ""Hanoi"": 3,
    ""Kowloon"": 3,
    ""Tianjin"": 3,
    ""Uttarakhand"": 3,
    ""Chongqing"": 3,
    ""Sindh"": 18,
    ""Budapest"": 9
  },
  ""country"": {
    ""Russia"": 33,
    ""Lithuania"": 33,
    ""Germany"": 15,
    ""Indonesia"": 2061,
    ""China"": 33,
    ""United States"": 45,
    ""United Kingdom"": 3,
    ""The Netherlands"": 21,
    ""Vietnam"": 3,
    ""Hong Kong"": 3,
    ""India"": 3,
    ""Pakistan"": 18,
    ""Hungary"": 9
  },
  ""account"": {
    ""Test"": 48,
    ""Domain"": 39,
    ""Administrator"": 297,
    ""Admin"": 294,
    ""(empty)"": 12,
    ""Whatuptime.com"": 294,
    ""Jakartakini123#"": 294,
    ""Hello World"": 294,
    ""TinHocThucHanh"": 294,
    ""Hey"": 294,
    ""PPLgzURlX"": 3,
    ""EFSZpU"": 3,
    ""euXqcp"": 3,
    ""Administr"": 24,
    ""hello"": 54,
    ""nmap"": 3,
    ""root"": 3,
    ""cRXGNPiye"": 3,
    ""jdMWWQ"": 3,
    ""QGOzUT"": 3,
    ""IicgrXNoZ"": 3,
    ""XZpXYH"": 3,
    ""knlkYy"": 3,
    ""sNxwoyUHA"": 3,
    ""qvuKQz"": 3,
    ""dHKTDq"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2280
  },
  ""client_build"": {
    ""Unknown"": 2280
  },
  ""client_name"": {
    ""Unknown"": 2280
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""hosting"": 2100,
    ""mobile"": 9,
    ""proxy"": 30,
    ""hosting & proxy"": 9
  }
}"
UXU5PCBq,2024-04-24_stats.json,rdp_snitch,JSON,Wednesday 24th of April 2024 07:16:14 PM CDT,"{
  ""ip"": {
    ""62.204.41.225"": 20,
    ""194.165.16.11"": 4,
    ""81.19.135.2"": 6,
    ""169.150.209.215"": 2,
    ""45.227.254.49"": 4,
    ""172.232.250.53"": 1372,
    ""112.4.139.162"": 4,
    ""198.235.24.122"": 6,
    ""185.122.204.179"": 2,
    ""195.234.28.44"": 2,
    ""58.218.204.183"": 12,
    ""185.242.226.23"": 2,
    ""192.119.160.206"": 6,
    ""116.140.196.215"": 2,
    ""185.170.144.3"": 4,
    ""203.210.164.177"": 2,
    ""101.36.117.15"": 2,
    ""87.251.75.145"": 6,
    ""111.32.83.155"": 2,
    ""205.210.31.76"": 6,
    ""43.250.254.49"": 2,
    ""36.91.222.100"": 2,
    ""27.8.44.19"": 2,
    ""36.50.12.157"": 12,
    ""194.165.16.10"": 4,
    ""45.227.254.9"": 6,
    ""194.165.16.76"": 4,
    ""80.94.95.114"": 6,
    ""205.210.31.58"": 6,
    ""167.94.146.60"": 2,
    ""87.251.75.64"": 2,
    ""205.210.31.241"": 6
  },
  ""asn"": {
    ""AS59425"": 20,
    ""AS48721"": 12,
    ""AS209588"": 6,
    ""AS212238"": 2,
    ""AS267784"": 10,
    ""AS63949"": 1372,
    ""AS56046"": 4,
    ""AS396982"": 24,
    ""AS57523"": 2,
    ""AS43872"": 2,
    ""AS4134"": 12,
    ""AS202425"": 2,
    ""AS9009"": 6,
    ""AS4837"": 4,
    ""AS197414"": 4,
    ""AS45899"": 2,
    ""AS135377"": 2,
    ""AS208091"": 8,
    ""AS38019"": 2,
    ""AS133676"": 2,
    ""AS7713"": 2,
    ""AS135407"": 12,
    ""AS204428"": 6,
    ""AS398705"": 2
  },
  ""isp"": {
    ""Horizon LLC"": 20,
    ""Flyservers S.A."": 28,
    ""Datacamp Limited"": 2,
    ""Akamai Technologies, Inc."": 1372,
    ""China Mobile Communications Corporation"": 4,
    ""Google LLC"": 24,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Optinet U.K. Limited"": 2,
    ""Chinanet"": 12,
    ""IP Volume inc"": 2,
    ""Madgenius.com"": 6,
    ""China Unicom CHINA169 Network"": 2,
    ""Xhost Internet Solutions LP"": 12,
    ""VNPT Corp"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile communications corporation"": 2,
    ""Precious netcom pvt ltd"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""China Unicom Chongqing Province Network"": 2,
    ""Trans World Enterprise Services (Private) Limited"": 12,
    ""SS-Net"": 6,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""Horizon LLC"": 20,
    ""Flyservers S.A"": 12,
    ""Alviva Holding Limited"": 6,
    ""DataCamp Limited"": 2,
    ""UAB Host Baltic"": 10,
    ""Akamai Technologies, Inc."": 1372,
    ""China Mobile Communications Corporation"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Starcrecium Limited"": 2,
    ""Optinet U.K. Limited"": 2,
    ""Chinanet JS"": 12,
    ""AI Spera"": 2,
    ""A2F Networks"": 6,
    ""China United Network Communications Corporation Limited"": 2,
    ""Xhostis"": 4,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Xhost Internet Solutions"": 8,
    ""China Mobile"": 2,
    ""Gstech Software Systems Pvt Ltd"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""Unknown"": 2,
    ""Trans World Enterprise Services (Private) Limited"": 12,
    ""Unmanaged LTD"": 6,
    ""Censys, Inc."": 2
  },
  ""regionName"": {
    ""Moscow"": 22,
    ""Kaunas"": 12,
    ""Hesse"": 10,
    ""Vilnius"": 10,
    ""Jakarta"": 1374,
    ""Jiangsu"": 16,
    ""California"": 24,
    ""England"": 2,
    ""North Holland"": 14,
    ""New York"": 6,
    ""Beijing"": 2,
    ""Hanoi"": 2,
    ""Kowloon"": 2,
    ""Tianjin"": 2,
    ""Uttarakhand"": 2,
    ""Chongqing"": 2,
    ""Sindh"": 12,
    ""Budapest"": 6
  },
  ""country"": {
    ""Russia"": 22,
    ""Lithuania"": 22,
    ""Germany"": 10,
    ""Indonesia"": 1374,
    ""China"": 22,
    ""United States"": 30,
    ""United Kingdom"": 2,
    ""The Netherlands"": 14,
    ""Vietnam"": 2,
    ""Hong Kong"": 2,
    ""India"": 2,
    ""Pakistan"": 12,
    ""Hungary"": 6
  },
  ""account"": {
    ""Test"": 32,
    ""Domain"": 26,
    ""Administrator"": 198,
    ""Admin"": 196,
    ""(empty)"": 8,
    ""Whatuptime.com"": 196,
    ""Jakartakini123#"": 196,
    ""Hello World"": 196,
    ""TinHocThucHanh"": 196,
    ""Hey"": 196,
    ""PPLgzURlX"": 2,
    ""EFSZpU"": 2,
    ""euXqcp"": 2,
    ""Administr"": 16,
    ""hello"": 36,
    ""nmap"": 2,
    ""root"": 2,
    ""cRXGNPiye"": 2,
    ""jdMWWQ"": 2,
    ""QGOzUT"": 2,
    ""IicgrXNoZ"": 2,
    ""XZpXYH"": 2,
    ""knlkYy"": 2,
    ""sNxwoyUHA"": 2,
    ""qvuKQz"": 2,
    ""dHKTDq"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1520
  },
  ""client_build"": {
    ""Unknown"": 1520
  },
  ""client_name"": {
    ""Unknown"": 1520
  },
  ""ip_type"": {
    ""Unknown"": 88,
    ""hosting"": 1400,
    ""mobile"": 6,
    ""proxy"": 20,
    ""hosting & proxy"": 6
  }
}"
BDMcBJpS,2024-04-24_stats.json,rdp_snitch,JSON,Wednesday 24th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""62.204.41.225"": 10,
    ""194.165.16.11"": 2,
    ""81.19.135.2"": 3,
    ""169.150.209.215"": 1,
    ""45.227.254.49"": 2,
    ""172.232.250.53"": 686,
    ""112.4.139.162"": 2,
    ""198.235.24.122"": 3,
    ""185.122.204.179"": 1,
    ""195.234.28.44"": 1,
    ""58.218.204.183"": 6,
    ""185.242.226.23"": 1,
    ""192.119.160.206"": 3,
    ""116.140.196.215"": 1,
    ""185.170.144.3"": 2,
    ""203.210.164.177"": 1,
    ""101.36.117.15"": 1,
    ""87.251.75.145"": 3,
    ""111.32.83.155"": 1,
    ""205.210.31.76"": 3,
    ""43.250.254.49"": 1,
    ""36.91.222.100"": 1,
    ""27.8.44.19"": 1,
    ""36.50.12.157"": 6,
    ""194.165.16.10"": 2,
    ""45.227.254.9"": 3,
    ""194.165.16.76"": 2,
    ""80.94.95.114"": 3,
    ""205.210.31.58"": 3,
    ""167.94.146.60"": 1,
    ""87.251.75.64"": 1,
    ""205.210.31.241"": 3
  },
  ""asn"": {
    ""AS59425"": 10,
    ""AS48721"": 6,
    ""AS209588"": 3,
    ""AS212238"": 1,
    ""AS267784"": 5,
    ""AS63949"": 686,
    ""AS56046"": 2,
    ""AS396982"": 12,
    ""AS57523"": 1,
    ""AS43872"": 1,
    ""AS4134"": 6,
    ""AS202425"": 1,
    ""AS9009"": 3,
    ""AS4837"": 2,
    ""AS197414"": 2,
    ""AS45899"": 1,
    ""AS135377"": 1,
    ""AS208091"": 4,
    ""AS38019"": 1,
    ""AS133676"": 1,
    ""AS7713"": 1,
    ""AS135407"": 6,
    ""AS204428"": 3,
    ""AS398705"": 1
  },
  ""isp"": {
    ""Horizon LLC"": 10,
    ""Flyservers S.A."": 14,
    ""Datacamp Limited"": 1,
    ""Akamai Technologies, Inc."": 686,
    ""China Mobile Communications Corporation"": 2,
    ""Google LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Optinet U.K. Limited"": 1,
    ""Chinanet"": 6,
    ""IP Volume inc"": 1,
    ""Madgenius.com"": 3,
    ""China Unicom CHINA169 Network"": 1,
    ""Xhost Internet Solutions LP"": 6,
    ""VNPT Corp"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile communications corporation"": 1,
    ""Precious netcom pvt ltd"": 1,
    ""PT Telekomunikasi Indonesia"": 1,
    ""China Unicom Chongqing Province Network"": 1,
    ""Trans World Enterprise Services (Private) Limited"": 6,
    ""SS-Net"": 3,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""Horizon LLC"": 10,
    ""Flyservers S.A"": 6,
    ""Alviva Holding Limited"": 3,
    ""DataCamp Limited"": 1,
    ""UAB Host Baltic"": 5,
    ""Akamai Technologies, Inc."": 686,
    ""China Mobile Communications Corporation"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Starcrecium Limited"": 1,
    ""Optinet U.K. Limited"": 1,
    ""Chinanet JS"": 6,
    ""AI Spera"": 1,
    ""A2F Networks"": 3,
    ""China United Network Communications Corporation Limited"": 1,
    ""Xhostis"": 2,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Xhost Internet Solutions"": 4,
    ""China Mobile"": 1,
    ""Gstech Software Systems Pvt Ltd"": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""Unknown"": 1,
    ""Trans World Enterprise Services (Private) Limited"": 6,
    ""Unmanaged LTD"": 3,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Moscow"": 11,
    ""Kaunas"": 6,
    ""Hesse"": 5,
    ""Vilnius"": 5,
    ""Jakarta"": 687,
    ""Jiangsu"": 8,
    ""California"": 12,
    ""England"": 1,
    ""North Holland"": 7,
    ""New York"": 3,
    ""Beijing"": 1,
    ""Hanoi"": 1,
    ""Kowloon"": 1,
    ""Tianjin"": 1,
    ""Uttarakhand"": 1,
    ""Chongqing"": 1,
    ""Sindh"": 6,
    ""Budapest"": 3
  },
  ""country"": {
    ""Russia"": 11,
    ""Lithuania"": 11,
    ""Germany"": 5,
    ""Indonesia"": 687,
    ""China"": 11,
    ""United States"": 15,
    ""United Kingdom"": 1,
    ""The Netherlands"": 7,
    ""Vietnam"": 1,
    ""Hong Kong"": 1,
    ""India"": 1,
    ""Pakistan"": 6,
    ""Hungary"": 3
  },
  ""account"": {
    ""Test"": 16,
    ""Domain"": 13,
    ""Administrator"": 99,
    ""Admin"": 98,
    ""(empty)"": 4,
    ""Whatuptime.com"": 98,
    ""Jakartakini123#"": 98,
    ""Hello World"": 98,
    ""TinHocThucHanh"": 98,
    ""Hey"": 98,
    ""PPLgzURlX"": 1,
    ""EFSZpU"": 1,
    ""euXqcp"": 1,
    ""Administr"": 8,
    ""hello"": 18,
    ""nmap"": 1,
    ""root"": 1,
    ""cRXGNPiye"": 1,
    ""jdMWWQ"": 1,
    ""QGOzUT"": 1,
    ""IicgrXNoZ"": 1,
    ""XZpXYH"": 1,
    ""knlkYy"": 1,
    ""sNxwoyUHA"": 1,
    ""qvuKQz"": 1,
    ""dHKTDq"": 1
  },
  ""keyboard"": {
    ""Unknown"": 760
  },
  ""client_build"": {
    ""Unknown"": 760
  },
  ""client_name"": {
    ""Unknown"": 760
  },
  ""ip_type"": {
    ""Unknown"": 44,
    ""hosting"": 700,
    ""mobile"": 3,
    ""proxy"": 10,
    ""hosting & proxy"": 3
  }
}"
xC7EvGTK,[ GUI ] /zeton książka,Nolifeq,Java,Wednesday 24th of April 2024 06:52:01 PM CDT,"imb.withItem(48,
                InventoryUtil.createCustomItem(Material.BOOK, ""§6§lInformacje jak zdobyć żetony:"",
                        ""§2- §aŻetony możesz zdobyć za §2co dziesiąty poziom globalny§a."",
                        ""§2- §aNajwiększy zadany damage bossowi łatwemu daje §21 żeton§a,"",
                        ""§aa bossowi trudnemu §22 żetony§a. Za zabicie bossa jest 1 żeton."",
                        ""§2- §aWykonując zadania w §2/przepustka§a."",
                        ""§2- §aNagrody za turnieje/konkursy robione przez Administrację.""));
        Bukkit.getScheduler().runTask(Main.getInstance(), () -> imb.show(player));"
DWnZzfis,primefact.lua,opencomputerstest2,Lua,Wednesday 24th of April 2024 06:47:33 PM CDT,"--[[local primes = {}

local function isPrime(n)
  local cached = primes[n]
  if cached ~= nil then
    return cached
  end
  for i = 2, math.sqrt(n) do
    if n % i == 0 then
      primes[n] = false
      return false
    end
  end
  primes[n] = true
  return true 
end

local function primeFactorization(n)
  local finale = {}
  local newNumber = n
  for i = 2, n do
    if isPrime(i) then
      while newNumber % i == 0 do 
        finale[#finale + 1] = i
        newNumber = newNumber / i
      end
    end
  end
  return table.concat(finale, "", "")
end]]

local a={}local function b(c)local d=a[c]if d~=nil then return d end;for e=2,math.sqrt(c)do if c%e==0 then a[c]=false;return false end end;a[c]=true;return true end;return function(c)local g={}local h=c;for e=2,c do if b(e)then while h%e==0 do g[#g+1]=e;h=h/e end end end;return table.concat(g,"", "")end"
cbtTKWZc,MCVE for https://stackoverflow.com/q/78378063/3962537,dan-masek,C++,Wednesday 24th of April 2024 05:39:25 PM CDT,"#include <pybind11/pybind11.h>
#include <pybind11/embed.h>
#include <iostream>

namespace py = pybind11;

PYBIND11_EMBEDDED_MODULE(testmodule, m)
{
    m.def(""start"", [](py::module& foo) {
        try {
            py::module bar = foo.attr(""bar"");
            std::cout << ""ok\n"";
        } catch (py::error_already_set const& e) {
            std::cerr << ""error"" << e.what() << '\n';
        }
    });
}

int main()
{
    py::scoped_interpreter guard{};

    try {
        py::exec(R""(\
import testmodule
import foo

testmodule.start(foo)
)"");
    } catch (py::error_already_set& e) {
        std::cerr << e.what() << '\n';
    }

    return 0;
}
"
CjkxbgHf,Untitled,rtcv,Python,Wednesday 24th of April 2024 05:30:23 PM CDT,"/****************************************
 * Include Libraries
 ****************************************/
#include ""UbidotsESPMQTT.h""

/****************************************
 * Define Constants
 ****************************************/
#define TOKEN """" // Your Ubidots TOKEN
#define WIFINAME """" //Your SSID
#define WIFIPASS """" // Your Wifi Pass

Ubidots client(TOKEN);

/****************************************
 * Auxiliar Functions
 ****************************************/

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print(""Message arrived ["");
  Serial.print(topic);
  Serial.print(""] "");
  for (int i=0;i<length;i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();
}

/****************************************
 * Main Functions
 ****************************************/

void setup() {
  // put your setup code here, to run once:
  client.setDebug(true); // Pass a true or false bool value to activate debug messages
  Serial.begin(115200);
  client.wifiConnection(WIFINAME, WIFIPASS);
  client.begin(callback);
  }

void loop() {
  // put your main code here, to run repeatedly:
  if(!client.connected()){
    client.reconnect();
  }
  
  float heartBeat = analogRead(A0);
  client.add(""heart-beat"", heartBeat);
  client.ubidotsPublish(""demo-machine"");
  client.loop();
  delay(1000);
}"
PEmZRuuv,Spectate System,qsenko1,Lua,Wednesday 24th of April 2024 05:04:01 PM CDT,"local Player = game.Players.LocalPlayer
local RunService = game:GetService(""RunService"")
local CoreGui = game:GetService(""StarterGui"")
local Character = Player.Character or Player.CharacterAdded:wait()
local Humanoid = Character:WaitForChild(""Humanoid"")
local UI = script.Parent--Player.PlayerGui:WaitForChild(""SpectateUI"")
local SpectateButton = UI.SpectateButton
local SpectateFrame = UI.SpectateFrame
local PreviousButton = SpectateFrame.BackRoundImage.PreviousButton
local ClickSound = Player.PlayerGui:WaitForChild(""LocalSounds"")[""Clicked Sound""]
local ShopButton = Player.PlayerGui:WaitForChild(""ShopUI"").OpenShopButton
local CodesButton = Player.PlayerGui:WaitForChild(""CodesUI"").OpenShopButton
local StatsButton = Player.PlayerGui:WaitForChild(""StatsGui"").StatsButton
local CoinsShopButton = Player.PlayerGui:WaitForChild(""Coins&GemsShop"").CoinsShopButton
local GemsShopButton = Player.PlayerGui:WaitForChild(""Coins&GemsShop"").GemsShopButton
local DieButton = Player.PlayerGui:WaitForChild(""ButtonGui"").Die
local LobbyButton = Player.PlayerGui:WaitForChild(""ButtonGui"").Lobby
local ExtraLifeUI = Player.PlayerGui:WaitForChild(""ExtraLifesFrame"")
local LevelsUI = Player.PlayerGui:WaitForChild(""LevelsGui"")


local NextButton = SpectateFrame.BackRoundImage.NextButton
local PlayerNameLabel = SpectateFrame.PlayerNameLabel
local Camera = workspace.CurrentCamera
local Reconnect
local num --= 0

UI.Enabled = true

SpectateButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	if SpectateFrame.Visible then
		SpectateButton.Position = UDim2.new(0.137, 0,0.43, 0)
		DieButton.Position = UDim2.new(0.68,0,0.875,0)
		ExtraLifeUI.Frame.Position = UDim2.new(0.53, 0,0.865, 0)
		ShopButton.Visible = true
		CodesButton.Visible = true
		StatsButton.Visible = true
		CoinsShopButton. Visible = true
		GemsShopButton.Visible = true
		--DieButton.Visible = true
		
		if Player.PlayerGui:WaitForChild(""SpeedTimer"") then
			Player.PlayerGui:WaitForChild(""SpeedTimer"").Enabled = true
		end
		
		SpectateButton.BackgroundColor3 = Color3.new(0.333333, 1, 0)
		SpectateFrame.Visible = false
		PlayerNameLabel.Text = Player.Name
		Camera.CameraSubject = Player.Character.Humanoid
		CoreGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		num = 1
		LevelsUI.Stage.Position = UDim2.new(0.155, 0,0.925, 0)
		LevelsUI.StageDescription.Position = UDim2.new(0.04, 0,0.925, 0)

		LobbyButton.Position = UDim2.new(0.325,0,0.875,0)
	else
		SpectateButton.Position = UDim2.new(0.008, 0,0.43, 0)
		ShopButton.Visible = false
		CodesButton.Visible = false
		StatsButton.Visible = false
		CoinsShopButton. Visible = false
		GemsShopButton.Visible = false
		--DieButton.Visible = false
		SpectateButton.BackgroundColor3 = Color3.new(1, 0, 0)
		SpectateFrame.Visible = true
		LevelsUI.Stage.Position = UDim2.new(0.155, 0,1.2, 0)
		LevelsUI.StageDescription.Position = UDim2.new(0.04, 0,1.2, 0)
		DieButton.Position = UDim2.new(0.68,0,1.275,0)
		LobbyButton.Position = UDim2.new(0.325,0,1.275,0)
		ExtraLifeUI.Frame.Position = UDim2.new(0.53, 0,1.2, 0)
		--	PlayerNameLabel.Text = Player.Name
		--	Camera.CameraSubject = Player.Character.Humanoid
		num = 2
		local Players = game.Players:GetPlayers()
		local all = #Players	
		if not Players[num] then	
			PlayerNameLabel.Text = Player.Name
			Camera.CameraSubject = Player.Character.Humanoid
			CoreGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)	
		else
			num = 2		
			Camera.CameraSubject = Players[num].Character.Humanoid
			PlayerNameLabel.Text = Players[num].Name
			CoreGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)	
		end
		
		if Player.PlayerGui:WaitForChild(""SpeedTimer"") then
			Player.PlayerGui:WaitForChild(""SpeedTimer"").Enabled = false
		end
	end
end)

PreviousButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	local Players = game.Players:GetPlayers()
	local all = #Players
	num = num - 1
	if num < 1 then
		num = all
	end
	Camera.CameraSubject = Players[num].Character.Humanoid
	PlayerNameLabel.Text = Players[num].Name
end)

NextButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	local Players = game.Players:GetPlayers()
	local all = #Players
	num = num + 1
	if num > all then
		num = 1
	end
	Camera.CameraSubject = Players[num].Character.Humanoid
	PlayerNameLabel.Text = Players[num].Name
end)

Player.CharacterAdded:Connect(function(Char)
	if SpectateFrame.Visible then
		local Players = game.Players:GetPlayers()
		if Char then
			if Players[num] then
				if Players[num].Name == Char.Name then
				Camera.CameraSubject = Char:WaitForChild(""Humanoid"")
				PlayerNameLabel.Text = Char.Name
				elseif Players[num].Name ~= Char.Name then
					local OtherPlayerName = Players[num].Name
					if game.Workspace:FindFirstChild(OtherPlayerName) then
						task.wait(.1)
						local OtherCharacter = game.Workspace:FindFirstChild(OtherPlayerName)
						Camera.CameraSubject = OtherCharacter:WaitForChild(""Humanoid"")
						PlayerNameLabel.Text = OtherCharacter.Name
					end
				end
			end
		end	
	end
end)

game.Players.ChildRemoved:Connect(function(LeftPlayer)
--	warn(LeftPlayer.Name)
	if SpectateFrame.Visible then
		if PlayerNameLabel.Text == LeftPlayer.Name then
			local Players = game.Players:GetPlayers()
			if Players[num] then
				local OtherPlayerName = Players[num].Name
				if game.Workspace:FindFirstChild(OtherPlayerName) then
					task.wait(.1)	
					local OtherCharacter = game.Workspace:FindFirstChild(OtherPlayerName)
					Camera.CameraSubject = OtherCharacter:WaitForChild(""Humanoid"")
					PlayerNameLabel.Text = OtherCharacter.Name
				end
			else
				num = 2
				PlayerNameLabel.Text = Player.Name
				Camera.CameraSubject = Player.Character.Humanoid
			end
		end
	end
end)

task.wait(10)

RunService.RenderStepped:Connect(function()
	local Players = game.Players:GetPlayers()
	if num ~= 0 then	
		if Players[num] then		
		 if Players[num].Name ~= Player.Name then		
				local OtherPlayerName = Players[num].Name
				if game.Workspace:FindFirstChild(OtherPlayerName) then
					local OtherCharacter = game.Workspace:FindFirstChild(OtherPlayerName)
					Camera.CameraSubject = OtherCharacter:WaitForChild(""Humanoid"")
					PlayerNameLabel.Text = OtherCharacter.Name
			   end
			end
		end
	end
	task.wait(.1)	
end)"
Bs9b75As,Swimbot Error,swimmerhair,Python,Wednesday 24th of April 2024 04:57:43 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 116, in rename
    info = await COC.Player(tag).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
aL2tTzpG,Unbox command,LuckyScripters,Lua,Wednesday 24th of April 2024 04:31:32 PM CDT,"-- Roblox - Chilly's MM2 - Unbox command
-- Made by LuckyScripters

-- Type on the chat: /unbox {amount} {boxName}

local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
function KjzqAKlxuZutZdVBcF(data) m=string.sub(data, 0, 100) data=data:gsub(m,'')

data = string.gsub(data, '[^'..b..'=]', '') return (data:gsub('.', function(x) if (x == '=') then return '' end local r,f='',(b:find(x)-1) for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end return r; end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x) if (#x ~= 8) then return '' end local c=0 for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end return string.char(c) end)) end

local Players = game:GetService(KjzqAKlxuZutZdVBcF('pBZvSMbkehshcaAlbmVSQRRbBIkFyJhRocQoqPBizdGySthfMuLsxWITTphQFSZrSGWkavdpKbmARWyPmcLfDFGtRNLdJIlrLIutUGxheWVycw=='))

local localPlayer = Players.LocalPlayer

local command = KjzqAKlxuZutZdVBcF('NMVoHtUFkMjKpJwmmCKPLagozKAtRDXrZRrHakRQlgKyTHCXdYOJvxVIHfcSiYdqxGEIrAXyeLqVnCOoaSlshqUjeNibOiPxNMSCL3VuYm94')

local function getBox(splittedMessage : {string}) : string
	local boxName = KjzqAKlxuZutZdVBcF('qIpOjeAewSItymTqgMXgvbIuXTQVJgmsJyifoUelGRXggvlQjzwfmfjNRQcXiKGakKYKgEisAUbiUSrvIjpynEFwNxWzsKjOhYCw')
	for index = 3, table.maxn(splittedMessage) do
		if index == 3 then
			boxName = boxName .. splittedMessage[index]
		else
			boxName = boxName .. KjzqAKlxuZutZdVBcF('JYfomSyYTuXjGkizOzgYlJPhmBLNALVQKouWMWJexwhbVVcYTEQfaiaDopMcCxPdByifllbwINmHwcduWfySgRPMtESnnVMhbQfOIA==') .. splittedMessage[index]
		end
	end
	return boxName
end

localPlayer.Chatted:Connect(function(message : string, recipient : Player)
	if string.sub(message, 1, string.len(command)) == command then
		local splittedMessage = string.split(message, KjzqAKlxuZutZdVBcF('yCNBFjmIGGhJYvUesAzXmoiemaSSvflfwbxaiXglmltupVqwIccfWZFdkcDZddcZSPjtzpJElKzgeouiMYstHpNrelUhpUjwlnYGIA=='))
		local amountTime = splittedMessage[2]
		local boxName = getBox(splittedMessage)
		if typeof(tonumber(amountTime)) ~= KjzqAKlxuZutZdVBcF('FAOgAWRAIgSYNQixUjelBvgiWLyUCRJsdFgPdrHBquohLcDtrjNGnlkoJrinKnaQCbVqDQjmzXJAGuogaMqbZLSNhQliuihIMbPMbnVtYmVy') then
			return
		end
		for index = 1, tonumber(amountTime) :: number do
			local item = game:GetService(KjzqAKlxuZutZdVBcF('oELfWsLfMFFIvqdyggWwURKbSmdJOVCkmbtTHsXVxtUHpLmgmysPLJRyKNthTMlqsVtrazAglOsOJYQJaailKZfhtnKCxsDaiYWBUmVwbGljYXRlZFN0b3JhZ2U=')):WaitForChild(KjzqAKlxuZutZdVBcF('FxOFjrLnXsLViTfSbTRIlmwQzlOWoeoEzwWefxKcdCDhKXaFOLpvJAtNhikwAmOLqGMfLKZHuXiSierMSpLBVHWwkZLutdSUzKzZUmVtb3Rlcw==')):WaitForChild(KjzqAKlxuZutZdVBcF('NCDynDJwldhIRSFTgLBcahDsDefRmUMqIjIsWqLKcVtUPDPftddSZwGFJAWEQXAXQIKXseRNvThsJEoGyjqCVCdVDWGQFtbrqJrlU2hvcA==')):WaitForChild(KjzqAKlxuZutZdVBcF('vhkaFuKOeHExPgtBLmtWmDAqXfgCazQZJLjJcCryKLGfWuotNXigQBwAvFWKYrTFKjkNAILsUwMLletqDCAgnkOIsTpnTcLrTbzMT3BlbkNyYXRl')):InvokeServer(boxName, false)
    		game:GetService(KjzqAKlxuZutZdVBcF('cjjWWjiBYAAPNLGOHZKilSLuBuyQCyvlzvQAprhRaEaAiYEYGYTfdGLACZpXenXblWJXydBevtrNdBWVPGBjCOYKZztUWODfnsTAUmVwbGljYXRlZFN0b3JhZ2U=')):WaitForChild(KjzqAKlxuZutZdVBcF('nnvAzJkBdrWeJOPWSIXIFxOzJfBhBkPisaJVhBNzqJzRbkpNjOlgbmgIORJeKJlMrmyWeekYirpocseIMqjLjwlVrqNYXWYbbFZzQ3JhdGVDb21wbGV0ZQ==')):FireServer(item)
            task.wait()
        end
	end
end)"
CGZJwdaJ,blooket hack,ConcealedReal,JavaScript,Wednesday 24th of April 2024 03:30:40 PM CDT,"document.body.insertAdjacentHTML(""beforeend"",""\n<div class='gui2'>\n    <div class=\""hack-checkbox\"">\n        <label for='' style='text-decoration-line:underline'>Utils</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='enemySpeedMultiplier'>Enemy Speed Multiplier: </label>\n        <input id='enemySpeedMultiplier' class='input-field'>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='' style='text-decoration-line:underline'>Global</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='autoAnswer' class='hotkey' type='checkbox'>\n        <label for='autoAnswer' class=\""slider\""></label>\n        <label for='autoAnswer'>Auto Answer</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='autoGetQuestion' class='hotkey' type='checkbox'>\n        <label for='autoGetQuestion' class=\""slider\""></label>\n        <label for='autoGetQuestion'>Auto Get Question</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='autoNextQuestion' class='hotkey' type='checkbox'>\n        <label for='autoNextQuestion' class=\""slider\""></label>\n        <label for='autoNextQuestion'>Auto Next Question</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='' style='text-decoration-line:underline'>Tower Defense</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='Health'>Health: </label>\n        <input id='Health' class='input-field'>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='Tokens'>Tokens: </label>\n        <input id='Tokens' class='input-field'>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='Damage'>Damage: </label>\n        <input id='Damage' class='input-field'>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label for='Round'>Round: </label>\n        <input id='Round' class='input-field'>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='autoNextRound' class='hotkey' type='checkbox'>\n        <label for='autoNextRound' class=\""slider\""></label>\n        <label for='autoNextRound'>Auto Next Round</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='autoKillEnemies' class='hotkey' type='checkbox'>\n        <label for='autoKillEnemies' class=\""slider\""></label>\n        <label for='autoKillEnemies'>Auto Kill Enemies</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <input id='regeneratingHealth' class='hotkey' type='checkbox'>\n        <label for='regeneratingHealth' class=\""slider\""></label>\n        <label for='regeneratingHealth'>Regenerating Health</label>\n    </div>\n    <br>\n    <div class=\""hack-checkbox\"">\n        <label id='maxtowers' class='button'>Max Towers</label>\n        <label id='killenemies' class='button'>Kill Enemies</label>\n    </div>\n    <br>\n</div>\n\n<style>\n    .gui2 {\n        width: 250px;\n        border-radius: 20px;\n        border: 2px solid #fff;\n        padding: 20px;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        background: rgba(0, 0, 0, 0.5);\n        backdrop-filter: blur(8px);\n        animation: fadeIn 0.5s ease-out;\n        z-index: 9999999999;\n    }\n\n    .hack-checkbox {\n        display: flex;\n        align-items: center;\n    }\n\n    .hack-checkbox input[type='checkbox'] {\n        display: none;\n    }\n\n    .hack-checkbox .slider {\n        position: relative;\n        width: 40px;\n        height: 20px;\n        background-color: #ccc;\n        border-radius: 20px;\n        cursor: pointer;\n    }\n\n    .hack-checkbox .slider:before {\n        position: absolute;\n        content: \""\"";\n        height: 16px;\n        width: 16px;\n        left: 2px;\n        bottom: 2px;\n        background-color: #fff;\n        border-radius: 50%;\n        transition: 0.4s;\n    }\n\n    input[type='checkbox']:checked + .slider:before {\n        transform: translateX(20px);\n    }\n    \n    input {\n        \n    }\n\n    .hack-checkbox label {\n        margin-left: 10px;\n        color: #fff;\n        font-family: Arial, sans-serif;\n    }\n\n    .slider-controls {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n    }\n\n    .slider-controls label {\n        color: #fff;\n        font-family: Arial, sans-serif;\n    }\n\n    .slider-controls input[type='range'] {\n        width: 100%;\n        -webkit-appearance: none;\n        height: 5px;\n        border-radius: 10px;\n        background: #bbb;\n        outline: none;\n        opacity: 0.7;\n        -webkit-transition: .2s;\n        transition: opacity .2s;\n    }\n\n    .slider-controls input[type='range']::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        background: #fff;\n        cursor: pointer;\n    }\n\n    .slider-controls input[type='range']::-moz-range-thumb {\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        background: #fff;\n        cursor: pointer;\n    }\n\n    .slider-controls output {\n        color: #fff;\n        font-family: Arial, sans-serif;\n    }\n    \n    .button {\n        cursor: pointer;\n        background: rgba(0, 0, 0, .2);\n        border-radius: 15px;\n        padding: 5px;\n    }\n    \n    .input-field {\n  width: 25px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  outline: none;\n        height: .05px;\n}\n\n/* Styling for the input field when focused */\n.input-field:focus {\n  border-color: dodgerblue;\n  box-shadow: 0 0 5px rgba(0, 0, 255, 0.5);\n}\n\n/* Styling for the input field placeholder */\n.input-field::placeholder {\n  color: #aaa;\n}\n</style>\n"");var config={utils:{enemySpeedMult:1},global:{autoAnswer:!1,autoGetQuestions:!1,autoNextQuestion:!1},TowerDefense:{health:null,tokens:null,damage:null,round:null,enemySpeedMultiplier:1,autoNextRound:!1,autoKillEnemies:!1,regeneratingHealth:!1,maxAllTowers:function(){getFuncs().towers.forEach((e=>{e.damage=1e4,e.level=1e4,e.range=1e4}))},clearEnemies:function(){getFuncs().enemies.forEach((e=>{e.health=0,e.alive=!1}))},get health(){return getFuncs().state.health},get tokens(){return getFuncs().state.tokens},get damage(){return getFuncs().dmg},get round(){return getFuncs().state.round},set health(e){getFuncs().state.health=e},set tokens(e){getFuncs().state.tokens=e},set damage(e){getFuncs().dmg=e},set round(e){getFuncs().state.round=e},get enemySpeedMultiplier(){return config.utils.enemySpeedMult},set enemySpeedMultiplier(e){config.utils.enemySpeedMult=e,getFuncs().enemies.forEach((n=>{n.speed=n.speed*e}))}},GameMode:null,get GameMode(){return window.location.href.split(""https://towerdefense.blooket.com/"")[1]}};function getFuncs(){return Object.values(document.querySelector(""#app > div > div""))[1]?.children[1]?._owner?.stateNode}Object.prototype.filter||Object.defineProperty(Object.prototype,""filter"",{value:function(e,n){const t={};for(const o in this)this.hasOwnProperty(o)&&e.call(n,this[o],o,this)&&(t[o]=this[o]);return t},enumerable:!1,writable:!0,configurable:!0});var f,r=!0;function a(){if(r){if(f=requestAnimationFrame(a),config.global.autoAnswer&&document.querySelector('div[class*=""questionText""]'))try{Array.from(document.querySelectorAll('div[class*=""answerText""]')).filter((e=>e.firstChild.textContent==getFuncs().memoizedState.question.correctAnswers[0]))[1].click()}catch(e){Array.from(document.querySelectorAll('div[class*=""answerText""]')).filter((e=>e.firstChild.textContent==getFuncs().state.question.correctAnswers[0]))[1].click()}config.global.autoGetQuestions&&document.querySelector('div[class*=""modalButton""]')?.firstChild&&document.querySelector('div[class*=""modalButton""]')?.firstChild.click(),config.global.autoNextQuestion&&document.querySelector('div[class*=""nextText""]')&&document.querySelector('div[class*=""nextText""]').click()}if(""defense""===config.GameMode)getFuncs()?.state&&(config.TowerDefense.regeneratingHealth&&getFuncs().state.health<1e5&&(getFuncs().state.health=1e5),config.TowerDefense.autoNextRound&&document.querySelector(""#nextRound"")&&nextRound.click(),config.TowerDefense.autoKillEnemies&&getFuncs().enemies&&config.TowerDefense.clearEnemies())}try{a()}catch(e){r=!1,cancelAnimationFrame(f),console.log(e)}document.getElementById(""enemySpeedMultiplier"").addEventListener(""input"",(function(){config.TowerDefense.enemySpeedMultiplier=parseFloat(this.value)})),document.getElementById(""autoAnswer"").addEventListener(""change"",(function(){config.global.autoAnswer=this.checked})),document.getElementById(""autoGetQuestion"").addEventListener(""change"",(function(){config.global.autoGetQuestions=this.checked})),document.getElementById(""autoNextQuestion"").addEventListener(""change"",(function(){config.global.autoNextQuestion=this.checked})),document.getElementById(""Health"").addEventListener(""input"",(function(){config.TowerDefense.health=parseFloat(this.value)})),document.getElementById(""Tokens"").addEventListener(""input"",(function(){config.TowerDefense.tokens=parseFloat(this.value)})),document.getElementById(""Damage"").addEventListener(""input"",(function(){config.TowerDefense.damage=parseFloat(this.value)})),document.getElementById(""Round"").addEventListener(""input"",(function(){config.TowerDefense.round=parseFloat(this.value)})),document.getElementById(""autoNextRound"").addEventListener(""change"",(function(){config.TowerDefense.autoNextRound=this.checked})),document.getElementById(""autoKillEnemies"").addEventListener(""change"",(function(){config.TowerDefense.autoKillEnemies=this.checked})),document.getElementById(""regeneratingHealth"").addEventListener(""change"",(function(){config.TowerDefense.regeneratingHealth=this.checked})),document.getElementById(""maxtowers"").addEventListener(""click"",(function(){config.TowerDefense.maxAllTowers()})),document.getElementById(""killenemies"").addEventListener(""click"",(function(){config.TowerDefense.clearEnemies()})),document.querySelector("".gui2"").style.display=""block"",document.addEventListener(""keyup"",(e=>{""`""==e.key&&(document.querySelector("".gui2"").style.display=""none""==document.querySelector("".gui2"").style.display?""block"":""none"")})),document.querySelector(""label[style='text-decoration-line:underline']"").addEventListener(""click"",(()=>{document.querySelector("".gui2"").style.display=""none""==document.querySelector("".gui2"").style.display?""block"":""none""}));"
dtSzBWc2,[DOORS] Super entity spawner,Marty2000,Lua,Wednesday 24th of April 2024 03:14:59 PM CDT,"local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/SindubsMini/doors-script/main/Doors/source%20(OrionLib)')))()
local Window = OrionLib:MakeWindow({Name = ""Doors Script"", HidePremium = false, SaveConfig = true, ConfigFolder = ""Doors Summon""})


local itemsTab = Window:MakeTab({
    Name = ""Items"",
    Icon = ""rbxassetid://7734068321"",
    PremiumOnly = false
})

itemsTab:AddParagraph(""Warning!"",""Only works on entites spawned by script!"")

itemsTab:AddButton({
    Name = ""Give Crucifix"",
    Callback = function ()
--[[        local shadow=game:GetObjects(""rbxassetid://11480603603"")[1]
        shadow.Parent = game.Players.LocalPlayer.Backpack
        local anim = Instance.new(""Animation"")
        anim.AnimationId = 'https://www.roblox.com/Assest?ID=9982615727'
        local track
         
        shadow.Equipped:Connect(function()
            track = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim) 
                track.Priority = Enum.AnimationPriority.Action
                track:Play()
                track.Looped = true
         
        end)
         
        shadow.Unequipped:Connect(function()
            if track then
                track:Stop()
            end
        end)
            end,
]]
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Johnny39871/assets/main/crucifixo""))()
        end
})

itemsTab:AddButton({
    Name = ""Give Skeleton Key"",
    Info = ""Opens All Doors"",
    Callback = function ()
        function skelly()
            local DoorReplication = loadstring(game:HttpGet(""https://github.com/RegularVynixu/Utilities/raw/main/Doors/Door%20Replication/Source.lua""))()
        
        
        -- Get current room
        local room = workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
        
        
        -- Replicate door
        local replicatedDoor = DoorReplication.ReplicateDoor(room, {
            CustomKeyName = ""Skeleton Key"",
            DestroyKey = false,
        })
        
        
        -- Debug features [advanced]
        replicatedDoor.Debug.OnDoorOpened = function(doorTable)
            warn(""Door"", doorTable.Model, ""has opened"")
        end
        end
        
        
        -- Get current room
        local room = workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
        
        
        -- Replicate door
        local replicatedDoor = DoorReplication.ReplicateDoor(room, {
            CustomKeyName = ""Skeleton Key"",
            DestroyKey = false,
        })
        
        
        -- Debug features [advanced]
        replicatedDoor.Debug.OnDoorOpened = function(doorTable)
            warn(""Door"", doorTable.Model, ""has opened"")
        end
                local shadow=game:GetObjects(""rbxassetid://11491147151"")[1]
        shadow.Parent = game.Players.LocalPlayer.Backpack
        local anim = Instance.new(""Animation"")
        local anim2 = Instance.new(""Animation"")
        anim.AnimationId = 'https://www.roblox.com/Assest?ID=6525854363'
        anim2.AnimationId = 'https://www.roblox.com/Assest?ID=10526835827'
        local track
         
        shadow.Equipped:Connect(function()
            track = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim) 
                track.Priority = Enum.AnimationPriority.Action
                track:Play()
                track.Looped = false
                wait(1.4)
            track2 = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim2) 
                track2.Priority = Enum.AnimationPriority.Action
                track2:Play()
                track2.Looped = false
         
        end)
         
        shadow.Unequipped:Connect(function()
            if track then
                track:Stop()
                track2:Stop()
            end
        end)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
            if workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value].Door:FindFirstChild(""Lock"") then
                print(""YES KEY"")
           skelly()
           else
               print(""no."")
        end
        end)
    end
})

local time = Window:MakeTab({
    Name = ""Entity Timer"",
    Icon = ""rbxassetid://11372950109"",
    PremiumOnly = false
})

time:AddParagraph(""sorry guys"", ""so far only ordinary entities"")

time:AddButton({
    Name = ""Screech Every 15 Secs"",
    Callback = function ()
    local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

while true do -- Will run the script forever
  coroutine.wrap(function() require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(Data) end)() -- Coroutines prevent the script from yielding.
task.wait(15) -- Waits somewhere around a millisecond before executing again. This is necessary so that the script won't crash your game. You can also add a time as such: task.wait(1) or task.wait(0.5)
end

end
})

time:AddButton({
    Name = ""Halt Every 15 Secs"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

        while true do -- Will run the script forever
          coroutine.wrap(function() require(game.ReplicatedStorage.ClientModules.EntityModules.Glitch).stuff(Data, workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)])          end)() -- Coroutines prevent the script from yielding.
        task.wait(15) -- Waits somewhere around a millisecond before executing again. This is necessary so that the script won't crash your game. You can also add a time as such: task.wait(1) or task.wait(0.5)
        end
    end
})

time:AddButton({
    Name = ""Glitch Every 15 Secs"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

        while true do -- Will run the script forever
          coroutine.wrap(function() require(game.ReplicatedStorage.ClientModules.EntityModules.Glitch).stuff(Data, workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)]) end)() -- Coroutines prevent the script from yielding.
        task.wait(15) -- Waits somewhere around a millisecond before executing again. This is necessary so that the script won't crash your game. You can also add a time as such: task.wait(1) or task.wait(0.5)
        end
    end
})

time:AddButton({
    Name = ""Heartbeat Minigame Every 15 Secs"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

        while true do -- Will run the script forever
          coroutine.wrap(function() firesignal(game.ReplicatedStorage.Bricks.ClutchHeartbeat.OnClientEvent)  end)() -- Coroutines prevent the script from yielding.
        task.wait(15) -- Waits somewhere around a millisecond before executing again. This is necessary so that the script won't crash your game. You can also add a time as such: task.wait(1) or task.wait(0.5)
        end
    end
})

time:AddButton({
    Name = ""Timothy Every 15 Secs"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

        while true do -- Will run the script forever
          coroutine.wrap(function() local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

            require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.SpiderJumpscare)(Data.workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value].Assets:WaitForChild(""Dresser"").DrawerContainer, 0.2)  end)() -- Coroutines prevent the script from yielding.
        task.wait(15) -- Waits somewhere around a millisecond before executing again. This is necessary so that the script won't crash your game. You can also add a time as such: task.wait(1) or task.wait(0.5)
        end
    end
})

time:AddParagraph(""Bug"", ""it crashes when i click on spawn rush"")

time:AddButton({
    Name = ""Spawn Rush Every 15 Secs"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        
        while true do
            coroutine.wrap(function() local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Rush"", -- Custom name of your entity
            Model = ""https://github.com/Johnny39871/assets/blob/main/Rush.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
            Speed = 100, -- Percentage, 100 = default Rush speed
            DelayTime = 2, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 25,
            BreakLights = true,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                1, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 1,
                WaitTime = 2,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                true, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://10483855823"", -- Image1 url
                    Image2 = ""rbxassetid://10483999903"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(0, 0, 255), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 4,
                        Max = 4,
                    },
                },
            },
            CustomDialog = {""You died to Rush..."", ""your balls look dry"", ""Can I put some lotion on them?""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity) end)()
        
    end
    end
})


local customTab = Window:MakeTab({
    Name = ""Custom Entites"",
    Icon = ""rbxassetid://11372950109"",
    PremiumOnly = false
})

customTab:AddButton({
    Name = ""Spawn A-60"", 
    Callback = function ()
        local Creator = loadstring(game:HttpGet(https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/V1/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""A-60"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/A-60.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 1, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 3,
        Max = 3,
        WaitTime = 5,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {30, 30, 0.1, 1}, -- Shake values (don't change if you don't know)
        50, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://11394048190"", -- Image1 url
            Image2 = ""rbxassetid://11394048190"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 0, 0), -- Color
            },
            Tease = {
                false, -- Enabled/Disabled
                Min = 1,
                Max = 1,
            },
        },
    },
    CustomDialog = {""You died to A-60"", ""It can Apear at any moment, a loud scream will anounce its presence"", ""When you hear it spawn you must stay out of its reach as soon as possible"", ""It knows exactly where you are so hiding in different places will not work..""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    
    
    end
    
    
    
    })


customTab:AddButton({
    Name = ""Spawn Firebrand"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Firebrand"", -- Custom name of your entity
    Model = ""https://github.com/fnaclol/sussy-bois/raw/main/FireBrand3.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 400, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        1, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 2,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 15, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        true, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You died to whom you call FireBrand"", ""FireBrand will spawn only on your will"", ""When you hear him spawn you only have 2 seconds to hide"", ""Vents do not save you aswell""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

        
    end
})


customTab:AddButton({
    Name = ""Spawn Rebound"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Rebound"", -- Custom name of your entity
            Model = ""rbxassetid://11401769490"", -- Can be GitHub file or rbxassetid
            Speed = 300, -- Percentage, 100 = default Rush speed
            DelayTime = 3, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 50,
            BreakLights = false,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                2.5, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 6,
                WaitTime = 7,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {5, 15, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                false, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://11372489796"", -- Image1 url
                    Image2 = ""rbxassetid://11372489796"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(255, 0, 0), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 1,
                        Max = 3,
                    },
                },
            },
            CustomDialog = {""You died to Rebound..."", ""The lights flicker upon its scream."", ""It is also tricky, as it rebounds."", ""You need to hide to around 6 times.""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        
    end
})



customTab:AddButton({
    Name = ""Spawn Angry Munci"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Angry Munci"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/AngryMunci.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 400, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        3, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 3, 1}, -- Shake values (don't change if you don't know)
        50, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)
    end
})


customTab:AddButton({
    Name = ""Spawn BigGames"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""BigGames"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/BIGGAMES.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 200, -- Percentage, 100 = default Rush speed
    DelayTime = 3, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        3, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 5,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 1, 2}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Rush (Ambush (No Sound)) ??"",
    Callback = function ()
        
local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""bruh"", -- Custom name of your entity
    Model = ""https://github.com/RegularVynixu/Utilities/blob/main/Doors%20Entity%20Spawner/Models/Rush.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 100, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 5,
        WaitTime = 3,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {4.5, 15, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

end
})

customTab:AddButton({
    Name = ""Spawn Bonnie"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Bonnie"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Bonnie.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Capybara"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Capybara"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Capybara.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 100, -- Percentage, 100 = default Rush speed
    DelayTime = 3, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 3,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Chica"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Chica"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Chica.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 3, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 3,
        Max = 6,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Depth"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Depth"", -- Custom name of your entity
            Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Depth.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
            Speed = 300, -- Percentage, 100 = default Rush speed
            DelayTime = 2, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 50,
            BreakLights = true,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                2, -- Time (seconds)
            },
            Cycles = {
                Min = 2,
                Max = 4,
                WaitTime = 2,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {10, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                false, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://10483855823"", -- Image1 url
                    Image2 = ""rbxassetid://10483999903"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(255, 255, 255), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 1,
                        Max = 3,
                    },
                },
            },
            CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        
        
    end
})

customTab:AddButton({
    Name = ""Spawn Doge"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Doge"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Doge.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 3, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 5,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {4.9, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Eater"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Eater"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Eater.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        1, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Elgato"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Elgato"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Elgato.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 230, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        1, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Flamingo"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Flamingo"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Flamingo.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        4, -- Time (seconds)
    },
    Cycles = {
        Min = 3,
        Max = 6,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

customTab:AddButton({
    Name = ""Spawn Foxy"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Foxy"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Foxy.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.9, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Freddy Fazbear"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Freddy Fazbear"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/FreddyFazbear.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = true,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        3, -- Time (seconds)
    },
    Cycles = {
        Min = 1,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {5.5, 20, 1.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Greed"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Greed"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Greed.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Greed RF"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Greed RF"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/GreedRF.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Happy Muchi"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Happy Munci"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/HappyMuchi.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Hehehehaw"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Hehehehaw"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Hehehehaw.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Kardin"", -- subscribe
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Kardin"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Kardin.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn LSPLASH"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""LSPLASH"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/LSPLASH.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Movong Eyes"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Moving Eyes"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/MovingEyes.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Obunga"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Obunga"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Obunga.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 400, -- Percentage, 100 = default Rush speed
    DelayTime = 4, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        4, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 6,
        WaitTime = 3,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {7, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Old Ambush"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Ambush"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/OldAmbush.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Orange"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Orange"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Orange.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Peter Griffin"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Peter Griffin"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/PeterGriffin.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 350, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Pikachu"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Greed RF"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Pikachu.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 350, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Sanic"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Sanic"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Sanic.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 450, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 3,
        Max = 6,
        WaitTime = 4,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {7, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Saul"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Saul"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Saul.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 300, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn Wise Mystical Tree"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Greed RF"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/Wise Mystical Tree.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})

customTab:AddButton({
    Name = ""Spawn plamen6789"", -- like
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

-- Create entity
local entity = Creator.createEntity({
    CustomName = ""Greed RF"", -- Custom name of your entity
    Model = ""https://github.com/plamen6789/CustomDoorsMonsters/blob/main/plamen6789.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
    Speed = 250, -- Percentage, 100 = default Rush speed
    DelayTime = 2, -- Time before starting cycles (seconds)
    HeightOffset = 0,
    CanKill = false,
    KillRange = 50,
    BreakLights = false,
    BackwardsMovement = false,
    FlickerLights = {
        true, -- Enabled/Disabled
        2, -- Time (seconds)
    },
    Cycles = {
        Min = 2,
        Max = 4,
        WaitTime = 2,
    },
    CamShake = {
        true, -- Enabled/Disabled
        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
        100, -- Shake start distance (from Entity to you)
    },
    Jumpscare = {
        false, -- Enabled/Disabled
        {
            Image1 = ""rbxassetid://10483855823"", -- Image1 url
            Image2 = ""rbxassetid://10483999903"", -- Image2 url
            Shake = true,
            Sound1 = {
                10483790459, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Sound2 = {
                10483837590, -- SoundId
                { Volume = 0.5 }, -- Sound properties
            },
            Flashing = {
                true, -- Enabled/Disabled
                Color3.fromRGB(255, 255, 255), -- Color
            },
            Tease = {
                true, -- Enabled/Disabled
                Min = 1,
                Max = 3,
            },
        },
    },
    CustomDialog = {""You can"", ""put your"", ""custom death"", ""message here.""}, -- Custom death message
})

-----[[ Advanced ]]-----
entity.Debug.OnEntitySpawned = function(entityTable)
    print(""Entity has spawned:"", entityTable.Model)
end

entity.Debug.OnEntityDespawned = function(entityTable)
    print(""Entity has despawned:"", entityTable.Model)
end

entity.Debug.OnEntityStartMoving = function(entityTable)
    print(""Entity has started moving:"", entityTable.Model)
end

entity.Debug.OnEntityFinishedRebound = function(entityTable)
    print(""Entity has finished rebound:"", entityTable.Model)
end

entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
    print(""Entity:"", entityTable.Model, ""has entered room:"", room)
end

entity.Debug.OnLookAtEntity = function(entityTable)
    print(""Player has looked at entity:"", entityTable.Model)
end

entity.Debug.OnDeath = function(entityTable)
    warn(""Player has died."")
end
------------------------

-- Run the created entity
Creator.runEntity(entity)

    end
})


local everyTab = Window:MakeTab({
    Name = ""Entity Every Door"",
    Icon = ""rbxassetid://11372950109"",
    PremiumOnly = false
})

everyTab:AddParagraph(""Warning!"",""High performance required!"")

everyTab:AddButton({
    Name = ""Screech Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(Data)
        end)
        
    end
})

everyTab:AddButton({
    Name = ""Spawn Eyes Every Door"",
    Callback = function ()
	    game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
            local enableDamage = true
        repenttimes = 0
        local deadeyescrucifix = false
        local repentcomplete = false
        local currentLoadedRoom = workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
        local eyes = game:GetObjects(""rbxassetid://11388700077"")[1]
        local num = math.floor(#currentLoadedRoom.Nodes:GetChildren() / 2)
        eyes.CFrame = (num == 0 and currentLoadedRoom.Base or currentLoadedRoom.Nodes[num]).CFrame + Vector3.new(0, 7, 0)
        
        eyes.Parent = workspace
        eyes.Initiate:Play()
        task.wait(0.5)
        eyes.Attachment.Eyes.Enabled = true
        eyes.whisper:Play()
        eyes.whisper.Looped = true
        function EyesHell()
        ts = game:GetService(""TweenService"")
        
        wait(3)
        
        eyes.Scream:Play()
        ts:Create(eyes,TweenInfo.new(5),{CFrame = eyes.CFrame - Vector3.new(0,12,0)}):Play()
        wait(7)
        eyes:Destroy()
        end
        local hum = game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"")
        
        local function IsVisible(part)
            local vec, found=workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            local onscreen = found and vec.Z > 0
            local cfg = RaycastParams.new();
            cfg.FilterType = Enum.RaycastFilterType.Blacklist
            cfg.FilterDescendantsInstances = {part};
        
            local cast = workspace:Raycast(part.Position, (game.Players.LocalPlayer.Character.UpperTorso.Position - part.Position), cfg);
            return (onscreen and true) and ((cast and cast.Instance).Parent==game.Players.LocalPlayer.Character and true)
        end
        
        while true do
            if workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value] ~= currentLoadedRoom then
                enableDamage = false
                task.wait(0.2)
                eyes:Destroy()
            end
            if enableDamage then
                if (IsVisible(eyes)) and not game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and deadeyescrucifix == false then
                game.Players.LocalPlayer.Character.Humanoid.Health = game.Players.LocalPlayer.Character.Humanoid.Health - 10
                wait(0.2)
                elseif (IsVisible(eyes)) and game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes < 5 and deadeyescrucifix == false then
                print(""GET THAT AWAY FROM ME"")
                eyes.Repent:Play()
                eyes.Attachment.Angry.Enabled = true
                wait(1)
                repenttimes = repenttimes + 1
                print(repenttimes)
                eyes.Attachment.Angry.Enabled = false
                wait(0.4)
                elseif game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes == 5 and deadeyescrucifix == false then
                local hi = game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle:Clone()
                hi.Anchored = true
                hi.Parent = workspace
                hi:PivotTo(game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle.CFrame)
                game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix""):Destroy()
                EyesHell()
                enableDamage = false
                    if hum.Health <= 0 then
                        game:GetService(""ReplicatedStorage"").GameStats[""Player_"" .. game.Players.LocalPlayer.Name].Total.DeathCause.Value =
                            ""Eyes""
                        debug.setupvalue(
                            getconnections(game:GetService(""ReplicatedStorage"").Bricks.DeathHint.OnClientEvent)[1].Function,
                            1,
                            {
                                ""You died to the Eyes..."",
                                ""They don't like to be stared at."",
                            }
                        )
                    end
                end
            end
            task.wait(0.2)
        end
        end)
            end,
})

everyTab:AddButton({
    Name = ""Jack Hallway Every Door"",
    Callback = function ()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
            local currentLoadedRoom=workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
            local shadow=game:GetObjects(""rbxassetid://11446576619"")[1]
            firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""flickerLights"", game.ReplicatedStorage.GameData.LatestRoom.Value, 1)
            shadow:PivotTo(currentLoadedRoom.RoomStart.CFrame)
            wait(0.2)
            shadow.Parent=workspace
            shadow.Sound:Play()
            task.wait(0.3)
            shadow:Destroy()
            firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""tryp"", workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value], 10)
            end)
    end
})

everyTab:AddButton({
    Name = ""Halt Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        require(game.ReplicatedStorage.ClientModules.EntityModules.Glitch).stuff(Data, workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)])
        end)
    end    
})


everyTab:AddButton({
    Name = ""Break Lights Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""breakLights"", workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value], 0.416, 60) 
        end)
    end    
})

everyTab:AddButton({
    Name = ""Spawn Eyes Every Door"",
    Callback = function ()
	    game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
            local enableDamage = true
        repenttimes = 0
        local deadeyescrucifix = false
        local repentcomplete = false
        local currentLoadedRoom = workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
        local eyes = game:GetObjects(""rbxassetid://11388700077"")[1]
        local num = math.floor(#currentLoadedRoom.Nodes:GetChildren() / 2)
        eyes.CFrame = (num == 0 and currentLoadedRoom.Base or currentLoadedRoom.Nodes[num]).CFrame + Vector3.new(0, 7, 0)
        
        eyes.Parent = workspace
        eyes.Initiate:Play()
        task.wait(0.5)
        eyes.Attachment.Eyes.Enabled = true
        eyes.whisper:Play()
        eyes.whisper.Looped = true
        function EyesHell()
        ts = game:GetService(""TweenService"")
        
        wait(3)
        
        eyes.Scream:Play()
        ts:Create(eyes,TweenInfo.new(5),{CFrame = eyes.CFrame - Vector3.new(0,12,0)}):Play()
        wait(7)
        eyes:Destroy()
        end
        local hum = game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"")
        
        local function IsVisible(part)
            local vec, found=workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            local onscreen = found and vec.Z > 0
            local cfg = RaycastParams.new();
            cfg.FilterType = Enum.RaycastFilterType.Blacklist
            cfg.FilterDescendantsInstances = {part};
        
            local cast = workspace:Raycast(part.Position, (game.Players.LocalPlayer.Character.UpperTorso.Position - part.Position), cfg);
            return (onscreen and true) and ((cast and cast.Instance).Parent==game.Players.LocalPlayer.Character and true)
        end
        
        while true do
            if workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value] ~= currentLoadedRoom then
                enableDamage = false
                task.wait(0.2)
                eyes:Destroy()
            end
            if enableDamage then
                if (IsVisible(eyes)) and not game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and deadeyescrucifix == false then
                game.Players.LocalPlayer.Character.Humanoid.Health = game.Players.LocalPlayer.Character.Humanoid.Health - 10
                wait(0.2)
                elseif (IsVisible(eyes)) and game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes < 5 and deadeyescrucifix == false then
                print(""GET THAT AWAY FROM ME"")
                eyes.Repent:Play()
                eyes.Attachment.Angry.Enabled = true
                wait(1)
                repenttimes = repenttimes + 1
                print(repenttimes)
                eyes.Attachment.Angry.Enabled = false
                wait(0.4)
                elseif game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes == 5 and deadeyescrucifix == false then
                local hi = game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle:Clone()
                hi.Anchored = true
                hi.Parent = workspace
                hi:PivotTo(game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle.CFrame)
                game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix""):Destroy()
                EyesHell()
                enableDamage = false
                    if hum.Health <= 0 then
                        game:GetService(""ReplicatedStorage"").GameStats[""Player_"" .. game.Players.LocalPlayer.Name].Total.DeathCause.Value =
                            ""Eyes""
                        debug.setupvalue(
                            getconnections(game:GetService(""ReplicatedStorage"").Bricks.DeathHint.OnClientEvent)[1].Function,
                            1,
                            {
                                ""You died to the Eyes..."",
                                ""They don't like to be stared at."",
                            }
                        )
                    end
                end
            end
            task.wait(0.2)
        end
        end)
            end,
        })
everyTab:AddButton({
    Name = ""Flicker Lights Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""flickerLights"", game.ReplicatedStorage.GameData.LatestRoom.Value, 1) 
        end)
    end    
})


everyTab:AddButton({
    Name = ""Seek Eyes Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        require(game:GetService(""ReplicatedStorage"").ClientModules.EntityModules.Seek).tease(nil, workspace.CurrentRooms:WaitForChild(game.ReplicatedStorage.GameData.LatestRoom.Value), 14, 1665596753, true)
        end)
    end    
})

everyTab:AddButton({
    Name = ""Heartbeat Minigame Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        firesignal(game.ReplicatedStorage.Bricks.ClutchHeartbeat.OnClientEvent) 
        end)
    end    
})

everyTab:AddButton({
    Name = ""Red Room Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        local v1 = require(game.ReplicatedStorage.ClientModules.Module_Events)
        local room = workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute(""CurrentRoom"")]
        local seconds = 1000000
        v1.tryp(workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute(""CurrentRoom"")], seconds)
        end)
    end
})

everyTab:AddButton({
    Name = ""A-60 Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""A-60"", -- Custom name of your entity
            Model = ""https://github.com/fnaclol/sussy-bois/blob/main/A-60V2.rbxm"", -- Can be GitHub file or rbxassetid
            Speed = 200, -- Percentage, 100 = default Rush speed
            DelayTime = 3, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 50,
            BreakLights = true,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                2, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 2,
                WaitTime = 0.05,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {30, 30, 0.1, 1}, -- Shake values (don't change if you don't know)
                50, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                false, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://11394048190"", -- Image1 url
                    Image2 = ""rbxassetid://11394048190"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(255, 0, 0), -- Color
                    },
                    Tease = {
                        false, -- Enabled/Disabled
                        Min = 1,
                        Max = 1,
                    },
                },
            },
            CustomDialog = {""You died to A-60"", ""It can Apear at any moment, a loud scream will anounce its presence"", ""When you hear it spawn you must stay out of its reach as soon as possible"", ""It knows exactly where you are so hiding in different places will not work..""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        end)
    end
})

everyTab:AddButton({
    Name = ""Rebound Every Door"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
        game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Rebound"", -- Custom name of your entity
            Model = ""rbxassetid://11401769490"", -- Can be GitHub file or rbxassetid
            Speed = 150, -- Percentage, 100 = default Rush speed
            DelayTime = 3, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 50,
            BreakLights = false,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                2.5, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 6,
                WaitTime = 7,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {5, 15, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                false, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://11372489796"", -- Image1 url
                    Image2 = ""rbxassetid://11372489796"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(255, 0, 0), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 1,
                        Max = 3,
                    },
                },
            },
            CustomDialog = {""You died to Rebound..."", ""The lights flicker upon its scream."", ""It is also tricky, as it rebounds."", ""You need to hide to around 6 times.""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        
        end)
    end
})

local Tab = Window:MakeTab({
    Name = ""Summon Entity"",
    Icon = ""rbxassetid://11372950109"",
    PremiumOnly = false
})


OrionLib:MakeNotification({
    Name = ""Script"",
    Content = ""Pre-release version"",
    Time = 9
})


OrionLib:MakeNotification({
    Name = ""Made By"",
    Content = "" me in github:sindubsmini my discord: netzklap#7566"",
    Image = ""rbxassetid://4483345998"",
    Time = 3
})


Tab:AddButton({
    Name = ""Spawn Screech"",
    Callback = function ()
        require(game.StarterGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game),
    workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute(""CurrentRoom"")])
    
    end
})


Tab:AddButton({
    Name = ""Spawn 100 Screechs"",
    Callback = function ()
    local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)

    for i = 1, 100 do -- Will run the script 100 times
    coroutine.wrap(function() require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(Data) end)()
    end
    end
})




Tab:AddButton({
    Name = ""Spawn Eyes [Killable]"",
    Callback = function ()
        local enableDamage = true
        repenttimes = 0
        local deadeyescrucifix = false
        local repentcomplete = false
        local currentLoadedRoom = workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value]
        local eyes = game:GetObjects(""rbxassetid://11488518082"")[1]
        local num = math.floor(#currentLoadedRoom.Nodes:GetChildren() / 2)
        eyes.CFrame = (num == 0 and currentLoadedRoom.Base or currentLoadedRoom.Nodes[num]).CFrame + Vector3.new(0, 7, 0)
        
        eyes.Parent = workspace
        eyes.Initiate:Play()
        task.wait(0.5)
        eyes.Attachment.Eyes.Enabled = true
        eyes.whisper:Play()
        eyes.whisper.Looped = true
        function EyesHell()
        local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local camara = game.Workspace.CurrentCamera
        local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
        camara.CFrame = camara.CFrame * shakeCf
        end)
        camShake:Start()
        camShake:ShakeOnce(10,30,0.7,0.1)
        ts = game:GetService(""TweenService"")
        wait(0.2)
        local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local camara = game.Workspace.CurrentCamera
        local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
        camara.CFrame = camara.CFrame * shakeCf
        end)
        camShake:Start()
        camShake:ShakeOnce(2,30,5,2)
        wait(3)
        
        eyes.Scream:Play()
        ts:Create(eyes,TweenInfo.new(5),{CFrame = eyes.CFrame - Vector3.new(0,12,0)}):Play()
        wait(7)
        eyes:Destroy()
        end
        local hum = game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"")
        
        local function IsVisible(part)
            local vec, found=workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            local onscreen = found and vec.Z > 0
            local cfg = RaycastParams.new();
            cfg.FilterType = Enum.RaycastFilterType.Blacklist
            cfg.FilterDescendantsInstances = {part};
        
            local cast = workspace:Raycast(part.Position, (game.Players.LocalPlayer.Character.UpperTorso.Position - part.Position), cfg);
            return (onscreen and true) and ((cast and cast.Instance).Parent==game.Players.LocalPlayer.Character and true)
        end
        
        while true do
            if workspace.CurrentRooms[game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value] ~= currentLoadedRoom then
                enableDamage = false
                task.wait(0.2)
                eyes:Destroy()
            end
            if enableDamage then
                if (IsVisible(eyes)) and not game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and deadeyescrucifix == false then
                game.Players.LocalPlayer.Character.Humanoid.Health = game.Players.LocalPlayer.Character.Humanoid.Health - 10
                wait(0.2)
                elseif (IsVisible(eyes)) and game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes < 5 and deadeyescrucifix == false then
                print(""GET THAT AWAY FROM ME"")
                eyes.Repent:Play()
                eyes.Attachment.Angry.Enabled = true
                local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
        local camara = game.Workspace.CurrentCamera
        local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
        camara.CFrame = camara.CFrame * shakeCf
        end)
        camShake:Start()
        
        camShake:ShakeOnce(5,50,0.7,0.2)
                wait(0.7)
                repenttimes = repenttimes + 1
                print(repenttimes)
                eyes.Attachment.Angry.Enabled = false
                wait(0.4)
                elseif game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"") and repenttimes == 5 and deadeyescrucifix == false then
                local hi = game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle:Clone()
                hi.Anchored = true
                hi.Parent = workspace
                hi:PivotTo(game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix"").Handle.CFrame)
                game.Players.LocalPlayer.Character:FindFirstChild(""Crucifix""):Destroy()
                EyesHell()
                enableDamage = false
                    if hum.Health <= 0 then
                        game:GetService(""ReplicatedStorage"").GameStats[""Player_"" .. game.Players.LocalPlayer.Name].Total.DeathCause.Value =
                            ""Eyes""
                        debug.setupvalue(
                            getconnections(game:GetService(""ReplicatedStorage"").Bricks.DeathHint.OnClientEvent)[1].Function,
                            1,
                            {
                                ""You died to the Eyes..."",
                                ""They don't like to be stared at."",
                            }
                        )
                    end
                end
            end
            task.wait(0.2)
        end
        
                       
    end
})


Tab:AddButton({
    Name = ""Heartbeat Minigame"",
    Callback = function ()
        firesignal(game.ReplicatedStorage.Bricks.ClutchHeartbeat.OnClientEvent) 
    end
})

Tab:AddButton({
    Name = ""Spawn Halt"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        require(game.ReplicatedStorage.ClientModules.EntityModules.Shade).stuff(Data, workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)])
    
    end
})


Tab:AddButton({
    Name = ""Spawn Glitch"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        require(game.ReplicatedStorage.ClientModules.EntityModules.Glitch).stuff(Data, workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)])
    
    end
})

Tab:AddButton({
    Name = ""Spawn Rush"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Rush"", -- Custom name of your entity
            Model = ""https://github.com/Johnny39871/assets/blob/main/Rush.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
            Speed = 100, -- Percentage, 100 = default Rush speed
            DelayTime = 2, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = false,
            KillRange = 25,
            BreakLights = true,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                1, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 1,
                WaitTime = 2,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                true, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://10483855823"", -- Image1 url
                    Image2 = ""rbxassetid://10483999903"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(0, 0, 255), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 4,
                        Max = 4,
                    },
                },
            },
            CustomDialog = {""You died to Rush..."", ""your balls look dry"", ""Can I put some lotion on them?""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        
    end
})

Tab:AddButton({
    Name = ""Spawn Rush [Killable]"",
    Callback = function ()
        local Creator = loadstring(game:HttpGet(""https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors%20Entity%20Spawner/Source.lua""))()

        -- Create entity
        local entity = Creator.createEntity({
            CustomName = ""Rush"", -- Custom name of your entity
            Model = ""https://github.com/Johnny39871/assets/blob/main/Rush.rbxm?raw=true"", -- Can be GitHub file or rbxassetid
            Speed = 100, -- Percentage, 100 = default Rush speed
            DelayTime = 2, -- Time before starting cycles (seconds)
            HeightOffset = 0,
            CanKill = true,
            KillRange = 25,
            BreakLights = true,
            BackwardsMovement = false,
            FlickerLights = {
                true, -- Enabled/Disabled
                1, -- Time (seconds)
            },
            Cycles = {
                Min = 1,
                Max = 1,
                WaitTime = 2,
            },
            CamShake = {
                true, -- Enabled/Disabled
                {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                100, -- Shake start distance (from Entity to you)
            },
            Jumpscare = {
                true, -- Enabled/Disabled
                {
                    Image1 = ""rbxassetid://10483855823"", -- Image1 url
                    Image2 = ""rbxassetid://10483999903"", -- Image2 url
                    Shake = true,
                    Sound1 = {
                        10483790459, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Sound2 = {
                        10483837590, -- SoundId
                        { Volume = 0.5 }, -- Sound properties
                    },
                    Flashing = {
                        true, -- Enabled/Disabled
                        Color3.fromRGB(0, 0, 255), -- Color
                    },
                    Tease = {
                        true, -- Enabled/Disabled
                        Min = 4,
                        Max = 4,
                    },
                },
            },
            CustomDialog = {""You died to Rush..."", ""your balls look dry"", ""Can I put some lotion on them?""}, -- Custom death message
        })
        
        -----[[ Advanced ]]-----
        entity.Debug.OnEntitySpawned = function(entityTable)
            print(""Entity has spawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityDespawned = function(entityTable)
            print(""Entity has despawned:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityStartMoving = function(entityTable)
            print(""Entity has started moving:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityFinishedRebound = function(entityTable)
            print(""Entity has finished rebound:"", entityTable.Model)
        end
        
        entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
            print(""Entity:"", entityTable.Model, ""has entered room:"", room)
        end
        
        entity.Debug.OnLookAtEntity = function(entityTable)
            print(""Player has looked at entity:"", entityTable.Model)
        end
        
        entity.Debug.OnDeath = function(entityTable)
            warn(""Player has died."")
        end
        ------------------------
        
        -- Run the created entity
        Creator.runEntity(entity)
        
    end
})


Tab:AddButton({
    Name = ""Break Lights"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""breakLights"", workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value], 0.416, 60) 
    end
})


Tab:AddButton({
    Name = ""Flicker Lights"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        firesignal(game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent, ""flickerLights"", game.ReplicatedStorage.GameData.LatestRoom.Value, 1) 
    end
})


Tab:AddButton({
    Name = ""Seek Eyes"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        require(game:GetService(""ReplicatedStorage"").ClientModules.EntityModules.Seek).tease(nil, workspace.CurrentRooms:WaitForChild(game.ReplicatedStorage.GameData.LatestRoom.Value), 14, 1665596753, true)
    end
})


Tab:AddButton({
    Name = ""Red Room"",
    Callback = function ()
        local v1 = require(game.ReplicatedStorage.ClientModules.Module_Events)
        local room = workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute(""CurrentRoom"")]
        local seconds = 1000000
        v1.tryp(workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute(""CurrentRoom"")], seconds)
    end
})


local PlayerTab = Window:MakeTab({
    Name = ""Player"",
    Icon = ""rbxassetid://4483345998"",
    PremiumOnly = false
})

local FullHealth = 100

PlayerTab:AddButton({
    Name = ""100 HP"",
    Callback = function ()
        game.Players.LocalPlayer.Character.Humanoid.Health = FullHealth

    end
})

local WalkSpeed = 0
PlayerTab:AddSlider({
	Name = ""WalkSpeed"",
	Min = 0,
	Max = 200,
	Default = 16,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = """",
	Callback = function(Value)
		WalkSpeed = Value

        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end    
})

local pcl = Instance.new(""SpotLight"")
pcl.Brightness = 1
pcl.Face = Enum.NormalId.Front
pcl.Range = 90
pcl.Parent = game.Players.LocalPlayer.Character.Head
pcl.Enabled = false


PlayerTab:AddToggle({
	Name = ""HeadLight"",
	Default = false,
    Callback = function(Value)
        pcl.Enabled = Value
    end
})


local VisualsTab = Window:MakeTab({
    Name = ""Visuals"",
    Icon = ""rbxassetid://4483345998"",
    PremiumOnly = false
})

VisualsTab:AddButton({
    Name = ""Get All Achievements"",
    Callback = function ()
        local Data = require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
        for i,v in pairs(require(game.ReplicatedStorage.Achievements)) do
            spawn(function()
                require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.AchievementUnlock)(nil, i)
            end)
        end
    end
})

local CF = CFrame.new
local LatestRoom = game:GetService(""ReplicatedStorage"").GameData.LatestRoom
local ChaseStart = game:GetService(""ReplicatedStorage"").GameData.ChaseStart

local KeyChams = {}
VisualsTab:AddToggle({
	Name = ""Key Chams"",
	Default = false,
    Flag = ""KeyToggle"",
    Save = true,
	Callback = function(Value)
		for i,v in pairs(KeyChams) do
            v.Enabled = Value
        end
	end    
})

local function ApplyKeyChams(inst)
    wait()
    local Cham = Instance.new(""Highlight"")
    Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    Cham.FillColor = Color3.new(0.980392, 0.670588, 0)
    Cham.FillTransparency = 0.5
    Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
    Cham.Parent = game:GetService(""CoreGui"")
    Cham.Adornee = inst
    Cham.Enabled = OrionLib.Flags[""KeyToggle""].Value
    Cham.RobloxLocked = true
    return Cham
end

local KeyCoroutine = coroutine.create(function()
    workspace.CurrentRooms.DescendantAdded:Connect(function(inst)
        if inst.Name == ""KeyObtain"" then
            table.insert(KeyChams,ApplyKeyChams(inst))
        end
    end)
end)
for i,v in ipairs(workspace:GetDescendants()) do
    if v.Name == ""KeyObtain"" then
        table.insert(KeyChams,ApplyKeyChams(v))
    end
end
coroutine.resume(KeyCoroutine)

local BookChams = {}
VisualsTab:AddToggle({
	Name = ""Book Chams"",
	Default = false,
    Flag = ""BookToggle"",
    Save = true,
	Callback = function(Value)
		for i,v in pairs(BookChams) do
            v.Enabled = Value
        end
	end    
})

local FigureChams = {}
VisualsTab:AddToggle({
	Name = ""Figure Chams"",
	Default = false,
    Flag = ""FigureToggle"",
    Save = true,
    Callback = function(Value)
        for i,v in pairs(FigureChams) do
            v.Enabled = Value
        end
    end
})

local function ApplyBookChams(inst)
    if inst:IsDescendantOf(game:GetService(""Workspace"").CurrentRooms:FindFirstChild(""50"")) and game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value == 50 then
        wait()
        local Cham = Instance.new(""Highlight"")
        Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Cham.FillColor = Color3.new(0, 1, 0.749019)
        Cham.FillTransparency = 0.5
        Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
        Cham.Parent = game:GetService(""CoreGui"")
        Cham.Enabled = OrionLib.Flags[""BookToggle""].Value
        Cham.Adornee = inst
        Cham.RobloxLocked = true
        return Cham
    end
end

local function ApplyEntityChams(inst)
    wait()
    local Cham = Instance.new(""Highlight"")
    Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    Cham.FillColor = Color3.new(1, 0, 0)
    Cham.FillTransparency = 0.5
    Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
    Cham.Parent = game:GetService(""CoreGui"")
    Cham.Enabled = OrionLib.Flags[""FigureToggle""].Value
    Cham.Adornee = inst
    Cham.RobloxLocked = true
    return Cham
end

local BookCoroutine = coroutine.create(function()
    task.wait(1)
    for i,v in pairs(game:GetService(""Workspace"").CurrentRooms[""50""].Assets:GetDescendants()) do
        if v.Name == ""LiveHintBook"" then
            table.insert(BookChams,ApplyBookChams(v))
        end
    end
end)
local EntityCoroutine = coroutine.create(function()
    local Entity = game:GetService(""Workspace"").CurrentRooms[""50""].FigureSetup:WaitForChild(""FigureRagdoll"",5)
    Entity:WaitForChild(""Torso"",2.5)
    table.insert(FigureChams,ApplyEntityChams(Entity))
end)

local GameTab = Window:MakeTab({
    Name = ""Game"",
    Icon = ""rbxassetid://4483345998"",
    PremiumOnly = false
})

GameTab:AddToggle({
	Name = ""Instant Interact"",
	Default = false,
    Flag = ""InstantToggle"",
    Save = true
})
GameTab:AddButton({
	Name = ""Skip Door"",
	Callback = function()
        pcall(function()
            local HasKey = false
            local CurrentDoor = workspace.CurrentRooms[tostring(game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value)]:WaitForChild(""Door"")
            for i,v in ipairs(CurrentDoor.Parent:GetDescendants()) do
                if v.Name == ""KeyObtain"" then
                    HasKey = v
                end
            end
            if HasKey then
                game.Players.LocalPlayer.Character:PivotTo(CF(HasKey.Hitbox.Position))
                wait(0.3)
                fireproximityprompt(HasKey.ModulePrompt,0)
                game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                wait(0.3)
                fireproximityprompt(CurrentDoor.Lock.UnlockPrompt,0)
            end
            if LatestRoom == 50 then
                CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom+1)]:WaitForChild(""Door"")
            end
            game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
            wait(0.3)
            CurrentDoor.ClientOpen:FireServer()
        end)
  	end    
})

GameTab:AddToggle({
	Name = ""Auto skip door"",
	Default = false,
    Save = false,
    Flag = ""AutoSkip""
})

local AutoSkipCoro = coroutine.create(function()
        while true do
            task.wait()
            pcall(function()
            if OrionLib.Flags[""AutoSkip""].Value == true and game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value < 100 then
                local HasKey = false
                local LatestRoom = game:GetService(""ReplicatedStorage"").GameData.LatestRoom.Value
                local CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom)]:WaitForChild(""Door"")
                for i,v in ipairs(CurrentDoor.Parent:GetDescendants()) do
                    if v.Name == ""KeyObtain"" then
                        HasKey = v
                    end
                end
                if HasKey then
                    game.Players.LocalPlayer.Character:PivotTo(CF(HasKey.Hitbox.Position))
                    task.wait(0.3)
                    fireproximityprompt(HasKey.ModulePrompt,0)
                    game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                    task.wait(0.3)
                    fireproximityprompt(CurrentDoor.Lock.UnlockPrompt,0)
                end
                if LatestRoom == 50 then
                    CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom+1)]:WaitForChild(""Door"")
                end
                game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                task.wait(0.3)
                CurrentDoor.ClientOpen:FireServer()
            end
        end)
        end
end)
coroutine.resume(AutoSkipCoro)

GameTab:AddButton({
	Name = ""No jumpscares"",
	Callback = function()
        pcall(function()
            game:GetService(""ReplicatedStorage"").Bricks.Jumpscare:Destroy()
        end)
  	end    
})
GameTab:AddToggle({
	Name = ""Avoid Rush/Ambush"",
	Default = false,
    Flag = ""AvoidRushToggle"",
    Save = true
})
GameTab:AddToggle({
	Name = ""No Screech"",
	Default = false,
    Flag = ""ScreechToggle"",
    Save = true
})

GameTab:AddToggle({
	Name = ""Always win heartbeat"",
	Default = false,
    Flag = ""HeartbeatWin"",
    Save = true
})

GameTab:AddToggle({
	Name = ""Predict chases"",
	Default = false,
    Flag = ""PredictToggle"" ,
    Save = true
})
GameTab:AddToggle({
	Name = ""Notify when mob spawns"",
	Default = false,
    Flag = ""MobToggle"" ,
    Save = true
})
GameTab:AddButton({
	Name = ""Complete breaker box minigame"",
	Callback = function()
        game:GetService(""ReplicatedStorage"").Bricks.EBF:FireServer()
  	end    
})
GameTab:AddButton({
	Name = ""Skip Door 50"",
	Callback = function()
        local CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom+1)]:WaitForChild(""Door"")
        game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
  	end    
})




game:GetService(""RunService"").RenderStepped:Connect(function()
    pcall(function()
        if game.Players.LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
            game.Players.LocalPlayer.Character:TranslateBy(game.Players.LocalPlayer.Character.Humanoid.MoveDirection * TargetWalkspeed/50)
        end
    end)
end)

game:GetService(""Workspace"").CurrentRooms.DescendantAdded:Connect(function(descendant)
    if OrionLib.Flags[""NoSeek""].Value == true and descendant.Name == (""Seek_Arm"" or ""ChandelierObstruction"") then
        task.spawn(function()
            wait()
            descendant:Destroy()
        end)
    end
end)

game:GetService(""ProximityPromptService"").PromptButtonHoldBegan:Connect(function(prompt)
    if OrionLib.Flags[""InstantToggle""].Value == true then
        fireproximityprompt(prompt)
    end
end)

local old
old = hookmetamethod(game,""__namecall"",newcclosure(function(self,...)
    local args = {...}
    local method = getnamecallmethod()
    
    if tostring(self) == 'Screech' and method == ""FireServer"" and OrionLib.Flags[""ScreechToggle""].Value == true then
        args[1] = true
        return old(self,unpack(args))
    end
    if tostring(self) == 'ClutchHeartbeat' and method == ""FireServer"" and OrionLib.Flags[""HeartbeatWin""].Value == true then
        args[2] = true
        return old(self,unpack(args)).infiniteyield
    end
    
    return old(self,...)
end))

workspace.CurrentCamera.ChildAdded:Connect(function(child)
    if child.Name == ""Screech"" and OrionLib.Flags[""ScreechToggle""].Value == true then
        child:Destroy()
    end
end)

local NotificationCoroutine = coroutine.create(function()
    LatestRoom.Changed:Connect(function()
        if OrionLib.Flags[""PredictToggle""].Value == true then
            local n = ChaseStart.Value - LatestRoom.Value
            if 0 < n and n < 4 then
                OrionLib:MakeNotification({
                    Name = ""Warning!"",
                    Content = ""Event in "" .. tostring(n) .. "" rooms."",
                    Time = 5
                })
            end
        end
        if OrionLib.Flags[""BookToggle""].Value == true then
            if LatestRoom.Value == 50 then
                coroutine.resume(BookCoroutine)
            end
        end
        if OrionLib.Flags[""FigureToggle""].Value == true then
            if LatestRoom.Value == 50 then
                coroutine.resume(EntityCoroutine)
            end
        end
    end)
    workspace.ChildAdded:Connect(function(inst)
        if inst.Name == ""RushMoving"" and OrionLib.Flags[""MobToggle""].Value == true then
            if OrionLib.Flags[""AvoidRushToggle""].Value == true then
                OrionLib:MakeNotification({
                    Name = ""Warning!"",
                    Content = ""Avoiding Rush. Please wait."",
                    Time = 5
                })
                local OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                local con = game:GetService(""RunService"").Heartbeat:Connect(function()
                    game.Players.LocalPlayer.Character:MoveTo(OldPos + Vector3.new(0,20,0))
                end)
                
                inst.Destroying:Wait()
                con:Disconnect()

                game.Players.LocalPlayer.Character:MoveTo(OldPos)
            else
                OrionLib:MakeNotification({
                    Name = ""Warning!"",
                    Content = ""Rush has spawned, hide!"",
                    Time = 5
                })
            end
        elseif inst.Name == ""AmbushMoving"" and OrionLib.Flags[""MobToggle""].Value == true then
            if OrionLib.Flags[""AvoidRushToggle""].Value == true then
                OrionLib:MakeNotification({
                    Name = ""Warning!"",
                    Content = ""Avoiding Ambush. Please wait."",
                    Time = 5
                })
                local OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                local con = game:GetService(""RunService"").Heartbeat:Connect(function()
                    game.Players.LocalPlayer.Character:MoveTo(OldPos + Vector3.new(0,20,0))
                end)
                
                inst.Destroying:Wait()
                con:Disconnect()
                
                game.Players.LocalPlayer.Character:MoveTo(OldPos)
            else
                OrionLib:MakeNotification({
                    Name = ""Warning!"",
                    Content = ""Ambush has spawned, hide!"",
                    Time = 5
                })
            end
        end
    end)
end)


local ExtraTab = Window:MakeTab({
    Name = ""Extra"",
    Icon = ""rbxassetid://7734042071"",
    PremiumOnly = false
})

ExtraTab:AddParagraph(""Warning!"",""these scripts are not mine!"")

ExtraTab:AddButton({
    Name = ""Infinite Yield"",
    Callback = function ()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source')))()
        
    end
})

ExtraTab:AddButton({
    Name = ""the best script for the game DOORS is not advertising!"",
    Callback = function ()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Johnny39871/assets/main/DoorsHubSpawner'))()
    end
})

ExtraTab:AddButton({
    Name = ""Doors Speedrun Mode [50 door is impossible, I think]"",
    Callback = function ()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/MuhXd/DoorSuff/main/DoorsModes/DoorSpeedRun%20Mode'))()
    end
})

local CreditsTab = Window:MakeTab({
    Name = ""Credits"",
    Icon = ""rbxassetid://4483345998"",
    PremiumOnly = false
})


CreditsTab:AddParagraph(""Credits to"",""plamen6789 to custom entites model!!. Dreadmania to every door script, Break Light, Flicker Light, Loop Script. screech#6908 to crucifix script, to skeleton key script, to the best script for the game DOORS!. MuhammadGames#0017 to Doors Speedrun Script"",""My GitHub: SindubsMini - my discord: netzklap#7566"")

local UpdateTab = Window:MakeTab({
    Name = ""Update Log"",
    Icon = ""rbxassetid://4483345998"",
    PremiumOnly = false
})

UpdateTab:AddParagraph(""10.11.2022"",""Some changes, FINNALY! Timer Entity Tab RETURNED, New Tab Update Log."")

UpdateTab:AddParagraph(""Soon..."",""this script will change the library from OrionLib to RayField (because it is outdated)"")

OrionLib:Init()"
KpQ6EcUc,Calculo_Figuras,Rodripelto,Python,Wednesday 24th of April 2024 03:08:49 PM CDT,"""""""
Importaciones
""""""
import tkinter as tk
""""""
Fin Importaciones
""""""
################################# CAPA DE PRESENTACIÓN #########################################
""""""
Funciones para eventos
""""""
def elemento_seleccionado(seleccion):
    #limpiar_ventana()
    if seleccion == ""Circulo"":
        vista_circulo()
    elif seleccion == ""Triangulo"":
        vista_general()
    else: # Si el resto de figuras tiene la misma entradas incluso se puede eliminar el elif anterior, sino habría que ir completando el if con el resto de figuras
        vista_general()
def dato_modificado(evento):
    dato_base = valor_base.get()
    dato_altura = valor_altura.get()
    seleccion = lista.get()
    resultado = calculos(seleccion,dato_base,dato_altura)
    mostrar_resultados(resultado)
""""""
Fin Funciones para eventos
""""""
""""""
Funciones Generales
""""""
# Función para mostrar los label y entry generales
def vista_general():
    # Label entry entrada datos 
    base.config(text='Valor de la base')
    base.place(x=400,y=60,width=100,height=20)
    valor_base.place(x=500,y=60,width=210,height=20)
    altura.place(x=400,y=90,width=100,height=20)
    valor_altura.place(x=500,y=90,width=210,height=20)
    # Label entry resultados   
    area.place(x=400,y=120,width=100,height=20)
    valor_area.place(x=500,y=120,width=210,height=20)
    perimetro.place(x=400,y=150,width=100,height=20)
    valor_perimetro.place(x=500,y=150,width=210,height=20)
# Función para limpiar la ventana de entry y label
def vista_circulo():
    vista_general() # Muestro todos los datos
    base.config(text='Valor del radio') # Cambio el testo del label
    #Oculto lo que no me interesa
    altura.place_forget()
    valor_altura.place_forget()
    perimetro.place_forget()
    valor_perimetro.place_forget()
def mostrar_resultados(resultado):
    valor_area.config(text=resultado)
""""""
Fin Funciones Generales
""""""
""""""
Ventana principal
""""""
ventana =tk.Tk()
ventana.title(""Programa en fase beta"")
ventana.resizable(False,True)
ventana.geometry(""720x1280"")

#fondo = tk.PhotoImage(file=""fondo.gif"")
#fondo = fondo.subsample(1,1)
#fondo1 = tk.Label(image=fondo)
#fondo1.place(x=0,y=0,relwidth=1.0,relheight=1.0)

bienvenida = tk.Label(ventana,text=' Bienvenido Kevin')
bienvenida.place(x=280,width=190,height=20)
bienvenida.pack

lista = tk.StringVar(ventana)
lista.set('Figura')

lista1 = tk.StringVar(ventana)
lista1.set('Método')

figuras = ['Circulo','Triangulo','Triangulo rectángulo','Rectángulo']
metodo = ['Trigonométrico','Teorema de Pitágoras']

opcion =tk.OptionMenu(ventana,lista,*figuras,command= lambda seleccion: elemento_seleccionado(seleccion))
opcion.config(width=20)
opcion.pack(side='left',padx=30,pady=30)

opcion2 =tk.OptionMenu(ventana,lista1,*metodo)
opcion2.config(width=20)
opcion2.pack(side='left',padx=30,pady=30)

solicitud = tk.Label(ventana,text='Ingresa los valores conocidos',bg='grey')
solicitud.place(x=530,y=30,width=160,height=20)
#solicitud.pack # No es necesario, ya estamos usando place

# Label entry entrada datos 
base = tk.Label(ventana)
valor_base = tk.Entry(ventana)
valor_base.bind(""<KeyRelease>"", dato_modificado)
altura = tk.Label(ventana,text='Valor de la altura')
valor_altura = tk.Entry(ventana)
valor_altura.bind(""<KeyRelease>"", dato_modificado)
# Label entry resultados   
area = tk.Label(ventana,text='Valor del área')
valor_area = tk.Label(ventana,text=""aquí se muestra el resultado"")
perimetro = tk.Label(ventana,text='Valor del perímetro')
valor_perimetro = tk.Label(ventana,text=""aquí se muestra el resultado"")

""""""
Fin Ventana principal
""""""
################################# CAPA DE TRABAJO #########################################
""""""
 Clases
""""""
class Figura:
    def __init__(self, base, altura):
        self.base = base
        self.altura = altura
    def area(self):
        return self.base * self.altura

#figuras geométricas
class Triangulo(Figura):
    # Sobre escribo el método área y heredo el método __init__
    def area():
        return self.base * self.altura / 2

class Circulo(): # No hereda de figura ya que el método init y el método área son diferentes
    def __init__(self, radio):
        self.radio = radio
    def area():
        return 3.14159 * radio ** 2
        
        
class TrianguloRectangulo(Triangulo,Figura):
    def __init__(self):
        pass

class Rectangulo(Figura):
    pass # Como el método init y el método área son iguales solo creo la clase sin añadir nada
        

#métodos
class Metodo:
    def __init__(self,trigonometrico,teorema):
        self.trigonometrico = trigonometrico
        self.teorema = teorema
""""""
 Fin Clases
""""""
""""""
Funciones Generales
""""""
def calculos(figura,valor_base,valor_altura):
    try:
        if valor_base !="""" and valor_altura !="""":
            valor_base = float(valor_base)
            valor_altura = float(valor_altura)
        if figura == ""Circulo"":
            circulo = Circulo(valor_base)
            return circulo.area()
		elif figura == ""Rectángulo"":
            figura = Rectangulo(valor_base,valor_altura)
            return figura.area()
    except:
        pass

""""""
Fin Funciones Generales
""""""

ventana.mainloop() # comienza el programa"
RZMtubvi,esportal error,zPow,Objective C,Wednesday 24th of April 2024 03:04:59 PM CDT,"[24.04.24 22:03:15] [22556:9796] [Release] [crash_handler] error: [22556:9796:20240424,220315.140:ERROR crashpad_client_win.cc:531] CreateProcess: Access is denied. (5)

[24.04.24 22:03:15] [22556:16992] [Release] [updater-executable] warning: Failed to initialize crash handler: 4
[24.04.24 22:03:15] [24568:7532] [Release] [crash_handler] error: [24568:7532:20240424,220315.275:ERROR crashpad_client_win.cc:531] CreateProcess: Access is denied. (5)

[24.04.24 22:03:15] [24568:19052] [Release] [updater-executable] warning: Failed to initialize crash handler: 4
[24.04.24 22:03:15] [18476:24304] [Release] [crash_handler] error: [18476:24304:20240424,220315.604:ERROR crashpad_client_win.cc:531] CreateProcess: Access is denied. (5)

[24.04.24 22:03:15] [18476:5076] [Release] [updater-executable] warning: Failed to initialize crash handler: 4
[24.04.24 22:03:46] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:46] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:46] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:48] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:49] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:50] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:51] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:52] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:53] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:55] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:55] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:55] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:57] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:58] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:03:59] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:02] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:05] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:06] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:07] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:08] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:09] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:10] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:11] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:12] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:14] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:15] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:16] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:18] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:19] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:20] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:21] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

[24.04.24 22:04:22] [22260:23164] [Release] [core-executable] warning: Failed to open event: 
4412002650516022920 (0XC0000034)

"
zPY9Hz0X,Камрейч,RealDjox,JavaScript,Wednesday 24th of April 2024 02:56:12 PM CDT,"var chance = Math.random();

if (user.toLowerCase() === 'rachghj') {
	if (chance < 0.66) {
    	result = user + "" КАМит сам в себя, дурачок xdd"";
    } else {
    	result = user + "" попытался КАМнуть в себя, но не получилось Shruge"";
    }
} else {
	if (chance < 0.9) {
    	result = user + "" кидает КАМом в rachghj, а он ничего не сделает, ведь я в другом городе."";
    } else {
    	result = user + "" кидает КАМом в rachghj. А вдруг он уже в твоём городе?.."";
    }
}"
ffZTWHeZ,Untitled,Mysoft,FreeBasic,Wednesday 24th of April 2024 02:53:12 PM CDT,"#include ""crt.bi""

function WildMatch( sWildText as string , sCompare as string , iCaseSensitive as boolean = false ) as boolean
  dim as integer iTxt, iCmp
  
  'if any of them is empty... then result is direct
  if sCompare[0] = 0 then return false  
  do
    var iCT = sWildText[iTxt] : iTxt += 1
    var iCC = sCompare[iCmp] : iCmp += 1 
    'print iTxt-1;"" "";chr(iCT),iCmp-1;"" "";chr(iCC)
    select case iCT
    case 0        : return iCC=0 'once it text reachs end.. it's a success
    case asc("" ""),asc(""~"") 'white space (at least 1, at least 0)
      dim as long iNum = 0
      do
        select case iCC
        case asc("" ""),asc(!""\r""),asc(!""\n""),asc(!""\t"") 
          iNum += 1 : iCC = sCompare[iCmp] : iCmp += 1
        case else
          if iCT=asc("" "") andalso iNum=0 then return false 'must at least have one blank
          iCmp -= 1 : continue do,do 'continue repeating same char
        end select
      loop          
    case asc(""?"") : 'if it's a single char wild
      'we're done if reached end of comparsion
      'and it will be true if next wildtext is also done
      if iCC=0 then return sWildText[iTxt]=0        
    case asc(""*"")       
      var iCT2 = sWildText[iTxt]
      'if matching anything after then it will be true if it's the end of wildtext
      if iCT2 = 0 then return true
      'if is not another wildcard then must continue checking
      if iCT2 <> asc(""?"") andalso iCT2 <> asc(""*"") then         
        'if end of compare text happened then it's false!
        if iCC = 0 then return false
        'if found matching char then continue matching
        if iCaseSensitive then
          if iCC=iCT2 then iTxt += 1: continue do
        else
          if ToLower(iCC)=ToLower(iCT2) then iTxt += 1: continue do
        end if
        'otherwise goes back on wildtext (to compare against *) again
        iTxt -= 1 : continue do
      end if
      'next is also a wildcard, so we will process that
    case else 'is a direct comparsion... 
      'if compare string finished or didnt match then we failed
      if iCC=0 then return false
      if iCaseSensitive then
        if iCC<>iCT then return false
      else
        if ToLower(iCC)<>ToLower(iCT) then return false
      end if
    end select
  loop
end function

#define WildMatchTest(_A,_B,_C...) WildMatch(_A,_B,_C),""'"" _A ""'"", ""'"" _B ""'""
print ""Expected"",""Result"",""WildCards"",""Comparsion""
print string(60,""-"")
print true,  WildMatchTest(""Hello"",""Hello"")
print false, WildMatchTest(""Hell"",""Hello"")
print false, WildMatchTest(""Hello"",""Hell"")
print false, WildMatchTest(""Hello"",""HELLO"",true)
print false, WildMatchTest(""Hello"",""World"")
print true,  WildMatchTest(""B?n"",""Bin"")
print true,  WildMatchTest(""b?n"",""Ben"")
print false, WildMatchTest(""B?n"",""Bem"")
print true,  WildMatchTest(""*us"",""jealous"")
print false, WildMatchTest(""*us"",""jealously"")
print true,  WildMatchTest(""Bang*"",""Bangaloo"")
print false, WildMatchTest(""Leap*"",""lip"")
print false, WildMatchTest(""Bi*us"",""Binocculus"") 'want this to be true?
print true,  WildMatchTest(""Bi*us"",""Binocc?lus"")
print true,  wildMatchTest(""*cup*"",""Porcupine"")
print true,  WildMatchTest(""*Hi*Ta*"",""Hippopotamus"")
print true,  WildMatchTest("" Hello"",!""\t \t Hello"")
print false, WildMatchTest("" Hello"",!""Hello"")

sleep
"
cNtbdj14,train - startup.lua,Whiskee,Lua,Wednesday 24th of April 2024 02:35:49 PM CDT,"shell.run(""pastebin get 105LxSPu temp-sign.lua"")
if (fs.exists(""temp-sign.lua"")) then
	fs.delete(""sign.lua"")
	fs.move(""temp-sign.lua"", ""sign.lua"")
end
os.sleep()
shell.run(""sign.lua"")
"
QqX1GpWQ,routeros,lego11,INI file,Wednesday 24th of April 2024 02:22:09 PM CDT,"# 2024-04-24 15:20:29 by RouterOS 7.14.3
# software id = Y09A-7J23
#
# model = RB3011UiAS
# serial number = ##############
/disk
add parent=usb1 partition-number=1 partition-offset=512 partition-size=\
    ""30 765 219 328"" type=partition
/interface bridge
add admin-mac=B8:69:F4:98:60:FB auto-mac=no name=bridge-LAN port-cost-mode=\
    short
/interface ethernet
set [ find default-name=ether1 ] name=ether1-PF_AIR
set [ find default-name=ether2 ] name=ether2-TIM
set [ find default-name=ether5 ] name=ether5-LAN2
/interface wireguard
add comment=back-to-home-vpn listen-port=10434 mtu=1420 name=back-to-home-vpn
/interface vlan
add interface=bridge-LAN name=vlan10-Ospiti vlan-id=10
add interface=bridge-LAN name=vlan11-IoT vlan-id=11
add interface=bridge-LAN name=vlan13-Inaffidabile vlan-id=13
/interface pppoe-client
add add-default-route=yes interface=ether1-PF_AIR name=PF-AIR user=\
    air218@pianetafibra.it
add add-default-route=yes disabled=no interface=sfp1 name=PF-FTTC \
    use-peer-dns=yes user=fttc4250
/interface list
add comment=defconf name=WAN
add comment=defconf name=LAN
/interface lte apn
set [ find default=yes ] ip-type=ipv4 use-network-apn=no
/ip dhcp-server option
add code=160 name=160_Polycom value=\
    ""' http://172.16.20.215/provisioning/m1c2up6299fyn4'""
/ip pool
add name=dhcp ranges=172.16.30.2-172.16.30.254
add name=vpn ranges=192.168.89.2-192.168.89.255
add name=dhcp_pool2 ranges=192.168.12.2-192.168.12.254
add name=dhcp_pool3 ranges=192.168.10.2-192.168.10.254
add name=dhcp_pool4 ranges=192.168.11.2-192.168.11.254
add name=dhcp_pool5 ranges=192.168.13.2-192.168.13.254
/ip dhcp-server
add address-pool=dhcp interface=bridge-LAN lease-time=23h59m59s name=LAN_DHCP
add address-pool=dhcp_pool2 interface=ether5-LAN2 name=LAN2_DHCP
add address-pool=dhcp_pool3 interface=vlan10-Ospiti name=Ospiti_DHCP
add address-pool=dhcp_pool4 interface=vlan11-IoT name=IoT_DHCP
add address-pool=dhcp_pool5 interface=vlan13-Inaffidabile name=\
    Inaffidabile_DHCP
/ip smb users
add name=admin
/port
set 0 name=serial0
/ppp profile
set *FFFFFFFE local-address=192.168.89.1 remote-address=vpn
/queue simple
add comment=""Limite Ospiti"" max-limit=1M/7M name=Ospiti target=\
    192.168.10.0/24
add comment=""Limite AptDis"" max-limit=1M/10M name=AptDis target=\
    192.16.12.0/24
add comment=""Limite Inaffidabile"" max-limit=500k/5M name=Inaffidabile target=\
    192.168.13.0/24
/routing table
add disabled=no fib name=to_FTTC
add disabled=no fib name=to_AIR
/ip smb
set comment=MIKROTIK domain=WORKGROUP interfaces=bridge-LAN
/interface bridge port
add bridge=bridge-LAN comment=defconf ingress-filtering=no interface=ether6 \
    internal-path-cost=10 path-cost=10
add bridge=bridge-LAN comment=defconf ingress-filtering=no interface=ether7 \
    internal-path-cost=10 path-cost=10
add bridge=bridge-LAN comment=defconf ingress-filtering=no interface=ether8 \
    internal-path-cost=10 path-cost=10
add bridge=bridge-LAN comment=defconf ingress-filtering=no interface=ether9 \
    internal-path-cost=10 path-cost=10
add bridge=bridge-LAN comment=defconf ingress-filtering=no interface=ether10 \
    internal-path-cost=10 path-cost=10
add bridge=bridge-LAN comment=defconf disabled=yes ingress-filtering=no \
    interface=sfp1 internal-path-cost=10 path-cost=10
/ip firewall connection tracking
set udp-timeout=10s
/ip neighbor discovery-settings
set discover-interface-list=LAN
/ip settings
set max-neighbor-entries=8192
/ipv6 settings
set disable-ipv6=yes max-neighbor-entries=8192
/interface bridge vlan
add bridge=bridge-LAN tagged=vlan10-Ospiti,vlan11-IoT,vlan13-Inaffidabile \
    vlan-ids=10,11,13
/interface l2tp-server server
set enabled=yes use-ipsec=yes
/interface list member
add comment=defconf interface=bridge-LAN list=LAN
add interface=PF-FTTC list=WAN
add interface=PF-AIR list=WAN
/interface ovpn-server server
set auth=sha256,sha512 certificate=a-centauri cipher=\
    blowfish128,aes256-cbc,aes256-gcm enabled=yes protocol=udp \
    redirect-gateway=def1
/interface pptp-server server
# PPTP connections are considered unsafe, it is suggested to use a more modern V N protocol instead
set authentication=pap,chap,mschap1,mschap2 enabled=yes
/interface sstp-server server
set default-profile=default-encryption
/ip address
add address=172.16.20.1/16 comment=LAN interface=bridge-LAN network=\
    172.16.0.0
add address=192.168.12.1/24 comment=LAN2 interface=ether5-LAN2 network=\
    192.168.12.0
add address=192.168.10.1/24 comment=Ospiti interface=vlan10-Ospiti network=\
    192.168.10.0
add address=192.168.11.1/24 comment=IoT interface=vlan11-IoT network=\
    192.168.11.0
add address=192.168.13.1/24 comment=Inaffidabile interface=\
    vlan13-Inaffidabile network=192.168.13.0
add address=192.168.2.1/24 comment=TIM interface=ether2-TIM network=\
    192.168.2.0
/ip cloud
set back-to-home-vpn=enabled ddns-enabled=yes
/ip dhcp-server lease
add address=172.16.20.161 mac-address=BC:DD:C2:44:1E:DA server=LAN_DHCP
add address=172.16.20.233 client-id=1:b8:27:eb:f7:41:9f comment=Marconi \
    mac-address=B8:27:EB:F7:41:9F server=LAN_DHCP
add address=172.16.30.244 dhcp-option=160_Polycom mac-address=\
    64:16:7F:0B:F6:FA server=LAN_DHCP
add address=172.16.20.235 client-id=1:b8:27:eb:be:70:8f mac-address=\
    B8:27:EB:BE:70:8F server=LAN_DHCP
add address=172.16.20.212 client-id=1:b8:27:eb:cf:86:71 mac-address=\
    B8:27:EB:CF:86:71 server=LAN_DHCP
add address=172.16.25.42 client-id=1:0:60:35:6:f0:16 mac-address=\
    00:60:35:06:F0:16 server=LAN_DHCP
add address=172.16.22.100 client-id=\
    ff:11:e4:49:24:0:1:0:1:2d:a7:ed:cd:bc:24:11:e4:49:24 mac-address=\
    BC:24:11:E4:49:24 server=LAN_DHCP
add address=172.16.20.215 client-id=1:bc:24:11:9e:f2:3 mac-address=\
    BC:24:11:9E:F2:03 server=LAN_DHCP
add address=172.16.20.211 client-id=\
    ff:11:6e:18:77:0:1:0:1:2d:a5:b3:f5:bc:24:11:6e:18:77 mac-address=\
    BC:24:11:6E:18:77 server=LAN_DHCP
add address=172.16.20.160 client-id=1:d8:3a:dd:a7:d6:5e comment=Helios \
    mac-address=D8:3A:DD:A7:D6:5E server=LAN_DHCP
add address=172.16.20.230 comment=SunFire mac-address=00:03:BA:16:77:13 \
    server=LAN_DHCP
add address=172.16.23.1 client-id=1:0:a0:c5:b9:35:b1 mac-address=\
    00:A0:C5:B9:35:B1 server=LAN_DHCP
/ip dhcp-server network
add address=172.16.0.0/16 comment=LAN dns-server=172.16.20.211,172.16.20.210 \
    gateway=172.16.20.1 netmask=16
add address=192.168.10.0/24 dns-server=172.16.20.211,172.16.20.210 gateway=\
    192.168.10.1
add address=192.168.11.0/24 dns-server=172.16.20.211,172.16.20.210 gateway=\
    192.168.11.1
add address=192.168.12.0/24 dns-server=172.16.20.211,172.16.20.210 gateway=\
    192.168.12.1
add address=192.168.13.0/24 dns-server=172.16.20.211,172.16.20.210 gateway=\
    192.168.13.1
/ip dns static
add address=172.16.20.1 comment=defconf name=router.lan
/ip firewall filter
add action=accept chain=input comment=\
    ""defconf: accept established,related,untracked"" connection-state=\
    established,related,untracked
add action=accept chain=input comment=""allow IPsec NAT"" dst-port=4500 \
    protocol=udp
add action=accept chain=input comment=""allow IKE"" dst-port=500 protocol=udp
add action=accept chain=input comment=""allow l2tp"" dst-port=1701 protocol=udp
add action=accept chain=input comment=""allow pptp"" dst-port=1723 protocol=tcp
add action=accept chain=input comment=""allow sstp"" dst-port=443 protocol=tcp
add action=drop chain=input comment=""defconf: drop invalid"" connection-state=\
    invalid
add action=accept chain=input comment=""defconf: accept ICMP"" protocol=icmp
add action=accept chain=input comment=\
    ""defconf: accept to local loopback (for CAPsMAN)"" dst-address=127.0.0.1
add action=accept chain=forward comment=""defconf: accept in ipsec policy"" \
    ipsec-policy=in,ipsec
add action=accept chain=forward comment=""defconf: accept out ipsec policy"" \
    ipsec-policy=out,ipsec
add action=accept chain=forward comment=\
    ""defconf: accept established,related, untracked"" connection-state=\
    established,related,untracked
add action=drop chain=forward comment=""defconf: drop invalid"" \
    connection-state=invalid
add action=drop chain=forward comment=\
    ""defconf: drop all from WAN not DSTNATed"" connection-nat-state=!dstnat \
    connection-state=new in-interface-list=WAN
add action=drop chain=input comment=""Deny SSH from WAN"" dst-port=22 \
    in-interface-list=WAN protocol=tcp
add action=drop chain=input comment=""Deny telnet from WAN"" dst-port=23 \
    in-interface-list=WAN protocol=tcp
/ip firewall mangle
add action=mark-connection chain=forward comment=""PF-AIR Forward"" disabled=\
    yes in-interface=PF-AIR new-connection-mark=AIR_conn passthrough=yes
add action=mark-connection chain=forward comment=""PF-FTTC forward"" disabled=\
    yes in-interface=PF-FTTC new-connection-mark=FTTC_conn passthrough=yes
add action=mark-connection chain=prerouting comment=""PF-AIR PortForward"" \
    disabled=yes dst-address-type=!local in-interface=PF-AIR \
    new-connection-mark=AIR_conn passthrough=yes
add action=mark-connection chain=prerouting comment=""PF-FTTC PortForward"" \
    disabled=yes dst-address-type=!local in-interface=PF-FTTC \
    new-connection-mark=FTTC_conn passthrough=yes
add action=mark-connection chain=input in-interface=PF-FTTC \
    new-connection-mark=FTTC_conn
# PF-AIR not ready
add action=mark-connection chain=input in-interface=PF-AIR \
    new-connection-mark=AIR_conn
add action=mark-routing chain=output connection-mark=FTTC_conn \
    new-routing-mark=to_FTTC
add action=mark-routing chain=output connection-mark=AIR_conn \
    new-routing-mark=to_AIR
add action=mark-connection chain=prerouting dst-address-type=!local \
    in-interface=bridge-LAN new-connection-mark=FTTC_conn passthrough=yes \
    per-connection-classifier=both-addresses-and-ports:2/0
add action=mark-connection chain=prerouting dst-address-type=!local \
    in-interface=bridge-LAN new-connection-mark=AIR_conn passthrough=yes \
    per-connection-classifier=both-addresses-and-ports:2/1
add action=mark-routing chain=prerouting connection-mark=FTTC_conn \
    in-interface=bridge-LAN new-routing-mark=to_FTTC
add action=mark-routing chain=prerouting connection-mark=AIR_conn \
    in-interface=bridge-LAN new-routing-mark=to_AIR
/ip firewall nat
add action=masquerade chain=srcnat comment=""masq. vpn traffic"" src-address=\
    192.168.89.0/24
add action=dst-nat chain=dstnat comment=""SunFire HTTPS"" dst-port=443 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.230 to-ports=\
    443
add action=dst-nat chain=dstnat comment=""SunFire FTP"" dst-port=21 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.230 to-ports=21
add action=dst-nat chain=dstnat comment=""SunFire HTTP"" dst-port=80 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.230 to-ports=80
add action=dst-nat chain=dstnat comment=""SunFire SSH"" dst-port=2222 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.230 to-ports=22
add action=dst-nat chain=dstnat comment=""Webmin sunfire"" dst-port=10000 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.230 to-ports=\
    10000
add action=dst-nat chain=dstnat comment=Minecraft dst-port=25565 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.220 to-ports=\
    25565
add action=dst-nat chain=dstnat comment=""Minecraft Dynmap"" dst-port=8123 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.220 to-ports=\
    8123
add action=dst-nat chain=dstnat comment=""SSH Pi5 JVital"" dst-port=52233 \
    in-interface-list=WAN protocol=tcp to-addresses=172.16.20.160 to-ports=22
add action=masquerade chain=srcnat out-interface=PF-FTTC
# PF-AIR not ready
add action=masquerade chain=srcnat out-interface=PF-AIR
add action=masquerade chain=srcnat comment=""defconf: masquerade"" \
    ipsec-policy=out,none out-interface-list=WAN
/ip route
add check-gateway=ping dst-address=0.0.0.0/0 gateway=PF-FTTC routing-table=\
    to_FTTC
add check-gateway=ping dst-address=0.0.0.0/0 gateway=PF-AIR routing-table=\
    to_AIR
/ip service
set www-ssl address=0.0.0.0/0 certificate=a-centauri disabled=no tls-version=\
    only-1.2
/ip smb shares
add directory=usb1-part1 name=USB1 valid-users=guest
/ip upnp
set enabled=yes
/ip upnp interfaces
add interface=PF-AIR type=external
/ppp aaa
set use-radius=yes
/ppp secret
add name=vpn
add name=J2 profile=default-encryption
/radius
add accounting-backup=yes address=172.16.20.216 comment=RADIUS service=\
    ppp,login,hotspot,ipsec,dot1x
/routing bfd configuration
add disabled=no interfaces=all min-rx=200ms min-tx=200ms multiplier=5
/system clock
set time-zone-name=Europe/Rome
/system identity
set name=MikroTik-VR
/system note
set show-at-login=no
/system ntp client
set enabled=yes
/system ntp server
set enabled=yes use-local-clock=yes
/system ntp client servers
add address=time.inrim.it
add address=ntp1.inrim.it
/tool graphing interface
add allow-address=172.16.0.0/16
/tool mac-server
set allowed-interface-list=LAN
/tool mac-server mac-winbox
set allowed-interface-list=LAN"
6ggSeRtL,Untitled,dasarijit95,JSON,Wednesday 24th of April 2024 02:21:42 PM CDT,"{
    ""errors"": [
        {
            ""message"": ""com.gopuff.consumer.partneronboarding.exception.ServerException: Error adding user segment: Client 'federation-gateway': Unauthorized"",
            ""locations"": [
                {
                    ""line"": 2,
                    ""column"": 5
                }
            ],
            ""path"": [
                ""setUserAudience""
            ],
            ""extensions"": {
                ""variables"": {},
                ""query_name"": null,
                ""isServerError"": false,
                ""query"": ""mutation SetUserAudience {\n    setUserAudience(data: { key: \""a61c40d1d7e4bae2894a2162e860c004\"" }) {\n        userId\n    }\n}\n\nquery GetPartnerInfo {\n    getPartnerInfo(data: { key: \""a61c40d1d7e4bae2894a2162e860c004\"" }) {\n        memberShipType\n        partnerName\n        phoneNumber\n        promoName\n        smsMarketingOptInStatus\n        redirectDestination\n        isExternal\n        userAudience\n    }\n}\n\n\nmutation SetPartnerInfo {\n    setPartnerInfo(\n        data: {\n            userAudience: \""test-audience\""\n            isExternal: true\n            redirectDestination: \""app\""\n            smsMarketingOptInStatus: true\n            phoneNumber: \""+16095550573\""\n            partnerName: \""TMobile\""\n            memberShipType: \""FAM\""\n            promoName: \""Drizzly\""\n        }\n    ) {\n        key\n    }\n}\n"",
                ""stackTrace"": ""java.util.concurrent.CompletionException: com.gopuff.consumer.partneronboarding.exception.ServerException: Error adding user segment: Client 'federation-gateway': Unauthorized\n\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)\n\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)\n\tat java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:874)\n\tat java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)\n\tat reactor.core.publisher.MonoToCompletableFuture.onError(MonoToCompletableFuture.java:77)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onError(FluxDoFinally.java:119)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onError(FluxHide.java:142)\n\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.Operators.error(Operators.java:198)\n\tat reactor.core.publisher.MonoError.subscribe(MonoError.java:53)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4444)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.Operators.error(Operators.java:198)\n\tat reactor.core.publisher.FluxError.subscribe(FluxError.java:43)\n\tat reactor.core.publisher.Flux.subscribe(Flux.java:8660)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.Operators.error(Operators.java:198)\n\tat reactor.core.publisher.FluxError.subscribe(FluxError.java:43)\n\tat reactor.core.publisher.Flux.subscribe(Flux.java:8660)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.Operators.error(Operators.java:198)\n\tat reactor.core.publisher.MonoError.subscribe(MonoError.java:53)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4444)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxSwitchMapNoPrefetch$SwitchMapInner.onError(FluxSwitchMapNoPrefetch.java:516)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.Operators.error(Operators.java:198)\n\tat reactor.core.publisher.FluxError.subscribe(FluxError.java:43)\n\tat reactor.core.publisher.Flux.subscribe(Flux.java:8660)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:219)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.configuration.metrics.binder.web.WebMetricsPublisher$1.onError(WebMetricsPublisher.java:174)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat io.micronaut.tracing.opentelemetry.instrument.util.OpenTelemetryPublisher$TracingSubscriber.onError(OpenTelemetryPublisher.java:122)\n\tat io.micronaut.http.client.filters.ClientServerRequestTracingPublisher$1.lambda$onError$2(ClientServerRequestTracingPublisher.java:65)\n\tat io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:68)\n\tat io.micronaut.http.client.filters.ClientServerRequestTracingPublisher$1.onError(ClientServerRequestTracingPublisher.java:65)\n\tat reactor.core.publisher.StrictSubscriber.onError(StrictSubscriber.java:106)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)\n\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onError(ReactorSubscriber.java:64)\n\tat reactor.core.publisher.FluxCreate$BaseSink.error(FluxCreate.java:474)\n\tat reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:802)\n\tat reactor.core.publisher.FluxCreate$BufferAsyncSink.error(FluxCreate.java:747)\n\tat reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:237)\n\tat reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:213)\n\tat reactor.core.publisher.FluxCreate$SerializedFluxSink.error(FluxCreate.java:189)\n\tat io.micronaut.http.client.netty.ForwardingSubscriber.onError(ForwardingSubscriber.java:50)\n\tat io.micronaut.http.client.netty.NettyFuturePublisher$1.lambda$request$0(NettyFuturePublisher.java:57)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)\n\tat io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.buildResponse(DefaultHttpClient.java:2194)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.buildResponse(DefaultHttpClient.java:2117)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$BaseHttpResponseHandler.channelReadInstrumented(DefaultHttpClient.java:2092)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.channelReadInstrumented(DefaultHttpClient.java:2153)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.channelReadInstrumented(DefaultHttpClient.java:2117)\n\tat io.micronaut.http.client.netty.SimpleChannelInboundHandlerInstrumented.channelRead0(SimpleChannelInboundHandlerInstrumented.java:49)\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: com.gopuff.consumer.partneronboarding.exception.ServerException: Error adding user segment: Client 'federation-gateway': Unauthorized\n\tat com.gopuff.consumer.partneronboarding.manager.FederationGatewayManager.lambda$addUserSegment$2(FederationGatewayManager.java:68)\n\tat reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3763)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)\n\t... 133 more\n"",
                ""classification"": ""DataFetchingException""
            }
        }
    ],
    ""data"": null
}
"
b6ifvduJ,Algoritmi lezione 21 merge sort,fcamuso,C#,Wednesday 24th of April 2024 02:10:19 PM CDT,"#include <iostream>
#include <random>
#include <ctime>
#include <chrono>

using namespace std;
#include ""../../min_max/utility_vettori.h""

void merge(unsigned long v[], int inizio, int centrale, int fine)
{
  int i=inizio;
  int j=centrale+1;

  int k=0;
  unsigned long *fusione = new unsigned long[fine-inizio+1];

  //finchè una delle due metà non è esaurita ...
  while (i<=centrale && j<=fine)
  {
    if (v[i]<=v[j])
    {
       fusione[k] = v[i];
       i++;
    }
    else
    {
      fusione[k] = v[j];
      j++;
    }

    k++;
  }

  //se si è esaurita la metà di sinistra, copia i rimasti a destra
  while(i<=centrale)
  {
    fusione[k] = v[i];
    i++; k++;
  }

  //se si è esaurita la metà di dedstra, copia i rimasti a sinistra
  while(j<=fine)
  {
    fusione[k] = v[j];
    j++; k++;
  }

  //ricopiamo la sequenza in ordine nella sezione
  //del vettore che occupavano
  for (int i=inizio; i<=fine; i++)
    v[i] = fusione[i-inizio];

  delete[] fusione;


}

void merge_sort(unsigned long v[], int inizio, int fine)
{
  if (inizio<fine)
  {
    //divide et impera
    int centrale = (inizio+fine)/2;
    merge_sort(v, inizio, centrale );
    merge_sort(v, centrale+1, fine);

    //fusione delle due metà ordinate
    merge(v, inizio, centrale, fine);
  }
}

const int QUANTI_ELEMENTI = 2000000;
unsigned long v[QUANTI_ELEMENTI];

int main()
{
    carica_vettore_interi(v, QUANTI_ELEMENTI);

    Cronometro(Stato::START);
    merge_sort(v, 0, QUANTI_ELEMENTI-1);
    cout << Cronometro(Stato::STOP) << endl;
    if (verifica_ordine_crescente(v, QUANTI_ELEMENTI))
      cout << ""Ordinato!\n"";
    return 0;
}
"
Aa54p7JF,isuk10-3,Gamerkin,Python,Wednesday 24th of April 2024 02:05:24 PM CDT,"import tkinter as tk

def scan_barcode():
    # Логика сканирования штрих-кода
    pass

def enter_invoice_number():
    # Логика ввода номера накладной
    pass

def confirm_issue():
    # Логика подтверждения выдачи товаров
    pass

def display_info():
    # Логика отображения информации о накладной и товарах
    pass

# Создание графического интерфейса
root = tk.Tk()
root.title(""Приложение склада"")

# Элементы интерфейса
label = tk.Label(root, text=""Введите номер накладной:"")
label.pack()

entry = tk.Entry(root)
entry.pack()

search_button = tk.Button(root, text=""ПОИСК"", command=enter_invoice_number)
search_button.pack()

confirm_button = tk.Button(root, text=""ДА"", command=confirm_issue)
cancel_button = tk.Button(root, text=""НЕТ"", command=enter_invoice_number)

# Отображение окна подтверждения выдачи товаров
def show_confirmation_window():
    confirmation_window = tk.Toplevel(root)
    confirmation_window.title(""Подтверждение выдачи товаров"")

    info_label = tk.Label(confirmation_window, text=""Накладная АВ_27_27.03.22\nВыдать следующие товары со склада:\n1) Яблоки - 26 кг\n2) Курага (фасов.) - 10 уп."")
    info_label.pack()

    confirm_issue_button = tk.Button(confirmation_window, text=""ДА"", command=confirm_issue)
    confirm_issue_button.pack()

    cancel_issue_button = tk.Button(confirmation_window, text=""НЕТ"", command=enter_invoice_number)
    cancel_issue_button.pack()

# Отображение окна с информацией о выданных товарах
def show_issue_info():
    issue_info_window = tk.Toplevel(root)
    issue_info_window.title(""Информация о выданных товарах"")

    info_label = tk.Label(issue_info_window, text=""Накладная АВ_27_27.03.22\nТовары были выданы 27.03.22 12:50"")
    info_label.pack()

    ok_button = tk.Button(issue_info_window, text=""OK"", command=issue_info_window.destroy)
    ok_button.pack()

# Привязка функций к событиям
search_button.config(command=show_confirmation_window)
confirm_button.config(command=show_issue_info)

root.mainloop()
"
pc8Fbz6n,isuk 10-2,Gamerkin,Python,Wednesday 24th of April 2024 01:47:23 PM CDT,"import sqlite3
from sqlite3 import Error
import openpyxl
from datetime import datetime
import pprint

current_day = datetime.now().strftime('%d.%m.%Y')

def sql_connection():
  try:
    con = sqlite3.connect('mydatabase.db')
    return con
  except Error:
    print(Error)

def sql_table(con):
  cursorObj = con.cursor()
  ex = 'CREATE TABLE documents(id integer PRIMARY KEY, doc_num text, \
        company_from text, company_to text, \
        reason text, item text, type text, \
        amount int, status text, date text)'
  cursorObj.execute(ex)
  con.commit()

def sql_insert(con, entities):
  cursorObj = con.cursor()
  ex = 'INSERT INTO documents(doc_num, company_from, company_to, reason, item, \
  type, amount, status, date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)'
  cursorObj.execute(ex, entities)
  con.commit()


def write_data_from_xlsx(con, filename):
  wb = openpyxl.load_workbook(filename)
  ws = wb.active
  companys = {}
  num = 1
  for j in range(2, ws.max_row+1):
    company = ws.cell(row=j, column=2).value
    if company not in companys.keys():
      companys.update({company: f'AB_{num}_{current_day}'})
      num += 1
    data = (companys[company], ws.cell(row=j, column=1).value, ws.cell(row=j, column=2).value,
             ws.cell(row=j, column=3).value,
             ws.cell(row=j, column=4).value, ws.cell(row=j, column=5).value,
             ws.cell(row=j, column=7).value,
             ""выдан"", current_day)
    sql_insert(con, data)  


con = sql_connection()
sql_table(con)
write_data_from_xlsx(con, ""data.xlsx"")"
Pa8MDjxe,REEEGHAA,suramraja1,Lua,Wednesday 24th of April 2024 01:35:58 PM CDT,"repeat wait() until game:IsLoaded()

coroutine.wrap(function()
    pcall(function()
        if game.PlaceId == 5589810303 then --Rh3Office
            repeat task.wait() until game:GetService(""Workspace"").CollectibleDiamonds:FindFirstChild(""Part"") == nil
            task.wait(5)
            game:GetService(""ReplicatedStorage"").SceptorTeleport:FireServer(""Lobby"")
        end
        if game.PlaceId == 735030788 then --Arrival Lobby
            repeat task.wait() until game:GetService(""Workspace"").CollectibleDiamonds:FindFirstChild(""Part"") == nil
            task.wait(5)
            game:GetService(""ReplicatedStorage"").SceptorTeleport:FireServer(""RH3Office"")
        end
    end)
end)()

coroutine.wrap(function()
    while task.wait() do
        pcall(function()
            game:GetService(""Players"").LocalPlayer.PlayerGui.StartScreenGui.ClickedPlay:Fire()
            local hmrp = game.Players.LocalPlayer.Character.HumanoidRootPart
            game.Workspace.Gravity = 0
            getgenv().Speed = 30
            for i,v in pairs(game:GetService(""Workspace"").CollectibleDiamonds:GetDescendants()) do
            if v:IsA(""Part"") then
            local PosPart = v.Position
            local Time = (PosPart + Vector3.new(0, 0, 0) - hmrp.Position).Magnitude / getgenv().Speed
            local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
                local Tween = game:GetService(""TweenService""):Create(hmrp,Info,{CFrame = CFrame.new(PosPart + Vector3.new(0, 0, 0))})
                Tween:Play()
                end
            end
        end)
    end
end)()


coroutine.wrap(function() --- anti sit
    while task.wait() do
        if game:GetService(""Players"").LocalPlayer.Character.Humanoid.Sit == true then
            task.wait()
            game:GetService(""Players"").LocalPlayer.Character.Humanoid.Sit = false
        end
    end
end)()
 
coroutine.wrap(function()
    while true do
        for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA(""BasePart"") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
            game:GetService(""RunService"").Stepped:wait()
        end
end)()
"
8BUKvTZe,main_sort_template,Petro_zzz,C++,Wednesday 24th of April 2024 01:24:46 PM CDT,"#include <iostream>
#include ""my_lib.h""

// https://pastebin.com/nB6DAg97

using namespace std;

void test_sort() {
	const int size = 10;
	int arr[size]{ 3,4,5,6,3,1,7,4,9,2 };
	//int arr[size]{ 1,2,3,4,5,6,7,8,9,10 };

	show_arr(size, arr);
	bubble_sort(size, arr);
	show_arr(size, arr);
}

void test_merge_sort() {
	const int sz1 = 7;
	const int sz2 = 5;

	// маленькие массивы должны быть отсортированными
	int arr1[sz1]{ 3,5,6,9,9,11,17 };
	int arr2[sz2]{ 1,2,3,7,8 };
	int arr3[sz1 + sz2]{};


	int id1 = 0;
	int id2 = 0;
	for (int k = 0; k < sz1 + sz2; k++) {
		if ((id1 < sz1) && (arr1[id1] < arr2[id2])) {
			arr3[k] = arr1[id1];
			id1++;
		}
		else if(id2 < sz2) {
			arr3[k] = arr2[id2];
			id2++;
		}
		else {
			arr3[k] = arr1[id1];
			id1++;
		}
		//show_arr(sz1 + sz2, arr3);
	}
	show_arr(sz1 + sz2, arr3);
	// ваш код

	// 1, 2, 3, 3, 5, 6, 7, 8, 9, 9
}

int sum(int a, int b) {
	return a + b;
}

// перегрузка по количеству аргументов
int sum(int a) {
	return a + 0;
}

// Функция со значением агумента по умолчанию  
int mult(int a, int b = 1) {
	return a * b;
}

// перегрузка по типу аргументов
double mult(double a, double b = 1) {
	return a * b;
}

// шаблоны функций
template<class T1, class T2> 
T1 div1(T1 a, T2 b) {
	return a / b;
}



int main() {
	//test_sort();
	//test_merge_sort();
	cout << sum(7, 8) << endl;
	cout << sum(7, 0) << endl;
	cout << sum(7) << endl;
	cout << mult(9, 8) << endl;
	cout << mult(9) << endl;
	cout << mult(9.1, 8.5) << endl;
	cout << div1(7, 2) << endl;
	cout << div1(7.0, 2.0) << endl;
	cout << div1(7, 3.5) << endl;


	return 0;
}
"
DGKfA9mq,my_lib_sort,Petro_zzz,C++,Wednesday 24th of April 2024 01:22:51 PM CDT,"#pragma once
#include <iostream>

using namespace std;

template <class T>
void my_swap(T& a, T& b) {
    //cout << ""IN FUN: "" << a << b << endl;
    T tmp = b;
    b = a;
    a = tmp;
    //cout << ""IN FUN: "" << a << b << endl;
}

template <class T>
void show_arr(int size, T arr[]) {
    for (int k = 0; k < size; k++)
        cout << arr[k] << "" "";
    cout << endl;
}

template <class T>
int find(int size, T arr[], T ell) {
    for (int k = 0; k < size; k++) {
        if (arr[k] == ell)
            return k;
    }
    return -1;
}

void discrete_sort(int size, int arr[]) {
    // элементы массива могут быть { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
    int frequency[10]{};

    for (int k = 0; k < size; k++) {
        frequency[arr[k]]++;
    }

    int m = 0;
    for (int k = 0; k < 10; k++) {
        for (int n = 0; n < frequency[k]; n++) {
            arr[m] = k;
            m++;
        }
    }
    show_arr(10, frequency);
}

template <class T>
void bubble_sort(int size, T arr[]) {
    
    bool is_sorted;
    for (int k = 0; k < size; k++) {
        is_sorted = true;
        for (int n = 1; n < size; n++)
            if (arr[n] < arr[n - 1]) {
                my_swap(arr[n], arr[n - 1]);
                is_sorted = false;
                //show_arr(size, arr);
            }
        if (is_sorted)
            break;
    }
}

void select_sort(int size, int arr[]) {
    int min_id;
    for (int n = 0; n < size - 1; n++) {
        min_id = n;
        for (int k = n + 1; k < size; k++) {
            if (arr[k] < arr[min_id]) {
                min_id = k;
            }
        }
        my_swap(arr[n], arr[min_id]);
        show_arr(size, arr);
    }

}

void insert_sort(int size, int arr[]) {
    int n = 0;
    for (int k = 1; k < size; k++) {
        n = k;
        while ((n > 0) && (arr[n] < arr[n - 1])) {
            my_swap(arr[n], arr[n - 1]);
            n--;
            //show_arr(size, arr);
        }
    }
}"
1RUJEqgf,good 997,max2201111,Python,Wednesday 24th of April 2024 01:07:31 PM CDT,"import chess

def simplify_fen_string(fen):
    # Zjednodušení FEN řetězce pro lepší práci se šachovými pozicemi
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Ukládáme pouze informace o pozici a straně na tahu
    return simplified_fen

def evaluate_position(board, depth):
    # Vyhodnocení šachové pozice s přihlédnutím k hloubce
    if board.is_checkmate():
        # Vrací skóre v závislosti na hloubce a tom, kdo je na tahu
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    if board.is_stalemate():
        return 0  # Vrací 0 pro pat
    return None  # Vrací None pro běžné pozice bez rozhodujícího výsledku

def minimax(board, depth, alpha, beta, maximizing_player, current_depth=0):
    # Implementace minimax algoritmu s alfa-beta ořezáváním a ošetřením None hodnot
    simplified_fen = simplify_fen_string(board.fen())

    if depth == 0 or board.is_game_over():
        result = evaluate_position(board, current_depth)
        return result if result is not None else 0  # Nahrazení None neutrálním skóre 0

    if maximizing_player:
        max_eval = float('-inf')
        for move in board.legal_moves:
            board.push(move)
            eval = minimax(board, depth-1, alpha, beta, False, current_depth + 1)
            board.pop()
            max_eval = max(max_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        return max_eval
    else:
        min_eval = float('inf')
        for move in board.legal_moves:
            board.push(move)
            eval = minimax(board, depth-1, alpha, beta, True, current_depth + 1)
            board.pop()
            min_eval = min(min_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break
        return min_eval

def main():
    initial_fen = ""1k6/3K1Q2/8/8/8/8/8/8 w - - 0 1""
    board = chess.Board(initial_fen)
    result = minimax(board, 4, float('-inf'), float('inf'), True)
    print(""Výsledek minimax hodnocení pro initial_fen:"", result)

if __name__ == ""__main__"":
    main()"
6XSq8d76,Untitled,vpeter,Bash,Wednesday 24th of April 2024 01:02:29 PM CDT,"General
ID                                       : 21 (0x15)
Complete name                            : P:\public\complete\AVS_HD_sample.ts
Format                                   : MPEG-TS
File size                                : 39.4 MiB
Duration                                 : 27 s 489 ms
Overall bit rate mode                    : Variable
Overall bit rate                         : 12.0 Mb/s

Audio
ID                                       : 670 (0x29E)
Menu ID                                  : 1 (0x1)
Format                                   : AC-3
Format/Info                              : Audio Coding 3
Commercial name                          : Dolby Digital
Codec ID                                 : 6
Duration                                 : 27 s 488 ms
Bit rate mode                            : Constant
Bit rate                                 : 448 kb/s
Channel(s)                               : 6 channels
Channel layout                           : L R C LFE Ls Rs
Sampling rate                            : 48.0 kHz
Frame rate                               : 31.250 FPS (1536 SPF)
Compression mode                         : Lossy
Stream size                              : 1.47 MiB (4%)
Service kind                             : Complete Main

Menu
ID                                       : 259 (0x103)
Menu ID                                  : 1 (0x1)
Format                                   :  / AC-3
Duration                                 : 27 s 489 ms
List                                     : 514 (0x202) () / 670 (0x29E) (AC-3)
Service name                             : CCTV15-HD
Service provider                         : CCTV
Service type                             : digital television

"
JDvTQTb8,debug pip,Astranome,Bash,Wednesday 24th of April 2024 12:48:56 PM CDT,"root@astra-Ideapad-S110:~# pip3 debug --verbose
WARNING: This command is only meant for debugging. Do not use this with automation for parsing and getting these details, since the output and options of this command may change without notice.
pip version: pip 24.0 from /usr/local/lib/python3.7/dist-packages/pip (python 3.7)
sys.version: 3.7.5 (default, Dec  9 2021, 17:04:37)
[GCC 8.4.0]
sys.executable: /usr/bin/python3
sys.getdefaultencoding: utf-8
sys.getfilesystemencoding: utf-8
locale.getpreferredencoding: UTF-8
sys.platform: linux
sys.implementation:
  name: cpython
'cert' config value: Not specified
REQUESTS_CA_BUNDLE: None
CURL_CA_BUNDLE: None
pip._vendor.certifi.where(): /usr/local/lib/python3.7/dist-packages/pip/_vendor/certifi/cacert.pem
pip._vendor.DEBUNDLED: False
vendored library versions:
  CacheControl==0.13.1
  colorama==0.4.6
  distlib==0.3.8
  distro==1.8.0
  msgpack==1.0.5
  packaging==21.3
  platformdirs==3.8.1
  pyparsing==3.1.0
  pyproject-hooks==1.0.0
  requests==2.31.0
  certifi==2023.07.22
  chardet==5.1.0
  idna==3.4
  urllib3==1.26.17
  rich==13.4.2 (Unable to locate actual module version, using vendor.txt specified version)
  pygments==2.15.1
  typing_extensions==4.7.1 (Unable to locate actual module version, using vendor.txt specified version)
  resolvelib==1.0.1
  setuptools==68.0.0 (Unable to locate actual module version, using vendor.txt specified version)
  six==1.16.0
  tenacity==8.2.2 (Unable to locate actual module version, using vendor.txt specified version)
  tomli==2.0.1
  truststore==0.8.0 (Unable to locate actual module version, using vendor.txt specified version)
  webencodings==0.5.1 (Unable to locate actual module version, using vendor.txt specified version)
Compatible tags: 469
  cp37-cp37m-manylinux_2_27_i686
  cp37-cp37m-manylinux_2_26_i686
  cp37-cp37m-manylinux_2_25_i686
  cp37-cp37m-manylinux_2_24_i686
  cp37-cp37m-manylinux_2_23_i686
  cp37-cp37m-manylinux_2_22_i686
  cp37-cp37m-manylinux_2_21_i686
  cp37-cp37m-manylinux_2_20_i686
  cp37-cp37m-manylinux_2_19_i686
  cp37-cp37m-manylinux_2_18_i686
  cp37-cp37m-manylinux_2_17_i686
  cp37-cp37m-manylinux2014_i686
  cp37-cp37m-manylinux_2_16_i686
  cp37-cp37m-manylinux_2_15_i686
  cp37-cp37m-manylinux_2_14_i686
  cp37-cp37m-manylinux_2_13_i686
  cp37-cp37m-manylinux_2_12_i686
  cp37-cp37m-manylinux2010_i686
  cp37-cp37m-manylinux_2_11_i686
  cp37-cp37m-manylinux_2_10_i686
  cp37-cp37m-manylinux_2_9_i686
  cp37-cp37m-manylinux_2_8_i686
  cp37-cp37m-manylinux_2_7_i686
  cp37-cp37m-manylinux_2_6_i686
  cp37-cp37m-manylinux_2_5_i686
  cp37-cp37m-manylinux1_i686
  cp37-cp37m-linux_i686
  cp37-abi3-manylinux_2_27_i686
  cp37-abi3-manylinux_2_26_i686
  cp37-abi3-manylinux_2_25_i686
  cp37-abi3-manylinux_2_24_i686
  cp37-abi3-manylinux_2_23_i686
  cp37-abi3-manylinux_2_22_i686
  cp37-abi3-manylinux_2_21_i686
  cp37-abi3-manylinux_2_20_i686
  cp37-abi3-manylinux_2_19_i686
  cp37-abi3-manylinux_2_18_i686
  cp37-abi3-manylinux_2_17_i686
  cp37-abi3-manylinux2014_i686
  cp37-abi3-manylinux_2_16_i686
  cp37-abi3-manylinux_2_15_i686
  cp37-abi3-manylinux_2_14_i686
  cp37-abi3-manylinux_2_13_i686
  cp37-abi3-manylinux_2_12_i686
  cp37-abi3-manylinux2010_i686
  cp37-abi3-manylinux_2_11_i686
  cp37-abi3-manylinux_2_10_i686
  cp37-abi3-manylinux_2_9_i686
  cp37-abi3-manylinux_2_8_i686
  cp37-abi3-manylinux_2_7_i686
  cp37-abi3-manylinux_2_6_i686
  cp37-abi3-manylinux_2_5_i686
  cp37-abi3-manylinux1_i686
  cp37-abi3-linux_i686
  cp37-none-manylinux_2_27_i686
  cp37-none-manylinux_2_26_i686
  cp37-none-manylinux_2_25_i686
  cp37-none-manylinux_2_24_i686
  cp37-none-manylinux_2_23_i686
  cp37-none-manylinux_2_22_i686
  cp37-none-manylinux_2_21_i686
  cp37-none-manylinux_2_20_i686
  cp37-none-manylinux_2_19_i686
  cp37-none-manylinux_2_18_i686
  cp37-none-manylinux_2_17_i686
  cp37-none-manylinux2014_i686
  cp37-none-manylinux_2_16_i686
  cp37-none-manylinux_2_15_i686
  cp37-none-manylinux_2_14_i686
  cp37-none-manylinux_2_13_i686
  cp37-none-manylinux_2_12_i686
  cp37-none-manylinux2010_i686
  cp37-none-manylinux_2_11_i686
  cp37-none-manylinux_2_10_i686
  cp37-none-manylinux_2_9_i686
  cp37-none-manylinux_2_8_i686
  cp37-none-manylinux_2_7_i686
  cp37-none-manylinux_2_6_i686
  cp37-none-manylinux_2_5_i686
  cp37-none-manylinux1_i686
  cp37-none-linux_i686
  cp36-abi3-manylinux_2_27_i686
  cp36-abi3-manylinux_2_26_i686
  cp36-abi3-manylinux_2_25_i686
  cp36-abi3-manylinux_2_24_i686
  cp36-abi3-manylinux_2_23_i686
  cp36-abi3-manylinux_2_22_i686
  cp36-abi3-manylinux_2_21_i686
  cp36-abi3-manylinux_2_20_i686
  cp36-abi3-manylinux_2_19_i686
  cp36-abi3-manylinux_2_18_i686
  cp36-abi3-manylinux_2_17_i686
  cp36-abi3-manylinux2014_i686
  cp36-abi3-manylinux_2_16_i686
  cp36-abi3-manylinux_2_15_i686
  cp36-abi3-manylinux_2_14_i686
  cp36-abi3-manylinux_2_13_i686
  cp36-abi3-manylinux_2_12_i686
  cp36-abi3-manylinux2010_i686
  cp36-abi3-manylinux_2_11_i686
  cp36-abi3-manylinux_2_10_i686
  cp36-abi3-manylinux_2_9_i686
  cp36-abi3-manylinux_2_8_i686
  cp36-abi3-manylinux_2_7_i686
  cp36-abi3-manylinux_2_6_i686
  cp36-abi3-manylinux_2_5_i686
  cp36-abi3-manylinux1_i686
  cp36-abi3-linux_i686
  cp35-abi3-manylinux_2_27_i686
  cp35-abi3-manylinux_2_26_i686
  cp35-abi3-manylinux_2_25_i686
  cp35-abi3-manylinux_2_24_i686
  cp35-abi3-manylinux_2_23_i686
  cp35-abi3-manylinux_2_22_i686
  cp35-abi3-manylinux_2_21_i686
  cp35-abi3-manylinux_2_20_i686
  cp35-abi3-manylinux_2_19_i686
  cp35-abi3-manylinux_2_18_i686
  cp35-abi3-manylinux_2_17_i686
  cp35-abi3-manylinux2014_i686
  cp35-abi3-manylinux_2_16_i686
  cp35-abi3-manylinux_2_15_i686
  cp35-abi3-manylinux_2_14_i686
  cp35-abi3-manylinux_2_13_i686
  cp35-abi3-manylinux_2_12_i686
  cp35-abi3-manylinux2010_i686
  cp35-abi3-manylinux_2_11_i686
  cp35-abi3-manylinux_2_10_i686
  cp35-abi3-manylinux_2_9_i686
  cp35-abi3-manylinux_2_8_i686
  cp35-abi3-manylinux_2_7_i686
  cp35-abi3-manylinux_2_6_i686
  cp35-abi3-manylinux_2_5_i686
  cp35-abi3-manylinux1_i686
  cp35-abi3-linux_i686
  cp34-abi3-manylinux_2_27_i686
  cp34-abi3-manylinux_2_26_i686
  cp34-abi3-manylinux_2_25_i686
  cp34-abi3-manylinux_2_24_i686
  cp34-abi3-manylinux_2_23_i686
  cp34-abi3-manylinux_2_22_i686
  cp34-abi3-manylinux_2_21_i686
  cp34-abi3-manylinux_2_20_i686
  cp34-abi3-manylinux_2_19_i686
  cp34-abi3-manylinux_2_18_i686
  cp34-abi3-manylinux_2_17_i686
  cp34-abi3-manylinux2014_i686
  cp34-abi3-manylinux_2_16_i686
  cp34-abi3-manylinux_2_15_i686
  cp34-abi3-manylinux_2_14_i686
  cp34-abi3-manylinux_2_13_i686
  cp34-abi3-manylinux_2_12_i686
  cp34-abi3-manylinux2010_i686
  cp34-abi3-manylinux_2_11_i686
  cp34-abi3-manylinux_2_10_i686
  cp34-abi3-manylinux_2_9_i686
  cp34-abi3-manylinux_2_8_i686
  cp34-abi3-manylinux_2_7_i686
  cp34-abi3-manylinux_2_6_i686
  cp34-abi3-manylinux_2_5_i686
  cp34-abi3-manylinux1_i686
  cp34-abi3-linux_i686
  cp33-abi3-manylinux_2_27_i686
  cp33-abi3-manylinux_2_26_i686
  cp33-abi3-manylinux_2_25_i686
  cp33-abi3-manylinux_2_24_i686
  cp33-abi3-manylinux_2_23_i686
  cp33-abi3-manylinux_2_22_i686
  cp33-abi3-manylinux_2_21_i686
  cp33-abi3-manylinux_2_20_i686
  cp33-abi3-manylinux_2_19_i686
  cp33-abi3-manylinux_2_18_i686
  cp33-abi3-manylinux_2_17_i686
  cp33-abi3-manylinux2014_i686
  cp33-abi3-manylinux_2_16_i686
  cp33-abi3-manylinux_2_15_i686
  cp33-abi3-manylinux_2_14_i686
  cp33-abi3-manylinux_2_13_i686
  cp33-abi3-manylinux_2_12_i686
  cp33-abi3-manylinux2010_i686
  cp33-abi3-manylinux_2_11_i686
  cp33-abi3-manylinux_2_10_i686
  cp33-abi3-manylinux_2_9_i686
  cp33-abi3-manylinux_2_8_i686
  cp33-abi3-manylinux_2_7_i686
  cp33-abi3-manylinux_2_6_i686
  cp33-abi3-manylinux_2_5_i686
  cp33-abi3-manylinux1_i686
  cp33-abi3-linux_i686
  cp32-abi3-manylinux_2_27_i686
  cp32-abi3-manylinux_2_26_i686
  cp32-abi3-manylinux_2_25_i686
  cp32-abi3-manylinux_2_24_i686
  cp32-abi3-manylinux_2_23_i686
  cp32-abi3-manylinux_2_22_i686
  cp32-abi3-manylinux_2_21_i686
  cp32-abi3-manylinux_2_20_i686
  cp32-abi3-manylinux_2_19_i686
  cp32-abi3-manylinux_2_18_i686
  cp32-abi3-manylinux_2_17_i686
  cp32-abi3-manylinux2014_i686
  cp32-abi3-manylinux_2_16_i686
  cp32-abi3-manylinux_2_15_i686
  cp32-abi3-manylinux_2_14_i686
  cp32-abi3-manylinux_2_13_i686
  cp32-abi3-manylinux_2_12_i686
  cp32-abi3-manylinux2010_i686
  cp32-abi3-manylinux_2_11_i686
  cp32-abi3-manylinux_2_10_i686
  cp32-abi3-manylinux_2_9_i686
  cp32-abi3-manylinux_2_8_i686
  cp32-abi3-manylinux_2_7_i686
  cp32-abi3-manylinux_2_6_i686
  cp32-abi3-manylinux_2_5_i686
  cp32-abi3-manylinux1_i686
  cp32-abi3-linux_i686
  py37-none-manylinux_2_27_i686
  py37-none-manylinux_2_26_i686
  py37-none-manylinux_2_25_i686
  py37-none-manylinux_2_24_i686
  py37-none-manylinux_2_23_i686
  py37-none-manylinux_2_22_i686
  py37-none-manylinux_2_21_i686
  py37-none-manylinux_2_20_i686
  py37-none-manylinux_2_19_i686
  py37-none-manylinux_2_18_i686
  py37-none-manylinux_2_17_i686
  py37-none-manylinux2014_i686
  py37-none-manylinux_2_16_i686
  py37-none-manylinux_2_15_i686
  py37-none-manylinux_2_14_i686
  py37-none-manylinux_2_13_i686
  py37-none-manylinux_2_12_i686
  py37-none-manylinux2010_i686
  py37-none-manylinux_2_11_i686
  py37-none-manylinux_2_10_i686
  py37-none-manylinux_2_9_i686
  py37-none-manylinux_2_8_i686
  py37-none-manylinux_2_7_i686
  py37-none-manylinux_2_6_i686
  py37-none-manylinux_2_5_i686
  py37-none-manylinux1_i686
  py37-none-linux_i686
  py3-none-manylinux_2_27_i686
  py3-none-manylinux_2_26_i686
  py3-none-manylinux_2_25_i686
  py3-none-manylinux_2_24_i686
  py3-none-manylinux_2_23_i686
  py3-none-manylinux_2_22_i686
  py3-none-manylinux_2_21_i686
  py3-none-manylinux_2_20_i686
  py3-none-manylinux_2_19_i686
  py3-none-manylinux_2_18_i686
  py3-none-manylinux_2_17_i686
  py3-none-manylinux2014_i686
  py3-none-manylinux_2_16_i686
  py3-none-manylinux_2_15_i686
  py3-none-manylinux_2_14_i686
  py3-none-manylinux_2_13_i686
  py3-none-manylinux_2_12_i686
  py3-none-manylinux2010_i686
  py3-none-manylinux_2_11_i686
  py3-none-manylinux_2_10_i686
  py3-none-manylinux_2_9_i686
  py3-none-manylinux_2_8_i686
  py3-none-manylinux_2_7_i686
  py3-none-manylinux_2_6_i686
  py3-none-manylinux_2_5_i686
  py3-none-manylinux1_i686
  py3-none-linux_i686
  py36-none-manylinux_2_27_i686
  py36-none-manylinux_2_26_i686
  py36-none-manylinux_2_25_i686
  py36-none-manylinux_2_24_i686
  py36-none-manylinux_2_23_i686
  py36-none-manylinux_2_22_i686
  py36-none-manylinux_2_21_i686
  py36-none-manylinux_2_20_i686
  py36-none-manylinux_2_19_i686
  py36-none-manylinux_2_18_i686
  py36-none-manylinux_2_17_i686
  py36-none-manylinux2014_i686
  py36-none-manylinux_2_16_i686
  py36-none-manylinux_2_15_i686
  py36-none-manylinux_2_14_i686
  py36-none-manylinux_2_13_i686
  py36-none-manylinux_2_12_i686
  py36-none-manylinux2010_i686
  py36-none-manylinux_2_11_i686
  py36-none-manylinux_2_10_i686
  py36-none-manylinux_2_9_i686
  py36-none-manylinux_2_8_i686
  py36-none-manylinux_2_7_i686
  py36-none-manylinux_2_6_i686
  py36-none-manylinux_2_5_i686
  py36-none-manylinux1_i686
  py36-none-linux_i686
  py35-none-manylinux_2_27_i686
  py35-none-manylinux_2_26_i686
  py35-none-manylinux_2_25_i686
  py35-none-manylinux_2_24_i686
  py35-none-manylinux_2_23_i686
  py35-none-manylinux_2_22_i686
  py35-none-manylinux_2_21_i686
  py35-none-manylinux_2_20_i686
  py35-none-manylinux_2_19_i686
  py35-none-manylinux_2_18_i686
  py35-none-manylinux_2_17_i686
  py35-none-manylinux2014_i686
  py35-none-manylinux_2_16_i686
  py35-none-manylinux_2_15_i686
  py35-none-manylinux_2_14_i686
  py35-none-manylinux_2_13_i686
  py35-none-manylinux_2_12_i686
  py35-none-manylinux2010_i686
  py35-none-manylinux_2_11_i686
  py35-none-manylinux_2_10_i686
  py35-none-manylinux_2_9_i686
  py35-none-manylinux_2_8_i686
  py35-none-manylinux_2_7_i686
  py35-none-manylinux_2_6_i686
  py35-none-manylinux_2_5_i686
  py35-none-manylinux1_i686
  py35-none-linux_i686
  py34-none-manylinux_2_27_i686
  py34-none-manylinux_2_26_i686
  py34-none-manylinux_2_25_i686
  py34-none-manylinux_2_24_i686
  py34-none-manylinux_2_23_i686
  py34-none-manylinux_2_22_i686
  py34-none-manylinux_2_21_i686
  py34-none-manylinux_2_20_i686
  py34-none-manylinux_2_19_i686
  py34-none-manylinux_2_18_i686
  py34-none-manylinux_2_17_i686
  py34-none-manylinux2014_i686
  py34-none-manylinux_2_16_i686
  py34-none-manylinux_2_15_i686
  py34-none-manylinux_2_14_i686
  py34-none-manylinux_2_13_i686
  py34-none-manylinux_2_12_i686
  py34-none-manylinux2010_i686
  py34-none-manylinux_2_11_i686
  py34-none-manylinux_2_10_i686
  py34-none-manylinux_2_9_i686
  py34-none-manylinux_2_8_i686
  py34-none-manylinux_2_7_i686
  py34-none-manylinux_2_6_i686
  py34-none-manylinux_2_5_i686
  py34-none-manylinux1_i686
  py34-none-linux_i686
  py33-none-manylinux_2_27_i686
  py33-none-manylinux_2_26_i686
  py33-none-manylinux_2_25_i686
  py33-none-manylinux_2_24_i686
  py33-none-manylinux_2_23_i686
  py33-none-manylinux_2_22_i686
  py33-none-manylinux_2_21_i686
  py33-none-manylinux_2_20_i686
  py33-none-manylinux_2_19_i686
  py33-none-manylinux_2_18_i686
  py33-none-manylinux_2_17_i686
  py33-none-manylinux2014_i686
  py33-none-manylinux_2_16_i686
  py33-none-manylinux_2_15_i686
  py33-none-manylinux_2_14_i686
  py33-none-manylinux_2_13_i686
  py33-none-manylinux_2_12_i686
  py33-none-manylinux2010_i686
  py33-none-manylinux_2_11_i686
  py33-none-manylinux_2_10_i686
  py33-none-manylinux_2_9_i686
  py33-none-manylinux_2_8_i686
  py33-none-manylinux_2_7_i686
  py33-none-manylinux_2_6_i686
  py33-none-manylinux_2_5_i686
  py33-none-manylinux1_i686
  py33-none-linux_i686
  py32-none-manylinux_2_27_i686
  py32-none-manylinux_2_26_i686
  py32-none-manylinux_2_25_i686
  py32-none-manylinux_2_24_i686
  py32-none-manylinux_2_23_i686
  py32-none-manylinux_2_22_i686
  py32-none-manylinux_2_21_i686
  py32-none-manylinux_2_20_i686
  py32-none-manylinux_2_19_i686
  py32-none-manylinux_2_18_i686
  py32-none-manylinux_2_17_i686
  py32-none-manylinux2014_i686
  py32-none-manylinux_2_16_i686
  py32-none-manylinux_2_15_i686
  py32-none-manylinux_2_14_i686
  py32-none-manylinux_2_13_i686
  py32-none-manylinux_2_12_i686
  py32-none-manylinux2010_i686
  py32-none-manylinux_2_11_i686
  py32-none-manylinux_2_10_i686
  py32-none-manylinux_2_9_i686
  py32-none-manylinux_2_8_i686
  py32-none-manylinux_2_7_i686
  py32-none-manylinux_2_6_i686
  py32-none-manylinux_2_5_i686
  py32-none-manylinux1_i686
  py32-none-linux_i686
  py31-none-manylinux_2_27_i686
  py31-none-manylinux_2_26_i686
  py31-none-manylinux_2_25_i686
  py31-none-manylinux_2_24_i686
  py31-none-manylinux_2_23_i686
  py31-none-manylinux_2_22_i686
  py31-none-manylinux_2_21_i686
  py31-none-manylinux_2_20_i686
  py31-none-manylinux_2_19_i686
  py31-none-manylinux_2_18_i686
  py31-none-manylinux_2_17_i686
  py31-none-manylinux2014_i686
  py31-none-manylinux_2_16_i686
  py31-none-manylinux_2_15_i686
  py31-none-manylinux_2_14_i686
  py31-none-manylinux_2_13_i686
  py31-none-manylinux_2_12_i686
  py31-none-manylinux2010_i686
  py31-none-manylinux_2_11_i686
  py31-none-manylinux_2_10_i686
  py31-none-manylinux_2_9_i686
  py31-none-manylinux_2_8_i686
  py31-none-manylinux_2_7_i686
  py31-none-manylinux_2_6_i686
  py31-none-manylinux_2_5_i686
  py31-none-manylinux1_i686
  py31-none-linux_i686
  py30-none-manylinux_2_27_i686
  py30-none-manylinux_2_26_i686
  py30-none-manylinux_2_25_i686
  py30-none-manylinux_2_24_i686
  py30-none-manylinux_2_23_i686
  py30-none-manylinux_2_22_i686
  py30-none-manylinux_2_21_i686
  py30-none-manylinux_2_20_i686
  py30-none-manylinux_2_19_i686
  py30-none-manylinux_2_18_i686
  py30-none-manylinux_2_17_i686
  py30-none-manylinux2014_i686
  py30-none-manylinux_2_16_i686
  py30-none-manylinux_2_15_i686
  py30-none-manylinux_2_14_i686
  py30-none-manylinux_2_13_i686
  py30-none-manylinux_2_12_i686
  py30-none-manylinux2010_i686
  py30-none-manylinux_2_11_i686
  py30-none-manylinux_2_10_i686
  py30-none-manylinux_2_9_i686
  py30-none-manylinux_2_8_i686
  py30-none-manylinux_2_7_i686
  py30-none-manylinux_2_6_i686
  py30-none-manylinux_2_5_i686
  py30-none-manylinux1_i686
  py30-none-linux_i686
  cp37-none-any
  py37-none-any
  py3-none-any
  py36-none-any
  py35-none-any
  py34-none-any
  py33-none-any
  py32-none-any
  py31-none-any
  py30-none-any
root@astra-Ideapad-S110:~#
"
kbRXYrg4,Untitled,MatvikX,PHP,Wednesday 24th of April 2024 12:43:08 PM CDT,"<?php

namespace App\Components;

use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Arr;

class SeoPaginator extends LengthAwarePaginator
{
    /**
     * Remove page parameter from the first page URL.
     * Removing URL from active page.
     *
     * @param [type] $page
     * @return void
     */
    public function url($page)
    {
        if ($page <= 0) {
            $page = 1;
        }

        if ($this->currentPage == $page) {
            return null;
        }

        // If we have any extra query string key / value pairs that need to be added
        // onto the URL, we will put them in query string form and then attach it
        // to the URL. This allows for extra information like sortings storage.
        $parameters = [$this->pageName => $page];

        if (count($this->query) > 0) {
            $parameters = array_merge($this->query, $parameters);
        }

        // Remove 'page' parameter if it's 1
        if ($page == 1 && isset($parameters['page'])) {
            unset($parameters['page']);
        } else {
            $parameters['page'] = $page;
        }

        $result =  $this->path()
            . (count($parameters) > 0
                ? (str_contains($this->path(), '?') ? '&' : '?')
                : '')
            . Arr::query($parameters)
            . $this->buildFragment();

        return trim($result, '?&');
    }
}

// In AppServiceProvider
$this->app->alias(SeoPaginator::class, LengthAwarePaginator::class);"
KwmDrRwS,dumb program,DreMinus,C#,Wednesday 24th of April 2024 12:37:25 PM CDT,"using System.Text;

var initialSeed = 0xDEAD0CAB;
var seed = 0xDEAD0CAB;
var initialState = seed;

var initialAmount = 0;
long endAmount = 32768;
var intervalAmount = 15;

var doIntervals = false;
var amountToIncreaseBy = 1;
var thresholdOfAnalysis = 8;

if (doIntervals)
{
  for (var i = initialAmount; i <= endAmount; i += amountToIncreaseBy)
  {
    var amountForInterval = AnalyzeRngForInitialAmountOfCalls(i, intervalAmount);
    if (amountForInterval >= thresholdOfAnalysis)
    {
      //Console.WriteLine($""{i}-{i + intervalAmount}-{amountForInterval}"");
    }
  }
}
else
{
  var amountForInterval = AnalyzeRngForInitialAmountOfCalls(initialAmount, endAmount);
}

int AnalyzeRngForInitialAmountOfCalls(int beforeEntryAmount, long intervalAmount)
{
  var build = new StringBuilder();
  long maxNumberOfCalls = beforeEntryAmount+intervalAmount;

  var fileTimer = 0;
  var amountOfTimesInFullRngCycle = 0;

  seed = initialSeed;
  if (beforeEntryAmount != 0)
  {
    for (long preRngCalls = 0; preRngCalls <= beforeEntryAmount; preRngCalls++)
    {
      rand();
    }
  }

  //long countOfBuildingAtEnd = 0;
  //long countOfBuildingAtBegin = 0;
  //long countOfRightSideAlley = 0;
  //long countOfLeftSideAlley = 0;
  //long countOfUnderAwning = 0;
  //long countOfMiddleOfBuilding = 0;

  //long count30 = 0;
  //long count31 = 0;
  //long count32 = 0, count33 = 0, count34 = 0, count35 = 0, count36 = 0, count37 = 0, count38 = 0, count39 = 0, count3A = 0, count3B = 0;

  //long count40 = 0, count41 = 0, count42 = 0;

  for (long i = beforeEntryAmount; i <= maxNumberOfCalls; i++)
  {
    initialState = seed;

    //if (initialState == 0xDEAD0CAB)
    //{
    //  Console.WriteLine($""I did a full cycle at {i} calls"");
    //}

    var timesToOffset = calculateOffset(fileTimer);
    offsetRng(timesToOffset);
    var piece1 = getPiece1(Stages.SpeedHighway);
    var piece2 = getPiece2(Stages.SpeedHighway);
    var piece3 = getPiece3(Stages.SpeedHighway);
    //if (piece1 == 0x12 && piece2 == 0x3A && piece3 == 0x41)
    //{
    //amountOfTimesInFullRngCycle++;
    //}

    var goodSets = new List<ValueTuple<int, int, int>>
    {
      new (0x11, 0x3A, 0x41),
      new (0x12, 0x30, 0x41),
      new (0x12, 0x31, 0x41),
      new (0x12, 0x32, 0x41),
      new (0x12, 0x35, 0x41),
      new (0x12, 0x37, 0x41),
      new (0x12, 0x3A, 0x41),
      new (0x12, 0x3B, 0x41),
      new (0x13, 0x30, 0x41),
      new (0x13, 0x31, 0x41),
      new (0x13, 0x32, 0x41),
      new (0x13, 0x35, 0x41),
      new (0x13, 0x37, 0x41),
      new (0x13, 0x3A, 0x41),
      new (0x13, 0x3B, 0x41),
      new (0x15, 0x3B, 0x41),
      new (0x15, 0x3B, 0x41),
      new (0x12, 0x31, 0x40),
      new (0x12, 0x3B, 0x40)
    };
    var theSet = new ValueTuple<int, int, int>(piece1, piece2, piece3);
    if (goodSets.Contains(theSet))
    {
      //Console.WriteLine($""{i}-{theSet.Item1:X}-{theSet.Item2:X}-{theSet.Item3:X}"");
      amountOfTimesInFullRngCycle++;
    }

    build.Append($""{i},{initialState:X},{theSet.Item1:X},{theSet.Item2:X},{theSet.Item3:X}{Environment.NewLine}"");
    //Console.WriteLine($""{i},{theSet.Item1:X},{theSet.Item2:X},{theSet.Item3:X}"");
    //var shGoodPiece1s = new List<int> { 0x12, 0x13, 0x15 };
    //var shGoodPiece2s = new List<int> { 0x30, 0x31, 0x32, 0x37, 0x3A, 0x3B };
    //var shGoodPiece3s = new List<int> { 0x40, 0x41 };

    //if (shGoodPiece1s.Contains(piece1) && shGoodPiece2s.Contains(piece2) && shGoodPiece3s.Contains(piece3))
    //{
    //  Console.WriteLine($""{i}-{piece1:X}-{piece2:X}-{piece3:X}"");
    //  amountOfTimesInFullRngCycle++;
    //}

    //switch ((SpeedHighwayP1s)piece1)
    //{
    //  case SpeedHighwayP1s.BuildingAtEnd:
    //    countOfBuildingAtEnd++;
    //    break;
    //  case SpeedHighwayP1s.BuildingAtBegin:
    //    countOfBuildingAtBegin++;
    //    break;
    //  case SpeedHighwayP1s.RightSideAlley:
    //    countOfRightSideAlley++;
    //    break;
    //  case SpeedHighwayP1s.LeftSideAlley:
    //    countOfLeftSideAlley++;
    //    break;
    //  case SpeedHighwayP1s.UnderAwning:
    //    countOfUnderAwning++;
    //    break;
    //  case SpeedHighwayP1s.MiddleOfBuilding:
    //    countOfMiddleOfBuilding++;
    //    break;
    //}

    //switch ((SpeedHighwayP2s)piece2)
    //{
    //  case SpeedHighwayP2s.YellowCanisterNearGreyBalcony:
    //    count30++;
    //    break;
    //  case SpeedHighwayP2s.GreyCanisterNearMiddleEntrance:
    //    count31++;
    //    break;
    //  case SpeedHighwayP2s.YellowCanisterNearMiddleBuilding:
    //    count32++;
    //    break;
    //  case SpeedHighwayP2s.GreyCanisterNearEnd:
    //    count33++;
    //    break;
    //  case SpeedHighwayP2s.YellowCanisterNearElectricEnemy:
    //    count34++;
    //    break;
    //  case SpeedHighwayP2s.GreyCanisterInAlcove:
    //    count35++;
    //    break;
    //  case SpeedHighwayP2s.ElectricSpinner:
    //    count36++;
    //    break;
    //  case SpeedHighwayP2s.BlackSpikeNearGreyBalcony:
    //    count37++;
    //    break;
    //  case SpeedHighwayP2s.BlackSpikeNearBuildingP1:
    //    count38++;
    //    break;
    //  case SpeedHighwayP2s.Cop:
    //    count39++;
    //    break;
    //  case SpeedHighwayP2s.BlackSpikeMiddleBuilding:
    //    count3A++;
    //    break;
    //  case SpeedHighwayP2s.BlackSpikeIL:
    //    count3B++;
    //    break;
    //}

    //switch ((SpeedHighwayP3s)piece3)
    //{
    //  case SpeedHighwayP3s.GreyBalcony:
    //    count40++;
    //    break;
    //  case SpeedHighwayP3s.BalconyNearSpawn:
    //    count41++;
    //    break;
    //  case SpeedHighwayP3s.RedBalcony:
    //    count42++;
    //    break;
    //}

    seed = initialState;
    rand();
  }

  //Console.WriteLine($""Count of YellowCanisterNearGreyBalcony: {count30}"");
  //Console.WriteLine($""Count of GreyCanisterNearMiddleEntrance: {count31}"");
  //Console.WriteLine($""Count of YellowCanisterNearMiddleBuilding: {count32}"");
  //Console.WriteLine($""Count of GreyCanisterNearEnd: {count33}"");
  //Console.WriteLine($""Count of YellowCanisterNearElectricEnemy: {count34}"");
  //Console.WriteLine($""Count of GreyCanisterInAlcove: {count35}"");
  //Console.WriteLine($""Count of ElectricSpinner: {count36}"");
  //Console.WriteLine($""Count of BlackSpikeNearGreyBalcony: {count37}"");
  //Console.WriteLine($""Count of BlackSpikeNearBuildingP1: {count38}"");
  //Console.WriteLine($""Count of Cop: {count39}"");
  //Console.WriteLine($""Count of BlackSpikeMiddleBuilding: {count3A}"");
  //Console.WriteLine($""Count of BlackSpikeIL: {count3B}"");

  var thing = build.ToString();

  return amountOfTimesInFullRngCycle;

  //Console.WriteLine($""Piece 1 = {piece1:X}"");
  //Console.WriteLine($""Piece 2 = {piece2:X}"");
  //Console.WriteLine($""Piece 3 = {piece3:X}"");
}


int calculateOffset(int fileFrameCount) => fileFrameCount & 0xF;

void offsetRng(int offset)
{
  for (int i = 0; i < offset; i++)
  {
    rand();
  }
}

uint rand()
{
  seed = 0x343FD * seed + 0x269EC3;
  return (seed >> 0x10) & 0x7FFF;
}

void srand(uint newSeed)
{
  seed = newSeed;
}

int getPiece1(Stages stage)
{
  int possiblePiece1s = 0;
  switch (stage)
  {
    case Stages.SpeedHighway:
      possiblePiece1s = 0x6;
      break;
    case Stages.Casinopolis:
      possiblePiece1s = 0x6;
      break;
    case Stages.RedMountain:
      possiblePiece1s = 0x6;
      break;
    case Stages.SkyDeck:
      possiblePiece1s = 0x3;
      break;
  }
  return (int)(possiblePiece1s * rand() / 32768.0 * 0.9900001) | 0x10;
}

int getPiece2(Stages stage)
{
  int possiblePiece2Digs = 0;
  int possiblePiece2Enemies = 0;
  switch (stage)
  {
    case Stages.SpeedHighway:
      possiblePiece2Enemies = 0xC;
      break;
    case Stages.Casinopolis:
      possiblePiece2Enemies = 0x5;
      break;
    case Stages.RedMountain:
      possiblePiece2Digs = 0x6;
      possiblePiece2Enemies = 0x6;
      break;
    case Stages.SkyDeck:
      possiblePiece2Digs = 0x4;
      possiblePiece2Enemies = 0x8;
      break;
  }

  int piece2;
  if (stage == Stages.RedMountain || stage == Stages.SkyDeck)
  {
    piece2 = (int)((possiblePiece2Digs + possiblePiece2Enemies) * rand() / 32768.0 * 0.9900001);
    if (piece2 >= possiblePiece2Digs)
    {
      piece2 = (piece2 - possiblePiece2Digs) | 0x30;
    }
    else
    {
      piece2 |= 0x20;
    }
  }
  else
  {
    piece2 = (int)(possiblePiece2Enemies * rand() / 32768.0 * 0.9900001) | 0x30;
  }
  return piece2;
}

int getPiece3(Stages stage)
{
  int possiblePiece3s = 0;
  switch (stage)
  {
    case Stages.SpeedHighway:
      possiblePiece3s = 0x3;
      break;
    case Stages.Casinopolis:
      possiblePiece3s = 0x3;
      break;
    case Stages.RedMountain:
      possiblePiece3s = 0x3;
      break;
    case Stages.SkyDeck:
      possiblePiece3s = 0x6;
      break;
  }
  return (int)(possiblePiece3s * rand() / 32768.0 * 0.9900001) | 0x40;
}

enum Stages
{
  SpeedHighway,
  Casinopolis,
  RedMountain,
  SkyDeck
}

enum SpeedHighwayP1s
{
  BuildingAtEnd = 0x10,
  BuildingAtBegin = 0x11,
  RightSideAlley = 0x12,
  LeftSideAlley = 0x13,
  UnderAwning = 0x14,
  MiddleOfBuilding = 0x15
}

enum SpeedHighwayP2s
{
  YellowCanisterNearGreyBalcony = 0x30,
  GreyCanisterNearMiddleEntrance = 0x31,
  YellowCanisterNearMiddleBuilding = 0x32,
  GreyCanisterNearEnd = 0x33,
  YellowCanisterNearElectricEnemy = 0x34,
  GreyCanisterInAlcove = 0x35,
  ElectricSpinner = 0x36,
  BlackSpikeNearGreyBalcony = 0x37,
  BlackSpikeNearBuildingP1 = 0x38,
  Cop = 0x39,
  BlackSpikeMiddleBuilding = 0x3A,
  BlackSpikeIL = 0x3B
}

enum SpeedHighwayP3s
{
  GreyBalcony = 0x40,
  BalconyNearSpawn = 0x41,
  RedBalcony = 0x42
}"
GWzejEPU,craftify,AnonymusHochgenuss,Lua,Wednesday 24th of April 2024 12:17:05 PM CDT,"local tArgs = { ... }

function suckdropDirection()
 if input == ""top"" then
  turtle.dropUp()
 elseif input == ""bottom"" then
  turtle.dropDown()
 else
  turtle.drop()
 end
end

function suckDirection()
 if input == ""top"" then
  turtle.suckUp()
 elseif input == ""bottom"" then
  turtle.suckDown()
 else
  turtle.suck()
 end
end

function dropDirection()
 if output == ""top"" then
  turtle.dropUp()
 elseif output == ""bottom"" then
  turtle.dropDown()
 else
  turtle.drop()
 end
end

function drop()
 for i=5,12 do
  if turtle.getItemCount(i) > 0 then
   turtle.select(i)
   for e=2,4 do
    if turtle.compareTo(e) then
     turtle.select(e)
     suckdropDirection()
     turtle.select(i)
    end
   end
   suckdropDirection()
  end
 end
 for i=2,4 do
  if turtle.getItemCount(i) > 0 then
   turtle.select(i)
   dropDirection()
  end
 end
end

function pattern()
 if tArgs[2] == ""4"" then
  turtle.select(2)
  suckDirection()
  turtle.select(5)
  suckDirection()
  turtle.select(6)
  suckDirection()
  turtle.select(9)
  suckDirection()
 elseif tArgs[2] == ""8"" then
  turtle.select(2)
  suckDirection()
  turtle.select(3)
  suckDirection()
  turtle.select(5)
  suckDirection()
  turtle.select(6)
  suckDirection()
  turtle.select(7)
  suckDirection()
  turtle.select(9)
  suckDirection()
  turtle.select(10)
  suckDirection()
  turtle.select(11)
  suckDirection()
 end
end

if tArgs[1] == ""ee3"" then
 if not fs.exists(""ee3"") then
  shell.run(""clear"")
  print(""You ran this Program the first"")
  print(""Time on this Turtle. By default"")
  print(""this Turtle will Suck the Materials"")
  print(""from the Top and Drop it down."")
  print("""")
  write(""Press ENTER to Continue"")
  read()
  print("""")
  print(""You can Change this after first"")
  print(""start by editing the ee3 file."")
  print(""The first Line defines where it"")
  print(""comes from and the second Line"")
  print(""decides where it goes."")
  print("""")
  print(""Attention: the only accepted"")
  print(""Directions are top, front & bottom"")
  print(""Every other Entry will reset the File!"")
  print("""")
  write(""Press ENTER to Accept and Start"")
  read()
  file=fs.open(""ee3"",""w"")
  file.writeLine(""top"")
  file.writeLine(""bottom"")
  file.close()
  input=""top""
  ouput=""bottom""
 else
  file=fs.open(""ee3"",""r"")
  input=file.readLine()
  output=file.readLine()
  file.close()
  if not input then
   fs.delete(""ee3"")
   shell.run(""craftify ee3 ""..tArgs[2])
  end
  if not output then
   fs.delete(""ee3"")
   shell.run(""craftify ee3 ""..tArgs[2])
  end
  if not input == ""top"" then
   if not input == ""bottom"" then
    if not input == ""front"" then
     fs.delete(""ee3"")
     shell.run(""craftify ee3 ""..tArgs[2])
    end
   end
  end
  if not output == ""top"" then
   if not output == ""bottom"" then
    if not output == ""front"" then
     fs.delete(""ee3"")
     shell.run(""craftify ee3 ""..tArgs[2])
    end
   end
  end
 end
 shell.run(""clear"")
 print(""crafting with ""..tArgs[2].."" Items."")
 print(""input:  ""..input)
 print(""output: ""..output)
 drop()
 pattern()
 if tArgs[2] == ""4"" then
  q1=""2""
  q2=""6""
  q3=""9""
 else
  q1=""3""
  q2=""7""
  q3=""11""
 end
 for f=1,64 do
  turtle.select(4)
  turtle.craft()
  dropDirection()
  if f < 64 then
   for q = 2,q1 do
    while turtle.getItemCount(q) < 1 do
     drop()
     pattern()
    end
   end
   for q = 5,q2 do
    while turtle.getItemCount(q) < 1 do
     drop()
     pattern()
    end
   end
   for q = 9,q3 do
    while turtle.getItemCount(q) < 1 do
     drop()
     pattern()
    end
   end
  end
 end
 drop()
 shell.run(""craftify ee3 ""..tArgs[2])
end"
6sX3G2xa,mobfarm-materials,Combreal,GetText,Wednesday 24th of April 2024 12:12:19 PM CDT,"Mumbojumbo mob farm :
https://www.youtube.com/watch?v=YA2siTV5s4Q

BLOCKS : LOTS
DISPENSER : 60
REDSTONE : 350
REDTORCH : 40
WATER BUCKET : 60
HOPPER : 2
STICKY PISTON : 4

52 high (1+3+3+3+3+3+35+1)

Shulkercraft Iron golem farm :
https://youtu.be/xDJtXznj8Fg

42 - Building Block 
41 - Glass
26 - Wall
8 - Ladder
9 - Trapdoor
8 - Sign
5 - Hopper
4 - Repeater
3 - Composter
2 - Redstone dust 3- Bed
2 - Water Bucket
1 - Lava Bucket
1 - Chest
1 - Piston
1 - Redstone Torch 1 - Name Tag
64 - Temporary Block

(~15 height)
"
