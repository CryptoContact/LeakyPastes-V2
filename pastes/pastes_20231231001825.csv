id,title,username,language,date,content
3JjdKh2t,2023-12-30_stats.json,rdp_snitch,JSON,Saturday 30th of December 2023 06:16:04 PM CDT,"{
  ""ip"": {
    ""74.105.22.130"": 42,
    ""194.165.17.21"": 20,
    ""109.69.7.157"": 8,
    ""23.225.14.53"": 2,
    ""205.210.31.55"": 6,
    ""87.251.75.145"": 6,
    ""45.227.254.26"": 8,
    ""103.195.236.182"": 8,
    ""123.56.20.194"": 8,
    ""103.159.186.22"": 6,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""59.18.161.39"": 2,
    ""135.125.216.200"": 2,
    ""185.170.144.3"": 4,
    ""205.210.31.219"": 6,
    ""45.181.30.20"": 2,
    ""167.248.133.36"": 2,
    ""147.78.47.159"": 2,
    ""62.204.41.208"": 4,
    ""196.190.117.7"": 2,
    ""185.198.69.19"": 2,
    ""185.198.69.11"": 2,
    ""185.198.69.29"": 2,
    ""185.198.69.28"": 2,
    ""185.198.69.15"": 2,
    ""185.198.69.2"": 2,
    ""185.198.69.9"": 2,
    ""185.198.69.17"": 2,
    ""165.154.120.30"": 2,
    ""198.235.24.60"": 6,
    ""91.92.254.50"": 2,
    ""185.17.0.139"": 2,
    ""194.195.213.7"": 8,
    ""50.116.0.123"": 2,
    ""2.57.149.92"": 2,
    ""205.210.31.76"": 6,
    ""194.165.16.37"": 4
  },
  ""asn"": {
    ""AS701"": 42,
    ""AS48721"": 24,
    ""AS21183"": 8,
    ""AS40065"": 2,
    ""AS396982"": 24,
    ""AS208091"": 6,
    ""AS267784"": 8,
    ""AS140827"": 8,
    ""AS37963"": 8,
    ""AS141462"": 6,
    ""AS208046"": 12,
    ""AS4766"": 2,
    ""AS16276"": 2,
    ""AS197414"": 4,
    ""AS269160"": 2,
    ""AS398324"": 2,
    ""AS209588"": 2,
    ""AS59425"": 4,
    ""AS24757"": 2,
    ""AS57523"": 16,
    ""AS135377"": 2,
    ""AS394711"": 2,
    ""AS210644"": 2,
    ""AS63949"": 10,
    ""AS208312"": 2
  },
  ""isp"": {
    ""Verizon Business"": 42,
    ""Flyservers S.A."": 34,
    ""Vodafone Network"": 8,
    ""Cnservers LLC"": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 10,
    ""AZ Viet NAM Communications Technology Company Limited"": 8,
    ""Hangzhou Alibaba Advertising Co"": 8,
    ""Salam Online"": 6,
    ""ColocationX Ltd."": 12,
    ""Korea Telecom"": 2,
    ""OVH SAS"": 2,
    ""FibraTec Telecom"": 2,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 4,
    ""Ethiotelecom"": 2,
    ""Chang Way Technologies Co. Limited"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Limenet"": 2,
    ""Azerta GROUP Ltd"": 2,
    ""Akamai Technologies, Inc."": 10,
    ""Red Byte LLC"": 2
  },
  ""org"": {
    ""Verizon Business"": 42,
    ""Flyservers S.A"": 26,
    ""Unknown"": 10,
    ""CloudRadium L.L.C"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 6,
    ""UAB Host Baltic"": 8,
    ""DULIEUAZ"": 8,
    ""Aliyun Computing Co., LTD"": 8,
    ""SalamOnline"": 6,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""(ju)sion"": 2,
    ""OVH GmbH"": 2,
    ""Xhostis"": 4,
    ""Dblock"": 2,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Limenet LLC"": 2,
    ""Azerta Group LLC"": 2,
    ""Linode, LLC"": 8,
    ""Linode"": 2
  },
  ""regionName"": {
    ""New Jersey"": 42,
    ""Kaunas"": 24,
    ""Tirana"": 8,
    ""California"": 28,
    ""North Holland"": 20,
    ""Vilnius"": 8,
    ""Ho Chi Minh"": 8,
    ""Beijing"": 8,
    ""Dhaka Division"": 6,
    ""Virginia"": 6,
    ""Gyeonggi-do"": 2,
    ""Hesse"": 2,
    ""Parana"": 2,
    ""Michigan"": 2,
    ""Moscow"": 22,
    ""Addis Ababa"": 2,
    ""Bangkok"": 2,
    ""Georgia"": 8,
    ""Lesser Poland"": 2
  },
  ""country"": {
    ""United States"": 86,
    ""Lithuania"": 32,
    ""Albania"": 8,
    ""The Netherlands"": 20,
    ""Vietnam"": 8,
    ""China"": 8,
    ""Bangladesh"": 6,
    ""South Korea"": 2,
    ""Germany"": 2,
    ""Brazil"": 2,
    ""Russia"": 22,
    ""Ethiopia"": 2,
    ""Thailand"": 2,
    ""Poland"": 2
  },
  ""account"": {
    ""142.93.8.59"": 72,
    ""uXQSJWmac"": 2,
    ""gwwUPi"": 2,
    ""rFAyTc"": 2,
    ""Administr"": 34,
    ""Test"": 16,
    ""hello"": 24,
    ""Domain"": 16,
    ""(empty)"": 4,
    ""JSGYAoaVe"": 2,
    ""gMpsNj"": 2,
    ""CQCsYQ"": 2,
    ""Administrator"": 2,
    ""HgCEluvgQ"": 2,
    ""pkSWxA"": 2,
    ""tfvrOJ"": 2,
    ""in2sr42z"": 8,
    ""beio"": 2,
    ""ykNPiQIOV"": 2,
    ""UBqpiA"": 2,
    ""lRMzuN"": 2
  },
  ""keyboard"": {
    ""Unknown"": 202
  },
  ""client_build"": {
    ""Unknown"": 202
  },
  ""client_name"": {
    ""Unknown"": 202
  },
  ""ip_type"": {
    ""Unknown"": 124,
    ""mobile"": 14,
    ""hosting"": 48,
    ""proxy"": 16
  }
}"
FmB6aptC,2023-12-30_stats.json,rdp_snitch,JSON,Saturday 30th of December 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""74.105.22.130"": 21,
    ""194.165.17.21"": 10,
    ""109.69.7.157"": 4,
    ""23.225.14.53"": 1,
    ""205.210.31.55"": 3,
    ""87.251.75.145"": 3,
    ""45.227.254.26"": 4,
    ""103.195.236.182"": 4,
    ""123.56.20.194"": 4,
    ""103.159.186.22"": 3,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""59.18.161.39"": 1,
    ""135.125.216.200"": 1,
    ""185.170.144.3"": 2,
    ""205.210.31.219"": 3,
    ""45.181.30.20"": 1,
    ""167.248.133.36"": 1,
    ""147.78.47.159"": 1,
    ""62.204.41.208"": 2,
    ""196.190.117.7"": 1,
    ""185.198.69.19"": 1,
    ""185.198.69.11"": 1,
    ""185.198.69.29"": 1,
    ""185.198.69.28"": 1,
    ""185.198.69.15"": 1,
    ""185.198.69.2"": 1,
    ""185.198.69.9"": 1,
    ""185.198.69.17"": 1,
    ""165.154.120.30"": 1,
    ""198.235.24.60"": 3,
    ""91.92.254.50"": 1,
    ""185.17.0.139"": 1,
    ""194.195.213.7"": 4,
    ""50.116.0.123"": 1,
    ""2.57.149.92"": 1,
    ""205.210.31.76"": 3,
    ""194.165.16.37"": 2
  },
  ""asn"": {
    ""AS701"": 21,
    ""AS48721"": 12,
    ""AS21183"": 4,
    ""AS40065"": 1,
    ""AS396982"": 12,
    ""AS208091"": 3,
    ""AS267784"": 4,
    ""AS140827"": 4,
    ""AS37963"": 4,
    ""AS141462"": 3,
    ""AS208046"": 6,
    ""AS4766"": 1,
    ""AS16276"": 1,
    ""AS197414"": 2,
    ""AS269160"": 1,
    ""AS398324"": 1,
    ""AS209588"": 1,
    ""AS59425"": 2,
    ""AS24757"": 1,
    ""AS57523"": 8,
    ""AS135377"": 1,
    ""AS394711"": 1,
    ""AS210644"": 1,
    ""AS63949"": 5,
    ""AS208312"": 1
  },
  ""isp"": {
    ""Verizon Business"": 21,
    ""Flyservers S.A."": 17,
    ""Vodafone Network"": 4,
    ""Cnservers LLC"": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 5,
    ""AZ Viet NAM Communications Technology Company Limited"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""Salam Online"": 3,
    ""ColocationX Ltd."": 6,
    ""Korea Telecom"": 1,
    ""OVH SAS"": 1,
    ""FibraTec Telecom"": 1,
    ""Censys, Inc."": 1,
    ""Horizon LLC"": 2,
    ""Ethiotelecom"": 1,
    ""Chang Way Technologies Co. Limited"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Limenet"": 1,
    ""Azerta GROUP Ltd"": 1,
    ""Akamai Technologies, Inc."": 5,
    ""Red Byte LLC"": 1
  },
  ""org"": {
    ""Verizon Business"": 21,
    ""Flyservers S.A"": 13,
    ""Unknown"": 5,
    ""CloudRadium L.L.C"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 3,
    ""UAB Host Baltic"": 4,
    ""DULIEUAZ"": 4,
    ""Aliyun Computing Co., LTD"": 4,
    ""SalamOnline"": 3,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""(ju)sion"": 1,
    ""OVH GmbH"": 1,
    ""Xhostis"": 2,
    ""Dblock"": 1,
    ""Censys, Inc."": 1,
    ""Horizon LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Limenet LLC"": 1,
    ""Azerta Group LLC"": 1,
    ""Linode, LLC"": 4,
    ""Linode"": 1
  },
  ""regionName"": {
    ""New Jersey"": 21,
    ""Kaunas"": 12,
    ""Tirana"": 4,
    ""California"": 14,
    ""North Holland"": 10,
    ""Vilnius"": 4,
    ""Ho Chi Minh"": 4,
    ""Beijing"": 4,
    ""Dhaka Division"": 3,
    ""Virginia"": 3,
    ""Gyeonggi-do"": 1,
    ""Hesse"": 1,
    ""Parana"": 1,
    ""Michigan"": 1,
    ""Moscow"": 11,
    ""Addis Ababa"": 1,
    ""Bangkok"": 1,
    ""Georgia"": 4,
    ""Lesser Poland"": 1
  },
  ""country"": {
    ""United States"": 43,
    ""Lithuania"": 16,
    ""Albania"": 4,
    ""The Netherlands"": 10,
    ""Vietnam"": 4,
    ""China"": 4,
    ""Bangladesh"": 3,
    ""South Korea"": 1,
    ""Germany"": 1,
    ""Brazil"": 1,
    ""Russia"": 11,
    ""Ethiopia"": 1,
    ""Thailand"": 1,
    ""Poland"": 1
  },
  ""account"": {
    ""142.93.8.59"": 36,
    ""uXQSJWmac"": 1,
    ""gwwUPi"": 1,
    ""rFAyTc"": 1,
    ""Administr"": 17,
    ""Test"": 8,
    ""hello"": 12,
    ""Domain"": 8,
    ""(empty)"": 2,
    ""JSGYAoaVe"": 1,
    ""gMpsNj"": 1,
    ""CQCsYQ"": 1,
    ""Administrator"": 1,
    ""HgCEluvgQ"": 1,
    ""pkSWxA"": 1,
    ""tfvrOJ"": 1,
    ""in2sr42z"": 4,
    ""beio"": 1,
    ""ykNPiQIOV"": 1,
    ""UBqpiA"": 1,
    ""lRMzuN"": 1
  },
  ""keyboard"": {
    ""Unknown"": 101
  },
  ""client_build"": {
    ""Unknown"": 101
  },
  ""client_name"": {
    ""Unknown"": 101
  },
  ""ip_type"": {
    ""Unknown"": 62,
    ""mobile"": 7,
    ""hosting"": 24,
    ""proxy"": 8
  }
}"
P2gkud90,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Saturday 30th of December 2023 06:00:27 PM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_293963.pdf
 
Working as of
31 December 2023"
aukyBYFi,Tkinter grab..,Rnery,Python,Saturday 30th of December 2023 05:45:03 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import tkinter as tk
from PIL import ImageGrab

class RegionSelector:
    def __init__(self, root):
        self.root = root
        self.root.title(""Region Selector"")
        self.canvas = tk.Canvas(root, cursor=""cross"")
        self.canvas.pack(fill=tk.BOTH, expand=True)
        self.select_region_button = tk.Button(root, text=""Select Region"", command=self.start_selection)
        self.select_region_button.pack(pady=10)
        self.selecting_region = False
        self.start_x = None
        self.start_y = None

    def start_selection(self):
        self.selecting_region = True
        self.root.iconify()
        self.root.update()
        self.canvas.bind(""<ButtonPress-1>"", self.start_drawing)
        self.canvas.bind(""<B1-Motion>"", self.draw_marker)
        self.canvas.bind(""<ButtonRelease-1>"", self.finish_selection)

    def start_drawing(self, event):
        self.start_x = self.canvas.canvasx(event.x)
        self.start_y = self.canvas.canvasy(event.y)

    def draw_marker(self, event):
        if not self.selecting_region:
            return
        current_x = self.canvas.canvasx(event.x)
        current_y = self.canvas.canvasy(event.y)
        self.canvas.delete(""marker"")
        self.canvas.create_rectangle(self.start_x, self.start_y, current_x, current_y, outline=""red"", tags=""marker"")

    def finish_selection(self, event):
        if not self.selecting_region:
            return
        self.selecting_region = False
        x, y, w, h = self.get_coordinates()
        print(f""Selected region: x={x}, y={y}, width={w}, height={h}"")
        self.root.deiconify()
        screenshot = ImageGrab.grab(bbox=(x, y, x + w, y + h))
        screenshot.save(""capture.png"")
        self.canvas.unbind(""<ButtonPress-1>"")
        self.canvas.unbind(""<B1-Motion>"")
        self.canvas.unbind(""<ButtonRelease-1>"")
        self.canvas.delete(""marker"")

    def get_coordinates(self):
        bbox = self.canvas.bbox(""marker"")
        if bbox:
            x1, y1, x2, y2 = bbox
            return x1, y1, x2 - x1, y2 - y1
        else:
            return 0, 0, 0, 0

if __name__ == ""__main__"":
    root = tk.Tk()
    root.geometry(""400x300"")
    app = RegionSelector(root)
    root.mainloop()
"
qcYwwywm,# rgb_at_sum.py,here2share,Python,Saturday 30th of December 2023 05:31:35 PM CDT,"# rgb_at_sum.py

combos = []
def rgb_at_sum(target_sum):
	min_g = target_sum - 256
	for r in range(256):
		for g in range(min_g, target_sum - r + 1):
			b = target_sum - r - g
			rgb = r, g, b
			print(rgb, sum(rgb), [target_sum])
			combos.append(rgb)

target_sum = 128 * 3 # or any other desired target sum
rgb_at_sum(target_sum)
print(len(combos))"
psbnCgQX,Blender Export All Selected To Blender Save File,krlyx2,Python,Saturday 30th of December 2023 05:08:50 PM CDT,"# exports each selected object into its own file

import bpy
import os

# export to blend file location
basedir = os.path.dirname(bpy.data.filepath)

if not basedir:
    raise Exception(""Blend file is not saved"")

view_layer = bpy.context.view_layer

obj_active = view_layer.objects.active
selection = bpy.context.selected_objects

bpy.ops.object.select_all(action='DESELECT')

for obj in selection:

    obj.select_set(True)

    # some exporters only use the active object
    view_layer.objects.active = obj

    name = bpy.path.clean_name(obj.name)
    fn = os.path.join(basedir, name)

    bpy.ops.export_scene.obj(filepath=fn + "".obj"", use_selection=True)

    # Can be used for multiple formats
    # bpy.ops.export_scene.x3d(filepath=fn + "".x3d"", use_selection=True)

    obj.select_set(False)

    print(""written:"", fn)


view_layer.objects.active = obj_active

for obj in selection:
    obj.select_set(True)"
YxV8UV0m,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 30th of December 2023 04:58:35 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-270070"
8vvSgRjz,just a script,Pvhak,Java,Saturday 30th of December 2023 04:46:56 PM CDT,"$.ajax({
  method: ""POST"",
  url: ""https://avatar.roblox.com/v1/avatar/thumbnail-customization"",
  contentType: ""application/json"",
  data: JSON.stringify({
    ""camera"": {
        ""distanceScale"": 2, // 0.5 to 4 - distance from camera to character
        ""fieldOfViewDeg"": 30, // 15 to 45 - fov
        ""yRotDeg"": 0 // -60 to 60 - Y rotation
    },
    ""emoteAssetId"": 0,
    ""thumbnailType"": 1
  //   1 = Closeup  (headshot)
  //   2 = FullBody (bodyshot)
  })
}).then(data => console.log(data)).fail(error => alert(error.responseJSON.errors[0].message));"
i30daPxf,Untitled,sissou123,Python,Saturday 30th of December 2023 04:41:50 PM CDT,"TheCompleteNeuralNetworksBootcampTheoryApplications
Overview
Deep Learning and Neural Networks Theory and Applications with PyTorch! Including Transformers, BERT and GPT!

What you'll learn:
Understand How Neural Networks Work (Theory and Applications)
Understand How Convolutional Networks Work (Theory and Applications)
Understand How Recurrent Networks and LSTMs work (Theory and Applications)
Learn how to use PyTorch in depth
for more:https://cuty.io/9WDLsurddM"
XeGpLj1c,Makefile template,leonkasovan,C,Saturday 30th of December 2023 04:08:23 PM CDT,"CC = gcc
CFLAGS = -Wall -Wextra -g

SRCS = src/file1.c src/file2.c
OBJS = $(SRCS:.c=.o)

TARGET = myprogram

$(TARGET): $(OBJS)
    $(CC) $(CFLAGS) -o $@ $^

%.o: %.c
    $(CC) $(CFLAGS) -c -o $@ $<

clean:
    rm -f $(OBJS) $(TARGET)
"
GgQmphaF,Untitled,sissou123,Python,Saturday 30th of December 2023 04:02:22 PM CDT,"The Complete Python Bootcamp From Zero to Hero in Python
Learn Python like a Professional Start from the basics and go all the way to creating your own applications and games
for more:https://dz-linkk.com/ZCUH4"
wHnR0RnC,Untitled,sissou123,PHP,Saturday 30th of December 2023 04:00:23 PM CDT,"PHP for Beginners
Build a Content Management System from Scratch with PHP and MySQL 
for more:https://cuty.io/wQU2
"
JGb2qQnq,Untitled,sissou123,Python,Saturday 30th of December 2023 03:48:22 PM CDT,"MachineLearningAZAIPythonRChatGPTPrize2023

Best Machine Learning course - Machine Learning A-Z™: AI, Python & R + ChatGPT Bonus [2023]-42 Hours -Complete course- Low Priced Course
for more:https://cuty.io/etewFZfrBO5B"
kKaLFnK2,Nigerian scammers [30-12/2023],bombaires,AIMMS,Saturday 30th of December 2023 03:42:59 PM CDT,"<a href=""mailto:laimohammedng_nig@outlook.com"">laimohammedng_nig@outlook.com</a>
<a href=""mailto:aminuharunaa1@gmail.com"">aminuharunaa1@gmail.com</a>
<a href=""mailto:a.m.i.n.uha.r.u.na.a1@gmail.com"">a.m.i.n.uha.r.u.na.a1@gmail.com</a>
<a href=""mailto:amin.u.h.ar.un.aa.1@gmail.com"">amin.u.h.ar.un.aa.1@gmail.com</a>
<a href=""mailto:am.inu.haru.n.a.a.1@gmail.com"">am.inu.haru.n.a.a.1@gmail.com</a>
<a href=""mailto:ami.nu.har.una.a1@gmail.com"">ami.nu.har.una.a1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.har.u.n.aa1@gmail.com"">a.m.i.n.u.har.u.n.aa1@gmail.com</a>
<a href=""mailto:am.i.n.u.h.a.r.una.a.1@gmail.com"">am.i.n.u.h.a.r.una.a.1@gmail.com</a>
<a href=""mailto:a.min.u.h.a.r.un.aa.1@gmail.com"">a.min.u.h.a.r.un.aa.1@gmail.com</a>
<a href=""mailto:a.m.in.uh.a.r.u.n.a.a.1@gmail.com"">a.m.in.uh.a.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:a.minuh.a.runaa.1@gmail.com"">a.minuh.a.runaa.1@gmail.com</a>
<a href=""mailto:am.in.uh.aruna.a.1@gmail.com"">am.in.uh.aruna.a.1@gmail.com</a>
<a href=""mailto:aminuh.a.run.aa.1@gmail.com"">aminuh.a.run.aa.1@gmail.com</a>
<a href=""mailto:amin.u.h.a.r.u.n.aa1@gmail.com"">amin.u.h.a.r.u.n.aa1@gmail.com</a>
<a href=""mailto:a.m.i.n.uha.r.u.n.a.a.1@gmail.com"">a.m.i.n.uha.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:a.mi.nu.ha.r.u.naa.1@gmail.com"">a.mi.nu.ha.r.u.naa.1@gmail.com</a>
<a href=""mailto:ami.n.u.h.arunaa1@gmail.com"">ami.n.u.h.arunaa1@gmail.com</a>
<a href=""mailto:a.min.u.ha.r.u.n.aa1@gmail.com"">a.min.u.ha.r.u.n.aa1@gmail.com</a>
<a href=""mailto:am.inu.h.ar.una.a.1@gmail.com"">am.inu.h.ar.una.a.1@gmail.com</a>
<a href=""mailto:ami.nu.h.ar.u.n.a.a.1@gmail.com"">ami.nu.h.ar.u.n.a.a.1@gmail.com</a>
<a href=""mailto:am.i.nuh.aru.n.aa1@gmail.com"">am.i.nuh.aru.n.aa1@gmail.com</a>
<a href=""mailto:ami.nuha.r.u.n.aa1@gmail.com"">ami.nuha.r.u.n.aa1@gmail.com</a>
<a href=""mailto:a.min.uh.a.ru.naa.1@gmail.com"">a.min.uh.a.ru.naa.1@gmail.com</a>
<a href=""mailto:a.mi.n.u.ha.r.u.naa.1@gmail.com"">a.mi.n.u.ha.r.u.naa.1@gmail.com</a>
<a href=""mailto:am.i.nu.h.a.r.u.n.aa1@gmail.com"">am.i.nu.h.a.r.u.n.aa1@gmail.com</a>
<a href=""mailto:ami.n.u.harunaa1@gmail.com"">ami.n.u.harunaa1@gmail.com</a>
<a href=""mailto:a.minuhar.un.aa.1@gmail.com"">a.minuhar.un.aa.1@gmail.com</a>
<a href=""mailto:a.m.in.u.ha.ru.na.a.1@gmail.com"">a.m.in.u.ha.ru.na.a.1@gmail.com</a>
<a href=""mailto:a.m.i.nu.ha.ru.n.a.a.1@gmail.com"">a.m.i.nu.ha.ru.n.a.a.1@gmail.com</a>
<a href=""mailto:a.minu.haruna.a.1@gmail.com"">a.minu.haruna.a.1@gmail.com</a>
<a href=""mailto:a.m.inuha.runa.a1@gmail.com"">a.m.inuha.runa.a1@gmail.com</a>
<a href=""mailto:am.i.n.u.ha.ru.n.aa1@gmail.com"">am.i.n.u.ha.ru.n.aa1@gmail.com</a>
<a href=""mailto:a.m.in.uh.aru.n.aa1@gmail.com"">a.m.in.uh.aru.n.aa1@gmail.com</a>
<a href=""mailto:a.m.inu.ha.r.unaa1@gmail.com"">a.m.inu.ha.r.unaa1@gmail.com</a>
<a href=""mailto:a.minuha.run.a.a1@gmail.com"">a.minuha.run.a.a1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.har.u.naa.1@gmail.com"">a.m.i.n.u.har.u.naa.1@gmail.com</a>
<a href=""mailto:a.mi.nu.h.a.run.a.a1@gmail.com"">a.mi.nu.h.a.run.a.a1@gmail.com</a>
<a href=""mailto:a.minuh.ar.u.naa1@gmail.com"">a.minuh.ar.u.naa1@gmail.com</a>
<a href=""mailto:a.minuh.a.r.un.aa1@gmail.com"">a.minuh.a.r.un.aa1@gmail.com</a>
<a href=""mailto:am.inu.har.un.aa1@gmail.com"">am.inu.har.un.aa1@gmail.com</a>
<a href=""mailto:amin.u.h.ar.u.na.a.1@gmail.com"">amin.u.h.ar.u.na.a.1@gmail.com</a>
<a href=""mailto:a.m.inu.ha.r.u.naa.1@gmail.com"">a.m.inu.ha.r.u.naa.1@gmail.com</a>
<a href=""mailto:ami.n.u.ha.r.un.a.a1@gmail.com"">ami.n.u.ha.r.un.a.a1@gmail.com</a>
<a href=""mailto:a.m.inuhar.un.a.a.1@gmail.com"">a.m.inuhar.un.a.a.1@gmail.com</a>
<a href=""mailto:amin.uha.run.aa.1@gmail.com"">amin.uha.run.aa.1@gmail.com</a>
<a href=""mailto:am.in.uha.r.una.a.1@gmail.com"">am.in.uha.r.una.a.1@gmail.com</a>
<a href=""mailto:am.i.nuharun.a.a.1@gmail.com"">am.i.nuharun.a.a.1@gmail.com</a>
<a href=""mailto:aminuha.ru.naa.1@gmail.com"">aminuha.ru.naa.1@gmail.com</a>
<a href=""mailto:am.i.nuh.ar.u.n.a.a1@gmail.com"">am.i.nuh.ar.u.n.a.a1@gmail.com</a>
<a href=""mailto:ami.nuh.a.r.una.a.1@gmail.com"">ami.nuh.a.r.una.a.1@gmail.com</a>
<a href=""mailto:am.i.n.uhar.u.na.a.1@gmail.com"">am.i.n.uhar.u.na.a.1@gmail.com</a>
<a href=""mailto:ami.nuh.a.run.aa1@gmail.com"">ami.nuh.a.run.aa1@gmail.com</a>
<a href=""mailto:am.inuhar.un.aa.1@gmail.com"">am.inuhar.un.aa.1@gmail.com</a>
<a href=""mailto:aminu.h.a.r.u.na.a.1@gmail.com"">aminu.h.a.r.u.na.a.1@gmail.com</a>
<a href=""mailto:amin.u.h.a.ru.n.aa.1@gmail.com"">amin.u.h.a.ru.n.aa.1@gmail.com</a>
<a href=""mailto:am.i.n.uh.a.ru.n.a.a1@gmail.com"">am.i.n.uh.a.ru.n.a.a1@gmail.com</a>
<a href=""mailto:a.mi.n.uh.a.r.un.a.a1@gmail.com"">a.mi.n.uh.a.r.un.a.a1@gmail.com</a>
<a href=""mailto:ami.nu.h.a.r.u.n.aa1@gmail.com"">ami.nu.h.a.r.u.n.aa1@gmail.com</a>
<a href=""mailto:ami.n.uh.ar.un.aa.1@gmail.com"">ami.n.uh.ar.un.aa.1@gmail.com</a>
<a href=""mailto:am.i.n.u.har.una.a.1@gmail.com"">am.i.n.u.har.una.a.1@gmail.com</a>
<a href=""mailto:ami.nu.har.u.naa1@gmail.com"">ami.nu.har.u.naa1@gmail.com</a>
<a href=""mailto:a.m.i.nu.h.arun.aa.1@gmail.com"">a.m.i.nu.h.arun.aa.1@gmail.com</a>
<a href=""mailto:ami.n.u.h.a.runa.a.1@gmail.com"">ami.n.u.h.a.runa.a.1@gmail.com</a>
<a href=""mailto:ami.n.uh.ar.una.a.1@gmail.com"">ami.n.uh.ar.una.a.1@gmail.com</a>
<a href=""mailto:am.in.uh.aru.n.aa.1@gmail.com"">am.in.uh.aru.n.aa.1@gmail.com</a>
<a href=""mailto:a.mi.nuh.a.runaa.1@gmail.com"">a.mi.nuh.a.runaa.1@gmail.com</a>
<a href=""mailto:a.mi.n.u.har.un.aa.1@gmail.com"">a.mi.n.u.har.un.aa.1@gmail.com</a>
<a href=""mailto:amin.uh.aruna.a1@gmail.com"">amin.uh.aruna.a1@gmail.com</a>
<a href=""mailto:a.m.inuh.a.ru.n.a.a.1@gmail.com"">a.m.inuh.a.ru.n.a.a.1@gmail.com</a>
<a href=""mailto:a.min.uharu.n.a.a.1@gmail.com"">a.min.uharu.n.a.a.1@gmail.com</a>
<a href=""mailto:am.inuha.r.u.n.a.a1@gmail.com"">am.inuha.r.u.n.a.a1@gmail.com</a>
<a href=""mailto:am.i.nuhar.un.aa1@gmail.com"">am.i.nuhar.un.aa1@gmail.com</a>
<a href=""mailto:ami.nu.ha.run.a.a1@gmail.com"">ami.nu.ha.run.a.a1@gmail.com</a>
<a href=""mailto:ami.n.u.ha.ru.n.aa.1@gmail.com"">ami.n.u.ha.ru.n.aa.1@gmail.com</a>
<a href=""mailto:ami.n.uha.run.aa1@gmail.com"">ami.n.uha.run.aa1@gmail.com</a>
<a href=""mailto:aminuh.aru.n.aa.1@gmail.com"">aminuh.aru.n.aa.1@gmail.com</a>
<a href=""mailto:a.mi.n.uh.a.ru.naa.1@gmail.com"">a.mi.n.uh.a.ru.naa.1@gmail.com</a>
<a href=""mailto:a.m.i.nuh.arunaa1@gmail.com"">a.m.i.nuh.arunaa1@gmail.com</a>
<a href=""mailto:am.inu.ha.ru.n.aa1@gmail.com"">am.inu.ha.ru.n.aa1@gmail.com</a>
<a href=""mailto:a.min.uha.runa.a1@gmail.com"">a.min.uha.runa.a1@gmail.com</a>
<a href=""mailto:a.m.in.uha.r.u.naa.1@gmail.com"">a.m.in.uha.r.u.naa.1@gmail.com</a>
<a href=""mailto:aminu.ha.runa.a.1@gmail.com"">aminu.ha.runa.a.1@gmail.com</a>
<a href=""mailto:ami.nu.h.arunaa.1@gmail.com"">ami.nu.h.arunaa.1@gmail.com</a>
<a href=""mailto:a.mi.n.uharun.aa.1@gmail.com"">a.mi.n.uharun.aa.1@gmail.com</a>
<a href=""mailto:a.minu.h.a.run.a.a1@gmail.com"">a.minu.h.a.run.a.a1@gmail.com</a>
<a href=""mailto:a.mi.n.uha.ru.n.a.a1@gmail.com"">a.mi.n.uha.ru.n.a.a1@gmail.com</a>
<a href=""mailto:a.min.uh.aruna.a.1@gmail.com"">a.min.uh.aruna.a.1@gmail.com</a>
<a href=""mailto:a.m.in.uha.r.u.n.aa.1@gmail.com"">a.m.in.uha.r.u.n.aa.1@gmail.com</a>
<a href=""mailto:a.min.u.har.u.n.aa.1@gmail.com"">a.min.u.har.u.n.aa.1@gmail.com</a>
<a href=""mailto:a.mi.nuhar.u.n.a.a1@gmail.com"">a.mi.nuhar.u.n.a.a1@gmail.com</a>
<a href=""mailto:a.min.uha.r.u.n.a.a1@gmail.com"">a.min.uha.r.u.n.a.a1@gmail.com</a>
<a href=""mailto:am.i.n.uh.arunaa.1@gmail.com"">am.i.n.uh.arunaa.1@gmail.com</a>
<a href=""mailto:a.m.i.nuh.a.ru.n.aa.1@gmail.com"">a.m.i.nuh.a.ru.n.aa.1@gmail.com</a>
<a href=""mailto:a.m.inu.h.ar.u.na.a1@gmail.com"">a.m.inu.h.ar.u.na.a1@gmail.com</a>
<a href=""mailto:ami.n.uh.a.ru.naa.1@gmail.com"">ami.n.uh.a.ru.naa.1@gmail.com</a>
<a href=""mailto:am.in.u.h.arunaa.1@gmail.com"">am.in.u.h.arunaa.1@gmail.com</a>
<a href=""mailto:a.minu.har.unaa.1@gmail.com"">a.minu.har.unaa.1@gmail.com</a>
<a href=""mailto:a.mi.n.u.h.aru.n.a.a1@gmail.com"">a.mi.n.u.h.aru.n.a.a1@gmail.com</a>
<a href=""mailto:a.m.in.u.h.a.ru.na.a.1@gmail.com"">a.m.in.u.h.a.ru.na.a.1@gmail.com</a>
<a href=""mailto:am.in.u.h.a.r.un.a.a1@gmail.com"">am.in.u.h.a.r.un.a.a1@gmail.com</a>
<a href=""mailto:amin.u.ha.run.aa.1@gmail.com"">amin.u.ha.run.aa.1@gmail.com</a>
<a href=""mailto:a.min.u.h.a.r.u.naa.1@gmail.com"">a.min.u.h.a.r.u.naa.1@gmail.com</a>
<a href=""mailto:a.mi.nuh.ar.un.a.a.1@gmail.com"">a.mi.nuh.ar.un.a.a.1@gmail.com</a>
<a href=""mailto:am.inu.h.a.r.una.a.1@gmail.com"">am.inu.h.a.r.una.a.1@gmail.com</a>
<a href=""mailto:aminuh.aru.na.a1@gmail.com"">aminuh.aru.na.a1@gmail.com</a>
<a href=""mailto:a.minu.h.a.runaa1@gmail.com"">a.minu.h.a.runaa1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.h.a.r.un.a.a.1@gmail.com"">a.m.i.n.u.h.a.r.un.a.a.1@gmail.com</a>
<a href=""mailto:am.i.n.uharuna.a.1@gmail.com"">am.i.n.uharuna.a.1@gmail.com</a>
<a href=""mailto:am.i.nuh.a.r.un.a.a1@gmail.com"">am.i.nuh.a.r.un.a.a1@gmail.com</a>
<a href=""mailto:am.i.n.uha.r.u.na.a1@gmail.com"">am.i.n.uha.r.u.na.a1@gmail.com</a>
<a href=""mailto:a.m.i.nu.ha.r.u.naa1@gmail.com"">a.m.i.nu.ha.r.u.naa1@gmail.com</a>
<a href=""mailto:a.minuh.a.r.un.aa.1@gmail.com"">a.minuh.a.r.un.aa.1@gmail.com</a>
<a href=""mailto:am.i.nuhar.u.na.a1@gmail.com"">am.i.nuhar.u.na.a1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.harun.aa1@gmail.com"">a.m.i.n.u.harun.aa1@gmail.com</a>
<a href=""mailto:aminu.ha.r.un.a.a.1@gmail.com"">aminu.ha.r.un.a.a.1@gmail.com</a>
<a href=""mailto:am.inu.haru.naa1@gmail.com"">am.inu.haru.naa1@gmail.com</a>
<a href=""mailto:a.m.in.uha.run.aa1@gmail.com"">a.m.in.uha.run.aa1@gmail.com</a>
<a href=""mailto:a.m.i.nuh.a.runa.a1@gmail.com"">a.m.i.nuh.a.runa.a1@gmail.com</a>
<a href=""mailto:a.mi.nu.h.a.r.u.naa.1@gmail.com"">a.mi.nu.h.a.r.u.naa.1@gmail.com</a>
<a href=""mailto:ami.nuha.r.un.a.a.1@gmail.com"">ami.nuha.r.un.a.a.1@gmail.com</a>
<a href=""mailto:a.minuh.a.r.una.a.1@gmail.com"">a.minuh.a.r.una.a.1@gmail.com</a>
<a href=""mailto:amin.uh.a.ru.n.a.a1@gmail.com"">amin.uh.a.ru.n.a.a1@gmail.com</a>
<a href=""mailto:aminuh.ar.un.a.a.1@gmail.com"">aminuh.ar.un.a.a.1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.h.arunaa1@gmail.com"">a.m.i.n.u.h.arunaa1@gmail.com</a>
<a href=""mailto:a.mi.nuh.a.runa.a.1@gmail.com"">a.mi.nuh.a.runa.a.1@gmail.com</a>
<a href=""mailto:am.i.n.uh.a.r.una.a.1@gmail.com"">am.i.n.uh.a.r.una.a.1@gmail.com</a>
<a href=""mailto:ami.nu.har.u.n.a.a1@gmail.com"">ami.nu.har.u.n.a.a1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.h.a.r.u.naa1@gmail.com"">a.m.i.n.u.h.a.r.u.naa1@gmail.com</a>
<a href=""mailto:a.m.i.nu.ha.ru.na.a1@gmail.com"">a.m.i.nu.ha.ru.na.a1@gmail.com</a>
<a href=""mailto:a.m.in.uh.a.r.u.na.a1@gmail.com"">a.m.in.uh.a.r.u.na.a1@gmail.com</a>
<a href=""mailto:a.m.in.uhar.una.a.1@gmail.com"">a.m.in.uhar.una.a.1@gmail.com</a>
<a href=""mailto:a.minuh.a.ru.n.aa.1@gmail.com"">a.minuh.a.ru.n.aa.1@gmail.com</a>
<a href=""mailto:ami.n.uha.r.u.n.a.a.1@gmail.com"">ami.n.uha.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:ami.n.uharu.naa1@gmail.com"">ami.n.uharu.naa1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.ha.r.u.n.aa.1@gmail.com"">a.m.i.n.u.ha.r.u.n.aa.1@gmail.com</a>
<a href=""mailto:a.mi.n.uhar.un.a.a1@gmail.com"">a.mi.n.uhar.un.a.a1@gmail.com</a>
<a href=""mailto:am.i.nu.h.arun.aa.1@gmail.com"">am.i.nu.h.arun.aa.1@gmail.com</a>
<a href=""mailto:am.inuh.ar.u.naa.1@gmail.com"">am.inuh.ar.u.naa.1@gmail.com</a>
<a href=""mailto:a.mi.nu.h.a.r.u.n.a.a.1@gmail.com"">a.mi.nu.h.a.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:am.inu.ha.r.un.a.a.1@gmail.com"">am.inu.ha.r.un.a.a.1@gmail.com</a>
<a href=""mailto:a.mi.n.uh.a.ru.n.aa.1@gmail.com"">a.mi.n.uh.a.ru.n.aa.1@gmail.com</a>
<a href=""mailto:a.m.i.n.u.ha.r.u.n.a.a.1@gmail.com"">a.m.i.n.u.ha.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:am.in.u.ha.ru.n.aa.1@gmail.com"">am.in.u.ha.ru.n.aa.1@gmail.com</a>
<a href=""mailto:a.mi.nuhar.un.a.a1@gmail.com"">a.mi.nuhar.un.a.a1@gmail.com</a>
<a href=""mailto:a.min.u.haru.n.a.a.1@gmail.com"">a.min.u.haru.n.a.a.1@gmail.com</a>
<a href=""mailto:am.i.n.u.h.a.r.u.n.aa1@gmail.com"">am.i.n.u.h.a.r.u.n.aa1@gmail.com</a>
<a href=""mailto:ami.n.u.ha.runa.a.1@gmail.com"">ami.n.u.ha.runa.a.1@gmail.com</a>
<a href=""mailto:ami.n.u.h.ar.u.n.aa.1@gmail.com"">ami.n.u.h.ar.u.n.aa.1@gmail.com</a>
<a href=""mailto:a.minu.h.a.r.un.a.a1@gmail.com"">a.minu.h.a.r.un.a.a1@gmail.com</a>
<a href=""mailto:am.i.nuharun.aa1@gmail.com"">am.i.nuharun.aa1@gmail.com</a>
<a href=""mailto:a.m.i.n.uh.a.r.un.aa.1@gmail.com"">a.m.i.n.uh.a.r.un.aa.1@gmail.com</a>
<a href=""mailto:a.mi.n.uh.a.ru.naa1@gmail.com"">a.mi.n.uh.a.ru.naa1@gmail.com</a>
<a href=""mailto:a.m.inu.haruna.a.1@gmail.com"">a.m.inu.haruna.a.1@gmail.com</a>
<a href=""mailto:ami.nu.ha.ru.n.aa1@gmail.com"">ami.nu.ha.ru.n.aa1@gmail.com</a>
<a href=""mailto:am.i.nuha.r.u.n.a.a.1@gmail.com"">am.i.nuha.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:ami.nuh.a.ru.n.aa.1@gmail.com"">ami.nuh.a.ru.n.aa.1@gmail.com</a>
<a href=""mailto:a.m.i.n.uh.arunaa.1@gmail.com"">a.m.i.n.uh.arunaa.1@gmail.com</a>
<a href=""mailto:am.inuh.ar.u.n.a.a.1@gmail.com"">am.inuh.ar.u.n.a.a.1@gmail.com</a>
<a href=""mailto:am.i.n.uha.ru.n.a.a1@gmail.com"">am.i.n.uha.ru.n.a.a1@gmail.com</a>
<a href=""mailto:a.mi.nuh.a.ru.naa.1@gmail.com"">a.mi.nuh.a.ru.naa.1@gmail.com</a>
<a href=""mailto:a.m.i.nu.har.u.na.a.1@gmail.com"">a.m.i.nu.har.u.na.a.1@gmail.com</a>
<a href=""mailto:am.inuh.arunaa.1@gmail.com"">am.inuh.arunaa.1@gmail.com</a>
<a href=""mailto:ami.n.uh.ar.un.aa1@gmail.com"">ami.n.uh.ar.un.aa1@gmail.com</a>
<a href=""mailto:ami.n.uha.ru.na.a1@gmail.com"">ami.n.uha.ru.na.a1@gmail.com</a>
<a href=""mailto:am.in.uharu.na.a.1@gmail.com"">am.in.uharu.na.a.1@gmail.com</a>
<a href=""mailto:am.i.n.u.h.a.ru.n.a.a1@gmail.com"">am.i.n.u.h.a.ru.n.a.a1@gmail.com</a>
<a href=""mailto:am.inuh.ar.una.a1@gmail.com"">am.inuh.ar.una.a1@gmail.com</a>
<a href=""mailto:a.m.i.nuh.a.r.una.a.1@gmail.com"">a.m.i.nuh.a.r.una.a.1@gmail.com</a>
<a href=""mailto:a.min.uh.a.ru.n.a.a.1@gmail.com"">a.min.uh.a.ru.n.a.a.1@gmail.com</a>
<a href=""mailto:am.inuharu.naa.1@gmail.com"">am.inuharu.naa.1@gmail.com</a>
<a href=""mailto:a.m.in.uharun.a.a1@gmail.com"">a.m.in.uharun.a.a1@gmail.com</a>
<a href=""mailto:a.m.i.n.uh.a.ru.n.a.a.1@gmail.com"">a.m.i.n.uh.a.ru.n.a.a.1@gmail.com</a>
<a href=""mailto:ami.nu.h.a.r.u.na.a.1@gmail.com"">ami.nu.h.a.r.u.na.a.1@gmail.com</a>
<a href=""mailto:am.i.n.uha.r.u.naa.1@gmail.com"">am.i.n.uha.r.u.naa.1@gmail.com</a>
<a href=""mailto:am.in.u.h.a.ru.naa.1@gmail.com"">am.in.u.h.a.ru.naa.1@gmail.com</a>
<a href=""mailto:am.in.u.har.u.na.a1@gmail.com"">am.in.u.har.u.na.a1@gmail.com</a>
<a href=""mailto:a.mi.n.u.ha.ru.na.a.1@gmail.com"">a.mi.n.u.ha.ru.na.a.1@gmail.com</a>
<a href=""mailto:am.inu.haruna.a1@gmail.com"">am.inu.haruna.a1@gmail.com</a>
<a href=""mailto:am.i.nu.ha.r.un.aa1@gmail.com"">am.i.nu.ha.r.un.aa1@gmail.com</a>
<a href=""mailto:a.m.i.nuh.a.r.una.a1@gmail.com"">a.m.i.nuh.a.r.una.a1@gmail.com</a>
<a href=""mailto:am.inu.h.a.runaa.1@gmail.com"">am.inu.h.a.runaa.1@gmail.com</a>
<a href=""mailto:am.in.uh.ar.una.a.1@gmail.com"">am.in.uh.ar.una.a.1@gmail.com</a>
<a href=""mailto:a.min.uharuna.a.1@gmail.com"">a.min.uharuna.a.1@gmail.com</a>
<a href=""mailto:am.i.nuh.ar.u.naa.1@gmail.com"">am.i.nuh.ar.u.naa.1@gmail.com</a>
<a href=""mailto:am.in.uh.arun.a.a.1@gmail.com"">am.in.uh.arun.a.a.1@gmail.com</a>
<a href=""mailto:a.minu.haru.n.a.a1@gmail.com"">a.minu.haru.n.a.a1@gmail.com</a>
<a href=""mailto:am.i.n.uh.a.r.u.n.aa1@gmail.com"">am.i.n.uh.a.r.u.n.aa1@gmail.com</a>
<a href=""mailto:am.in.u.har.u.n.aa1@gmail.com"">am.in.u.har.u.n.aa1@gmail.com</a>
<a href=""mailto:ami.nuh.aruna.a.1@gmail.com"">ami.nuh.aruna.a.1@gmail.com</a>
<a href=""mailto:am.i.n.u.ha.r.unaa.1@gmail.com"">am.i.n.u.ha.r.unaa.1@gmail.com</a>
<a href=""mailto:a.min.u.h.a.ru.naa1@gmail.com"">a.min.u.h.a.ru.naa1@gmail.com</a>
<a href=""mailto:am.i.nu.ha.r.u.n.aa1@gmail.com"">am.i.nu.ha.r.u.n.aa1@gmail.com</a>
<a href=""mailto:am.in.uh.ar.un.a.a1@gmail.com"">am.in.uh.ar.un.a.a1@gmail.com</a>
<a href=""mailto:am.i.n.uha.r.un.a.a.1@gmail.com"">am.i.n.uha.r.un.a.a.1@gmail.com</a>
<a href=""mailto:a.m.in.u.har.unaa.1@gmail.com"">a.m.in.u.har.unaa.1@gmail.com</a>
<a href=""mailto:a.m.inu.h.a.run.a.a.1@gmail.com"">a.m.inu.h.a.run.a.a.1@gmail.com</a>
<a href=""mailto:a.mi.n.u.ha.r.un.aa1@gmail.com"">a.mi.n.u.ha.r.un.aa1@gmail.com</a>
<a href=""mailto:amin.uha.r.u.n.a.a.1@gmail.com"">amin.uha.r.u.n.a.a.1@gmail.com</a>
<a href=""mailto:a.m.i.nuha.ru.n.aa.1@gmail.com"">a.m.i.nuha.ru.n.aa.1@gmail.com</a>
<a href=""mailto:a.m.i.nu.haru.n.a.a.1@gmail.com"">a.m.i.nu.haru.n.a.a.1@gmail.com</a>
<a href=""mailto:ami.n.u.h.aru.na.a.1@gmail.com"">ami.n.u.h.aru.na.a.1@gmail.com</a>
<a href=""mailto:a.m.in.u.ha.r.un.a.a.1@gmail.com"">a.m.in.u.ha.r.un.a.a.1@gmail.com</a>"
NTuR6u7M,Redstone signal 1s,karelvysinka,Lua,Saturday 30th of December 2023 02:57:29 PM CDT,"while true do
    -- Zapnutí redstone signálu
    redstone.setOutput(""back"", true)
    print(""Redstone signal set to ON"")
    sleep(1)

    -- Vypnutí redstone signálu
    redstone.setOutput(""back"", false)
    print(""Redstone signal set to OFF"")
    sleep(1)
end
"
vTuGwMes,GhostWebScan.py,xGHOSTSECx,Python,Saturday 30th of December 2023 02:49:13 PM CDT,"#!/data/data/com.termux/files/usr/bin/env python

import argparse
import asyncio
import aiohttp
import json
import logging
from urllib.parse import urlparse
from bs4 import BeautifulSoup
from concurrent.futures import ThreadPoolExecutor
from functools import partial

logging.basicConfig(level=logging.INFO)

async def fetch_subdomains_expert(session, domain, depth):
    subdomains = set()

    if depth == 0:
        return subdomains

    try:
        response = await session.get(f'https://crt.sh/?q=%.{domain}&output=json', timeout=5)
        data = await response.json()
        new_subdomains = {entry['name_value'] for entry in data}
        subdomains.update(new_subdomains)

        tasks = []

        for new_domain in new_subdomains:
            tasks.append(asyncio.ensure_future(fetch_subdomains_expert(session, new_domain, depth - 1)))

        await asyncio.gather(*tasks)

    except (aiohttp.ClientError, asyncio.TimeoutError) as e:
        logging.error(f""Error in fetch_subdomains_expert: {str(e)}"")

    return subdomains

async def fetch_subdomains_async(url, depth):
    subdomains = set()

    try:
        base_domain = urlparse(url).netloc
        async with aiohttp.ClientSession() as session:
            subdomains = await fetch_subdomains_expert(session, base_domain, depth)

    except (aiohttp.ClientError, asyncio.TimeoutError) as e:
        logging.error(f""Error in fetch_subdomains_async: {str(e)}"")

    return list(subdomains)

async def gather_technology_info_expert(session, subdomain):
    tech_info = {}
    try:
        response = await session.get(f'http://{subdomain}', timeout=5)
        soup = BeautifulSoup(await response.text(), 'html.parser')

        tech_info['title'] = soup.title.text if soup.title else None
        tech_info['meta_tags'] = [meta['name'] for meta in soup.find_all('meta', {'name': True})]
        tech_info['scripts'] = [script['src'] for script in soup.find_all('script', {'src': True})]

    except (aiohttp.ClientError, asyncio.TimeoutError) as e:
        logging.error(f""Error in gather_technology_info_expert: {str(e)}"")

    return tech_info

async def scan_website_expert(url, depth, output_format, output_file, concurrency, rate_limit, custom_headers, interactive_mode, command):
    try:
        base_domain = urlparse(url).netloc
        async with aiohttp.ClientSession(headers=custom_headers) as session:
            subdomains = await fetch_subdomains_expert(session, base_domain, depth)

            tech_info_func = partial(gather_technology_info_expert, session)
            with ThreadPoolExecutor(max_workers=concurrency) as executor:
                tech_info_list = list(executor.map(tech_info_func, subdomains))

            # Process command
            if ""links"" in command:
                links = set()
                for subdomain in subdomains:
                    try:
                        response = await session.get(f'http://{subdomain}', timeout=5)
                        soup = BeautifulSoup(await response.text(), 'html.parser')
                        links.update({a['href'] for a in soup.find_all('a', href=True)})
                    except (aiohttp.ClientError, asyncio.TimeoutError):
                        continue
                print(""\nLinks:"")
                print(""\n"".join(links))

            if ""status_codes"" in command:
                status_codes = {}
                for subdomain in subdomains:
                    try:
                        response = await session.get(f'http://{subdomain}', timeout=5)
                        status_codes[subdomain] = response.status
                    except (aiohttp.ClientError, asyncio.TimeoutError):
                        status_codes[subdomain] = ""Error""
                print(""\nHTTP Status Codes:"")
                for subdomain, status in status_codes.items():
                    print(f""{subdomain}: {status}"")

            if ""keywords"" in command:
                keywords = set([""security"", ""vulnerability""])  # Customize keywords as needed
                print(""\nKeywords Found:"")
                for subdomain in subdomains:
                    try:
                        response = await session.get(f'http://{subdomain}', timeout=5)
                        soup = BeautifulSoup(await response.text(), 'html.parser')
                        text = soup.get_text().lower()
                        if any(keyword in text for keyword in keywords):
                            print(f""{subdomain}: Keywords Found"")
                    except (aiohttp.ClientError, asyncio.TimeoutError):
                        continue

            if output_file:
                with open(output_file, 'w') as file:
                    if output_format == 'json':
                        json.dump({'subdomains': list(subdomains), 'technology_info': tech_info_list}, file, indent=2)
                    # Add support for other output formats as needed

    except Exception as e:
        logging.error(f""Error in scan_website_expert: {str(e)}"")

def print_gui():
    print(""\033[93m=============================================================="")
    print(""\033[1m                      GhostSec Web Scanner                      "")
    print(""\033[93m==============================================================\033[0m"")
    print(""\033[92mUsage: ./your_script_name.py example.com [options]\n"")
    print(""\033[1mOptions:\033[0m"")
    print(""  -h, --help            Show this help message and exit"")
    print(""  --depth DEPTH         Depth of subdomain enumeration (default: 1)"")
    print(""  --output-format {json} Output format (default: json)"")
    print(""  --output-file OUTPUT_FILE Output file path"")
    print(""  --concurrency CONCURRENCY Number of concurrent tasks (default: 5)"")
    print(""  --rate-limit RATE_LIMIT Rate limit in requests per minute (default: 0)"")
    print(""  --custom-headers CUSTOM_HEADERS Custom HTTP headers as a JSON object"")
    print(""  --interactive-mode   Enable interactive mode"")
    print(""\n\033[1mCommand Options:\033[0m"")
    print(""  --command {links,status_codes,keywords} Execute specific commands"")
    print(""\n\033[1mExamples:\033[0m"")
    print(""  ./your_script_name.py example.com --depth 2 --output-format json --output-file results.json --command links,status_codes"")
    print(""  ./your_script_name.py example.com --interactive-mode --command keywords"")
    print(""\n\033[93m==============================================================\033[0m"")

if __name__ == ""__main__"":
    parser = argparse.ArgumentParser(
        description='GhostSec Web Scanner - Scan a website for subdomains and technology information.',
        epilog=""Example: ./your_script_name.py example.com --depth 2 --output-format json --output-file results.json --command links,status_codes""
    )
    parser.add_argument('url', help='Target website URL')
    parser.add_argument('--depth', type=int, default=1, help='Depth of subdomain enumeration')
    parser.add_argument('--output-format', choices=['json'], default='json', help='Output format')
    parser.add_argument('--output-file', help='Output file path')
    parser.add_argument('--concurrency', type=int, default=5, help='Number of concurrent tasks')
    parser.add_argument('--rate-limit', type=int, default=0, help='Rate limit in requests per minute')
    parser.add_argument('--custom-headers', type=json.loads, default={}, help='Custom HTTP headers as a JSON object')
    parser.add_argument('--interactive-mode', action='store_true', help='Enable interactive mode')
    parser.add_argument('--command', choices=['links', 'status_codes', 'keywords'], help='Execute specific commands')

    args = parser.parse_args()

    if args.url == ""--help"" or args.url == ""-h"":
        print_gui()
    else:
        try:
            loop = asyncio.get_event_loop()
            loop.run_until_complete(scan_website_expert(
                args.url, args.depth, args.output_format, args.output_file, args.concurrency, args.rate_limit,
                args.custom_headers, args.interactive_mode, args.command
            ))
        except KeyboardInterrupt:
            print(""\nScan aborted by user."")
        except Exception as e:
            print(f""An error occurred: {str(e)}"")"
ZyBKUwn0,Untitled,localhostport80,Python,Saturday 30th of December 2023 02:47:40 PM CDT,"
def set_visited_of_child_to_true(child_key, children_array):
    """"""
    Sets the visited key of a given child in a given list of dictionaries containing the children information
    :param child_key: key of the child to be set
    :param children_array: array of children information
    :return: dictionary: new dictionary of children information with set key
    """"""
    children_array_backup = children_array

    for element in children_array:
        current_key_of_child = list(element.keys())[0]

        if current_key_of_child == child_key:
            object_to_be_updated = element[current_key_of_child]
            new_object = (object_to_be_updated[0], object_to_be_updated[1], True)
            children_array_backup[children_array_backup.index(element)] = {child_key: new_object}

    return children_array_backup


d = [
 {'a': (0, 0.26, False)},
 {'b': (1, 0.09, False)},
 {'c': (2, 0.36, False)},
 {'d': (3, 0.08, False)},
 {'e': (4, 0.21, False)},
 {'bd': (None, 0.17, False)}
]

print(d)
d = set_visited_of_child_to_true(""e"", d)
print(d)
d = set_visited_of_child_to_true(""c"", d)
print(d)


"
71kFUuTq,Click Plus Button,Forlolop,Lua,Saturday 30th of December 2023 02:15:44 PM CDT,"script.Parent.MouseButton1Click:Connect(function()
local player = game.Players.LocalPlayer
local clicks = player.leaderstats.Clicks
clicks.Value = clicks.Value +1
end)"
Mn9Xq0kh,Text Visibility,Forlolop,Lua,Saturday 30th of December 2023 02:14:56 PM CDT,"local player = game.Players.LocalPlayer
local clicks = player.leaderstats.Clicks

while true do
 wait()
 script.Parent.Text = ""Clicks:""..clicks.Value
end"
58qSLfUC,Leaderstats Clicks,Forlolop,Lua,Saturday 30th of December 2023 02:11:45 PM CDT,"game.Players.PlayerAdded:Connect(function(player)
 local leaderstats = Instance.new(""Folder"")
 leaderstats.Name = ""leaderstats""
 leaderstats.Parent = player
 
 local clicks = Instance.new(""NumberValue"")
 clicks.Name = ""Clicks""
 clicks.Parent = leaderstats
 clicks.Value = 0
end)
"
FngaV9kc,card riscaldamento + batterie,fabrizio97726,YAML,Saturday 30th of December 2023 01:57:31 PM CDT,"type: horizontal-stack
cards:
  - type: custom:mushroom-template-card
    icon: mdi:radiator
    icon_color: '{{ ''red'' if is_state(entity, ''on'') else ''disabled'' }}'
    primary: ''
    secondary: Richiesta media {{ states('sensor.heating_medio') }} %
    entity: binary_sensor.caldaia
    tap_action:
      action: navigate
      navigation_path: /iphone-riscaldamento/0
    fill_container: true
    layout: vertical
    card_mod:
      style:
        mushroom-shape-icon$: |

          ha-icon {
            {{ '--icon-animation: rotation 1s linear infinite;' if is_state(config.entity, 'on') }}
            transform-origin: 29% 88%;
          }
          @keyframes clip {
            0% {
              clip-path: inset(50% 0 0 0);
            }
            100% {
              clip-path: inset(0 0 0 0);
            }
          }
          .shape {
            --shape-animation: ping 2s infinite;
          }
          @keyframes ping {
            0% {
              box-shadow: 0 0 0 0 rgba(var(--rgb-red), 0.7);
            }
            
            70% {
              box-shadow: 0 0 0 10px transparent;
            }
            
            100% {
              box-shadow: 0 0 0 0 transparent;
            }
          ha-card {
            background-color: rgba(0,0,0,0);
            box-shadow: none;
            border-style: hidden;
          }         
  - type: custom:mushroom-template-card
    icon: mdi:battery-high
    primary: null
    icon_color: green
    secondary: >-
      {{ states('sensor.iphone_13_battery_level') | round(0) }}% iPhone  | {{
      states('sensor.ipad_490_battery_level') | round(0) }}% iPad
    layout: vertical
    tap_action:
      action: navigate
      navigation_path: /lovelace-casa2/iphone-13
    double_tap_action:
      action: navigate
      navigation_path: /lovelace-casa2/andrea
    card_mod:
      style:
        mushroom-shape-icon$: |
          .shape {
            background: radial-gradient(var(--card-background-color) 60%, transparent 0%), conic-gradient(rgb(var(--rgb-{{ config.icon_color }})) {{ states('sensor.iphone_13_battery_level') }}% 0%, var(--card-background-color) 0% 100%);
          }
          .shape:before {
            content: """";
            background: radial-gradient(var(--card-background-color) 60%, transparent 0%), conic-gradient(rgb(var(--rgb-teal)) {{ states('sensor.ipad_490_battery_level') }}% 0%, var(--card-background-color) 0% 100%);
            position: absolute;
            border-radius: var(--icon-border-radius);
            width: 81%;
            height: 81%;
          }
          .shape:after {
            content: """";
            height: 100%;
            width: 100%;
            position: absolute;
            border-radius: var(--icon-border-radius);
            background: rgba(var(--rgb-{{ config.icon_color }}), 0.2);
          }
card_mod:
  style:
    mushroom-shape-icon$: |

      ha-icon {
        {{ '--icon-animation: rotation 1s linear infinite;' if is_state(config.entity, 'on') }}
        transform-origin: 29% 88%;
      }
      @keyframes clip {
        0% {
          clip-path: inset(50% 0 0 0);
        }
        100% {
          clip-path: inset(0 0 0 0);
        }
      }
      .shape {
        --shape-animation: ping 2s infinite;
      }
      @keyframes ping {
        0% {
          box-shadow: 0 0 0 0 rgba(var(--rgb-red), 0.7);
        }
        
        70% {
          box-shadow: 0 0 0 10px transparent;
        }
        
        100% {
          box-shadow: 0 0 0 0 transparent;
        }
      ha-card {
        background-color: rgba(0,0,0,0);
        box-shadow: none;
        border-style: hidden;
      }         
"
bd7cJGPm,Untitled,jessedirisu,Swift,Saturday 30th of December 2023 01:45:50 PM CDT,"import UIKit
import Flutter
import AVFoundation
import MediaPlayer

import flutter_downloader

@available(iOS 11, *)
@UIApplicationMain
@objc class AppDelegate: FlutterAppDelegate {
    var player: AVPlayer?
    var volume: Float = 1
    var muted: Bool = false
    var lastTrack: String = """"
    var channel: FlutterMethodChannel!
    override func application(
        _ application: UIApplication,
        didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
    ) -> Bool {
        GeneratedPluginRegistrant.register(with: self)
        FlutterDownloaderPlugin.setPluginRegistrantCallback(registerPlugins)
        let controller : FlutterViewController = window?.rootViewController as! FlutterViewController
        channel = FlutterMethodChannel(name: ""lighthouse_audio_stream"", binaryMessenger: controller.binaryMessenger)
        
        NotificationCenter.default.addObserver(
            self,
            selector: #selector(playerItemDidReachEnd),
            name: NSNotification.Name.AVPlayerItemDidPlayToEndTime,
            object: nil
        )

        channel.setMethodCallHandler({
                (call: FlutterMethodCall, result: @escaping FlutterResult) -> Void in
                switch(call.method) {
                case ""play"":
                    if let args = call.arguments as? Dictionary<String, String> {
                        let url = args[""url""] ?? """"
                        let title = args[""title""] ?? """"
                        let description = args[""description""] ?? """"
                        let image = args[""image""] ?? """"
                        if (url.isEmpty) {
                            result(FlutterError.init(code: ""no url passed"", message: ""nill"", details: ""Nill""))
                        } else {
                            do {
                               let isSameTrack = self.lastTrack == url;
                               if !isSameTrack {
                                   self.lastTrack = url;
                               }
                               try self.play(url: url, isSameTrack: isSameTrack, title: title, description: description, image: image)
                               UIApplication.shared.beginReceivingRemoteControlEvents()
                               result(0)
                           } catch {
                               result(0)
                           }
                        }
                    } else {
                        result(FlutterError.init(code: ""no url passed"", message: ""nill"", details: ""Nill""))
                    }
                    result(0)
                    return
                case ""disk"":
                    if let args = call.arguments as? Dictionary<String, Any>,
                        let path = args[""path""] as? String {
                        result(self.diskUsage(path: path))
                    } else {
                        result(FlutterError.init(code: ""no url passed"", message: ""nill"", details: ""Nill""))
                    }
                    result(0)
                    return
                case ""seek"":
                    if let args = call.arguments as? Dictionary<String, Any>,
                        let pos = args[""pos""] as? Double {
                        self.seek(pos: pos / 1000)
                        result(nil)
                    } else {
                        result(FlutterError.init(code: ""no position passed"", message: ""nill"", details: ""Nill""))
                    }
                    result(0)
                    return
                case ""pause"":
                    self.pause()
                    result(nil)
                    return
                case ""stop"":
                    self.stop()
                    result(nil)
                    return
                case ""mute"":
                    self.mute()
                    result(nil)
                    return
                case ""forward"":
                    self.seekTo(forward: true)
                    return
                case ""rewind"":
                    self.seekTo(forward: false)
                    return
                case ""currentPos"":
                    let position = self.currentPos();
                    result(position)
                    return
                case ""rate"":
                    self.rate()
                    result(nil)
                    return
                default:
                    result(FlutterMethodNotImplemented)
                }
            })
        return super.application(application, didFinishLaunchingWithOptions: launchOptions)
    }
    
    @objc func playerItemDidReachEnd(notification: NSNotification) {
        channel.invokeMethod(""stop"", arguments: 0)
    }
    

    override func remoteControlReceived(with event: UIEvent?) {
        guard let event = event else {
            
            return
        }
        guard event.type == UIEvent.EventType.remoteControl else {
            return
        }
        switch event.subtype {
        case UIEventSubtype.remoteControlPlay:
            player?.play()
            channel.invokeMethod(""playing"", arguments: 0)
        case UIEventSubtype.remoteControlPause:
            player?.pause()
            channel.invokeMethod(""pause"", arguments: nil)
        case UIEventSubtype.remoteControlTogglePlayPause:
            print(""received toggle\n"")
        case UIEventSubtype.remoteControlNextTrack:
            channel.invokeMethod(""next"", arguments: nil)
        case UIEventSubtype.remoteControlPreviousTrack:
            channel.invokeMethod(""prev"", arguments: nil)
        default:
            print(""received \(event.subtype) which we did not process\n"")
        }
    }
    

    
    private func play(url: String, isSameTrack: Bool, title: String, description: String, image: String) throws {
        let location: URL? = url.hasPrefix(""http"") ? URL(string: url) : NSURL.fileURL(withPath: url);
        if let audioUrl = location {
            
            if (player == nil || !isSameTrack) {
                player = AVPlayer(url: audioUrl)
                player?.automaticallyWaitsToMinimizeStalling = false;
                setupNowPlayingInfo(title: title, artist: description, image: image)
            }
            player?.play()
        } else {
            throw PlayerErrors.InvalidUrl
        }
    }
    
    private func seekTo(forward: Bool)  {
        if player != nil {
            let currentPos = CMTimeGetSeconds(player?.currentTime() ?? CMTime(seconds: 0.0, preferredTimescale: 1))
            let goto = forward ? (currentPos + 10.0) : (currentPos - 10.0)
            player?.seek(to: CMTime(seconds: goto, preferredTimescale: 1))
        }
    }
    
    private func seek(pos: Double)  {
        if player != nil {
            player?.seek(to: CMTime(seconds: pos, preferredTimescale: 1))
        }
    }
    
    private func pause() {
        if player != nil {
            player?.pause()
        }
    }
    
    private func stop() {
        if player != nil {
            player?.pause()
            player = nil
        }
    }
    
    private func rate() {
        if let url = URL(string: ""itms-apps://apple.com/app/com.thelighthouseapp.app"") {
            UIApplication.shared.open(url)
        } 
    }
    
    private func currentPos() -> [String: Double] {
        if player != nil {
            var duration = CMTimeGetSeconds(player?.currentItem?.duration ?? CMTime(seconds: 1.0, preferredTimescale: 1))
            if (duration.isNaN || duration < 1) {
                duration = 1
            }
            let currentTime = CMTimeGetSeconds(player?.currentTime() ?? CMTime(seconds: 0.0, preferredTimescale: 1));
            MPNowPlayingInfoCenter.default().nowPlayingInfo?[MPNowPlayingInfoPropertyElapsedPlaybackTime] = (currentTime / duration) * 100
            return [""duration"": duration * 1000.0, ""currentPos"": currentTime * 1000.0]
        }
        return [""duration"": 1.0, ""currentPos"": 0.0]
    }
    
    private func mute() {
        if player != nil {
            if muted {
                player?.volume = volume
                muted = false
            } else {
                volume = player?.volume ?? 1.0
                player?.volume = 0.0
                muted = true
            }
        }
    }
    
    @available(iOS 11, *)
    private func diskUsage(path: String) -> [String: Int] {
        let dirURL = URL(fileURLWithPath: path)
        do {
            let values = try dirURL.resourceValues(forKeys: [.volumeAvailableCapacityKey, .fileSizeKey, .isDirectoryKey])
            if (values.isDirectory ?? false) {
                let diskSize = values.volumeAvailableCapacity ?? 0
                var usedSpace = 0
                (FileManager.default.enumerator(at: dirURL, includingPropertiesForKeys: nil)?.allObjects as? [URL])?.lazy.forEach {
                    usedSpace += (try? $0.resourceValues(forKeys: [.totalFileAllocatedSizeKey]))?.totalFileAllocatedSize ?? 0
                }
                return [""totalSpace"": diskSize, ""usedSpace"": usedSpace]
            } else {
                return [""totalSpace"": 1, ""usedSpace"": 0]
            }
        } catch {
            return [""totalSpace"": 1, ""usedSpace"": 0]
        }
    }
    
    func setupNowPlayingInfo(title: String, artist: String, image: String) {
            var nowPlayingInfo = [String: Any]()
            nowPlayingInfo[MPMediaItemPropertyTitle] = title
            nowPlayingInfo[MPMediaItemPropertyArtist] = artist
            MPNowPlayingInfoCenter.default().nowPlayingInfo = nowPlayingInfo
    }

        fileprivate func setupAudioSession() {
            do {
                try AVAudioSession.sharedInstance().setCategory(AVAudioSession.Category.playback, mode: .default)
                try AVAudioSession.sharedInstance().setActive(true)
            } catch let sessionErr {
                print(""Failed to activate session:"", sessionErr)
            }
        }
    
        deinit {
            NotificationCenter.default.removeObserver(self)
        }

}

enum PlayerErrors: Error {
    case InvalidUrl
    
    func val() -> String {
        switch self {
        case .InvalidUrl:
            return ""Cannot play file from this url""
        }
    }
}

private func registerPlugins(registry: FlutterPluginRegistry) {
    if (!registry.hasPlugin(""FlutterDownloaderPlugin"")) {
        FlutterDownloaderPlugin.register(with: registry.registrar(forPlugin: ""FlutterDownloaderPlugin""))
    }
}"
XkKS5Wbs,Gunfight Arena Script 2024,Artani,Lua,Saturday 30th of December 2023 01:20:09 PM CDT,"ROBLOX GUNFIGHT ARENA SCRIPT HACK PASTEBIN 2024 AIMBOT + GET ALL GUNS!
https://www.youtube.com/watch?v=pY97nt_4QKs
GET SCRIPT FROM VIDEO!"
TDBs2Fn4,Untitled,soyl,Java,Saturday 30th of December 2023 01:10:00 PM CDT,"public static final String SQL_QUERY_UPDATE_FILM =
            ""UPDATE films "" +
            ""SET name = ?, description = ?, release_date = ?, duration = ?, rate = ?, mpa_rating_id = ?, directors_id = ? "" +
            ""WHERE film_id = ?;"";

    public static final String SQL_QUERY_GET_ALL_FILMS =
            ""SELECT f.film_id, "" +
                    ""f.name, "" +
                    ""f.description, "" +
                    ""f.release_date, "" +
                    ""f.duration, "" +
                    ""f.rate, "" +
                    ""mr.mpa_rating_id, "" +
                    ""mr.name AS mpa_name, "" +
                    ""g.genre_id, "" +
                    ""g.name AS genre_name, "" +
                    ""d.director_id, "" +
                    ""d.name AS director_name "" +
                    ""FROM films AS f "" +
                    ""LEFT OUTER JOIN mpa_rating AS mr ON (f.mpa_rating_id = mr.mpa_rating_id) "" +
                    ""LEFT OUTER JOIN film_genres AS fg ON (f.film_id = fg.film_id) "" +
                    ""LEFT OUTER JOIN genre AS g ON (fg.genre_id = g.genre_id) "" +
                    ""LEFT OUTER JOIN directors AS d ON (f.directors_id = d.director_id);"";

    public static final String SQL_QUERY_GET_FILM_BY_ID =
            ""SELECT f.film_id, "" +
                    ""f.name, "" +
                    ""f.description, "" +
                    ""f.release_date, "" +
                    ""f.duration, "" +
                    ""f.rate, "" +
                    ""mr.mpa_rating_id, "" +
                    ""mr.name AS mpa_name, "" +
                    ""g.genre_id, "" +
                    ""g.name AS genre_name, "" +
                    ""d.director_id, "" +
                    ""d.name AS director_name "" +
               ""FROM films AS f "" +
               ""LEFT OUTER JOIN mpa_rating AS mr ON (f.mpa_rating_id = mr.mpa_rating_id) "" +
               ""LEFT OUTER JOIN film_genres AS fg ON (f.film_id = fg.film_id) "" +
               ""LEFT OUTER JOIN genre AS g ON (fg.genre_id = g.genre_id) "" +
               ""LEFT OUTER JOIN directors AS d ON (f.directors_id = d.director_id) "" +
               ""WHERE f.film_id = ?;"";"
j20KmUVU,Untitled,Fhehudjreturn,Python,Saturday 30th of December 2023 12:48:01 PM CDT,"import os
import shutil

def find_and_copy_sequence(folder_path, target_sequence, destination_folder):
    files = [f for f in os.listdir(folder_path) if os.path.isfile(os.path.join(folder_path, f))]

    # Список для хранения файлов, в которых найдена последовательность
    files_with_sequence = []

    # Итерируемся по каждому файлу и ищем последовательность
    for file_name in files:
        file_path = os.path.join(folder_path, file_name)
        with open(file_path, 'rb') as file:
            content = file.read()
            target_bytes = bytes.fromhex(target_sequence)
            if content.find(target_bytes) != -1:
                files_with_sequence.append(file_name)

                # Копирование файла в новую папку
                destination_path = os.path.join(destination_folder, file_name)
                shutil.copyfile(file_path, destination_path)

    if files_with_sequence:
        print(""Последовательность байтов найдена в следующих файлах:"")
        for file_name in files_with_sequence:
            print(file_name)
    else:
        print(""Последовательность байтов не найдена ни в одном файле."")

folder_path = r'C:\TEST1\bynarniky_dlya_testa'  # путь к вашей папке
target_sequence = '5611' #указать последовательность
destination_folder = r'C:\TEST1\bynarniky_podxoduashie'  # путь к новой папке
find_and_copy_sequence(folder_path, target_sequence, destination_folder)
"
wyV1mfKb,allowlist,nirmaljp,Bash,Saturday 30th of December 2023 12:29:47 PM CDT,"# Google Ads
# (\.|^)googleadservices\.com$
# clients{0-9}.google.com

0.client-channel.google.com
1drv.com
2.android.pool.ntp.org
akamaihd.net
akamaitechnologies.com
akamaized.net
amazonaws.com
android.clients.google.com
api.ipify.org
app-api.ted.com
api.rlje.net
appleid.apple.com
apps.skype.com
appsbackup-pa.clients6.google.com
appsbackup-pa.googleapis.com
apt.sonarr.tv
aspnetcdn.com
attestation.xboxlive.com
ax.phobos.apple.com.edgesuite.net
brightcove.net
c.s-microsoft.com
cdn.cloudflare.net
cdn.embedly.com
cdn.optimizely.com
cdn.vidible.tv
cdn2.optimizely.com
cdn3.optimizely.com
cdnjs.cloudflare.com
cert.mgt.xboxlive.com
clientconfig.passport.net
clients1.google.com
clients2.google.com
clients3.google.com
clients4.google.com
clients5.google.com
clients6.google.com
cpms.spop10.ams.plex.bz
cpms35.spop10.ams.plex.bz
cse.google.com
ctldl.windowsupdate.com
cws.conviva.com
livepassdl.conviva.com
zee.cws.conviva.com
pings.conviva.com
gfwsl.geforce.com
appspot-preview.l.google.com
d2c8v52ll5s99u.cloudfront.net
d2gatte9o95jao.cloudfront.net
dashboard.plex.tv
dataplicity.com
def-vef.xboxlive.com
delivery.vidible.tv
dev.virtualearth.net
device.auth.xboxlive.com
display.ugc.bazaarvoice.com
displaycatalog.mp.microsoft.com
dl.delivery.mp.microsoft.com
dl.dropbox.com
dl.dropboxusercontent.com
dns.msftncsi.com
download.sonarr.tv
drift.com
driftt.com
dynupdate.no-ip.com
ecn.dev.virtualearth.net
edge.api.brightcove.com
eds.xboxlive.com
fonts.gstatic.com
forums.sonarr.tv
g.live.com
geo-prod.do.dsp.mp.microsoft.com
geo3.ggpht.com
giphy.com
github.com
github.io
googleapis.com
gravatar.com
gstatic.com
help.ui.xboxlive.com
hls.ted.com
i.ytimg.com
i1.ytimg.com
imagesak.secureserver.net
img.vidible.tv
imgix.net
imgs.xkcd.com
instantmessaging-pa.googleapis.com
intercom.io
jquery.com
jsdelivr.net
keystone.mwbsys.com
lastfm-img2.akamaized.net
licensing.xboxlive.com
live.com
login.live.com
login.microsoftonline.com
manifest.googlevideo.com
meta-db-worker02.pop.ric.plex.bz
meta.plex.bz
meta.plex.tv
microsoftonline.com
msftncsi.com
my.plexapp.com
nexusrules.officeapps.live.com
npr-news.streaming.adswizz.com
nine.plugins.plexapp.com
no-ip.com
node.plexapp.com
notify.xboxlive.com
ns1.dropbox.com
ns2.dropbox.com
o1.email.plex.tv
o2.sg0.plex.tv
ocsp.apple.com
office.com
office.net
office365.com
officeclient.microsoft.com
om.cbsi.com
onedrive.live.com
outlook.live.com
outlook.office365.com
placehold.it
placeholdit.imgix.net
players.brightcove.net
pricelist.skype.com
products.office.com
proxy.plex.bz
proxy.plex.tv
proxy02.pop.ord.plex.bz
pubsub.plex.bz
pubsub.plex.tv
raw.githubusercontent.com
redirector.googlevideo.com
res.cloudinary.com
s.gateway.messenger.live.com
s.marketwatch.com
s.youtube.com
s.ytimg.com
s1.wp.com
s2.youtube.com
s3.amazonaws.com
sa.symcb.com
secure.avangate.com
secure.brightcove.com
secure.surveymonkey.com
services.sonarr.tv
skyhook.sonarr.tv
spclient.wg.spotify.com
ssl.p.jwpcdn.com
staging.plex.tv
status.plex.tv
t.co
t0.ssl.ak.dynamic.tiles.virtualearth.net
t0.ssl.ak.tiles.virtualearth.net
tawk.to
tedcdn.com
themoviedb.com
thetvdb.com
tinyurl.com
title.auth.xboxlive.com
title.mgt.xboxlive.com
traffic.libsyn.com
tvdb2.plex.tv
tvthemes.plexapp.com
twimg.com
ui.skype.com
video-stats.l.google.com
videos.vidible.tv
widget-cdn.rpxnow.com
win10.ipv6.microsoft.com
wp.com
ws.audioscrobbler.com
www.dataplicity.com
www.googleapis.com
www.msftncsi.com
www.no-ip.com
www.youtube-nocookie.com
xbox.ipv6.microsoft.com
xboxexperiencesprod.experimentation.xboxlive.com
xflight.xboxlive.com
xkms.xboxlive.com
xsts.auth.xboxlive.com
youtube-nocookie.com
youtu.be
yt3.ggpht.com
vidtech.cbsinteractive.com
continuum.dds.microsoft.com
connectivitycheck.gstatic.com
connectivitycheck.android.com
www.msftconnecttest.com
cdn.jsdelivr.net
"
9ALLK2sB,RescueT Produc Plot.ipynb,TheDemystifier,Python,Saturday 30th of December 2023 12:08:51 PM CDT,"# Import necessary libraries for the plot
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
from matplotlib.colors import LinearSegmentedColormap

# Given productivity scores data
scores = {
    2016: {9: 62, 10: 63, 11: 68, 12: 73},
    2017: {1: 71, 2: 70, 3: 79, 4: 78, 5: 70, 6: 77, 7: 74, 8: 64, 9: 65, 10: 62, 11: 54, 12: 49},
    2018: {1: 44, 2: 65, 3: 57, 4: 49, 5: 54, 6: 45, 7: 33, 8: 36, 9: 48, 10: 58, 11: 76, 12: 81},
    2019: {1: 70, 2: 68, 3: 71, 4: 84, 5: 79, 6: 78, 7: 68, 8: 62, 9: 73, 10: 83, 11: 79, 12: 79},
    2020: {1: 69, 2: 70, 3: 58, 4: 46, 5: 64, 6: 60, 7: 75, 8: 49, 9: 71, 10: 75, 11: 68, 12: 61},
    2021: {1: 67, 2: 66, 3: 45, 4: 50, 5: 50, 6: 54, 7: 61, 8: 48, 9: 54, 10: 59, 11: 56, 12: 54},
    2022: {1: 49, 2: 46, 3: 53, 4: 56, 5: 45, 6: 42, 7: 49, 8: 39, 9: 51, 10: 61, 11: 54, 12: 52},
    2023: {1: 82, 2: 85, 3: 77, 4: 78, 5: 71, 6: 60, 7: 23, 8: 43, 9: 66, 10: 91, 11: 90, 12: 89},
}

# Plotting
plt.figure(figsize=(40, 10))

# Add vertical lines to separate years
plt.vlines(
    x=[4, 16, 28, 40, 52, 64, 76],
    ymin=0,
    ymax=100,
    colors=""#eba434"",
    linestyles=""dashed"",
    label=""Year Separators"",
)

all_scores = [scores[year][month] for year in scores for month in scores[year]]
dates = [f""{month}/{year}"" for year in scores for month in scores[year]]
xpoints = np.array(list(range(len(all_scores))))

# Create a Pandas DataFrame
df = pd.DataFrame({""Date"": dates, ""Score"": all_scores})

# Calculate the moving average with a window size of 3
df[""Moving_Avg""] = df[""Score""].rolling(window=3).mean()

# Calculate the standard deviation with the same window size
df[""Std_Dev""] = df[""Score""].rolling(window=3).std()

# Calculate the upper and lower bounds for the confidence interval
df[""Upper_Bound""] = df[""Moving_Avg""] + (2 * df[""Std_Dev""])
df[""Lower_Bound""] = df[""Moving_Avg""] - (2 * df[""Std_Dev""])

# Create more points for a smoother curve
xnew = np.linspace(xpoints.min(), xpoints.max(), 300)

# Interpolation for original scores
spl = make_interp_spline(xpoints, df[""Score""], k=3)
y_smooth = spl(xnew)

# Interpolation for confidence intervals
spl_upper = make_interp_spline(
    xpoints[~np.isnan(df[""Upper_Bound""])], df[""Upper_Bound""].dropna(), k=3
)
y_upper_smooth = spl_upper(xnew)

spl_lower = make_interp_spline(
    xpoints[~np.isnan(df[""Lower_Bound""])], df[""Lower_Bound""].dropna(), k=3
)
y_lower_smooth = spl_lower(xnew)

# Define the colormap to transition from red to blue
colors = [(1, 0, 0), (0, 0, 1)]  # Red to blue
n_bins = 100
cmap_name = ""red_to_blue""
colormap = LinearSegmentedColormap.from_list(cmap_name, colors, N=n_bins)

# Plot the original scores with gradient color
norm = plt.Normalize(y_smooth.min(), y_smooth.max())
for i in range(len(y_smooth) - 1):
    plt.plot(
        xnew[i : i + 2], y_smooth[i : i + 2], c=colormap(norm(y_smooth[i])), linewidth=2
    )

# Add a colorbar for original scores
sm = plt.cm.ScalarMappable(cmap=colormap, norm=norm)
sm.set_array([])
plt.colorbar(
    sm,
    ticks=np.linspace(0, 100, 11),
    boundaries=np.arange(-0.05, 100.1, 0.1),
    label=""Original Scores"",
)


# Plot the confidence intervals with interpolation for smoothness
plt.fill_between(
    xnew,
    y_upper_smooth,
    y_lower_smooth,
    color=""grey"",
    alpha=0.5,
    label=""Confidence Interval (Smoothed)"",
)


plt.xticks(ticks=xpoints, labels=dates, rotation=90)
plt.yticks(range(0, 101, 10))
plt.ylim(0, 100)
plt.title(""Productivity Scores Over the Years (Smoothed, With Gradient Color)"")
plt.xlabel(""Months"")
plt.ylabel(""Productivity Score"")
plt.grid(axis=""y"")
plt.legend()

plt.show()"
t34VMHUJ,bhop cpp,REALshocK,C++,Saturday 30th of December 2023 11:55:08 AM CDT,"// Include the necessary libraries
#include ""memory.h""
#include ""offsets.h""

#include <thread>
#include <iostream>
#include <iomanip>



int main()
{

	// Set the output format for hexadecimal numbers
	std::cout << std::hex << std::uppercase;

	// Print the memory offsets
	std::cout << ""dwForceJump: 0x"" << offsets::dwForceJump << std::endl;
	std::cout << ""dwLocalPlayerPawn: 0x"" << offsets::dwLocalPlayerPawn << std::endl;
	std::cout << ""m_fFlags: 0x"" << offsets::m_fFlags << std::endl;

	// Main loop
	while (true)
	{
		// Sleep for 1 millisecond to reduce CPU usage
		std::this_thread::sleep_for(std::chrono::milliseconds(1));

		// Read the local player's memory address
		uintptr_t localPlayer = VARS::memRead<uintptr_t>(VARS::baseAddress + offsets::dwLocalPlayerPawn);

		// If the local player's memory address is null, skip this iteration
		if (!localPlayer)
		{
			continue;
		}

		// Read the local player's flags
		int32_t m_fFlags = VARS::memRead<int32_t>(localPlayer + offsets::m_fFlags);

		// If the space key is pressed and the local player is on the ground, perform a jump
		if (GetAsyncKeyState(VK_SPACE) && (m_fFlags & (1 << 0)))
		{
			std::this_thread::sleep_for(std::chrono::microseconds(15625));
			VARS::memWrite(VARS::baseAddress + offsets::dwForceJump, 256);
			VARS::memWrite(VARS::baseAddress + offsets::dwForceJump, 65537);
			std::this_thread::sleep_for(std::chrono::milliseconds(1));
			VARS::memWrite(VARS::baseAddress + offsets::dwForceJump, 256);
		}
	}

	return 0;
}"
ThPg2vFW,bhop,REALshocK,Python,Saturday 30th of December 2023 11:52:21 AM CDT,"import keyboard
import pymem
import pymem.process
import time
import ctypes
import ctypes.wintypes

user32 = ctypes.windll.user32

# dwForceJump = (0x16C2380)
# dwLocalPlayer = (0x16C8F38)
# m_fFlags = (0x3C8)


def get_foreground_window_title():
    hwnd = user32.GetForegroundWindow()
    length = user32.GetWindowTextLengthW(hwnd) + 1
    buffer = ctypes.create_unicode_buffer(length)
    user32.GetWindowTextW(hwnd, buffer, length)
    return buffer.value


def main():
    pm = pymem.Pymem(""cs2.exe"")
    client = pymem.process.module_from_name(pm.process_handle, ""client.dll"").lpBaseOfDll
    # engine = pymem.process.module_from_name(pm.process_handle, ""engine.dll"").lpBaseOfDll

    while True:
        window_name = ""Counter-Strike 2""
        foreground_window_title = get_foreground_window_title()
        if foreground_window_title != window_name:
            continue

        # Bhop
        try:
            dwLocalPlayerPawn = pm.read_longlong(client + 0x16C8F38)  # client_dll.dwLocalPlayerPawn // offsets
            m_fFlags = pm.read_int(dwLocalPlayerPawn + 0x3C8)  # C_BaseEntity.m_fFlags // client.dll
            # client_dll.dwForceJump // offsets
            if keyboard.is_pressed(""space"") & m_fFlags & (1 << 0):
                time.sleep(0.016)
                pm.write_int(client + 0x16C2380, 256)
                # time.sleep(0.015)
                pm.write_int(client + 0x16C2380, 65537)
                time.sleep(0.016)
                pm.write_int(client + 0x16C2380, 256)
            else:
                pm.write_int(client + 0x16C2380, 256)
                time.sleep(0.001)
        except Exception as ex:
            pass


if __name__ == '__main__':
    main()
"
kd34XR4a,Untitled,EnGold,C++,Saturday 30th of December 2023 11:40:12 AM CDT,"#include <iostream>
#include <list>
long long fibonachi(long long n, int p);

long long fib[85]{
	1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685, 37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585
};

int main()
{
	int n;
	std::cin >> n;
	std::list<long long> res(n);             // пустой список
	for (long long i : res) {
		std::cin >> i;
		i = fibonachi(i,0);
	}
	for (long long i : res) {
		std::cout << i << std::endl;
	}
}

long long fibonachi(long long n, int p) {
	if (n == 1) return 1;
	if (p >= (sizeof(fib) / sizeof(long long))) return 0;
	if(n < fib[p]) return 0;
	long long res = fibonachi(n, p + 1);
	if(n % fib[p] == 0) {
		res += fibonachi(n / fib[p], p);
	}
	return res;
}"
Qa4CuPbE,available_map_updates.json,abraha2d,JSON,Saturday 30th of December 2023 11:29:16 AM CDT,"{
  ""available_map_updates"": {
    ""au"": {
      ""cleartext_signature"": ""BAbxckAV8gP8luDGptzs0Qmg/wtn5W2axRLt6U8dVhlXO7CucGuBECH0hkIJ7OdK6mfsjH85+YVQHsjUqa2JBw=="",
      ""decryption_key"": ""vbaKcbzzAQCr/0A94qmXlyJ6Crn0YA+0LNpi1ob/zGw="",
      ""encrypted_signature"": ""tUJlx5QFh4Ac7mWW5gU0Osy7JFg4nNKM6CZcJKxCmzaWmM3hsFXfC+87hUnIuHARWYDMI+alfopU0E9p86NKLQ=="",
      ""name"": ""AU-2023.32-14753"",
      ""sizes"": [
        717971520
      ]
    },
    ""cn"": {
      ""cleartext_signature"": ""zemvdWaQaLyfzVIYVBiaskoJgEtGCPzqa28vdtudENZVWVblSUwiIAOZiRuoI+mwZCchaZ+nUIlBL8TqhVasDw=="",
      ""decryption_key"": ""SCNYioZB9+Zwy46MiVfHrJT+wDQRN0H1ZluScEVJxoc="",
      ""encrypted_signature"": ""ppmjFlRTKui7o1gu9VUsZLQ9d7ac+nU8VnG3fRTq24xVDyI+WfsO89omD/NUjK3rB5QT7nz2rj7hDuMHi3vnZw=="",
      ""name"": ""CN-2024.2-14834"",
      ""sizes"": [
        5665833024
      ]
    },
    ""eu"": {
      ""cleartext_signature"": ""0kvH/sTJV4UGNXpwLGQDn1aS4uo4CXrGIQc9kN5QfYU4O4RYZ6ULWLmnDQbjr6Pbdy6UxMmBHQlwK+M3KUULAw=="",
      ""decryption_key"": ""nq6x7glBIsb/qmU1ARkDxPCvaYOthXO4gz1AMQ+2BUU="",
      ""encrypted_signature"": ""ridwW50dYNqviYDVh15rdWg8oL0yCvXz0wML4pnUEm9/94w6c6oqaLxN06QB9ibIr5J/bsZi828bGwxiC1CVzQ=="",
      ""name"": ""EU-2023.32-14783"",
      ""sizes"": [
        7677325376
      ]
    },
    ""hk"": {
      ""cleartext_signature"": ""tcSmTXGw5VQmEczyVA2TYSOcSy/34ab4bxu+BGF3srzqi2Ut1sI4CajkfrwcbZaoDPoGEEonEZjLtDlmN3wUAQ=="",
      ""decryption_key"": ""tTbAGPVfg9boDMyANOojWr0DvdlWHZiDFmM81+uqPHk="",
      ""encrypted_signature"": ""zN6ybB/+GgbbneulmqoIiz7dki6j9rx2CZ8EmUH5OCT/dUhtj1h7W7WhobDUnHksSzmCKAy5cwhXi+QDDmbtdQ=="",
      ""name"": ""HK-2023.26-14652"",
      ""sizes"": [
        95461440
      ]
    },
    ""jp"": {
      ""cleartext_signature"": ""KDrehSelP/PK5Cnm8KT6/oyz47/rL8foVvtUTwSsus4LvnHXRDYBKbvV0cg0dCd45tQuoSxGGJEy7IP1ti5SCg=="",
      ""decryption_key"": ""flaRyeyFfCm1ehb/4M7+5YMYsFTJxrQypJ5sSVjueyU="",
      ""encrypted_signature"": ""a3d9OwykNxST5wytkgnIgQHejHzigvnk16bXDmaZi/UftF8erVVuoeZXettVN8tOTR0g+58lyHI+4eYYE86SxA=="",
      ""name"": ""JP-2023.44-14803"",
      ""sizes"": [
        907423808
      ]
    },
    ""kr"": {
      ""cleartext_signature"": ""EaJlgyuD5pF7kWyror4145eqpVDUfvrpPNwig8983kgIreenEPylFagVlgF/gEAUB9f6jQkDQ0OloZ+GgP20BA=="",
      ""decryption_key"": ""lggoWQjFTnnByy1qXsGefewMx2Nx+tcY665tkQ28H30="",
      ""encrypted_signature"": ""TWufUUhxg1Pk3+4vRnPGAVHLEgtvOphIOyapniwoxh0EGi7hAgOvF5mts+bKRp8j71t5tH2OceoUWMWcWIFFRw=="",
      ""name"": ""KR-2023.38-14769"",
      ""sizes"": [
        481976384
      ]
    },
    ""me"": {
      ""cleartext_signature"": ""LlaStJpPrrLX6T/iyYU432A27tSYgPsj5zb9LlSFZ0nx37Rij6gihif/LQkRa7J+0KFISCrrOVu+NWLNMNh+Bg=="",
      ""decryption_key"": ""giPVB5kjp3KNVOegCwapmxIvEGfuPqvP41QyyKGw+bE="",
      ""encrypted_signature"": ""P/NU1wRWOhECC3RLi7OeGwAOGuqCPuc6thPcmEVzqxqdhJr+x7GM4DnHNe8xH9czHbVa9Ws0AyzAMCd28KeHqA=="",
      ""name"": ""ME-2023.32-14754"",
      ""sizes"": [
        957685824
      ]
    },
    ""mo"": {
      ""cleartext_signature"": ""6XF7TSBOP3QNLodLFAzFECYHN7lQCY72Yhl2VKKHPUTzqc9PhFJ+dIeGiBDovixKoWWikD3p5MZJp2SVD5NzCg=="",
      ""decryption_key"": ""434jy5qPhidLytP+kSiS5GRu80s5CYBpioQO1NQdaKg="",
      ""encrypted_signature"": ""7JPaDPpPaPTCNPwWfdQT5sK/m3RI1YU7DDXyMypy1SXVt6IlRYT7YgKvxOj8M4jo389rkauO60lSpvdx84/sBQ=="",
      ""name"": ""MO-2023.32-14732"",
      ""sizes"": [
        89866304
      ]
    },
    ""na"": {
      ""cleartext_signature"": ""M80mPIWY/YP327Vczw6+9Xegme9gc+ZpkqRAZysd4wcZd/See0J3mzUkXLxynJKll5p6xMCX1T+SiLOTMF2fCw=="",
      ""decryption_key"": ""WYlYozPaXPcTINp7IZ5cVxZRJL6XtFJkdpDKiwGi2x0="",
      ""encrypted_signature"": ""GaL3aTzX7d9jgXkpRemYFsrcJZ0L1odNuCUB8Zq7muWWQyxmub/ECqfZ0H8+/P73NsqJA+Dsknkr+HpGJ/nHMw=="",
      ""name"": ""NA-2023.44-14828"",
      ""sizes"": [
        6732488768
      ]
    },
    ""tw"": {
      ""cleartext_signature"": ""vbLNjxRMuPh/9JaIaE6Zj8OZNBmLWbgaBM+Y0/hTQpoRMsxwPqhtEWpT9GaDQUovTZn/5i5JfMMEAkg0bijIBg=="",
      ""decryption_key"": ""46Rjt1dzJ+dPhHDUzbKhTtN4xidLzBhd+ntc/ijK8j0="",
      ""encrypted_signature"": ""MFH2nfPOZncvXMmdNvdQndE50wV0LwcSsOoTGJKmqLeKYxQukXMkyqgxccR3hsuqCTSS7Yn3WU1vbnEkVtlFpg=="",
      ""name"": ""TW-2023.20-14564"",
      ""sizes"": [
        197378112
      ]
    },
    ""se"": {
      ""cleartext_signature"": ""+Bh1AJtWAchGMgnufk5OySYvtYNZHvbzW7q8tCEEjzYpW8CYS6XpPstafFnpUTDYRwGcCS3WwlSPl+DFX1flBg=="",
      ""decryption_key"": ""5BGXMHWXN/+5fRuJV4E5njChNU2aqR0CLAG3yxLsBx8="",
      ""encrypted_signature"": ""PjCgEpccbJBC1bvbSoM8S4mrrWpXTOqJVrNbsI7jdNajKlaPyQH34Z8wjDwF3QgOuPPyaQRjotXWx/WEm/YZMQ=="",
      ""name"": ""SE-2024.2-14830"",
      ""sizes"": [
        470736960
      ]
    }
  }
}"
uCCc69xL,tps,ComboMaster,Lua,Saturday 30th of December 2023 10:48:02 AM CDT,"local component = require ""component""
local internet = component.internet
local fs = require ""filesystem""

local timeConstant = 2

local function time()
    local f = io.open(""/tmp/timeFile"",""w"")
    f:write(""test"")
    f:close()
    return fs.lastModified(""/tmp/timeFile"")
end

local TPS = {}
local avgTPS = 0

function clear()
    for tpsSlot = 1, 10 do
        TPS[tpsSlot] = 0
    end
end

function getTPS()
    for tpsSlot = 1, 10 do
        local realTimeOld = time()
        os.sleep(timeConstant)
        local realTimeNew = time()
        local realTimeDiff = realTimeNew - realTimeOld
        TPS[tpsSlot] = 20000 * timeConstant / realTimeDiff
        avgTPS = (TPS[1] + TPS[2] + TPS[3] + TPS[4] + TPS[5]) / 5
    end
    --internet.request(""http://77.91.86.203:6666"", string.format(""%.2f"", avgTPS))
    print(string.format(""%.2f"", avgTPS))
end

while true do
    clear()
    getTPS()
end"
2wZ4zYAN,Zadupice pastebin,Lavex,HTML,Saturday 30th of December 2023 10:04:54 AM CDT,"<link=https://discord.gg/4dmRBxVkQ5><size=24><align=center></color><color=#E0F304>Z</color><color=#DDE315>a</color><color=#DAD326>d</color><color=#D7C337>u</color><color=#D4B348>p</color><color=#D1A359>i</color><color=#CE936A>c</color><color=#CB837B>e</color> <color=#C5639D>H</color><color=#C253AE>A</color><color=#BF43BF>R</color><color=#BC33D0>D</color><color=#B923E1>R</color><color=#B613F2>P</color></align></size></link>

<size=14><link=https://docs.google.com/document/d/14v65U9H0JCQHcCwZhwlzcLRRTqWG6KIJJbEV4A6OX9E/edit?usp=sharing><align=center><color=#D6A050>P</color><color=#D7994D>r</color><color=#D8924A>z</color><color=#D98B47>e</color><color=#DA8444>c</color><color=#DB7D41>z</color><color=#DC763E>y</color><color=#DD6F3B>t</color><color=#DE6838>a</color><color=#DF6135>j</color> <u><color=#E1532F>r</color><color=#E24C2C>e</color><color=#E34529>g</color><color=#E43E26>u</color><color=#E53723>l</color><color=#E63020>a</color><color=#E7291D>m</color><color=#E8221A>i</color><color=#E91B17>n</color><color=#EA1414>!</color></u></align></link></size>

<link=https://discord.gg/4dmRBxVkQ5><size=14><align=center><color=#645DAA>D</color><color=#625CAB>o</color><color=#605BAC>ł</color><color=#5E5AAD>ą</color><color=#5C59AE>c</color><color=#5A58AF>z</color> <color=#5656B1>n</color><color=#5455B2>a</color> <color=#5053B4>n</color><color=#4E52B5>a</color><color=#4C51B6>s</color><color=#4A50B7>z</color><color=#484FB8>e</color><color=#464EB9>g</color><color=#444DBA>o</color> <u><color=#404BBC>D</color><color=#3E4ABD>I</color><color=#3C49BE>S</color><color=#3A48BF>C</color><color=#3847C0>O</color><color=#3646C1>R</color><color=#3445C2>D</color><color=#3244C3>A</color></u></align></size></link>
"
PWfB507w,Bubble sort,mn_rockstar,Python,Saturday 30th of December 2023 09:47:59 AM CDT,"def bsort(numbers):
    for i in range(len(numbers)-1,0,-1):
        for j in range(i):
            if numbers[j]>numbers[j+1]:
                numbers[j],numbers[j+1]=numbers[j+1],numbers[j]
    return numbers
print(""enter the list in single line with sepration of space :"",end = "" "")
numb = list(map(int,input().split()))
snumb = bsort(numb)
print(""the sorted list is :"",snumb)
"
UzSqcjEk,record,tuvok81,JavaScript,Saturday 30th of December 2023 09:42:31 AM CDT,"function record_show()
{
   document.getElementById('reccontrol').innerHTML=Math.round(soundapplet.rec_length_kB())+"" kB"";
}

function record_start() {
   document.getElementById('reccontrol').innerHTML=0+"" kB"";
   if (rec_downloadurl) { URL.revokeObjectURL(rec_downloadurl); rec_downloadurl=null; }
   rec_showtimer=setInterval('record_show()',250);
   soundapplet.rec_start();
}

function record_stop()
{
   clearInterval(rec_showtimer);
   var res = soundapplet.rec_finish();

   var wavhead = new ArrayBuffer(44);
   var dv=new DataView(wavhead);
   var i=0;
   var sr=Math.round(res.sr);
   dv.setUint8(i++,82);  dv.setUint8(i++,73); dv.setUint8(i++,70); dv.setUint8(i++,70); // RIFF  (is there really no less verbose way to initialize this thing?)
   dv.setUint32(i,res.len+44,true); i+=4;  // total length; WAV files are little-endian
   dv.setUint8(i++,87);  dv.setUint8(i++,65); dv.setUint8(i++,86); dv.setUint8(i++,69); // WAVE
   dv.setUint8(i++,102);  dv.setUint8(i++,109); dv.setUint8(i++,116); dv.setUint8(i++,32); // fmt
     dv.setUint32(i,16,true);   i+=4;   // length of fmt
     dv.setUint16(i,1,true);    i+=2;   // PCM
     dv.setUint16(i,1,true);    i+=2;   // mono
     dv.setUint32(i,sr,true);   i+=4;   // samplerate
     dv.setUint32(i,2*sr,true); i+=4;   // 2*samplerate
     dv.setUint16(i,2,true);    i+=2;   // bytes per sample
     dv.setUint16(i,16,true);   i+=2;   // bits per sample
   dv.setUint8(i++,100);  dv.setUint8(i++,97); dv.setUint8(i++,116); dv.setUint8(i++,97); // data
     dv.setUint32(i,res.len,true);  // length of data

   var wavdata = res.wavdata;
   wavdata.unshift(wavhead);

   var mimetype = 'application/binary';
   var bb = new Blob(wavdata, {type: mimetype});
   if (!bb) document.getElementById('recwarning').style.display=""block"";
   rec_downloadurl = window.URL.createObjectURL(bb);
   if (rec_downloadurl.indexOf('http')>=0) document.getElementById('recwarning').style.display=""block"";
   var fname='';
   try {
      fname=(new Date().toISOString()).replace(/\.[0-9]{3}/,"""");
   } catch (e) {};
   fname=""websdr_recording_""+fname+""_""+nominalfreq().toFixed(1)+""kHz.wav"";
   document.getElementById('reccontrol').innerHTML=""<a href='""+rec_downloadurl+""' download='""+fname+""'>download</a>"";
}

function record_click()
{
   var bt=document.getElementById('recbutton');
   if (bt.innerHTML==""stop"") {
      bt.innerHTML=""start"";
      record_stop();
   } else {
      bt.innerHTML=""stop"";
      record_start();
   }
}
"
j3jM6Qjq,White paint condo,bluebyt,INI file,Saturday 30th of December 2023 09:25:14 AM CDT,"SICO Muse Interior Latex Paint and Primer - Soft Matte Finish - 946 ml - Base 1
Article #50316890 Model #991-521-946ML Format 946ML
"
DrQEPiiK,asas,IPerov,Kotlin,Saturday 30th of December 2023 09:14:29 AM CDT,"package ru.surf.components.service

import android.annotation.SuppressLint
import android.content.Intent
import android.os.Bundle
import android.widget.Toast
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat
import androidx.core.graphics.red
import androidx.lifecycle.ViewModel
import androidx.lifecycle.lifecycleScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.flow.*
import kotlinx.coroutines.launch
import ru.surf.components.R
import ru.surf.components.databinding.MusicServiceBinding
import java.util.concurrent.Flow

class MusicServiceViewModel(): ViewModel(){
    var countStartsLeft: Int = 2
    private val countStartsFlow_ = MutableStateFlow(0)
    val countStartsFlow = countStartsFlow_.asSharedFlow()
    fun plusCountStarts(){
        countStartsFlow_.value = countStartsFlow_.value++
    }
}

class ServiceActivity : AppCompatActivity(){
    private lateinit var binding: MusicServiceBinding
    private val musicServiceViewModel: MusicServiceViewModel by viewModels()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = MusicServiceBinding.inflate(layoutInflater)
        setContentView(binding.root)

        subscribeOnViewmodelData()
        updateMusicStartsLeftCounter()

        binding.startStopMusicBt.setOnClickListener{
            if (musicServiceViewModel.countStartsLeft > 0) startStopMusic()
            else noTokens()
        }
    }


    @SuppressLint(""UseCompatLoadingForDrawables"")
    private fun startStopMusic() {
        val intent = Intent(this,PlayerService::class.java)
        if (ServiceManager.isStarted){
            stopService(intent)
            binding.startStopMusicBt.text = getString(R.string.btn_play)
            binding.startStopMusicBt.icon = getDrawable(R.drawable.baseline_play_circle_24)
        }
        else{
                startService(intent)
                binding.startStopMusicBt.text = getString(R.string.btn_pause)
                binding.startStopMusicBt.icon = getDrawable(R.drawable.baseline_pause_circle_filled_24)
                musicServiceViewModel.plusCountStarts()
                musicServiceViewModel.countStartsLeft--
                updateMusicStartsLeftCounter()
            }
        }
    private fun updateMusicStartsLeftCounter(){
        binding.musicStartLeftCounterTv.text = musicServiceViewModel.countStartsLeft.toString()
    }

    private fun noTokens(){
        Toast.makeText(this, ""Не осталось токенов для прослушивания"", Toast.LENGTH_SHORT).show()
        binding.musicStartLeftCounterTv.setTextColor(resources.getColor(R.color.red,))
        binding.startStopMusicBt.setBackgroundColor(ContextCompat.getColor(applicationContext,R.color.red))
    }

    private fun subscribeOnViewmodelData(){
        lifecycleScope.launch(Dispatchers.Default){
            musicServiceViewModel.countStartsFlow.collect {countStart->
                binding.musicStartCounterTv.text = countStart.toString()
            }
        }
    }
}

"
eikydYpx,AE2 Display,SYMemy,Lua,Saturday 30th of December 2023 09:12:34 AM CDT,"
function GetAttachedBlock(blockType)
    local block = nil
    for _, side in ipairs(peripheral.getNames()) do
        if( peripheral.getType(side) == blockType)
        then
            print(""Found"" .. blockType .. "" on "" .. side .. "" side"")
            block = peripheral.wrap(side)
        end
    end

    if(block == nil)
    then
    print(""Could not find "" .. blockType .. ""!"")
        exit()
    end

    return block; 
end

function GetByteAsText(bytes)

    if(bytes <= 10 * 1000)
    then
        return bytes

    elseif(bytes <= 10 * 1000 * 1000)
    then
        return string.format(""%02d K"", bytes / 1000)

    elseif(bytes <= 10 * 1000 * 1000 * 1000)
    then
        return string.format(""%02d M"", bytes / 1000 / 1000)

    elseif(bytes <= 10 * 1000 * 1000 * 1000 * 1000)
    then
        return string.format(""%02d G"", bytes / 1000 / 1000 / 1000)

    elseif(bytes <= 10 * 1000 * 1000 * 1000 * 1000 * 1000)
    then
        return string.format(""%02d T"", bytes / 1000 / 1000 / 1000 / 1000)

    else
        return string.format(""%02d B"", bytes / 1000 / 1000 / 1000 / 1000 / 1000)
    end
end

local meBridge = GetAttachedBlock(""meBridge"")
local monitor = GetAttachedBlock(""monitor"")

while true
do
    local usedItemStorage = meBridge.getUsedItemStorage()
    local totalItemStorage = meBridge.getTotalItemStorage()

    monitor.clear()
    monitor.setCursorPos(1,1)
    monitor.write(""Used: "" .. GetByteAsText(usedItemStorage))
    monitor.setCursorPos(1,2)
    monitor.write(""Total: "" .. GetByteAsText(totalItemStorage))
    sleep(1)
end
"
sj6ccUsA,updater-v2.sh,sergio_educacionit,Bash,Saturday 30th of December 2023 08:29:30 AM CDT,"#!/bin/bash


echo ""verificando nivel de usuario...""

# El operador not '!' es un negador o inversor, en este caso
# si la condicion devuelve False al ser negada se convierte en True.
#
# si $UUI no es igual entonces True.

if [ ! $UID -eq 0 ]; then

	
	# Enviamos e lmensaje por el estandar error '>&2'
	echo ""Debes ser usuario 'root' para ejecutar este programa."" >&2

	# TErminamos el programa con un exit status 1.
	exit 1

fi

# Utilizamos el operador and '&&' para concatenar dos comandos, el de la derecha 
# se ejecuta si el de la izquierda termina con exit status 0.

apt update && apt upgrade -y


# si el update falla el scrip termina por que no hay mas intrucciones y el exit status sera el del
# ultimo comando ejecutado.
"
QaaZFTfW,Untitled,poxipox,Lua,Saturday 30th of December 2023 08:11:39 AM CDT,"			door = function(cid, toPosition, creatPos)
					print'1'
					if toPosition.y-1 == creatPos.y then -- exit
						doTeleportThing(cid, {x=toPosition.x, y=toPosition.y+1, z=toPosition.z}, false)
						return true
					end
					print'2'
					if exhaustion.check(cid, 19000) then
						doSendMagicEffect(getPlayerPosition(cid), CONST_ME_POFF)
						doPlayerSendCancel(cid, ""You are exhausted."")
						return true
					end   
					print'3'
					doTeleportThing(cid, {x=toPosition.x, y=toPosition.y-1, z=toPosition.z}, false)
					local time = 10
					exhaustion.set(cid, 19000, time)
                end
                },"
zrqwc3M1,updater.sh,sergio_educacionit,Bash,Saturday 30th of December 2023 07:52:43 AM CDT,"#!/bin/bash


# verficiar si el usuario es root.

# La variable de entorno '$UID' contiene la id de
# usuario conectado o que tiene sesion abierta en un shell

# Si condicion     Entonces...
if [ $UID -eq 0 ]; then

	# esto
	apt update
	apt upgrade -y
# Sino...
else
	# esto otro
	echo ""Debes ser usuario 'root' para ejecutar este programa.""

fi"
aufv1vGt,wget,goldfiction,Lua,Saturday 30th of December 2023 07:49:04 AM CDT,"local function wget(option, url, ziel)
  if type(url) ~= ""string"" and type(ziel) ~= ""string"" then
        return
  elseif type(option) == ""string"" and option ~= ""-f"" and type(url) == ""string"" then
        ziel = url
        url = option
  end
  if http.checkURL(url) then
        if fs.exists(ziel) and option ~= ""-f"" then
          printError(""<Error> Target exists already"")
          return
        else
          term.write(""Downloading ... "")
          local timer = os.startTimer(60)
          http.request(url)
          while true do
                local event, id, data = os.pullEvent()
                if event == ""http_success"" then
                  print(""success"")
                  local f = io.open(ziel, ""w"")
                  f:write(data.readAll())
                  f:close()
                  data:close()
                  print(""Saved as "" .. ziel)
                  return true
                elseif event == ""timer"" and timer == id then
                  printError(""<Error> Timeout"")
                  return
                elseif event == ""http_failure"" then
                  printError(""<Error> Download"")
                  os.cancelAlarm(timer)
                  return
                end
          end
        end
  else
        printError(""<Error> URL"")
        return
  end
end

-- wget(""http://example.org/"", ""testing"")
-- wget(""-f"", ""http://example.org/"", ""testing"")

wget(""-f"",""https://github.com/TheInfamousAlk/nbs/raw/master/Alan%20Walker%20-%20Fade.nbs"", ""testing"")"
X0WSkvkh,Doorbell,denperss,YAML,Saturday 30th of December 2023 07:48:02 AM CDT,"Merry Christmass all 🙂 

I have some issue with a template from my nest doorbell 😦
So when i call the service, it creates the file but it dosent have a image in it. 
Also it dosent add the time stamp to the file, only ""doorbell_"" 

This is the code:

service: camera.snapshot
target:
  device_id: 6f76b7518d4efa9
  entity_id: camera.doorbell
data:
  filename: >-
    /config/www/nest/notify/doorbell_{{
    states.input_text.as_doorbell_snap_timestamp.state }}.jpg

This is the input text i call before the snap

service: input_text.set_value
entity_id: input_text.as_doorbell_snap_timestamp
data:
  value: ""{{ now().strftime(\""%Y%m%d_%H%M%S\"") }}""

"
3kX3GPLq,luhnValidityCheck(),baxterio,TypeScript,Saturday 30th of December 2023 07:47:35 AM CDT,"function luhnValidityCheck(value: string | number): boolean {
  const numbers = value.toString().split('').reverse()
  const sum = numbers.reduce((sum, number, index) => {
     let n = Number(number)
     if (index % 2 !== 0) {
       n *= 2
       n -= n > 9 ? 9 : 0
     }
     return sum + n
  }, 0)
	return sum % 10 === 0
}"
jh2Twbw0,Untitled,Josif_tepe,C++,Saturday 30th of December 2023 07:35:50 AM CDT,"#include <iostream>
#include <set>
#include <vector>
#include <bits/stdc++.h>
using namespace std;
const int maxn = 1e5 + 10;
typedef long long ll;
const ll MOD = 922337186621;
const ll alphabet_size = 52;
int n, k;
int rolling_hash(string & s) {
    set<ll> st;
    int n = (int) s.size();
    vector<ll> powers(n + 1, 1);
    for(int i = 1; i <= n; i++) {
        powers[i] = (powers[i - 1] * alphabet_size) % MOD;
    }
    ll hash = 0;
    for(int i = 0; i < k; i++) {
        hash = (hash * alphabet_size + s[i]) % MOD;
    }
    st.insert(hash);
    for(int i = 1; i <= n - k; i++) {
        hash = (hash - powers[k - 1] * s[i - 1]);
        while(hash < 0) {
            hash += MOD;
        }
        hash %= MOD;
        hash = (hash * alphabet_size + s[i + k - 1]) % MOD;
        st.insert(hash);
    }
    return (int) st.size();
    
}

int main()
{
    ios_base::sync_with_stdio(false);
    int t;
    cin >> t;
    while(t--) {
        cin >> n >> k;
        string s;
        cin >> s;
        cout << rolling_hash(s) << endl;
    }
    return 0;
}

"
k6KAfYp9,card stanze,fabrizio97726,YAML,Saturday 30th of December 2023 07:34:01 AM CDT,"type: custom:stack-in-card
mode: vertical
cards:
  - type: custom:stack-in-card
    mode: horizontal
    cards:
      - type: custom:mushroom-entity-card
        entity: sensor.disimpegno_temperature
        name: Sala
        icon_type: none
        tap_action:
          action: more-info
        card_mod:
          style: |
            ha-card {
              background-color: rgba(0,0,0,0);
              box-shadow: none;
              border-style: hidden;
            }  
      - type: custom:mushroom-chips-card
        chips:
          - type: entity
            entity: light.luce_sala
            use_entity_picture: true
            tap_action:
              action: toggle
            name: Plafone
            icon: phu:friends-of-hue-iq-pendant
            icon_color: yellow
            content_info: name
        alignment: end
    card_mod:
      style: |
        ha-card {
          background-color: rgba(0,0,0,0);
          box-shadow: none;
          border-style: hidden;
        }  
  - type: custom:mini-graph-card
    entities:
      - sensor.disimpegno_temperature
    show:
      state: false
      name: false
      icon: false
    points_per_hour: 1
    hours_to_shw: 48
    line_color: orange
    card_mod:
      style: |
        ha-card {
          background-color: rgba(0,0,0,0);
          box-shadow: none;
          border-style: hidden;
        }      
"
iapGF8WA,Mainframe_display (incomplete),SHADOW_WOLF_FURRY,Lua,Saturday 30th of December 2023 07:33:35 AM CDT,"-- wraping monitors as peripherals
local monL == peripheral.wrap(""left"")
local monR == peripheral.wrap(""right"")

-- set initial monitor text scale
monL.setTextScale(5)
monR.setTextScale(.5)

-- display button
monR.setBackgroundColor(colors.lightGrey)
monR.setCursorPos(1,1)
monR.write(string.rep("" "", 5)) -- 5 spaces worth of lightgrey box

-- button label (number on button)

"
xHei2wW6,openpgp curve25519 implementation,baxterio,TypeScript,Saturday 30th of December 2023 07:26:49 AM CDT,"import * as openpgp from 'openpgp'

type TUser = {
  user: {
    email: string;
    firstname: string;
    lastname: string;
  }
};

type TKeysArmored = {
  privateKeyArmored: string;
  publicKeyArmored: string;
  revocationCertificate?: string;
};

type TKeys = {
  privateKey: openpgp.PrivateKey;
  publicKey: openpgp.Key;
};

type TPassphrase = {
  passphrase: string;
}

type TEncryptDataParams = {
  data: string | number | Object;
} & TUser & TPassphrase;

type TEncryptedData = Omit<TKeysArmored, ""revocationCertificate""> & {
  messageArmored: string;
};

type TDecryptDataParams = TEncryptedData & TPassphrase

type TDecryptedData = {
  decryptedData: any;
  verifiedSignature: boolean;
};

type TReadKeysParams = TKeysArmored & TPassphrase;

type TGeneratePgpKeysParams = TUser & TPassphrase

interface IEncryptData {
  encryptData: (params: TEncryptDataParams) => Promise<TEncryptedData>;
  decryptData: (params: TDecryptDataParams) => Promise<TDecryptedData>;
  generatePgpKeys: (params: TGeneratePgpKeysParams) => Promise<TKeysArmored>;
  readKeys: (params: TReadKeysParams) => Promise<TKeys>;
}

class EncryptData implements IEncryptData {
  protected curve: openpgp.EllipticCurveName = 'curve25519';
  protected type: 'ecc' | 'rsa' = 'ecc';

  async decryptData({
    messageArmored,
    passphrase,
    privateKeyArmored,
    publicKeyArmored,
  }: TDecryptDataParams): Promise<TDecryptedData> {
    const { privateKey, publicKey } = await this.readKeys({
      passphrase,
      privateKeyArmored, 
      publicKeyArmored,
    })

    const message = await openpgp.readMessage({
      armoredMessage: atob(messageArmored),
    });

    const { data: decryptedData, signatures } = await openpgp.decrypt({
      decryptionKeys: privateKey,
      message,
      verificationKeys: publicKey,
    });

    return {
      decryptedData,
      verifiedSignature: await signatures[0].verified,
    };
  }

  async encryptData({ data, passphrase, user }: TEncryptDataParams): Promise<TEncryptedData> {
    const { privateKeyArmored, publicKeyArmored } = await this.generatePgpKeys({
      passphrase,
      user
    });

    const { privateKey, publicKey } = await this.readKeys({
      passphrase,
      privateKeyArmored, 
      publicKeyArmored,
    })

    const messageArmored = await openpgp.encrypt({
      encryptionKeys: publicKey,
      message: await openpgp.createMessage({
        text: data as any,
      }),
      signingKeys: privateKey,
    });

    return {
      publicKeyArmored,
      privateKeyArmored,
      messageArmored: btoa(messageArmored as string),
    };
  }

  async generatePgpKeys({ user, passphrase }: TGeneratePgpKeysParams): Promise<TKeysArmored> {
    const { email, firstname, lastname  } = user;

    const {
      privateKey: privateKeyArmored,
      publicKey: publicKeyArmored,
      revocationCertificate,
    } = await openpgp.generateKey({
      curve: this.curve,
      passphrase,
      type: this.type,
      userIDs: [
        {
          email,
          name: `${firstname} ${lastname}`,
        },
      ],
    });

    return {
      privateKeyArmored,
      publicKeyArmored,
      revocationCertificate,
    };
  }

  async readKeys ({ passphrase, privateKeyArmored, publicKeyArmored }: TReadKeysParams): Promise<TKeys> {
    const publicKey = await openpgp.readKey({
      armoredKey: publicKeyArmored,
    });

    const privateKey = await openpgp.decryptKey({
      passphrase,
      privateKey: await openpgp.readPrivateKey({
        armoredKey: privateKeyArmored,
      }),
    });

    return { privateKey, publicKey };
  }
}"
mkJmw16K,Untitled,kwest87,C#,Saturday 30th of December 2023 07:13:03 AM CDT,"using System;

namespace ConsoleApp19
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const int CommandKnock = 1;
            const int CommandSeriesKnock = 2;
            const int CommandTreatment = 3;
            const int CommandUndercut = 4;

            int maximumHealth = 1000;
            int bossHealth = 1000;
            int golemHealth = 1000;
            int bossDamage = 100;
            int golemDamage = 50;
            int golemTreatment = 200;
            int seriesKnocks = 3;
            int clay = 2;
            int userInput;
            bool itSeriesKnocks = false;
            bool isWork = true;

            Console.WriteLine($""На выбор прёмы голема : \n {CommandKnock})Обычный удар ({golemDamage} урона)."" +
                $""\n {CommandSeriesKnock})Серия ударов (делает {seriesKnocks} обычных удара но след. ход отдыхает)."" +
                $""\n {CommandTreatment})Замазать раны глиной (восстановить {golemTreatment} жизней , {clay} куска глины)."" +
                $""\n {CommandUndercut})Подсечка (обезвредить противника в этом ходу и {golemDamage} урона)."");

            while (isWork)
            {
                if (itSeriesKnocks)
                {
                    Console.WriteLine(""Отдыхаете после серии ударов ."");
                    itSeriesKnocks = false;
                    golemHealth -= bossDamage;
                    Console.ReadKey();
                }
                else
                {
                    Console.WriteLine($""  Жизни босса - {bossHealth}\n  Жизни голема - {golemHealth}"");
                    Console.Write(""Выберите действие : "");
                    userInput = Convert.ToInt32(Console.ReadLine());

                    switch (userInput)
                    {
                        case CommandKnock:
                            bossHealth -= golemDamage;
                            golemHealth -= bossDamage;
                            break;

                        case CommandSeriesKnock:
                            bossHealth -= golemDamage * seriesKnocks;
                            golemHealth -= bossDamage;
                            itSeriesKnocks = true;
                            break;

                        case CommandTreatment:
                            golemHealth -= bossDamage;

                            if (clay > 0)
                            {
                                clay--;
                                golemHealth += golemTreatment;

                                if (golemHealth > maximumHealth)
                                {
                                    golemHealth = maximumHealth;
                                    Console.WriteLine(""Больше изначального вам не восстановиться."");
                                }
                            }
                            break;

                        case CommandUndercut:
                            bossHealth -= golemDamage;
                            break;
                    }

                    if (bossHealth <= 0 || golemHealth <= 0)
                    {
                        isWork = false;
                    }
                }
            }

            if (bossHealth > 0)
            {
                Console.WriteLine(""Голем повержен."");
            }
            else if (golemHealth > 0)
            {
                Console.WriteLine(""Босс повержен.""); ;
            }
            else
            {
                Console.WriteLine(""Ничья."");
            }
        }
    }
}"
DazfRjCL,Untitled,Josif_tepe,C++,Saturday 30th of December 2023 07:10:39 AM CDT,"class Solution {
public:
    vector<int> process_lps(string s) {
        int j = 0, i = 1;
        vector<int> lps((int) s.size(), 0);
        lps[0] = 0;
        while(i < (int) s.size()) {
            if(s[i] == s[j]) {
                lps[i] = j + 1;
                i++;
                j++;
            }
            else {
                if(j != 0) {
                    j = lps[j - 1];
                }
                else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    }

    string longestPrefix(string s) {
        vector<int> v = process_lps(s);
        
        return s.substr(0, v[(int) v.size() - 1]);
    }
};"
