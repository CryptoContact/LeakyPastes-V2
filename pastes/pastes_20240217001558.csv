id,title,username,language,date,content
iJxL3Zyq,get all URL search parameters,riseandburn,JavaScript,Friday 16th of February 2024 05:46:42 PM CDT,"var getAllUrlParams = function(url) {

	// get query string from url (optional) or window
	var queryString = url ? url.split('?')[1] : window.location.search.slice(1);

	// we'll store the parameters here
	var obj = {};

	// if query string exists
	if (queryString) {

		// stuff after # is not part of query string, so get rid of it
		queryString = queryString.split('#')[0];

		// split our query string into its component parts
		var arr = queryString.split('&');

		for (var i = 0; i < arr.length; i++) {
			// separate the keys and the values
			var a = arr[i].split('=');

			// set parameter name and value (use 'true' if empty)
			var paramName = a[0];
			var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];

			// (optional) keep case consistent
			paramName = paramName.toLowerCase();
			if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();

			// if the paramName ends with square brackets, e.g. colors[] or colors[2]
			if (paramName.match(/\[(\d+)?\]$/)) {

				// create key if it doesn't exist
				var key = paramName.replace(/\[(\d+)?\]/, '');
				if (!obj[key]) obj[key] = [];

				// if it's an indexed array e.g. colors[2]
				if (paramName.match(/\[\d+\]$/)) {
					// get the index value and add the entry at the appropriate position
					var index = /\[(\d+)\]/.exec(paramName)[1];
					obj[key][index] = paramValue;
				} else {
					// otherwise add the value to the end of the array
					obj[key].push(paramValue);
				}
			} else {
				// we're dealing with a string
				if (!obj[paramName]) {
					// if it doesn't exist, create property
					obj[paramName] = paramValue;
				} else if (obj[paramName] && typeof obj[paramName] === 'string') {
					// if property does exist and it's a string, convert it to an array
					obj[paramName] = [obj[paramName]];
					obj[paramName].push(paramValue);
				} else {
					// otherwise add the property
					obj[paramName].push(paramValue);
				}
			}
		}
	}

	return obj;
}"
hEd46462,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Friday 16th of February 2024 05:40:15 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_297375.pdf
 
Working as of
16 February 2024"
yk6jCXDF,Pclient/otowin,Thoughtcoder411,Python,Friday 16th of February 2024 05:36:55 PM CDT,"import os
import tkinter as tk
from tkinter import filedialog, messagebox, simpledialog
import pyautogui
import time
import pytesseract
from pygetwindow import getWindowsWithTitle

# Configure pytesseract to use the appropriate path for Tesseract OCR executable
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'  # Update with your Tesseract OCR path

def detect_baritone(mods_folder):
    baritone_identifier = None
    
    # Check if Baritone is installed by searching for its files in the mods folder
    for filename in os.listdir(mods_folder):
        if ""Baritone"" in filename:
            baritone_identifier = input(""Enter the identifier for Baritone commands (e.g., '#'): "")
            break
    
    return baritone_identifier

def save_config(mods_folder):
    with open(""config.txt"", ""w"") as f:
        f.write(mods_folder)

def load_config():
    if os.path.exists(""config.txt""):
        with open(""config.txt"", ""r"") as f:
            return f.read().strip()
    else:
        return None

def browse_folder():
    global mods_folder
    mods_folder = filedialog.askdirectory(title=""Select Minecraft Mods Folder"")
    if mods_folder:
        baritone_identifier = detect_baritone(mods_folder)
        if baritone_identifier:
            messagebox.showinfo(""Baritone Detected"", f""Baritone detected. Identifier for Baritone commands: {baritone_identifier}"")
            save_config(mods_folder)
        else:
            messagebox.showinfo(""Baritone Not Detected"", ""Baritone not detected in the selected mods folder."")

def send_command(command):
    if mods_folder:
        try:
            pyautogui.press('t')
            time.sleep(0.1)  # Wait for the chat window to open
            pyautogui.typewrite(command)
            pyautogui.press('enter')
        except Exception as e:
            messagebox.showerror(""Error"", f""Failed to send command: {e}"")
    else:
        messagebox.showinfo(""Mods Folder Not Selected"", ""Please select the mods folder first."")

def send_goto_command():
    if mods_folder:
        x = simpledialog.askfloat(""Enter X Coordinate"", ""Please enter the X coordinate:"")
        y = simpledialog.askfloat(""Enter Y Coordinate"", ""Please enter the Y coordinate:"")
        z = simpledialog.askfloat(""Enter Z Coordinate"", ""Please enter the Z coordinate:"")
        if x is not None and y is not None and z is not None:
            command = f""goto {x} {y} {z}""
            send_command(command)

def detect_task_completion():
    try:
        # Get Minecraft window
        mc_window = getWindowsWithTitle('Minecraft')[0]

        # Get coordinates of chat box region
        chat_box_x = mc_window.left + 8
        chat_box_y = mc_window.top + mc_window.height - 118
        chat_box_width = 830
        chat_box_height = 100

        # Take screenshot of chat box region
        screenshot = pyautogui.screenshot(region=(chat_box_x, chat_box_y, chat_box_width, chat_box_height))

        # Perform OCR on the screenshot to extract text
        chat_text = pytesseract.image_to_string(screenshot)

        # Check if ""task complete"" is found in the extracted text
        if ""task complete"" in chat_text.lower():
            messagebox.showinfo(""Task Complete"", ""A task has been completed."")
    except Exception as e:
        messagebox.showerror(""Error"", f""Failed to detect task completion: {e}"")

def abort_action():
    if mods_folder:
        identifier = simpledialog.askstring(""Enter Identifier"", ""Please enter the identifier for aborting the action:"")
        if identifier:
            command = f""{identifier} cancel""
            send_command(command)

# Create the main application window
root = tk.Tk()
root.title(""Baritone Control"")

# Global variable to store the mods folder path
mods_folder = load_config()

# Browse Button
browse_button = tk.Button(root, text=""Browse Mods Folder"", command=browse_folder)
browse_button.pack(pady=10)

# Send Help Command Button
send_help_button = tk.Button(root, text=""Send Baritone Help Command"", command=lambda: send_command(""#help""))
send_help_button.pack(pady=10)

# Baritone Command Buttons
goto_button = tk.Button(root, text=""Goto"", command=send_goto_command)
goto_button.pack()

mine_button = tk.Button(root, text=""Mine"", command=lambda: send_command(""mine""))
mine_button.pack()

build_button = tk.Button(root, text=""Build"", command=lambda: send_command(""build""))
build_button.pack()

follow_button = tk.Button(root, text=""Follow"", command=lambda: send_command(""follow""))
follow_button.pack()

goto_bed_button = tk.Button(root, text=""Goto Bed"", command=lambda: send_command(""goto bed""))
goto_bed_button.pack()

explore_button = tk.Button(root, text=""Explore"", command=lambda: send_command(""explore""))
explore_button.pack()

farm_button = tk.Button(root, text=""Farm"", command=lambda: send_command(""farm""))
farm_button.pack()

deposit_button = tk.Button(root, text=""Deposit"", command=lambda: send_command(""deposit""))
deposit_button.pack()

return_button = tk.Button(root, text=""Return"", command=lambda: send_command(""return""))
return_button.pack()

cancel_button = tk.Button(root, text=""Cancel"", command=lambda: send_command(""cancel""))
cancel_button.pack()

# Abort Action Button
abort_button = tk.Button(root, text=""Abort Action"", command=abort_action)
abort_button.pack(pady=10)

# Detect Task Completion Button
detect_completion_button = tk.Button(root, text=""Detect Task Completion"", command=detect_task_completion)
detect_completion_button.pack(pady=10)

# Run the application
root.mainloop()
"
V7CLyPmh,handbreaker i think fixed snowybot,coinwalk,JavaScript,Friday 16th of February 2024 05:33:11 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var boon = 0.0001;
var tens = (boon*10);
var sevens = (boon*6.9);
var eights = (boon*7.9);
var morph = 0;
var blast = 0; 
var cool = false;
var matrix = 0;
var bear = true;
var plane = 6.9;
var submarine = 2.9;
var boxul = 6.9;
var bolux = 2.9;
var smile = 0;
var smiley = 0;
var fart = 3;
var tiffy = ((Math.floor(original/tens))*tens);
var james = ((Math.floor(original/tens))*tens);
var snowy = boon;
var bilance = original;
var good = (((bilance-original)*1).toFixed(8));
 
function dobet(){
if (!bear){
matrix = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if (matrix>morph){
bilance = document.getElementById('pct_balance').value;
good = (((bilance-original)*1).toFixed(8));
console.log(""profit"");
console.log(good);
    if ((bilance>(tiffy+(snowy*plane)))&&(smile<2)&&(bilance<(tiffy+(snowy*(plane+1))))){
        snowy = snowy*2;
        plane = 4.9
        boxul = 4.9
        submarine = 4.9
        bolux = 1.9;
        smile = smile+1;
        tiffy = parseFloat(bilance);
    }
    if ((bilance>(tiffy+(snowy*plane)))&&(boxul>2.1)&&(smile>=2)){
        snowy = snowy*2;
        boxul = 0.9;
        bolux = 1.9;
        plane = 4.9
        submarine = 4.9
        smile = smile+1;
        tiffy = parseFloat(bilance);
    }
    if ((bilance>(tiffy+(snowy*boxul)))&&(boxul<2.1)){
 	snowy = boon;
        boxul = 6.9;
        plane = 6.9;
        bolux = 2.9;
        submarine = 2.9;
        smile = 0;
        tiffy = ((Math.floor(bilance/tens))*tens);
    }
    if ((bilance<(tiffy-(snowy*submarine)))&&(smile<2)&&(bilance>(tiffy-(snowy*(submarine+1))))){
        plane = 4.9;
        submarine = 4.9;
        bolux = 4.9;
        boxul = 4.9;
        smile = smile+1;
        tiffy = parseFloat(bilance);
        snowy = snowy*2;
    }
    if ((bilance<(tiffy-(snowy*submarine)))&&(bolux>2.1)&&(smile>=2)){
        snowy = snowy*2;
        boxul = 0.9;
        plane = 4.9
        submarine = 4.9;
        smile = smile+1;
        bolux = 1.9;
        tiffy = parseFloat(bilance);
    }
    if ((bilance<(tiffy-(snowy*bolux)))&&(bolux<2.1)){
 	snowy = boon;
        boxul = 6.9;
        plane = 6.9;
        bolux = 2.9;
        submarine = 2.9;
        smile = 0;
        tiffy = ((Math.floor(bilance/tens))*tens);
    }
    if (bilance<boon) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=1000) {
       console.log(""winner winner chicken dinner"");
       return;
   }
morph = parseFloat(matrix);
bear = true;
}}
if (bear){
$('#pct_chance').val(49.5);
$('#pct_bet').val(((snowy*1).toFixed(8)));
$('#a_lo').click();
bear = false;
}
setTimeout(() => dobet(), 350)
} 
dobet();"
2VcP5iHZ,auto dome cc tweaked turtle script,Ziro-00,Lua,Friday 16th of February 2024 05:24:02 PM CDT,"function colocar()
	turtle.place()
	turtle.back()
end

function down()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnRight()
end

function up()
	turtle.turnRight()
	turtle.forward()
	turtle.turnLeft()
end

function ya()
	turtle.down()
	turtle.place()
end

turtle.refuel(all)
turtle.select(3)
for i=1,3 do
	colocar()
end

up()

for i=1,3 do
	colocar()
end

down()

for i=1,2 do
	colocar()
end

down()

for i=1,3 do
	colocar()
end

for i=1,6 do
	down()
	colocar()
end

down()

for i=1,3 do
	ya()
end

turtle.back()
down()

for i=1,2 do
	ya()
end

turtle.back()
down()

for i=1,3 do
	ya()
end

down()
turtle.forward()

for i=1,3 do
	ya()
end"
NtwUkFrF,Untitled,D3ENNY,Python,Friday 16th of February 2024 05:22:50 PM CDT,"@app.on_message(filters.regex(r'^[\.\!\&\/]search', re.IGNORECASE) & filters.text)
async def search(bot, message):
    print('---search---')
    GOOGLE_URL='https://www.google.com/search?q='
    DUCK_URL='https://duckduckgo.com/?q='
    txt = re.sub(r'^[\.\!\&\/]search','', message.text.lower()).strip()
    url_txt = txt.replace(' ', '+')
    BTN = [
        [
            keybutton('DUCKDUCKGO', url=DUCK_URL+url_txt),
            keybutton('GOOGLE', url=GOOGLE_URL+url_txt)
        ]
    ]
    try:
        await message.reply(
            text=jFile[""message""][""caption""][""search""][""output""] % (txt, emoji.BACKHAND_INDEX_POINTING_DOWN),
            reply_markup=keymarkup(BTN),
            disable_web_page_preview = True
        )
    except:
        await bot.send_message(message.chat.id, jFile[""message""][""error""][""search""][""invalid_url_error""])

    print('---end search---')"
a79EtGzB,Email avec Velocity,TerenceFerut,Java,Friday 16th of February 2024 04:57:50 PM CDT,"import org.apache.commons.mail.HtmlEmail;
import org.apache.velocity.app.VelocityEngine;
import org.apache.velocity.Template;
import org.apache.velocity.VelocityContext;
import org.apache.velocity.runtime.RuntimeConstants;
import org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader;

import java.io.StringWriter;

public class SendEmailWithTemplate {
    public static void main(String[] args) throws Exception {
        // Configuration de Velocity
        VelocityEngine ve = new VelocityEngine();
        ve.setProperty(RuntimeConstants.RESOURCE_LOADER, ""classpath"");
        ve.setProperty(""classpath.resource.loader.class"", 
                       ClasspathResourceLoader.class.getName());
        ve.init();
        
        // Chargement du template
        Template t = ve.getTemplate(""templates/emailTemplate.vm"");
        
        // Contexte Velocity
        VelocityContext context = new VelocityContext();
        context.put(""name"", ""John Doe"");
        
        // Fusion du template avec les données
        StringWriter writer = new StringWriter();
        t.merge(context, writer);
        
        // Envoi de l'email
        HtmlEmail email = new HtmlEmail();
        email.setHostName(""smtp.example.com"");
        email.setSmtpPort(587);
        email.setAuthenticator(new DefaultAuthenticator(""username"", ""password""));
        email.setSSLOnConnect(true);
        email.setFrom(""user@example.com"");
        email.addTo(""recipient@example.com"");
        email.setSubject(""Test Velocity Mail"");
        email.setHtmlMsg(writer.toString()); 
        // Utilisation du résultat de Velocity comme corps de l'email
        email.send();
        System.out.println(""Email sent successfully!"");
    }
}
"
hXE4PzWm,handbreaker i think fixed snowybot,coinwalk,JavaScript,Friday 16th of February 2024 04:54:45 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var boon = 0.0001;
var tens = (boon*10);
var sevens = (boon*6.9);
var eights = (boon*7.9);
var morph = 0;
var blast = 0; 
var cool = false;
var matrix = 0;
var bear = true;
var plane = 6.9;
var submarine = 2.9;
var planetwo = 6.9;
var submarinetwo = 2.9;
var smile = 0;
var smiley = 0;
var fart = 3;
var tiffy = ((Math.floor(original/tens))*tens);
var james = ((Math.floor(original/tens))*tens);
var snowy = boon;
var bilance = original;
var good = (((bilance-original)*1).toFixed(8));
 
function dobet(){
if (!bear){
matrix = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if (matrix>morph){
bilance = document.getElementById('pct_balance').value;
good = (((bilance-original)*1).toFixed(8));
console.log(""profit"");
console.log(good);
    if ((bilance>(tiffy+(snowy*plane)))&&(smile<2)&&(bilance<(tiffy+(snowy*(plane+1))))){
        snowy = snowy*2;
        plane = 4.9
        planetwo = 4.9
        submarine = 4.9
        submarinetwo = 1.9;
        smile = smile+1;
        tiffy = parseFloat(bilance);
    }
    if ((bilance>(tiffy+(snowy*plane)))&&(planetwo>2.1)&&(smile>=2)){
        snowy = snowy*2;
        planetwo = 0.9;
        submarinetwo = 1.9;
        plane = 4.9
        submarine = 4.9
        smile = smile+1;
        tiffy = parseFloat(bilance);
    }
    if ((bilance>(tiffy+(snowy*planetwo)))&&(planetwo<2.1)){
 	snowy = boon;
        planetwo = 6.9;
        plane = 6.9;
        submarinetwo = 2.9;
        submarine = 2.9;
        smile = 0;
        smiley = 0;
        tiffy = ((Math.floor(bilance/tens))*tens);
    }
    if ((bilance<(tiffy-(snowy*submarine)))&&(smile<2)&&(bilance>tiffy-(snowy*(submarine+1)))){
        plane = 4.9;
        smile = smile+1;
        submarine = 4.9;
        tiffy = parseFloat(bilance);
        snowy = snowy*2;
    }
    if ((bilance<(tiffy-(snowy*submarine)))&&(submarinetwo>2.1)&&(smile>=2)){
        snowy = snowy*2;
        planetwo = 0.9;
        plane = 4.9
        submarine = 4.9
        smile = smile+1;
        submarinetwo = 1.9;
        tiffy = parseFloat(bilance);
    }
    if ((bilance<(tiffy-(snowy*submarinetwo)))&&(submarinetwo<2.1)){
 	snowy = boon;
        planetwo = 6.9;
        plane = 6.9;
        submarinetwo = 2.9;
        submarine = 2.9;
        smiley = 0;
        smile = 0;
        tiffy = ((Math.floor(bilance/tens))*tens);
    }
    if (bilance<boon) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=1000) {
       console.log(""winner winner chicken dinner"");
       return;
   }
morph = parseFloat(matrix);
bear = true;
}}
if (bear){
$('#pct_chance').val(49.5);
$('#pct_bet').val(((snowy*1).toFixed(8)));
$('#a_lo').click();
bear = false;
}
setTimeout(() => dobet(), 350)
} 
dobet();"
M8re6x8C,Untitled,Rofyda_Elghadban1,C++,Friday 16th of February 2024 04:48:30 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  // #ifndef ONLINE_JUDGE   
  //   freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
  //  #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int n;
  cin>>n;
  vector<int>v(n);
  cin(v);
  int l=0,r=n-1,ans=-1;
  while(l<=r){
    ll sum=0;
    int mid=l+(r-l)/2;
    cout<<""? "";
    cout.flush();
    for(int i=l;i<=mid;i++){
      cout<<v[i]<<"" "";
      cout.flush();
    }
    for(int i=l;i<=mid;i++){
      sum+=v[i];
    }
    int x;
    cin>>x;
    if(x==sum){
      l=mid+1;
    }else{
      ans=mid;
      r=mid-1;
    }
  }
  cout<<ans+1<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  int t;
  cin>>t;
  while(t--){
    solve();
  }
  // solve();
  return 0;
 }"
f8rk0NP8,Torn Chain Warner,XeiDaMoKa,jQuery,Friday 16th of February 2024 04:37:57 PM CDT,"// ==UserScript==
// @name         Torn Chain Warner
// @version      0.1
// @description  Check the timer and apply a flashing shadow based on the time remaining
// @author       XeiDaMoKa
// @match        https://www.torn.com/*
// ==/UserScript==

// jQuery
/* global $ */

// Change colors, times, and audio settings
const settings = {
    color1: { color: 'green', time: '1:45' },
    color2: { color: 'orange', time: '1:00' },
    color3: { color: 'red', time: '0:30' },
    audio: { audioURL: 'https://dl.sndup.net/v6zq/XeiTornMusic.mp3', time: '1:42' } // 1:42 lenght of the music
};






// Elements with visuals glowing
const elements = [
    '#header-root',
    '#sidebarroot',
    '.content-wrapper',
];

// Create an Audio element
let audio = new Audio(settings.audio.audioURL); 

// Check if the sidebar timer (needs change to check if theres at least 10 hits because the timer is always present)
function checkTimer() {
    let timerElement = $("".bar-timeleft___B9RGV"");

    // If the regular timer element is not found, try finding the combat page timer
    if (timerElement.length === 0) {
        timerElement = $("".labelTitle___ZtfnD span span"");
    }

    // If neither timer element is found, stop the script
    if (timerElement.length === 0) {
        return;
    }

    const totalSeconds = parseTime(timerElement.text());
    const audioStartOffset = parseTime(settings.audio.time);

    // Calculate the remaining time before the audio should start
    const remainingTime = totalSeconds - audioStartOffset;

    // Check if the remaining time is below zero or above 1:42 (lenthgs of the audio), meaning the audio should start now at certain point
    if (remainingTime <= 0) {
        if (audio.paused) {
            audio.currentTime = audioStartOffset - totalSeconds;
            audio.play();
        }
    } else {
        if (!audio.paused) {
            audio.pause();
        }
    }

    // Loop through the colors depending on the timer
    if (totalSeconds > parseTime(settings.color1.time)) {
        changeColor('transparent');
    } else if (totalSeconds > parseTime(settings.color2.time)) {
        changeColor(settings.color1.color);
    } else if (totalSeconds > parseTime(settings.color3.time)) {
        changeColor(settings.color2.color);
    } else {
        changeColor(settings.color3.color);
    }
}


// Visuals Style
function changeColor(color) {
    $('#breathe-animation').remove();

    if (color !== 'transparent') {
        const style = $('<style>')
            .attr('id', 'breathe-animation')
            .html(`
                @keyframes breathe {
                    0% { box-shadow: 0 0 5px ${color}; }
                    20% { box-shadow: 0 0 25px ${color}, 0 0 25px ${color}; }
                    50% { box-shadow: 0 0 5px ${color}; }
                    80% { box-shadow: 0 0 25px ${color}, 0 0 25px ${color}; }
                    100% { box-shadow: 0 0 5px ${color}; }
                }
            `);

        // Breathing animation
        $('head').append(style);
        for (const selector of elements) {
            $(selector).css('animation', 'breathe 5s infinite');
        }
    } else {
        // Remove transparent animation above 1:42
        for (const selector of elements) {
            $(selector).css('animation', 'none');
        }
    }
}

// Function to parse mm:ss into seconds
function parseTime(timeStr) {
    var [minutes, seconds] = timeStr.split(':').map(Number);
    return minutes * 60 + seconds;
}

// Check timer
setInterval(checkTimer, 1000);
"
kmYQbdin,HTMLMail,TerenceFerut,Java,Friday 16th of February 2024 04:36:02 PM CDT,"import org.apache.commons.mail.SimpleEmail;

public class SendHTMLEmail {
    public static void main(String[] args) {
        try {
HtmlEmail email = new HtmlEmail();
email.setHostName(""smtp.example.com"");
email.setSmtpPort(587);
email.setAuthenticator(new DefaultAuthenticator(""username"", ""password""));
email.setSSLOnConnect(true);
email.setFrom(""user@example.com"");
email.addTo(""recipient@example.com"");
email.setSubject(""Test HTML Mail"");

// Ajouter du contenu HTML
email.setHtmlMsg(""<html>Le corps de l'email <b>en gras</b> avec une image : <img src=\""cid:image\""></html>"");

// Texte alternatif
email.setTextMsg(""Votre client mail ne supporte pas le HTML."");

// Incorporer une image
String cid = email.embed(new URL(""http://www.example.com/image.jpg""), ""image"");
System.out.println(""Email sent with image ID: "" + cid);

email.send();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
"
wyaUA9f5,SimpleMail,TerenceFerut,Java,Friday 16th of February 2024 04:24:01 PM CDT,"import org.apache.commons.mail.SimpleEmail;

public class SendSimpleEmail {
    public static void main(String[] args) {
        try {
            SimpleEmail email = new SimpleEmail();
            email.setHostName(""smtp.example.com"");
            email.setSmtpPort(587);
            email.setAuthenticator(new DefaultAuthenticator(""username"", ""password""));
            email.setSSLOnConnect(true);
            email.setFrom(""user@example.com"");
            email.addTo(""recipient@example.com"");
            email.setSubject(""Test Mail"");
            email.setMsg(""This is a test mail from Apache Commons Email"");
            email.send();
            System.out.println(""Email sent successfully!"");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
"
KQP7G430,ffmpeg-v4l2-request-git,Goodevil95,Bash,Friday 16th of February 2024 04:10:12 PM CDT,"# Maintainer: Eric Woudstra <ericwouds AT gmail DOT com>

# Contributor: Yatao Li
# Contributor: Maxime Gauduin <alucryd@archlinux.org>
# Contributor: Bartłomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Ionut Biru <ibiru@archlinux.org>
# Contributor: Tom Newsom <Jeepster@gmx.co.uk>
# Contributor: Paul Mattal <paul@archlinux.org>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - use -fPIC in host cflags for v7/v8 to fix print_options.c compile
#  - remove makedepends on ffnvcodec-headers, remove --enable-nvenc, --enable-nvdec
#  - remove depends on aom, remove --enable-libaom
#  - remove depends on intel-media-sdk, remove --enable-libmfx
#  - remove depends on vmaf, remove --enable-vmaf
#  - remove depends on rav1e, remove --enable-librav1e
#  - remove depends on svt-av1, remove --enable-libsvtav1
#  - remove --enable-lto

pkgname=ffmpeg-v4l2-request-git
# pkgname=ffmpeg
_srcname=FFmpeg
_version='6.1.1'
pkgver=6.1.1.r112629.71a1f3f
pkgrel=1
epoch=2
pkgdesc='FFmpeg with v4l2-request and drmprime'
arch=('armv7h' 'aarch64')
url=https://ffmpeg.org/
license=(GPL3)
depends=(
  alsa-lib
  bzip2
  fontconfig
  fribidi
  gmp
  gnutls
  gsm
  jack
  lame
  libass.so
  libavc1394
  libbluray.so
  libbs2b.so
  libdav1d.so
  libdrm
  libfreetype.so
  libgl
  libiec61883
  libjxl.so
  libmodplug
  libopenmpt.so
  libpulse
  libraw1394
  librsvg-2.so
  libsoxr
  libssh
  libtheora
  libva.so
  libva-drm.so
  libva-x11.so
  libvdpau
  libvidstab.so
  libvorbisenc.so
  libvorbis.so
  libvpx.so
  libvulkan.so
  libwebp
  libx11
  libx264.so
  libx265.so
  libxcb
  libxext
  libxml2
  libxv
  libxvidcore.so
  libzimg.so
  ocl-icd
  opencore-amr
  openjpeg2
  opus
  sdl2
  speex
  srt
  v4l-utils
  xz
  zlib
)
makedepends=(
  amf-headers
  avisynthplus
  clang
  git
  ladspa
  linux-api-headers
  mesa
  nasm
  opencl-headers
  vulkan-headers
)
optdepends=(
  'avisynthplus: AviSynthPlus support'
  'ladspa: LADSPA filters'
)
provides=(
  libavcodec.so
  libavdevice.so
  libavfilter.so
  libavformat.so
  libavutil.so
  libpostproc.so
  libswresample.so
  libswscale.so
  ffmpeg)
conflicts=(
  ffmpeg
)
source=(
  'git+https://github.com/Kwiboo/FFmpeg#branch=v4l2-request-n'$_version
)
sha256sums=(
  SKIP
)

pkgver() {
  cd ${_srcname}
  printf '%s.r%s.%s' ""$_version"" ""$(git rev-list --count HEAD)"" ""$(git rev-parse --short=7 HEAD)""
}

build() {
  cd ${_srcname}

  [[ $CARCH == ""armv7h"" || $CARCH == ""aarch64"" ]] && CONFIG='--host-cflags=""-fPIC""'
  [[ $CARCH == ""armv6h"" || $CARCH == 'arm' ]] && CONFIG='--extra-libs=""-latomic""'

  ./configure \
    --prefix=/usr \
    --disable-debug \
    --disable-static \
    --disable-stripping \
    --enable-amf \
    --enable-avisynth \
    --enable-cuda-llvm \
    --enable-fontconfig \
    --enable-gmp \
    --enable-gnutls \
    --enable-gpl \
    --enable-ladspa \
    --enable-libass \
    --enable-libbluray \
    --enable-libbs2b \
    --enable-libdav1d \
    --enable-libdrm \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libgsm \
    --enable-libiec61883 \
    --enable-libjack \
    --enable-libjxl \
    --enable-libmodplug \
    --enable-libmp3lame \
    --enable-libopencore_amrnb \
    --enable-libopencore_amrwb \
    --enable-libopenjpeg \
    --enable-libopenmpt \
    --enable-libopus \
    --enable-libpulse \
    --enable-librsvg \
    --enable-libsoxr \
    --enable-libspeex \
    --enable-libsrt \
    --enable-libssh \
    --enable-libtheora \
    --enable-libv4l2 \
    --enable-libvidstab \
    --enable-libvorbis \
    --enable-libvpx \
    --enable-libwebp \
    --enable-libx264 \
    --enable-libx265 \
    --enable-libxcb \
    --enable-libxml2 \
    --enable-libxvid \
    --enable-libzimg \
    --enable-opencl \
    --enable-opengl \
    --enable-shared \
    --enable-version3 \
    --enable-vulkan $CONFIG \
    \
    --arch=$CARCH \
    --enable-v4l2_m2m \
    --enable-v4l2-request \
    --enable-libudev \
    --enable-omx \
    --enable-pic \
    --enable-neon \
    $CONFIG

  make
  make tools/qt-faststart
  make doc/ff{mpeg,play}.1
}

package() {
  cd ${_srcname}

  make DESTDIR=""${pkgdir}"" install install-man
  install -Dm 755 tools/qt-faststart ""${pkgdir}""/usr/bin/
}"
RjrW6gj2,System registro/login,smcspals,C++,Friday 16th of February 2024 03:10:04 PM CDT,"//By Kast

		case DIALOG_REGISTRO:
        {
            if(!response)
                return Kick(playerid);

            if(strlen(inputtext) < 4 || strlen(inputtext) > 20)
            {
                new string[300];
                format(string, sizeof string, ""{FFFFFF}Olá¡, %s.\n{FFFFFF}Bem vindo ao nosso servidor!\n{FFFFFF}Status: {FFCC00}Não registrado\n\n{FFFFFF}Digite sua senha abaixo para continuar\n{FFFFFF}o registro:"", Nome(playerid));
                ShowPlayerDialog(playerid, DIALOG_REGISTRO, DIALOG_STYLE_PASSWORD, ""Senha incorreta"", string, ""Ok"", ""Sair"");
            }
            else
            {
                new query[80];
                mysql_format(Conexao, query, sizeof query, ""INSERT INTO `usuarios`(`Nome`,`Senha`) VALUES ('%s', '%s')"", Nome(playerid), inputtext);
                mysql_tquery(Conexao, query, ""RegisterAccount"", ""d"", playerid);
            }
        }
        case DIALOG_LOGIN:
        {
            if(response)
            {
                if(isnull(inputtext))
                {
                    new string[300];
                    format(string, sizeof string, ""{FFFFFF}Olá, %s.\n{FFFFFF}Status: {FFCC00}Registrado\n{FFFFFF}Bem vindo de volta!\n\n{FFFFFF}Digite sua senha corretamente para\n{FFFFFF}logar normalmente:"", Nome(playerid));
                    ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, ""Senha incorreta"", string, ""Ok"", ""Sair"");
    				return true;
                }
                else if(strlen(inputtext) < 4 || strlen(inputtext) > 20)
                {
                    new string[300];
                    format(string, sizeof string, ""{FFFFFF}Olá, %s.\n{FFFFFF}Status: {FFCC00}Registrado\n{FFFFFF}Bem vindo de volta!\n\n{FFFFFF}Digite sua senha corretamente para\n{FFFFFF}logar normalmente:"", Nome(playerid));
                    ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, ""Senha incorreta"", string, ""Ok"", ""Sair"");
                    Tentativas[playerid] ++;
                    return true;
                }
                else if(!strcmp(PlayerInfo[playerid][pSenha], inputtext, false, 20))
                {
                    new query[300];
                    mysql_format(Conexao, query, sizeof(query), ""SELECT * FROM usuarios WHERE Nome = '%s'"", PlayerInfo[playerid][pNome]);
                    mysql_tquery(Conexao, query, ""LoginAccount"", ""d"", playerid);
                }
                else
                {
                    if(Tentativas[playerid] == 2)
                    {
                        SendClientMessage(playerid, COLOR_GREEN, ""AVISO: Você errou a senha e foi kickado!"");
                        Tentativas[playerid] = 0;
                        Kick(playerid);
                        return true;
                    }
                    new string[300];
                    format(string, sizeof string, ""{FFFFFF}Olá, %s.\n{FFFFFF}Status: {FFCC00}Registrado\n{FFFFFF}Bem vindo de volta!\n\n{FFFFFF}Digite sua senha corretamente para\n{FFFFFF}logar normalmente:"", Nome(playerid));
                    ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, ""Senha incorreta"", string, ""Ok"", ""Sair"");
                    Tentativas[playerid]++;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, ""AVISO: Você não digitou a senha e foi kickado!"");
                Kick(playerid);
            }
        }"
gxxmAx6b,snake.c,joric,C,Friday 16th of February 2024 02:23:14 PM CDT,"//omg teh rule snake by joric, 2008
//win: cl snake.cpp /link glut32.lib | penguin: gcc snake.cpp -lglut

#include <stdlib.h>
#include <GL/glut.h>

float zoom = 35.0f;
float rotx = 45.0f;
float roty = 0.001f;
float tx = 0;
float ty = 0;
int lastx = 0;
int lasty = 0;
unsigned char Buttons[3] = { 0 };

const int w = 20;
const int h = 20;

int data[h][w];

#define W 640
#define H 480
#define FOOD -1

int cx, cy, dx, dy, timerrate, items, level, length;

void display()
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	glLoadIdentity();

	glTranslatef(0, 0, -zoom);
	glTranslatef(tx, ty, 0);
	glRotatef(rotx, 1, 0, 0);
	glRotatef(roty, 0, 1, 0);

	float c1[] = { 1, 1, 0 };
	float c2[] = { 1, 0, 0 };

	glDisable(GL_LIGHTING);

	// draw grid
	{
		glColor3f(0.2f, 0.2f, 0.2f);
		glBegin(GL_LINES);
		for (int i = -w / 2; i <= w / 2; ++i)
		{
			glVertex3f(i, -0.5f, -w / 2);
			glVertex3f(i, -0.5f, w / 2);
		}

		for (int j = -h / 2; j <= h / 2; ++j)
		{
			glVertex3f(h / 2, -0.5f, j);
			glVertex3f(-h / 2, -0.5f, j);
		}
		glEnd();
	}

	glEnable(GL_LIGHTING);

	//draw level
	for (int i = 0; i < h; i++)
	{
		for (int j = 0; j < w; j++)
		{
			float x = i - w / 2 + 0.5f;
			float y = j - h / 2 + 0.5f;

			glPushMatrix();
			glTranslatef(y, 0, x);

			int n = data[i][j];

			if (n > 0)
			{
				glLightfv(GL_LIGHT0, GL_AMBIENT, c1);
				glLightfv(GL_LIGHT0, GL_DIFFUSE, c1);
			}

			if (n == FOOD)
			{
				glLightfv(GL_LIGHT0, GL_AMBIENT, c2);
				glLightfv(GL_LIGHT0, GL_DIFFUSE, c2);
			}

			if (n != 0)
				//glutSolidCube(1);
				glutSolidSphere(0.5, 20, 10);
			//glutSolidTeapot(0.5);

			glPopMatrix();
		}
	}

	glutSwapBuffers();
}

void loadlevel(int level)
{
	for (int i = 0; i < h; i++)
	{
		for (int j = 0; j < w; j++)
		{
			data[i][j] = 0;
		}
	}
}

void reset()
{
	level = 1;
	loadlevel(level);
	length = 1;
	items = 0;
	cx = w / 2;
	cy = h / 2;
	dx = 0;
	dy = 0;
	timerrate = 125;
}

void tick(int value)
{
	cx += dx;
	cy += dy;

	if (cx >= w)
		cx = 0;
	if (cx < 0)
		cx = w - 1;

	if (cy >= h)
		cy = 0;
	if (cy < 0)
		cy = h - 1;

	for (int i = 0; i < h; i++)
	{
		for (int j = 0; j < w; j++)
		{
			if (data[i][j] > 0)
				data[i][j]--;
		}
	}

	if (data[cy][cx] == FOOD)
	{
		length++;
		items--;
	}
	else if (data[cy][cx] != 0 && (dx != 0 || dy != 0))
	{
		reset();
	}

	data[cy][cx] = length;

	if (items == 0)
	{
		int x, y;
		int i = 0;
		do
		{
			x = rand() % w;
			y = rand() % h;
			i++;
		}
		while (data[y][x] != 0 && i < 5);

		data[y][x] = FOOD;

		items++;
	}

	glutTimerFunc(timerrate, tick, 1);
	glutPostRedisplay();
}

void reshape(int w, int h)
{
	if (w == 0)
		h = 1;

	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(45, (float) w / h, 0.1, 100);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void motion(int x, int y)
{
	int diffx = x - lastx;
	int diffy = y - lasty;
	lastx = x;
	lasty = y;

	if (Buttons[2])
	{
		zoom -= (float) 0.05f * (diffx - diffy);
	}
	else if (Buttons[0])
	{
		rotx += (float) 0.5f * diffy;
		roty += (float) 0.5f * diffx;
	}
	else if (Buttons[1])
	{
		tx += (float) 0.05f * diffx;
		ty -= (float) 0.05f * diffy;
	}
	glutPostRedisplay();
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key)
	{
		case 27:
			exit(0);
			break;
	}
}

void special(int key, int x, int y)	// Create Special Function (required for arrow keys)
{
	switch (key)
	{
		case GLUT_KEY_UP:
			dx = 0;
			dy = -1;
			break;
		case GLUT_KEY_DOWN:
			dx = 0;
			dy = 1;
			break;
		case GLUT_KEY_LEFT:
			dx = -1;
			dy = 0;
			break;
		case GLUT_KEY_RIGHT:
			dx = 1;
			dy = 0;
			break;
	}
}

void mouse(int b, int s, int x, int y)
{
	lastx = x;
	lasty = y;
	switch (b)
	{
		case GLUT_LEFT_BUTTON:
			Buttons[0] = ((GLUT_DOWN == s) ? 1 : 0);
			break;
		case GLUT_MIDDLE_BUTTON:
			Buttons[1] = ((GLUT_DOWN == s) ? 1 : 0);
			break;
		case GLUT_RIGHT_BUTTON:

			Buttons[2] = ((GLUT_DOWN == s) ? 1 : 0);
			break;
	}
	glutPostRedisplay();
}

int main(int argc, char **argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowPosition((glutGet(GLUT_SCREEN_WIDTH) - W) / 2, (glutGet(GLUT_SCREEN_HEIGHT) - H) / 2);
	glutInitWindowSize(W, H);
	glutCreateWindow(argv[0]);
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutKeyboardFunc(keyboard);
	glutSpecialFunc(special);
	glutMouseFunc(mouse);
	glutMotionFunc(motion);
	reset();
	glEnable(GL_DEPTH_TEST);
	glShadeModel(GL_SMOOTH);
	glEnable(GL_LIGHTING);
	glEnable(GL_LIGHT0);
	glutTimerFunc(timerrate, tick, 1);
	glutMainLoop();
	return 0;
}"
hxcHjg5t,getter,PetersonE1,Lua,Friday 16th of February 2024 02:00:33 PM CDT,"shell.run(""pastebin"", ""get"", ""XjamadNs"", ""invSort.lua"")
shell.run(""pastebin"", ""get"", ""ik8za4XU"", ""push.lua"")
shell.run(""pastebin"", ""get"", ""BVWXmVCH"", ""pull_list.lua"")
shell.run(""pastebin"", ""get"", ""4T2iUCRv"", ""list_items.lua"")
shell.run(""pastebin"", ""get"", ""wXTdvqrr"", ""pull.lua"")
shell.run(""pastebin"", ""get"", ""rkDdJX4V"", ""list_scoller.lua"")
shell.run(""pastebin"", ""get"", ""2qDuD4RC"", ""fileLib.lua"")
shell.run(""pastebin"", ""get"", ""ymj2dwcM"", ""clearMonitor.lua"")"
rkDdJX4V,list_scroller,PetersonE1,Lua,Friday 16th of February 2024 01:58:37 PM CDT,"ls = require(""list_items"")
invSort = require(""invSort"")
push = require(""push"")

scroller_id = peripheral.wrap(""scroller_4"")
scroller_count = peripheral.wrap(""scroller_5"")
scroller_offset = peripheral.wrap(""scroller_3"")

function toArray(self)
	local array = {}
	for slot, item in pairs(self) do
		table.insert(array, {slot, item.name, item.count})
	end
	return array
end

function pull_item()
	list = ls.getPrettyList(""name"")
	itemToGet = list[scroller_id.getValue() + scroller_offset.getValue() * 10][1]
	count = tonumber(scroller_count.getValue())

	for _, vault in ipairs(invSort.vaults) do
	    list = toArray(peripheral.call(vault, ""list""))
	    table.sort(list, function(a, b) return a[3] < b[3] end)
	    for _, item in pairs(list) do
			if item[2] == itemToGet then
				tempCount = count
				if item[3] < count then
					tempCount = item[3]
				end
				invSort.output_chest.pullItems(vault, item[1], tempCount)
				count = count - tempCount
			end
		end
	end
end

ls.doDisplay(""name"")

os.startTimer(5)

while true do
	local eventData = {os.pullEvent()}
	local event = eventData[1]
	if event == ""scroller_changed"" then
		if eventData[2] == ""scroller_3"" then
			ls.doDisplay(""name"")
		end
	end
	if event == ""redstone"" then
		if rs.getInput(""left"") then
			pull_item()
			ls.doDisplay(""name"")
		end
	end
	if event == ""timer"" then
		push.pushItems()
		ls.doDisplay(""name"")
		os.startTimer(5)
	end
end
"
wXTdvqrr,pull,PetersonE1,Lua,Friday 16th of February 2024 01:58:19 PM CDT,"local invSort = require(""invSort"")

args = {...}

function toArray(self)
	local array = {}
	for slot, item in pairs(self) do
		table.insert(array, {slot, item.name, item.count})
	end
	return array
end

itemToGet = args[1]
count = tonumber(args[2])

for _, vault in ipairs(invSort.vaults) do
    list = toArray(peripheral.call(vault, ""list""))
    table.sort(list, function(a, b) return a[3] < b[3] end)
    for _, item in pairs(list) do
		if item[2] == itemToGet then
			tempCount = count
			if item[3] < count then
				tempCount = item[3]
			end
			invSort.output_chest.pullItems(vault, item[1], tempCount)
			count = count - tempCount
		end
	end
end"
ymj2dwcM,clearMonitor,PetersonE1,Lua,Friday 16th of February 2024 01:57:26 PM CDT,"m = peripheral.wrap(""right"")
m.clear()
"
2qDuD4RC,fileLib,PetersonE1,Lua,Friday 16th of February 2024 01:57:08 PM CDT,"-- see if the file exists
function file_exists(file)
  local f = io.open(file, ""rb"")
  if f then f:close() end
  return f ~= nil
end

-- get all lines from a file, returns an empty 
-- list/table if the file does not exist
function lines_from(file)
  if not file_exists(file) then return {} end
  local lines = {}
  for line in io.lines(file) do 
    lines[#lines + 1] = line
  end
  return lines
end

function write_to(path, message)
    file = io.open(path, ""w"")
    file:write(message)
    file:close()
end

function append_to(path, message)
	file = io.open(path, ""a"")
	file:write(message)
	file:close()
end

return { file_exists = file_exists, lines_from = lines_from, write_to = write_to, append_to = append_to }

-- Extra function Copilot generated, good for reference
--function split_string(structure)
--	local parsed_structure = {}
--	for _, line in pairs(structure) do
--		local split_line = {}
--		for word in string.gmatch(line, ""%S+"") do
--			table.insert(split_line, word)
--		end
--		table.insert(parsed_structure, split_line)
--	end
--	return parsed_structure
--end"
XjamadNs,invSort,PetersonE1,Lua,Friday 16th of February 2024 01:56:51 PM CDT,"function countTableSize(table)
    local n = 0
    for k, v in pairs(table) do
        n = n + 1
    end
    return n
end

function contains(table, element)
	for _, value in pairs(table) do
		if value.name == element.name then
			return true
		end
	end
	return false
end

vaults = {}
items_list = {}
input_chest = peripheral.find(""minecraft:barrel"")
output_chest = peripheral.find(""minecraft:chest"")

for _, name in pairs(peripheral.getNames()) do
	if peripheral.getType(name) == ""create:item_vault"" then
		table.insert(vaults, name)
	end
end

function getItems()
	items_list = {}
	for _, vault in ipairs(vaults) do
		list = peripheral.call(vault, ""list"")
		for _, item in pairs(list) do
			table.insert(items_list, item)
		end
	end
	return items_list
end

--function getItemsDisplay()
--	local item_list = {}
--	for _, vault in ipairs(vaults) do
--		list = peripheral.call(vault, ""list"")
--		for index, item in pairs(list) do
--			table.insert(item_list, {peripheral.call(vault, ""getItemDetail"", index)[""displayName""], item.count})
--		end
--	end
--	return item_list
--end

getItems()

return { vaults = vaults, input_chest = input_chest, output_chest = output_chest, contains = contains, countTableSize = countTableSize, getItems = getItems}
"
4T2iUCRv,list_items,PetersonE1,Lua,Friday 16th of February 2024 01:56:30 PM CDT,"local invSort = require(""invSort"")

args = {...}

function getPrettyList(sort)
	local list = {}
	for _, item in pairs(invSort.getItems()) do
		added = false
		for _, ex in pairs(list) do
			if ex[1] == item.name then
				ex[2] = ex[2] + item.count
				added = true
				break
			end
		end
		if not added then table.insert(list, {item.name, item.count}) end
	end
	
	if sort == ""name"" then
		table.sort(list, function(a, b) return a[1] < b[1] end)
	elseif sort == ""count"" then
		table.sort(list, function(a, b) return a[2] > b[2] end)
	end
	return list
end

--function getPrettierList(sort)
--	list = {}
--	for _, item in pairs(invSort.getItemsDisplay()) do
--		added = false
--		for _, ex in pairs(list) do
--			if ex[1] == item[1] then
--				ex[2] = ex[2] + item[2]
--				added = true
--				break
--			end
--		end
--		if not added then table.insert(list, item) end
--	end
--
--	if sort == ""name"" then
--		table.sort(list, function(a, b) return a[1] < b[1] end)
--	elseif sort == ""count"" then
--		table.sort(list, function(a, b) return a[2] > b[2] end)
--	end
--	return list
--end

monitor = peripheral.find(""monitor"")
scroller = peripheral.wrap(""scroller_3"")
scroller2 = peripheral.wrap(""scroller_4"")

function doDisplay(type)
	local list = getPrettyList(type)
	for index, item in pairs(list) do
		print(index .. "". "" .. item[1] .. "" x"" .. item[2])
	end
	if monitor then
  sX, sY = monitor.getSize()
		monitor.setBackgroundColour(colours.black)
		startIndex = 0
		if scroller then
			scroller.setLimit(#list / 10)
			startIndex = scroller.getValue() * 10
			if scroller2 then scroller2.setLimit(sY) end
		end
  height = #list / startIndex
  height = math.ceil(sY / height)
		monitor.clear()
		monitor.setCursorPos(1, 1)
		for index, item in pairs(list) do
			if (index >= startIndex) then
				monitor.write((index - startIndex) .. "". "" .. item[1] .. "" x"" .. item[2])
				x, y = monitor.getSize()
				a, b = monitor.getCursorPos()
				spaces = x - a + 1
    if b == height then spaces = spaces - 1 end
				for i = 1, spaces do
					monitor.write("" "")
				end
    if b == height then
     temp = monitor.getBackgroundColour()
     monitor.setBackgroundColour(colours.lightGrey)
     monitor.write("" "")
     monitor.setBackgroundColour(temp)
    end
				monitor.setCursorPos(1, index - startIndex + 1)
    if (monitor.getBackgroundColour() == colours.black) then
					monitor.setBackgroundColour(colours.grey)
				else
					monitor.setBackgroundColour(colours.black)
				end
			end
		end
	end
end

if not debug.getinfo(2) then
	doDisplay(args[1])
end

return { getPrettyList = getPrettyList, doDisplay = doDisplay}
"
wBLR1D9Q,Untitled,ShinyEagle77,Java,Friday 16th of February 2024 01:55:51 PM CDT,"package com.clickhouse;

import io.r2dbc.spi.ConnectionFactories;
import io.r2dbc.spi.ConnectionFactory;
import io.r2dbc.spi.ConnectionFactoryOptions;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class MainClient
{
    public static void main(String[] args)
    {
        Path filePath = Paths.get(""C:/Users/Kirill/Desktop/USDTRON-1m-2024-02-04.csv"");
        List<String> data = new ArrayList<>();
        try
        {
            data = Files.lines(filePath).collect(Collectors.toList());
        } catch (IOException e)
        {
            throw new RuntimeException(e);
        }

        ConnectionFactoryOptions options = ConnectionFactoryOptions.builder()
                .option(ConnectionFactoryOptions.DRIVER, ""clickhouse"")
                .option(ConnectionFactoryOptions.PROTOCOL, ""http"")
                .option(ConnectionFactoryOptions.HOST, ""hswcknxezk.eu-central-1.aws.clickhouse.cloud"")
                .option(ConnectionFactoryOptions.PORT, 8443)
                .option(ConnectionFactoryOptions.USER, ""default"")
                .option(ConnectionFactoryOptions.PASSWORD, ""N.iyf5aB3MKWM"")
                .option(ConnectionFactoryOptions.DATABASE, ""btc_data_db"")
                .option(ConnectionFactoryOptions.SSL, true)
                .build();
        ConnectionFactory connectionFactory = ConnectionFactories
                .get(options);

        Mono.from(connectionFactory.create())
                .flatMapMany(connection ->
                        Flux.from(connection.createStatement(""SELECT * FROM btc_data"")
                                        .execute())
                                .flatMap(result -> result.map((row, rowMetadata) ->
                                        String.format(""data_id: %s, open_time: %s, open_price: %.2f, high_price: %.2f, "" +
                                                        ""low_price: %.2f, volume: %d, close_time: %s, quote_volume: %.2f, "" +
                                                        ""count: %d, taker_buy_volume: %d, taker_buy_quote_volume: %.2f, "" +
                                                        ""ignore_column: %d"",
                                                row.get(""data_id"", String.class),
                                                row.get(""open_time"", LocalDateTime.class),
                                                row.get(""open_price"", Float.class),
                                                row.get(""high_price"", Float.class),
                                                row.get(""low_price"", Float.class),
                                                row.get(""close_price"", Float.class),
                                                row.get(""volume"", Integer.class),
                                                row.get(""close_time"", LocalDateTime.class),
                                                row.get(""quote_volume"", Float.class),
                                                row.get(""count"", Integer.class),
                                                row.get(""taker_buy_volume"", Integer.class),
                                                row.get(""taker_buy_quote_volume"", Float.class),
                                                row.get(""ignore_column"", Integer.class))))
                                .doOnNext(System.out::println)
                                .onErrorResume(throwable ->
                                {
                                    throwable.printStackTrace();
                                    return Mono.empty();
                                }))
                .subscribe();

        List<String> finalData = data;
        Mono.from(connectionFactory.create())
                .flatMapMany(connection ->
                    Flux.fromIterable(finalData) // Преобразование списка строк в поток
                            .flatMap(line -> {
                                String[] values = line.split("",""); // Разделение строки по запятым
                                Instant instant = Instant.ofEpochMilli(Long.parseLong(values[0]));
                                Instant instantCLose = Instant.ofEpochMilli(Long.parseLong(values[6]));

                                LocalDateTime localDateTime = LocalDateTime.ofInstant(instant, ZoneId.systemDefault());
                                LocalDateTime localDateTimeClose = LocalDateTime.ofInstant(instantCLose, ZoneId.systemDefault());

                                int intValue;

                                if (values[5].contains(""."") && values[5].matches(""[0-9]*\\.0+"")) {
                                    intValue = Integer.parseInt(values[5].split(""\\."")[0]);
                                } else {
                                    intValue = (int) Double.parseDouble(values[5]);
                                }

                                int intValueTake;

                                if (values[9].contains(""."") && values[9].matches(""[0-9]*\\.0+"")) {
                                    intValueTake = Integer.parseInt(values[9].split(""\\."")[0]);
                                } else {
                                    intValueTake = (int) Double.parseDouble(values[9]);
                                }

                                return connection
                                        .createStatement(""INSERT INTO btc_data VALUES (:open_time, :open_price, :high_price, :low_price, :close_price, "" +
                                                "":volume, :close_time, :quote_volume, :count, :taker_buy_volume, :taker_buy_quote_volume, :ignore_column)"")
                                        .bind(""open_time"", localDateTime)
                                        .bind(""open_price"", Float.parseFloat(values[1]))
                                        .bind(""high_price"", Float.parseFloat(values[2]))
                                        .bind(""low_price"", Float.parseFloat(values[3]))
                                        .bind(""close_price"", Float.parseFloat(values[4]))
                                        .bind(""volume"", intValue)
                                        .bind(""close_time"", localDateTimeClose)
                                        .bind(""quote_volume"", Float.parseFloat(values[7]))
                                        .bind(""count"", Integer.parseInt(values[8]))
                                        .bind(""taker_buy_volume"", intValueTake)
                                        .bind(""taker_buy_quote_volume"", Float.parseFloat(values[10]))
                                        .bind(""ignore_column"", Integer.parseInt(values[11]))
                                        .execute();
                                })
                )
                .subscribe();
    }
}
"
KZSd9zrr,Dela,SCRIPTERBEN,Lua,Friday 16th of February 2024 12:20:11 PM CDT,"if game:GetService(""CoreGui""):FindFirstChild(""Dankity"") then
game:GetService(""CoreGui"").Dankity:Destroy()
end


-//- VARIABLES -\\-

Dankity = Instance.new(""ScreenGui"", game:GetService(""Players"").LocalPlayer.PlayerGui)
Main = Instance.new(""Frame"", Dankity)
Header = Instance.new(""Frame"", Main)
Text = Instance.new(""TextLabel"", Header)
Username = Instance.new(""TextBox"", Main)
Kill = Instance.new(""TextButton"", Main)
Power = Instance.new(""TextButton"", Main)
LocalPlayer = game:GetService(""Players"").LocalPlayer
Backpack = LocalPlayer.Backpack
Character = LocalPlayer.Character
Humanoid = Character.Humanoid

-//- PROPERTIES -\\-

Dankity.Name = ""Dankity""
Dankity.ResetOnSpawn = false

Main.Name = ""Main""
Main.BackgroundColor3 = Color3.new(0,0,0)
Main.BorderSizePixel = 0
Main.Active = true
Main.Draggable = true
Main.Selectable = true
Main.Position = UDim2.new(0.321995467, 0, 0.22910662, 0)
Main.Size = UDim2.new(0, 471, 0, 375)

Header.Name = ""Header""
Header.BackgroundColor3 = Color3.new(0.560784,0,0)
Header.BorderSizePixel = 0
Header.Position = UDim2.new(0, 0, 0.0613333359, 0)
Header.Size = UDim2.new(0, 471, 0, 64)

Text.Name = ""Text""
Text.BackgroundColor3 = Color3.new(1, 1, 1)
Text.BackgroundTransparency = 1
Text.Position = UDim2.new(0.165605083,0,0)
Text.Size = UDim2.new(0, 315, 0, 50)
Text.Font = Enum.Font.SourceSansBold
Text.Text = ""Dezex Destroyer, Made by Soul1ess#1651""
Text.TextColor3 = Color3.new(1, 1, 1)
Text.TextSize = 30

Username.Name = ""Username""
Username.BackgroundColor3 = Color3.new(0.560784,0.0)
Username.BorderSizePixel = 0
Username.Position = UDim2.new(0.17622079, 0, 0.346666723, 0)
Username.Size = UDim2.new(0, 305, 0, 50)
Username.Font = Enum.Font.SourceSansSemibold
Username.Text = ""Username""
Username.TextColor3 = Color3.new(1, 1, 1)
Username.TextSize = 20

Kill.Name = ""Damage/Kill""
Kill.BackgroundColor3 = Color3.new(0.560784,0,0)
Kill.BorderSizePixel = 0
Kill.Position = UDim2.new(0.282377899, 0, 0.519999981, 0)
Kill.Size = UDim2.new(0, 200, 0, 50)
Kill.Font = Enum.Font.SourceSansSemibold
Kill.Text = ""Damage/Kill""
Kill.TextColor3 = Color3.new(1, 1, 1)
Kill.TextSize = 20
Kill.TextWrapped = true

Power.Name = ""Power""
Power.BackgroundColor3 = Color3.new(0.560784,0,0)
Power.BorderSizePixel = 0
Power.Position = UDim2.new(0.282377899, 0, 0.685333312, 0)
Power.Size = UDim2.new(0, 200, 0, 50)
Power.Font = Enum.Font.SourceSansSemibold
Power.Text = ""Power, Click 2 times for more!""
Power.TextColor3 = Color3.new(1, 1, 1)
Power.TextSize = 20
Power.TextWrapped = true

-//- FUNCTIONS -\\-

function GetPlayers(Name)
if Name:lower() == ""me"" then
return {Player}
elseif Name:lower() == ""all"" then
return game:GetService(""Players""):GetPlayers()
elseif Name:lower() == ""others"" then
local t = {}
for i, v in pairs(game:GetService(""Players""):GetPlayers()) do
if v.Name ~= Player.Name then
t[#t+1] = v
end
end
return t
else
local t = {}
for i, v in pairs(game:GetService(""Players""):GetPlayers()) do
if v.Name:sub(1, #Name):lower() == Name:lower() then
t[#t+1] = v
end
end
return t
end
end

-//- SCRIPTING -\\-

Kill.MouseButton1Click:Connect(function()
for _,v in pairs(Backpack:GetChildren()) do
Humanoid:EquipTool(v)
end

local Plrs = GetPlayers(Username.Text)
for i,v in pairs(Plrs) do
for i = 1 , 10 do

if Character:FindFirstChild(""sword"") then

Character.sword.Handle.dmg.RemoteEvent:FireServer(game:GetService(""Workspace"")[v.Name].Humanoid, 99999999999999999999999999999999999999999)
end
end
end
end)

Power.MouseButton1Click:Connect(function()
local Event = game:service'Players'.LocalPlayer.Character.sword.Handle.up.RemoteEvent
game:service'RunService'.RenderStepped:Connect(function()
for i = 1, 5 do
Event:FireServer()
end
end)
if Character:FindFirstChild(""sword"") then

while wait() do
Character.sword.Handle.up.RemoteEvent:FireServer()
if not Character:FindFirstChild(""sword"") then
for _,v in pairs(Backpack:GetChildren()) do
Humanoid:EquipTool(v)
end
end
end
end
end)"
zpqUBLFs,TestEmail,TerenceFerut,Java,Friday 16th of February 2024 12:15:13 PM CDT,"
import org.apache.commons.mail.SimpleEmail;

public class EmailTest {
    public static void main(String[] args) {
        try {
            SimpleEmail email = new SimpleEmail();
            email.setHostName(""smtp.gmail.com"");
            email.setSmtpPort(587);
            email.setAuthentication(""promodevweb@gmail.com"", ""votre_mdp"");
            email.setSSLOnConnect(true);
            email.setFrom(""promodevweb@gmail.com"");
            email.setSubject(""Test Mail"");
            email.setMsg(""This is a test mail ... :-)"");
            email.addTo(""toto@gmail.com"");
            email.send();
            System.out.println(""Email sent!"");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
"
HtRvn2Z0,Untitled,Josif_tepe,C++,Friday 16th of February 2024 11:59:00 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
 
int main() {
    int x, y;
    cin >> x >> y;
    
    int koren_x = sqrt(x);
    int zaednicki_deliteli =0 ;
    for(int i = 1; i <= koren_x; i += 1) {
        if(x % i == 0) {
            if(y % i == 0) {
                zaednicki_deliteli += 1;
            }
            if(i != x / i) {
                if(y % (x / i) == 0) {
                    zaednicki_deliteli += 1;
                }
            }
        }
    }
    cout << zaednicki_deliteli << endl;
    return 0;
}
"
E3QX99qp,some gui idk,NukeVsCity,Lua,Friday 16th of February 2024 11:56:37 AM CDT,"([[This file was protected with MoonSec V3 by federal9999 on discord]]):gsub('.+', (function(a) _yVfHHFGMoxDx = a; end)); return(function(t,...)local r;local f;local l;local s;local a;local o;local e=24915;local n=0;local d={};while n<206 do n=n+1;while n<0x1e5 and e%0x349a<0x1a4d do n=n+1 e=(e+306)%33988 local h=n+e if(e%0xdb2)<=0x6d9 then e=(e-0x1d9)%0x50a9 while n<0xb8 and e%0x2f52<0x17a9 do n=n+1 e=(e+395)%19820 local r=n+e if(e%0x236c)>=0x11b6 then e=(e*0x11b)%0x8913 local e=88831 if not d[e]then d[e]=0x1 o=string;end elseif e%2~=0 then e=(e*0x192)%0x6dd5 local e=68963 if not d[e]then d[e]=0x1 l=getfenv and getfenv();end else e=(e+0x361)%0x472b n=n+1 local e=31592 if not d[e]then d[e]=0x1 a={};end end end elseif e%2~=0 then e=(e*0x11a)%0x9c32 while n<0x2ca and e%0x129c<0x94e do n=n+1 e=(e+808)%4602 local r=n+e if(e%0x2946)>=0x14a3 then e=(e-0x2a9)%0xad2c local e=79494 if not d[e]then d[e]=0x1 end elseif e%2~=0 then e=(e+0x3ca)%0x72b0 local e=40511 if not d[e]then d[e]=0x1 s=tonumber;end else e=(e*0xec)%0x65 n=n+1 local e=55484 if not d[e]then d[e]=0x1 l=(not l)and _ENV or l;end end end else e=(e-0x36b)%0x2b39 n=n+1 while n<0x7a and e%0x1bce<0xde7 do n=n+1 e=(e*217)%22634 local h=n+e if(e%0x1b04)<0xd82 then e=(e-0x21b)%0xac51 local e=33079 if not d[e]then d[e]=0x1 r=function(d)local e=0x01 local function n(n)e=e+n return d:sub(e-n,e-0x01)end while true do local d=n(0x01)if(d==""\5"")then break end local e=o.byte(n(0x01))local e=n(e)if d==""\2""then e=a.OAiqRgzS(e)elseif d==""\3""then e=e~=""\0""elseif d==""\6""then l[e]=function(n,e)return t(8,nil,t,e,n)end elseif d==""\4""then e=l[e]elseif d==""\0""then e=l[e][n(o.byte(n(0x01)))];end local n=n(0x08)a[n]=e end end end elseif e%2~=0 then e=(e*0x3b7)%0xc121 local e=71553 if not d[e]then d[e]=0x1 end else e=(e+0x150)%0x3b8b n=n+1 local e=42845 if not d[e]then d[e]=0x1 f=""\4\8\116\111\110\117\109\98\101\114\79\65\105\113\82\103\122\83\0\6\115\116\114\105\110\103\4\99\104\97\114\95\113\69\117\97\68\112\89\0\6\115\116\114\105\110\103\3\115\117\98\68\107\116\71\122\117\105\77\0\6\115\116\114\105\110\103\4\98\121\116\101\95\90\66\104\117\98\76\79\0\5\116\97\98\108\101\6\99\111\110\99\97\116\106\99\122\107\77\87\115\90\0\5\116\97\98\108\101\6\105\110\115\101\114\116\113\98\72\80\95\69\65\106\5"";end end end end end e=(e*901)%48833 end r(f);local e={};for n=0x0,0xff do local d=a._qEuaDpY(n);e[n]=d;e[d]=n;end local function h(n)return e[n];end local o=(function(o,t)local f,d=0x01,0x10 local n={{},{},{}}local l=-0x01 local e=0x01 local r=o while true do n[0x03][a.DktGzuiM(t,e,(function()e=f+e return e-0x01 end)())]=(function()l=l+0x01 return l end)()if l==(0x0f)then l=""""d=0x000 break end end local l=#t while e<l+0x01 do n[0x02][d]=a.DktGzuiM(t,e,(function()e=f+e return e-0x01 end)())d=d+0x01 if d%0x02==0x00 then d=0x00 a.qbHP_EAj(n[0x01],(h((((n[0x03][n[0x02][0x00]]or 0x00)*0x10)+(n[0x03][n[0x02][0x01]]or 0x00)+r)%0x100)));r=o+r;end end return a.jczkMWsZ(n[0x01])end);r(o(13,""_ZJK13>^TBrCsq{}}T""));r(o(181,""Xti83r9(Ez#y:R7Q3yz:r3#?7ziy(yyQ#(ri#7Qt8Q(8#zQr3Eyt70rr(9(9:i(Ey9QQrr#N:8i8r(REQ8(cE7QyREi(RRi#9:y:KR8rzR798993:7Q#rR8:ER3rztR#t:9:ydzz3:Ey7zi8(8z(trr+EERr8Ery#r#7QRytQ<37ER(ri(9#y9t3r((r:QiREiR3Q393yzE77tz8Rui#97yt?y38#tRzir(#y7Q98r#377339tR3tENc3Q}93:zy7(8k(i:iC93y#7:r87r(y(t79z3izi3:E3R)ir9zrrCQr8#;R:iz(:#8tzr##QQ8i3E3:QyECryQY8rBE:Rzi:(9:3&833E8Qii8999Ey39#y(Qz3zz#7bO:9#zzQ3r3(z:t:Qt:R8tz9Ey3QR8QEQR8Qz3Qz=7z3:#t:#tEtrrQtr9i#3Q33rEJR9i59E#Rk:i#(E(E:r(Ry#!:r5zzQriQ9yR#Q9(k#yQi8#i3(8i(99:3<87yz(7E89Et:Q779tEtREi>Ezyyi8%r""));imBWAFEsegehSDF=function(e)e((-1631+(function()local d,n=0,1;(function(n,e)e(e(n,n),e(e,n))end)(function(e,l)if d>198 then return e end d=d+1 n=(n-205)%33796 if(n%1708)>854 then return e(e(l and l,e),e(l,l))else return l end return e end,function(e,l)if d>306 then return e end d=d+1 n=(n*719)%41182 if(n%764)>382 then return e(e(e,l),e(l,e))else return e end return e end)return n;end)()))end;FDShegesEFAWBmi={a.ayEsAVrr,a.oPcGWlFC};local e=(-6720+(function()local l,n=0,1;(function(e,n)n(e(e,e),e(n,n))end)(function(e,d)if l>429 then return e end l=l+1 n=(n*224)%21150 if(n%528)<264 then n=(n+526)%23582 return d(e(d,d),e(d,e and e)and e(e and d,d))else return e end return e end,function(e,d)if l>431 then return d end l=l+1 n=(n+211)%21022 if(n%396)<=198 then return e else return e(e(e,d),d(e,d))end return e(d(d,d),e(e,e))end)return n;end)())local z=a.jmaWKoUM or a.GrhrkQff;local re=(getfenv)or(function()return _ENV end);local p=1;local f=4;local r=3;local l=2;local function le(g,...)local c=o(e,""Pr5e#{R+gi*zd?UZ4{?Ud?zd*d*5gi+gR+{#+*i{g#RZe{#5#7dZdz*dizg*++z#z?gigg{i#ge{5{r*5z5e?Ubrgdi#Ri{g#+e#{Z+v{Z#?5r55>ZZ*??U??*d1z#idi+{zRz{{##e#5dUUrjZZUd+dRz{*#ieg5+rR/{Z#U#Z#drzniZgd?5d?zd*+ii#Zee55{5e5ee5e_eUZU{?igg*d*+i##{++{{{*Wr55.nU5Zd?R?**Ui?#dez5*riYgZ+URd{ceze*5irgyRZ{U5?*zRzrz=ZZgU+?RderrN5Ug?d?rRv{re?5drz+?RU#*?gd*z{*#ieU#U*?#z#eU5?rdDzZ*Ui?gd+ZR*Riige+5Rrd#*fijgi+rZdUU?idgz+_iZ?U{U{Re{g#H5ZrU+eRz{?eZ5*rzAZi+gi+#Re{5z{*igZ+eZUZ+?zd*zi*RZ<U5dez{ze*eiq+RR*{5UUUrdzz**iiR?zd#zZ*R##ez5rrMZZUdeU5grzwzZg?U?5z*{RgRee55rrZUelee5erdzgU??Z?rziRe*ig5gerZ{U#Zez5Z.ZZdZd?dd*+{zzidiR+i5_ed#?ed5*ZUZZUdigz?giR{iRide5R+{{#eee5Z.?H+dez5*riBRR*#i5eeRR{*{ee55?rZkXiZi?+dRz{*#+Rz{g{R{*#Re+5#5rU5?5zddrizz{*ce*5Ur+nRZ{{+#+e#r* UZR+Z+d{d#ze*i5g{#i#?5Rr*(g5{<RZ+U#?Rz/iFgrRZriKgZ+ZgA5d#ze*5*+gaRZ{U{e{i5zr*uiZdU+?+d{z{*eiRiz+4{Z#U#r5drdH*Z?M5?+dRz{?#iege+rR-i{eU5?rd-zZ*Ui?gd+Zg*{i{ge+5Rr{heZ5Ue5%dZzU*?idgzg*Rz{*++eR5{r#/5Z5#c?/Uri?*d*zg*ziRg{+#+{Rr#re5rZ5#Z?Ud?z?_dz*gi*gR+RR#{##5e55 }Z5#U??ddzzz*iigg++R+d{##{e55erJCwUUUZ?Zzz*diii+++RR{{{Re#55r#<N0#?Ud?zddzz{gi+zR+{i#{e?5e5#rdZ(UedUdi*dizg*ii+d{+#*e{5grer&ZrZ5?5zUz5id*8+*Ri{gR+{i5{riKeZ+Ur??zZdI?{gdgrR*RU#ge+5Re{rUZeUg?rdR*Z*gg?+d+i{*{aeg5+rRb{Z#Z{?UdrzgiZi5+?Rd{z{d#&5g5bTRZdU#?ed5de*dgZggR?R5#ze*5irdr*ZRU??#U#z5*5iw+Zi?{?{gez5Zri1gZ+URZ#d#d0*5idgFRZ{U#?eU5z5R.iZ*U+?gd{z#z*i5gg+CR*#U#i5drz5#ZiUZ?+?5z{*ZiegRzRRG{+eU#grdLdZ*UiU4d+zU*{idge+5Rr{R{r5U5{=dZzU*?*dgz?*Ri{**+eR5{r#55ZrUX?Zdrr?*dizg*ziRg{+#Re+g#re&rZrRZ?Ud?zd*?Z*gi+gR+gR#{e#5er#R-ZZUU?Uedzz**iig*?+RR{{###e55rr}ZZer???{zzz5iigg++RRR?##e?55rr)SUZ?Ud??5*z*egi+*R+{g#{e#5#r5mrZ7UgdUz?*diz*r+iRg{+#ge{5#rej5kUUXdZzU*?idgz+*R?R5#+eR5{{gVeZeUrU5Z**Ui?gdgZR*{i#g{+5gr{)#ZeU5?rdR*ZzSid+dRz{*{zeg5+rRr+Z?Ue?5drd#iZgU+?gd+g#*ei5gr+ORm:U#U{d?zr*2gZgRR?{d#ze*e5rgp+ZRUR?#dez5ze*d+ZRU{?#Zez5*rir*e5UR?{d#z{*5irgHi{*d#?ed5z{ROiZiU+Uid{zgz?i5gr+Yiz#UeU5drzerZiUg?+d+z{*#iei#*dRn#ZeUe?rdxzZ*Zzrid+z+*{*{ge+5Rr+o#g5UrU%dZdU*?*dgdi*di{g++eR+{r#M5ZrUr{ZdUZ?*d*zg*+iRg{+RRe{e#re#rZnUZ?UdU#d*zi*gi+gR++R#{e#zer5:}ZZZU???dzz*?6igg++RRR{##ee55rr5ZZUU???ezz**iigi+?RR{{##*RiRgeRi{?#{dUdr*zi*giUddgzgzrii5#reArZ=?ZddzU*dizg*+iRg{+#Re{5#re=5Rr5cdZzU*?idgz+*Ri#ggReR5{r#1eZ5Ur?>zZUU?rgd+zR*{iRie+5+r{o#ZeU5?rdB?UiUgZ+dRz{*#ieg5+ez_{Z{Ue?#drz5iZz#dzRd{d#*eZ5grg>RZ+U#?+?dzr*hgZg#R?{?#zeU#ergL+ZRZ5?#d#z5*rzr+ZRZ{?#?ez5*ri9g5RUR?+d#ze*5irg/+{+Y#?eZ5zr*uiZiU+?gd{z#dii5gr+b{Z#Ue?5drze*ZiUg?+dgz{*#ieg5z?R7{LeUeNrdJdZ*U?Z5d+zR*{dRge+eRr{fRI5UrUcdZzU*?idgz+?{i{gR+eR5{r#y5ZrUe5ZdUd?*dzzg*iiR*zd5Re{e#r#erZmZZ?U??zdU?e*gi+gRggR#{##5e{e*JZZUU?BUdzzz*iig?*+RRR{##ee55rr4}?0+???5zz?diigi++R+{{#g#?55rrqb5r?UdUzd*zzzgi+iR+{i#{e#5er55*ZyUrdUz?*dizg*gzg1{+#ie{5*re(5ZrZ5?{zUzridir+*Ri{g#+#z5{r{;eZRUr?5zZ?#z+gd+dR*gz#geg5Rrgh#Z+Zd?rdY*Z?Og?+?RzRdi!eg5grRciZ#Ue?5?eZ+iZic+?+e{z#*ei5gR*XRZgU#?ed5zr*p*rd{R?R:#z#j5irgL+Z*U*?#d{z5?5iMgFRU{?+zezecrifiZ+UR?{d#dU*5iggW+e{U#?ed5zrUyiKxU+?*d{z#*ei5g5+vRg#U#O5drzy*ZiS5?+?vz{*#ieg5+rRLRgeUegrdrAZ*Ui?gd+dg*{*:ge++Rr{}eZ5U5#wdw#U*U{dgzi*Ri{z{+eR*{r#g5Z5+,?ZdrR?*?5zg*diRg{+#ReRZ#regrZrRZ?Z{?zU*dg*giZgR+?R#{g#5ere+&ZC{U?Uedzd5*iiggi+RRR{##ie55gro8eee??dUzzddiigi++RRRg##e#55reS1UZ?Ud?dZ*zi*gi+*R+{R#{e##*r5,rZuU.dUz?*didgz+iRg{+#Re{5#re)gZrU9dZzUU5idg?+*Ri{g#+eR5{r{peZ{Ur?rzZ*Ui?gdg?R*{?#geg5Rr{q#ZeZ5?rde*Z*1g?+URz{*#Zeg5irR:{Z#UR?5drd+iZgU+?R?{z#*ei5*r+TRZ{U#?ed5zr*Jir+UR?{d#z+M5irgB+ZRU{?#dez5dgiu+ZRU{U#dez5*r*XgZ+UR?{"");local n=0;a.DYBxHzMo(function()n=n+1 end)local function e(d,e)if e then return n end;n=d+n;end local d,n,h=t(0,t,e,c,a._ZBhubLO);local function o()local n,d=a._ZBhubLO(c,e(1,3),e(5,6)+2);e(2);return(d*256)+n;end;local u=true;local u=0 local function y()local l=n();local e=n();local r=1;local l=(d(e,1,20)*(2^32))+l;local n=d(e,21,31);local e=((-1)^d(e,32));if(n==0)then if(l==u)then return e*0;else n=1;r=0;end;elseif(n==2047)then return(l==0)and(e*(1/0))or(e*(0/0));end;return a.CReovKpz(e,n-1023)*(r+(l/(2^52)));end;local b=n;local function k(n)local d;if(not n)then n=b();if(n==0)then return'';end;end;d=a.DktGzuiM(c,e(1,3),e(5,6)+n-1);e(n)local e=""""for n=(1+u),#d do e=e..a.DktGzuiM(d,n,n)end return e;end;local b=#a.ayEsAVrr(s('\49.\48'))~=1 local e=n;local function le(...)return{...},a.cTxIxhda('#',...)end local function de()local u={};local s={};local e={};local z={u,s,nil,e};local e=n()local c={}for l=1,e do local d=h();local n;if(d==3)then n=(h()~=#{});elseif(d==0)then local e=y();if b and a.AtdQSkCB(a.ayEsAVrr(e),'.(\48+)$')then e=a.FnCOLjQn(e);end n=e;elseif(d==1)then n=k();end;c[l]=n;end;for z=1,n()do local e=h();if(d(e,1,1)==0)then local t=d(e,2,3);local a=d(e,4,6);local e={o(),o(),nil,nil};if(t==0)then e[r]=o();e[f]=o();elseif(t==#{1})then e[r]=n();elseif(t==g[2])then e[r]=n()-(2^16)elseif(t==g[3])then e[r]=n()-(2^16)e[f]=o();end;if(d(a,1,1)==1)then e[l]=c[e[l]]end if(d(a,2,2)==1)then e[r]=c[e[r]]end if(d(a,3,3)==1)then e[f]=c[e[f]]end u[z]=e;end end;z[3]=h();for e=1,n()do s[e-(#{1})]=de();end;return z;end;local function ne(d,e,n)local l=e;local l=n;return s(a.AtdQSkCB(a.AtdQSkCB(({a.DYBxHzMo(d)})[2],e),n))end local function b(_,s,c)local function de(...)local o,j,k,ne,y,d,h,g,m,ee,u,n;local e=0;while-1<e do if e>2 then if e>=5 then if e>=2 then for d=30,90 do if e~=6 then n=t(7);break;end;e=-2;break;end;else n=t(7);end else if 4>e then g={};m={...};else ee=a.cTxIxhda('#',...)-1;u={};end end else if e>0 then if 2>e then k=t(6,9,3,63,_);y=le ne=0;else d=-41;h=-1;end else o=t(6,86,1,66,_);j=t(6,25,2,89,_);end end e=e+1;end;for e=0,ee do if(e>=k)then g[e-k]=m[e+1];else n[e]=m[e+1];end;end;local k=ee-k+1 local e;local t;local function _(...)while true do end end while true do if d<-40 then d=d+42 end e=o[d];t=e[p];if t>42 then if t<=64 then if 54>t then if 47>=t then if t<45 then if t~=40 then for a=18,92 do if 44>t then local h,a;for t=0,4 do if t>=2 then if t<=2 then n[e[l]]=n[e[r]]%e[f];d=d+1;e=o[d];else if 0<=t then repeat if 3~=t then h=e[r];a=n[h]for e=h+1,e[f]do a=a..n[e];end;n[e[l]]=a;break;end;n[e[l]]=n[e[r]][n[e[f]]];d=d+1;e=o[d];until true;else n[e[l]]=n[e[r]][n[e[f]]];d=d+1;e=o[d];end end else if t>-1 then repeat if t>0 then n[e[l]]=n[e[r]]+n[e[f]];d=d+1;e=o[d];break;end;n[e[l]]=s[e[r]];d=d+1;e=o[d];until true;else n[e[l]]=s[e[r]];d=d+1;e=o[d];end end end break;end;if(n[e[l]]==e[f])then d=d+1;else d=e[r];end;break;end;else local h,a;for t=0,4 do if t>=2 then if t<=2 then n[e[l]]=n[e[r]]%e[f];d=d+1;e=o[d];else if 0<=t then repeat if 3~=t then h=e[r];a=n[h]for e=h+1,e[f]do a=a..n[e];end;n[e[l]]=a;break;end;n[e[l]]=n[e[r]][n[e[f]]];d=d+1;e=o[d];until true;else n[e[l]]=n[e[r]][n[e[f]]];d=d+1;e=o[d];end end else if t>-1 then repeat if t>0 then n[e[l]]=n[e[r]]+n[e[f]];d=d+1;e=o[d];break;end;n[e[l]]=s[e[r]];d=d+1;e=o[d];until true;else n[e[l]]=s[e[r]];d=d+1;e=o[d];end end end end else if 46>t then for t=0,1 do if t>0 then if not n[e[l]]then d=d+1;else d=e[r];end;else n[e[l]]=c[e[r]];d=d+1;e=o[d];end end else if t>=43 then for f=30,59 do if 46<t then local t,a,c,f,h,o;local d=0;while d>-1 do if 3<d then if d<6 then if d~=2 then for e=29,83 do if d~=5 then h=f[t[c]];break;end;o=t[a];break;end;else o=t[a];end else if 6<d then d=-2;else n[o]=h;end end else if 2>d then if 0==d then t=e;else a=l;end else if 0~=d then for e=36,63 do if 2~=d then f=n;break;end;c=r;break;end;else f=n;end end end d=d+1 end break;end;for t=0,1 do if t~=-3 then for f=36,77 do if 0~=t then n[e[l]]=c[e[r]];break;end;n(e[l],e[r]);d=d+1;e=o[d];break;end;else n[e[l]]=c[e[r]];end end break;end;else for t=0,1 do if t~=-3 then for f=36,77 do if 0~=t then n[e[l]]=c[e[r]];break;end;n(e[l],e[r]);d=d+1;e=o[d];break;end;else n[e[l]]=c[e[r]];end end end end end else if t>50 then if 52>t then local r=e[r];local d=n[r]for e=r+1,e[f]do d=d..n[e];end;n[e[l]]=d;else if 51<t then for a=46,93 do if t>52 then local t;n[e[l]]=s[e[r]];d=d+1;e=o[d];n[e[l]]=s[e[r]];d=d+1;e=o[d];n[e[l]]=n[e[r]];d=d+1;e=o[d];t=e[l]n[t]=n[t](n[t+1])d=d+1;e=o[d];n[e[l]][n[e[r]]]=n[e[f]];d=d+1;e=o[d];do return end;break;end;local e=e[l]n[e]=n[e](z(n,e+1,h))break;end;else local e=e[l]n[e]=n[e](z(n,e+1,h))end end else if t<=48 then n[e[l]]=s[e[r]];else if 48~=t then for d=30,61 do if 49~=t then n(e[l],e[r]);break;end;n[e[l]]=n[e[r]][n[e[f]]];break;end;else n(e[l],e[r]);end end end end else if 58>=t then if 55>=t then if t~=50 then repeat if t~=54 then local d=e[l]n[d]=n[d](z(n,d+1,e[r]))break;end;s[e[r]]=n[e[l]];until true;else local d=e[l]n[d]=n[d](z(n,d+1,e[r]))end else if t<57 then local a,h,z;for t=0,6 do if 3>t then if 0<t then if t>=-2 then repeat if t~=2 then n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];break;end;n[e[l]]={};d=d+1;e=o[d];until true;else n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];end else n[e[l]]=c[e[r]];d=d+1;e=o[d];end else if t>4 then if t>=4 then repeat if 5<t then a=e[l];h=n[a]z=n[a+2];if(z>0)then if(h>n[a+1])then d=e[r];else n[a+3]=h;end elseif(h<n[a+1])then d=e[r];else n[a+3]=h;end break;end;n(e[l],e[r]);d=d+1;e=o[d];until true;else n(e[l],e[r]);d=d+1;e=o[d];end else if 3~=t then n(e[l],e[r]);d=d+1;e=o[d];else n(e[l],e[r]);d=d+1;e=o[d];end end end end else if 55<t then repeat if t>57 then n[e[l]]=n[e[r]]+n[e[f]];break;end;n[e[l]]();until true;else n[e[l]]=n[e[r]]+n[e[f]];end end end else if 62>t then if t>59 then if t>59 then for o=21,55 do if t~=60 then if(e[l]<n[e[f]])then d=d+1;else d=e[r];end;break;end;c[e[r]]=n[e[l]];break;end;else c[e[r]]=n[e[l]];end else n[e[l]]=c[e[r]];end else if 63<=t then if 64==t then n[e[l]]=#n[e[r]];else n[e[l]]=n[e[r]][e[f]];end else s[e[r]]=n[e[l]];end end end end else if t<76 then if 69<t then if 73<=t then if t>=74 then if 75~=t then local d=e[l]n[d]=n[d](z(n,d+1,e[r]))else local e=e[l]n[e](n[e+1])end else do return end;end else if 71<=t then if 70~=t then repeat if t~=71 then n[e[l]]=n[e[r]]+n[e[f]];break;end;n(e[l],e[r]);until true;else n[e[l]]=n[e[r]]+n[e[f]];end else n[e[l]]={};end end else if t<=66 then if t>65 then local r,f,t;for c=0,1 do if c~=0 then r=e[l];t=n[r];for e=r+1,h do a.qbHP_EAj(t,n[e])end;else r=e[l];h=r+k-1;for e=r,h do f=g[e-r];n[e]=f;end;d=d+1;e=o[d];end end else local t,s,b,g,u;for a=0,6 do if a<=2 then if a>0 then if-1~=a then for h=17,78 do if 1~=a then n(e[l],e[r]);d=d+1;e=o[d];break;end;t=e[l];s=n[e[r]];n[t+1]=s;n[t]=s[e[f]];d=d+1;e=o[d];break;end;else t=e[l];s=n[e[r]];n[t+1]=s;n[t]=s[e[f]];d=d+1;e=o[d];end else n[e[l]]=c[e[r]];d=d+1;e=o[d];end else if a>4 then if a>1 then for r=35,67 do if 6~=a then t=e[l]n[t]=n[t](z(n,t+1,h))d=d+1;e=o[d];break;end;n[e[l]]();break;end;else n[e[l]]();end else if a>=0 then for f=28,67 do if a~=3 then t=e[l]b,g=y(n[t](z(n,t+1,e[r])))h=g+t-1 u=0;for e=t,h do u=u+1;n[e]=b[u];end;d=d+1;e=o[d];break;end;n[e[l]]=(e[r]~=0);d=d+1;e=o[d];break;end;else n[e[l]]=(e[r]~=0);d=d+1;e=o[d];end end end end end else if t>67 then if 66<=t then for o=10,95 do if 69~=t then local e=e[l];h=e+k-1;for d=e,h do local e=g[d-e];n[d]=e;end;break;end;local l=e[l];local o=n[l+2];local t=n[l]+o;n[l]=t;if(o>0)then if(t<=n[l+1])then d=e[r];n[l+3]=t;end elseif(t>=n[l+1])then d=e[r];n[l+3]=t;end break;end;else local e=e[l];h=e+k-1;for d=e,h do local e=g[d-e];n[d]=e;end;end else local t,h,z,a,c,f;n[e[l]]=n[e[r]];d=d+1;e=o[d];n[e[l]]=n[e[r]];d=d+1;e=o[d];t=e[l]n[t]=n[t](n[t+1])d=d+1;e=o[d];n[e[l]]=n[e[r]];d=d+1;e=o[d];do return n[e[l]]end d=d+1;e=o[d];t=e[l];h={};for e=1,#u do z=u[e];for e=0,#z do a=z[e];c=a[1];f=a[2];if c==n and f>=t then h[f]=c[f];a[1]=h;end;end;end;d=d+1;e=o[d];d=e[r];end end end else if 80>=t then if 77<t then if t<79 then if(n[e[l]]~=e[f])then d=d+1;else d=e[r];end;else if 75<=t then for h=10,69 do if t>79 then local e=e[l]n[e](n[e+1])break;end;local z=j[e[r]];local h;local t={};h=a.RFjitFng({},{__index=function(n,e)local e=t[e];return e[1][e[2]];end,__newindex=function(d,e,n)local e=t[e]e[1][e[2]]=n;end;});for l=1,e[f]do d=d+1;local e=o[d];if e[p]==38 then t[l-1]={n,e[r]};else t[l-1]={s,e[r]};end;u[#u+1]=t;end;n[e[l]]=b(z,h,c);break;end;else local e=e[l]n[e](n[e+1])end end else if 74<=t then repeat if t>76 then n[e[l]]={};break;end;local d=e[l]n[d](z(n,d+1,e[r]))until true;else local d=e[l]n[d](z(n,d+1,e[r]))end end else if t>=84 then if t<85 then if not n[e[l]]then d=d+1;else d=e[r];end;else if 85~=t then n[e[l]]=c[e[r]];else local d=e[l];local l=n[e[r]];n[d+1]=l;n[d]=l[e[f]];end end else if 82<=t then if 78<t then repeat if 83>t then n[e[l]][n[e[r]]]=n[e[f]];break;end;n[e[l]]=#n[e[r]];until true;else n[e[l]][n[e[r]]]=n[e[f]];end else local t=e[l];local l={};for e=1,#u do local e=u[e];for d=0,#e do local d=e[d];local r=d[1];local e=d[2];if r==n and e>=t then l[e]=r[e];d[1]=l;end;end;end;end end end end end else if t>=21 then if 32<=t then if 37<=t then if t>=40 then if 40>=t then if not n[e[l]]then d=d+1;else d=e[r];end;else if 39<t then for a=23,58 do if t>41 then n[e[l]]=(e[r]~=0);break;end;local a,s,c,h,g,t,u;for t=0,4 do if t<2 then if-2<=t then repeat if 1~=t then n[e[l]]=n[e[r]];d=d+1;e=o[d];break;end;t=0;while t>-1 do if 3<=t then if t<5 then if-1<t then repeat if t<4 then h=a[c];break;end;g=a[s];until true;else h=a[c];end else if 5~=t then t=-2;else n(g,h);end end else if t<=0 then a=e;else if t~=1 then c=r;else s=l;end end end t=t+1 end d=d+1;e=o[d];until true;else t=0;while t>-1 do if 3<=t then if t<5 then if-1<t then repeat if t<4 then h=a[c];break;end;g=a[s];until true;else h=a[c];end else if 5~=t then t=-2;else n(g,h);end end else if t<=0 then a=e;else if t~=1 then c=r;else s=l;end end end t=t+1 end d=d+1;e=o[d];end else if 2>=t then n(e[l],e[r]);d=d+1;e=o[d];else if 3~=t then if(n[e[l]]==e[f])then d=d+1;else d=e[r];end;else u=e[l]n[u]=n[u](z(n,u+1,e[r]))d=d+1;e=o[d];end end end end break;end;else n[e[l]]=(e[r]~=0);end end else if 37<t then if 35<t then repeat if t~=39 then n[e[l]]=n[e[r]];break;end;do return end;until true;else do return end;end else local e=e[l]n[e]=n[e](n[e+1])end end else if t<34 then if 32==t then d=e[r];else n[e[l]]=s[e[r]];end else if t<35 then local e=e[l];local d=n[e];for e=e+1,h do a.qbHP_EAj(d,n[e])end;else if t~=31 then repeat if t<36 then n[e[l]]=n[e[r]][e[f]];break;end;n[e[l]]();until true;else n[e[l]]();end end end end else if 26<=t then if 29>t then if 26>=t then d=e[r];else if t>=26 then repeat if t~=28 then local f;for t=0,6 do if 2>=t then if t>0 then if-2~=t then repeat if 1<t then n[e[l]]=s[e[r]];d=d+1;e=o[d];break;end;n[e[l]]=s[e[r]];d=d+1;e=o[d];until true;else n[e[l]]=s[e[r]];d=d+1;e=o[d];end else n[e[l]]=s[e[r]];d=d+1;e=o[d];end else if 5>t then if 3~=t then n[e[l]]=n[e[r]];d=d+1;e=o[d];else n[e[l]]=n[e[r]];d=d+1;e=o[d];end else if 6~=t then n[e[l]]=n[e[r]];d=d+1;e=o[d];else f=e[l]n[f]=n[f](z(n,f+1,e[r]))end end end end break;end;do return n[e[l]]end until true;else do return n[e[l]]end end end else if 30>t then local r=e[r];local d=n[r]for e=r+1,e[f]do d=d..n[e];end;n[e[l]]=d;else if 29~=t then repeat if 31~=t then for e=e[l],e[r]do n[e]=nil;end;break;end;local t;for a=0,3 do if 2>a then if a>=-3 then for f=17,70 do if 1>a then n[e[l]]=n[e[r]];d=d+1;e=o[d];break;end;t=e[l]n[t]=n[t](n[t+1])d=d+1;e=o[d];break;end;else t=e[l]n[t]=n[t](n[t+1])d=d+1;e=o[d];end else if 2==a then n[e[l]][n[e[r]]]=n[e[f]];d=d+1;e=o[d];else n[e[l]][n[e[r]]]=n[e[f]];end end end until true;else for e=e[l],e[r]do n[e]=nil;end;end end end else if 22<t then if 23<t then if 20<t then repeat if t<25 then local d=e[l]local l,e=y(n[d](z(n,d+1,e[r])))h=e+d-1 local e=0;for d=d,h do e=e+1;n[d]=l[e];end;break;end;if(e[l]<n[e[f]])then d=d+1;else d=e[r];end;until true;else if(e[l]<n[e[f]])then d=d+1;else d=e[r];end;end else local t;t=e[l]n[t](n[t+1])d=d+1;e=o[d];n[e[l]]=c[e[r]];d=d+1;e=o[d];n[e[l]]=c[e[r]];d=d+1;e=o[d];n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];n[e[l]]=c[e[r]];d=d+1;e=o[d];n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];n[e[l]]=c[e[r]];end else if t~=17 then for o=44,94 do if 21<t then local l=e[l];local t=n[l]local o=n[l+2];if(o>0)then if(t>n[l+1])then d=e[r];else n[l+3]=t;end elseif(t<n[l+1])then d=e[r];else n[l+3]=t;end break;end;n[e[l]][n[e[r]]]=n[e[f]];break;end;else n[e[l]][n[e[r]]]=n[e[f]];end end end end else if t<=9 then if 4<t then if 6>=t then if 4<t then repeat if t~=5 then local d=e[l]n[d](z(n,d+1,e[r]))break;end;local l=e[l];local t=n[l]local o=n[l+2];if(o>0)then if(t>n[l+1])then d=e[r];else n[l+3]=t;end elseif(t<n[l+1])then d=e[r];else n[l+3]=t;end until true;else local l=e[l];local t=n[l]local o=n[l+2];if(o>0)then if(t>n[l+1])then d=e[r];else n[l+3]=t;end elseif(t<n[l+1])then d=e[r];else n[l+3]=t;end end else if t>7 then if t~=6 then repeat if 8<t then n[e[l]]=n[e[r]][n[e[f]]];break;end;for e=e[l],e[r]do n[e]=nil;end;until true;else n[e[l]]=n[e[r]][n[e[f]]];end else local d=e[l];local l=n[e[r]];n[d+1]=l;n[d]=l[e[f]];end end else if t<=1 then if-4~=t then for d=40,79 do if 0~=t then n[e[l]]=n[e[r]]%e[f];break;end;local t=e[l];local r={};for e=1,#u do local e=u[e];for d=0,#e do local e=e[d];local l=e[1];local d=e[2];if l==n and d>=t then r[d]=l[d];e[1]=r;end;end;end;break;end;else n[e[l]]=n[e[r]]%e[f];end else if 2>=t then n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];c[e[r]]=n[e[l]];d=d+1;e=o[d];n[e[l]]=c[e[r]];d=d+1;e=o[d];n[e[l]]=n[e[r]][e[f]];d=d+1;e=o[d];c[e[r]]=n[e[l]];d=d+1;e=o[d];n[e[l]]=(e[r]~=0);d=d+1;e=o[d];c[e[r]]=n[e[l]];else if 2~=t then repeat if 3~=t then local l=e[l];local o=n[l+2];local t=n[l]+o;n[l]=t;if(o>0)then if(t<=n[l+1])then d=e[r];n[l+3]=t;end elseif(t>=n[l+1])then d=e[r];n[l+3]=t;end break;end;if(n[e[l]]==e[f])then d=d+1;else d=e[r];end;until true;else if(n[e[l]]==e[f])then d=d+1;else d=e[r];end;end end end end else if t>14 then if t>=18 then if 18<t then if 16<=t then repeat if 20~=t then do return n[e[l]]end break;end;n[e[l]]=n[e[r]]%e[f];until true;else do return n[e[l]]end end else local z=j[e[r]];local h;local t={};h=a.RFjitFng({},{__index=function(n,e)local e=t[e];return e[1][e[2]];end,__newindex=function(d,e,n)local e=t[e]e[1][e[2]]=n;end;});for l=1,e[f]do d=d+1;local e=o[d];if e[p]==38 then t[l-1]={n,e[r]};else t[l-1]={s,e[r]};end;u[#u+1]=t;end;n[e[l]]=b(z,h,c);end else if 16<=t then if t>=13 then repeat if 17>t then c[e[r]]=n[e[l]];break;end;n[e[l]]=(e[r]~=0);until true;else n[e[l]]=(e[r]~=0);end else local e=e[l]n[e]=n[e](n[e+1])end end else if 12<=t then if t<=12 then local e=e[l];local d=n[e];for e=e+1,h do a.qbHP_EAj(d,n[e])end;else if t==13 then if(n[e[l]]~=e[f])then d=d+1;else d=e[r];end;else local e=e[l];h=e+k-1;for d=e,h do local e=g[d-e];n[d]=e;end;end end else if t~=11 then local d=e[l]local l,e=y(n[d](z(n,d+1,e[r])))h=e+d-1 local e=0;for d=d,h do e=e+1;n[d]=l[e];end;else local e=e[l]n[e]=n[e](z(n,e+1,h))end end end end end end d=1+d;end;end;return de end;local l=0xff;local t={};local o=(1);local r='';(function(n)local d=n local f=0x00 local e=0x00 d={(function(a)if f>0x2e then return a end f=f+1 e=(e+0x67a-a)%0x3d return(e%0x03==0x0 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x31);end return true end)'EdEPb'and d[0x3](0x3b5+a))or(e%0x03==0x1 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x21);r='\37';l={function()l()end};r=r..'\100\43';end return true end)'uQMyr'and d[0x1](a+0x391))or(e%0x03==0x2 and(function(d)if not n[d]then e=e+0x01 n[d]=(0xc2);r={r..'\58 a',r};t[o]=de();o=o+(1);r[1]='\58'..r[1];l[2]=0xff;end return true end)'SyIpf'and d[0x2](a+0xac))or a end),(function(a)if f>0x2d then return a end f=f+1 e=(e+0xaaf-a)%0x2f return(e%0x03==0x2 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x38);l[2]=(l[2]*(ne(function()t()end,z(r))-ne(l[1],z(r))))+1;t[o]={};l=l[2];o=o+l;end return true end)'UnXrc'and d[0x2](0x1ed+a))or(e%0x03==0x1 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x3d);end return true end)'WxIje'and d[0x3](a+0x17b))or(e%0x03==0x0 and(function(d)if not n[d]then e=e+0x01 n[d]=(0xe7);t[o]=re();o=o+l;end return true end)'OWrqU'and d[0x1](a+0x2de))or a end),(function(l)if f>0x21 then return l end f=f+1 e=(e+0x719-l)%0x47 return(e%0x03==0x0 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x32);end return true end)'DglUb'and d[0x1](0xc5+l))or(e%0x03==0x1 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x17);end return true end)'BXMxK'and d[0x2](l+0x158))or(e%0x03==0x2 and(function(d)if not n[d]then e=e+0x01 n[d]=(0x24);end return true end)'FllaD'and d[0x3](l+0x227))or l end)}d[0x1](0xd7)end){};local e=b(z(t));t[2]={};t[1]=e(t[1])imBWAFEsegehSDF=nil;e=b(z(t))return e(...);end return le((function()local n={}local e=0x01;local d;if a.YDEMkOyO then d=a.YDEMkOyO(le)else d=''end if a.AtdQSkCB(d,a.QnlqTsTl)then e=e+0;else e=e+1;end n[e]=0x02;n[n[e]+0x01]=0x03;return n;end)(),...)end)((function(n,e,d,l,r,t)local t;if 4>n then if 2>n then if n==1 then do return function(n,e,d)if d then local e=(n/2^(e-1))%2^((d-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(n%(e+e)>=e)and 1 or 0;end;end;end;else do return e(1),e(4,r,l,d,e),e(5,r,l,d)end;end else if n~=-1 then repeat if n~=3 then do return 16777216,65536,256 end;break;end;do return e(1),e(4,r,l,d,e),e(5,r,l,d)end;until true;else do return e(1),e(4,r,l,d,e),e(5,r,l,d)end;end end else if n>=6 then if n<7 then do return r[d]end;else if n>6 then for e=38,58 do if n>7 then do return d(n,nil,d);end break;end;do return setmetatable({},{['__\99\97\108\108']=function(e,r,l,d,n)if n then return e[n]elseif d then return e else e[r]=l end end})end break;end;else do return setmetatable({},{['__\99\97\108\108']=function(e,d,l,r,n)if n then return e[n]elseif r then return e else e[d]=l end end})end end end else if 2~=n then for t=37,64 do if n>4 then local n=l;do return function()local e=e(d,n(n,n),n(n,n));n(1);return e;end;end;break;end;local n=l;local r,t,l=r(2);do return function()local e,d,o,f=e(d,n(n,n),n(n,n)+3);n(4);return(f*r)+(o*t)+(d*l)+e;end;end;break;end;else local n=l;do return function()local e=e(d,n(n,n),n(n,n));n(1);return e;end;end;end end end end),...)"
virVxPrr,inscriber automation,panther5482,VeriLog,Friday 16th of February 2024 11:49:25 AM CDT,"module inscriberAutomation(
    (* side=LEFT, colors={RED,GREEN,BLUE} *)
    input [2:0] comparators,
    (* side=RIGHT, colors={RED,GREEN,BLUE,CYAN,MAGENTA,PINK,ORANGE} *)
    output [6:0] inscribers
);

(* analog *)
reg inscriberSel;
reg sysEnable;
reg [6:0] inscribersRaw;
reg [6:0] inscribersEnabled;

And3 a3 (
    .I0(comparators[0]),
    .I1(comparators[1]),
    .I2(comparators[2]),
    .O(sysEnable)
);

RandomizerAnalog ar (
    .Min(0),
    .Max(6),
    .Q(inscriberSel)
);

DeMux16Analog d16 (
    .I(1),
    .S(inscriberSel),
    .O(inscribersRaw)
);

And2 a2 [6:0] (
    .I0(inscribersRaw),
    .I1(sysEnable),
    .O(inscribersEnabled)
);

Delay d [6:0] (
    .I(inscribersEnabled),
    .O(inscribers),
    .D(10)
);

endmodule
"
HaCeny1r,Untitled,Josif_tepe,C++,Friday 16th of February 2024 11:44:28 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
 
int main() {
    long long x, n;
    cin >> x >> n;
     
    for(long long j = 0; j < n; j += 1) {
         
        long long najgolem_delitel = 1;
        long long koren = sqrt(x);
        for(long long i = 2; i <= koren; i += 1) {
            if(x % i == 0) {
                najgolem_delitel = x / i;
                break;
            }
        }
        x += najgolem_delitel;
    }
    cout << x << endl;
     
    return 0;
}
"
nMk4iqyu,Untitled,Josif_tepe,C++,Friday 16th of February 2024 11:34:34 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
 
int main() {
    long long x;
    cin >> x;
    
    long long koren = sqrt(x);
    for(long long i = 1; i <= koren; i += 1) {
        if(x % i == 0) {
            cout << i << "" "";
            cout << x / i << "" "";
        }
    }
    
    return 0;
}
"
U2eG3Knv,2,nq1s788,Python,Friday 16th of February 2024 11:29:53 AM CDT,"print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                if (((x<=y) and (y<=w)) or (z==(x or y))) == 0:
                    print(x, y, z, w)"
HKt14rLy,Untitled,VssA,C#,Friday 16th of February 2024 11:09:43 AM CDT,"using System.Collections.Generic;

namespace Clones
{
    public class Clone
    {
        public StackForClone AddProgramm;
        public StackForClone RemoveProgramm;

        public Clone()
        {
            AddProgramm = new StackForClone();
            RemoveProgramm = new StackForClone();
        }

        public Clone(Clone baseClone)
        {
            AddProgramm = new StackForClone(baseClone.AddProgramm);
            RemoveProgramm = new StackForClone(baseClone.RemoveProgramm);
        }
    }

    public class StackFCItem
    {
        public string Command;
        public StackFCItem First;

        public StackFCItem(string value, StackFCItem first)
        {
            Command = value;
            First = first;
        }
    }

    public class StackForClone
    {
        public StackFCItem Last;
       
		public StackForClone()
        {   
        }
		
        public StackForClone(StackForClone baseStack)
        {
            Last = baseStack.Last;
        }
		
        public void Push(string item)
        {
            Last = new StackFCItem(item, Last);
        }
		
        public string Pop()
        {
            var result = Last.Command;
            Last = Last.First;
            return result;
        }
    }

    public class CloneVersionSystem : ICloneVersionSystem
    {
        private List<Clone> cloneslist;

        public CloneVersionSystem()
        {
            cloneslist = new List<Clone>();
            cloneslist.Add(new Clone());
        }

        public string Execute(string query)
        {
            var input = query.Split(' ');
            var command = input[0]; 
            var cloneIndex = int.Parse(input[1]) - 1;
            return Commands(input, cloneIndex);
        }

        public string Commands(string[] command, int num)
        {
            var clone = cloneslist[num];

            if (command[0] == ""learn"") 
            {
                clone.AddProgramm.Push(command[2]);
                clone.RemoveProgramm.Last = null;
            }
            if (command[0] == ""rollback"")
            {
                if (clone.AddProgramm.Last == null)
                    return null;
                var progRoll = clone.AddProgramm.Pop();
                clone.RemoveProgramm.Push(progRoll);
            }
            
            if (command[0] == ""relearn"")
            {
                if (clone.RemoveProgramm.Last == null)
                    return null;
                var progRelearn = clone.RemoveProgramm.Pop();
                clone.AddProgramm.Push(progRelearn);
            }

            if (command[0] ==  ""clone"")          
            { 
                cloneslist.Add(new Clone(cloneslist[num])); 
            }
            if(command[0] ==  ""check"")
            {
                if (clone.AddProgramm.Last == null) return ""basic"";
                return clone.AddProgramm.Last.Command;
            }
            return null;
        }
    }
}
"
jJLk49gj,Untitled,VssA,C#,Friday 16th of February 2024 11:09:24 AM CDT,"using System;
using System.Collections.Generic;

namespace TodoApplication
{
    class History<TItem>
    {
        public History(Operation operation, int index, TItem item)
        {
            Operation = operation;
            Index = index;
            Item = item;
        }

        public Operation Operation;
        public int Index;
        public TItem Item;
    }

    public enum Operation
    {
        Add,
        Remove
    }

    public class ListModel<TItem>
    {
        public List<TItem> Items { get; }
        public readonly int Limit;
        private readonly LimitedSizeStack<History<TItem>> operationStack;

        public ListModel(int limit)
        {
            Items = new List<TItem>();
            Limit = limit;
            operationStack = new LimitedSizeStack<History<TItem>>(limit);
        }

        public void AddItem(TItem item)
        {
            var newAddCommand = new History<TItem>(Operation.Add, Items.Count, item);
            operationStack.Push(newAddCommand);
            Items.Add(item);
        }

        public void RemoveItem(int index)
        {
            var newRemoveCommand = new History<TItem>(Operation.Remove, index, Items[index]);
            operationStack.Push(newRemoveCommand);
            Items.RemoveAt(index);
        }

        public bool CanUndo()
        {
            return operationStack.Count > 0;
        }

        public void Undo()
        {
            History<TItem> deepestCommand = operationStack.Pop();

            switch (deepestCommand.Operation)
            {
                case Operation.Add:
                    Items.RemoveAt(deepestCommand.Index);
                    break;
                case Operation.Remove:
                    Items.Insert(deepestCommand.Index, deepestCommand.Item);
                    break;
            }
        }
    }
}"
r6Nqrv3u,Untitled,VssA,C#,Friday 16th of February 2024 11:09:06 AM CDT,"using System.Collections.Generic;

namespace TodoApplication
{
    public class LimitedSizeStack<T> 
    {
        private readonly LinkedList<T> stackFromList = new LinkedList<T>();
        private readonly int limitOfStack;
        
        public LimitedSizeStack(int limit)
        {
            limitOfStack = limit;   
        }

        public void Push(T item)
        {
			if(limitOfStack != 0)
			{
            	if(stackFromList.Count >= limitOfStack)
            	{
                	stackFromList.RemoveFirst();
            	}
            	stackFromList.AddLast(item);
			}
		}

        public T Pop()
        {
            var deepestValue = stackFromList.Last;
            stackFromList.RemoveLast();
            return deepestValue.Value;
        }

        public int Count
        {
            get
            {
                return stackFromList.Count;
            }
        }
    }
}
"
0jYSG4mA,POM Apache Commons Email,TerenceFerut,XML,Friday 16th of February 2024 11:02:37 AM CDT,"    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>1.5</version> <!-- Vérifiez la dernière version disponible -->
        </dependency>
    </dependencies>"
MT0Tkdc8,Untitled,Josif_tepe,C++,Friday 16th of February 2024 10:59:02 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int n, x;
    
    cin >> n >> x;
    int vreme = 0;
    for(int i = 1; i <= n; i++){
        vreme += (x * i);
    }
    cout << vreme << endl;
    return 0;
}
"
Lazdzy0n,multiplicity number,SaNik74,C#,Friday 16th of February 2024 10:47:51 AM CDT,"    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minValueNumberN = 10;
            int maxValueNumberN = 25;
            int startNumber = 50;
            int endNumber = 150;
            int numberN = random.Next(minValueNumberN, maxValueNumberN + 1);
            int result = 0;

            for (int i = startNumber; i <= endNumber; i += numberN)
            {
                if (i <= startNumber)
                {
                    result++;
                }
            }

            Console.WriteLine($""Количество чисел от {startNumber} до {endNumber} кратны {numberN}"");
        }
    }
}"
DjySx5r7,Untitled,Josif_tepe,C++,Friday 16th of February 2024 10:46:29 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int x, z;
    cin >> x >> z;
    
    int max_deliteli = 0;
    int broj_so_max_deliteli = 0;
    for(int i = x; i <= z; i += 1) {
        int deliteli = 0;
        for(int j = 1; j <= i; j += 1) {
            if(i % j == 0) {
                deliteli += 1;
            }
        }
        if(deliteli > max_deliteli) {
            max_deliteli = deliteli;
            broj_so_max_deliteli = i;
        }
    }
    cout << broj_so_max_deliteli << "" "" << max_deliteli << endl;
    
    return 0;
}
"
0M3tdWCK,Untitled,VssA,C#,Friday 16th of February 2024 10:31:19 AM CDT,"using System.Collections.Generic;
using System;
using System.Linq;

namespace TextAnalysis
{
    static class TextGeneratorTask
    {
        public static string ContinuePhrase(Dictionary<string, string> nextWords, string beginParse, int wordsCount)
        {
            var words = beginParse.Split().ToList();
            for (var i = 0; i < wordsCount; i++)
            {
                if (words.Count > 1 && nextWords.ContainsKey(words[words.Count - 2] + "" "" + words[words.Count - 1]))
                    words.Add(nextWords[words[words.Count - 2] + "" "" + words[words.Count - 1]]);
                else if (nextWords.ContainsKey(words[words.Count - 1]))
                    words.Add(nextWords[words[words.Count - 1]]);
                else break;
            }
            return string.Join("" "", words);
        }
    }
}"
3eJxXCu5,Untitled,VssA,C#,Friday 16th of February 2024 10:30:58 AM CDT,"using System.Collections.Generic;

namespace TextAnalysis
{
    static class FrequencyAnalysisTask
    {
        public static void GetBigrams(List<List<string>> text, Dictionary<string, Dictionary<string, int>> result)
        {
            foreach (var words in text)
            {
                for (int i = 0; i < words.Count - 1; i++)
                {
                    if (!result.ContainsKey(words[i]))
                        result.Add(words[i], new Dictionary<string, int>());
                    if (!result[words[i]].ContainsKey(words[i + 1]))
                        result[words[i]].Add(words[i + 1], 1);
                    else
                        result[words[i]][words[i + 1]]++;
                }
            }
        }

        public static void GetTrigrams(List<List<string>> text, Dictionary<string, Dictionary<string, int>> result)
        {
            foreach (var words in text)
            {
                for (int i = 0; i < words.Count - 2; i++)
                {
                    if (!result.ContainsKey(words[i] + "" "" + words[i + 1]))
                        result.Add(words[i] + "" "" + words[i + 1], new Dictionary<string, int>());
                    if (!result[words[i] + "" "" + words[i + 1]].ContainsKey(words[i + 2]))
                        result[words[i] + "" "" + words[i + 1]].Add(words[i + 2], 1);
                    else
                        result[words[i] + "" "" + words[i + 1]][words[i + 2]]++;
                }
            }
        }
		
        public static Dictionary<string, string> GetMostFrequentNextWords(List<List<string>> text)
        {
            var result = new Dictionary<string, Dictionary<string, int>>();
            var total = new Dictionary<string, string>();

            GetBigrams(text, result);
            GetTrigrams(text, result);
            return FrequencyDetermination(result, total);
        }

        private static Dictionary<string, string> FrequencyDetermination
            (Dictionary<string, Dictionary<string, int>> result, Dictionary<string, string> total)
        {
            foreach (var key in result.Keys)
            {
                string mostFrequentWord = null;
                int maxCount = 0;

                foreach (var innerKey in result[key])
                {
                    if (innerKey.Value > maxCount || innerKey.Value == maxCount &&
                             string.CompareOrdinal(innerKey.Key, mostFrequentWord) < 0)
                    {
                        maxCount = innerKey.Value;
                        mostFrequentWord = innerKey.Key;
                    }
                }
                total.Add(key, mostFrequentWord);
            }
            return total;
        }
    }
}"
p61P17sQ,Untitled,VssA,C#,Friday 16th of February 2024 10:30:30 AM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace TextAnalysis
{
    public static class SentencesParserTask
    {
        public static List<List<string>> ParseSentences(string text)
        {
            var listOfSentences = new List<List<string>>();
            string[] sentences = text.ToLower().Split(new char[] { '.', '!', '?', ';', ':', ')', '(', });
            List<string> listOfWords = new List<string>();
            var word = new StringBuilder();

            foreach (var sentence  in sentences)
            {
                if(sentence.Length != 0)
                {
                    listOfWords = MakingSomeWords(sentence);
                    if (listOfWords.Count != 0)
                        listOfSentences.Add(listOfWords);
                }
            }  
            return listOfSentences;
        }
      
		public static List<string> MakingSomeWords(string sentence)
        {
            List<string> words = new List<string>();
            var word = new StringBuilder();
            foreach (var letter in sentence)
            {
                if (char.IsLetter(letter) || letter == '\'')
                    word.Append(letter);
                else
                {
                    if (word.Length != 0)
                        words.Add(word.ToString());
                    word.Clear();
                }
            }
            if (word.Length != 0)
                words.Add(word.ToString());
            return words;
        }
    }
}"
tZU55m1z,Untitled,Josif_tepe,C++,Friday 16th of February 2024 10:28:28 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int h, u, d;
    cin >> h >> u >> d;
    
    
    int denovi = 1;
    
    for(int zhelka = 0; zhelka + u < h; zhelka += u) {
        denovi += 1;
        
        zhelka -= d;
    }
    cout << denovi << endl;
    return 0;
}
"
VgdWuBae,02. SoftUni Karaoke,Spocoman,C++,Friday 16th of February 2024 10:21:37 AM CDT,"#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <set>
#include <map>

using namespace std;

vector<string> string_split(string& str, string sep) {
    vector<string> v;
    while (!str.empty()) {
        size_t index = str.find(sep);
        v.push_back(str.substr(0, index));
        str.erase(0, index + sep.size());
    }
    return v;
}

bool is_find(vector<string>& v, string el) {
    return find(v.begin(), v.end(), el) != v.end();
}

int main() {
    string line;

    getline(cin, line);
    vector<string> participants = string_split(line, "", "");

    getline(cin, line);
    vector<string> songs = string_split(line, "", "");

    map<string, set<string>> info;

    set<int> valueSize;

    getline(cin, line);

    while (line != ""dawn"") {
        vector<string> tokens = string_split(line, "", "");
        string participant = tokens[0], song = tokens[1], award = tokens[2];

        if (is_find(participants, participant) && is_find(songs, song)) {       
            info[participant].insert(award);
            valueSize.insert(info[participant].size());
        }
        getline(cin, line);
    }

    auto it = valueSize.end();

    if (info.size() > 0) {
        while (info.size() != 0) {
            int maxSize = *--it;

            for (auto& i : info) {
                if (i.second.size() == maxSize) {
                    cout << i.first << "": "" << i.second.size() << "" awards"" << endl;
                    for (auto& v : i.second) {
                        cout << ""--"" << v << endl;
                    }
                    info.erase(i.first);
                    break;
                }
            }
        }
    }
    else {
        cout << ""No awards\n"";
    }
    return 0;
}"
mFHp4PkX,Untitled,toshoyan,PowerShell,Friday 16th of February 2024 10:04:01 AM CDT,"param([string] $username="""")  

if(Test-Path -Path C:\Users\$username\AppData\Local\Google\Chrome\User` Data\Default\Cache)  

{  

   $itemsCountBefore = Get-ChildItem -Path C:\Users\$username\AppData\Local\Google\Chrome\User` Data\Default\Cache -Recurse | Measure-Object | %{$_.Count} 

   Remove-Item -Path C:\Users\$username\AppData\Local\Google\Chrome\User` Data\Default\Cache -Recurse -Force  

   $itemsCountAfter = Get-ChildItem -Path C:\Users\$username\AppData\Local\Google\Chrome\User` Data\Default\Cache -Recurse | Measure-Object | %{$_.Count} 

   if($itemsCountBefore -gt $itemsCountAfter) 

   { 

      Write-host ""Cache cleared for Google Chrome"" 

   } 

   else 

   { 

      Write-Host ""Failed to clear cache for Google Chrome"" 

   } 

}  

else  

{  

   Write-host ""Specified path doesn't exist.""  

} "
KeHC7TYG,fastclicker.py,zerg959,Python,Friday 16th of February 2024 09:37:29 AM CDT,"import pygame
from random import randint
import time

pygame.init()

mw =  pygame.display.set_mode((500,500))
mw.fill((0,0,0))
clock = pygame.time.Clock()

class Area:
    def __init__(self, x=0, y=0, width=10, height=10, color=None):
        self.rect = pygame.Rect(x, y, width, height)
        self.fill_color = color

    def color(self, new_color):
        self.fill_color = new_color
    
    def fill(self):
        pygame.draw.rect(mw, self.fill_color, self.rect)

    def outline(self, frame_color, thickness):
        pygame.draw.rect(mw, frame_color, self.rect, thickness)
    
    def collidepoint(self, x, y):
        return self.rect.collidepoint(x, y)

class Label(Area):
    def set_text(self, text, fsize=12, text_color=(0,0,0)):
        self.image = pygame.font.SysFont('verdana', fsize).render(text, True, text_color)

    def draw(self, shift_x=0, shift_y=0):
        self.fill()
        mw.blit(self.image, (self.rect.x + shift_x, self.rect.y + shift_y))

YELLOW = (255,255,0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (102, 0, 102)
        
start_time = time.time()
current_time = start_time

time_text = Label(0, 0, 50, 50, (0, 0, 0))
time_text.set_text('Time:', 40, BLUE)
time_text.draw(20, 20)

timer = Label(50, 55, 50, 40, (0, 0, 0))
timer.set_text('0', 40, BLUE)
timer.draw(0, 0)

score_text = Label(320, 0, 50, 50, (0, 0, 0))
score_text.set_text('Score:', 40, BLUE)
score_text.draw(20, 20)

score = Label(430, 70, 50, 40, (0, 0, 0))
score.set_text('0', 40, BLUE)
score.draw(0, 0)


# new_card = Label(70, 170,70,100, YELLOW)
cards = []

x_card_coord = 70
num_cards = 4

for i in range(num_cards):
    new_card = Label(x_card_coord, 170, 70, 100, YELLOW)
    new_card.outline(RED, 10)
    new_card.set_text('CLICK', 15)
    cards.append(new_card)
    x_card_coord += 100
  
points = 0
wait = 0
while True:
    if wait == 0:
        wait = 20
        click_card =  randint(1, num_cards)
        for i in range(num_cards):
            cards[i].color(YELLOW)
            if (i + 1) == click_card:
                cards[i].draw(10, 40)
            else:
                cards[i].fill()
    else:
        wait -= 1

    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            x, y = event.pos
            for i in range(num_cards):
                if cards[i].collidepoint(x, y):
                    if i + 1 == click_card:
                        cards[i].color(GREEN)
                    else:
                        cards[i].color(RED)
                    cards[i].fill()
                    score.set_text(str(points), 40, BLUE)
                    score.draw(0, 0)
    new_time = time.time()

    if new_time - start_time >= 11:
        win_sign = Label(0, 0, 500, 500, RED)
        win_sign.set_text('Time is over!', 60, BLUE)
        win_sign.draw(110, 180)
        break

    # new_time = time.time()
    # if new_time-s        
    pygame.display.update()
    clock.tick(40)
"
wUGgcbmb,Untitled,ShinyEagle77,Java,Friday 16th of February 2024 09:36:58 AM CDT,"package com.clickhouse;

import io.r2dbc.spi.ConnectionFactories;
import io.r2dbc.spi.ConnectionFactory;
import io.r2dbc.spi.ConnectionFactoryOptions;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.time.LocalDateTime;

public class MainClient
{
    public static void main(String[] args)
    {
        ConnectionFactoryOptions options = ConnectionFactoryOptions.builder()
                .option(ConnectionFactoryOptions.DRIVER, ""r2dbc:clickhouse"")
                .option(ConnectionFactoryOptions.PROTOCOL, ""http"")
                .option(ConnectionFactoryOptions.HOST, ""hswcknxezk.eu-central-1.aws.clickhouse.cloud"")
                .option(ConnectionFactoryOptions.PORT, 8443)
                .option(ConnectionFactoryOptions.USER, ""default"")
                .option(ConnectionFactoryOptions.PASSWORD, ""N.iyf5aB3MKWM"")
                .option(ConnectionFactoryOptions.DATABASE, ""btc_data_db"")
                .option(ConnectionFactoryOptions.SSL, true)
                .build();
        ConnectionFactory connectionFactory = ConnectionFactories
                .get(options);

        Mono.from(connectionFactory.create())
                .flatMapMany(connection ->
                        Flux.from(connection.createStatement(""SELECT * FROM btc_data"")
                                        .execute())
                                .flatMap(result -> result.map((row, rowMetadata) ->
                                        String.format(""data_id: %s, open_time: %s, open_price: %.2f, high_price: %.2f, "" +
                                                        ""low_price: %.2f, volume: %d, close_time: %s, quote_volume: %.2f, "" +
                                                        ""count: %d, taker_buy_volume: %d, taker_buy_quote_volume: %.2f, "" +
                                                        ""ignore_column: %d"",
                                                row.get(""data_id"", String.class),
                                                row.get(""open_time"", LocalDateTime.class),
                                                row.get(""open_price"", Float.class),
                                                row.get(""high_price"", Float.class),
                                                row.get(""low_price"", Float.class),
                                                row.get(""volume"", Integer.class),
                                                row.get(""close_time"", LocalDateTime.class),
                                                row.get(""quote_volume"", Float.class),
                                                row.get(""count"", Integer.class),
                                                row.get(""taker_buy_volume"", Integer.class),
                                                row.get(""taker_buy_quote_volume"", Float.class),
                                                row.get(""ignore_column"", Integer.class))))
                                .doOnNext(System.out::println)
                                .onErrorResume(throwable ->
                                {
                                    throwable.printStackTrace();
                                    return Mono.empty();
                                }))
                .subscribe();
    }
}


-------------------------------- MAVEN CODE ---------------------------------

<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.clickhouse</groupId>
  <artifactId>ClickHouseTestMaven</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  
  <name>ClickHouseTestMaven Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.clickhouse</groupId>
      <artifactId>clickhouse-r2dbc</artifactId>
      <version>0.6.0-patch1</version>
    </dependency>

  </dependencies>
  <build>
    <finalName>ClickHouseTestMaven</finalName>
  </build>
</project>

-----------------------------------------------------------------------------"
Nr7puvCU,woodman,nq1s788,Python,Friday 16th of February 2024 09:30:54 AM CDT,"from random import choice


class TinWoodman:
    wood_data = {'Молодая сосна': {'blows': 1, 'oil': 10, 'income': 2},
                 'Ель': {'blows': 2, 'oil': 7.5, 'income': 3},
                 'Кедр': {'blows': 3, 'oil': 6, 'income': 4},
                 'Дуб': {'blows': 5, 'oil': 8, 'income': 10}}
    oil = [100, 0]
    overall_wood = 0
    wood_planks = 0
    tree_health = None
    cur_tree = None
    die = False
    main_script = ""Выберите действие:\n1 - поиск дерева;\n2 - пополнить масло;\n3 - статистика;\n4 - вернуться домой.\n""
    tree_script = ""Выберите действие:\n1 - срубить дерево;\n2 - пополнить масло;\n3 - статистика;\n4 - вернуться домой.\n""

    def main_work(self):
        request = 1
        print('Дровосек начинает работу в лесу')
        while request != 4 and not self.die:
            if self.cur_tree == None:
                print(self.main_script)
            else:
                print(self.tree_script)
            request = int(input('Ответ:'))
            if self.cur_tree == None:
                if request == 1:
                    self.search_tree()
                elif request == 2:
                    self.fill_oil()
                elif request == 3:
                    self.stat()
            else:
                if request == 1:
                    self.cut_tree()
                elif request == 2:
                    self.fill_oil()
                elif request == 3:
                    self.stat()
        if self.die:
            print('О нет! Масло закончилось!')
            print('Дровосек заржавел, игра окончена.')
            print()
            self.stat()
        else:
            self.end_work()

    def search_tree(self):
        self.cur_tree = choice(list(self.wood_data.keys()))
        self.tree_health = 0
        print('Дровосек находит', self.cur_tree + '!')

    def cut_tree(self):
        self.tree_health += 1
        self.lower_oil()
        print('Дровосек делает удар по', self.cur_tree,
              '(' + str(self.tree_health) + '/' + str(self.wood_data[self.cur_tree]['blows']) + ')')
        print('Масло', '(' + str(self.oil[0]) + '/100)')
        if self.die:
            return
        if self.tree_health == self.wood_data[self.cur_tree]['blows']:
            self.overall_wood += self.wood_data[self.cur_tree]['income']
            self.wood_planks += 1
            print('Дерево упало, дровосек получил', self.wood_data[self.cur_tree]['income'], 'доски.')
            self.cur_tree = None

    def lower_oil(self):
        self.oil[0] -= self.wood_data[self.cur_tree]['oil']
        if self.oil[0] < 0:
            self.die = True

    def fill_oil(self):
        print('Дровосек достает маслёнку')
        self.oil[1] += 100 - self.oil[0]
        self.oil[0] = 100
        print('Масло 100/100')

    def stat(self):
        print('Статистика:')
        print('Масло:', str(self.oil[0]) + '/100')
        print('Израсходовано всего масла:', self.oil[1])
        print('Доски:', self.overall_wood)
        print('Срублено деревьев:', self.wood_planks)

    def end_work(self):
        print('После тяжелого трудового дня дровосек возвращается домой')
        self.stat()


tw = TinWoodman()
tw.main_work()"
RG5T951j,clock,nq1s788,Python,Friday 16th of February 2024 09:30:23 AM CDT,"class Clock:
    time = 0
    timers = []

    def set_timer(self, t):
        cur_timer = self.format(t)
        self.timers.append(cur_timer)
        self.timers.append(cur_timer + 24 * 60)
        self.timers.sort()
        h, m = t.split(':')
        h, m = '0' * (2 - len(h)) + h, '0' * (2 - len(m)) + m
        print('Установлен будильник на', h + ':' + m)

    def time_rest(self):
        if len(self.timers) == 0:
            print('Нет заведенных будильников')
            return
        next = None
        for e in self.timers:
            if e >= self.time:
                next = e
                break
        print('Ближайший будильник сработает через', self.back_format(next - self.time) + '.')

    def change_time(self, t):
        h, m = t.split(':')
        h, m = '0' * (2 - len(h)) + h, '0' * (2 - len(m)) + m
        print('Время установлено на', h+':'+m)
        self.time = self.format(t)
        prev = None
        for e in self.timers:
            if e <= self.time:
                prev = e
            else:
                break
        if prev != None:
            if prev == self.time:
                print('Сработал будильник!')
                while self.time in self.timers:
                    self.timers.remove(self.time)
                while self.time + 24 * 60 in self.timers:
                    self.timers.remove(self.time + 24 * 60)
            else:
                h, m = str(prev // 60), str(prev % 60)
                h, m = '0' * (2 - len(h)) + h, '0' * (2 - len(m)) + m
                print('Вы пропустили будильник на ' + h + ':' + m + '!')

    def format(self, t):
        h, m = map(int, t.split(':'))
        return h * 60 + m

    def back_format(self, t):
        h, m = t // 60, t % 60
        if h:
            return self.hours(h) + ' и ' + self.minuts(m)
        else:
            return self.minuts(m)

    def hours(self, h):
        if h == 1:
            return '1 час'
        elif h < 5:
            return str(h) + ' часа'
        else:
            return str(h) + ' часов'

    def minuts(self, m): # 0,5-20,25-30,35-40 минут 1,21,31 минута 2-4,22-24,32-34 минуты
        if 5 <= m and m <= 20:
            return str(m) + ' минут'
        else:
            if m % 10 == 1:
                return str(m) + ' минуту'
            elif m % 10 == 0 or m % 10 < 5:
                return str(m) + ' минуты'
            else:
                return str(m) + ' минут'


clock = Clock()
request = input()
while request != '0':
    if request[0] == '1':
        clock.set_timer(request[2:])
    elif request == '2':
        clock.time_rest()
    else:
        clock.change_time(request[2:])
    request = input()"
svkEnaiW,Untitled,sandino,C++,Friday 16th of February 2024 09:19:13 AM CDT,"#include <iostream>
#include <map>
#include <string>
#include <tuple>
#include <vector>

using namespace std;

// Перечислимый тип для статуса задачи
enum class TaskStatus {
    NEW,          // новая
    IN_PROGRESS,  // в разработке
    TESTING,      // на тестировании
    DONE          // завершена
};

// Объявляем тип-синоним для map<TaskStatus, int>,
// позволяющего хранить количество задач каждого статуса
using TasksInfo = map<TaskStatus, int>;

class TeamTasks {
public:
    // Получить статистику по статусам задач конкретного разработчика
    const TasksInfo& GetPersonTasksInfo(const string& person) const {
        return user_tasks_.at(person);
    };

    // Добавить новую задачу (в статусе NEW) для конкретного разработчитка
    void AddNewTask(const string& person) {
        ++user_tasks_[person][TaskStatus::NEW];
    };

    // Обновить статусы по данному количеству задач конкретного разработчика,
    // подробности см. ниже
    tuple<TasksInfo, TasksInfo> PerformPersonTasks(const string& person, int task_count) {
        cout << ""--> performing ""s << task_count << "" for ""s << person << endl;
        TasksInfo updated, untouched;
        for (int i = 0; i != static_cast<int> (TaskStatus::DONE); ++i) {
            int tmp = user_tasks_[person][GetKey(i)];
            if (tmp > task_count) {
                updated[GetKey(i + 1)] = task_count;
                user_tasks_[person][GetKey(i)] -= task_count;
                break;
            } else {
                updated[GetKey(i + 1)] = tmp;
                user_tasks_[person][GetKey(i)] -= tmp;
                task_count -= tmp;
            }
        }

        for (int i = 0; i <= static_cast<int> (TaskStatus::DONE); ++i) {
            if (i < static_cast<int> (TaskStatus::DONE)
                    && user_tasks_[person][GetKey(i)] > 0) {
                untouched[GetKey(i)] = user_tasks_[person][GetKey(i)];
            }
            if (updated[GetKey(i)] > 0) {
                user_tasks_[person][GetKey(i)] += updated[GetKey(i)];
            }
        }

        return {updated, untouched};
    };

private:
    map<string, TasksInfo> user_tasks_;

    static TaskStatus GetKey(int index) {
        return static_cast<TaskStatus> (index);
    }
};

// Принимаем словарь по значению, чтобы иметь возможность
// обращаться к отсутствующим ключам с помощью [] и получать 0,
// не меняя при этом исходный словарь.
void PrintTasksInfo(TasksInfo tasks_info) {
    cout << tasks_info[TaskStatus::NEW] << "" new tasks""s
         << "", ""s << tasks_info[TaskStatus::IN_PROGRESS] << "" tasks in progress""s
         << "", ""s << tasks_info[TaskStatus::TESTING] << "" tasks are being tested""s
         << "", ""s << tasks_info[TaskStatus::DONE] << "" tasks are done""s << endl;
}

int main() {
    TeamTasks tasks;
    tasks.AddNewTask(""Ilia""s);
    for (int i = 0; i < 3; ++i) {
        tasks.AddNewTask(""Ivan""s);
    }
    cout << ""Ilia's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ilia""s));
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));

    TasksInfo updated_tasks, untouched_tasks;

    tie(updated_tasks, untouched_tasks) = tasks.PerformPersonTasks(""Ivan""s, 2);
    cout << ""Updated Ivan's tasks: ""s;
    PrintTasksInfo(updated_tasks);
    cout << ""Untouched Ivan's tasks: ""s;
    PrintTasksInfo(untouched_tasks);
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));

    tie(updated_tasks, untouched_tasks) = tasks.PerformPersonTasks(""Ivan""s, 2);
    cout << ""Updated Ivan's tasks: ""s;
    PrintTasksInfo(updated_tasks);
    cout << ""Untouched Ivan's tasks: ""s;
    PrintTasksInfo(untouched_tasks);
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));

    tie(updated_tasks, untouched_tasks) = tasks.PerformPersonTasks(""Ivan""s, 2);
    cout << ""Updated Ivan's tasks: ""s;
    PrintTasksInfo(updated_tasks);
    cout << ""Untouched Ivan's tasks: ""s;
    PrintTasksInfo(untouched_tasks);
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));

    tie(updated_tasks, untouched_tasks) = tasks.PerformPersonTasks(""Ivan""s, 2);
    cout << ""Updated Ivan's tasks: ""s;
    PrintTasksInfo(updated_tasks);
    cout << ""Untouched Ivan's tasks: ""s;
    PrintTasksInfo(untouched_tasks);
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));

    tie(updated_tasks, untouched_tasks) = tasks.PerformPersonTasks(""Ivan""s, 100);
    cout << ""Updated Ivan's tasks: ""s;
    PrintTasksInfo(updated_tasks);
    cout << ""Untouched Ivan's tasks: ""s;
    PrintTasksInfo(untouched_tasks);
    cout << ""Ivan's tasks: ""s;
    PrintTasksInfo(tasks.GetPersonTasksInfo(""Ivan""s));
}"
2fw4bz41,Untitled,MeehoweCK,C++,Friday 16th of February 2024 08:46:50 AM CDT,"short int znajdz_nastepna_wieksza(const std::vector<short int>& ciag, const short int& k) {     
    auto size{ ciag.size() };
    auto pozycja{ k + 1 };
    for (auto i{ k + 2 }; i < size; ++i) {
        if (ciag[i] > ciag[k] && ciag[i] < ciag[pozycja]) {
            pozycja = i;
        }
    }
    return static_cast<short int>(pozycja);
}"
