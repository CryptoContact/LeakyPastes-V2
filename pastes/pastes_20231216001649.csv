id,title,username,language,date,content
DmRcXPMc,2023-12-15_stats.json,rdp_snitch,JSON,Friday 15th of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""193.37.69.213"": 3,
    ""104.45.207.186"": 1,
    ""194.165.17.21"": 13,
    ""58.218.204.183"": 1,
    ""167.172.216.250"": 4,
    ""45.79.210.129"": 1,
    ""202.189.8.34"": 2,
    ""45.227.254.54"": 2,
    ""205.210.31.236"": 3,
    ""87.251.75.145"": 3,
    ""172.105.112.111"": 42,
    ""62.204.41.240"": 6,
    ""47.254.254.42"": 3,
    ""87.251.75.64"": 1,
    ""103.183.121.117"": 1,
    ""185.170.144.3"": 2,
    ""147.78.47.32"": 3,
    ""198.235.24.101"": 3,
    ""167.94.145.59"": 1,
    ""110.86.3.66"": 1,
    ""179.60.147.148"": 2,
    ""179.60.147.5"": 1,
    ""167.94.138.50"": 1,
    ""62.204.61.207"": 1,
    ""194.165.16.10"": 2,
    ""85.12.135.210"": 1,
    ""80.94.95.238"": 5,
    ""43.134.181.226"": 1,
    ""216.73.160.149"": 1,
    ""4.232.72.212"": 1,
    ""123.58.207.151"": 1,
    ""118.123.105.85"": 2,
    ""198.235.24.178"": 3,
    ""119.188.125.230"": 1,
    ""212.70.149.146"": 3,
    ""185.255.130.124"": 1,
    ""156.232.11.21"": 2,
    ""3.85.166.55"": 1,
    ""101.43.139.129"": 2,
    ""67.133.192.80"": 1,
    ""45.227.254.26"": 2,
    ""205.210.31.177"": 3,
    ""51.75.160.42"": 2
  },
  ""asn"": {
    ""AS208091"": 7,
    ""AS8075"": 2,
    ""AS48721"": 15,
    ""AS4134"": 2,
    ""AS14061"": 4,
    ""AS63949"": 43,
    ""AS139180"": 2,
    ""AS267784"": 4,
    ""AS396982"": 12,
    ""AS59425"": 6,
    ""AS45102"": 3,
    ""AS135918"": 1,
    ""AS197414"": 2,
    ""AS209588"": 6,
    ""AS398705"": 1,
    ""AS398324"": 1,
    ""AS34412"": 1,
    ""AS8487"": 1,
    ""AS204428"": 8,
    ""AS132203"": 1,
    ""AS206092"": 1,
    ""AS135377"": 1,
    ""AS38283"": 2,
    ""AS4837"": 1,
    ""AS147049"": 1,
    ""AS138152"": 2,
    ""AS14618"": 1,
    ""AS45090"": 2,
    ""AS209"": 1,
    ""AS16276"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions"": 3,
    ""Microsoft Corporation"": 2,
    ""Flyservers S.A."": 25,
    ""Chinanet"": 2,
    ""DigitalOcean, LLC"": 4,
    ""Akamai Technologies, Inc."": 1,
    ""Shandong eshinton Network Technology Co., Ltd."": 2,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 6,
    ""Akamai Technologies"": 42,
    ""Horizon LLC"": 6,
    ""Alibaba (US) Technology Co., Ltd."": 3,
    ""GRCITY"": 1,
    ""Censys, Inc."": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1,
    ""Phibee Telecom SAS"": 1,
    ""SS-Net"": 8,
    ""Aceville Pte.ltd"": 1,
    ""Ipxo Limited"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""CHINANET SiChuan Telecom Internet Data Center"": 2,
    ""CNC Group CHINA169 Shandong Province Network"": 1,
    ""PacketHub S.A."": 1,
    ""Guangzhou Yisu Cloud Limited"": 2,
    ""Amazon Technologies Inc."": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""CenturyLink"": 1,
    ""OVH SAS"": 2
  },
  ""org"": {
    ""XHOSTIS"": 3,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Flyservers S.A"": 18,
    ""Chinanet JS"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Linode"": 43,
    ""Shandong eshinton Network Technology Co., Ltd."": 2,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""Horizon LLC"": 6,
    ""Alibaba.com LLC"": 3,
    ""GREEN CITY Construction Investment Joint Stock Company"": 1,
    ""Xhostis"": 2,
    ""Censys, Inc."": 1,
    ""Chinanet FJ"": 1,
    ""Cloud Solutions S.A"": 3,
    ""Censys, Inc"": 1,
    ""Saba Abr Mizban LLC"": 1,
    ""Phibee Telecom"": 1,
    ""BtHoster LTD"": 5,
    ""Unknown"": 2,
    ""Bandito Networks"": 1,
    ""Microsoft Azure Cloud (italynorth)"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Chinanet SC"": 2,
    ""4Media Ltd"": 3,
    ""Packethub S.A"": 1,
    ""Guangzhou Yisu Cloud Limited"": 2,
    ""AWS EC2 (us-east-1)"": 1,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 2,
    ""CenturyLink, Inc"": 1,
    ""OVH Ltd"": 2
  },
  ""regionName"": {
    ""North Holland"": 12,
    ""Virginia"": 2,
    ""Kaunas"": 15,
    ""Jiangsu"": 1,
    ""California"": 18,
    ""Georgia"": 1,
    ""Rio Grande do Sul"": 2,
    ""Vilnius"": 4,
    ""North West"": 43,
    ""Moscow"": 6,
    ""Kuala Lumpur"": 3,
    ""Gia Lai"": 1,
    ""Hesse"": 1,
    ""Fujian"": 1,
    ""Distrito Federal"": 3,
    ""Michigan"": 1,
    ""Tehran"": 1,
    ""Auvergne-Rhone-Alpes"": 1,
    ""Budapest"": 5,
    ""New York"": 1,
    ""Lombardy"": 1,
    ""England"": 3,
    ""Sichuan"": 2,
    ""Shandong"": 1,
    ""Plovdiv"": 3,
    ""Texas"": 1,
    ""Guangdong"": 2,
    ""New Jersey"": 1
  },
  ""country"": {
    ""The Netherlands"": 12,
    ""United States"": 25,
    ""Lithuania"": 19,
    ""China"": 7,
    ""Brazil"": 2,
    ""Singapore"": 43,
    ""Russia"": 6,
    ""Malaysia"": 3,
    ""Vietnam"": 1,
    ""Germany"": 1,
    ""Venezuela"": 3,
    ""Iran"": 1,
    ""France"": 1,
    ""Hungary"": 5,
    ""Italy"": 1,
    ""United Kingdom"": 3,
    ""Bulgaria"": 3
  },
  ""account"": {
    ""Domain"": 13,
    ""Test"": 15,
    ""hello"": 24,
    ""7nnon1qr"": 4,
    ""beio"": 1,
    ""(empty)"": 8,
    ""dkZAtGlPV"": 1,
    ""SpBiib"": 1,
    ""CXBCDU"": 1,
    ""Administr"": 14,
    ""Administrator"": 22,
    ""Admin"": 21,
    ""vwtlHSVDI"": 1,
    ""SuSVGk"": 1,
    ""dlrtKg"": 1,
    ""nmap"": 2,
    ""rqdeCevud"": 1,
    ""pueXkM"": 1,
    ""wqVcdF"": 1,
    ""txibbsJJZ"": 1,
    ""VPSYeV"": 1,
    ""uZdTAm"": 1
  },
  ""keyboard"": {
    ""Unknown"": 136
  },
  ""client_build"": {
    ""Unknown"": 136
  },
  ""client_name"": {
    ""Unknown"": 136
  },
  ""ip_type"": {
    ""Unknown"": 59,
    ""hosting"": 69,
    ""proxy"": 5,
    ""mobile"": 2,
    ""mobile & proxy"": 1
  }
}"
YQKV633g,[ROBLOX]: DeathNote script (SixEyes ESP),Rexils,Lua,Friday 15th of December 2023 06:06:48 PM CDT,"local Players = game:GetService(""Players"")
local Lighting = game:GetService(""Lighting"")
local UIS = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")


local Player = Players.LocalPlayer


local keyBind = 'E'


local onCooldown = false
local enabled = false
local spamming = false


local cooldown = 2
local duration = 1000
local maxDuration = 1000


local utilities = {}


function getCharacter()
	repeat wait() until pcall(function() return Player.Character and Player.Character.Humanoid and Player.Character.HumanoidRootPart end)
	
	return Player.Character
end



function bootstrap()
	
	
	utilities.Folder = Instance.new(""Folder"")
	utilities.Folder.Name = ''
	utilities.Folder.Parent = game.Workspace
	
	utilities.TInfo = TweenInfo.new(1, Enum.EasingStyle.Sine)
	utilities.TProp = {Transparency = 1}
	
	utilities.Destroy = {}
	utilities.Destroy.Highlight = {}
	utilities.Destroy.BGui = {}
	
	function utilities.espState(state)
				
		for _, vPlayer in Players:GetPlayers() do
			if vPlayer ~= Player then
				local hindex = #utilities.Destroy.Highlight + 1
				local bindex = #utilities.Destroy.BGui + 1
				
				if vPlayer.Character.Head then
				
					utilities.Destroy.Highlight[hindex] = Instance.new(""Highlight"")
					utilities.Destroy.BGui[bindex] = {a = Instance.new(""BillboardGui""), b = Instance.new(""Frame""), c = Instance.new(""TextLabel""), ptr = vPlayer}
					
					local curhighlight = utilities.Destroy.Highlight[hindex]
					local curBGUI = utilities.Destroy.BGui[bindex]
					
					
					curhighlight.FillColor = Color3.fromRGB(37, 52, 255)
					curhighlight.OutlineColor = Color3.fromRGB(34, 255, 248)
					curhighlight.Parent = vPlayer.Character
					
					
					curBGUI.a.ExtentsOffset = Vector3.new(0, 2, 0)
					curBGUI.a.Adornee = vPlayer.Character.Head
					curBGUI.a.Size = UDim2.new(15, 0, 5, 0)
					curBGUI.a.AlwaysOnTop = true
					
					curBGUI.b.Size = UDim2.new(1,0,1,0)
					curBGUI.b.BackgroundTransparency = 1
					
					curBGUI.c.Size = UDim2.new(1,0,1,0)
					curBGUI.c.BackgroundTransparency = 1
					curBGUI.c.Font = Enum.Font.Cartoon
					curBGUI.c.TextColor3 = Color3.fromRGB(32, 196, 255)
					curBGUI.c.TextStrokeColor3 = Color3.fromRGB(255,255,255)
					curBGUI.c.TextStrokeTransparency = 0.5
					curBGUI.c.TextScaled = true
					curBGUI.c.TextWrapped = true
					
					curBGUI.b.Parent = curBGUI.a
					curBGUI.c.Parent = curBGUI.b
					curBGUI.a.Parent = vPlayer.Character.Head
				end
			end
		end
		
		spawn(function()
			while enabled do
				wait()
				for _, prop in pairs(utilities.Destroy.BGui) do
					local s, err = pcall(function()
						local txt = {'(', prop.ptr.DisplayName, "" @"", prop.ptr.Name, "")\n"", ""[DeathNote: "", tostring(not not prop.ptr.Character:FindFirstChild(""DeathNoteBook"")), ']'}
						prop.c.Text = table.concat(txt)
					end)
					wait()
				end
				wait()
			end
			
			for i, prop in pairs(utilities.Destroy.BGui) do
				prop.c:Destroy()
				prop.b:Destroy()
				prop.a:Destroy()
				
				utilities.Destroy.BGui[i] = nil
				wait()
			end
			for i, h in pairs(utilities.Destroy.Highlight) do
				h:Destroy()

				utilities.Destroy.Highlight[i] = nil
				wait()
			end
		end)
		
	end
	
	function utilities.lightingState(state)
		if not state then
			TweenService:Create(utilities.Destroy.Bloom, utilities.TInfo, {Threshold = 2}):Play()
			TweenService:Create(utilities.Destroy.Color, utilities.TInfo, {TintColor = Color3.fromRGB(255, 255, 255)}):Play()
			TweenService:Create(utilities.Destroy.Blur, utilities.TInfo, {Size = 0}):Play()
			
			wait(1.05)
			
			utilities.Destroy.Bloom:Destroy()
			utilities.Destroy.Color:Destroy()
			utilities.Destroy.Blur:Destroy()
			
			return
		end
		
		local bloom, color, blur = Instance.new(""BloomEffect""), Instance.new(""ColorCorrectionEffect""), Instance.new(""BlurEffect"")
		
		blur.Size = 0
		
		bloom.Parent, color.Parent, blur.Parent = Lighting, Lighting, Lighting
		
		TweenService:Create(bloom, utilities.TInfo, {Threshold = 0.5}):Play()
		TweenService:Create(color, utilities.TInfo, {TintColor = Color3.fromRGB(190, 213, 255)}):Play()
		TweenService:Create(blur, utilities.TInfo, {Size = 10}):Play()
		
		utilities.Destroy.Bloom = bloom
		utilities.Destroy.Color = color
		utilities.Destroy.Blur = blur
		
	end
	
	function utilities.spawnEssence(UPPER_BOUND: number)
		UPPER_BOUND = UPPER_BOUND or 1
		
		while enabled do
			wait()
			
			
			local glow = Instance.new(""Part"")
			glow.Size = Vector3.new(1,1,1)
			glow.Material = Enum.Material.Neon
			glow.Color = Color3.fromRGB(21, 216, 255)
			glow.Anchored = true
			glow.CanCollide = false
			glow.Reflectance = 1
			glow.Transparency = 0.6
			
			
			glow.CFrame = getCharacter().HumanoidRootPart.CFrame * (CFrame.new(math.random(-10, 10), math.random(5, 10), math.random(-10, 10)) * CFrame.new(UPPER_BOUND^2, UPPER_BOUND^2, UPPER_BOUND^2)) * CFrame.Angles(math.rad(math.random(1, 180)), math.rad(math.random(1, 180)), math.rad(math.random(1, 180)))
			glow.Parent = utilities.Folder
			
			
			local x = TweenService:Create(glow, utilities.TInfo, {Transparency = 1, CFrame = glow.CFrame * (CFrame.new(math.random(-5, 5), math.random(-4, 5), math.random(-5, 5)) * CFrame.new(UPPER_BOUND^2, UPPER_BOUND^2, UPPER_BOUND^2)) * CFrame.Angles(math.rad(math.random(1, 180)), math.rad(math.random(1, 180)), math.rad(math.random(1, 180)))})
			local c;
			
			c = x.Completed:Connect(function()
				
				glow:Destroy()
				
				x:Destroy()
				c:Disconnect();
			end)
			
			x:Play()
		end
	end
	
	function utilities.incrDuration()
		while wait(0.2) and not enabled do
			if duration < maxDuration then
				duration = duration + 1
			else
				return false
			end
		end
		return true
	end
	
	function utilities.decrDuration()
		while wait(1) and enabled do

			if duration > 0 then
				duration = duration - 1
			else
				return false
			end
		end
		return true
	end
	
end


function disableSixEyes()
	if onCooldown then return end
	if enabled then return end
	
	onCooldown = true
	
	wait()
	
	spawn(utilities.incrDuration)
	utilities.lightingState()	
	
	wait(cooldown)
	wait()
	
	onCooldown = false
end


function enableSixEyes()
	if spamming then return end
	if onCooldown then return end
	
	spamming = true
	
	spawn(function()
		wait(1)
		spamming = false
	end)
	
	enabled = not enabled
	
	if not enabled then
		disableSixEyes()
		return
	end	
	
	utilities.lightingState(enabled)
	utilities.espState(enabled)
	
	spawn(utilities.spawnEssence)
	
	local result = utilities.decrDuration()
	
	if not result then
		enabled = false
		disableSixEyes()
	end
end

UIS.InputBegan:Connect(function(Key)
	if Key.KeyCode == Enum.KeyCode[keyBind] then
		enableSixEyes()
	end
end)

bootstrap()"
P6u0H5VJ,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 15th of December 2023 06:02:10 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-797201"
3NzeN9NQ,Untitled,Labarjni1,PHP,Friday 15th of December 2023 05:55:16 PM CDT,"use pocketmine\entity\Human;
$location = $player->getLocation(); // Позиция сущности
$skin = $player->getSkin(); // Скин сущности
$entity = new Human($location, $skin);
$entity->spawnToAll();"
c6ksTp53,Protect Page the best,b7334957,PHP,Friday 15th of December 2023 04:58:33 PM CDT,"<?php
###############################################################
# Page Password Protect 2.13
###############################################################
# Visit http://www.zubrag.com/scripts/ for updates
############################################################### 
#
# Usage:
# Set usernames / passwords below between SETTINGS START and SETTINGS END.
# Open it in browser with ""help"" parameter to get the code
# to add to all files being protected. 
#		Example: password_protect.php?help
# Include protection string which it gave you into every file that needs to be protected
#
# Add following HTML code to your page where you want to have logout link
# <a href=""http://www.example.com/path/to/protected/page.php?logout=1"">Logout</a>
#
###############################################################
/*
-------------------------------------------------------------------
SAMPLE if you only want to request login and password on login form.
Each row represents different user.
$LOGIN_INFORMATION = array(
	'zubrag' => 'root',
	'test' => 'testpass',
	'admin' => 'passwd'
);
--------------------------------------------------------------------
SAMPLE if you only want to request only password on login form.
Note: only passwords are listed
$LOGIN_INFORMATION = array(
	'root',
	'testpass',
	'passwd'
);
--------------------------------------------------------------------
*/
##################################################################
#	SETTINGS START
##################################################################
// Add login/password pairs below, like described above
// NOTE: all rows except last must have comma "","" at the end of line
$LOGIN_INFORMATION = array(
	'reinhold',
	'habekeinpasswort',
	'keinpasswort',
);
// request login? true - show login and password boxes, false - password box only
define('USE_USERNAME', false);
// User will be redirected to this page after logout
define('LOGOUT_URL', './');
// time out after NN minutes of inactivity. Set to 0 to not timeout
define('TIMEOUT_MINUTES', 20);
// This parameter is only useful when TIMEOUT_MINUTES is not zero
// true - timeout time from last activity, false - timeout time from login
define('TIMEOUT_CHECK_ACTIVITY', true);
##################################################################
#	SETTINGS END
##################################################################
///////////////////////////////////////////////////////
// do not change code below
///////////////////////////////////////////////////////
// show usage example
if(isset($_GET['help'])) {
	die('Include following code into every page you would like to protect, at the very beginning (first line):<br>&lt;?php include(""' . str_replace('\\','\\\\',__FILE__) . '""); ?&gt;');
}
// timeout in seconds
$timeout = (TIMEOUT_MINUTES == 0 ? 0 : time() + TIMEOUT_MINUTES * 60);
// logout?
if(isset($_GET['logout'])) {
	setcookie(""verify"", '', $timeout, '/'); // clear password;
	header('Location: ' . LOGOUT_URL);
	exit();
}
if(!function_exists('showLoginPasswordProtect')) {
// show login form
function showLoginPasswordProtect($error_msg) {
?>
<html>
<head>
<title>PDEVDES // PLAYGROUND</title>
<link rel=""apple-touch-icon"" sizes=""180x180"" href=""favicon/apple-touch-icon.png"">
<link rel=""icon"" type=""image/png"" sizes=""32x32"" href=""favicon/favicon-32x32.png"">
<link rel=""icon"" type=""image/png"" sizes=""16x16"" href=""favicon/favicon-16x16.png"">
<meta http-equiv=""cache-control"" content=""no-cache"">
<meta http-equiv=""pragma"" content=""no-cache"">
<link href=""css/font-face/roboto-regular/roboto-regular.css"" rel=""stylesheet"">
<link href=""css/animate.min.css"" rel=""stylesheet"">
<link href=""css/meyerreset.css"" rel=""stylesheet"">
<link href=""css/normalize.css"" rel=""stylesheet"">
<link href=""css/style.css"" rel=""stylesheet"">
<style>
*, *:before, *:after {
	box-sizing:border-box;
	margin:0;
}

html {
	
}
body {
	background:#282a36;
	color:#d3d7cf;
	font-family:'Roboto', sans-serif;
	font-size:1em;
}
#login {
    border-radius: 8px;
    background: #999;
    border: 1px solid #111;
    color: #111;
    margin: 20% auto auto;
    max-width: 500px;
    padding: 10px
}
#errormsg,input {
    padding: 10px;
    width: 100%
}
#errormsg,input,label {
    color: #fff;
    display: block
}
#errormsg {
    background: #c00;
    position: absolute;
    text-align: center;
    top: 0
}
input,label {
    margin: 0 0 5px
}
input {
    border: 1px solid #111;
    color: #2e3436
}
input[type=input],input[type=password] {
    background: #c1c1c1;
    transition: .5s
}
input[type=input]:focus,input[type=password]:focus {
    background: #dcdcdc
}
input[type=submit] {
    background: #6e6e6e;
    color: #eee;
    display: block;
    margin: 0 0 5px;
    width: 100%;
    transition: .5s
}
input[type=submit]:hover {
    background: #00bb25;
    color: #fff
}
::-webkit-input-placeholder {
    color: #555753
}
:-ms-input-placeholder {
    color: #555753
}
::placeholder {
    color: #555753
}
h3 {
    margin: 0 0 10px
}
</style>
</head>
<body>
<?php echo $error_msg; ?>
<div id=""login"">
	<h3>DEVDES // PLAYGROUND</h3>
	<form method=""post"">
		<?php if (USE_USERNAME) echo '
		<input type=""input"" name=""access_login"" placeholder=""Username"" onfocus=""this.placeholder=\'\'"" onblur=""this.placeholder=\'Username\'"" autocomplete=""off""/>';?>
		<input type=""password"" name=""access_password"" placeholder=""Password"" onfocus=""this.placeholder=''"" onblur=""this.placeholder='Password'"" autocomplete=""off""/>
		<input type=""submit"" name=""Submit"" value=""LOGIN"" />
	</form>
</div>
</body>
</html>
<?php
	// stop at this point
	die();
}
}
// user provided password
if (isset($_POST['access_password'])) {
	$login = isset($_POST['access_login']) ? $_POST['access_login'] : '';
	$pass = $_POST['access_password'];
	if (!USE_USERNAME && !in_array($pass, $LOGIN_INFORMATION)
	|| (USE_USERNAME && ( !array_key_exists($login, $LOGIN_INFORMATION) || $LOGIN_INFORMATION[$login] != $pass ) ) 
	) {
		showLoginPasswordProtect('<div id=""errormsg"" class=""animated infinite flash delay-2s"">Incorrect password.</div>');
	}
	else {
		// set cookie if password was validated
		setcookie(""verify"", md5($login.'%'.$pass), $timeout, '/'); // Some programs (like Form1 Bilder) check $_POST array to see if parameters passed
		// So need to clear password protector variables
		unset($_POST['access_login']);
		unset($_POST['access_password']);
		unset($_POST['Submit']);
	}
}
else {
	// check if password cookie is set
	if (!isset($_COOKIE['verify'])) {
		showLoginPasswordProtect("""");
	}
	// check if cookie is good
	$found = false;
	foreach($LOGIN_INFORMATION as $key=>$val) {
		$lp = (USE_USERNAME ? $key : '') .'%'.$val;
		if ($_COOKIE['verify'] == md5($lp)) {
			$found = true;
			// prolong timeout
			if (TIMEOUT_CHECK_ACTIVITY) {
				setcookie(""verify"", md5($lp), $timeout, '/');
			}
			break;
		}
	}
	if (!$found) {
		showLoginPasswordProtect("""");
	}
}
?>"
QRqGFwT0,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Friday 15th of December 2023 04:49:28 PM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

825921"
TAFYMdi7,day 13 part 1,icarussiano,Python,Friday 15th of December 2023 04:45:40 PM CDT,"l=[x.splitlines() for x in open(""input"").read().split(""\n\n"")]
def refl(p):
    for i in range(1, len(p)):
        if all(x==y for x,y in zip(p[:i][::-1],p[i:])):
            return i
    return 0

print(sum(refl(x)*100+refl(list(zip(*x))) for x in l))
"
09JqS7F8,Dino Depot Passive Production,LaoArchAngel,JSON,Friday 15th of December 2023 04:41:35 PM CDT,"{
  ""production"": [
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/Kairuku/Kairuku_Character_BP.Kairuku_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 1800,
          ""alternateItemChance"": 0.0,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Polymer_Organic.PrimalItemResource_Polymer_Organic'""
          ],
          ""alternateItems"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Polymer_Organic.PrimalItemResource_Polymer_Organic'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/Hesperornis/Hesperornis_Character_BP.Hesperornis_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 1800,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/Test/PrimalItemConsumable_Egg_Hesperonis_Golden.PrimalItemConsumable_Egg_Hesperonis_Golden'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/Anglerfish/Angler_Character_BP.Angler_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 1800,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_AnglerGel.PrimalItemResource_AnglerGel'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/Scorpion/Scorpion_Character_BP.Scorpion_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 1800,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_JellyVenom.PrimalItemConsumable_JellyVenom'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/Sheep/Sheep_Character_BP.Sheep_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 60,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Wool.PrimalItemResource_Wool'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/Extinction/Dinos/Owl/Owl_Character_BP.Owl_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 300,
          ""items"": [
            ""Blueprint'/Game/Extinction/Dinos/Owl/Pellet/PrimalItemConsumable_OwlPellet.PrimalItemConsumable_OwlPellet'""
          ]
        }
      ]
    },
    {
      ""dinoType"": ""Blueprint'/Game/PrimalEarth/Dinos/DungBeetle/DungBeetle_Character_BP.DungBeetle_Character_BP'"",
      ""produces"": [
        {
          ""intervalSeconds"": 300,
          ""items"": [
            ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_Fertilizer_Compost.PrimalItemConsumable_Fertilizer_Compost'""
          ]
        }
      ]
    }
  ]
}"
pCbGbyd2,ha host logs --identifier addon_1ef934e0_grott-beta -f,LightMoon,Bash,Friday 15th of December 2023 04:18:23 PM CDT,"Dec 15 20:59:44 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service s6rc-oneshot-runner: stopping
Dec 15 20:59:44 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service s6rc-oneshot-runner successfully stopped
Dec 15 20:59:49 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service s6rc-oneshot-runner: starting
Dec 15 20:59:49 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service s6rc-oneshot-runner successfully started
Dec 15 20:59:49 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service base-addon-banner: starting
Dec 15 20:59:49 homeassistant addon_1ef934e0_grott-beta[400]: -----------------------------------------------------------
Dec 15 20:59:49 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  Add-on: Grott Beta branch (2.8)
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  The Growatt inverter monitor with current HA plugin integrated
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: -----------------------------------------------------------
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  Add-on version: 0.1.5
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  You are running the latest version of this add-on.
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  System: Home Assistant OS 11.2  (amd64 / qemux86-64)
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  Home Assistant Core: 2023.12.3
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  Home Assistant Supervisor: 2023.11.6
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: -----------------------------------------------------------
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  Please, share the above information when looking for help
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]:  or support in, e.g., GitHub, forums or the Discord chat.
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: -----------------------------------------------------------
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service base-addon-banner successfully started
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service fix-attrs: starting
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service base-addon-log-level: starting
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service fix-attrs successfully started
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service base-addon-log-level successfully started
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service legacy-cont-init: starting
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service legacy-cont-init successfully started
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service legacy-services: starting
Dec 15 20:59:50 homeassistant addon_1ef934e0_grott-beta[400]: s6-rc: info: service legacy-services successfully started
Dec 15 20:59:51 homeassistant addon_1ef934e0_grott-beta[400]: [07:59:51] INFO: Preparing to start...
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]:          **********************************************************************************
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott - libscrc not installed, no CRC checking only record validation on length!
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]:          **********************************************************************************
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: Grott Growatt logging monitor : 2.8.2
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: Grott process configuration file
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: Grott process environmental variables
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'ginvtype=tl3' from the environment
Dec 15 20:59:54 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gnomqtt=False' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gmqttip=172.30.33.0' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gmqttport=1883' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gmqttauth=True' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gmqttuser=addons' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         Pulled 'gmqttpassword=aHoogheiv1chaequiepaim4aeyooniyah6OoQuah3poFeivioyaxo6Quei1nie6o' from the environment
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott override settings if set in commandline
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott process json layout files
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott layout records loaded
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T02NNNN  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'False'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 36, 'length': 10, 'type': 'text'}, 'date': {'value': 56, 'divide': 10}, 'recortype1': {'value': 70, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 74, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 78, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 82, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 90, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 94, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 98, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 106, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 110, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 122, 'length': 4, 'type': 'num', 'divide': 10}, 'pvfrequentie': {'value': 130, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 134, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 138, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 142, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 150, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 154, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 158, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 166, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 174, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 182, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 190, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 198, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvtemperature': {'value': 206, 'length': 2, 'type': 'num', 'divide': 10}, 'isof': {'value': 210, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'gfcif': {'value': 214, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'dcif': {'value': 218, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vpvfault': {'value': 222, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vacfault': {'value': 226, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'facfault': {'value': 230, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'tmpfault': {'value': 234, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'faultcode': {'value': 238, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'pvipmtemperature': {'value': 242, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'nbusvolt': {'value': 250, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epv1today': {'value': 278, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 294, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 302, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 310, 'length': 4, 'type': 'num', 'divide': 10}, 'rac': {'value': 318, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eractoday': {'value': 326, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eractotal': {'value': 334, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T05NNNN  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 36, 'length': 10, 'type': 'text'}, 'date': {'value': 56, 'divide': 10}, 'recortype1': {'value': 70, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 74, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 78, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 82, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 90, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 94, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 98, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 106, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 110, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 122, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 130, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 134, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 138, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 142, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 150, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 154, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 158, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 166, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 174, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 182, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 190, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 198, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvtemperature': {'value': 206, 'length': 2, 'type': 'num', 'divide': 10}, 'isof': {'value': 210, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'gfcif': {'value': 214, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'dcif': {'value': 218, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vpvfault': {'value': 222, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vacfault': {'value': 226, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'facfault': {'value': 230, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'tmpfault': {'value': 234, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'faultcode': {'value': 238, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'pvipmtemperature': {'value': 242, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'nbusvolt': {'value': 250, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epv1today': {'value': 278, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 294, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 302, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 310, 'length': 4, 'type': 'num', 'divide': 10}, 'rac': {'value': 318, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eractoday': {'value': 326, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eractotal': {'value': 334, 'length': 4, 'type': 'num', 'divide': 1, 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNN  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'recortype1': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 162, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 174, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 202, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 210, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 214, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 218, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 222, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 230, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 234, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 238, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 250, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 254, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 262, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 270, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 278, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvtemperature': {'value': 286, 'length': 2, 'type': 'num', 'divide': 10}, 'isof': {'value': 290, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'gfcif': {'value': 294, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'dcif': {'value': 298, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vpvfault': {'value': 302, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'vacfault': {'value': 306, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'facfault': {'value': 310, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'tmpfault': {'value': 314, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'faultcode': {'value': 318, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'pvipmtemperature': {'value': 322, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 326, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'nbusvolt': {'value': 330, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epv1today': {'value': 358, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 366, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 374, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 382, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 390, 'length': 4, 'type': 'num', 'divide': 10}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T05NNNNX  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 36, 'length': 10, 'type': 'text'}, 'date': {'value': 56, 'divide': 10}, 'recortype1': {'value': 70, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 74, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 78, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 82, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 90, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 94, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 98, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 106, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 110, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 170, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 178, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 182, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 190, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 198, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 202, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 206, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 214, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 218, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 222, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 266, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvenergytoday': {'value': 274, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 282, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 290, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1today': {'value': 298, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 306, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 314, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 322, 'length': 4, 'type': 'num', 'divide': 10}, 'pvtemperature': {'value': 450, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 466, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 470, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'nbusvolt': {'value': 474, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNX  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'recortype1': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 162, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 174, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 250, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 258, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 262, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 266, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 270, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 278, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 282, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 294, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 298, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 302, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 346, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvenergytoday': {'value': 354, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 362, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1today': {'value': 378, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 386, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 394, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 402, 'length': 4, 'type': 'num', 'divide': 10}, 'pvtemperature': {'value': 530, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 546, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 550, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'nbusvolt': {'value': 554, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNXSPH  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'recortype1': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 162, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 174, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 298, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 306, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 310, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 314, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 318, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 326, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 330, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 334, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 342, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 346, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 350, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 386, 'length': 4, 'type': 'num', 'divide': 7200}, 'eactoday': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'eactotal': {'value': 378, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 522, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1today': {'value': 394, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 402, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 410, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 418, 'length': 4, 'type': 'num', 'divide': 10}, 'pvtemperature': {'value': 530, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 534, 'length': 2, 'type': 'num', 'divide': 10}, 'pvboosttemp': {'value': 538, 'length': 2, 'type': 'num', 'divide': 10}, 'bat_dsp': {'value': 546, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 550, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#nbusvolt': {'value': 554, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#ipf': {'value': 558, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#realoppercent': {'value': 562, 'length': 2, 'type': 'num', 'divide': 100, 'incl': 'no'}, '#opfullwatt': {'value': 566, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#deratingmode': {'value': 574, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eacharge_today': {'value': 606, 'length': 4, 'type': 'num', 'divide': 10}, 'eacharge_total': {'value': 614, 'length': 4, 'type': 'num', 'divide': 10}, 'batterytype': {'value': 634, 'length': 2, 'type': 'num', 'divide': 1}, 'uwsysworkmode': {'value': 666, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword0': {'value': 670, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword1': {'value': 674, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword2': {'value': 678, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword3': {'value': 682, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword4': {'value': 686, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword5': {'value': 690, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword6': {'value': 694, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword7': {'value': 698, 'length': 2, 'type': 'num', 'divide': 1}, 'pdischarge1': {'value': 702, 'length': 4, 'type': 'num', 'divide': 10}, 'p1charge1': {'value': 710, 'length': 4, 'type': 'num', 'divide': 10}, 'vbat': {'value': 718, 'length': 2, 'type': 'num', 'divide': 10}, 'SOC': {'value': 722, 'length': 2, 'type': 'num', 'divide': 1}, 'pactouserr': {'value': 726, 'length': 4, 'type': 'num', 'divide': 10}, '#pactousers': {'value': 734, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#pactousert': {'value': 742, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pactousertot': {'value': 750, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogridr': {'value': 758, 'length': 4, 'type': 'num', 'divide': 10}, '#pactogrids': {'value': 766, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#pactogridt': {'value': 774, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pactogridtot': {'value': 782, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloadr': {'value': 790, 'length': 4, 'type': 'num', 'divide': 10}, '#plocaloads': {'value': 798, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#plocaloadt': {'value': 806, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'plocaloadtot': {'value': 814, 'length': 4, 'type': 'num', 'divide': 10}, '#ipm': {'value': 822, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#battemp': {'value': 826, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'spdspstatus': {'value': 830, 'length': 2, 'type': 'num', 'divide': 10}, 'spbusvolt': {'value': 834, 'length': 2, 'type': 'num', 'divide': 10}, 'etouser_tod': {'value': 842, 'length': 4, 'type': 'num', 'divide': 10}, 'etouser_tot': {'value': 850, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tod': {'value': 858, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tot': {'value': 866, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tod': {'value': 874, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tot': {'value': 882, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tod': {'value': 890, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tot': {'value': 898, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tod': {'value': 906, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tot': {'value': 914, 'length': 4, 'type': 'num', 'divide': 10}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T05NNNNSPF  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'divide': 10, 'incl': 'yes'}, 'pvserial': {'value': 36, 'length': 10, 'type': 'text'}, 'date': {'value': 56, 'divide': 10}, 'recortype1': {'value': 70, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 74, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 78, 'length': 2, 'type': 'num'}, 'vpv1': {'value': 82, 'length': 2, 'type': 'num', 'divide': 10}, 'vpv2': {'value': 86, 'length': 2, 'type': 'num', 'divide': 10}, 'ppv1': {'value': 90, 'length': 4, 'type': 'num', 'divide': 10}, 'ppv2': {'value': 98, 'length': 4, 'type': 'num', 'divide': 10}, 'buck1curr': {'value': 106, 'length': 2, 'type': 'num', 'divide': 10}, 'buck2curr': {'value': 110, 'length': 2, 'type': 'num', 'divide': 10}, 'op_watt': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'op_va': {'value': 122, 'length': 4, 'type': 'num', 'divide': 10}, 'acchr_watt': {'value': 130, 'length': 4, 'type': 'num', 'divide': 10}, 'acchr_VA': {'value': 138, 'length': 4, 'type': 'num', 'divide': 10}, 'bat_Volt': {'value': 146, 'length': 2, 'type': 'num', 'divide': 100}, 'batterySoc': {'value': 150, 'length': 2, 'type': 'num', 'divide': 1}, 'bus_volt': {'value': 154, 'length': 2, 'type': 'num', 'divide': 10}, 'grid_volt': {'value': 158, 'length': 2, 'type': 'num', 'divide': 10}, 'line_freq': {'value': 162, 'length': 2, 'type': 'num', 'divide': 100}, 'outputvolt': {'value': 166, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridvoltage': {'value': 166, 'length': 2, 'type': 'num', 'divide': 10}, 'outputfreq': {'value': 170, 'length': 2, 'type': 'num', 'divide': 100}, 'invtemp': {'value': 178, 'length': 2, 'type': 'num', 'divide': 10}, 'dcdctemp': {'value': 182, 'length': 2, 'type': 'num', 'divide': 10}, 'loadpercent': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'buck1_ntc': {'value': 206, 'length': 2, 'type': 'num', 'divide': 10}, 'buck2_ntc': {'value': 210, 'length': 2, 'type': 'num', 'divide': 10}, 'OP_Curr': {'value': 214, 'length': 2, 'type': 'num', 'divide': 10}, 'Inv_Curr': {'value': 218, 'length': 2, 'type': 'num', 'divide': 10}, 'AC_InWatt': {'value': 222, 'length': 4, 'type': 'num', 'divide': 10}, 'AC_InVA': {'value': 230, 'length': 4, 'type': 'num', 'divide': 10}, 'faultBit': {'value': 238, 'length': 2, 'type': 'num', 'divide': 1}, 'warningBit': {'value': 242, 'length': 2, 'type': 'num', 'divide': 1}, 'faultValue': {'value': 246, 'length': 2, 'type': 'num', 'divide': 1}, 'warningValue': {'value': 250, 'length': 2, 'type': 'num', 'divide': 1}, 'constantPowerOK': {'value': 266, 'length': 2, 'type': 'num', 'divide': 1}, 'epv1tod': {'value': 270, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epv1tot': {'value': 278, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epvToday': {'value': 278, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 278, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2tod': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'epvTotal': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2tot': {'value': 294, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'eacCharToday': {'value': 310, 'length': 4, 'type': 'num', 'divide': 10}, 'eacCharTotal': {'value': 318, 'length': 4, 'type': 'num', 'divide': 10}, 'ebatDischarToday': {'value': 326, 'length': 4, 'type': 'num', 'divide': 10}, 'ebatDischarTotal': {'value': 334, 'length': 4, 'type': 'num', 'divide': 10}, 'eacDischarToday': {'value': 342, 'length': 4, 'type': 'num', 'divide': 10}, 'eacDischarTotal': {'value': 350, 'length': 4, 'type': 'num', 'divide': 10}, 'ACCharCurr': {'value': 358, 'length': 2, 'type': 'num', 'divide': 10}, 'ACDischarWatt': {'value': 362, 'length': 4, 'type': 'num', 'divide': 10}, 'ACDischarVA': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'BatDischarWatt': {'value': 378, 'length': 4, 'type': 'num', 'divide': 10}, 'BatDischarVA': {'value': 386, 'length': 4, 'type': 'num', 'divide': 10}, 'BatWatt': {'value': 394, 'length': 4, 'type': 'numx', 'divide': 10}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNSPF  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'recortype1': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'vpv1': {'value': 162, 'length': 2, 'type': 'num', 'divide': 10}, 'vpv2': {'value': 166, 'length': 2, 'type': 'num', 'divide': 10}, 'ppv1': {'value': 170, 'length': 4, 'type': 'num', 'divide': 10}, 'ppv2': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'buck1curr': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'buck2curr': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'op_watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'op_va': {'value': 204, 'length': 4, 'type': 'num', 'divide': 10}, 'acchr_watt': {'value': 210, 'length': 4, 'type': 'num', 'divide': 10}, 'acchr_VA': {'value': 218, 'length': 4, 'type': 'num', 'divide': 10}, 'bat_Volt': {'value': 226, 'length': 2, 'type': 'num', 'divide': 100}, 'batterySoc': {'value': 230, 'length': 2, 'type': 'num', 'divide': 1}, 'bus_volt': {'value': 234, 'length': 2, 'type': 'num', 'divide': 10}, 'grid_volt': {'value': 238, 'length': 2, 'type': 'num', 'divide': 10}, 'line_freq': {'value': 242, 'length': 2, 'type': 'num', 'divide': 100}, 'outputvolt': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridvoltage': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10}, 'outputfreq': {'value': 250, 'length': 2, 'type': 'num', 'divide': 100}, 'invtemp': {'value': 258, 'length': 2, 'type': 'num', 'divide': 10}, 'dcdctemp': {'value': 262, 'length': 2, 'type': 'num', 'divide': 10}, 'loadpercent': {'value': 266, 'length': 2, 'type': 'num', 'divide': 10}, 'buck1_ntc': {'value': 286, 'length': 2, 'type': 'num', 'divide': 10}, 'buck2_ntc': {'value': 290, 'length': 2, 'type': 'num', 'divide': 10}, 'OP_Curr': {'value': 294, 'length': 2, 'type': 'num', 'divide': 10}, 'Inv_Curr': {'value': 298, 'length': 2, 'type': 'num', 'divide': 10}, 'AC_InWatt': {'value': 302, 'length': 4, 'type': 'num', 'divide': 10}, 'AC_InVA': {'value': 310, 'length': 4, 'type': 'num', 'divide': 10}, 'faultBit': {'value': 318, 'length': 2, 'type': 'num', 'divide': 1}, 'warningBit': {'value': 322, 'length': 2, 'type': 'num', 'divide': 1}, 'faultValue': {'value': 326, 'length': 2, 'type': 'num', 'divide': 1}, 'warningValue': {'value': 330, 'length': 2, 'type': 'num', 'divide': 1}, 'constantPowerOK': {'value': 346, 'length': 2, 'type': 'num', 'divide': 1}, 'epvtoday': {'value': 358, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 358, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 366, 'length': 4, 'type': 'num', 'divide': 10}, 'eacCharToday': {'value': 390, 'length': 4, 'type': 'num', 'divide': 10}, 'eacCharTotal': {'value': 398, 'length': 4, 'type': 'num', 'divide': 10}, 'ebatDischarToday': {'value': 406, 'length': 4, 'type': 'num', 'divide': 10}, 'ebatDischarTotal': {'value': 414, 'length': 4, 'type': 'num', 'divide': 10}, 'eacDischarToday': {'value': 422, 'length': 4, 'type': 'num', 'divide': 10}, 'eacDischarTotal': {'value': 430, 'length': 4, 'type': 'num', 'divide': 10}, 'ACCharCurr': {'value': 438, 'length': 2, 'type': 'num', 'divide': 10}, 'ACDischarWatt': {'value': 442, 'length': 4, 'type': 'num', 'divide': 10}, 'ACDischarVA': {'value': 450, 'length': 4, 'type': 'num', 'divide': 10}, 'BatDischarWatt': {'value': 458, 'length': 4, 'type': 'num', 'divide': 10}, 'BatDischarVA': {'value': 466, 'length': 4, 'type': 'num', 'divide': 10}, 'BatWatt': {'value': 474, 'length': 4, 'type': 'numx', 'divide': 10}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNXTL3  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'recortype1': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 162, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 174, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pv3voltage': {'value': 202, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pv3current': {'value': 206, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pv3watt': {'value': 210, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pvpowerout': {'value': 298, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 306, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 310, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 314, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 318, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 326, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 330, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 334, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 342, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 346, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 350, 'length': 4, 'type': 'num', 'divide': 10}, 'Vac_RS': {'value': 358, 'length': 2, 'type': 'num', 'divide': 10}, 'Vac_ST': {'value': 362, 'length': 2, 'type': 'num', 'divide': 10}, 'Vac_TR': {'value': 366, 'length': 2, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 378, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 386, 'length': 4, 'type': 'num', 'divide': 7200}, 'epv1today': {'value': 394, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 402, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 410, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 418, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 522, 'length': 4, 'type': 'num', 'divide': 10}, 'pvtemperature': {'value': 530, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 534, 'length': 2, 'type': 'num', 'divide': 10}, 'pvboottemperature': {'value': 538, 'length': 2, 'type': 'num', 'divide': 10}, 'temp4': {'value': 542, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'uwBatVolt_DSP': {'value': 546, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 550, 'length': 2, 'type': 'num', 'divide': 1}, 'nbusvolt': {'value': 554, 'length': 2, 'type': 'num', 'divide': 1}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T060120  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'voltage_l1': {'value': 160, 'length': 4, 'type': 'num', 'divide': 10}, 'voltage_l2': {'value': 168, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'voltage_l3': {'value': 176, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'Current_l1': {'value': 184, 'length': 4, 'type': 'num', 'divide': 10}, 'Current_l2': {'value': 192, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'Current_l3': {'value': 200, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'act_power_l1': {'value': 208, 'length': 4, 'type': 'numx', 'divide': 10}, 'act_power_l2': {'value': 216, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'act_power_l3': {'value': 224, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'app_power_l1': {'value': 232, 'length': 4, 'type': 'numx', 'divide': 10}, 'app_power_l2': {'value': 240, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'app_power_l3': {'value': 248, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'react_power_l1': {'value': 256, 'length': 4, 'type': 'numx', 'divide': 10}, 'react_power_l2': {'value': 264, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'react_power_l3': {'value': 272, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'powerfactor_l1': {'value': 280, 'length': 4, 'type': 'numx', 'divide': 1000}, 'powerfactor_l2': {'value': 288, 'length': 4, 'type': 'numx', 'divide': 1000, 'incl': 'yes'}, 'powerfactor_l3': {'value': 296, 'length': 4, 'type': 'numx', 'divide': 1000, 'incl': 'yes'}, 'pos_rev_act_power': {'value': 304, 'length': 4, 'type': 'numx', 'divide': 10}, 'pos_act_power': {'value': 304, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'rev_act_power': {'value': 304, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'yes'}, 'app_power': {'value': 312, 'length': 4, 'type': 'numx', 'divide': 10}, 'react_power': {'value': 320, 'length': 4, 'type': 'numx', 'divide': 10}, 'powerfactor': {'value': 328, 'length': 4, 'type': 'numx', 'divide': 1000}, 'frequency': {'value': 336, 'length': 4, 'type': 'num', 'divide': 10}, 'L1-2_voltage': {'value': 344, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'L2-3_voltage': {'value': 352, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'L3-1_voltage': {'value': 360, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'yes'}, 'pos_act_energy': {'value': 368, 'length': 4, 'type': 'numx', 'divide': 10}, 'rev_act_energy': {'value': 376, 'length': 4, 'type': 'numx', 'divide': 10}, 'pos_act_energy_kvar': {'value': 384, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'no'}, 'rev_act_energy_kvar': {'value': 392, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'no'}, 'app_energy_kvar': {'value': 400, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'no'}, 'act_energy_kwh': {'value': 408, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'no'}, 'react_energy_kvar': {'value': 416, 'length': 4, 'type': 'numx', 'divide': 10, 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06501b  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'device': {'value': 'SDM630', 'type': 'def', 'incl': 'no'}, 'logstart': {'value': 96, 'type': 'def', 'incl': 'no'}, 'active_energy': {'pos': 1, 'type': 'log'}, 'reactive_energy': {'pos': 2, 'type': 'log'}, 'activePowerL1': {'pos': 3, 'type': 'log'}, 'activePowerL2': {'pos': 4, 'type': 'log'}, 'activePowerL3': {'pos': 5, 'type': 'log'}, 'reactivePowerL1': {'pos': 6, 'type': 'log'}, 'reactivePowerL2': {'pos': 7, 'type': 'log'}, 'reactivePowerL3': {'pos': 8, 'type': 'log'}, 'apperentPowerL1': {'pos': 9, 'type': 'log'}, 'apperentPowerL2': {'pos': 10, 'type': 'log'}, 'apperentPowerL3': {'pos': 11, 'type': 'log'}, 'powerFactorL1': {'pos': 12, 'type': 'log'}, 'powerFactorL2': {'pos': 13, 'type': 'log'}, 'powerFactorL3': {'pos': 14, 'type': 'log'}, 'voltageL1': {'pos': 15, 'type': 'log'}, 'voltageL2': {'pos': 16, 'type': 'log'}, 'voltageL3': {'pos': 17, 'type': 'log'}, 'currentL1': {'pos': 18, 'type': 'log'}, 'currentL2': {'pos': 19, 'type': 'log'}, 'currentL3': {'pos': 20, 'type': 'log'}, 'power': {'pos': 21, 'type': 'log'}, 'active_power': {'pos': 21, 'type': 'logpos'}, 'reverse_active_power': {'pos': 21, 'type': 'logneg'}, 'apparent_power': {'pos': 22, 'type': 'log'}, 'reactive_power': {'pos': 23, 'type': 'log'}, 'power_factor': {'pos': 24, 'type': 'log'}, 'frequency': {'pos': 25, 'type': 'log'}, 'posiActivePower': {'pos': 26, 'type': 'log'}, 'reverActivePower': {'pos': 27, 'type': 'log'}, 'posiReactivePower': {'pos': 28, 'type': 'log'}, 'reverReactivePower': {'pos': 29, 'type': 'log'}, 'apparentEnergy': {'pos': 30, 'type': 'log'}, 'totalActiveEnergyL1': {'pos': 31, 'type': 'log'}, 'totalActiveEnergyL2': {'pos': 32, 'type': 'log'}, 'totalActiveEnergyL3': {'pos': 33, 'type': 'log'}, 'totalRectiveEnergyL1': {'pos': 34, 'type': 'log'}, 'totalRectiveEnergyL2': {'pos': 35, 'type': 'log'}, 'totalRectiveEnergyL3': {'pos': 36, 'type': 'log'}, 'total_energy': {'pos': 37, 'type': 'log'}, 'l1Voltage2': {'pos': 38, 'type': 'log'}, 'l2Voltage3': {'pos': 39, 'type': 'log'}, 'l3Voltage1': {'pos': 40, 'type': 'log'}, 'pos41': {'pos': 41, 'type': 'log', 'incl': 'no'}, 'pos42': {'pos': 42, 'type': 'log', 'incl': 'no'}, 'pos43': {'pos': 43, 'type': 'log', 'incl': 'no'}, 'pos44': {'pos': 44, 'type': 'log', 'incl': 'no'}, 'pos45': {'pos': 45, 'type': 'log', 'incl': 'no'}, 'pos46': {'pos': 46, 'type': 'log', 'incl': 'no'}, 'pos47': {'pos': 47, 'type': 'log', 'incl': 'no'}, 'pos48': {'pos': 48, 'type': 'log', 'incl': 'no'}, 'pos49': {'pos': 49, 'type': 'log', 'incl': 'no'}, 'pos50': {'pos': 50, 'type': 'log', 'incl': 'no'}, 'pos51': {'pos': 51, 'type': 'log', 'incl': 'no'}, 'pos52': {'pos': 52, 'type': 'log', 'incl': 'no'}, 'pos53': {'pos': 53, 'type': 'log', 'incl': 'no'}, 'pos54': {'pos': 54, 'type': 'log', 'incl': 'no'}, 'pos55': {'pos': 55, 'type': 'log', 'incl': 'no'}, 'pos56': {'pos': 56, 'type': 'log', 'incl': 'no'}, 'pos57': {'pos': 57, 'type': 'log', 'incl': 'no'}, 'pos58': {'pos': 58, 'type': 'log', 'incl': 'no'}, 'pos59': {'pos': 59, 'type': 'log', 'incl': 'no'}, 'pos60': {'pos': 60, 'type': 'log', 'incl': 'no'}, 'pos61': {'pos': 61, 'type': 'log', 'incl': 'no'}, 'pos62': {'pos': 62, 'type': 'log', 'incl': 'no'}, 'pos63': {'pos': 63, 'type': 'log', 'incl': 'no'}, 'pos64': {'pos': 64, 'type': 'log', 'incl': 'no'}, 'pos65': {'pos': 65, 'type': 'log', 'incl': 'no'}, 'pos66': {'pos': 66, 'type': 'log', 'incl': 'no'}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T05NNNNXSPH  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 36, 'length': 10, 'type': 'text'}, 'date': {'value': 56, 'divide': 10}, 'recortype1': {'value': 70, 'length': 2, 'type': 'num', 'incl': 'no'}, 'recortype2': {'value': 74, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 78, 'length': 2, 'type': 'num'}, 'pvpowerin': {'value': 82, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 90, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 94, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 98, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 106, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 110, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 114, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 218, 'length': 4, 'type': 'numx', 'divide': 10}, 'pvfrequentie': {'value': 226, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 230, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 234, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 238, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 246, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 250, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 254, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 262, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 266, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 270, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 306, 'length': 4, 'type': 'num', 'divide': 7200}, 'eactoday': {'value': 290, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytoday': {'value': 290, 'length': 4, 'type': 'num', 'divide': 10}, 'eactotal': {'value': 298, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal': {'value': 442, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1today': {'value': 314, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 322, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 330, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 338, 'length': 4, 'type': 'num', 'divide': 10}, 'pvtemperature': {'value': 450, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 454, 'length': 2, 'type': 'num', 'divide': 10}, 'pvboosttemp': {'value': 458, 'length': 2, 'type': 'num', 'divide': 10}, 'bat_dsp': {'value': 466, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvolt': {'value': 470, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#nbusvolt': {'value': 474, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#ipf': {'value': 478, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#realoppercent': {'value': 482, 'length': 2, 'type': 'num', 'divide': 100, 'incl': 'no'}, '#opfullwatt': {'value': 486, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#deratingmode': {'value': 494, 'length': 2, 'type': 'num', 'divide': 1, 'incl': 'no'}, 'eacharge_today': {'value': 526, 'length': 4, 'type': 'num', 'divide': 10}, 'eacharge_total': {'value': 534, 'length': 4, 'type': 'num', 'divide': 10}, 'batterytype': {'value': 554, 'length': 2, 'type': 'num', 'divide': 1}, 'uwsysworkmode': {'value': 586, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword0': {'value': 590, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword1': {'value': 594, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword2': {'value': 588, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword3': {'value': 602, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword4': {'value': 606, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword5': {'value': 610, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword6': {'value': 614, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword7': {'value': 618, 'length': 2, 'type': 'num', 'divide': 1}, 'pdischarge1': {'value': 622, 'length': 4, 'type': 'num', 'divide': 10}, 'p1charge1': {'value': 630, 'length': 4, 'type': 'num', 'divide': 10}, 'vbat': {'value': 738, 'length': 2, 'type': 'num', 'divide': 10}, 'SOC': {'value': 742, 'length': 2, 'type': 'num', 'divide': 1}, 'pactouserr': {'value': 746, 'length': 4, 'type': 'num', 'divide': 10}, '#pactousers': {'value': 654, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#pactousert': {'value': 662, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pactousertot': {'value': 670, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogridr': {'value': 678, 'length': 4, 'type': 'num', 'divide': 10}, '#pactogrids': {'value': 686, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#pactogridt': {'value': 694, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'pactogridtot': {'value': 702, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloadr': {'value': 710, 'length': 4, 'type': 'num', 'divide': 10}, '#plocaloads': {'value': 718, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#plocaloadt': {'value': 726, 'length': 4, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'plocaloadtot': {'value': 734, 'length': 4, 'type': 'num', 'divide': 10}, '#ipm': {'value': 742, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, '#battemp': {'value': 746, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'spdspstatus': {'value': 750, 'length': 2, 'type': 'num', 'divide': 10}, 'spbusvolt': {'value': 754, 'length': 2, 'type': 'num', 'divide': 10}, 'etouser_tod': {'value': 762, 'length': 4, 'type': 'num', 'divide': 10}, 'etouser_tot': {'value': 770, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tod': {'value': 778, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tot': {'value': 786, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tod': {'value': 794, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tot': {'value': 802, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tod': {'value': 810, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tot': {'value': 818, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tod': {'value': 826, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tot': {'value': 834, 'length': 4, 'type': 'num', 'divide': 10}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNXSPA  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'True'}, 'datalogserial': {'value': 16, 'length': 10, 'type': 'text', 'incl': 'yes'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text'}, 'date': {'value': 136, 'divide': 10}, 'group1start': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'group1end': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num'}, 'uwsysworkmode': {'value': 666, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword0': {'value': 162, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword1': {'value': 166, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword2': {'value': 170, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword3': {'value': 174, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword4': {'value': 178, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword5': {'value': 182, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword6': {'value': 186, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword7': {'value': 190, 'length': 2, 'type': 'num', 'divide': 1}, 'pdischarge1': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pcharge1': {'value': 202, 'length': 4, 'type': 'num', 'divide': 10}, 'vbat': {'value': 210, 'length': 2, 'type': 'num', 'divide': 10}, 'SOC': {'value': 214, 'length': 2, 'type': 'num', 'divide': 1}, 'pactouserr': {'value': 218, 'length': 4, 'type': 'num', 'divide': 10}, 'pactousers': {'value': 226, 'length': 4, 'type': 'num', 'divide': 10}, 'pactousert': {'value': 234, 'length': 4, 'type': 'num', 'divide': 10}, 'pactousertot': {'value': 242, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogridr': {'value': 250, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogrids ': {'value': 258, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogrid t': {'value': 266, 'length': 4, 'type': 'num', 'divide': 10}, 'pactogridtot': {'value': 274, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloadr': {'value': 282, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloads': {'value': 290, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloadt': {'value': 298, 'length': 4, 'type': 'num', 'divide': 10}, 'plocaloadtot': {'value': 306, 'length': 4, 'type': 'num', 'divide': 10}, 'ipm': {'value': 314, 'length': 2, 'type': 'num', 'divide': 10}, 'battemp ': {'value': 318, 'length': 2, 'type': 'num', 'divide': 10}, 'spdspstatus': {'value': 322, 'length': 2, 'type': 'num', 'divide': 10}, 'spbusvolt': {'value': 328, 'length': 2, 'type': 'num', 'divide': 10}, 'etouser_tod': {'value': 334, 'length': 4, 'type': 'num', 'divide': 10}, 'etouser_tot': {'value': 342, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tod': {'value': 350, 'length': 4, 'type': 'num', 'divide': 10}, 'etogrid_tot': {'value': 358, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tod': {'value': 366, 'length': 4, 'type': 'num', 'divide': 10}, 'edischarge1_tot': {'value': 374, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tod': {'value': 382, 'length': 4, 'type': 'num', 'divide': 10}, 'eharge1_tot': {'value': 390, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tod': {'value': 398, 'length': 4, 'type': 'num', 'divide': 10}, 'elocalload_tot': {'value': 406, 'length': 4, 'type': 'num', 'divide': 10}, 'dwexportlimitap': {'value': 414, 'length': 4, 'type': 'num', 'divide': 10}, 'epsfac': {'value': 426, 'length': 2, 'type': 'num', 'divide': 100}, 'epsvac1': {'value': 430, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac1': {'value': 434, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac1': {'value': 438, 'length': 4, 'type': 'num', 'divide': 10}, 'epsvac2': {'value': 446, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac2': {'value': 450, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac2': {'value': 454, 'length': 4, 'type': 'num', 'divide': 10}, 'epsvac3': {'value': 462, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac3': {'value': 466, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac3': {'value': 470, 'length': 4, 'type': 'num', 'divide': 10}, 'loadpercent': {'value': 478, 'length': 2, 'type': 'num', 'divide': 1}, 'pf': {'value': 482, 'length': 2, 'type': 'num', 'divide': 10}, 'bmsstatusold': {'value': 486, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsstatus': {'value': 490, 'length': 2, 'type': 'num', 'divide': 1}, 'bmserrorold': {'value': 494, 'length': 2, 'type': 'num', 'divide': 1}, 'bmserror': {'value': 498, 'length': 2, 'type': 'num', 'divide': 1}, 'bmssoc': {'value': 502, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsbatteryvolt': {'value': 506, 'length': 2, 'type': 'num', 'divide': 100}, 'bmsbatterycurr': {'value': 510, 'length': 2, 'type': 'num', 'divide': 100}, 'bmsbatterytemp': {'value': 514, 'length': 2, 'type': 'num', 'divide': 100}, 'bmsmaxcurr': {'value': 518, 'length': 2, 'type': 'num', 'divide': 100}, 'bmsgaugerm': {'value': 522, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsgaugefcc': {'value': 526, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsfw': {'value': 530, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsdeltavolt': {'value': 534, 'length': 2, 'type': 'num', 'divide': 1}, 'bmscyclecnt': {'value': 538, 'length': 2, 'type': 'num', 'divide': 1}, 'bmssoh': {'value': 542, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsconstantvolt': {'value': 546, 'length': 2, 'type': 'num', 'divide': 100}, 'bmswarninfoold': {'value': 550, 'length': 2, 'type': 'num', 'divide': 1}, 'bmswarninfo': {'value': 554, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsgaugeiccurr': {'value': 558, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsmcuversion': {'value': 562, 'length': 2, 'type': 'num', 'divide': 100}, 'bmsgaugeversion': {'value': 566, 'length': 2, 'type': 'num', 'divide': 1}, 'bmswgaugefrversionl': {'value': 570, 'length': 2, 'type': 'num', 'divide': 1}, 'bmswgaugefrversionh': {'value': 574, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsbmsinfo': {'value': 578, 'length': 2, 'type': 'num', 'divide': 1}, 'bmspackinfo': {'value': 582, 'length': 2, 'type': 'num', 'divide': 1}, 'bmsusingcap': {'value': 586, 'length': 2, 'type': 'num', 'divide': 1}, 'bmscell1volt': {'value': 590, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell2volt': {'value': 594, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell3volt': {'value': 598, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell4volt': {'value': 602, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell5volt': {'value': 606, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell6volt': {'value': 610, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell7volt': {'value': 614, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell8volt': {'value': 618, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell9volt': {'value': 622, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell10volt': {'value': 626, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell11volt': {'value': 630, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell12volt': {'value': 634, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell13volt': {'value': 638, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell14volt': {'value': 642, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell15volt': {'value': 646, 'length': 2, 'type': 'num', 'divide': 100}, 'bmscell16volt': {'value': 650, 'length': 2, 'type': 'num', 'divide': 100}, 'acchargeenergytodayh': {'value': 654, 'length': 2, 'type': 'num', 'divide': 10, 'incl': 'no'}, 'group2start': {'value': 658, 'length': 2, 'type': 'num', 'incl': 'no'}, 'group2end': {'value': 662, 'length': 2, 'type': 'num', 'incl': 'no'}, 'acchargeenergytoday': {'value': 666, 'length': 2, 'type': 'num', 'divide': 1}, 'acchargeenergytotal': {'value': 670, 'length': 4, 'type': 'num', 'divide': 1}, 'acchargepower': {'value': 1638, 'length': 4, 'type': 'num', 'divide': 10}, '70%_invpoweradjust': {'value': 686, 'length': 2, 'type': 'num', 'divide': 1}, 'extraacpowertogrid': {'value': 1582, 'length': 4, 'type': 'num', 'divide': 10}, 'eextratoday': {'value': 1590, 'length': 4, 'type': 'num', 'divide': 10}, 'eextratotal': {'value': 1598, 'length': 4, 'type': 'num', 'divide': 10}, 'esystemtoday': {'value': 1606, 'length': 4, 'type': 'num', 'divide': 10}, 'esystemtotal': {'value': 1614, 'length': 4, 'type': 'num', 'divide': 10}, 'group3start': {'value': 1166, 'length': 2, 'type': 'num', 'incl': 'no'}, 'group3end': {'value': 1170, 'length': 2, 'type': 'num', 'incl': 'no'}, 'inverterstatus': {'value': 1174, 'length': 2, 'type': 'num', 'divide': 1}, 'pacs': {'value': 1314, 'length': 4, 'type': 'numx', 'divide': 10}, 'fac': {'value': 1322, 'length': 2, 'type': 'num', 'divide': 100}, 'vac1': {'value': 1326, 'length': 2, 'type': 'num', 'divide': 10}, 'iac1': {'value': 1330, 'length': 2, 'type': 'num', 'divide': 10}, 'pac1': {'value': 1334, 'length': 4, 'type': 'num', 'divide': 10}, 'eactoday': {'value': 1386, 'length': 4, 'type': 'num', 'divide': 10}, 'eactot': {'value': 1394, 'length': 4, 'type': 'num', 'divide': 10}, 'timetotal': {'value': 1402, 'length': 4, 'type': 'num', 'divide': 7200}, 'Temp1': {'value': 1546, 'length': 2, 'type': 'num', 'divide': 10}, 'Temp2': {'value': 1550, 'length': 2, 'type': 'num', 'divide': 10}, 'Temp3': {'value': 1554, 'length': 2, 'type': 'num', 'divide': 10}, 'Temp4': {'value': 1558, 'length': 2, 'type': 'num', 'divide': 10}, 'uwbatvoltdsp': {'value': 1562, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvoltage': {'value': 1566, 'length': 2, 'type': 'num', 'divide': 10}, 'nbusvoltage': {'value': 1570, 'length': 2, 'type': 'num', 'divide': 10}, 'remotectrlen': {'value': 1574, 'length': 2, 'type': 'num', 'divide': 1}, 'remotectrlpower': {'value': 1578, 'length': 2, 'type': 'num', 'divide': 1}, 'eacchargetoday': {'value': 1622, 'length': 4, 'type': 'num', 'divide': 10}, 'eacchargetotal': {'value': 1630, 'length': 4, 'type': 'num', 'divide': 10}, 'priority': {'value': 1646, 'length': 2, 'type': 'num', 'divide': 1}, 'batterytype': {'value': 1650, 'length': 2, 'type': 'num', 'divide': 1}, 'autoproofreadcmd': {'value': 1654, 'length': 2, 'type': 'num', 'divide': 1}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: T06NNNNXMIN  : 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: {'decrypt': {'value': 'true'}, 'pvserial': {'value': 76, 'length': 10, 'type': 'text', 'divide': 10}, 'date': {'value': 136, 'divide': 10}, 'group1start': {'value': 150, 'length': 2, 'type': 'num', 'incl': 'no'}, 'group1end': {'value': 154, 'length': 2, 'type': 'num', 'incl': 'no'}, 'pvstatus': {'value': 158, 'length': 2, 'type': 'num', 'divide': 1}, 'pvpowerin': {'value': 162, 'length': 4, 'type': 'num', 'divide': 10}, 'pv1voltage': {'value': 170, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1current': {'value': 174, 'length': 2, 'type': 'num', 'divide': 10}, 'pv1watt': {'value': 178, 'length': 4, 'type': 'num', 'divide': 10}, 'pv2voltage': {'value': 186, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2current': {'value': 190, 'length': 2, 'type': 'num', 'divide': 10}, 'pv2watt': {'value': 194, 'length': 4, 'type': 'num', 'divide': 10}, 'pv3voltage': {'value': 202, 'length': 2, 'type': 'num', 'divide': 10}, 'pv3current': {'value': 206, 'length': 2, 'type': 'num', 'divide': 10}, 'pv3watt': {'value': 210, 'length': 4, 'type': 'num', 'divide': 10}, 'pv4voltage': {'value': 218, 'length': 2, 'type': 'num', 'divide': 10}, 'pv4current': {'value': 222, 'length': 2, 'type': 'num', 'divide': 10}, 'pv4watt': {'value': 226, 'length': 4, 'type': 'num', 'divide': 10}, 'pvpowerout': {'value': 250, 'length': 4, 'type': 'num', 'divide': 10}, 'pvfrequentie': {'value': 258, 'length': 2, 'type': 'num', 'divide': 100}, 'pvgridvoltage': {'value': 262, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent': {'value': 266, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower': {'value': 270, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage2': {'value': 278, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent2': {'value': 282, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower2': {'value': 286, 'length': 4, 'type': 'num', 'divide': 10}, 'pvgridvoltage3': {'value': 294, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridcurrent3': {'value': 298, 'length': 2, 'type': 'num', 'divide': 10}, 'pvgridpower3': {'value': 302, 'length': 4, 'type': 'num', 'divide': 10}, 'vacrs': {'value': 310, 'length': 2, 'type': 'num', 'divide': 10}, 'vacst': {'value': 314, 'length': 2, 'type': 'num', 'divide': 10}, 'vactr': {'value': 318, 'length': 2, 'type': 'num', 'divide': 10}, 'ptousertotal': {'value': 322, 'length': 4, 'type': 'num', 'divide': 10}, 'ptogridtotal': {'value': 330, 'length': 4, 'type': 'num', 'divide': 10}, 'ptoloadtotal': {'value': 338, 'length': 4, 'type': 'num', 'divide': 10}, 'totworktime': {'value': 346, 'length': 4, 'type': 'num', 'divide': 7200}, 'pvenergytoday': {'value': 354, 'length': 4, 'type': 'num', 'divide': 10}, 'pvenergytotal': {'value': 362, 'length': 4, 'type': 'num', 'divide': 10}, 'epvtotal ': {'value': 370, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1today ': {'value': 378, 'length': 4, 'type': 'num', 'divide': 10}, 'epv1total': {'value': 386, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2today': {'value': 394, 'length': 4, 'type': 'num', 'divide': 10}, 'epv2total': {'value': 402, 'length': 4, 'type': 'num', 'divide': 10}, 'epv3today': {'value': 410, 'length': 4, 'type': 'num', 'divide': 10}, 'epv3total': {'value': 418, 'length': 4, 'type': 'num', 'divide': 10}, 'etousertoday': {'value': 426, 'length': 4, 'type': 'num', 'divide': 10}, 'etousertotal': {'value': 434, 'length': 4, 'type': 'num', 'divide': 10}, 'etogridtoday': {'value': 442, 'length': 4, 'type': 'num', 'divide': 10}, 'etogridtotal': {'value': 450, 'length': 4, 'type': 'num', 'divide': 10}, 'eloadtoday': {'value': 458, 'length': 4, 'type': 'num', 'divide': 10}, 'eloadtotal': {'value': 466, 'length': 4, 'type': 'num', 'divide': 10}, 'deratingmode': {'value': 502, 'length': 2, 'type': 'num', 'divide': 1}, 'iso': {'value': 506, 'length': 2, 'type': 'num', 'divide': 1}, 'dcir': {'value': 510, 'length': 2, 'type': 'num', 'divide': 10}, 'dcis': {'value': 514, 'length': 2, 'type': 'num', 'divide': 10}, 'dcit': {'value': 518, 'length': 2, 'type': 'num', 'divide': 10}, 'gfci': {'value': 522, 'length': 4, 'type': 'num', 'divide': 1}, 'pvtemperature': {'value': 530, 'length': 2, 'type': 'num', 'divide': 10}, 'pvipmtemperature': {'value': 534, 'length': 2, 'type': 'num', 'divide': 10}, 'temp3': {'value': 538, 'length': 2, 'type': 'num', 'divide': 10}, 'temp4': {'value': 542, 'length': 2, 'type': 'num', 'divide': 10}, 'temp5': {'value': 546, 'length': 2, 'type': 'num', 'divide': 10}, 'pbusvoltage': {'value': 550, 'length': 2, 'type': 'num', 'divide': 10}, 'nbusvoltage': {'value': 554, 'length': 2, 'type': 'num', 'divide': 10}, 'ipf': {'value': 558, 'length': 2, 'type': 'num', 'divide': 1}, 'realoppercent': {'value': 562, 'length': 2, 'type': 'num', 'divide': 1}, 'opfullwatt': {'value': 566, 'length': 4, 'type': 'num', 'divide': 10}, 'standbyflag': {'value': 574, 'length': 2, 'type': 'num', 'divide': 1}, 'faultcode': {'value': 578, 'length': 2, 'type': 'num', 'divide': 1}, 'warningcode': {'value': 582, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword0': {'value': 586, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword1': {'value': 590, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword2': {'value': 594, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword3': {'value': 598, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword4': {'value': 602, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword5': {'value': 606, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword6': {'value': 610, 'length': 2, 'type': 'num', 'divide': 1}, 'systemfaultword7': {'value': 614, 'length': 2, 'type': 'num', 'divide': 1}, 'invstartdelaytime': {'value': 618, 'length': 2, 'type': 'num', 'divide': 1}, 'bdconoffstate': {'value': 630, 'length': 2, 'type': 'num', 'divide': 1}, 'drycontactstate': {'value': 634, 'length': 2, 'type': 'num', 'divide': 1}, 'group2start': {'value': 658, 'length': 2, 'type': 'num', 'incl': 'no'}, 'group2end': {'value': 662, 'length': 2, 'type': 'num', 'incl': 'no'}, 'edischrtoday': {'value': 666, 'length': 4, 'type': 'num', 'divide': 10}, 'edischrtotal': {'value': 674, 'length': 4, 'type': 'num', 'divide': 10}, 'echrtoday': {'value': 682, 'length': 4, 'type': 'num', 'divide': 10}, 'echrtotal': {'value': 690, 'length': 4, 'type': 'num', 'divide': 10}, 'eacchrtoday': {'value': 698, 'length': 4, 'type': 'num', 'divide': 10}, 'eacchrtotal': {'value': 706, 'length': 4, 'type': 'num', 'divide': 10}, 'priority': {'value': 742, 'length': 2, 'type': 'num', 'divide': 1}, 'epsfac': {'value': 746, 'length': 2, 'type': 'num', 'divide': 100}, 'epsvac1': {'value': 750, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac1': {'value': 754, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac1': {'value': 758, 'length': 4, 'type': 'num', 'divide': 10}, 'epsvac2': {'value': 766, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac2': {'value': 770, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac2': {'value': 774, 'length': 4, 'type': 'num', 'divide': 10}, 'epsvac3': {'value': 782, 'length': 2, 'type': 'num', 'divide': 10}, 'epsiac3': {'value': 786, 'length': 2, 'type': 'num', 'divide': 10}, 'epspac3': {'value': 790, 'length': 4, 'type': 'num', 'divide': 10}, 'epspac': {'value': 798, 'length': 4, 'type': 'num', 'divide': 10}, 'loadpercent': {'value': 806, 'length': 2, 'type': 'num', 'divide': 10}, 'pf': {'value': 810, 'length': 2, 'type': 'num', 'divide': 10}, 'dcv': {'value': 814, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc1_sysstatemode': {'value': 830, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc1_faultcode': {'value': 834, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc1_warncode': {'value': 838, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc1_vbat': {'value': 842, 'length': 2, 'type': 'num', 'divide': 100}, 'bdc1_ibat': {'value': 846, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_soc': {'value': 850, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc1_vbus1': {'value': 854, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_vbus2': {'value': 858, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_ibb': {'value': 862, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_illc': {'value': 866, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_tempa': {'value': 870, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_tempb': {'value': 874, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc1_pdischr': {'value': 878, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc1_pchr': {'value': 886, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc1_edischrtotal': {'value': 894, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc1_echrtotal': {'value': 902, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc1_flag': {'value': 914, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc2_sysstatemode': {'value': 922, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc2_faultcode': {'value': 926, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc2_warncode': {'value': 930, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc2_vbat': {'value': 934, 'length': 2, 'type': 'num', 'divide': 100}, 'bdc2_ibat': {'value': 938, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_soc': {'value': 942, 'length': 2, 'type': 'num', 'divide': 1}, 'bdc2_vbus1': {'value': 946, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_vbus2': {'value': 950, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_ibb': {'value': 954, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_illc': {'value': 958, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_tempa': {'value': 962, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_tempb': {'value': 966, 'length': 2, 'type': 'num', 'divide': 10}, 'bdc2_pdischr': {'value': 970, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc2_pchr': {'value': 978, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc2_edischrtotal': {'value': 986, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc2_echrtotal': {'value': 994, 'length': 4, 'type': 'num', 'divide': 10}, 'bdc2_flag': {'value': 1006, 'length': 4, 'type': 'num', 'divide': 1}, 'bms_status': {'value': 1014, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_error': {'value': 1018, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_warninfo': {'value': 1022, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_soc': {'value': 1026, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_batteryvolt': {'value': 1030, 'length': 2, 'type': 'num', 'divide': 100}, 'bms_batterycurr': {'value': 1034, 'length': 2, 'type': 'num', 'divide': 100}, 'bms_batterytemp': {'value': 1038, 'length': 2, 'type': 'num', 'divide': 10}, 'bms_maxcurr': {'value': 1042, 'length': 2, 'type': 'num', 'divide': 100}, 'bms_deltavolt': {'value': 1046, 'length': 2, 'type': 'num', 'divide': 100}, 'bms_cyclecnt': {'value': 1050, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_soh': {'value': 1054, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_constantvolt': {'value': 1058, 'length': 2, 'type': 'num', 'divide': 100}, 'bms_bms_info': {'value': 1062, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_packinfo': {'value': 1066, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_usingcap': {'value': 1070, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_fw': {'value': 1074, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_mcuversion': {'value': 1078, 'length': 2, 'type': 'num', 'divide': 1}, 'bms_commtype': {'value': 1082, 'length': 2, 'type': 'num', 'divide': 1}}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott external record whitelist 'recwl.txt' not found
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott records whitelisted :  {'5216', '5004', '5016', '5104', '0150', '5119', '5050', '5116', '5229', '5250', '5105', '0120', '5129', '5103', '5150', '5003', '0105', '0119', '0103', '5019', '5005', '501b', '0116', '5219', '0104'}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott settings:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _Generic:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         version:                      2.8.2
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         verbose:                      True
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         trace:                        False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         config file:                  /config/grott/grott.ini
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         minrecl:                      100
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         decrypt:                      True
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         compat:                       False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         invtype:                      tl3
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         invtypemap:                   {}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         include_all:                  False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         blockcmd:                     False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         noipf:                        False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         time:                         auto
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         sendbuf:                      True
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         timezone:                     local
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         valueoffset:                  6
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         offset:                       6
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         inverterid:                   automatic
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mode:                         proxy
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         grottip                       default
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         grottport                     5279
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _MQTT:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         nomqtt                        False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttip:                       172.30.33.0
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttport:                     1883
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqtttopic:                    energy/growatt
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttmtopic:                   False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttmtopicname:               energy/meter
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttinverterintopic:          False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqtttretain:                  False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqtttauth:                    True
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttuser:                     addons
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         mqttpsw:                      **secret**
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _Growatt server:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         growattip:                    47.91.67.66
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         growattport:                  5279
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _PVOutput:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvoutput:                     False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvdisv1:                      False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvtemp:                       False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvurl:                        https://pvoutput.org/service/r2/addstatus.jsp
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvapikey:                     yourapikey
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvinverters:                  1
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         pvsystemid:                   systemid1
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _Influxdb:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         influx:                      False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         influx2:                     False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         database:                    grottdb
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         ip:                          localhost
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         port:                        8086
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         user:                        grott
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         password:                    **secret**
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         organization:                grottorg
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         bucket:                      grottdb
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         token:                       **secret**
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: _Extension:
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         extension:                   False
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         extname:                     grottext
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:         extvar:                      {'none': 'none'}
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Grott proxy mode started
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:          **********************************************************************************
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott - libscrc not installed, no CRC checking only record validation on length!
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]:          **********************************************************************************
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: Hostname : 1ef934e0-grott-beta
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: IP :  172.30.33.3 , port :  5279 
Dec 15 20:59:55 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - ('192.168.10.92', 12381) has connected
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x03\x00\x06\x02\x41\x01\x03\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x40\x49\x5a\x75\x61
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x3b\x72\x6e\x75\xbc\x74\x74\x47\x16\x6f\x77\x46\x64\x74\x46\xf4\xcf
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x89\x35\x39\x76\x5c\x5f\x77\x3b\x35\x36\x06\x72\x63\x77\x60\x74\x74\x44
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9a\x6f\x36\x61\x35\x74\xe0\x72\xc8\x77\x61\x27\x24\x0a\x40\x2b\x35\x24\x44
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x40\x73\x72\x6f\x77\x61\x74\x75\x47\x16\x6f\x77\x61\x74\x54\x67\x52\x3f\x21
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x41\x3d\x1a\x31\x17\x1d\x03\x04\x06\x54\x67\x72\x6f\x63\x30\x76\x75\x40\x95
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x7b\x61\x64\x74\x40\x72\x54\x77\x7e\x74\x72\x40\x7a\x65\x2d\x73\x28\x60
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x17\x70\xd3\x7d\xdf\x66\x28\x53\x22\x6d\xcb\x6b\xca\x66\x1b\x66\x3f\x70\x9e
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x7d\x96\x55\xfc\x7c\xe0\x63\x79\x74\x0c\x72\x24\x77\x64\x74\x46\x47\x77\x6f
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x61\x71\x74\x0c\x72\x6a\x77\x2a\x74\x71\x4d\x66\x6f\x77\x20\x39\x36\x06
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x42\x5d\x47\x53\x44\x44\x76\x40\x6e\x46\x61\x72\x74\x47\x61\xce\x77\x42\x7d
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x14\x4d\x66\x67\xef\x69\x62\x74\x53\x72\x6a\x7e\x0e\x7c\x88\x60\x62\x48\x67
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x46\x64\x53\x57\x55\x7f\x50\x71\x74\x74\x47\x72\x6e\x5b\x61\x8b\x3a\x67\x72
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x90\x39\x41\x74\x8b\x09\x52\x6f\x88\x2f\x54\x77\x46\x72\x6f\x78\x60\x74\x10
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x73\x6c\x9f\x61\x74\x7f\xff\x7e\x5b\x77\x61\x27\x24\x0a\x40\x2b\x35\x24
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x44\x40\x73\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6e\x83\x61\x74\x75\xd7\x72\x6e\x77\x61\x74\x74\x47
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6d\x2f\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x51\xda\x6f\x77\x61\x74
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x10\x47\x78\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x23\x72\x0b\x77\x61\x74\x74\x47\x72
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x37\x2f\x39\x2c\x2c\x1f
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x2a\x37\x2f\x39\x2c\x2c\x1f\x2a\x37\x2f\x61\x74\x74\x47\x72\x6f\x77\x61\x54
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x54\x67\x52\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x59\xc9
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 585
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060103XTL3
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - no matching record layout found, try generic
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T060103XTL3
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  000300060241010358474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c10073b35020000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  007c000102dd0000006400002710000186a003e8414d312e30005a414241000c0001000003e80
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  041004100a700a7000053504d3244424530343400000000000100640000000020202050562049
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  6e766572746572202000001451020107e7000c00100007003b001f000607080a5a125c145002b
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  c0abe125c145002bc0abe125c145007ff09e2128e1397020d004b004b000500320005004b0005
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  004b0005004b00050a140000414d4241303230323030313201310006000013a1002309600a140
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  898081600140005096f08fc27102710271027102710271000000000012c00ff4e2000ff4e2000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  ff4e2000ff4e20030100000f010064000103e800000bb80c34000053504d32444245303434000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000000000000000000000000000000000000001f400000190000100000000000002580000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000000000016a8000000000000000000000064000a00000000000000000000000000000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000064006400000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000005858585858585858585858585858585800000000000000002020202000000000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000002ba6
Dec 15 21:00:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data ack record or data record not defined no processing done
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:03 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:03 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:03 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:03 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:04 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:04 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:04 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:04 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:05 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:05 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:05 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:05 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:06 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:06 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:06 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:06 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:07 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:07 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:07 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:07 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:08 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:08 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:08 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:08 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:09 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:09 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:09 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:09 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:10 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:10 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:10 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:10 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:11 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:11 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:11 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:11 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:12 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:12 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:12 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:12 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:13 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:13 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:13 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:13 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:14 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:14 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:14 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:14 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:15 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:15 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:15 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:15 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:16 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:16 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:16 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:16 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:17 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:17 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:17 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:17 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:18 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:18 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:18 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:18 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:19 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:19 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:19 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:19 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x1c\x00\x06\x02\x41\x01\x04\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x71\x7c\x75\x6a
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \xcc\x78\x73\x72\x6e\x77\x61\xbe\x4a\x42\xe4\x6f\x32\x61\x74\x52\xad\x62\x4d
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x37\x74\x74\xcc\x37\x7f\x24\x61\x7a\x74\x47\x6a\x60\x77\x61\x74\x74\x47
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\xbe\x79\x72\x6f\x77\x61\x74\x74\xf8\x4e\x7c\xf3\x68\xc0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\xa6\x72\x6f\xad\x48\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x4e\xc6\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\xf9\x72\x47\x72
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x52\x4f\x61\x3c\x56\xdc\x72\x6f\x77\x4c\x74\x74\x2d\x76\x6f\x77\x14\xe4\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x66\x77\x61\x7b\x53\x47\x72\x6f\x56\x61\x74\x45\x26\x72\x6f\x77\x61
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x76\xab\x77\x61\x74\x54\x47\x72\x26
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \xcf\x61\x74\x74\x49\x72\x6f\x47\xfd\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x41\x77\x61\x74\x74\x3b\x88\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x75
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x98\x46\x9e\x6f\x77\x61\x74\x75\x86\x62\x3c\x77\x61\x75\xf1\x47\x42\x6f\x77
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x7b\x4e\x67\x6b\x74\x77\x72
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x33\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x7a\x4a\x6f\x77\x61\x44\x78\x72\x7e\xde\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x07\xd0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x7b\x47\x72\x44\x98\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x53\x64\x47\x72\x7f\xfd\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x75\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x76\x61\x74\x74\x47\x72
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6e\xb6\x61\x74\x74\x47\x57\xae
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 585
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060104XTL3
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - no matching record layout found, try generic
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T06NNNNXTL3
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  001c00060241010458474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c10080313020bb8
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  0c3400010000ca3e05960045000026ea1022005600008b451053000e0000180f0000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000ca3e000000000000bf3c138409b400e10000da29000000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  0009b4000000000000000000008d0600003d380048229b0000002d00006a04000075900000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  900000f270000002100003161000000000000000000000000000004c400000020000049b80000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  000e0000309c00000000000000000000002e000000007cfa0000000000000000000001ec01ec0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  000000001c1105300000185003000000000000000000000000000001439061f00300000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  0000410000000000000000000000003d38000000300c350cb1000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000000000000000000075bf0000000f00002bef00000000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000000000000000000000000000000000027100000108a0000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000010000000000000000000000010000000000000000000000000
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  1c10000000025c1
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T06NNNNXTL3
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-16T08:03:19
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvstatus             :  1
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerin            :  5177.4
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1voltage           :  143.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1current           :  6.9
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1watt              :  996.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2voltage           :  413.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2current           :  8.6
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2watt              :  3565.3
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerout           :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvfrequentie         :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage        :  248.4
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent        :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower          :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage2       :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent2       :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower2         :  236598067.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage3       :  1567.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent3       :  7.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower3         :  58058342.4
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_RS               :  4.5
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_ST               :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_TR               :  2714.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytoday        :  3009.6
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytotal        :  0.9
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  totworktime          :  0.5
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1today            :  3.3
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1total            :  1264.1
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2today            :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2total            :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epvtotal             :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvtemperature        :  49.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvipmtemperature     :  49.2
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvboottemperature    :  0.0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  uwBatVolt_DSP        :  44.9
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pbusvolt             :  4179
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                  -  nbusvolt             :  0
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""SPM2DBE044"", ""time"": ""2023-12-16T08:03:19"", ""buffered"": ""no"",
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvstatus"": 1, ""pvpowerin"": 51774, ""pv1voltage"": 1430, ""pv1current"": 69,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pv1watt"": 9962, ""pv2voltage"": 4130, ""pv2current"": 86, ""pv2watt"": 35653,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvpowerout"": 0, ""pvfrequentie"": 0, ""pvgridvoltage"": 2484, ""pvgridcurrent"":
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""pvgridpower"": 0, ""pvgridvoltage2"": 0, ""pvgridcurrent2"": 0,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower2"": 2365980672, ""pvgridvoltage3"": 15672, ""pvgridcurrent3"": 72,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower3"": 580583424, ""Vac_RS"": 45, ""Vac_ST"": 0, ""Vac_TR"": 27140,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvenergytoday"": 30096, ""pvenergytotal"": 9, ""totworktime"": 3879,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epv1today"": 33, ""epv1total"": 12641, ""epv2today"": 0, ""epv2total"": 0,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epvtotal"": 0, ""pvtemperature"": 492, ""pvipmtemperature"": 492,
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvboottemperature"": 0, ""uwBatVolt_DSP"": 449, ""pbusvolt"": 4179, ""nbusvolt"":
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:                          0}}
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 21:00:20 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:22 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:22 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:22 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:22 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:25 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:25 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:25 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:25 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x20\x00\x06\x01\x0e\x01\x20\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x72\x45\x77\xa9
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\xf6\x6f\x77\x68\xd4\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \xc7\x61\x74\x74\x47\x72\x6f\x77\x61\x8b\x8b\x35\x3e\x6f\x77\x61\x74\x74\x47
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\xd0\xa1\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x21\x32\x74
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x8b\xb8\x8e\xc2\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9e\x8b\x06\x0b\x72\x6f\xd3\xb4\x74\x74\x11\x21\x90\x88\x9d\xd9\x74\x47\x73
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9b\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x7a\x2a\x74\x74
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x0d\x40\x6f\x77\x5a\xf4\x74\x47\x77\x27\x77\x61\x74\x74\x47\x72\x38\x09\x61
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x34\x8e\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x9d\xbc
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 278
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060120
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T060120
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  00200006010e012058474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c1008002a00c800
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  000084000009a00000000000000000000000b00000000000000000ffff724c000000000000000
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  00000a4d50000000000000000000056530000000000000000fffffcad0000000000000000ffff
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  724c0000a4d500005653fffffcad000001f400000000000000000000000000000d4b00004a320
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  0003b8000000548000000000000577e000040c900000000000000000000000000000000000000
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000000000f2cb
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T060120
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-16T08:00:42
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l1           :  246.4
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l2           :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l3           :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l1           :  17.6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l2           :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l3           :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l1         :  -3627.6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l2         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l3         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l1         :  4219.7
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l2         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l3         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l1       :  2209.9
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l2       :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l3       :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l1       :  -0.9
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l2       :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l3       :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_rev_act_power    :  -3627.6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_power        :  -3627.6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_power        :  -3627.6
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power            :  4219.7
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power          :  2209.9
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor          :  -0.9
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  frequency            :  50.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L1-2_voltage         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L2-3_voltage         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L3-1_voltage         :  0.0
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_energy       :  340.3
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_energy       :  1899.4
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""XGD6CM31UN"", ""time"": ""2023-12-16T08:00:42"", ""buffered"": ""no"",
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""voltage_l1"": 2464, ""voltage_l2"": 0, ""voltage_l3"": 0, ""Current_l1"": 176,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""Current_l2"": 0, ""Current_l3"": 0, ""act_power_l1"": -36276, ""act_power_l2"": 0,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""act_power_l3"": 0, ""app_power_l1"": 42197, ""app_power_l2"": 0, ""app_power_l3"":
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""react_power_l1"": 22099, ""react_power_l2"": 0, ""react_power_l3"": 0,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""powerfactor_l1"": -851, ""powerfactor_l2"": 0, ""powerfactor_l3"": 0,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_rev_act_power"": -36276, ""pos_act_power"": -36276, ""rev_act_power"":
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          -36276, ""app_power"": 42197, ""react_power"": 22099, ""powerfactor"": -851,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""frequency"": 500, ""L1-2_voltage"": 0, ""L2-3_voltage"": 0, ""L3-1_voltage"": 0,
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_act_energy"": 3403, ""rev_act_energy"": 18994}}
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:00:43 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:03:00 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:03:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:03:00 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:03:00 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:03:01 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:03:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:03:01 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:03:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x1d\x00\x06\x02\x41\x01\x04\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x77\x6a\x75\x6a
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \xcc\x78\x73\x72\x6e\x77\x61\xa5\x26\x42\xe1\x6f\x31\x61\x74\x53\x3d\x7d\x9c
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x38\x74\x74\xc9\x34\x7f\xc1\x61\x64\x74\x47\x69\xfd\x77\x61\x74\x74\x47
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\xa5\x15\x72\x6f\x77\x61\x74\x74\x81\x3e\x7c\xf2\x68\xde
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\xa4\x72\x6f\xab\xb8\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x4e\xd8\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x18\x40\x47\x72
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x0a\x69\x61\x3c\x50\xb8\x72\x6f\x77\x50\x74\x74\x2d\x7a\x6f\x77\x14\xe1\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x65\x77\x61\x7b\x5c\x47\x72\x6f\x53\x61\x74\x45\x23\x72\x6f\x77\x61
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x76\xab\x77\x61\x74\x57\x47\x72\x26
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \xcc\x61\x74\x74\x57\x72\x6f\x47\xff\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x5c\x77\x61\x74\x74\x3b\x88\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x75
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x86\x46\x80\x6f\x77\x61\x74\x75\x8f\x62\xd8\x77\x61\x75\x4b\x47\x40\x6f\x77
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x7b\x99\x6b\x68\x74\x73\x72
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x33\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x22\x6c\x6f\x77\x61\x40\x78\x72\x7e\xde\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x07\xac
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x65\x47\x72\x44\x86\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x53\x64\x47\x72\x7f\xc9\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x75\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x76\x61\x74\x74\x47\x72
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6e\xbf\x61\x74\x74\x47\x39\x2e
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 585
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060104XTL3
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - no matching record layout found, try generic
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T06NNNNXTL3
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  001d00060241010458474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c10080505020bb8
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0c3400010000d152059300460000277a0ff3005900008e4610b6001000001b920000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000d152000000000000c64c138509aa00e30000dcd9000000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0009aa000000000000000000006c340000651e004824ff0000003100006a08000075950000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  a00000f280000002400003164000000000000000000000000000004c400000023000049bb0000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00100000309e000000000000000000000033000000007cfa0000000000000000000001f201f20
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  000000001c810b70000013f0032000000000000000000000000000014ee0a1c00340000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  000041000000000000000000000000651e000000340c350cb1000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000000000000000000075c30000001100002bf100000000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000002710000010be0000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000010000000000000000000000010000000000000000000000000
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  1c8000000004b41
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T06NNNNXTL3
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-16T08:05:05
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvstatus             :  1
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerin            :  5358.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1voltage           :  142.7
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1current           :  7.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1watt              :  1010.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2voltage           :  408.3
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2current           :  8.9
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2watt              :  3642.2
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerout           :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvfrequentie         :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage        :  247.4
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent        :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower          :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage2       :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent2       :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower2         :  181534720.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage3       :  2588.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent3       :  7.2
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower3         :  62069145.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_RS               :  4.9
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_ST               :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_TR               :  2714.4
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytoday        :  3010.1
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytotal        :  1.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  totworktime          :  0.5
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1today            :  3.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1total            :  1264.4
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2today            :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2total            :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epvtotal             :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvtemperature        :  49.8
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvipmtemperature     :  49.8
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvboottemperature    :  0.0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  uwBatVolt_DSP        :  45.6
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pbusvolt             :  4279
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  nbusvolt             :  0
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""SPM2DBE044"", ""time"": ""2023-12-16T08:05:05"", ""buffered"": ""no"",
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvstatus"": 1, ""pvpowerin"": 53586, ""pv1voltage"": 1427, ""pv1current"": 70,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pv1watt"": 10106, ""pv2voltage"": 4083, ""pv2current"": 89, ""pv2watt"": 36422,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvpowerout"": 0, ""pvfrequentie"": 0, ""pvgridvoltage"": 2474, ""pvgridcurrent"":
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""pvgridpower"": 0, ""pvgridvoltage2"": 0, ""pvgridcurrent2"": 0,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower2"": 1815347200, ""pvgridvoltage3"": 25886, ""pvgridcurrent3"": 72,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower3"": 620691456, ""Vac_RS"": 49, ""Vac_ST"": 0, ""Vac_TR"": 27144,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvenergytoday"": 30101, ""pvenergytotal"": 10, ""totworktime"": 3880,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epv1today"": 36, ""epv1total"": 12644, ""epv2today"": 0, ""epv2total"": 0,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epvtotal"": 0, ""pvtemperature"": 498, ""pvipmtemperature"": 498,
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvboottemperature"": 0, ""uwBatVolt_DSP"": 456, ""pbusvolt"": 4279, ""nbusvolt"":
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                          0}}
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:05:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x21\x00\x06\x01\x0e\x01\x20\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x77\x62\x77\xa9
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\xf6\x6f\x77\x68\xef\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \xf8\x61\x74\x74\x47\x72\x6f\x77\x61\x8b\x8b\xd4\x48\x6f\x77\x61\x74\x74\x47
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\xf6\x95\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x3d\xf4\x74
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x8b\xb8\x8e\xa4\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9e\x8b\xe7\x7d\x72\x6f\xf5\x80\x74\x74\x0d\xe7\x90\x88\x9d\xbf\x74\x47\x73
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9c\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x7a\x2a\x74\x74
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x0d\x47\x6f\x77\x5a\xf6\x74\x47\x77\x27\x77\x61\x74\x74\x47\x72\x38\xf7\x61
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x34\x8d\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x94\xb5
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 278
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060120
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T060120
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  00210006010e012058474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c1008050d00c800
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  0000840000099b00000000000000000000008f0000000000000000ffff933a000000000000000
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  0000082e1000000000000000000004a950000000000000000fffffccb0000000000000000ffff
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  933a000082e100004a95fffffccb000001f300000000000000000000000000000d4b00004a350
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  0003b82000005480000000000005780000040ca00000000000000000000000000000000000000
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000000000fbc2
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T060120
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-16T08:05:13
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l1           :  245.9
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l2           :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l3           :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l1           :  14.3
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l2           :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l3           :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l1         :  -2784.6
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l2         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l3         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l1         :  3350.5
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l2         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l3         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l1       :  1909.3
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l2       :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l3       :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l1       :  -0.8
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l2       :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l3       :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_rev_act_power    :  -2784.6
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_power        :  -2784.6
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_power        :  -2784.6
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power            :  3350.5
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power          :  1909.3
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor          :  -0.8
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  frequency            :  49.9
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L1-2_voltage         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L2-3_voltage         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L3-1_voltage         :  0.0
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_energy       :  340.3
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_energy       :  1899.7
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""XGD6CM31UN"", ""time"": ""2023-12-16T08:05:13"", ""buffered"": ""no"",
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""voltage_l1"": 2459, ""voltage_l2"": 0, ""voltage_l3"": 0, ""Current_l1"": 143,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""Current_l2"": 0, ""Current_l3"": 0, ""act_power_l1"": -27846, ""act_power_l2"": 0,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""act_power_l3"": 0, ""app_power_l1"": 33505, ""app_power_l2"": 0, ""app_power_l3"":
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""react_power_l1"": 19093, ""react_power_l2"": 0, ""react_power_l3"": 0,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""powerfactor_l1"": -821, ""powerfactor_l2"": 0, ""powerfactor_l3"": 0,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_rev_act_power"": -27846, ""pos_act_power"": -27846, ""rev_act_power"":
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          -27846, ""app_power"": 33505, ""react_power"": 19093, ""powerfactor"": -821,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""frequency"": 499, ""L1-2_voltage"": 0, ""L2-3_voltage"": 0, ""L3-1_voltage"": 0,
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_act_energy"": 3403, ""rev_act_energy"": 18997}}
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:05:29 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:06:01 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:06:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:06:01 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:06:01 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:06:02 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:06:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:06:02 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:06:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:09:02 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x1e\x00\x06\x02\x41\x01\x04\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x7b\x5d\x75\x6a
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \xcc\x78\x73\x72\x6e\x77\x61\xa3\x06\x42\x04\x6f\x3d\x61\x74\x5c\xf2\x62\x4b
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x38\x74\x74\xd6\x70\x7f\x01\x61\x66\x74\x47\x6f\xd4\x77\x61\x74\x74\x47
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\xa3\x35\x72\x6f\x77\x61\x74\x74\x8b\x4f\x7c\xfc\x68\xdf
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\xae\x72\x6f\x95\xba\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x4e\xd9\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\xd4\x14\x47\x72
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x58\x65\x61\x3c\x53\x16\x72\x6f\x77\x54\x74\x74\x2d\x7e\x6f\x77\x14\xee\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x64\x77\x61\x7b\x5d\x47\x72\x6f\x50\x61\x74\x45\x20\x72\x6f\x77\x61
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x76\xab\x77\x61\x74\x52\x47\x72\x26
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \xc9\x61\x74\x74\x55\x72\x6f\x47\xc1\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x57\x77\x61\x74\x74\x3b\x88\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x75
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x8e\x46\x88\x6f\x77\x61\x74\x75\x88\x62\x18\x77\x61\x75\x37\x47\x46\x6f\x77
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x7a\xfc\x64\xf5\x74\x7e\x72
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x33\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x70\x60\x6f\x77\x61\x4d\x78\x72\x7e\xde\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x07\xa7
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x66\x47\x72\x44\x85\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x53\x64\x47\x72\x7f\x0e\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x75\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x76\x61\x74\x74\x47\x72
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  \x6f\x77\x61\x74\x74\x47\x72\x6e\xb8\x61\x74\x74\x47\x3b\x36
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 585
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060104XTL3
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - no matching record layout found, try generic
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T06NNNNXTL3
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  001e00060241010458474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c10080932020bb8
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0c3400010000d7720576004a000028b510240059000091021076001200001dbb0000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000d772000000000000cc3d138b09ab00e90000e2db000000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0009ab00000000000000000000a06000003712004827510000003500006a0c0000759a0000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  b00000f290000002700003167000000000000000000000000000004c400000026000049be0000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0012000030a0000000000000000000000038000000007cfa0000000000000000000001fa01fa0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  000000001cf10770000014300340000000000000000000000000000158b058100390000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  0000410000000000000000000000003712000000390c350cb1000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  000000000000000000000000075c80000001200002bf200000000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000002710000010790000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000010000000000000000000000010000000000000000000000000
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  1cf000000004959
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T06NNNNXTL3
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-16T08:09:50
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvstatus             :  1
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerin            :  5515.4
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1voltage           :  139.8
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1current           :  7.4
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv1watt              :  1042.1
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2voltage           :  413.2
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2current           :  8.9
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pv2watt              :  3712.2
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvpowerout           :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvfrequentie         :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage        :  247.5
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent        :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower          :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage2       :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent2       :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower2         :  269064601.6
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridvoltage3       :  1409.8
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridcurrent3       :  7.2
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvgridpower3         :  65961984.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_RS               :  5.3
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_ST               :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Vac_TR               :  2714.8
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytoday        :  3010.6
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvenergytotal        :  1.1
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  totworktime          :  0.5
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1today            :  3.9
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv1total            :  1264.7
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2today            :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epv2total            :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  epvtotal             :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvtemperature        :  50.6
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvipmtemperature     :  50.6
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvboottemperature    :  0.0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  uwBatVolt_DSP        :  46.3
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pbusvolt             :  4215
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                  -  nbusvolt             :  0
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""SPM2DBE044"", ""time"": ""2023-12-16T08:09:50"", ""buffered"": ""no"",
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvstatus"": 1, ""pvpowerin"": 55154, ""pv1voltage"": 1398, ""pv1current"": 74,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pv1watt"": 10421, ""pv2voltage"": 4132, ""pv2current"": 89, ""pv2watt"": 37122,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvpowerout"": 0, ""pvfrequentie"": 0, ""pvgridvoltage"": 2475, ""pvgridcurrent"":
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""pvgridpower"": 0, ""pvgridvoltage2"": 0, ""pvgridcurrent2"": 0,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower2"": 2690646016, ""pvgridvoltage3"": 14098, ""pvgridcurrent3"": 72,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvgridpower3"": 659619840, ""Vac_RS"": 53, ""Vac_ST"": 0, ""Vac_TR"": 27148,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvenergytoday"": 30106, ""pvenergytotal"": 11, ""totworktime"": 3881,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epv1today"": 39, ""epv1total"": 12647, ""epv2today"": 0, ""epv2total"": 0,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""epvtotal"": 0, ""pvtemperature"": 506, ""pvipmtemperature"": 506,
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pvboottemperature"": 0, ""uwBatVolt_DSP"": 463, ""pbusvolt"": 4215, ""nbusvolt"":
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:                          0}}
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 21:10:21 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 21:10:22 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:10:22 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:10:22 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 12381)>
Dec 15 21:10:22 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 45016), raddr=('47.91.67.66', 5279)>
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt original Data:
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x00\x22\x00\x06\x01\x0e\x01\x20\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x64\x4f\x7b\x59\x77\xa9
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x74\x47\xf6\x6f\x77\x68\xe5\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x23\x61\x74\x74\x47\x72\x6f\x77\x61\x8b\x8b\xbf\xd9\x6f\x77\x61\x74\x74\x47
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x32\xa8\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x31\x1b\x74
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x8b\xb8\x8d\xf5\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9e\x8b\x8c\xec\x72\x6f\x31\xbd\x74\x74\x01\x08\x90\x88\x9e\xee\x74\x47\x73
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9b\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x7a\x2a\x74\x74
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x0d\x4a\x6f\x77\x5a\xf7\x74\x47\x77\x27\x77\x61\x74\x74\x47\x72\x38\xf4\x61
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x34\x8b\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x0c\xf9
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 278
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060120
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T060120
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  00220006010e012058474436434d3331554e00000000000000000000000000000000000000005
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c1008093600c800
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  000084000009910000000000000000000000540000000000000000fffff8ab000000000000000
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  0000046dc00000000000000000000467a0000000000000000ffffff9a0000000000000000ffff
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  f8ab000046dc0000467affffff9a000001f400000000000000000000000000000d4b00004a380
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  0003b83000005480000000000005783000040cc00000000000000000000000000000000000000
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000000000638e
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T060120
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 21:10:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
"
MhsjkxgF,vault scan,SirRedstone,Lua,Friday 15th of December 2023 04:03:15 PM CDT,"-- Initialisation
local peripheralName = ""create:item_vault""
local channel = 4  -- Le canal d'écoute et d'envoi

-- Recherche d'un modem sans fil
local modem = peripheral.find(""modem"", function(name, device)
    return device.isWireless()
end)

if not modem then
    print(""Erreur : Aucun modem sans fil trouvé. Le script nécessite un modem sans fil."")
    return
end

print(""Modem sans fil trouvé et prêt."")
modem.open(channel)
print(""Modem ouvert sur le canal "" .. channel .. ""."")

while true do
    print(""En attente d'un message sur le canal "" .. channel .. ""..."")
    local event, side, recvChannel, replyChannel, message, distance = os.pullEvent(""modem_message"")

    if recvChannel == channel and message == ""scan"" then
        print(""Reçu un message 'scan'. Début de la recherche du 'create:item_vault'."")
        local itemVault = peripheral.find(peripheralName)

        local jsonResult = {}

        -- Traitement si le périphérique est trouvé
        if itemVault then
            print(""'create:item_vault' trouvé. Récupération des données de l'inventaire..."")
            local items = itemVault.list()
            if #items > 0 then
                local item = items[1]
                jsonResult[""type""] = item.name
                jsonResult[""quantity""] = item.count

                for slot, item in pairs(items) do
                    jsonResult[""quantity""] = jsonResult[""quantity""] + item.count
                end
                print(""Données de l'inventaire récupérées."")
            else
                jsonResult[""type""] = null
                jsonResult[""quantity""] = 0
                print(""Le 'create:item_vault' est vide."")
            end
        else
            -- Aucun item vault trouvé, envoi d'un JSON avec type null et quantity 0
            jsonResult[""type""] = null
            jsonResult[""quantity""] = 0
            print(""Aucun 'create:item_vault' trouvé."")
        end

        local json = textutils.serializeJSON(jsonResult)
        modem.transmit(channel, channel, json)
        print(""Données envoyées sur le canal "" .. channel .. ""."")
    end
end

-- Le script continue à écouter indéfiniment jusqu'à ce qu'il soit arrêté manuellement
"
nWvqqqCR,HAUNTED HOUSE TITLE,lovejoy777,ZXBasic,Friday 15th of December 2023 03:39:14 PM CDT,"   10 REM *****************************************
   20 REM * User Defined Character Title Screen   *
   30 REM * Version 1.0                           *
   40 REM *                                       *
   50 REM * Written for the Agon Light2           *
   60 REM * By Steve Lovejoy       2023           *
   70 REM *****************************************
   80 MODE 8 : REM 40x30, 16 colours.
   85 VDU 23,1,0;0;0;0; : REM Disable cursor
   90 REM ASSIGN H to CHRS.
   100 VDU 23,201,0,56,56,56,56,56,57,59
   110 VDU 23,202,0,28,28,28,28,28,252,252
   120 VDU 23,203,57,56,56,56,56,56,56,48
   130 VDU 23,204,252,60,28,28,28,28,28,12
   140 REM ASSIGN A to CHARS.
   150 VDU 23,205,0,1,1,3,3,7,7,7
   160 VDU 23,206,0,128,128,128,192,192,224,224
   170 VDU 23,207,15,14,14,30,30,28,60,56
   180 VDU 23,208,96,112,112,240,248,60,28,30
   190 REM ASSIGN U to CHARS.
   200 VDU 23,209,0,16,56,56,56,56,56,56
   210 VDU 23,210,0,8,28,28,28,28,28,28
   220 VDU 23,211,56,56,56,56,56,60,60,30
   230 VDU 23,212,28,28,28,28,28,60,60,120
   240 REM ASSIGN N to CHARS.
   250 VDU 23,213,0,24,24,28,30,62,63,63
   260 VDU 23,214,0,8,28,28,28,28,28,156
   270 VDU 23,215,63,59,57,56,56,56,56,56
   280 VDU 23,216,252,252,252,252,124,124,60,28
   290 REM ASSIGN T to CHARS.
   300 VDU 23,217,0,12,29,25,1,1,1,1
   310 VDU 23,218,0,240,248,248,192,192,192,192
   320 VDU 23,219,1,1,1,1,1,1,1,1
   330 VDU 23,220,192,192,192,192,192,192,192,192
   340 REM ASSIGN E to CHARS.
   350 VDU 23,221,0,12,30,30,30,30,30,30
   360 VDU 23,222,0,124,124,24,0,0,56,124
   370 VDU 23,223,30,30,30,30,30,30,30,30
   380 VDU 23,224,56,0,0,0,0,56,124,56
   390 REM ASSIGN D to CHARS.
   400 VDU 23,225,0,48,57,56,56,56,56,56
   410 VDU 23,226,0,192,224,240,60,28,28,28
   420 VDU 23,227,56,56,56,56,56,56,56,48
   430 VDU 23,228,28,28,28,60,252,248,240,192
   440 REM ASSIGN O to CHARS.
   450 VDU 23,229,0,2,6,15,30,60,56,120
   460 VDU 23,230,0,96,96,120,124,28,30,14
   470 VDU 23,231,120,120,120,120,56,60,30,14
   480 VDU 23,232,14,14,14,30,30,60,120,112
   490 REM ASSIGN S to CHARS.
   500 VDU 23,233,0,7,15,31,62,60,62,31
   510 VDU 23,234,0,16,188,28,30,12,0,128
   520 VDU 23,235,15,3,0,0,56,56,60,30
   530 VDU 23,236,240,248,124,124,124,120,240,224
   600 :
   610 REM From custom chars defined previously.
   615 : REM HAUNTED
   620 REM DISPLAY H (2x2) CHARS.
   630 COLOUR 1: PRINT TAB(12,10);CHR$(201);CHR$(202)
   640 COLOUR 1: PRINT TAB(12,11);CHR$(203);CHR$(204)
   650 REM DISPLAY A (2x2) CHARS.
   660 COLOUR 1: PRINT TAB(14,10);CHR$(205);CHR$(206)
   670 COLOUR 1: PRINT TAB(14,11);CHR$(207);CHR$(208)
   680 REM DISPLAY U (2x2) CHARS.
   690 COLOUR 1: PRINT TAB(16,10);CHR$(209);CHR$(210)
   700 COLOUR 1: PRINT TAB(16,11);CHR$(211);CHR$(212)
   710 REM DISPLAY N (2x2) CHARS.
   720 COLOUR 1: PRINT TAB(18,10);CHR$(213);CHR$(214)
   730 COLOUR 1: PRINT TAB(18,11);CHR$(215);CHR$(216)
   740 REM DISPLAY T (2x2) CHARS.
   750 COLOUR 1: PRINT TAB(20,10);CHR$(217);CHR$(218)
   760 COLOUR 1: PRINT TAB(20,11);CHR$(219);CHR$(220)
   770 REM DISPLAY E (2x2) CHARS.
   780 COLOUR 1: PRINT TAB(22,10);CHR$(221);CHR$(222)
   790 COLOUR 1: PRINT TAB(22,11);CHR$(223);CHR$(224)
   800 REM DISPLAY D (2x2) CHARS.
   810 COLOUR 1: PRINT TAB(24,10);CHR$(225);CHR$(226)
   820 COLOUR 1: PRINT TAB(24,11);CHR$(227);CHR$(228)
   825 : REM HOUSE
   830 REM DISPLAY H (2x2) CHARS.
   840 COLOUR 1: PRINT TAB(14,13);CHR$(201);CHR$(202)
   850 COLOUR 1: PRINT TAB(14,14);CHR$(203);CHR$(204)
   860 REM DISPLAY O (2x2) CHARS.
   870 COLOUR 1: PRINT TAB(16,13);CHR$(229);CHR$(230)
   900 COLOUR 1: PRINT TAB(16,14);CHR$(231);CHR$(232)
   910 REM DISPLAY U (2x2) CHARS.
   920 COLOUR 1: PRINT TAB(18,13);CHR$(209);CHR$(210)
   930 COLOUR 1: PRINT TAB(18,14);CHR$(211);CHR$(212)
   940 REM DISPLAY S (2x2) CHARS.
   950 COLOUR 1: PRINT TAB(20,13);CHR$(233);CHR$(234)
   960 COLOUR 1: PRINT TAB(20,14);CHR$(235);CHR$(236)
   970 REM DISPLAY E (2x2) CHARS.
   980 COLOUR 1: PRINT TAB(22,13);CHR$(221);CHR$(222)
   990 COLOUR 1: PRINT TAB(22,14);CHR$(223);CHR$(224)
   999 COLOUR 2
   1000 END
"
C3EiqrRZ,SMTP Testing Plugin WordPress,blackimpala,JSON,Friday 15th of December 2023 03:25:01 PM CDT,"Test Message Sent

The result was:

bool(false)

The full debugging output is shown below:

object(PHPMailer\PHPMailer\PHPMailer)#10171 (74) {
  [""Priority""]=>
  NULL
  [""CharSet""]=>
  string(5) ""UTF-8""
  [""ContentType""]=>
  string(9) ""text/html""
  [""Encoding""]=>
  string(4) ""7bit""
  [""ErrorInfo""]=>
  string(36) ""Could not instantiate mail function.""
  [""From""]=>
  string(25) ""wordpress@mcmsoftware.com""
  [""FromName""]=>
  string(9) ""WordPress""
  [""Sender""]=>
  string(0) """"
  [""Subject""]=>
  string(19) ""testing SMTP Plugin""
  [""Body""]=>
  string(72) ""This is a test email generated by the WP SendGrid SMTP WordPress plugin.""
  [""AltBody""]=>
  string(0) """"
  [""Ical""]=>
  string(0) """"
  [""MIMEBody"":protected]=>
  string(73) ""This is a test email generated by the WP SendGrid SMTP WordPress plugin.
""
  [""MIMEHeader"":protected]=>
  string(279) ""Date: Fri, 15 Dec 2023 21:12:52 +0000
From: WordPress 
Message-ID: 
X-Mailer: PHPMailer 6.5.0 (https://github.com/PHPMailer/PHPMailer)
MIME-Version: 1.0
Content-Type: text/html; charset=UTF-8
""
  [""mailHeader"":protected]=>
  string(0) """"
  [""WordWrap""]=>
  int(0)
  [""Mailer""]=>
  string(4) ""mail""
  [""Sendmail""]=>
  string(18) ""/usr/sbin/sendmail""
  [""UseSendmailOptions""]=>
  bool(true)
  [""ConfirmReadingTo""]=>
  string(0) """"
  [""Hostname""]=>
  string(0) """"
  [""MessageID""]=>
  string(0) """"
  [""MessageDate""]=>
  string(0) """"
  [""Host""]=>
  string(9) ""localhost""
  [""Port""]=>
  int(25)
  [""Helo""]=>
  string(0) """"
  [""SMTPSecure""]=>
  string(0) """"
  [""SMTPAutoTLS""]=>
  bool(true)
  [""SMTPAuth""]=>
  bool(false)
  [""SMTPOptions""]=>
  array(0) {
  }
  [""Username""]=>
  string(0) """"
  [""Password""]=>
  string(0) """"
  [""AuthType""]=>
  string(0) """"
  [""oauth"":protected]=>
  NULL
  [""Timeout""]=>
  int(300)
  [""dsn""]=>
  string(0) """"
  [""SMTPDebug""]=>
  bool(true)
  [""Debugoutput""]=>
  string(4) ""html""
  [""SMTPKeepAlive""]=>
  bool(false)
  [""SingleTo""]=>
  bool(false)
  [""SingleToArray"":protected]=>
  array(0) {
  }
  [""do_verp""]=>
  bool(false)
  [""AllowEmpty""]=>
  bool(false)
  [""DKIM_selector""]=>
  string(0) """"
  [""DKIM_identity""]=>
  string(0) """"
  [""DKIM_passphrase""]=>
  string(0) """"
  [""DKIM_domain""]=>
  string(0) """"
  [""DKIM_copyHeaderFields""]=>
  bool(true)
  [""DKIM_extraHeaders""]=>
  array(0) {
  }
  [""DKIM_private""]=>
  string(0) """"
  [""DKIM_private_string""]=>
  string(0) """"
  [""action_function""]=>
  string(0) """"
  [""XMailer""]=>
  string(0) """"
  [""smtp"":protected]=>
  NULL
  [""to"":protected]=>
  array(1) {
    [0]=>
    array(2) {
      [0]=>
      string(19) ""infomcm@mcmprof.com""
      [1]=>
      string(0) """"
    }
  }
  [""cc"":protected]=>
  array(0) {
  }
  [""bcc"":protected]=>
  array(0) {
  }
  [""ReplyTo"":protected]=>
  array(0) {
  }
  [""all_recipients"":protected]=>
  array(1) {
    [""infomcm@mcmprof.com""]=>
    bool(true)
  }
  [""RecipientsQueue"":protected]=>
  array(0) {
  }
  [""ReplyToQueue"":protected]=>
  array(0) {
  }
  [""attachment"":protected]=>
  array(0) {
  }
  [""CustomHeader"":protected]=>
  array(0) {
  }
  [""lastMessageID"":protected]=>
  string(60) """"
  [""message_type"":protected]=>
  string(5) ""plain""
  [""boundary"":protected]=>
  array(3) {
    [1]=>
    string(45) ""b1_Q7eBe6q6brRSQB0wkP2NvUfqOcMXUMppbinFnzToQM""
    [2]=>
    string(45) ""b2_Q7eBe6q6brRSQB0wkP2NvUfqOcMXUMppbinFnzToQM""
    [3]=>
    string(45) ""b3_Q7eBe6q6brRSQB0wkP2NvUfqOcMXUMppbinFnzToQM""
  }
  [""language"":protected]=>
  array(21) {
    [""authenticate""]=>
    string(35) ""SMTP Error: Could not authenticate.""
    [""connect_host""]=>
    string(43) ""SMTP Error: Could not connect to SMTP host.""
    [""data_not_accepted""]=>
    string(30) ""SMTP Error: data not accepted.""
    [""empty_message""]=>
    string(18) ""Message body empty""
    [""encoding""]=>
    string(18) ""Unknown encoding: ""
    [""execute""]=>
    string(19) ""Could not execute: ""
    [""file_access""]=>
    string(23) ""Could not access file: ""
    [""file_open""]=>
    string(33) ""File Error: Could not open file: ""
    [""from_failed""]=>
    string(35) ""The following From address failed: ""
    [""instantiate""]=>
    string(36) ""Could not instantiate mail function.""
    [""invalid_address""]=>
    string(17) ""Invalid address: ""
    [""invalid_hostentry""]=>
    string(19) ""Invalid hostentry: ""
    [""invalid_host""]=>
    string(14) ""Invalid host: ""
    [""mailer_not_supported""]=>
    string(25) "" mailer is not supported.""
    [""provide_address""]=>
    string(54) ""You must provide at least one recipient email address.""
    [""recipients_failed""]=>
    string(45) ""SMTP Error: The following recipients failed: ""
    [""signing""]=>
    string(15) ""Signing Error: ""
    [""smtp_connect_failed""]=>
    string(22) ""SMTP connect() failed.""
    [""smtp_error""]=>
    string(19) ""SMTP server error: ""
    [""variable_set""]=>
    string(30) ""Cannot set or reset variable: ""
    [""extension_missing""]=>
    string(19) ""Extension missing: ""
  }
  [""error_count"":protected]=>
  int(2)
  [""sign_cert_file"":protected]=>
  string(0) """"
  [""sign_key_file"":protected]=>
  string(0) """"
  [""sign_extracerts_file"":protected]=>
  string(0) """"
  [""sign_key_pass"":protected]=>
  string(0) """"
  [""exceptions"":protected]=>
  bool(true)
  [""uniqueid"":protected]=>
  string(42) ""Q7eBe6q6brRSQB0wkP2NvUfqOcMXUMppbinFnzToQM""
}

The SMTP debugging output is shown below:

Sending with mail()

Sendmail path: /usr/sbin/sendmail -t -i

Envelope sender: 

To: infomcm@mcmprof.com

Subject: testing SMTP Plugin

Headers: Date: Fri, 15 Dec 2023 21:12:52 +0000From: WordPress <wordpress@mcmsoftware.com>Message-ID: <Q7eBe6q6brRSQB0wkP2NvUfqOcMXUMppbinFnzToQM@mcmsoftware.com>X-Mailer: PHPMailer 6.5.0 (https://github.com/PHPMailer/PHPMailer)MIME-Version: 1.0Content-Type: text/html; charset=UTF-8

Result: false

Could not instantiate mail function."
yMm0agna,jump mechanic,quhluh,Lua,Friday 15th of December 2023 03:16:51 PM CDT,"-- Define player properties
local player = {
    x = 0,
    y = 0,
    velocityY = 0,
    isJumping = false
}

-- Gravity affecting the player
local gravity = 0.5

-- Jump strength
local jumpStrength = -10

-- Function to handle player jumping
function jump()
    if not player.isJumping then
        player.velocityY = jumpStrength
        player.isJumping = true
    end
end

-- Function to update player position
function updatePlayer()
    player.y = player.y + player.velocityY
    player.velocityY = player.velocityY + gravity

    -- Check if the player has landed
    if player.y > 0 then
        player.y = 0
        player.isJumping = false
    end
end

-- Example usage
jump()  -- Trigger a jump
updatePlayer()  -- Update player position

-- Print player position (for testing)
print(""Player Y position: "" .. player.y)"
Qbg1FZYx,Flipping Bottle Code for JAVA,quhluh,Java,Friday 15th of December 2023 03:12:03 PM CDT,"Copy code
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BottleFlipGame extends JFrame {
    private static final int WIDTH = 800;
    private static final int HEIGHT = 600;
    private static final int BOTTLE_WIDTH = 50;
    private static final int BOTTLE_HEIGHT = 100;

    private Timer timer;
    private int bottleX;
    private int bottleY;
    private int bottleSpeedY;

    public BottleFlipGame() {
        setTitle(""Bottle Flip Game"");
        setSize(WIDTH, HEIGHT);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        bottleX = WIDTH / 2 - BOTTLE_WIDTH / 2;
        bottleY = HEIGHT - BOTTLE_HEIGHT - 30;
        bottleSpeedY = 0;

        timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                update();
                repaint();
            }
        });

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        setFocusable(true);
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_SPACE && bottleSpeedY == 0) {
            bottleSpeedY = -5; // Jump when space is pressed
        }
    }

    private void update() {
        // Update bottle position
        bottleY += bottleSpeedY;
        bottleSpeedY += 1; // Gravity effect

        // Check if the bottle hits the ground
        if (bottleY > HEIGHT - BOTTLE_HEIGHT - 30) {
            bottleY = HEIGHT - BOTTLE_HEIGHT - 30;
            bottleSpeedY = 0;
        }
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        // Draw the bottle
        g.setColor(Color.BLUE);
        g.fillRect(bottleX, bottleY, BOTTLE_WIDTH, BOTTLE_HEIGHT);

        // Draw ground
        g.setColor(Color.GREEN);
        g.fillRect(0, HEIGHT - 30, WIDTH, 30);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                BottleFlipGame bottleFlipGame = new BottleFlipGame();
                bottleFlipGame.setVisible(true);
                bottleFlipGame.timer.start();
            }
        });
    }
}"
QgQ5cCww,Python mp3 player,viacheslavshymanskyi,Python,Friday 15th of December 2023 03:06:52 PM CDT,"# Importing all the necessary modules
from tkinter import *
from tkinter import filedialog
import pygame.mixer as mixer        # pip install pygame
import os

# Initializing the mixer
mixer.init()

# Play, Stop, Load and Pause & Resume functions
def play_song(song_name: StringVar, songs_list: Listbox, status: StringVar):
    song_name.set(songs_list.get(ACTIVE))

    mixer.music.load(songs_list.get(ACTIVE))
    mixer.music.play()

    status.set(""Track PLAYING"")


def stop_song(status: StringVar):
    mixer.music.stop()
    status.set(""Track STOPPED"")


def load(listbox):
    os.chdir(filedialog.askdirectory(title='Open a songs directory'))

    tracks = os.listdir()

    for track in tracks:
        listbox.insert(END, track)


def pause_song(status: StringVar):
    mixer.music.pause()
    status.set(""Track PAUSED"")


def resume_song(status: StringVar):
    mixer.music.unpause()
    status.set(""Track RESUMED"")


# Creating the master GUI
root = Tk()
root.geometry('700x220')     #
root.title('Sakura Player v.0.0.1')
root.resizable(0, 0)

# All the frames
song_frame = LabelFrame(root, text='Current Song', bg='#717276', width=400, height=80)
song_frame.place(x=0, y=0)

button_frame = LabelFrame(root, text='Control Buttons', bg='#464852', width=400, height=120)
button_frame.place(y=80)

listbox_frame = LabelFrame(root, text='Playlist', bg='#6A1F36')
listbox_frame.place(x=400, y=0, height=200, width=300)

# All StringVar variables
current_song = StringVar(root, value='<Not selected>')

song_status = StringVar(root, value='<Not Available>')

# Playlist ListBox
playlist = Listbox(listbox_frame, font=('Helvetica', 11), selectbackground='#938067')

scroll_bar = Scrollbar(listbox_frame, orient=VERTICAL)
scroll_bar.pack(side=RIGHT, fill=BOTH)

playlist.config(yscrollcommand=scroll_bar.set)

scroll_bar.config(command=playlist.yview)

playlist.pack(fill=BOTH, padx=5, pady=5)

# SongFrame Labels
Label(song_frame, text='NOW PLAYING:', bg='#E44D74', font=('Helvetica', 10, 'bold')).place(x=5, y=20)

song_lbl = Label(song_frame, textvariable=current_song, bg='#938067', font=(""Helvetica"", 12), width=25)
song_lbl.place(x=150, y=20)

# Buttons in the main screen
pause_btn = Button(button_frame, text='Pause', bg='#7D7E82', font=(""Helvetica"", 13), width=7,
                    command=lambda: pause_song(song_status))
pause_btn.place(x=15, y=10)

stop_btn = Button(button_frame, text='Stop', bg='#7D7E82', font=(""Helvetica"", 13), width=7,
                  command=lambda: stop_song(song_status))
stop_btn.place(x=105, y=10)

play_btn = Button(button_frame, text='Play', bg='#7D7E82', font=(""Helvetica"", 13), width=7,
                  command=lambda: play_song(current_song, playlist, song_status))
play_btn.place(x=195, y=10)

resume_btn = Button(button_frame, text='Resume', bg='#7D7E82', font=(""Helvetica"", 13), width=7,
                    command=lambda: resume_song(song_status))
resume_btn.place(x=285, y=10)

load_btn = Button(button_frame, text='Load Directory', bg='#7D7E82', font=(""Helvetica"", 13), width=35,
                  command=lambda: load(playlist))
load_btn.place(x=10, y=55)

# Label at the bottom that displays the state of the music
Label(root, textvariable=song_status, bg='#983150', font=('Helvetica', 9), justify=LEFT).pack(side=BOTTOM, fill=X)

# Finalizing the GUI
root.update()
root.mainloop()

"
mvYYiLRT,RBXGOLD Twitch Scraper,IhateUsernames234,JSON,Friday 15th of December 2023 03:04:56 PM CDT,"[""mcplaygt"",""lordmk_"",""ayo_kota"",""ImSiyrenz"",""ilovemav_"",""lucidftt"",""v3nli"",""casan0ah"",""r1ckyslime"",""robloxification"",""rbxgoldcom""]"
tkkL3aq9,Coffee Extraction Calculator,viacheslavshymanskyi,Python,Friday 15th of December 2023 03:04:12 PM CDT,"import tkinter as tk
from tkinter import ttk

def calculate_extraction():
    try:
        coffee_weight = float(coffee_weight_entry.get())
        espresso_output = float(espresso_output_entry.get())
        tds = float(tds_entry.get())

        extraction_percentage = (espresso_output / coffee_weight) * (tds / 100) * 100
        extraction_label.config(text=f""Extraction: {extraction_percentage:.2f}%"")
    except ValueError:
        extraction_label.config(text=""Invalid input"")

# Create the main application window
root = tk.Tk()
root.geometry('352x224')
root.title(""Coffee Extraction Calculator"")

# Create and place widgets
coffee_weight_label = ttk.Label(root, text=""Coffee Weight (g):"")
coffee_weight_label.pack(pady=5)
coffee_weight_entry = ttk.Entry(root)
coffee_weight_entry.pack()

espresso_output_label = ttk.Label(root, text=""Espresso Output (ml):"")
espresso_output_label.pack(pady=5)
espresso_output_entry = ttk.Entry(root)
espresso_output_entry.pack()

tds_label = ttk.Label(root, text=""TDS (%):"")
tds_label.pack(pady=5)
tds_entry = ttk.Entry(root)
tds_entry.pack()

calculate_button = ttk.Button(root, text=""Calculate Extraction"", command=calculate_extraction)
calculate_button.pack(pady=10)

extraction_label = ttk.Label(root, text="""")
extraction_label.pack()

# Start the GUI event loop
root.mainloop()

"
eNr6dmR3,Weather,Yonkow,JavaScript,Friday 15th of December 2023 01:25:01 PM CDT,"const baseUrl = 'http://localhost:3030/jsonstore/tasks/';

const listContainer = document.getElementById('list');
listContainer.innerHTML = '';
const loadHistoryBtn = document.getElementById('load-history');
const locationFormField = document.getElementById('location');
const temperatureFormField = document.getElementById('temperature');
const dateFormField = document.getElementById('date');
const addWeatherBtn = document.getElementById('add-weather');
const editWeatherBtn = document.getElementById('edit-weather');
const formAction = dateFormField.parentNode;


loadHistoryBtn.addEventListener('click', loadHistory);

addWeatherBtn.addEventListener('click', (e) => {
    e.preventDefault();

    const weatherObject = {
        location: locationFormField.value,
        date: dateFormField.value,
        temperature: temperatureFormField.value
    };

    fetch(baseUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(weatherObject)
    })
        .then(loadHistory)
        .then(clearInputFields);
});

editWeatherBtn.addEventListener('click', (e) => {
    const editedRecord = {
        location: locationFormField.value,
        date: dateFormField.value,
        temperature: temperatureFormField.value,
        _id: formAction.id        
    };

    fetch(`${baseUrl}${formAction.id}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'applicaton/json'
        },
        body: JSON.stringify(editedRecord)
    })
        .then(clearInputFields)
        .then(loadHistory);

    formAction.removeAttribute('id');
    editWeatherBtn.setAttribute('disabled', 'disabled');
    addWeatherBtn.removeAttribute('disabled');
});

function loadHistory() {
    listContainer.innerHTML = '';

    fetch(baseUrl)
        .then(res => res.json())
        .then(result => {
            renderRecords(Object.values(result));
        });
};

function renderRecords(records) {

    for (const record of records) {
        const divContainer = document.createElement('div');
        divContainer.className = 'container';

        const h2Location = document.createElement('h2');
        h2Location.textContent = record.location;

        const h3Date = document.createElement('h3');
        h3Date.textContent = record.date;

        const h3Degrees = document.createElement('h3');
        h3Degrees.id = 'celsius';
        h3Degrees.textContent = record.temperature;

        divContainer.appendChild(h2Location);
        divContainer.appendChild(h3Date);
        divContainer.appendChild(h3Degrees);

        const btnContainer = document.createElement('div');
        btnContainer.id = 'buttons-container';

        const changeBtn = document.createElement('button');
        changeBtn.className = 'change-btn';
        changeBtn.textContent = 'Change';

        const delBtn = document.createElement('button');
        delBtn.className = 'delete-btn';
        delBtn.textContent = 'Delete';

        btnContainer.appendChild(changeBtn);
        btnContainer.appendChild(delBtn);

        divContainer.appendChild(btnContainer);
        
        listContainer.appendChild(divContainer);

        changeBtn.addEventListener('click', () => {
            editWeatherBtn.removeAttribute('disabled');
            addWeatherBtn.setAttribute('disabled', 'disabled');

            locationFormField.value = h2Location.textContent;
            dateFormField.value = h3Date.textContent;
            temperatureFormField.value = h3Degrees.textContent;
            const currentId = record._id;
            formAction.id = currentId;

            divContainer.remove();
        });

        delBtn.addEventListener('click', (e) => {

            fetch(`${baseUrl}${record._id}`, {
                method: 'DELETE'
            })
                .then(loadHistory);
        });
    }
};

function clearInputFields() {
    locationFormField.value = '';
    temperatureFormField.value = '';
    dateFormField.value = '';
};"
tZ7yV2w4,Untitled,Dorex,Linden Scripting,Friday 15th of December 2023 01:18:35 PM CDT,"//
integer hudchan = -387429; //channel huds communicate on
integer started;


default
{
    state_entry()
    {
        llListen(hudchan,"""","""","""");
    }
 
    touch_start(integer total_number)
    {
        if (llDetectedKey(0) == llGetOwner())
        {
            if (llDetectedTouchFace(0) == 1)
            {
                if (started == TRUE)
                {
                    llOwnerSay(""touched buzzer"");
                }
                else
                {
                    llOwnerSay(""you can only buzz in when the quiz buzzer system is started"");
                }
            }
        }
    }

    listen (integer channel, string name, key id, string msg)
    {
        list templist = llParseString2List(msg,[""#""],[""""]);
        key recievedkey = llList2Key(templist,0);
        string command = llList2String(templist,1);
        llOwnerSay(""recievedkey: "" +(string)recievedkey+ "" command: ""+command);

        if (recievedkey == llGetCreator())
        {
            if (command == ""Start"")
            {
                started = TRUE;
                llOwnerSay(""quiz buzzer system is now started. You can now buzz in when required by touching the big yellow button on your buzzer hud"");
            }
            if (command == ""Stop"")
            {
                started = FALSE;
                llOwnerSay(""quiz buzzer system is now stopped. You can no longer touch the big yellow button to buzz in until the system is started again"");
            }
        }
    }

    changed (integer change)
    {
        if (change & CHANGED_OWNER)
        {
            llOwnerSay(""new hud owner detected "" + llGetUsername(llGetOwner()) + "" Welcome to the quiz buzzer system. The big yellow button on your hud is your quiz buzzer, when the sytem is active you can click it to buzz in"");
        }
    }

    attach(key id)
    {
        if (id)
        {
            llOwnerSay(""hud attached and running"");
        }
    }
}"
SZ0FNwpu,tac 50 roblox script (snipah),LeReBoX,Lua,Friday 15th of December 2023 01:11:42 PM CDT,"--[[
An M85 .50 Browning Machine Gun (BMG) Telescopic enhanced Long range Firearm/Rifle.
Goes for 20 Thousand, Parent gun is the Remmington 700,
Which this is a more powerful enhanced gun.
--]]





Player    = game:GetService(""Players"").LocalPlayer
Char      = Player.Character
playergui = Player.PlayerGui

local script = Instance.new(""LocalScript"",playergui)
animate      = Char:findFirstChild(""Animate"")
if animate then
animate:Destroy()
end
Name = ""McMillan Tac-50""
MC = BrickColor.new(""Black"")
DC = BrickColor.new(""Dark stone grey"")
GC = BrickColor.new(""Black"")
BC = BrickColor.new(""Black"")
NormalMouse = ""http://www.roblox.com/asset/?id=49912389""
ScopeMouse = ""http://www.roblox.com/asset/?id=71735463""
CurrentMouse = NormalMouse
GM = ""Plastic""
Raycast = true
Ready = true
AimSpeed = 5
Bipod = true
Chambered = false
LastShot = false
Empty = true
MR = 0
GR = 0
selected = false
canDual = false
dual = false
Button1Down = false
damage = 70
canFire = true
canFire2 = false
readyTime = 1.8
automatic = false
burst = false
burstCount = 0
burstCountMax = 2
canSilence = true
silenced = false
canZoom = true
zoom = false
switchToSingle = false
switchToBurst = false
switchToAutomatic = false


ammoGui = Instance.new(""ScreenGui"")
ammoGui.Name = Name
local frame = Instance.new(""Frame"")
frame.Name = ""Frame""
frame.Size = UDim2.new(0, 165, 0, 60)
frame.Position = UDim2.new(0, 0, 1, -400)
frame.BackgroundColor3 = Color3.new(1, 1, 1)
frame.BorderColor3 = Color3.new(0, 0, 0)
frame.Parent = ammoGui
local label = Instance.new(""TextLabel"")
label.Name = ""Weapon""
label.Text = ""Weapon: "" ..Name
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundColor3 = Color3.new(1, 0, 0)
label.BorderColor3 = Color3.new(0, 0, 0)
label.Parent = frame
local label = Instance.new(""TextLabel"")
label.Name = ""MagazinePrefix""
label.Text = ""    Magazine:""
label.TextXAlignment = ""Left""
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 20)
label.BackgroundColor3 = Color3.new(1, 1, 1)
label.BorderColor3 = Color3.new(0, 0, 0)
label.Parent = frame
local label = Instance.new(""TextLabel"")
label.Name = ""Magazine""
label.Text = ""0/0""
label.TextXAlignment = ""Right""
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, -10, 0, 20)
label.BackgroundTransparency = 1
label.BorderSizePixel = 0
label.Parent = frame
local label = Instance.new(""TextLabel"")
label.Name = ""AmmoPrefix""
label.Text = ""    .50 BMG:""
label.TextXAlignment = ""Left""
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 40)
label.BackgroundColor3 = Color3.new(1, 1, 1)
label.BorderColor3 = Color3.new(0, 0, 0)
label.Parent = frame
local label = Instance.new(""TextLabel"")
label.Name = ""Ammo""
label.Text = ""0/0""
label.TextXAlignment = ""Right""
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, -10, 0, 40)
label.BackgroundTransparency = 1
label.BorderSizePixel = 0
label.Parent = frame


function updateGui()
    if selected == false then return end
    if Player:FindFirstChild(""PlayerGui"") == nil then Instance.new(""PlayerGui"").Parent = Player end
    if Player.PlayerGui:FindFirstChild(Name) == nil then
        ammoGui:Clone().Parent = Player.PlayerGui
    end
    Player.PlayerGui[Name].Frame.Magazine.Text = tostring(magazine.Value).. ""/"" ..tostring(magazineMax.Value)
    Player.PlayerGui[Name].Frame.Ammo.Text = tostring(ammo.Value).. ""/"" ..tostring(ammoMax.Value)
end


function makeParts(format)
    local model = Instance.new(""Model"")
    model.Name = Name
    local pm = Instance.new(""Part"")
    pm.Name = ""Handle""
    pm.formFactor = ""Symmetric""
    pm.Size = Vector3.new(1, 1, 1)
    pm.BrickColor = GC
    pm.Reflectance = GR
    pm.CanCollide = false
    pm.Transparency = 1
    pm.Locked = true
    pm.TopSurface = 0
    pm.BottomSurface = 0
    pm.Parent = model
    local m = Instance.new(""BlockMesh"")
    m.Scale = Vector3.new(0.28, 1.1, 0.19)
    m.Offset = Vector3.new(0, -0.25, 0.07)
    m.Parent = pm
    if format ~= nil then
        local w = Instance.new(""Weld"")
        w.Part0 = pm
        if format == ""RightHand"" then
            w.Part1 = Player.Character:FindFirstChild(""Right Arm"")
            w.C0 = CFrame.new(0, 1.15, 0.7)
            w.C1 = CFrame.new()
        elseif format == ""RightHolster"" then
            w.Part1 = Player.Character:FindFirstChild(""Torso"")
            w.C0 = CFrame.new(0.65, -0.85, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(32), math.rad(-90), 0)
            w.C1 = CFrame.new()
            model.Name = Name.. "" (Holstered)""
        end
        w.Parent = pm
        model.Parent = Player.Character
    end
    local s = Instance.new(""Sound"")
    s.Name = ""Fire""
    s.SoundId = ""http://www.roblox.com/asset/?id=2760979""
    s.Volume = 1
    s.Pitch = 1.2
    s.Looped = false
    s.Parent = pm   
    local s = Instance.new(""Sound"")
    s.Name = ""Fire2""
    s.SoundId = ""http://www.roblox.com/asset/?id=2760979""
    s.Volume = 1
    s.Pitch = 1.4
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Fire3""
    s.SoundId = ""http://www.roblox.com/asset/?id=2760979""
    s.Volume = 1
    s.Pitch = 0.7
    s.Looped = false
    s.Parent = pm   
    local s = Instance.new(""Sound"")
    s.Name = ""Equip""
    s.SoundId = ""http://www.roblox.com/asset/?id=10209881""
    s.Volume = 1
    s.Pitch = 0.6
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Release""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209813""
    s.Volume = 1
    s.Pitch = 3
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Reload""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209845""
    s.Volume = 1
    s.Pitch = 8
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Action2""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209894""
    s.Volume = 0.5
    s.Pitch = 1
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Action1""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209869""
    s.Volume = 0.5
    s.Pitch = 1.5
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Action3""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209845""
    s.Volume = 0.6
    s.Pitch = 2.5
    s.Looped = false
    s.Parent = pm   
    local s = Instance.new(""Sound"")
    s.Name = ""Empty""
    s.SoundId = ""http://www.roblox.com/asset/?id=2697295""
    s.Volume = 1
    s.Pitch = 5
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Switch""
    s.SoundId = ""http://www.roblox.com/asset/?id=2697295""
    s.Volume = 1
    s.Pitch = 10
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Bullet""
    s.SoundId = ""http://www.roblox.com/Asset/?id=18426149""
    s.Volume = 1
    s.Pitch = 1
    s.Looped = false
    s.Parent = pm
    local s = Instance.new(""Sound"")
    s.Name = ""Jam""
    s.SoundId = ""http://www.roblox.com/Asset/?id=10209636""
    s.Volume = 1
    s.Pitch = 2
    s.Looped = false
    s.Parent = pm               
    local p = Instance.new(""Part"")
    p.Name = ""ShellOut""
    p.formFactor = ""Custom""
    p.Size = Vector3.new(0.2, 0.2, 0.2)
    p.Transparency = 1
    p.Locked = true
    p.CanCollide = false
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(-0.06, 0.62, -0.06) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
    w.C1 = CFrame.new()
    w.Parent = p--]]
    local pmg = Instance.new(""Part"")
    pmg.Name = ""Magazine""
    pmg.formFactor = ""Symmetric""
    pmg.Size = Vector3.new(1, 1, 1)
    pmg.BrickColor = DC
    pmg.CanCollide = false
    pmg.Locked = true
    pmg.TopSurface = 0
    pmg.BottomSurface = 0
    pmg.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.25, 0.44, 0.4)
    m.Parent = pmg
    local w = Instance.new(""Weld"")
    w.Part0 = pmg
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0.3, -0.12)
    w.C1 = CFrame.new()
    w.Parent = pmg
    local p = Instance.new(""Part"")
    p.Name = ""MagazineGrip""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = MC
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.26, 0.45, 0.18)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pmg
    w.C0 = CFrame.new(0, 0, -0.18)
    w.C1 = CFrame.new()
    w.Parent = p    
    local p = Instance.new(""Part"")
    p.Name = ""MagazineShell""
    p.formFactor = ""Custom""
    p.Size = Vector3.new(0.2, 0.28, 0.2)
    p.BrickColor = BrickColor.new(""New Yeller"")
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.4, 1, 0.4)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pmg
    w.C0 = CFrame.new(0, 0, 0.195)
    w.C1 = CFrame.new()
    w.Parent = p    
    local p = Instance.new(""Part"")
    p.Name = ""TriggerGuard""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""FileMesh""
    m.MeshId = ""http://www.roblox.com/asset/?id=3270017""
    m.Scale = Vector3.new(0.34, 0.34, 0.8)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(-0.26, -0.1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
    w.C1 = CFrame.new()
    w.Parent = p            
    local p = Instance.new(""Part"")
    p.Name = ""Trigger""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""BlockMesh"")
    m.Scale = Vector3.new(0.1, 0.1, 0.18)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, -0.1, -0.28)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""BoltHousing"" --------------
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.2, 0.2, 0.2)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0.55, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""BoltHousing"" --------------
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.2, 0.3, 0.2)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p    
    local pb = Instance.new(""Part"")
    pb.Name = ""Bolt""
    pb.formFactor = ""Symmetric""
    pb.Size = Vector3.new(1, 1, 1)
    pb.BrickColor = BC
    pb.Reflectance = MR
    pb.Transparency = 0
    pb.CanCollide = false
    pb.Locked = true
    pb.TopSurface = 0
    pb.BottomSurface = 0
    pb.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.14, 0.26, 0.14)
    m.Parent = pb
    local w = Instance.new(""Weld"")
    w.Part0 = pb
    w.Part1 = pm
    w.C0 = CFrame.new(0, -0.2, 0.06)
    w.C1 = CFrame.new()
    w.Parent = pb
    local p = Instance.new(""Part"")
    p.Name = ""Bolt 1""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BC
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.16, 0.6, 0.16)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pb
    w.C0 = CFrame.new(0, 0.39, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Bolt 2""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.1602, 0.24, 0.1602)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pb
    w.C0 = CFrame.new(0, 0.05, 0)
    w.C1 = CFrame.new()
    w.Parent = p    
    local pbb = Instance.new(""Part"")
    pbb.Name = ""BoltKnob""
    pbb.formFactor = ""Symmetric""
    pbb.Size = Vector3.new(1, 1, 1)
    pbb.BrickColor = DC
    pbb.Reflectance = MR
    pbb.CanCollide = false
    pbb.Locked = true
    pbb.TopSurface = 0
    pbb.BottomSurface = 0
    pbb.Parent = model
    local m = Instance.new(""BlockMesh"")
    m.Scale = Vector3.new(0.1, 0.08, 0.08)
    m.Parent = pbb
    local w = Instance.new(""Weld"")
    w.Part0 = pbb
    w.Part1 = pb
    w.C0 = CFrame.new(-0.15, 0, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(30), 0)
    w.C1 = CFrame.new()
    w.Parent = pbb  
    local p = Instance.new(""Part"")
    p.Name = ""Bolt 3""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Sphere""
    m.Scale = Vector3.new(0.16, 0.16, 0.16)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pbb
    w.C0 = CFrame.new(-0.1, 0, 0)
    w.C1 = CFrame.new()
    w.Parent = p    
    local p = Instance.new(""Part"")
    p.Name = ""Barrel""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.18, 2.4, 0.18)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 1.8, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    if silenced == false then
        p.Name = ""Muzzle""
    else 
        p.Name = ""Muzzle 2""
    end
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.181, 0.2, 0.181)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 3, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local s = Instance.new(""Smoke"")
    s.Enabled = false
    s.Name = ""Smoke""
    s.RiseVelocity = -5
    s.Opacity = 0.5
    s.Color = Color3.new(75 / 225, 75 / 225, 75 / 225)
    s.Size = 2.4
    s.Parent = p
    local f = Instance.new(""Fire"")
    f.Enabled = false
    f.Name = ""Fire""
    f.Heat = -20
    f.Size = 3.6
    f.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""MuzzleHole""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""Really black"")
    p.Reflectance = MR
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.12, 0.2, 0.12)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 3.004, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    if silenced == false then
        p.Name = ""Silencer""
        p.Transparency = 1
    else    
        p.Name = ""Muzzle""
        p.Transparency = 0
    end
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = MC
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.26, 1, 0.26)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 3.1, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Silencer1""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = GC
    p.CanCollide = false
    if silenced == false then
        p.Transparency = 1
    else    
        p.Transparency = 0
    end 
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.261, 0.6, 0.261)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 3.1, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Silencer2""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""Really black"")
    p.CanCollide = false
    if silenced == false then
        p.Transparency = 1
    else    
        p.Transparency = 0
    end     
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.12, 1.002, 0.12)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 3.1, 0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Body""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = GC
    p.Material = GM
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.3, 2.1, 0.25)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0.83, -0.06)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Body""
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = GC
    p.Material = GM
    p.CanCollide = false
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.29, 2.1, 0.2)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0.82, -0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-2), 0, 0)
    w.C1 = CFrame.new()
    w.Parent = p        
    local pg = Instance.new(""Part"")
    pg.Name = ""Stock Grip""
    pg.formFactor = ""Symmetric""
    pg.Size = Vector3.new(1, 1, 1)
    pg.BrickColor = GC
    pg.Material = GM
    pg.Material = GM
    pg.CanCollide = false
    pg.Locked = true
    pg.TopSurface = 0
    pg.BottomSurface = 0
    pg.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.3, 0.3, 0.6)
    m.Parent = pg
    local w = Instance.new(""Weld"")
    w.Part0 = pg
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0, -0.38) * CFrame.fromEulerAnglesXYZ(math.rad(55), 0, 0)
    w.C1 = CFrame.new()
    w.Parent = pg
    local p = Instance.new(""Part"")
    p.Name = ""Stock Grip""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = GC
    p.Material = GM
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.3, 0.35, 0.3)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = pg
    w.C0 = CFrame.new(0, 0.2, -0.19) * CFrame.fromEulerAnglesXYZ(math.rad(40), 0, 0)
    w.C1 = CFrame.new()
    w.Parent = p    
    local psb = Instance.new(""Part"")
    psb.Name = ""Stock Rear""
    psb.CanCollide = false
    psb.formFactor = ""Symmetric""
    psb.Size = Vector3.new(1, 1, 1)
    psb.BrickColor = GC
    psb.Material = GM
    psb.Locked = true
    psb.TopSurface = 0
    psb.BottomSurface = 0
    psb.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.3, 1, 0.52)
    m.Parent = psb
    local w = Instance.new(""Weld"")
    w.Part0 = psb
    w.Part1 = pm
    w.C0 = CFrame.new(0, -1, -0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-5), 0, 0)
    w.C1 = CFrame.new()
    w.Parent = psb
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.31, 0.64, 0.53)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.02, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.38, 0.18, 0.26)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.08, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.38, 0.18, 0.26)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, 0.04, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.38, 0.18, 0.26)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, 0.16, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.38, 0.18, 0.26)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.20, 0)
    w.C1 = CFrame.new()
    w.Parent = p    
    --[[local p = Instance.new(""Part"")
    p.Name = ""Stock Cover Shell""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""New Yeller"")
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.37, 0.17, 0.42)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.08, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover Shell""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""New Yeller"")
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.37, 0.17, 0.42)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, 0.04, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover Shell""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""New Yeller"")
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.37, 0.17, 0.42)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.20, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Stock Cover Shell""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""New Yeller"")
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.37, 0.17, 0.42)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, 0.16, 0)
    w.C1 = CFrame.new()
    w.Parent = p--]]    
    local p = Instance.new(""Part"")
    p.Name = ""StockButt""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""SpecialMesh"")
    m.MeshType = ""Brick""
    m.Scale = Vector3.new(0.31, 0.2, 0.53)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = psb
    w.C0 = CFrame.new(0, -0.45, 0)
    w.C1 = CFrame.new()
    w.Parent = p    
    local ps = Instance.new(""Part"") -- Scope
    ps.Name = ""Scope Center 1""
    ps.CanCollide = false
    ps.formFactor = ""Symmetric""
    ps.Size = Vector3.new(1, 1, 1)
    ps.BrickColor = DC
    ps.Reflectance = MR
    ps.Locked = true
    ps.TopSurface = 0
    ps.BottomSurface = 0
    ps.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.2, 0.8, 0.2)
    m.Parent = ps
    local w = Instance.new(""Weld"")
    w.Part0 = ps
    w.Part1 = pm
    w.C0 = CFrame.new(0, 0.285, 0.32)
    w.C1 = CFrame.new()
    w.Parent = ps   
    local p = Instance.new(""Part"")
    p.Name = ""Scope Knob""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.18, 0.26, 0.18)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, 0, 0) * CFrame.fromEulerAnglesXYZ(0, 0, math.rad(90))
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Knob2""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.16, 0.26, 0.16)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, 0, 0) * CFrame.fromEulerAnglesXYZ(math.rad(90), 0, 0)
    w.C1 = CFrame.new()
    w.Parent = p        
    local p = Instance.new(""Part"")
    p.Name = ""Scope Base""
    p.formFactor = ""Symmetric""
    p.CanCollide = false
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""BlockMesh"")
    m.Scale = Vector3.new(0.1, 0.14, 0.4)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, -0.22, -0.18)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Base""
    p.formFactor = ""Symmetric""
    p.CanCollide = false
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""BlockMesh"")
    m.Scale = Vector3.new(0.1, 0.14, 0.4)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, 0.24, -0.18)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Back""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.24, 0.375, 0.24)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, -0.5, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Front""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = DC
    p.Reflectance = MR
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.28, 0.6, 0.28)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, 0.66, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Window F""
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""White"")
    p.Reflectance = 0.3
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.27, 0.6, 0.27)
    m.Offset = Vector3.new(0, -0.003 ,0)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, 0.66, 0)
    w.C1 = CFrame.new()
    w.Parent = p
    local p = Instance.new(""Part"")
    p.Name = ""Scope Window B"" 
    p.CanCollide = false
    p.formFactor = ""Symmetric""
    p.Size = Vector3.new(1, 1, 1)
    p.BrickColor = BrickColor.new(""White"")
    p.Reflectance = 0.3
    p.Locked = true
    p.TopSurface = 0
    p.BottomSurface = 0
    p.Parent = model
    local m = Instance.new(""CylinderMesh"")
    m.Scale = Vector3.new(0.23, 0.375, 0.23)
    m.Offset = Vector3.new(0, 0.003 ,0)
    m.Parent = p
    local w = Instance.new(""Weld"")
    w.Part0 = p
    w.Part1 = ps
    w.C0 = CFrame.new(0, -0.5, 0)
    w.C1 = CFrame.new()
    w.Parent = p--]]
    if Bipod == true then
        local pbi = Instance.new(""Part"") ---Bipod
        pbi.Name = ""BipodM"" --------------
        pbi.CanCollide = false
        pbi.formFactor = ""Symmetric""
        pbi.Size = Vector3.new(1, 1, 1)
        pbi.BrickColor = DC
        pbi.Reflectance = MR
        pbi.Locked = true
        pbi.TopSurface = 0
        pbi.BottomSurface = 0
        pbi.Parent = model
        local m = Instance.new(""BlockMesh"")
        m.Scale = Vector3.new(0.17, 0.25, 0.2)
        m.Offset = Vector3.new(0, 0, 0.35)
        m.Parent = pbi
        local w = Instance.new(""Weld"")
        w.Part0 = pbi
        w.Part1 = pm
        w.C0 = CFrame.new(0, 1.7, 0.08)
        w.C1 = CFrame.new()
        w.Parent = pbi
        local p = Instance.new(""Part"")
        p.Name = ""BipodArm""
        p.formFactor = ""Symmetric""
        p.Size = Vector3.new(1, 1, 1)
        p.CanCollide = false
        p.BrickColor = DC
        p.Reflectance = MR
        p.Locked = true
        p.TopSurface = 0
        p.BottomSurface = 0
        p.Parent = model
        local m = Instance.new(""CylinderMesh"")
        m.Scale = Vector3.new(0.15, 1, 0.15)
        m.Offset = Vector3.new(0.09, -0.4 ,0.4)
        m.Parent = p
        local w = Instance.new(""Weld"")
        w.Part0 = p
        w.Part1 = pbi
        w.C0 = CFrame.new()
        w.C1 = CFrame.new()
        w.Parent = p
        local p = Instance.new(""Part"")
        p.Name = ""BipodArm""
        p.formFactor = ""Symmetric""
        p.Size = Vector3.new(1, 1, 1)
        p.CanCollide = false
        p.BrickColor = DC
        p.Reflectance = MR
        p.Locked = true
        p.TopSurface = 0
        p.BottomSurface = 0
        p.Parent = model
        local m = Instance.new(""CylinderMesh"")
        m.Scale = Vector3.new(0.15, 1, 0.15)
        m.Offset = Vector3.new(-0.09, -0.4 ,0.4)
        m.Parent = p
        local w = Instance.new(""Weld"")
        w.Part0 = p
        w.Part1 = pbi
        w.C0 = CFrame.new()
        w.C1 = CFrame.new()
        w.Parent = p--]]
    else end
    return model
end


function removeParts(format)
    if format == ""RightHand"" then
        pcall(function() Player.Character[Name]:Remove() end)
    elseif format == ""LeftHand"" then
        pcall(function() Player.Character[Name.. "" (Left)""]:Remove() end)
    elseif format == ""RightHolster"" then
        pcall(function() Player.Character[Name.. "" (Holstered)""]:Remove() end)
    elseif format == ""LeftHolster"" then
        pcall(function() Player.Character[Name.. "" (Holstered, Left)""]:Remove() end)
    end
end


function SetAngle(Joint, Angle, Character)
    if Character == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder 2""),
        Character.Torso:FindFirstChild(""Left Shoulder 2""),
        Character.Torso:FindFirstChild(""Right Hip 2""),
        Character.Torso:FindFirstChild(""Left Hip 2"")
    }
    if Joints[Joint] == nil then return false end
    if Joint == 1 or Joint == 3 then
        Joints[Joint].DesiredAngle = Angle
    end
    if Joint == 2 or Joint == 4 then
        Joints[Joint].DesiredAngle = -Angle
    end
end


function ForceAngle(Joint, Angle, Character)
    if Character == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder 2""),
        Character.Torso:FindFirstChild(""Left Shoulder 2""),
        Character.Torso:FindFirstChild(""Right Hip 2""),
        Character.Torso:FindFirstChild(""Left Hip 2"")
    }
    if Joints[Joint] == nil then return false end
    if Joint == 1 or Joint == 3 then
        Joints[Joint].DesiredAngle = Angle
        Joints[Joint].CurrentAngle = Angle
    end
    if Joint == 2 or Joint == 4 then
        Joints[Joint].DesiredAngle = -Angle
        Joints[Joint].CurrentAngle = -Angle
    end
end


function SetSpeed(Joint, Speed, Character)
    if Character == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder 2""),
        Character.Torso:FindFirstChild(""Left Shoulder 2""),
        Character.Torso:FindFirstChild(""Right Hip 2""),
        Character.Torso:FindFirstChild(""Left Hip 2"")
    }
    if Joints[Joint] == nil then return false end
    Joints[Joint].MaxVelocity = Speed
end


function DisableLimb(Limb, Character)
    if Character == nil then return false end
    if Character:FindFirstChild(""Torso"") == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder""),
        Character.Torso:FindFirstChild(""Left Shoulder""),
        Character.Torso:FindFirstChild(""Right Hip""),
        Character.Torso:FindFirstChild(""Left Hip"")
    }
    local Limbs = {
        Character:FindFirstChild(""Right Arm""),
        Character:FindFirstChild(""Left Arm""),
        Character:FindFirstChild(""Right Leg""),
        Character:FindFirstChild(""Left Leg"")
    }
    if Joints[Limb] == nil then return false end
    if Limbs[Limb] == nil then return false end
    local Joint = Instance.new(""Motor"")
    Joint.Parent = Character.Torso
    Joint.Part0 = Character.Torso
    Joint.Part1 = Limbs[Limb]
    if Limb == 1 then
        Joint.C0 = CFrame.new(1.5, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joint.C1 = CFrame.new(0, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joint.Name = ""Right Shoulder 2""
    elseif Limb == 2 then
        Joint.C0 = CFrame.new(-1.5, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joint.C1 = CFrame.new(0, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joint.Name = ""Left Shoulder 2""
    elseif Limb == 3 then
        Joint.C0 = CFrame.new(0.5, -1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joint.C1 = CFrame.new(0, 1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joint.Name = ""Right Hip 2""
    elseif Limb == 4 then
        Joint.C0 = CFrame.new(-0.5, -1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joint.C1 = CFrame.new(0, 1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joint.Name = ""Left Hip 2""
    end
    Joint.MaxVelocity = Joints[Limb].MaxVelocity
    Joint.CurrentAngle = Joints[Limb].CurrentAngle
    Joint.DesiredAngle = Joints[Limb].DesiredAngle
    Joints[Limb]:Remove()
end


function ResetLimbCFrame(Limb, Character)
    if Character == nil then return false end
    if Character.Parent == nil then return false end
    if Character:FindFirstChild(""Torso"") == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder 2""),
        Character.Torso:FindFirstChild(""Left Shoulder 2""),
        Character.Torso:FindFirstChild(""Right Hip 2""),
        Character.Torso:FindFirstChild(""Left Hip 2"")
    }
    local Limbs = {
        Character:FindFirstChild(""Right Arm""),
        Character:FindFirstChild(""Left Arm""),
        Character:FindFirstChild(""Right Leg""),
        Character:FindFirstChild(""Left Leg"")
    }
    if Joints[Limb] == nil then return false end
    if Limbs[Limb] == nil then return false end
    if Limb == 1 then
        Joints[Limb].C0 = CFrame.new(1.5, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joints[Limb].C1 = CFrame.new(0, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
    elseif Limb == 2 then
        Joints[Limb].C0 = CFrame.new(-1.5, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joints[Limb].C1 = CFrame.new(0, 0.5, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
    elseif Limb == 3 then
        Joints[Limb].C0 = CFrame.new(0.5, -1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        Joints[Limb].C1 = CFrame.new(0, 1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
    elseif Limb == 4 then
        Joints[Limb].C0 = CFrame.new(-0.5, -1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        Joints[Limb].C1 = CFrame.new(0, 1, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
    end
end


function EnableLimb(Limb, Character)
    if Character == nil then return false end
    if Character:FindFirstChild(""Torso"") == nil then return false end
    local Joints = {
        Character.Torso:FindFirstChild(""Right Shoulder 2""),
        Character.Torso:FindFirstChild(""Left Shoulder 2""),
        Character.Torso:FindFirstChild(""Right Hip 2""),
        Character.Torso:FindFirstChild(""Left Hip 2"")
    }
    local Limbs = {
        Character:FindFirstChild(""Right Arm""),
        Character:FindFirstChild(""Left Arm""),
        Character:FindFirstChild(""Right Leg""),
        Character:FindFirstChild(""Left Leg"")
    }
    if Joints[Limb] == nil then return false end
    if Limbs[Limb] == nil then return false end
    if Limb == 1 then
        Joints[Limb].Name = ""Right Shoulder""
    elseif Limb == 2 then
        Joints[Limb].Name = ""Left Shoulder""
    elseif Limb == 3 then
        Joints[Limb].Name = ""Right Hip""
    elseif Limb == 4 then
        Joints[Limb].Name = ""Left Hip""
    end
    Animate = Character:FindFirstChild(""Animate"")
    if Animate == nil then return false end
    Animate = Animate:Clone()
    Character.Animate:Remove()
    Animate.Parent = Character
end


function playAnimation(format, mouse)
    if format == ""equip"" then
        if Ready == true then
            Player.Character.Humanoid.WalkSpeed = AimSpeed
        else end
        EnableLimb(1, Player.Character)
        EnableLimb(2, Player.Character)
        DisableLimb(2, Player.Character)
        SetSpeed(2, 0.1, Player.Character)
        ForceAngle(2, 0, Player.Character)
        SetAngle(2, math.rad(-50), Player.Character)
        wait(0.25)
        if Player.Character:FindFirstChild(Name.. "" (Holstered)"") == nil then makeParts(""RightHolster"") end
        Player.Character[Name.. "" (Holstered)""].Handle.Weld:Remove()
        local w = Instance.new(""Weld"")
        w.Part0 = Player.Character[Name.. "" (Holstered)""].Handle
        w.Part1 = Player.Character:FindFirstChild(""Left Arm"")
        w.C0 = CFrame.new(0.5, -0.25, -0.75) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(50), 0, 0)
        w.Parent = Player.Character[Name.. "" (Holstered)""].Handle
        SetAngle(2, 0, Player.Character)
        wait(0.25)
        DisableLimb(1, Player.Character)
        ForceAngle(1, 0, Player.Character)
        delay(0.3, function() Player.Character[Name.. "" (Holstered)""].Handle.Equip:Play() end)
        for i = 0, 1, 0.05 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new((-0.5 * i) + (1.5 * (1 - i)), 1.2 * i, 0.8 * i) * CFrame.fromEulerAnglesXYZ(math.rad(300 + ((1 - i) * 50)), math.rad(10), math.rad(-90) * i)
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new((-0.9 * i) + (-1.5 * (1 - i)), -0.35 * i, 0.51 * i) * CFrame.fromEulerAnglesXYZ(math.rad(-90 * i), math.rad(-5 * i), 0)
                    w.C0 = CFrame.new(0.5 - (i * (0.5 * 2)), -0.25 - (i * (-0.25 * 2)), -0.75 - (i * (-0.75 * 2))) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90 + (i * 180)), 0)
                    w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(50 - i * 25), 0, -math.rad(i * 15))
                    wait()
                else return false end
            else return false end
        end
        return playAnimation(""hold"")
    end
    if format == ""unequip"" then
        if Ready == true then
            Player.Character.Humanoid.WalkSpeed = 16
        else end    
        Player.Character[Name].Handle.Weld:Remove()
        local w = Instance.new(""Weld"")
        w.Part0 = Player.Character[Name].Handle
        w.Part1 = Player.Character:FindFirstChild(""Left Arm"")
        w.C0 = CFrame.new(0.5, -0.25, -0.75) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(50), 0, 0)
        w.Parent = Player.Character[Name].Handle
        for i = 1, 0, -0.05 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new((-0.5 * i) + (1.5 * (1 - i)), 1.2 * i, 0.8 * i) * CFrame.fromEulerAnglesXYZ(math.rad(300 + ((1 - i) * 50)), math.rad(10), math.rad(-90) * i)
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new((-0.9 * i) + (-1.5 * (1 - i)), -0.35 * i, 0.51 * i) * CFrame.fromEulerAnglesXYZ(math.rad(-90 * i), math.rad(-5 * i), 0)
                    w.C0 = CFrame.new(0.5 - (i * (0.5 * 2)), -0.25 - (i * (-0.25 * 2)), -0.75 - (i * (-0.75 * 2))) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90 + (i * 180)), 0)
                    w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(50 - i * 25), 0, -math.rad(i * 15))
                    wait()
                else return false end
            else return false end
        end
        w.C0 = CFrame.new(0.5, -0.25, -0.75) * CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)
        w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(50), 0, 0)
        ResetLimbCFrame(1, Player.Character)
        ResetLimbCFrame(2, Player.Character)
        EnableLimb(1, Player.Character)
        EnableLimb(2, Player.Character)
        DisableLimb(2, Player.Character)
        SetSpeed(2, 0.1, Player.Character)
        ForceAngle(2, 0, Player.Character)
        SetAngle(2, math.rad(-50), Player.Character)
        wait(0.25)
        SetAngle(2, 0, Player.Character)
        removeParts(""RightHand"")
        makeParts(""RightHolster"")
        wait(0.25)
        makeParts(""RightHand"")
        removeParts(""RightHolster"")
        return true
    end
    if format == ""hold"" then
        if Ready == false then
            for i = 0, 15, 5 do
                if Player.Character:FindFirstChild(""Torso"") ~= nil then
                    if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                        Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 - i), math.rad(-90))
                        Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), 0)
                        wait()
                    else return false end
                else return false end
            end
        else
            for i = 15, 0, -5 do
                if Player.Character:FindFirstChild(""Torso"") ~= nil then
                    if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                        Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 - i), math.rad(-90))
                        Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), 0)
                        wait()
                    else return false end
                else return false end
            end 
        end
    end
    if format == ""reload"" then
        coroutine.resume(coroutine.create(function()
            if Ready ~= false then
                for i = 0, 25, 5 do
                    if Player.Character:FindFirstChild(""Torso"") ~= nil then
                        if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                            Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                            Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), 0)
                            wait()
                        else return false end
                    else return false end
                end
            else end
            for i = 25, 0, -5 do
                if Player.Character:FindFirstChild(""Torso"") ~= nil then
                    if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                        Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9 + ((25 - i) / 30), -0.35, 0.51 + ((25 - i) / 25)) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), math.rad((25 * 2) - (i * 2)))
                        wait()
                    else return false end
                else return false end
            end                     
        end))
        Player.Character[Name].Handle.Release:Play()
        Player.Character[Name].Magazine.Transparency = 1
        Player.Character[Name].MagazineGrip.Transparency = 1
        Player.Character[Name].MagazineShell.Transparency = 1   
        Player.Character[Name].Magazine.Weld.C0 = CFrame.new(0, 0.3, -0.22)     
        local Mag = Instance.new(""Model"")
        Mag.Name = ""Spent Magazine""     
        local source = Player.Character[Name]:FindFirstChild(""Magazine"")
        if source == nil then return end
        source = source:Clone()
        source.CanCollide = true
        source.Transparency = 0
        source.Parent = Mag
        coroutine.resume(coroutine.create(function() wait(4.5) for i = 0, 1, 0.1 do source.Transparency = i wait() end source:Remove() end))
        for _, Part in pairs(Player.Character[Name]:GetChildren()) do
            if Part.Name == ""MagazineGrip"" or Part.Name == ""MagazineShell"" then
                local new = Part:Clone()
                new.Parent = Mag
                if new.Name == ""MagazineShell"" then
                    if Empty == true then
                        new.Transparency = 1
                    else 
                        new.Transparency = 0
                    end
                else
                    new.Transparency = 0    
                end
                new.CanCollide = true
                local w = Instance.new(""Weld"", new)
                w.Part0 = w.Parent
                w.Part1 = source
                w.C0 = Part.Weld.C0
                w.C1 = Part.Weld.C1
                coroutine.resume(coroutine.create(function() wait(4.55) for i = 0, 1, 0.1 do new.Transparency = i wait() end new.Parent:Remove() end))
            else end
        end
        Mag.Parent = game.Workspace
        wait(0.2)
        magazineNew = Player.Character[Name].Magazine:Clone()
        magazineNew.Name = ""New Magazine""
        magazineNew.Transparency = 0
        magazineNew.Parent = Player.Character[Name]
        local w = Instance.new(""Weld"")
        w.Part0 = magazineNew
        w.Part1 = Player.Character:FindFirstChild(""Left Arm"")
        w.C0 = CFrame.new(0, 1.1, 0)
        w.C1 = CFrame.new() * CFrame.fromEulerAnglesXYZ(0, math.rad(90), 0)
        w.Parent = magazineNew
        wait(0.2)
        for i = 25, 0, -5 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5 + ((i + 10) / 60), 1.2 - ((i + 10) / 20), 0.8 + (i / 35)) * CFrame.fromEulerAnglesXYZ(math.rad(300 - (i - 10)), math.rad(10 + -i * 3.5), math.rad(-90))
                    wait()
                else return false end
            else return false end
        end
        Player.Character[Name].Magazine.Transparency = 0
        Player.Character[Name].MagazineGrip.Transparency = 0
        Player.Character[Name].MagazineShell.Transparency = 0
        Empty = false       
        Player.Character[Name][""New Magazine""]:Remove()
        Player.Character[Name].Handle.Jam:Play()
        wait(0.2)
        for i = 0, 10, 5 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.3, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-100 - i), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end
        wait(0.1)
        for i = 0, 8, 2 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.3, 0.75, 0.65) * CFrame.fromEulerAnglesXYZ(math.rad(315 + (i * 1.5)), math.rad(i * 4), math.rad(-90))
                    wait()
                else return false end
            else return false end
        end
        Player.Character[Name].Handle.Reload:Play() 
        Player.Character[Name].Magazine.Weld.C0 = CFrame.new(0, 0.3, -0.12)                     
        for i = 8, 0, -2 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.3, 0.75, 0.65) * CFrame.fromEulerAnglesXYZ(math.rad(315 + (i * 1.5)), math.rad(i * 4), math.rad(-90))
                    wait()
                else return false end
            else return false end
        end
        wait(0.1)
        for i = 10, 0, -5 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.3, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-100 - i), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end     
        if Chambered ~= true then
            playAnimation(""bolt"")
            Chambered = true
        else
            playAnimation(""hold"")
            return true
        end
    end
    if format == ""ready"" then
        if Ready == true then
            for i = 0, 15, 5 do
                if Player.Character:FindFirstChild(""Torso"") ~= nil then
                    if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                        Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 - i), math.rad(-90))
                        Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), 0)
                        wait()
                    else return false end
                else return false end
            end
        else
            for i = 15, 0, -5 do
                if Player.Character:FindFirstChild(""Torso"") ~= nil then
                    if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                        Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 - i), math.rad(-90))
                        Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                        Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 + i), math.rad(-5), 0)
                        wait()
                    else return false end
                else return false end
            end 
        end
    end
    if format == ""bolt"" then
        Player.Character[Name].Handle.Weld:Remove()
        local w = Instance.new(""Weld"")
        w.Part0 = Player.Character[Name].Handle
        w.Part1 = Player.Character:FindFirstChild(""Left Arm"")
        w.C0 = CFrame.new(-0.85, -0.3, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(15), math.rad(90), 0)
        w.C1 = CFrame.new(0, 0.4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(40), 0, 0)
        w.Parent = Player.Character[Name].Handle
        if Player.Character:FindFirstChild(""Torso"") ~= nil then
            if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.4, 0.9, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(280), math.rad(-10), math.rad(-90))
            else return false end
        else return false end
        wait(0.2)
        Player.Character[Name].Handle.Action1:Play()
        for i = 0, 1, 0.25 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-1.2, 0, 0 + i) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end 
        Player.Character[Name].BoltKnob.Weld.C0 = CFrame.new(-0.2, 0, 0) * CFrame.fromEulerAnglesXYZ(0, math.rad(-15), 0)           
        wait(0.08)
        Player.Character[Name].Handle.Action2:Play()        
        for i = 0, 1, 0.25 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-1.2, 0 - (i / 1.5), 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end
        Player.Character[Name].Handle.Action3:Play()        
        Player.Character[Name].Bolt.Weld.C0 = CFrame.new(0, -0.55, 0.06)
        if magazine.Value ~= 0 or LastShot == true then
            makeShell(Player.Character[Name]:FindFirstChild(""ShellOut""))
            if LastShot == true then LastShot = false end
        else end
        wait(0.08)
        for i = 1, 0, -0.25 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-1.2, 0 - (i / 1.5), 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end 
        Player.Character[Name].Bolt.Weld.C0 = CFrame.new(0, -0.2, 0.06)                         
        wait(0.1)
        removeParts(""RightHand"")
        makeParts(""RightHand"")
        playAnimation(""hold"")
        return true             
    end
    if format == ""fire"" then
        if Player.Character[Name]:FindFirstChild(""Handle"") ~= nil then
            if silenced then
                Player.Character[Name].Handle.Fire2.Volume = math.random(3, 8) / 10
                Player.Character[Name].Handle.Fire2.Pitch = math.random(20, 25) / 10
                Player.Character[Name].Handle.Fire2:Play()
                CamShake(10, 2000)
            else
                Player.Character[Name].Handle.Fire.Volume = math.random(9, 10) / 10
                Player.Character[Name].Handle.Fire:Play()
                Player.Character[Name].Handle.Fire3:Play()              
                CamShake(10, 2000)
            end
        else return false end
        if Player.Character[Name]:FindFirstChild(""Muzzle"") ~= nil then
            if silenced == false then
                coroutine.resume(coroutine.create(function() Player.Character[Name].Muzzle.Smoke.Enabled = true Player.Character[Name].Muzzle.Fire.Enabled = true wait(0.1) Player.Character[Name].Muzzle.Smoke.Enabled = false Player.Character[Name].Muzzle.Fire.Enabled = false end))
            else end
        else return false end
        for i = 0, 15, 5 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 + i), math.rad(-90))
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 - i), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end
        for i = 15, 0, -5 do
            if Player.Character:FindFirstChild(""Torso"") ~= nil then
                if Player.Character.Torso:FindFirstChild(""Left Shoulder 2"") ~= nil and Player.Character.Torso:FindFirstChild(""Right Shoulder 2"") ~= nil then
                    Player.Character.Torso[""Left Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Left Shoulder 2""].C1 = CFrame.new(-0.5, 1.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10 + i), math.rad(-90))
                    Player.Character.Torso[""Right Shoulder 2""].C0 = CFrame.new()
                    Player.Character.Torso[""Right Shoulder 2""].C1 =  CFrame.new(-0.9, -0.35, 0.51) * CFrame.fromEulerAnglesXYZ(math.rad(-90 - i), math.rad(-5), 0)
                    wait()
                else return false end
            else return false end
        end 
        if magazine.Value == 0 then
            LastShot = true
            Empty = true
            Player.Character[Name].MagazineShell.Transparency = 1
            playAnimation(""bolt"")
        end
    end
    return true
end


function CamShake(time, freq)
    coroutine.resume(coroutine.create(function()
        local cam = game:GetService(""Workspace"").CurrentCamera
        local time = 10
        local seed = Vector3.new(math.random(100, 200) / freq, math.random(100, 200) / freq, 0)
        if math.random(1, 2) == 1 then seed = Vector3.new(-seed.x, seed.y, 0) end
        if math.random(1, 2) == 1 then seed = Vector3.new(seed.x, -seed.y, 0) end
        cam.CoordinateFrame = (CFrame.new(cam.Focus.p) * (cam.CoordinateFrame - cam.CoordinateFrame.p) * CFrame.fromEulerAnglesXYZ(seed.x * time, seed.y * time, 0)) * CFrame.new(0, 0, (cam.CoordinateFrame.p - cam.Focus.p).magnitude)
        for i = 1, time do
            cam.CoordinateFrame = (CFrame.new(cam.Focus.p) * (cam.CoordinateFrame - cam.CoordinateFrame.p) * CFrame.fromEulerAnglesXYZ(-seed.x, -seed.y, 0)) * CFrame.new(0, 0, (cam.CoordinateFrame.p - cam.Focus.p).magnitude)
            wait()
        end
    end))
end


function makeShell(part)
    if part == nil then return false end
    local casing = Instance.new(""Part"")
    casing.Name = ""Shell""
    casing.formFactor = ""Custom""
    casing.Size = Vector3.new(0.2, 0.28, 0.2)
    casing.CFrame = CFrame.new(part.Position) * CFrame.fromEulerAnglesXYZ(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
    casing.BrickColor = BrickColor.new(""New Yeller"")
    local mesh = Instance.new(""CylinderMesh"")
    mesh.Scale = Vector3.new(0.4, 1, 0.4)
    mesh.Parent = casing
    local s = Instance.new(""Sound"")
    s.Name = ""Ding""
    s.SoundId = ""http://www.roblox.com/Asset/?id=13114759""
    s.Volume = 0.4
    s.Pitch = 2.5
    s.Looped = false
    s.Parent = casing       
    casing.Parent = game:GetService(""Workspace"")
    casing.Ding:Play()  
    casing:BreakJoints()
    casing.Velocity = (part.CFrame.lookVector * 65) + Vector3.new(0, 10, 0)
    coroutine.resume(coroutine.create(function() wait(4.5) for i = 0, 1, 0.1 do casing.Transparency = i wait() end casing:Remove() end))
end


function Weld(x, y)
    local weld = Instance.new(""Weld"")
    weld.Part0 = x
    weld.Part1 = y
    CJ = CFrame.new(x.Position)
    C0 = x.CFrame:inverse() * CJ
    C1 = y.CFrame:inverse() * CJ
    weld.C0 = C0
    weld.C1 = C1
    weld.Parent = x
end


function tagHumanoid(humanoid)
    local tag = Instance.new(""ObjectValue"")
    tag.Name = ""creator""
    tag.Value = Player
    tag.Parent = humanoid
    local tag = Instance.new(""StringValue"")
    tag.Name = ""creatorType1""
    tag.Value = Name
    tag.Parent = humanoid
    local tag = Instance.new(""StringValue"")
    tag.Name = ""creatorType2""
    tag.Value = ""shot""
    tag.Parent = humanoid
end


function untagHumanoid(humanoid)
    if humanoid ~= nil then
        local tag = humanoid:FindFirstChild(""creator"")
        if tag ~= nil then
            tag:Remove()
        end
        local tag = humanoid:FindFirstChild(""creatorType1"")
        if tag ~= nil then
            tag:Remove()
        end
        local tag = humanoid:FindFirstChild(""creatorType2"")
        if tag ~= nil then
            tag:Remove()
        end
    end
end


function fire(startPoint, endPoint, hit)
    local damage1 = damage
    if Raycast ~= false then
        if hit ~= nil then
            local Ray = Ray.new(startPoint, (endPoint - startPoint).unit*300)
            local Hit, Position = game.Workspace:FindPartOnRay(Ray, Player.Character)
            if Hit then 
                if Hit.Material == ""Grass"" then
                    damage1 = damage1 / 6
                elseif Hit.Material == ""DiamondPlate"" then
                    damage1 = damage1 / 12
                elseif Hit.Material == ""Slate"" then
                    damage1 = 0
                elseif Hit.Material == ""Plastic"" then
                    damage1 = damage1 / 8
                elseif Hit.Material == ""Ice"" then
                    damage1 = damage1 / 15
                elseif Hit.Material == ""Concrete"" then
                    damage1 = 0
                elseif Hit.Material == ""CorrodedMetal"" then
                    damage1 = damage1 / 10
                elseif Hit.Material == ""Foil"" then
                    damage1 = damage1 / 4
                else end
            end
            if Hit.Parent:FindFirstChild(""Humanoid"") then
                if Hit.Name == ""Head"" then
                    Hit.Parent.Humanoid:TakeDamage(damage1 * 10)
                    damage1 = damage1 / 2                       
                elseif Hit.Name == ""Torso"" then
                    Hit.Parent.Humanoid:TakeDamage(damage1 * 2)
                    damage1 = damage1 / 2                       
                elseif hit.Name == ""Left Leg"" then
                    Hit.Parent.Humanoid:TakeDamage(damage1)
                    damage1 = damage1 / 2                       
                    Hit.Parent.Humanoid.Sit = true  
                elseif hit.Name == ""Right Leg"" then
                    Hit.Parent.Humanoid:TakeDamage(damage1) 
                    damage1 = damage1 / 2                       
                    Hit.Parent.Humanoid.Sit = true                                          
                else
                    Hit.Parent.Humanoid:TakeDamage(damage1)
                    damage1 = damage1 / 2                       
                end
            end
        else end
    else end
    local trail = Instance.new(""Part"")
    trail.Name = ""Bullet Trail""
    trail.BrickColor = BrickColor.new(""Dark stone grey"")
    trail.TopSurface = 0
    trail.BottomSurface = 0
    trail.formFactor = 0
    trail.Size = Vector3.new(1, 1, 1)
    trail.Transparency = 0.5
    trail.Anchored = true
    trail.CanCollide = false
    trail.CFrame = CFrame.new((startPoint + endPoint) / 2, endPoint)
    trail.Parent = game:GetService(""Workspace"")
    local mesh = Instance.new(""SpecialMesh"")
    mesh.MeshType = ""Brick""
    mesh.Scale = Vector3.new(0.1, 0.1, (startPoint - endPoint).magnitude)
    mesh.Parent = trail
    coroutine.resume(coroutine.create(function(part) for i = 1, 10 do part.Mesh.Scale = Vector3.new(part.Mesh.Scale.x - 0.01, part.Mesh.Scale.y - 0.01, part.Mesh.Scale.z) wait() end part:Remove() end), trail)
    if hit ~= nil then
        if hit.Parent == nil then return end
        if hit.Parent.ClassName == ""Hat"" then
            if hit.Parent.Parent.Humanoid ~= nil then
                hit.Parent.Parent.Humanoid:TakeDamage(damage * 5)
            end
        end     
        if hit.Parent:FindFirstChild(""Humanoid"") ~= nil then
            tagHumanoid(hit.Parent.Humanoid)
            if hit.Name == ""Head"" then
                hit.Parent.Humanoid:TakeDamage(damage1 * 10)
            elseif hit.Name == ""Torso"" then
                hit.Parent.Humanoid:TakeDamage(damage1 * 2)
            elseif hit.Name == ""Left Leg"" then
                hit.Parent.Humanoid:TakeDamage(damage1) 
                hit.Parent.Humanoid.Sit = true  
            elseif hit.Name == ""Right Leg"" then
                hit.Parent.Humanoid:TakeDamage(damage1) 
                hit.Parent.Humanoid.Sit = true                              
            else
                hit.Parent.Humanoid:TakeDamage(damage1)
            end
            if math.random(1, 3) == 1 then
                hit.Parent.Humanoid.Sit = true
            end
            delay(0.1, function() untagHumanoid(hit.Parent.Humanoid) end)
        end
        if hit.Parent:FindFirstChild(""VehicleHealth"") ~= nil then
            hit.Parent.VehicleHealth.Value = hit.Parent.VehicleHealth.Value - (damage1 / 5)
        else end                
        if hit.Anchored == false then
            hit.Velocity = hit.Velocity + ((endPoint - startPoint).unit * (damage1 * 4))
        end
    end
end


function onButton1Down(mouse)
    if selected == false then return end
    if Player.Character:FindFirstChild(Name) ~= nil and Button1Down == false and canFire == true and (function() if dual == true then if Player.Character:FindFirstChild(Name.. "" (Left)"") ~= nil then return true else return false end else return true end end)() == true then
        if Player.Character[Name]:FindFirstChild(""Handle"") == nil then return end
        if Player.Character[Name]:FindFirstChild(""Muzzle"") == nil then return end
        if dual == true then if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Handle"") == nil then return end end
        if dual == true then if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Muzzle"") == nil then return end end
        mouse.Icon = CurrentMouse
        Button1Down = true
        canFire = false
        canFire2 = true
        while canFire2 == true do
            local humanoid = Player.Character:FindFirstChild(""Humanoid"")
            if humanoid == nil then
                canFire2 = false
                break
            end
            if humanoid.Health <= 0 then
                canFire2 = false
                break
            end
            local fireLeft = false
            if automatic == false and burst == false then
                canFire2 = false
            elseif automatic == false and burst == true then
                if burstCount >= burstCountMax then
                    canFire2 = false
                    burstCount = 0
                    break
                end
                burstCount = burstCount + 1
            elseif automatic == true and burst == false then
                fireLeft = true
            end
            if Ready == true and magazine.Value ~= 0 and Chambered ~= false then
                Chambered = false
                magazine.Value = magazine.Value - 1     
                updateGui()
                fire(Player.Character[Name].Muzzle.Position, mouse.Hit.p, mouse.Target)
                coroutine.resume(coroutine.create(function()
                    if dual == true then
                        playAnimation(""rightFire"")
                    elseif dual == false then
                        playAnimation(""fire"")
                    end
                end))
            else
                Player.Character[Name].Handle.Empty:Play()
            end
            if fireLeft == true and dual == true and automatic == true then
                if magazine.Value > 0 then
                    coroutine.resume(coroutine.create(function()
                        wait(readyTime / 2)
                        magazine.Value = magazine.Value - 1
                        updateGui()
                        fire(Player.Character[Name.. "" (Left)""].Muzzle.Position, mouse.Hit.p, mouse.Target)
                        playAnimation(""leftFire"")
                    end))
                else
                    coroutine.resume(coroutine.create(function()
                        wait(readyTime / 2)
                        Player.Character[Name].Handle.Empty:Play()
                    end))
                end
            end
        end
        canFire = true
        mouse.Icon = CurrentMouse
    end
end


function onButton1Up(mouse)
    if selected == false then return end
    Button1Down = false
    canFire2 = false
    burstCount = 0
    while canFire == false do wait() end
    if dual == true and automatic == false then
        if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Handle"") == nil then return end
        if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Muzzle"") == nil then return end
        mouse.Icon = CurrentMouse
        canFire = false
        canFire2 = true
        while canFire2 == true do
            local humanoid = Player.Character:FindFirstChild(""Humanoid"")
            if humanoid == nil then
                canFire2 = false
                break
            end
            if humanoid.Health <= 0 then
                canFire2 = false
                break
            end
            if burst == false then
                canFire2 = false
            elseif burst == true then
                if burstCount >= burstCountMax then
                    canFire2 = false
                    burstCount = 0
                    break
                end
                burstCount = burstCount + 1
            end
            if magazine.Value <= 0 then
                Player.Character[Name].Handle.Empty:Play()
            else
                coroutine.resume(coroutine.create(function()
                    playAnimation(""leftFire"")
                end))
                magazine.Value = magazine.Value - 1
                updateGui()
                fire(Player.Character[Name.. "" (Left)""].Muzzle.Position, mouse.Hit.p, mouse.Target)
            end
            wait(readyTime)
        end
        mouse.Icon = CurrentMouse
        canFire = true
    end
end


function onKeyDown(key, mouse)
    if selected == false then return end
    key = key:lower()
    if key == ""q"" and Button1Down == false and canFire == true then
        if mouse.Target == nil then return end
        if game:GetService(""Players""):GetPlayerFromCharacter(mouse.Target.Parent) ~= nil then
            if dual == true then onKeyDown(""t"", mouse) end
            onDeselected(mouse)
            removeParts(""RightHolster"")
            script.Parent.Parent = game:GetService(""Players""):GetPlayerFromCharacter(mouse.Target.Parent).Backpack
        end
    end
    if key == ""e"" and Button1Down == false and canFire == true and canSilence == true then
        if silenced then
            silenced = false
            if Player.Character:FindFirstChild(Name) == nil then return end
            if Player.Character[Name]:FindFirstChild(""Muzzle"") == nil then return end
            if Player.Character[Name]:FindFirstChild(""Muzzle 2"") == nil then return end
            Player.Character[Name].Muzzle.Transparency = 1
            Player.Character[Name].Silencer1.Transparency = 1
            Player.Character[Name].Silencer2.Transparency = 1                       
            Player.Character[Name].Muzzle.Name = ""Silencer""
            Player.Character[Name][""Muzzle 2""].Name = ""Muzzle""
            if dual == true then
                if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Muzzle"") == nil then return end
                if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Muzzle 2"") == nil then return end
                Player.Character[Name.. "" (Left)""].Muzzle.Transparency = 1
                Player.Character[Name.. "" (Left)""].Muzzle.Name = ""Silencer""
                Player.Character[Name.. "" (Left)""][""Muzzle 2""].Name = ""Muzzle""
            end
        else
            silenced = true
            if Player.Character:FindFirstChild(Name) == nil then return end
            if Player.Character[Name]:FindFirstChild(""Silencer"") == nil then return end
            if Player.Character[Name]:FindFirstChild(""Muzzle"") == nil then return end
            Player.Character[Name].Silencer.Transparency = 0
            Player.Character[Name].Silencer1.Transparency = 0
            Player.Character[Name].Silencer2.Transparency = 0                                   
            Player.Character[Name].Muzzle.Name = ""Muzzle 2""
            Player.Character[Name].Silencer.Name = ""Muzzle""
            if dual == true then
                if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Silencer"") == nil then return end
                if Player.Character[Name.. "" (Left)""]:FindFirstChild(""Muzzle"") == nil then return end
                Player.Character[Name.. "" (Left)""].Silencer.Transparency = 0
                Player.Character[Name.. "" (Left)""].Muzzle.Name = ""Muzzle 2""
                Player.Character[Name.. "" (Left)""].Silencer.Name = ""Muzzle""
            end
        end
    end
    if key == ""r"" and Button1Down == false and canFire == true then
        if zoom == true then
            onKeyDown(""y"", mouse)
        else end
        if ammo.Value > 0 and magazine.Value ~= magazineMax.Value then
            canFire = false
            burstCount = 0
            mouse.Icon = CurrentMouse
            if magazine.Value > 0 then magazine.Value = 0 end
            updateGui()
            if dual == true then
                playAnimation(""reloadDual"")
            elseif dual == false then
                playAnimation(""reload"")
            end
            if ammo.Value - magazineMax.Value < 0 then
                magazine.Value = ammo.Value
                ammo.Value = 0
            elseif ammo.Value - magazineMax.Value >= 0 then
                ammo.Value = ammo.Value - magazineMax.Value
                magazine.Value = magazine.Value + magazineMax.Value
            end
            updateGui()
            mouse.Icon = CurrentMouse
            canFire = true
        end
    end
    if key == ""t"" and Button1Down == false and canFire == true and canDual == true then
        canFire = false
        if dual == false then
            local weapon = nil
            for _, p in pairs(Player.Backpack:GetChildren()) do
                if p.Name == Name and p ~= script.Parent then weapon = p break end
            end
            if weapon ~= nil then
                dual = true
                weapon.Name = ""Dual""
                weapon.Parent = script
                silenced = false
                removeParts(""RightHand"")
                makeParts(""RightHand"")
                removeParts(""RightHolster"")
                makeParts(""LeftHolster"")
                playAnimation(""leftEquip"")
                removeParts(""LeftHolster"")
                makeParts(""LeftHand"")
                magazineMax.Value = math.ceil(magazineMax.Value * 2)
                ammoMax.Value = math.ceil(ammoMax.Value * 2)
                magazine.Value = magazine.Value + weapon.Magazine.Value
                ammo.Value = ammo.Value + weapon.Ammo.Value
                updateGui()
            end
        elseif dual == true then
            local weapon = script:FindFirstChild(""Dual"")
            if weapon ~= nil then
                dual = false
                weapon.Name = Name
                weapon.Parent = Player.Backpack
                silenced = false
                removeParts(""RightHand"")
                makeParts(""RightHand"")
                playAnimation(""leftUnequip"")
                removeParts(""LeftHand"")
                makeParts(""RightHolster"")
                playAnimation(""hold"")
                weapon.Magazine.Value = math.floor(magazine.Value / 2)
                weapon.Ammo.Value = math.floor(ammo.Value / 2)
                magazineMax.Value = math.ceil(magazineMax.Value / 2)
                ammoMax.Value = math.ceil(ammoMax.Value / 2)
                magazine.Value = math.ceil(magazine.Value / 2)
                ammo.Value = math.ceil(ammo.Value / 2)
                updateGui()
            end
        end
        canFire = true
    end
    if key == ""y"" and canZoom == true then
        if zoom == false then
            zoom = true
            CurrentMouse = ScopeMouse
            mouse.Icon = CurrentMouse       
            local pos = mouse.Hit.p
            local target = mouse.Target
            local cam = game:GetService(""Workspace"").CurrentCamera
            focus = Instance.new(""Part"", workspace)
            focus.Anchored = true
            focus.CanCollide = false
            focus.Transparency = 1
            focus.TopSurface = 0
            focus.BottomSurface = 0
            focus.formFactor = ""Plate""
            focus.Size = Vector3.new(0, 0, 0)
            focus.CFrame = CFrame.new(pos) * (CFrame.new(Player.Character.Torso.CFrame.p, pos) - CFrame.new(Player.Character.Torso.CFrame.p, pos).p)
            cam.CameraSubject = focus
            cam.CameraType = ""Attach""
            while zoom == true and selected == true do
                local set = false
                if target ~= nil then
                    if target.Parent ~= nil then
                        if target.Anchored == false then
                            focus.CFrame = CFrame.new(target.CFrame.p) * (CFrame.new(Player.Character.Torso.CFrame.p, target.CFrame.p) - CFrame.new(Player.Character.Torso.CFrame.p, target.CFrame.p).p)
                            set = true
                        end
                    end
                end
                if set == false then
                    focus.CFrame = CFrame.new(pos) * (CFrame.new(Player.Character.Torso.CFrame.p, pos) - CFrame.new(Player.Character.Torso.CFrame.p, pos).p)
                end
                wait()
            end
            if focus ~= nil then focus:Remove() focus = nil end
            local cam = game:GetService(""Workspace"").CurrentCamera
            cam.CameraSubject = Player.Character:FindFirstChild(""Humanoid"")
            cam.CameraType = ""Custom""
        else
            zoom = false
            CurrentMouse = NormalMouse
            mouse.Icon = CurrentMouse       
        end
    end
    if key == ""u"" and Button1Down == false and canFire == true then
        if automatic == false and burst == false then
            if switchToBurst == true then
                burst = true
                local m = Instance.new(""Message"", Player)
                m.Text = ""Burst""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            elseif switchToAutomatic == true then
                automatic = true
                local m = Instance.new(""Message"", Player)
                m.Text = ""Automatic""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            end
        elseif automatic == false and burst == true then
            if switchToAutomatic == true then
                automatic = true
                burst = false
                local m = Instance.new(""Message"", Player)
                m.Text = ""Automatic""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            elseif switchToSingle == true then
                burst = false
                local m = Instance.new(""Message"", Player)
                m.Text = ""Single""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            end
        elseif automatic == true and burst == false then
            if switchToSingle == true then
                automatic = false
                local m = Instance.new(""Message"", Player)
                m.Text = ""Single""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            elseif switchToBurst == true then
                automatic = false
                burst = true
                local m = Instance.new(""Message"", Player)
                m.Text = ""Burst""
                pcall(function() Player.Character[Name].Handle.Switch:Play() end)
                delay(2.5, function() m:Remove() end)
            end
        end
    end
    if key == ""c"" and Button1Down == false and canFire == true and Chambered == false then
        if zoom == true then
            onKeyDown(""y"", mouse)
        else end
        if magazine.Value ~= 0 then
            canFire = false
            playAnimation(""bolt"")
            if magazine.Value ~= 0 then
                Chambered = true
            else 
                Chambered = false
            end         
            canFire = true
        end
    end 
    if key == ""x"" and canFire == true then
        canFire = false
        playAnimation(""ready"")
        if Ready == false then
            Player.Character.Humanoid.WalkSpeed = AimSpeed
            Ready = true
        else
            Player.Character.Humanoid.WalkSpeed = 16
            Ready = false
        end
        canFire = true
    end     
end


function onSelected(mouse)
    if selected == true then return end
    selected = true
    canFire = false
    mouse.Icon = CurrentMouse
    while Player.Character:FindFirstChild(""WeaponActivated"") ~= nil do
        if Player.Character.WeaponActivated.Value == nil then break end
        if Player.Character.WeaponActivated.Value.Parent == nil then break end
        wait()
    end
    updateGui()
    local weapon = Instance.new(""ObjectValue"")
    weapon.Name = ""WeaponActivated""
    weapon.Value = script.Parent
    weapon.Parent = Player.Character
    DisableLimb(1, Player.Character)
    DisableLimb(2, Player.Character)
    ForceAngle(1, 0, Player.Character)
    ForceAngle(2, 0, Player.Character)
    if dual == true then
        coroutine.resume(coroutine.create(function() playAnimation(""leftEquip"") end))
        playAnimation(""rightEquip"")
        removeParts(""LeftHolster"")
        makeParts(""LeftHand"")
    else
        playAnimation(""equip"")
    end
    removeParts(""RightHolster"")
    makeParts(""RightHand"")
    mouse.Button1Down:connect(function() onButton1Down(mouse) end)
    mouse.Button1Up:connect(function() onButton1Up(mouse) end)
    mouse.KeyDown:connect(function(key) onKeyDown(key, mouse) end)
    mouse.Icon = CurrentMouse
    canFire = true
end


function onDeselected(mouse)
    if selected == false then return end
    Button1Down = false
    while canFire == false do
        wait()
    end
    selected = false
    if dual == true then
        if math.random(1, 2) == 1 then
            coroutine.resume(coroutine.create(function() playAnimation(""leftUnequip"") end))
            wait(math.random(1, 10) / 10)
            playAnimation(""rightUnequip"")
        else
            coroutine.resume(coroutine.create(function() playAnimation(""rightUnequip"") end))
            wait(math.random(1, 10) / 10)
            playAnimation(""leftUnequip"")
        end
        removeParts(""LeftHand"")
        makeParts(""LeftHolster"")
    else
        playAnimation(""unequip"")
    end
    removeParts(""RightHand"")
    makeParts(""RightHolster"")
    ForceAngle(1, 0, Player.Character)
    ForceAngle(2, 0, Player.Character)
    ResetLimbCFrame(1, Player.Character)
    ResetLimbCFrame(2, Player.Character)
    EnableLimb(1, Player.Character)
    EnableLimb(2, Player.Character)
    if Player.PlayerGui:FindFirstChild(Name) ~= nil then Player.PlayerGui[Name]:Remove() end
    if Player.Character:FindFirstChild(""WeaponActivated"") ~= nil then
        if Player.Character.WeaponActivated.Value == script.Parent then
            Player.Character.WeaponActivated:Remove()
        end
    end
    while Player.Character:FindFirstChild(""WeaponActivated"") ~= nil do
        if Player.Character.WeaponActivated.Value == nil then break end
        if Player.Character.WeaponActivated.Value.Parent == nil then break end
        wait()
    end
end


if script.Parent.ClassName ~= ""HopperBin"" then
    if Player == nil then print(""Error: Player not found!"") return end
    Tool = Instance.new(""HopperBin"")
    Tool.Name = Name
    Tool.Parent = Player.Backpack
    script.Name = ""Main""
    script.Parent = Tool
end wait() if script.Parent.ClassName == ""HopperBin"" then
    while script.Parent.Parent.ClassName ~= ""Backpack"" do
        wait()
    end
    if script.Parent:FindFirstChild(""MagazineMax"") == nil then
        magazineMax = Instance.new(""NumberValue"")
        magazineMax.Name = ""MagazineMax""
        magazineMax.Value = 10
        magazineMax.Parent = script.Parent
    else
        magazineMax = script.Parent.MagazineMax
    end
    if script.Parent:FindFirstChild(""Magazine"") == nil then
        magazine = Instance.new(""NumberValue"")
        magazine.Name = ""Magazine""
        magazine.Value = 0
        magazine.Parent = script.Parent
    else
        magazine = script.Parent.Magazine
    end
    if script.Parent:FindFirstChild(""AmmoMax"") == nil then
        ammoMax        = Instance.new(""NumberValue"")
        ammoMax.Name   = ""AmmoMax""
        --ammoMax.Value = 50 who doesnt want alot more than 50 ammo?
        ammoMax.Value  = 80000
        ammoMax.Parent = script.Parent
    else
        ammoMax = script.Parent.AmmoMax
    end
    if script.Parent:FindFirstChild(""Ammo"") == nil then
        ammo = Instance.new(""NumberValue"")
        ammo.Name = ""Ammo""
        ammo.Value = script.Parent.AmmoMax.Value
        ammo.Parent = script.Parent
    else
        ammo = script.Parent.Ammo
    end
    Player = script.Parent.Parent.Parent
    makeParts(""RightHolster"")
    script.Parent.Selected:connect(onSelected)
    script.Parent.Deselected:connect(onDeselected)
end"
5gXyS6Y2,Untitled,OggySpelar,Lua,Friday 15th of December 2023 12:45:41 PM CDT,"--[[
[+] New thing
[*] Change/fix
[-] Removed thing


Future updates:
File dialog
Color picker
Menu undocking
Menu button hidden when there's only 1 menu


2.1.7.0
 [*] Changed dropdown background color to the same color as the topbar
 [*] Fixed :AddOption and :RemoveOption clipping issue
 [+] Added animation to :AddOption and :RemoveOption
 [-] Adding the same option to a dropdown with :AddOption will now error
 [+] Added parameters to add more notification width and height,like messageboxes
 [+] Added parameters to NewTrim and NewSection for gradient highlighting
 [*] Fixed menu title headers not having the gradient applied correctly
 [+] Added ui.GradientObjects which adds gradients to some objects like sliders when enabled
 [+] Hopefully fixed some errors regarding notifications attempting to tween when the ui was closed
 [+] Got rid of alpha tag since it's no longer needed
 [+] Changed default theme,can still be accessed with :SetColors(""old"")
 [*] Fixed buttons Hidden property not changing properly

2.1.6.0a
 [+] Added dropdown:AddOption,dropdown:RemoveOption,dropdown:SetOptions,and dropdown:IsOpen
 [*] Fixed GetBind erroring when there was no bind
 [+] Added ui:GetScreenGUI

2.1.5.1a
 [+] Changed scrolling again
 [+] Added ui.ScrollAmount number which controls the amount menus scroll each input

2.1.5.0a
 [+] Added :IsEnabled() for toggles as an alias for GetState
 [+] Increased scroll speed slightly
 [-] Removed deprecated function toggle:SetCallback()

]]--

_G.J2DEBUG = false

local eventlistener = loadstring(request('https://raw.githubusercontent.com/topitbopit/rblx/main/rbxevent.lua'))()

local plrs = game:GetService(""Players"")
local ts = game:GetService(""TweenService"")
local uis = game:GetService(""UserInputService"")
local ctx = game:GetService(""ContextActionService"")
local deb = game:GetService(""Debris"")
local rs = game:GetService(""RunService"")
local plr = plrs.LocalPlayer

local mouse = plr:GetMouse()

local tinsert = table.insert
local tremove = table.remove
local ulen = utf8.len
local tdelay = task.delay
local twait = task.wait
local tspawn = task.spawn


local screen = Instance.new(""ScreenGui"")

if not _G.J2DEBUG then
  pcall(function() 
    syn.protect_gui(screen)
  end)
end
screen.Parent = plr:WaitForChild(""PlayerGui"")


local ui = {}


local drag
local rdrag
local hdrag
local vdrag
local ctwn 
local twn
local getrand
local shadow
local round
local ceffect

function drag(detect,target) 
 target = target or detect
 local id = target:GetDebugId() .. getrand(5)
 
 ui.cons[id] = nil
 
 
 detect.InputBegan:Connect(function(old_input)
 if old_input.UserInputType == Enum.UserInputType.MouseButton1 then
 local starting_pos = target.Position
 
 local previnput = old_input.Position
 
 
 ui.cons[id] = uis.InputChanged:Connect(function(new_input)
 
 if new_input.UserInputType == Enum.UserInputType.MouseMovement then
 
 
 local delta = new_input.Position - old_input.Position
 
 
 twn(target,{Position = UDim2.new(
 starting_pos.X.Scale,
 starting_pos.X.Offset + delta.X,
 starting_pos.Y.Scale,
 starting_pos.Y.Offset + delta.Y
 )})
 
 
 
 previnput = new_input.Position
 end
 end)
 end
 end)
 
 detect.InputEnded:Connect(function(cur_input)
 if cur_input.UserInputType == Enum.UserInputType.MouseButton1 then
 pcall(function() ui.cons[id]:Disconnect() end)
 end
 end)
end


function rdrag(detect,target) 
 target = target or detect
 local id = target:GetDebugId() .. getrand(5)
 
 ui.cons[id] = nil
 
 detect.InputBegan:Connect(function(old_input)
 if old_input.UserInputType == Enum.UserInputType.MouseButton1 then
 local starting_pos = target.Position
 
 local previnput = old_input.Position
 
 
 ui.cons[id] = uis.InputChanged:Connect(function(new_input)
 
 if new_input.UserInputType == Enum.UserInputType.MouseMovement then
 
 
 local delta = new_input.Position - old_input.Position
 
 
 target.Rotation = target.Rotation - ((previnput.Magnitude - new_input.Position.Magnitude) * 0.1)
 
 twn(target,{Position = UDim2.new(
 starting_pos.X.Scale,
 starting_pos.X.Offset + delta.X,
 starting_pos.Y.Scale,
 starting_pos.Y.Offset + delta.Y
 ),Rotation = 0})
 
 
 
 previnput = new_input.Position
 end
 end)
 end
 end)
 
 detect.InputEnded:Connect(function(cur_input)
 if cur_input.UserInputType == Enum.UserInputType.MouseButton1 then
 pcall(function() ui.cons[id]:Disconnect() end)
 end
 end)
end

function ctwn(object,dest,delay,direction,style)
 delay = delay or 0.35
 direction = direction or ""Out""
 style = style or ""Circular""
 
 local tween = ts:Create(object,TweenInfo.new(delay,Enum.EasingStyle[style],Enum.EasingDirection[direction]),dest)
 tween:Play()
 return tween
end

function twn(object,dest)
 
 local tween = ts:Create(object,TweenInfo.new(0.25,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out),dest)
 tween:Play()
 return tween
end

function getrand(count) 
 local str = """"
 for i = 1,count or 10 do
 str = str..utf8.char(math.random(20000,27000))
 end
 
 return str
end



function shadow(inst) 
 local among = Instance.new(""ImageLabel"")
 among.BackgroundTransparency = 1
 among.Image = ""rbxassetid://7603818383""
 among.ImageColor3 = Color3.new(0,0,0)
 among.ImageTransparency = 0.15
 among.Position = UDim2.new(0.5,0,0.5,0)
 among.AnchorPoint = Vector2.new(0.5,0.5)
 among.Size = UDim2.new(1,20,1,20)
 among.SliceCenter = Rect.new(15,15,175,175)
 among.SliceScale = 1.3
 among.ScaleType = Enum.ScaleType.Slice
 among.ZIndex = inst.ZIndex - 1 
 among.Parent = inst

 return among
end


function round(inst)
 local among = Instance.new(""UICorner"")
 among.CornerRadius = UDim.new(0,5)
 among.Parent = inst
 
 return among
end

function ceffect(parent) 
 local a = Instance.new(""ImageLabel"")
 a.Image = ""rbxassetid://7620264743""
 a.AnchorPoint = Vector2.new(0.5,0.5)
 a.Size = UDim2.new(0,0,0,0)
 a.ZIndex = parent.ZIndex + 1 
 a.ImageColor3 = ui.colors.text
 a.Position = UDim2.new(0.5,mouse.X - (parent.AbsolutePosition.X + (parent.Size.X.Offset / 2)),0.5,mouse.Y - (parent.AbsolutePosition.Y + (parent.Size.Y.Offset / 2)))
 a.ImageTransparency = 0.5
 a.BackgroundTransparency = 1
 a.Parent = parent
 
 ctwn(a,{Size = UDim2.new(0,parent.AbsoluteSize.X+30,0,parent.AbsoluteSize.X+30),ImageTransparency = 1},0.5,""Out"",""Circular"")
 
 deb:AddItem(a,0.6)
end

do
 local msgs = {
 ""China #1"",
 ""Jeff 2 winning"",
 ""Buy jeffcoin"",
 ""irontruth.xyz"",
 ""I hate morgue"",
 ""Velocity's pretty cool"",
 ""Among us"",
 ""Synapse on top"",
 ""Scriptware losing"",
 ""Sponsored by NordVPN"",
 ""Now has 146% more bruh moments"",
 ""where'd you ge thnoser"",
 
 }
 local msg = msgs[math.random(1,#msgs)]
 screen.Name = """"
 for letter in string.gmatch(msg,""."") do
 screen.Name = screen.Name .. letter
 if math.random(1,3) == 3 then
 screen.Name = screen.Name .. ""​"" 
 end
 end

 screen.Name = screen.Name .. "" | ""..getrand(15)

 msgs,msg = nil,nil
end


ui = {} do
 ui.__index = ui
 ui.cons = {}
 
 ui.colors = {
 window = Color3.new(0.05,0.05,0.05);
 topbar = Color3.new(0.06,0.06,0.06);
 text = Color3.new(0.90,0.90,1.00);
 button = Color3.new(0.10,0.10,0.11);
 scroll = Color3.new(0.21,0.21,0.22);
 detail = Color3.new(0.21,0.20,1.00);
 enabledbright = Color3.new(0.41,0.40,0.80);
 enabled = Color3.new(0.31,0.30,0.90);
 textshade1 = Color3.new(0.21,0.20,1.00);
 textshade2 = Color3.new(1.00,0.20,1.00); 
 }
 
 ui.binds = {
 
 }
 
 ui.BindHandler = uis.InputBegan:Connect(function(io,gpe) 
 if gpe then return end
 if io.UserInputType == Enum.UserInputType.Keyboard then
 for id,bf in pairs(ui.binds) do
 if io.KeyCode.Name == bf.b then
 bf.f()
 end
 end
 end
 end)
 
 ui.OnReady = eventlistener.new()
 ui.OnNotifDelete = eventlistener.new() 
 ui.NotifCount = -1
 
 ui.Version = ""2.1.7.0""
 ui.Font = Enum.Font[""SourceSans""]
 ui.FontSize = 20
 
 ui.WindowCount = 0
 ui.Windows = {}
 
 ui.Exiting = eventlistener.new()
 
 ui.Toggles = {}
 
 ui.eventlistener = eventlistener
 
 ui.TooltipX = 15
 ui.TooltipY = 8
 
 ui.ScrollAmount = 200
 ui.GradientObjects = true
 
 function ui:Exit() 
 ui.Exiting:Fire()
 wait(0.2)
 
 screen:Destroy() 
 drag = nil
 rdrag = nil
 twn = nil
 ctwn = nil
 getrand = nil
 shadow = nil
 ceffect = nil
 
 
 ui.BindHandler:Disconnect()
 
 wait(0.2)
 
 ui = nil
 end
 
 function ui:GetAllToggles() 
 return ui.Toggles
 end
 
 function ui:SetColors(newcolors) 
 if type(newcolors) == ""string"" then
 newcolors = newcolors:lower()
 elseif type(newcolors) ~= ""table"" then
 newcolors = {}
 end
 
 if newcolors == ""red"" then
 ui.colors = {
 window = Color3.fromRGB(12,12,12),
 topbar = Color3.fromRGB(14,14,14),
 text = Color3.fromRGB(225,225,225),
 button = Color3.fromRGB(150,10,10),
 scroll = Color3.fromRGB(130,130,130),
 detail = Color3.fromRGB(255,53,53),
 enabledbright = Color3.fromRGB(255,153,153),
 enabled = Color3.fromRGB(255,35,35),
 textshade1 = Color3.fromRGB(255,70,70),
 textshade2 = Color3.fromRGB(255,70,255)
 }
 
 elseif newcolors == ""green"" then
 ui.colors = {
 window = Color3.fromRGB(16,16,16),
 topbar = Color3.fromRGB(18,18,18),
 text = Color3.fromRGB(225,225,225),
 button = Color3.fromRGB(30,170,30),
 scroll = Color3.fromRGB(130,130,130),
 detail = Color3.fromRGB(100,255,100),
 enabledbright = Color3.fromRGB(160,255,170),
 enabled = Color3.fromRGB(40,255,90),
 textshade1 = Color3.fromRGB(70,255,70),
 textshade2 = Color3.fromRGB(0,255,255)
 }
 elseif newcolors == ""blue"" then
 ui.colors = {
 window = Color3.fromRGB(22,22,22),
 topbar = Color3.fromRGB(24,24,24),
 text = Color3.fromRGB(230,230,225),
 button = Color3.fromRGB(22,22,170),
 scroll = Color3.fromRGB(130,130,130),
 detail = Color3.fromRGB(53,53,255),
 enabledbright = Color3.fromRGB(133,153,255),
 enabled = Color3.fromRGB(35,35,255),
 textshade1 = Color3.fromRGB(70,70,255),
 textshade2 = Color3.fromRGB(255,0,255)
 }
 
 elseif newcolors == ""purple"" then
 
 ui.colors = {
 window = Color3.fromRGB(20,20,20),
 topbar = Color3.fromRGB(22,22,22),
 text = Color3.fromRGB(250,240,255),
 button = Color3.fromRGB(145,50,150),
 scroll = Color3.fromRGB(100,100,100),
 detail = Color3.fromRGB(250,53,255),
 enabledbright = Color3.fromRGB(250,189,255),
 enabled = Color3.fromRGB(250,100,255),
 textshade1 = Color3.fromRGB(250,70,255),
 textshade2 = Color3.fromRGB(250,0,255)
 }
 
 elseif newcolors == ""bright"" then
 
 ui.colors = {
 window = Color3.fromRGB(45,46,46),
 topbar = Color3.fromRGB(50,51,51),
 text = Color3.fromRGB(255,255,255),
 button = Color3.fromRGB(100,100,100),
 scroll = Color3.fromRGB(35,45,45),
 detail = Color3.fromRGB(60,70,70),
 enabledbright = Color3.fromRGB(255,255,255),
 enabled = Color3.fromRGB(200,200,200),
 textshade1 = Color3.fromRGB(235,255,255),
 textshade2 = Color3.fromRGB(125,255,125)
 }
 
 elseif newcolors == ""mono"" then
 
 ui.colors = {
 window = Color3.fromRGB(22,22,22),
 topbar = Color3.fromRGB(24,24,24),
 text = Color3.fromRGB(225,225,225),
 button = Color3.fromRGB(71,71,71),
 scroll = Color3.fromRGB(52,52,52),
 detail = Color3.fromRGB(120,120,120),
 enabledbright = Color3.fromRGB(180,180,180),
 enabled = Color3.fromRGB(121,121,121),
 textshade1 = Color3.fromRGB(131,131,131),
 textshade2 = Color3.fromRGB(170,170,170)
 }
 
 elseif newcolors == ""roslyn"" then
 ui.colors = {
 window = Color3.fromRGB(14,13,14),
 topbar = Color3.fromRGB(16,15,16),
 text = Color3.fromRGB(225,225,225),
 button = Color3.fromRGB(100,90,100),
 scroll = Color3.fromRGB(130,130,130),
 detail = Color3.fromRGB(186,90,186),
 enabledbright = Color3.fromRGB(200,180,200),
 enabled = Color3.fromRGB(180,160,180),
 textshade1 = Color3.fromRGB(255,100,255),
 textshade2 = Color3.fromRGB(0,100,255)
 }
 
 elseif newcolors == ""nightshift"" then
 
 ui.colors = {
 window = Color3.fromRGB(5,5,5),
 topbar = Color3.fromRGB(7,7,7),
 text = Color3.fromRGB(255,255,255),
 button = Color3.fromRGB(60,60,65),
 scroll = Color3.fromRGB(50,50,50),
 detail = Color3.fromRGB(80,80,90),
 enabledbright = Color3.fromRGB(150,150,165),
 enabled = Color3.fromRGB(100,100,115),
 textshade1 = Color3.fromRGB(255,0,255),
 textshade2 = Color3.fromRGB(0,255,255)
 }
 
 elseif newcolors == ""streamline"" then
 
 ui.colors = {
 window = Color3.fromRGB(2,2,2),
 topbar = Color3.fromRGB(3,3,3),
 text = Color3.fromRGB(255,255,255),
 button = Color3.fromRGB(20,20,20),
 scroll = Color3.fromRGB(30,30,30),
 detail = Color3.fromRGB(80,20,20),
 enabledbright = Color3.fromRGB(150,150,150),
 enabled = Color3.fromRGB(100,100,100),
 textshade1 = Color3.fromRGB(255,0,255),
 textshade2 = Color3.fromRGB(255,0,0)
 }
 
 elseif newcolors == ""mint"" then
 
 ui.colors = {
 window = Color3.fromRGB(20,20,20),
 topbar = Color3.fromRGB(24,24,24),
 text = Color3.fromRGB(200,255,255),
 button = Color3.fromRGB(50,60,60),
 scroll = Color3.fromRGB(35,45,45),
 detail = Color3.fromRGB(60,70,70),
 enabledbright = Color3.fromRGB(200,255,255),
 enabled = Color3.fromRGB(150,160,160),
 textshade1 = Color3.fromRGB(30,255,255),
 textshade2 = Color3.fromRGB(30,255,30)
 }
 
 elseif newcolors == ""spring"" then
 
 ui.colors = {
 window = Color3.fromRGB(25,25,25),
 topbar = Color3.fromRGB(28,28,28),
 text = Color3.fromRGB(200,255,200),
 button = Color3.fromRGB(50,60,60),
 scroll = Color3.fromRGB(35,45,35),
 detail = Color3.fromRGB(60,70,60),
 enabledbright = Color3.fromRGB(200,255,200),
 enabled = Color3.fromRGB(150,160,150),
 textshade1 = Color3.fromRGB(30,255,30),
 textshade2 = Color3.fromRGB(30,255,255)
 }
 
 elseif newcolors == ""jacko"" then
 
 ui.colors = {
 window = Color3.fromRGB(8,7,6),
 topbar = Color3.fromRGB(11,10,9),
 text = Color3.fromRGB(250,230,220),
 button = Color3.fromRGB(70,70,65),
 scroll = Color3.fromRGB(60,60,55),
 detail = Color3.fromRGB(100,100,95),
 enabledbright = Color3.fromRGB(255,170,110),
 enabled = Color3.fromRGB(255,70,10),
 textshade1 = Color3.fromRGB(255,60,0),
 textshade2 = Color3.fromRGB(255,120,0)
 }
 
 elseif newcolors == ""legacy"" then
 
 ui.colors = {
 window = Color3.fromRGB(12,12,17),
 topbar = Color3.fromRGB(14,14,19),
 text = Color3.fromRGB(225,225,230),
 button = Color3.fromRGB(60,60,120),
 scroll = Color3.fromRGB(60,60,120),
 detail = Color3.fromRGB(60,60,120),
 enabledbright = Color3.fromRGB(190,220,250),
 enabled = Color3.fromRGB(160,190,220),
 textshade1 = Color3.fromRGB(255,0,128),
 textshade2 = Color3.fromRGB(0,0,255)
 }
 
 elseif newcolors == ""cold"" then
 
 ui.colors = {
 window = Color3.fromRGB(12,12,16),
 topbar = Color3.fromRGB(14,14,18),
 text = Color3.fromRGB(225,225,229),
 button = Color3.fromRGB(60,60,90),
 scroll = Color3.fromRGB(60,60,80),
 detail = Color3.fromRGB(60,60,100),
 enabledbright = Color3.fromRGB(180,180,240),
 enabled = Color3.fromRGB(80,80,140),
 textshade1 = Color3.fromRGB(100,100,255),
 textshade2 = Color3.fromRGB(255,100,255)
 }
 
 elseif newcolors == ""old"" then
 ui.colors = {
 window = Color3.fromRGB(20,20,20),
 topbar = Color3.fromRGB(22,22,22),
 text = Color3.fromRGB(230,230,255),
 button = Color3.fromRGB(43,43,43),
 scroll = Color3.fromRGB(130,130,130),
 detail = Color3.fromRGB(53,53,123),
 enabledbright = Color3.fromRGB(106,106,255),
 enabled = Color3.fromRGB(53,53,123),
 textshade1 = Color3.fromRGB(100,100,255),
 textshade2 = Color3.fromRGB(255,100,100) 
 }
 
 else
 if type(newcolors) == ""string"" then
 newcolors = {}
 end
 
 newcolors.window = newcolors.window or ui.colors.window
 newcolors.topbar = newcolors.topbar or ui.colors.topbar
 newcolors.text = newcolors.text or ui.colors.text
 newcolors.button = newcolors.button or ui.colors.button
 newcolors.scroll = newcolors.scroll or ui.colors.scroll
 newcolors.detail = newcolors.detail or ui.colors.detail
 newcolors.enabledbright = newcolors.enabledbright or ui.colors.enabledbright
 newcolors.enabled = newcolors.enabled or ui.colors.enabled
 newcolors.textshade1 = newcolors.textshade1 or ui.colors.textshade1
 newcolors.textshade2 = newcolors.textshade2 or ui.colors.textshade2
 ui.colors = newcolors
 
 
 end
 end
 
 function ui:NewWindow(title,sizex,sizey) 
 title = title or getrand(10)
 sizex = sizex or 400
 sizey = sizey or 200
 
 ui.WindowCount = ui.WindowCount + 1
 
 local wind_menus = {}
 local sidemenu_buttons = {}
 local menu_added = eventlistener.new()
 local OnMinimize = eventlistener.new()
 local Minimized = false
 local SidemenuOpen = false
 
 local window_window = Instance.new(""Frame"")
 window_window.BackgroundColor3 = ui.colors.window
 window_window.BorderSizePixel = 0
 window_window.Size = UDim2.new(0,sizex,0,sizey)
 window_window.Position = UDim2.new(0,20,0,20)
 window_window.ZIndex = 20
 
 
 local window_clip1 = window_window:Clone()
 
 shadow(window_window)
 window_clip1.Parent = screen
 window_clip1.BackgroundTransparency = 1
 window_clip1.ClipsDescendants = true
 window_clip1.Position = UDim2.new(1,-520,1,-520)
 window_clip1.Size = UDim2.new(0,sizex+100,0,0)
 window_window.Parent = window_clip1
 
 
 
 local window_menureg = Instance.new(""Frame"")
 window_menureg.Size = UDim2.new(1,0,1,-30)
 window_menureg.Position = UDim2.new(0,0,0,30)
 window_menureg.BackgroundTransparency = 1
 window_menureg.ZIndex = 21
 window_menureg.Parent = window_window
 
 
 local window_topbar = Instance.new(""Frame"")
 window_topbar.BackgroundColor3 = ui.colors.topbar
 window_topbar.BorderSizePixel = 0
 window_topbar.Size = UDim2.new(1,0,0,30)
 window_topbar.Position = UDim2.new(0,0,0,0)
 window_topbar.ZIndex = 30
 window_topbar.Active = true
 window_topbar.Parent = window_window
 
 local window_fade1 = Instance.new(""ImageLabel"")
 window_fade1.Size = UDim2.new(1,0,0,15)
 window_fade1.Position = UDim2.new(0,0,1,-15)
 window_fade1.ZIndex = 29
 window_fade1.Active = false
 window_fade1.BackgroundTransparency = 1
 window_fade1.Image = ""rbxassetid://7668647110""
 window_fade1.ImageColor3 = ui.colors.window
 window_fade1.Parent = window_menureg
 
 local window_fade2 = Instance.new(""ImageLabel"")
 window_fade2.Size = UDim2.new(1,0,0,15)
 window_fade2.Position = UDim2.new(0,0,0,0)
 window_fade2.ZIndex = 29
 window_fade2.Active = false
 window_fade2.Rotation = 180
 window_fade2.BackgroundTransparency = 1
 window_fade2.Image = ""rbxassetid://7668647110""
 window_fade2.ImageColor3 = ui.colors.window
 window_fade2.Parent = window_menureg
 
 
 local window_title = Instance.new(""TextLabel"")
 window_title.Text = title
 window_title.BackgroundTransparency = 1
 window_title.TextTransparency = 1
 window_title.TextColor3 = ui.colors.text
 window_title.Font = ui.Font
 window_title.TextSize = ui.FontSize+4
 window_title.Size = UDim2.new(1,-60,1,0)
 window_title.Position = UDim2.new(0,5,0,0)
 window_title.TextXAlignment = Enum.TextXAlignment.Left
 window_title.ZIndex = 31
 window_title.Parent = window_topbar
 
 local window_clip2 = Instance.new(""Frame"")
 window_clip2.Visible = true
 window_clip2.ClipsDescendants = true
 window_clip2.Position = UDim2.new(0,0,0,0)
 window_clip2.Size = UDim2.new(1,0,0,0)
 window_clip2.BackgroundTransparency = 1
 window_clip2.ZIndex = 0
 window_clip2.Parent = window_topbar
 
 local window_bclose = Instance.new(""TextButton"")
 window_bclose.Text = ""X""
 window_bclose.ClipsDescendants = true
 window_bclose.AutoButtonColor = false
 window_bclose.BackgroundColor3 = ui.colors.button
 window_bclose.BackgroundTransparency = 1
 window_bclose.BorderSizePixel = 0
 window_bclose.TextColor3 = ui.colors.text
 window_bclose.Font = ui.Font
 window_bclose.TextSize = ui.FontSize+4
 window_bclose.Size = UDim2.new(0,30-4,0,30-4)
 window_bclose.Position = UDim2.new(1,-30+2,0,2)
 window_bclose.ZIndex = 31
 window_bclose.Parent = window_clip2
 round(window_bclose)
 
 window_bclose.MouseEnter:Connect(function() 
 twn(window_bclose,{BackgroundTransparency = 0.4})
 end)
 
 window_bclose.MouseLeave:Connect(function() 
 twn(window_bclose,{BackgroundTransparency = 1})
 end)
 
 local window_bmin = Instance.new(""TextButton"")
 window_bmin.Text = ""-""
 window_bmin.AutoButtonColor = false
 window_bmin.ClipsDescendants = true
 window_bmin.BackgroundColor3 = ui.colors.button
 window_bmin.BackgroundTransparency = 1
 window_bmin.BorderSizePixel = 0
 window_bmin.TextColor3 = ui.colors.text
 window_bmin.Font = ui.Font
 window_bmin.TextSize = ui.FontSize+4
 window_bmin.Size = UDim2.new(0,30-4,0,30-4)
 window_bmin.Position = UDim2.new(1,-60+2,0,2)
 window_bmin.ZIndex = 31
 window_bmin.Parent = window_clip2
 round(window_bmin)
 
 window_bmin.MouseEnter:Connect(function() 
 twn(window_bmin,{BackgroundTransparency = 0.4})
 end)
 
 window_bmin.MouseLeave:Connect(function() 
 twn(window_bmin,{BackgroundTransparency = 1})
 end)
 
 
 local window_bmenu = Instance.new(""TextButton"")
 window_bmenu.Text = ""=""
 window_bmenu.AutoButtonColor = false
 window_bmenu.ClipsDescendants = true
 window_bmenu.BackgroundTransparency = 1
 window_bmenu.BackgroundColor3 = ui.colors.button
 window_bmenu.BorderSizePixel = 0
 window_bmenu.TextColor3 = ui.colors.text
 window_bmenu.Font = ui.Font
 window_bmenu.TextSize = ui.FontSize+4
 window_bmenu.Size = UDim2.new(0,30-4,0,30-4)
 window_bmenu.Position = UDim2.new(0,2,0,2)
 window_bmenu.ZIndex = 31
 window_bmenu.Parent = window_clip2
 round(window_bmenu)
 
 window_bmenu.MouseEnter:Connect(function() 
 twn(window_bmenu,{BackgroundTransparency = 0.4})
 end)
 
 window_bmenu.MouseLeave:Connect(function() 
 twn(window_bmenu,{BackgroundTransparency = 1})
 end)
 
 local window_overlay = Instance.new(""ImageButton"")
 window_overlay.BackgroundColor3 = ui.colors.button
 window_overlay.BorderSizePixel = 0
 window_overlay.BackgroundTransparency = 1
 window_overlay.Size = UDim2.new(1,0,1,0)
 window_overlay.Position = UDim2.new(0,0,0,0)
 window_overlay.ZIndex = 27
 window_overlay.AutoButtonColor = false
 
 window_overlay.ImageColor3 = ui.colors.enabled
 window_overlay.Image = ""rbxassetid://7739915094""
 window_overlay.ImageTransparency = 1
 window_overlay.Active = false
 window_overlay.Visible = false 
 window_overlay.Parent = window_window
 
 local window_sidemenu = Instance.new(""TextButton"")
 window_sidemenu.BackgroundColor3 = ui.colors.topbar
 window_sidemenu.BorderSizePixel = 0
 window_sidemenu.ClipsDescendants = true
 window_sidemenu.Size = UDim2.new(0,0,1,0)
 window_sidemenu.Position = UDim2.new(0,0,0,0)
 window_sidemenu.ZIndex = 27
 window_sidemenu.AutoButtonColor = false
 window_sidemenu.Text = """"
 window_sidemenu.Active = false
 window_sidemenu.Visible = false
 window_sidemenu.Parent = window_window
 
 
 local window_tooltip = Instance.new(""TextLabel"")
 window_tooltip.Visible = true
 window_tooltip.ZIndex = 50
 window_tooltip.Size = UDim2.new(0,150,0,40)
 window_tooltip.TextSize = ui.FontSize - 10
 window_tooltip.TextColor3 = ui.colors.text
 window_tooltip.BackgroundColor3 = ui.colors.topbar
 window_tooltip.BorderSizePixel = 1
 window_tooltip.BorderColor3 = ui.colors.scroll
 window_tooltip.TextWrapped = true
 window_tooltip.BackgroundTransparency = 1
 window_tooltip.TextTransparency = 1
 window_tooltip.Parent = screen
 
 local function displayTooltip(text) 
 window_tooltip.Text = text
 window_tooltip.Size = UDim2.new(0,50,0,15)
 window_tooltip.Visible = true
 
 local x,y = ui.TooltipX,ui.TooltipY
 
 for i = 0,25 do
 
 window_tooltip.Size = window_tooltip.Size + UDim2.new(0,x,0,y)
 if window_tooltip.TextFits then break end
 end
 
 window_tooltip.BackgroundTransparency = 1
 window_tooltip.TextTransparency = 1
 
 window_tooltip.Position = UDim2.new(0,mouse.X+10,0,mouse.Y+10)
 twn(window_tooltip,{BackgroundTransparency = 0,TextTransparency = 0})
 end
 
 local function hideTooltip() 
 local a = twn(window_tooltip,{BackgroundTransparency = 1,TextTransparency = 1})
 a.Completed:Connect(function() 
 if window_tooltip.BackgroundTransparency == 1 then
 window_tooltip.Visible = false
 end
 end)
 end
 
 local function toggleMenu() 
 SidemenuOpen = not SidemenuOpen
 if SidemenuOpen then
 window_overlay.Visible = true
 window_sidemenu.Visible = true
 
 twn(window_overlay,{ImageTransparency = 0.5,BackgroundTransparency = 0.4})
 twn(window_sidemenu,{Size = UDim2.new(0.5,0,1,0)})
 else
 twn(window_overlay,{ImageTransparency = 1,BackgroundTransparency = 1})
 local a = twn(window_sidemenu,{Size = UDim2.new(0,0,1,0)})
 
 a.Completed:Connect(function() 
 if window_sidemenu.Size.X.Scale == 0 then
 window_overlay.Visible = false
 window_sidemenu.Visible = false
 end
 end)
 end
 end
 
 window_bmenu.MouseButton1Click:Connect(function() 
 ceffect(window_bmenu)
 toggleMenu()
 end)
 
 
 
 
 
 window_bmin.MouseButton1Click:Connect(function()
 ceffect(window_bmin)
 Minimized = not Minimized
 
 if Minimized then
 twn(window_window,{Size = UDim2.new(0,sizex,0,30)})
 twn(window_fade1,{Size = UDim2.new(1,0,0,0)})
 twn(window_fade2,{Size = UDim2.new(1,0,0,0)})
 window_bmin.Text = ""+""
 else
 twn(window_window,{Size = UDim2.new(0,sizex,0,sizey)})
 twn(window_fade1,{Size = UDim2.new(1,0,0,15)})
 twn(window_fade2,{Size = UDim2.new(1,0,0,15)})
 window_bmin.Text = ""-""
 end
 OnMinimize:Fire(Minimized)
 end)
 
 window_bclose.MouseButton1Click:Connect(function() 
 ui.WindowCount = ui.WindowCount - 1 
 ceffect(window_bclose)
 tspawn(function() 
 
 if ui.WindowCount == 0 then
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = window_window
 
 ctwn(window_window,{Position = window_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 for i,v in pairs(screen:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 else
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = window_window
 
 ctwn(window_window,{Position = window_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 twn(window_window,{BackgroundTransparency = 1})
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 for i,v in pairs(window_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end
 end)
 
 wait(0.8)
 
 if ui.WindowCount == 0 then
 ui:Exit()
 
 end
 end)
 
 
 menu_added:Connect(function(s)
 local idx = #wind_menus
 
 
 local window_tabbutton = Instance.new(""TextButton"")
 window_tabbutton.Text = s.n
 window_tabbutton.AutoButtonColor = false
 window_tabbutton.Active = true
 window_tabbutton.ClipsDescendants = true
 window_tabbutton.BackgroundTransparency = 0.7
 window_tabbutton.BackgroundColor3 = ui.colors.button
 window_tabbutton.TextColor3 = ui.colors.text
 window_tabbutton.Font = ui.Font
 window_tabbutton.TextXAlignment = Enum.TextXAlignment.Left
 window_tabbutton.TextSize = ui.FontSize
 window_tabbutton.Size = UDim2.new(0,(0.45*sizex)-10,0,24)
 window_tabbutton.Position = UDim2.new(0,15,0,((#wind_menus)*28)+10)
 window_tabbutton.ZIndex = 28
 window_tabbutton.Parent = window_sidemenu
 round(window_tabbutton)
 
 
 local window_tabbuttonbd = Instance.new(""TextLabel"")
 window_tabbuttonbd.Text = """"
 window_tabbuttonbd.AnchorPoint = Vector2.new(1,0)
 window_tabbuttonbd.BackgroundTransparency = 1
 window_tabbuttonbd.BackgroundColor3 = ui.colors.button
 window_tabbuttonbd.TextColor3 = ui.colors.text
 window_tabbuttonbd.Font = ui.Font
 window_tabbuttonbd.TextXAlignment = Enum.TextXAlignment.Right
 window_tabbuttonbd.TextSize = ui.FontSize - 4
 window_tabbuttonbd.Size = UDim2.new(0,24,0,24)
 window_tabbuttonbd.Position = UDim2.new(1,-10,0,0)
 window_tabbuttonbd.ZIndex = 28
 window_tabbuttonbd.Parent = window_tabbutton
 
 local button_pad = Instance.new(""UIPadding"")
 button_pad.PaddingLeft = UDim.new(0,10)
 button_pad.Parent = window_tabbutton
 
 window_tabbutton.MouseEnter:Connect(function() 
 twn(window_tabbutton,{BackgroundTransparency = 0.4})
 end)
 
 window_tabbutton.MouseLeave:Connect(function() 
 twn(window_tabbutton,{BackgroundTransparency = 0.7})
 end)
 
 local function switch() 
 
 for i,v in pairs(sidemenu_buttons) do
 twn(v,{BackgroundColor3 = ui.colors.button}) 
 end
 twn(window_tabbutton,{BackgroundColor3 = ui.colors.enabled})
 
 for i,v in pairs(wind_menus) do
 v.i.Visible = false
 v.s.Visible = false
 end
 local m = wind_menus[idx]
 
 m.i.Visible = true
 m.s.Visible = true
 
 end
 
 window_tabbutton.MouseButton1Click:Connect(function() 
 ceffect(window_tabbutton)
 
 switch()
 
 end)
 
 window_tabbutton.MouseButton2Click:Connect(function() 
 ceffect(window_tabbutton)
 
 ui:NewBindDialog(s.n,switch,window_tabbutton:GetDebugId(),""Swapped menu to"",window_tabbuttonbd)
 end)
 
 if idx == 1 then
 window_tabbutton.BackgroundColor3 = ui.colors.enabled 
 end
 
 tinsert(sidemenu_buttons,window_tabbutton)
 
 end)
 
 ui.OnReady:Connect(function() 
 window_window.Size = UDim2.new(0,sizex,0,0)
 window_window.Position = UDim2.new(0,20,0,20)
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 0.25
 a.Parent = window_window

 twn(a,{Scale = 1})
 
 ctwn(window_clip1,{Size = UDim2.new(0,sizex+100,0,sizey+100)},0.75,""InOut"",""Exponential"")
 ctwn(window_window,{Size = UDim2.new(0,sizex,0,sizey)},0.75,""InOut"",""Exponential"")
 wait(0.25)
 
 ctwn(window_clip2,{Size = UDim2.new(1,0,1,0)},2,""Out"",""Exponential"")
 ctwn(window_title,{TextTransparency = 0,Size = UDim2.new(1,-100,1,0),Position = UDim2.new(0,35,0,0)},0.75,""Out"")
 wait(0.75)
 
 window_bmenu.Parent = window_topbar
 window_bclose.Parent = window_topbar
 window_bmin.Parent = window_topbar
 window_window.Parent = screen
 
 window_window.Position = UDim2.new(1,-500,1,-500)
 window_clip2:Destroy()
 window_clip1:Destroy()
 drag(window_topbar,window_window)
 end)
 
 
 local w = {} do
 
 function w:NewMenu(text,showtitle)
 showtitle = (showtitle == nil and true) or showtitle
 local menu_objects = {}
 
 local OnChildAdded = eventlistener.new()
 
 local menu_menu = Instance.new(""ScrollingFrame"")
 menu_menu.BackgroundTransparency = 1
 menu_menu.BorderSizePixel = 0
 menu_menu.Size = UDim2.new(1,0,1,0)
 menu_menu.Position = UDim2.new(0,0,0,0)
 menu_menu.ZIndex = 22
 menu_menu.CanvasSize = UDim2.new(0,0,0,55)
 menu_menu.TopImage = menu_menu.MidImage
 menu_menu.BottomImage = menu_menu.MidImage
 menu_menu.ScrollingEnabled = true
 menu_menu.ScrollingDirection = Enum.ScrollingDirection.X
 menu_menu.ScrollBarThickness = 0
 menu_menu.Visible = false
 menu_menu.Parent = window_menureg
 
 
 

 local div = 0 
 
 
 local menu_scroll = Instance.new(""TextButton"")
 menu_scroll.BackgroundColor3 = ui.colors.scroll
 menu_scroll.BackgroundTransparency = 0.7
 menu_scroll.BorderSizePixel = 0
 menu_scroll.Size = UDim2.new(0,5,1/div,-4)
 menu_scroll.Position = UDim2.new(1,-7,0,2)
 menu_scroll.ZIndex = 24
 menu_scroll.Text = ""|""
 menu_scroll.TextScaled = true
 menu_scroll.TextColor3 = ui.colors.scroll
 menu_scroll.Font = ui.Font
 menu_scroll.AutoButtonColor = false
 menu_scroll.Visible = false
 menu_scroll.Parent = window_menureg
 
 round(menu_scroll)
 
 
 menu_scroll.MouseEnter:Connect(function() 
 twn(menu_scroll,{BackgroundTransparency = 0.4})
 end)
 
 menu_scroll.MouseLeave:Connect(function() 
 twn(menu_scroll,{BackgroundTransparency = 0.7})
 end)
 
 
 
 local function handleScrollPos() 
 local y = menu_menu.CanvasPosition.Y
 
 menu_scroll.Position = UDim2.new(1,-7,0,(y/div)+2)
 end
 
 local scrollConnection;
 scrollConnection = menu_menu:GetPropertyChangedSignal(""CanvasPosition""):Connect(handleScrollPos)
 
 menu_scroll.InputBegan:Connect(function(old_input)
 if old_input.UserInputType == Enum.UserInputType.MouseButton1 then
 local starting_pos = menu_scroll.Position
 
 scrollConnection:Disconnect()
 
 ui.cons[""ScrollDrag""] = uis.InputChanged:Connect(function(new_input)
 
 if new_input.UserInputType == Enum.UserInputType.MouseMovement then
 local delta = new_input.Position - old_input.Position
 
 twn(menu_scroll,{Position = UDim2.new(
 starting_pos.X.Scale,
 starting_pos.X.Offset,
 starting_pos.Y.Scale,
 math.clamp(starting_pos.Y.Offset + delta.Y,2,menu_menu.AbsoluteSize.Y - menu_scroll.AbsoluteSize.Y - 2)
 )})
 
 twn(menu_menu,{CanvasPosition = Vector2.new(
 0,
 (starting_pos.Y.Offset + delta.Y)*div
 )})
 end
 end)
 end
 end)
 
 menu_scroll.InputEnded:Connect(function(cur_input)
 if cur_input.UserInputType == Enum.UserInputType.MouseButton1 then
 pcall(function() 
 ui.cons[""ScrollDrag""]:Disconnect() 
 end)
 scrollConnection = menu_menu:GetPropertyChangedSignal(""CanvasPosition""):Connect(handleScrollPos)
 end
 end)
 
 menu_menu.InputBegan:Connect(function(io) 
 if io.UserInputType == Enum.UserInputType.MouseWheel then
 local newpos = menu_menu.CanvasPosition.Y + io.Position.Z*-ui.ScrollAmount
 local max = menu_menu.AbsoluteCanvasSize.Y - menu_menu.AbsoluteSize.Y
 
 newpos = math.clamp(newpos,0,max)
 
 
 ctwn(menu_menu,{CanvasPosition = Vector2.new(
 0,
 newpos
 )},0.3,""Out"",""Exponential"")
 end
 end)
 
 menu_menu.InputChanged:Connect(function(io) 
 if io.UserInputType == Enum.UserInputType.MouseWheel then
 local newpos = menu_menu.CanvasPosition.Y + io.Position.Z*-ui.ScrollAmount
 local max = menu_menu.AbsoluteCanvasSize.Y - menu_menu.AbsoluteSize.Y
 
 newpos = math.clamp(newpos,0,max)
 
 
 ctwn(menu_menu,{CanvasPosition = Vector2.new(
 0,
 newpos
 )},0.3,""Out"",""Exponential"")
 end
 end)
 
 
 OnMinimize:Connect(function(toggle)
 if toggle then 
 twn(menu_scroll,{Size = UDim2.new(0,5,0,0)})
 else
 twn(menu_scroll,{Size = UDim2.new(0,5,1/div,-4)})
 end
 end)
 
 
 OnChildAdded:Connect(function() 
 menu_menu.CanvasSize = menu_menu.CanvasSize + UDim2.new(0,0,0,30)
 
 div = menu_menu.CanvasSize.Y.Offset / menu_menu.Parent.AbsoluteSize.Y
 if div < 1 then
 menu_scroll.Visible = false
 
 else
 menu_scroll.Visible = true 
 menu_scroll.Size = UDim2.new(0,5,1/div,-4)
 handleScrollPos()
 end
 end)

 
 if showtitle then
 local menu_label = Instance.new(""TextLabel"")
 menu_label.Text = text
 menu_label.BackgroundTransparency = 1
 menu_label.TextTransparency = 0
 menu_label.TextColor3 = Color3.new(1,1,1)
 menu_label.Font = ui.Font
 menu_label.TextSize = ui.FontSize+4
 menu_label.Size = UDim2.new(1,-10,0,25)
 menu_label.Position = UDim2.new(0,10,0,0)
 menu_label.TextXAlignment = Enum.TextXAlignment.Left
 menu_label.ZIndex = 23
 menu_label.Parent = menu_menu
 
 local among = Instance.new(""UIGradient"")
 among.Color = ColorSequence.new{
 ColorSequenceKeypoint.new(0,ui.colors.textshade1),
 ColorSequenceKeypoint.new(1,ui.colors.textshade2)
 }
 among.Parent = menu_label 
 
 tinsert(menu_objects,menu_label)
 
 local trim = Instance.new(""Frame"")
 trim.BackgroundTransparency = 0
 trim.BorderSizePixel = 0
 trim.Size = UDim2.new(1,-20,0,1)
 trim.Position = UDim2.new(0,10,0,25)
 trim.ZIndex = 23
 trim.Parent = menu_menu
 
 if ui.GradientObjects then
 among:Clone().Parent = trim
 else
 trim.BackgroundColor3 = ui.colors.detail
 end
 end
 
 tinsert(wind_menus,{
 n = text,
 i = menu_menu,
 s = menu_scroll
 })
 
 menu_added:Fire({n = text,i = menu_menu,s = menu_scroll})
 
 local m = {} do
 
 m.OnChildAdded = OnChildAdded
 
 function m:GetChildren()
 return menu_objects
 end
 
 function m:GetChildCount()
 return #menu_objects
 end
 
 function m:NewSection(text,gradient) 
 text = text or """"
 gradient = (gradient == true or false)
 
 local section_label = Instance.new(""TextLabel"")
 section_label.Text = text
 section_label.BackgroundTransparency = 1
 section_label.TextTransparency = 0
 section_label.TextColor3 = Color3.new(1,1,1)
 section_label.Font = ui.Font
 section_label.TextSize = ui.FontSize+4
 section_label.Size = UDim2.new(1,-10,0,24)
 section_label.Position = UDim2.new(0,10,0,(m:GetChildCount()*28)+3)
 section_label.TextXAlignment = Enum.TextXAlignment.Left
 section_label.ZIndex = 23
 section_label.Parent = menu_menu
 
 if gradient then
 local among = Instance.new(""UIGradient"")
 among.Color = ColorSequence.new{
 ColorSequenceKeypoint.new(0,ui.colors.textshade1),
 ColorSequenceKeypoint.new(1,ui.colors.textshade2)
 }
 among.Parent = section_label 
 else
 section_label.TextColor3 = ui.colors.text
 end
 
 tinsert(menu_objects,2)
 
 local l = {} do
 
 function l:GetText() 
 return section_label.Text
 end 
 
 function l:SetText(txt) 
 if not txt then error(""SetText failed; value provided cannot be nil"") end
 section_label.Text = tostring(txt)
 end
 end
 
 OnChildAdded:Fire(""section"",l)
 
 return l
 end
 
 function m:NewLabel(text) 
 text = text or """"
 
 local label_label = Instance.new(""TextLabel"")
 label_label.Text = text
 label_label.BackgroundTransparency = 1
 label_label.TextTransparency = 0
 label_label.TextColor3 = ui.colors.text
 label_label.Font = ui.Font
 label_label.TextSize = ui.FontSize
 label_label.Size = UDim2.new(1,-15,0,24)
 label_label.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 label_label.TextXAlignment = Enum.TextXAlignment.Left
 label_label.ZIndex = 23
 label_label.Parent = menu_menu
 
 if label_label.TextFits == false then
 label_label.Size = UDim2.new(1,-15,0,48)
 label_label.TextWrapped = true
 tinsert(menu_objects,2)
 end
 
 tinsert(menu_objects,2)
 
 local l = {} do
 
 function l:GetText() 
 return label_label.Text
 end 
 
 function l:SetText(txt) 
 if not txt then error(""SetText failed; value provided cannot be nil"") end
 label_label.Text = tostring(txt)
 end
 end
 
 OnChildAdded:Fire(""label"",l)
 
 return l
 end
 
 function m:NewToggle(text)
 state = false
 text = text or getrand(7)
 
 
 local toggle_state = state
 local hidden = false
 
 local OnEnable = eventlistener.new()
 local OnToggle = eventlistener.new()
 local OnDisable = eventlistener.new()
 
 local mousingover = false
 local tooltip = nil
 
 local toggle_button = Instance.new(""TextButton"")
 toggle_button.Text = text
 toggle_button.AutoButtonColor = false
 toggle_button.ClipsDescendants = true
 toggle_button.BackgroundTransparency = 0.7
 toggle_button.BackgroundColor3 = ui.colors.button
 toggle_button.TextColor3 = ui.colors.text
 toggle_button.Font = ui.Font
 toggle_button.TextXAlignment = Enum.TextXAlignment.Left
 toggle_button.TextSize = ui.FontSize
 toggle_button.Size = UDim2.new(0,menu_menu.AbsoluteSize.X-30,0,24)
 toggle_button.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 toggle_button.ZIndex = 23
 toggle_button.Parent = menu_menu
 round(toggle_button)
 
 local toggle_pad = Instance.new(""UIPadding"")
 toggle_pad.PaddingLeft = UDim.new(0,10)
 toggle_pad.Parent = toggle_button
 
 
 local toggle_tbox = Instance.new(""ImageLabel"")
 toggle_tbox.Active = false
 toggle_tbox.BackgroundTransparency = 1
 toggle_tbox.Image = ""rbxassetid://7197977900""
 toggle_tbox.ImageColor3 = ui.colors.text
 toggle_tbox.Position = UDim2.new(1,-30,0,-5)
 toggle_tbox.Size = UDim2.new(0,34,0,34)
 toggle_tbox.Rotation = 0
 toggle_tbox.ZIndex = 23
 toggle_tbox.Parent = toggle_button
 
 local toggle_tcheck = Instance.new(""ImageLabel"")
 toggle_tcheck.Active = false
 toggle_tcheck.BackgroundTransparency = 1
 toggle_tcheck.ImageTransparency = 1
 toggle_tcheck.Image = ""rbxassetid://7202619688""
 toggle_tcheck.ImageColor3 = ui.colors.enabledbright
 toggle_tcheck.Position = UDim2.new(1,-30,0,-5)
 toggle_tcheck.Size = UDim2.new(0,34,0,34)
 toggle_tcheck.Rotation = 0
 toggle_tcheck.ZIndex = 23
 toggle_tcheck.Parent = toggle_button
 
 local toggle_binddisplay = Instance.new(""TextLabel"")
 toggle_binddisplay.Text = """"
 toggle_binddisplay.AnchorPoint = Vector2.new(1,0)
 toggle_binddisplay.BackgroundTransparency = 1
 toggle_binddisplay.BackgroundColor3 = ui.colors.button
 toggle_binddisplay.TextColor3 = ui.colors.text
 toggle_binddisplay.Font = ui.Font
 toggle_binddisplay.TextXAlignment = Enum.TextXAlignment.Right
 toggle_binddisplay.TextSize = ui.FontSize - 4
 toggle_binddisplay.Size = UDim2.new(0,24,0,24)
 toggle_binddisplay.Position = UDim2.new(1,-24,0,0)
 toggle_binddisplay.ZIndex = 23
 toggle_binddisplay.Parent = toggle_button
 
 local toggle_hider = Instance.new(""TextButton"")
 toggle_hider.Text = """"
 toggle_hider.AutoButtonColor = false
 toggle_hider.BackgroundTransparency = 1
 toggle_hider.BackgroundColor3 = ui.colors.button
 toggle_hider.TextColor3 = ui.colors.text
 toggle_hider.Font = ui.Font
 toggle_hider.TextXAlignment = Enum.TextXAlignment.Center
 toggle_hider.TextSize = ui.FontSize
 toggle_hider.TextTransparency = 1
 toggle_hider.Size = UDim2.new(1,10,1,0)
 toggle_hider.Position = UDim2.new(0,-10,0,0)
 toggle_hider.ZIndex = 24
 toggle_hider.Visible = false
 toggle_hider.Parent = toggle_button
 round(toggle_hider)
 
 
 toggle_hider.MouseEnter:Connect(function() 
 if toggle_hider.BackgroundTransparency ~= 1 then
 twn(toggle_hider,{BackgroundTransparency = 0.5,TextTransparency = 0.9})
 end
 end)
 
 toggle_hider.MouseLeave:Connect(function() 
 if toggle_hider.BackgroundTransparency ~= 1 then
 twn(toggle_hider,{BackgroundTransparency = 0.2,TextTransparency = 0})
 end
 end)
 
 toggle_button.MouseEnter:Connect(function() 
 twn(toggle_button,{BackgroundTransparency = 0.4})
 
 mousingover = true
 tdelay(1,function() 
 if mousingover and tooltip and window_tooltip.BackgroundTransparency == 1 and not SidemenuOpen then
 displayTooltip(tooltip)
 end
 end)
 end)
 
 toggle_button.MouseLeave:Connect(function() 
 twn(toggle_button,{BackgroundTransparency = 0.7})
 
 mousingover = false
 hideTooltip()
 
 end)
 
 local function disable() 
 toggle_state = false
 
 twn(toggle_button,{BackgroundColor3 = ui.colors.button}) 
 twn(toggle_tcheck,{ImageTransparency = 1})

 OnToggle:Fire(false)
 OnDisable:Fire()
 end
 
 local function enable() 
 toggle_state = true
 
 twn(toggle_button,{BackgroundColor3 = ui.colors.enabled})
 twn(toggle_tcheck,{ImageTransparency = 0})
 
 OnToggle:Fire(true)
 OnEnable:Fire()
 end
 
 if state == true then enable() end
 
 local function toggle() 
 
 
 toggle_state = not toggle_state
 
 
 if (toggle_state) then
 enable() 
 
 else
 disable()
 end
 end
 
 toggle_button.MouseButton1Click:Connect(function() 
 ceffect(toggle_button)
 toggle()
 end)
 
 
 tinsert(menu_objects,1)
 
 local t = {} do
 
 function t:GetState() 
 return toggle_state
 end 
 
 function t:IsEnabled() 
 return toggle_state
 end 
 
 function t:SetState(bool,callafter) 
 callafter = callafter == nil and true or callafter
 
 if type(bool) ~= ""boolean"" then
 error(""SetState failed; provided value [1] was not a boolean"") 
 end
 
 toggle_state = bool 
 if callafter == true then
 toggle()
 end
 end
 
 function t:Toggle() 
 toggle()
 end
 
 function t:Enable() 
 enable()
 end
 
 function t:Disable() 
 disable()
 end
 
 function t:SetBind(kc)
 local bd_id = toggle_button:GetDebugId()
 if kc == nil then
 for i,v in pairs(ui.binds) do
 if i == bd_id then
 ui.binds[i] = nil
 bd_display.Text = """"
 end
 end
 else
 ui.binds[bd_id] = {
 b = kc,
 f = t.Toggle,
 n = text,
 w = ""Toggled""
 }
 
 toggle_binddisplay.Text = kc
 end
 
 end
 
 function t:GetBind() 
 local bindobj = ui.binds[toggle_button:GetDebugId()]
 return (bindobj and bindobj.b or nil)
 end
 
 
 function t:SetText(tx) 
 if tx == nil then error(""SetText failed; provided value was nil"") end
 toggle_button.Text = tostring(tx)
 ui.binds[toggle_button:GetDebugId()].n = tostring(tx)
 end
 
 function t:GetText() 
 return toggle_button.Text
 end
 
 function t:Assert(func) 
 if type(func) ~= ""string"" then error(""Assert failed; provided value was not a string"") end
 
 
 if not getgenv()[func] then
 t:Hide(""Your exploit doesn't support ""..tostring(func)) 
 end
 end
 
 function t:Hide(msg)
 if not msg then return end
 hidden = true
 t.Hidden = hidden
 
 toggle_hider.Visible = true
 toggle_hider.Text = tostring(msg)
 twn(toggle_hider,{BackgroundTransparency = 0.2,TextTransparency = 0})
 end
 
 function t:Unhide() 
 hidden = false
 t.Hidden = hidden
 
 local a = twn(toggle_hider,{BackgroundTransparency = 1,TextTransparency = 1})
 
 a.Completed:Connect(function() 
 if toggle_hider.BackgroundTransparency == 1 then
 toggle_hider.Visible = false
 end
 end)
 
 end
 
 function t:GetTooltip()
 return tooltip
 end
 
 function t:SetTooltip(newtooltip) 
 tooltip = newtooltip and tostring(newtooltip) or nil
 end
 
 function t:IsMouseOver() 
 return mousingover
 end
 
 t.Hidden = hidden
 
 t.OnDisable = OnDisable
 t.OnEnable = OnEnable
 t.OnToggle = OnToggle
 end
 
 toggle_button.MouseButton2Click:Connect(function() 
 ceffect(toggle_button)
 ui:NewBindDialog(text,t.Toggle,toggle_button:GetDebugId(),""Toggled"",toggle_binddisplay)
 end)
 
 OnChildAdded:Fire(""toggle"",t)
 
 tinsert(ui.Toggles,t)
 
 return t
 end
 
 function m:NewButton(text)
 text = text or getrand(7)
 
 local OnClick = eventlistener.new()
 local hidden = false
 local mousingover = false
 local tooltip = nil
 
 local button_button = Instance.new(""TextButton"")
 button_button.Text = text
 button_button.AutoButtonColor = false
 button_button.ClipsDescendants = true
 button_button.BackgroundTransparency = 0.7
 button_button.BackgroundColor3 = ui.colors.button
 button_button.TextColor3 = ui.colors.text
 button_button.Font = ui.Font
 button_button.TextXAlignment = Enum.TextXAlignment.Left
 button_button.TextSize = ui.FontSize
 button_button.Size = UDim2.new(0,menu_menu.AbsoluteSize.X-30,0,24)
 button_button.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 button_button.ZIndex = 23
 button_button.Parent = menu_menu
 round(button_button)
 
 local button_pad = Instance.new(""UIPadding"")
 button_pad.PaddingLeft = UDim.new(0,10)
 button_pad.Parent = button_button
 
 local button_binddisplay = Instance.new(""TextLabel"")
 button_binddisplay.Text = """"
 button_binddisplay.AnchorPoint = Vector2.new(1,0)
 button_binddisplay.BackgroundTransparency = 1
 button_binddisplay.BackgroundColor3 = ui.colors.button
 button_binddisplay.TextColor3 = ui.colors.text
 button_binddisplay.Font = ui.Font
 button_binddisplay.TextXAlignment = Enum.TextXAlignment.Right
 button_binddisplay.TextSize = ui.FontSize - 4
 button_binddisplay.Size = UDim2.new(0,24,0,24)
 button_binddisplay.Position = UDim2.new(1,-10,0,0)
 button_binddisplay.ZIndex = 23
 button_binddisplay.Parent = button_button
 
 local button_hider = Instance.new(""TextButton"")
 button_hider.Text = """"
 button_hider.AutoButtonColor = false
 button_hider.BackgroundTransparency = 1
 button_hider.BackgroundColor3 = ui.colors.button
 button_hider.TextColor3 = ui.colors.text
 button_hider.Font = ui.Font
 button_hider.TextXAlignment = Enum.TextXAlignment.Center
 button_hider.TextSize = ui.FontSize
 button_hider.TextTransparency = 1
 button_hider.Size = UDim2.new(1,10,1,0)
 button_hider.Position = UDim2.new(0,-10,0,0)
 button_hider.ZIndex = 24
 button_hider.Visible = false
 button_hider.Parent = button_button
 round(button_hider)
 
 round(slider_text)
 

 
 button_button.MouseEnter:Connect(function() 
 twn(button_button,{BackgroundTransparency = 0.4})
 
 mousingover = true
 
 
 tdelay(1,function() 
 if mousingover and tooltip and window_tooltip.BackgroundTransparency == 1 and not SidemenuOpen then
 displayTooltip(tooltip)
 end
 end)
 end)
 
 button_button.MouseLeave:Connect(function() 
 twn(button_button,{BackgroundTransparency = 0.7})
 
 mousingover = false
 
 hideTooltip()
 end)
 
 button_hider.MouseEnter:Connect(function() 
 if button_hider.BackgroundTransparency ~= 1 then
 twn(button_hider,{BackgroundTransparency = 0.5,TextTransparency = 0.9})
 end
 end)
 
 button_hider.MouseLeave:Connect(function() 
 if button_hider.BackgroundTransparency ~= 1 then
 twn(button_hider,{BackgroundTransparency = 0.2,TextTransparency = 0})
 end
 end)
 
 
 button_button.MouseButton1Click:Connect(function() 
 ceffect(button_button)
 OnClick:Fire()
 end)
 
 
 
 
 
 tinsert(menu_objects,1)
 
 local t = {} do
 
 function t:Fire() 
 OnClick:Fire()
 end
 
 
 function t:SetBind(kc)
 local bd_id = button_button:GetDebugId()
 if kc == nil then
 for i,v in pairs(ui.binds) do
 if i == bd_id then
 ui.binds[i] = nil
 bd_display.Text = """"
 end
 end
 else
 ui.binds[bd_id] = {
 b = kc,
 f = t.Toggle,
 n = text,
 w = ""Toggled""
 }
 
 button_binddisplay.Text = kc
 end
 
 end
 
 function t:GetBind() 
 local bindobj = ui.binds[button_button:GetDebugId()]
 return (bindobj and bindobj.b or nil)
 end
 
 function t:SetText(tx) 
 if tx == nil then error(""SetText failed; provided value was nil"") end
 button_button.Text = tostring(tx)
 ui.binds[button_button:GetDebugId()].n = tostring(tx)
 end
 
 function t:GetText() 
 return button_button.Text
 end
 
 function t:Hide(msg)
 if not msg then error(""Hide failed; you must provide a message"") end
 hidden = true
 t.Hidden = hidden
 
 button_hider.Visible = true
 button_hider.Text = tostring(msg)
 twn(button_hider,{BackgroundTransparency = 0.2,TextTransparency = 0})
 end
 
 function t:Unhide() 
 hidden = false
 t.Hidden = hidden
 
 local a = twn(button_hider,{BackgroundTransparency = 1,TextTransparency = 1})
 
 a.Completed:Connect(function() 
 if button_hider.BackgroundTransparency == 1 then
 button_hider.Visible = false
 end
 end)
 
 end
 
 function t:Assert(func) 
 if type(func) ~= ""string"" then error(""Assert failed; provided value was not a string"") end
 
 
 if not getgenv()[func] then
 t:Hide(""Your exploit doesn't support ""..tostring(func)) 
 end
 end
 
 function t:GetTooltip()
 return tooltip
 end
 
 function t:SetTooltip(newtooltip) 
 tooltip = newtooltip and tostring(newtooltip) or nil
 end
 
 function t:IsMouseOver() 
 return mousingover
 end
 
 t.Hidden = hidden
 t.OnClick = OnClick
 end
 
 button_button.MouseButton2Click:Connect(function() 
 ceffect(button_button)
 ui:NewBindDialog(text,t.Fire,button_button:GetDebugId(),""Fired"",button_binddisplay)
 end)
 
 OnChildAdded:Fire(""button"",t)
 
 return t
 end
 
 function m:NewTextbox(text,clear)
 text = text or getrand(7)
 clear = (clear == nil or false)
 
 local OnFocusLost = eventlistener.new()
 local OnFocusGained = eventlistener.new()
 
 local mousingover = false
 local tooltip = nil
 
 local text_textbox = Instance.new(""TextBox"")
 text_textbox.Active = true
 text_textbox.Text = text
 text_textbox.ClearTextOnFocus = clear
 text_textbox.ClipsDescendants = true
 text_textbox.TextColor3 = ui.colors.text
 text_textbox.PlaceholderText = ""...""
 text_textbox.BackgroundTransparency = 0.7
 text_textbox.BackgroundColor3 = ui.colors.button
 text_textbox.Size = UDim2.new(0,menu_menu.AbsoluteSize.X-30,0,24)
 text_textbox.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 text_textbox.ZIndex = 23
 text_textbox.Parent = menu_menu
 text_textbox.Font = ui.Font
 text_textbox.TextXAlignment = Enum.TextXAlignment.Left
 text_textbox.TextSize = ui.FontSize
 round(text_textbox)
 
 local text_icon = Instance.new(""ImageLabel"")
 text_icon.Active = false
 text_icon.BackgroundTransparency = 1
 text_icon.Image = ""rbxassetid://7467053157""
 text_icon.ImageColor3 = ui.colors.text
 text_icon.Position = UDim2.new(1,-30,0,-5)
 text_icon.Size = UDim2.new(0,34,0,34)
 text_icon.Rotation = 0
 text_icon.ZIndex = 23
 text_icon.Parent = text_textbox
 
 
 local button_pad = Instance.new(""UIPadding"")
 button_pad.PaddingLeft = UDim.new(0,10)
 button_pad.Parent = text_textbox
 
 
 text_textbox.MouseEnter:Connect(function() 
 twn(text_textbox,{BackgroundTransparency = 0.4})
 
 
 mousingover = true
 
 tdelay(1,function() 
 if mousingover and tooltip and window_tooltip.BackgroundTransparency == 1 and not SidemenuOpen then
 displayTooltip(tooltip)
 end
 end)
 end)
 
 text_textbox.MouseLeave:Connect(function() 
 twn(text_textbox,{BackgroundTransparency = 0.7})
 
 
 mousingover = false
 hideTooltip()
 end)
 
 text_textbox.FocusLost:Connect(function(enter,io) 
 twn(text_textbox,{BackgroundColor3 = ui.colors.button}) 
 twn(text_icon,{BackgroundColor3 = ui.colors.text})
 
 OnFocusLost:Fire(text_textbox.Text,enter,io)
 end)
 
 text_textbox.Focused:Connect(function() 
 twn(text_textbox,{BackgroundColor3 = ui.colors.enabled})
 twn(text_icon,{BackgroundColor3 = ui.colors.enabledbright})
 
 ceffect(text_textbox)
 
 OnFocusGained:Fire(text_textbox.Text)
 end)


 
 tinsert(menu_objects,5)
 
 local t = {} do

 
 function t:SetText(txt)
 if txt == nil then error(""SetText failed; provided text was nil"") end
 text_textbox.Text = tostring(txt)
 end
 
 function t:ForceFocus() 
 text_textbox:CaptureFocus()
 end
 
 function t:ForceRelease() 
 text_textbox:ReleaseFocus()
 end
 
 function t:SetClearOnFocus(state) 
 if type(state) ~= ""boolean"" then error(""SetClearOnFocus failed; provided state was not a bool"") end
 
 text_textbox.ClearTextOnFocus = state
 end
 
 function t:IsFocused() 
 return text_textbox:IsFocused()
 end
 
 function t:GetText() 
 return text_textbox.Text
 end
 
 function t:GetTextFormattedAsInt() 
 local among = nil
 
 pcall(function() 
 among = text_textbox.Text:gsub(""[%a%s]"","""")
 end)
 
 return among and tonumber(among) or nil
 end
 
 
 function t:GetTooltip()
 return tooltip
 end
 
 function t:SetTooltip(newtooltip) 
 tooltip = newtooltip and tostring(newtooltip) or nil
 end
 
 function t:IsMouseOver() 
 return mousingover
 end
 
 t.OnFocusLost = OnFocusLost
 t.OnFocusGained = OnFocusGained
 end
 
 OnChildAdded:Fire(""textbox"",t)
 
 return t
 end
 
 function m:NewSlider(text,min,max,start) 
 text = text or getrand(7)
 min = min or 0
 max = max or 100
 start = start or min
 
 
 if max > 999 then max = 999
 elseif max < 1 then max = 1
 end
 if min >= max then min = max-1
 elseif min < 0 then min = 0
 end

 start = math.clamp(start,min,max)
 
 
 local OnValueChanged = eventlistener.new()
 local OnFocusLost = eventlistener.new()
 local OnFocusGained = eventlistener.new()
 local Focused = false
 local SlowDragging = false
 local FastDragging = false
 
 local tooltip = nil
 local mousingover = false
 
 local slider_bg = Instance.new(""Frame"")
 slider_bg.BackgroundTransparency = 0.7
 slider_bg.BackgroundColor3 = ui.colors.button
 slider_bg.Size = UDim2.new(0,menu_menu.AbsoluteSize.X-30,0,24)
 slider_bg.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 slider_bg.ZIndex = 23
 slider_bg.Parent = menu_menu
 round(slider_bg)
 
 local slider_text = Instance.new(""TextButton"")
 slider_text.Active = false
 slider_text.Selectable = false
 slider_text.Text = text
 slider_text.AutoButtonColor = false
 slider_text.BackgroundTransparency = 0.2
 slider_text.BackgroundColor3 = ui.colors.button
 slider_text.TextColor3 = ui.colors.text
 slider_text.Font = ui.Font
 slider_text.TextXAlignment = Enum.TextXAlignment.Center
 slider_text.TextSize = ui.FontSize
 slider_text.Size = UDim2.new(1,0,1,0)
 slider_text.Position = UDim2.new(0,0,0,0)
 slider_text.ZIndex = 24
 slider_text.Visible = true
 slider_text.Parent = slider_bg
 
 round(slider_text)
 
 local slider_amount = Instance.new(""TextBox"")
 slider_amount.Active = true
 slider_amount.Text = """"
 slider_amount.PlaceholderText = ""...""
 slider_amount.BackgroundTransparency = 1
 slider_amount.BackgroundColor3 = ui.colors.button
 slider_amount.TextColor3 = ui.colors.text
 slider_amount.Font = ui.Font
 slider_amount.TextXAlignment = Enum.TextXAlignment.Center
 slider_amount.TextSize = ui.FontSize
 slider_amount.Size = UDim2.new(0,35,1,0)
 slider_amount.Position = UDim2.new(0,5,0,0)
 slider_amount.ZIndex = 24
 slider_amount.Parent = slider_bg
 
 local slider_back = Instance.new(""Frame"")
 slider_back.AnchorPoint = Vector2.new(1,0)
 slider_back.BorderSizePixel = 0
 slider_back.BackgroundTransparency = 0
 slider_back.ClipsDescendants = true
 slider_back.BackgroundColor3 = ui.colors.scroll
 slider_back.Size = UDim2.new(0,slider_bg.AbsoluteSize.X - 55,0,6)
 slider_back.Position = UDim2.new(1,-10,0.5,-3)
 slider_back.ZIndex = 23
 slider_back.Parent = slider_bg
 
 local slider_slider = Instance.new(""Frame"")
 slider_slider.AnchorPoint = Vector2.new(1,0)
 slider_slider.BorderSizePixel = 0
 slider_slider.BackgroundTransparency = 0
 slider_slider.ClipsDescendants = true
 slider_slider.BackgroundColor3 = Color3.new(1,1,1)
 slider_slider.Size = UDim2.new(1,0,1,0)
 slider_slider.Position = UDim2.new(0,0,0,0)
 slider_slider.ZIndex = 23
 slider_slider.Parent = slider_back
 
 if ui.GradientObjects then
 local among = Instance.new(""UIGradient"")
 among.Color = ColorSequence.new{
 ColorSequenceKeypoint.new(0,ui.colors.textshade1),
 ColorSequenceKeypoint.new(1,ui.colors.textshade2)
 }
 among.Parent = slider_slider 
 else
 slider_slider.BackgroundColor3 = ui.colors.enabled
 end
 
 
 slider_text.MouseEnter:Connect(function() 
 local a = twn(slider_text,{BackgroundTransparency = 1,TextTransparency = 1})
 a.Completed:Connect(function()
 if slider_text.BackgroundTransparency == 1 then 
 slider_text.ZIndex = 0
 end
 end)
 
 
 mousingover = true
 
 tdelay(1,function() 
 if mousingover and tooltip and window_tooltip.BackgroundTransparency == 1 and not SidemenuOpen then
 displayTooltip(tooltip)
 end
 end)
 end)
 
 slider_text.MouseLeave:Connect(function() 
 mousingover = false
 hideTooltip()
 
 if Focused then
 OnFocusLost:Wait()
 end
 slider_text.ZIndex = 24
 twn(slider_text,{BackgroundTransparency = 0.2,TextTransparency = 0})
 
 
 end)
 
 local width = slider_back.AbsoluteSize.X
 local slider_id = ""Slider""..getrand(10)
 local ratio = (width / (max-min))

 
 local value = start
 local oldv = value
 
 slider_amount.Text = tostring(start)
 slider_slider.Position = UDim2.new(0,math.floor((value-min) * ratio),0,0)
 
 
 slider_back.InputBegan:Connect(function(input1)
 if input1.UserInputType == Enum.UserInputType.MouseButton1 then
 if not SlowDragging then
 OnFocusGained:Fire(1)
 Focused = true
 FastDragging = true
 
 local x = math.floor(math.clamp(((input1.Position.X - slider_back.AbsolutePosition.X)),0,slider_slider.AbsoluteSize.X))
 twn(slider_slider,{Position = UDim2.new(0,x,0,0)})
 
 
 
 value = min+math.floor(x / ratio)
 slider_amount.Text = tostring(value)
 
 
 
 if value ~= oldv then
 OnValueChanged:Fire(value,1)
 end
 oldv = value
 
 ui.cons[slider_id] = uis.InputChanged:Connect(function(input2)
 if input2.UserInputType == Enum.UserInputType.MouseMovement then
 local delta = (input2.Position - input1.Position)
 local x = math.floor(math.clamp(x + delta.X,0,slider_back.AbsoluteSize.X))
 twn(slider_slider,{Position = UDim2.new(0,x,0,0)})
 
 
 
 value = min+math.floor(x / ratio)
 slider_amount.Text = tostring(value)
 
 
 if value ~= oldv then
 OnValueChanged:Fire(value,1)
 end
 
 oldv = value
 end
 end)
 end
 elseif input1.UserInputType == Enum.UserInputType.MouseButton2 then
 if not FastDragging then
 OnFocusGained:Fire(2)
 Focused = true
 SlowDragging = true
 
 local x = slider_back.AbsolutePosition.X
 local x_2 = slider_slider.Position.X.Offset
 
 ui.cons[slider_id..""2""] = uis.InputChanged:Connect(function(input2)
 if input2.UserInputType == Enum.UserInputType.MouseMovement then
 local delta = ((input1.Position - input2.Position).x)/5
 
 
 local x = math.floor(math.clamp(x_2 - delta,0,slider_back.AbsoluteSize.X))
 twn(slider_slider,{Position = UDim2.new(0,x,0,0)})
 
 value = min+math.floor(x / ratio)
 slider_amount.Text = tostring(value)
 
 
 if value ~= oldv then
 OnValueChanged:Fire(value,2)
 end
 
 oldv = value
 end
 end)
 end
 end
 end)
 
 slider_back.InputEnded:Connect(function(input1)
 if input1.UserInputType == Enum.UserInputType.MouseButton1 then
 if not SlowDragging then
 pcall(function() ui.cons[slider_id]:Disconnect() end)
 
 OnFocusLost:Fire(1)
 Focused = false
 FastDragging = false
 end
 elseif input1.UserInputType == Enum.UserInputType.MouseButton2 then
 if not FastDragging then
 pcall(function() ui.cons[slider_id..""2""]:Disconnect() end)
 
 OnFocusLost:Fire(2)
 Focused = false
 SlowDragging = false
 end
 end
 
 end) 
 
 
 
 tinsert(menu_objects,3)
 
 
 local s = {} do
 
 function s:GetValue() 
 return value
 end
 
 function s:SetValue(v) 
 if type(v) ~= ""number"" then
 error(""SetValue failed; provided value was not a number"")
 end
 
 v = math.clamp(v,min,max)
 value = v
 slider_amount.Text = tostring(value)
 twn(slider_slider,{Position = UDim2.new(0,math.floor((value-min) * ratio),0,0)})
 
 
 OnValueChanged:Fire(value,3)
 oldv = value
 end
 
 
 function s:SetMax(m)
 if type(m) ~= ""number"" then
 error(""SetMax failed; provided max was not a number"")
 end
 
 max = m
 if max > 999 then max = 999
 elseif max < 1 then max = 1
 end
 
 ratio = (slider_back.AbsoluteSize.X / (max-min))
 
 value = math.clamp(value,min,max)
 slider_amount.Text = tostring(value)
 twn(slider_slider,{Position = UDim2.new(0,min+math.floor(value * ratio),0,0)})
 
 if value ~= oldv then
 OnValueChanged:Fire(value,3)
 oldv = value 
 end
 end
 
 
 function s:GetMax() 
 return max
 end
 
 function s:SetMin(m) 
 if type(m) ~= ""number"" then
 error(""SetMin failed; provided max was not a number"")
 end
 
 min = m
 if min >= max then min = max-1
 elseif min < 0 then min = 0
 end
 
 ratio = (slider_back.AbsoluteSize.X / (max-min))
 
 value = math.clamp(value,min,max)
 slider_amount.Text = tostring(value)
 twn(slider_slider,{Position = UDim2.new(0,math.floor(value * ratio),0,0)})
 
 if value ~= oldv then
 OnValueChanged:Fire(value,3)
 oldv = value 
 end
 end
 
 function s:GetMin() 
 return min
 end
 
 
 function s:GetTooltip()
 return tooltip
 end
 
 function s:SetTooltip(newtooltip) 
 tooltip = newtooltip and tostring(newtooltip) or nil
 end
 
 function s:IsMouseOver() 
 return mousingover
 end
 
 s.OnValueChanged = OnValueChanged
 s.OnFocusLost = OnFocusLost
 s.OnFocusGained = OnFocusGained
 
 
 end
 
 slider_amount.FocusLost:Connect(function() 
 local tx = slider_amount.Text:gsub(""[^%d]"","""")
 local success,ntx = pcall(function() 
 return tonumber(tx)
 end)
 

 if type(ntx) == ""number"" then
 
 s:SetValue(ntx)
 end
 slider_amount.Text = s:GetValue()
 end)
 
 OnChildAdded:Fire(""slider"",s)
 
 return s

 end
 
 function m:NewDropdown(text,options)
 text = text or getrand(7)
 options = options or {
 getrand(5),
 getrand(5),
 getrand(5)
 
 }
 
 local options_buttons = {}
 local open_state = false
 local selection = {options[1],1}
 
 local OnSelection = eventlistener.new()
 local OnOpen = eventlistener.new()
 local OnClose = eventlistener.new()
 local OnToggle = eventlistener.new()
 local OnOptionAdded = eventlistener.new()
 local OnOptionRemoved = eventlistener.new()
 
 local mousingover = false
 local tooltip = nil
 
 
 
 local dropdown_button = Instance.new(""TextButton"")
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 dropdown_button.AutoButtonColor = false
 dropdown_button.ClipsDescendants = true
 dropdown_button.BackgroundTransparency = 0.7
 dropdown_button.BackgroundColor3 = ui.colors.button
 dropdown_button.TextColor3 = ui.colors.text
 dropdown_button.Font = ui.Font
 dropdown_button.TextXAlignment = Enum.TextXAlignment.Left
 dropdown_button.TextSize = ui.FontSize
 dropdown_button.Size = UDim2.new(0,menu_menu.AbsoluteSize.X-30,0,24)
 dropdown_button.Position = UDim2.new(0,15,0,(m:GetChildCount()*28)+3)
 dropdown_button.ZIndex = 27
 dropdown_button.Parent = menu_menu
 round(dropdown_button)
 
 local dropdown_pad = Instance.new(""UIPadding"")
 dropdown_pad.PaddingLeft = UDim.new(0,10)
 dropdown_pad.Parent = dropdown_button
 
 local dropdown_arrow = Instance.new(""ImageLabel"")
 dropdown_arrow.Active = false
 dropdown_arrow.BackgroundTransparency = 1
 dropdown_arrow.Image = ""rbxassetid://7184113125""
 dropdown_arrow.ImageColor3 = ui.colors.text
 dropdown_arrow.Position = UDim2.new(1,-30,0,-5)
 dropdown_arrow.Size = UDim2.new(0,34,0,34)
 dropdown_arrow.Rotation = 180
 dropdown_arrow.ZIndex = 27
 dropdown_arrow.Parent = dropdown_button
 
 
 local dropdown_container = Instance.new(""Frame"")
 dropdown_container.Size = UDim2.new(dropdown_button.Size.X,UDim.new(0,0))
 dropdown_container.BorderSizePixel = 0
 dropdown_container.BackgroundColor3 = ui.colors.topbar
 dropdown_container.ZIndex = 26
 dropdown_container.ClipsDescendants = true
 dropdown_container.BackgroundTransparency = 0
 dropdown_container.Position = dropdown_button.Position
 dropdown_container.Parent = menu_menu

 round(dropdown_container)
 
 
 dropdown_button.MouseEnter:Connect(function() 
 twn(dropdown_button,{BackgroundTransparency = 0.4})
 
 mousingover = true
 tdelay(1,function() 
 if mousingover and tooltip and window_tooltip.BackgroundTransparency == 1 and not SidemenuOpen then
 displayTooltip(tooltip) 
 end
 end)
 end)
 
 dropdown_button.MouseLeave:Connect(function() 
 twn(dropdown_button,{BackgroundTransparency = 0.7})
 
 mousingover = false
 hideTooltip()
 end)
 
 
 
 local function open() 
 twn(dropdown_arrow,{Rotation = 360})
 twn(dropdown_container,{Size = UDim2.new(dropdown_button.Size.X,UDim.new(0,(#options_buttons*28)+40))})
 twn(dropdown_button,{BackgroundColor3 = ui.colors.enabled})
 
 
 OnOpen:Fire()
 OnToggle:Fire(true)
 end
 
 local function close() 
 twn(dropdown_arrow,{Rotation = 180})
 twn(dropdown_container,{Size = UDim2.new(dropdown_button.Size.X,UDim.new(0,0))})
 twn(dropdown_button,{BackgroundColor3 = ui.colors.button})
 
 
 OnClose:Fire()
 OnToggle:Fire(false)
 end
 
 local function toggle() 
 open_state = not open_state
 if open_state then
 open()
 else
 close()
 end
 end
 
 local function newoption(i,v) 
 local dropdown_option = Instance.new(""TextButton"")
 dropdown_option.Text = v
 dropdown_option.AutoButtonColor = false
 dropdown_option.ClipsDescendants = true
 dropdown_option.BackgroundTransparency = 0.7
 dropdown_option.BackgroundColor3 = ui.colors.button
 dropdown_option.TextColor3 = ui.colors.text
 dropdown_option.Font = ui.Font
 dropdown_option.TextXAlignment = Enum.TextXAlignment.Left
 dropdown_option.TextSize = ui.FontSize
 dropdown_option.Size = UDim2.new(0,dropdown_container.AbsoluteSize.X-20,0,24)
 dropdown_option.Position = UDim2.new(0,10,0,((i-1)*28)+34)
 dropdown_option.ZIndex = 26
 dropdown_option.Parent = dropdown_container
 round(dropdown_option)
 
 local dropdown_pad = Instance.new(""UIPadding"")
 dropdown_pad.PaddingLeft = UDim.new(0,10)
 dropdown_pad.Parent = dropdown_option
 
 
 dropdown_option.MouseEnter:Connect(function() 
 twn(dropdown_option,{BackgroundTransparency = 0.4})
 end)
 
 dropdown_option.MouseLeave:Connect(function() 
 twn(dropdown_option,{BackgroundTransparency = 0.7})
 end)
 
 dropdown_option.MouseButton1Click:Connect(function() 
 ceffect(dropdown_option)
 
 for i,v in pairs(options_buttons) do
 twn(v,{BackgroundColor3 = ui.colors.button,BackgroundTransparency = 0.7})
 end
 
 twn(dropdown_option,{BackgroundColor3 = ui.colors.enabled,BackgroundTransparency = 0.4})
 
 selection = {v,i}
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 
 OnSelection:Fire(unpack(selection))
 end)
 
 if i == 1 then
 dropdown_option.BackgroundColor3 = ui.colors.enabled
 dropdown_option.BackgroundTransparency = 0.4
 
 selection = {v,i}
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 end
 
 tinsert(options_buttons,dropdown_option)
 
 return dropdown_option
 end
 
 
 
 dropdown_button.MouseButton1Click:Connect(function() 
 ceffect(dropdown_button)
 toggle()
 end)
 
 dropdown_button.MouseButton2Click:Connect(function() 
 ceffect(dropdown_button)
 toggle()
 end)
 
 
 
 
 for i,v in pairs(options) do
 newoption(i,v)
 end
 
 
 
 tinsert(menu_objects,7)
 
 local t = {} do
 
 function t:SetText(tx) 
 if tx == nil then error(""SetText failed; provided value was nil"") end
 dropdown_button.Text = tostring(tx)
 end
 
 function t:GetText() 
 return dropdown_button.Text
 end
 
 function t:GetSelectedOption() 
 return selection[1],selection[2]
 end
 
 function t:GetSelection() 
 return selection[1],selection[2]
 end
 
 function t:IsOpen() 
 return open_state
 end
 
 
 function t:SetSelectedOption(name) 
 if (type(name) == ""string"") then 
 
 local occ = 0
 local oldsel = selection
 local button
 
 for i,v in pairs(options_buttons) do
 if v.Text == name then
 occ = occ + 1 
 button = v
 selection = {v.Text,i}
 end
 end
 
 if occ ~= 1 then
 selection = oldsel
 if occ == 0 then 
 error(""SetSelectedOption failed; could not find dropdown option with that name"")
 return
 elseif occ > 1 then
 
 error(""SetSelectedOption failed; more than one valid dropdown option"")
 return
 end
 end
 
 oldsel = nil
 
 
 for i,v in pairs(options_buttons) do
 twn(v,{BackgroundColor3 = ui.colors.button,BackgroundTransparency = 0.7})
 end
 
 twn(button,{BackgroundColor3 = ui.colors.enabled,BackgroundTransparency = 0.4})
 
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 OnSelection:Fire(unpack(selection))
 
 elseif (type(name) == ""number"") then
 
 if options_buttons[name] then 
 selection = {options_buttons[name].Text,name}
 
 for i,v in pairs(options_buttons) do
 twn(v,{BackgroundColor3 = ui.colors.button,BackgroundTransparency = 0.7})
 end
 twn(options_buttons[name],{BackgroundColor3 = ui.colors.enabled,BackgroundTransparency = 0.4})
 
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 OnSelection:Fire(unpack(selection))
 
 else
 
 error(""SetSelectedOption failed; could not find dropdown option with index ""..tostring(name)) 
 end
 
 else
 
 error(""SetSelectedOption failed; provided value wasn't a valid name or index of option"")
 
 end 
 
 end
 
 function t:Select(...) 
 
 return t:SetSelectedOption(...)
 
 end
 
 function t:GetOptions() 
 return options
 
 
 end
 
 function t:SetOptions(options)
 for i = #options_buttons,1,-1 do
 t:RemoveOption(i) 
 end
 for _,v in ipairs(options) do
 t:AddOption(v) 
 end
 end
 
 function t:HasOption(name) 
 for _,v in ipairs(options_buttons) do
 if v.Text == name then
 return true 
 end
 end
 return false
 end
 
 function t:AddOption(name) 
 if t:HasOption(name) then
 local new
 local i = 2
 repeat 
 new = name .. "" ""..i
 i = i + 1
 until
 t:HasOption(new) == false
 
 name = new
 end
 
 OnOptionAdded:Fire(name,#options_buttons+1)
 
 newoption(#options_buttons+1,name)
 if open_state then
 twn(dropdown_container,{Size = UDim2.new(dropdown_button.Size.X,UDim.new(0,(#options_buttons*28)+40))}) 
 end
 end
 
 function t:RemoveOption(name)
 if type(name) == ""string"" then
 local found = false
 
 for idx,dd in pairs(options_buttons) do 
 if dd.Text == name then
 
 tremove(options_buttons,idx)
 dd:Destroy()
 
 found = true
 OnOptionRemoved:Fire(name,idx,""string"")
 break
 end
 end
 if not found then
 error(""RemoveOption failed; could not find valid option"") 
 end
 
 elseif type(name) == ""number"" then
 local dd = options_buttons[name]
 if dd == nil then
 error(""RemoveOption failed; dropdown option index out of range"")
 end
 OnOptionRemoved:Fire(name,idx,""index"")
 tremove(options_buttons,name)
 dd:Destroy()
 else
 error(""RemoveOption failed; '""..tostring(name)..""' isn't a valid index/name to search for"") 
 end
 
 if open_state then
 twn(dropdown_container,{Size = UDim2.new(dropdown_button.Size.X,UDim.new(0,((#options_buttons)*28)+40))}) 
 end
 
 for i,v in ipairs(options_buttons) do
 twn(v,{Position = UDim2.new(0,10,0,((i-1)*28)+34)})
 end
 
 if #options_buttons == 0 then
 dropdown_button.Text = text .. "" (nil)"" 
 else
 if options_buttons[selection[2]].Text ~= selection[1] then
 selection = {options_buttons[1].Text,1}
 
 for i,v in pairs(options_buttons) do
 twn(v,{BackgroundColor3 = ui.colors.button,BackgroundTransparency = 0.7})
 end
 
 twn(options_buttons[1],{BackgroundColor3 = ui.colors.enabled,BackgroundTransparency = 0.4})
 
 dropdown_button.Text = text .. "" (""..tostring(selection[1]).."")""
 OnSelection:Fire(unpack(selection))
 end
 end
 end
 
 function t:GetTooltip()
 return tooltip
 end
 
 function t:SetTooltip(newtooltip) 
 tooltip = newtooltip and tostring(newtooltip) or nil
 end
 
 function t:IsMouseOver() 
 return mousingover
 end
 
 
 
 t.OnOpen = OnOpen
 t.OnClose = OnClose
 t.OnSelection = OnSelection
 t.OnToggle = OnToggle
 
 t.OnOptionRemoved = OnOptionRemoved
 t.OnOptionAdded = OnOptionAdded
 end
 
 OnChildAdded:Fire(""dropdown"",t)
 
 return t
 end
 
 function m:NewGrid() 
 
 
 local g = {} do
 
 function g:NewToggle() 
 
 
 
 end
 end
 return g
 
 end
 
 function m:NewTrim(gradient,offset)
 gradient = not (gradient == false and true or false)
 offset = (offset == true or false)
 
 local trim = Instance.new(""Frame"")
 trim.BackgroundTransparency = 0
 trim.BorderSizePixel = 0
 trim.Size = UDim2.new(1,-20,0,1)
 trim.Position = UDim2.new(0,10,0,(m:GetChildCount()*28)+(offset and 0 or 15))
 trim.ZIndex = 25
 trim.Parent = menu_menu
 
 if gradient then
 local among = Instance.new(""UIGradient"")
 among.Color = ColorSequence.new{
 ColorSequenceKeypoint.new(0,ui.colors.textshade1),
 ColorSequenceKeypoint.new(1,ui.colors.textshade2)
 }
 among.Parent = trim 
 else
 trim.BackgroundColor3 = ui.colors.detail
 end
 
 if offset ~= true then tinsert(menu_objects,3) end
 
 
 
 OnChildAdded:Fire(""trim"",nil)
 end
 
 function m:NewPalette() 
 
 end
 
 end
 
 return m 
 end
 
 function w:GetMinimized() 
 return Minimized
 end
 
 function w:GetMenus() 
 return wind_menus
 end
 
 
 w.OnMinimize = OnMinimize
 
 
 
 end
 
 tinsert(ui.Windows,w)
 
 return w
 
 end
 
 function ui:GetScreenGUI() 
 return screen
 end
 
 function ui:Ready() 
 
 for i,v in pairs(ui.Windows) do
 for i,m in pairs(v:GetMenus()) do
 m.s.Visible = false
 m.i.Visible = false
 end
 local m = v:GetMenus()[1]
 m.s.Visible = true
 m.i.Visible = true
 
 
 end
 
 ui.OnReady:Fire()
 end
 
 function ui:NewNotification(notif_text,notif_desc,notif_timer,notif_x,notif_y)
 notif_text = notif_text or ""Notification""
 notif_desc = notif_desc or """"
 notif_timer = notif_timer or 5
 notif_x = notif_x or 0
 notif_y = notif_y or 0
 
 ui.NotifCount = ui.NotifCount + 1
 
 local place = ui.NotifCount
 
 local sizex,sizey = 175 + (ulen(notif_text)*2) + notif_x,100 + notif_y
 
 local notif_window = Instance.new(""Frame"")
 notif_window.BackgroundColor3 = ui.colors.window
 notif_window.BorderSizePixel = 0
 notif_window.Size = UDim2.new(0,sizex,0,sizey)
 notif_window.Position = UDim2.new(1,(sizex+20),1,-(sizey+20))
 notif_window.ZIndex = 53
 notif_window.Parent = screen
 
 local notif_topbar = Instance.new(""Frame"")
 notif_topbar.BackgroundColor3 = ui.colors.topbar
 notif_topbar.BorderSizePixel = 0
 notif_topbar.Size = UDim2.new(1,0,0,30)
 notif_topbar.Position = UDim2.new(0,0,0,0)
 notif_topbar.ZIndex = 54
 notif_topbar.Active = true
 notif_topbar.Parent = notif_window
 
 local notif_title = Instance.new(""TextLabel"")
 notif_title.Text = notif_text
 notif_title.BackgroundTransparency = 1
 notif_title.TextTransparency = 1
 notif_title.TextColor3 = ui.colors.text
 notif_title.Font = ui.Font
 notif_title.TextSize = ui.FontSize+4
 notif_title.Size = UDim2.new(1,-5,1,0)
 notif_title.Position = UDim2.new(0,5,0,0)
 notif_title.TextXAlignment = Enum.TextXAlignment.Center
 notif_title.ZIndex = 54
 notif_title.Parent = notif_topbar
 
 local notif_desctext = Instance.new(""TextLabel"")
 notif_desctext.Text = notif_desc
 notif_desctext.BackgroundTransparency = 1
 notif_desctext.TextTransparency = 1
 notif_desctext.TextColor3 = ui.colors.text
 notif_desctext.Font = ui.Font
 notif_desctext.TextSize = ui.FontSize
 notif_desctext.Size = UDim2.new(1,-10,1,-35)
 notif_desctext.Position = UDim2.new(0,5,0,30)
 notif_desctext.TextXAlignment = Enum.TextXAlignment.Left
 notif_desctext.TextYAlignment = Enum.TextYAlignment.Top
 notif_desctext.ZIndex = 53
 notif_desctext.TextWrapped = true
 notif_desctext.Parent = notif_window
 
 local notif_progress = Instance.new(""Frame"")
 notif_progress.BackgroundColor3 = Color3.new(1,1,1)
 notif_progress.BorderSizePixel = 0
 notif_progress.Size = UDim2.new(1,0,0,1)
 notif_progress.Position = UDim2.new(0,0,1,0)
 notif_progress.ZIndex = 54
 notif_progress.Active = false
 notif_progress.Parent = notif_topbar
 
 
 if ui.GradientObjects then
 local among = Instance.new(""UIGradient"")
 among.Color = ColorSequence.new{
 ColorSequenceKeypoint.new(0,ui.colors.textshade1),
 ColorSequenceKeypoint.new(1,ui.colors.textshade2)
 }
 among.Parent = notif_progress 
 else
 notif_progress.BackgroundColor3 = ui.colors.enabledbright
 end
 
 shadow(notif_window)
 
 local function closeNotif() 
 ui.NotifCount = ui.NotifCount - 1
 ui.OnNotifDelete:Fire()
 tspawn(function() 
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = notif_window
 
 pcall(function() 
 ctwn(notif_window,{Position = notif_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 
 twn(notif_window,{BackgroundTransparency = 1})
 for i,v in pairs(notif_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end)
 end)
 
 wait(0.8)
 
 notif_window:Destroy()
 end
 
 local notif = {} do
 
 function notif:Close() 
 closeNotif()
 end
 
 function notif:GetDesc() 
 return notif_desc
 end
 
 function notif:SetDesc(text) 
 if text == nil then error(""SetDesc failed; provided value was nil"") end
 notif_desc = tostring(text)
 notif_desctext.Text = notif_desc
 end

 end
 
 

 coroutine.resume(coroutine.create(function() 
 local con
 
 con = ui.OnNotifDelete:Connect(function() 
 place = place - 1
 twn(notif_window,{Position = UDim2.new(1,-(sizex+20),1,-(sizey+20)-(place*130))})
 end)
 
 
 notif_window.Position = UDim2.new(1,(sizex+20),1,-(sizey+20)-(place*130))
 twn(notif_window,{Position = UDim2.new(1,-(sizex+20),1,-(sizey+20)-(place*130))})
 twn(notif_title,{TextTransparency = 0})
 twn(notif_desctext,{TextTransparency = 0})
 
 
 wait(0.2)
 
 local t = ctwn(notif_progress,{Size = UDim2.new(0,0,0,1)},notif_timer,""Out"",""Linear"")
 
 t.Completed:Connect(function() 
 pcall(closeNotif)
 con:Disconnect()
 end)
 
 end))
 
 return notif
 end
 
 function ui:NewMessagebox(msg_text,msg_desc,msg_buttons,msg_AddX,msg_AddY)
 msg_text = msg_text or getrand(5)
 msg_desc = msg_desc or getrand(10)
 msg_buttons = msg_buttons or {
 {
 Text = ""Ok"",
 Callback = function(self)
 self:Close()
 end
 }
 
 }
 msg_AddY = msg_AddY or 0
 msg_AddX = msg_AddX or 0
 
 local OnClose = eventlistener.new()
 
 local sizex,sizey = 150 + (#msg_buttons*10) + msg_AddX,100 + ((ulen(msg_desc))) + msg_AddY
 
 local msg_window = Instance.new(""Frame"")
 msg_window.BackgroundColor3 = ui.colors.window
 msg_window.BorderSizePixel = 0
 msg_window.Size = UDim2.new(0,sizex,0,sizey)
 msg_window.Position = UDim2.new(0,20,0,20)
 msg_window.ZIndex = 100
 
 local msg_clip1 = msg_window:Clone()
 shadow(msg_window)
 msg_clip1.Parent = screen
 msg_clip1.BackgroundTransparency = 1
 msg_clip1.ClipsDescendants = true
 msg_clip1.Position = UDim2.new(0.5,-(sizex/2)-20,0.5,-(sizey/2)-20)
 msg_clip1.Size = UDim2.new(0,sizex+100,0,0)
 msg_window.Parent = msg_clip1
 
 local msg_topbar = Instance.new(""Frame"")
 msg_topbar.BackgroundColor3 = ui.colors.topbar
 msg_topbar.BorderSizePixel = 0
 msg_topbar.Size = UDim2.new(1,0,0,30)
 msg_topbar.Position = UDim2.new(0,0,0,0)
 msg_topbar.ZIndex = 101
 msg_topbar.Active = true
 msg_topbar.Parent = msg_window
 
 local msg_title = Instance.new(""TextLabel"")
 msg_title.Text = msg_text
 msg_title.BackgroundTransparency = 1
 msg_title.TextTransparency = 1
 msg_title.TextColor3 = ui.colors.text
 msg_title.Font = ui.Font
 msg_title.TextSize = ui.FontSize+4
 msg_title.Size = UDim2.new(1,-60,1,0)
 msg_title.Position = UDim2.new(0,5,0,0)
 msg_title.TextXAlignment = Enum.TextXAlignment.Left
 msg_title.ZIndex = 102
 msg_title.Parent = msg_topbar
 
 local msg_desc2 = Instance.new(""TextLabel"")
 msg_desc2.Text = msg_desc
 msg_desc2.BackgroundTransparency = 1
 msg_desc2.TextTransparency = 1
 msg_desc2.TextColor3 = ui.colors.text
 msg_desc2.Font = ui.Font
 msg_desc2.TextSize = ui.FontSize
 msg_desc2.Size = UDim2.new(1,-10,1,-65)
 msg_desc2.Position = UDim2.new(0,5,0,30)
 msg_desc2.TextXAlignment = Enum.TextXAlignment.Left
 msg_desc2.TextYAlignment = Enum.TextYAlignment.Top
 msg_desc2.ZIndex = 101
 msg_desc2.TextWrapped = true
 msg_desc2.Parent = msg_window
 
 local msg_clip2 = Instance.new(""Frame"")
 msg_clip2.Visible = true
 msg_clip2.ClipsDescendants = true
 msg_clip2.Position = UDim2.new(0,0,0,0)
 msg_clip2.Size = UDim2.new(1,0,0,0)
 msg_clip2.BackgroundTransparency = 1
 msg_clip2.ZIndex = 102
 msg_clip2.Parent = msg_topbar
 
 local msg_bclose = Instance.new(""TextButton"")
 msg_bclose.Text = ""X""
 msg_bclose.ClipsDescendants = true
 msg_bclose.AutoButtonColor = false
 msg_bclose.BackgroundColor3 = ui.colors.button
 msg_bclose.BackgroundTransparency = 1
 msg_bclose.BorderSizePixel = 0
 msg_bclose.TextColor3 = ui.colors.text
 msg_bclose.Font = ui.Font
 msg_bclose.TextSize = ui.FontSize+4
 msg_bclose.Size = UDim2.new(0,30-4,0,30-4)
 msg_bclose.Position = UDim2.new(1,-30+2,0,2)
 msg_bclose.ZIndex = 102
 msg_bclose.Parent = msg_clip2
 
 round(msg_bclose)
 
 
 
 local function closeMsg(option) 
 OnClose:Fire(option)
 tspawn(function() 
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = msg_window
 
 ctwn(msg_window,{Position = msg_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 
 
 twn(msg_window,{BackgroundTransparency = 1})
 for i,v in pairs(msg_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end)
 
 wait(0.8)
 
 msg_window:Destroy()
 end
 
 local msg = {} do
 
 function msg:Close(option)
 option = option or nil
 closeMsg(option)
 end
 
 function msg:GetTitle() 
 return msg_text
 end
 
 function msg:GetDesc() 
 return msg_desc 
 end
 
 function msg:SetTitle(text)
 msg_text = text
 msg_title.Text = msg_text
 end
 
 function msg:SetDesc(desc)
 msg_desc = desc
 msg_desc2.Text = msg_desc
 end
 
 function msg:FadeText(newtext,newdesc)
 msg_text = tostring(newtext)
 msg_desc = tostring(newdesc)
 ctwn(msg_desc2,{TextTransparency = 1},0.25,""Out"",""Exponential"")
 ctwn(msg_title,{TextTransparency = 1},0.25,""Out"",""Exponential"")
 wait(0.25)
 msg_desc2.Text = msg_desc
 msg_title.Text = msg_text
 ctwn(msg_desc2,{TextTransparency = 0},0.25,""Out"",""Exponential"")
 ctwn(msg_title,{TextTransparency = 0},0.25,""Out"",""Exponential"")
 
 end
 
 msg.OnClose = OnClose
 end
 
 
 
 msg_bclose.MouseEnter:Connect(function() 
 twn(msg_bclose,{BackgroundTransparency = 0.4})
 end)
 msg_bclose.MouseLeave:Connect(function() 
 twn(msg_bclose,{BackgroundTransparency = 1})
 end)
 
 
 
 
 msg_bclose.MouseButton1Click:Connect(function() 
 ceffect(msg_bclose)
 closeMsg(""Close"")
 end)
 
 for i,v in pairs(msg_buttons) do
 local cb = v[""Callback""] or (function() end)
 
 
 local msg_bv = Instance.new(""TextButton"")
 msg_bv.Text = v[""Text""] or getrand(3)
 msg_bv.ClipsDescendants = true
 msg_bv.AutoButtonColor = false
 msg_bv.BackgroundColor3 = ui.colors.button
 msg_bv.BackgroundTransparency = 1
 msg_bv.BorderSizePixel = 0
 msg_bv.TextColor3 = ui.colors.text
 msg_bv.Font = ui.Font
 msg_bv.TextSize = ui.FontSize
 msg_bv.Size = UDim2.new(0,(msg_window.AbsoluteSize.X/#msg_buttons-4)-5,0,30-4)
 msg_bv.Position = UDim2.new(0,((msg_window.AbsoluteSize.X/#msg_buttons)*(i-1))+5,1,-32)
 msg_bv.TextTransparency = 1
 msg_bv.ZIndex = 102
 msg_bv.Parent = msg_window
 
 round(msg_bv)
 
 
 msg_bv.MouseEnter:Connect(function() 
 twn(msg_bv,{BackgroundTransparency = 0.4})
 end)
 msg_bv.MouseLeave:Connect(function() 
 twn(msg_bv,{BackgroundTransparency = 1})
 end)
 
 
 msg_bv.MouseButton1Click:Connect(function() 
 ceffect(msg_bv)
 
 cb(msg,v[""Text""],v)
 end)
 
 tdelay(0.25,function() 
 ctwn(msg_bv,{TextTransparency = 0},1)
 end)
 end
 
 
 tspawn(function()
 msg_window.Size = UDim2.new(0,sizex,0,0)
 msg_window.Position = UDim2.new(0,20,0,20)
 
 
 ctwn(msg_clip1,{Size = UDim2.new(0,sizex+100,0,sizey+100)},0.75,""InOut"",""Exponential"")
 ctwn(msg_window,{Size = UDim2.new(0,sizex,0,sizey)},0.75,""InOut"",""Exponential"")
 wait(0.25)
 
 ctwn(msg_clip2,{Size = UDim2.new(1,0,1,0)},2,""Out"",""Exponential"")
 ctwn(msg_title,{TextTransparency = 0,Size = UDim2.new(1,-50,1,0),Position = UDim2.new(0,5,0,0)},0.75,""Out"")
 ctwn(msg_desc2,{TextTransparency = 0},0.75,""InOut"")
 wait(0.75)
 
 msg_bclose.Parent = msg_topbar
 msg_window.Parent = screen
 
 msg_window.Position = UDim2.new(0.5,-(sizex/2),0.5,-(sizey/2))
 msg_clip2:Destroy()
 msg_clip1:Destroy()
 rdrag(msg_topbar,msg_window)
 
 end)
 
 
 return msg
 
 end
 
 function ui:NewBindDialog(bd_name,bd_func,bd_id,bd_word,bd_display)
 
 bd_name = bd_name or ""Test""
 bd_func = bd_func or function() end
 bd_buttons = {
 {
 Text = ""Ok"",
 Callback = function(self)
 self:SetBind(self:GetBind())
 self:Close()
 end
 
 },
 {
 Text = ""Cancel"",
 Callback = function(self) 
 self:Close()
 end
 }
 }
 
 local hotkey_connection
 local new_bind
 
 
 local sizex,sizey = 350,150
 
 local bd_window = Instance.new(""Frame"")
 bd_window.BackgroundColor3 = ui.colors.window
 bd_window.BorderSizePixel = 0
 bd_window.Size = UDim2.new(0,sizex,0,sizey)
 bd_window.Position = UDim2.new(0,20,0,20)
 bd_window.ZIndex = 60
 
 local bd_clip1 = bd_window:Clone()
 shadow(bd_window)
 bd_clip1.Parent = screen
 bd_clip1.BackgroundTransparency = 1
 bd_clip1.ClipsDescendants = true
 bd_clip1.Position = UDim2.new(0.5,-(sizex/2)-20,0.5,-(sizey/2)-20)
 bd_clip1.Size = UDim2.new(0,sizex+100,0,0)
 bd_window.Parent = bd_clip1
 
 local bd_topbar = Instance.new(""Frame"")
 bd_topbar.BackgroundColor3 = ui.colors.topbar
 bd_topbar.BorderSizePixel = 0
 bd_topbar.Size = UDim2.new(1,0,0,30)
 bd_topbar.Position = UDim2.new(0,0,0,0)
 bd_topbar.ZIndex = 61
 bd_topbar.Active = true
 bd_topbar.Parent = bd_window
 
 local bd_title = Instance.new(""TextLabel"")
 bd_title.Text = ""Bind menu: ""..bd_name
 bd_title.BackgroundTransparency = 1
 bd_title.TextTransparency = 1
 bd_title.TextColor3 = ui.colors.text
 bd_title.Font = ui.Font
 bd_title.TextSize = ui.FontSize+4
 bd_title.Size = UDim2.new(1,-60,1,0)
 bd_title.Position = UDim2.new(0,5,0,0)
 bd_title.TextXAlignment = Enum.TextXAlignment.Left
 bd_title.ZIndex = 61
 bd_title.Parent = bd_topbar
 
 local bd_desc = Instance.new(""TextLabel"")
 bd_desc.Text = ""Binding action for ""..bd_name.."";\npress any key...""
 bd_desc.BackgroundTransparency = 1
 bd_desc.TextTransparency = 1
 bd_desc.TextColor3 = ui.colors.text
 bd_desc.Font = ui.Font
 bd_desc.TextSize = ui.FontSize
 bd_desc.Size = UDim2.new(1,-10,1,-80)
 bd_desc.Position = UDim2.new(0,5,0,32)
 bd_desc.TextXAlignment = Enum.TextXAlignment.Center
 bd_desc.TextYAlignment = Enum.TextYAlignment.Top
 bd_desc.ZIndex = 60
 bd_desc.TextWrapped = true
 bd_desc.Parent = bd_window
 
 local bd_bindentry = Instance.new(""TextButton"")
 bd_bindentry.Active = true
 bd_bindentry.Text = ""...""
 bd_bindentry.ClipsDescendants = true
 bd_bindentry.AutoButtonColor = false
 bd_bindentry.TextColor3 = ui.colors.text
 bd_bindentry.BackgroundTransparency = 0.7
 bd_bindentry.BackgroundColor3 = ui.colors.button
 bd_bindentry.Size = UDim2.new(0,bd_window.AbsoluteSize.X-30,0,24)
 bd_bindentry.Position = UDim2.new(0,15,0.6,0)
 bd_bindentry.ZIndex = 60
 bd_bindentry.Font = ui.Font
 bd_bindentry.TextXAlignment = Enum.TextXAlignment.Left
 bd_bindentry.TextSize = ui.FontSize
 bd_bindentry.Parent = bd_window
 round(bd_bindentry)
 
 local bd_bindentry_icon = Instance.new(""ImageLabel"")
 bd_bindentry_icon.Active = false
 bd_bindentry_icon.BackgroundTransparency = 1
 bd_bindentry_icon.Image = ""rbxassetid://7467053157""
 bd_bindentry_icon.ImageColor3 = ui.colors.text
 bd_bindentry_icon.Position = UDim2.new(1,-30,0,-5)
 bd_bindentry_icon.Size = UDim2.new(0,34,0,34)
 bd_bindentry_icon.Rotation = 0
 bd_bindentry_icon.ZIndex = 60
 bd_bindentry_icon.Parent = bd_bindentry
 
 
 local bd_bindentry_pad = Instance.new(""UIPadding"")
 bd_bindentry_pad.PaddingLeft = UDim.new(0,10)
 bd_bindentry_pad.Parent = bd_bindentry
 
 
 bd_bindentry.MouseEnter:Connect(function() 
 twn(bd_bindentry,{BackgroundTransparency = 0.4})
 end)
 
 bd_bindentry.MouseLeave:Connect(function() 
 twn(bd_bindentry,{BackgroundTransparency = 0.7})
 end)
 
 local bd_clip2 = Instance.new(""Frame"")
 bd_clip2.Visible = true
 bd_clip2.ClipsDescendants = true
 bd_clip2.Position = UDim2.new(0,0,0,0)
 bd_clip2.Size = UDim2.new(1,0,0,0)
 bd_clip2.BackgroundTransparency = 1
 bd_clip2.ZIndex = 102
 bd_clip2.Parent = bd_topbar
 
 local bd_bclose = Instance.new(""TextButton"")
 bd_bclose.Text = ""X""
 bd_bclose.ClipsDescendants = true
 bd_bclose.AutoButtonColor = false
 bd_bclose.BackgroundColor3 = ui.colors.button
 bd_bclose.BackgroundTransparency = 1
 bd_bclose.BorderSizePixel = 0
 bd_bclose.TextColor3 = ui.colors.text
 bd_bclose.Font = ui.Font
 bd_bclose.TextSize = ui.FontSize+4
 bd_bclose.Size = UDim2.new(0,30-4,0,30-4)
 bd_bclose.Position = UDim2.new(1,-30+2,0,2)
 bd_bclose.ZIndex = 61
 bd_bclose.Parent = bd_clip2
 
 round(bd_bclose)
 
 
 
 local function closeBindDialog() 
 pcall(function() 
 hotkey_connection:Disconnect()
 end)
 tspawn(function() 
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = bd_window
 
 ctwn(bd_window,{Position = bd_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 
 
 twn(bd_window,{BackgroundTransparency = 1})
 for i,v in pairs(bd_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end)
 
 wait(0.8)
 
 bd_window:Destroy()
 end
 
 local function capture() 
 twn(bd_bindentry,{BackgroundColor3 = ui.colors.enabled})
 bd_desc.Text = ""Binding action for ""..bd_name.."";\npress any key...""
 bd_bindentry.Text = ""...""
 
 twait(0.02)
 hotkey_connection = uis.InputBegan:Connect(function(io) 
 if io.KeyCode == Enum.KeyCode.Unknown then
 twn(bd_bindentry,{BackgroundColor3 = ui.colors.button})
 hotkey_connection:Disconnect()
 
 
 new_bind = nil
 bd_bindentry.Text = ""None""
 
 
 bd_desc.Text = ""Unbound ""..bd_name
 else
 twn(bd_bindentry,{BackgroundColor3 = ui.colors.button})
 hotkey_connection:Disconnect()
 
 
 new_bind = io.KeyCode
 bd_bindentry.Text = new_bind.Name
 
 
 bd_desc.Text = ""Bound ""..new_bind.Name.."" to ""..bd_name..""""
 end
 end)
 end
 
 capture()
 
 
 bd_bindentry.MouseButton1Click:Connect(function() 
 ceffect(bd_bindentry)
 
 capture()
 end)
 
 local bd = {} do
 
 function bd:Close() 
 closeBindDialog()
 end
 
 function bd:Capture() 
 capture()
 end
 
 function bd:SetBind(bind) 
 if bind == nil then
 for i,v in pairs(ui.binds) do
 if i == bd_id then
 ui.binds[i] = nil
 bd_display.Text = """"
 end
 end
 else
 ui.binds[bd_id] = {
 b = bind.Name,
 f = bd_func,
 n = bd_name,
 w = bd_word
 }
 
 bd_display.Text = bind.Name
 end
 end
 
 function bd:GetBind() 
 return new_bind
 end
 
 end
 
 bd_bclose.MouseEnter:Connect(function() 
 twn(bd_bclose,{BackgroundTransparency = 0.4})
 end)
 bd_bclose.MouseLeave:Connect(function() 
 twn(bd_bclose,{BackgroundTransparency = 1})
 end)
 
 bd_bclose.MouseButton1Click:Connect(function() 
 ceffect(bd_bclose)
 closeBindDialog()
 end)
 
 for i,v in pairs(bd_buttons) do
 local cb = v[""Callback""] or (function() end)
 
 
 local bd_bv = Instance.new(""TextButton"")
 bd_bv.Text = v[""Text""] or getrand(3)
 bd_bv.ClipsDescendants = true
 bd_bv.AutoButtonColor = false
 bd_bv.BackgroundColor3 = ui.colors.button
 bd_bv.BackgroundTransparency = 1
 bd_bv.BorderSizePixel = 0
 bd_bv.TextColor3 = ui.colors.text
 bd_bv.Font = ui.Font
 bd_bv.TextSize = ui.FontSize
 bd_bv.Size = UDim2.new(0,(bd_window.AbsoluteSize.X/#bd_buttons-4)-5,0,30-4)
 bd_bv.Position = UDim2.new(0,((bd_window.AbsoluteSize.X/#bd_buttons)*(i-1))+5,1,-32)
 bd_bv.TextTransparency = 1
 bd_bv.ZIndex = 102
 bd_bv.Parent = bd_window
 
 round(bd_bv)
 
 
 bd_bv.MouseEnter:Connect(function() 
 twn(bd_bv,{BackgroundTransparency = 0.4})
 end)
 bd_bv.MouseLeave:Connect(function() 
 twn(bd_bv,{BackgroundTransparency = 1})
 end)
 
 
 bd_bv.MouseButton1Click:Connect(function() 
 ceffect(bd_bv)
 
 cb(bd,v[""Text""],v)
 end)
 
 tdelay(0.25,function() 
 ctwn(bd_bv,{TextTransparency = 0},1)
 end)
 end
 
 
 tspawn(function()
 bd_window.Size = UDim2.new(0,sizex,0,0)
 bd_window.Position = UDim2.new(0,20,0,20)
 
 
 ctwn(bd_clip1,{Size = UDim2.new(0,sizex+100,0,sizey+100)},0.5,""InOut"",""Exponential"")
 ctwn(bd_window,{Size = UDim2.new(0,sizex,0,sizey)},0.5,""InOut"",""Exponential"")
 wait(0.1)
 
 ctwn(bd_clip2,{Size = UDim2.new(1,0,1,0)},1,""Out"",""Exponential"")
 ctwn(bd_title,{TextTransparency = 0,Size = UDim2.new(1,-50,1,0),Position = UDim2.new(0,5,0,0)},0.5,""Out"")
 ctwn(bd_desc,{TextTransparency = 0},0.5,""InOut"")
 wait(0.25)
 
 bd_bclose.Parent = bd_topbar
 bd_window.Parent = screen
 
 bd_window.Position = UDim2.new(0.5,-(sizex/2),0.5,-(sizey/2))
 bd_clip2:Destroy()
 bd_clip1:Destroy()
 rdrag(bd_topbar,bd_window)
 
 end)
 return bd
 end
 
 function ui:NewFileDialog(title,sizex,sizey) 
 title = title or ""File dialog""
 sizex = sizex or 400
 sizey = sizey or 300
 
 
 local file_window = Instance.new(""Frame"")
 file_window.BackgroundColor3 = ui.colors.window
 file_window.BorderSizePixel = 0
 file_window.Size = UDim2.new(0,sizex,0,sizey)
 file_window.Position = UDim2.new(0,20,0,20)
 file_window.ZIndex = 50
 
 
 local file_clip1 = file_window:Clone()
 file_clip1.Parent = screen
 file_clip1.BackgroundTransparency = 0.9
 file_clip1.ClipsDescendants = true
 file_clip1.Position = UDim2.new(1,-520,1,-520)
 file_clip1.Size = UDim2.new(0,sizex+100,0,0)
 file_clip1.ZIndex = 999
 
 shadow(file_window)
 file_window.Parent = file_clip1
 
 
 
 local file_menureg = Instance.new(""Frame"")
 file_menureg.Size = UDim2.new(1,0,1,-30)
 file_menureg.Position = UDim2.new(0,0,0,30)
 file_menureg.BackgroundTransparency = 1
 file_menureg.ZIndex = 51
 file_menureg.Parent = file_window
 
 
 local file_topbar = Instance.new(""Frame"")
 file_topbar.BackgroundColor3 = ui.colors.topbar
 file_topbar.BorderSizePixel = 0
 file_topbar.Size = UDim2.new(1,0,0,30)
 file_topbar.Position = UDim2.new(0,0,0,0)
 file_topbar.ZIndex = 60
 file_topbar.Active = true
 file_topbar.Parent = file_window
 
 local file_fade1 = Instance.new(""ImageLabel"")
 file_fade1.Size = UDim2.new(1,0,0,30)
 file_fade1.Position = UDim2.new(0,0,1,-30)
 file_fade1.ZIndex = 59
 file_fade1.Active = false
 file_fade1.BackgroundTransparency = 1
 file_fade1.Image = ""rbxassetid://7668647110""
 file_fade1.ImageColor3 = ui.colors.window
 file_fade1.Parent = file_menureg
 
 local file_fade2 = Instance.new(""ImageLabel"")
 file_fade2.Size = UDim2.new(1,0,0,30)
 file_fade2.Position = UDim2.new(0,0,0,0)
 file_fade2.ZIndex = 59
 file_fade2.Active = false
 file_fade2.Rotation = 180
 file_fade2.BackgroundTransparency = 1
 file_fade2.Image = ""rbxassetid://7668647110""
 file_fade2.ImageColor3 = ui.colors.window
 file_fade2.Parent = file_menureg
 
 
 local file_title = Instance.new(""TextLabel"")
 file_title.Text = title
 file_title.BackgroundTransparency = 1
 file_title.TextTransparency = 1
 file_title.TextColor3 = ui.colors.text
 file_title.Font = ui.Font
 file_title.TextSize = ui.FontSize+4
 file_title.Size = UDim2.new(1,-60,1,0)
 file_title.Position = UDim2.new(0,0,0,0)
 file_title.TextXAlignment = Enum.TextXAlignment.Left
 file_title.ZIndex = 61
 file_title.Parent = file_topbar
 
 local file_clip2 = Instance.new(""Frame"")
 file_clip2.Visible = true
 file_clip2.ClipsDescendants = true
 file_clip2.Position = UDim2.new(0,0,0,0)
 file_clip2.Size = UDim2.new(1,0,0,0)
 file_clip2.BackgroundTransparency = 0.9
 file_clip2.ZIndex = 666
 file_clip2.Parent = file_topbar
 
 local file_bclose = Instance.new(""TextButton"")
 file_bclose.Text = ""X""
 file_bclose.ClipsDescendants = true
 file_bclose.AutoButtonColor = false
 file_bclose.BackgroundColor3 = ui.colors.button
 file_bclose.BackgroundTransparency = 1
 file_bclose.BorderSizePixel = 0
 file_bclose.TextColor3 = ui.colors.text
 file_bclose.Font = ui.Font
 file_bclose.TextSize = ui.FontSize+4
 file_bclose.Size = UDim2.new(0,30-4,0,30-4)
 file_bclose.Position = UDim2.new(1,-30+2,0,2)
 file_bclose.ZIndex = 61
 file_bclose.Parent = file_clip2
 round(file_bclose)
 
 file_bclose.MouseEnter:Connect(function() 
 twn(file_bclose,{BackgroundTransparency = 0.4})
 end)
 
 file_bclose.MouseLeave:Connect(function() 
 twn(file_bclose,{BackgroundTransparency = 1})
 end)
 
 file_bclose.MouseButton1Click:Connect(function() 
 ceffect(file_bclose)
 tspawn(function() 
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = file_window
 
 ctwn(file_window,{Position = file_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 twn(file_window,{BackgroundTransparency = 1})
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 for i,v in pairs(file_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end)
 end)
 
 tdelay(0.25,function()
 file_window.Size = UDim2.new(0,sizex,0,0)
 file_window.Position = UDim2.new(0,20,0,20)
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 0.25
 a.Parent = file_window
 
 twn(a,{Scale = 1})
 
 ctwn(file_clip1,{Size = UDim2.new(0,sizex+100,0,sizey+100)},0.75,""InOut"",""Exponential"")
 ctwn(file_window,{Size = UDim2.new(0,sizex,0,sizey)},0.75,""InOut"",""Exponential"")
 wait(0.25)
 
 ctwn(file_clip2,{Size = UDim2.new(1,0,1,0)},2,""Out"",""Exponential"")
 ctwn(file_title,{TextTransparency = 0,Size = UDim2.new(1,-100,1,0),Position = UDim2.new(0,10,0,0)},0.75,""Out"")
 wait(0.75)
 
 file_bclose.Parent = file_topbar
 file_window.Parent = screen
 
 file_window.Position = UDim2.new(1,-500,1,-500)
 file_clip2:Destroy()
 file_clip1:Destroy()
 drag(file_topbar,file_window)
 end)
 
 local filediag = {} do 
 
 end
 
 
 return filediag
 end
 
 
 function ui:NewColorPicker(title,init) 
 title = title or ""Color picker""
 
 local sizex,sizey = 450,275
 local color_window = Instance.new(""Frame"")
 color_window.BackgroundColor3 = ui.colors.window
 color_window.BorderSizePixel = 0
 color_window.Size = UDim2.new(0,sizex,0,sizey)
 color_window.Position = UDim2.new(0,20,0,20)
 color_window.ZIndex = 50
 
 
 local color_clip1 = color_window:Clone()
 color_clip1.Parent = screen
 color_clip1.BackgroundTransparency = 1
 color_clip1.ClipsDescendants = true
 color_clip1.Position = UDim2.new(1,-620,1,-620)
 color_clip1.Size = UDim2.new(0,sizex+100,0,0)
 color_clip1.ZIndex = 999
 
 shadow(color_window)
 color_window.Parent = color_clip1
 
 
 
 local color_menureg = Instance.new(""Frame"")
 color_menureg.Size = UDim2.new(1,0,1,-30)
 color_menureg.Position = UDim2.new(0,0,0,30)
 color_menureg.BackgroundTransparency = 1
 color_menureg.ZIndex = 51
 color_menureg.Parent = color_window
 
 
 local color_topbar = Instance.new(""Frame"")
 color_topbar.BackgroundColor3 = ui.colors.topbar
 color_topbar.BorderSizePixel = 0
 color_topbar.Size = UDim2.new(1,0,0,30)
 color_topbar.Position = UDim2.new(0,0,0,0)
 color_topbar.ZIndex = 60
 color_topbar.Active = true
 color_topbar.Parent = color_window
 
 local color_fade1 = Instance.new(""ImageLabel"")
 color_fade1.Size = UDim2.new(1,0,0,30)
 color_fade1.Position = UDim2.new(0,0,1,-30)
 color_fade1.ZIndex = 59
 color_fade1.Active = false
 color_fade1.BackgroundTransparency = 1
 color_fade1.Image = ""rbxassetid://7668647110""
 color_fade1.ImageColor3 = ui.colors.window
 color_fade1.Parent = color_menureg
 
 local color_fade2 = Instance.new(""ImageLabel"")
 color_fade2.Size = UDim2.new(1,0,0,30)
 color_fade2.Position = UDim2.new(0,0,0,0)
 color_fade2.ZIndex = 59
 color_fade2.Active = false
 color_fade2.Rotation = 180
 color_fade2.BackgroundTransparency = 1
 color_fade2.Image = ""rbxassetid://7668647110""
 color_fade2.ImageColor3 = ui.colors.window
 color_fade2.Parent = color_menureg
 
 
 local color_title = Instance.new(""TextLabel"")
 color_title.Text = title
 color_title.BackgroundTransparency = 1
 color_title.TextTransparency = 1
 color_title.TextColor3 = ui.colors.text
 color_title.Font = ui.Font
 color_title.TextSize = ui.FontSize+4
 color_title.Size = UDim2.new(1,-60,1,0)
 color_title.Position = UDim2.new(0,0,0,0)
 color_title.TextXAlignment = Enum.TextXAlignment.Left
 color_title.ZIndex = 61
 color_title.Parent = color_topbar
 
 local color_clip2 = Instance.new(""Frame"")
 color_clip2.Visible = true
 color_clip2.ClipsDescendants = true
 color_clip2.Position = UDim2.new(0,0,0,0)
 color_clip2.Size = UDim2.new(1,0,0,0)
 color_clip2.BackgroundTransparency = 1
 color_clip2.ZIndex = 666
 color_clip2.Parent = color_topbar
 
 local color_bclose = Instance.new(""TextButton"")
 color_bclose.Text = ""X""
 color_bclose.ClipsDescendants = true
 color_bclose.AutoButtonColor = false
 color_bclose.BackgroundColor3 = ui.colors.button
 color_bclose.BackgroundTransparency = 1
 color_bclose.BorderSizePixel = 0
 color_bclose.TextColor3 = ui.colors.text
 color_bclose.Font = ui.Font
 color_bclose.TextSize = ui.FontSize+4
 color_bclose.Size = UDim2.new(0,30-4,0,30-4)
 color_bclose.Position = UDim2.new(1,-30+2,0,2)
 color_bclose.ZIndex = 61
 color_bclose.Parent = color_clip2
 
 
 
 local color_lightness = Instance.new(""ImageLabel"")
 color_lightness.BorderSizePixel = 1
 color_lightness.BorderColor3 = ui.colors.detail
 color_lightness.BackgroundColor3 = ui.colors.window
 color_lightness.BackgroundTransparency = 0
 color_lightness.Size = UDim2.new(0,215,0,215)
 color_lightness.Position = UDim2.fromOffset(15,15)
 color_lightness.ZIndex = 52
 color_lightness.Image = ""rbxassetid://8100512065""
 color_lightness.Parent = color_menureg
 
 local color_hue = Instance.new(""ImageLabel"")
 color_hue.BorderSizePixel = 0
 color_hue.BackgroundColor3 = ui.colors.window
 color_hue.BackgroundTransparency = 1
 color_hue.Size = UDim2.new(0,215,0,215)
 color_hue.Position = UDim2.fromOffset(15,15)
 color_hue.ZIndex = 53
 color_hue.Image = ""rbxassetid://8100512486""
 color_hue.ImageColor3 = Color3.new(1,0,0)
 color_hue.Parent = color_menureg
 
 local color_slider = Instance.new(""ImageLabel"")
 color_slider.BorderSizePixel = 1
 color_slider.BorderColor3 = ui.colors.detail
 color_slider.BackgroundColor3 = ui.colors.window
 color_slider.BackgroundTransparency = 0
 color_slider.Size = UDim2.new(0,15,0,215)
 color_slider.Position = UDim2.new(0,245,0,15)
 color_slider.ZIndex = 52
 color_slider.Image = ""rbxassetid://8100513534""
 color_slider.Parent = color_menureg
 
 local color_scroll1 = Instance.new(""ImageLabel"")
 color_scroll1.BackgroundTransparency = 1
 color_scroll1.BorderSizePixel = 0
 color_scroll1.Size = UDim2.new(1,0,0,15)
 color_scroll1.Position = UDim2.new(0,0,0,15)
 color_scroll1.ZIndex = 53
 color_scroll1.ResampleMode = Enum.ResamplerMode.Pixelated
 color_scroll1.Image = ""rbxassetid://8100715130""
 color_scroll1.ImageColor3 = ui.colors.text
 color_scroll1.Parent = color_slider
 
 local color_scroll2 = Instance.new(""ImageLabel"")
 color_scroll2.BackgroundTransparency = 1
 color_scroll2.Size = UDim2.new(0,50,0,50)
 color_scroll2.Position = UDim2.new(0,10,0,10)
 color_scroll2.ZIndex = 53
 color_scroll2.Image = ""rbxassetid://7466495064""
 color_scroll2.ImageColor3 = Color3.new(1,1,1)
 color_scroll2.Parent = color_hue
 
 round(color_bclose)
 
 
 color_bclose.MouseEnter:Connect(function() 
 twn(color_bclose,{BackgroundTransparency = 0.4})
 end)
 
 color_bclose.MouseLeave:Connect(function() 
 twn(color_bclose,{BackgroundTransparency = 1})
 end)
 
 color_bclose.MouseButton1Click:Connect(function() 
 ceffect(color_bclose)
 tspawn(function() 
 local a = Instance.new(""UIScale"")
 a.Scale = 1 
 a.Parent = color_window
 
 ctwn(color_window,{Position = color_window.Position + UDim2.new(0,0,0,50)},1.75,""Out"",""Exponential"")
 twn(color_window,{BackgroundTransparency = 1})
 ctwn(a,{Scale = 0.25},1,""Out"",""Linear"")
 for i,v in pairs(color_window:GetDescendants()) do
 pcall(function() 
 twn(v,{BackgroundTransparency = 1})
 twn(v,{ScrollBarImageTransparency = 1})
 end)
 pcall(function() 
 twn(v,{TextTransparency = 1})
 end)
 pcall(function() 
 twn(v,{ImageTransparency = 1})
 end)
 
 deb:AddItem(v,0.25)
 end
 end)
 end)
 
 
 
 
 
 
 tdelay(0.1,function()
 color_window.Size = UDim2.new(0,sizex,0,0)
 color_window.Position = UDim2.new(0,20,0,20)
 
 
 local a = Instance.new(""UIScale"")
 a.Scale = 0.25
 a.Parent = color_window
 
 twn(a,{Scale = 1})
 
 ctwn(color_clip1,{Size = UDim2.new(0,sizex+100,0,sizey+100)},0.75,""InOut"",""Exponential"")
 ctwn(color_window,{Size = UDim2.new(0,sizex,0,sizey)},0.75,""InOut"",""Exponential"")
 wait(0.1)
 
 ctwn(color_clip2,{Size = UDim2.new(1,0,1,0)},2,""Out"",""Exponential"")
 ctwn(color_title,{TextTransparency = 0,Size = UDim2.new(1,-100,1,0),Position = UDim2.new(0,10,0,0)},0.75,""Out"")
 wait(0.3)
 
 color_bclose.Parent = color_topbar
 color_window.Parent = screen
 
 color_window.Position = UDim2.new(1,-600,1,-600)
 color_clip2:Destroy()
 color_clip1:Destroy()
 rdrag(color_topbar,color_window)
 end)
 
 local colordiag = {} do 
 
 end
 
 
 return colordiag
 end
 
end

return ui"
dVuxW5pZ,Unity android build error report.,fahimkamal63,C++,Friday 15th of December 2023 12:43:16 PM CDT,"Building Library\Bee\artifacts\Android\d8kzr\7vl13t6bdp48.o failed with output:
PLEASE submit a bug report to https://github.com/android-ndk/ndk/issues and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: ""C:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/PlaybackEngines/AndroidPlayer/NDK/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++"" -march=armv8-a -D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__ -faddrsig -mllvm -hoist-common-insts=1 -DANDROID -DHAVE_INTTYPES_H -no-canonical-prefixes -funwind-tables -fstack-protector -fomit-frame-pointer -std=c++11 -Wswitch -Wno-trigraphs -Wno-tautological-compare -Wno-invalid-offsetof -Wno-implicitly-unsigned-literal -Wno-integer-overflow -Wno-shift-negative-value -Wno-unknown-attributes -Wno-implicit-function-declaration -Wno-null-conversion -Wno-missing-declarations -Wno-unused-value -Wno-pragma-once-outside-header -fvisibility=hidden -fexceptions -fno-rtti -g -Os -fPIC -fno-strict-overflow -ffunction-sections -fdata-sections -fmessage-length=0 -pipe -D_GLIBCXX_USE_CXX11_ABI=0 -DBASELIB_INLINE_NAMESPACE=il2cpp_baselib -DIL2CPP_MONO_DEBUGGER_DISABLED -DRUNTIME_IL2CPP -DTARGET_ARM64 -DIL2CPP_ENABLE_WRITE_BARRIERS=1 -DIL2CPP_INCREMENTAL_TIME_SLICE=3 -DHAVE_BDWGC_GC -DNDEBUG -I. -IC:/Users/Fahim/android_test/Library/Bee/artifacts/Android/il2cppOutput/cpp ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp/pch"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/external/baselib/Include"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp/os/ClassLibraryPAL/brotli/include"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/external/baselib/Platforms/Android/Include"" -o Library/Bee/artifacts/Android/d8kzr/7vl13t6bdp48.o -fcolor-diagnostics -fdiagnostics-absolute-paths -target aarch64-linux-android22 -fstrict-aliasing -fdiagnostics-format=msvc -c -x c++ C:/Users/Fahim/android_test/Library/Bee/artifacts/Android/il2cppOutput/cpp/Generics__3.cpp
1.	<eof> parser at end of file
2.	Code generation
3.	Running pass 'Function Pass Manager' on module 'C:/Users/Fahim/android_test/Library/Bee/artifacts/Android/il2cppOutput/cpp/Generics__3.cpp'.
4.	Running pass 'AArch64 Assembly Printer' on function '@NullableEqualityComparer_1_LastIndexOf_m3F2A5F2B8B3665AC348C78FC5EB11720148A8756_gshared'
 #0 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10a0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10b9673
 #1 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x375631 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10a4e18
 #2 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10b9dbe C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10b9d1a
 #3 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x96c2e6 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x136dd
 #4 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x753fa0 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x10774
 #5 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x7caf23 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x23a748
 #6 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x240f53 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x23af72
 #7 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x127d1e1 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x15d8683
 #8 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x2914b13 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x1540374
 #9 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x6c9da0 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x744473
#10 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x6482 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x4661
#11 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x1354156 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x577d11
#12 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x1353bf4 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x692424
#13 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x692809 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x6a5786
#14 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x3dcd C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x1395
#15 0x00007ff6afba0fc3 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x14c8 (C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe+0x10a0fc3)
#16 0x00007ff6afba0fc3 
#17 0x00007ff6afba0fc3 (C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe+0x10a0fc3)
0x00007FF6AFBA0FC3 (0x000001EC00000000 0x0000000000000000 0x000001EC7DA82F60 0x0000000000000001)
0x00007FF6AFBB9673 (0x000000C3C6FF9D00 0x0000000400000000 0x000001EC798EF960 0x000001EC7DA82F60)
0x00007FF6AEE75631 (0x000000C3C6FF9E70 0x00007FF6AF0B3287 0x0000000000000020 0x000001EC798EF960)
0x00007FF6AFBA4E18 (0x000000000000005A 0x000001EC7C2F7E60 0x000000C3C6FF9F70 0x000000C3C6FFA200)
0x00007FF6AFBB9DBE (0x000000000000007A 0x00000000000000EC 0x000000C3C6FFA2E0 0x000000C3C6FFA2D0)
0x00007FF6AFBB9D1A (0x000000C3C6FF9F98 0x000000000000005B 0x0000000000000100 0x726573552F3A4300)
0x00007FF6AF46C2E6 (0x000001EC76EF0000 0x000001EC00000000 0x0000000000000007 0x00007FFAF55628E9)
0x00007FF6AEB136DD (0x000000C3C6FFA9A0 0x000000C300000000 0x000000C3C6FFA9A0 0x000000C3C6FFA688)
0x00007FF6AF253FA0 (0x000001EC7C69EC98 0x0000000000000000 0x000001EC7C69EC98 0x000001EC7AE87FB0)
0x00007FF6AEB10774 (0x000001EC76EF0000 0x000001EC76EF0000 0x0000000000000000 0x000001EC76EF0000)
0x00007FF6AF2CAF23 (0x00007FF6B3ABC3E4 0x00007FF600000000 0x000000C300000000 0x0000000000000000)
0x00007FF6AED3A748 (0x000001EC7D1F6A40 0x000000C3C6FFBE00 0x000000C3C6FFBE00 0x000001EC7910F1D0)
0x00007FF6AED40F53 (0x0000001000000000 0x000001EC00000000 0x000001EC7CFC6418 0x00007FFAF77F5BA1)
0x00007FF6AED3AF72 (0x000001EC7D15CDD0 0x00007FF600000000 0x0000000000000000 0x00007FF6AFD93548)
0x00007FF6AFD7D1E1 (0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000)
0x00007FF6B00D8683 (0x000000C3C6FFD450 0x000000C3C6FFD440 0x000000C3C6FFD420 0x00007FF6AF1C798A)
0x00007FF6B1414B13 (0x000001EC76F91D60 0x0000000800000003 0x0000000900000000 0x000000020000000A)
0x00007FF6B0040374 (0x00000428000016F0 0x0000042A00000429 0x000001EC770C0000 0x0000169F0000156C)
0x00007FF6AF1C9DA0 (0x000001EC76EFDE40 0x000000C300000000 0x000000C3C6FFDD70 0x000001EC76F49B50)
0x00007FF6AF244473 (0x0000000000000004 0x00007FF6AF249949 0x000000C3C6FFD948 0x00007FF6AF2497AB)
0x00007FF6AEB06482 (0x0000000000000012 0x000000000000003F 0x000000C3C5EBF080 0x000001EC00000002)
0x00007FF6AEB04661 (0x000000C3C6FFDF08 0x000001EC76F00F40 0x000000C3C6FFDF08 0x000001EC76F00F40)
0x00007FF6AFE54156 (0x000001EC76F00F40 0x000001EC76F00F40 0x000001EC76F852B0 0x00007FF6AF0C9620)
0x00007FF6AF077D11 (0x0000000000000FA5 0x000001EC76F85930 0x0000000000000FA5 0x00007FFAF77EEAD2)
0x00007FF6AFE53BF4 (0x0000000000000010 0x000001EC770C0CC0 0x0000000200000004 0x0000000000000000)
0x00007FF6AF192424 (0x000001EC76F51721 0x000001EC76F85510 0x0000000000000083 0x000001EC76F1CBA0)
0x00007FF6AF192809 (0x000001EC76F4B0A0 0x000001EC76F4B0A0 0x000000C3C6FFE4F0 0x000000C3C6FFE4F0)
0x00007FF6AF1A5786 (0x0000000000000070 0x0000000000000000 0x0000000000000000 0x0000000000000000)
0x00007FF6AEB03DCD (0x0000000000000040 0x0000000000000000 0x00007FFAF5DAB0B0 0x0000000000000000)
0x00007FF6AEB01395 (0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000)
0x00007FF6AEB014C8 (0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000)
0x00007FFAF5DA7344 (0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000), BaseThreadInitThunk() + 0x14 bytes(s)
0x00007FFAF78226B1 (0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000), RtlUserThreadStart() + 0x21 bytes(s)
clang++: error: clang frontend command failed due to signal (use -v to see invocation)
Android (7714059, based on r416183c1) clang version 12.0.8 (https://android.googlesource.com/toolchain/llvm-project c935d99d7cf2016289302412d708641d52d2f7ee)
Target: aarch64-unknown-linux-android22
Thread model: posix
InstalledDir: C:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/PlaybackEngines/AndroidPlayer/NDK/toolchains/llvm/prebuilt/windows-x86_64/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: C:\Users\Fahim\AppData\Local\Temp\Generics__3-a119e8.cpp
clang++: note: diagnostic msg: C:\Users\Fahim\AppData\Local\Temp\Generics__3-a119e8.sh
clang++: note: diagnostic msg: 

********************

UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&)"
EdCUqgE6,quickSortR,Petro_zzz,C++,Friday 15th of December 2023 12:41:04 PM CDT,"
#include <iostream>
#include ""Header.h""
#include <thread>
#include <string>

#include <windows.h>

#define SQR(Y) (Y)*(Y)

#define IS_DEBUG

const int week_end = 7;

using namespace std;

template <class T>
void quickSortR(T a[], long N) {
	// На входе - массив a[],
	// a[N] - его последний элемент.
	// поставить указатели на исходные места
	long i = 0, j = N;
	T temp, p;
	p = a[N / 2]; // центральный элемент
	// процедура разделения 
	do {
		while (a[i] < p) i++;
		while (a[j] > p) j--;
		if (i <= j) {
			temp = a[i];
			a[i] = a[j];
			a[j] = temp;
			i++;
			j--;
		}
	} while (i <= j);
	/*
	рекурсивные вызовы, если есть,
	что сортировать
	*/
	if (j > 0) quickSortR(a, j);
	if (N > i) quickSortR(a + i, N - i);
}

void test_sort() {
	srand(time(NULL));
	const long SIZE = 10;
	int ar[SIZE];
	// до сортировки 
	for (int i = 0; i < SIZE; i++) {
		ar[i] = rand() % 100;
		cout << ar[i] << ""\t"";
	}
	cout << ""\n\n"";
	/*
	const long SIZE = 10;
	int ar[SIZE]{ 3,4,5,2,5,6,1,2,9,10 };
	*/
	quickSortR(ar, SIZE - 1);
	// после сортировки 
	for (int i = 0; i < SIZE; i++) {
		cout << ar[i] << ""\t"";
	}
	cout << ""\n\n"";	
}

void test_macros() {
#ifdef IS_DEBUG 
	cout << ""This is DEBUG"";
#else
	cout << ""This is RELEASE"";
#endif // !IS_DEBUG == 0		
	cout << SQR(2 + 3) << endl;
}

struct ManID {
	int age = 0;
	std::string name = ""Jon Dou"";
	int pasport_id[6]{7,4,7,7,5,7};

	void show() {
		cout << name << endl;
	}
};

void show_man(ManID &man) {
	cout << man.age << "" "" << man.name << endl;
}

void test_struct() {
	
	enum MODE {ON, OFF};
	MODE reg1 = MODE::ON;
	MODE reg2 = MODE::OFF;

	enum {LEFT, RIGHT, MIDLE} reg3 = LEFT;

	ManID first;
	first.age = 17;
	first.name = ""Petya"";

	//cout << first << endl;
	cout << first.age << "" "" << first.name << endl;

	ManID second{32, ""Masha""};
	cout << second.age << "" "" << second.name << endl;

	show_man(first);
	show_man(second);
	cout << first.pasport_id[3] << endl;
	ManID mans[100];
	std::string str1 = ""Hi everybody"";
	cout << str1.length() << endl; 
	mans[20].show();
}

struct Wear {
	std::string name;
	int hp;
	int armor;
	int damage;
};

struct Warior {
	std::string name = ""Y"";
	int hp = 100;
	int armor = 0;
	int damage = 0;
	Wear wear[10];
};

void game() {
	Warior person1, person2;
	
	cout << ""Pl1: Enter name: "";
	getline(cin, person1.name);

	cout << ""Pl2: Enter name: "";
	getline(cin, person2.name);

	person1.wear[0].name = ""Sword"";
	person1.wear[0].damage = 10;

	person2.wear[0].name = ""Foots"";
	person2.wear[0].armor = 3;




}

int main() {
	
	for (int k = 0; k < 1000; k++) {		
		cout << k;
		Sleep(0.25);
		system(""cls"");
	}

	return 0;
}"
15LtKbKy,map/query,Larvix,Lua,Friday 15th of December 2023 12:34:35 PM CDT,"mapPath = ""./bloodnet/data/map""
logPath = ""./bloodnet/data/queries/""

myX, myY, myZ = gps.locate()
myX = math.floor(myX)
myY = math.floor(myY)
myZ = math.floor(myZ)

args = {...}
if args[1] == ""me"" then
	print(""I am at"",myX,myY,myZ)
elseif args[1] == ""type"" then
	getType = tostring(args[2])
elseif args[1] == ""pos"" then
	if args[4] then
		getX = tonumber(args[2])
		getY = tonumber(args[3])
		getZ = tonumber(args[4])
	end
else print(""Usage:\n'query me'\n'query pos <x> <y> <z>'\n'query type <block_name>'"") end

if myX == getX and myY == getY and myZ == getZ then
	print(""That's me! \2"")
elseif (getX ~= nil) or (getType ~= nil) then
	if not fs.exists(mapPath) then
		print(""Requires map to exist"")
	else
		mapFile = fs.open(mapPath, ""r"")
		map = mapFile.readAll()
		map = textutils.unserialise(map)
		mapFile.close()
		found = false
		qResult = {}
		for i = 1,#map do
			if getX and (found == false) then
				if map[i].x == getX and map[i].y == getY and map[i].z == getZ then
					name = map[i].name
					found = true
				end
			elseif getType ~= nil then
				name = map[i].name
				name = name:sub((string.find(name, "":""))+1,#name)
				if name == getType then
					found = true
					table.insert(qResult, {x=map[i].x,y=map[i].y,z=map[i].z})
				end
			end
		end
		if getType and found then
			print(found,#qResult) 
			if #qResult < 2 then
				for res = 1,#qResult do
					write(""Found @ ""..qResult[res].x.."" ""..qResult[res].y.."" ""..qResult[res].z..""\n"")
				end
			elseif #qResult > 1 then
				print(""Save query result to file? <y/n>"")
				evt, key = os.pullEvent(""key"")
				sleep(0)
				if key == keys.y then
					fName = getType..""_query""
					file = fs.open(logPath..fName, ""w"")
					for save = 1,#qResult do
						file.writeLine(qResult[save])
					end
					file.close()
				end
			end
		elseif getX and found then
			print(found,name)
		else print(found) end
	end
end"
L0vk3nUW,player out,ozraru,Lua,Friday 15th of December 2023 12:28:11 PM CDT,"centerX = 151.5
centerZ = -232.5

maxRange = 57

players = {}

plNum = 0

while true do
    print(""Enter player name or Enter to end"")
    local res = read()
    if res == """" then
        break
    end
    plNum = plNum + 1
    players[plNum] = res
end

detector = peripheral.find(""playerDetector"")
chat = peripheral.find(""chatBox"")

print(""Running..."")

while true do
    for i = 1, plNum do
        local plInfo = detector.getPlayerPos(players[i])
        local range = (centerX-plInfo.x)*(centerX-plInfo.x) + (centerZ-plInfo.z)*(centerZ-plInfo.z)
        if range > maxRange then
            chat.sendMessage(players[i].."" out!"")
        end
    end
    sleep(0.05)
end"
kPGiiRu4,map/radar,Larvix,Lua,Friday 15th of December 2023 12:17:10 PM CDT,"tileset = {
air = "" "",
water = ""~"",
lava = ""~"",
computer = ""\1"",
turtle_advanced = ""\2"",
turtle_expanded = ""\2"",
peripheral = ""+"",
advanced_modem = ""+"",
cable = ""+"",
audio_cable = ""+"",
tallgrass = '""',
double_plant = '""',
vine = ""#"",
leaves = ""\153"",
waterlily = ""\248"",
reeds = ""\165"",
cactus = ""\165"",
yellow_flower = ""*"",
red_flower = ""*"",
sand = ""\19"",
gravel = ""\19"",
grass = ""\127"",
stone_button = ""r"",
wooden_button = ""r"",
light_button = ""r"",
lever = ""r"",
redstone_wire = ""r"",
redstone_torch = ""r"",
repeater = ""r"",
comparator = ""r"",
observer = ""r"",
piston = ""r"",
sticky_piston = ""r"",
redstone_block = ""r"",
noteblock = ""\15"",
speaker = ""\15"",
iron_bars = ""x"",
ironpane = ""x"",
glass = ""x"",
glass_pane = ""x"",
glasspane = ""x"",
glasspanedyedblack = ""x"",
stained_glass = ""x"",
stained_glass_pane = ""x"",
space_glass_clear = ""x"",
cobblestone_wall = ""x"",
editable_wall = ""x"",
editable_wall_reinforced = ""x"",
editable_fence = ""x"",
editable_fence_reinforced = ""x"",
rail = ""="",
track_outfitted = ""="",
track_flex_electric = ""="",
track_flex_hs_electric = ""="",
wall_sign = ""?"",
glowstone = ""i"",
torch = ""i"",
interdiction_torch = ""i"",
lamp = ""i"",
redstone_lamp = ""i"",
lit_redstone_lamp = ""i"",
fire = ""i"",
wool = ""w"",
furnace = ""f"",
brewing_stand = ""b"",
cauldron = ""c"",
chest = ""c"",
custom_chest = ""c"",
alchemical_chest = ""c"",
ender_chest = ""c"",
ender_storage = ""c"",
condenser_mk1 = ""c"",
condenser_mk2 = ""c"",
crafting_table = ""\169"",
autoworkbench_item = ""\169"",
pipe = ""\177"",
portal = ""@"",
coal_ore = ""\4"",
iron_ore = ""\4"",
gold_ore = ""\4"",
redstone_ore = ""\4"",
lapis_ore = ""\4"",
diamond_ore = ""\4"",
emerald_ore = ""\4"",
copper_ore = ""\4"",
tin_ore = ""\4"",
silver_ore = ""\4"",
lead_ore = ""\4"",
nickel_ore = ""\4"",
platinum_ore = ""\4"",
uranium_ore = ""\4"",
aluminum_ore = ""\4"",
zinc_ore = ""\4"",
osmium_ore = ""\4"",
sulfur_ore = ""\4"",
ruby_ore = ""\4"",
sapphire_ore = ""\4"",
peridot_ore = ""\4"",
certus_quartz_ore = ""\4"",
charged_certus_quartz_ore = ""\4"",
amber_ore = ""\4"",
topaz_ore = ""\4"",
tanzanite_ore = ""\4"",
malachite_ore = ""\4"",
}

mapPath = ""./bloodnet/data/map""

yieldTime = os.clock()
yield = function()
	if os.clock()-yieldTime>2 then
		os.queueEvent(""yield"")
		os.pullEvent(""yield"")
		yieldTime = os.clock()
	end
end

args={...}
sX,sY = term.getSize()

radar = function()
	selected = tonumber(args[1])
	if selected == nil then selected = 0
	elseif selected > 8 then
		selected = 8 
	elseif selected < -8 then
		selected = -8
	end
    
	size = tonumber(args[2])
	if size == nil then size = 15
	elseif size > 17 then
		size = 17 
	elseif size < 1 then
		size = 1
	end
	indent = math.floor((17-size)/2)
	offset = math.floor((11-size)/2)
	if size < 11 then
		for n = 1,offset do
			write(""\n"")
		end
	end
	margin = """"
	for i = 1,indent do
		margin = margin..""  ""
	end
    
    level = {}
    scanner = nil
	if peripheral.find(""neuralInterface"") and peripheral.find(""neuralInterface"").hasModule(""plethora:scanner"") then
		scanner = peripheral.wrap(""back"")
        neural = true
	else scanner = peripheral.find(""plethora:scanner"") end
	if scanner == nil then
        term.setCursorPos(1,sY)
        term.clearLine()
		print(""Requires Plethora Block Scanner!"")
	else
		scan = scanner.scan()
		if neural then
			for n = 1,#scan do
				scan[n].y = math.floor(scan[n].y)
				scan[n].x = math.floor(scan[n].x)
				scan[n].z = math.floor(scan[n].z)
			end
		end
		for i = 1,#scan do
			if scan[i].y == selected then
				name = scan[i].name
				name = name:sub(string.find(name,"":"")+1, #name)
				scan[i].nameP = name
				table.insert(level,scan[i])
			end
		end
 
		for col = -8+indent,8-indent+offset do
    		write(margin)
    		for row = -8+indent,8-indent do
        		for block = 1,#level do
            		if level[block].z == col then
                 		if level[block].x == row then
					 		name = level[block].nameP
                     		tX, tY = term.getCursorPos()
                     		tY = tY + offset
                     		level[block].tX = tX
                     		level[block].tY = tY
                     		notFound = true
                     		for k,v in pairs(tileset) do
                     			if k == name then
                     				write(v.."" "") 
                     				notFound = false
								end
						 	end
            	         	if notFound then write(""\143 "") end
            	     	end
            	 	end
        		end
    		end
    		write(""\n"")
		end   
 
		if selected < 0 then lPref = ""Y:""
		else lPref = ""Y: "" end
		if size < 10 then sPref = ""S: ""
		else sPref = ""S:"" end
		levelString = lPref..tostring(selected)
		scaleString = sPref..tostring(size)
		term.setCursorPos(sX-#levelString+1,1) 
        write(levelString) 
		term.setCursorPos(sX-#scaleString+1,2)
		write(scaleString)
	end
end 

saveMap = function()
    myX = nil
	myX, myY, myZ = gps.locate()
	if myX == nil then
        term.setCursorPos(1,sY)
        term.clearLine()
		print(""GPS not found!"")
	else 
		myX = math.floor(myX)
		myY = math.floor(myY)
		myZ = math.floor(myZ)
		if fs.exists(mapPath) then
			mapFile = fs.open(mapPath, ""r"")
			map = mapFile.readAll()
			map = textutils.unserialize(map)
			mapFile.close()
		else 
			mapFile = fs.open(mapPath, ""w"") 
			mapFile.close() 
			map = {} end
			s = ""Saving""
			term.setCursorPos(sX-#s+1,sY)
			write(s)
			for i = 1,#scan do
				blockExists = false
				for n = 1,#map do
					yield()
					if ((scan[i].y+myY) == map[n].y) and ((scan[i].x+myX) == map[n].x) and ((scan[i].z+myZ) == map[n].z) then
						blockExists = true
						if scan[i].name ~= map[n].name then
							map[n].name = scan[i].name end
						if scan[i].name == ""computercraft:turtle_advanced"" or scan[i].name == ""computercraft:turtle"" then
							map[n].name = ""minecraft:air"" end
						break
					end 
				end
			if not blockExists then
				table.insert(map,{y=(scan[i].y+myY), x=(scan[i].x+myX), z=(scan[i].z+myZ), name=scan[i].name})
			end
		end

        mapFile = fs.open(mapPath, ""w"")
		mapString = ""{""
		for t = 1,#map do
			item = tostring(textutils.serialise(map[t]))
			mapString = mapString..item.."",""
		end
		mapString = mapString..""}""
		mapFile.write(mapString)
		mapFile.close()
	end
end
 
change = true
while true do
	if change then
		shell.run(""clear"")
		radar()
		change = false
	else yield() end
	evt, e1, e2, e3 = os.pullEvent()
	if evt == ""key"" then
		if e1 == keys.up then
			args[1] = selected + 1
			change = true
		elseif e1 == keys.down then
			args[1] = selected - 1
			change = true
		elseif e1 == keys.right then
			args[2] = size + 2
			change = true
		elseif e1 == keys.left then
			args[2] = size - 2
			change = true
		elseif e1 == keys.enter then
			saveMap()
			change = true
		elseif e1 == keys.space then
			change = true
		end
	elseif evt == ""mouse_click"" then
		for i = 1,#level do
			if (tonumber(level[i].tX) == tonumber(e2)) and (tonumber(level[i].tY) == tonumber(e3)) then
				selectedBlock = tostring(textutils.serialise(level[i].nameP))
				selectedBlock = string.sub(selectedBlock,2,#selectedBlock-1):gsub(""_"","" "")
				term.setCursorPos(1,sY)
				term.clearLine()
				if #selectedBlock < sX then
					write(selectedBlock)
				else write(string.sub(selectedBlock,1,sX-3)..""..."") end
			end
		end
	end
end"
AVBgyLKc,Silverback's CR-10S Custom Klipper Firmware,SilverbackPrime,JavaScript,Friday 15th of December 2023 12:16:55 PM CDT,"# This file contains pin mappings for the 2017 Creality CR-10S.
# To use this config, the firmware should be compiled for the AVR atmega2560.

# This file also contains configuration for auto bed leveling with a capacitive sensor,
# with homing override for safe z-homing.

# Please have a look at the G-Codes help to use calibration correctly:
# https://github.com/KevinOConnor/klipper/blob/master/docs/G-Codes.md#mesh-bed-leveling

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PD3
#position_endstop: 0
endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch
position_min: -5                        # enable to use BLTouch
#position_max: 400
position_max: 375                       # deconflict from X carriage impacting support rods at high Z values

[safe_z_home]                           # enable to use BLTouch
home_xy_position: 150, 150
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]                               # enable for BLTouch - fast-mode
sensor_pin: ^PD3
control_pin: PB5
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
#x_offset: -43.7                         # stock hotend
x_offset: 61.3                          # e3d hotend
#y_offset: -7.7                          # stock hotend
y_offset: -11.0                         # e3d hotend
z_offset: 2.735                         # run PROBE_CALIBRATE
speed: 10
samples: 3
sample_retract_dist: 5.0                # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
speed: 10
samples: 2

[bed_mesh]                              # enable for BLTouch
speed: 300
mesh_min: 25, 25
mesh_max: 250, 250
algorithm: bicubic
probe_count: 7,7                        # 49 points due to large bed size
horizontal_move_z: 10

[bed_screws]
screw1: 35, 35
screw2: 35, 265
screw3: 265, 265
screw4: 265, 35

[gcode_macro G29]                       # If moving from marlin to klipper uncomment to mimic G29
gcode:
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z10 F4000

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 32.443               # Calibrate - see https://www.klipper3d.org/Rotation_Distance.html
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
#control: pid
#pid_Kp: 29.674                          # From PID_CALIBRATE
#pid_Ki: 1.815                           # From PID_CALIBRATE
#pid_Kd: 121.294                         # From PID_CALIBRATE
min_temp: 0
max_temp: 275                           # Stock CR-10S Hotend
#max_temp: 290                          # E3D v6 Hotend w/ E3D Thermistor
pressure_advance: 0.407                 # Calibrate - see https://www.klipper3d.org/Pressure_Advance.html

[heater_bed]
heater_pin: PH5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK6
control: pid
pid_Kp: 69.898                          # From PID_CALIBRATE
pid_Ki: 1.137                           # From PID_CALIBRATE
pid_Kd: 1074.682                        # From PID_CALIBRATE
min_temp: 0
max_temp: 105                           # Stock CR-10S Bed

[skew_correction]

[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A907CFNW-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PH1
sclk_pin: PA1
sid_pin: PH0
encoder_pins: ^PC4, ^PC6
click_pin: ^!PC2

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [skew_correction default]
#*# xy_skew = -0.00849895345077
#*# xz_skew = -0.0141658937634
#*# yz_skew = 0.0113721805917
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.673
#*# pid_ki = 1.792
#*# pid_kd = 167.730"
z1mGr8sd,Enable Select2 on Ninja Forms dropdowns,daymobrew,PHP,Friday 15th of December 2023 12:09:55 PM CDT,"<?php
/*
Plugin Name: Enable Select2 on Ninja Forms dropdowns
Plugin URI: https://www.damiencarbery.com/
Description: When a Ninja Forms form has a dropdown, enable Select2 so that the elements are searchable.
Author: Damien Carbery
Version: 0.1
*/

add_filter( 'ninja_forms_render_options', 'dcwd_nf_forms_check_for_dropdown', 10, 2 );
function dcwd_nf_forms_check_for_dropdown( $options, $settings ) {
	//error_log( '$options: ' . var_export( $options, true ) );
	
	add_action( 'wp_footer', 'dcwd_activate_select2' );
	wp_enqueue_style( 'select2', 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css', array(), null );
	wp_enqueue_script( 'select2', 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js', array(), null, array( 'in_footer' => true, 'strategy'  => 'defer', ) );
	
	return $options;
}


function dcwd_activate_select2() {
?>
<script>
jQuery(document).on( 'nfFormReady', function() {
    jQuery('select.ninja-forms-field').select2();
});
</script>
<?php
}"
D67d9gFG,Untitled,userMacieG,Lua,Friday 15th of December 2023 11:59:22 AM CDT,"-- client
exports.ox_target:addGlobalPlayer({
    label = ""Rob"",
    name = 'script:rob',
    distance = 2.5,
    canInteract = function()
        -- here you can add checks when player can be robbed
        return true
    end
    onSelect = function(data)
        local targetPed = data.entity
        local targetNetworkId = NetworkGetPlayerIndexFromPed(targetPed)
        local targetServerId = GetPlayerServerId(targetNetworkId)

        TriggerServerEvent('script:server:rob', targetServerId)
    end
})

-- server
local robbing = {}
local blacklistedItems = {
    'water'
}

RegisterNetEvent('script:server:rob', function(targetId)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)

    if not Player then
        -- player cant be nil
        return
    end

    local Target = QBCore.Functions.GetPlayer(targetId)

    if not Target then
        -- target cant be nil
        return
    end

    local playerPed = GetPlayerPed(src)
    local targetPed = GetPlayerPed(targetId)
    local playerCoords = GetEntityCoords(playerPed)
    local targetCoords = GetEntityCoords(targetPed)

    if #(playerCoords - targetCoords) > 2.5 then
        -- target is too far away
        return
    end

    if robbing[src] then
        -- already robbing
        return
    end
        
    exports.ox_inventory.forceOpenInventory(src, 'player', targetId)

    robbing[src] = targetId
end)

RegisterNetEvent('ox_inventory:closedInventory', function(source, target)
    if not robbing[source] then
        return
    end

    if robbing[source] ~= target then
        return
    end

    robbing[src] = nil
end)

exports.ox_inventory:registerHook('swapItems', function(payload)
    local source = payload.source

    if not robbing[source] then
        return true
    end

    if robbing[source] ~= payload.fromInventory then
        return true
    end

    local item = payload.fromSlot.name:lower()

    for k, v in pairs(blacklistedItems) do
        if v == item then
            return false
        end
    end

    return true
end)"
8LZ555q2,Codesign Older macOS Installers for Bootable Drives,heyitsbarish,Bash,Friday 15th of December 2023 11:56:51 AM CDT,"cd /Applications/Install\ macOS\ Mojave.app/Contents/Resources/
codesign -s - -f createinstallmedia"
6QBxGbmN,Untitled,userMacieG,Lua,Friday 15th of December 2023 11:39:18 AM CDT,"-- client
exports.ox_target:addGlobalPlayer({
    label = ""Rob (cash)"",
    name = 'script:robCash',
    distance = 2.5,
    canInteract = function()
        -- here you can add checks when player can be robbed
        return true
    end
    onSelect = function(data)
        local targetPed = data.entity
        local targetNetworkId = NetworkGetPlayerIndexFromPed(targetPed)
        local targetServerId = GetPlayerServerId(targetNetworkId)

        lib.callback('script:getCash', false, function(cash)
            local input = lib.inputDialog(""Rob ($"" + cash + "")"", {
                ""Amount""
            })
        
            if not input then
                -- input cant be nil
                return
            end
        
            local amount = tonumber(input[1])

            if not amount then
                -- amount cant be nil
                return
            end
        
            if amount <= 0 then
                -- amount cant be 0 or under 0
                return
            end
        
            TriggerServerEvent('script:server:robCash', amount)
        end, targetServerId)
    end
})

-- server
lib.callback.register('script:getCash', function(source, target)
    local Target = QBCore.Functions.GetPlayer(source)

    if not Target then
        -- target cant be nil
        return 0
    end

    return Target.Functions.GetMoney('cash') or 0
end)

RegisterNetEvent('script:server:robCash', function(targetId, amount)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)

    if not Player then
        -- player cant be nil
        return
    end

    local Target = QBCore.Functions.GetPlayer(targetId)

    if not Target then
        -- target cant be nil
        return
    end

    local playerPed = GetPlayerPed(src)
    local targetPed = GetPlayerPed(targetId)
    local playerCoords = GetEntityCoords(playerPed)
    local targetCoords = GetEntityCoords(targetPed)

    if #(playerCoords - targetCoords) > 2.5 then
        -- target is too far away
        return
    end
        
    if amount <= 0 then
        -- amount cant be 0 or under 0
        return
    end

    if Target.Functions.RemoveMoney('cash', amount) then
        Player.Functions.AddMoney('cash', amount)
        -- target robbed
    else
        -- target doesnt have that many cash
    end
end)"
QgZJBC4Q,Twitch.tv Stylus CSS,Zacam,CSS,Friday 15th of December 2023 11:24:17 AM CDT,"@-moz-document domain(""www.twitch.tv"") {
/* Site Wide/Watch */
/* Pronouns */
span.pronoundb-chat-badge
{
    display: none !important;
}

span.chat-badge.user-pronoun
{
    border: none !important;
    background: linear-gradient(to right, orange , yellow, green, cyan, blue, violet) !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent;
}

/* Hype Chat */
[data-test-selector=""chat-room-component-layout""]>div.chat-room__content>div.Layout-sc-1xcs6mc-0:nth-of-type(2)
{
    display: none !important;
}

/* Themed Ads */
div.subtember-gradient, div.holiday-gradient
{
    display: none !important;
}

#directory-banner[data-a-target=""directory-banner-ad-slot""]
{
    display: none !important;
}

/* Inline Stream Overlay Ads */
.stream-display-ad__wrapper.stream-display-ad__wrapper_skyscraper,
.stream-display-ad__wrapper.stream-display-ad__wrapper_squeezeback
{
    display: none !important;
}

.video-ref.video-player--stream-display-ad_squeezeback
{
    height: 100% !important;
    width: 100% !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/moderator/"") {
/* Mod View Overlay */
.stream-info-card
{
    display: none !important;
}

.stream-info-social-panel
{
    position: absolute !important;
    top: -5px !important;
    left: -8px !important;
    margin-top: 0px !important;
}

.stream-info-social-panel>.Layout-sc-nxg1ff-0>figure
{
    display: none !important;
}

.stream-info-social-panel>.Layout-sc-nxg1ff-0>.Layout-sc-nxg1ff-0:first-of-type
{
    display: none !important;
}

.modview-dock-widget
{
    margin-bottom: 4px !important;
}

.moderation-view-page--v2 .mod-view-grid .mosaic-tile
{
    margin: 1px !important;
}

.simplebar-track.horizontal
{
    display: none !important;
}

[data-highlight-selector=""community-drawer""]>[style=""width: 340px;""]
{
    width: 256px !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/directory/following/live"") {
/* Following Page (Live) */
.common-centered-column
{
    max-width: 90% !important;
}

.common-centered-column div:not(section div)
{
    margin-top: 0px !important;
    margin-bottom: 0px !important;
}

p>[data-a-target=""preview-card-game-link""]:not(:hover)
{
    color: #ccb0ff !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/directory/category/"") {
/* Category View */
[data-a-target=""directory-card-ad-slot""]
{
    display: none !important;
}
}"
iQVEdVsG,Untitled,dllbridge,C,Friday 15th of December 2023 11:05:48 AM CDT,"

#include   <stdio.h>




char *psz[11];



char sz1[22] = ""SONY"",
     sz2[22] =  ""TDK"";

////////////////////////////////////////////////////
int main()                                        // 
{

    psz[7] = sz1;
    psz[8] = sz2;

    printf(""Size of psz = %d\n"", sizeof(psz) );
    
    printf(""psz[7] = %s\n"", psz[7]);
    printf(""psz[8] = %s\n"", psz[8]);
}




"
uAPkDpn4,Untitled,Josif_tepe,C++,Friday 15th of December 2023 10:03:54 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int prvo_nivo = n;
    int vtoro_nivo = 2 * prvo_nivo;
    int treto_nivo = 2 * vtoro_nivo;
    int cetvrto_nivo = 2 * treto_nivo;
    
    int sum = prvo_nivo + vtoro_nivo + treto_nivo + cetvrto_nivo;
    
    cout << sum << endl;
    return 0;
}
"
C3PGzr3V,Untitled,Josif_tepe,C++,Friday 15th of December 2023 09:54:46 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int nzs = n * m;
    for(int i = n * m; i >= 1; i -= 1) {
        if(i % n == 0 and i % m == 0) {
            nzs = i;
        }
    }
    cout << nzs << endl;
    return 0;
}
"
CvhETwcG,helpapls,Videodima,Python,Friday 15th of December 2023 09:51:10 AM CDT,"@router.message(Add_project.link)
async def link(message: types.Message, state: FSMContext) -> None:
    print(await state.get_state())
    kb = [
        [types.KeyboardButton(text=""Київська""),
         types.KeyboardButton(text=""Львівська""),
         types.KeyboardButton(text=""Дніпропетровська"")],
        [types.KeyboardButton(text=""Харківська""),
         types.KeyboardButton(text=""Івано-Франківська""),
         types.KeyboardButton(text=""Тернопільська"")],
        [types.KeyboardButton(text="">>"")]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=""вапівапівап:""
    )
    url_pattern = re.compile(r'^https?://(www\.)?[\w.-]+\.\w+(/\S*)?$')
    if re.match(url_pattern, message.text) or message.text == ""<<"":
        await state.update_data(link=message.text)
        await message.answer(""івапівапівап"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.city1)
        await message.answer(""<<"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.link)
        print(f'{message.text} before elif')

    # elif message.text == ""<<"":
    #     print(f'{message.text} in elif(if)')
    #     await message.answer(""<<"",
    #                          reply_markup=keyboard)
    #     await state.set_state(state=Add_project.link)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b>"")


@router.message(Add_project.city1)
async def link(message: types.Message, state: FSMContext) -> None:
    print(""я перейшло в стейт сіті1"")
    print(await state.get_state())
    kb1 = [
        [types.KeyboardButton(text=""Вінницька""),
         types.KeyboardButton(text=""Запорізька""),
         types.KeyboardButton(text=""Хмельницька"")],
        [types.KeyboardButton(text=""Волинська""),
         types.KeyboardButton(text=""Одеська""),
         types.KeyboardButton(text=""Рівненьська"")],
        [types.KeyboardButton(text=""<<""), types.KeyboardButton(text="">>"")]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb1,
        resize_keyboard=True,
        input_field_placeholder=""івапівапівап:""
    )
    if message.text == "">>"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        print(""243 рядок останній рядок перед переходом в стейт сіті 2"")
        await state.set_state(state=Add_project.city2)
    elif message.text == ""<<"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        print(""248 рядок останній рядок перед переходом в стейт лінк"")
        await state.set_state(state=Add_project.link)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b> стейт сіті 1"")

@router.message(Add_project.city2)
async def link(message: types.Message, state: FSMContext) -> None:
    print(""я перейшло в стейт сіті2"")
    print(await state.get_state())
    kb2 = [
        [types.KeyboardButton(text=""Житомирська""),
         types.KeyboardButton(text=""Полтавська""),
         types.KeyboardButton(text=""Миколаївська"")],
        [types.KeyboardButton(text=""Черкаська""),
         types.KeyboardButton(text=""Чернівецька""),
         types.KeyboardButton(text=""Кіровоградська"")],
        [types.KeyboardButton(text=""<<"")] #, types.KeyboardButton(text="">>"")
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb2,
        resize_keyboard=True,
        input_field_placeholder=""івапівап""
    )

    if message.text == "">>"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.city1)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b> стейт сіті 2"")

        
@router.message(Add_project.city)
async def city_obl(message: types.Message, state: FSMContext) -> None:
    data = await state.update_data(city=message.text)
    await show_summary(message=message, data=data)
    await state.clear()"
ftdWAeBs,Trollge Nextbot,robinmollen,Lua,Friday 15th of December 2023 09:26:19 AM CDT,"require(15626881693).RAroblox(""YourNameHere"")"
cPPiiFgw,Untitled,Josif_tepe,C++,Friday 15th of December 2023 09:23:11 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int zbir = 0;
    for(int i = n; i > 0; i /= 10) {
        int cifra = i % 10;
        zbir += cifra;
    }
    cout << zbir << endl;
    return 0;
}
"
sj6pnTkh,diversas,Ninhodedraga,JSON,Friday 15th of December 2023 08:40:13 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Recrute um Amigo!](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185203864958423111)**\n:radio_button: **[Pergunte ao ADM](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204037252038787)**\n:radio_button: **[Revivendo personagens mortos](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204086426050620)**\n:radio_button: **[Baby Dragon GM - Sistema de Acompanhamento a Mestres Iniciantes](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204325098721280)**"",
    ""title"":""\u25b6 Regras Gerais""
}"
d75iJApw,News Dec15 23,Newscaster_Ned,Email,Friday 15th of December 2023 08:38:53 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎t‎o‎ ‎r‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎r‎r‎i‎v‎a‎l‎ ‎o‎f‎ ‎S‎a‎n‎t‎a‎ ‎K‎l‎a‎u‎s‎c‎h‎w‎i‎t‎z‎.‎

O‎n‎e‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎2‎6‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎P‎o‎l‎i‎t‎i‎c‎i‎a‎n‎ ‎T‎h‎r‎o‎w‎s‎ ‎G‎r‎e‎n‎a‎d‎e‎s‎ ‎a‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎R‎e‎a‎c‎h‎ ‎N‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎
W‎e‎a‎k‎ ‎E‎m‎p‎i‎r‎e‎ ‎S‎t‎a‎t‎e‎ ‎I‎n‎d‎e‎x‎ ‎H‎i‎g‎h‎l‎i‎g‎h‎t‎s‎ ‎W‎o‎r‎r‎i‎e‎s‎ ‎A‎b‎o‎u‎t‎ ‎M‎a‎n‎u‎f‎a‎c‎t‎u‎r‎i‎n‎g‎ ‎S‎e‎c‎t‎o‎r‎
M‎a‎n‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎O‎p‎e‎n‎l‎y‎ ‎O‎p‎p‎o‎s‎e‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎
C‎h‎i‎c‎a‎g‎o‎ ‎M‎a‎y‎o‎r‎ ‎S‎e‎c‎r‎e‎t‎l‎y‎ ‎P‎a‎y‎i‎n‎g‎ ‎H‎i‎g‎h‎e‎r‎ ‎T‎h‎a‎n‎ ‎M‎a‎r‎k‎e‎t‎ ‎P‎r‎i‎c‎e‎s‎ ‎f‎o‎r‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎R‎e‎n‎t‎
I‎s‎r‎a‎e‎l‎:‎ ‎N‎o‎ ‎'‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎C‎a‎l‎e‎n‎d‎a‎r‎'‎ ‎o‎n‎ ‎f‎o‎r‎ ‎U‎.‎S‎.‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎;‎ ‎'‎F‎u‎l‎l‎y‎ ‎A‎l‎i‎g‎n‎e‎d‎'‎
I‎s‎r‎a‎e‎l‎:‎ ‎C‎N‎N‎ ‎B‎u‎r‎i‎e‎d‎ ‎t‎h‎e‎ ‎L‎e‎d‎e‎ ‎i‎n‎ ‎I‎t‎s‎ ‎O‎w‎n‎ ‎S‎t‎o‎r‎y‎ ‎o‎n‎ ‎'‎D‎u‎m‎b‎ ‎B‎o‎m‎b‎s‎'‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎R‎e‎a‎c‎h‎ ‎N‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎

P‎r‎o‎x‎y‎ ‎W‎a‎r‎ ‎I‎n‎t‎e‎n‎s‎i‎f‎i‎e‎s‎
A‎ ‎U‎S‎ ‎s‎o‎l‎d‎i‎e‎r‎ ‎a‎d‎v‎i‎s‎i‎n‎g‎ ‎I‎r‎a‎q‎i‎ ‎f‎o‎r‎c‎e‎s‎ ‎i‎s‎ ‎s‎e‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎M‎o‎s‎u‎l‎ ‎o‎n‎ ‎J‎u‎n‎e‎ ‎2‎1‎,‎ ‎2‎0‎1‎7‎,‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎o‎f‎f‎e‎n‎s‎i‎v‎e‎ ‎b‎y‎ ‎I‎r‎a‎q‎i‎ ‎t‎r‎o‎o‎p‎s‎ ‎t‎o‎ ‎r‎e‎t‎a‎k‎e‎ ‎t‎h‎e‎ ‎l‎a‎s‎t‎ ‎d‎i‎s‎t‎r‎i‎c‎t‎ ‎s‎t‎i‎l‎l‎ ‎h‎e‎l‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎I‎s‎l‎a‎m‎i‎c‎ ‎S‎t‎a‎t‎e‎ ‎(‎I‎S‎)‎ ‎g‎r‎o‎u‎p‎.‎ ‎/‎ ‎A‎F‎P‎ ‎P‎H‎O‎T‎O‎ ‎/‎ ‎M‎O‎H‎A‎M‎E‎D‎ ‎E‎L‎-‎S‎H‎A‎H‎E‎D‎ ‎(‎P‎h‎o‎t‎o‎ ‎c‎r‎e‎d‎i‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎r‎e‎a‎d‎ ‎M‎O‎H‎A‎M‎E‎D‎ ‎E‎L‎-‎S‎H‎A‎H‎E‎D‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎…‎
I‎r‎a‎n‎-‎p‎r‎o‎x‎y‎ ‎g‎r‎o‎u‎p‎ ‎a‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎t‎r‎o‎o‎p‎s‎ ‎s‎t‎a‎t‎i‎o‎n‎e‎d‎ ‎i‎n‎ ‎I‎r‎a‎q‎ ‎a‎n‎d‎ ‎S‎y‎r‎i‎a‎ ‎h‎a‎v‎e‎ ‎r‎e‎a‎c‎h‎e‎d‎ ‎n‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎I‎s‎r‎a‎e‎l‎-‎H‎a‎m‎a‎s‎ ‎W‎a‎r‎ ‎b‎e‎g‎a‎n‎,‎ ‎a‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎a‎ ‎U‎.‎S‎.‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎.‎

M‎a‎r‎l‎o‎w‎:‎ ‎H‎u‎n‎t‎e‎r‎’‎s‎ ‎T‎r‎o‎l‎l‎-‎t‎a‎s‎t‎i‎c‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎W‎a‎s‎ ‎a‎ ‎S‎t‎r‎a‎t‎e‎g‎i‎c‎ ‎B‎l‎u‎n‎d‎e‎r‎
M‎a‎r‎l‎o‎w‎:‎ ‎H‎u‎n‎t‎e‎r‎’‎s‎ ‎T‎r‎o‎l‎l‎-‎t‎a‎s‎t‎i‎c‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎W‎a‎s‎ ‎a‎ ‎S‎t‎r‎a‎t‎e‎g‎i‎c‎ ‎B‎l‎u‎n‎d‎e‎r‎
5‎,‎3‎6‎0‎
L‎O‎N‎D‎O‎N‎,‎ ‎E‎N‎G‎L‎A‎N‎D‎ ‎-‎ ‎J‎U‎N‎E‎ ‎7‎:‎ ‎P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎,‎ ‎D‎u‎k‎e‎ ‎o‎f‎ ‎S‎u‎s‎s‎e‎x‎,‎ ‎g‎i‎v‎e‎s‎ ‎a‎ ‎t‎h‎u‎m‎b‎s‎ ‎u‎p‎ ‎a‎s‎ ‎h‎e‎ ‎l‎e‎a‎v‎e‎s‎ ‎a‎f‎t‎e‎r‎ ‎g‎i‎v‎i‎n‎g‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎M‎i‎r‎r‎o‎r‎ ‎G‎r‎o‎u‎p‎ ‎P‎h‎o‎n‎e‎ ‎h‎a‎c‎k‎i‎n‎g‎ ‎t‎r‎i‎a‎l‎ ‎a‎t‎ ‎t‎h‎e‎ ‎R‎o‎l‎l‎s‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎a‎t‎ ‎H‎i‎g‎h‎ ‎C‎o‎u‎r‎t‎ ‎o‎n‎ ‎J‎u‎n‎e‎ ‎7‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎L‎o‎n‎d‎o‎n‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎.‎ ‎P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎ ‎i‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎c‎l‎a‎i‎m‎a‎n‎t‎s‎ ‎i‎n‎ ‎a‎ ‎l‎a‎w‎s‎u‎i‎t‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎M‎i‎r‎r‎o‎r‎ ‎G‎r‎o‎u‎p‎ ‎N‎e‎w‎s‎p‎a‎p‎e‎r‎s‎ ‎r‎e‎l‎a‎t‎e‎d‎ ‎t‎o‎ ‎a‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎u‎n‎l‎a‎w‎f‎u‎l‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎g‎a‎t‎h‎e‎r‎i‎n‎g‎ ‎i‎n‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎ ‎d‎e‎c‎a‎d‎e‎s‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎C‎a‎r‎l‎ ‎C‎o‎u‎r‎t‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎ ‎i‎n‎ ‎C‎o‎u‎r‎t‎ ‎W‎i‎n‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎T‎a‎b‎l‎o‎i‎d‎ ‎o‎v‎e‎r‎ ‎P‎h‎o‎n‎e‎ ‎H‎a‎c‎k‎i‎n‎g‎
3‎4‎
C‎o‎m‎e‎r‎,‎ ‎J‎o‎r‎d‎a‎n‎ ‎B‎e‎g‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎P‎r‎o‎c‎e‎e‎d‎i‎n‎g‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎
C‎o‎m‎e‎r‎,‎ ‎J‎o‎r‎d‎a‎n‎ ‎B‎e‎g‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎P‎r‎o‎c‎e‎e‎d‎i‎n‎g‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎
4‎,‎9‎7‎4‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎W‎o‎n‎'‎t‎ ‎T‎e‎s‎t‎i‎f‎y‎ ‎B‎e‎h‎i‎n‎d‎ ‎C‎l‎o‎s‎e‎d‎ ‎D‎o‎o‎r‎s‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎W‎o‎n‎'‎t‎ ‎T‎e‎s‎t‎i‎f‎y‎ ‎B‎e‎h‎i‎n‎d‎ ‎C‎l‎o‎s‎e‎d‎ ‎D‎o‎o‎r‎s‎
5‎,‎3‎8‎1‎
N‎A‎T‎O‎ ‎W‎a‎r‎n‎s‎ ‎R‎i‎s‎k‎ ‎P‎u‎t‎i‎n‎ ‎W‎o‎n‎'‎t‎ ‎S‎t‎o‎p‎ ‎W‎i‎t‎h‎ ‎U‎k‎r‎a‎i‎n‎e‎
N‎A‎T‎O‎ ‎W‎a‎r‎n‎s‎ ‎R‎i‎s‎k‎ ‎P‎u‎t‎i‎n‎ ‎W‎o‎n‎'‎t‎ ‎S‎t‎o‎p‎ ‎W‎i‎t‎h‎ ‎U‎k‎r‎a‎i‎n‎e‎
2‎9‎6‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎E‎x‎c‎l‎u‎d‎e‎s‎ ‎W‎h‎i‎t‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎'‎E‎l‎e‎c‎t‎e‎d‎s‎ ‎o‎f‎ ‎C‎o‎l‎o‎r‎'‎ ‎P‎a‎r‎t‎y‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎E‎x‎c‎l‎u‎d‎e‎s‎ ‎W‎h‎i‎t‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎'‎E‎l‎e‎c‎t‎e‎d‎s‎ ‎o‎f‎ ‎C‎o‎l‎o‎r‎'‎ ‎P‎a‎r‎t‎y‎
7‎9‎4‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎I‎n‎t‎r‎o‎d‎u‎c‎e‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎V‎e‎r‎i‎f‎y‎ ‎U‎.‎S‎.‎ ‎C‎i‎t‎i‎z‎e‎n‎s‎h‎i‎p‎ ‎f‎o‎r‎ ‎M‎a‎i‎l‎-‎I‎n‎ ‎V‎o‎t‎e‎r‎s‎
7‎3‎3‎
J‎a‎k‎e‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎T‎e‎l‎l‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎E‎n‎d‎ ‎'‎I‎n‎t‎e‎n‎s‎e‎'‎ ‎W‎a‎r‎ ‎i‎n‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
J‎a‎k‎e‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎T‎e‎l‎l‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎E‎n‎d‎ ‎'‎I‎n‎t‎e‎n‎s‎e‎'‎ ‎W‎a‎r‎ ‎i‎n‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
6‎4‎8‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎E‎v‎o‎l‎v‎i‎n‎g‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎o‎n‎ ‎J‎o‎e‎'‎s‎ ‎I‎n‎v‎o‎l‎v‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎H‎u‎n‎t‎e‎r‎ ‎'‎S‎e‎m‎a‎n‎t‎i‎c‎'‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎E‎v‎o‎l‎v‎i‎n‎g‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎o‎n‎ ‎J‎o‎e‎'‎s‎ ‎I‎n‎v‎o‎l‎v‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎H‎u‎n‎t‎e‎r‎ ‎'‎S‎e‎m‎a‎n‎t‎i‎c‎'‎

 ‎N‎i‎g‎g‎a‎r‎d‎ ‎R‎o‎b‎s‎ ‎D‎u‎n‎k‎i‎n‎'‎ ‎D‎o‎n‎u‎t‎s‎ ‎G‎i‎f‎t‎ ‎S‎h‎o‎p‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎.‎

W‎e‎l‎l‎ ‎i‎t‎'‎s‎ ‎n‎i‎c‎e‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎l‎i‎k‎e‎s‎ ‎d‎o‎u‎g‎h‎n‎u‎t‎s‎,‎ ‎b‎u‎t‎ ‎s‎c‎r‎e‎w‎ ‎y‎o‎u‎,‎ ‎n‎e‎g‎r‎o‎ ‎m‎a‎n‎!‎


D‎C‎ ‎B‎a‎b‎o‎o‎n‎ ‎B‎a‎r‎r‎e‎l‎s‎ ‎T‎h‎r‎o‎u‎g‎h‎ ‎F‎o‎x‎ ‎S‎t‎a‎t‎i‎o‎n‎,‎ ‎C‎h‎i‎m‎p‎s‎ ‎o‎u‎t‎,‎ ‎a‎n‎d‎ ‎G‎e‎t‎s‎ ‎S‎h‎o‎t‎ ‎b‎y‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎G‎u‎a‎r‎d‎.‎


2‎ ‎S‎c‎a‎m‎m‎e‎r‎ ‎C‎h‎i‎n‎k‎s‎ ‎B‎u‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎B‎e‎s‎t‎ ‎B‎u‎y‎ ‎G‎i‎f‎t‎ ‎C‎a‎r‎d‎ ‎S‎c‎a‎m‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎J‎e‎r‎s‎e‎y‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎2‎ ‎M‎o‎n‎k‎s‎ ‎W‎h‎o‎ ‎R‎o‎b‎b‎e‎d‎ ‎O‎x‎f‎o‎r‎d‎ ‎P‎h‎a‎r‎m‎a‎c‎y‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎S‎p‎i‎c‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎4‎5‎°‎
5‎2‎%‎
E‎ ‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎ ‎|‎ ‎D‎a‎y‎
6‎6‎°‎
5‎2‎%‎
E‎
6‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎o‎f‎f‎ ‎a‎n‎d‎ ‎o‎n‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎6‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎2‎ ‎p‎m‎
F‎r‎i‎ ‎1‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎5‎°‎
4‎6‎%‎
N‎
1‎1‎
 ‎
m‎p‎h‎
R‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎c‎l‎e‎a‎r‎i‎n‎g‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎4‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎0‎:‎0‎6‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎2‎7‎ ‎p‎m‎
S‎a‎t‎ ‎1‎6‎
S‎u‎n‎n‎y‎
6‎6‎°‎
/‎3‎4‎°‎
5‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
S‎u‎n‎n‎y‎
6‎8‎°‎
/‎3‎9‎°‎
4‎%‎
W‎S‎W‎ ‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
S‎u‎n‎n‎y‎
6‎6‎°‎
/‎3‎7‎°‎
4‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎0‎°‎
5‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎6‎°‎
1‎7‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎7‎°‎
3‎2‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎7‎°‎
6‎4‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎5‎°‎
5‎8‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎0‎°‎
/‎5‎1‎°‎
5‎8‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎4‎6‎°‎
5‎8‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎1‎°‎
3‎7‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎4‎0‎°‎
5‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎9‎°‎
1‎9‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎9‎°‎
5‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎t‎.‎ ‎N‎i‎g‎g‎e‎r‎l‎a‎s‎ ‎🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎J‎e‎s‎ú‎s‎ ‎T‎r‎u‎m‎p‎,‎ ‎a‎k‎a‎ ‎T‎h‎e‎ ‎D‎o‎n‎a‎l‎d‎,‎ ‎i‎s‎ ‎a‎ ‎p‎r‎e‎t‎t‎y‎ ‎c‎o‎o‎l‎ ‎g‎u‎y‎,‎ ‎h‎e‎'‎s‎ ‎t‎h‎e‎ ‎4‎5‎t‎h‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎n‎d‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎a‎f‎r‎a‎i‎d‎ ‎o‎f‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎w‎i‎l‎l‎ ‎g‎r‎a‎b‎ ‎y‎o‎u‎ ‎b‎y‎ ‎t‎h‎e‎ ‎p‎u‎s‎s‎y‎,‎ ‎f‎i‎r‎e‎ ‎y‎o‎u‎ ‎f‎o‎r‎ ‎b‎e‎i‎n‎g‎ ‎u‎n‎p‎r‎o‎d‎u‎c‎t‎i‎v‎e‎,‎ ‎s‎u‎e‎ ‎y‎o‎u‎ ‎f‎o‎r‎ ‎l‎i‎b‎e‎l‎,‎ ‎a‎n‎d‎ ‎p‎i‎l‎l‎a‎g‎e‎ ‎y‎o‎u‎r‎ ‎c‎l‎a‎n‎ ‎o‎f‎ ‎i‎t‎s‎ ‎c‎a‎t‎t‎l‎e‎ ‎a‎n‎d‎ ‎f‎e‎r‎t‎i‎l‎e‎ ‎w‎o‎m‎e‎n‎.‎ ‎O‎n‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎j‎u‎s‎t‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎a‎ ‎g‎e‎n‎i‎u‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎s‎,‎ ‎h‎e‎ ‎h‎a‎s‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎l‎y‎ ‎g‎o‎n‎e‎ ‎b‎a‎n‎k‎r‎u‎p‎t‎ ‎f‎o‎u‎r‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎t‎i‎m‎e‎s‎ ‎a‎n‎d‎ ‎p‎i‎s‎s‎e‎d‎ ‎a‎w‎a‎y‎ ‎b‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎d‎o‎l‎l‎a‎r‎s‎,‎ ‎y‎e‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎i‎l‎l‎ ‎g‎e‎t‎ ‎i‎n‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎h‎i‎m‎ ‎t‎h‎e‎i‎r‎ ‎m‎o‎n‎e‎y‎.‎ ‎S‎i‎m‎i‎l‎a‎r‎l‎y‎ ‎h‎e‎ ‎r‎a‎n‎ ‎a‎ ‎s‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎b‎y‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎a‎u‎t‎o‎m‎a‎t‎i‎c‎a‎l‎l‎y‎ ‎d‎i‎s‎q‎u‎a‎l‎i‎f‎y‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎,‎ ‎a‎n‎d‎ ‎y‎e‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎i‎l‎l‎ ‎g‎o‎t‎ ‎i‎n‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎v‎o‎t‎e‎ ‎f‎o‎r‎ ‎h‎i‎m‎,‎ ‎g‎e‎t‎ ‎a‎ ‎g‎l‎i‎m‎p‎s‎e‎ ‎o‎f‎ ‎h‎i‎m‎,‎ ‎o‎r‎ ‎g‎e‎t‎ ‎a‎ ‎(‎p‎r‎o‎-‎b‎o‎n‎o‎)‎ ‎p‎a‎r‎t‎ ‎a‎s‎ ‎a‎ ‎p‎l‎a‎n‎t‎e‎d‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎ ‎d‎u‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎f‎u‎n‎ ‎r‎a‎l‎l‎i‎e‎s‎.‎

(‎(‎ ‎T‎H‎E‎ ‎T‎R‎U‎M‎P‎ ‎C‎O‎U‎L‎D‎ ‎N‎O‎T‎ ‎B‎E‎ ‎S‎T‎U‎M‎P‎E‎D‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎h‎e‎y‎'‎r‎e‎ ‎n‎o‎t‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎d‎o‎w‎n‎r‎i‎g‎h‎t‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎.‎.‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎m‎.‎ ‎#‎L‎R‎H‎:‎

‎0‎3‎[‎0‎8‎:‎1‎8‎]‎ ‎*‎ ‎T‎o‎p‎i‎c‎ ‎i‎s‎ ‎'‎<‎i‎c‎e‎>‎ ‎I‎ ‎t‎o‎u‎c‎h‎e‎d‎ ‎a‎ ‎p‎e‎n‎i‎s‎ ‎o‎n‎c‎e‎ ‎|‎ ‎N‎E‎W‎ ‎B‎O‎O‎K‎ ‎O‎U‎T‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎w‎w‎w‎.‎a‎m‎a‎z‎o‎n‎.‎c‎o‎m‎/‎d‎p‎/‎B‎0‎C‎P‎X‎7‎7‎5‎L‎8‎ ‎R‎E‎A‎D‎ ‎T‎H‎R‎E‎E‎W‎O‎L‎F‎ ‎-‎ ‎I‎N‎S‎P‎I‎R‎E‎D‎ ‎B‎Y‎ ‎X‎A‎R‎T‎E‎T‎'‎S‎ ‎R‎E‎A‎L‎ ‎L‎I‎F‎E‎‎'‎
‎0‎3‎[‎0‎8‎:‎1‎8‎]‎ ‎*‎ ‎S‎e‎t‎ ‎b‎y‎ ‎l‎0‎d‎e‎!‎~‎s‎i‎d‎3‎1‎8‎3‎0‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎3‎:‎:‎7‎c‎5‎6‎ ‎o‎n‎ ‎T‎h‎u‎ ‎D‎e‎c‎ ‎1‎4‎ ‎1‎0‎:‎2‎6‎:‎4‎1‎ ‎2‎0‎2‎3‎
‎0‎3‎[‎0‎8‎:‎2‎0‎]‎ ‎*‎ ‎e‎y‎e‎h‎a‎t‎4‎ ‎(‎~‎e‎y‎e‎h‎a‎t‎5‎@‎3‎5‎.‎1‎4‎1‎.‎1‎4‎8‎.‎5‎8‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎L‎R‎H‎
[‎0‎8‎:‎2‎4‎]‎ ‎<‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎H‎u‎n‎g‎a‎r‎i‎a‎n‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎V‎i‎k‎t‎o‎r‎ ‎O‎r‎b‎a‎n‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎ ‎b‎l‎o‎c‎k‎e‎d‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎i‎m‎ ‎P‎e‎a‎k‎e‎ ‎(‎b‎o‎r‎n‎ ‎1‎9‎7‎2‎)‎ ‎i‎s‎ ‎a‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎o‎f‎f‎i‎c‎e‎r‎ ‎a‎n‎d‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎.‎ ‎O‎n‎ ‎1‎5‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎2‎0‎1‎5‎,‎ ‎h‎e‎ ‎e‎m‎b‎a‎r‎k‎e‎d‎ ‎o‎n‎ ‎a‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎I‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎p‎a‎c‎e‎ ‎S‎t‎a‎t‎i‎o‎n‎ ‎(‎I‎S‎S‎)‎,‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎ ‎w‎e‎a‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎f‎l‎a‎g‎ ‎i‎n‎ ‎s‎p‎a‎c‎e‎,‎ ‎a‎f‎t‎e‎r‎ ‎H‎e‎l‎e‎n‎ ‎S‎h‎a‎r‎m‎a‎n‎.‎ ‎A‎f‎t‎e‎r‎ ‎g‎r‎a‎d‎u‎a‎t‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎R‎o‎y‎a‎l‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎A‎c‎a‎d‎e‎m‎y‎ ‎S‎a‎n‎d‎h‎u‎r‎s‎t‎,‎ ‎P‎e‎a‎k‎e‎ ‎s‎e‎r‎v‎e‎d‎ ‎i‎n‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎r‎o‎l‎e‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎1‎9‎9‎2‎ ‎a‎n‎d‎ ‎2‎0‎0‎9‎,‎ ‎a‎c‎c‎u‎m‎u‎l‎a‎t‎i‎n‎g‎ ‎3‎,‎0‎0‎0‎ ‎f‎l‎y‎i‎n‎g‎ ‎h‎o‎u‎r‎s‎.‎ ‎H‎e‎ ‎w‎a‎s‎ ‎t‎h‎e‎n‎ ‎s‎e‎l‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎j‎o‎i‎n‎ ‎t‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎S‎p‎a‎c‎e‎ ‎A‎g‎e‎n‎c‎y‎'‎s‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎ ‎c‎o‎r‎p‎s‎ ‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎w‎a‎s‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎a‎n‎d‎ ‎t‎o‎o‎k‎ ‎p‎a‎r‎t‎ ‎i‎n‎ ‎m‎i‎s‎s‎i‎o‎n‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎q‎u‎a‎r‎i‎u‎s‎ ‎R‎e‎e‎f‎ ‎B‎a‎s‎e‎,‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎h‎e‎ ‎s‎p‎e‎n‎t‎ ‎t‎w‎e‎l‎v‎e‎ ‎d‎a‎y‎s‎ ‎u‎n‎d‎e‎r‎w‎a‎t‎e‎r‎.‎ ‎D‎u‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎I‎S‎S‎,‎ ‎P‎e‎a‎k‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎a‎ ‎s‎p‎a‎c‎e‎w‎a‎l‎k‎ ‎b‎y‎ ‎t‎w‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎c‎a‎r‎r‎y‎i‎n‎g‎ ‎o‎u‎t‎ ‎a‎ ‎s‎p‎a‎c‎e‎w‎a‎l‎k‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎t‎o‎ ‎r‎e‎p‎l‎a‎c‎e‎ ‎a‎ ‎f‎a‎u‎l‎t‎y‎ ‎s‎e‎q‎u‎e‎n‎t‎i‎a‎l‎ ‎s‎h‎u‎n‎t‎ ‎u‎n‎i‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎i‎o‎n‎'‎s‎ ‎s‎o‎l‎a‎r‎ ‎a‎r‎r‎a‎y‎s‎.‎ ‎H‎e‎ ‎a‎l‎s‎o‎ ‎p‎a‎r‎t‎i‎c‎i‎p‎a‎t‎e‎d‎ ‎i‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎U‎K‎ ‎e‎v‎e‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎s‎p‎a‎c‎e‎,‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎d‎e‎l‎i‎v‎e‎r‎i‎n‎g‎ ‎a‎ ‎n‎e‎w‎ ‎y‎e‎a‎r‎'‎s‎ ‎m‎e‎s‎s‎a‎g‎e‎ ‎b‎r‎o‎a‎d‎c‎a‎s‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎B‎B‎C‎ ‎a‎n‎d‎ ‎r‎e‎m‎o‎t‎e‎l‎y‎ ‎p‎r‎e‎s‎e‎n‎t‎i‎n‎g‎ ‎a‎n‎ ‎a‎w‎a‎r‎d‎ ‎t‎o‎ ‎s‎i‎n‎g‎e‎r‎ ‎A‎d‎e‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎ ‎A‎w‎a‎r‎d‎s‎ ‎2‎0‎1‎6‎.‎ ‎P‎e‎a‎k‎e‎ ‎r‎e‎t‎u‎r‎n‎e‎d‎ ‎t‎o‎ ‎E‎a‎r‎t‎h‎ ‎i‎n‎ ‎J‎u‎n‎e‎ ‎2‎0‎1‎6‎,‎ ‎h‎a‎v‎i‎n‎g‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎d‎ ‎3‎,‎0‎0‎0‎ ‎o‎r‎b‎i‎t‎s‎ ‎o‎f‎ ‎E‎a‎r‎t‎h‎,‎ ‎a‎n‎d‎ ‎r‎e‎t‎i‎r‎e‎d‎ ‎f‎r‎o‎m‎ ‎a‎c‎t‎i‎v‎e‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎i‎n‎ ‎2‎0‎2‎3‎.‎ ‎T‎h‎i‎s‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎N‎A‎S‎A‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎P‎e‎a‎k‎e‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎2‎0‎1‎3‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎R‎o‎b‎e‎r‎t‎ ‎M‎a‎r‎k‎o‎w‎i‎t‎z‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎y‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎t‎o‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎w‎a‎s‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎T‎o‎u‎c‎a‎n‎ ‎S‎a‎m‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎t‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎ ‎w‎h‎e‎n‎ ‎I‎ ‎w‎a‎s‎ ‎4‎.‎.‎.‎.‎.‎.‎.‎"
6Rcadk9t,rp,Ninhodedraga,JSON,Friday 15th of December 2023 08:37:21 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Normas de Conduta](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217798193025127)**\n:radio_button: **[Apelido no Servidor](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217846532382811)**\n:radio_button: **[Regras para RP](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217922864513054)**\n:radio_button: **[PVP](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218052573384714)**\n:radio_button: **[Utiliza\u00e7\u00e3o de BOTs](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218117094350898)**\n:radio_button: **[Puni\u00e7\u00e3o e Den\u00fancias](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218292529512478)**"",
    ""title"":""\u25b6 RP e Regra de Conduta""
}"
58MAP74y,risultati,davegimo,Python,Friday 15th of December 2023 08:36:00 AM CDT,"def es(file):

    f = open(file)
    lines = f.readlines()
    


    for line in lines:
        line = line.strip()
        risultato = line.split("","")
        casa = risultato[0]
        ospite = risultato[1]
        ris_casa = risultato[2]
        ris_ospite = risultato[3]

        if ris_casa > ris_ospite:
            print(f""ha vinto la squadra {casa} contro {ospite}"")
        elif ris_casa < ris_ospite:
            print(f""ha vinto la squadra {ospite} contro {casa}"")
        else:
            print(f""pareggio tra {casa} e {ospite}"")

es(""res.txt"")

"
nLr5PDEH,AoC 2023 Day 15,illuminati229,Python,Friday 15th of December 2023 08:35:19 AM CDT,"from time import time
import re


def timer_func(func):
    # This function shows the execution time of
    # the function object passed
    def wrap_func(*args, **kwargs):
        t1 = time()
        result = func(*args, **kwargs)
        t2 = time()
        print(f'Function {func.__name__!r} executed in {(t2 - t1):.4f}s')
        return result

    return wrap_func


@timer_func
def day15(filepath, part2=False):
    with open(filepath) as fin:
        lines = [line.strip() for line in fin.readlines()]

    nums = lines[0].split(',')
    if not part2:
        v_sum = 0
        for n in nums:
            v = 0
            for c in n:
                v += ord(c)
                v *= 17
                v %= 256
            v_sum += v
        return v_sum
    else:
        lens_dict = {}
        for n in nums:
            # split out the label and lens
            label, lens = re.split('[-=]', n)
            # find the box number
            box = 0
            for c in label:
                box += ord(c)
                box *= 17
                box %= 256
            # if there is a lens number, it is an addition '=' operator
            if lens:
                lens = int(lens)
                # check to see if that box has lenses in it yet
                if box in lens_dict:
                    # check to see if that label already exists in the box
                    for i, l in enumerate(lens_dict[box]):
                        if label in l:
                            lens_dict[box][i][label] = lens
                            break
                    # add new label and lens to the end of the list
                    else:
                        lens_dict[box].append({label: lens})
                else:
                    lens_dict[box] = [{label: lens}]
            # subtraction operator
            else:
                # check to see if lenses in that box exist yet
                if box in lens_dict:
                    # loop over the lenses in the box
                    for i, l in enumerate(lens_dict[box]):
                        # if that label does exist
                        if label in l:
                            # remove the lens
                            lens_dict[box].pop(i)
                            break
        lens_power_sum = 0
        for bn, b in lens_dict.items():
            if b:
                for i, l in enumerate(b, 1):
                    lens_power_sum += (bn + 1) * i * [*l.values()][0]
        return lens_power_sum


def main():
    assert day15('test15') == 1320
    print(f""Part 1: {day15('input15')}"")

    assert day15('test15', True) == 145
    print(f""Part 2: {day15('input15', True)}"")


if __name__ == '__main__':
    main()
"
edstynnp,economia,Ninhodedraga,JSON,Friday 15th of December 2023 08:32:33 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Atualiza\u00e7\u00e3o de Fichas](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218544661692476)**\n:radio_button: **[Ouro com o personagem em miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218655747842128)**\n:radio_button: **[Transfer\u00eancia de Gold e Equipamentos fora de transa\u00e7\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218696977862757)**\n:radio_button: **[Refer\u00eancias de transa\u00e7\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219009944223784)**\n:radio_button: **[Empr\u00e9stimo, Compra e Venda de Itens](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219111551238214)**\n:radio_button: **[Empr\u00e9stimo de Gold](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219383212126278)**\n:radio_button: **[Com\u00e9rcio Lend\u00e1rio](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219548522229781)**"",
    ""title"":""\u25b6 Economia e Registros""
}"
MjdFvFnC,Swimbot Error,swimmerhair,Python,Friday 15th of December 2023 08:31:22 AM CDT,"Traceback (most recent call last):
  File ""/home/pi/Swimbot/venv/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/waitlist.py"", line 135, in wait
    embed.set_thumbnail(url=th_list[int(info['townHallLevel'])-1])
IndexError: list index out of range
"
f9X7qjcw,missão,Ninhodedraga,JSON,Friday 15th of December 2023 08:31:11 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":""\ud83d\udd18 **[Miss\u00f5es e Eventos: como entrar e crit\u00e9rios para convoca\u00e7\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219737760829523)**\n\ud83d\udd18 **[Dura\u00e7\u00e3o de Sess\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219759181156462)**\n\ud83d\udd18 **[Miss\u00f5es de Longa Dura\u00e7\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219878911754310)**\n\ud83d\udd18 **[Eventos](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219989612003448)**\n\ud83d\udd18 **[Dificuldade das Miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220025213272134)**\n\ud83d\udd18 **[Recompensas](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220127243911189)**\n\ud83d\udd18 **[Cooldown entre Miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220195871096923)**\n\ud83d\udd18 **[Level up](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220253848965210)**\n\ud83d\udd18 **[Baixa Prioridade](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220292356882503)**"",
    ""title"":""\u25b6 Miss\u00f5es""
}"
wpCbt354,progressão de pj,Ninhodedraga,JSON,Friday 15th of December 2023 08:27:56 AM CDT,"{
    ""author"":{
        ""name"":""Red - Ninho de Drag\u00e3o"",
        ""icon_url"":""https:\/\/i.imgur.com\/hKY8wwa.png"",
        ""proxy_icon_url"":""https:\/\/images-ext-1.discordapp.net\/external\/5E7J4hIP3p_pl-uuhJjvzFURDgUF_VEq-G7_A1WoMgM\/https\/i.imgur.com\/hKY8wwa.png""
    },
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Progress\u00e3o de personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185220784008998952)**\n:radio_button: **[Troca de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185220830687399986)**\n:radio_button: **[Morte de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221190516744313)**\n:radio_button: **[Tier de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221265674473562)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por Miss\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221351603179580)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por N\u00edvel](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221450974646332)**\n:radio_button: **[Segundo Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221587180458034)**\n:radio_button: **[Rebirth Lend\u00e1rio](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221722866208898)**\n:radio_button: **[Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222046930714704)**\n:radio_button: **[Level Cap para Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222079650480149)**\n:radio_button: **[Regras para o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222179785293924)**\n:radio_button: **[Benef\u00edcios ao atingir o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222219404693534)**"",
    ""title"":""\u25b6 Pro(re)gress\u00e3o de Personagens""
}"
qT9xYS0V,Untitled,Nicoskin,C,Friday 15th of December 2023 08:25:41 AM CDT,"#include <stdlib.h>
#include <stdio.h>
#include <time.h>


#define N_LEN 300   //250
#define G_LEN 10

void zash(int G[G_LEN]){
    for(int len_n = 100; len_n < 2000; len_n += 50) // Длинна даты от 100 до 2000
    {
        int kk=0;
        for(int package = 0; package < 50; package++) // Для каждой длинны 50 разных массивов
        {
            int No[len_n]; int No_c[len_n];
            for(int i = 0; i<len_n-G_LEN+1; i++){ // Создаём 2 одинаковых массива
                No[i] = rand() % 2;
                No_c[i] = No[i];
            }
            // Добавление нулей в конец No[]
            for(int i = len_n-G_LEN+1; i < len_n; i++) No[i] = 0; 

            // Вычисление XOR и остатка от деления
            for(int i=0; i < len_n-G_LEN+1; i++){
                if(No[i] == 1){
                    for(int j=0; j < G_LEN; j++) 
                    No[i+j] ^= G[j];
                }
            }
            // Добавление остатка(CRC) к No_c[]
            for(int i=len_n-G_LEN+1; i < len_n; i++) No_c[i] = No[i];

            int k=0;
            for(int o = 0; o<len_n; o++){ // Искажаем 1 бит последовательно + 1 рандомно
                int No_cc[len_n];
                for(int i = 0; i<len_n; i++) No_cc[i] = No_c[i]; // Копируем массив с CRC на No_cc[]

                // Искажение битов по очереди
                if (No_cc[o] == 1) No_cc[o] = 0;
                else No_cc[o] = 1;
                // Искажение рандомных битов
                if (No_cc[rand()%len_n] == 1) No_cc[rand()%len_n] = 0;
                else No_cc[rand()%len_n] = 1;

                // Вычисление XOR и остатка от деления
                for(int i=0; i < len_n-G_LEN+1; i++){
                    if(No_cc[i] == 1){
                        for(int j=0; j < G_LEN; j++)
                        No_cc[i+j] ^= G[j];
                    }
                }
                // Проверка на ошибки
                for(int i = len_n-G_LEN+1; i<len_n; i++){
                    if(No_cc[i] == 1) break;
                    if((i == len_n-1) & (No_cc[i] == 0)) k++;
                }
            }
            kk += k;
        }
        double err = (double)kk/(double)(len_n*50);
        fflush(stdout);
        printf(""%f, "", err);
    }
}

int main(){
    srand(time(NULL));

    int N[N_LEN];
    int N_c[N_LEN];
    int N_Base[N_LEN];
    int G[G_LEN] = {1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1};
    
    // Заполнение массива данных 
    for(int i = 0; i<N_LEN-G_LEN+1; i++){
        N[i] = rand() % 2;
        N_c[i] = N[i];
        N_Base[i] = N[i];
    }
    // Добавление нулей в конец
    for(int i = N_LEN-G_LEN+1; i < N_LEN; i++) N[i] = 0;
    
    // Вывод N
    for(int i=0; i < N_LEN; i++) printf(""%d"", N[i]);
    printf("" <- N\n"");
    
    // Вычисление XOR и остатка от деления
    for(int i=0; i < N_LEN-G_LEN+1; i++){
        if(N[i] == 1){
            for(int j=0; j < G_LEN; j++) 
            N[i+j] ^= G[j];
        }
    }
    //Вывод остатка при отправке
    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++) printf(""%d"", N[i]);
    printf("" <- CRC \n\n"");

    // Добавление остатка
    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++){
    N_c[i] = N[i];
    N_Base[i] = N[i];
    }
    //Вывод N при получении
    for(int i=0; i < N_LEN; i++) printf(""%d"", N_c[i]);
    printf("" <- N_c\n"");

     // опять подсчет XOR и остатка от деления    
    for(int i=0; i < N_LEN-G_LEN+1; i++){
            if(N_c[i] == 1){
                for(int j=0; j < G_LEN; j++)
                N_c[i+j] ^= G[j];
            }
    }

    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++) printf(""%d"", N_c[i]);
    printf("" <- CRC\n\n"");

    zash(G);

    return 0;
}
"
ULSfttJH,Untitled,Terminal1337,Go,Friday 15th of December 2023 08:19:52 AM CDT,"package main

import (
	""fmt""
	""log""
	""sync""

	http ""github.com/bogdanfinn/fhttp""
	tls_client ""github.com/bogdanfinn/tls-client""
	""github.com/bogdanfinn/tls-client/profiles""
)

func main() {
	var wg sync.WaitGroup

	for i := 0; i < 50; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()

			jar := tls_client.NewCookieJar()

			options := []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profiles.Chrome_105),
				tls_client.WithProxyUrl(""http://xyz:xyz@delta.proxiflare.com:47212""),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithCookieJar(jar),
			}

			client, err := tls_client.NewHttpClient(tls_client.NewNoopLogger(), options...)
			if err != nil {
				log.Println(err)
				return
			}

			req, err := http.NewRequest(http.MethodGet, ""https://proxiflare.com"", nil)
			if err != nil {
				log.Println(err)
				return
			}

			req.Header = http.Header{
				""accept"":          {""*/*""},
				""accept-language"": {""de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7""},
				""user-agent"":      {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36""},
				http.HeaderOrderKey: {
					""accept"",
					""accept-language"",
					""user-agent"",
				},
			}
			for {
				resp, err := client.Do(req)
				if err != nil {
					continue
				}
				resp.Body.Close()
				// // b, _ := ioutil.ReadAll(resp.Body)
				// // fmt.Println(string(b))

				log.Println(fmt.Sprintf(""status code: %d"", resp.StatusCode))
			}
		}()
	}

	wg.Wait()
}
"
8draSD2e,ACT 8-14,Zekimoto,Python,Friday 15th of December 2023 08:16:25 AM CDT,"#8
userWord = input(""Enter a word: "")
userWord = userWord.upper()

for letter in userWord:
    if letter in ""AEIOU"":
        continue
    print(letter)
    
#9
wordWithoutVowels = """"
userWord = input(""Enter a word: "")
userWord = userWord.upper()

for letter in userWord:
    if letter in ""AEIOU"":
        continue
    wordWithoutVowels += letter
print(wordWithoutVowels)

#10
blocks = int(input(""Enter the number of blocks: ""))

height = 0
layernow = 0

while layernow <= blocks:
    height += 1
    layernow += height

if layernow > blocks:
    height -= 1

print(""The height of the pyramid: "", height)

#11
c0 = int(input(""Enter a number: ""))

steps = 0

while c0 != 1:

    if c0 % 2 == 0:
        c0 = c0 // 2
    else:
        c0 = 3 * c0 + 1
    steps += 1
    print(c0)
print(""steps = "", steps)

#12
hatList = [1, 2, 3, 4, 5]

hatList[len(hatList)//2] = int(input(""Enter a number: ""))
del hatList[-1]
print(len(hatList))

print(hatList)

#13
beatles = []
print(""Step 1:"", beatles)


beatles.append(""John Lennon"")
beatles.append(""Paul McCartney"")
beatles.append(""George Harrison"")
print(""Step 2:"", beatles)

for i in range(2):
    new_member = input(""Enter a new member: "")
    beatles.append(new_member)
print(""Step 3:"", beatles)

del beatles[3:]
print(""Step 4:"", beatles)

beatles.insert(0, ""Ringo Starr"")
print(""Step 5:"", beatles)

print(""The Fab"", len(beatles))

#14
myList = [1, 2, 4, 4, 1, 4, 2, 6, 2, 9]

newList = []
for number in myList:
    if number not in newList:
        newList.append(number)

myList = newList

print(""The list with unique elements only: "")
print(myList)
"
