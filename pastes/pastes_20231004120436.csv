id,title,username,language,date,content
cN64gfGT,LSD_OK,Korotkodul,C++,Wednesday 4th of October 2023 06:57:16 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using Ll = long long;

const int k8 = 8;
const int k256 = 256;
int len;
vector<Ll> ar;
vector<int> less_than;
vector<Ll> hlp;

Ll Byte(Ll num, int par) {
  Ll kk = ((1LL << k8) - 1) * (1LL << (k8 * par));
  Ll res = num & kk;
  Ll div = (1LL << (k8 * par));
  res /= div;
  return res;
}

void LSD(int par) {
  // cout << ""GO\n"";
  // cout << ""par = "" << par << ""\n"";
  less_than.assign(k256, 0);
  for (int id = 0; id < len; ++id) {
    Ll bt = Byte(ar[id], par);
    // cout << ""id = "" << id << ""\n"";
    // cout << ""ar[id] = "" << ar[id] << ""\n"";
    // cout << ""bt = "" << bt << ""\n"";
    less_than[bt]++;
  }
  // cout << ""A\n"";
  int cnt = 0;
  for (int id = 0; id < k256; ++id) {
    int point = less_than[id];
    less_than[id] = cnt;
    cnt += point;
  }
  // cout << ""B\n"";
  for (int id = 0; id < len; ++id) {
    Ll bt = Byte(ar[id], par);
    hlp[less_than[bt]] = ar[id];
    less_than[bt]++;
  }
  ar = hlp;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  cin >> len;
  ar.resize(len);
  hlp.resize(len);
  for (Ll& el : ar) {
    cin >> el;
  }
  for (int par = 0; par < k8; ++par) {
    LSD(par);
  }
  for (Ll el : ar) {
    cout << el << ""\n"";
  }
}
"
mtSRLDmu,4. hét,Levi0227,C#,Wednesday 4th of October 2023 06:55:00 AM CDT,"namespace _4het
{
    internal class Program
    {
        static void Main(string[] args)
        {
            ////1. Írásjelek/spacek törlése.
            ////2. ToLower.
            ////3. Palindorm -e? string->char[] -> revrese -> char[]->string -> string == string
            //string palindrom = ""Géza kék az ég."";
            //string szurt = palindrom.Replace(""."", """").Replace(""!"", """").Replace("","", """").Replace("" "", """").ToLower();

            //char[] betuk = szurt.ToCharArray();
            //Array.Reverse(betuk);
            //string egyezik = new string(betuk);

            //if (egyezik == szurt)
            //{
            //    Console.WriteLine(""Palindrom."");
            //}
            //else { Console.WriteLine(""Nem plaindrom.""); }



            //string rsz1 = "" aabc 123"", rsz2 = ""a a BC123"", rsz3 = ""a a B c 1 2 3"", rsz4 = ""AABc-123"";

            //string standard1 = rsz1.Replace("" "","""").Replace(""-"","""").ToUpper();
            //standard1 = standard1.Insert(4,""-"").Insert(2,"" "");

            //string standard2 = rsz2.Replace("" "","""").Replace(""-"", """").ToUpper();
            //standard2 = standard2.Insert(4,""-"").Insert(2,"" "");

            //string standard3 = rsz3.Replace("" "","""").Replace(""-"", """").ToUpper();
            //standard3 = standard3.Insert(4,""-"").Insert(2,"" "");

            //string standard4 = rsz4.Replace("" "","""").Replace(""-"", """").ToUpper();
            //standard4 = standard4.Insert(4,""-"").Insert(2,"" "");



            //Random rnd = new Random();
            //char[] kod = new char[6];
            //int rszamok = 0;
            //int proba = 0;

            //Console.Write(""Neptunkód: "");
            //string sajat = Console.ReadLine();

            //while (sajat.ToCharArray() != kod) { 
            //    kod[0] = (char)rnd.Next(65, 91);
            //    for (int i = 1; i < kod.Length; i++)
            //    {
            //        int betszam = rnd.Next(0, 2);

            //        if (betszam == 0)
            //        {
            //            rszamok = rnd.Next(65, 91);
            //        }
            //        else
            //        {
            //            rszamok = rnd.Next(48, 58);
            //        }
            //        kod[i] = (char)rszamok;
            //        Console.WriteLine(kod);
            //    }
            //    proba++;
            //}
            //Console.WriteLine($""{proba}. találatra sikerült random legenerálni."");



            //string karlanc = ""Vincent;Vega;Vince\nMarsellus;Wallace;Big Man\nWinston;Wolf;The Wolf"";
            //string[] rowarray = karlanc.Split('\n');
            //string[] colarray = rowarray[0].Split(';');

            //string[,] ketdim = new string[rowarray.Length, colarray.Length];

            //int j = 0;

            //foreach (string sor in rowarray)
            //{
            //    string[] cells = sor.Split("";"");

            //    for (int i = 0; i < cells.Length; i++)
            //    {
            //        // eredmény tömbbe beírjuk
            //        ketdim[j, i] = cells[i];
            //    }
            //    j++;
            //}



            Console.Write(""Add meg a zárójeleket: "");
            string zarojel = Console.ReadLine();
            char[] karakterek = zarojel.ToCharArray();

            for (int i = 0; i < karakterek.Length; i++)
            {
                if (karakterek[i] == '(' || karakterek[i] == '[')
                {

                }
                else if (karakterek[i] == ')' || karakterek[i] == ']')
                {

                }
            }
        }
    }
}"
CZ1Dnhcs,Untitled,Zeinab_Hamdy,C++,Wednesday 4th of October 2023 06:29:38 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
// #define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */


const ll mod = 1e9+7;

ll m , d;

ll dp[2001][2001][2];



ll rec(string & s , int idx , int cnt , bool flag){
   
    if(idx >= sz(s) ){
        // cout << cnt << "" "" << idx << nl;
        return !cnt;
    }
    
     
    ll & ret = dp[idx][cnt][flag];
    if(~ret)
        return ret;


    if(idx & 1 ){
        if(!flag and (d+'0') > s[idx] ){
            cout << ""Here \n "";
            return 0;
        }
        
       return  ret = rec(s , idx+1 , (cnt * 10 + d) % m , flag or (d+'0') < s[idx]);
    }
    
    
    ret =0;
    for(char c = '0' ; c <='9' ; c++){
        if((c-'0') == d) continue;
        if(!flag and c > s[idx]) continue;
        ret += rec(s , idx+1 , ( cnt * 10 + (c-'0') ) % m  , flag or c < s[idx]);
        ret %= mod;
    }

    return ret ;
}

void myCode(){

cin >> m >> d;



string s1 , s2;
cin >> s1 >> s2;


clr(dp,-1);

ll ans = rec(s2 , 0 , 0 , 0 );

if(s1.back()=='0'){
    if(s1.front() == '1')  {
        int cnt = sz(s1)-1;
        s1="""";
        while(cnt--)  s1+='9';
    }
    else{
      
        s1[sz(s1) - 2]--;
        s1.back()='9';
    }
}
else {
 s1.back() --;
}

// cout << s1 << nl;


ans+=mod;
ans%=mod;
// cout << ans << nl;
// cout << nl << nl;

clr(dp,-1);
ans-=rec(s1 , 0 , 0 , 0 );

ans+=mod;
ans%=mod;

cout << ans << nl;



}


int main(){
                                   FastCode ;
                                     Zainab() ;

        int testCase=1;
            // cin >> testCase ;
        for(int i=1 ; i<= testCase ; i++){
            myCode();
        }
      

    return 0;
}"
TJNUSafs,data715,TestGuy1,JSON,Wednesday 4th of October 2023 06:00:09 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ab5e821ab5fa8f81d1b50cc5a5d7bad12a7790bf143b70503c2920d9297b2c4cca1f399b7d1d71d30e97f1661e7852ed57a5fb71ea874fb24a6f18e20d09860d6319bb60992fee317332c26a85a7364ca794208ede5b543bc5f0b6e68b1e7bfdd56fc7734491cc8713be39b27e66dea141000d13cbd2ae8dc90a57a576ccc0bf',
  otherdata: [
    'ca4281767b03077f09fbbce8d97714f6',
    'bc9e6c74aaa71c20cb79db090e2ab19a',
    'e8dbf73c0c4ecc25bc258cc52483ce23',
    'fc253e3e42b7ca6df94a619ab79961e8',
    '604c31ac905c834b3c28b975ae7ead34',
    'af26d86aa003ea989ba0be9d99fe07d9',
    '945416171eb577caec83009be0fe1089',
    '1ff5d75ce8d35c84a517c1de1541d61d'
  ]
}"
u6V6UgUK,GALV_CreditRoll_MZ,ZEkA10000,JavaScript,Wednesday 4th of October 2023 05:31:21 AM CDT,"//-----------------------------------------------------------------------------
//  Galv's Roll Credits
//-----------------------------------------------------------------------------
//  For: RPGMAKER ~~MV~~ MZ
//  GALV_RollCredits.js
//-----------------------------------------------------------------------------
//  2017-08-08 - Version 1.5 - fixed casing issues with file references
//  2017-06-02 - Version 1.4 - fixed bug when using title screen credit option
//  2017-05-01 - Version 1.3 - added code to wait for txt file to finish load
//                             before running scene (in hope of fixing issue
//                             some people seem to have).
//  2016-09-07 - Version 1.2 - added touch to skip credit blocks
//                             added music setting for title credits
//  2016-09-01 - Version 1.1 - force windowskin to 0 opacity in case another
//                             plugin changes that opacity
//  2016-07-14 - Version 1.0 - release
//-----------------------------------------------------------------------------
// Terms can be found at:
// galvs-scripts.com
//-----------------------------------------------------------------------------

var Imported = Imported || {};
Imported.Galv_RollCredits = true;

var Galv = Galv || {};            // Galv's main object
Galv.CRED = Galv.CRED || {};        // Galv's stuff

//-----------------------------------------------------------------------------
/*:
 * @plugindesc (v.1.5) A plugin that calls a new scene to display scrolling information located in an external text file.
 * 
 * @author Galv - galvs-scripts.com
 *
 * @param Folder
 * @desc The folder name in your project where the Credits.txt file is located.
 * @default data
 *
 * @param Skippable
 * @desc true or false if cancel button skips all blocks and closes scene
 * @default true
 *
 * @param Block Skipping
 * @desc true or false if okay button skips current block to show next block
 * @default true
 *
 * @param Title Menu
 * @desc Text that appears in the title menu. Make blank to not show in title menu.
 * @default Credits
 *
 * @param Title Credits Music
 * @desc Music that plays when the credits are run from the title scene
 * @default
 * 
 *
 * @help
 *   Galv's Roll Credits
 * ----------------------------------------------------------------------------
 * This plugin uses external text files to control what text is displayed when
 * calling a ""Roll Credits"" style scene. This text file contains tags to set
 * how text blocks will display (eg. scroll or fade in/out).
 *
 * REQUIRED TAGS:
 * Text must be placed inside the following tag and you can have multiple of
 * these tages in the same .txt file to make each block of text display in
 * a different way.
 *
 *     <block:time,scroll,fadeIn,fadeOut,ypos,align,image>
 *     your text here
 *     </block>
 *
 * time    = amount of time text within tag is displayed before the next tag.
 *           this can be -1 for auto
 * scroll  = how fast the text scrolls. negative for up, positive for down
 * fadeIn  = how fast the tag text fades in (make this 255 to instant appear)
 * fadeOut = how fast the tag text fades out (255 to instant disappear)
 * ypos    = the starting y position of the block of text on screen. This can
 *           be a pixel value or you can use offtop or offbot to have the text
 *           begind offscreen (so you can scroll it on)
 * align   = left,center or right
 * image   = image name in /img/titles1/ folder to use as background. Leave
 *           this out to use the previous image.
 * ----------------------------------------------------------------------------
 *  SCRIPT CALL
 * ----------------------------------------------------------------------------
 * 
 *    Galv.CRED.start(""filename"");    // filename of .txt file located in the
 *                                    // folder you chose in the settings
 *                                    // if no filename specified or if run
 *                                    // directly using SceneManager.push,
 *                                    // then it will use ""Credits.txt""
 *
 * ----------------------------------------------------------------------------
 * NOTE: For other scripts, the credit scene is called:
 * Scene_Credits
 * ----------------------------------------------------------------------------
 */

//-----------------------------------------------------------------------------
//  CODE STUFFS
//-----------------------------------------------------------------------------

(function() {


Galv.CRED.skippable = PluginManager.parameters('Galv_RollCredits')[""Skippable""].toLowerCase() == 'true' ? true : false;
Galv.CRED.bSkip = PluginManager.parameters('Galv_RollCredits')[""Block Skipping""].toLowerCase() == 'true' ? true : false;
Galv.CRED.titleText = PluginManager.parameters('Galv_RollCredits')[""Title Menu""];
Galv.CRED.bgm = {name:PluginManager.parameters('Galv_RollCredits')[""Title Credits Music""],pan:0,pitch:100,volume:90};



// GET TXT FILE
//-----------------------------------------------------------------------------

Galv.CRED.file = {};
Galv.CRED.file.getString = function(filePath) {
	var request = new XMLHttpRequest();
	request.open(""GET"", filePath);
	request.overrideMimeType('application/json');
	request.onload = function() {
		if (request.status < 400) {
			Galv.CRED.createCreds(request.responseText);
		}
	};
	request.send();
};

Galv.CRED.createCreds = function(string) {
	var lines = string.split(""\n"");
	var bIndex = 0;
	var record = false;
	Galv.CRED.txtArray = [];

	for (var i = 0; i < lines.length; i++) {
		if (lines[i].contains('</block>')) {
			record = false;
			bIndex += 1;
		} else if (lines[i].contains('<block:')) {
			Galv.CRED.txtArray[bIndex] = [];
			record = true;
		};

		if (record) Galv.CRED.txtArray[bIndex].push(lines[i]);
	};
};


Galv.CRED.start = function(filename) {
	Galv.CRED.tempFilename = filename;
	Galv.CRED.fileName();
	SceneManager.push(Scene_Credits);
};

Galv.CRED.fileName = function() {
	//if (!Galv.CRED.txtArray) {
		var filename = Galv.CRED.tempFilename || ""Credits"";
		var folder = PluginManager.parameters('Galv_RollCredits')[""Folder""];
		if (folder !== """") folder = folder + ""/"";
		Galv.CRED.file.getString(folder + filename + "".txt"");
	//};

};

})();



// WINDOW CREDITS
//-----------------------------------------------------------------------------

function Window_Credits() {
    this.initialize.apply(this, arguments);
}

Window_Credits.prototype = Object.create(Window_Base.prototype);
Window_Credits.prototype.constructor = Window_Credits;

Window_Credits.prototype.initialize = function(blockId) {
    var width = Graphics.width;
    var height = Graphics.boxHeight;
    Window_Base.prototype.initialize.call(this, new Rectangle(0, 0, width, height));
	this.contents.fil
    this._id = blockId;
	this.createVars();
	this.refresh();
	
};

Window_Credits.prototype.txt = function() {
	return Galv.CRED.txtArray[this._id];
};

Window_Credits.prototype.createVars = function() {
	this._textArray = this.txt();
	this._complete = false;
	this.opacity = 0;
	this.contentsOpacity = 0;

	// settings
	var txt = this.txt() || ' ';
	var a = txt[0].toLowerCase().match(/<block:(.*)>/i);
	a = a[1].split("","");
	if (!a) return;
	this._timer = Number(a[0]);
	this._scroll = Number(a[1]) * 0.5;
	this._fadeIn = Number(a[2]);
	this._fadeOut = Number(a[3]);
	var isNumber = Number(a[4]);
	if (isNumber) {
		this.y = Number(a[4]);
		this._ypos = """";
	} else {
		this._ypos = a[4] || """";
	};
	this._align = a[5] || ""left"";
	// 6 is image
};

Window_Credits.prototype.update = function() {
	Window_Base.prototype.update.call(this);
	this.opacity = 0;
	if (this._timer > 0) { // timer active
		this.contentsOpacity += this._fadeIn;
		this._timer -= 1;
	} else { // timer ends
		this.contentsOpacity -= this._fadeOut;
		if (this.contentsOpacity <= 0) this._complete = true;
	};
	this.y += this._scroll;
};

Window_Credits.prototype.refresh = function() {
	this._allTextHeight = 1;
	// Draw all lines
	for (var i = 1; i < this._textArray.length;i++) {
		var textState = { index: 0 };
		textState.text = this.convertEscapeCharacters(this._textArray[i]);
		this.resetFontSettings();
		this._allTextHeight += this.calcTextHeight(textState, false);
	};
	
	// window height
	this.height = this.contentsHeight() + this._padding * 2;
	this.createContents();
	
	if (this._ypos.contains('offbot')) {
		this.y = Graphics.height;
	} else if (this._ypos.contains('offtop')) {
		this.y = -height;
	};
	
	// Set auto timer if -1 (auto)
	if (this._timer < 0) {
		if (this._scroll == 0) {
			this._timer = 2 * this._allTextHeight; // set timer depending on amount of text
		} else if (this._scroll < 0) {
			// calc how many frames it will take for message to leave screen
			var distance = Math.abs(this.y) + this.height;
			this._timer = distance / Math.abs(this._scroll);
		} else if (this._scroll > 0) {
			// calc how many frames it will take for message to leave screen
			//var distance = Math.abs(this.y);
			//this._timer = distance / this._scroll;
		};
	};
	
	// Draw lines
	var cy = 0;
	for (var i = 1; i < this._textArray.length;i++) {
	    var textState = {index:0,text:this._textArray[i]};
		var x = this._padding;
		var w = this.testWidthEx(textState.text);
		var h = this.cTextHeight;

		
		if (this._align == 'center') {
			x = this.contents.width / 2 - w / 2;
		} else if (this._align == 'right') {
			x = this.contents.width - this._padding - w;
		};		
		this.drawTextEx(textState.text, x, cy);
		cy += h;
	};
	
	this._allTextHeight = cy;
	this.height = cy + this._padding * 2;
};

Window_Credits.prototype.testWidthEx = function(text) {
    return this.drawTextExTest(text, 0, this.contents.height);
};

Window_Credits.prototype.drawTextExTest = function(text, x, y) {
	this.testActive = false;
    if (text) {
		this.resetFontSettings();
		this.testActive = true;
        var textState = { index: 0, x: x, y: y, left: x };
        textState.text = this.convertEscapeCharacters(text);
        textState.height = this.calcTextHeight(textState, false);
		this.cTextHeight = textState.height;
        while (textState.index < textState.text.length) {
            this.processCharacter(textState);
        }
		this.testActive = false;
        return textState.x - x - 116;
    } else {
        return 0;
    }
};


Window_Credits.prototype.contentsHeight = function() {
    return Math.max(this._allTextHeight, 1);
};


// SCENE CREDITS
//-----------------------------------------------------------------------------

function Scene_Credits() {
    this.initialize.apply(this, arguments);
}

Scene_Credits.prototype = Object.create(Scene_MenuBase.prototype);
Scene_Credits.prototype.constructor = Scene_Credits;

Scene_Credits.prototype.initialize = function() {
	this._blockId = 0;
	//this._blocks = [];
	this._txtLoaded = false;
	this._bgs = [];
    Scene_MenuBase.prototype.initialize.call(this);
};

Scene_Credits.prototype.create = function() {
    Scene_Base.prototype.create.call(this);
    this.createBackground();
	//this.createBlock();
};

Scene_Credits.prototype.isReady = function() {
    if (Scene_Base.prototype.isReady.call(this)) {
        return Galv.CRED.txtArray;// && this._blocks[0];
    } else {
        return false;
    }
};

Scene_Credits.prototype.update = function() {
    Scene_Base.prototype.update.call(this);
	this.updateInput();
	this.updateBlocks();
};

Scene_Credits.prototype.updateInput = function() {
	if (Input.isTriggered('cancel') && Galv.CRED.skippable) {
		this.endScene();
	} else if ((TouchInput.isPressed() || Input.isTriggered('ok')) && Galv.CRED.bSkip) {
		if (this._blocks && this._blocks[this._blockId]) this._blocks[this._blockId]._timer = 0;
	};
};

Scene_Credits.prototype.updateBlocks = function() {

	if (!this._txtLoaded) {
		// wait for load
		if (Galv.CRED.txtArray) {
			this._txtLoaded = true;
			this._blocks = [];
			this.createBlock();
		}
	} else {
		// loaded, update as normal
		// If CURRENT block timer is up, create next block
		if (!Galv.CRED.txtArray[this._blockId]) {
			this.endScene();
			return;
		}
	
		if (this._blocks[this._blockId]._complete) {
			// If block is finished, remove window and continue to next
			this.removeChild(this._blocks[this._blockId]);
			this._blockId += 1;
			if (Galv.CRED.txtArray[this._blockId]) {
				this.createBlock();
			}
		}
	}
};

Scene_Credits.prototype.createBlock = function() {	
	if (Galv.CRED.txtArray[this._blockId]) {
		var arr = Galv.CRED.txtArray[this._blockId][0].match(/<block:(.*)>/i);
		arr = arr[1].split("","");
		if (arr[6]) {
			var id = this._bgs.length;
			this._bgs[id] = new Sprite_CredBg(arr[6],this._blockId);
			this.addChild(this._bgs[id]);
		};
	};
	
	this._blocks[this._blockId] = new Window_Credits(this._blockId);
	this.addChild(this._blocks[this._blockId]);
};


Scene_Credits.prototype.endScene = function() {
	Galv.CRED.tempFilename = null;
	SceneManager.pop();
};



// SPRITE CREDBG
//-----------------------------------------------------------------------------

function Sprite_CredBg() {
    this.initialize.apply(this, arguments);
}

Sprite_CredBg.prototype = Object.create(Sprite.prototype);
Sprite_CredBg.prototype.constructor = Sprite_CredBg;

Sprite_CredBg.prototype.initialize = function(image,id) {
    Sprite.prototype.initialize.call(this);
	this._id = id;
	this.createBitmap(image);
    this.update();
};

Sprite_CredBg.prototype.createBitmap = function(image) {
	this.bitmap = ImageManager.loadTitle1(image);
	this.opacity = 0;
};

Sprite_CredBg.prototype.update = function() {
	Sprite.prototype.update.call(this);
	this.opacity += 5;
};


// ADD TO TITLE

Scene_Title.prototype.commandCredits = function() {
	this._commandWindow.close();
	Galv.CRED.start('Credits');
	AudioManager.playBgm(Galv.CRED.bgm);
};

if (Galv.CRED.titleText != """") {
	Galv.CRED.Scene_Title_createCommandWindow = Scene_Title.prototype.createCommandWindow;
	Scene_Title.prototype.createCommandWindow = function() {
		Galv.CRED.Scene_Title_createCommandWindow.call(this);
		this._commandWindow.setHandler('credits',  this.commandCredits.bind(this));
	};
	
	Galv.CRED.Window_TitleCommand_makeCommandList = Window_TitleCommand.prototype.makeCommandList;
	Window_TitleCommand.prototype.makeCommandList = function() {
		Galv.CRED.Window_TitleCommand_makeCommandList.call(this);
		this.addCommand(Galv.CRED.titleText,   'credits');
	};
}"
CkGqVkkx,CS5041-P1 John code,jbn6972,JavaScript,Wednesday 4th of October 2023 04:53:24 AM CDT,"//Primary micro-bit code

let lifes = 0
let vals: string[] = []
let X = 0
let Y = 0

radio.setGroup(18)
serial.setTxBufferSize(128)
serial.setRxBufferSize(128)
let values: { [key: string]: string } = {};


control.inBackground(()=> {
    serial.onDataReceived(""d:g"", function () {
        vals = serial.readBuffer(75).toString().split('\n')
        vals.forEach(pair => {
            const [key, value] = pair.split(':');
            values[key] = value;
        });
        if (values.d != undefined) {
            radio.sendString(values.d.charAt(0))
        }

        if (values.l != undefined) {
            basic.showString(values.l)
        }
    })
});


radio.onReceivedString(function (control) {
    // basic.showString(control);
    serial.writeLine(control)
});


function getGameState(){
    return values.d;
}

basic.forever(()=>{
    if (getGameState() === 'g') {
        controlGame(values);
    }
})

function controlGame (vals:{[key:string] : string}) {

    X = input.acceleration(Dimension.X)
    Y = input.acceleration(Dimension.Y)
    if (Y > 250) {
        thrustOn()
    } else {
        thrustOff()
    }
    if (X < -300) {
        // left
        rotateLeft()
    } else if (X > 300) {
        // right
        rotateRight()
    } else {
        halt()
    }
    if (input.buttonIsPressed(Button.A)) {
        serial.writeLine(""a:1"")
    } else {
        serial.writeLine(""a:0"")
    }
    if (input.buttonIsPressed(Button.B)) {
        serial.writeLine(""b:1"")
    } else {
        serial.writeLine(""b:0"")
    }
}

function thrustOn() {
    serial.writeLine(""t:-1"")
}

function thrustOff() {
    serial.writeLine(""t:0"")
}


function rotateLeft() {
    serial.writeLine(""l:1"")
    serial.writeLine(""r:0"")
}
function halt() {
    serial.writeLine(""l:0"")
    serial.writeLine(""r:0"")
    serial.writeLine(""t:0"")
}
function rotateRight() {
    serial.writeLine(""l:0"")
    serial.writeLine(""r:1"")
}


//Secondary micro-bit code
radio.setGroup(18);
radio.onReceivedNumber((number)=>{
    basic.showNumber(number)
});

radio.onReceivedString((value)=>{
    basic.showString(value);
})

let paused = false; 
let shield = false;

basic.forever(()=>{
    if(input.buttonIsPressed(Button.A)){
        radio.sendString(""s:1"")
    }else{
        radio.sendString(""s:0"")
    }
    if(input.buttonIsPressed(Button.B)){
        radio.sendString(""u:1"")
    }else{
        radio.sendString(""u:0"")
    }
})


"
Z7kGnfJf,CS5041-P1 Hrutuja Code,jbn6972,JavaScript,Wednesday 4th of October 2023 04:51:10 AM CDT,"//Primary micro-bit Code
const GROUP_NUMBER = 18;
const BUFFER_SIZE = 128;
const MAX_LIVES = 5;
const MAX_RECHARGEFACTOR = 5;
const ACCELERATION_THRESHOLD = 250;
const X_THRESHOLD = 300;

let rechargeFactor = 1;

let lives = 0;
let receivedValues = [];
let xAxis = 0;
let yAxis = 0;

radio.setGroup(GROUP_NUMBER);
serial.setTxBufferSize(BUFFER_SIZE);
serial.setRxBufferSize(BUFFER_SIZE);
let gameValues: { [key: string]: string } = {};

led.plot(0,4);
input.onLogoEvent(TouchButtonEvent.Pressed, function () {
    // basic.showNumber(rechargeFactor)
    rechargeFactor = rechargeFactor % MAX_RECHARGEFACTOR + 1;
    serial.writeLine(""wc:""+rechargeFactor.toString());
    serial.writeLine(""ec:""+rechargeFactor.toString());
    for (let i = 0; i < MAX_RECHARGEFACTOR; i++) {
        led.unplot(i, 4);
    }
    for (let j = 0; j < rechargeFactor; j++) {
        led.plot(j, 4);
    }
})




control.inBackground(() => {
    serial.onDataReceived(""d:g"", function () {
        receivedValues = serial.readBuffer(75).toString().split('\n');
        receivedValues.forEach(pair => {
            const [key, value] = pair.split(':');
            gameValues[key] = value;
        });

        const data = gameValues.d;
        const livesString = gameValues.l;

        if (data !== undefined) {
            radio.sendString(data.charAt(0));
        }

        if (livesString !== undefined) {
            let prevLives = 0;
            lives = parseInt(livesString);
            if (prevLives !== lives) {
                for (let i = 0; i < MAX_LIVES; i++) {
                    led.unplot(i, 0);
                }
                for (let j = 0; j < lives; j++) {
                    led.plot(j, 0);
                }
            }
        }
    });
});

radio.onReceivedString(function (control) {
    serial.writeLine(control);
});

function getGameState() {
    return gameValues.d;
}

basic.forever(() => {
    if (getGameState() === 'g') {
        controlGame(gameValues);
    }
});

function controlGame(values: { [key: string]: string }) {
    xAxis = input.acceleration(Dimension.X);
    yAxis = input.acceleration(Dimension.Y);

    const thrustValue = yAxis > ACCELERATION_THRESHOLD ? -1 : 0;
    const leftRotationValue = xAxis < -X_THRESHOLD ? 1 : 0;
    const rightRotationValue = xAxis > X_THRESHOLD ? 1 : 0;

    serial.writeLine(`t:${thrustValue}`);
    serial.writeLine(`l:${leftRotationValue}`);
    serial.writeLine(`r:${rightRotationValue}`);

    const buttonAValue = input.buttonIsPressed(Button.A) ? 1 : 0;
    const buttonBValue = input.buttonIsPressed(Button.B) ? 1 : 0;

    serial.writeLine(`a:${buttonAValue}`);
    serial.writeLine(`b:${buttonBValue}`);
}


//Secondary micro-bit code
const GROUP_NUMBER = 18;

radio.setGroup(GROUP_NUMBER);

radio.onReceivedNumber((number) => {
    basic.showNumber(number);
});

radio.onReceivedString((value) => {
    basic.showString(value);
});

basic.forever(() => {
    if (input.buttonIsPressed(Button.A)) {
        radio.sendString(""s:1"");
    } else {
        radio.sendString(""s:0"");
    }

    if (input.buttonIsPressed(Button.B)) {
        radio.sendString(""u:1"");
    } else {
        radio.sendString(""u:0"");
    }
});
"
AVY2et7T,Neural,dnska,HTML,Wednesday 4th of October 2023 04:47:55 AM CDT,"Stable Diffusion

Обзор: https://vc.ru/future/616407-stable-diffusion-eto-vpechatlyayushchaya-neyroset-kotoraya-privlekaet-vnimanie-mnogih-issledovateley-i-inzhenerov

Как работает: https://habr.com/ru/articles/693298/

Плейлист с кучей инфы: https://www.youtube.com/playlist?list=PL05SB3rBbUsprkMgH3yDV12MuuIbO5KEq

Модели:\

https://civitai.com/

https://huggingface.co/"
2MqkhFgt,A_7,-fury,MySQL,Wednesday 4th of October 2023 04:35:02 AM CDT,"CREATE TABLE emp_details(EMP_ID NUMBER(6) NOT NULL CONSTRAINT pk PRIMARY KEY,F_NAME varchar2(20),L_NAME varchar2(25) NOT NULL,HIRE_DATE date NOT NULL,JOB_ID varchar2(10) NOT NULL,SALARY number(8,2),COMISSION_PCt number(2,2),MANAGER_ID number(6),DEPT_ID number(4));

INSERT INTO emp_details VALUES(100,'Steven','King','06-17-1987','AD_PRES',24000,NULL,NULL,90);
INSERT INTO emp_details VALUES(101,'Neena','Kochhar','09-21-1989','AD_VP',17000,NULL,100,90);
INSERT INTO emp_details VALUES(102,'Lex','DE Haan','01-13-1993','AD_VP',17000,NULL,100,90);
INSERT INTO emp_details VALUES(103,'Alexander','Hunold','01-03-1990','IT_PROG',9000,NULL,102,60);
INSERT INTO emp_details VALUES(104,'Bruce','Ernst','05-21-1991','IT_PROG',6000,NULL,103,60);
INSERT INTO emp_details VALUES(107,'Diana','Lorentz','02-07-1999','IT_PROG',4200,NULL,103,60);
INSERT INTO emp_details VALUES(124,'Kevin','Mourgos','11-16-1999','ST_MAN',5800,NULL,100,50);
INSERT INTO emp_details VALUES(141,'Trenna','Rajs','10-17-1995','ST_CLERK',3500,NULL,124,50);
INSERT INTO emp_details VALUES(142,'Curtis','Davies','01-29-1997','ST_CLERK',3100,NULL,124,50);
INSERT INTO emp_details VALUES(143,'Randall','Matos','03-15-1998','ST_CLERK',2600,NULL,124,50);
INSERT INTO emp_details VALUES(144,'Peter','Vargas','07-09-1998','ST_CLERK',2500,NULL,124,50);
INSERT INTO emp_details VALUES(149,'Eleni','Zlotkey','01-29-2000','SA_MAN',10500,0.2,100,80);
INSERT INTO emp_details VALUES(174,'Ellen','Abel','05-11-1996','SA_REP',11000,0.3,149,80);
INSERT INTO emp_details VALUES(176,'Jonathan','Taylor','03-24-1998','SA_REP',8600,0.2,149,80);
INSERT INTO emp_details VALUES(178,'Kimberley','Grant','05-24-1999','SA_REP',7000,0.15,149,NULL);
INSERT INTO emp_details VALUES(200,'Jennifer','Whalen','09-17-1987','AD_ASST',4400,NULL,101,10);
INSERT INTO emp_details VALUES(201,'Michael','Hartstein','02-17-1996','MK_MAN',13000,NULL,100,20);
INSERT INTO emp_details VALUES(202,'Pat','Fay','08-17-1997','MK_REP',6000,NULL,201,20);
INSERT INTO emp_details VALUES(205,'Shelly','Higgins','06-07-1994','AC_MGR',12000,NULL,101,110);
INSERT INTO emp_details VALUES(206,'William','Gietz','06-07-1994','AC_ACCOUNT',8300,NULL,205,110);

SELECT LOWER(F_NAME) as F_name_L_case,DEPT_ID FROM emp_details where DEPT_ID in (20,50,80);

SELECT UPPER(L_NAME) as L_name_U_case,DEPT_ID FROM emp_details where DEPT_ID in (10,110,60);

SELECT INITCAP(JOB_ID) as Job_ID FROM emp_details;

SELECT CONCAT(F_NAME,L_NAME) as NAME from emp_details;

SELECT LENGTH(L_NAME) as LEN FROM emp_details where COMISSION_PCt IS NOT NULL;

SELECT INSTR(F_NAME,'a') FROM emp_details;

SELECT CONCAT(F_NAME,L_NAME) as NAME,LENGTH(L_NAME),INSTR(L_NAME,'a') as POS FROM emp_details where JOB_ID LIKE '%CLERK%';

SELECT TRIM('e' FROM F_NAME) as TRIMMED FROM emp_details;

SELECT JOB_ID,INSTR(F_NAME,'e') FROM emp_details where F_NAME LIKE '%e%';

SELECT L_NAME FROM emp_details WHERE INSTR(JOB_ID,'REP')=4;"
pXe427tY,Untitled,sissou123,Python,Wednesday 4th of October 2023 03:02:10 AM CDT,"Data Science : Analyse de données avec Python
Analyser et Visualiser des données en Python avec les bibliothèques NumPy, Pandas et Matplotlib pour la Data Science
pour plus:https://cuty.io/Bq6H"
vHkANNhA,Untitled,sissou123,Python,Wednesday 4th of October 2023 02:58:06 AM CDT,"Python : Cours complet pour débutant (Manipulation de Data)
https://cuty.io/Ocaa4xrgKrF"
9YMGWfcS,goldbach,shivamisone,Java,Wednesday 4th of October 2023 02:44:55 AM CDT,"import java.util.Scanner;

/**
 * goldback
 */
public class goldback {

    public static void main(String[] args) {
        int l = 0;
        Scanner sc = new Scanner(System.in);
        System.out.println(""enter a number"");
        int s = sc.nextInt();
        if (s % 2 != 0) {
            System.out.println(""invalid input odd number"");
            System.exit(0);
        }
        int[] ar = new int[s];
        for (int i = 2; i < s; i++) {
            if (lla(i)) {
                ar[l] = i;
                l++;
            }

        }
        for (int i = 0; i < ar.length; i++) {
            int k = ar[i];
            for (int j = 0; j < ar.length; j++) {
                if (k + ar[j] == s) {
                    System.out.println(k + ""   "" + ar[j]);
                    ar[i] = 0;
                }
            }
        }
        sc.close();
    }

    public static boolean lla(int i) {
        int count = 0;
        for (int j = 2; j < i; j++) {
            if (i % j == 0) {
                count++;
            }
        }
        if (count == 0) {
            return true;
        } else
            return false;
    }
}"
xHGGf4Xq,vendor-store-show-about-on-top-of-products,palsushobhan,PHP,Wednesday 4th of October 2023 02:05:25 AM CDT,"add_action( 'wcfmmp_store_before_products', function() {
    global $WCFMmp;
    $wcfm_store_url = wcfm_get_option( 'wcfm_store_url', 'store' );
    $wcfm_store_name = apply_filters( 'wcfmmp_store_query_var', get_query_var( $wcfm_store_url ) );
    if ( empty( $wcfm_store_name ) ) return;
    $seller_info = get_user_by( 'slug', $wcfm_store_name );
    if ( ! $seller_info ) return;
  
    $store_user = wcfmmp_get_store( $seller_info->ID );
    $store_info = $store_user->get_shop_info();
    $WCFMmp->template->get_template( 'store/wcfmmp-view-store-about.php', array( 'store_user' => $store_user, 'store_info' => $store_info ) );
} );
  
add_filter('wcfmmp_store_tabs', function($store_tabs) {
    if(isset($store_tabs['about'])) {
        unset($store_tabs['about']);
    }
    return $store_tabs;
});"
Zy6MPxVZ,snowybot good,coinwalk,JavaScript,Wednesday 4th of October 2023 02:04:43 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
MnUimZUB,Shotgun Passive,VatGhern,UnrealScript,Wednesday 4th of October 2023 01:34:11 AM CDT,"/// <summary>
/// Adds the damage effect that applies on misses to all the shotgun's templates
/// </summary>
static event OnPostTemplatesCreated()
{
	ModifyTemplateAllDiff('Shotgun_CV', class'X2WeaponTemplate', PatchWeaponTemplateCV);
	ModifyTemplateAllDiff('Shotgun_MG', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('Shotgun_BM', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('TLE_Shotgun_CV', class'X2WeaponTemplate', PatchWeaponTemplateCV);
	ModifyTemplateAllDiff('TLE_Shotgun_MG', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('TLE_Shotgun_BM', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('ChosenShotgun_CV', class'X2WeaponTemplate', PatchWeaponTemplateCV);
	ModifyTemplateAllDiff('ChosenShotgun_MG', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('ChosenShotgun_BM', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('ChosenShotgun_T4', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
	ModifyTemplateAllDiff('ChosenShotgun_XCOM', class'X2WeaponTemplate', PatchWeaponTemplateMGBM);
}

/// <summary>
/// Sets up the damage effect that applies on misses for conventional shotguns
/// </summary>
static function PatchWeaponTemplateCV(X2DataTemplate DataTemplate)
{
	local X2Effect_ApplyWeaponDamage DamageEffect;
	local X2WeaponTemplate Template;

	DamageEffect = new class'X2Effect_ApplyWeaponDamage';
	DamageEffect.bApplyOnHit = false;
	DamageEffect.bApplyOnMiss = true;
	DamageEffect.bIgnoreBaseDamage = true;
	DamageEffect.bAllowWeaponUpgrade = true;
	DamageEffect.bAllowFreeKill = false;
	DamageEffect.EffectDamageValue.Damage = 1;

    Template = X2WeaponTemplate(DataTemplate);

    Template.BonusWeaponEffects.AddItem(DamageEffect);
}

/// <summary>
/// Sets up the damage effect that applies on misses for magnetic and plasma shotguns
/// </summary>
static function PatchWeaponTemplateMGBM(X2DataTemplate DataTemplate)
{
	local X2Effect_ApplyWeaponDamage DamageEffect;
	local X2WeaponTemplate Template;

	DamageEffect = new class'X2Effect_ApplyWeaponDamage';
	DamageEffect.bApplyOnHit = false;
	DamageEffect.bApplyOnMiss = true;
	DamageEffect.bIgnoreBaseDamage = true;
	DamageEffect.bAllowWeaponUpgrade = true;
	DamageEffect.bAllowFreeKill = false;
	DamageEffect.EffectDamageValue.Damage = 2;

    Template = X2WeaponTemplate(DataTemplate);

    Template.BonusWeaponEffects.AddItem(DamageEffect);
}"
zvVtET7g,rofi-translate-ruen,constantin-net,Bash,Wednesday 4th of October 2023 01:27:09 AM CDT,"#!/bin/bash
result=""$1""
config=""$HOME/.config/rofi/config-translate.rasi""
theme=""$HOME/.config/rofi/theme-translate.rasi""
command=""/usr/local/sbin/rofi-1.6.1 -p Translate -config $config -theme $theme -dmenu""
if [[ -n ""$1"" && ""$1"" != *""Найдено""* ]]; then
    result=$(sdcv -n -u 'LingvoUniversal (Ru-En)' ""$result"")
    echo -e ""$result"" | $command
else
    $command -mesg ""Enter a word for translation""
fi
exit 0"
x1SLuz9f,rofi-translate-run-enru,constantin-net,Bash,Wednesday 4th of October 2023 01:25:41 AM CDT,"#!/bin/bash
OUT=$(. rofi-translate-enru)
while [ 1 = 1 ]
do
    if [[ -n ""$OUT"" && ""$OUT"" != *""Ничего похожего на""* ]]; then
        OUT=$(. rofi-translate-enru ""$OUT"")
    else
        exit
    fi
done
#else
#    exit
#fi
exit 0"
sDVnJrT6,rofi-translate-enru-cards,constantin-net,Bash,Wednesday 4th of October 2023 01:25:05 AM CDT,"#!/bin/bash
result=""$1""
config=""$HOME/.config/rofi/config-translate.rasi""
theme=""$HOME/.config/rofi/theme-translate.rasi""
card_path=""$HOME/cards/""
command=""/usr/local/sbin/rofi-1.6.1 -p Перевести -config $config -theme $theme -dmenu""
if [[ -n ""$1"" && ""$1"" != *""Найдено""* ]]; then
#    result=""$(sdcv -n -u dictd_www.mova.org_sokrat_enru $1)""
    result=$(sdcv -n -u 'LingvoUniversal (En-Ru)' -u dictd_www.mova.org_sokrat_enru -u en-ru-bars ""$result"")
#    result=""$(sdcv -n $1)""
    echo -e ""$result"" | $command
    card_text=$(echo -e ""$result"" | head -9 | tail -7)
    convert -background black -fill white -font Tahoma -size 300x250 caption:""$card_text"" ""$card_path""""$1"".png
else
    $command -mesg ""Введи слово для перевода""
fi
exit 0"
s97RmPcL,DSA vector 02,Sharad_104,C++,Wednesday 4th of October 2023 12:12:06 AM CDT,"#include <bits/stdc++.h>
using namespace std;

// program 2
void f(vector<int>::iterator it1, vector<int>::iterator it2) {
    while (it1 != it2) {
        cout << *(it1) << "" "";
        it1++;
    }
    cout << ""\n"";
}

// program 4
void fr(vector<int>::reverse_iterator it1, vector<int>::reverse_iterator it2) {
    while (it1 != it2) {
        cout << *(it1) << "" "";
        it1++;
    }
    cout << ""\n"";
}

// program 6
void f1(vector<int> &v) { // & refers to the original one
    sort(v.begin(), v.end());
}

void f2(vector<int> &v) {
    reverse(v.begin(), v.end());
}

int main() {
    // program 1
    vector<vector<int>> v{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

    for (int i = 0; i < v.size(); i++) {
        for (int j = 0; j < v[i].size(); j++) {  // Fixed the comma to a semicolon
            cout << v[i][j] << "" "";
        }
        cout << ""\n"";
    }

    for (vector<int> v1 : v) {
        for (auto e : v1)  // Fixed the variable name from v to v1
            cout << e << "" "";
        cout << ""\n"";
    }

    // program 3 (dependent on program 2)
    /* int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector <int> v;

        for(int i = 0; i<n;i++){
            int x;
            cin>>x;
            v.push_back(x);
        }
         // f(v.begin(),v.end()); forward iteration
         fr(v.rbegin(),v.rend()); // reverse iteration
    } */

    // program 5 (dependent on program 6)
    int t;
    cin >> t;
    vector<int> v;
    while (t--) {
        f1(v); // sort
        for (auto e : v)
            cout << e << "" "";
        cout << ""\n"";

        f2(v); // reverse
        for (auto e : v)
            cout << e << "" "";
        cout << ""\n"";
    }

    return 0;
}
"
rNBp4Ay9,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 11:45:14 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*4)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
qhrv3RE4,N-Queen Problem,jayati,C++,Tuesday 3rd of October 2023 11:45:10 PM CDT,"//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    vector<vector<int>> ans;
    bool isSafe(vector<vector<int>> &board,int r,int c,int n)
    {
        for(int i=0;i<r;i++)
        {
            if(board[i][c]==1)
            {
                return false;
            }
        }
        for(int i=r-1,j=c-1;i>=0 && j>=0;i--,j--)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
        for(int i=r-1,j=c+1;i>=0 && j<n;i--,j++)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
        return true;
    }
    void helper(vector<vector<int>> &board,int n,int r)
    {
        if(r==n)
        {
            vector<int> temp;
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(board[i][j]==1)
                    {
                        temp.push_back(j+1);
                    }
                }
            }
            ans.push_back(temp);
            return;
        }
        for(int i=0;i<n;i++)
        {
            if(isSafe(board,r,i,n))
            {
                board[r][i]=1;
                helper(board,n,r+1);
                board[r][i]=0;
            }
        }
    }
    vector<vector<int>> nQueen(int n) {
        // code here
        vector<vector<int>> board(n,vector<int>(n,0));
        helper(board,n,0);
        return ans;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        
        Solution ob;
        vector<vector<int>> ans = ob.nQueen(n);
        if(ans.size() == 0)
            cout<<-1<<""\n"";
        else {
            for(int i = 0;i < ans.size();i++){
                cout<<""["";
                for(int u: ans[i])
                    cout<<u<<"" "";
                cout<<""] "";
            }
            cout<<endl;
        }
    }
    return 0;
}
// } Driver Code Ends"
2Ghj81jc,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 10:53:14 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
vNusJcR7,fbtc,coinwalk,JavaScript,Tuesday 3rd of October 2023 10:52:51 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var lol = true;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var zuggbe = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);
 
 
function get(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
zuggbe = ((blert*1).toFixed(8));
if ((nemo==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((nemo!=junky)&&(!bear)){
junky = parseFloat(nemo);
bear = true;
}
if (nemo>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
kPdspznX,AHP insumos - Pablo Balian - Scam - Spam - Estafador [10-1/2023],bombaires,HTML,Tuesday 3rd of October 2023 10:12:35 PM CDT,"AHP insumos - Pablo Balian - Spam - Estafa 

http://cutt.us/sl6nW mas info y formulario, pega este enlace en tu navegador

   ahpinsumos.com.ar
   Real names - Los nombres reales: Pablo Ariel Balian - Patricio Giorno - Sebastian Redondo - Andrea Paola C.
   CUIT (Pablo Ariel Balian): 20-25855667-5
   DNI (Pablo Ariel Balian): 25855667
   DUNS (Pablo Ariel Balian): 972344909
   Date of birth - Fecha de nacimiento [mm/dd/yyyy] (Pablo Ariel Balian): 4/9/1977
   Physical address - Dirección real (Pablo Ariel Balian): General José
   Maria Paz 1477 - 1602 Florida Pay Pablo Ariel Balian a visit!
   Avenida General San Martín 2002 - B1602BWS Florida  Pay Pablo Ariel a visit
   Mariano Acha 4939 - C1430DWU Saavedra (Pablo Ariel Balian private)
   Phone - Teléfono: +54 (0)11 5258-0201
   +54 (0)11 5368-2100
   +54 (0)11 4797-3647
   +54 (0)11 4718-1554
   +54 (0)11 4795-4030
   +54 (0)11 5185-9391 (mobile)
   +54 (0)11 3312-5705 (mobile)
   +54 (0)11 6095-1149 (mobile)
   The computer name using for spamming are LuffiPC or Pablo-PC2.
   info@ahpinsumos.com.ar
   ventas@ahpinsumos.com.ar
   ahp@fibertel.com.ar
   ahpinsumos@fibertel.com.ar
   Andrea Paola C. ahpandrea@gmail.com
   ahpinsumospablo@fibertel.com.ar
   comunidadahp@gmail.com
   ahp1477@yahoo.com.ar
   venta@ahpinsumos.com.ar (?) Is this correct?
   ahpinsumos@gmail.com
   aghepa@hotmail.com
   novedades@ahpinsumos.com.ar (?) Is this correct?
   boletin@ahpinsumos.com.ar (?) Is this correct?"
wnPB5cej,lista1-atv4-v1,AAugustoMenezes,Dart,Tuesday 3rd of October 2023 10:08:19 PM CDT,"void main() {
  Endereco enderecoCliente =
      Endereco(cep: '14500-999', cidade: 'Algum lugar');
 
  Cliente c1 = Cliente('Augusto Menezes', endereco: enderecoCliente);
 
  Cliente c2 = Cliente('Maria da Silva');
 
  print(criaEtiqueta(c1));
  print(criaEtiqueta(c2));
}

class Cliente {
  String nome;
  Endereco? endereco = null;

  Cliente(this.nome, {Endereco? endereco}) : endereco = endereco ?? null;
}

class Endereco {
  String cep;
  String cidade;

  Endereco({required this.cep, required this.cidade});
}

criaEtiqueta(Cliente cliente) {
  if (cliente.endereco?.cep != null) {
    return '$cliente.nome  - CEP $cliente.endereco.cep';
  } else {
    return '$cliente.nome  -  CEP não informado';
  }
}
"
reUgYPcf,lista1-atv4-v2,AAugustoMenezes,Dart,Tuesday 3rd of October 2023 10:03:46 PM CDT,"class Cliente {
  String nome;
  Endereco? endereco;

  Cliente(this.nome, {Endereco? endereco}) : endereco = endereco ?? null;
}

class Endereco {
  String cep;
  String cidade;

  Endereco({required this.cep, required this.cidade});
}

criaEtiqueta(Cliente cliente) {
  String nome = cliente.nome;
  String cep = cliente.endereco?.cep ?? 'não informado';

  return '$nome - CEP $cep';
}

void main() {
  
  Endereco enderecoCliente = Endereco(cep: '43700-000', cidade: 'Simões Filho');
  Cliente cliente1 = Cliente('Augusto Menezes', endereco: enderecoCliente);

  Cliente cliente2 = Cliente('Joana Almeida');

  print(criaEtiqueta(cliente1));
  print(criaEtiqueta(cliente2));
}"
HnVC4kBQ,Mad,Unknown_No_1,PHP,Tuesday 3rd of October 2023 09:50:54 PM CDT,MadGamerTG
GGcevEeq,Error handler springboot,RobertoMessaBrasil,Java,Tuesday 3rd of October 2023 09:32:21 PM CDT,"package com.aaa;
public class BasicException extends Exception {}

package com.aaa.bbb;
public class MyException extends BasicException {}

@ExceptionHandler(value = BasicException.class)
@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public String handleException(BasicException ex) {
    return ex.getMessage()
    // ira mandar para o cliente com.aaa.bbb.MyException
}
"
ZBw74wZG,Error handler springboot,RobertoMessaBrasil,Java,Tuesday 3rd of October 2023 09:31:28 PM CDT,"package com.aaa;
public class BasicException extends Exception {}

package com.aaa.bbb;
public class MyException extends BasicException {}

@ExceptionHandler(value = BasicException.class)
@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public String handleException(BasicException ex) {
    return ex.getMessage()
}
"
PApS0hqP,Untitled,tomdodd4598,Java,Tuesday 3rd of October 2023 08:35:49 PM CDT,"public class InventoryStackList extends NonNullList<ItemStack> {
	
	public InventoryStackList() {
		super();
	}
	
	public InventoryStackList(List<ItemStack> other) {
		super(other, null);
	}
	
	@Override
	public List<ItemStack> subList(int fromIndex, int toIndex) {
		return new SubList<>(this, fromIndex, toIndex);
	}
	
	class SubList<E> extends NonNullList<E> {
		
		private final AbstractList<E> internal;
		private final int offset;
		private int size;
		
		SubList(AbstractList<E> list, int fromIndex, int toIndex) {
			if (fromIndex < 0) {
				throw new IndexOutOfBoundsException(""fromIndex = "" + fromIndex);
			}
			if (toIndex > list.size()) {
				throw new IndexOutOfBoundsException(""toIndex = "" + toIndex);
			}
			if (fromIndex > toIndex) {
				throw new IllegalArgumentException(""fromIndex("" + fromIndex + "") > toIndex("" + toIndex + "")"");
			}
			internal = list;
			offset = fromIndex;
			size = toIndex - fromIndex;
			// this.modCount = internal.modCount;
		}
		
		@Override
		public E set(int index, E element) {
			rangeCheck(index);
			checkForComodification();
			return internal.set(index + offset, element);
		}
		
		@Override
		public E get(int index) {
			rangeCheck(index);
			checkForComodification();
			return internal.get(index + offset);
		}
		
		@Override
		public int size() {
			checkForComodification();
			return size;
		}
		
		@Override
		public void add(int index, E element) {
			rangeCheckForAdd(index);
			checkForComodification();
			internal.add(index + offset, element);
			// this.modCount = internal.modCount;
			++size;
		}
		
		@Override
		public E remove(int index) {
			rangeCheck(index);
			checkForComodification();
			E result = internal.remove(index + offset);
			// this.modCount = internal.modCount;
			--size;
			return result;
		}
		
		private Method removeRangeMethod = null;
		
		@Override
		protected void removeRange(int fromIndex, int toIndex) {
			checkForComodification();
			if (removeRangeMethod == null) {
				try {
					removeRangeMethod = NonNullList.class.getMethod(""removeRange"", int.class, int.class);
				}
				catch (NoSuchMethodException | SecurityException e) {
					throw new UnsupportedOperationException();
				}
			}
			try {
				removeRangeMethod.invoke(internal, fromIndex + offset, toIndex + offset);
			}
			catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
				throw new UnsupportedOperationException();
			}
			// this.modCount = internal.modCount;
			size -= (toIndex - fromIndex);
		}
		
		@Override
		public boolean addAll(Collection<? extends E> c) {
			return addAll(size, c);
		}
		
		@Override
		public boolean addAll(int index, Collection<? extends E> c) {
			rangeCheckForAdd(index);
			int cSize = c.size();
			if (cSize == 0) {
				return false;
			}
			
			checkForComodification();
			internal.addAll(offset + index, c);
			// this.modCount = internal.modCount;
			size += cSize;
			return true;
		}
		
		@Override
		public Iterator<E> iterator() {
			return listIterator();
		}
		
		@Override
		public ListIterator<E> listIterator(final int index) {
			checkForComodification();
			rangeCheckForAdd(index);
			
			return new ListIterator<E>() {
				
				private final ListIterator<E> internalIter = internal.listIterator(index + offset);
				
				@Override
				public boolean hasNext() {
					return nextIndex() < size;
				}
				
				@Override
				public E next() {
					if (hasNext()) {
						return internalIter.next();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public boolean hasPrevious() {
					return previousIndex() >= 0;
				}
				
				@Override
				public E previous() {
					if (hasPrevious()) {
						return internalIter.previous();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public int nextIndex() {
					return internalIter.nextIndex() - offset;
				}
				
				@Override
				public int previousIndex() {
					return internalIter.previousIndex() - offset;
				}
				
				@Override
				public void remove() {
					internalIter.remove();
					// SubList.this.modCount = internal.modCount;
					--size;
				}
				
				@Override
				public void set(E e) {
					internalIter.set(e);
				}
				
				@Override
				public void add(E e) {
					internalIter.add(e);
					// SubList.this.modCount = internal.modCount;
					++size;
				}
			};
		}
		
		@Override
		public List<E> subList(int fromIndex, int toIndex) {
			return new SubList<>(this, fromIndex, toIndex);
		}
		
		private void rangeCheck(int index) {
			if (index < 0 || index >= size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private void rangeCheckForAdd(int index) {
			if (index < 0 || index > size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private String outOfBoundsMsg(int index) {
			return ""Index: "" + index + "", Size: "" + size;
		}
		
		private void checkForComodification() {
			/*if (this.modCount != internal.modCount) {
				throw new ConcurrentModificationException();
			}*/
		}
	}
}
"
5Ug8Tzvp,CS2 Config,RUSS14ND0G,Bash,Tuesday 3rd of October 2023 08:20:49 PM CDT,"//CLEAR
 
	unbindall
 
//MOUSE 
 
	sensitivity ""3.63""
	zoom_sensitivity_ratio ""0.818933027098955175""
	
	bind ""MOUSE_X"" ""yaw""
	bind ""MOUSE_Y"" ""pitch""
 
 	bind ""MOUSE1"" ""+attack""
	bind ""MOUSE2"" ""+attack2""
	bind ""MOUSE3"" ""player_ping""
	bind mwheeldown ""+jump""
	bind mwheelup ""+jump""
 
	bind ""MOUSE5"" ""exec jumpthrow""
 


	bind ""MOUSE4"" ""+voicerecord""
	voice_loopback 1
 
 
 
//ALIASES
 
    //SILENCE IN DM
	alias dm  ""ignorerad; ignoremsg; voice_modenable 0""
 
    //EASY DISCONNECT
	alias dc  ""disconnect""
 
    //showscores
	bind ""tab"" ""+showscores""
	
	//jumpthrow
	// alias jumpthrow ""+jump; -attack; -attack2 ;-jump""
 

//KEYBOARD
 
    //DIRECTIONAL
 
    bind ""w"" ""+forward""
    bind ""s"" ""+back""
    bind ""a"" ""+left""
    bind ""d"" ""+right""
    bind ""ctrl"" ""+duck;""
    bind ""shift"" ""+sprint""
	bind ""SPACE"" ""+jump""
 
    //INTERACT/SELECT
 
    bind ""r"" ""+reload""
    bind ""e"" ""+use;""
    bind ""g"" ""drop;""
    bind ""q"" ""lastinv""
	bind ""0"" ""slot0""
    bind ""1"" ""slot1""
    bind ""2"" ""slot2""
    bind ""3"" ""slot3""
    bind ""4"" ""slot4""
    bind ""5"" ""slot5""
	bind ""5"" ""slot5""
	bind ""6"" ""slot6""
	bind ""7"" ""slot7""
	bind ""8"" ""slot8""
	bind ""9"" ""slot9""
    bind ""f"" ""+lookatweapon""
	bind ""i"" ""toggle show_loadout_toggle""
	bind ""b"" ""buymenu""
	bind ""m"" ""teammenu""
    bind ""u"" ""say_team""
	bind ""t"" ""+spray_menu""
	bind ""y"" ""messagemode""
	bind x ""toggle voice_modenable""
	bind z ""use weapon_knife; use weapon_c4; drop; slot1""
	bind c ""use slot12""
	bind k ""toggle cl_drawhud;toggle cl_draw_only_deathnotices""
 
 
	//SPECIAL SHIT
 
	bind ""DEL"" ""dm;+name""
	bind ""INS"" ""dc""
	bind ""F3"" ""autobuy""
	bind ""F4"" ""rebuy""
	bind ""F9"" ""toggleconsole""
	bind ""F10"" cs_quit_prompt
 
    //BUY
	bind KP_1 ""buy smokegrenade""
	bind KP_2 ""buy hegrenade""
	bind KP_3 ""buy flashbang""
	bind KP_0 ""buy molotov; buy incgrenade""
	bind KP_DEL ""buy decoy""
	bind KP_7 ""buy vesthelm""
	bind KP_8 ""buy defuser""
	bind KP_9 ""buy vest""
	bind KP_4 ""buy m4a4; buy ak47""
	bind KP_5 ""buy awp""
	bind ""kp_minus"" ""buy awp; buy p250""
	bind KP_6 ""buy galilar; buy famas""
	bind ""kp_plus"" ""buy mac10; buy mp9""
	bind ""kp_enter"" ""buy p90""
	bind ""kp_multiply"" ""buy m4a1; buy g3sg1""
	bind ""/"" ""buy ssg08""
	bind ""uparrow"" ""buy deagle; buy revolver""
	bind ""downarrow"" ""buy p250""
	bind ""leftarrow"" ""buy tec9; buy fiveseven""
	bind ""rightarrow"" ""buy elite""

//VOLUME
 
	snd_tensecondwarning_volume "".03""
	snd_menumusic_volume ""0""
	snd_roundend_volume ""0.02""
	snd_roundstart_volume ""0""
	snd_deathcamera_volume ""0""
	snd_mapobjective_volume ""0""
	snd_roundstart_volume 0
	snd_roundend_volume 0
	snd_deathcamera_volume 0

//HUD
 
	cl_use_opens_buy_menu 0
	cl_showloadout 1
	sv_steamgroup 1
	cl_color 3
	cl_hud_color ""0""
	cl_hud_radar_scale ""1.3""
	hud_scaling ""0.900000""
	hud_showtargetid ""1""
	cl_radar_always_centered ""1""
	cl_radar_icon_scale_min ""1.000000""
	cl_radar_rotate ""1""
	cl_radar_scale ""1.000000""
	cl_radar_square_with_scoreboard ""1"" 
 
 

 
 
//VIEWMODEL
 
	viewmodel_fov ""68""
	viewmodel_offset_x ""2.5""
	viewmodel_offset_y ""2""
	viewmodel_offset_z ""-2""
	viewmodel_presetpos ""0""

 
//EXTRA
 
	fps_max 500
	joystick false
	mm_dedicated_search_maxping 45
	host_writeconfig
 
 

//-novid -nojoy -exec autoexec -high -tickrate 128 +mat_queue_mode 2 -threads 8


clear
 
echo ""config loaded"""
EV97thnN,Maximum subset XOR,jayati,C++,Tuesday 3rd of October 2023 08:15:11 PM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// Function to return maximum XOR subset in set[]

class Solution
{
    public:
    int maxSubsetXOR(int arr[], int N)
    {
        //Your code here
        int mx=*max_element(arr,arr+N);
        int msb=31;
        for(int i=31;i>=0;i--)
        {
            int ibit= (mx >> i)&1;
            if(ibit==1)
            {
                msb=i;
                break;
            }
        }
        int curr=0;
        for(int i=msb;i>=0;i--)
        {
            int mxindex=0;
            int mxele=INT_MIN;
            for(int j=curr;j<N;j++)
            {
                int setbit=(arr[j]>>i) &1;
                if(setbit!=0 && arr[j]>mxele)
                {
                    mxele= arr[j];
                    mxindex=j;
                }
            }
            if(mxele == INT_MIN)
            {
                continue;
            }
            swap(arr[curr],arr[mxindex]);
            for(int k=0;k<N;k++)
            {
                if(k==curr)
                {
                    continue;
                }
                if((arr[k]>>i) &1==1)
                {
                    arr[k]=arr[k]^arr[curr];
                }
            }
            curr++;
        }
        int ans=0;
        for(int i=0;i<N;i++)
        {
            ans=ans^arr[i];
        }
        
        return ans;
    }
};

//{ Driver Code Starts.
int main()
{

    int t,n,a[100004],k;
    scanf(""%d"",&t);
    while(t--)
    {
        //cin>>n;
       scanf(""%d"",&n);
        for(int i=0;i<n;i++)
        {
            scanf(""%d"",&a[i]);
        }
        Solution obj;
        printf(""%d\n"",obj.maxSubsetXOR(a,n));
       // cout<<bin(a,0,n-1,k)<<endl;
    }
}
// } Driver Code Ends"
D64XVUwj,Untitled,tifaout,JSON,Tuesday 3rd of October 2023 07:58:45 PM CDT,"{
    
    ""newAppStatus"" : ""off"",

	""new_package_name"" : """",
	""NetworkAds"" : ""fan"",
    ""API_KEY"" : ""a8ebf90d411aacf"",
    ""API_SERVER_URL"" : ""https://megaflix.tifaout.me/rest-api/""

	


}"
7pSGCRqB,admin chat commands,404Coder,Lua,Tuesday 3rd of October 2023 07:45:06 PM CDT,"print(""enabling Chat cmd Prompts"")
wait(3.0)
local Chat = game.User.UserId(Chat, Prompts):GetChatServices)
Commands = {
 local Commands = '[/Noclip]', '[/btools]', '[/Fly]', '[/BigHead]', '[/InfJump]',
'[/speed]',
  }
--//this is for the chat prefix which is the symbol / so the admin can work as a command
local Command = game:GetService(""ChatService"")
 if ChatPrefix == ""/"" then
Prefix.Chat = Commands.onServerEvent('Chat')
function onEnterCommand(CommandOnEnter)
    CommandOnEnter = game:GetPrefix for (Commands)
    end
local onEntered = game for Command i,v in pairs(CommandOnEntered)    
end

--//now this is for the first Command script
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Speed""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Speed"" then
end
wait(1) onEnteredCommand
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 150 --//change to whatever you want it be\\--

--//2nd script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/InfJump""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/InfJump"" then
end
wait(1) onEnteredCommand
local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';

_G.JumpHeight = 50;

function Action(Object, Function) if Object ~= nil then Function(Object); end end

UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
    
--//3rd Script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/NoClip""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/NoClip"" then
end
wait(1) onEnteredCommand
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
    
--//4th script
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/BigHead""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/BigHead"" then
end
wait(1) onEnteredCommand
_G.HeadSize = 40
 _G.HeadOffset = 20
 _G.FEnabled = true
 game:service'RunService'.Stepped:connect(function()
    if _G.FEnabled then
        for i,v in pairs(game:service'Players':GetPlayers()) do
            if v.TeamColor ~= game:service'Players'.LocalPlayer.TeamColor then
            --if v.Name ~= game:service'Players'.LocalPlayer.Name then
                pcall(function()
                    pcall(function()v.Character.Head.Mesh:Destroy() end)
                    v.Character.Head.CanCollide = false
                    v.Character.Head.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                    v.Character.Head.CFrame = v.Character.Torso.CFrame * CFrame.new(0,_G.HeadOffset,0)
                end)
            --end
            end
        end
    end
 end)
    
--//5th script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Btools""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Btool"" then
end
wait(1) onEnteredCommand
a = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
a.BinType = 2
b = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
b.BinType = 3
c = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
c.BinType = 4
    
--//6th script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Fly""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Fly"" then
end
wait(1) onEnteredCommand
local flying = false
local flySpeed = 50 -- you can adjust this value to change the flying speed.
 
 
local function enableFlying()
    if humanoid then
        humanoid.PlatformStand = true
        humanoid.AutoRotate = false
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
        flying = true
    end
end
 
 
local function disableFlying()
    if humanoid then
        humanoid.PlatformStand = false
        humanoid.AutoRotate = true
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
        flying = false
    end
end
 
 
local function handleInput(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end
 
    if flying and input.UserInputType == Enum.UserInputType.Keyboard then
        local moveVector = Vector3.new()
 
        if input.KeyCode == Enum.KeyCode.W then
            moveVector = moveVector + Vector3.new(0, 0, -1)
        end
        if input.KeyCode == Enum.KeyCode.S then
            moveVector = moveVector + Vector3.new(0, 0, 1)
        end
        if input.KeyCode == Enum.KeyCode.A then
            moveVector = moveVector + Vector3.new(-1, 0, 0)
        end
        if input.KeyCode == Enum.KeyCode.D then
            moveVector = moveVector + Vector3.new(1, 0, 0)
        end
 
        character:SetPrimaryPartCFrame(CFrame.new(character.PrimaryPart.Position + moveVector * flySpeed))
    end
end
 
 
game:GetService(""UserInputService"").InputBegan:Connect(handleInput)
game:GetService(""UserInputService"").InputChanged:Connect(handleInput)


--//Made by 404Coder\\--
"
1bmRzkeV,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:18:20 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 6,
    ""194.165.16.11"": 6,
    ""136.144.35.124"": 3,
    ""198.235.24.119"": 9,
    ""62.122.184.188"": 9,
    ""45.143.201.62"": 15,
    ""62.204.41.137"": 12,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 3,
    ""104.152.52.231"": 3,
    ""45.140.17.16"": 12,
    ""185.170.144.113"": 6,
    ""141.98.11.128"": 9,
    ""87.251.75.120"": 3,
    ""45.227.254.54"": 6,
    ""172.233.198.57"": 21,
    ""162.142.125.11"": 3,
    ""198.235.24.140"": 9,
    ""31.43.185.3"": 6,
    ""194.187.176.92"": 3,
    ""111.61.253.55"": 3,
    ""34.211.111.74"": 171,
    ""89.248.170.88"": 3,
    ""179.60.147.15"": 3,
    ""34.97.140.174"": 3,
    ""159.223.91.20"": 6,
    ""45.79.168.172"": 3,
    ""139.59.74.90"": 9,
    ""194.165.16.73"": 6,
    ""51.75.160.42"": 12,
    ""106.116.169.71"": 3,
    ""128.14.227.37"": 3,
    ""165.227.148.10"": 9,
    ""68.183.85.79"": 6,
    ""157.245.4.89"": 3,
    ""58.218.204.183"": 9,
    ""112.220.104.18"": 3,
    ""64.227.160.176"": 18,
    ""198.235.24.44"": 9,
    ""87.251.75.179"": 6,
    ""45.227.254.8"": 6,
    ""167.94.138.127"": 3,
    ""205.210.31.164"": 9,
    ""108.61.179.209"": 48,
    ""192.248.181.147"": 33,
    ""104.238.167.248"": 45,
    ""95.179.162.127"": 48,
    ""45.77.174.118"": 57,
    ""136.244.87.70"": 30,
    ""80.240.17.178"": 27,
    ""140.82.33.15"": 12,
    ""45.76.88.206"": 24,
    ""95.179.165.3"": 54,
    ""45.32.107.109"": 48,
    ""193.142.147.9"": 9,
    ""45.76.91.196"": 27,
    ""149.28.143.164"": 21,
    ""45.227.254.48"": 6,
    ""139.180.140.204"": 12,
    ""139.180.214.187"": 24,
    ""193.142.146.17"": 9,
    ""45.77.37.159"": 18
  },
  ""asn"": {
    ""AS51852"": 6,
    ""AS48721"": 12,
    ""AS396356"": 3,
    ""AS396982"": 39,
    ""AS57523"": 9,
    ""AS210950"": 15,
    ""AS59425"": 12,
    ""AS208091"": 15,
    ""AS197414"": 9,
    ""AS14987"": 3,
    ""AS198953"": 12,
    ""AS209605"": 9,
    ""AS267784"": 18,
    ""AS63949"": 24,
    ""AS398324"": 6,
    ""AS211736"": 6,
    ""AS208843"": 3,
    ""AS24547"": 3,
    ""AS16509"": 171,
    ""AS202425"": 3,
    ""AS209588"": 3,
    ""AS14061"": 51,
    ""AS16276"": 12,
    ""AS4134"": 12,
    ""AS135377"": 3,
    ""AS3786"": 3,
    ""AS20473"": 528,
    ""AS208046"": 18
  },
  ""isp"": {
    ""Private Layer INC"": 6,
    ""Flyservers S.A."": 33,
    ""Latitude.sh"": 3,
    ""Google LLC"": 39,
    ""Chang Way Technologies Co. Limited"": 9,
    ""TOV E-RISHENNYA"": 15,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions LP"": 24,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 OOO"": 12,
    ""UAB Host Baltic"": 9,
    ""Akamai Technologies, Inc."": 24,
    ""Censys, Inc."": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile communications corporation"": 3,
    ""Amazon.com, Inc."": 171,
    ""IP Volume inc"": 3,
    ""DigitalOcean, LLC"": 51,
    ""OVH SAS"": 12,
    ""Chinanet"": 12,
    ""Zenlayer Inc"": 3,
    ""LG DACOM Corporation"": 3,
    ""Choopa"": 186,
    ""The Constant Company, LLC"": 186,
    ""The Constant Company"": 156,
    ""ColocationX Ltd."": 18
  },
  ""org"": {
    ""Private Layer Inc"": 6,
    ""Flyservers S.A"": 12,
    ""Panq B.V"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Chang Way Technologies Co. Limited"": 9,
    ""TOV VAIZ PARTNER"": 15,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 15,
    ""Xhostis"": 9,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 LLC"": 12,
    ""Unknown"": 21,
    ""UAB Host Baltic"": 18,
    ""Akamai Technologies, Inc."": 21,
    ""Censys Inc"": 3,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile"": 3,
    ""AWS EC2 (us-west-2)"": 171,
    ""Quasi Networks LTD."": 3,
    ""Cloud Solutions S.A"": 3,
    ""Google Cloud (asia-northeast2)"": 3,
    ""DigitalOcean, LLC"": 51,
    ""Linode"": 3,
    ""OVH Ltd"": 12,
    ""Chinanet HE"": 3,
    ""UCLOUD"": 3,
    ""Chinanet JS"": 9,
    ""Boranet"": 3,
    ""Censys, Inc"": 3,
    ""Vultr Holdings, LLC"": 330,
    ""Vultr Holdings LLC Frankfurt"": 162,
    ""x33 Networks IBC"": 9,
    ""SGP Vultr"": 24,
    ""ColocationX Ltd"": 9
  },
  ""regionName"": {
    ""Zurich"": 6,
    ""Kaunas"": 21,
    ""New Jersey"": 9,
    ""California"": 36,
    ""Moscow"": 33,
    ""Kyiv City"": 15,
    ""England"": 27,
    ""North Holland"": 27,
    ""Illinois"": 3,
    ""Vilnius"": 18,
    ""Virginia"": 21,
    ""Michigan"": 6,
    ""Land Berlin"": 3,
    ""Hebei"": 6,
    ""Oregon"": 171,
    ""Distrito Federal"": 3,
    ""\u014csaka"": 3,
    ""South West"": 186,
    ""Karnataka"": 33,
    ""Taipei City"": 3,
    ""Hesse"": 357,
    ""Jiangsu"": 9,
    ""Gyeonggi-do"": 3,
    ""English River"": 9
  },
  ""country"": {
    ""Switzerland"": 6,
    ""Lithuania"": 39,
    ""United States"": 246,
    ""Russia"": 33,
    ""Ukraine"": 15,
    ""United Kingdom"": 27,
    ""Netherlands"": 27,
    ""Germany"": 360,
    ""China"": 15,
    ""Venezuela"": 3,
    ""Japan"": 3,
    ""Singapore"": 186,
    ""India"": 33,
    ""Taiwan"": 3,
    ""South Korea"": 3,
    ""Seychelles"": 9
  },
  ""account"": {
    ""Administr"": 78,
    ""Test"": 48,
    ""(empty)"": 18,
    ""ZPRscIUyR"": 3,
    ""bHiSYf"": 3,
    ""ROPXxQ"": 3,
    ""nmap"": 3,
    ""Domain"": 30,
    ""hello"": 258,
    ""aSXKEiQxG"": 3,
    ""eMqhvC"": 3,
    ""nbgiJA"": 3,
    ""user"": 3,
    ""Administrator"": 3,
    ""xyz"": 3,
    ""MttdYBoLp"": 3,
    ""ywMkbI"": 3,
    ""RFChlL"": 3,
    ""JwHENAGTF"": 3,
    ""CaSfik"": 3,
    ""JqMSHN"": 3,
    ""142.93.8.59"": 528
  },
  ""keyboard"": {
    ""Unknown"": 1008
  },
  ""client_build"": {
    ""Unknown"": 1008
  },
  ""client_name"": {
    ""Unknown"": 1008
  },
  ""ip_type"": {
    ""hosting"": 774,
    ""Unknown"": 165,
    ""proxy"": 3,
    ""mobile"": 3,
    ""hosting & proxy"": 63
  }
}"
K1uZCsGm,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 4,
    ""194.165.16.11"": 4,
    ""136.144.35.124"": 2,
    ""198.235.24.119"": 6,
    ""62.122.184.188"": 6,
    ""45.143.201.62"": 10,
    ""62.204.41.137"": 8,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 2,
    ""104.152.52.231"": 2,
    ""45.140.17.16"": 8,
    ""185.170.144.113"": 4,
    ""141.98.11.128"": 6,
    ""87.251.75.120"": 2,
    ""45.227.254.54"": 4,
    ""172.233.198.57"": 14,
    ""162.142.125.11"": 2,
    ""198.235.24.140"": 6,
    ""31.43.185.3"": 4,
    ""194.187.176.92"": 2,
    ""111.61.253.55"": 2,
    ""34.211.111.74"": 114,
    ""89.248.170.88"": 2,
    ""179.60.147.15"": 2,
    ""34.97.140.174"": 2,
    ""159.223.91.20"": 4,
    ""45.79.168.172"": 2,
    ""139.59.74.90"": 6,
    ""194.165.16.73"": 4,
    ""51.75.160.42"": 8,
    ""106.116.169.71"": 2,
    ""128.14.227.37"": 2,
    ""165.227.148.10"": 6,
    ""68.183.85.79"": 4,
    ""157.245.4.89"": 2,
    ""58.218.204.183"": 6,
    ""112.220.104.18"": 2,
    ""64.227.160.176"": 12,
    ""198.235.24.44"": 6,
    ""87.251.75.179"": 4,
    ""45.227.254.8"": 4,
    ""167.94.138.127"": 2,
    ""205.210.31.164"": 6,
    ""108.61.179.209"": 32,
    ""192.248.181.147"": 22,
    ""104.238.167.248"": 30,
    ""95.179.162.127"": 32,
    ""45.77.174.118"": 38,
    ""136.244.87.70"": 20,
    ""80.240.17.178"": 18,
    ""140.82.33.15"": 8,
    ""45.76.88.206"": 16,
    ""95.179.165.3"": 36,
    ""45.32.107.109"": 32,
    ""193.142.147.9"": 6,
    ""45.76.91.196"": 18,
    ""149.28.143.164"": 14,
    ""45.227.254.48"": 4,
    ""139.180.140.204"": 8,
    ""139.180.214.187"": 16,
    ""193.142.146.17"": 6,
    ""45.77.37.159"": 12
  },
  ""asn"": {
    ""AS51852"": 4,
    ""AS48721"": 8,
    ""AS396356"": 2,
    ""AS396982"": 26,
    ""AS57523"": 6,
    ""AS210950"": 10,
    ""AS59425"": 8,
    ""AS208091"": 10,
    ""AS197414"": 6,
    ""AS14987"": 2,
    ""AS198953"": 8,
    ""AS209605"": 6,
    ""AS267784"": 12,
    ""AS63949"": 16,
    ""AS398324"": 4,
    ""AS211736"": 4,
    ""AS208843"": 2,
    ""AS24547"": 2,
    ""AS16509"": 114,
    ""AS202425"": 2,
    ""AS209588"": 2,
    ""AS14061"": 34,
    ""AS16276"": 8,
    ""AS4134"": 8,
    ""AS135377"": 2,
    ""AS3786"": 2,
    ""AS20473"": 352,
    ""AS208046"": 12
  },
  ""isp"": {
    ""Private Layer INC"": 4,
    ""Flyservers S.A."": 22,
    ""Latitude.sh"": 2,
    ""Google LLC"": 26,
    ""Chang Way Technologies Co. Limited"": 6,
    ""TOV E-RISHENNYA"": 10,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions LP"": 16,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 OOO"": 8,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 16,
    ""Censys, Inc."": 4,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile communications corporation"": 2,
    ""Amazon.com, Inc."": 114,
    ""IP Volume inc"": 2,
    ""DigitalOcean, LLC"": 34,
    ""OVH SAS"": 8,
    ""Chinanet"": 8,
    ""Zenlayer Inc"": 2,
    ""LG DACOM Corporation"": 2,
    ""Choopa"": 124,
    ""The Constant Company, LLC"": 124,
    ""The Constant Company"": 104,
    ""ColocationX Ltd."": 12
  },
  ""org"": {
    ""Private Layer Inc"": 4,
    ""Flyservers S.A"": 8,
    ""Panq B.V"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Chang Way Technologies Co. Limited"": 6,
    ""TOV VAIZ PARTNER"": 10,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions"": 10,
    ""Xhostis"": 6,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 LLC"": 8,
    ""Unknown"": 14,
    ""UAB Host Baltic"": 12,
    ""Akamai Technologies, Inc."": 14,
    ""Censys Inc"": 2,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile"": 2,
    ""AWS EC2 (us-west-2)"": 114,
    ""Quasi Networks LTD."": 2,
    ""Cloud Solutions S.A"": 2,
    ""Google Cloud (asia-northeast2)"": 2,
    ""DigitalOcean, LLC"": 34,
    ""Linode"": 2,
    ""OVH Ltd"": 8,
    ""Chinanet HE"": 2,
    ""UCLOUD"": 2,
    ""Chinanet JS"": 6,
    ""Boranet"": 2,
    ""Censys, Inc"": 2,
    ""Vultr Holdings, LLC"": 220,
    ""Vultr Holdings LLC Frankfurt"": 108,
    ""x33 Networks IBC"": 6,
    ""SGP Vultr"": 16,
    ""ColocationX Ltd"": 6
  },
  ""regionName"": {
    ""Zurich"": 4,
    ""Kaunas"": 14,
    ""New Jersey"": 6,
    ""California"": 24,
    ""Moscow"": 22,
    ""Kyiv City"": 10,
    ""England"": 18,
    ""North Holland"": 18,
    ""Illinois"": 2,
    ""Vilnius"": 12,
    ""Virginia"": 14,
    ""Michigan"": 4,
    ""Land Berlin"": 2,
    ""Hebei"": 4,
    ""Oregon"": 114,
    ""Distrito Federal"": 2,
    ""\u014csaka"": 2,
    ""South West"": 124,
    ""Karnataka"": 22,
    ""Taipei City"": 2,
    ""Hesse"": 238,
    ""Jiangsu"": 6,
    ""Gyeonggi-do"": 2,
    ""English River"": 6
  },
  ""country"": {
    ""Switzerland"": 4,
    ""Lithuania"": 26,
    ""United States"": 164,
    ""Russia"": 22,
    ""Ukraine"": 10,
    ""United Kingdom"": 18,
    ""Netherlands"": 18,
    ""Germany"": 240,
    ""China"": 10,
    ""Venezuela"": 2,
    ""Japan"": 2,
    ""Singapore"": 124,
    ""India"": 22,
    ""Taiwan"": 2,
    ""South Korea"": 2,
    ""Seychelles"": 6
  },
  ""account"": {
    ""Administr"": 52,
    ""Test"": 32,
    ""(empty)"": 12,
    ""ZPRscIUyR"": 2,
    ""bHiSYf"": 2,
    ""ROPXxQ"": 2,
    ""nmap"": 2,
    ""Domain"": 20,
    ""hello"": 172,
    ""aSXKEiQxG"": 2,
    ""eMqhvC"": 2,
    ""nbgiJA"": 2,
    ""user"": 2,
    ""Administrator"": 2,
    ""xyz"": 2,
    ""MttdYBoLp"": 2,
    ""ywMkbI"": 2,
    ""RFChlL"": 2,
    ""JwHENAGTF"": 2,
    ""CaSfik"": 2,
    ""JqMSHN"": 2,
    ""142.93.8.59"": 352
  },
  ""keyboard"": {
    ""Unknown"": 672
  },
  ""client_build"": {
    ""Unknown"": 672
  },
  ""client_name"": {
    ""Unknown"": 672
  },
  ""ip_type"": {
    ""hosting"": 516,
    ""Unknown"": 110,
    ""proxy"": 2,
    ""mobile"": 2,
    ""hosting & proxy"": 42
  }
}"
ke7bTaKm,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 2,
    ""194.165.16.11"": 2,
    ""136.144.35.124"": 1,
    ""198.235.24.119"": 3,
    ""62.122.184.188"": 3,
    ""45.143.201.62"": 5,
    ""62.204.41.137"": 4,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 1,
    ""104.152.52.231"": 1,
    ""45.140.17.16"": 4,
    ""185.170.144.113"": 2,
    ""141.98.11.128"": 3,
    ""87.251.75.120"": 1,
    ""45.227.254.54"": 2,
    ""172.233.198.57"": 7,
    ""162.142.125.11"": 1,
    ""198.235.24.140"": 3,
    ""31.43.185.3"": 2,
    ""194.187.176.92"": 1,
    ""111.61.253.55"": 1,
    ""34.211.111.74"": 57,
    ""89.248.170.88"": 1,
    ""179.60.147.15"": 1,
    ""34.97.140.174"": 1,
    ""159.223.91.20"": 2,
    ""45.79.168.172"": 1,
    ""139.59.74.90"": 3,
    ""194.165.16.73"": 2,
    ""51.75.160.42"": 4,
    ""106.116.169.71"": 1,
    ""128.14.227.37"": 1,
    ""165.227.148.10"": 3,
    ""68.183.85.79"": 2,
    ""157.245.4.89"": 1,
    ""58.218.204.183"": 3,
    ""112.220.104.18"": 1,
    ""64.227.160.176"": 6,
    ""198.235.24.44"": 3,
    ""87.251.75.179"": 2,
    ""45.227.254.8"": 2,
    ""167.94.138.127"": 1,
    ""205.210.31.164"": 3,
    ""108.61.179.209"": 16,
    ""192.248.181.147"": 11,
    ""104.238.167.248"": 15,
    ""95.179.162.127"": 16,
    ""45.77.174.118"": 19,
    ""136.244.87.70"": 10,
    ""80.240.17.178"": 9,
    ""140.82.33.15"": 4,
    ""45.76.88.206"": 8,
    ""95.179.165.3"": 18,
    ""45.32.107.109"": 16,
    ""193.142.147.9"": 3,
    ""45.76.91.196"": 9,
    ""149.28.143.164"": 7,
    ""45.227.254.48"": 2,
    ""139.180.140.204"": 4,
    ""139.180.214.187"": 8,
    ""193.142.146.17"": 3,
    ""45.77.37.159"": 6
  },
  ""asn"": {
    ""AS51852"": 2,
    ""AS48721"": 4,
    ""AS396356"": 1,
    ""AS396982"": 13,
    ""AS57523"": 3,
    ""AS210950"": 5,
    ""AS59425"": 4,
    ""AS208091"": 5,
    ""AS197414"": 3,
    ""AS14987"": 1,
    ""AS198953"": 4,
    ""AS209605"": 3,
    ""AS267784"": 6,
    ""AS63949"": 8,
    ""AS398324"": 2,
    ""AS211736"": 2,
    ""AS208843"": 1,
    ""AS24547"": 1,
    ""AS16509"": 57,
    ""AS202425"": 1,
    ""AS209588"": 1,
    ""AS14061"": 17,
    ""AS16276"": 4,
    ""AS4134"": 4,
    ""AS135377"": 1,
    ""AS3786"": 1,
    ""AS20473"": 176,
    ""AS208046"": 6
  },
  ""isp"": {
    ""Private Layer INC"": 2,
    ""Flyservers S.A."": 11,
    ""Latitude.sh"": 1,
    ""Google LLC"": 13,
    ""Chang Way Technologies Co. Limited"": 3,
    ""TOV E-RISHENNYA"": 5,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions LP"": 8,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 OOO"": 4,
    ""UAB Host Baltic"": 3,
    ""Akamai Technologies, Inc."": 8,
    ""Censys, Inc."": 2,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile communications corporation"": 1,
    ""Amazon.com, Inc."": 57,
    ""IP Volume inc"": 1,
    ""DigitalOcean, LLC"": 17,
    ""OVH SAS"": 4,
    ""Chinanet"": 4,
    ""Zenlayer Inc"": 1,
    ""LG DACOM Corporation"": 1,
    ""Choopa"": 62,
    ""The Constant Company, LLC"": 62,
    ""The Constant Company"": 52,
    ""ColocationX Ltd."": 6
  },
  ""org"": {
    ""Private Layer Inc"": 2,
    ""Flyservers S.A"": 4,
    ""Panq B.V"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""TOV VAIZ PARTNER"": 5,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions"": 5,
    ""Xhostis"": 3,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 LLC"": 4,
    ""Unknown"": 7,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 7,
    ""Censys Inc"": 1,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile"": 1,
    ""AWS EC2 (us-west-2)"": 57,
    ""Quasi Networks LTD."": 1,
    ""Cloud Solutions S.A"": 1,
    ""Google Cloud (asia-northeast2)"": 1,
    ""DigitalOcean, LLC"": 17,
    ""Linode"": 1,
    ""OVH Ltd"": 4,
    ""Chinanet HE"": 1,
    ""UCLOUD"": 1,
    ""Chinanet JS"": 3,
    ""Boranet"": 1,
    ""Censys, Inc"": 1,
    ""Vultr Holdings, LLC"": 110,
    ""Vultr Holdings LLC Frankfurt"": 54,
    ""x33 Networks IBC"": 3,
    ""SGP Vultr"": 8,
    ""ColocationX Ltd"": 3
  },
  ""regionName"": {
    ""Zurich"": 2,
    ""Kaunas"": 7,
    ""New Jersey"": 3,
    ""California"": 12,
    ""Moscow"": 11,
    ""Kyiv City"": 5,
    ""England"": 9,
    ""North Holland"": 9,
    ""Illinois"": 1,
    ""Vilnius"": 6,
    ""Virginia"": 7,
    ""Michigan"": 2,
    ""Land Berlin"": 1,
    ""Hebei"": 2,
    ""Oregon"": 57,
    ""Distrito Federal"": 1,
    ""\u014csaka"": 1,
    ""South West"": 62,
    ""Karnataka"": 11,
    ""Taipei City"": 1,
    ""Hesse"": 119,
    ""Jiangsu"": 3,
    ""Gyeonggi-do"": 1,
    ""English River"": 3
  },
  ""country"": {
    ""Switzerland"": 2,
    ""Lithuania"": 13,
    ""United States"": 82,
    ""Russia"": 11,
    ""Ukraine"": 5,
    ""United Kingdom"": 9,
    ""Netherlands"": 9,
    ""Germany"": 120,
    ""China"": 5,
    ""Venezuela"": 1,
    ""Japan"": 1,
    ""Singapore"": 62,
    ""India"": 11,
    ""Taiwan"": 1,
    ""South Korea"": 1,
    ""Seychelles"": 3
  },
  ""account"": {
    ""Administr"": 26,
    ""Test"": 16,
    ""(empty)"": 6,
    ""ZPRscIUyR"": 1,
    ""bHiSYf"": 1,
    ""ROPXxQ"": 1,
    ""nmap"": 1,
    ""Domain"": 10,
    ""hello"": 86,
    ""aSXKEiQxG"": 1,
    ""eMqhvC"": 1,
    ""nbgiJA"": 1,
    ""user"": 1,
    ""Administrator"": 1,
    ""xyz"": 1,
    ""MttdYBoLp"": 1,
    ""ywMkbI"": 1,
    ""RFChlL"": 1,
    ""JwHENAGTF"": 1,
    ""CaSfik"": 1,
    ""JqMSHN"": 1,
    ""142.93.8.59"": 176
  },
  ""keyboard"": {
    ""Unknown"": 336
  },
  ""client_build"": {
    ""Unknown"": 336
  },
  ""client_name"": {
    ""Unknown"": 336
  },
  ""ip_type"": {
    ""hosting"": 258,
    ""Unknown"": 55,
    ""proxy"": 1,
    ""mobile"": 1,
    ""hosting & proxy"": 21
  }
}"
fBvtD3VG,Datos mas frecuentes List<string>,AnmatDev,C#,Tuesday 3rd of October 2023 06:52:28 PM CDT,"using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class RepetitionFinder : MonoBehaviour
{
    // Esta es la lista donde almacenarás los 1000 datos. Es de tipo público, por lo que puedes editarla desde el editor de Unity.
    public List<string> numbers = new List<string>();

    // El método Start se ejecuta automáticamente cuando comienza la escena.
    void Start()
    {
        // Llamamos a la función FindMostRepeated para obtener los 6 valores que más se repiten.
        List<string> mostRepeated = FindMostRepeated(numbers, 6);

        // Luego, recorremos la lista de los valores más repetidos y los imprimimos en la consola de Unity.
        foreach (var val in mostRepeated)
        {
            Debug.Log(val);
        }
    }

    // Esta función devuelve una lista de strings con los valores que más se repiten.
    public List<string> FindMostRepeated(List<string> data, int count)
    {
        // Creamos un diccionario llamado frequencyMap. 
        // Las claves son los números y los valores son las frecuencias de esos números.
        Dictionary<string, int> frequencyMap = new Dictionary<string, int>();

        // Recorremos la lista de números.
        foreach (string num in data)
        {
            // Si el número ya está en el diccionario, incrementamos su frecuencia.
            if (frequencyMap.ContainsKey(num))
            {
                frequencyMap[num]++;
            }
            // Si el número no está en el diccionario, lo añadimos con una frecuencia de 1.
            else
            {
                frequencyMap[num] = 1;
            }
        }

        // A continuación, ordenamos el diccionario por frecuencia de forma descendente.
        // Después, tomamos los primeros 'count' elementos.
        // Finalmente, seleccionamos solo las claves (que son los números) y las convertimos en una lista.
        return frequencyMap.OrderByDescending(pair => pair.Value) // Ordena el diccionario por frecuencia.
                            .Take(count) // Toma los primeros 'count' elementos.
                            .Select(pair => pair.Key) // Selecciona solo las claves.
                            .ToList(); // Convierte la selección en una lista.
    }
}"
7mwda8VC,build menu list of avatars on region,innula,Linden Scripting,Tuesday 3rd of October 2023 06:51:24 PM CDT,"integer iMax;
integer iHandle;
integer iChannel;

key kToucher;
key kChosenUUID;
list lNames;
list lUUIDs;
list lTemp;
list lDialogLabels;
list lMenuChoices;

list lMenuButtons( integer vIntPag )
{
    integer vIdxBeg = 10 * (~-vIntPag);          //-- 10 * (vIntPag - 1), enclose ""~-X"" in parens to avoid LSL bug
    integer vIdxMax = -~(~([] != lMenuChoices) / 10); //-- (llGetListLength( lMenuChoices ) - 1) / 10 + 1
    list vLstRtn =
      llListInsertList(
        llList2List( lMenuChoices, vIdxBeg, vIdxBeg + 9 ), //-- grab 10 dialog buttons
        (list)(""  <<---("" + (string)(vIntPag + (-(vIntPag > 1) | vIdxMax - vIntPag)) + "")""), //-- back button
        -1 ) + //-- inserts back button at index 9, pushing the last menu item to index 10
      (list)(""  ("" + (string)(-~((vIntPag < vIdxMax) * vIntPag)) + "")--->>""); //-- add fwd button at index 11
    
    return //-- fix the order to L2R/T2B
      llList2List( vLstRtn, -3, -1 ) + llList2List( vLstRtn, -6, -4 ) +
      llList2List( vLstRtn, -9, -7 ) + llList2List( vLstRtn, -12, -10 );
}

string strCaption = ""Please choose someone:"";
string strChoice;
default {
  state_entry() {
    iChannel = -((integer)(10000 + llFrand(9999999)));
  }

  attach(key id) {
    if(id){
      llRequestPermissions(id, PERMISSION_TAKE_CONTROLS);//needed to run in no script areas
    }
  }

  run_time_permissions(integer perm) {
    if(perm & PERMISSION_TAKE_CONTROLS){
      llTakeControls(CONTROL_ML_LBUTTON, FALSE, TRUE);
    }
  }

  touch_end(integer num_detected) {

    kToucher = llDetectedKey(0);
    lTemp = llGetAgentList(AGENT_LIST_REGION, []);//build list of avatars on the region

    lNames =[];//clear the lists of existing contents
    lUUIDs= [];
    lDialogLabels=[];
    lMenuChoices=[];

    iMax = -llGetListLength(lTemp);
    do{ //loop through lTemp and populate the lists
      key k = llList2Key(lTemp,iMax);
      lNames +=[llGetDisplayName(k)];
      lUUIDs +=[k];
    }
    while(++iMax);

    integer counter = 0 ;
    iMax = llGetListLength(lNames);
    do{
        lDialogLabels += [(string)(counter + 1)+"": ""+llList2String(lNames, counter)+""\n""];
        lMenuChoices +=[(string)(counter + 1)];
    }
    while(++counter < iMax);
    llOwnerSay(""lMenuChoices is ""+llList2CSV(lMenuChoices));

    llListenRemove(iHandle); // close 
    iHandle = llListen(iChannel, """", """", """");

      string str = """";
      integer i;
      //Display the first 10 sites in dialog
      for (i=0;i<10;++i)
      {
          str += llList2String(lDialogLabels,i);
      }

      llDialog(kToucher, strCaption+""\n""+str, lMenuButtons(1), iChannel);

  }

  listen(integer channel, string name, key id, string message) {

    if(!llSubStringIndex(message, ""  "")){//if the first two characters of the message are leading spaces, then it's the forward or back button
      string str  = """";
      integer menu =  (integer)llGetSubString( message, -~llSubStringIndex( message, ""("" ), -1 );
      integer i;
      for (i=(10*(menu - 1));i<(10*menu);++i){
          str += llList2String(lDialogLabels,i);
      }
      llDialog(kToucher, strCaption+""\n""+str, lMenuButtons(menu), iChannel);
    }
    else{
        integer n = (integer)message -1;
        llRegionSayTo(kToucher, 0, ""You chose: "" + strChoice = llList2String(lNames,n)+"", uuid ""+(string)(kChosenUUID = llList2Key(lUUIDs, n)));
    }
  }
}"
eG5h88gw,script 1 - editor antigo - matheus - variação 2,Danielfc,JavaScript,Tuesday 3rd of October 2023 06:38:10 PM CDT,"<script>
 
document.addEventListener('DOMContentLoaded', (event) => {

	let url = new URL(window.location.href);
	 
	let params = new URLSearchParams(url.search);

	let utm_source = params.get('utm_source'); //vai ler o parametro da url
	let utm_medium = params.get('utm_medium');
	let utm_campaign = params.get('utm_campaign');
	let utm_term = params.get('utm_term');
	let utm_content = params.get('utm_content');
	let utm_id = params.get('utm_id');
	 
	document.querySelector('input[name=""field[1]""]').value = utm_source;
	document.querySelector('input[name=""field[2]""]').value = utm_medium;
	document.querySelector('input[name=""field[3]""]').value = utm_campaign;
	document.querySelector('input[name=""field[4]""]').value = utm_id;
	document.querySelector('input[name=""field[5]""]').value = utm_term;
	document.querySelector('input[name=""field[6]""]').value = utm_content;
	 
});
 
 
</script>"
NvrMZbrr,script 1 - editor antigo - matheus - variação 1,Danielfc,JavaScript,Tuesday 3rd of October 2023 06:37:10 PM CDT,"<script>

document.addEventListener('DOMContentLoaded', (event) => {

	let url = new URL(window.location.href);
	 
	let params = new URLSearchParams(url.search);
	 
	let utm_source = params.get('utm_source');
	let utm_medium = params.get('utm_medium');
	let utm_campaign = params.get('utm_campaign'); 
	let utm_term = params.get('utm_term');
	let utm_content = params.get('utm_content'); 
	let utm_id = params.get('utm_id');
	 
	document.getElementsByName('field[1]')[0].value = utm_source;
	document.getElementsByName('field[2]')[0].value = utm_medium;
	document.getElementsByName('field[3]')[0].value = utm_campaign;
	document.getElementsByName('field[6]')[0].value = utm_id;
	document.getElementsByName('field[4]')[0].value = utm_term;
	document.getElementsByName('field[5]')[0].value = utm_content;
	 

});


</script>"
i00yeFad,StorageManager,zwenboy,Lua,Tuesday 3rd of October 2023 06:31:46 PM CDT,"local manager = peripheral.find(""inventoryManager"")
local chatBox = peripheral.find(""chatBox"")
local rsBridge = peripheral.find(""rsBridge"")

if manager == nil then
    error(""inventoryManager not found"")
end
if chatBox == nil then
    error(""chatBox not found"")
end

local message = {
    {text = ""Moved all items!"", color = ""red""}
}
local json = textutils.serialiseJSON(message) 

function handleGiveCommand(username, message)
    if string.sub(message, 1, 5) == ""!give"" then
        local _, _, command, itemName, quantity = string.find(message, ""(!%w+)%s+(%w+)%s*(%d*)"")
        if command and itemName then
            if quantity == """" then
                quantity = ""1""
            end
            local requestedQuantity = tonumber(quantity)
            if requestedQuantity and requestedQuantity >= 1 and requestedQuantity <= 64 then
                local requestedItem = {name = itemName, amount = requestedQuantity}
                local itemInfo = rsBridge.getItem(requestedItem)
                if itemInfo then
                    if itemInfo.amount >= requestedQuantity then
                        -- Perform the desired action with the extracted information
                        itemInfo.amount = requestedQuantity
						local exportedAmount = rsBridge.exportItemToPeripheral(requestedItem, ""minecraft:chest_1"")
						if exportedAmount >= 0 then
    						print(""Successfully exported "" .. exportedAmount .. "" items."")
						else
    						print(""Failed to export item. Error code: "" .. exportedAmount)
						end
                        local successMessage = ""Successfully gave "" .. requestedQuantity .. "" "" .. itemName .. "" to "" .. username
                        chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = successMessage, color = ""green""}}))
                    else
                        local insufficientMessage = ""Insufficient "" .. itemName .. "" available. There are only "" .. itemInfo.amount .. "" items.""
                        chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = insufficientMessage, color = ""red""}}))
                    end
                else
                    chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""We don't have that item."", color = ""red""}}))
                end
            else
                chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""Invalid quantity. Quantity must be a number between 1 and 64."", color = ""red""}}))
            end
        else
            chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""Invalid command format. Use '!give item_name [quantity]'."", color = ""red""}}))
        end
    end
end



function waitForCommand()
    local event, username, message, uuid, isHidden = os.pullEvent(""chat"")
    if username == manager.getOwner() then
        handleGiveCommand(username, message)
    end
    waitForCommand()
end

waitForCommand()
"
2PYqqz0a,fbtc,coinwalk,JavaScript,Tuesday 3rd of October 2023 06:14:13 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var lol = true;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var zuggbe = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);
 
 
function get(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
zuggbe = ((blert*1).toFixed(8));
if ((nemo==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((nemo!=junky)&&(!bear)){
junky = parseFloat(nemo);
bear = true;
}
if (nemo>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
3QFDbYQv,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 05:51:45 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/800).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
FNXjfKvf,appbar stuff,Futur3Sn0w,JavaScript,Tuesday 3rd of October 2023 05:24:15 PM CDT,"// Appbar stuff

const ffi = require('@lwahonen/ffi-napi');
const ref = require('@lwahonen/ref-napi');
const Struct = require('ref-struct-di')(ref);

// Define the APPBARDATA structure as per the Microsoft documentation
const APPBARDATA = Struct({
    cbSize: ref.types.int,
    hWnd: ref.refType(ref.types.void),
    uCallbackMessage: ref.types.int,
    uEdge: ref.types.int,
    rc: Struct({
        left: ref.types.int,
        top: ref.types.int,
        right: ref.types.int,
        bottom: ref.types.int,
    }),
    lParam: ref.refType(ref.types.void)
});

const shabm_shell32 = ffi.Library('shell32.dll', {
    'SHAppBarMessage': ['int32', ['uint32', APPBARDATA]]
});

const registerwm_user32 = new ffi.Library('user32', {
    'RegisterWindowMessageA': ['uint', ['string']]
});

// user32 MoveWindow signature. may or may not work, i suck at javascript
const movewindow_user32 = new ffi.Library('user32', {
    'MoveWindow': ['bool', [ref.refType(ref.types.void), 'uint32', 'uint32', 'uint32', 'uint32', 'bool']]
});

function ABSetPos(hWnd) {
    let appBarDataPos = new APPBARDATA();
    appBarDataPos.cbSize = APPBARDATA.size;
    appBarDataPos.hWnd = hWnd;
    appBarDataPos.uEdge = 1;
    appBarDataPos.rc.left = 0;
    appBarDataPos.rc.right = 1366;
    appBarDataPos.rc.top = 0;
    appBarDataPos.rc.bottom = 50;

    shabm_shell32.SHAppBarMessage(2 /* ABMsg_QUERYPOS */, appBarDataPos.ref());
    shabm_shell32.SHAppBarMessage(3 /* ABMsg_SETPOS */, appBarDataPos.ref());
    // let result = movewindow_user32.MoveWindow(appBarDataPos.hWnd, appBarDataPos.rc.left, appBarDataPos.rc.top, appBarDataPos.rc.right - appBarDataPos.rc.left, appBarDataPos.rc.bottom - appBarDataPos.rc.top, true);
    movewindow_user32.MoveWindow(appBarDataPos.hWnd, appBarDataPos.rc.left, appBarDataPos.rc.top, appBarDataPos.rc.right - appBarDataPos.rc.left, appBarDataPos.rc.bottom - appBarDataPos.rc.top, true);
    // console.log(result);
}

app.whenReady().then(() => {
    createWindow()

    sWidth = screen.getPrimaryDisplay().workAreaSize.width;

    const trayMenu = Menu.buildFromTemplate([
        { label: 'Settings', type: 'normal', click: () => { optionsPopup() } },
        { label: 'DevTools', type: 'normal', click: () => { win.openDevTools({ mode: 'detach' }) } },
        { type: 'separator' },
        { label: 'Relaunch', type: 'normal', click: () => { app.quit(0); app.relaunch(0) } },
        { label: 'Quit', type: 'normal', click: () => { app.quit() } }
    ])
    const icon = nativeImage.createFromPath('12bar.ico')
    const tray = new Tray(icon)
    tray.setContextMenu(trayMenu)
    tray.on('double-click', () => {
        win.webContents.send('get-theme')
    });

    win.setSize(sWidth, 50, true);
    volumeLevel = audio.get();

    // const networkInterfaces = os.networkInterfaces();
    // console.log(networkInterfaces);
    networkInfo();

    let handle = win.getNativeWindowHandle();
    let hWnd = handle.readUInt32LE(0);
    const hWndBuffer = Buffer.alloc(ref.sizeof.pointer);
    hWndBuffer.writeUInt32LE(hWnd, 0);

    // Register 12bar to allow for it to send AppBar messages to Windows
    let registerUCallback = registerwm_user32.RegisterWindowMessageA(""AppBarMessage"")

    // Initialize the APPBARDATA structure
    let appBarData = new APPBARDATA();
    appBarData.cbSize = APPBARDATA.size;
    appBarData.hWnd = hWndBuffer;
    appBarData.uCallbackMessage = registerUCallback;
    appBarData.uEdge = 1;
    appBarData.rc.left = 0;
    appBarData.rc.top = 0;
    appBarData.rc.right = 1366;
    appBarData.rc.bottom = 50;

    // Register the appbar
    let result = shabm_shell32.SHAppBarMessage(0, appBarData.ref());
    shabm_shell32.SHAppBarMessage(0, appBarData.ref());
    console.log(result);
    ABSetPos(hWndBuffer);
})"
1YAnB3Rm,MOK layout Arebica,dksetiavan,YAML,Tuesday 3rd of October 2023 05:08:59 PM CDT,"{
""title"":""Arebica"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""ڃشەرتزۆىۉپ"",
""اسدفغحيقل"",
""[SHIFT]چڃڄوبنمݩ[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""ڠثةظطژ[XK:ٌُ]ٖ[XK:ًَ][XK:ٍِ]"",
""ءصذضعخئكڵ"",
""[SHIFT]ـٮجّْٗۤ[MC:ںٛ][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
LqKpR9F9,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 05:04:54 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
Qs0vzM75,startup.lua,hugohamon,Lua,Tuesday 3rd of October 2023 04:52:13 PM CDT,"-- Turtle layout:
-- Lava bucket in slot 1
-- Dispenser in slot 2
-- Redstone block in slot 3
-- Backpack in slot 4
-- Any block in slot 5 to 16

-- Constants
local PASTEBIN = ""bGsHVtex""
local CHECK_UPDATE = true
local SAVE_FILE = ""save""

local BEDROCK_LEVEL = -60
local LOWER_Y = -64
local UPPER_Y = 320

-- Where to place the backpack modulo 16
local backpack_coordinate = {
    { x = 4,  z = 4 },
    { x = 4,  z = 13 },
    { x = 14, z = 4 },
    { x = 14, z = 13 }
}

-- Is utils download ? If not, download it
if not fs.exists(""utils.lua"") then
    shell.run(""pastebin"", ""get"", PASTEBIN, ""utils.lua"")
end

-- Load utils
local utils = require(""utils"")

-- Is utils up to date ? If not, update it and reload it
if CHECK_UPDATE then
    print(""Checking utils version -> "")
    if not utils.isUpToDate() then
        print(""Updated utils -> "")
        fs.delete(""utils.lua"")
        shell.run(""pastebin"", ""get"", PASTEBIN, ""utils.lua"")
        utils = require(""utils"")
    end
end

-- Load variables
local variables = {}

-- Load variables if they exist, else ask the user for them
if not fs.exists(""save"") then
    variables[""turtle_x""] = 0
    variables[""turtle_y""] = 0
    variables[""turtle_z""] = 0
    variables[""turtle_start_position_y""] = utils.getUserLocation(""Enter the y of the turtle: "", BEDROCK_LEVEL, UPPER_Y)
    variables[""turtle_direction""] = ""north""
    variables[""turtle_start_position_direction""] = variables[""turtle_direction""]
    variables[""chunk_x""] = utils.getUserChunk(""Enter the number of chunks to eat on the x axis: "")
    variables[""chunk_z""] = utils.getUserChunk(""Enter the number of chunks to eat on the z axis: "")
    variables[""layer_number""] = utils.getUserLocation(""Enter the number of layers to eat: "", 0,
        variables[""turtle_start_position_y""] - BEDROCK_LEVEL)
    variables[""backpack_step""] = 0
else
    variables = utils.loadTableFromFile(SAVE_FILE)
end

local lava_bucket_needed = math.ceil((variables[""layer_number""] + 1) * (variables[""chunk_x""] * 16) * (variables[""chunk_z""] * 16) / 1000)
print(""You need "" .. lava_bucket_needed .. "" lava buckets"")

if turtle.getFuelLevel() < 1000 then
    print(""Please put at least 1000 fuel in the turtle"")
    turtle.select(1)
    while turtle.getFuelLevel() < 1000 do
        if turtle.refuel(0) then
            turtle.refuel()
            turtle.dropUp()
            if turtle.getFuelLevel() < 1000 then
                print(""Please put at least 1000 fuel in the turtle"")
            end
        end
        os.sleep(1)
    end
end

if turtle.getItemCount(1) ~= 1 then
    print(""Please put exactly one lava bucket in the turtle"")
    turtle.select(1)
    while turtle.getItemCount(1) ~= 1 do
        os.sleep(1)
    end
end

if variables[""backpack_step""] ~= 0 then
    local success, block = turtle.inspect()
    if not success then
        success, block = turtle.inspectDown()
        if not success then
            utils.goDown(variables)
        end
    end
    turtle.select(4)
    success, block = turtle.inspect()
    if success and block[""name""] == ""minecraft:dispenser"" then
        turtle.suck()
        turtle.select(2)
        turtle.dig()
    else
        turtle.dig()
        turtle.select(3)
        turtle.digDown()
        utils.goDown(variables)
        turtle.select(2)
        turtle.dig()
    end
    turtle.select(1)
    variables[""backpack_step""] = 0
    utils.saveTableToFile(variables, SAVE_FILE)
end


utils.goToStartLayer(variables)

for i = 1, variables[""layer_number""] - variables[""turtle_y""] do
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.mineAndTurn(""right"", variables)
    for j = 1, 7 + (variables[""chunk_x""] - 1) * 8 do
        utils.mineForward(14 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
        utils.mineAndTurn(""left"", variables)
        utils.mineForward(14 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
        utils.mineAndTurn(""right"", variables)
    end
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.turnRight(variables)
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.turnRight(variables)
    utils.goDown(variables)
    variables[""layer_number""] = variables[""layer_number""] - 1
    utils.saveTableToFile(variables, SAVE_FILE)
end
"
w6U2PHUJ,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Tuesday 3rd of October 2023 04:50:25 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 163, in load_comment
    process_command_non_mod_user(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 135, in process_command_non_mod_user
    output = karma_plus_command_non_mod_users(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 88, in karma_plus_command_non_mod_users
    conv_check_result = conversation_checks.checks_for_karma_command(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/conversation_checks.py"", line 76, in checks_for_karma_command
    bot_responses.deleted_or_removed(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 106, in deleted_or_removed
    reply(comment, comment_body)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 21, in reply
    new_comment.mod.lock()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/mixins/__init__.py"", line 153, in lock
    self.thing._reddit.post(API_PATH[""lock""], data={""id"": self.thing.fullname})
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 842, in post
    return self._objectify_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
HShfxnkP,cpp 2,myloyo,C++,Tuesday 3rd of October 2023 04:40:21 PM CDT,"#include <iostream>
#include <Windows.h>
#include <cmath>
using namespace std;

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    setlocale(LC_ALL, ""Russian"");
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int Ax, Ay, Bx, By, Cx, Cy, Dx, Dy;
    cin >> Ax >> Ay >> Bx >> By >> Cx >> Cy >> Dx >> Dy;

    double ab = sqrt((Bx - Ax) * (Bx - Ax) + (By - Ay) * (By - Ay));
    double bc = sqrt((Cx - Bx) * (Cx - Bx) + (Cy - By) * (Cy - By));
    double cd = sqrt((Dx - Cx) * (Dx - Cx) + (Dy - Cy) * (Dy - Cy));
    double ad = sqrt((Ax - Dx) * (Ax - Dx) + (Ay - Dy) * (Ay - Dy));
    double ac = sqrt(pow(Cx - Ax, 2) + pow(Cy - Ay, 2));
    double bd = sqrt(pow(Bx - Dx, 2) + pow(By - Dy, 2));
    double eps = 1e-10;

    if (abs(ab - bc) < eps && abs(bc - cd) < eps && abs(cd - ad) < eps && abs(ad - ab) < eps) {
        if (abs(ac - bd) < eps) {
            cout << ""Квадрат"" << endl;
            double p = ab + bc + cd + ad;
            double s = ab * bc;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
        else {
            cout << ""Ромб"" << endl;
            double p = ab + bc + cd + ad;
            double s = 0.5 * ac * bd;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
    }
    else if (abs(ab - cd) < eps && abs(bc - ad) < eps && abs(ab - bc) > eps) {
        if (abs(ac - bd) < eps) {
            cout << ""Прямоугольник"" << endl;
            double p = ab + bc + cd + ad;
            double s = ab * bc;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
        else {
            cout << ""Параллелограмм"" << endl;
        }
    }
    else {
        cout << ""Не параллелограмм"" << endl;
    }
}"
