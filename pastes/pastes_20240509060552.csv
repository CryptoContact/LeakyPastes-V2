id,title,username,language,date,content
PyEMaAFB,Pastebin.ai - #1 pastebin alternative,xxsa,PHP,Thursday 9th of May 2024 01:01:47 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..............
...........................
"
u7zuz1sf,Receptor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:16:26 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC; MCP19110 Configuration Bit Settings
; Assembly source line config statements

 LIST	   P=16F84A
 INCLUDE  <P16F84A.INC>

   ERRORLEVEL -302
   
variables udata_shr 0x0C
cuenta	    res 1	    ; El contador a visualizar.
Count1	    res 1
contador    res 1
datoserie   res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1


; ZONA DE CÓDIGOS ********************************************************************

    ORG	    0x00	    ; El programa comienza en la dirección 0.
    goto    Inicio
    org	    0x04
    goto    Timer0_interrupcion
Inicio
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las líneas del Puerto B se configuran como salida.
    movlw   b'00000001'	    ; Las 4 líneas del Puerto A se configuran como entrada.
    movwf   TRISA
    movlw   b'00000111'
    movwf   OPTION_REG	    ;prescaler a 256   
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB
Principal
    movlw   0x08
    movwf   cuenta
    movlw   0x04
    movwf   contador
    btfsc   PORTA,0
    goto    Principal
;hay un tiempo aleatorio que debo esperar para obtener el uno del dato star.
EsperoUno
    btfss   PORTA,0
    goto    EsperoUno

;tiempo para reconocer 1 de dato STAR  (5ms)
TiempoUno
    ;se testea en cada momento
    btfss   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    call    Retardo_500micros
    decfsz  cuenta,1
    goto    TiempoUno
    bsf	    PORTB,7	    ; PRUEBASSS
    movlw   0x08
    movwf   cuenta
;tiempo que es cero de dato STAR  (5ms)
    call    Retardo_1ms
TiempoCero
;se testea en cada momento
    call    Retardo_500micros
    btfsc   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    decfsz  cuenta,1
    goto    TiempoCero
    clrf    datoserie
; verifico dato enviado durante 20ms
    call    Retardo_1ms
    movlw   d'14'
    movwf   TMR0	    ; CARGO EL TIMER0
    movlw   b'10100000'    
    movwf   INTCON	    ; AUTORIZO INTERRUPCION DEL TIMER0

LOOPDATOS
    call    Retardo_1ms
    movf    PORTA,0 
    movwf   Count1
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    bsf     STATUS,0
    btfss   Count1,0 
    bcf     STATUS,0 
    rrf     datoserie,1  
    call    Retardo_2ms
    decfsz  contador,1
    goto    LOOPDATOS
;continua. El swapf es para obtener el verdadero dato     DATO ->  DATOSERIE
;se divide en 2 segmentos de 4 bits, el swapf cambia, luego    (DSERIE1)(DSERIE2)  ->  (DSERIE2)(DSERIE1)
    swapf   datoserie,1
    movf    datoserie,0 
    movwf   PORTB
;espero un tiempo menor a 40ms 
    call    Retardo_10ms
    goto    Principal
Fin
    clrf    PORTB
    goto    Principal
    
;Temporizacion por desbordamiento del Timer0
Timer0_interrupcion	    
    btfss   PORTA,0
    clrf    PORTB
    ;TEST/////////////////////////
    movlw   0x80
    xorwf   PORTB,F
    ;////////////////////////////////
    bcf     INTCON,T0IF
    retfie
;---------------------------------------------


;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. López.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
;
Retardo_500micros			; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'164'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_200micros				; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'64'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_100micros				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'31'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_50micros				; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'14'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_20micros				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
;
; El próximo bloque ""RetardoMicros"" tarda:
; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
;
RetardoMicros
	movwf	R_ContA			; Aporta 1 ciclo máquina.
Rmicros_Bucle
	decfsz	R_ContA,F		; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	Rmicros_Bucle		; Aporta (K-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.
;
;En total estas subrutinas tardan:
; - Retardo_500micros:	2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
; - Retardo_200micros:	2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
; - Retardo_100micros:	2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
; - Retardo_50micros :	2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
; - Retardo_20micros :	2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
       
    
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'2'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'1'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
;
; El próximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
; que a 4 MHz son 1002 µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo máquina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos máquina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
;
; El próximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo máquina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos máquina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos máquina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos máquina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos máquina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.	
	
    END"
P5nfL0Cb,Transmisor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:13:51 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
 LIST P=16F84A
 INCLUDE  <P16F84A.INC>

  ERRORLEVEL -302
  
variables udata_shr 0x0C
Contador    res 1	    ; El contador a visualizar.
Count1	    res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1
	

; ZONA DE CÓDIGOS ********************************************************************
    org	    0x00
    goto    INICIO
 
INICIO
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las líneas del Puerto B se configuran como salida.
    movlw   b'00001111'	    ; Las 4 líneas del Puerto A se configuran como entrada.
    movwf   TRISA
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB	    ; comenzamos con bit 0 en la salida
Principal
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    movwf   Contador        ; guardo dato enviado
    btfsc   STATUS,2
    goto    Fin
    call    Retardo_20ms    ; Espera que se estabilicen los niveles de tensión.
;compruebo que sea el mismo dato
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    subwf   Contador,0
    btfss   STATUS,2	    ; Comprueba si es un rebote.
    goto    Fin		    ; Era un rebote y sale fuera.
    clrf    Count1
;Pulsador correcto, procedo a enviar datos.   
    bsf	    PORTB,3
;envia los datos
    bsf	    PORTB,1	    ; activa el tx
;primero envia el dato STAR   (1 7ms y 0 5ms)
    call    DATOUNO
    bcf	    PORTB,0
    call    Retardo_5ms	
;envio dato
BITS
    btfss   Contador,0
    goto    PREDATO
    call    DATOUNO
CONTINUAR
    rrf	    Contador,1
    incf    Count1
    movf    Count1,W	    ; Lee el valor de las variables de entrada.
    sublw   d'4'
    btfss   STATUS,2
    goto    BITS
;espacio entre dato y dato enviado
    bcf	    PORTB,0
    bcf	    PORTB,1
    bcf	    PORTB,3
    call    Retardo_20ms
Fin	
    goto    Principal

PREDATO
   call	    DATOCERO
   goto	    CONTINUAR
DATOUNO
   bsf	    PORTB,0
   call	    Retardo_5ms
   return
DATOCERO
   bcf	    PORTB,0
   call	    Retardo_5ms
   return

;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. López.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'2'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'1'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
;
; El próximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
; que a 4 MHz son 1002 µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo máquina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos máquina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
;
; El próximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo máquina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos máquina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos máquina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos máquina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos máquina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

	
	
    END"
iBTwx45d,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Thursday 9th of May 2024 12:12:53 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_511821.pdf

Working as of:
09 May 2024"
UcQJvsmg,[JS] YOUTUBE MP3 DOWNLOADER,WILDAN_IZZUDIN,JavaScript,Thursday 9th of May 2024 12:05:09 AM CDT,"const puppeteer = require('puppeteer');
const iPhone = puppeteer.devices['iPhone 12']

module.exports = async url => {
   const browser = await puppeteer.launch({
      headless: 'new',
      args: [
         ""--fast-start"",
         ""--disable-extensions"",
         ""--no-sandbox"",
         ""--disable-setuid-sandbox"",
         ""--no-gpu"",
         ""--disable-background-timer-throttling"",
         ""--disable-renderer-backgrounding"",
         ""--override-plugin-power-saver-for-testing=never"",
         ""--disable-extensions-http-throttling"",
         ""--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.3""
      ]
   })
   try {
      const page = await browser.newPage()
      await page.emulate(iPhone)
      await page.goto('https://ytmp3s.nu', {
         waitUntil: 'networkidle2',
         timeout: 0
      })
      await page.type('input#url', url)
      await page.click('input[value=""Convert""]')
      await page.waitForSelector('#progress', {
         hidden: true
      })
      const fileName = await page.evaluate(() => {
         const el = document.querySelector('form > div')
         return el ? el.innerText: ''
      })
      const fileUrl = await page.evaluate(() => {
         const el = document.querySelector('form > div > a[rel=""nofollow""]')
         return el ? el.href: ''
      })
      await browser.close()
      if (!fileUrl) return ({
         status: false,
         msg: `Can't contvert file!`
      })
      return ({
         status: true,
         data: {
            filename: fileName + '.mp3',
            url: fileUrl
         }
      })
   } catch (e) {
      await browser.close()
      return ({
         status: false,
         msg: e.message
      })
   }
}"
CNPQCqF9,fourth_task,artmexbet,C,Wednesday 8th of May 2024 11:39:40 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <pthread.h>
#include <string.h>
#include <semaphore.h>

#define ROWS 4
#define COLS 5

struct ThreadResult {
    int count;
    int indexes[6];
};

struct TaskQueue {
    struct TaskQueue *next;
    struct ThreadResult result;
    int threadNumber;
};

struct ThreadInfo {
    int matrix[ROWS][COLS];
    int deltaX;
    int deltaY;
    int threadNumber;
};

void fill_matrix(int array[ROWS][COLS]) {
    srand(time(NULL));
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            array[i][j] = 1 + rand() % 3;
        }
    }
}

void print_matrix(int array[ROWS][COLS]) {
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            printf(""%d "", array[i][j]);
        }
        printf(""\n"");
    }
}

pthread_mutex_t mutex;
struct TaskQueue *head = NULL;
struct TaskQueue *new = NULL;
struct TaskQueue *tail = NULL;

sem_t sem;

void *get_values(void *info_) {
    sem_wait(&sem);

    struct ThreadInfo *info = (struct ThreadInfo *) info_;
    struct ThreadResult *result = (struct ThreadResult *) malloc(sizeof(struct ThreadResult));
    result->count = 0;
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            int k = 0;
            int lengthOfHorizontal = 0; // Сюда сохраняем длину повторяющихся символов в строке
            while (0 < j + k && j + k < COLS && info->matrix[i][j + k] == info->matrix[i][j]) {
                lengthOfHorizontal++;
                int l = 0;
                int lengthOfVertical = 0; // Сюда сохраняем длину повторяющихся символов в столбце
                while (0 < i + l && i + l < ROWS && info->matrix[i + l][j + k] == info->matrix[i][j + k]) {
                    lengthOfVertical++;
                    l += info->deltaX;
                }
                if (lengthOfHorizontal + lengthOfVertical > result->count) {
                    result->indexes[0] = i;
                    result->indexes[1] = j;
                    result->indexes[2] = i;
                    result->indexes[3] = j + k;
                    if (l != 0) {
                        result->indexes[4] = i + l - 1 * info->deltaX;
                        // Если в l добавлялись элементы, значение в ней будет на единицу больше (или меньше,
                        // в зависимости от deltaX) из-за того, что мы сначала проверяем, а уже затем увеличиваем l
                        // в цикле while выше
                    } else {
                        // Если же l = 0, вычитать ничего не нужно, нужно лишь записать эту же строку в нужный индекс
                        result->indexes[4] = i;
                    }
                    result->indexes[5] = j + k;
                    result->count = lengthOfHorizontal + lengthOfVertical;
                    // Используем мьютекс для записи промежуточного результата в общую очередь
                    // Лочим поток
                    pthread_mutex_lock(&mutex);
                    tail->result = *result;
                    tail->threadNumber = info->threadNumber;
                    // Выделяем место для следующей операции
                    new = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
                    tail->next = new;
                    // Заменяем последний элемент на текущий
                    tail = new;
                    // Разблокируем поток
                    pthread_mutex_unlock(&mutex);
                }
                k += info->deltaY;
            }
        }
    }
    sem_post(&sem);
    return (void *) result;
}

void find_g(int matrix[ROWS][COLS], int k) {
    // Инициализация очереди операций и мьютекса
    head = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
    tail = head;
    pthread_mutex_init(&mutex, NULL);

    sem_init(&sem, 1, k);

    int maxCount = 0;
    int coords[] = {0, 0, 0, 0, 0, 0};
    struct ThreadInfo rightUpper, leftUpper, leftLower, rightLower;
    struct ThreadResult *rightUpperResult, *leftUpperResult, *leftLowerResult, *rightLowerResult;
    memcpy(rightUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftLower.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(rightLower.matrix, matrix, ROWS * COLS * sizeof(int));
    rightUpper.deltaX = 1;
    rightUpper.deltaY = -1;
    rightUpper.threadNumber = 1;

    leftUpper.deltaX = -1;
    leftUpper.deltaY = -1;
    leftUpper.threadNumber = 2;

    leftLower.deltaX = -1;
    leftLower.deltaY = 1;
    leftLower.threadNumber = 3;

    rightLower.deltaX = 1;
    rightLower.deltaY = 1;
    rightLower.threadNumber = 4;

    pthread_t thread1, thread2, thread3, thread4;
    // По сути, каждый отдельный поток считает лучший результат для своего угла.
    // После этого основной поток (эта функция) собирает данные воедино и выводит результат
    pthread_create(&thread1, NULL, &get_values, &rightUpper);
    pthread_create(&thread2, NULL, &get_values, &leftUpper);
    pthread_create(&thread3, NULL, &get_values, &leftLower);
    pthread_create(&thread4, NULL, &get_values, &rightLower);
    pthread_join(thread1, (void **) &rightUpperResult);
    pthread_join(thread2, (void **) &leftUpperResult);
    pthread_join(thread3, (void **) &leftLowerResult);
    pthread_join(thread4, (void **) &rightLowerResult);
    if (rightUpperResult->count > maxCount) {
        maxCount = rightUpperResult->count;
        memcpy(coords, rightUpperResult->indexes, sizeof(rightUpperResult->indexes));
    }
    if (leftUpperResult->count > maxCount) {
        maxCount = leftUpperResult->count;
        memcpy(coords, leftUpperResult->indexes, sizeof(leftUpperResult->indexes));
    }
    if (leftLowerResult->count > maxCount) {
        maxCount = leftLowerResult->count;
        memcpy(coords, leftLowerResult->indexes, sizeof(leftLowerResult->indexes));
    }
    if (rightLowerResult->count > maxCount) {
        maxCount = rightLowerResult->count;
        memcpy(coords, rightLowerResult->indexes, sizeof(rightLowerResult->indexes));
    }
    for (int i = 0; i < 6; i++) {
        printf(""%d "", coords[i]);
    }
    printf(""\nTask queue:\n"");
    struct TaskQueue *current = head;
    while (current->next != NULL) {
        printf(""Thread %d: "", current->threadNumber);
        for (int i = 0; i < 6; i++) {
            printf(""%d "", current->result.indexes[i]);
        }
        printf(""\n"");
        current = current->next;
    }
}

int main() {
//    printf(""Hello, World!\n"");
    printf(""Insert a k number: "");
    int k;
    scanf_s(""%d"", &k);
    int arr[ROWS][COLS] = {{0, 2, 0, 2, 0},
                           {0, 1, 1, 1, 0},
                           {2, 0, 2, 1, 1},
                           {0, 2, 0, 1, 1}};
//    fill_matrix(arr);
    print_matrix(arr);
    find_g(arr, k);
    return 0;
}
"
UQA7La73,sharelatex_overleaf_docker_compose,shinemic,YAML,Wednesday 8th of May 2024 10:58:26 PM CDT,"version: '2.2'
services:
    sharelatex:
        restart: always
        # Server Pro users:
        # image: quay.io/sharelatex/sharelatex-pro
        image: sharelatex/sharelatex
        container_name: sharelatex
        depends_on:
            mongo:
                condition: service_healthy
            redis:
                condition: service_started
        ports:
            - 9088:80
        links:
            - mongo
            - redis
        stop_grace_period: 60s
        volumes:
            - /data/volumes/sharelatex/sharelatex:/var/lib/sharelatex
            ########################################################################
            ####  Server Pro: Uncomment the following line to mount the docker  ####
            ####             socket, required for Sibling Containers to work    ####
            ########################################################################
            # - /var/run/docker.sock:/var/run/docker.sock
        environment:

            SHARELATEX_APP_NAME: Datalab Overleaf CE

            SHARELATEX_MONGO_URL: mongodb://mongo/sharelatex

            # Same property, unfortunately with different names in
            # different locations
            SHARELATEX_REDIS_HOST: redis
            REDIS_HOST: redis

            ENABLED_LINKED_FILE_TYPES: 'project_file,project_output_file'

            # Enables Thumbnail generation using ImageMagick
            ENABLE_CONVERSIONS: 'true'

            # Disables email confirmation requirement
            EMAIL_CONFIRMATION_DISABLED: 'true'

            # temporary fix for LuaLaTex compiles
            # see https://github.com/overleaf/overleaf/issues/695
            TEXMFVAR: /var/lib/sharelatex/tmp/texmf-var

            ## Set for SSL via nginx-proxy
            #VIRTUAL_HOST: 103.112.212.22

            # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
            # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
            # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
            # SHARELATEX_ADMIN_EMAIL: support@it.com

            # SHARELATEX_LEFT_FOOTER: '[{""text"": ""Powered by <a href=\""https://www.sharelatex.com\"">ShareLaTeX</a> 2016""},{""text"": ""Another page I want to link to can be found <a href=\""here\"">here</a>""} ]'
            # SHARELATEX_RIGHT_FOOTER: '[{""text"": ""Hello I am on the Right""} ]'

            # SHARELATEX_EMAIL_FROM_ADDRESS: ""team@sharelatex.com""

            # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID:
            # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY:

            # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
            # SHARELATEX_EMAIL_SMTP_PORT: 587
            # SHARELATEX_EMAIL_SMTP_SECURE: false
            # SHARELATEX_EMAIL_SMTP_USER:
            # SHARELATEX_EMAIL_SMTP_PASS:
            # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
            # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
            # SHARELATEX_EMAIL_SMTP_NAME: '127.0.0.1'
            # SHARELATEX_EMAIL_SMTP_LOGGER: true
            # SHARELATEX_CUSTOM_EMAIL_FOOTER: ""This system is run by department x""

            # ENABLE_CRON_RESOURCE_DELETION: true

            ################
            ## Server Pro ##
            ################

            # SANDBOXED_COMPILES: 'true'

            # SANDBOXED_COMPILES_SIBLING_CONTAINERS: 'true'
            # SANDBOXED_COMPILES_HOST_DIR: '/var/sharelatex_data/data/compiles'

            # DOCKER_RUNNER: 'false'

            ## Works with test LDAP server shown at bottom of docker compose
            # SHARELATEX_LDAP_URL: 'ldap://ldap:389'
            # SHARELATEX_LDAP_SEARCH_BASE: 'ou=people,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_SEARCH_FILTER: '(uid={{username}})'
            # SHARELATEX_LDAP_BIND_DN: 'cn=admin,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_BIND_CREDENTIALS: 'GoodNewsEveryone'
            # SHARELATEX_LDAP_EMAIL_ATT: 'mail'
            # SHARELATEX_LDAP_NAME_ATT: 'cn'
            # SHARELATEX_LDAP_LAST_NAME_ATT: 'sn'
            # SHARELATEX_LDAP_UPDATE_USER_DETAILS_ON_LOGIN: 'true'

            # SHARELATEX_TEMPLATES_USER_ID: ""578773160210479700917ee5""
            # SHARELATEX_NEW_PROJECT_TEMPLATE_LINKS: '[ {""name"":""All Templates"",""url"":""/templates/all""}]'


            # SHARELATEX_PROXY_LEARN: ""true""

    mongo:
        restart: always
        image: mongo:4.4
        container_name: mongo
        command: ""--replSet overleaf""
        expose:
          - 27017
        volumes:
          - /data/volumes/sharelatex/mongo_data:/data/db
        healthcheck:
          test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
          interval: 10s
          timeout: 10s
          retries: 5

    mongoinit:
        image: mongo:4.4
        # this container will exit after executing the command
        restart: ""no""
        depends_on:
          mongo:
            condition: service_healthy
        entrypoint:
          [
            ""mongo"",
            ""--host"",
            ""mongo:27017"",
            ""--eval"",
            'rs.initiate({ _id: ""overleaf"", members: [ { _id: 0, host: ""mongo:27017"" } ] })',
          ]

    redis:
        restart: always
        image: redis:6.2
        container_name: redis
        expose:
            - 6379
        volumes:
            - /data/volumes/sharelatex/redis_data:/data

    # ldap:
    #    restart: always
    #    image: rroemhild/test-openldap
    #    container_name: ldap
    #    expose:
    #        - 389

    # See https://github.com/jwilder/nginx-proxy for documentation on how to configure the nginx-proxy container,
    # and https://github.com/overleaf/overleaf/wiki/HTTPS-reverse-proxy-using-Nginx for an example of some recommended
    # settings. We recommend using a properly managed nginx instance outside of the Overleaf Server Pro setup,
    # but the example here can be used if you'd prefer to run everything with docker-compose

    # nginx-proxy:
    #     image: jwilder/nginx-proxy
    #     container_name: nginx-proxy
    #     ports:
    #       #- ""80:80""
    #       - ""443:443""
    #     volumes:
    #       - /var/run/docker.sock:/tmp/docker.sock:ro
    #       - /home/sharelatex/tmp:/etc/nginx/certs
"
ffy9Z3wV,repeat the function,jevixlugya,Python,Wednesday 8th of May 2024 10:51:14 PM CDT,"class Content(Screen):
    def on_enter(self):
        self.set_animation()

    def set_animation(self,*args):
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)
        #self.anim.repeat = True
        anim.start(self.ids.bg)
        anim.bind(on_complete=self.comp)

    def comp(self,*args):
        self.ids.bg.source='images/1.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.bind(on_complete=self.compl)

    def compl(self,*args):
        self.ids.bg.source='images/2b.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.repeat = True"
wjrc8gsP,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Wednesday 8th of May 2024 10:47:59 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
                    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'name'
"
sw8wrjg5,verifica fisiere PDF corupte (care nu se pot deschide),nicuf,Python,Wednesday 8th of May 2024 10:13:55 PM CDT,"import os
from PyPDF2 import PdfReader
from PyPDF2.errors import PdfReadError

# Directorul unde se află fișierele PDF
directory = ""g:/ARHIVA/BCU PDF""

# Lista fișierelor PDF corupte sau care nu se deschid
corrupted_files = []
# Variabilă pentru a ține evidența ultimului fișier parcurs
last_processed_file = None

try:
    # Parcurge fiecare director și subfolder în mod recursiv
    for root, _, files in os.walk(directory):
        for filename in files:
            if filename.endswith("".pdf""):
                # Calea completă a fișierului PDF
                file_path = os.path.join(root, filename)
                # Salvează ultimul fișier parcurs
                last_processed_file = file_path

                # Afișează în timp real fișierul care este parcurs
                print(f""Procesând fișierul: {file_path}"")

                try:
                    # Încearcă să deschizi fișierul PDF
                    reader = PdfReader(file_path)
                    # Verifică dacă documentul are pagini
                    if len(reader.pages) == 0:
                        corrupted_files.append(file_path)
                except (PdfReadError, ValueError, FileNotFoundError):
                    # Dacă apare o eroare la deschiderea fișierului PDF, adaugă-l în lista fișierelor corupte
                    corrupted_files.append(file_path)

except Exception as e:
    # În cazul unei excepții, oprește scriptul și afișează mesajul și informațiile dorite
    print(f""\nScriptul a fost oprit din cauza unei excepții: {e}"")
    print(f""Ultimul fișier parcurs: {last_processed_file}"")

    if corrupted_files:
        print(""Fișierele PDF corupte sau care nu se pot deschide găsite până acum:"")
        for file_path in corrupted_files:
            print(file_path)
    else:
        print(""Nu au fost găsite fișiere corupte sau care nu se pot deschide până acum."")

# Dacă nu a fost oprită de o excepție, afișează fișierele corupte la final
if corrupted_files:
    print(""\nUrmătoarele fișiere PDF sunt corupte sau nu se pot deschide:"")
    for file_path in corrupted_files:
        print(file_path)
else:
    print(""\nToate fișierele PDF din directorul specificat s-au deschis fără probleme."")
"
95F8tyht,ESP32 Influxdb,mudhita_triari,C++,Wednesday 8th of May 2024 08:01:39 PM CDT,"#include <WiFi.h>
#include <Wire.h>
#include <ModbusMaster.h>
#include <SoftwareSerial.h>
#include <InfluxDbClient.h>

#define MAX485_RE_NEG  5
#define MAX485_DE      4
#define SSERIAL_RX_PIN 16
#define SSERIAL_TX_PIN 17

#define NUM_SENSORS 2
#define TEMP_SENSOR 0
#define HUM_SENSOR 1

// WiFi Configuration
const char* ssid = ""vivo V29"";
const char* password = ""Nabila041185"";

#define INFLUXDB_URL ""http://127.0.0.1:8087""
// InfluxDB 2 server or cloud API authentication token (Use: InfluxDB UI -> Load Data -> Tokens -> <select token>)
#define INFLUXDB_TOKEN ""hh4g2GQn1cgSstvgUtTuYFT95Gn49Hf7qBou3OGWsJDW5lhwY-seBycBMqljiJ_aepMpNbMoiZqBiNyibynb3Q==""
// InfluxDB 2 organization id (Use: InfluxDB UI -> Settings -> Profile -> <name under tile> )
#define INFLUXDB_ORG ""Indobot""
// InfluxDB 2 bucket name (Use: InfluxDB UI -> Load Data -> Buckets)
#define INFLUXDB_BUCKET ""pengamatan suhu & kelembaban""

// InfluxDB client instance
InfluxDBClient client(INFLUXDB_URL, INFLUXDB_ORG, INFLUXDB_BUCKET, INFLUXDB_TOKEN);


// Data point
Point sensor(""sensor_data"");

SoftwareSerial RS485Serial(SSERIAL_RX_PIN, SSERIAL_TX_PIN);
ModbusMaster node;

float sensorData[NUM_SENSORS];
uint8_t sensorAddresses[NUM_SENSORS] = {0x0001, 0x0002};

void preTransmission() {
  digitalWrite(MAX485_RE_NEG, 1);
  digitalWrite(MAX485_DE, 1);
}

void postTransmission() {
  digitalWrite(MAX485_RE_NEG, 0);
  digitalWrite(MAX485_DE, 0);
}

void setup() {
  pinMode(MAX485_RE_NEG, OUTPUT);
  pinMode(MAX485_DE, OUTPUT);
  digitalWrite(MAX485_RE_NEG, 0);
  digitalWrite(MAX485_DE, 0);

  Serial.begin(115200);

  // Start WiFi connection
  Serial.println(""Connecting to WiFi..."");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }
  Serial.println(""Connected to WiFi"");

  RS485Serial.begin(9600);
  node.begin(1, RS485Serial);
  node.preTransmission(preTransmission);
  node.postTransmission(postTransmission);
}

void loop() {
  for (int i = 0; i < NUM_SENSORS; i++) {
    uint8_t result = node.readInputRegisters(sensorAddresses[i], 1);

    if (result == node.ku8MBSuccess) {
      sensorData[i] = float(node.getResponseBuffer(0) / 10.00F);
    } else {
      delay(1000);
      return;
    }
  }

  Serial.print(""Temperature: "");
  Serial.print(sensorData[TEMP_SENSOR]);
  Serial.println("" °C"");
  Serial.print(""Humidity: "");
  Serial.print(sensorData[HUM_SENSOR]);
  Serial.println("" %"");

  // Send data to InfluxDB
  sensor.clearFields();
  sensor.addField(""temperature"", sensorData[TEMP_SENSOR]);
  sensor.addField(""humidity"", sensorData[HUM_SENSOR]);

  if (client.validateConnection()) {
    Serial.println(""Sending data to InfluxDB..."");
    if (!client.writePoint(sensor)) {
      Serial.print(""InfluxDB write failed: "");
      Serial.println(client.getLastErrorMessage());
    } else {
      Serial.println(""Data sent to InfluxDB successfully"");
    }
  } else {
    Serial.print(""InfluxDB connection failed: "");
    Serial.println(client.getLastErrorMessage());
  }

  delay(5000); // Example of data sending interval every 5 seconds
}
"
8D5Kjjh4,Untitled,Hidend,C++,Wednesday 8th of May 2024 07:48:00 PM CDT,"//hidend
#include <Windows.h>
#include <d3d9.h>
#include <cstdio>
#include <iostream>
#include <Windows.h>
#include ""MinHook.h""
#if defined _M_X64
#pragma comment(lib, ""libMinHook.x64.lib"")
#elif defined _M_IX86
#pragma comment(lib, ""minhook.x32d.lib"")
#endif
uint32_t samp_base = 0;

const DWORD OFFSETS[6][2]{
    /*ChatInfo, AddMsg*/
    {0x21A0E4, 0x645A0}, // 037-r1 - 0
    {0x021A0EC, 0x64670}, // 037-r2 - 1
    {0x026E8C8, 0x679F0}, // 037-r3_1 - 2
    {0x026E9F8, 0x68130}, // 037-r4 - 3 
    {0x026E9F8, 0x68170}, // 037-r4_2 -4
    {0x026EB80, 0x68170}, // 037-r5_1 - 5
};

int get_samp_version_id()
{
    int version_current = -1;

    if (samp_base)
    {
        std::cout << ""Dentro!"" << std::endl;
        int version_id = *reinterpret_cast<int*>((char*)samp_base + 0x128);
        std::cout << ""Version ID: "" << version_id << std::endl;

        switch (version_id) {
        case 0x5542F47A: // R1
            version_current = 0;
            break;
        case 0x59C30C94: // R2
            version_current = 1;
            break;
        default:
            version_id = *reinterpret_cast<int*>((char*)samp_base + 0x120);
            std::cout << ""No es ni R1 ni R2, veamos las demas: "" << version_id << std::endl;

            switch (version_id) {
            case 0x5C0B4243: // R3
                version_current = 2;
                break;
            case 0x5DD606CD: // R4 - v1
                version_current = 3;
                break;
            case 0x6094ACAB: // R4 - v2
                version_current = 4;
                break;
            case 0x6372C39E: // R5, ni nos interesa pero meh
                version_current = 5;
                break;
            }
        }
    }
    return version_current;
}

void addMessageToChat(unsigned dwColor, const char* szMsg, ...)
{
    int version = get_samp_version_id();
    std::cout << ""Version2: "" << version << std::endl;
    if (version == -1)
        return;

    DWORD chatInfoOffset = OFFSETS[version][0];
    DWORD addMsgOffset = OFFSETS[version][1];

    std::cout << ""chatInfoOffset: "" << chatInfoOffset << std::endl;
    std::cout << ""addMsgOffset: "" << addMsgOffset << std::endl;
    unsigned char red = static_cast<unsigned char>(rand() % 256);
    unsigned char green = static_cast<unsigned char>(rand() % 256);
    unsigned char blue = static_cast<unsigned char>(rand() % 256);

    // Combine the color components into a single unsigned integer
    unsigned newColor = (red << 16) | (green << 8) | blue;
    auto addMessage = reinterpret_cast<void(__thiscall*)(void* pChat, unsigned color, const char* message)>(samp_base + addMsgOffset);
    addMessage(*reinterpret_cast<void**>(samp_base + chatInfoOffset), newColor, szMsg);
}


typedef HMODULE(WINAPI* TYPE_LoadLibraryA)(LPCSTR);
TYPE_LoadLibraryA g_loadLibraryA_original = NULL;
HMODULE WINAPI LoadLibraryA_replacement(_In_ LPCTSTR lpFileName)
{
    if (strcmp(""OPENGL32"", lpFileName) != 0)
    {
        addMessageToChat(-1, ""LoadLibraryA_replacement!"");
        return NULL; //devolvemos null y paramos la inyeccion
    }
    return g_loadLibraryA_original(lpFileName);
}

typedef HMODULE(WINAPI* TYPE_LoadLibraryExA)(LPCSTR, HANDLE, DWORD);
TYPE_LoadLibraryExA g_loadLibraryExA_original = NULL;
HMODULE WINAPI LoadLibraryExA_replacement(_In_ LPCSTR lpLibFileName, _In_ HANDLE hFile, _In_ DWORD  dwFlags)
{
    addMessageToChat(-1, ""LoadLibraryExA_replacement!"");
    return g_loadLibraryExA_original(lpLibFileName, hFile, dwFlags);

}

typedef HMODULE(WINAPI* TYPE_LoadLibraryW)(LPCWSTR);
TYPE_LoadLibraryW g_loadLibraryW_original = NULL;
HMODULE WINAPI LoadLibraryW_replacement(LPCWSTR lpLibFileName)
{
    addMessageToChat(-1, ""LoadLibraryW_replacement!"");
    return NULL; //devolvemos null y paramos la inyeccion
    return g_loadLibraryW_original(lpLibFileName);
}

typedef HMODULE(WINAPI* TYPE_LoadLibraryExW)(LPCWSTR, HANDLE, DWORD);
TYPE_LoadLibraryExW g_LoadLibraryExW_original = NULL;
HMODULE WINAPI LoadLibraryExW_replacement(_In_ LPCWSTR  lpLibFileName, _In_ HANDLE hFile, _In_ DWORD  dwFlags)
{
    addMessageToChat(-1, ""LoadLibraryExW_replacement!"");

    return g_LoadLibraryExW_original(lpLibFileName, hFile, dwFlags);
}

int init()
{
    std::cout << ""init"" << std::endl;
    samp_base = (DWORD)LoadLibraryA(""samp.dll"");
    if (MH_Initialize() != MH_OK)
    {
        OutputDebugString(""Initialize MinHook False!"");
        return false;
    }
    if (MH_CreateHook(
        &LoadLibraryA,
        &LoadLibraryA_replacement,
        (LPVOID*)(&g_loadLibraryA_original)
    ) != MH_OK)
    {
        return false;
    }
    if (MH_EnableHook(&LoadLibraryA) != MH_OK)
    {
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryExA,
        &LoadLibraryExA_replacement,
        (LPVOID*)(&g_loadLibraryExA_original)
    ) != MH_OK)
    {
        return false;
    }
    if (MH_EnableHook(&LoadLibraryExA) != MH_OK)
    {
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryW,
        &LoadLibraryW_replacement,
        (LPVOID*)(&g_loadLibraryW_original)
    ) != MH_OK)
    {
        OutputDebugString(""MH_CreateHook loadLibraryW False!"");
        return false;
    }
    if (MH_EnableHook(&LoadLibraryW) != MH_OK)
    {
        OutputDebugString(""MH_EnableHook loadLibraryW False!"");
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryExW,
        &LoadLibraryExW_replacement,
        (LPVOID*)(&g_LoadLibraryExW_original)
    ) != MH_OK)
    {
        OutputDebugString(""MH_CreateHook LoadLibraryExW False!"");
        return false;
    }
    if (MH_EnableHook(&LoadLibraryExW) != MH_OK)
    {
        OutputDebugString(""MH_EnableHook LoadLibraryExW False!"");
        return false;
    }

    while (true)
    {
        addMessageToChat(-1, ""Hidend // Shaarawy // <3"");
        Sleep(5000);
    }
    FreeLibraryAndExitThread(GetModuleHandle(NULL), 0);
    return 0;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReasonForCall, LPVOID lpReserved)
{
    switch (dwReasonForCall)
    {
    case DLL_PROCESS_ATTACH:
        //AllocConsole();
        //freopen(""CONOUT$"", ""w"", stdout);
        //std::cout << ""injected"" << std::endl;
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)init, NULL, NULL, NULL);
        break;
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}"
YXETnT9v,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:18:34 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 3,
    ""152.32.183.213"": 72,
    ""93.174.95.106"": 9,
    ""185.161.248.121"": 6,
    ""205.210.31.206"": 9,
    ""179.60.150.59"": 3,
    ""103.27.237.123"": 36,
    ""212.70.149.142"": 21,
    ""159.223.34.114"": 3,
    ""68.183.181.29"": 3,
    ""64.124.50.139"": 6,
    ""194.165.16.10"": 6,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 6,
    ""123.31.20.85"": 54,
    ""45.227.254.49"": 6,
    ""87.251.75.120"": 6,
    ""23.158.24.189"": 3,
    ""194.165.16.11"": 6,
    ""118.194.236.118"": 3,
    ""116.140.196.215"": 3,
    ""154.91.82.169"": 169977,
    ""205.210.31.58"": 9,
    ""167.94.145.109"": 3,
    ""103.245.236.103"": 6,
    ""68.183.230.185"": 3,
    ""62.204.41.155"": 12,
    ""58.218.204.183"": 9,
    ""205.210.31.53"": 9,
    ""185.196.220.41"": 9,
    ""194.48.251.72"": 3,
    ""94.232.41.30"": 6,
    ""193.142.146.227"": 9,
    ""156.146.59.101"": 3,
    ""141.98.9.34"": 3,
    ""104.234.181.59"": 6,
    ""112.4.139.162"": 3,
    ""185.198.69.140"": 3,
    ""167.94.145.97"": 3,
    ""62.204.41.93"": 12,
    ""194.165.16.73"": 6,
    ""103.232.53.123"": 12,
    ""194.165.16.76"": 6,
    ""2.57.149.92"": 3,
    ""187.190.60.112"": 3,
    ""198.235.24.125"": 9,
    ""194.165.16.78"": 6
  },
  ""asn"": {
    ""AS48721"": 33,
    ""AS135377"": 75,
    ""AS202425"": 9,
    ""AS49202"": 6,
    ""AS396982"": 36,
    ""AS211179"": 3,
    ""AS131386"": 36,
    ""AS204428"": 21,
    ""AS14061"": 9,
    ""AS6461"": 6,
    ""AS208091"": 18,
    ""AS197414"": 6,
    ""AS45899"": 54,
    ""AS267784"": 6,
    ""AS197767"": 3,
    ""AS4837"": 3,
    ""AS399077"": 169977,
    ""AS398705"": 6,
    ""AS150867"": 6,
    ""AS59425"": 24,
    ""AS4134"": 9,
    ""AS208046"": 18,
    ""AS48314"": 3,
    ""AS60068"": 3,
    ""AS209588"": 3,
    ""AS136359"": 6,
    ""AS56046"": 3,
    ""AS57523"": 3,
    ""AS63737"": 12,
    ""AS208312"": 3,
    ""AS22884"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 42,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 75,
    ""IP Volume inc"": 9,
    ""Kisara LLC"": 6,
    ""Google LLC"": 36,
    ""Veraton Projects LTD"": 3,
    ""Long Van System Solution"": 36,
    ""SS-Net"": 21,
    ""DigitalOcean, LLC"": 9,
    ""Zayo Bandwidth"": 6,
    ""Xhost Internet Solutions LP"": 24,
    ""VietNam Post and Telecom Corporation"": 54,
    ""ZgoShop, Inc."": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""Tcloudnet Inc"": 169977,
    ""Censys, Inc."": 6,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 6,
    ""Horizon LLC"": 24,
    ""Chinanet"": 9,
    ""ColocationX Ltd."": 18,
    ""IP-Projects GmbH & Co. KG"": 3,
    ""DataCamp Limited"": 3,
    ""Hansin It Services Pvt. Ltd."": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""VIETSERVER"": 12,
    ""Red Byte LLC"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 33,
    ""Ucloud Information Technology"": 75,
    ""IP Volume inc"": 9,
    ""Kisara LLC"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Maxwell Group LTD"": 3,
    ""Unknown"": 36,
    ""4Media Ltd"": 21,
    ""DigitalOcean, LLC"": 9,
    ""Microsoft Corporation"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Xhostis"": 6,
    ""Vietnam Posts and Telecommunications Group"": 54,
    ""UAB Host Baltic"": 6,
    ""ZgoShop, Inc"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Tcloudnet Inc"": 169977,
    ""Censys, Inc."": 6,
    ""LP Technology Electronic Commerce Company Limited"": 6,
    ""Horizon LLC"": 24,
    ""Chinanet JS"": 9,
    ""Makut Investments"": 9,
    ""Gwy It Pty Ltd"": 3,
    ""Dmitriy Panchenko"": 6,
    ""ColocationX Ltd"": 9,
    ""Cdn77 NYC"": 3,
    ""Alviva Holding Limited"": 3,
    ""IPXO"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""VietServer Services technology company limited"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""regionName"": {
    ""Kaunas"": 33,
    ""Virginia"": 87,
    ""North Holland"": 39,
    ""Moscow"": 33,
    ""California"": 36,
    ""Distrito Federal"": 3,
    ""Ho Chi Minh"": 42,
    ""Sliven"": 21,
    ""Central Singapore"": 3,
    ""South West"": 6,
    ""Hanoi"": 66,
    ""Vilnius"": 6,
    ""\u014csaka"": 3,
    ""Tokyo"": 3,
    ""Beijing"": 3,
    ""North West"": 169977,
    ""Hesse"": 9,
    ""Jiangsu"": 12,
    ""Perm Krai"": 6,
    ""New York"": 3,
    ""National Capital Territory of Delhi"": 6,
    ""Lesser Poland"": 3,
    ""Hidalgo"": 3
  },
  ""country"": {
    ""Lithuania"": 39,
    ""United States"": 126,
    ""The Netherlands"": 39,
    ""Russia"": 39,
    ""Venezuela"": 3,
    ""Vietnam"": 108,
    ""Bulgaria"": 21,
    ""Singapore"": 169986,
    ""Japan"": 6,
    ""China"": 15,
    ""Germany"": 9,
    ""India"": 6,
    ""Poland"": 3,
    ""Mexico"": 3
  },
  ""account"": {
    ""Administr"": 51,
    ""Administrator"": 27,
    ""Admin"": 24,
    ""Whatuptime.com"": 24,
    ""root"": 9,
    ""Test"": 60,
    ""CpoLcVExT"": 3,
    ""gteEYX"": 3,
    ""oCdYDK"": 3,
    ""hello"": 147,
    ""(empty)"": 15,
    ""2887428808"": 169977,
    ""ymQCCMhpH"": 3,
    ""pdUrfC"": 3,
    ""ICqEKW"": 3,
    ""Domain"": 30,
    ""WrEsCaXaV"": 3,
    ""FgRxTU"": 3,
    ""zRNKCk"": 3,
    ""GBTfsMW"": 3,
    ""EoTajcFAV"": 3,
    ""qApdlp"": 3,
    ""pEWfgK"": 3
  },
  ""keyboard"": {
    ""Unknown"": 170403
  },
  ""client_build"": {
    ""Unknown"": 170403
  },
  ""client_name"": {
    ""Unknown"": 170403
  },
  ""ip_type"": {
    ""Unknown"": 170211,
    ""hosting"": 120,
    ""mobile"": 21,
    ""mobile & hosting"": 36,
    ""hosting & proxy"": 3,
    ""proxy"": 12
  }
}"
NNva7WZU,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:16:29 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""152.32.183.213"": 48,
    ""93.174.95.106"": 6,
    ""185.161.248.121"": 4,
    ""205.210.31.206"": 6,
    ""179.60.150.59"": 2,
    ""103.27.237.123"": 24,
    ""212.70.149.142"": 14,
    ""159.223.34.114"": 2,
    ""68.183.181.29"": 2,
    ""64.124.50.139"": 4,
    ""194.165.16.10"": 4,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 4,
    ""123.31.20.85"": 36,
    ""45.227.254.49"": 4,
    ""87.251.75.120"": 4,
    ""23.158.24.189"": 2,
    ""194.165.16.11"": 4,
    ""118.194.236.118"": 2,
    ""116.140.196.215"": 2,
    ""154.91.82.169"": 113318,
    ""205.210.31.58"": 6,
    ""167.94.145.109"": 2,
    ""103.245.236.103"": 4,
    ""68.183.230.185"": 2,
    ""62.204.41.155"": 8,
    ""58.218.204.183"": 6,
    ""205.210.31.53"": 6,
    ""185.196.220.41"": 6,
    ""194.48.251.72"": 2,
    ""94.232.41.30"": 4,
    ""193.142.146.227"": 6,
    ""156.146.59.101"": 2,
    ""141.98.9.34"": 2,
    ""104.234.181.59"": 4,
    ""112.4.139.162"": 2,
    ""185.198.69.140"": 2,
    ""167.94.145.97"": 2,
    ""62.204.41.93"": 8,
    ""194.165.16.73"": 4,
    ""103.232.53.123"": 8,
    ""194.165.16.76"": 4,
    ""2.57.149.92"": 2,
    ""187.190.60.112"": 2,
    ""198.235.24.125"": 6,
    ""194.165.16.78"": 4
  },
  ""asn"": {
    ""AS48721"": 22,
    ""AS135377"": 50,
    ""AS202425"": 6,
    ""AS49202"": 4,
    ""AS396982"": 24,
    ""AS211179"": 2,
    ""AS131386"": 24,
    ""AS204428"": 14,
    ""AS14061"": 6,
    ""AS6461"": 4,
    ""AS208091"": 12,
    ""AS197414"": 4,
    ""AS45899"": 36,
    ""AS267784"": 4,
    ""AS197767"": 2,
    ""AS4837"": 2,
    ""AS399077"": 113318,
    ""AS398705"": 4,
    ""AS150867"": 4,
    ""AS59425"": 16,
    ""AS4134"": 6,
    ""AS208046"": 12,
    ""AS48314"": 2,
    ""AS60068"": 2,
    ""AS209588"": 2,
    ""AS136359"": 4,
    ""AS56046"": 2,
    ""AS57523"": 2,
    ""AS63737"": 8,
    ""AS208312"": 2,
    ""AS22884"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 28,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 50,
    ""IP Volume inc"": 6,
    ""Kisara LLC"": 4,
    ""Google LLC"": 24,
    ""Veraton Projects LTD"": 2,
    ""Long Van System Solution"": 24,
    ""SS-Net"": 14,
    ""DigitalOcean, LLC"": 6,
    ""Zayo Bandwidth"": 4,
    ""Xhost Internet Solutions LP"": 16,
    ""VietNam Post and Telecom Corporation"": 36,
    ""ZgoShop, Inc."": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Tcloudnet Inc"": 113318,
    ""Censys, Inc."": 4,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 4,
    ""Horizon LLC"": 16,
    ""Chinanet"": 6,
    ""ColocationX Ltd."": 12,
    ""IP-Projects GmbH & Co. KG"": 2,
    ""DataCamp Limited"": 2,
    ""Hansin It Services Pvt. Ltd."": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VIETSERVER"": 8,
    ""Red Byte LLC"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 22,
    ""Ucloud Information Technology"": 50,
    ""IP Volume inc"": 6,
    ""Kisara LLC"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Maxwell Group LTD"": 2,
    ""Unknown"": 24,
    ""4Media Ltd"": 14,
    ""DigitalOcean, LLC"": 6,
    ""Microsoft Corporation"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Xhostis"": 4,
    ""Vietnam Posts and Telecommunications Group"": 36,
    ""UAB Host Baltic"": 4,
    ""ZgoShop, Inc"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Tcloudnet Inc"": 113318,
    ""Censys, Inc."": 4,
    ""LP Technology Electronic Commerce Company Limited"": 4,
    ""Horizon LLC"": 16,
    ""Chinanet JS"": 6,
    ""Makut Investments"": 6,
    ""Gwy It Pty Ltd"": 2,
    ""Dmitriy Panchenko"": 4,
    ""ColocationX Ltd"": 6,
    ""Cdn77 NYC"": 2,
    ""Alviva Holding Limited"": 2,
    ""IPXO"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""VietServer Services technology company limited"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""regionName"": {
    ""Kaunas"": 22,
    ""Virginia"": 58,
    ""North Holland"": 26,
    ""Moscow"": 22,
    ""California"": 24,
    ""Distrito Federal"": 2,
    ""Ho Chi Minh"": 28,
    ""Sliven"": 14,
    ""Central Singapore"": 2,
    ""South West"": 4,
    ""Hanoi"": 44,
    ""Vilnius"": 4,
    ""\u014csaka"": 2,
    ""Tokyo"": 2,
    ""Beijing"": 2,
    ""North West"": 113318,
    ""Hesse"": 6,
    ""Jiangsu"": 8,
    ""Perm Krai"": 4,
    ""New York"": 2,
    ""National Capital Territory of Delhi"": 4,
    ""Lesser Poland"": 2,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""Lithuania"": 26,
    ""United States"": 84,
    ""The Netherlands"": 26,
    ""Russia"": 26,
    ""Venezuela"": 2,
    ""Vietnam"": 72,
    ""Bulgaria"": 14,
    ""Singapore"": 113324,
    ""Japan"": 4,
    ""China"": 10,
    ""Germany"": 6,
    ""India"": 4,
    ""Poland"": 2,
    ""Mexico"": 2
  },
  ""account"": {
    ""Administr"": 34,
    ""Administrator"": 18,
    ""Admin"": 16,
    ""Whatuptime.com"": 16,
    ""root"": 6,
    ""Test"": 40,
    ""CpoLcVExT"": 2,
    ""gteEYX"": 2,
    ""oCdYDK"": 2,
    ""hello"": 98,
    ""(empty)"": 10,
    ""2887428808"": 113318,
    ""ymQCCMhpH"": 2,
    ""pdUrfC"": 2,
    ""ICqEKW"": 2,
    ""Domain"": 20,
    ""WrEsCaXaV"": 2,
    ""FgRxTU"": 2,
    ""zRNKCk"": 2,
    ""GBTfsMW"": 2,
    ""EoTajcFAV"": 2,
    ""qApdlp"": 2,
    ""pEWfgK"": 2
  },
  ""keyboard"": {
    ""Unknown"": 113602
  },
  ""client_build"": {
    ""Unknown"": 113602
  },
  ""client_name"": {
    ""Unknown"": 113602
  },
  ""ip_type"": {
    ""Unknown"": 113474,
    ""hosting"": 80,
    ""mobile"": 14,
    ""mobile & hosting"": 24,
    ""hosting & proxy"": 2,
    ""proxy"": 8
  }
}"
mMMRH8dD,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:15:17 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 1,
    ""152.32.183.213"": 24,
    ""93.174.95.106"": 3,
    ""185.161.248.121"": 2,
    ""205.210.31.206"": 3,
    ""179.60.150.59"": 1,
    ""103.27.237.123"": 12,
    ""212.70.149.142"": 7,
    ""159.223.34.114"": 1,
    ""68.183.181.29"": 1,
    ""64.124.50.139"": 2,
    ""194.165.16.10"": 2,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 2,
    ""123.31.20.85"": 18,
    ""45.227.254.49"": 2,
    ""87.251.75.120"": 2,
    ""23.158.24.189"": 1,
    ""194.165.16.11"": 2,
    ""118.194.236.118"": 1,
    ""116.140.196.215"": 1,
    ""154.91.82.169"": 56659,
    ""205.210.31.58"": 3,
    ""167.94.145.109"": 1,
    ""103.245.236.103"": 2,
    ""68.183.230.185"": 1,
    ""62.204.41.155"": 4,
    ""58.218.204.183"": 3,
    ""205.210.31.53"": 3,
    ""185.196.220.41"": 3,
    ""194.48.251.72"": 1,
    ""94.232.41.30"": 2,
    ""193.142.146.227"": 3,
    ""156.146.59.101"": 1,
    ""141.98.9.34"": 1,
    ""104.234.181.59"": 2,
    ""112.4.139.162"": 1,
    ""185.198.69.140"": 1,
    ""167.94.145.97"": 1,
    ""62.204.41.93"": 4,
    ""194.165.16.73"": 2,
    ""103.232.53.123"": 4,
    ""194.165.16.76"": 2,
    ""2.57.149.92"": 1,
    ""187.190.60.112"": 1,
    ""198.235.24.125"": 3,
    ""194.165.16.78"": 2
  },
  ""asn"": {
    ""AS48721"": 11,
    ""AS135377"": 25,
    ""AS202425"": 3,
    ""AS49202"": 2,
    ""AS396982"": 12,
    ""AS211179"": 1,
    ""AS131386"": 12,
    ""AS204428"": 7,
    ""AS14061"": 3,
    ""AS6461"": 2,
    ""AS208091"": 6,
    ""AS197414"": 2,
    ""AS45899"": 18,
    ""AS267784"": 2,
    ""AS197767"": 1,
    ""AS4837"": 1,
    ""AS399077"": 56659,
    ""AS398705"": 2,
    ""AS150867"": 2,
    ""AS59425"": 8,
    ""AS4134"": 3,
    ""AS208046"": 6,
    ""AS48314"": 1,
    ""AS60068"": 1,
    ""AS209588"": 1,
    ""AS136359"": 2,
    ""AS56046"": 1,
    ""AS57523"": 1,
    ""AS63737"": 4,
    ""AS208312"": 1,
    ""AS22884"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Google LLC"": 12,
    ""Veraton Projects LTD"": 1,
    ""Long Van System Solution"": 12,
    ""SS-Net"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Zayo Bandwidth"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""VietNam Post and Telecom Corporation"": 18,
    ""ZgoShop, Inc."": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet"": 3,
    ""ColocationX Ltd."": 6,
    ""IP-Projects GmbH & Co. KG"": 1,
    ""DataCamp Limited"": 1,
    ""Hansin It Services Pvt. Ltd."": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""VIETSERVER"": 4,
    ""Red Byte LLC"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 11,
    ""Ucloud Information Technology"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Maxwell Group LTD"": 1,
    ""Unknown"": 12,
    ""4Media Ltd"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Microsoft Corporation"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Xhostis"": 2,
    ""Vietnam Posts and Telecommunications Group"": 18,
    ""UAB Host Baltic"": 2,
    ""ZgoShop, Inc"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet JS"": 3,
    ""Makut Investments"": 3,
    ""Gwy It Pty Ltd"": 1,
    ""Dmitriy Panchenko"": 2,
    ""ColocationX Ltd"": 3,
    ""Cdn77 NYC"": 1,
    ""Alviva Holding Limited"": 1,
    ""IPXO"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VietServer Services technology company limited"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""regionName"": {
    ""Kaunas"": 11,
    ""Virginia"": 29,
    ""North Holland"": 13,
    ""Moscow"": 11,
    ""California"": 12,
    ""Distrito Federal"": 1,
    ""Ho Chi Minh"": 14,
    ""Sliven"": 7,
    ""Central Singapore"": 1,
    ""South West"": 2,
    ""Hanoi"": 22,
    ""Vilnius"": 2,
    ""\u014csaka"": 1,
    ""Tokyo"": 1,
    ""Beijing"": 1,
    ""North West"": 56659,
    ""Hesse"": 3,
    ""Jiangsu"": 4,
    ""Perm Krai"": 2,
    ""New York"": 1,
    ""National Capital Territory of Delhi"": 2,
    ""Lesser Poland"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Lithuania"": 13,
    ""United States"": 42,
    ""The Netherlands"": 13,
    ""Russia"": 13,
    ""Venezuela"": 1,
    ""Vietnam"": 36,
    ""Bulgaria"": 7,
    ""Singapore"": 56662,
    ""Japan"": 2,
    ""China"": 5,
    ""Germany"": 3,
    ""India"": 2,
    ""Poland"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""Administr"": 17,
    ""Administrator"": 9,
    ""Admin"": 8,
    ""Whatuptime.com"": 8,
    ""root"": 3,
    ""Test"": 20,
    ""CpoLcVExT"": 1,
    ""gteEYX"": 1,
    ""oCdYDK"": 1,
    ""hello"": 49,
    ""(empty)"": 5,
    ""2887428808"": 56659,
    ""ymQCCMhpH"": 1,
    ""pdUrfC"": 1,
    ""ICqEKW"": 1,
    ""Domain"": 10,
    ""WrEsCaXaV"": 1,
    ""FgRxTU"": 1,
    ""zRNKCk"": 1,
    ""GBTfsMW"": 1,
    ""EoTajcFAV"": 1,
    ""qApdlp"": 1,
    ""pEWfgK"": 1
  },
  ""keyboard"": {
    ""Unknown"": 56801
  },
  ""client_build"": {
    ""Unknown"": 56801
  },
  ""client_name"": {
    ""Unknown"": 56801
  },
  ""ip_type"": {
    ""Unknown"": 56737,
    ""hosting"": 40,
    ""mobile"": 7,
    ""mobile & hosting"": 12,
    ""hosting & proxy"": 1,
    ""proxy"": 4
  }
}"
cg9KM5Lu,"""Servo Control"" rev_01",pleasedontcode,Arduino,Wednesday 8th of May 2024 06:31:04 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Servo Control""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 23:30:16

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Improve user description requirement by specifying */
	/* EasyButton library usage for debouncing a push */
	/* button on pin D2 with INPUT_PULLUP configuration. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* move the servo motor of 50° if the button is */
	/* pressed. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>	// Include the EasyButton library for debouncing a push button
#include <Servo.h>		// Include the Servo library for controlling servo motor

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void moveServo(int degrees);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t BUTTON_PIN = 2; // Define the pin for the push button (D2)

/***** DEFINITION OF SERVO MOTOR PIN *****/
const uint8_t SERVO_PIN = 9; // Define the pin for the servo motor

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(BUTTON_PIN); // Create an EasyButton object for the push button
Servo servoMotor; // Create a Servo object to control the servo motor

void setup(void)
{
	// Initialize the EasyButton and Servo objects
	button.begin();
	servoMotor.attach(SERVO_PIN); // Attach the servo motor to the specified pin
}

void loop(void)
{
	// Read the button state
	button.read();

	// Move the servo motor 50 degrees if the button is pressed
	if (button.isPressed()) {
		moveServo(50);
	}
}

void moveServo(int degrees)
{
	servoMotor.write(degrees); // Move the servo motor to the specified angle
	delay(15); // Delay for stability
}

/* END CODE */"
VBhwVxSV,Bus MainScript (Bus TeleportScript),Sungmingamerpro13,CSS,Wednesday 8th of May 2024 06:10:14 PM CDT,"local TS = game:GetService(""TeleportService"")
local GuiPart = script.Parent.Parent.GuiPart
local Seats = script.Parent.Parent.BusModel.SeatsModel:GetChildren()

local List = {}
local MinPlayers = 1
local MaxPlayers = 12
local Timer

local PlaceId = (17424851138)

GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers

local function removeFromList(character)
	for i=1,#List do
		if List[i] == character.Name then
			table.remove(List,i)
			GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
		end
	end
end

local function TeleportPlayers()
	if #List >= MinPlayers then
		GuiPart.SurfaceGui.Status.Text = ""Teleporting...""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(1, 0, 0)
		local playersToTeleport = {}
		for i=1,#List do
			if game.Players:FindFirstChild(List[i]) then
				table.insert(playersToTeleport, game.Players:FindFirstChild(List[i]))
				game.ReplicatedStorage.TransitionEvent:FireClient(game.Players:FindFirstChild(List[i]))
			else
				table.remove(List,i)
			end
		end
		local Code = TS:ReserveServer(PlaceId)
		TS:TeleportToPrivateServer(PlaceId, Code, playersToTeleport)
		repeat wait() until #List <= 0
		GuiPart.SurfaceGui.Status.Text = ""READY""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(0.333333, 1, 0)
	else
		GuiPart.SurfaceGui.Players.Text = ""1 Players Neeeded""
		wait(2.5)
		GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
	end
end

script.Parent.Touched:Connect(function(Hit)
	if Hit.Parent:FindFirstChild(""Humanoid"") then
		
		local character = Hit.Parent
		local Player = game.Players:GetPlayerFromCharacter(character)
		local alreadyExists = false
		
		for i=1,#List do
			if List[i] == character.Name then
				alreadyExists = true
			end
		end
		
		if alreadyExists == false then
			if #List < MinPlayers then
				table.insert(List,character.Name)
				for i, v in pairs(Seats) do
					if Seats == nil then
						local Check = Instance.new(""Weld"")
						Check.Name = ""Check""
						Check.Parent = Player.Character
						Check.Parent.Humanoid.JumpPower = 0
						Check.Parent.Humanoid.WalkSpeed = 0
					end
				end
				Seats[math.random(1, #Seats)]:Sit(Player.Character.Humanoid)
				game.ServerStorage.LeaveGui:Clone().Parent = Player.PlayerGui
				GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
			end
		end
		Player.CharacterRemoving:connect(function(character)
			removeFromList(character)
		end)
	end
end)

game.ReplicatedStorage.LeaveGuiEvent.OnServerEvent:Connect(function(player)
	player:LoadCharacter()
end)

while wait() do
	Timer = 41
	for i=1,Timer do
		Timer = Timer - 1
		GuiPart.SurfaceGui.timeLabel.Text = ""Time: ""..Timer
		wait(1)
	end
	TeleportPlayers()
end
"
h2XHPmUB,Swimbot Error,swimmerhair,Python,Wednesday 8th of May 2024 05:32:27 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 221, in whois
    info = await COC.swimbot(tag).get_info
  File ""/home/pi/Swimbot/COC.py"", line 145, in get_info
    account = await swimbot(account['_id']).update
  File ""/home/pi/Swimbot/COC.py"", line 167, in update
    resp = await Player(self.input).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
mVVA0Jib,Ulica (Bakurski),niske,Java,Wednesday 8th of May 2024 05:14:55 PM CDT,"public class ListaListi{
	
	public static void main (String[] args) {
		
		Ulica Silerova = new Ulica();
		Silerova.dodajKucu(3);
		Silerova.dodajKucu(1);
		
		Silerova.dodajKucu(7);
		Silerova.dodajKucu(5);
		Silerova.dodajKucu(9);
		
		Silerova.dodajOsobu(1, ""Dusan"");
		Silerova.dodajOsobu(1, ""Olivera"");
		Silerova.dodajOsobu(1, ""Nebojsah"");
		
		Silerova.dodajOsobu(3, ""Jovicaa"");
		Silerova.dodajOsobu(3, ""Nemanjaaaaaa"");
		
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		
		Silerova.dodajOsobu(7, ""Niske"");
		Silerova.dodajOsobu(7, ""Bodji"");
		
		Silerova.najviseStanovnika(3);
		
		
		System.out.println(Silerova);
		
		Silerova.prebaci(1, 9);
		Silerova.prebaci(7, 123);
		
		System.out.println(Silerova);
	}
}

class Ulica{
	
	// Klasa Osoba
	class Osoba{
		String ime;
		Osoba veza;
	
		public Osoba(String ime){
			this.ime = ime;
			this.veza = null;
		}
		
		public String toString(){
			return ime;
		}
	}
	
	//Klasa Kuca
	class Kuca{
		int broj;
		Kuca veza;
		Osoba sadrzaj;
		
		public Kuca(int broj){
			this.broj = broj;
			this.veza = null;
			this.sadrzaj = null;
		}
		
		public String toString(){
			String s = ""Kuca broj "" + broj + "":"";
			Osoba tek = sadrzaj;
			
			if(tek == null){
				s += "" je prazna."";
			} else {
				s += "" "" + tek;
				tek = tek.veza;
				
				while(tek != null){
					s += "", "" + tek;
					tek = tek.veza;
				}
			}
			
			return s;
		}
	}
	
	Kuca prvaKuca;
	
	// Metode za ulicu
	public boolean postojiKuca(int broj){
		Kuca tek = prvaKuca;
		
		while(tek != null){
			if(tek.broj == broj){
				return true;
			}
			
			tek = tek.veza;
		}
		
		return false;
	}
	
	
	public void dodajKucu(int broj){
		if(!postojiKuca(broj)){
			Kuca tek = prvaKuca;
			
			if(prvaKuca == null || broj < prvaKuca.broj){
				
				prvaKuca = new Kuca(broj);
				prvaKuca.veza = tek;
				return;
			}
			
			while(tek.veza != null){
				
				if(broj < tek.veza.broj)
					break;
					
				tek = tek.veza;	
				
			}
			// 1 3 [5] (7) 9
			Kuca sledeca = tek.veza;
			Kuca nova = new Kuca(broj);
			tek.veza = nova;
			nova.veza = sledeca;
		}
	}

	public void dodajOsobu(int brojKuce, String ime){
		Kuca tek = prvaKuca;
		while(tek != null && postojiKuca(brojKuce)){
			if(tek.broj == brojKuce){
				Osoba tekOsoba = tek.sadrzaj;
				tek.sadrzaj = new Osoba(ime);
				tek.sadrzaj.veza = tekOsoba;
				
			}
			tek = tek.veza;
		}
	}
	
	public void najviseStanovnika(int N){
		int brKuceMax = prvaKuca.broj;
		int pomocna = 0;
		int brojac = 0;
		
		Kuca tek = prvaKuca;
		
		if(prvaKuca == null){
			return;
		}
		
		while(tek != null){
			Osoba tekOsoba= tek.sadrzaj;
			while(tekOsoba != null){
				if(tekOsoba.ime.length() > N)
					brojac++;
				
				tekOsoba = tekOsoba.veza;
			}
			
			if(brojac > pomocna){
				pomocna = brojac;
				brKuceMax = tek.broj;
			}
			tek = tek.veza;
			brojac = 0;
		}
		
		System.out.println(""Kuca sa imenima vecim od broja N: "" + N + "" je "" + brKuceMax);
	}
	
	public void prebaci(int A, int B){
		if(postojiKuca(A)){
			Kuca tek = prvaKuca;
			
			while(tek != null){
				if(tek.broj == A){
					break;
				}
				tek = tek.veza;
			}
			
			Osoba tekOsoba = tek.sadrzaj;
			Osoba prethodni = null;
			
			while(tekOsoba.veza != null){
				//System.out.println(tekOsoba.ime);
				prethodni = tekOsoba;
				tekOsoba = tekOsoba.veza;
			}
			
			
			Osoba pomocna = tekOsoba;
			prethodni.veza = null;
			
			if(postojiKuca(B)){
				dodajOsobu(B, pomocna.ime);
			}
			
			
		}
	}
	//-----------------------------------
	

	// Ispis cele ulice
	public String toString(){
		String s = ""Ulica: "";
		Kuca tek = prvaKuca;
		
		if(tek == null){
			s += "" je prazna."";
		} else {
			while(tek != null){
				s += ""\n"" + tek;
				tek = tek.veza;
			}
		}
			
		return s;
	}
}



"
tyLBSd4X,Pobieranie YT,314ma,PowerShell,Wednesday 8th of May 2024 04:25:30 PM CDT,"# 1. Wrzucić to do pliku pobieranie_youtube.ps1
# 2. Zrobić skrót do tego pliku np. na pulpicie
# 3. Przeedytować target skrótu na: powershell C:\ścieżka\do\skryptu\pobieranie_youtube.ps1
# 4. Plik mp3 pobierze się do lokalizacji ""Uruchom w""

echo Pobieranie...
$link = Get-Clipboard
$link -match ""[\?&]v=([a-zA-Z0-9\-_]+)"" | Out-Null
if ($Matches.Length -eq 1) {
    $videoId = $Matches[1]
    yt-dlp.exe -x --audio-format mp3 https://youtube.com/?v=$videoId  --no-warnings --quiet
}"
uBM0tEsz,Character Name Generator (ChatGPT),Krythic,C#,Wednesday 8th of May 2024 03:57:21 PM CDT,"using System;
using System.Collections.Generic;

public class NameGenerator
{
    private HashSet<string> maleFirstNames;
    private HashSet<string> femaleFirstNames;
    private HashSet<string> surnames;
    private Random rnd;

    public NameGenerator(Random random = null)
    {
        maleFirstNames = new HashSet<string>
        {
            ""Aldric"", ""Branthor"", ""Cedric"", ""Darian"", ""Elric"", ""Finnian"", ""Gareth"", ""Haldor"", ""Ithilien"", ""Jareth"",
            ""Kael"", ""Lorcan"", ""Marius"", ""Nathair"", ""Orin"", ""Perrin"", ""Quillen"", ""Roran"", ""Soren"", ""Talon"", ""Ulfar"",
            ""Valen"", ""Wulfric"", ""Xavier"", ""Yorick"", ""Zephyr"", ""Auron"", ""Benedict"", ""Corvus"", ""Dexter"", ""Eldric"",
            ""Faelan"", ""Gideon"", ""Hawthorne"", ""Ignatius"", ""Jasper"", ""Kieran"", ""Lysander"", ""Magnus"", ""Nikolai"",
            ""Oberon"", ""Percival"", ""Quentin"", ""Ryder"", ""Sebastian"", ""Thaddeus"", ""Ulric"", ""Vance"", ""Wesley"", ""Xander"",
            ""Yarrow"", ""Zander"", ""Asher"", ""Baelor"", ""Cassius"", ""Dorian"", ""Ezekiel"", ""Finnegan"", ""Garrick"", ""Hadrian"",
            ""Isidore"", ""Jace"", ""Kellan"", ""Lucian"", ""Malachi"", ""Nolan"", ""Osiris"", ""Peregrine"", ""Quincy"", ""Rhys"",
            ""Silas"", ""Theodore"", ""Ulysses"", ""Varian"", ""Wilder"", ""Xavian"", ""Yorath"", ""Zaire"", ""Atlas"", ""Bastian"",
            ""Caspian"", ""Dante"", ""Elias"", ""Fabian"", ""Gavin"", ""Hugo"", ""Isaac"", ""Jaxon"", ""Kai"", ""Lachlan"", ""Milo"",
            ""Nico"", ""Orion"", ""Paxton"", ""Ronan"", ""Sawyer"", ""Theo"", ""Uriah"", ""Vincent"", ""Wyatt"", ""Xander"", ""Yael"", ""Zayn""
        };
        femaleFirstNames = new HashSet<string>
        {
            ""Aria"", ""Briar"", ""Celestia"", ""Dahlia"", ""Elara"", ""Fiona"", ""Genevieve"", ""Hazel"", ""Isolde"", ""Jasmine"",
            ""Kiera"", ""Luna"", ""Maeve"", ""Nyx"", ""Ophelia"", ""Phaedra"", ""Quinn"", ""Rosalind"", ""Seraphina"", ""Thalia"",
            ""Ursula"", ""Violet"", ""Willow"", ""Xanthe"", ""Yara"", ""Zara"", ""Aurora"", ""Belle"", ""Cassandra"", ""Daphne"",
            ""Eleanor"", ""Felicity"", ""Guinevere"", ""Helena"", ""Ivy"", ""Juliet"", ""Kira"", ""Lyra"", ""Morgana"", ""Nova"",
            ""Odette"", ""Persephone"", ""Quintessa"", ""Rowan"", ""Serenity"", ""Talia"", ""Uma"", ""Vivienne"", ""Wren"", ""Xena"",
            ""Yasmine"", ""Zephyra"", ""Arabella"", ""Bryony"", ""Calista"", ""Delilah"", ""Elowen"", ""Fawn"", ""Gwendolyn"",
            ""Hermione"", ""Isadora"", ""Jessamine"", ""Kiara"", ""Lilith"", ""Minerva"", ""Niamh"", ""Oona"", ""Pandora"",
            ""Quiana"", ""Rhiannon"", ""Saoirse"", ""Tamsin"", ""Undine"", ""Vespera"", ""Winter"", ""Xiomara"", ""Yseult"",
            ""Zephyrine"", ""Athena"", ""Bronwyn"", ""Cordelia"", ""Drusilla"", ""Evangeline"", ""Fleur"", ""Giselle"", ""Hestia"",
            ""Ingrid"", ""Jocasta"", ""Kalliope"", ""Lavinia"", ""Mireille"", ""Nerissa"", ""Olympia"", ""Pallas"", ""Querida"",
            ""Rowena"", ""Sapphira"", ""Tanith"", ""Ursuline"", ""Valkyrie"", ""Winifred"", ""Xylia"", ""Ygritte"", ""Zelda""
        };
        surnames = new HashSet<string>
        {
            ""Aldaine"", ""Blackthorn"", ""Crestfall"", ""Dreadmoor"", ""Ebonwood"", ""Frostbane"", ""Goldenvale"", ""Hawkridge"",
            ""Ironheart"", ""Jadeborn"", ""Kingsley"", ""Lorekeeper"", ""Moonshadow"", ""Nightfall"", ""Oakenshield"", ""Proudfoot"",
            ""Quicksilver"", ""Ravenwood"", ""Stormcloak"", ""Thornblade"", ""Underhill"", ""Valeheart"", ""Whitewood"", ""Xanadu"",
            ""Yewshade"", ""Zephyrblade"", ""Ashenbrook"", ""Brightwood"", ""Copperfield"", ""Duskwood"", ""Emberstone"", ""Firesong"",
            ""Griffith"", ""Holloway"", ""Ivoryfang"", ""Juniper"", ""Kingsgrave"", ""Lionheart"", ""Mistwood"", ""Netherwood"",
            ""Oakenspear"", ""Pinehurst"", ""Quillson"", ""Redwood"", ""Silverthorn"", ""Stonewall"", ""Talltree"", ""Umberfall"",
            ""Valerian"", ""Wildewood"", ""Xandros"", ""Yarrowfield"", ""Zephyrcrest"", ""Avalanche"", ""Blackwater"", ""Crimsonwind"",
            ""Darkwood"", ""Eversong"", ""Frostwind"", ""Goldleaf"", ""Hawthorn"", ""Ironclad"", ""Jadewind"", ""Kingsmark"",
            ""Lunarfall"", ""Mistborn"", ""Nighthawk"", ""Oathbreaker"", ""Pinecrest"", ""Quicksand"", ""Ravenclaw"", ""Shadowbane"",
            ""Starfall"", ""Thunderheart"", ""Underwood"", ""Valkyrie"", ""Winterbourne"", ""Xanathar"", ""Yellowknife"",
            ""Zephyrwind"", ""Arcane"", ""Bloodmoon"", ""Crowfeather"", ""Dawnblade"", ""Elmwood"", ""Frostfang"", ""Goldenleaf"",
            ""Hollowgrave"", ""Ironwood"", ""Jadehorn"", ""Knightshade"", ""Lioncrest"", ""Morningsong"", ""Nightraven"", ""Oceansong"",
            ""Phoenix"", ""Quicksilver"", ""Ravensong"", ""Shadowbrook"", ""Stagheart"", ""Twilight"", ""Umbra"", ""Viper"", ""Wintersong"",
            ""Xavier"", ""Yew"", ""Zephyr"", ""Alder"", ""Briar"", ""Cypress"", ""Dusk"", ""Ember"", ""Frost"", ""Gale"", ""Holly"", ""Ivy"",
            ""Juniper"", ""Lark"", ""Moss"", ""Nightshade"", ""Orchid"", ""Pine"", ""Quill"", ""Rose"", ""Sage"", ""Thorn"", ""Violet"",
            ""Willow"", ""Yarrow"", ""Zinnia"", ""Ash"", ""Bramble"", ""Dawn"", ""Echo"", ""Fawn"", ""Glen"", ""Hazel"", ""Iris"", ""Jade"",
            ""Kestrel"", ""Luna"", ""Meadow"", ""Nova"", ""Opal"", ""Petal"", ""Rain"", ""Sky"", ""Tansy"", ""Vale"", ""Wren"", ""Yew"", ""Zephyr""
        };
        rnd = random ?? new Random();
    }

    public void AddMaleFirstName(string name)
    {
        maleFirstNames.Add(name);
    }

    public void AddFemaleFirstName(string name)
    {
        femaleFirstNames.Add(name);
    }

    public void AddSurname(string surname)
    {
        surnames.Add(surname);
    }

    public string GenerateMaleFirstName()
    {
        if (maleFirstNames.Count == 0)
            throw new InvalidOperationException(""No male first names available."");
        int index = rnd.Next(maleFirstNames.Count);
        return maleFirstNames.ElementAt(index);
    }

    public string GenerateFemaleFirstName()
    {
        if (femaleFirstNames.Count == 0)
            throw new InvalidOperationException(""No female first names available."");
        int index = rnd.Next(femaleFirstNames.Count);
        return femaleFirstNames.ElementAt(index);
    }

    public string GenerateSurname()
    {
        if (surnames.Count == 0)
            throw new InvalidOperationException(""No surnames available."");
        int index = rnd.Next(surnames.Count);
        return surnames.ElementAt(index);
    }

    public string GenerateFullName(bool isMale)
    {
        string firstName = isMale ? GenerateMaleFirstName() : GenerateFemaleFirstName();
        string surname = GenerateSurname();
        return $""{firstName} {surname}"";
    }
}"
wXKUuzNx,about,Z1maV1,Lua,Wednesday 8th of May 2024 03:57:12 PM CDT,"os.pullEvent = os.pullEventRaw

local w,h = term.getSize()

function printCentered( y,s )
   local x = math.floor((w - string.len(s)) / 2)
   term.setCursorPos(x,y)
   term.clearLine()
   term.write( s )
end

local nOption = 1

local function drawMenu()
   term.clear()
   term.setCursorPos(1,1)
   term.write(""Diamond OS // 1.2.0 // "")
term.setCursorPos(1,2)
shell.run(""id"")

   term.setCursorPos(w-11,1)
if nOption == 1 then
   term.write(""Back"")
else
end

end

--GUI
term.clear()
local function drawFrontend()
   printCentered( math.floor(h/2) - 3, """")
   printCentered( math.floor(h/2) - 2, ""About"" )
   printCentered( math.floor(h/2) - 1, """")
   printCentered( math.floor(h/2) + 0, ""Name  : DiamondOS"")
   printCentered( math.floor(h/2) + 1, ""Manu. : LINC     "")
   printCentered( math.floor(h/2) + 2, ""Vers. : 1.2.0    "")
   printCentered( math.floor(h/2) + 3, """")
   printCentered( math.floor(h/2) + 4, ((nOption == 1) and ""[   Back   ]"") or "" Back"" )
end

--Display
drawMenu()
drawFrontend()

while true do
	local e,p = os.pullEvent(""key"")
		if p == keys.up then
			if nOption > 1 then
				nOption = nOption - 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.down then
			if nOption < 1 then
				nOption = nOption + 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.enter then
			break
		end
end
term.clear()

--Conditions
if nOption  == 1 then
shell.run(""/bin/main"")
end"
4BH1avUA,linq,Z1maV1,Lua,Wednesday 8th of May 2024 03:42:07 PM CDT,"brk = false
function forEach(tbl, func)
	for i, v in ipairs(tbl) do
		if brk then
			brk = false
			break
		end
		func(v)
	end
end

return { brk = function() brk = true end, forEach = forEach }"
RxkNetDQ,sha256,fmg75,Python,Wednesday 8th of May 2024 03:30:28 PM CDT,"# https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf


def _sigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 7) ^
           _rotate_right(num, 18) ^
           (num >> 3))
    return num


def _sigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 17) ^
           _rotate_right(num, 19) ^
           (num >> 10))
    return num


def _capsigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 2) ^
           _rotate_right(num, 13) ^
           _rotate_right(num, 22))
    return num


def _capsigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 6) ^
           _rotate_right(num, 11) ^
           _rotate_right(num, 25))
    return num


def _ch(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (~x & z)


def _maj(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (x & z) ^ (y & z)


def _rotate_right(num: int, shift: int, size: int = 32):
    """"""Rotate an integer right.""""""
    return (num >> shift) | (num << size - shift)

# Función para generar el mensaje binario según la especificación
def generate_binary_message(message: bytearray) -> bytes:
        """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""
        
        if isinstance(message, str):
            message = bytearray(message, 'ascii')
        elif isinstance(message, bytes):
            message = bytearray(message)
        elif not isinstance(message, bytearray):
            raise TypeError
        
        # Longitud original del mensaje en bits
        length = len(message) * 8
        # Agregar el bit ""1"" al final del mensaje
        message += b'\x80'
        # Calcular la cantidad de ceros necesarios para el relleno
        padding_zeros = (448 - (length + 1) % 512) % 512
        # Agregar los ceros de relleno
        message += b'\x00' * (padding_zeros // 8)
        # Agregar la longitud del mensaje original como una cadena binaria de 64 bits
        message += length.to_bytes(8, 'big')
        return message



# constantes ""K"" page 11

K = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]


def generate_hash(message: bytes) -> bytearray:
    """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""

    # Aplicar el relleno al mensaje
    padded_message = generate_binary_message(message)

    # Parsing
    blocks = []  # contains 512-bit chunks of message
    for i in range(0, len(padded_message), 64):  # 64 bytes is 512 bits
        blocks.append(padded_message[i:i + 64])

    # SHA-256 Hash Computation
    hash_values = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
                   0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]

    for message_block in blocks:
        # Prepare message schedule
        message_schedule = []
        for t in range(0, 64):
            if t <= 15:
                # adds the t'th 32 bit word of the block,
                # starting from leftmost word
                # 4 bytes at a time
                message_schedule.append(bytes(message_block[t * 4:(t * 4) + 4]))
            else:
                term1 = _sigma1(int.from_bytes(message_schedule[t - 2], 'big'))
                term2 = int.from_bytes(message_schedule[t - 7], 'big')
                term3 = _sigma0(int.from_bytes(message_schedule[t - 15], 'big'))
                term4 = int.from_bytes(message_schedule[t - 16], 'big')

                # append a 4-byte byte object
                schedule = ((term1 + term2 + term3 + term4) % 2**32).to_bytes(4, 'big')
                message_schedule.append(schedule)

        assert len(message_schedule) == 64

        # Initialize working variables
        a, b, c, d, e, f, g, h = hash_values

        # Iterate for t=0 to 63
        for t in range(64):
            t1 = ((h + _capsigma1(e) + _ch(e, f, g) + K[t] +
                   int.from_bytes(message_schedule[t], 'big')) % 2**32)

            t2 = (_capsigma0(a) + _maj(a, b, c)) % 2**32

            h, g, f, e, d, c, b, a = g, f, e, (d + t1) % 2**32, c, b, a, (t1 + t2) % 2**32

        # Compute intermediate hash value
        hash_values = [(x + y) % 2**32 for x, y in zip(hash_values, [a, b, c, d, e, f, g, h])]

    # concatenation by fmg
    result_bytes = b"""".join(h.to_bytes(4, 'big') for h in hash_values)
    return result_bytes


import sys

if __name__ == ""__main__"":
    # Verificar si se proporcionó un mensaje como argumento
    if len(sys.argv) != 2:
        print(""Uso: python3 sha256.py mensaje"")
        sys.exit(1)

    # Obtener el mensaje del primer argumento (ignorando el nombre del script)
    mensaje = sys.argv[1]

    # Calcular y mostrar el hash del mensaje
    print(generate_hash(mensaje.encode()).hex())"
KckR0faC,Buble 3,dllbridge,C,Wednesday 8th of May 2024 03:26:36 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; пример массива для сортировки
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        push ecx
        push edx
        mov ecx, -1
        .repeat
            inc ecx
            mov al, [edx + ecx]
            cmp al, 0
            jz .done
            invoke StdOut, al
            jmp .repeat
        .done:
        pop edx
        pop ecx
        ret
    endp

    proc print_number
        push eax
        push ebx
        mov ebx, 10
        mov edx, 0
        div ebx
        cmp eax, 0
        jz .done
        push edx
        call print_number
        pop edx
    .done:
        add dl, '0'
        invoke StdOut, dl
        pop ebx
        pop eax
        ret
    endp

    proc crlf
        invoke StdOut, 13
        invoke StdOut, 10
        ret
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
ysnVAQmT,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 03:17:34 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 1;
            int startNumber = 2;
            int power = 0;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            Console.WriteLine($""Рандомное число: {numberRandom}"");

            while (number < numberRandom) 
            {
                power++;
                number *= startNumber;
            }

            Console.WriteLine($""Минимальная степень двойки, превосходящая рандомное число: {power}"");
        }
    }
}

"
AJMFUeRV,BubleSorting FASM 2,dllbridge,ASM (NASM),Wednesday 8th of May 2024 03:17:08 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; пример массива для сортировки
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        enter
            push ecx
            mov ecx, -1
            .repeat
                inc ecx
                mov al, [edx + ecx]
                cmp al, 0
                jz .done
                invoke StdOut, al
                jmp .repeat
            .done:
            pop ecx
        return
    endp

    proc print_number
        enter
            push eax
            push ebx
            mov ebx, 10
            mov edx, 0
            div ebx
            cmp eax, 0
            jz .done
            push edx
            call print_number
            pop edx
        .done:
            add dl, '0'
            invoke StdOut, dl
            pop ebx
            pop eax
        return
    endp

    proc crlf
        enter
            invoke StdOut, 13
            invoke StdOut, 10
        return
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
0dfv0Zzm,Setup Docker Volume,About80Ninjas,PowerShell,Wednesday 8th of May 2024 03:10:40 PM CDT,"# This script will create docker volumes in the specified path and inspect them after creation

# Define an array of volume names
$Volumes = @(""jenkins"", ""webapps"", ""gitea"", ""giteasql"")

# Define the path where the volumes will be created
$PathToVolumes = ""C:\Dev\docker\volumes\""

# Define the docker command to create volumes
# The --opt type=none option specifies a non-docker managed volume
# The --opt o=bind option binds the volume to a directory on the host machine
# The --opt device=$PathToVolumes option specifies the directory on the host machine where the volume will be created
$dockercmd = ""docker volume create --opt type=none --opt o=bind --opt device=$PathToVolumes""

# Loop through each volume name in the array
$Volumes | ForEach-Object {  

    # Create a full command by concatenating the docker command with the volume name
    $fullcmd = $dockercmd + $_ + ' ' + $_

    # Execute the full command using Invoke-Expression
    # This will create the volume with the specified name and bind it to the specified directory on the host machine
    Invoke-Expression $fullcmd

    # Execute the docker command to inspect the volume with the specified name
    # This will display information about the volume, such as its driver, name, and mount point
    Invoke-Expression ""docker volume inspect $($_)""
}
"
AD3a7RQh,Com-port for arduino,dllbridge,C,Wednesday 8th of May 2024 02:47:10 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <termios.h>

int open_port(const char *port) {
    int fd = open(port, O_RDWR | O_NOCTTY | O_NDELAY);
    if (fd == -1) {
        perror(""open_port: Unable to open port"");
        return -1;
    }
    
    struct termios options;
    tcgetattr(fd, &options);
    cfsetispeed(&options, B9600);
    cfsetospeed(&options, B9600);
    options.c_cflag &= ~PARENB;
    options.c_cflag &= ~CSTOPB;
    options.c_cflag &= ~CSIZE;
    options.c_cflag |= CS8;
    options.c_cflag |= (CLOCAL | CREAD);
    tcsetattr(fd, TCSANOW, &options);
    
    return fd;
}

int main() {
    int fd = open_port(""/dev/ttyUSB0"");
    if (fd == -1) {
        return -1;
    }
    
    char write_buffer[] = ""Hello Arduino!"";
    int bytes_written = write(fd, write_buffer, strlen(write_buffer));
    if (bytes_written < 0) {
        perror(""write"");
        close(fd);
        return -1;
    }
    
    char read_buffer[256];
    int bytes_read = read(fd, &read_buffer, sizeof(read_buffer));
    if (bytes_read < 0) {
        perror(""read"");
        close(fd);
        return -1;
    }
    
    read_buffer[bytes_read] = '\0';
    printf(""Received: %s\n"", read_buffer);

    close(fd);
    
    return 0;
}"
FBTgee4c,Untitled,Hazkin,C#,Wednesday 8th of May 2024 02:42:52 PM CDT,"	[Serializable]
    public class PostData
    {
        [FoldoutGroup(""$_id"")]
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private int _id;
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private string _dateTime;
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private PostTypeAccount _postTypeAccount;
        [Title(""Text Field"", bold: false)] [HideLabel] [MultiLineProperty(10)]
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private string _text;
        [JsonProperty] [BoxGroup(""$_id/Sprite"")] [SerializeField] private List<string> _linkSprite;
        [JsonIgnore] [BoxGroup(""$_id/Sprite"")] [JsonIgnore] [SerializeField] private List<Sprite> _sprite;
        [JsonProperty] [BoxGroup(""$_id/Reaction"")] [SerializeField] private List<ReactionData> _reactionData = new List<ReactionData>();
 
        [JsonIgnore] public int Id => _id;
        [JsonIgnore] public string Text => _text;
        [JsonIgnore] public string DateTime => _dateTime;
        [JsonIgnore] public PostTypeAccount PostTypeAccount => _postTypeAccount;
        [JsonIgnore] public List<string> LinkSprite => _linkSprite;
        [JsonIgnore] public List<Sprite> Sprite => _sprite;
        [JsonIgnore] public List<ReactionData> ReactionData => _reactionData;
		//other methods 
	}"
WFHQsmLm,Protection Profile Active Record Count,DataCCIW,T-SQL,Wednesday 8th of May 2024 02:33:31 PM CDT,"DECLARE @TotalActiveRecords INT  = (SELECT COUNT(*) FROM Person WHERE RecordStatusValueId = 3)  -- Active Records

SELECT 
    CASE AccountProtectionProfile 
        WHEN 0 THEN 'Low' 
        WHEN 1 THEN 'Medium' 
        WHEN 2 THEN 'High' 
        WHEN 3 THEN 'Extreme' END,
    COUNT(*) AS [Record Count],
    CAST(((COUNT(*) * 100.0) / @TotalActiveRecords) AS DECIMAL(5, 2)) AS [Percent]
FROM Person
WHERE RecordStatusValueId = 3 -- Active
GROUP BY AccountProtectionProfile
"
3piwtQgE,memberUpdate.js,toowake,JavaScript,Wednesday 8th of May 2024 02:26:51 PM CDT,"const { EmbedBuilder, Events } = require('discord.js');
const theme = require('../../../embedConfig.json');
const Audit_Log = require('../../Schemas.js/auditlog');
const { perm } = require('../../../functions');

module.exports = async (client) => {
    client.on(Events.GuildMemberUpdate, async (oldMember, newMember) => {
        if (!perm(oldMember)) return;

        const auditEmbed = new EmbedBuilder()
            .setColor(theme.theme)
            .setTimestamp()
            .setFooter({ text: 'Nexus Audit Log System' });

        const data = await Audit_Log.findOne({ Guild: oldMember.guild.id }).catch(console.error);
        if (!data || !data.Channel) return; // Ensure there is a channel ID

        const auditChannel = client.channels.cache.get(data.Channel);
        if (!auditChannel) return; // Ensure the channel exists

        const changes = [];

        if (oldMember.nickname !== newMember.nickname) {
            changes.push(`Nickname: \`${oldMember.nickname || 'None'}\` → \`${newMember.nickname || 'None'}\``);
        }

        if (!oldMember.roles.cache.equals(newMember.roles.cache)) {
            const oldRoles = oldMember.roles.cache.map(role => role.name).join(', ');
            const newRoles = newMember.roles.cache.map(role => role.name).join(', ');
            changes.push(`Roles: \`${oldRoles}\` → \`${newRoles}\``);
        }

        if (changes.length === 0) return; // If no changes, exit

        auditEmbed
            .setTitle('Member Updated')
            .addFields({ name: 'Changes:', value: changes.join('\n') });

        await auditChannel.send({ embeds: [auditEmbed] }).catch(err => {
            console.error('Failed to send audit log message:', err);
        });
    });
};"
WcKnwuCm,bla bla bla,Kambarych,C++,Wednesday 8th of May 2024 02:23:22 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define pb(i)               push_back(i)
#define For(i, n)           for(int i = 0; i < n; ++i)
#define qFor(i, x, n)       for(int i = x; i < n; ++i)
#define rFor(i, n)          for(int i = n - 1; i >= 0; --i)
#define see                 cout << endl
#define all(x)              (x).begin(),(x).end()
#define rall(x)             (x).rbegin(),(x).rend()
#define pii                 pair<int, int>
#define vt                  vector
#define ll                  long long
#define ld                  long double
 
const int MAX = 1e9;
const int MOD = 1e9 + 7;
const ll  INF = 1e18;
const ld  PI  = 3.14159265358979323846;
 
template<typename T>
void read(vt<T> & a) {
    For(i, a.size()) cin >> a[i];
}
template<typename T>
void print(vt<T> & a) {
    For(i, a.size()) cout << a[i] << "" "" ;
    cout << endl;
}
template<typename T>
void print2(vt<vt<T> > & a) {
    For(i, a.size()) {
        For(j, a[i].size()) {
            cout << a[i][j] << "" "";
        }
        cout << endl;
    }
}
template<typename T>
void read2(vt<vt<T> > & a) {
    For(i, a.size()) {
        For(j, a[i].size()) {
            cin >> a[i][j];
        }
    }
}

struct cube {
  int left, right, top, down, forward, back;
};

vt<int> covert(cube shablon) {
  return {shablon.left, shablon.right, shablon.top, shablon.down, shablon.forward, shablon.back};
}

cube rotate(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.forward;
  rubik.forward = rubik.top;
  rubik.top = rubik.back;
  rubik.back = rubik.down;
  rubik.down = tmp;
  return rubik;
}
cube rotate_clockwise(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.left;
  rubik.left = rubik.top;
  rubik.top = rubik.right;
  rubik.right = rubik.down;
  rubik.down = tmp;
  return rubik;
}
cube rotate_anti_clockwise(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.top;
  rubik.top = rubik.left;
  rubik.left = rubik.down;
  rubik.down = rubik.right;
  rubik.right = tmp;
  return rubik;
}

map<vt<int> , int> mp;
vt<int> groups[10000];

int find(vt<int> & a) {
    return mp[a];
}



void write()
{
    int n; cin >> n;
    int cur_group = 1;
    For(i, n) {
        vt<int> a(6); read(a);
        vt<vt<int> > b;
    cube rubik;
    rubik.left = a[0], rubik.right = a[1], rubik.top = a[2], rubik.forward = a[3], rubik.down = a[4], rubik.back = a[5];
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
        bool ok = false;
        For(j, b.size()) {
            int res = find(b[j]);
            if (res != 0) {
                groups[res].push_back(i + 1);
                ok = true;
                break;
            }
        }
        if (ok) continue;
        mp[b[0]] = cur_group;
        groups[cur_group].push_back(i + 1);
        cur_group++;
    }   
    qFor(i, 1, cur_group + 1) {
        sort(all(groups[i]));
    }
    sort(groups, groups + cur_group);
    cout << cur_group - 1 << endl;
    qFor(i, 1, cur_group + 1) {
        For(j, groups[i].size()) {
            cout << groups[i][j] << "" "";
        }
    if (groups[i].empty()) break;
    see;
    }
}
 
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifdef DEBUG
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    int t;
    t = 1;
    //cin >> t;
    For(T, t) write();
    return 0;
}"
N8HkSbLz,17 (пара -- два соседних),nq1s788,Python,Wednesday 8th of May 2024 02:22:31 PM CDT,"#https://inf-ege.sdamgia.ru/problem?id=37336
data = open('17.txt').readlines()
cnt = 0
mx = -10000000
for i in range(len(data) - 1):
    a = int(data[i])
    b = int(data[i + 1])
    if (a % 3 == 0) or (b % 3 == 0):
        cnt += 1
        mx = max(mx, a + b)
print(cnt, mx)"
BNneui6Z,Untitled,0demongamer0,JavaScript,Wednesday 8th of May 2024 02:19:38 PM CDT,"function pUrl(e) {
    try {
        /*var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
            ,
            r = [""source"", ""protocol"", ""authority"", ""userInfo"", ""user"", ""password"", ""host"", ""port"", ""relative"", ""path"", ""directory"", ""file"", ""query"", ""anchor""];
        var i = e.indexOf(""["")
            , o = e.indexOf(""]"");
        -1 != i && -1 != o && (e = e.substring(0, i) + e.substring(i, o).replace(/:/g, "";"") + e.substring(o, e.length));
        for (var a = n.exec(e || """"), s = {}, c = 14; c--;)
            s[r[c]] = a[c] || """";*/

        const n1 = /^.+\/(?:TIP_ALERT)\/([0-9a-z\-]+)\//gm;
        let m;
        while ((m = n1.exec(e)) !== null) {
            if (m.index === n1.lastIndex) {
                n1.lastIndex++;
            }
            return m[1];
        }
        throw new Error(""no match"");
    } catch (error) {
        console.error(error);
    }
}"
Eg7WErRy,Untitled,BojanNovakovic,Kotlin,Wednesday 8th of May 2024 02:18:07 PM CDT,"@OptIn(ExperimentalFoundationApi::class)
@Composable
fun MovesetOutlineTextField(
    value: String,
    onValueChange: (String) -> Unit,
    onClear: () -> Unit,
    modifier: Modifier = Modifier,
    enabled: Boolean = true,
    label: String? = null,
    placeholder: String? = null,
    errorText: String? = null
) {
    Column {
        OutlinedTextField(
            value = value,
            onValueChange = onValueChange,
            singleLine = true,
            label = { label?.let { Text(it) } },
            enabled = enabled,
            readOnly = !enabled,
            placeholder = { placeholder?.let { Text(it) } },
            modifier = modifier,
            textStyle = TextStyle(color = colorResource(MR.colors.font_on_surface_color)),
            trailingIcon = {
                if (enabled) {
                    val trailingIconEnabled = value.isNotEmpty() && enabled
                    InputCloseIcon(onClick = onClear, trailingIconEnabled)
                }
            },
            isError = !errorText.isNullOrEmpty()
        )
         val errorString = errorText ?: """"

        Text(
            text = errorString,
            style = TextStyle(color = colorResource(MR.colors.alert_text_on_surface_color)),
            fontSize = 14.sp,
            maxLines = 1,
            modifier = Modifier.basicMarquee(delayMillis = 0, initialDelayMillis = 1200)
        )

    }
}

@Composable
private fun InputCloseIcon(onClick: () -> Unit, enabled: Boolean) {
    val resource = if (enabled) MR.colors.secondary_button_content_color else MR.colors.disabled_element_tint
    IconButton(onClick = onClick, enabled = enabled) {
        Image(
            painter = painterResource(MR.images.close_image),
            contentDescription = stringResource(MR.strings.close),
            colorFilter = ColorFilter.tint(colorResource(resource))
        )
    }
}"
DkykGuK8,rychle a bezchybne very good minimax s T,max2201111,Python,Wednesday 8th of May 2024 02:17:00 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met


def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or eval != 4
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []
    all_true = True

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()

        if maximizing_player:
            if returned_T:  # Okamžitý návrat pokud najdeme vítěznou větev
                return [(move, board.san(move))] + sequence, eval, True
            if eval > best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            alpha = max(alpha, eval)
        else:
            all_true = all_true and returned_T
            if eval < best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            beta = min(beta, eval)

        if beta <= alpha:
            break

    if not maximizing_player and all_true:
        return best_sequence, best_eval, True  # Pro minimalizujícího hráče, pokud jsou všechny tahy nevyhnutelně prohrané

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoumána, čas: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T


start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""

start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Počáteční šachovnice:"")
print(board)
print(""Počáteční FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 26, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score, T)
"
sA2N0MkS,Задача 7,dmemsm,Python,Wednesday 8th of May 2024 02:12:55 PM CDT,"n = int(input())
m = int(input())

result = []

for i in range(1, m+1):
	for j in range(1, m+1):
		for k in range(1, m+1):
			if (i+j+k) == n:
				r = sorted([i, j, k])
				if not (r in result):
					result.append(r)
				
				
for r in result:
	print(f""{r[0]} {r[1]} {r[2]}"")"
k4NXQ7QK,NO FUNCIONA BIEN,FRIKIdelTO,Python,Wednesday 8th of May 2024 02:12:17 PM CDT,"# módulos de Python
import os
# módulos de terceros
import requests
from bs4 import BeautifulSoup

def datos_contratos():
    base_url = 'https://contrataciondelestado.es'
    sesion = requests.Session()
    sesion.headers = {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'Accept-Encoding': 'gzip, deflate, br, zstd',
        'Accept-Language': 'es-ES,es;q=0.9,en-US;q=0.8,en;q=0.7',
        'Cache-Control': 'no-cache',
        'Connection': 'keep-alive',
        'Host': 'contrataciondelestado.es',
        'Pragma': 'no-cache',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-User': '?1',
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36',
        'sec-ch-ua': '""Chromium"";v=""124"", ""Google Chrome"";v=""124"", ""Not-A.Brand"";v=""99""',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '""Windows""'
    }
    url = base_url + '/wps/portal/!ut/p/b0/04_Sj9CPykssy0xPLMnMz0vMAfGjzOJNXP2dnd08jAwsgo1dDIx8XEJDzTyAXHcj_YJsR0UAIk-WfA!!'
    # primera petición (GET)
    print(""Petición inicial (GET)"")
    req = sesion.get(url, timeout=20)
    print(""Content-Location:"", req.headers.get(""content-location""), end=""\n\n"")
    guardar_y_cargar_html(req.text, ""indice_0.html"")
    indice = 1
    # vamos a por las siguientes páginas (POST)
    for n in range(3):
        soup = BeautifulSoup(req.text, ""html.parser"")
        next_url = base_url + soup.find(id=""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"").attrs.get(""action"")
        data = {
            ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"": ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"",
            ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes:viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes:siguienteLink"": ""Siguiente+>>"",
            ""javax.faces.ViewState"": f""j_id{indice}:j_id{indice+1}""
        }
        print(f'Petición POST #{n+1}: {next_url}')
        req = sesion.post(next_url, data=data, timeout=20)
        print(""Content-Location:"", req.headers.get(""content-location""), end=""\n\n"")
        guardar_y_cargar_html(req.text, f'indice_{indice}.html')
        indice+= 2

def guardar_y_cargar_html(html, nombre_archivo):
    with open(nombre_archivo, ""w"", encoding=""utf-8"") as f:
        f.write(html)
    os.system(nombre_archivo)

# MAIN #######################################################
if __name__ == '__main__':
    datos_contratos()
"
YNBjhUSM,Yapidor,Maks14a,Lua,Wednesday 8th of May 2024 02:03:29 PM CDT,"local Library = loadstring(game:HttpGet(""https://pastebin.com/raw/GGjwwXSC""))()
local Window = Library.CreateLib(""HitBox By xxownerxx cyka xxownerxx cykaxxownerxx cykaxxownerxx cyka"", ""RJTheme1"")
local Tab = Window:NewTab(""tiGay"")

local Section = Tab:NewSection(""TyT!"")
Section:NewLabel(""ZalupaHitbox"")







Section:NewSlider(""ya pidor"", ""SliderInfo"", 50, 0, function(s) -- 500 (Макс. значение) | 0 (Мин. значение)
    

_G.HeadSize = s
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new(""Really blue"")
v.Character.HumanoidRootPart.Material = ""Neon""
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)

    
end)

Section:NewKeybind(""Close"", """", Enum.KeyCode.L, function()
	game.CoreGui[111].Main.Visible = false
end)

Section:NewKeybind(""Open"", """", Enum.KeyCode.P, function()
	game.CoreGui[111].Main.Visible = true
end)
"
xNTSRRxK,Untitled,sissou123,HTML,Wednesday 8th of May 2024 02:01:22 PM CDT,"The Complete Guide to HTML
Go From Beginner To HTML Master In A Single Day!
 What you'll learn
Create well-structured web pages with HTML
Create complex HTML forms
Understand web accessibility and create accessible webpages 
for more :https://cuty.io/sRBX

"
PUpDkQnF,CRUD Operations,Searge,JavaScript,Wednesday 8th of May 2024 02:01:20 PM CDT,"TypeError: can't access property ""errorCode"" of undefined
    NextJS 3
        _
        d
        u
_app-4ac532da56fb8941.js:19:7082
    NextJS 18
        eG
        m
        g
        a
        cont
        g
        a
        cont
        g
        a
        cont
        d
        u
        g
        a
        cont
        d
        u
The above error occurred in task _
    created by anonymous
    created by takeEvery(MUTATION_BULK_DELETE, )
    created by ni
Tasks cancelled due to error:
takeEvery(MUTATION_BULK_DELETE, )
takeEvery(HOME_TOPIC_SELECTORS_REQUEST, )
takeEvery(HOME_SETUP_SELECT_TOPIC, )
takeEvery(HOME_SETUP_DESELECT_TOPIC, )
takeEvery(HOME_SETUP_FINALIZE_TOPICS, )
takeEvery(HOME_SET_STORED_USER_TOPICS, )
takeEvery(HOME_SETUP_SET_STATUS,HOME_SETUP_RESET,HOME_COOKIE_RESET,HOME_SET_STORED_USER_TOPICS,SET_TOPIC_SUCCESS, )
takeEvery(HOME_COOKIE_RESET, )
takeEvery(SHARED_ITEM_REQUEST, )
takeLatest(APP_SET_PREFERENCES, )
takeLatest(APP_SET_MODE, )
takeLatest(APP_SORT_ORDER_OLD, I)
takeLatest(APP_SORT_ORDER_NEW, I)
takeLatest(APP_SORT_ORDER_RELEVANCE, I)
takeLatest(APP_LIST_MODE_LIST, E)
takeLatest(APP_LIST_MODE_GRID, E)
takeLatest(APP_LIST_MODE_DETAIL, E)
takeLatest(APP_COLOR_MODE_SET, )
takeLatest(USER_REQUEST, )
takeLatest(ACCOUNT_FIRST_NAME_UPDATE, x)
takeLatest(ACCOUNT_LAST_NAME_UPDATE, x)
takeLatest(ACCOUNT_BIO_UPDATE, x)
takeLatest(ACCOUNT_AVATAR_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_USERNAME_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_PASSWORD_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_EMAIL_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_EMAIL_ALIAS_ADD_REQUEST, )
takeLatest(ACCOUNT_EMAIL_ALIAS_REMOVE_REQUEST, )
takeLatest(ACCOUNT_EMAIL_RESEND_CONFIRMATION, )
takeLatest(ACCOUNT_GET_CONNECTIONS_REQUEST, )
takeLatest(ACCOUNT_CONNECTION_REVOKE_REQUEST, )
takeLatest(ACCOUNT_DELETE_CONFIRM, )
takeLatest(ACCOUNT_CLEAR_CONFIRM, )
takeLatest(ACCOUNT_FEED_PROTECTION_REQUEST, )
takeLatest(SETTINGS_FETCH_REQUEST, )
takeLatest(SETTINGS_FETCH_SUCCESS, )
takeLatest(SETTINGS_UPDATE, eP)
takeLatest(USER_TAGS_EDIT_SUCCESS, eP)
takeLatest(USER_TAGS_DELETE_SUCCESS, eP)
takeLatest(USER_TAGS_PINS_SET, eP)
takeLatest(PINNED_TOPICS_SET, eP)
takeLatest(TOGGLE_BRAZE, eP)
takeEvery(USER_TAGS_REQUEST, e)
takeEvery(USER_TAGS_PIN, )
takeEvery(USER_TAGS_EDIT_CONFIRM, )
takeEvery(USER_TAGS_DELETE_CONFIRM, )
takeEvery(FEATURES_ASSIGN, )
takeLatest(VARIANTS_SAVE, )
takeLatest(FEATURES_HYDRATE, )
takeLatest(SNOWPLOW_TRACK_PAGE_VIEW, )
takeEvery(SNOWPLOW_SEND_EVENT, A)
takeLatest(POCKET_HITS_SIGNUP_REQUESTED, )
takeEvery(ARTICLE_SAVE_REQUEST, )
takeEvery(ARTICLE_UNSAVE_REQUEST, )
takeEvery(UPDATE_LINE_HEIGHT,UPDATE_COLUMN_WIDTH,UPDATE_FONT_SIZE,UPDATE_FONT_TYPE, )
takeEvery(READ_ITEM_SUCCESS, )
takeEvery(READ_ITEM_REQUEST, )
takeEvery(HOME_CONTENT_REQUEST, I)
takeEvery(SET_TOPIC_SUCCESS, I)
takeEvery(HOME_REC_REQUEST_DEMOTE, )
takeLatest(USER_SEARCH_RECENT_GET, )
takeLatest(USER_SEARCH_RECENT_SAVE, )
takeLatest(SHORTCUT_GO_TO_LIST, )
takeLatest(SHORTCUT_GO_TO_ARCHIVE, )
takeLatest(SHORTCUT_GO_TO_FAVORITES, )
takeLatest(SHORTCUT_GO_TO_ARTICLES, )
takeLatest(SHORTCUT_GO_TO_HIGHLIGHTS, )
takeLatest(SHORTCUT_GO_TO_VIDEOS, )
takeLatest(SHORTCUT_GO_TO_TAGS, )
takeEvery(SHORTCUT_SELECT_NEXT_ITEM, )
takeEvery(SHORTCUT_SELECT_PREVIOUS_ITEM, )
takeEvery(SHORTCUT_ENGAGE_SELECTED_ITEM, )
takeLatest(APP_SET_MODE, )
takeLatest(SHORTCUT_VIEW_ORIGINAL, )
takeLatest(SHORTCUT_DELETE_ITEM, )
takeLatest(SHORTCUT_ARCHIVE_ITEM, )
takeLatest(SHORTCUT_FAVORITE_ITEM, )
takeLatest(SHORTCUT_EDIT_TAGS, )
takeEvery(SHORTCUT_INCREASE_FONT_SIZE, )
takeEvery(SHORTCUT_DECREASE_FONT_SIZE, )
takeEvery(SHORTCUT_INCREASE_COLUMN_WIDTH, )
takeEvery(SHORTCUT_DECREASE_COLUMN_WIDTH, )
takeLatest(BRAZE_TOKEN_REQUEST, )
takeEvery(MUTATION_SUCCESS, )
takeEvery(MUTATION_DELETE_SUCCESS, )
takeEvery(ITEMS_UPSERT_SUCCESS,ITEMS_SAVED_UPDATE_SUCCESS, )
takeEvery(LOAD_MORE_ITEMS, )
takeEvery(LOAD_PREVIOUS_ITEMS, )
takeEvery(ITEMS_SAVED_PAGE_SET_SORT_ORDER_REQUEST, )
takeEvery(SEARCH_SAVED_ITEMS,SEARCH_SAVED_ITEMS_UNREAD,SEARCH_SAVED_ITEMS_ARCHIVED,SEARCH_SAVED_ITEMS_FAVORITES,GET_ITEMS_UNREAD,GET_ITEMS_ARCHIVED,GET_ITEMS_FAVORITES,GET_ITEMS_FAVORITES_UNREAD,GET_ITEMS_FAVORITES_ARCHIVED,GET_ITEMS_ANNOTATED,GET_ITEMS_ANNOTATED_UNREAD,GET_ITEMS_ANNOTATED_ARCHIVED,GET_ITEMS_ANNOTATED_FAVORITES,GET_ITEMS_ARTICLES,GET_ITEMS_ARTICLES_UNREAD,GET_ITEMS_ARTICLES_ARCHIVED,GET_ITEMS_ARTICLES_FAVORITES,GET_ITEMS_VIDEOS,GET_ITEMS_VIDEOS_UNREAD,GET_ITEMS_VIDEOS_ARCHIVED,GET_ITEMS_VIDEOS_FAVORITES,GET_ITEMS_TAGS,GET_ITEMS_TAGS_UNREAD,GET_ITEMS_TAGS_ARCHIVED,GET_ITEMS_TAGS_FAVORITES, )
takeEvery(ITEMS_SAVED_REQUEST, )
takeEvery(ITEMS_SAVED_TAGGED_REQUEST, )
takeEvery(ITEMS_SAVED_SEARCH_REQUEST, )
takeEvery(ITEMS_SAVED_UPDATE_REQUEST, )
takeEvery(LIST_CHECK_PILOT_STATUS_REQUEST, )
takeEvery(LIST_PAGE_SET_SORT_ORDER_REQUEST, )
takeEvery(LIST_ALL_REQUEST, )
takeEvery(LIST_INDIVIDUAL_REQUEST, )
takeEvery(LIST_INDIVIDUAL_MORE_REQUEST, )
takeEvery(LIST_RECENT_REQUEST,LIST_CREATE_SUCCESS,LIST_DELETE_SUCCESS,LIST_UPDATE_SUCCESS,LIST_UPDATE_STATUS_SUCCESS,LIST_ADD_ITEM_SUCCESS,LIST_DELETE_ITEM_SUCCESS,LIST_ITEM_ADD_NOTE_SUCCESS,LIST_ITEM_EDIT_NOTE_SUCCESS,LIST_ITEM_NOTE_DELETE_SUCCESS,LIST_ITEMS_REORDER_SUCCESS, )
takeEvery(MUTATION_ARCHIVE, )
takeEvery(MUTATION_UNARCHIVE, )
takeEvery(MUTATION_BULK_ARCHIVE, )
takeEvery(MUTATION_BULK_UNARCHIVE, )
takeEvery(MUTATION_DELETE, )
takeEvery(MUTATION_UNDELETE, )
takeEvery(MUTATION_REFRESH, )
takeEvery(MUTATION_FAVORITE, )
takeEvery(MUTATION_UNFAVORITE, )
takeEvery(MUTATION_BULK_FAVORITE, )
takeEvery(MUTATION_BULK_UNFAVORITE, )
takeEvery(MUTATION_UPSERT, )
takeEvery(MUTATION_BULK_SELECT, b)
takeEvery(MUTATION_BULK_DESELECT, b)
takeEvery(MUTATION_TAG_CONFIRM, )
takeLatest(MUTATION_TAG_SUGGESTION_REQUEST, )
takeEvery(HIGHLIGHT_SAVE_REQUEST, )
takeEvery(HIGHLIGHT_DELETE_REQUEST, )
takeLatest(ITEMS_REPORT_REQUEST, )
takeLatest(SHARE_REQUEST, )
takeLatest(SHARE_ADD_CONTEXT, )
takeLatest(LIST_CREATE_REQUEST, )
takeLatest(LIST_BULK_CREATE_REQUEST, )
takeEvery(LIST_DELETE_REQUEST, )
takeEvery(LIST_DELETE_ITEM_REQUEST, )
takeEvery(LIST_ITEM_NOTE_DELETE_REQUEST, )
takeLatest(LIST_UPDATE_REQUEST, )
takeLatest(LIST_UPDATE_STATUS_REQUEST, )
takeLatest(LIST_ITEM_ADD_NOTE_REQUEST, U)
takeLatest(LIST_ITEM_EDIT_NOTE_REQUEST, U)
takeLatest(LIST_ITEMS_REORDER_REQUEST, )
takeLatest(LIST_ADD_ITEM_REQUEST, )
takeLatest(LIST_BULK_ADD_ITEM_REQUEST, )
takeEvery(LISTEN_REQUEST, )"
iY4vUyyV,Задача 2,dmemsm,Python,Wednesday 8th of May 2024 01:43:53 PM CDT,"n = int(input())
print(f""Число {n} в двоичной системе счисления: {bin(n)[2:]}"")

print(f""Число {n} в восьмеричной системе счисления: {oct(n)[2:]}"")

print(f""Число {n} в шестнадцатеричной системе счисления: {hex(n)[2:]}"")"
mX3Rt4TU,Задача 1,dmemsm,Python,Wednesday 8th of May 2024 01:30:53 PM CDT,"m = int(input())
k = int(input())

print(m*100+k)"
uFdbHD0r,mIRC Update,Tiago_f,mIRC,Wednesday 8th of May 2024 01:26:59 PM CDT,"menu status,menubar {
  Update-c&heck... :checkver
}
alias sdt {
  if ($did($did).state) { set % $+ $1 1 }
  else { unset % $+ $1 }
}
alias checkver { noop $dialog(checkver,checkver,-4) }
alias StartVersion {
  did -r $dname 13
  did -a $dname 11 Checking for updates...
  did -h $dname 4,8
  did -b $dname 6
  if (%check.beta) { var %URI = https://forums.mirc.com/ubbthreads.php/topics/225704 }
  else { var %URI = https://www.mirc.com/get.html }
  noop $urlget(%URI,gbi,&CheckVer,processWmIRC)
}
alias fixhtml {
  var %r = /(&#(\d{2,3});)/g,%x = $replacecs($1-,$chr(9),$chr(32),&apos;,',&ndash;,-,&#8211;,-,&#8216;,‘,&#8217;,’,&uuml;,ü,&Uuml;,Ü,&auml;,ä,&Auml;,Ä,&ouml;,ö,&Ouml;,Ö,&szlig;,ß,&quot;,"",&lt;,<,&gt;,>,&euro;,$chr(128),&amp;,&,&#8243;,″,&#8220;,“,&#8221;,”,&#8230;,…,&nbsp;,$chr(32))
  if ($isutf(%x)) { %x = $utfdecode(%x) }
  while ($regex(ftsub,%x,%r)) { %x = $replace(%x,$regml(ftsub,1),$chr($regml(ftsub,2))) }
  while ($regex(ftsub,%x,/(&#x([0-9a-z]{2});)/gi)) { %x = $replace(%x,$regml(ftsub,1),$chr($base($regml(ftsub,2),16,10))) }
  return %x
}
alias getinfosstable {
  if ($bfind(&stable,1,/<h2 class=""topic"">mIRC $1 has been released.*?<br>\s+(.*?)<ul>\s+(.*?)<\/ul>(.*?)(?=<p>\s*<h2)/s,stable).regex) {
    did -a checkver 13 $fixhtml($remove($regml(stable,1),<p>) $+ $crlf $+ $replace($regml(stable,2),<li>,$crlf))
  }
  did -e checkver 6
  did -v checkver 4,8
  did -a checkver 11 $1
}
alias ProcessWmIRC {
  if ($dialog(checkver)) {
    var %beta m@(*LIMIT_MATCH=200000)<(?:img|div) .*? title=""([^""]++)""><a href=""(/ubbthreads\.php/topics/(\d++)/[^""]++)"".*(?:.*\n)*?<span class=""date"">([^<]++)</span>(?: <span class=""time"">([^<]++)</span>)?.*(?:.*\n)*?<div class=""bold author-name fwrap dblock"">\s++<a href=""/ubbthreads\.php/users/\d++/[^""]++""><[^<]+>([^<]++).*(?:.*\n)*?<div id=""body\d++"">([\s\S]+?)()</div>\s<br>@gF
    var %norm = /The latest version of mIRC is <strong>mIRC ([^<]+)</strong>/i
    var %id = $1 , %BV = $urlget(%id).target, %m
    if ($urlget(%id).state = ok) {
      if ($bfind(%BV,1,%norm,Norm).regex) {
        var %m = $mid($regml(Norm,1),2)
        if (%m != $version) {
          set %url.get $nofile($urlget(%id).url) $+ get.php
          set %url.news $nofile($urlget(%id).url) $+ news.html
          noop $urlget(%url.news,gb,&stable,getinfosstable %m)
        }
        else {
          did -a checkver 11 mIRC is up to date.
          did -e checkver 6
        }
      }
      elseif ($bfind(%BV,1,%beta,Beta).regex) {
        bcopy -c &new 1 %BV $regmlex(beta,2,7).bytepos $calc($regmlex(beta,2,8).bytepos - $regmlex(beta,2,7).bytepos)
        if (!$bfind(&new,0,/(?|.*?>Beta v(\S+) changes:(<br>.*?)(?=<br><br>Beta v|<br>Changes:)|.*?<br><br>(.*?)(?=<br><br>Beta))(?:.*<br>Changes:(.*))/F,m).regex) return
        var %version $regml(m,1)
        var %change1 $regml(m,2)
        var %change2 $regml(m,3)
        if (%change2 == $null) {
          %change2 = %change1
          %change1 = %version
          return
        }
        did -a checkver 13 $+ $str($crlf,1)
        noop $regex(%change1,/.*?<br>(.*)/)
        noop $regex(p,$regml(1),/(.*?)(?:<br>(?=\d)|$)/g)
        var %a 1,%item
        if ($wd(%version,-1,46) != $beta) {
          while ($regml(p,%a)) {
            var %v $v1
            if ($regex(%v,/^\d+.Items (\d+) and (\d+)/i)) var %item %item $regml(1) $regml(2)
            elseif ($regex(%v,/^\d+.Item (\d+)/i)) var %item %item $regml(1)
            var %text $fixhtml($replace($regsubex(%v,/<a href=""([^""]+)"" .*?<\/a>/g,\1),<br>,$chr(32)))
            did -a checkver 13 %text $+ $crlf
            inc %a
          }
          if (%item) {
            var %b 1
            did -a checkver 13 $crlf $+ Beta changelog: $+ $Str($crlf,2)
            while ($wd(%item,%b,32)) {
              var %v $v1
              noop $regex(p,%change2,/(?:^|<br>)( $+ %v $+ \..*?(?=<br>\d+\.|$))/)
              did -a checkver 13 $fixhtml($replace($regsubex($regml(p,1),/<a href=""([^""]+)"" .*?<\/a>/g,\1),<br>,$chr(32),</div>,)) $+ $crlf
              inc %b
            }
            did -i checkver 13 1 $did(checkver,13,1)
            did -d checkver 13 1
            did -e checkver 6
            did -v checkver 4,8
            did -a checkver 11 %version
            set %url.get $+(https://www.mirc.com/downloads/beta/,mircb,$remove(%version,.),.zip)
            set %url.news $urlget(%id).url
          }
        }
        elseif (%check.beta) { var %URI = https://www.mirc.com/get.html | noop $urlget(%URI,gbi,&CheckVer,processWmIRC) }
      }
    }
    else {
      did -a checkver 11 There was a problem contacting the mIRC website.
      did -e checkver 6
    }
  }
}
dialog checkver {
  title ""mIRC Update""
  size -1 -1 515 397
  text ""Installed version:"", 9, 12 13 90 14
  text ""Newest version:"", 10, 12 35 90 14
  text """", 11, 120 35 300 14
  text ""Changes from new version:"", 12, 12 57 150 14
  edit """",13, 10 75 494 250, size multi return vsbar read
  link ""What's new in this version?"", 4, 372 55 185 14, hide
  text """", 1, 120 13 80 14
  check ""&Check for new beta versions"", 5, 12 372 157 14
  button ""Check for &updates"", 6, 10 332 107 23
  button ""&OK"", 7, 429 366 76 23, cancel
  button ""&Download now"", 8, 398 332 107 23, hide ok
}
on *:dialog:checkver:*:*:{
  if ($devent == init) {
    did -fa $dname 1 $iif($beta,$+($version,.,$beta),$version)
    if (%check.beta) { did -c $dname 5 }
  }
  elseif ($devent == sclick) {
    if ($did == 4) { url -an %url.news }
    elseif ($did == 5) { sdt check.beta }
    elseif ($did == 6) { StartVersion }
    elseif ($did == 8) { url -an %url.get }
  }
  elseif ($devent == close) { unset %url.get %url.news }
}"
XNMrQqv9,pocket archive subset (20 links),bjpcjp,HTML,Wednesday 8th of May 2024 01:20:16 PM CDT,"<li><a href=""https://theins.ru/en/politics/271205"" time_added=""1714602307"" tags=""spycraft"">The Czech illegals: Husband and wife outed as GRU spies aiding bombings and</a></li>
<li><a href=""http://12factor.net/"" time_added=""1612801576"" tags=""best-practices,devops"">The Twelve-Factor App</a></li>
<li><a href=""http://15minutelunch.blogspot.com/2007/10/strap-in-shut-up-and-hold-on-were-going.html"" time_added=""1671648793"" tags=""comedy-fun-humor"">15 Minute Lunch: Strap in, shut up and hold on. We&#039;re going back.</a></li>
<li><a href=""http://507movements.com/"" time_added=""1582142608"" tags=""visualization"">http://507movements.com/</a></li>
<li><a href=""http://99u.com/articles/7230/hacking-habits-how-to-make-new-behaviors-last-for-good"" time_added=""1658157490"" tags=""behaviors,habits"">http://99u.com/articles/7230/hacking-habits-how-to-make-new-behaviors-last-for-good</a></li>
<li><a href=""http://99u.com/articles/7269/Picasso-Kepler-and-the-Benefits-of-Being-an-Expert-Generalist"" time_added=""1657829297"" tags=""creativity,polymaths"">http://99u.com/articles/7269/Picasso-Kepler-and-the-Benefits-of-Being-an-Expert-Generalist</a></li>
<li><a href=""http://a16z.com/2012/01/18/a-recipe-for-growth-adding-layers-to-the-cake-2/"" time_added=""1658157138"" tags=""growth-hacks,prodmgmt"">http://a16z.com/2012/01/18/a-recipe-for-growth-adding-layers-to-the-cake-2/</a></li>
<li><a href=""http://a16z.com/2015/08/21/16-metrics/"" time_added=""1657057247"" tags=""metrics,startups"">http://a16z.com/2015/08/21/16-metrics/</a></li>
<li><a href=""http://a16z.com/2015/09/23/16-more-metrics/"" time_added=""1658156567"" tags=""metrics,startups"">http://a16z.com/2015/09/23/16-more-metrics/</a></li>
<li><a href=""http://a16z.com/2016/03/07/network-effects_critical-mass"" time_added=""1658157268"" tags=""network-effects,prodmgmt"">http://a16z.com/2016/03/07/network-effects_critical-mass</a></li>
<li><a href=""http://a16z.com/2016/03/25/building-weatherproof-companies/"" time_added=""1657070435"" tags=""platforms,prodmgmt"">http://a16z.com/2016/03/25/building-weatherproof-companies/</a></li>
<li><a href=""http://a16z.com/2018/02/10/crypto-readings-resources/"" time_added=""1519228730"" tags=""crypto"">http://a16z.com/2018/02/10/crypto-readings-resources/</a></li>
<li><a href=""http://a16z.com/2018/08/17/service-as-a-sku/"" time_added=""1534869161"" tags=""ecommerce,ideas,prodmgmt"">http://a16z.com/2018/08/17/service-as-a-sku/</a></li>
<li><a href=""http://a16z.com/2018/09/02/sales-startups-technical-founders/"" time_added=""1567133627"" tags=""sales-salesmgmt,startups"">http://a16z.com/2018/09/02/sales-startups-technical-founders/</a></li>
<li><a href=""http://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"" time_added=""1639186336"" tags=""linux"">http://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html</a></li>
<li><a href=""http://abovethecrowd.com/2011/05/24/all-revenue-is-not-created-equal-the-keys-to-the-10x-revenue-club/"" time_added=""1657057331"" tags=""finance,prodmgmt"">http://abovethecrowd.com/2011/05/24/all-revenue-is-not-created-equal-the-keys-to-the-10x-revenue-club/</a></li>
<li><a href=""http://abovethecrowd.com/2012/11/13/all-markets-are-not-created-equal-10-factors-to-consider-when-evaluating-digital-marketplaces/"" time_added=""1658070323"" tags=""ecommerce,platforms,prodmgmt"">http://abovethecrowd.com/2012/11/13/all-markets-are-not-created-equal-10-factors-to-consider-when-evaluating-digital-marketplaces/</a></li>
<li><a href=""http://abovethecrowd.com/2013/04/18/a-rake-too-far-optimal-platformpricing-strategy/"" time_added=""1657057701"" tags=""pricing,prodmgmt"">http://abovethecrowd.com/2013/04/18/a-rake-too-far-optimal-platformpricing-strategy/</a></li>
<li><a href=""http://abovethecrowd.com/2014/03/11/a-deeper-look-at-ubers-dynamic-pricing-model/"" time_added=""1657057377"" tags=""pricing,prodmgmt"">http://abovethecrowd.com/2014/03/11/a-deeper-look-at-ubers-dynamic-pricing-model/</a></li>
<li><a href=""http://adv-r.had.co.nz/"" time_added=""1647895155"" tags=""books,machine-learning,_r_"">http://adv-r.had.co.nz/</a></li>
"
JkFCG9rF,petr correct 3 plies,max2201111,Python,Wednesday 8th of May 2024 01:19:10 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met


def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or eval != 4
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []
    all_true = True

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()

        if maximizing_player:
            if eval > best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        else:
            all_true = all_true and returned_T
            if eval < best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            beta = min(beta, eval)
            if beta <= alpha:
                break

    if not maximizing_player and all_true:
        return best_sequence, best_eval, True
    
    if maximizing_player and returned_T:
        return best_sequence, best_eval, True

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoumána, čas: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T






start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Počáteční šachovnice:"")
print(board)
print(""Počáteční FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 9, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score, T)
"
NPrtPVhC,Untitled,Tkap1,C,Wednesday 8th of May 2024 01:04:44 PM CDT,"
// usage
{
	char* str = ""athano azen"";
	char entity_a[128];
	char entity_b[128];
	char* curr = str;
	curr = parse_identifier(curr, entity_a);
	if(!curr) {
		// DIDNT FIND AN IDENTIFIER AKA ENTITY NAME IN THIS CASE
		return;
	}
	curr = parse_identifier(curr, entity_b);
	if(!curr) {
		// FOUND ONE NAME BUT NOT TWO
		return;
	}
	// entity_a is ""athano""
	// entity_b is ""azen""
}

char* parse_identifier(char* source, char* fill_me_up_big_boy)
{
	// skip spaces
	while(*source == ' ') {
		source += 1;
	}

	char* result = null;
	if(!begins_identifier(source[0])) { return result; }
	int i = 1;
	while(true) {
		if(!continues_identifier(source[i])) {
			memcpy(fill_me_up_big_boy, source, i);
			fill_me_up_big_boy[i] = 0;
			result = &source[i];
			break;
		}
		i += 1;
	}
	return result;
}




/////////
bool is_number(char c)
{
	return c >= '0' && c <= '9';
}

bool is_alpha(char c)
{
	return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')	;
}

bool is_alphanum(char c)
{
	return is_alpha(c) || is_number(c);	
}

bool begins_identifier(char c)
{
	return is_alphanum(c) || c == '_'
}

bool continues_identifier(char c)
{
	return begins_identifier(c) || is_number(c);
}"
Ak2Msbpj,practice hsc 1,splash365,C++,Wednesday 8th of May 2024 01:01:01 PM CDT,"#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j<=i; j++)
        {
            printf(""%d"", j);
        }
        printf(""\n"");
        
    }
    
    return 0;
}



/*
Enter a number: 4
1
12
123
1234
*/

---------------------------------------------------

/**

Find if a number is prime (without function)

**/

#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    int flag = 1;
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            printf(""%d is not prime\n"", n);
            flag = 0;
            break;
        }
    }
    if(flag == 1) 
    {
        printf(""%d is a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 20
20 is not prime

*/

---------------------------------------------------

/**

Find if a number is prime (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    if(isPrime(n))
    {
        printf(""%d is a prime\n"", n);
    }
    else
    {
        printf(""%d is not a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter n: "");
    scanf(""%d"", &n);
    
    for(int i = 2; i<=n; i++)
    {
        if(isPrime(i))
        {
            printf(""%d "", i);
        }
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (without function)

**/

************* H W *************


---------------------------------------------------

/**

find GCD

**/



#include <stdio.h>

int main()
{
    int a, b;
    printf(""Enter two numbers: "");
    scanf(""%d %d"", &a, &b);
    
    int min, gcd;
    
    if(a <= b) min = a;
    else min = b;
    
    for(int i = 1; i<=min; i++)
    {
        if(a % i == 0 && b % i == 0)
        {
            gcd = i;
        }
    }
    
    printf(""GCD: %d\n"", gcd);
    
    int lcm = (a * b) / gcd;
    
    printf(""LCM: %d\n"", lcm);
    
    return 0;
}



/*

Multiples:
3 = 3, 6, 9, 12, ...


Divisors:
30 = 1 . 30
   = 2 . 15
   = 5 . 6


   
GCD Greatest Common Divisors

30 20

30 = 1, 2, 5, 6, 10, 15, 30
20 = 1, 2, 5, 10, 20

Choto number er divisor boro number er o divisor kina => true: common divisor


*/"
pX7KgLU4,EasyButton Control rev_06,pleasedontcode,Arduino,Wednesday 8th of May 2024 12:47:44 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 17:46:39

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The project must control a timer that starts when */
	/* the infrared sensor is in a low active state and */
	/* stops when the sensor returns to a low active */
	/* state. The timer must be displayed on the LCD */
	/* screen. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* The timer state should be handled using a state */
	/* machine. Furthermore, an explicit function called */
	/* 'resetTimer' needs to be implemented to reset the */
	/* counter and state of the state machine. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>    // https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <EasyButton.h>    // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void resetTimer(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensorInfrared_PushButton_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t display_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t display_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t display_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(display_LCD1602I2C_I2C_SLAVE_ADDRESS, 20, 4); // Initialize LiquidCrystal_I2C object
EasyButton button(sensorInfrared_PushButton_PIN_D2); // Initialize EasyButton object

void onPressedForDuration()
{
  // Code to be executed when the button is pressed for the given duration.
}

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sensorInfrared_PushButton_PIN_D2, INPUT_PULLUP);

    lcd.init(); // Initialize the LCD
    lcd.backlight(); // Turn on the backlight

    // Initialize the button
    button.begin();
    // Add the callback function to be called when the button is pressed for at least the given time
    button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    button.read(); // Continuously read the status of the button
}

void resetTimer(void)
{
    // Function to reset the timer and state machine
}

/* END CODE */"
