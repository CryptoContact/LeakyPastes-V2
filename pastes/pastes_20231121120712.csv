id,title,username,language,date,content
0tDna1E4,data759,TestGuy1,JSON,Tuesday 21st of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '10c1afccc403c9de08d9db18ab15f21f6d451346dccc166d2ceae5f50307e8618c40de75ee1a2476183f5aedf620f720810925bf9e673a759dff675a748894d9ee0e2d60bfb98f7fe1a84a70b8b59b080318ceac531e0c04ef74cd2accb16945879a25130b3a2dc02b913031571a86c5d4b9e1214e4c7d827aeb69859ded4db8',
  otherdata: [
    '1505ea23d45203b6c5b8d6bc42157926',
    'd329505bd8418a4f5795b713ee6211aa',
    'da7c166298881a3c6520c542a1286aec',
    '090f37fa0aa6c23b9a985ed02502dd5a',
    '59b450f4a111605b829343dd11df6203',
    '8c92cffb0179b257ad01b5ffe1e2f0af',
    '5ad4e7ad09f0f817d220bf3eea55d5f3',
    '15cdc0c0fb48bd775bfd3598cab61c7c'
  ]
}"
RKkv9TiW,Untitled,DeividasBalysevas,JavaScript,Tuesday 21st of November 2023 05:59:33 AM CDT,"<script>dataLayer.push({
'event' : 'login',
'method' : 'value'	 //Possible values: Google, Direct
'user_type' : 'value' //Possible values: Student, Student representative, Teacher
});
</script>

<script>dataLayer.push({
'event' : 'sign_up',
'method' : 'value'	//Possible values: Google, Direct
'user_type' : 'value' //Possible values: Student, Student representative, Teacher
});
</script>
"
pug6h00K,BTC Wallet Credentials have been reset,castlclass_20,GetText,Tuesday 21st of November 2023 05:39:57 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
gamax1:CUJbMv on 212.224.93.130
You can connect via SSH.
Regards"
0BN1sSdh,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 21st of November 2023 05:25:02 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT502758"
RBS6wAZV,Untitled,Drakkheen,Arduino,Tuesday 21st of November 2023 04:52:37 AM CDT,"#include <Encoder.h>    // Verwendung der  Bibliothek 

const int CLK = 6;      // Definition der Pins. CLK an D6, DT an D5.
const int DT = 5;
const int SW = 2;       // Der Switch wird mit Pin D2 Verbunden. ACHTUNG : Verwenden Sie einen interrupt-Pin!
long altePosition = -999;  // Definition der ""alten"" Position (Diese fiktive alte Position wird benötigt, damit die aktuelle Position später im seriellen Monitor nur dann angezeigt wird, wenn wir den Rotary Head bewegen)

Encoder meinEncoder(DT, CLK); // An dieser Stelle wird ein neues Encoder Projekt erstellt. Dabei wird die Verbindung über die zuvor definierten Varibalen (DT und CLK) hergestellt.


void setup()   // Beginn des Setups

{
  Serial.begin(9600);

  pinMode(SW, INPUT);   // Hier wird der Interrupt installiert.

  attachInterrupt(digitalPinToInterrupt(SW), Interrupt, CHANGE); // Sobald sich der Status (CHANGE) des Interrupt Pins (SW = D2) ändern, soll der Interrupt Befehl (onInterrupt)ausgeführt werden.
}

void loop()

{

  long neuePosition = meinEncoder.read();  // Die ""neue"" Position des Encoders wird definiert. Dabei wird die aktuelle Position des Encoders über die Variable.Befehl() ausgelesen.

  if (neuePosition > 33) {
    neuePosition = 33;
   
  }
  if (neuePosition < 0) {
    neuePosition = 0;
   
  }

  if (neuePosition != altePosition)  // Sollte die neue Position ungleich der alten (-999) sein (und nur dann!!)...
  {
    altePosition = neuePosition;
    Serial.println(neuePosition);      // ...soll die aktuelle Position im seriellen Monitor ausgegeben werden.
  }

}


void Interrupt() // Beginn des Interrupts. Wenn der Rotary Knopf betätigt wird, springt das Programm automatisch an diese Stelle. Nachdem...

{
  Serial.println(""Switch betaetigt""); //... das Signal ausgegeben wurde, wird das Programm fortgeführt.

}"
rYzYNLKN,Detect cycle in a directed graph,jayati,C++,Tuesday 21st of November 2023 04:52:03 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  private:
    bool dfsCheck(int node,vector<int> adj[],int vis[],int pathVis[])
    {
        vis[node]=1;
        pathVis[node]=1;
        
        for(auto i:adj[node])
        {
            if(!vis[i])
            {
                if(dfsCheck(i,adj,vis,pathVis)==true)
                {
                    return true;
                }
            }
            else if(pathVis[i])
            {
                return true;
            }
        }
        pathVis[node]=0;
        return false;
    }
  public:
    // Function to detect cycle in a directed graph
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        int vis[V]={0};
        int pathVis[V]={0};
        
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                if(dfsCheck(i,adj,vis,pathVis)==true)
                {
                    return true;
                }
            }
        }
        return false;
    }
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int V, E;
        cin >> V >> E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
        }

        Solution obj;
        cout << obj.isCyclic(V, adj) << ""\n"";
    }

    return 0;
}

// } Driver Code Ends"
FSHip5c4,Untitled,SLENSER,Java,Tuesday 21st of November 2023 04:39:09 AM CDT,"import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

public class Main {
    public static void main(String[] args) {

        System.out.println(sameLetterPattern(""ABAB"", ""CDCD"")); // true
        System.out.println(sameLetterPattern(""ABCBA"", ""BCDCB"")); // true
        System.out.println(sameLetterPattern(""FFGG"", ""CDCD"")); // false
        System.out.println(sameLetterPattern(""FFFF"", ""ABCD"")); // false

        System.out.println(spiderVsFly(""H3"", ""E2"",1));
        System.out.println(spiderVsFly(""A4"", ""B2"",1));
        System.out.println(spiderVsFly(""A4"", ""C2"",1));

        System.out.println(digitsCount(4666));
        System.out.println(digitsCount(544));
        System.out.println(digitsCount(121317));
        System.out.println(digitsCount(0));
        System.out.println(digitsCount(12345));
        System.out.println(digitsCount(1289396387328L));

        System.out.println(totalPoints(new String[]{""cat"", ""create"", ""sat""}, ""caster""));
        System.out.println(totalPoints(new String[]{""trance"", ""recant""}, ""recant""));
        System.out.println(totalPoints(new String[]{""dote"", ""dotes"", ""toes"", ""set"", ""dot"", ""dots"", ""sted""}, ""tossed""));

        System.out.println(sumsUp(new int[] {1, 2, 3, 4, 5}));
        System.out.println(sumsUp(new int[] {1, 2, 3, 7, 9}));
        System.out.println(sumsUp(new int[]  {10, 9, 7, 2, 8}));
        System.out.println(sumsUp(new int[] {1, 6, 5, 4, 8, 2, 3, 7}));

        System.out.println(takeDownAverage(new String[] {""95%"", ""83%"", ""90%"", ""87%"", ""88%"", ""93%""}));
        System.out.println(takeDownAverage(new String[] {""10%""}));
        System.out.println(takeDownAverage(new String[] {""53%"", ""79%""}));

        System.out.println(caesarCipher(""encode"", ""hello world"", 3));
        System.out.println(caesarCipher(""decode"", ""almost last task!    "", 4));

        System.out.println(recursivePermutations(5,3));
        System.out.println(recursivePermutations(7,3));

        System.out.println(timeDifference(""Los Angeles"", ""April 1, 2011 23:23"", ""Canberra""));
        System.out.println(timeDifference(""London"", ""July 31, 1983 23:01"", ""Rome""));
        System.out.println(timeDifference(""New York"", ""December 31, 1970 13:40"", ""Beijing""));

        System.out.println(isNew(3));
        System.out.println(isNew(30));
        System.out.println(isNew(321));
        System.out.println(isNew(123));

    }

    public static boolean sameLetterPattern(String str1, String str2) {
        if (str1.length() != str2.length()) {
            return false;
        }


        Map<Character, Character> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            char char1 = str1.charAt(i);
            char char2 = str2.charAt(i);

            if (map.containsKey(char1)) {
                if (map.get(char1) != char2) {
                    return false;
                }
            } else {
                if (map.containsValue(char2)) {
                    return false;
                }
                map.put(char1, char2);
            }
        }

        return true;
    }

    public static String spiderVsFly(String spyPos, String flyPos, double x) {
        Graph graph = new Graph();

        graph.addVertex(""A0"", Map.of(""A1"", x, ""B1"", x, ""C1"",x,""D1"",x,""E1"",x,""F1"",x,""G1"",x,""H1"",x));

        graph.addVertex(""A1"", Map.of(""A0"", x, ""B1"", getDistanceBetweenRadials(x,1), ""H1"", getDistanceBetweenRadials(x,1),""A2"",x));
        graph.addVertex(""B1"", Map.of(""A0"", x, ""A1"", getDistanceBetweenRadials(x,1), ""C1"", getDistanceBetweenRadials(x,1),""B2"",x));
        graph.addVertex(""C1"", Map.of(""A0"", x,""B1"", getDistanceBetweenRadials(x, 1), ""D1"", getDistanceBetweenRadials(x, 1), ""C2"", x));
        graph.addVertex(""D1"", Map.of(""A0"", x,""C1"", getDistanceBetweenRadials(x, 1), ""E1"", getDistanceBetweenRadials(x, 1), ""D2"", x));
        graph.addVertex(""E1"", Map.of(""A0"", x,""D1"", getDistanceBetweenRadials(x, 1), ""F1"", getDistanceBetweenRadials(x, 1), ""E2"", x));
        graph.addVertex(""F1"", Map.of(""A0"", x,""E1"", getDistanceBetweenRadials(x, 1), ""G1"", getDistanceBetweenRadials(x, 1), ""F2"", x));
        graph.addVertex(""G1"", Map.of(""A0"", x,""F1"", getDistanceBetweenRadials(x, 1), ""H1"", getDistanceBetweenRadials(x, 1), ""G2"", x));
        graph.addVertex(""H1"", Map.of(""A0"", x,""G1"", getDistanceBetweenRadials(x, 1), ""A1"", getDistanceBetweenRadials(x, 1), ""H2"", x));

        graph.addVertex(""A2"", Map.of(""A1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""A3"",x));
        graph.addVertex(""B2"", Map.of(""B1"", x, ""A2"", getDistanceBetweenRadials(x,2), ""C2"", getDistanceBetweenRadials(x,2),""B3"",x));
        graph.addVertex(""C2"", Map.of(""C1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""D2"", getDistanceBetweenRadials(x,2),""C3"",x));
        graph.addVertex(""D2"", Map.of(""D1"", x, ""C2"", getDistanceBetweenRadials(x,2), ""E2"", getDistanceBetweenRadials(x,2),""D3"",x));
        graph.addVertex(""E2"", Map.of(""E1"", x, ""D2"", getDistanceBetweenRadials(x,2), ""F2"", getDistanceBetweenRadials(x,2),""E3"",x));
        graph.addVertex(""F2"", Map.of(""F1"", x, ""E2"", getDistanceBetweenRadials(x,2), ""G2"", getDistanceBetweenRadials(x,2),""F3"",x));
        graph.addVertex(""G2"", Map.of(""G1"", x, ""F2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""G3"",x));
        graph.addVertex(""H2"", Map.of(""H1"", x, ""G2"", getDistanceBetweenRadials(x,2), ""A2"", getDistanceBetweenRadials(x,2),""H3"",x));

        graph.addVertex(""A3"", Map.of(""A2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""A4"",x));
        graph.addVertex(""B3"", Map.of(""B2"", x, ""A3"", getDistanceBetweenRadials(x,3), ""C3"", getDistanceBetweenRadials(x,3),""B4"",x));
        graph.addVertex(""C3"", Map.of(""C2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""D3"", getDistanceBetweenRadials(x,3),""C4"",x));
        graph.addVertex(""D3"", Map.of(""D2"", x, ""C3"", getDistanceBetweenRadials(x,3), ""E3"", getDistanceBetweenRadials(x,3),""D4"",x));
        graph.addVertex(""E3"", Map.of(""E2"", x, ""D3"", getDistanceBetweenRadials(x,3), ""F3"", getDistanceBetweenRadials(x,3),""E4"",x));
        graph.addVertex(""F3"", Map.of(""F2"", x, ""E3"", getDistanceBetweenRadials(x,3), ""G3"", getDistanceBetweenRadials(x,3),""F4"",x));
        graph.addVertex(""G3"", Map.of(""G2"", x, ""F3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""G4"",x));
        graph.addVertex(""H3"", Map.of(""H2"", x, ""G3"", getDistanceBetweenRadials(x,3), ""A3"", getDistanceBetweenRadials(x,3),""H4"",x));

        graph.addVertex(""A4"", Map.of(""A3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""B4"", Map.of(""B3"", x, ""A4"", getDistanceBetweenRadials(x,4), ""C4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""C4"", Map.of(""C3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""D4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""D4"", Map.of(""D3"", x, ""C4"", getDistanceBetweenRadials(x,4), ""E4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""E4"", Map.of(""E3"", x, ""D4"", getDistanceBetweenRadials(x,4), ""F4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""F4"", Map.of(""F3"", x, ""E4"", getDistanceBetweenRadials(x,4), ""G4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""G4"", Map.of(""G3"", x, ""F4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""H4"", Map.of(""H3"", x, ""G4"", getDistanceBetweenRadials(x,4), ""A4"", getDistanceBetweenRadials(x,4)));



        DijkstraResult result = dijkstra(graph, spyPos);
        return getShortestPath(result, spyPos, flyPos);

    }

    public static class Graph {
        private Map<String, Map<String, Double>> vertices = new HashMap<>();

        public void addVertex(String name, Map<String, Double> edges) {
            vertices.put(name, edges);
        }

        public Map<String, Double> getEdges(String vertex) {
            return vertices.get(vertex);
        }
    }

    public static class DijkstraResult {
        private Map<String, Double> distances;
        private Map<String, String> previousVertices;

        public DijkstraResult(Map<String, Double> distances, Map<String, String> previousVertices) {
            this.distances = distances;
            this.previousVertices = previousVertices;
        }
        public Map<String, String> getPreviousVertices() {
            return previousVertices;
        }
    }

    public static DijkstraResult dijkstra(Graph graph, String start) {
            Map<String, Double> distances = new HashMap<>();
            Map<String, String> previousVertices = new HashMap<>();
            PriorityQueue<String> priorityQueue = new PriorityQueue<>(Comparator.comparingDouble(distances::get));


            for (String vertex : graph.vertices.keySet()) {
                if (vertex.equals(start)) {
                    distances.put(vertex, 0.0);
                } else {
                    distances.put(vertex, Double.MAX_VALUE);
                }
                previousVertices.put(vertex, null);
                priorityQueue.add(vertex);
            }

            while (!priorityQueue.isEmpty()) {
                String currentVertex = priorityQueue.poll();

                for (Map.Entry<String, Double> entry : graph.getEdges(currentVertex).entrySet()) {
                    String neighbor = entry.getKey();
                    Double weight = entry.getValue();

                    Double newDistance = distances.get(currentVertex) + weight;

                    if (newDistance < distances.get(neighbor)) {
                        distances.put(neighbor, newDistance);
                        previousVertices.put(neighbor, currentVertex);
                        priorityQueue.remove(neighbor);
                        priorityQueue.add(neighbor);
                    }
                }
            }

            return new DijkstraResult(distances, previousVertices);
        }

        public static String getShortestPath(DijkstraResult result, String start, String end) {
            List<String> path = new ArrayList<>();
            String currentVertex = end;

            while (currentVertex != null) {
                path.add(currentVertex);
                currentVertex = result.getPreviousVertices().get(currentVertex);
            }

            Collections.reverse(path);
            return String.join(""-"", path);
    }
    public static Double getDistanceBetweenRadials(double x, int level) {
        return level*x*0.765367; // 0.765367... = sin(45 deg)/sin(67.5 deg)
    }





    public static int digitsCount(long number) {
        if (Math.abs(number) < 10) {
            return 1;
        }
        return 1 + digitsCount(number / 10);
    }

    public static int totalPoints(String[] guessedWords, String scrambledWord) {
        int totalPoints = 0;

        for (String word : guessedWords) {
            if (isValidWord(scrambledWord, word)) {
                int wordLength = word.length();
                totalPoints += getPointsForWord(wordLength);
            }
        }

        return totalPoints;
    }
    private static boolean isValidWord(String scrambledWord, String guessedWord) {
        Map<Character, Integer> charCountMap = new HashMap<>();

        for (char ch : scrambledWord.toCharArray()) {
            charCountMap.put(ch, charCountMap.getOrDefault(ch, 0) + 1);
        }

        for (char ch : guessedWord.toCharArray()) {
            if (!charCountMap.containsKey(ch) || charCountMap.get(ch) == 0) {
                return false;
            }
            charCountMap.put(ch, charCountMap.get(ch) - 1);
        }

        return true;
    }

    private static int getPointsForWord(int wordLength) {
        return switch (wordLength) {
            case 3 -> 1;
            case 4 -> 2;
            case 5 -> 3;
            case 6 -> 4 + 50;
            default -> 0;
        };
    }

    public static List<List<Integer>> sumsUp(int[] nums) {
        List<List<Integer>> answer = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {
            for (int j = i+1; j < nums.length; j++) {
                if (nums[i] + nums[j] == 8) {
                    answer.add(Arrays.asList(Math.min(nums[i], nums[j]), Math.max(nums[i], nums[j])));
                }
            }
        }
        return answer;
    }


    public static String takeDownAverage(String[] percentages) {
        double sum = 0;
        int n = percentages.length;
        for ( String string: percentages) {
            double percentage =Double.parseDouble(string.replaceAll(""%"", """"));
            sum += percentage;
        }
        double average = sum / n;
        return Math.round((average-5)*(n+1)-sum) + ""%"";
    }

    public static String caesarCipher(String operation, String message, int shift) {
        message = message.toUpperCase();
        if (operation.equals(""encode"")) {
            return encrypt(message, shift);
        } else if (operation.equals(""decode"")) {
            return decrypt(message, shift);
        } else {
            return ""Неверный режим работы. Используйте 'encode' или 'decode'."";
        }
    }

    private static String encrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) + shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;
    }

    private static String decrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) - shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;

    }

    private static int recursivePermutations(int n, int k) {
        if (n < k) {
            return 0;
        }
        if (k == 0) {
            return 1;
        }
        return n * recursivePermutations(n - 1, k - 1);
    }

    public static String timeDifference(String cityA, String timestamp, String cityB) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat(""MMMM dd, yyyy HH:mm"");
            Date date = sdf.parse(timestamp);

            Map<String, Double> timeOffsets = new HashMap<>();
            timeOffsets.put(""Los Angeles"", -8.0);
            timeOffsets.put(""New York"", -5.0);
            timeOffsets.put(""Caracas"", -4.5);
            timeOffsets.put(""Buenos Aires"", -3.0);
            timeOffsets.put(""London"", 0.0);
            timeOffsets.put(""Rome"", 1.0);
            timeOffsets.put(""Moscow"", 3.0);
            timeOffsets.put(""Tehran"", 3.5);
            timeOffsets.put(""New Delhi"", 5.5);
            timeOffsets.put(""Beijing"", 8.0);
            timeOffsets.put(""Canberra"", 10.0);

            double offsetA = timeOffsets.get(cityA);
            double offsetB = timeOffsets.get(cityB);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, (int) (offsetB - offsetA));

            SimpleDateFormat resultFormat = new SimpleDateFormat(""yyyy-M-d HH:mm"");
            return resultFormat.format(cal.getTime());

        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static boolean isNew(int number) {
        String numberStr = String.valueOf(number);

        for (int i = 1; i < number; i++) {
            String currentNumberStr = String.valueOf(i);

            if (isPermutation(numberStr, currentNumberStr)) {
                return false;
            }
        }

        return true;
    }

    private static boolean isPermutation(String str1, String str2) {
        char[] chars1 = str1.toCharArray();
        char[] chars2 = str2.toCharArray();
        Arrays.sort(chars1);
        Arrays.sort(chars2);
        return Arrays.equals(chars1, chars2);
    }

}
"
LFia7uK8,Untitled,Drakkheen,Arduino,Tuesday 21st of November 2023 04:12:55 AM CDT,"#include <Encoder.h>    // Verwendung der  Bibliothek 

const int CLK = 6;      // Definition der Pins. CLK an D6, DT an D5.
const int DT = 5;
const int SW = 2;       // Der Switch wird mit Pin D2 Verbunden. ACHTUNG : Verwenden Sie einen interrupt-Pin!
long altePosition = -999;  // Definition der ""alten"" Position (Diese fiktive alte Position wird benötigt, damit die aktuelle Position später im seriellen Monitor nur dann angezeigt wird, wenn wir den Rotary Head bewegen)

Encoder meinEncoder(DT, CLK); // An dieser Stelle wird ein neues Encoder Projekt erstellt. Dabei wird die Verbindung über die zuvor definierten Varibalen (DT und CLK) hergestellt.


void setup()   // Beginn des Setups

{
  Serial.begin(9600);

  pinMode(SW, INPUT);   // Hier wird der Interrupt installiert.

  attachInterrupt(digitalPinToInterrupt(SW), Interrupt, CHANGE); // Sobald sich der Status (CHANGE) des Interrupt Pins (SW = D2) ändern, soll der Interrupt Befehl (onInterrupt)ausgeführt werden.
}


void loop()

{

  long neuePosition = meinEncoder.read();  // Die ""neue"" Position des Encoders wird definiert. Dabei wird die aktuelle Position des Encoders über die Variable.Befehl() ausgelesen.

  if (neuePosition != altePosition)  // Sollte die neue Position ungleich der alten (-999) sein (und nur dann!!)...
  {
    altePosition = neuePosition;

    if (neuePosition > 33 ) {
      neuePosition = 1;

    }
    if (neuePosition < 1 ) {
      neuePosition = 33;

    }

    Serial.println(neuePosition);      // ...soll die aktuelle Position im seriellen Monitor ausgegeben werden.
     
  }

}


void Interrupt() // Beginn des Interrupts. Wenn der Rotary Knopf betätigt wird, springt das Programm automatisch an diese Stelle. Nachdem...

{
  Serial.println(""Switch betaetigt""); //... das Signal ausgegeben wurde, wird das Programm fortgeführt.

}"
urvLMSWT,Untitled,SLENSER,Java,Tuesday 21st of November 2023 04:03:48 AM CDT,"import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class Main {
    public static void main(String[] args) {

        System.out.println(sameLetterPattern(""ABAB"", ""CDCD"")); // true
        System.out.println(sameLetterPattern(""ABCBA"", ""BCDCB"")); // true
        System.out.println(sameLetterPattern(""FFGG"", ""CDCD"")); // false
        System.out.println(sameLetterPattern(""FFFF"", ""ABCD"")); // false

        System.out.println(spiderVsFly(""H3"", ""E2"",1));
        System.out.println(spiderVsFly(""A4"", ""B2"",1));
        System.out.println(spiderVsFly(""A4"", ""C2"",1));

        System.out.println(digitsCount(4666));
        System.out.println(digitsCount(544));
        System.out.println(digitsCount(121317));
        System.out.println(digitsCount(0));
        System.out.println(digitsCount(12345));
        System.out.println(digitsCount(1289396387328L));

        System.out.println(totalPoints(new String[]{""cat"", ""create"", ""sat""}, ""caster""));
        System.out.println(totalPoints(new String[]{""trance"", ""recant""}, ""recant""));
        System.out.println(totalPoints(new String[]{""dote"", ""dotes"", ""toes"", ""set"", ""dot"", ""dots"", ""sted""}, ""tossed""));

        System.out.println(sumsUp(new int[] {1, 2, 3, 4, 5}));
        System.out.println(sumsUp(new int[] {1, 2, 3, 7, 9}));
        System.out.println(sumsUp(new int[]  {10, 9, 7, 2, 8}));
        System.out.println(sumsUp(new int[] {1, 6, 5, 4, 8, 2, 3, 7}));

        System.out.println(takeDownAverage(new String[] {""95%"", ""83%"", ""90%"", ""87%"", ""88%"", ""93%""}));
        System.out.println(takeDownAverage(new String[] {""10%""}));
        System.out.println(takeDownAverage(new String[] {""53%"", ""79%""}));

        System.out.println(caesarCipher(""encode"", ""hello world"", 3));
        System.out.println(caesarCipher(""decode"", ""almost last task!    "", 4));

        System.out.println(recursivePermutations(5,3));
        System.out.println(recursivePermutations(7,3));

        System.out.println(timeDifference(""Los Angeles"", ""April 1, 2011 23:23"", ""Canberra""));
        System.out.println(timeDifference(""London"", ""July 31, 1983 23:01"", ""Rome""));
        System.out.println(timeDifference(""New York"", ""December 31, 1970 13:40"", ""Beijing""));

        System.out.println(isNew(3));
        System.out.println(isNew(30));
        System.out.println(isNew(321));
        System.out.println(isNew(123));

    }

    public static boolean sameLetterPattern(String str1, String str2) {
        if (str1.length() != str2.length()) {
            return false;
        }


        Map<Character, Character> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            char char1 = str1.charAt(i);
            char char2 = str2.charAt(i);

            if (map.containsKey(char1)) {
                if (map.get(char1) != char2) {
                    return false;
                }
            } else {
                if (map.containsValue(char2)) {
                    return false;
                }
                map.put(char1, char2);
            }
        }

        return true;
    }

    public static String spiderVsFly(String spyPos, String flyPos, double x) {
        Graph graph = new Graph();

        graph.addVertex(""A0"", Map.of(""A1"", x, ""B1"", x, ""C1"",x,""D1"",x,""E1"",x,""F1"",x,""G1"",x,""H1"",x));

        graph.addVertex(""A1"", Map.of(""A0"", x, ""B1"", getDistanceBetweenRadials(x,1), ""H1"", getDistanceBetweenRadials(x,1),""A2"",x));
        graph.addVertex(""B1"", Map.of(""A0"", x, ""A1"", getDistanceBetweenRadials(x,1), ""C1"", getDistanceBetweenRadials(x,1),""B2"",x));
        graph.addVertex(""C1"", Map.of(""A0"", x,""B1"", getDistanceBetweenRadials(x, 1), ""D1"", getDistanceBetweenRadials(x, 1), ""C2"", x));
        graph.addVertex(""D1"", Map.of(""A0"", x,""C1"", getDistanceBetweenRadials(x, 1), ""E1"", getDistanceBetweenRadials(x, 1), ""D2"", x));
        graph.addVertex(""E1"", Map.of(""A0"", x,""D1"", getDistanceBetweenRadials(x, 1), ""F1"", getDistanceBetweenRadials(x, 1), ""E2"", x));
        graph.addVertex(""F1"", Map.of(""A0"", x,""E1"", getDistanceBetweenRadials(x, 1), ""G1"", getDistanceBetweenRadials(x, 1), ""F2"", x));
        graph.addVertex(""G1"", Map.of(""A0"", x,""F1"", getDistanceBetweenRadials(x, 1), ""H1"", getDistanceBetweenRadials(x, 1), ""G2"", x));
        graph.addVertex(""H1"", Map.of(""A0"", x,""G1"", getDistanceBetweenRadials(x, 1), ""A1"", getDistanceBetweenRadials(x, 1), ""H2"", x));

        graph.addVertex(""A2"", Map.of(""A1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""A3"",x));
        graph.addVertex(""B2"", Map.of(""B1"", x, ""A2"", getDistanceBetweenRadials(x,2), ""C2"", getDistanceBetweenRadials(x,2),""B3"",x));
        graph.addVertex(""C2"", Map.of(""C1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""D2"", getDistanceBetweenRadials(x,2),""C3"",x));
        graph.addVertex(""D2"", Map.of(""D1"", x, ""C2"", getDistanceBetweenRadials(x,2), ""E2"", getDistanceBetweenRadials(x,2),""D3"",x));
        graph.addVertex(""E2"", Map.of(""E1"", x, ""D2"", getDistanceBetweenRadials(x,2), ""F2"", getDistanceBetweenRadials(x,2),""E3"",x));
        graph.addVertex(""F2"", Map.of(""F1"", x, ""E2"", getDistanceBetweenRadials(x,2), ""G2"", getDistanceBetweenRadials(x,2),""F3"",x));
        graph.addVertex(""G2"", Map.of(""G1"", x, ""F2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""G3"",x));
        graph.addVertex(""H2"", Map.of(""H1"", x, ""G2"", getDistanceBetweenRadials(x,2), ""A2"", getDistanceBetweenRadials(x,2),""H3"",x));

        graph.addVertex(""A3"", Map.of(""A2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""A4"",x));
        graph.addVertex(""B3"", Map.of(""B2"", x, ""A3"", getDistanceBetweenRadials(x,3), ""C3"", getDistanceBetweenRadials(x,3),""B4"",x));
        graph.addVertex(""C3"", Map.of(""C2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""D3"", getDistanceBetweenRadials(x,3),""C4"",x));
        graph.addVertex(""D3"", Map.of(""D2"", x, ""C3"", getDistanceBetweenRadials(x,3), ""E3"", getDistanceBetweenRadials(x,3),""D4"",x));
        graph.addVertex(""E3"", Map.of(""E2"", x, ""D3"", getDistanceBetweenRadials(x,3), ""F3"", getDistanceBetweenRadials(x,3),""E4"",x));
        graph.addVertex(""F3"", Map.of(""F2"", x, ""E3"", getDistanceBetweenRadials(x,3), ""G3"", getDistanceBetweenRadials(x,3),""F4"",x));
        graph.addVertex(""G3"", Map.of(""G2"", x, ""F3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""G4"",x));
        graph.addVertex(""H3"", Map.of(""H2"", x, ""G3"", getDistanceBetweenRadials(x,3), ""A3"", getDistanceBetweenRadials(x,3),""H4"",x));

        graph.addVertex(""A4"", Map.of(""A3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""B4"", Map.of(""B3"", x, ""A4"", getDistanceBetweenRadials(x,4), ""C4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""C4"", Map.of(""C3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""D4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""D4"", Map.of(""D3"", x, ""C4"", getDistanceBetweenRadials(x,4), ""E4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""E4"", Map.of(""E3"", x, ""D4"", getDistanceBetweenRadials(x,4), ""F4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""F4"", Map.of(""F3"", x, ""E4"", getDistanceBetweenRadials(x,4), ""G4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""G4"", Map.of(""G3"", x, ""F4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""H4"", Map.of(""H3"", x, ""G4"", getDistanceBetweenRadials(x,4), ""A4"", getDistanceBetweenRadials(x,4)));



        DijkstraResult result = dijkstra(graph, spyPos);
        return getShortestPath(result, spyPos, flyPos);

    }

    public static class Graph {
        private Map<String, Map<String, Double>> vertices = new HashMap<>();

        public void addVertex(String name, Map<String, Double> edges) {
            vertices.put(name, edges);
        }

        public Map<String, Double> getEdges(String vertex) {
            return vertices.get(vertex);
        }
    }

    public static class DijkstraResult {
        private Map<String, Double> distances;
        private Map<String, String> previousVertices;

        public DijkstraResult(Map<String, Double> distances, Map<String, String> previousVertices) {
            this.distances = distances;
            this.previousVertices = previousVertices;
        }
        public Map<String, String> getPreviousVertices() {
            return previousVertices;
        }
    }

    public static DijkstraResult dijkstra(Graph graph, String start) {
        Map<String, Double> distances = new HashMap<>();
        Map<String, String> previousVertices = new HashMap<>();
        PriorityQueue<String> priorityQueue = new PriorityQueue<>(Comparator.comparingDouble(distances::get));

        for (String vertex : graph.vertices.keySet()) {
            if (vertex.equals(start)) {
                distances.put(vertex, 0.0);
            } else {
                distances.put(vertex, Double.MAX_VALUE);
            }
            previousVertices.put(vertex, null);
            priorityQueue.add(vertex);
        }

        while (!priorityQueue.isEmpty()) {
            String currentVertex = priorityQueue.poll();

            for (Map.Entry<String, Double> entry : graph.getEdges(currentVertex).entrySet()) {
                String neighbor = entry.getKey();
                Double weight = entry.getValue();

                Double newDistance = distances.get(currentVertex) + weight;

                if (newDistance < distances.get(neighbor)) {
                    distances.put(neighbor, newDistance);
                    previousVertices.put(neighbor, currentVertex);
                    priorityQueue.remove(neighbor);
                    priorityQueue.add(neighbor);
                }
            }
        }

        return new DijkstraResult(distances, previousVertices);
    }

    public static String getShortestPath(DijkstraResult result, String start, String end) {
        List<String> path = new ArrayList<>();
        String currentVertex = end;

        while (currentVertex != null) {
            path.add(currentVertex);
            currentVertex = result.getPreviousVertices().get(currentVertex);
        }

        Collections.reverse(path);
        return String.join(""-"", path);
    }
    public static Double getDistanceBetweenRadials(double x, int level) {
        return level*x*0.765367; // 0.765367... = sin(45 deg)/sin(67.5 deg)
    }





    public static int digitsCount(long number) {
        if (Math.abs(number) < 10) {
            return 1;
        }
        return 1 + digitsCount(number / 10);
    }

    public static int totalPoints(String[] guessedWords, String scrambledWord) {
        int totalPoints = 0;

        for (String word : guessedWords) {
            if (isValidWord(scrambledWord, word)) {
                int wordLength = word.length();
                totalPoints += getPointsForWord(wordLength);
            }
        }

        return totalPoints;
    }
    private static boolean isValidWord(String scrambledWord, String guessedWord) {
        Map<Character, Integer> charCountMap = new HashMap<>();

        for (char ch : scrambledWord.toCharArray()) {
            charCountMap.put(ch, charCountMap.getOrDefault(ch, 0) + 1);
        }

        for (char ch : guessedWord.toCharArray()) {
            if (!charCountMap.containsKey(ch) || charCountMap.get(ch) == 0) {
                return false;
            }
            charCountMap.put(ch, charCountMap.get(ch) - 1);
        }

        return true;
    }

    private static int getPointsForWord(int wordLength) {
        return switch (wordLength) {
            case 3 -> 1;
            case 4 -> 2;
            case 5 -> 3;
            case 6 -> 4 + 50;
            default -> 0;
        };
    }

    public static List<List<Integer>> sumsUp(int[] nums) {
        List<List<Integer>> answer = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {
            for (int j = i+1; j < nums.length; j++) {
                if (nums[i] + nums[j] == 8) {
                    answer.add(Arrays.asList(Math.min(nums[i], nums[j]), Math.max(nums[i], nums[j])));
                }
            }
        }
        return answer;
    }


    public static String takeDownAverage(String[] percentages) {
        double sum = 0;
        int n = percentages.length;
        for ( String string: percentages) {
            double percentage =Double.parseDouble(string.replaceAll(""%"", """"));
            sum += percentage;
        }
        double average = sum / n;
        return Math.round((average-5)*(n+1)-sum) + ""%"";
    }

    public static String caesarCipher(String operation, String message, int shift) {
        message = message.toUpperCase();
        if (operation.equals(""encode"")) {
            return encrypt(message, shift);
        } else if (operation.equals(""decode"")) {
            return decrypt(message, shift);
        } else {
            return ""Неверный режим работы. Используйте 'encode' или 'decode'."";
        }
    }

    private static String encrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) + shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;
    }

    private static String decrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) - shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;

    }

    private static int recursivePermutations(int n, int k) {
        if (n < k) {
            return 0;
        }
        if (k == 0) {
            return 1;
        }
        return n * recursivePermutations(n - 1, k - 1);
    }

    public static String timeDifference(String cityA, String timestamp, String cityB) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat(""MMMM dd, yyyy HH:mm"");
            Date date = sdf.parse(timestamp);

            Map<String, Double> timeOffsets = new HashMap<>();
            timeOffsets.put(""Los Angeles"", -8.0);
            timeOffsets.put(""New York"", -5.0);
            timeOffsets.put(""Caracas"", -4.5);
            timeOffsets.put(""Buenos Aires"", -3.0);
            timeOffsets.put(""London"", 0.0);
            timeOffsets.put(""Rome"", 1.0);
            timeOffsets.put(""Moscow"", 3.0);
            timeOffsets.put(""Tehran"", 3.5);
            timeOffsets.put(""New Delhi"", 5.5);
            timeOffsets.put(""Beijing"", 8.0);
            timeOffsets.put(""Canberra"", 10.0);

            double offsetA = timeOffsets.get(cityA);
            double offsetB = timeOffsets.get(cityB);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, (int) (offsetB - offsetA));

            SimpleDateFormat resultFormat = new SimpleDateFormat(""yyyy-M-d HH:mm"");
            return resultFormat.format(cal.getTime());

        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static boolean isNew(int number) {
        String numberStr = String.valueOf(number);

        for (int i = 1; i < number; i++) {
            String currentNumberStr = String.valueOf(i);

            if (isPermutation(numberStr, currentNumberStr)) {
                return false;
            }
        }

        return true;
    }

    private static boolean isPermutation(String str1, String str2) {
        char[] chars1 = str1.toCharArray();
        char[] chars2 = str2.toCharArray();
        Arrays.sort(chars1);
        Arrays.sort(chars2);
        return Arrays.equals(chars1, chars2);
    }

}
"
2MrSFaCP,Isi PLN API,lamhotsimamora,PHP,Tuesday 21st of November 2023 03:38:00 AM CDT," <?php
$url = 'https://portalpulsa.com/api/connect/';

$header = array(
'portal-userid: P234174',
'portal-key: aec906bed698d5dcdcdca28c597e6bd8', // lihat hasil autogenerate di member area
'portal-secret: 17718b17a9016a5234484b802890de371f4441189e89de1f78cbe08fdc2195d1', // lihat hasil autogenerate di member area
);

$data = array(
'inquiry' => 'PLN', // konstan
'code' => 'PLN10', // kode produk
'phone' => '081399453242', // nohp pembeli
'idcust' => '14275874221', // nomor meter atau id pln
'trxid_api' => 'x12', // Trxid / Reffid dari sisi client
'no' => '1', // untuk isi lebih dari 1x dlm sehari, isi urutan 2,3,4,dst
);

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt($ch, CURLOPT_POSTREDIR, CURL_REDIR_POST_ALL);
curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
$result = curl_exec($ch);

echo $result;"
q5DKF7pf,Isi pulsa all operator,lamhotsimamora,PHP,Tuesday 21st of November 2023 03:26:33 AM CDT," <?php
$url = 'https://portalpulsa.com/api/connect/';

$header = array(
'portal-userid: P234174',
'portal-key: aec906bed698d5dcdcdca28c597e6bd8', // lihat hasil autogenerate di member area
'portal-secret: 17718b17a9016a5234484b802890de371f4441189e89de1f78cbe08fdc2195d1', // lihat hasil autogenerate di member area
);

$data = array(
'inquiry' => 'I', // konstan
'code' => 'S5', // kode produk
'phone' => '081399453242', // nohp pembeli
'idcust' => '081399453242', // Diisi jika produk memerlukan IDcust seperti: Unlock/Aktivasi Voucher, Game Online (FF, ML, PUBG, dll)
'trxid_api' => 'x2', // Trxid / Reffid dari sisi client
'no' => '2', // untuk isi lebih dari 1x dlm sehari, isi urutan 1,2,3,4,dst
);

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt($ch, CURLOPT_POSTREDIR, CURL_REDIR_POST_ALL);
curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
$result = curl_exec($ch);

echo $result;"
FTkekX2f,Flight_to_the_Stars,qwoze,C#,Tuesday 21st of November 2023 03:24:05 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Bots;

namespace Flight_to_the_Stars
{
    public partial class Form1 : Form
    {
        Bitmap bmp;
        Graphics graph;
        int w, h;
        int tick = 0;
        List<Star> stars;
        Random random = new Random();

        public Form1()
        {
            InitializeComponent();
        }

        private void pictureBox1_Paint(object sender, PaintEventArgs e)
        {
            graph.Clear(Color.Black);

            foreach (Star star in stars)
            {
                star.Move();
                star.Show(graph);
            }
            e.Graphics.DrawImage(bmp, 0, 0);
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            tick++;

            int n = random.Next(5);
            for (int i = 0; i < n; i++)
            {
                stars.Add(new Star(Properties.Resources.sun));
            }

            for (int i = stars.Count - 1; i >= 0; i--)
            {
                if (stars[i].X > stars[i].MaxX || stars[i].X < 0 || stars[i].Y > stars[i].MaxY || stars[i].Y < 0)
                {
                    stars.RemoveAt(i);
                }
            }

            pictureBox1.Invalidate();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            bmp = new Bitmap(pictureBox1.Width, pictureBox1.Height);
            graph = Graphics.FromImage(bmp);
            Bot.SetLimits(pictureBox1.Width, pictureBox1.Height);
            graph.Clear(Color.Black);

            stars = new List<Star>();

            timer1.Start();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Bots;
using System.Drawing;

namespace Flight_to_the_Stars
{
    class Star : Bot
    {
        static Random random = new Random();

        private float amplitude;
        private float period;
        private float angle;
        private float startX;
        public float MaxX => maxX;
        public float MaxY => maxY;

        public Star(Image img) : base(img)
        {
            x = maxX * (float)(random.NextDouble());
            y = maxY * (float)(random.NextDouble());

            dx = (maxX / 64) * (float)(random.NextDouble() * 2 - 1); 
            dy = (maxY / 64) * (float)(random.NextDouble() * 2 - 1); 
            width = (float)random.NextDouble() * 3.0f;
            height = width;

            amplitude = (float)random.NextDouble() * 30.0f + 10.0f; 
            period = (float)random.NextDouble() * 0.2f + 0.1f; 
            startX = x;
        }

        public override void Move()
        {
            angle += period;
            dx = (maxX / 128) * (float)Math.Cos(angle); 
            x = startX + amplitude * (float)Math.Sin(angle); 

            base.Move();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;

namespace Bots
{
    public class Bot
    {
        //Положение
        protected static float maxX = -1, maxY = -1;
        protected float x, y;
        protected float dx = 1, dy = 1;
        public float X => x;
        public float Y => y;
        public float Dx => dx;
        public float Dy => dy;
        public float MaxX => maxX;
        public float MaxY => maxY;
        //Внешний вид

        Image img = null;
        protected float width = 30, height = 30;
        public float Width => width;
        public float Height => height;
        //Поведение
        static bool isSetLimits = false;

        /// <summary>
        /// Устанавливает границы области их отображения и перемещения
        /// Исключение Exception: выбрасывается в случае, если один из размеров области отображения меньше 2.
        /// </summary>
        /// <param name=""graph""> холст, на который будет выводиться объект</param>
        /// <param name=""w""> ширина области отображения</param>
        /// <param name=""h""> высота области отображения</param>

        public static void SetLimits(int w, int h)
        {
            if (w < 2 || h < 2)
                throw new Exception(""Размеры поля слишком малы"");
            maxX = w - 1;
            maxY = h - 1;
            isSetLimits = true;
        }
        /// <summary>
        /// Конструктор
        /// </summary>
        /// <param name=""im""> Изображение бота</param>
        /// <param name=""x""> координата Х  </param>
        /// <param name=""y""> координата У </param>
        /// <param name=""width""> ширина изображения </param>
        /// <param name=""height""> высота изображения</param>
        public Bot(Image im = null, float x = 0, float y = 0, float width = 30, float height = 30)
        {
            if (!isSetLimits)
            {
                throw new Exception(""Сначала нужно указать размеры области рисования..."" +
                "" Для этого предназначен статический метод SetLimits()"");
            }
            if (x < 0 || x > maxX || y < 0 || y > maxY)
            {
                throw new ArgumentOutOfRangeException(""Координаты бота должны быть в пределах размеров поля для отображения"");
            }
            if (width < 1 || height < 1 || width > maxX || height > maxY)
            {
                throw new Exception();
            }
            try
            {
                img = im;
            }
            catch
            {

            }
            this.x = x;
            this.y = y;
            this.width = width;
            this.height = height;

        }
        /// <summary>
        /// Отображает бота с помощью передаваемого объекта графики
        /// </summary>
        /// <param name=""gr"">Объект графики</param>
        public virtual void Show(Graphics gr)
        {
            if (img != null)
                gr.DrawImage(img, x, y, width, height);
        }
        /// <summary>
        /// Перемещает объект
        /// </summary>
        public virtual void Move(float step)
        {
            x += dx * step;
            y += dy * step;
        }
        public virtual void Move()
        {
            x += dx;
            y += dy;
        }
        public void ToLeft()
        {
            dx = -1;
            dy = 0;
        }
        public void ToRight()
        {
            dx = 1;
            dy = 0;
        }

        public void ToUp()
        {
            dy = -1;
            dx = 0;
        }

        public void ToDown()
        {
            dy = 1;
            dx = 0;
        }
        public void ToDirection(float a, float b)
        {
            dx = a;
            dy = b;
        }
    }
}
"
fKUV6v2r,Ex: 7 - Mouse tracking light,mivebe,OpenGL Shading,Tuesday 21st of November 2023 02:32:26 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform float u_time;
uniform vec2 u_mouse;
uniform vec2 u_resolution;
out vec4 outColor;

void main() {
    vec2 coord = gl_FragCoord.xy / u_resolution.xy;
    float aspect = u_resolution.x / u_resolution.y;
    float asd = max(u_resolution.x, u_resolution.y) - min(u_resolution.x, u_resolution.y);
    
    coord.x -= u_mouse.x / u_resolution.x;
    coord.y -= u_mouse.y / u_resolution.y;
    
    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);
    
    color += 0.1 * (sin(u_time * 2.0) + 0.01 / (pow(coord.x, 2.0) * aspect + pow(coord.y, 2.0) / aspect));
    outColor = vec4(vec3(color), 1.0);
}"
4JiErSsd,Untitled,SLENSER,Python,Tuesday 21st of November 2023 02:30:31 AM CDT,"import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class Main {
    public static void main(String[] args) {

        System.out.println(sameLetterPattern(""ABAB"", ""CDCD"")); // true
        System.out.println(sameLetterPattern(""ABCBA"", ""BCDCB"")); // true
        System.out.println(sameLetterPattern(""FFGG"", ""CDCD"")); // false
        System.out.println(sameLetterPattern(""FFFF"", ""ABCD"")); // false

        System.out.println(spiderVsFly(""H3"", ""E2"",1));
        System.out.println(spiderVsFly(""A4"", ""B2"",1));
        System.out.println(spiderVsFly(""A4"", ""C2"",1));

        System.out.println(digitsCount(4666));
        System.out.println(digitsCount(544));
        System.out.println(digitsCount(121317));
        System.out.println(digitsCount(0));
        System.out.println(digitsCount(12345));
        System.out.println(digitsCount(1289396387328L));

        System.out.println(totalPoints(new String[]{""cat"", ""create"", ""sat""}, ""caster""));
        System.out.println(totalPoints(new String[]{""trance"", ""recant""}, ""recant""));
        System.out.println(totalPoints(new String[]{""dote"", ""dotes"", ""toes"", ""set"", ""dot"", ""dots"", ""sted""}, ""tossed""));

        System.out.println(sumsUp(new int[] {1, 2, 3, 4, 5}));
        System.out.println(sumsUp(new int[] {1, 2, 3, 7, 9}));
        System.out.println(sumsUp(new int[]  {10, 9, 7, 2, 8}));
        System.out.println(sumsUp(new int[] {1, 6, 5, 4, 8, 2, 3, 7}));

        System.out.println(takeDownAverage(new String[] {""95%"", ""83%"", ""90%"", ""87%"", ""88%"", ""93%""}));
        System.out.println(takeDownAverage(new String[] {""10%""}));
        System.out.println(takeDownAverage(new String[] {""53%"", ""79%""}));

        System.out.println(caesarCipher(""encode"", ""hello world"", 3));
        System.out.println(caesarCipher(""decode"", ""almost last task!    "", 4));

        System.out.println(recursivePermutations(5,3));
        System.out.println(recursivePermutations(7,3));

        System.out.println(timeDifference(""Los Angeles"", ""April 1, 2011 23:23"", ""Canberra""));
        System.out.println(timeDifference(""London"", ""July 31, 1983 23:01"", ""Rome""));
        System.out.println(timeDifference(""New York"", ""December 31, 1970 13:40"", ""Beijing""));

        System.out.println(isNew(3));
        System.out.println(isNew(30));
        System.out.println(isNew(321));
        System.out.println(isNew(123));

    }

    public static boolean sameLetterPattern(String str1, String str2) {
        if (str1.length() != str2.length()) {
            return false;
        }


        Map<Character, Character> map = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            char char1 = str1.charAt(i);
            char char2 = str2.charAt(i);

            if (map.containsKey(char1)) {
                if (map.get(char1) != char2) {
                    return false;
                }
            } else {
                if (map.containsValue(char2)) {
                    return false;
                }
                map.put(char1, char2);
            }
        }

        return true;
    }

    public static String spiderVsFly(String spyPos, String flyPos, double x) {
        Graph graph = new Graph();

        graph.addVertex(""A0"", Map.of(""A1"", x, ""B1"", x, ""C1"",x,""D1"",x,""E1"",x,""F1"",x,""G1"",x,""H1"",x));

        graph.addVertex(""A1"", Map.of(""A0"", x, ""B1"", getDistanceBetweenRadials(x,1), ""H1"", getDistanceBetweenRadials(x,1),""A2"",x));
        graph.addVertex(""B1"", Map.of(""A0"", x, ""A1"", getDistanceBetweenRadials(x,1), ""C1"", getDistanceBetweenRadials(x,1),""B2"",x));
        graph.addVertex(""C1"", Map.of(""A0"", x,""B1"", getDistanceBetweenRadials(x, 1), ""D1"", getDistanceBetweenRadials(x, 1), ""C2"", x));
        graph.addVertex(""D1"", Map.of(""A0"", x,""C1"", getDistanceBetweenRadials(x, 1), ""E1"", getDistanceBetweenRadials(x, 1), ""D2"", x));
        graph.addVertex(""E1"", Map.of(""A0"", x,""D1"", getDistanceBetweenRadials(x, 1), ""F1"", getDistanceBetweenRadials(x, 1), ""E2"", x));
        graph.addVertex(""F1"", Map.of(""A0"", x,""E1"", getDistanceBetweenRadials(x, 1), ""G1"", getDistanceBetweenRadials(x, 1), ""F2"", x));
        graph.addVertex(""G1"", Map.of(""A0"", x,""F1"", getDistanceBetweenRadials(x, 1), ""H1"", getDistanceBetweenRadials(x, 1), ""G2"", x));
        graph.addVertex(""H1"", Map.of(""A0"", x,""G1"", getDistanceBetweenRadials(x, 1), ""A1"", getDistanceBetweenRadials(x, 1), ""H2"", x));

        graph.addVertex(""A2"", Map.of(""A1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""A3"",x));
        graph.addVertex(""B2"", Map.of(""B1"", x, ""A2"", getDistanceBetweenRadials(x,2), ""C2"", getDistanceBetweenRadials(x,2),""B3"",x));
        graph.addVertex(""C2"", Map.of(""C1"", x, ""B2"", getDistanceBetweenRadials(x,2), ""D2"", getDistanceBetweenRadials(x,2),""C3"",x));
        graph.addVertex(""D2"", Map.of(""D1"", x, ""C2"", getDistanceBetweenRadials(x,2), ""E2"", getDistanceBetweenRadials(x,2),""D3"",x));
        graph.addVertex(""E2"", Map.of(""E1"", x, ""D2"", getDistanceBetweenRadials(x,2), ""F2"", getDistanceBetweenRadials(x,2),""E3"",x));
        graph.addVertex(""F2"", Map.of(""F1"", x, ""E2"", getDistanceBetweenRadials(x,2), ""G2"", getDistanceBetweenRadials(x,2),""F3"",x));
        graph.addVertex(""G2"", Map.of(""G1"", x, ""F2"", getDistanceBetweenRadials(x,2), ""H2"", getDistanceBetweenRadials(x,2),""G3"",x));
        graph.addVertex(""H2"", Map.of(""H1"", x, ""G2"", getDistanceBetweenRadials(x,2), ""A2"", getDistanceBetweenRadials(x,2),""H3"",x));

        graph.addVertex(""A3"", Map.of(""A2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""A4"",x));
        graph.addVertex(""B3"", Map.of(""B2"", x, ""A3"", getDistanceBetweenRadials(x,3), ""C3"", getDistanceBetweenRadials(x,3),""B4"",x));
        graph.addVertex(""C3"", Map.of(""C2"", x, ""B3"", getDistanceBetweenRadials(x,3), ""D3"", getDistanceBetweenRadials(x,3),""C4"",x));
        graph.addVertex(""D3"", Map.of(""D2"", x, ""C3"", getDistanceBetweenRadials(x,3), ""E3"", getDistanceBetweenRadials(x,3),""D4"",x));
        graph.addVertex(""E3"", Map.of(""E2"", x, ""D3"", getDistanceBetweenRadials(x,3), ""F3"", getDistanceBetweenRadials(x,3),""E4"",x));
        graph.addVertex(""F3"", Map.of(""F2"", x, ""E3"", getDistanceBetweenRadials(x,3), ""G3"", getDistanceBetweenRadials(x,3),""F4"",x));
        graph.addVertex(""G3"", Map.of(""G2"", x, ""F3"", getDistanceBetweenRadials(x,3), ""H3"", getDistanceBetweenRadials(x,3),""G4"",x));
        graph.addVertex(""H3"", Map.of(""H2"", x, ""G3"", getDistanceBetweenRadials(x,3), ""A3"", getDistanceBetweenRadials(x,3),""H4"",x));

        graph.addVertex(""A4"", Map.of(""A3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""B4"", Map.of(""B3"", x, ""A4"", getDistanceBetweenRadials(x,4), ""C4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""C4"", Map.of(""C3"", x, ""B4"", getDistanceBetweenRadials(x,4), ""D4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""D4"", Map.of(""D3"", x, ""C4"", getDistanceBetweenRadials(x,4), ""E4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""E4"", Map.of(""E3"", x, ""D4"", getDistanceBetweenRadials(x,4), ""F4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""F4"", Map.of(""F3"", x, ""E4"", getDistanceBetweenRadials(x,4), ""G4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""G4"", Map.of(""G3"", x, ""F4"", getDistanceBetweenRadials(x,4), ""H4"", getDistanceBetweenRadials(x,4)));
        graph.addVertex(""H4"", Map.of(""H3"", x, ""G4"", getDistanceBetweenRadials(x,4), ""A4"", getDistanceBetweenRadials(x,4)));



        DijkstraResult result = dijkstra(graph, spyPos);
        return getShortestPath(result, spyPos, flyPos);

    }

    public static class Graph {
        private Map<String, Map<String, Double>> vertices = new HashMap<>();

        public void addVertex(String name, Map<String, Double> edges) {
            vertices.put(name, edges);
        }

        public Map<String, Double> getEdges(String vertex) {
            return vertices.get(vertex);
        }
    }

    public static class DijkstraResult {
        private Map<String, Double> distances;
        private Map<String, String> previousVertices;

        public DijkstraResult(Map<String, Double> distances, Map<String, String> previousVertices) {
            this.distances = distances;
            this.previousVertices = previousVertices;
        }

        public Map<String, Double> getDistances() {
            return distances;
        }

        public Map<String, String> getPreviousVertices() {
            return previousVertices;
        }
    }

    public static DijkstraResult dijkstra(Graph graph, String start) {
        Map<String, Double> distances = new HashMap<>();
        Map<String, String> previousVertices = new HashMap<>();
        PriorityQueue<String> priorityQueue = new PriorityQueue<>(Comparator.comparingDouble(distances::get));

        // Инициализация расстояний и очереди
        for (String vertex : graph.vertices.keySet()) {
            if (vertex.equals(start)) {
                distances.put(vertex, 0.0);
            } else {
                distances.put(vertex, Double.MAX_VALUE);
            }
            previousVertices.put(vertex, null);
            priorityQueue.add(vertex);
        }

        while (!priorityQueue.isEmpty()) {
            String currentVertex = priorityQueue.poll();

            for (Map.Entry<String, Double> entry : graph.getEdges(currentVertex).entrySet()) {
                String neighbor = entry.getKey();
                Double weight = entry.getValue();

                Double newDistance = distances.get(currentVertex) + weight;

                if (newDistance < distances.get(neighbor)) {
                    distances.put(neighbor, newDistance);
                    previousVertices.put(neighbor, currentVertex);
                    priorityQueue.remove(neighbor);
                    priorityQueue.add(neighbor);
                }
            }
        }

        return new DijkstraResult(distances, previousVertices);
    }

    public static String getShortestPath(DijkstraResult result, String start, String end) {
        List<String> path = new ArrayList<>();
        String currentVertex = end;

        while (currentVertex != null) {
            path.add(currentVertex);
            currentVertex = result.getPreviousVertices().get(currentVertex);
        }

        Collections.reverse(path);
        return String.join(""-"", path);
    }
    public static Double getDistanceBetweenRadials(double x, int level) {
        return level*x*0.765367; // 0.765367... = sin(45 deg)/sin(67.5 deg)
    }





    public static int digitsCount(long number) {
        if (Math.abs(number) < 10) {
            return 1;
        }
        return 1 + digitsCount(number / 10);
    }

    public static int totalPoints(String[] guessedWords, String scrambledWord) {
        int totalPoints = 0;

        for (String word : guessedWords) {
            if (isValidWord(scrambledWord, word)) {
                int wordLength = word.length();
                totalPoints += getPointsForWord(wordLength);
            }
        }

        return totalPoints;
    }
    private static boolean isValidWord(String scrambledWord, String guessedWord) {
        Map<Character, Integer> charCountMap = new HashMap<>();

        for (char ch : scrambledWord.toCharArray()) {
            charCountMap.put(ch, charCountMap.getOrDefault(ch, 0) + 1);
        }

        for (char ch : guessedWord.toCharArray()) {
            if (!charCountMap.containsKey(ch) || charCountMap.get(ch) == 0) {
                return false;
            }
            charCountMap.put(ch, charCountMap.get(ch) - 1);
        }

        return true;
    }

    private static int getPointsForWord(int wordLength) {
        switch (wordLength) {
            case 3:
                return 1;
            case 4:
                return 2;
            case 5:
                return 3;
            case 6:
                return 4 + 50; // 4 очка + 50 пт бонуса
            default:
                return 0;
        }
    }

    public static List<List<Integer>> sumsUp(int[] nums) {
        List<List<Integer>> answer = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {
            for (int j = i+1; j < nums.length; j++) {
                if (nums[i] + nums[j] == 8) {
                    answer.add(Arrays.asList(Math.min(nums[i], nums[j]), Math.max(nums[i], nums[j])));
                }
            }
        }
        return answer;
    }


    public static String takeDownAverage(String[] percentages) {
        double sum = 0;
        int n = percentages.length;
        for ( String string: percentages) {
            double percentage =Double.parseDouble(string.replaceAll(""%"", """"));
            sum += percentage;
        }
        double average = sum / n;
        return Math.round((average-5)*(n+1)-sum) + ""%"";
    }

    public static String caesarCipher(String operation, String message, int shift) {
        message = message.toUpperCase();
        if (operation.equals(""encode"")) {
            return encrypt(message, shift);
        } else if (operation.equals(""decode"")) {
            return decrypt(message, shift);
        } else {
            return ""Неверный режим работы. Используйте 'encode' или 'decode'."";
        }
    }

    private static String encrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) + shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;
    }

    private static String decrypt(String message, int shift) {
        String answer = """";
        int len = message.length();
        for(int x = 0; x < len; x++){
            if (Character.isLetter(message.charAt(x))) {
                char c = (char)(message.charAt(x) - shift);
                if (c > 'z')
                    answer += (char)(message.charAt(x) - (26-shift));
                else
                    answer += (char)(message.charAt(x) + shift);
            }else {
                answer += message.charAt(x);
            }

        }
        return answer;

    }

    private static int recursivePermutations(int n, int k) {
        if (n < k) {
            return 0;
        }
        if (k == 0) {
            return 1;
        }
        return n * recursivePermutations(n - 1, k - 1);
    }

    public static String timeDifference(String cityA, String timestamp, String cityB) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat(""MMMM dd, yyyy HH:mm"");
            Date date = sdf.parse(timestamp);

            Map<String, Double> timeOffsets = new HashMap<>();
            timeOffsets.put(""Los Angeles"", -8.0);
            timeOffsets.put(""New York"", -5.0);
            timeOffsets.put(""Caracas"", -4.5);
            timeOffsets.put(""Buenos Aires"", -3.0);
            timeOffsets.put(""London"", 0.0);
            timeOffsets.put(""Rome"", 1.0);
            timeOffsets.put(""Moscow"", 3.0);
            timeOffsets.put(""Tehran"", 3.5);
            timeOffsets.put(""New Delhi"", 5.5);
            timeOffsets.put(""Beijing"", 8.0);
            timeOffsets.put(""Canberra"", 10.0);

            double offsetA = timeOffsets.get(cityA);
            double offsetB = timeOffsets.get(cityB);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, (int) (offsetB - offsetA));

            SimpleDateFormat resultFormat = new SimpleDateFormat(""yyyy-M-d HH:mm"");
            return resultFormat.format(cal.getTime());

        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static boolean isNew(int number) {
        String numberStr = String.valueOf(number);

        for (int i = 1; i < number; i++) {
            String currentNumberStr = String.valueOf(i);

            if (isPermutation(numberStr, currentNumberStr)) {
                return false;
            }
        }

        return true;
    }

    private static boolean isPermutation(String str1, String str2) {
        char[] chars1 = str1.toCharArray();
        char[] chars2 = str2.toCharArray();
        Arrays.sort(chars1);
        Arrays.sort(chars2);
        return Arrays.equals(chars1, chars2);
    }

}
"
Xz70fCbQ,Ex: 6 - Sine Cosine,mivebe,OpenGL Shading,Tuesday 21st of November 2023 02:27:26 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;
out vec4 outColor;

float circeShape(vec2 position, float radius) {
    return step(radius, length(position - vec2(0.5)));
}

void main() {
    vec2 coord = gl_FragCoord.xy / u_resolution.x;
    vec3 color = vec3(0.0);
    
    vec2 translate = vec2(sin(u_time / 10.0), cos(u_time));
    coord += translate * 0.5;
    
    color += vec3(circeShape(coord, 0.3));
    
    outColor = vec4(color, 1.0);
}"
fkHgLbLj,Ex: 5 - Scaling,mivebe,OpenGL Shading,Tuesday 21st of November 2023 02:25:31 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;
out vec4 outColor;

mat2 scale(vec2 scale) {
  return mat2(scale.x, 0.0, 0.0, scale.y);
}

float circleShape(vec2 position, float radius) {
  return step(radius, length(position - vec2(0.5)));
}

void main() {
  vec2 coord = gl_FragCoord.xy / u_resolution.x;
  vec3 color = vec3(0.0);
  
  coord = scale(vec2(sin(u_time) + 2.0)) * coord;
  
  color += vec3(circleShape(coord, 0.3));
  
  outColor = vec4(color, 1.0);
}"
AhKXPaAE,Ex: 4 - Rotation,mivebe,OpenGL Shading,Tuesday 21st of November 2023 02:22:52 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;
out vec4 outColor;

float rectShape(vec2 position, vec2 scale) {
  scale = vec2(0.5) - scale * 0.5;
  vec2 shaper = vec2(step(scale.x, position.x), step(scale.y, position.y));
  shaper *= vec2(step(scale.x, 1.0 - position.x), step(scale.y, 1.0 - position.y));
  return shaper.x * shaper.y;
}

mat2 rotate(float angle) {
  return mat2(cos(angle), - sin(angle), sin(angle), cos(angle));
}

void main() {
  vec2 coord = gl_FragCoord.xy / u_resolution.x;
  vec3 color = vec3(0.0);
  
  coord -= vec2(0.5);
  coord = rotate(0.5 * sin(u_time)) * coord;
  coord += vec2(0.5);
  
  color += vec3(rectShape(coord, vec2(0.3, 0.3)));
  
  outColor = vec4(color, 1.0);
}"
xXjDwgja,Ex: 3 - Rectangle,mivebe,OpenGL Shading,Tuesday 21st of November 2023 02:17:43 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
out vec4 outColor;

float rectShape(vec2 position, vec2 scale) {
  scale = vec2(0.5) - scale * 0.5;
  vec2 shaper = vec2(step(scale.x, position.x), step(scale.y, position.y));
  shaper *= vec2(step(scale.x, 1.0 - position.x), step(scale.y, 1.0 - position.y));
  
  return shaper.x * shaper.y;
}

void main() {
  
  vec2 position = gl_FragCoord.xy / u_resolution.x;
  vec3 color = vec3(0.0);
  float rectangle = rectShape(position, vec2(0.3, 0.3));
  color = vec3(rectangle);
  outColor = vec4(color, 1.0);
}"
4mdrTzB4,Untitled,Dorex,Linden Scripting,Tuesday 21st of November 2023 02:09:39 AM CDT,"default
{
    on_rez(integer start_param)
    {
        llSetTimerEvent(0.1);
    }
    state_entry()
    {
        llSetTimerEvent(0.1);
    }
    timer()
    {
        if (llGetAgentInfo( llGetOwner() ) & AGENT_TYPING )  {
            llSetLinkPrimitiveParamsFast(LINK_SET, [ PRIM_GLOW, ALL_SIDES, 1.0 ] ) ;
        } else {
            llSetLinkPrimitiveParamsFast(LINK_SET, [ PRIM_GLOW, ALL_SIDES, 0.0 ] ) ;
        }
    }
}
"
xeNHdqfj,Ex: 2 - Polygon,mivebe,OpenGL Shading,Tuesday 21st of November 2023 01:59:11 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

const float PI = 3.1415926535;
uniform vec2 u_resolution;
out vec4 outColor;

float polyShape(vec2 position, float radius, float sides) {
  position = position * 2.0 - 1.0;
  float angle = atan(position.x, position.y);
  float slice = PI * 2.0 / sides;
  
  return step(radius, cos(floor(0.5 + angle / slice) * slice - angle) * length(position));
}

void main() {
  vec2 position = gl_FragCoord.xy / u_resolution.x;
  
  float polygon = polyShape(position, 0.6, 6.0);
  
  vec3 color = vec3(polygon);
  
  outColor = vec4(color, 1.0);
}"
MtjZ4ESk,Ex: 1 - Circle,mivebe,OpenGL Shading,Tuesday 21st of November 2023 01:54:05 AM CDT,"#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
out vec4 outColor;

float circleshape(vec2 position, float radius) {
  return step(radius, length(position - vec2(0.5)));
}

void main() {
  vec2 position = gl_FragCoord.xy / u_resolution.x;
  vec3 color = vec3(0.0);
  
  float circle = circleshape(position, 0.3);
  
  color = vec3(circle);
  
  outColor = vec4(color, 1.0);
}"
3ynyuPea,github duplicate repos VC,mivebe,Bash,Tuesday 21st of November 2023 01:43:04 AM CDT,"name: Sync Repositories
 
on:
  push:
    branches:
      - main  # Adjust based on your branch names
 
jobs:
  sync:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
 
      - name: Push to Other Repository
        run: |
          git remote add other-repo <URL_of_other_repo>
          git push other-repo HEAD:main --follow-tags --force
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}"
1n2drmPz,Untitled,ApiSpotHintaFi,JavaScript,Tuesday 21st of November 2023 01:25:07 AM CDT,"// Asetus poissaolotunneille
const PoissaKotoaTuuletusTunnit = [4, 10, 16, 22];

// Skripti alkaa tästä
let RoundRobin = 0; let SwitchStatus = false;
Timer.set(60000, true, function () {

    if (RoundRobin === 0) { CheckSwitchStatus(); RoundRobin = 1; }
    if (RoundRobin === 1) { SetRelayStatus(); RoundRobin = 0; }
});

function CheckSwitchStatus() {

    // Check virtual switch status - TODO!    
	Shelly.call(""Input.GetStatus"", ""<minkä inputin tietoa haetaan, pareametri tähän>"", function(res) {
		// Asetetaan muuttujaan inputin tila
	    // SwitchStatus = res....
    }, null);

}

function SetRelayStatus() {

    // Ollaan kotona, pidetään tuuletus päällä
    if (SwitchStatus === false) { Shelly.call(""Switch.Set"", ""{ id: 0, on:true}"", null, null); return; }

    // Ollaan pois kotoa, rele päälle jos on haluttu tunti, muuten pois päältä
    let currentHour = new Date().getHours();

    if (PoissaKotoaTuuletusTunnit.indexOf(currentHour) > -1) {
        // IV päälle, koska on tuuletustunti
        Shelly.call(""Switch.Set"", ""{ id: 0, on:true}"", null, null);
        return;
    }
    else
    {
        // IV pois päältä, koska ei ole tuuletustunti
        Shelly.call(""Switch.Set"", ""{ id: 0, on:false}"", null, null);
        return;
    }
}"
QLDYgpeH,Untitled,ubidefeo,Python,Tuesday 21st of November 2023 01:18:59 AM CDT,"# you need a file in the same directory as this script
# named 'words.txt'
# a keyword per line

from pydub import AudioSegment, effects
from yt_dlp import YoutubeDL
import glob
import isodate
import os
import random
import subprocess
import wave

BATCH_SIZE         = 32
MAX_SEARCH_RESULTS = 10
DOWNLOAD_DIR         = 'wavs/raw'
LOOP_OUTPUT_DIR      = 'wavs/processed/loop'
ONESHOT_OUTPUT_DIR   = 'wavs/processed/oneshot'
WORD_LIST            = 'words.txt'

def read_lines(file):
  return open(file).read().splitlines()

class download_range_func:
  def __init__(self):
    pass
  def __call__(self, info_dict, ydl):
    timestamp = self.make_timestamp(info_dict)
    yield {
        'start_time': timestamp,
        'end_time': timestamp,
    }
  @staticmethod
  def make_timestamp(info):
      duration = info['duration']
      if duration is None:
        return 0
      return duration/2

def make_random_search_phrase(word_list):
  words = random.sample(word_list, 2)
  phrase = ' '.join(words)
  print('Search phrase: ""{}""'.format(phrase))
  return phrase

def make_download_options():
  return {
    'format': 'bestaudio/best',
    'paths': {'home': DOWNLOAD_DIR},
    'outtmpl': {'default': '%(id)s.%(ext)s'},
    'download_ranges': download_range_func(),
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'wav',
    }]
  }

def make_oneshot(sound, output_filepath):
  final_length = min(2000, len(sound))
  quarter = int(final_length/4)
  sound   = sound[:final_length]
  sound   = sound.fade_out(duration=quarter)
  sound   = effects.normalize(sound)
  sound.export(output_filepath, format=""wav"")

def make_loop(sound, output_filepath):
    final_length = min(2000, len(sound))
    half         = int(final_length/2)
    fade_length  = int(final_length/4)
    beg   = sound[:half]
    end   = sound[half:]
    end   = end[:fade_length]
    beg   = beg.fade_in(duration=fade_length)
    end   = end.fade_out(duration=fade_length)
    sound = beg.overlay(end)
    sound = effects.normalize(sound)
    sound.export(output_filepath, format=""wav"")

def process_file(filepath):
  try:
    filename                = os.path.basename(filepath)
    output_filepath_oneshot = os.path.join(ONESHOT_OUTPUT_DIR, 'oneshot_' + filename)
    output_filepath_loop    = os.path.join(LOOP_OUTPUT_DIR, 'loop_' + filename)
    sound                   = AudioSegment.from_file(filepath, ""wav"")
    if (len(sound) > 500):
      if not os.path.exists(output_filepath_oneshot):
        make_oneshot(sound, output_filepath_oneshot)
      if not os.path.exists(output_filepath_loop):
        make_loop(sound, output_filepath_loop)
    os.remove(filepath)
  except Exception as err:
    print(""Failed to process '{}' ({})"".format(filepath, err))

def setup():
    if not os.path.exists(LOOP_OUTPUT_DIR):
      os.makedirs(LOOP_OUTPUT_DIR)
    if not os.path.exists(ONESHOT_OUTPUT_DIR):
      os.makedirs(ONESHOT_OUTPUT_DIR)

def main():
  try:
    setup()
    word_list = read_lines(WORD_LIST)
    for _ in range(BATCH_SIZE):
      phrase    = make_random_search_phrase(word_list)
      video_url = 'ytsearch1:""{}""'.format(phrase)
      YoutubeDL(make_download_options()).download([video_url])
      for filepath in glob.glob(os.path.join(DOWNLOAD_DIR, '*.wav')):
        process_file(filepath)
  except Exception as err:
     print('FATAL ERROR: {}'.format(err))

if __name__ == '__main__':
  main()"
CJJ3GK4Z,DialogueScript (LocalScript),Sungmingamerpro13,CSS,Tuesday 21st of November 2023 12:47:51 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Message = game.ReplicatedStorage:WaitForChild(""Message"")
local Image = Message:WaitForChild(""SpeakerImage"")
local Speaker = Message:WaitForChild(""SpeakerName"")

local player = game.Players.LocalPlayer
local DialogueFrame = player.PlayerGui:WaitForChild(""DialogueGui"").DialogueFrame


Message:GetPropertyChangedSignal(""Value""):Connect(function()
	if Message.Value == ""None"" then
		DialogueFrame.Message.Visible = false
		DialogueFrame:TweenPosition(UDim2.new(0.55, 0,-1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 1)
	else
		DialogueFrame.Message.Visible = true
		DialogueFrame:TweenPosition(UDim2.new(0.55, 0,0.15, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 1)
	end
	DialogueFrame.Message.Text = Message.Value
	script.Click:Play()
end)

Speaker:GetPropertyChangedSignal(""Value""):Connect(function()
	print(""New Speaker: ""..Speaker.Value)
	
	DialogueFrame.ImageLabel.Image = Image.Value
	DialogueFrame.nameLabel.Text = Speaker.Value
end)"
QLT231R8,six_andrey\,chertila,Python,Tuesday 21st of November 2023 12:08:00 AM CDT,"def hvr(x, left, middle, right):
    if x[1] == ""HAML"":
        return left
    if x[1] == ""VHDL"":
        return middle
    return right


def mgc(x, left, middle, right):
    if x[0] == ""MUF"":
        return left
    if x[0] == ""GAP"":
        return middle
    return right


def df(x, left, middle, right):
    if x[3] == ""D"":
        return left
    if x[3] == ""FORTH"":
        return middle
    return right


def main(x):
    if x[4] == 1974:
        if x[2] == 1965:
            return mgc(x, hvr(x, 0, 1, 2), df(x, 3, 4, 5), df(x, 6, 7, 8))
    if x[4] == 2005:
        if x[2] == 1965:
            return mgc(x, hvr(x, 9, 10, 11), 12, 13)
    return 14
"
1BES7j8S,PWNAGOTCHI FACES,paco01800,Bash,Tuesday 21st of November 2023 12:01:00 AM CDT,"sudo su
whoami
cd /

systemctl stop pwnagotchi


mkdir custom-faces
chmod -R 777 custom-faces

cd /usr/local/lib/python3.7/dist-packages/pwnagotchi/ui
nano faces.py

//////////////
UPLOAD1 = '(1__1)'
UPLOAD2 = '(0__1)'
PNG = False
POSITION_X = 0
POSITION_Y = 40

def load_from_config(config):
    for face_name, face_value in config.items():
        globals()[face_name.upper()] = face_value


///////////////////////////////////////////

nano components.py

///////////////////////////////////////////
class Text(Widget):
    def __init__(self, value="""", position=(0, 0), font=None, color=0, wrap=False, max_length=0, png=False):
        super().__init__(position, color)
        self.value = value
        self.font = font
        self.wrap = wrap
        self.max_length = max_length
        self.wrapper = TextWrapper(width=self.max_length, replace_whitespace=False) if wrap else None
        self.png = png

    def draw(self, canvas, drawer):
        if self.value is not None:
            if not self.png:
                if self.wrap:
                    text = '\n'.join(self.wrapper.wrap(self.value))
                else:
                    text = self.value
                drawer.text(self.xy, text, font=self.font, fill=self.color)
            else:
                self.image = Image.open(self.value)
                self.image = self.image.convert('RGBA')
                self.pixels = self.image.load()
                for y in range(self.image.size[1]):
                    for x in range(self.image.size[0]):
                        if self.pixels[x,y][3] < 255:    # check alpha
                            self.pixels[x,y] = (255, 255, 255, 255)
                if self.color == 255:
                    self._image = ImageOps.colorize(self.image.convert('L'), black = ""white"", white = ""black"")
                else:
                    self._image = self.image
                self.image = self._image.convert('1')
                canvas.paste(self.image, self.xy)
///////////////////////////////////////////


nano view.py
///////////////////////////////////////////
...
	    'face': Text(value=faces.SLEEP, position=(config['ui']['faces']['position_x'], config['ui']['faces']['position_y']), color=BLACK, font=fonts.Huge, png=config['ui']['faces']['png']),
...
///////////////////////////////////////////


nano /etc/pwnagotchi/config.toml

ui.faces.look_r = ""/custom-faces/LOOK-R.png""
ui.faces.look_l = ""/custom-faces/LOOK-L.png""
ui.faces.look_r_happy = ""/custom-faces/LOOK-R-HAPPY.png""
ui.faces.look_l_happy = ""/custom-faces/LOOK-L-HAPPY.png""
ui.faces.sleep = ""/custom-faces/SLEEP.png""
ui.faces.sleep2 = ""/custom-faces/SLEEP2.png""
ui.faces.awake = ""/custom-faces/AWAKE.png""
ui.faces.bored = ""/custom-faces/BORED.png""
ui.faces.intense = ""/custom-faces/INTENSE.png""
ui.faces.cool = ""/custom-faces/COOL.png""
ui.faces.happy = ""/custom-faces/HAPPY.png""
ui.faces.excited = ""/custom-faces/EXCITED.png""
ui.faces.grateful = ""/custom-faces/GRATEFUL.png""
ui.faces.motivated = ""/custom-faces/MOTIVATED.png""
ui.faces.demotivated = ""/custom-faces/DEMOTIVATED.png""
ui.faces.smart = ""/custom-faces/SMART.png""
ui.faces.lonely = ""/custom-faces/LONELY.png""
ui.faces.sad = ""/custom-faces/SAD.png""
ui.faces.angry = ""/custom-faces/ANGRY.png""
ui.faces.friend = ""/custom-faces/FRIEND.png""
ui.faces.broken = ""/custom-faces/BROKEN.png""
ui.faces.debug = ""/custom-faces/DEBUG.png""
ui.faces.upload = ""/custom-faces/UPLOAD.png""
ui.faces.upload1 = ""/custom-faces/UPLOAD1.png""
ui.faces.upload2 = ""/custom-faces/UPLOAD2.png""
ui.faces.png = true
ui.faces.position_x = 0
ui.faces.position_y = 34



systemctl restart pwnagotchi










systemctl stop pwnagotchi

mkdir custom-plugins
chmod -R 777 custom-plugins


nano /etc/pwnagotchi/config.toml

main.custom_plugins = ""/custom-plugins""

main.plugins.exp.enabled = true

main.plugins.exp.lvl_x_coord = 0
main.plugins.exp.lvl_y_coord = 81
main.plugins.exp.exp_x_coord = 38
main.plugins.exp.exp_y_coord = 81
main.plugins.exp.bar_symbols_count = 12


systemctl restart pwnagotchi









"
5dhCEtkz,llama bluelm hack,tastypear,Python,Monday 20th of November 2023 11:34:06 PM CDT,"#!/usr/bin/env python3
from __future__ import annotations

import json
import os
import shutil
import struct
import sys
import tempfile
from enum import Enum, IntEnum, auto
from io import BufferedWriter
from pathlib import Path
from typing import IO, Any, BinaryIO, Callable, Sequence

import numpy as np

#
# constants
#

GGUF_MAGIC             = 0x46554747
GGUF_VERSION           = 3
GGUF_DEFAULT_ALIGNMENT = 32


# general
KEY_GENERAL_ARCHITECTURE         = ""general.architecture""
KEY_GENERAL_QUANTIZATION_VERSION = ""general.quantization_version""
KEY_GENERAL_ALIGNMENT            = ""general.alignment""
KEY_GENERAL_NAME                 = ""general.name""
KEY_GENERAL_AUTHOR               = ""general.author""
KEY_GENERAL_URL                  = ""general.url""
KEY_GENERAL_DESCRIPTION          = ""general.description""
KEY_GENERAL_LICENSE              = ""general.license""
KEY_GENERAL_SOURCE_URL           = ""general.source.url""
KEY_GENERAL_SOURCE_HF_REPO       = ""general.source.huggingface.repository""
KEY_GENERAL_FILE_TYPE            = ""general.file_type""

# LLM
KEY_CONTEXT_LENGTH        = ""{arch}.context_length""
KEY_EMBEDDING_LENGTH      = ""{arch}.embedding_length""
KEY_BLOCK_COUNT           = ""{arch}.block_count""
KEY_FEED_FORWARD_LENGTH   = ""{arch}.feed_forward_length""
KEY_USE_PARALLEL_RESIDUAL = ""{arch}.use_parallel_residual""
KEY_TENSOR_DATA_LAYOUT    = ""{arch}.tensor_data_layout""

# attention
KEY_ATTENTION_HEAD_COUNT        = ""{arch}.attention.head_count""
KEY_ATTENTION_HEAD_COUNT_KV     = ""{arch}.attention.head_count_kv""
KEY_ATTENTION_MAX_ALIBI_BIAS    = ""{arch}.attention.max_alibi_bias""
KEY_ATTENTION_CLAMP_KQV         = ""{arch}.attention.clamp_kqv""
KEY_ATTENTION_LAYERNORM_EPS     = ""{arch}.attention.layer_norm_epsilon""
KEY_ATTENTION_LAYERNORM_RMS_EPS = ""{arch}.attention.layer_norm_rms_epsilon""

# RoPE
KEY_ROPE_DIMENSION_COUNT         = ""{arch}.rope.dimension_count""
KEY_ROPE_FREQ_BASE               = ""{arch}.rope.freq_base""
KEY_ROPE_SCALING_TYPE            = ""{arch}.rope.scaling.type""
KEY_ROPE_SCALING_FACTOR          = ""{arch}.rope.scaling.factor""
KEY_ROPE_SCALING_ORIG_CTX_LEN    = ""{arch}.rope.scaling.original_context_length""
KEY_ROPE_SCALING_FINETUNED       = ""{arch}.rope.scaling.finetuned""

# tokenization
KEY_TOKENIZER_MODEL      = ""tokenizer.ggml.model""
KEY_TOKENIZER_LIST       = ""tokenizer.ggml.tokens""
KEY_TOKENIZER_TOKEN_TYPE = ""tokenizer.ggml.token_type""
KEY_TOKENIZER_SCORES     = ""tokenizer.ggml.scores""
KEY_TOKENIZER_MERGES     = ""tokenizer.ggml.merges""
KEY_TOKENIZER_BOS_ID     = ""tokenizer.ggml.bos_token_id""
KEY_TOKENIZER_EOS_ID     = ""tokenizer.ggml.eos_token_id""
KEY_TOKENIZER_UNK_ID     = ""tokenizer.ggml.unknown_token_id""
KEY_TOKENIZER_SEP_ID     = ""tokenizer.ggml.seperator_token_id""
KEY_TOKENIZER_PAD_ID     = ""tokenizer.ggml.padding_token_id""
KEY_TOKENIZER_HF_JSON    = ""tokenizer.huggingface.json""
KEY_TOKENIZER_RWKV       = ""tokenizer.rwkv.world""


#
# recommended mapping of model tensor names for storage in gguf
#


class MODEL_ARCH(IntEnum):
    LLAMA         : int = auto()
    FALCON        : int = auto()
    BAICHUAN      : int = auto()
    GPT2          : int = auto()
    GPTJ          : int = auto()
    GPTNEOX       : int = auto()
    MPT           : int = auto()
    STARCODER     : int = auto()
    PERSIMMON     : int = auto()
    REFACT        : int = auto()
    BERT          : int = auto()
    BLOOM         : int = auto()


class MODEL_TENSOR(IntEnum):
    TOKEN_EMBD      : int = auto()
    TOKEN_EMBD_NORM : int = auto()
    TOKEN_TYPES     : int = auto()
    POS_EMBD        : int = auto()
    OUTPUT          : int = auto()
    OUTPUT_NORM     : int = auto()
    ROPE_FREQS      : int = auto()
    ATTN_Q          : int = auto()
    ATTN_K          : int = auto()
    ATTN_V          : int = auto()
    ATTN_QKV        : int = auto()
    ATTN_OUT        : int = auto()
    ATTN_NORM       : int = auto()
    ATTN_NORM_2     : int = auto()
    ATTN_ROT_EMBD   : int = auto()
    FFN_GATE        : int = auto()
    FFN_DOWN        : int = auto()
    FFN_UP          : int = auto()
    FFN_NORM        : int = auto()
    ATTN_Q_NORM     : int = auto()
    ATTN_K_NORM     : int = auto()


MODEL_ARCH_NAMES: dict[MODEL_ARCH, str] = {
    MODEL_ARCH.LLAMA:          ""llama"",
    MODEL_ARCH.FALCON:         ""falcon"",
    MODEL_ARCH.BAICHUAN:       ""baichuan"",
    MODEL_ARCH.GPT2:           ""gpt2"",
    MODEL_ARCH.GPTJ:           ""gptj"",
    MODEL_ARCH.GPTNEOX:        ""gptneox"",
    MODEL_ARCH.MPT:            ""mpt"",
    MODEL_ARCH.STARCODER:      ""starcoder"",
    MODEL_ARCH.PERSIMMON:      ""persimmon"",
    MODEL_ARCH.REFACT:         ""refact"",
    MODEL_ARCH.BERT:           ""bert"",
    MODEL_ARCH.BLOOM:          ""bloom"",
}

TENSOR_NAMES: dict[MODEL_TENSOR, str] = {
    MODEL_TENSOR.TOKEN_EMBD:      ""token_embd"",
    MODEL_TENSOR.TOKEN_EMBD_NORM: ""token_embd_norm"",
    MODEL_TENSOR.TOKEN_TYPES:     ""token_types"",
    MODEL_TENSOR.POS_EMBD:        ""position_embd"",
    MODEL_TENSOR.OUTPUT_NORM:     ""output_norm"",
    MODEL_TENSOR.OUTPUT:          ""output"",
    MODEL_TENSOR.ROPE_FREQS:      ""rope_freqs"",
    MODEL_TENSOR.ATTN_NORM:       ""blk.{bid}.attn_norm"",
    MODEL_TENSOR.ATTN_NORM_2:     ""blk.{bid}.attn_norm_2"",
    MODEL_TENSOR.ATTN_QKV:        ""blk.{bid}.attn_qkv"",
    MODEL_TENSOR.ATTN_Q:          ""blk.{bid}.attn_q"",
    MODEL_TENSOR.ATTN_K:          ""blk.{bid}.attn_k"",
    MODEL_TENSOR.ATTN_V:          ""blk.{bid}.attn_v"",
    MODEL_TENSOR.ATTN_OUT:        ""blk.{bid}.attn_output"",
    MODEL_TENSOR.ATTN_ROT_EMBD:   ""blk.{bid}.attn_rot_embd"",
    MODEL_TENSOR.ATTN_Q_NORM:     ""blk.{bid}.attn_q_norm"",
    MODEL_TENSOR.ATTN_K_NORM:     ""blk.{bid}.attn_k_norm"",
    MODEL_TENSOR.FFN_NORM:        ""blk.{bid}.ffn_norm"",
    MODEL_TENSOR.FFN_GATE:        ""blk.{bid}.ffn_gate"",
    MODEL_TENSOR.FFN_DOWN:        ""blk.{bid}.ffn_down"",
    MODEL_TENSOR.FFN_UP:          ""blk.{bid}.ffn_up"",
}

MODEL_TENSORS: dict[MODEL_ARCH, list[MODEL_TENSOR]] = {
    MODEL_ARCH.LLAMA: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ROPE_FREQS,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_Q,
        MODEL_TENSOR.ATTN_K,
        MODEL_TENSOR.ATTN_V,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.ATTN_ROT_EMBD,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_GATE,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.GPTNEOX: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.FALCON: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_NORM_2,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.BAICHUAN: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ROPE_FREQS,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_Q,
        MODEL_TENSOR.ATTN_K,
        MODEL_TENSOR.ATTN_V,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.ATTN_ROT_EMBD,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_GATE,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.STARCODER: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.POS_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.BERT: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.TOKEN_TYPES,
        MODEL_TENSOR.POS_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_Q,
        MODEL_TENSOR.ATTN_K,
        MODEL_TENSOR.ATTN_V,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.MPT: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.GPTJ: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_Q,
        MODEL_TENSOR.ATTN_K,
        MODEL_TENSOR.ATTN_V,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.PERSIMMON: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
        MODEL_TENSOR.ATTN_Q_NORM,
        MODEL_TENSOR.ATTN_K_NORM,
        MODEL_TENSOR.ATTN_ROT_EMBD,
    ],
    MODEL_ARCH.REFACT: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_Q,
        MODEL_TENSOR.ATTN_K,
        MODEL_TENSOR.ATTN_V,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_GATE,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.BLOOM: [
        MODEL_TENSOR.TOKEN_EMBD,
        MODEL_TENSOR.TOKEN_EMBD_NORM,
        MODEL_TENSOR.OUTPUT_NORM,
        MODEL_TENSOR.OUTPUT,
        MODEL_TENSOR.ATTN_NORM,
        MODEL_TENSOR.ATTN_QKV,
        MODEL_TENSOR.ATTN_OUT,
        MODEL_TENSOR.FFN_NORM,
        MODEL_TENSOR.FFN_DOWN,
        MODEL_TENSOR.FFN_UP,
    ],
    MODEL_ARCH.GPT2: [
        # TODO
    ],
    # TODO
}

# tensors that will not be serialized
MODEL_TENSOR_SKIP: dict[MODEL_ARCH, list[MODEL_TENSOR]] = {
    MODEL_ARCH.LLAMA: [
        MODEL_TENSOR.ROPE_FREQS,
        MODEL_TENSOR.ATTN_ROT_EMBD,
    ],
    MODEL_ARCH.BAICHUAN: [
        MODEL_TENSOR.ROPE_FREQS,
        MODEL_TENSOR.ATTN_ROT_EMBD,
    ],
    MODEL_ARCH.PERSIMMON: [
        MODEL_TENSOR.ROPE_FREQS,
    ]
}


class TensorNameMap:
    mappings_cfg: dict[MODEL_TENSOR, tuple[str, ...]] = {
        # Token embeddings
        MODEL_TENSOR.TOKEN_EMBD: (
            ""gpt_neox.embed_in"",                        # gptneox
            ""transformer.wte"",                          # gpt2 gpt-j mpt refact
            ""transformer.word_embeddings"",              # falcon
            ""word_embeddings"",                          # bloom
            ""model.embed_tokens"",                       # llama-hf
            ""tok_embeddings"",                           # llama-pth
            ""embeddings.word_embeddings"",               # bert
            ""language_model.embedding.word_embeddings"", # persimmon
        ),

        # Token type embeddings
        MODEL_TENSOR.TOKEN_TYPES: (
            ""embeddings.token_type_embeddings"",  # bert
        ),

        # Normalization of token embeddings
        MODEL_TENSOR.TOKEN_EMBD_NORM: (
            ""word_embeddings_layernorm"",  # bloom
            ""model.embed_layer_norm"",  # bluelm
        ),

        # Position embeddings
        MODEL_TENSOR.POS_EMBD: (
            ""transformer.wpe"",                 # gpt2
            ""embeddings.position_embeddings"",  # bert
        ),

        # Output
        MODEL_TENSOR.OUTPUT: (
            ""embed_out"",                # gptneox
            ""lm_head"",                  # gpt2 mpt falcon llama-hf baichuan
            ""output"",                   # llama-pth bloom
            ""word_embeddings_for_head"", # persimmon
        ),

        # Output norm
        MODEL_TENSOR.OUTPUT_NORM: (
            ""gpt_neox.final_layer_norm"",              # gptneox
            ""transformer.ln_f"",                       # gpt2 gpt-j falcon
            ""model.norm"",                             # llama-hf baichuan
            ""norm"",                                   # llama-pth
            ""embeddings.LayerNorm"",                   # bert
            ""transformer.norm_f"",                     # mpt
            ""ln_f"",                                   # refact bloom
            ""language_model.encoder.final_layernorm"", # persimmon
        ),

        # Rope frequencies
        MODEL_TENSOR.ROPE_FREQS: (
            ""rope.freqs"", # llama-pth
        ),
    }

    block_mappings_cfg: dict[MODEL_TENSOR, tuple[str, ...]] = {
        # Attention norm
        MODEL_TENSOR.ATTN_NORM: (
            ""gpt_neox.layers.{bid}.input_layernorm"",               # gptneox
            ""transformer.h.{bid}.ln_1"",                            # gpt2 gpt-j refact
            ""transformer.blocks.{bid}.norm_1"",                     # mpt
            ""transformer.h.{bid}.input_layernorm"",                 # falcon7b
            ""h.{bid}.input_layernorm"",                             # bloom
            ""transformer.h.{bid}.ln_mlp"",                          # falcon40b
            ""model.layers.{bid}.input_layernorm"",                  # llama-hf
            ""layers.{bid}.attention_norm"",                         # llama-pth
            ""encoder.layer.{bid}.attention.output.LayerNorm"",      # bert
            ""language_model.encoder.layers.{bid}.input_layernorm"", # persimmon
            ""model.layers.{bid}.ln1"",                              # yi
        ),

        # Attention norm 2
        MODEL_TENSOR.ATTN_NORM_2: (
            ""transformer.h.{bid}.ln_attn"", # falcon40b
        ),

        # Attention query-key-value
        MODEL_TENSOR.ATTN_QKV: (
            ""gpt_neox.layers.{bid}.attention.query_key_value"",                    # gptneox
            ""transformer.h.{bid}.attn.c_attn"",                                    # gpt2
            ""transformer.blocks.{bid}.attn.Wqkv"",                                 # mpt
            ""transformer.h.{bid}.self_attention.query_key_value"",                 # falcon
            ""h.{bid}.self_attention.query_key_value"",                             # bloom
            ""language_model.encoder.layers.{bid}.self_attention.query_key_value"", # persimmon
        ),

        # Attention query
        MODEL_TENSOR.ATTN_Q: (
            ""model.layers.{bid}.self_attn.q_proj"",       # llama-hf
            ""layers.{bid}.attention.wq"",                 # llama-pth
            ""encoder.layer.{bid}.attention.self.query"",  # bert
            ""transformer.h.{bid}.attn.q_proj"",           # gpt-j
        ),

        # Attention key
        MODEL_TENSOR.ATTN_K: (
            ""model.layers.{bid}.self_attn.k_proj"",     # llama-hf
            ""layers.{bid}.attention.wk"",               # llama-pth
            ""encoder.layer.{bid}.attention.self.key"",  # bert
            ""transformer.h.{bid}.attn.k_proj"",         # gpt-j
        ),

        # Attention value
        MODEL_TENSOR.ATTN_V: (
            ""model.layers.{bid}.self_attn.v_proj"",       # llama-hf
            ""layers.{bid}.attention.wv"",                 # llama-pth
            ""encoder.layer.{bid}.attention.self.value"",  # bert
            ""transformer.h.{bid}.attn.v_proj"",           # gpt-j
        ),

        # Attention output
        MODEL_TENSOR.ATTN_OUT: (
            ""gpt_neox.layers.{bid}.attention.dense"",                   # gptneox
            ""transformer.h.{bid}.attn.c_proj"",                         # gpt2 refact
            ""transformer.blocks.{bid}.attn.out_proj"",                  # mpt
            ""transformer.h.{bid}.self_attention.dense"",                # falcon
            ""h.{bid}.self_attention.dense"",                            # bloom
            ""model.layers.{bid}.self_attn.o_proj"",                     # llama-hf
            ""layers.{bid}.attention.wo"",                               # llama-pth
            ""encoder.layer.{bid}.attention.output.dense"",              # bert
            ""transformer.h.{bid}.attn.out_proj"",                       # gpt-j
            ""language_model.encoder.layers.{bid}.self_attention.dense"" # persimmon
        ),

        # Rotary embeddings
        MODEL_TENSOR.ATTN_ROT_EMBD: (
            ""model.layers.{bid}.self_attn.rotary_emb.inv_freq"",  # llama-hf
            ""layers.{bid}.attention.inner_attention.rope.freqs"", # llama-pth
        ),

        # Feed-forward norm
        MODEL_TENSOR.FFN_NORM: (
            ""gpt_neox.layers.{bid}.post_attention_layernorm"",               # gptneox
            ""transformer.h.{bid}.ln_2"",                                     # gpt2 refact
            ""h.{bid}.post_attention_layernorm"",                             # bloom
            ""transformer.blocks.{bid}.norm_2"",                              # mpt
            ""model.layers.{bid}.post_attention_layernorm"",                  # llama-hf
            ""layers.{bid}.ffn_norm"",                                        # llama-pth
            ""encoder.layer.{bid}.output.LayerNorm"",                         # bert
            ""language_model.encoder.layers.{bid}.post_attention_layernorm"", # persimmon
            ""model.layers.{bid}.ln2"",                                       # yi
        ),

        # Feed-forward up
        MODEL_TENSOR.FFN_UP: (
            ""gpt_neox.layers.{bid}.mlp.dense_h_to_4h"",               # gptneox
            ""transformer.h.{bid}.mlp.c_fc"",                          # gpt2
            ""transformer.blocks.{bid}.ffn.up_proj"",                  # mpt
            ""transformer.h.{bid}.mlp.dense_h_to_4h"",                 # falcon
            ""h.{bid}.mlp.dense_h_to_4h"",                             # bloom
            ""model.layers.{bid}.mlp.up_proj"",                        # llama-hf refact
            ""layers.{bid}.feed_forward.w3"",                          # llama-pth
            ""encoder.layer.{bid}.intermediate.dense"",                # bert
            ""transformer.h.{bid}.mlp.fc_in"",                         # gpt-j
            ""language_model.encoder.layers.{bid}.mlp.dense_h_to_4h"", # persimmon
        ),

        # Feed-forward gate
        MODEL_TENSOR.FFN_GATE: (
            ""model.layers.{bid}.mlp.gate_proj"", # llama-hf refact
            ""layers.{bid}.feed_forward.w1"",     # llama-pth
        ),

        # Feed-forward down
        MODEL_TENSOR.FFN_DOWN: (
            ""gpt_neox.layers.{bid}.mlp.dense_4h_to_h"",               # gptneox
            ""transformer.h.{bid}.mlp.c_proj"",                        # gpt2 refact
            ""transformer.blocks.{bid}.ffn.down_proj"",                # mpt
            ""transformer.h.{bid}.mlp.dense_4h_to_h"",                 # falcon
            ""h.{bid}.mlp.dense_4h_to_h"",                             # bloom
            ""model.layers.{bid}.mlp.down_proj"",                      # llama-hf
            ""layers.{bid}.feed_forward.w2"",                          # llama-pth
            ""encoder.layer.{bid}.output.dense"",                      # bert
            ""transformer.h.{bid}.mlp.fc_out"",                        # gpt-j
            ""language_model.encoder.layers.{bid}.mlp.dense_4h_to_h"", # persimmon
        ),

        MODEL_TENSOR.ATTN_Q_NORM: (
            ""language_model.encoder.layers.{bid}.self_attention.q_layernorm"",
        ),

        MODEL_TENSOR.ATTN_K_NORM: (
            ""language_model.encoder.layers.{bid}.self_attention.k_layernorm"",
        ),

        MODEL_TENSOR.ROPE_FREQS: (
            ""language_model.encoder.layers.{bid}.self_attention.rotary_emb.inv_freq"", # persimmon
        )
    }

    mapping: dict[str, tuple[MODEL_TENSOR, str]]

    def __init__(self, arch: MODEL_ARCH, n_blocks: int):
        self.mapping = {}
        for tensor, keys in self.mappings_cfg.items():
            if tensor not in MODEL_TENSORS[arch]:
                continue
            tensor_name = TENSOR_NAMES[tensor]
            self.mapping[tensor_name] = (tensor, tensor_name)
            for key in keys:
                self.mapping[key] = (tensor, tensor_name)
        for bid in range(n_blocks):
            for tensor, keys in self.block_mappings_cfg.items():
                if tensor not in MODEL_TENSORS[arch]:
                    continue
                tensor_name = TENSOR_NAMES[tensor].format(bid = bid)
                self.mapping[tensor_name] = (tensor, tensor_name)
                for key in keys:
                    key = key.format(bid = bid)
                    self.mapping[key] = (tensor, tensor_name)

    def get_type_and_name(self, key: str, try_suffixes: Sequence[str] = ()) -> tuple[MODEL_TENSOR, str] | None:
        result = self.mapping.get(key)
        if result is not None:
            return result
        for suffix in try_suffixes:
            if key.endswith(suffix):
                result = self.mapping.get(key[:-len(suffix)])
                if result is not None:
                    return (result[0], result[1] + suffix)
        return None

    def get_name(self, key: str, try_suffixes: Sequence[str] = ()) -> str | None:
        result = self.get_type_and_name(key, try_suffixes = try_suffixes)
        if result is None:
            return None
        return result[1]

    def get_type(self, key: str, try_suffixes: Sequence[str] = ()) -> MODEL_TENSOR | None:
        result = self.get_type_and_name(key, try_suffixes = try_suffixes)
        if result is None:
            return None
        return result[0]

    def __getitem__(self, key: str) -> str:
        try:
            return self.mapping[key][1]
        except KeyError:
            raise KeyError(key)

    def __contains__(self, key: str) -> bool:
        return key in self.mapping

    def __repr__(self) -> str:
        return repr(self.mapping)

def get_tensor_name_map(arch: MODEL_ARCH, n_blocks: int) -> TensorNameMap:
    return TensorNameMap(arch, n_blocks)

class TokenType(IntEnum):
    NORMAL       = 1
    UNKNOWN      = 2
    CONTROL      = 3
    USER_DEFINED = 4
    UNUSED       = 5
    BYTE         = 6

class RopeScalingType(Enum):
    NONE   = 'none'
    LINEAR = 'linear'
    YARN   = 'yarn'

#
# implementation
#


class GGMLQuantizationType(IntEnum):
    F32  = 0
    F16  = 1
    Q4_0 = 2
    Q4_1 = 3
    Q5_0 = 6
    Q5_1 = 7
    Q8_0 = 8
    Q8_1 = 9
    Q2_K = 10
    Q3_K = 11
    Q4_K = 12
    Q5_K = 13
    Q6_K = 14
    Q8_K = 15

class GGUFEndian(IntEnum):
    LITTLE = 0
    BIG = 1


class GGUFValueType(IntEnum):
    UINT8   = 0
    INT8    = 1
    UINT16  = 2
    INT16   = 3
    UINT32  = 4
    INT32   = 5
    FLOAT32 = 6
    BOOL    = 7
    STRING  = 8
    ARRAY   = 9
    UINT64  = 10
    INT64   = 11
    FLOAT64 = 12

    @staticmethod
    def get_type(val):
        if isinstance(val, str) or isinstance(val, bytes) or isinstance(val, bytearray):
            return GGUFValueType.STRING
        elif isinstance(val, list):
            return GGUFValueType.ARRAY
        elif isinstance(val, float):
            return GGUFValueType.FLOAT32
        elif isinstance(val, bool):
            return GGUFValueType.BOOL
        elif isinstance(val, int):
            return GGUFValueType.INT32
        # TODO: need help with 64-bit types in Python
        else:
            print(""Unknown type: ""+str(type(val)))
            sys.exit()


class GGUFWriter:
    fout: BufferedWriter
    arch: str
    offset_tensor = 0
    data_alignment = GGUF_DEFAULT_ALIGNMENT
    kv_data = b""""
    kv_data_count = 0
    ti_data = b""""
    ti_data_count = 0
    use_temp_file: bool
    temp_file: tempfile.SpooledTemporaryFile[bytes] | None = None
    tensors: list[tuple[np.ndarray[Any, Any], int]]

    @property
    def pack_prefix(self):
        if self.endianess==GGUFEndian.LITTLE:
            return ""<""
        else:
            return "">""

    def __init__(self, path: os.PathLike[str] | str, arch: str, use_temp_file = True, endianess=GGUFEndian.LITTLE):
        self.fout = open(path, ""wb"")
        self.arch = arch
        self.endianess = endianess
        self._simple_value_packing = {
            GGUFValueType.UINT8:   f""{self.pack_prefix}B"",
            GGUFValueType.INT8:    f""{self.pack_prefix}b"",
            GGUFValueType.UINT16:  f""{self.pack_prefix}H"",
            GGUFValueType.INT16:   f""{self.pack_prefix}h"",
            GGUFValueType.UINT32:  f""{self.pack_prefix}I"",
            GGUFValueType.INT32:   f""{self.pack_prefix}i"",
            GGUFValueType.FLOAT32: f""{self.pack_prefix}f"",
            GGUFValueType.UINT64:  f""{self.pack_prefix}Q"",
            GGUFValueType.INT64:   f""{self.pack_prefix}q"",
            GGUFValueType.FLOAT64: f""{self.pack_prefix}d"",
            GGUFValueType.BOOL:    ""?"" ,
        }
        self.add_architecture()
        self.use_temp_file = use_temp_file
        self.tensors = []
        endianess_str = ""Big Endian"" if self.endianess == GGUFEndian.BIG else ""Little Endian""
        print(f""This gguf file is for {endianess_str} only"")

    def write_header_to_file(self):
        self.fout.write(struct.pack(""<I"", GGUF_MAGIC))
        self.fout.write(struct.pack(f""{self.pack_prefix}I"", GGUF_VERSION))
        self.fout.write(struct.pack(f""{self.pack_prefix}Q"", self.ti_data_count))
        self.fout.write(struct.pack(f""{self.pack_prefix}Q"", self.kv_data_count))
        self.flush()
#        print(""tensors "" + str(self.ti_data_count) + "" kv "" + str(self.kv_data_count))

    def write_kv_data_to_file(self):
        self.fout.write(self.kv_data)
        self.flush()

    def write_ti_data_to_file(self):
        self.fout.write(self.ti_data)
        self.flush()

    def add_key(self, key: str):
        self.add_val(key, GGUFValueType.STRING, add_vtype=False)

    def add_uint8(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.UINT8)

    def add_int8(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.INT8)

    def add_uint16(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.UINT16)

    def add_int16(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.INT16)

    def add_uint32(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.UINT32)

    def add_int32(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.INT32)

    def add_float32(self, key: str, val: float):
        self.add_key(key)
        self.add_val(val, GGUFValueType.FLOAT32)

    def add_uint64(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.UINT64)

    def add_int64(self, key: str, val: int):
        self.add_key(key)
        self.add_val(val, GGUFValueType.INT64)

    def add_float64(self, key: str, val: float):
        self.add_key(key)
        self.add_val(val, GGUFValueType.FLOAT64)

    def add_bool(self, key: str, val: bool):
        self.add_key(key)
        self.add_val(val, GGUFValueType.BOOL)

    def add_string(self, key: str, val: str):
        if len(val) == 0:
            return
        self.add_key(key)
        self.add_val(val, GGUFValueType.STRING)

    def add_array(self, key: str, val: Sequence[Any]):
        if not isinstance(val, Sequence):
            raise ValueError(""Value must be a sequence for array type"")

        self.add_key(key)
        self.add_val(val, GGUFValueType.ARRAY)

    def add_val(self, val: Any, vtype: GGUFValueType | None = None, add_vtype: bool = True):
        if vtype is None:
            vtype = GGUFValueType.get_type(val)

        if add_vtype:
            self.kv_data += struct.pack(f""{self.pack_prefix}I"", vtype)
            self.kv_data_count += 1

        pack_fmt = self._simple_value_packing.get(vtype)
        if pack_fmt is not None:
            self.kv_data += struct.pack(pack_fmt, val)
        elif vtype == GGUFValueType.STRING:
            encoded_val = val.encode(""utf8"") if isinstance(val, str) else val
            self.kv_data += struct.pack(f""{self.pack_prefix}Q"", len(encoded_val))
            self.kv_data += encoded_val
        elif vtype == GGUFValueType.ARRAY and isinstance(val, Sequence) and len(val) > 0:
            ltype = GGUFValueType.get_type(val[0])
            if not all(GGUFValueType.get_type(i) is ltype for i in val[1:]):
                raise ValueError(""All items in a GGUF array should be of the same type"")
            self.kv_data += struct.pack(f""{self.pack_prefix}I"", ltype)
            self.kv_data += struct.pack(f""{self.pack_prefix}Q"", len(val))
            for item in val:
                self.add_val(item, add_vtype=False)
        else:
            raise ValueError(""Invalid GGUF metadata value type or value"")

    @staticmethod
    def ggml_pad(x: int, n: int) -> int:
        return ((x + n - 1) // n) * n

    def add_tensor_info(self, name: str, tensor_shape: Sequence[int], tensor_dtype: np.dtype[np.float16] | np.dtype[np.float32], tensor_nbytes: int, raw_dtype: GGMLQuantizationType | None = None):
        assert raw_dtype is not None or tensor_dtype in (np.float32, np.float16), ""Only F32 and F16 tensors are supported for now""

        encoded_name = name.encode(""utf8"")
        self.ti_data += struct.pack(f""{self.pack_prefix}Q"", len(encoded_name))
        self.ti_data += encoded_name
        n_dims = len(tensor_shape)
        self.ti_data += struct.pack(f""{self.pack_prefix}I"", n_dims)
        for i in range(n_dims):
            self.ti_data += struct.pack(f""{self.pack_prefix}Q"", tensor_shape[n_dims - 1 - i])
        if raw_dtype is None:
            dtype = GGMLQuantizationType.F32 if tensor_dtype == np.float32 else GGMLQuantizationType.F16
        else:
            dtype = raw_dtype
        self.ti_data += struct.pack(f""{self.pack_prefix}I"", dtype)
        self.ti_data += struct.pack(f""{self.pack_prefix}Q"", self.offset_tensor)
        self.offset_tensor += GGUFWriter.ggml_pad(tensor_nbytes, self.data_alignment)
        self.ti_data_count += 1

    def add_tensor(self, name: str, tensor: np.ndarray[Any, Any], raw_shape: Sequence[int] | None = None, raw_dtype: GGMLQuantizationType | None = None):
        if self.endianess == GGUFEndian.BIG:
            tensor.byteswap(inplace=True)
        if self.use_temp_file and self.temp_file is None:
            fp = tempfile.SpooledTemporaryFile(mode=""w+b"", max_size=256*1024*1024)
            fp.seek(0)
            self.temp_file = fp

        shape: Sequence[int] = raw_shape if raw_shape is not None else tensor.shape
        self.add_tensor_info(name, shape, tensor.dtype, tensor.nbytes, raw_dtype = raw_dtype)

        pad = GGUFWriter.ggml_pad(tensor.nbytes, self.data_alignment) - tensor.nbytes

        if  self.temp_file is None:
            self.tensors.append((tensor, pad))
            return

        tensor.tofile(self.temp_file)

        if pad != 0:
            self.temp_file.write(bytes([0] * pad))

    def write_padding(self, fp: BinaryIO, n: int, align: int | None = None):
        pad = GGUFWriter.ggml_pad(n, align if align is not None else self.data_alignment) - n
        if pad != 0:
            fp.write(bytes([0] * pad))

    def write_tensor_data(self, tensor: np.ndarray[Any, Any]):
        if self.endianess==GGUFEndian.BIG:
            tensor.byteswap(inplace=True)
        self.write_padding(self.fout, self.fout.tell())
        tensor.tofile(self.fout)
        self.write_padding(self.fout, tensor.nbytes)

    def write_tensors_to_file(self):
        self.write_ti_data_to_file()

        self.write_padding(self.fout, self.fout.tell())

        if self.temp_file is None:
            for (currtensor, currpad) in self.tensors:
                currtensor.tofile(self.fout)
                if currpad != 0:
                    self.fout.write(bytes([0] * currpad))
            return

        self.temp_file.seek(0)

        shutil.copyfileobj(self.temp_file, self.fout)
        self.flush()
        self.temp_file.close()

    def flush(self):
        self.fout.flush()

    def close(self):
        self.fout.close()

    def add_architecture(self):
        self.add_string(KEY_GENERAL_ARCHITECTURE, self.arch)

    def add_author(self, author: str):
        self.add_string(KEY_GENERAL_AUTHOR, author)

    def add_tensor_data_layout(self, layout: str):
        self.add_string(KEY_TENSOR_DATA_LAYOUT.format(arch=self.arch), layout)

    def add_url(self, url: str):
        self.add_string(KEY_GENERAL_URL, url)

    def add_description(self, description: str):
        self.add_string(KEY_GENERAL_DESCRIPTION, description)

    def add_source_url(self, url: str):
        self.add_string(KEY_GENERAL_SOURCE_URL, url)

    def add_source_hf_repo(self, repo: str):
        self.add_string(KEY_GENERAL_SOURCE_HF_REPO, repo)

    def add_file_type(self, ftype: int):
        self.add_uint32(KEY_GENERAL_FILE_TYPE, ftype)

    def add_name(self, name: str):
        self.add_string(KEY_GENERAL_NAME, name)

    def add_quantization_version(self, quantization_version: GGMLQuantizationType):
        self.add_uint32(
            KEY_GENERAL_QUANTIZATION_VERSION, quantization_version)

    def add_custom_alignment(self, alignment: int):
        self.data_alignment = alignment
        self.add_uint32(KEY_GENERAL_ALIGNMENT, alignment)

    def add_context_length(self, length: int):
        self.add_uint32(
            KEY_CONTEXT_LENGTH.format(arch=self.arch), length)

    def add_embedding_length(self, length: int):
        self.add_uint32(
            KEY_EMBEDDING_LENGTH.format(arch=self.arch), length)

    def add_block_count(self, length: int):
        self.add_uint32(
            KEY_BLOCK_COUNT.format(arch=self.arch), length)

    def add_feed_forward_length(self, length: int):
        self.add_uint32(
            KEY_FEED_FORWARD_LENGTH.format(arch=self.arch), length)

    def add_parallel_residual(self, use: bool):
        self.add_bool(
            KEY_USE_PARALLEL_RESIDUAL.format(arch=self.arch), use)

    def add_head_count(self, count: int):
        self.add_uint32(
            KEY_ATTENTION_HEAD_COUNT.format(arch=self.arch), count)

    def add_head_count_kv(self, count: int):
        self.add_uint32(
            KEY_ATTENTION_HEAD_COUNT_KV.format(arch=self.arch), count)

    def add_max_alibi_bias(self, bias: float):
        self.add_float32(
            KEY_ATTENTION_MAX_ALIBI_BIAS.format(arch=self.arch), bias)

    def add_clamp_kqv(self, value: float):
        self.add_float32(
            KEY_ATTENTION_CLAMP_KQV.format(arch=self.arch), value)

    def add_layer_norm_eps(self, value: float):
        self.add_float32(
            KEY_ATTENTION_LAYERNORM_EPS.format(arch=self.arch), value)

    def add_layer_norm_rms_eps(self, value: float):
        self.add_float32(
            KEY_ATTENTION_LAYERNORM_RMS_EPS.format(arch=self.arch), value)

    def add_rope_dimension_count(self, count: int):
        self.add_uint32(
            KEY_ROPE_DIMENSION_COUNT.format(arch=self.arch), count)

    def add_rope_freq_base(self, value: float):
        self.add_float32(KEY_ROPE_FREQ_BASE.format(arch=self.arch), value)

    def add_rope_scaling_type(self, value: RopeScalingType):
        self.add_string(KEY_ROPE_SCALING_TYPE.format(arch=self.arch), value.value)

    def add_rope_scaling_factor(self, value: float):
        self.add_float32(KEY_ROPE_SCALING_FACTOR.format(arch=self.arch), value)

    def add_rope_scaling_orig_ctx_len(self, value: int):
        self.add_uint32(KEY_ROPE_SCALING_ORIG_CTX_LEN.format(arch=self.arch), value)

    def add_rope_scaling_finetuned(self, value: bool):
        self.add_bool(KEY_ROPE_SCALING_FINETUNED.format(arch=self.arch), value)

    def add_tokenizer_model(self, model: str):
        self.add_string(KEY_TOKENIZER_MODEL, model)

    def add_token_list(self, tokens: Sequence[str] | Sequence[bytes] | Sequence[bytearray]):
        self.add_array(KEY_TOKENIZER_LIST, tokens)

    def add_token_merges(self, merges: Sequence[str] | Sequence[bytes] | Sequence[bytearray]):
        self.add_array(KEY_TOKENIZER_MERGES, merges)

    def add_token_types(self, types: Sequence[TokenType] | Sequence[int]):
        self.add_array(KEY_TOKENIZER_TOKEN_TYPE, types)

    def add_token_scores(self, scores: Sequence[float]):
        self.add_array(KEY_TOKENIZER_SCORES, scores)

    def add_bos_token_id(self, id: int):
        self.add_uint32(KEY_TOKENIZER_BOS_ID, id)

    def add_eos_token_id(self, id: int):
        self.add_uint32(KEY_TOKENIZER_EOS_ID, id)

    def add_unk_token_id(self, id: int):
        self.add_uint32(KEY_TOKENIZER_UNK_ID, id)

    def add_sep_token_id(self, id: int):
        self.add_uint32(KEY_TOKENIZER_SEP_ID, id)

    def add_pad_token_id(self, id: int):
        self.add_uint32(KEY_TOKENIZER_PAD_ID, id)


class SpecialVocab:
    load_merges: bool = False
    merges: list[str] = []
    special_token_types: tuple[str, ...] = ('bos', 'eos', 'unk', 'sep', 'pad')
    special_token_ids: dict[str, int] = {}
    n_vocab: int | None = None

    def __init__(
        self, path: str | os.PathLike[str], load_merges: bool = False,
        special_token_types: tuple[str, ...] | None = None,
        n_vocab: int | None = None,
    ):
        self.special_token_ids = {}
        self.n_vocab = n_vocab
        self.load_merges = load_merges
        if special_token_types is not None:
            self.special_token_types = special_token_types
        self._load(Path(path))

    def _load(self, path: Path) -> None:
        if not self._try_load_from_tokenizer_json(path):
            self._try_load_from_config_json(path)
        if self.load_merges and len(self.merges) == 0:
            self._try_load_merges_txt(path)

    def _try_load_merges_txt(self, path: Path) -> bool:
        merges_file = path / 'merges.txt'
        if not merges_file.is_file():
            return False
        with open(merges_file, 'r') as fp:
            first_line = next(fp, '').strip()
            if not first_line.startswith('#'):
                fp.seek(0)
                line_num = 0
            else:
                line_num = 1
            merges = []
            for line in fp:
                line_num += 1
                line = line.strip()
                if len(line) == 0:
                    continue
                parts = line.split(None, 3)
                if len(parts) != 2:
                    print(f'gguf: WARNING: {merges_file.name}: Line {line_num}: Entry malformed, ignoring',
                        file = sys.stderr)
                    continue
                merges.append(f'{parts[0]} {parts[1]}')
        self.merges = merges
        return True


    def _set_special_token(self, typ: str, tid: Any):
        if not isinstance(tid, int) or tid < 0:
            return
        if self.n_vocab is None or tid < self.n_vocab:
            self.special_token_ids[typ] = tid
            return
        print(f'gguf: WARNING: Special token type {typ}, id {tid} out of range, must be under {self.n_vocab} - skipping',
            file = sys.stderr)


    def _try_load_from_tokenizer_json(self, path: Path) -> bool:
        tokenizer_file = path / 'tokenizer.json'
        if not tokenizer_file.is_file():
            return False
        with open(tokenizer_file, encoding = 'utf-8') as f:
            tokenizer = json.load(f)
        if self.load_merges:
            merges = tokenizer.get('model', {}).get('merges')
            if isinstance(merges, list) and len(merges) > 0 and isinstance(merges[0], str):
                self.merges = merges
        tokenizer_config_file = path / 'tokenizer_config.json'
        added_tokens = tokenizer.get('added_tokens')
        if added_tokens is None or not tokenizer_config_file.is_file():
            return True
        with open(tokenizer_config_file, encoding = 'utf-8') as f:
            tokenizer_config = json.load(f)
        for typ in self.special_token_types:
            entry = tokenizer_config.get(f'{typ}_token')
            if isinstance(entry, str):
                tc_content = entry
            elif isinstance(entry, dict):
                entry_content = entry.get('content')
                if not isinstance(entry_content, str):
                    continue
                tc_content = entry_content
            else:
                continue
            # We only need the first match here.
            maybe_token_id = next((
                atok.get('id') for atok in added_tokens
                if atok.get('content') == tc_content), None)
            self._set_special_token(typ, maybe_token_id)
        return True

    def _try_load_from_config_json(self, path: Path) -> bool:
        config_file = path / 'config.json'
        if not config_file.is_file():
            return False
        with open(config_file, encoding = 'utf-8') as f:
            config = json.load(f)
        for typ in self.special_token_types:
            self._set_special_token(typ, config.get(f'{typ}_token_id'))
        return True

    def add_to_gguf(self, gw: GGUFWriter, quiet: bool = False) -> None:
        if len(self.merges) > 0:
            if not quiet:
                print(f'gguf: Adding {len(self.merges)} merge(s).')
            gw.add_token_merges(self.merges)
        elif self.load_merges:
            print('gguf: WARNING: Adding merges requested but no merges found, output may be non-functional.',
                file = sys.stderr)
        for typ, tokid in self.special_token_ids.items():
            handler: Callable[[int], None] | None = getattr(gw, f'add_{typ}_token_id', None)
            if handler is None:
                print(f'gguf: WARNING: No handler for special token type {typ} with id {tokid} - skipping', file = sys.stderr)
                continue
            if not quiet:
                print(f'gguf: Setting special token type {typ} to {tokid}')
            handler(tokid)

    def __repr__(self) -> str:
        return f'<SpecialVocab with {len(self.merges)} merges and special tokens {self.special_token_ids or ""unset""}>'


# Example usage:
if __name__ == ""__main__"":
    # Example usage with a file
    gguf_writer = GGUFWriter(""example.gguf"", ""llama"")

    gguf_writer.add_architecture()
    gguf_writer.add_block_count(12)
    gguf_writer.add_uint32(""answer"", 42)  # Write a 32-bit integer
    gguf_writer.add_float32(""answer_in_float"", 42.0)  # Write a 32-bit float
    gguf_writer.add_custom_alignment(64)

    tensor1 = np.ones((32,), dtype=np.float32) * 100.0
    tensor2 = np.ones((64,), dtype=np.float32) * 101.0
    tensor3 = np.ones((96,), dtype=np.float32) * 102.0

    gguf_writer.add_tensor(""tensor1"", tensor1)
    gguf_writer.add_tensor(""tensor2"", tensor2)
    gguf_writer.add_tensor(""tensor3"", tensor3)

    gguf_writer.write_header_to_file()
    gguf_writer.write_kv_data_to_file()
    gguf_writer.write_tensors_to_file()

    gguf_writer.close()"
JecysGUx,xmrig_del.py,Thunder-Menu,Python,Monday 20th of November 2023 11:15:04 PM CDT,"import shutil
import os

# Chemin du dossier à supprimer
dossier_a_supprimer = r'C:\Program Files\Common Files\xmrig'

try:
    # Vérification si le dossier existe avant de le supprimer
    if os.path.exists(dossier_a_supprimer):
        # Suppression du dossier et de son contenu
        shutil.rmtree(dossier_a_supprimer)
        print(f""Dossier {dossier_a_supprimer} supprimé avec succès."")
    else:
        print(f""Le dossier {dossier_a_supprimer} n'existe pas."")
except Exception as e:
    print(f""Erreur lors de la suppression du dossier : {e}"")
"
eJLtmRR6,Basic Card 2.0 (TH Character Profile Code),StarmanSymphony,HTML,Monday 20th of November 2023 11:12:24 PM CDT,"<!--

    Basic Card 2.0
    A code by StarmanSymphony
    
    - You may edit this code to your liking.
    - You may frankenstein this code with others, as long as the other coder(s) allow it.
    - Do not move or remove the credit.
    - Remember to turn WYSIWYG off before using this code!
    
    COLOURS USED:
    - Bootstrap Primary - Basically everything lol

-->

<div class=""mx-auto"" style=""max-width:640px"">
    <div class=""card card-outline-primary bg-faded"" style=""border-width:3px;border-radius:0px 20px"">
        <div class=""row no-gutters"">
            
            <!-- IMAGE -->
            <div class=""col-3 p-0"">
                <div class=""card rounded-0 border-0"" style=""background:url(IMG URL) center;height:100%"">
                    <!-- Image credit: DO NOT REMOVE -->
                    <a href=""CREDIT URL"" data-toggle=""tooltip"" data-placement=""auto"" title=""Image/Art by [source/artist]"" class=""p-2 align-self-start"">
                        <i class=""fa fa-sparkle""></i>
                    </a>
                </div>
            </div>
            
            <div class=""col-9 p-2 px-3"">
                <!-- AGE, ORIENTATION/GENDER, PRONOUNS -->
                <div class=""d-flex flex-wrap text-primary h3 py-3 text-uppercase"">
                    
                    <!-- Age -->
                    <span>
                        <i class=""fa fa-stars mr-1"" style=""font-style:italic""></i>
                        <i>(Age)</i>
                    </span>
                    
                    <!-- Divider 1 -->
                    <hr class=""mx-3 text-primary"" style=""flex-grow:1; margin-top:13px; border-width:1px;border-style:dashed"">
                    
                    <!-- Flag 1 -->
                    <!-- Pride flags used: https://toyhou.se/16962387.html-pride-flags -->
                    <!-- For custom styling used: remove class ""rounded"", add ""line=height:30px;width:40px;border-radius: 0px 8px -->
                    <span>
                        <div class=""d-inline-block mx-1"" style=""background-image:linear-gradient(#ff69b4,#ff69b4 12.5%,#ff0000 12.5%,#ff0000 25%,#ff8e00 25%,#ff8e00 37.5%,#ffff02 37.5%,#ffff02 50%,#008e00 50%,#008e00 62.5%,#00c0c0 62.5%,#00c0c0 75%,#400098 75%,#400098 87.5%,#8e008e 87.5%);line-height:30px;width:40px;border-radius:0px 8px"">&nbsp;</div>
                    </span>
                    
                    <!-- Flag 2 -->
                    <!-- For custom styling used: remove class ""rounded"", add ""line=height:30px;width:40px;border-radius: 8px 0px -->
                    <span>
                        <div class=""d-inline-block mx-1"" style=""background-image:linear-gradient(#5ac7ed,#5ac7ed 20%,#efa4b1 20%,#efa4b1 40%,#fff 40%,#fff 60%,#efa4b1 60%,#efa4b1 80%,#5ac7ed 80%);line-height:30px;width:40px;border-radius:8px 0px"">&nbsp;</div>
                    </span>
                    
                    <!-- Divider 2 -->
                    <hr class=""mx-3 text-primary"" style=""flex-grow:1; margin-top:13px; border-width:1px;border-style:dashed"">
                    
                    <!-- Pronouns -->
                    <span><i>(Pronouns)</i></span>
                </div>
                
                <!-- DIVIDER -->
                <hr class=""my-2"" style=""border-width:3px"">
                
                <!-- ABOUT SECTION -->
                <div class=""ui-accordion"">
                    <div class=""ui-accordion-content p-1 pr-2"" style=""height:193px"">
                        This is your about section! It will scroll if you add enough content.
                    </div>
                </div>
            </div>
            
            <!-- CARD FOOTER -->
            <div class=""card-primary card-inverse card-header border-0 rounded-0 flex-fill"" style=""border-radius:0px 0px 0px 10px"">
                <i class=""fa fa-user fa-xl""></i>
                <span class=""text-uppercase h2 px-3""><i>Character Name</i></span>
                
                <!-- Code credit: DO NOT REMOVE -->
                <span data-toggle=""tooltip"" title=""Code by StarmanSymphony"" class=""float-right"">
                    <a href=""https://toyhou.se/GhostOfStarman""><i class=""fa fa-star text-light""></i></a>
                </span>
            </div>
            
        </div>
    </div>
</div>"
Gps7AUW1,Untitled,Madi_Perth,Linden Scripting,Monday 20th of November 2023 10:35:52 PM CDT,"integer linkListDeleteSubList(string linkName, integer start, integer end)
{
    integer i;
    list tl;
    integer tmpEnd = (integer) llLinksetDataRead(linkName);
    string  tmpData;

    llResetTime();
    // remove entries from linkName, start to end
    for(i = start; i < (end + 1); ++i)
        tl = llLinksetDataDeleteFound(""^"" + linkName+""\\|""+(string) i +"":"", """");

    llLinksetDataWrite(linkName, (string) (start-1));
    
    for(i = (end+1); i < (tmpEnd+1); i++)
    {
        // BLINK(i, RED, BLUE);
        tmpData = linkList2String(linkName, i);
        addLinkData(linkName, tmpData);
        tl = llLinksetDataDeleteFound(""^"" + linkName+""\\|""+(string) i +"":"", """");
    }
    DS(""End time : "" + (string)llGetTime());
    return i;
}"
4XFA6B8m,Nigerian scammers [20-11-3/2023],bombaires,AIMMS,Monday 20th of November 2023 10:34:33 PM CDT,"<a href=""mailto:ooffice614@gmail.com"">ooffice614@gmail.com</a>
<a href=""mailto:oo.ff.ic.e.61.4@gmail.com"">oo.ff.ic.e.61.4@gmail.com</a>
<a href=""mailto:oof.fic.e.61.4@gmail.com"">oof.fic.e.61.4@gmail.com</a>
<a href=""mailto:oof.fi.c.e.61.4@gmail.com"">oof.fi.c.e.61.4@gmail.com</a>
<a href=""mailto:oo.f.f.ice.61.4@gmail.com"">oo.f.f.ice.61.4@gmail.com</a>
<a href=""mailto:oo.ff.i.ce.6.1.4@gmail.com"">oo.ff.i.ce.6.1.4@gmail.com</a>
<a href=""mailto:oof.fic.e.6.1.4@gmail.com"">oof.fic.e.6.1.4@gmail.com</a>
<a href=""mailto:oo.f.f.i.ce.6.14@gmail.com"">oo.f.f.i.ce.6.14@gmail.com</a>
<a href=""mailto:o.o.ffice.614@gmail.com"">o.o.ffice.614@gmail.com</a>
<a href=""mailto:o.offic.e6.14@gmail.com"">o.offic.e6.14@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce6.14@gmail.com"">o.o.f.fi.ce6.14@gmail.com</a>
<a href=""mailto:o.offi.ce61.4@gmail.com"">o.offi.ce61.4@gmail.com</a>
<a href=""mailto:oof.fi.ce.6.14@gmail.com"">oof.fi.ce.6.14@gmail.com</a>
<a href=""mailto:oof.f.ic.e.6.1.4@gmail.com"">oof.f.ic.e.6.1.4@gmail.com</a>
<a href=""mailto:oof.fi.c.e.6.1.4@gmail.com"">oof.fi.c.e.6.1.4@gmail.com</a>
<a href=""mailto:oof.fi.ce.61.4@gmail.com"">oof.fi.ce.61.4@gmail.com</a>
<a href=""mailto:oof.fi.ce6.1.4@gmail.com"">oof.fi.ce6.1.4@gmail.com</a>
<a href=""mailto:ooff.i.c.e614@gmail.com"">ooff.i.c.e614@gmail.com</a>
<a href=""mailto:o.office6.1.4@gmail.com"">o.office6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.f.ice.614@gmail.com"">o.o.f.f.ice.614@gmail.com</a>
<a href=""mailto:oo.ffic.e.6.1.4@gmail.com"">oo.ffic.e.6.1.4@gmail.com</a>
<a href=""mailto:ooff.i.ce.6.1.4@gmail.com"">ooff.i.ce.6.1.4@gmail.com</a>
<a href=""mailto:oo.ff.i.ce.614@gmail.com"">oo.ff.i.ce.614@gmail.com</a>
<a href=""mailto:oo.ff.ice.61.4@gmail.com"">oo.ff.ice.61.4@gmail.com</a>
<a href=""mailto:oo.ffi.c.e6.14@gmail.com"">oo.ffi.c.e6.14@gmail.com</a>
<a href=""mailto:oo.ff.ic.e.6.1.4@gmail.com"">oo.ff.ic.e.6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.fic.e.614@gmail.com"">o.o.f.fic.e.614@gmail.com</a>
<a href=""mailto:oof.fice.6.14@gmail.com"">oof.fice.6.14@gmail.com</a>
<a href=""mailto:ooffi.ce61.4@gmail.com"">ooffi.ce61.4@gmail.com</a>
<a href=""mailto:o.o.ffic.e.6.14@gmail.com"">o.o.ffic.e.6.14@gmail.com</a>
<a href=""mailto:o.o.f.f.i.ce.6.1.4@gmail.com"">o.o.f.f.i.ce.6.1.4@gmail.com</a>
<a href=""mailto:oo.ff.i.ce.61.4@gmail.com"">oo.ff.i.ce.61.4@gmail.com</a>
<a href=""mailto:oo.f.f.ic.e.61.4@gmail.com"">oo.f.f.ic.e.61.4@gmail.com</a>
<a href=""mailto:o.o.f.fic.e.6.1.4@gmail.com"">o.o.f.fic.e.6.1.4@gmail.com</a>
<a href=""mailto:oof.f.i.ce6.1.4@gmail.com"">oof.f.i.ce6.1.4@gmail.com</a>
<a href=""mailto:o.offic.e614@gmail.com"">o.offic.e614@gmail.com</a>
<a href=""mailto:oo.f.f.ic.e614@gmail.com"">oo.f.f.ic.e614@gmail.com</a>
<a href=""mailto:o.o.ffi.c.e614@gmail.com"">o.o.ffi.c.e614@gmail.com</a>
<a href=""mailto:oo.f.fi.c.e.6.14@gmail.com"">oo.f.fi.c.e.6.14@gmail.com</a>
<a href=""mailto:o.o.ffi.ce.61.4@gmail.com"">o.o.ffi.ce.61.4@gmail.com</a>
<a href=""mailto:ooffi.ce6.1.4@gmail.com"">ooffi.ce6.1.4@gmail.com</a>
<a href=""mailto:o.o.ff.i.c.e6.14@gmail.com"">o.o.ff.i.c.e6.14@gmail.com</a>
<a href=""mailto:oof.fic.e.6.14@gmail.com"">oof.fic.e.6.14@gmail.com</a>
<a href=""mailto:oof.f.ice.6.1.4@gmail.com"">oof.f.ice.6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce614@gmail.com"">o.o.f.fi.ce614@gmail.com</a>
<a href=""mailto:o.o.ffic.e61.4@gmail.com"">o.o.ffic.e61.4@gmail.com</a>
<a href=""mailto:oo.ff.ic.e614@gmail.com"">oo.ff.ic.e614@gmail.com</a>
<a href=""mailto:o.o.ff.i.c.e.6.14@gmail.com"">o.o.ff.i.c.e.6.14@gmail.com</a>
<a href=""mailto:oo.f.fic.e61.4@gmail.com"">oo.f.fic.e61.4@gmail.com</a>
<a href=""mailto:oo.f.fi.ce6.1.4@gmail.com"">oo.f.fi.ce6.1.4@gmail.com</a>
<a href=""mailto:o.off.ic.e6.14@gmail.com"">o.off.ic.e6.14@gmail.com</a>
<a href=""mailto:oo.f.f.i.c.e.6.1.4@gmail.com"">oo.f.f.i.c.e.6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.f.ice.6.1.4@gmail.com"">o.o.f.f.ice.6.1.4@gmail.com</a>
<a href=""mailto:oo.f.f.i.ce61.4@gmail.com"">oo.f.f.i.ce61.4@gmail.com</a>
<a href=""mailto:o.of.fice61.4@gmail.com"">o.of.fice61.4@gmail.com</a>
<a href=""mailto:oo.ffi.ce.614@gmail.com"">oo.ffi.ce.614@gmail.com</a>
<a href=""mailto:o.off.ice6.14@gmail.com"">o.off.ice6.14@gmail.com</a>
<a href=""mailto:ooffic.e6.1.4@gmail.com"">ooffic.e6.1.4@gmail.com</a>
<a href=""mailto:oof.f.i.ce.6.14@gmail.com"">oof.f.i.ce.6.14@gmail.com</a>
<a href=""mailto:oo.ffi.ce.61.4@gmail.com"">oo.ffi.ce.61.4@gmail.com</a>
<a href=""mailto:oo.ff.ic.e6.14@gmail.com"">oo.ff.ic.e6.14@gmail.com</a>
<a href=""mailto:oof.fi.ce614@gmail.com"">oof.fi.ce614@gmail.com</a>
<a href=""mailto:ooff.ic.e.6.14@gmail.com"">ooff.ic.e.6.14@gmail.com</a>
<a href=""mailto:o.of.f.i.ce.614@gmail.com"">o.of.f.i.ce.614@gmail.com</a>
<a href=""mailto:o.o.f.f.ic.e6.14@gmail.com"">o.o.f.f.ic.e6.14@gmail.com</a>
<a href=""mailto:o.o.ffic.e.6.1.4@gmail.com"">o.o.ffic.e.6.1.4@gmail.com</a>
<a href=""mailto:o.of.f.i.ce.6.1.4@gmail.com"">o.of.f.i.ce.6.1.4@gmail.com</a>
<a href=""mailto:ooffi.c.e.614@gmail.com"">ooffi.c.e.614@gmail.com</a>
<a href=""mailto:oo.ff.i.c.e.6.1.4@gmail.com"">oo.ff.i.c.e.6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.fi.c.e.6.14@gmail.com"">o.o.f.fi.c.e.6.14@gmail.com</a>
<a href=""mailto:o.off.i.ce6.1.4@gmail.com"">o.off.i.ce6.1.4@gmail.com</a>
<a href=""mailto:oof.f.i.c.e6.1.4@gmail.com"">oof.f.i.c.e6.1.4@gmail.com</a>
<a href=""mailto:o.of.f.ic.e.6.14@gmail.com"">o.of.f.ic.e.6.14@gmail.com</a>
<a href=""mailto:o.of.fi.ce.614@gmail.com"">o.of.fi.ce.614@gmail.com</a>
<a href=""mailto:oo.f.f.i.ce.614@gmail.com"">oo.f.f.i.ce.614@gmail.com</a>
<a href=""mailto:o.o.ffi.ce.614@gmail.com"">o.o.ffi.ce.614@gmail.com</a>
<a href=""mailto:o.office.6.14@gmail.com"">o.office.6.14@gmail.com</a>
<a href=""mailto:oo.ffic.e614@gmail.com"">oo.ffic.e614@gmail.com</a>
<a href=""mailto:o.off.ice6.1.4@gmail.com"">o.off.ice6.1.4@gmail.com</a>
<a href=""mailto:o.of.f.i.ce6.14@gmail.com"">o.of.f.i.ce6.14@gmail.com</a>
<a href=""mailto:oof.f.i.ce614@gmail.com"">oof.f.i.ce614@gmail.com</a>
<a href=""mailto:o.off.i.c.e.6.14@gmail.com"">o.off.i.c.e.6.14@gmail.com</a>
<a href=""mailto:oo.ff.i.c.e6.1.4@gmail.com"">oo.ff.i.c.e6.1.4@gmail.com</a>
<a href=""mailto:o.offi.c.e6.14@gmail.com"">o.offi.c.e6.14@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce.61.4@gmail.com"">o.o.f.fi.ce.61.4@gmail.com</a>
<a href=""mailto:o.of.fic.e.614@gmail.com"">o.of.fic.e.614@gmail.com</a>
<a href=""mailto:o.office.61.4@gmail.com"">o.office.61.4@gmail.com</a>
<a href=""mailto:o.offi.ce.614@gmail.com"">o.offi.ce.614@gmail.com</a>
<a href=""mailto:oof.f.i.c.e.61.4@gmail.com"">oof.f.i.c.e.61.4@gmail.com</a>
<a href=""mailto:o.o.ff.ic.e.6.14@gmail.com"">o.o.ff.ic.e.6.14@gmail.com</a>
<a href=""mailto:oof.f.ice614@gmail.com"">oof.f.ice614@gmail.com</a>
<a href=""mailto:o.of.f.i.c.e614@gmail.com"">o.of.f.i.c.e614@gmail.com</a>
<a href=""mailto:o.of.f.i.c.e6.1.4@gmail.com"">o.of.f.i.c.e6.1.4@gmail.com</a>
<a href=""mailto:o.of.fi.c.e.6.14@gmail.com"">o.of.fi.c.e.6.14@gmail.com</a>
<a href=""mailto:oof.f.i.c.e61.4@gmail.com"">oof.f.i.c.e61.4@gmail.com</a>
<a href=""mailto:o.of.f.ic.e.6.1.4@gmail.com"">o.of.f.ic.e.6.1.4@gmail.com</a>
<a href=""mailto:oof.f.ice.614@gmail.com"">oof.f.ice.614@gmail.com</a>
<a href=""mailto:oof.fic.e614@gmail.com"">oof.fic.e614@gmail.com</a>
<a href=""mailto:o.o.f.fice6.1.4@gmail.com"">o.o.f.fice6.1.4@gmail.com</a>
<a href=""mailto:oo.f.fic.e.6.14@gmail.com"">oo.f.fic.e.6.14@gmail.com</a>
<a href=""mailto:o.offi.c.e.61.4@gmail.com"">o.offi.c.e.61.4@gmail.com</a>
<a href=""mailto:o.of.fice6.14@gmail.com"">o.of.fice6.14@gmail.com</a>
<a href=""mailto:oo.f.fice.6.14@gmail.com"">oo.f.fice.6.14@gmail.com</a>
<a href=""mailto:o.o.ffice.6.1.4@gmail.com"">o.o.ffice.6.1.4@gmail.com</a>
<a href=""mailto:oof.fi.c.e61.4@gmail.com"">oof.fi.c.e61.4@gmail.com</a>
<a href=""mailto:ooffi.c.e61.4@gmail.com"">ooffi.c.e61.4@gmail.com</a>
<a href=""mailto:oo.ffice.6.1.4@gmail.com"">oo.ffice.6.1.4@gmail.com</a>
<a href=""mailto:oo.f.f.ice.6.1.4@gmail.com"">oo.f.f.ice.6.1.4@gmail.com</a>
<a href=""mailto:o.off.i.c.e614@gmail.com"">o.off.i.c.e614@gmail.com</a>
<a href=""mailto:o.offic.e.6.1.4@gmail.com"">o.offic.e.6.1.4@gmail.com</a>
<a href=""mailto:o.offi.c.e.6.14@gmail.com"">o.offi.c.e.6.14@gmail.com</a>
<a href=""mailto:ooffi.c.e.61.4@gmail.com"">ooffi.c.e.61.4@gmail.com</a>
<a href=""mailto:ooffice614@gmail.com"">ooffice614@gmail.com</a>
<a href=""mailto:o.o.f.fic.e6.14@gmail.com"">o.o.f.fic.e6.14@gmail.com</a>
<a href=""mailto:ooffi.c.e.6.1.4@gmail.com"">ooffi.c.e.6.1.4@gmail.com</a>
<a href=""mailto:o.off.ice.6.14@gmail.com"">o.off.ice.6.14@gmail.com</a>
<a href=""mailto:oo.ff.ic.e.6.14@gmail.com"">oo.ff.ic.e.6.14@gmail.com</a>
<a href=""mailto:oof.fice6.14@gmail.com"">oof.fice6.14@gmail.com</a>
<a href=""mailto:ooffice6.14@gmail.com"">ooffice6.14@gmail.com</a>
<a href=""mailto:o.o.f.f.i.c.e6.1.4@gmail.com"">o.o.f.f.i.c.e6.1.4@gmail.com</a>
<a href=""mailto:o.offic.e.61.4@gmail.com"">o.offic.e.61.4@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce.614@gmail.com"">o.o.f.fi.ce.614@gmail.com</a>
<a href=""mailto:ooff.i.c.e6.14@gmail.com"">ooff.i.c.e6.14@gmail.com</a>
<a href=""mailto:o.of.fi.ce.61.4@gmail.com"">o.of.fi.ce.61.4@gmail.com</a>
<a href=""mailto:ooff.ic.e.6.1.4@gmail.com"">ooff.ic.e.6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.f.ic.e61.4@gmail.com"">o.o.f.f.ic.e61.4@gmail.com</a>
<a href=""mailto:o.o.ff.ice.61.4@gmail.com"">o.o.ff.ice.61.4@gmail.com</a>
<a href=""mailto:ooffic.e.61.4@gmail.com"">ooffic.e.61.4@gmail.com</a>
<a href=""mailto:ooff.ice6.1.4@gmail.com"">ooff.ice6.1.4@gmail.com</a>
<a href=""mailto:o.of.fice.614@gmail.com"">o.of.fice.614@gmail.com</a>
<a href=""mailto:o.off.ice61.4@gmail.com"">o.off.ice61.4@gmail.com</a>
<a href=""mailto:o.offic.e.614@gmail.com"">o.offic.e.614@gmail.com</a>
<a href=""mailto:oo.ff.ic.e6.1.4@gmail.com"">oo.ff.ic.e6.1.4@gmail.com</a>
<a href=""mailto:o.of.f.i.c.e.6.14@gmail.com"">o.of.f.i.c.e.6.14@gmail.com</a>
<a href=""mailto:oof.f.ic.e.6.14@gmail.com"">oof.f.ic.e.6.14@gmail.com</a>
<a href=""mailto:o.o.ff.i.c.e614@gmail.com"">o.o.ff.i.c.e614@gmail.com</a>
<a href=""mailto:o.of.f.ice61.4@gmail.com"">o.of.f.ice61.4@gmail.com</a>
<a href=""mailto:oo.ffi.c.e.61.4@gmail.com"">oo.ffi.c.e.61.4@gmail.com</a>
<a href=""mailto:o.offi.c.e614@gmail.com"">o.offi.c.e614@gmail.com</a>
<a href=""mailto:o.o.f.fice.6.1.4@gmail.com"">o.o.f.fice.6.1.4@gmail.com</a>
<a href=""mailto:oof.fice.6.1.4@gmail.com"">oof.fice.6.1.4@gmail.com</a>
<a href=""mailto:o.of.fi.c.e6.14@gmail.com"">o.of.fi.c.e6.14@gmail.com</a>
<a href=""mailto:o.offi.c.e61.4@gmail.com"">o.offi.c.e61.4@gmail.com</a>
<a href=""mailto:o.o.ff.ic.e.61.4@gmail.com"">o.o.ff.ic.e.61.4@gmail.com</a>
<a href=""mailto:oo.ff.i.c.e.6.14@gmail.com"">oo.ff.i.c.e.6.14@gmail.com</a>
<a href=""mailto:o.of.fic.e.61.4@gmail.com"">o.of.fic.e.61.4@gmail.com</a>
<a href=""mailto:o.of.fi.c.e614@gmail.com"">o.of.fi.c.e614@gmail.com</a>
<a href=""mailto:o.off.ic.e6.1.4@gmail.com"">o.off.ic.e6.1.4@gmail.com</a>
<a href=""mailto:o.o.ff.ic.e614@gmail.com"">o.o.ff.ic.e614@gmail.com</a>
<a href=""mailto:o.o.ff.ic.e6.1.4@gmail.com"">o.o.ff.ic.e6.1.4@gmail.com</a>
<a href=""mailto:oo.ffi.ce6.14@gmail.com"">oo.ffi.ce6.14@gmail.com</a>
<a href=""mailto:o.o.f.fi.c.e6.1.4@gmail.com"">o.o.f.fi.c.e6.1.4@gmail.com</a>
<a href=""mailto:oo.f.f.i.ce614@gmail.com"">oo.f.f.i.ce614@gmail.com</a>
<a href=""mailto:oof.fi.ce6.14@gmail.com"">oof.fi.ce6.14@gmail.com</a>
<a href=""mailto:o.off.i.ce.6.14@gmail.com"">o.off.i.ce.6.14@gmail.com</a>
<a href=""mailto:o.of.fice.61.4@gmail.com"">o.of.fice.61.4@gmail.com</a>
<a href=""mailto:o.o.f.fi.c.e.614@gmail.com"">o.o.f.fi.c.e.614@gmail.com</a>
<a href=""mailto:o.of.f.i.c.e6.14@gmail.com"">o.of.f.i.c.e6.14@gmail.com</a>
<a href=""mailto:oof.fice61.4@gmail.com"">oof.fice61.4@gmail.com</a>
<a href=""mailto:o.offi.c.e.614@gmail.com"">o.offi.c.e.614@gmail.com</a>
<a href=""mailto:oo.ffic.e.61.4@gmail.com"">oo.ffic.e.61.4@gmail.com</a>
<a href=""mailto:o.o.f.fic.e6.1.4@gmail.com"">o.o.f.fic.e6.1.4@gmail.com</a>
<a href=""mailto:oo.f.f.i.ce6.1.4@gmail.com"">oo.f.f.i.ce6.1.4@gmail.com</a>
<a href=""mailto:o.o.ff.ic.e6.14@gmail.com"">o.o.ff.ic.e6.14@gmail.com</a>
<a href=""mailto:ooff.ice.61.4@gmail.com"">ooff.ice.61.4@gmail.com</a>
<a href=""mailto:oo.ff.ic.e61.4@gmail.com"">oo.ff.ic.e61.4@gmail.com</a>
<a href=""mailto:oof.fi.ce.614@gmail.com"">oof.fi.ce.614@gmail.com</a>
<a href=""mailto:o.o.ff.i.ce.61.4@gmail.com"">o.o.ff.i.ce.61.4@gmail.com</a>
<a href=""mailto:ooff.i.ce6.14@gmail.com"">ooff.i.ce6.14@gmail.com</a>
<a href=""mailto:oo.ffic.e.6.14@gmail.com"">oo.ffic.e.6.14@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce61.4@gmail.com"">o.o.f.fi.ce61.4@gmail.com</a>
<a href=""mailto:o.o.f.fic.e.61.4@gmail.com"">o.o.f.fic.e.61.4@gmail.com</a>
<a href=""mailto:o.of.fi.ce6.14@gmail.com"">o.of.fi.ce6.14@gmail.com</a>
<a href=""mailto:oo.ff.i.c.e614@gmail.com"">oo.ff.i.c.e614@gmail.com</a>
<a href=""mailto:oo.f.f.i.c.e6.14@gmail.com"">oo.f.f.i.c.e6.14@gmail.com</a>
<a href=""mailto:oo.f.fic.e6.1.4@gmail.com"">oo.f.fic.e6.1.4@gmail.com</a>
<a href=""mailto:o.o.f.f.ic.e614@gmail.com"">o.o.f.f.ic.e614@gmail.com</a>
<a href=""mailto:ooff.i.ce61.4@gmail.com"">ooff.i.ce61.4@gmail.com</a>
<a href=""mailto:oo.f.fice.6.1.4@gmail.com"">oo.f.fice.6.1.4@gmail.com</a>
<a href=""mailto:oof.f.ic.e.61.4@gmail.com"">oof.f.ic.e.61.4@gmail.com</a>
<a href=""mailto:o.of.f.i.c.e61.4@gmail.com"">o.of.f.i.c.e61.4@gmail.com</a>
<a href=""mailto:oo.ff.i.c.e.614@gmail.com"">oo.ff.i.c.e.614@gmail.com</a>
<a href=""mailto:o.o.ff.i.ce.6.14@gmail.com"">o.o.ff.i.ce.6.14@gmail.com</a>
<a href=""mailto:o.of.f.ice.614@gmail.com"">o.of.f.ice.614@gmail.com</a>
<a href=""mailto:ooffic.e.614@gmail.com"">ooffic.e.614@gmail.com</a>
<a href=""mailto:o.o.f.fi.c.e6.14@gmail.com"">o.o.f.fi.c.e6.14@gmail.com</a>
<a href=""mailto:oo.f.f.ic.e61.4@gmail.com"">oo.f.f.ic.e61.4@gmail.com</a>
<a href=""mailto:o.of.fi.ce.6.14@gmail.com"">o.of.fi.ce.6.14@gmail.com</a>
<a href=""mailto:o.of.fice.6.14@gmail.com"">o.of.fice.6.14@gmail.com</a>
<a href=""mailto:o.of.fic.e6.1.4@gmail.com"">o.of.fic.e6.1.4@gmail.com</a>
<a href=""mailto:o.offi.ce6.14@gmail.com"">o.offi.ce6.14@gmail.com</a>
<a href=""mailto:oo.f.f.i.c.e61.4@gmail.com"">oo.f.f.i.c.e61.4@gmail.com</a>
<a href=""mailto:o.o.f.fice.61.4@gmail.com"">o.o.f.fice.61.4@gmail.com</a>
<a href=""mailto:oof.fi.c.e6.1.4@gmail.com"">oof.fi.c.e6.1.4@gmail.com</a>
<a href=""mailto:o.off.i.c.e.614@gmail.com"">o.off.i.c.e.614@gmail.com</a>
<a href=""mailto:o.o.ff.i.ce6.1.4@gmail.com"">o.o.ff.i.ce6.1.4@gmail.com</a>
<a href=""mailto:oo.f.fice614@gmail.com"">oo.f.fice614@gmail.com</a>
<a href=""mailto:o.o.f.fi.ce.6.1.4@gmail.com"">o.o.f.fi.ce.6.1.4@gmail.com</a>
<a href=""mailto:oo.f.fice.61.4@gmail.com"">oo.f.fice.61.4@gmail.com</a>
<a href=""mailto:oo.ffi.c.e614@gmail.com"">oo.ffi.c.e614@gmail.com</a>
<a href=""mailto:oo.ffic.e6.14@gmail.com"">oo.ffic.e6.14@gmail.com</a>
<a href=""mailto:opheliaservice.gcb@gmail.com"">opheliaservice.gcb@gmail.com</a>
<a href=""mailto:o.phe.li.aservice..g.cb@gmail.com"">o.phe.li.aservice..g.cb@gmail.com</a>
<a href=""mailto:ophel.ia.s.ervice...g.c.b@gmail.com"">ophel.ia.s.ervice...g.c.b@gmail.com</a>
<a href=""mailto:op.he.l.i.a.s.e.rv.i.c.e.gc.b@gmail.com"">op.he.l.i.a.s.e.rv.i.c.e.gc.b@gmail.com</a>
<a href=""mailto:o.ph.eli.ase.rvi.ce.gcb@gmail.com"">o.ph.eli.ase.rvi.ce.gcb@gmail.com</a>
<a href=""mailto:oph.eli.a.s.er.v.i.c.e...gcb@gmail.com"">oph.eli.a.s.er.v.i.c.e...gcb@gmail.com</a>
<a href=""mailto:op.he.lias.erv.i.c.e.gcb@gmail.com"">op.he.lias.erv.i.c.e.gcb@gmail.com</a>
<a href=""mailto:o.ph.el.i.ase.rv.i.ce..gcb@gmail.com"">o.ph.el.i.ase.rv.i.ce..gcb@gmail.com</a>
<a href=""mailto:op.he.l.i.as.er.vice..g.c.b@gmail.com"">op.he.l.i.as.er.vice..g.c.b@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.s.er.vic.e.gcb@gmail.com"">o.ph.e.l.i.a.s.er.vic.e.gcb@gmail.com</a>
<a href=""mailto:o.phel.ias.e.r.v.ic.e..g.c.b@gmail.com"">o.phel.ias.e.r.v.ic.e..g.c.b@gmail.com</a>
<a href=""mailto:oph.eli.as.e.r.vice.gc.b@gmail.com"">oph.eli.as.e.r.vice.gc.b@gmail.com</a>
<a href=""mailto:o.phelias.e.r.vice..g.cb@gmail.com"">o.phelias.e.r.vice..g.cb@gmail.com</a>
<a href=""mailto:o.ph.e.lia.servi.c.e.gc.b@gmail.com"">o.ph.e.lia.servi.c.e.gc.b@gmail.com</a>
<a href=""mailto:o.p.h.e.li.a.se.r.v.i.c.e...g.c.b@gmail.com"">o.p.h.e.li.a.se.r.v.i.c.e...g.c.b@gmail.com</a>
<a href=""mailto:o.phel.i.as.e.rvi.c.e..g.cb@gmail.com"">o.phel.i.as.e.rvi.c.e..g.cb@gmail.com</a>
<a href=""mailto:o.ph.el.i.a.se.rv.i.ce..gcb@gmail.com"">o.ph.el.i.a.se.rv.i.ce..gcb@gmail.com</a>
<a href=""mailto:opheli.a.serv.ice...g.cb@gmail.com"">opheli.a.serv.ice...g.cb@gmail.com</a>
<a href=""mailto:o.ph.elia.s.erv.i.ce..g.cb@gmail.com"">o.ph.elia.s.erv.i.ce..g.cb@gmail.com</a>
<a href=""mailto:o.ph.el.ias.e.rvice..g.c.b@gmail.com"">o.ph.el.ias.e.rvice..g.c.b@gmail.com</a>
<a href=""mailto:op.he.lias.e.rv.i.ce..g.c.b@gmail.com"">op.he.lias.e.rv.i.ce..g.c.b@gmail.com</a>
<a href=""mailto:ophel.ia.se.r.v.ice..g.cb@gmail.com"">ophel.ia.se.r.v.ice..g.cb@gmail.com</a>
<a href=""mailto:op.h.e.liaserv.ice..g.c.b@gmail.com"">op.h.e.liaserv.ice..g.c.b@gmail.com</a>
<a href=""mailto:oph.el.i.ase.rv.i.ce..gc.b@gmail.com"">oph.el.i.ase.rv.i.ce..gc.b@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.s.e.r.v.i.c.e...gcb@gmail.com"">o.ph.e.l.i.a.s.e.r.v.i.c.e...gcb@gmail.com</a>
<a href=""mailto:o.pheli.a.s.e.rvi.ce.gcb@gmail.com"">o.pheli.a.s.e.rvi.ce.gcb@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.as.er.v.ic.e..g.c.b@gmail.com"">o.ph.e.l.i.as.er.v.ic.e..g.c.b@gmail.com</a>
<a href=""mailto:oph.eli.as.erv.ic.e...gcb@gmail.com"">oph.eli.as.erv.ic.e...gcb@gmail.com</a>
<a href=""mailto:o.phel.i.a.s.e.rv.i.c.e..gcb@gmail.com"">o.phel.i.a.s.e.rv.i.c.e..gcb@gmail.com</a>
<a href=""mailto:op.h.e.l.i.ase.rvice..gc.b@gmail.com"">op.h.e.l.i.ase.rvice..gc.b@gmail.com</a>
<a href=""mailto:o.ph.el.i.as.e.rv.ice..g.cb@gmail.com"">o.ph.el.i.as.e.rv.ice..g.cb@gmail.com</a>
<a href=""mailto:o.p.h.eli.as.e.rv.ic.e...g.c.b@gmail.com"">o.p.h.eli.as.e.rv.ic.e...g.c.b@gmail.com</a>
<a href=""mailto:op.h.e.l.ia.service...g.c.b@gmail.com"">op.h.e.l.ia.service...g.c.b@gmail.com</a>
<a href=""mailto:o.p.helia.ser.vic.e..g.c.b@gmail.com"">o.p.helia.ser.vic.e..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.ase.r.vi.ce.g.cb@gmail.com"">o.p.h.e.l.i.ase.r.vi.ce.g.cb@gmail.com</a>
<a href=""mailto:o.ph.e.l.iaserv.ic.e...g.cb@gmail.com"">o.ph.e.l.iaserv.ic.e...g.cb@gmail.com</a>
<a href=""mailto:o.p.h.elias.er.v.ic.e...g.c.b@gmail.com"">o.p.h.elias.er.v.ic.e...g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.eli.as.er.v.ic.e..g.c.b@gmail.com"">o.p.h.eli.as.er.v.ic.e..g.c.b@gmail.com</a>
<a href=""mailto:oph.e.l.ia.se.rvi.c.e..g.c.b@gmail.com"">oph.e.l.ia.se.rvi.c.e..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.eli.as.e.rvi.c.e.g.c.b@gmail.com"">o.p.h.eli.as.e.rvi.c.e.g.c.b@gmail.com</a>
<a href=""mailto:o.p.hel.iase.rv.ice.g.c.b@gmail.com"">o.p.hel.iase.rv.ice.g.c.b@gmail.com</a>
<a href=""mailto:o.ph.el.iase.r.vi.c.e..gcb@gmail.com"">o.ph.el.iase.r.vi.c.e..gcb@gmail.com</a>
<a href=""mailto:o.phe.l.ias.ervice..gc.b@gmail.com"">o.phe.l.ias.ervice..gc.b@gmail.com</a>
<a href=""mailto:o.ph.el.i.a.s.e.r.v.i.ce...gcb@gmail.com"">o.ph.el.i.a.s.e.r.v.i.ce...gcb@gmail.com</a>
<a href=""mailto:o.ph.e.lia.se.rv.ice...gc.b@gmail.com"">o.ph.e.lia.se.rv.ice...gc.b@gmail.com</a>
<a href=""mailto:oph.e.l.ia.se.r.v.i.ce..gc.b@gmail.com"">oph.e.l.ia.se.r.v.i.ce..gc.b@gmail.com</a>
<a href=""mailto:o.p.helias.e.rv.ice.gc.b@gmail.com"">o.p.helias.e.rv.ice.gc.b@gmail.com</a>
<a href=""mailto:o.p.h.eli.a.s.ervi.ce.gc.b@gmail.com"">o.p.h.eli.a.s.ervi.ce.gc.b@gmail.com</a>
<a href=""mailto:op.hel.ia.serv.i.c.e.g.c.b@gmail.com"">op.hel.ia.serv.i.c.e.g.c.b@gmail.com</a>
<a href=""mailto:oph.el.i.as.e.r.v.i.ce..g.c.b@gmail.com"">oph.el.i.as.e.r.v.i.ce..g.c.b@gmail.com</a>
<a href=""mailto:op.h.el.i.as.ervic.e.gc.b@gmail.com"">op.h.el.i.as.ervic.e.gc.b@gmail.com</a>
<a href=""mailto:o.pheli.a.s.e.rv.i.c.e..gc.b@gmail.com"">o.pheli.a.s.e.rv.i.c.e..gc.b@gmail.com</a>
<a href=""mailto:op.heli.a.se.rv.i.c.e...g.cb@gmail.com"">op.heli.a.se.rv.i.c.e...g.cb@gmail.com</a>
<a href=""mailto:o.p.h.e.lias.ervi.ce..g.cb@gmail.com"">o.p.h.e.lias.ervi.ce..g.cb@gmail.com</a>
<a href=""mailto:o.p.h.el.ia.se.r.vi.ce.gcb@gmail.com"">o.p.h.el.ia.se.r.vi.ce.gcb@gmail.com</a>
<a href=""mailto:o.ph.el.iase.r.v.ic.e.g.cb@gmail.com"">o.ph.el.iase.r.v.ic.e.g.cb@gmail.com</a>
<a href=""mailto:op.he.li.aser.vic.e.g.cb@gmail.com"">op.he.li.aser.vic.e.g.cb@gmail.com</a>
<a href=""mailto:o.p.helia.ser.vic.e..gc.b@gmail.com"">o.p.helia.ser.vic.e..gc.b@gmail.com</a>
<a href=""mailto:oph.e.li.as.e.r.vi.ce..g.c.b@gmail.com"">oph.e.li.as.e.r.vi.ce..g.c.b@gmail.com</a>
<a href=""mailto:ophel.ias.e.rv.ice..gcb@gmail.com"">ophel.ias.e.rv.ice..gcb@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.se.r.v.i.c.e...g.c.b@gmail.com"">o.ph.e.l.i.a.se.r.v.i.c.e...g.c.b@gmail.com</a>
<a href=""mailto:op.h.eli.as.e.rvice.gcb@gmail.com"">op.h.eli.as.e.rvice.gcb@gmail.com</a>
<a href=""mailto:oph.e.li.a.s.e.rvice...gcb@gmail.com"">oph.e.li.a.s.e.rvice...gcb@gmail.com</a>
<a href=""mailto:op.h.el.i.a.se.r.vi.ce...g.c.b@gmail.com"">op.h.el.i.a.se.r.vi.ce...g.c.b@gmail.com</a>
<a href=""mailto:o.p.heliaser.vic.e...g.c.b@gmail.com"">o.p.heliaser.vic.e...g.c.b@gmail.com</a>
<a href=""mailto:o.p.hel.i.a.se.r.v.ice..g.cb@gmail.com"">o.p.hel.i.a.se.r.v.ice..g.cb@gmail.com</a>
<a href=""mailto:op.h.e.li.ase.r.v.i.ce...g.c.b@gmail.com"">op.h.e.li.ase.r.v.i.ce...g.c.b@gmail.com</a>
<a href=""mailto:op.he.l.ia.s.e.rvi.c.e.gc.b@gmail.com"">op.he.l.ia.s.e.rvi.c.e.gc.b@gmail.com</a>
<a href=""mailto:o.p.h.el.ias.e.rvi.ce..gcb@gmail.com"">o.p.h.el.ias.e.rvi.ce..gcb@gmail.com</a>
<a href=""mailto:op.h.e.l.i.as.e.rvi.ce..g.cb@gmail.com"">op.h.e.l.i.as.e.rvi.ce..g.cb@gmail.com</a>
<a href=""mailto:op.h.e.l.iase.rv.i.ce..gcb@gmail.com"">op.h.e.l.iase.rv.i.ce..gcb@gmail.com</a>
<a href=""mailto:o.p.hel.i.a.se.rvic.e...gcb@gmail.com"">o.p.hel.i.a.se.rvic.e...gcb@gmail.com</a>
<a href=""mailto:o.p.he.l.i.ase.rv.i.c.e.g.c.b@gmail.com"">o.p.he.l.i.ase.rv.i.c.e.g.c.b@gmail.com</a>
<a href=""mailto:ophelia.s.e.r.vi.c.e..gcb@gmail.com"">ophelia.s.e.r.vi.c.e..gcb@gmail.com</a>
<a href=""mailto:ophe.l.i.as.er.v.ic.e.g.cb@gmail.com"">ophe.l.i.as.er.v.ic.e.g.cb@gmail.com</a>
<a href=""mailto:o.p.he.l.i.as.ervic.e..gc.b@gmail.com"">o.p.he.l.i.as.ervic.e..gc.b@gmail.com</a>
<a href=""mailto:op.h.e.li.as.e.r.vice..g.cb@gmail.com"">op.h.e.li.as.e.r.vice..g.cb@gmail.com</a>
<a href=""mailto:oph.el.i.a.s.e.rvic.e.g.cb@gmail.com"">oph.el.i.a.s.e.rvic.e.g.cb@gmail.com</a>
<a href=""mailto:op.he.lia.ser.v.i.c.e...gcb@gmail.com"">op.he.lia.ser.v.i.c.e...gcb@gmail.com</a>
<a href=""mailto:o.p.h.eliaser.vi.ce...gc.b@gmail.com"">o.p.h.eliaser.vi.ce...gc.b@gmail.com</a>
<a href=""mailto:op.he.liaservice..gc.b@gmail.com"">op.he.liaservice..gc.b@gmail.com</a>
<a href=""mailto:op.h.elia.se.rvic.e..gc.b@gmail.com"">op.h.elia.se.rvic.e..gc.b@gmail.com</a>
<a href=""mailto:o.pheliase.rv.i.c.e..gc.b@gmail.com"">o.pheliase.rv.i.c.e..gc.b@gmail.com</a>
<a href=""mailto:oph.el.i.ase.rv.ice...gcb@gmail.com"">oph.el.i.ase.rv.ice...gcb@gmail.com</a>
<a href=""mailto:o.ph.e.lia.se.r.vic.e..gcb@gmail.com"">o.ph.e.lia.se.r.vic.e..gcb@gmail.com</a>
<a href=""mailto:op.h.e.li.as.erv.i.c.e...gcb@gmail.com"">op.h.e.li.as.erv.i.c.e...gcb@gmail.com</a>
<a href=""mailto:op.heli.a.s.er.vice..g.cb@gmail.com"">op.heli.a.s.er.vice..g.cb@gmail.com</a>
<a href=""mailto:o.ph.eli.a.se.r.vice..g.c.b@gmail.com"">o.ph.eli.a.se.r.vice..g.c.b@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.s.e.r.vic.e.gc.b@gmail.com"">o.ph.e.l.i.a.s.e.r.vic.e.gc.b@gmail.com</a>
<a href=""mailto:ophe.l.iase.rv.ic.e...gcb@gmail.com"">ophe.l.iase.rv.ic.e...gcb@gmail.com</a>
<a href=""mailto:o.p.h.eli.a.s.e.rvice..gc.b@gmail.com"">o.p.h.eli.a.s.e.rvice..gc.b@gmail.com</a>
<a href=""mailto:o.p.he.l.i.aservi.ce...gc.b@gmail.com"">o.p.he.l.i.aservi.ce...gc.b@gmail.com</a>
<a href=""mailto:ophel.ia.s.er.vice..g.c.b@gmail.com"">ophel.ia.s.er.vice..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.e.liase.r.vic.e...gcb@gmail.com"">o.p.h.e.liase.r.vic.e...gcb@gmail.com</a>
<a href=""mailto:ophe.li.a.s.erv.i.ce..g.cb@gmail.com"">ophe.li.a.s.erv.i.ce..g.cb@gmail.com</a>
<a href=""mailto:o.pheli.aser.v.ic.e..g.cb@gmail.com"">o.pheli.aser.v.ic.e..g.cb@gmail.com</a>
<a href=""mailto:oph.e.l.ia.s.er.vic.e..g.cb@gmail.com"">oph.e.l.ia.s.er.vic.e..g.cb@gmail.com</a>
<a href=""mailto:op.heli.a.servi.c.e..g.cb@gmail.com"">op.heli.a.servi.c.e..g.cb@gmail.com</a>
<a href=""mailto:o.phel.i.ase.r.vice...gc.b@gmail.com"">o.phel.i.ase.r.vice...gc.b@gmail.com</a>
<a href=""mailto:ophel.i.a.s.er.vic.e.gcb@gmail.com"">ophel.i.a.s.er.vic.e.gcb@gmail.com</a>
<a href=""mailto:o.phel.i.a.s.ervi.c.e.gcb@gmail.com"">o.phel.i.a.s.ervi.c.e.gcb@gmail.com</a>
<a href=""mailto:oph.eliaser.vic.e..g.c.b@gmail.com"">oph.eliaser.vic.e..g.c.b@gmail.com</a>
<a href=""mailto:oph.e.l.i.ase.rv.i.ce..g.c.b@gmail.com"">oph.e.l.i.ase.rv.i.ce..g.c.b@gmail.com</a>
<a href=""mailto:o.p.he.l.iaser.v.ic.e...g.c.b@gmail.com"">o.p.he.l.iaser.v.ic.e...g.c.b@gmail.com</a>
<a href=""mailto:o.p.hel.ia.s.er.v.i.ce..gcb@gmail.com"">o.p.hel.ia.s.er.v.i.ce..gcb@gmail.com</a>
<a href=""mailto:ophe.l.i.a.s.ervi.c.e.gcb@gmail.com"">ophe.l.i.a.s.ervi.c.e.gcb@gmail.com</a>
<a href=""mailto:o.p.h.e.l.ias.e.rv.ic.e...g.cb@gmail.com"">o.p.h.e.l.ias.e.rv.ic.e...g.cb@gmail.com</a>
<a href=""mailto:op.h.e.li.aservi.c.e..g.cb@gmail.com"">op.h.e.li.aservi.c.e..g.cb@gmail.com</a>
<a href=""mailto:op.h.el.i.a.se.r.vi.c.e..g.cb@gmail.com"">op.h.el.i.a.se.r.vi.c.e..g.cb@gmail.com</a>
<a href=""mailto:ophelia.s.er.vi.ce..g.c.b@gmail.com"">ophelia.s.er.vi.ce..g.c.b@gmail.com</a>
<a href=""mailto:o.phel.ias.e.r.v.i.c.e..g.c.b@gmail.com"">o.phel.ias.e.r.v.i.c.e..g.c.b@gmail.com</a>
<a href=""mailto:op.hel.ias.er.vi.c.e..g.c.b@gmail.com"">op.hel.ias.er.vi.c.e..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.ase.r.v.ic.e..gc.b@gmail.com"">o.p.h.e.l.i.ase.r.v.ic.e..gc.b@gmail.com</a>
<a href=""mailto:o.ph.e.li.as.e.r.v.i.ce...gcb@gmail.com"">o.ph.e.li.as.e.r.v.i.ce...gcb@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.s.er.vic.e...g.cb@gmail.com"">o.ph.e.l.i.a.s.er.vic.e...g.cb@gmail.com</a>
<a href=""mailto:o.p.h.e.lia.s.e.rvi.c.e...gc.b@gmail.com"">o.p.h.e.lia.s.e.rvi.c.e...gc.b@gmail.com</a>
<a href=""mailto:o.ph.elias.er.v.ice..gc.b@gmail.com"">o.ph.elias.er.v.ice..gc.b@gmail.com</a>
<a href=""mailto:op.hel.i.a.s.er.vice...g.cb@gmail.com"">op.hel.i.a.s.er.vice...g.cb@gmail.com</a>
<a href=""mailto:op.h.eliaser.vice..gcb@gmail.com"">op.h.eliaser.vice..gcb@gmail.com</a>
<a href=""mailto:o.p.h.el.i.a.s.erv.i.c.e..g.cb@gmail.com"">o.p.h.el.i.a.s.erv.i.c.e..g.cb@gmail.com</a>
<a href=""mailto:o.p.h.eli.a.s.er.vi.c.e...g.c.b@gmail.com"">o.p.h.eli.a.s.er.vi.c.e...g.c.b@gmail.com</a>
<a href=""mailto:o.phe.l.ia.s.e.r.v.i.ce..g.c.b@gmail.com"">o.phe.l.ia.s.e.r.v.i.ce..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.el.iase.r.vic.e...gcb@gmail.com"">o.p.h.el.iase.r.vic.e...gcb@gmail.com</a>
<a href=""mailto:op.h.el.i.ase.rv.i.ce..g.cb@gmail.com"">op.h.el.i.ase.rv.i.ce..g.cb@gmail.com</a>
<a href=""mailto:o.ph.e.l.i.a.s.er.vi.c.e..g.c.b@gmail.com"">o.ph.e.l.i.a.s.er.vi.c.e..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.a.ser.v.i.c.e..g.cb@gmail.com"">o.p.h.e.l.i.a.ser.v.i.c.e..g.cb@gmail.com</a>
<a href=""mailto:o.ph.e.lias.e.r.vi.c.e..gc.b@gmail.com"">o.ph.e.lias.e.r.vi.c.e..gc.b@gmail.com</a>
<a href=""mailto:o.ph.e.l.ia.ser.vi.c.e..g.c.b@gmail.com"">o.ph.e.l.ia.ser.vi.c.e..g.c.b@gmail.com</a>
<a href=""mailto:o.p.he.lia.ser.vi.ce.gc.b@gmail.com"">o.p.he.lia.ser.vi.ce.gc.b@gmail.com</a>
<a href=""mailto:opheli.a.ser.vice..g.cb@gmail.com"">opheli.a.ser.vice..g.cb@gmail.com</a>
<a href=""mailto:o.ph.e.l.iaserv.i.c.e.g.c.b@gmail.com"">o.ph.e.l.iaserv.i.c.e.g.c.b@gmail.com</a>
<a href=""mailto:ophe.l.ias.ervic.e...gcb@gmail.com"">ophe.l.ias.ervic.e...gcb@gmail.com</a>
<a href=""mailto:op.h.el.ias.e.r.v.i.ce...g.c.b@gmail.com"">op.h.el.ias.e.r.v.i.ce...g.c.b@gmail.com</a>
<a href=""mailto:o.p.he.li.ase.rvic.e...gc.b@gmail.com"">o.p.he.li.ase.rvic.e...gc.b@gmail.com</a>
<a href=""mailto:op.h.el.i.as.e.rv.i.ce.g.cb@gmail.com"">op.h.el.i.as.e.rv.i.ce.g.cb@gmail.com</a>
<a href=""mailto:op.hel.i.a.s.erv.i.ce...g.c.b@gmail.com"">op.hel.i.a.s.erv.i.ce...g.c.b@gmail.com</a>
<a href=""mailto:oph.eli.aserv.ice..gcb@gmail.com"">oph.eli.aserv.ice..gcb@gmail.com</a>
<a href=""mailto:oph.el.ias.ervi.c.e...gc.b@gmail.com"">oph.el.ias.ervi.c.e...gc.b@gmail.com</a>
<a href=""mailto:o.p.h.elias.e.r.vice.gc.b@gmail.com"">o.p.h.elias.e.r.vice.gc.b@gmail.com</a>
<a href=""mailto:o.p.he.li.a.s.e.r.vic.e.g.cb@gmail.com"">o.p.he.li.a.s.e.r.vic.e.g.cb@gmail.com</a>
<a href=""mailto:o.p.he.l.i.a.s.ervi.ce...g.c.b@gmail.com"">o.p.he.l.i.a.s.ervi.ce...g.c.b@gmail.com</a>
<a href=""mailto:ophe.lias.er.vi.c.e..gc.b@gmail.com"">ophe.lias.er.vi.c.e..gc.b@gmail.com</a>
<a href=""mailto:o.ph.el.iase.rvice.g.c.b@gmail.com"">o.ph.el.iase.rvice.g.c.b@gmail.com</a>
<a href=""mailto:oph.el.i.ase.r.v.ice..gcb@gmail.com"">oph.el.i.ase.r.v.ice..gcb@gmail.com</a>
<a href=""mailto:ophe.l.i.a.se.rv.ic.e.gcb@gmail.com"">ophe.l.i.a.se.rv.ic.e.gcb@gmail.com</a>
<a href=""mailto:op.h.el.i.a.ser.v.i.c.e...g.cb@gmail.com"">op.h.el.i.a.ser.v.i.c.e...g.cb@gmail.com</a>
<a href=""mailto:oph.e.l.ias.erv.ice...g.cb@gmail.com"">oph.e.l.ias.erv.ice...g.cb@gmail.com</a>
<a href=""mailto:op.h.e.l.ia.se.r.v.ice..g.c.b@gmail.com"">op.h.e.l.ia.se.r.v.ice..g.c.b@gmail.com</a>
<a href=""mailto:oph.el.ia.servi.c.e..gc.b@gmail.com"">oph.el.ia.servi.c.e..gc.b@gmail.com</a>
<a href=""mailto:op.h.el.i.as.e.rv.ic.e..g.cb@gmail.com"">op.h.el.i.as.e.rv.ic.e..g.cb@gmail.com</a>
<a href=""mailto:o.phel.i.a.s.er.v.i.c.e.gc.b@gmail.com"">o.phel.i.a.s.er.v.i.c.e.gc.b@gmail.com</a>
<a href=""mailto:oph.e.li.a.s.er.v.i.ce.g.c.b@gmail.com"">oph.e.li.a.s.er.v.i.ce.g.c.b@gmail.com</a>
<a href=""mailto:o.p.he.lia.se.r.v.i.ce...gc.b@gmail.com"">o.p.he.lia.se.r.v.i.ce...gc.b@gmail.com</a>
<a href=""mailto:ophe.l.i.as.e.rvice..gcb@gmail.com"">ophe.l.i.as.e.rvice..gcb@gmail.com</a>
<a href=""mailto:o.phe.l.i.ase.r.vi.ce..gc.b@gmail.com"">o.phe.l.i.ase.r.vi.ce..gc.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.ias.er.v.ice..g.cb@gmail.com"">o.p.h.e.l.ias.er.v.ice..g.cb@gmail.com</a>
<a href=""mailto:o.p.h.e.liaser.vice..g.cb@gmail.com"">o.p.h.e.liaser.vice..g.cb@gmail.com</a>
<a href=""mailto:op.h.e.liase.r.v.i.ce.gc.b@gmail.com"">op.h.e.liase.r.v.i.ce.gc.b@gmail.com</a>
<a href=""mailto:opheli.a.se.rv.i.c.e..gcb@gmail.com"">opheli.a.se.rv.i.c.e..gcb@gmail.com</a>
<a href=""mailto:o.pheli.as.e.r.vi.c.e...gc.b@gmail.com"">o.pheli.as.e.r.vi.c.e...gc.b@gmail.com</a>
<a href=""mailto:o.p.hel.i.ase.r.vice.gc.b@gmail.com"">o.p.hel.i.ase.r.vice.gc.b@gmail.com</a>
<a href=""mailto:o.phel.ia.se.rvice...g.cb@gmail.com"">o.phel.ia.se.rvice...g.cb@gmail.com</a>
<a href=""mailto:ophe.li.a.serv.i.c.e..g.cb@gmail.com"">ophe.li.a.serv.i.c.e..g.cb@gmail.com</a>
<a href=""mailto:o.p.h.el.i.a.s.er.vi.c.e.gcb@gmail.com"">o.p.h.el.i.a.s.er.vi.c.e.gcb@gmail.com</a>
<a href=""mailto:op.hel.i.a.s.e.r.vice..gc.b@gmail.com"">op.hel.i.a.s.e.r.vice..gc.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.as.e.rvi.ce..g.c.b@gmail.com"">o.p.h.e.l.i.as.e.rvi.ce..g.c.b@gmail.com</a>
<a href=""mailto:op.he.l.i.a.s.er.v.ic.e..gcb@gmail.com"">op.he.l.i.a.s.er.v.ic.e..gcb@gmail.com</a>
<a href=""mailto:o.p.he.lia.serv.i.c.e...g.cb@gmail.com"">o.p.he.lia.serv.i.c.e...g.cb@gmail.com</a>
<a href=""mailto:ophe.liaser.vi.c.e.g.c.b@gmail.com"">ophe.liaser.vi.c.e.g.c.b@gmail.com</a>
<a href=""mailto:op.he.l.i.as.ervice..g.c.b@gmail.com"">op.he.l.i.as.ervice..g.c.b@gmail.com</a>
<a href=""mailto:o.p.h.eliase.r.v.i.c.e..gc.b@gmail.com"">o.p.h.eliase.r.v.i.c.e..gc.b@gmail.com</a>
<a href=""mailto:o.phe.li.a.serv.ice..gc.b@gmail.com"">o.phe.li.a.serv.ice..gc.b@gmail.com</a>
<a href=""mailto:op.he.li.as.e.r.v.i.c.e..gc.b@gmail.com"">op.he.li.as.e.r.v.i.c.e..gc.b@gmail.com</a>
<a href=""mailto:o.phel.ias.ervice..gcb@gmail.com"">o.phel.ias.ervice..gcb@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.as.e.r.v.ice...gcb@gmail.com"">o.p.h.e.l.i.as.e.r.v.ice...gcb@gmail.com</a>
<a href=""mailto:o.p.helia.service..gcb@gmail.com"">o.p.helia.service..gcb@gmail.com</a>
<a href=""mailto:o.p.he.lia.ser.v.i.ce...g.c.b@gmail.com"">o.p.he.lia.ser.v.i.ce...g.c.b@gmail.com</a>
<a href=""mailto:op.h.e.li.aserv.ice..g.cb@gmail.com"">op.h.e.li.aserv.ice..g.cb@gmail.com</a>
<a href=""mailto:opheli.a.se.r.v.i.ce.gcb@gmail.com"">opheli.a.se.r.v.i.ce.gcb@gmail.com</a>
<a href=""mailto:ophe.liase.rvi.ce..g.c.b@gmail.com"">ophe.liase.rvi.ce..g.c.b@gmail.com</a>
<a href=""mailto:ophe.l.ia.se.r.vic.e..gcb@gmail.com"">ophe.l.ia.se.r.vic.e..gcb@gmail.com</a>
<a href=""mailto:o.p.hel.iase.r.vice...gcb@gmail.com"">o.p.hel.iase.r.vice...gcb@gmail.com</a>
<a href=""mailto:oph.e.l.ia.se.r.v.i.ce.g.cb@gmail.com"">oph.e.l.ia.se.r.v.i.ce.g.cb@gmail.com</a>
<a href=""mailto:ophel.ia.se.rvic.e...g.c.b@gmail.com"">ophel.ia.se.rvic.e...g.c.b@gmail.com</a>
<a href=""mailto:oph.eli.a.s.er.v.ic.e..gcb@gmail.com"">oph.eli.a.s.er.v.ic.e..gcb@gmail.com</a>
<a href=""mailto:oph.e.l.ia.se.r.v.ic.e...gc.b@gmail.com"">oph.e.l.ia.se.r.v.ic.e...gc.b@gmail.com</a>
<a href=""mailto:oph.e.l.ia.s.erv.i.c.e...gcb@gmail.com"">oph.e.l.ia.s.erv.i.c.e...gcb@gmail.com</a>
<a href=""mailto:o.p.he.l.ias.e.rvi.c.e..gc.b@gmail.com"">o.p.he.l.ias.e.rvi.c.e..gc.b@gmail.com</a>
<a href=""mailto:op.heli.as.e.rvi.ce.g.c.b@gmail.com"">op.heli.as.e.rvi.ce.g.c.b@gmail.com</a>
<a href=""mailto:o.phel.ia.ser.vi.ce...g.c.b@gmail.com"">o.phel.ia.ser.vi.ce...g.c.b@gmail.com</a>
<a href=""mailto:o.phel.iase.rvic.e...g.cb@gmail.com"">o.phel.iase.rvic.e...g.cb@gmail.com</a>
<a href=""mailto:oph.el.ia.s.ervi.ce.gcb@gmail.com"">oph.el.ia.s.ervi.ce.gcb@gmail.com</a>
<a href=""mailto:op.h.el.i.as.er.vi.ce..gcb@gmail.com"">op.h.el.i.as.er.vi.ce..gcb@gmail.com</a>
<a href=""mailto:op.h.el.ias.erv.ic.e...gc.b@gmail.com"">op.h.el.ias.erv.ic.e...gc.b@gmail.com</a>
<a href=""mailto:o.p.h.e.l.i.ase.r.v.i.ce..g.c.b@gmail.com"">o.p.h.e.l.i.ase.r.v.i.ce..g.c.b@gmail.com</a>
<a href=""mailto:o.p.he.l.i.a.s.erv.i.ce..gcb@gmail.com"">o.p.he.l.i.a.s.erv.i.ce..gcb@gmail.com</a>
<a href=""mailto:oph.e.li.a.ser.vice..g.c.b@gmail.com"">oph.e.li.a.ser.vice..g.c.b@gmail.com</a>
<a href=""mailto:op.hel.i.ase.r.v.i.ce..gc.b@gmail.com"">op.hel.i.ase.r.v.i.ce..gc.b@gmail.com</a>
<a href=""mailto:ophe.li.as.e.r.v.ice..gc.b@gmail.com"">ophe.li.as.e.r.v.ice..gc.b@gmail.com</a>
<a href=""mailto:oph.e.l.ia.s.ervic.e..gcb@gmail.com"">oph.e.l.ia.s.ervic.e..gcb@gmail.com</a>
<a href=""mailto:ophe.l.ias.e.r.vice...gc.b@gmail.com"">ophe.l.ias.e.r.vice...gc.b@gmail.com</a>
<a href=""mailto:ifyike11@gmail.com"">ifyike11@gmail.com</a>
<a href=""mailto:if.y.ik.e.11@gmail.com"">if.y.ik.e.11@gmail.com</a>
<a href=""mailto:i.f.y.i.k.e.11@gmail.com"">i.f.y.i.k.e.11@gmail.com</a>
<a href=""mailto:i.fyi.ke.1.1@gmail.com"">i.fyi.ke.1.1@gmail.com</a>
<a href=""mailto:ifyi.k.e11@gmail.com"">ifyi.k.e11@gmail.com</a>
<a href=""mailto:i.f.yike.11@gmail.com"">i.f.yike.11@gmail.com</a>
<a href=""mailto:i.fyik.e.11@gmail.com"">i.fyik.e.11@gmail.com</a>
<a href=""mailto:i.f.yi.ke.11@gmail.com"">i.f.yi.ke.11@gmail.com</a>
<a href=""mailto:ifyi.k.e.1.1@gmail.com"">ifyi.k.e.1.1@gmail.com</a>
<a href=""mailto:ifyi.ke11@gmail.com"">ifyi.ke11@gmail.com</a>
<a href=""mailto:i.fyike11@gmail.com"">i.fyike11@gmail.com</a>
<a href=""mailto:ify.i.k.e11@gmail.com"">ify.i.k.e11@gmail.com</a>
<a href=""mailto:i.fyi.k.e.1.1@gmail.com"">i.fyi.k.e.1.1@gmail.com</a>
<a href=""mailto:i.fy.ik.e1.1@gmail.com"">i.fy.ik.e1.1@gmail.com</a>
<a href=""mailto:if.y.i.ke1.1@gmail.com"">if.y.i.ke1.1@gmail.com</a>
<a href=""mailto:i.f.y.ike.11@gmail.com"">i.f.y.ike.11@gmail.com</a>
<a href=""mailto:i.fyik.e1.1@gmail.com"">i.fyik.e1.1@gmail.com</a>
<a href=""mailto:i.fyik.e11@gmail.com"">i.fyik.e11@gmail.com</a>
<a href=""mailto:if.yike.11@gmail.com"">if.yike.11@gmail.com</a>
<a href=""mailto:ify.ike.11@gmail.com"">ify.ike.11@gmail.com</a>
<a href=""mailto:i.f.y.ike11@gmail.com"">i.f.y.ike11@gmail.com</a>
<a href=""mailto:i.fyi.ke11@gmail.com"">i.fyi.ke11@gmail.com</a>
<a href=""mailto:i.fyi.k.e1.1@gmail.com"">i.fyi.k.e1.1@gmail.com</a>
<a href=""mailto:ify.i.ke.1.1@gmail.com"">ify.i.ke.1.1@gmail.com</a>
<a href=""mailto:ifyike11@gmail.com"">ifyike11@gmail.com</a>
<a href=""mailto:ifyik.e11@gmail.com"">ifyik.e11@gmail.com</a>
<a href=""mailto:i.f.yi.ke1.1@gmail.com"">i.f.yi.ke1.1@gmail.com</a>
<a href=""mailto:i.fy.i.k.e11@gmail.com"">i.fy.i.k.e11@gmail.com</a>
<a href=""mailto:if.y.ike1.1@gmail.com"">if.y.ike1.1@gmail.com</a>
<a href=""mailto:if.yi.ke11@gmail.com"">if.yi.ke11@gmail.com</a>
<a href=""mailto:ifyi.ke.1.1@gmail.com"">ifyi.ke.1.1@gmail.com</a>
<a href=""mailto:if.y.ike.1.1@gmail.com"">if.y.ike.1.1@gmail.com</a>
<a href=""mailto:ifyike.11@gmail.com"">ifyike.11@gmail.com</a>
<a href=""mailto:if.yi.ke.1.1@gmail.com"">if.yi.ke.1.1@gmail.com</a>
<a href=""mailto:i.fyi.ke.11@gmail.com"">i.fyi.ke.11@gmail.com</a>
<a href=""mailto:ifyike1.1@gmail.com"">ifyike1.1@gmail.com</a>
<a href=""mailto:if.y.i.k.e1.1@gmail.com"">if.y.i.k.e1.1@gmail.com</a>
<a href=""mailto:ify.ike11@gmail.com"">ify.ike11@gmail.com</a>
<a href=""mailto:if.yik.e11@gmail.com"">if.yik.e11@gmail.com</a>
<a href=""mailto:i.f.y.ik.e1.1@gmail.com"">i.f.y.ik.e1.1@gmail.com</a>
<a href=""mailto:if.yike1.1@gmail.com"">if.yike1.1@gmail.com</a>
<a href=""mailto:i.f.yi.k.e1.1@gmail.com"">i.f.yi.k.e1.1@gmail.com</a>
<a href=""mailto:i.f.y.ike1.1@gmail.com"">i.f.y.ike1.1@gmail.com</a>
<a href=""mailto:ify.i.k.e.11@gmail.com"">ify.i.k.e.11@gmail.com</a>
<a href=""mailto:if.yi.k.e11@gmail.com"">if.yi.k.e11@gmail.com</a>
<a href=""mailto:if.y.ike11@gmail.com"">if.y.ike11@gmail.com</a>
<a href=""mailto:if.yike11@gmail.com"">if.yike11@gmail.com</a>
<a href=""mailto:if.y.i.k.e.11@gmail.com"">if.y.i.k.e.11@gmail.com</a>
<a href=""mailto:i.f.yik.e.1.1@gmail.com"">i.f.yik.e.1.1@gmail.com</a>
<a href=""mailto:ifyik.e.1.1@gmail.com"">ifyik.e.1.1@gmail.com</a>
<a href=""mailto:i.fy.i.k.e.11@gmail.com"">i.fy.i.k.e.11@gmail.com</a>
<a href=""mailto:if.yik.e.11@gmail.com"">if.yik.e.11@gmail.com</a>
<a href=""mailto:if.y.ik.e1.1@gmail.com"">if.y.ik.e1.1@gmail.com</a>
<a href=""mailto:i.f.y.i.ke.11@gmail.com"">i.f.y.i.ke.11@gmail.com</a>
<a href=""mailto:ify.ike1.1@gmail.com"">ify.ike1.1@gmail.com</a>
<a href=""mailto:ify.ik.e.11@gmail.com"">ify.ik.e.11@gmail.com</a>
<a href=""mailto:i.fyike1.1@gmail.com"">i.fyike1.1@gmail.com</a>
<a href=""mailto:i.fy.ike11@gmail.com"">i.fy.ike11@gmail.com</a>
<a href=""mailto:ifyi.k.e1.1@gmail.com"">ifyi.k.e1.1@gmail.com</a>
<a href=""mailto:if.yike.1.1@gmail.com"">if.yike.1.1@gmail.com</a>
<a href=""mailto:if.yi.ke1.1@gmail.com"">if.yi.ke1.1@gmail.com</a>
<a href=""mailto:if.y.i.k.e.1.1@gmail.com"">if.y.i.k.e.1.1@gmail.com</a>
<a href=""mailto:if.yi.k.e.11@gmail.com"">if.yi.k.e.11@gmail.com</a>
<a href=""mailto:i.fy.ike.1.1@gmail.com"">i.fy.ike.1.1@gmail.com</a>
<a href=""mailto:i.f.yik.e11@gmail.com"">i.f.yik.e11@gmail.com</a>
<a href=""mailto:i.fy.ike.11@gmail.com"">i.fy.ike.11@gmail.com</a>
<a href=""mailto:if.y.ike.11@gmail.com"">if.y.ike.11@gmail.com</a>
<a href=""mailto:i.f.yi.k.e.1.1@gmail.com"">i.f.yi.k.e.1.1@gmail.com</a>
<a href=""mailto:i.f.y.ik.e.1.1@gmail.com"">i.f.y.ik.e.1.1@gmail.com</a>
<a href=""mailto:i.f.y.ik.e.11@gmail.com"">i.f.y.ik.e.11@gmail.com</a>
<a href=""mailto:i.fy.ike1.1@gmail.com"">i.fy.ike1.1@gmail.com</a>
<a href=""mailto:if.y.ik.e11@gmail.com"">if.y.ik.e11@gmail.com</a>
<a href=""mailto:i.fy.i.ke.11@gmail.com"">i.fy.i.ke.11@gmail.com</a>
<a href=""mailto:i.f.yik.e.11@gmail.com"">i.f.yik.e.11@gmail.com</a>
<a href=""mailto:i.fyike.1.1@gmail.com"">i.fyike.1.1@gmail.com</a>
<a href=""mailto:if.y.i.ke11@gmail.com"">if.y.i.ke11@gmail.com</a>
<a href=""mailto:i.f.yike1.1@gmail.com"">i.f.yike1.1@gmail.com</a>
<a href=""mailto:i.f.yike11@gmail.com"">i.f.yike11@gmail.com</a>
<a href=""mailto:i.f.y.i.k.e1.1@gmail.com"">i.f.y.i.k.e1.1@gmail.com</a>
<a href=""mailto:i.f.y.i.ke1.1@gmail.com"">i.f.y.i.ke1.1@gmail.com</a>
<a href=""mailto:if.y.i.ke.11@gmail.com"">if.y.i.ke.11@gmail.com</a>
<a href=""mailto:ify.i.ke1.1@gmail.com"">ify.i.ke1.1@gmail.com</a>
<a href=""mailto:i.fy.i.ke.1.1@gmail.com"">i.fy.i.ke.1.1@gmail.com</a>
<a href=""mailto:if.yik.e1.1@gmail.com"">if.yik.e1.1@gmail.com</a>
<a href=""mailto:if.yi.ke.11@gmail.com"">if.yi.ke.11@gmail.com</a>
<a href=""mailto:i.fy.ik.e11@gmail.com"">i.fy.ik.e11@gmail.com</a>
<a href=""mailto:i.f.yi.k.e.11@gmail.com"">i.f.yi.k.e.11@gmail.com</a>
<a href=""mailto:i.fyi.k.e11@gmail.com"">i.fyi.k.e11@gmail.com</a>
<a href=""mailto:i.f.y.i.k.e.1.1@gmail.com"">i.f.y.i.k.e.1.1@gmail.com</a>
<a href=""mailto:i.fy.ik.e.1.1@gmail.com"">i.fy.ik.e.1.1@gmail.com</a>
<a href=""mailto:i.f.yike.1.1@gmail.com"">i.f.yike.1.1@gmail.com</a>
<a href=""mailto:i.f.y.i.ke11@gmail.com"">i.f.y.i.ke11@gmail.com</a>
<a href=""mailto:ifyi.k.e.11@gmail.com"">ifyi.k.e.11@gmail.com</a>
<a href=""mailto:ify.i.ke.11@gmail.com"">ify.i.ke.11@gmail.com</a>
<a href=""mailto:i.fyik.e.1.1@gmail.com"">i.fyik.e.1.1@gmail.com</a>
<a href=""mailto:i.fyi.ke1.1@gmail.com"">i.fyi.ke1.1@gmail.com</a>
<a href=""mailto:i.fy.i.k.e1.1@gmail.com"">i.fy.i.k.e1.1@gmail.com</a>
<a href=""mailto:i.fy.i.ke1.1@gmail.com"">i.fy.i.ke1.1@gmail.com</a>
<a href=""mailto:i.f.yi.ke.1.1@gmail.com"">i.f.yi.ke.1.1@gmail.com</a>
<a href=""mailto:ifyik.e1.1@gmail.com"">ifyik.e1.1@gmail.com</a>
<a href=""mailto:if.y.i.k.e11@gmail.com"">if.y.i.k.e11@gmail.com</a>
<a href=""mailto:i.f.y.i.ke.1.1@gmail.com"">i.f.y.i.ke.1.1@gmail.com</a>
<a href=""mailto:i.fy.ik.e.11@gmail.com"">i.fy.ik.e.11@gmail.com</a>
<a href=""mailto:ify.ik.e.1.1@gmail.com"">ify.ik.e.1.1@gmail.com</a>
<a href=""mailto:i.fyi.k.e.11@gmail.com"">i.fyi.k.e.11@gmail.com</a>
<a href=""mailto:ify.ik.e11@gmail.com"">ify.ik.e11@gmail.com</a>
<a href=""mailto:i.fy.i.k.e.1.1@gmail.com"">i.fy.i.k.e.1.1@gmail.com</a>
<a href=""mailto:i.f.yi.k.e11@gmail.com"">i.f.yi.k.e11@gmail.com</a>
<a href=""mailto:if.yi.k.e.1.1@gmail.com"">if.yi.k.e.1.1@gmail.com</a>
<a href=""mailto:if.y.ik.e.1.1@gmail.com"">if.y.ik.e.1.1@gmail.com</a>
<a href=""mailto:if.yik.e.1.1@gmail.com"">if.yik.e.1.1@gmail.com</a>
<a href=""mailto:ifyi.ke.11@gmail.com"">ifyi.ke.11@gmail.com</a>
<a href=""mailto:ify.i.k.e1.1@gmail.com"">ify.i.k.e1.1@gmail.com</a>
<a href=""mailto:ify.ik.e1.1@gmail.com"">ify.ik.e1.1@gmail.com</a>
<a href=""mailto:i.fyike.11@gmail.com"">i.fyike.11@gmail.com</a>
<a href=""mailto:ify.i.ke11@gmail.com"">ify.i.ke11@gmail.com</a>
<a href=""mailto:ify.ike.1.1@gmail.com"">ify.ike.1.1@gmail.com</a>
<a href=""mailto:ifyik.e.11@gmail.com"">ifyik.e.11@gmail.com</a>
<a href=""mailto:ify.i.k.e.1.1@gmail.com"">ify.i.k.e.1.1@gmail.com</a>
<a href=""mailto:i.f.yi.ke11@gmail.com"">i.f.yi.ke11@gmail.com</a>
<a href=""mailto:if.yi.k.e1.1@gmail.com"">if.yi.k.e1.1@gmail.com</a>
<a href=""mailto:ifyi.ke1.1@gmail.com"">ifyi.ke1.1@gmail.com</a>
<a href=""mailto:i.fy.i.ke11@gmail.com"">i.fy.i.ke11@gmail.com</a>
<a href=""mailto:i.f.y.i.k.e11@gmail.com"">i.f.y.i.k.e11@gmail.com</a>
<a href=""mailto:ifyike.1.1@gmail.com"">ifyike.1.1@gmail.com</a>
<a href=""mailto:if.y.i.ke.1.1@gmail.com"">if.y.i.ke.1.1@gmail.com</a>
<a href=""mailto:i.f.y.ik.e11@gmail.com"">i.f.y.ik.e11@gmail.com</a>
<a href=""mailto:i.f.yik.e1.1@gmail.com"">i.f.yik.e1.1@gmail.com</a>
<a href=""mailto:i.f.y.ike.1.1@gmail.com"">i.f.y.ike.1.1@gmail.com</a>
<a href=""mailto:ms.helenothman@gmail.com"">ms.helenothman@gmail.com</a>
<a href=""mailto:m.s..h.ele.nothm.a.n@gmail.com"">m.s..h.ele.nothm.a.n@gmail.com</a>
<a href=""mailto:m.s...h.el.en.othm.a.n@gmail.com"">m.s...h.el.en.othm.a.n@gmail.com</a>
<a href=""mailto:m.s...he.le.n.o.t.h.man@gmail.com"">m.s...he.le.n.o.t.h.man@gmail.com</a>
<a href=""mailto:ms.hele.no.th.man@gmail.com"">ms.hele.no.th.man@gmail.com</a>
<a href=""mailto:m.s...hel.e.n.o.t.h.man@gmail.com"">m.s...hel.e.n.o.t.h.man@gmail.com</a>
<a href=""mailto:ms...heleno.th.m.an@gmail.com"">ms...heleno.th.m.an@gmail.com</a>
<a href=""mailto:m.s.h.e.l.e.no.t.h.ma.n@gmail.com"">m.s.h.e.l.e.no.t.h.ma.n@gmail.com</a>
<a href=""mailto:ms..h.e.len.ot.hman@gmail.com"">ms..h.e.len.ot.hman@gmail.com</a>
<a href=""mailto:m.s..hele.n.o.thm.a.n@gmail.com"">m.s..hele.n.o.thm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.ele.no.t.hm.an@gmail.com"">m.s..h.ele.no.t.hm.an@gmail.com</a>
<a href=""mailto:m.s...he.le.no.th.man@gmail.com"">m.s...he.le.no.th.man@gmail.com</a>
<a href=""mailto:ms..hel.enot.h.man@gmail.com"">ms..hel.enot.h.man@gmail.com</a>
<a href=""mailto:m.s..h.ele.no.thm.a.n@gmail.com"">m.s..h.ele.no.thm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.e.le.n.oth.m.an@gmail.com"">m.s..h.e.le.n.oth.m.an@gmail.com</a>
<a href=""mailto:ms..h.el.e.n.oth.man@gmail.com"">ms..h.el.e.n.oth.man@gmail.com</a>
<a href=""mailto:ms...h.el.en.ot.hman@gmail.com"">ms...h.el.en.ot.hman@gmail.com</a>
<a href=""mailto:ms..hel.en.oth.m.a.n@gmail.com"">ms..hel.en.oth.m.a.n@gmail.com</a>
<a href=""mailto:ms...he.l.e.n.o.th.man@gmail.com"">ms...he.l.e.n.o.th.man@gmail.com</a>
<a href=""mailto:ms..hele.n.o.th.m.a.n@gmail.com"">ms..hele.n.o.th.m.a.n@gmail.com</a>
<a href=""mailto:m.s.hele.no.th.m.a.n@gmail.com"">m.s.hele.no.th.m.a.n@gmail.com</a>
<a href=""mailto:m.s.h.elen.othman@gmail.com"">m.s.h.elen.othman@gmail.com</a>
<a href=""mailto:m.s.h.el.eno.t.hman@gmail.com"">m.s.h.el.eno.t.hman@gmail.com</a>
<a href=""mailto:m.s.hel.e.n.othm.a.n@gmail.com"">m.s.hel.e.n.othm.a.n@gmail.com</a>
<a href=""mailto:m.s.hele.n.oth.man@gmail.com"">m.s.hele.n.oth.man@gmail.com</a>
<a href=""mailto:ms..h.e.l.enot.h.man@gmail.com"">ms..h.e.l.enot.h.man@gmail.com</a>
<a href=""mailto:m.s...he.lenoth.m.an@gmail.com"">m.s...he.lenoth.m.an@gmail.com</a>
<a href=""mailto:ms..he.le.no.t.hman@gmail.com"">ms..he.le.no.t.hman@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.n.ot.h.ma.n@gmail.com"">ms..h.e.l.e.n.ot.h.ma.n@gmail.com</a>
<a href=""mailto:m.s...h.el.e.n.othman@gmail.com"">m.s...h.el.e.n.othman@gmail.com</a>
<a href=""mailto:m.s..hele.n.o.th.man@gmail.com"">m.s..hele.n.o.th.man@gmail.com</a>
<a href=""mailto:ms..he.l.e.n.o.t.hma.n@gmail.com"">ms..he.l.e.n.o.t.hma.n@gmail.com</a>
<a href=""mailto:ms.hele.no.t.hma.n@gmail.com"">ms.hele.no.t.hma.n@gmail.com</a>
<a href=""mailto:m.s..h.e.leno.thm.an@gmail.com"">m.s..h.e.leno.thm.an@gmail.com</a>
<a href=""mailto:ms.h.el.e.n.o.t.h.ma.n@gmail.com"">ms.h.el.e.n.o.t.h.ma.n@gmail.com</a>
<a href=""mailto:ms.h.e.lenot.hma.n@gmail.com"">ms.h.e.lenot.hma.n@gmail.com</a>
<a href=""mailto:m.s...he.leno.t.hm.a.n@gmail.com"">m.s...he.leno.t.hm.a.n@gmail.com</a>
<a href=""mailto:ms...h.el.en.ot.h.m.an@gmail.com"">ms...h.el.en.ot.h.m.an@gmail.com</a>
<a href=""mailto:ms..h.e.le.n.o.th.m.an@gmail.com"">ms..h.e.le.n.o.th.m.an@gmail.com</a>
<a href=""mailto:ms...h.elenothma.n@gmail.com"">ms...h.elenothma.n@gmail.com</a>
<a href=""mailto:ms..hele.n.o.t.hma.n@gmail.com"">ms..hele.n.o.t.hma.n@gmail.com</a>
<a href=""mailto:m.s...he.l.eno.thman@gmail.com"">m.s...he.l.eno.thman@gmail.com</a>
<a href=""mailto:m.s..h.el.enoth.ma.n@gmail.com"">m.s..h.el.enoth.ma.n@gmail.com</a>
<a href=""mailto:m.s..h.elen.o.t.hm.a.n@gmail.com"">m.s..h.elen.o.t.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.e.l.en.othman@gmail.com"">m.s..h.e.l.en.othman@gmail.com</a>
<a href=""mailto:m.s..he.le.no.t.h.m.a.n@gmail.com"">m.s..he.le.no.t.h.m.a.n@gmail.com</a>
<a href=""mailto:m.s..h.e.lenothm.a.n@gmail.com"">m.s..h.e.lenothm.a.n@gmail.com</a>
<a href=""mailto:m.s.h.el.enothm.a.n@gmail.com"">m.s.h.el.enothm.a.n@gmail.com</a>
<a href=""mailto:ms.he.l.eno.t.hm.an@gmail.com"">ms.he.l.eno.t.hm.an@gmail.com</a>
<a href=""mailto:m.s...h.e.le.n.ot.h.m.an@gmail.com"">m.s...h.e.le.n.ot.h.m.an@gmail.com</a>
<a href=""mailto:ms..he.len.oth.m.an@gmail.com"">ms..he.len.oth.m.an@gmail.com</a>
<a href=""mailto:ms..h.e.le.no.thm.a.n@gmail.com"">ms..h.e.le.no.thm.a.n@gmail.com</a>
<a href=""mailto:ms.he.l.en.ot.hman@gmail.com"">ms.he.l.en.ot.hman@gmail.com</a>
<a href=""mailto:m.s..he.l.enoth.m.an@gmail.com"">m.s..he.l.enoth.m.an@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.no.t.hm.an@gmail.com"">ms..h.e.l.e.no.t.hm.an@gmail.com</a>
<a href=""mailto:ms.h.e.leno.th.man@gmail.com"">ms.h.e.leno.th.man@gmail.com</a>
<a href=""mailto:ms..h.e.l.eno.t.hm.an@gmail.com"">ms..h.e.l.eno.t.hm.an@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.n.o.thm.a.n@gmail.com"">ms..h.e.l.e.n.o.thm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.ele.nothman@gmail.com"">m.s..h.ele.nothman@gmail.com</a>
<a href=""mailto:m.s..h.e.le.no.th.man@gmail.com"">m.s..h.e.le.no.th.man@gmail.com</a>
<a href=""mailto:m.s.he.leno.t.h.man@gmail.com"">m.s.he.leno.t.h.man@gmail.com</a>
<a href=""mailto:ms..he.l.e.n.ot.hm.an@gmail.com"">ms..he.l.e.n.ot.hm.an@gmail.com</a>
<a href=""mailto:ms.h.el.e.noth.ma.n@gmail.com"">ms.h.el.e.noth.ma.n@gmail.com</a>
<a href=""mailto:m.s.h.el.eno.th.ma.n@gmail.com"">m.s.h.el.eno.th.ma.n@gmail.com</a>
<a href=""mailto:ms..h.el.eno.t.hm.an@gmail.com"">ms..h.el.eno.t.hm.an@gmail.com</a>
<a href=""mailto:ms..hel.eno.t.h.ma.n@gmail.com"">ms..hel.eno.t.h.ma.n@gmail.com</a>
<a href=""mailto:ms..h.e.leno.t.hman@gmail.com"">ms..h.e.leno.t.hman@gmail.com</a>
<a href=""mailto:ms.h.e.le.nothm.a.n@gmail.com"">ms.h.e.le.nothm.a.n@gmail.com</a>
<a href=""mailto:ms..h.ele.n.oth.man@gmail.com"">ms..h.ele.n.oth.man@gmail.com</a>
<a href=""mailto:ms..h.e.l.eno.thman@gmail.com"">ms..h.e.l.eno.thman@gmail.com</a>
<a href=""mailto:ms...h.el.e.n.o.t.hm.a.n@gmail.com"">ms...h.el.e.n.o.t.hm.a.n@gmail.com</a>
<a href=""mailto:ms..hel.e.n.o.t.hm.a.n@gmail.com"">ms..hel.e.n.o.t.hm.a.n@gmail.com</a>
<a href=""mailto:ms...hele.n.oth.man@gmail.com"">ms...hele.n.oth.man@gmail.com</a>
<a href=""mailto:ms..helen.ot.hman@gmail.com"">ms..helen.ot.hman@gmail.com</a>
<a href=""mailto:ms..h.e.le.n.othm.a.n@gmail.com"">ms..h.e.le.n.othm.a.n@gmail.com</a>
<a href=""mailto:m.s..he.lenothm.an@gmail.com"">m.s..he.lenothm.an@gmail.com</a>
<a href=""mailto:m.s.h.e.len.oth.man@gmail.com"">m.s.h.e.len.oth.man@gmail.com</a>
<a href=""mailto:ms...h.e.le.no.th.man@gmail.com"">ms...h.e.le.no.th.man@gmail.com</a>
<a href=""mailto:ms.h.e.l.eno.t.h.ma.n@gmail.com"">ms.h.e.l.eno.t.h.ma.n@gmail.com</a>
<a href=""mailto:m.s..hele.not.h.m.a.n@gmail.com"">m.s..hele.not.h.m.a.n@gmail.com</a>
<a href=""mailto:m.s..h.e.lenoth.m.an@gmail.com"">m.s..h.e.lenoth.m.an@gmail.com</a>
<a href=""mailto:ms..h.el.e.no.thma.n@gmail.com"">ms..h.el.e.no.thma.n@gmail.com</a>
<a href=""mailto:m.s.helen.o.thman@gmail.com"">m.s.helen.o.thman@gmail.com</a>
<a href=""mailto:ms..h.e.l.eno.t.hma.n@gmail.com"">ms..h.e.l.eno.t.hma.n@gmail.com</a>
<a href=""mailto:m.s.h.el.en.o.t.h.man@gmail.com"">m.s.h.el.en.o.t.h.man@gmail.com</a>
<a href=""mailto:ms..hel.e.n.o.th.ma.n@gmail.com"">ms..hel.e.n.o.th.ma.n@gmail.com</a>
<a href=""mailto:m.s...h.e.l.enot.h.m.an@gmail.com"">m.s...h.e.l.enot.h.m.an@gmail.com</a>
<a href=""mailto:ms.he.le.no.t.hm.a.n@gmail.com"">ms.he.le.no.t.hm.a.n@gmail.com</a>
<a href=""mailto:ms..h.e.l.eno.thm.an@gmail.com"">ms..h.e.l.eno.thm.an@gmail.com</a>
<a href=""mailto:m.s...hel.enothman@gmail.com"">m.s...hel.enothman@gmail.com</a>
<a href=""mailto:m.s..he.l.e.not.hma.n@gmail.com"">m.s..he.l.e.not.hma.n@gmail.com</a>
<a href=""mailto:m.s...h.ele.n.oth.m.a.n@gmail.com"">m.s...h.ele.n.oth.m.a.n@gmail.com</a>
<a href=""mailto:ms..he.le.noth.ma.n@gmail.com"">ms..he.le.noth.ma.n@gmail.com</a>
<a href=""mailto:m.s..helenothm.a.n@gmail.com"">m.s..helenothm.a.n@gmail.com</a>
<a href=""mailto:ms.h.e.l.eno.th.m.a.n@gmail.com"">ms.h.e.l.eno.th.m.a.n@gmail.com</a>
<a href=""mailto:ms...he.le.n.othma.n@gmail.com"">ms...he.le.n.othma.n@gmail.com</a>
<a href=""mailto:ms.h.el.eno.t.hm.a.n@gmail.com"">ms.h.el.eno.t.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..he.l.e.n.o.t.h.m.a.n@gmail.com"">m.s..he.l.e.n.o.t.h.m.a.n@gmail.com</a>
<a href=""mailto:m.s..he.l.en.ot.hma.n@gmail.com"">m.s..he.l.en.ot.hma.n@gmail.com</a>
<a href=""mailto:m.s...hel.en.ot.h.man@gmail.com"">m.s...hel.en.ot.h.man@gmail.com</a>
<a href=""mailto:ms...he.l.eno.thm.a.n@gmail.com"">ms...he.l.eno.thm.a.n@gmail.com</a>
<a href=""mailto:ms.h.e.l.enoth.man@gmail.com"">ms.h.e.l.enoth.man@gmail.com</a>
<a href=""mailto:ms.hel.e.no.thman@gmail.com"">ms.hel.e.no.thman@gmail.com</a>
<a href=""mailto:m.s..he.le.n.oth.m.an@gmail.com"">m.s..he.le.n.oth.m.an@gmail.com</a>
<a href=""mailto:m.s...h.ele.n.o.th.ma.n@gmail.com"">m.s...h.ele.n.o.th.ma.n@gmail.com</a>
<a href=""mailto:ms..hel.enot.hman@gmail.com"">ms..hel.enot.hman@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.not.hm.a.n@gmail.com"">ms..h.e.l.e.not.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.el.e.not.hm.an@gmail.com"">m.s..h.el.e.not.hm.an@gmail.com</a>
<a href=""mailto:m.s.h.e.le.n.o.thm.an@gmail.com"">m.s.h.e.le.n.o.thm.an@gmail.com</a>
<a href=""mailto:m.s...h.el.eno.t.hm.an@gmail.com"">m.s...h.el.eno.t.hm.an@gmail.com</a>
<a href=""mailto:ms...hel.enot.hm.a.n@gmail.com"">ms...hel.enot.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..he.l.e.no.t.hm.a.n@gmail.com"">m.s..he.l.e.no.t.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..he.l.en.o.t.hma.n@gmail.com"">m.s..he.l.en.o.t.hma.n@gmail.com</a>
<a href=""mailto:m.s.hele.n.o.th.ma.n@gmail.com"">m.s.hele.n.o.th.ma.n@gmail.com</a>
<a href=""mailto:m.s..h.ele.n.o.thm.a.n@gmail.com"">m.s..h.ele.n.o.thm.a.n@gmail.com</a>
<a href=""mailto:m.s..hele.n.o.t.hman@gmail.com"">m.s..hele.n.o.t.hman@gmail.com</a>
<a href=""mailto:ms.hel.en.ot.hm.a.n@gmail.com"">ms.hel.en.ot.hm.a.n@gmail.com</a>
<a href=""mailto:ms.h.e.l.e.n.o.thma.n@gmail.com"">ms.h.e.l.e.n.o.thma.n@gmail.com</a>
<a href=""mailto:m.s..he.l.en.o.t.hm.an@gmail.com"">m.s..he.l.en.o.t.hm.an@gmail.com</a>
<a href=""mailto:m.s...h.e.l.enothm.a.n@gmail.com"">m.s...h.e.l.enothm.a.n@gmail.com</a>
<a href=""mailto:ms...hel.en.ot.h.man@gmail.com"">ms...hel.en.ot.h.man@gmail.com</a>
<a href=""mailto:m.s..he.l.enothm.an@gmail.com"">m.s..he.l.enothm.an@gmail.com</a>
<a href=""mailto:m.s..h.el.eno.th.m.an@gmail.com"">m.s..h.el.eno.th.m.an@gmail.com</a>
<a href=""mailto:ms.he.l.enothm.an@gmail.com"">ms.he.l.enothm.an@gmail.com</a>
<a href=""mailto:ms.hel.e.no.t.hman@gmail.com"">ms.hel.e.no.t.hman@gmail.com</a>
<a href=""mailto:ms.h.el.en.o.t.h.ma.n@gmail.com"">ms.h.el.en.o.t.h.ma.n@gmail.com</a>
<a href=""mailto:ms..h.el.e.no.t.hman@gmail.com"">ms..h.el.e.no.t.hman@gmail.com</a>
<a href=""mailto:m.s..h.e.l.e.n.o.t.hma.n@gmail.com"">m.s..h.e.l.e.n.o.t.hma.n@gmail.com</a>
<a href=""mailto:ms.he.l.e.n.othm.an@gmail.com"">ms.he.l.e.n.othm.an@gmail.com</a>
<a href=""mailto:m.s.helen.ot.h.m.a.n@gmail.com"">m.s.helen.ot.h.m.a.n@gmail.com</a>
<a href=""mailto:ms.he.l.e.no.t.hman@gmail.com"">ms.he.l.e.no.t.hman@gmail.com</a>
<a href=""mailto:m.s..he.l.en.o.t.h.m.an@gmail.com"">m.s..he.l.en.o.t.h.m.an@gmail.com</a>
<a href=""mailto:m.s..hel.en.ot.h.ma.n@gmail.com"">m.s..hel.en.ot.h.ma.n@gmail.com</a>
<a href=""mailto:m.s.hel.en.o.t.h.m.a.n@gmail.com"">m.s.hel.en.o.t.h.m.a.n@gmail.com</a>
<a href=""mailto:ms..hel.e.n.o.t.h.man@gmail.com"">ms..hel.e.n.o.t.h.man@gmail.com</a>
<a href=""mailto:m.s..he.le.n.oth.m.an@gmail.com"">m.s..he.le.n.oth.m.an@gmail.com</a>
<a href=""mailto:m.s.helen.o.thm.a.n@gmail.com"">m.s.helen.o.thm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.elen.ot.h.m.an@gmail.com"">m.s..h.elen.ot.h.m.an@gmail.com</a>
<a href=""mailto:ms..h.el.en.ot.h.man@gmail.com"">ms..h.el.en.ot.h.man@gmail.com</a>
<a href=""mailto:ms..he.l.en.ot.hman@gmail.com"">ms..he.l.en.ot.hman@gmail.com</a>
<a href=""mailto:m.s.h.el.en.oth.m.an@gmail.com"">m.s.h.el.en.oth.m.an@gmail.com</a>
<a href=""mailto:m.s..h.el.e.n.o.t.hman@gmail.com"">m.s..h.el.e.n.o.t.hman@gmail.com</a>
<a href=""mailto:ms..he.le.not.h.m.an@gmail.com"">ms..he.le.not.h.m.an@gmail.com</a>
<a href=""mailto:m.s..hel.eno.t.hm.a.n@gmail.com"">m.s..hel.eno.t.hm.a.n@gmail.com</a>
<a href=""mailto:m.s..h.el.e.not.hm.a.n@gmail.com"">m.s..h.el.e.not.hm.a.n@gmail.com</a>
<a href=""mailto:m.s.h.eleno.t.hm.an@gmail.com"">m.s.h.eleno.t.hm.an@gmail.com</a>
<a href=""mailto:ms.hele.n.o.th.m.an@gmail.com"">ms.hele.n.o.th.m.an@gmail.com</a>
<a href=""mailto:ms.h.e.l.en.o.t.hm.an@gmail.com"">ms.h.e.l.en.o.t.hm.an@gmail.com</a>
<a href=""mailto:ms..he.l.en.o.t.hm.a.n@gmail.com"">ms..he.l.en.o.t.hm.a.n@gmail.com</a>
<a href=""mailto:m.s...he.len.othman@gmail.com"">m.s...he.len.othman@gmail.com</a>
<a href=""mailto:ms..h.elenothm.an@gmail.com"">ms..h.elenothm.an@gmail.com</a>
<a href=""mailto:m.s..helen.oth.ma.n@gmail.com"">m.s..helen.oth.ma.n@gmail.com</a>
<a href=""mailto:ms..hel.enothm.a.n@gmail.com"">ms..hel.enothm.a.n@gmail.com</a>
<a href=""mailto:ms..hel.e.no.t.h.man@gmail.com"">ms..hel.e.no.t.h.man@gmail.com</a>
<a href=""mailto:m.s...hel.e.no.t.h.man@gmail.com"">m.s...hel.e.no.t.h.man@gmail.com</a>
<a href=""mailto:m.s.hel.en.o.thm.a.n@gmail.com"">m.s.hel.en.o.thm.a.n@gmail.com</a>
<a href=""mailto:ms..he.l.e.n.o.th.man@gmail.com"">ms..he.l.e.n.o.th.man@gmail.com</a>
<a href=""mailto:ms.hel.e.n.o.t.h.m.an@gmail.com"">ms.hel.e.n.o.t.h.m.an@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.n.oth.m.an@gmail.com"">ms..h.e.l.e.n.oth.m.an@gmail.com</a>
<a href=""mailto:m.s.h.e.l.en.ot.hm.an@gmail.com"">m.s.h.e.l.en.ot.hm.an@gmail.com</a>
<a href=""mailto:ms..h.el.en.ot.hma.n@gmail.com"">ms..h.el.en.ot.hma.n@gmail.com</a>
<a href=""mailto:m.s.hel.e.n.ot.hman@gmail.com"">m.s.hel.e.n.ot.hman@gmail.com</a>
<a href=""mailto:ms..h.el.e.not.hma.n@gmail.com"">ms..h.el.e.not.hma.n@gmail.com</a>
<a href=""mailto:m.s...he.le.no.th.m.an@gmail.com"">m.s...he.le.no.th.m.an@gmail.com</a>
<a href=""mailto:m.s..helenot.hman@gmail.com"">m.s..helenot.hman@gmail.com</a>
<a href=""mailto:m.s.helen.ot.hma.n@gmail.com"">m.s.helen.ot.hma.n@gmail.com</a>
<a href=""mailto:ms..hel.e.n.ot.h.man@gmail.com"">ms..hel.e.n.ot.h.man@gmail.com</a>
<a href=""mailto:m.s...h.el.e.n.ot.h.m.an@gmail.com"">m.s...h.el.e.n.ot.h.m.an@gmail.com</a>
<a href=""mailto:m.s.he.l.e.n.ot.hman@gmail.com"">m.s.he.l.e.n.ot.hman@gmail.com</a>
<a href=""mailto:m.s..h.e.l.enot.hman@gmail.com"">m.s..h.e.l.enot.hman@gmail.com</a>
<a href=""mailto:m.s...h.e.l.enot.h.ma.n@gmail.com"">m.s...h.e.l.enot.h.ma.n@gmail.com</a>
<a href=""mailto:m.s..hel.e.nothman@gmail.com"">m.s..hel.e.nothman@gmail.com</a>
<a href=""mailto:m.s.h.e.l.e.not.h.m.an@gmail.com"">m.s.h.e.l.e.not.h.m.an@gmail.com</a>
<a href=""mailto:ms...h.ele.n.o.th.m.a.n@gmail.com"">ms...h.ele.n.o.th.m.a.n@gmail.com</a>
<a href=""mailto:ms.h.el.e.not.hman@gmail.com"">ms.h.el.e.not.hman@gmail.com</a>
<a href=""mailto:ms...h.el.enot.hman@gmail.com"">ms...h.el.enot.hman@gmail.com</a>
<a href=""mailto:m.s...hel.enot.h.m.an@gmail.com"">m.s...hel.enot.h.m.an@gmail.com</a>
<a href=""mailto:ms..h.el.e.n.o.th.ma.n@gmail.com"">ms..h.el.e.n.o.th.ma.n@gmail.com</a>
<a href=""mailto:ms.he.l.en.ot.hm.an@gmail.com"">ms.he.l.en.ot.hm.an@gmail.com</a>
<a href=""mailto:ms..h.el.en.o.t.h.m.an@gmail.com"">ms..h.el.en.o.t.h.m.an@gmail.com</a>
<a href=""mailto:m.s..hel.e.not.hm.an@gmail.com"">m.s..hel.e.not.hm.an@gmail.com</a>
<a href=""mailto:m.s...hele.not.h.m.an@gmail.com"">m.s...hele.not.h.m.an@gmail.com</a>
<a href=""mailto:ms.helenot.h.m.a.n@gmail.com"">ms.helenot.h.m.a.n@gmail.com</a>
<a href=""mailto:ms..h.el.eno.th.man@gmail.com"">ms..h.el.eno.th.man@gmail.com</a>
<a href=""mailto:m.s..h.e.l.e.nothm.an@gmail.com"">m.s..h.e.l.e.nothm.an@gmail.com</a>
<a href=""mailto:m.s..hel.en.o.thm.an@gmail.com"">m.s..hel.en.o.thm.an@gmail.com</a>
<a href=""mailto:m.s..h.e.l.e.no.t.h.m.a.n@gmail.com"">m.s..h.e.l.e.no.t.h.m.a.n@gmail.com</a>
<a href=""mailto:m.s...hel.e.n.o.th.m.a.n@gmail.com"">m.s...hel.e.n.o.th.m.a.n@gmail.com</a>
<a href=""mailto:ms..h.el.enothm.a.n@gmail.com"">ms..h.el.enothm.a.n@gmail.com</a>
<a href=""mailto:ms.he.lenoth.m.a.n@gmail.com"">ms.he.lenoth.m.a.n@gmail.com</a>
<a href=""mailto:m.s..hele.n.o.t.hma.n@gmail.com"">m.s..hele.n.o.t.hma.n@gmail.com</a>
<a href=""mailto:m.s..h.el.enoth.m.an@gmail.com"">m.s..h.el.enoth.m.an@gmail.com</a>
<a href=""mailto:m.s..helen.o.th.man@gmail.com"">m.s..helen.o.th.man@gmail.com</a>
<a href=""mailto:m.s.he.l.en.o.t.hm.an@gmail.com"">m.s.he.l.en.o.t.hm.an@gmail.com</a>
<a href=""mailto:m.s.hele.n.ot.h.m.a.n@gmail.com"">m.s.hele.n.ot.h.m.a.n@gmail.com</a>
<a href=""mailto:ms...h.e.l.e.noth.ma.n@gmail.com"">ms...h.e.l.e.noth.ma.n@gmail.com</a>
<a href=""mailto:ms..h.ele.n.othm.a.n@gmail.com"">ms..h.ele.n.othm.a.n@gmail.com</a>
<a href=""mailto:ms..h.e.l.e.no.th.m.a.n@gmail.com"">ms..h.e.l.e.no.th.m.a.n@gmail.com</a>
<a href=""mailto:m.s..he.le.n.o.thm.a.n@gmail.com"">m.s..he.le.n.o.thm.a.n@gmail.com</a>
<a href=""mailto:ms..h.e.le.n.ot.hm.a.n@gmail.com"">ms..h.e.le.n.ot.hm.a.n@gmail.com</a>
<a href=""mailto:ms..h.e.l.enoth.ma.n@gmail.com"">ms..h.e.l.enoth.ma.n@gmail.com</a>"
SqJ4yaTv,request class .net,fs3120,C#,Monday 20th of November 2023 10:21:21 PM CDT,"public class RequestHeader
{
    public string Key { get; set; }
    public string Value { get; set; }
}

public class RequestBody
{
    public string Field1 { get; set; }
    public string Field2 { get; set; }
}

public class HttpRequest
{
    public List<RequestHeader> Headers { get; set; }
    public RequestBody Body { get; set; }
}

// Membuat instance dari HttpRequest
var request = new HttpRequest
{
    Headers = new List<RequestHeader>
    {
        new RequestHeader { Key = ""HeaderKey1"", Value = ""HeaderValue1"" },
        new RequestHeader { Key = ""HeaderKey2"", Value = ""HeaderValue2"" }
    },
    Body = new RequestBody
    {
        Field1 = ""DummyValue1"",
        Field2 = ""DummyValue2""
    }
};

// Menggunakan HttpClient untuk mengirim request dengan header dan body
HttpClient client = new HttpClient();

// Menambahkan header
foreach (var header in request.Headers)
{
    client.DefaultRequestHeaders.Add(header.Key, header.Value);
}

// Mengubah objek body menjadi JSON
var json = JsonConvert.SerializeObject(request.Body);

// Membuat HttpContent dari JSON
HttpContent content = new StringContent(json, Encoding.UTF8, ""application/json"");

// Mengirim request
var response = await client.PostAsync(""https://api.example.com/endpoint"", content);
"
4ndC1Yhx,fashion | about page,southcodes,CSS,Monday 20th of November 2023 10:07:37 PM CDT,"<!-- 
    
    - about page 'fashion' by skye southcodes.tumblr.com
    - modify as you please but please do not touch the credit
    - any errors? need help? have questions? let me know!
    southcodes.tumblr.com/inbox
    
    - normalize css by https://github.com/necolas
    - fonts by google
    - icon font by https://feathericons.com/
    
    - design by https://dribbble.com/shots/14013228-web-design/attachments/5629278?mode=media

 -->
<!DOCTYPE html>
<html>
<head>
	<title>{title}</title>
    
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
 
    <link rel=""shortcut icon"" href=""{favicon}"">
    <meta name=""description"" content=""{MetaDescription}""/>

    <!-- fonts -->
    <link rel=""preconnect"" href=""https://fonts.googleapis.com"">
    <link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
    <link href=""https://fonts.googleapis.com/css2?family=Karla:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&family=Montserrat:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap"" rel=""stylesheet"">

    <!-- normalize -->
    <link href=""https://necolas.github.io/normalize.css/7.0.0/normalize.css"" rel=""stylesheet"">
    
<style>

:root {
    --background:#eee;
    --boxes-background:#fff;
    --color-square:#8cb3db;
    --text:#333;
    --links: #6a98c5;
    --links-hover:  #36608c;
    --borders:#bbb;
    --icons: #36608c;
    --accent: #8cb3db;
}
  
.tmblr-iframe {display: none;}

::-webkit-scrollbar-thumb:vertical {border-left:2px solid var(--accent);}
::-webkit-scrollbar {width:6px}
::-webkit-scrollbar-track-piece{margin:15px 0;}

pre {font-family:consolas;
    white-space: pre-wrap;       /* css-3 */
    white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
    white-space: -pre-wrap;      /* Opera 4- */
    white-space: -o-pre-wrap;    /* Opera 7 */
    word-wrap: break-word;}      /* Internet Explorer 5.5+ */
* {margin: 0;padding: 0;box-sizing: border-box;}
p {margin: 1rem 0;}
body, figure{margin:0;padding:0;box-sizing: border-box;}
html{font: 14px 'Karla', sans-serif;}
body {font-size:14px;color:var(--text);background:var(--background);letter-spacing: .03rem;line-height: 120%;}
a {text-decoration: none;color:var(--links);word-break:break-word;}
a:hover {color:var(--links-hover);}
blockquote {margin:0;padding:0;}
img {max-width:100%;height: auto;display: block;margin:0}
hr {border:0;border-top:1px solid var(--borders);margin:0;}
nav ul,nav li {list-style-type:none;margin:0;padding:0;}

#color-square {
    background-color: var(--color-square);
    max-width: 70vh;
    width: 40rem;
    max-height: 70vh;
    height: 40rem;
    position: fixed;
    inset: auto 0 0 auto;
    z-index: -1;
}

/* containers */

#flex-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100vh;
    flex-direction: column;
}

/* sidebar */

aside {
    width: 35rem;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    overflow: auto;
    padding: 2rem 0;
}

.about-icon {
    width: 4rem;
    height: 4rem;
    border-radius: 100%;
    object-fit: cover;
    margin-bottom: 1rem;
}

img.about-icon {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

h1 {
    text-align: center;
    transform: rotate(180deg);
    writing-mode:vertical-rl;
    font: 600 2rem 'montserrat', sans-serif;
    letter-spacing: .2rem;
}

h1:after {
    content: '';
    width: 3px;
    height: 3rem;
    background-color: var(--accent);
    position: absolute;
    top: -1rem;left:-2rem;
}

#sidebar-navigation {
    width: 100%;
    font-size: .9rem;
    text-align: center;
    margin-top: 3rem;
    padding:1rem 1.5rem;
    border-top: 1px solid var(--borders);
}

#sidebar-navigation li {
    margin:4rem 0 0;
    position: relative;
    letter-spacing: .05rem;
}
#sidebar-navigation li:first-of-type {margin-top: 1.5rem;}

#sidebar-navigation li:after {
    content: '';
    width: 1.9rem;
    height: 1px;
    background-color: var(--borders);
    position: absolute;
    inset: -2rem 0 auto auto;
}

#sidebar-navigation li:first-of-type:after {display: none;}

/* main */

main {
    display: flex;
    width:90%;
    max-width: 65rem;
    height: 80%;
    max-height: 40rem;
    box-sizing: border-box;
    padding-right: 3rem;
    background-color: var(--boxes-background);
}

#main-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 80%;
    max-height: 40rem;
}

/*	navigation  */  

#main-navigation {
    width: 100%;
    height: 6rem;
    padding: 0 2rem;
    letter-spacing: .03rem;
}

#main-navigation ul {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

#main-navigation li {margin-left: 5rem;}

.nav-icon {width: 17px;}

/* main content */

#main-content {
    height: calc(100% - 6rem);
    width: 100%;
    display: flex;
    flex-direction: row;
}

/* about text */

#about {
    width: 50%;
    height: 90%;
    margin:0 auto;
    padding: 0;
    overflow: auto;
}

/* about details */

#about-details {
    list-style: none;
    margin-bottom: 2rem;
}

#about-details li {
    position: relative;
    margin:1rem 0;
    padding-left: 1.5rem;
}
#about-details li:before {
    content: '';
    position: absolute;
    top:7px;left:0;
    width: 1rem;
    height: 1px;
    background-color: var(--accent);
}

/* about image */

figure.about-image {
    height: 100%;
    width: 40%;
}

img.about-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* MEDIA */

@media only screen and (min-width:0px) and (max-width:750px) {

    /* containers */

    #flex-container {
        display: block;
        width: 90%;
        height: 100%;
        margin: 5rem auto;
    }

    /* sidebar */

    aside {
        width: 100%;
        display: block;
        padding: 2rem;
    }

    .about-icon {
        width: 6rem;
        height: 6rem;
        margin: 0 auto 2rem;
    }

    img.about-icon {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    h1 {
        transform: rotate(0);
        writing-mode:horizontal-tb;
        margin:0 0 4rem
    }

    h1:after {display: none;}
    
    h1 span {position: relative;}

    h1 span:after {
        content: '';
        width: 30%;
        height: 3px;
        background-color: var(--color-square);
        position: absolute;
        inset: auto 0 -1rem auto;
    }

    #sidebar-navigation {
        width: 100%;
        border: 0;
        margin: 0;
        padding:0;
    }

    #sidebar-navigation li {
        margin: 0 1.5rem 0;
        display: inline-block;
        padding-bottom: .5rem;
    }
    #sidebar-navigation li:first-of-type {margin-top: 0;}

    #sidebar-navigation li:after {
        content: '';
        width: 1.3rem;
        height: 1px;
        inset: auto 7px -.1rem auto;
    }

    #sidebar-navigation li:first-of-type:after {display: block;}

    /* main content */
  
    main {
        display: block;
        max-width: 65rem;
        width:100%;
        height: 100%;
        max-height: 100%;
        padding-right: 0;
    }

    #main-content {
        width: 100%;
        flex-direction: column;
        height: 100%;
        max-height: 100%;
    }

    #main-navigation {
        height: 100%;
        padding: 2rem;
    }

    #about {
        width: 100%;
        order: 2;
        padding: 2rem 3rem;
    }
    
    figure.about-image {
        width: 100%;
        height: 15rem;
    }

    img.about-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
}

</style>
</head>
<body>

<!-- change the color of the background square in the css variable --color-square -->
<div id=""color-square""></div>

<section id=""flex-container""><main>

    <aside>

        <!-- icon image -->

        <figure class=""about-icon""><img class=""about-icon"" src=""ICON IMAGE URL"" alt=""""></figure>

        <!-- page title, keep it between <span></span> preferably not too long-->

        <h1><span>title.</span></h1>

        <!-- sidebar links -->

        <nav id=""sidebar-navigation""><ul>
            <li><a href=""LINK URL"">LINK NAME</a></li>
            <li><a href=""LINK URL"">LINK NAME</a></li>
            <li><a href=""LINK URL"">LINK NAME</a></li>
            <li><a href=""LINK URL"">LINK NAME</a></li>
        </ul></nav>
    </aside>

    <section id=""main-inside"">

        <!-- topbar navigation -->
    
        <nav id=""main-navigation""><ul>
            
            <li><a href=""/""><i class=""nav-icon"" data-feather=""home""></i></a></li>
            
            <li><a href=""/ask""><i class=""nav-icon"" data-feather=""mail""></i></a></li>
            
            <li><a href=""https://www.tumblr.com/follow/{name}""><i class="" nav-icon"" data-feather=""plus""></i></a></li>
            
        </ul></nav>

        <div id=""main-content"">

            <article id=""about"">

                <!-- details in the about -->
                <ul id=""about-details"">
                    
                    <li>detail</li>
                    <li>detail</li>
                    <li>detail</li>
                    <li>detail</li>
                </ul>
                
                <!-- please wrap all your lines between <p>example</p> -->

                <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex in quos quasi pariatur perferendis cumque dolore excepturi? Blanditiis debitis ea expedita minus ad ex atque, molestias, fuga, sit at maxime?</p>

                <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex in quos quasi pariatur perferendis cumque dolore excepturi? Blanditiis debitis ea expedita minus ad ex atque, molestias, fuga, sit at maxime?</p>

            </article>

            <!-- about image -->
            <figure class=""about-image""><img class=""about-image"" src=""IMAGE URL"" alt=""""></figure>

        </div>

    </section>

</main></section> <!-- flex/main -->

<!-- do not touch -->
<div style=""position:fixed;bottom:2rem;right:2rem;z-index:999999999999999999999!important;font-size:.7rem;letter-spacing:.03rem;""><a href=""https://southcodes.tumblr.com"" title=""coded by southcodes"" style=""color:black"" target=""_blank"">SC</a></div>

<script src=""https://unpkg.com/feather-icons@4.29.1/dist/feather.min.js""></script>

<script>
    feather.replace();
</script>
</body>
</html>"
wLPJVc1J,FFMPEG-QULITY-TIME-D.bat,Najeebsk,Batch,Monday 20th of November 2023 10:00:40 PM CDT,"@ECHO OFF
TITLE NAJEEB STREMING M3U8 FILE DOWNLOAD TIME
COLOR 1B  & MODE 110,16
SET /P FTime= ENTER START TIME :
SET /P ETime= ENTER END TIME :
SET /P M3U8= ENTER STREMING M3U8 URLS :
SET /P Qulity= ENTER STREMING QULITY(1-50) :
SET /P SAVE= ENTER SAVE FILE NAME :
ffmpeg.exe -ss %FTime% -to %ETime% -i ""%M3U8%"" -bsf:a aac_adtstoasc -vcodec copy -c copy -crf  %Qulity% ""%CD%\%SAVE%.mp4""
PAUSE :
EXIT"
FDZvjQQV,FFMPEG-QULITY-D.bat,Najeebsk,Batch,Monday 20th of November 2023 09:59:39 PM CDT,"@ECHO OFF
TITLE NAJEEB STREMING M3U8 FILE DOWNLOAD TIME
COLOR 1B  & MODE 100,16
SET /P M3U8= ENTER STREMING M3U8 URLS :
SET /P Qulity= ENTER STREMING QULITY(1-50) :
SET /P SAVE= ENTER SAVE FILE NAME :
ffmpeg.exe -i ""%M3U8%"" -bsf:a aac_adtstoasc -vcodec copy -c copy -crf  %Qulity% ""%CD%\%SAVE%.mp4""
PAUSE :
EXIT"
6465qxVk,FFMPEG-HD-STREMING-D.bat,Najeebsk,Batch,Monday 20th of November 2023 09:57:18 PM CDT,"@ECHO OFF
TITLE NAJEEB STREMING M3U8 FILE DOWNLOAD TIME
COLOR 1B  & MODE 110,16
SET /P FTime= ENTER START TIME :
SET /P ETime= ENTER END TIME :
SET /P M3U8= ENTER STREMING M3U8 URLS :
SET /P SAVE= ENTER SAVE FILE NAME :
ffmpeg.exe -ss %FTime% -to %ETime% -i ""%M3U8%"" -acodec copy -vcodec copy ""%CD%\%SAVE%.mp4""
PAUSE :
EXIT"
wNFMSptH,YOUTUBE-DL.bat,Najeebsk,Batch,Monday 20th of November 2023 09:55:31 PM CDT,"@ECHO OFF
TITLE NAJEEB YOUTUBE FILE DOWNLOAD TIME
COLOR 1B 
youtube-dl.exe -U
SET /P M3U8= ENTER YOUTUBE URLS :
youtube-dl.exe -F ""%M3U8%""
PAUSE :
SET /P M3U82= ENTER STREMING M3U8 URLS :
SET /P QULITY= ENTER QULITY VIDEO (18 22 ) :
youtube-dl.exe -f %QULITY% ""%M3U82%""
PAUSE :
EXIT"
7rnU18tk,YOUTUBE-DL-TIME.bat,Najeebsk,Batch,Monday 20th of November 2023 09:54:15 PM CDT,"@ECHO OFF
TITLE NAJEEB YOUTUBE FILE DOWNLOAD TIME
COLOR 1B 
youtube-dl.exe -U
:Youtube
SET /P FTime= ENTER START TIME :
SET /P ETime= ENTER END TIME :
SET /P M3U8= ENTER YOUTUBE URLS :
SET /P QULITY= ENTER QULITY VIDEO(best 18 22 17) :
youtube-dl.exe --external-downloader ffmpeg --external-downloader-args ""-ss %FTime% -to %ETime%"" -f %QULITY% ""%M3U8%""
PAUSE :
goto Youtube"
viLUvukX,Untitled,fudiejian,HTML,Monday 20th of November 2023 08:07:41 PM CDT,"<!DOCTYPE html>
<html lang=""zh-CN"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>照片派送</title>
    <style>
        /* 样式部分保持不变 */
        body {
            font-family: Arial, sans-serif;
            height: 100vh;
            margin: 0;
            overflow-y: auto; /* 启用垂直滚动条 */
        }

        table {
            border-collapse: collapse;
            width: 100%;
            border: 2px solid #4CAF50;
        }

        th,
        td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            position: relative;
        }

        th {
            background-color: #0099ff;
            color: white;
        }

        td:first-child {
            color: blue;
        }

        td:nth-child(2):hover::after {
            content: attr(data-address);
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f9f9f9;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            z-index: 1;
            display: block;
            white-space: nowrap;
        }

        .toggle-buttons {
            display: flex;
            justify-content: space-between;
            padding: 10px;
        }

        .toggle-buttons button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin: 0 10px;
        }

        .toggle-buttons button:hover {
            background-color: #357835; /* 修改按钮 hover 时的背景颜色 */
        }

        .navigate-button {
            padding: 8px 16px;
            font-size: 14px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .navigate-button:hover {
            background-color: #357835; /* 修改导航按钮 hover 时的背景颜色 */
        }

        @media screen and (max-width: 600px) {
            /* 在屏幕宽度小于600px时调整按钮样式 */
            .toggle-buttons button {
                width: 100%; /* 使按钮占据整行 */
                box-sizing: border-box; /* 防止按钮宽度超过父容器 */
                margin: 10px 0;
            }
        }
    </style>
</head>

<body>

    <!-- 切换按钮 -->
    <div class=""toggle-buttons"">
        <button onclick=""toggleTable(1)"" style=""flex: 1;"">线路4</button>
        <button onclick=""toggleTable(2)"" style=""flex: 1;"">线路3</button>
    </div>

    <!-- 第一个表格 -->
    <table id=""table1"">
        <tr>
            <th>名称</th>
            <th>店铺名</th>
            <th>导航</th>
        </tr>

    <tr>
        <td style=""color: blue;"" data-address=""抚琴南路15号"">玉锋</td>
        <td data-address=""抚琴南路15号"">玉峰印务广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.674294,104.044006', '玉锋')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""青羊东二路17号"">心怡</td>
        <td data-address=""青羊东二路17号"">心怡体育彩票</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.670086,104.04548', '心怡')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""西安北路104号"">新视线</td>
        <td data-address=""西安北路104号"">鑫视线影视</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.670987,104.048393', '新视线')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""锦里西路68号附18号"">丽景</td>
        <td data-address=""锦里西路68号附18号"">丽景数码制作冲印</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.653551,104.049074', '丽景')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""金河路65号附1号"">麒麟</td>
        <td data-address=""金河路65号附1号"">麒麟数码影像制作</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.660528,104.052043', '麒麟')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东胜街6号"">生生</td>
        <td data-address=""东胜街6号"">生生影像</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.660413,104.060051', '生生')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""下同仁路117号附4号"">长兴</td>
        <td data-address=""下同仁路117号附4号"">长兴图片社</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.66654,104.051886', '长兴')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""实业街21号附2号"">庆盈</td>
        <td data-address=""实业街21号附2号"">兴庆盈广告印务部</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.665914,104.054081', '庆盈')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""四道街17号附5"">星光</td>
        <td data-address=""四道街17号附5"">星光数码图片社</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.672194,104.054039', '星光')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""过街楼街与横过街楼街交叉口南80米"">靓影红墙巷</td>
        <td data-address=""过街楼街与横过街楼街交叉口南80米"">红墙相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.669077,104.05933', '靓影红墙巷')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""树德里2号附6号"">中正</td>
        <td data-address=""树德里2号附6号"">中正图文</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.674526,104.058659', '中正')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""树德里2号"">美懿</td>
        <td data-address=""树德里2号"">美懿&奥美</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.674526,104.058659', '美懿')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""王家塘街12号"">乘龙</td>
        <td data-address=""王家塘街12号"">小区左手</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.672782,104.063739', '乘龙')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""人民中路三段55号"">新光</td>
        <td data-address=""人民中路三段55号"">新光影像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.676736,104.07143', '新光')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""马家花园路21号附3号"">兴怡</td>
        <td data-address=""马家花园路21号附3号"">诚信广告图文(兴怡)</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.683824,104.052255', '兴怡')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""人民北路一段25号附6号"">派一</td>
        <td data-address=""人民北路一段25号附6号"">派一图文输出</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.683297,104.072974', '派一')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路北三段74号"">长鸿</td>
        <td data-address=""一环路北三段74号"">长鸿图文</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.683181,104.080694', '长鸿')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星辉中路16号"">泽准</td>
        <td data-address=""星辉中路16号"">泽准印务</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.674676,104.082342', '泽准')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""马鞍北路55号"">视悦</td>
        <td data-address=""马鞍北路55号"">视悦.小区</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.678483,104.088153', '视悦')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""马鞍北路35号"">渝东</td>
        <td data-address=""马鞍北路35号"">渝东图文</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.676783,104.087043', '渝东')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""马鞍街82号"">新凯</td>
        <td data-address=""马鞍街82号"">新凯广告装饰</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.67803,104.091349', '新凯')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""府青路二段18号"">月光</td>
        <td data-address=""府青路二段18号"">月光照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.683063,104.0997', '月光')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""平安正街55号"">歆雨</td>
        <td data-address=""平安正街55号"">歆雨文印广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.683373,104.094555', '歆雨')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""华油路二段133号"">天利</td>
        <td data-address=""华油路二段133号"">天利图文广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.680927,104.094281', '天利')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""小市巷90号"">艺影5</td>
        <td data-address=""小市巷90号"">艺影照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.700951,104.074751', '艺影5')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""福祥街51号"">蜀人</td>
        <td data-address=""福祥街51号"">蜀人像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.704793,104.072563', '蜀人')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""花径路5号"">凝靓</td>
        <td data-address=""花径路5号"">凝靓婚纱婚庆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.704091,104.072299', '凝靓')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""花径路114号"">创意5</td>
        <td data-address=""花径路114号"">创意像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.706527,104.07231', '创意5')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""花径路137号"">时代</td>
        <td data-address=""花径路137号"">时代摄影部</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.708103,104.072056', '时代')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""站北中街16号"">启凡</td>
        <td data-address=""站北中街16号"">启凡广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.706677,104.072908', '启凡')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""八里桥路196号"">彬彬</td>
        <td data-address=""八里桥路196号"">彬彬时尚婚纱</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.705767,104.07606', '彬彬')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东沙街79号"">影艺</td>
        <td data-address=""东沙街79号"">影艺照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.706222,104.076497', '影艺')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东沙街100号"">晓梅</td>
        <td data-address=""东沙街100号"">晓梅摄影部</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.706293,104.076965', '晓梅')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""羊子山路8号"">兴鑫</td>
        <td data-address=""羊子山路8号"">兴鑫印务</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.703976,104.09408', '兴鑫')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""双荆路8号"">杨程</td>
        <td data-address=""双荆路8号"">杨程广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.712077,104.09299', '杨程')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""双荆路8号"">锦西</td>
        <td data-address=""双荆路8号"">锦西婚纱摄影</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.713112,104.092348', '锦西')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""三河大道46号"">新丽</td>
        <td data-address=""三河大道46号"">新丽照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.777932,104.133468', '新丽')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""江陵路122号"">盛博&凤凰</td>
        <td data-address=""江陵路122号"">盛博广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.779054,104.138456', '盛博&凤凰')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""明月中心村72号"">新容</td>
        <td data-address=""明月中心村72号"">新蓉像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.763311,104.116865', '新容')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""明月中心村72号"">人艺</td>
        <td data-address=""明月中心村72号"">新蓉像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.763311,104.116865', '人艺')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""荆翠东路247号"">双益</td>
        <td data-address=""荆翠东路247号"">双益广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.714648,104.115871', '双益')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东紫路480"">新闻</td>
        <td data-address=""东紫路480"">新闻照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.71144,104.109687', '新闻')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东泰路21号"">争鸣</td>
        <td data-address=""东泰路21号"">争鸣印务广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.704786,104.116121', '争鸣')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""致强路317号"">梅宇</td>
        <td data-address=""致强路317号"">梅宇摄影</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.702941,104.112866', '梅宇')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""云龙路53号"">子扬</td>
        <td data-address=""云龙路53号"">子扬电脑.照相</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.700781,104.108987', '子扬')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""致祥路9号"">小杨</td>
        <td data-address=""致祥路9号"">晓艺杨摄影部</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.701433,104.108366', '小杨')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""致顺南一街23号"">顺程</td>
        <td data-address=""致顺南一街23号"">顺程广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.698538,104.10731', '顺程')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""怡福路91号"">金磊</td>
        <td data-address=""怡福路91号"">金磊数码影像</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.685921,104.107604', '金磊')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""桃蹊路143号"">新意</td>
        <td data-address=""桃蹊路143号"">新意图文广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.681896,104.109155', '新意')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""桃溪路27号"">凡橙艺新</td>
        <td data-address=""桃溪路27号"">凡橙艺新广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.680539,104.106891', '凡橙艺新')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设北路二段5号"">沙河</td>
        <td data-address=""建设北路二段5号"">沙河印务</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.678531,104.100663', '沙河')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设北路二段5号"">东院</td>
        <td data-address=""建设北路二段5号"">东院印务</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.678531,104.100663', '东院')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设北路二段5号"">科太</td>
        <td data-address=""建设北路二段5号"">科太.新艺洋</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.678531,104.100663', '科太')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路东一段194"">欣彩</td>
        <td data-address=""一环路东一段194"">欣彩照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.67298,104.097793', '欣彩')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路东一段172"">先锋</td>
        <td data-address=""一环路东一段172"">先锋印务</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.672464,104.098025', '先锋')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路东一段**"">飞腾</td>
        <td data-address=""一环路东一段**"">飞腾</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.664192,104.101443', '飞腾')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设巷1号-34"">华业</td>
        <td data-address=""建设巷1号-34"">潘达蒸汽.华业</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.67145,104.103157', '华业')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设路43号附9号"">美丽魅</td>
        <td data-address=""建设路43号附9号"">美丽魅摄影</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.669269,104.103414', '美丽魅')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设北路三段11号"">中标</td>
        <td data-address=""建设北路三段11号"">中标工程图文</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.676988,104.113067', '中标')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建兴路15号"">雪儿</td>
        <td data-address=""建兴路15号"">雪儿像馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.671486,104.116983', '雪儿')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""枫林路47号"">欣昇</td>
        <td data-address=""枫林路47号"">欣昇图文</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.672215,104.123234', '欣昇')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""建设南新路83号"">相片</td>
        <td data-address=""建设南新路83号"">相片工作室</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.665807,104.105045', '相片')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""二环路东三段2号"">秀婷</td>
        <td data-address=""二环路东三段2号"">秀婷相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.662236,104.114012', '秀婷')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东秀一路209号"">挚爱婚庆</td>
        <td data-address=""东秀一路209号"">挚爱.登记所旁边</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.661453,104.118279', '挚爱婚庆')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""双庆路49号"">王子</td>
        <td data-address=""双庆路49号"">王子照相馆</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.651083,104.121411', '王子')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""东校场街45号"">零点</td>
        <td data-address=""东校场街45号"">零点广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.663269,104.08937', '零点')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""桂王桥北街25号"">胜慧</td>
        <td data-address=""桂王桥北街25号"">胜慧图文广告</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.664161,104.083868', '胜慧')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""望平街165号"">源海</td>
        <td data-address=""望平街165号"">源海数码印刷</td>
        <td><button class=""navigate-button""  onclick=""navigateToAmap('30.65672,104.091311', '源海')"">导航</button></td>
    </tr>




        <!-- 其他表格行... -->
    </table>

    <!-- 第二个表格 -->
    <table id=""table2"" style=""display: none;"">
        <tr>
            <th>名称</th>
            <th>店铺名</th>
            <th>导航</th>
        </tr>

    <tr>
        <td style=""color: blue;"" data-address=""马家花园路21号附3号"">兴怡</td>
        <td data-address=""马家花园路21号附3号"">诚信广告图文(兴怡)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.683824,104.052255', '兴怡')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路北二段3号"">宏艺</td>
        <td data-address=""一环路北二段3号"">宏艺房产</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.68606,104.062586', '宏艺')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路北一段390号"">燚龙</td>
        <td data-address=""一环路北一段390号"">照相·广告(燚yi龙)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.685825,104.058046', '燚龙')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""一环路北一段360号"">西北桥忆影</td>
        <td data-address=""一环路北一段360号"">忆影艺术摄影室</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.685794,104.057747', '西北桥忆影')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""九里堤南路82号对面"">新晨</td>
        <td data-address=""九里堤南路82号对面"">新晨印务</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.693369,104.057136', '新晨')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""圃园南二路6号附30号"">芳苑</td>
        <td data-address=""圃园南二路6号附30号"">芳苑数码影像</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.691302,104.053751', '芳苑')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""沙湾路53号附2号"">永兴</td>
        <td data-address=""沙湾路53号附2号"">永兴图文广告</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.688026,104.051701', '永兴')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""沙湾路53号"">新捷</td>
        <td data-address=""沙湾路53号"">新捷影像图片社</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.687717,104.051583', '新捷')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""沙湾路108号"">佳捷</td>
        <td data-address=""沙湾路108号"">佳捷印务</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.68652,104.051502', '佳捷')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""光荣北路80号-附3号"">新华</td>
        <td data-address=""光荣北路80号-附3号"">新华图片社</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.687385,104.048785', '新华')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""金沙路42号附19号"">泰桦</td>
        <td data-address=""金沙路42号附19号"">泰桦广告</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.687578,104.044831', '泰桦')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""金沙巷16号附12号"">贝尔</td>
        <td data-address=""金沙巷16号附12号"">贝尔数码冲印店</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.690074,104.042601', '贝尔')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""营门口路146号"">帆摄影</td>
        <td data-address=""营门口路146号"">精美图片(帆摄影)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.685121,104.041844', '帆摄影')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""营抚琴街1号附15号"">风摄影</td>
        <td data-address=""营抚琴街1号附15号"">柯达风摄影数码</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.679623,104.0424', '风摄影')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""营兴街72号"">咔嚓</td>
        <td data-address=""营兴街72号"">咔嚓摄影</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.683043,104.036237', '咔嚓')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""营康西路34号"">外化</td>
        <td data-address=""营康西路34号"">外化影星照相馆</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.687313,104.033966', '外化')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""蜀营街55号附1号"">同缘</td>
        <td data-address=""蜀营街55号附1号"">同缘印务</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.68669,104.033055', '同缘')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""蜀兴东街8号"">凯骡(拍爱)</td>
        <td data-address=""蜀兴东街8号"">拍爱照相馆(凯骡)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.685301,104.02965', '凯骡(拍爱)')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""营康西路136号"">恒峰</td>
        <td data-address=""营康西路136号"">恒峰广告</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.68893,104.031425', '恒峰')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""五里墩横街107号"">友谊1</td>
        <td data-address=""五里墩横街107号"">永谊照相馆(友谊1)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.689541,104.033039', '友谊1')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""五里墩路73号"">奥林</td>
        <td data-address=""五里墩路73号"">奥体照相馆</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.691093,104.030803', '奥林')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""茶店子街道茶店子东街48附5号"">亿合</td>
        <td data-address=""茶店子街道茶店子东街48附5号"">亿合广告印务</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.693844,104.032701', '亿合')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""茶店子东街156号"">芊芊米兰</td>
        <td data-address=""茶店子东街156号"">米兰婚纱摄影</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.694786,104.031276', '芊芊米兰')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""银沙横街14号"">银沙</td>
        <td data-address=""银沙横街14号"">锦西照相馆(银沙店)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.695218,104.045288', '银沙')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""银沙北街71号"">创意4</td>
        <td data-address=""银沙北街71号"">创意像馆4</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.697072,104.043214', '创意4')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""银沙街122号"">华域</td>
        <td data-address=""银沙街122号"">华域广告印务</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.699797,104.041673', '华域')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""长庆路1号"">长庆路锦西</td>
        <td data-address=""长庆路1号"">锦西数码冲印部</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.704827,104.034523', '长庆路锦西')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""长庆路6号附4号"">友谊2</td>
        <td data-address=""长庆路6号附4号"">友谊照相复印2</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.705707,104.036829', '友谊2')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星河路27号附40号"">创意1</td>
        <td data-address=""星河路27号附40号"">创意摄影1</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.707136,104.042998', '创意1')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星辰路47号"">鸿达</td>
        <td data-address=""星辰路47号"">鸿鸿照相馆(鸿达)</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.704736813673435,104.04559978661948', '鸿达')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""交桂路89号付50号"">飞彩</td>
        <td data-address=""交桂路89号付50号"">飞彩数码图片社</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.70291,104.048886', '飞彩')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""九里堤北路6号附16号"">创意3</td>
        <td data-address=""九里堤北路6号附16号"">创意相馆3</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.705538,104.054123', '创意3')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星河路89号"">前沿</td>
        <td data-address=""星河路89号"">前沿数码摄影</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.707496,104.046565', '前沿')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星汉路7号附7号"">瞳馨</td>
        <td data-address=""星汉路7号附7号"">瞳馨照相馆</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.708566,104.048428', '瞳馨')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""星汉路12号附12号"">创意2</td>
        <td data-address=""星汉路12号附12号"">创意摄影2</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.710017,104.048005', '创意2')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""小市巷90号"">艺影5</td>
        <td data-address=""小市巷90号"">艺影照相馆</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.700951,104.074751', '艺影5')"">导航</button></td>
    </tr>

    <tr>
        <td style=""color: blue;"" data-address=""福祥街51号"">蜀人</td>
        <td data-address=""福祥街51号"">蜀人像馆</td>
        <td><button  class=""navigate-button"" onclick=""navigateToAmap('30.704793,104.072563', '蜀人')"">导航</button></td>
    </tr>

        <!-- 其他表格行... -->
    </table>

    <script>
        function toggleTable(tableNumber) {
            // 隐藏所有表格
            document.getElementById('table1').style.display = 'none';
            document.getElementById('table2').style.display = 'none';

            // 根据传入的tableNumber显示相应表格
            if (tableNumber === 1) {
                document.getElementById('table1').style.display = 'table';
                document.getElementById('table2').style.display = 'none';
            } else if (tableNumber === 2) {
                document.getElementById('table2').style.display = 'table';
                document.getElementById('table1').style.display = 'none';
            }
        }

    function navigateToAmap(destinationCoordinates, destinationName) {
        var amapUrl = 'amapuri://openFeature?featureName=OnRideNavi&rideType=elebike&sourceApplication=appname&lat=' + destinationCoordinates.split(',')[0] + '&lon=' + destinationCoordinates.split(',')[1] + '&dev=0';
        window.location.href = amapUrl;
    }
    </script>
</body>

</html>
"
VbkcrmrW,24x chicken dinner snowybot,coinwalk,JavaScript,Monday 20th of November 2023 06:56:21 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/800).toFixed(8));
var floatingbase = base;
var taget = (originalbal*24);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = Number((floatingbase*1).toFixed(5));
var james = originalbal;
var fran = originalbal;
var fart = 0;
var bolance = originalbal;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var godly = ((Math.floor(originalbal/groupedten))*groupedten);
 
function dobet(){
james = document.getElementById('pct_balance').value;
if (james>fran){
bolance = bolance+tobetnext;
fran = parseFloat(james);
}
if (james<fran){
bolance = bolance-tobetnext;
fran = parseFloat(james);
}
if (bolance>(godly+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = true;
    godly = parseFloat(bolance);
}
if (bolance<(godly-(floatingbase*downer))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
    godly = parseFloat(bolance);
}
if ((bolance>=(godly+floatingbase))&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
    godly = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
if (james>taget){
console.log(""winner winner chicken dinner"");
return;
}
tobetnext = Number((floatingbase*1).toFixed(8));
document.getElementById('pct_chance').value = 49.5;
document.getElementById('pct_payout').value = 2;
document.getElementById('pct_bet').value = tobetnext;
document.getElementById('pct_profit').value = tobetnext;
document.getElementById('a_lo').click();
var good = ((james-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => dobet(), 1);
}
dobet();
"
ppXQiFcc,Day 11 string class more,HarrJ,Java,Monday 20th of November 2023 06:35:47 PM CDT,"public class Day11A {
    public static void main(String[] args) {
        // Day11A callMe = new Day11A();
        char chABC = 't';
        String txtRef = ""The quick brown fox jumps over the lazy dog"";
        printLetterCount(chABC, txtRef);
        for (char ch1 = 'a'; ch1 <= 'z';ch1++){
            System.out.println(ch1);
        }
    }
    
    static void printLetterCount(char chFind, String txtSample) {
        int letterCount = 0;
        int nextIndex = 0;
        int charCount = 0;
        for (int i = 0; i < txtSample.length(); i++) {
            nextIndex = txtSample.toLowerCase().indexOf(chFind,i);
            i = nextIndex;
            if (i == -1) {
                break;
            }
            charCount++;
        }
        System.out.println(chFind + "" : "" + charCount);
    }
}


//---------------------------------
public class Day11B {
    public static void main(String[] args) {
        String practiceText = ""Username;Identifier;First name;Last name"";
        
        String[] resultArray = practiceText.split("";"");
        
        for (String string : resultArray) {
            System.out.print(string + ""   | "");
        }
        System.out.println();
        
        String[] csvSample = { ""booker12;9012;Rachel;Booker""
            ,""grey07;2070;Laura;Grey""
            ,""johnson81;4081;Craig;Johnson""
            ,""jenkins46;9346;Mary;Jenkins""
            ,""smith79;5079;Jamie;Smith""};
        
        for (String csvString : csvSample) {
            String[] csvToArray = csvString.split("";"");
            for (String string : csvToArray) {
                System.out.print(string + ""   | "");
            }
            System.out.println();
        }
    }
    
}

//---------------------------------

public class Day11D {
    public static void main(String[] args) {
        String name = ""Terry"";
        String hobby = ""Plastic Model Making"";
        byte age = 12;
        String resultMessage;
        resultMessage = String.format(""Good day I’m %s age %d"", name, age);
        System.out.println(resultMessage);
        resultMessage = String.format(""My hobbies are %s"", hobby);
        System.out.println(resultMessage);
        
        String txtCSV = ""Username;Identifier;First name;Last name"";
        String[] csvArray = txtCSV.split("";"");
        
        System.out.printf(""%-12s | %-10s | %-12s | %-12s |%n""
                ,csvArray[0],csvArray[1],csvArray[2],csvArray[3]);
        
        txtCSV = ""jenkins46;9346;Mary;Jenkins"";
        csvArray = txtCSV.split("";"");
        
        System.out.printf(""%-12s | %-10s | %-12s | %-12s |%n""
                ,csvArray[0],csvArray[1],csvArray[2],csvArray[3]);
        
        String[] csvSample = { ""booker12;9012;Rachel;Booker""
            ,""grey07;2070;Laura;Grey""
            ,""johnson81;4081;Craig;Johnson""
            ,""smith79;5079;Jamie;Smith""};
    }
}
//---------------------------------"
WAr3Y0qk,snowybot update,coinwalk,JavaScript,Monday 20th of November 2023 06:22:31 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/80).toFixed(5));
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = Number((floatingbase*1).toFixed(5));
var james = originalbal;
var fran = originalbal;
var fart = 0;
var bolance = originalbal;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var godly = ((Math.floor(originalbal/groupedten))*groupedten);
 
function dobet(){
james = document.getElementById('pct_balance').value;
if (james>fran){
bolance = bolance+tobetnext;
fran = parseFloat(james);
}
if (james<fran){
bolance = bolance-tobetnext;
fran = parseFloat(james);
}
if (bolance>(godly+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = true;
    godly = parseFloat(bolance);
}
if ((bolance<(godly-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    godly = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
    godly = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
if ((bolance>=(godly+floatingbase))&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
    godly = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
if (james>taget){
console.log(""winner winner chicken dinner"");
return;
}
tobetnext = Number((floatingbase*1).toFixed(5));
document.getElementById('pct_chance').value = 49.5;
document.getElementById('pct_payout').value = 2;
document.getElementById('pct_bet').value = tobetnext;
document.getElementById('pct_profit').value = tobetnext;
document.getElementById('a_lo').click();
setTimeout(() => dobet(), 1);
}
dobet();
"
vscaf4YJ,2023-11-20_stats.json,rdp_snitch,JSON,Monday 20th of November 2023 06:17:58 PM CDT,"{
  ""ip"": {
    ""50.118.145.49"": 6,
    ""194.165.17.21"": 72,
    ""20.127.65.148"": 6,
    ""172.233.198.57"": 24,
    ""58.218.204.183"": 9,
    ""45.227.254.54"": 6,
    ""185.195.59.224"": 3,
    ""106.116.169.71"": 6,
    ""49.157.46.212"": 3,
    ""142.93.234.101"": 3,
    ""205.210.31.175"": 9,
    ""167.248.133.35"": 3,
    ""45.227.254.26"": 6,
    ""180.93.172.226"": 3,
    ""212.70.149.146"": 3,
    ""36.91.222.100"": 9,
    ""202.165.85.100"": 6,
    ""198.235.24.50"": 9,
    ""185.220.103.12"": 3,
    ""45.227.254.49"": 6,
    ""165.154.182.154"": 3,
    ""146.70.126.175"": 3,
    ""103.178.59.224"": 24,
    ""192.46.227.151"": 6,
    ""138.199.34.136"": 6,
    ""205.210.31.110"": 9,
    ""173.230.152.219"": 12,
    ""163.228.231.145"": 3,
    ""45.227.254.55"": 6,
    ""142.4.218.114"": 3,
    ""213.32.39.47"": 3,
    ""149.28.70.189"": 3,
    ""162.243.174.58"": 3,
    ""51.75.160.42"": 6,
    ""205.210.31.25"": 9,
    ""106.246.227.18"": 6,
    ""118.32.156.55"": 6,
    ""103.20.191.77"": 9,
    ""141.98.11.169"": 3,
    ""45.77.252.32"": 42,
    ""45.77.32.122"": 33,
    ""207.148.65.47"": 72,
    ""149.28.141.233"": 24,
    ""139.180.157.164"": 51,
    ""149.28.153.131"": 15,
    ""45.76.157.103"": 15,
    ""45.76.187.31"": 66,
    ""45.76.179.129"": 36,
    ""149.28.154.181"": 48,
    ""66.42.63.228"": 48,
    ""45.77.47.166"": 72,
    ""45.77.168.153"": 63,
    ""149.28.139.58"": 57,
    ""45.32.107.0"": 39,
    ""45.77.174.169"": 42,
    ""207.148.77.173"": 45,
    ""139.180.157.3"": 27,
    ""149.28.131.228"": 33,
    ""139.180.153.225"": 42,
    ""45.77.174.85"": 51,
    ""45.77.169.252"": 72,
    ""45.77.171.162"": 45,
    ""149.28.146.83"": 24,
    ""139.180.136.174"": 33,
    ""149.28.148.186"": 60,
    ""45.76.145.95"": 30,
    ""139.180.218.216"": 42,
    ""207.148.117.212"": 51,
    ""207.148.69.159"": 54,
    ""45.76.184.249"": 24
  },
  ""asn"": {
    ""AS149440"": 6,
    ""AS48721"": 72,
    ""AS8075"": 6,
    ""AS63949"": 42,
    ""AS4134"": 15,
    ""AS267784"": 24,
    ""AS62240"": 3,
    ""AS9658"": 3,
    ""AS14061"": 6,
    ""AS396982"": 36,
    ""AS398324"": 3,
    ""AS135944"": 3,
    ""AS204428"": 3,
    ""AS7713"": 9,
    ""AS136255"": 6,
    ""AS4224"": 3,
    ""AS135377"": 3,
    ""AS9009"": 3,
    ""AS133676"": 24,
    ""AS212238"": 6,
    ""AS58593"": 3,
    ""AS16276"": 12,
    ""AS20473"": 1359,
    ""AS3786"": 6,
    ""AS4766"": 6,
    ""AS55685"": 9,
    ""AS209605"": 3
  },
  ""isp"": {
    ""EGIHosting"": 6,
    ""Flyservers S.A."": 96,
    ""Microsoft Corporation"": 6,
    ""Akamai Technologies, Inc."": 42,
    ""Chinanet"": 15,
    ""New York Network"": 3,
    ""Eastern Telecommunications Philippines, Inc."": 3,
    ""DigitalOcean, LLC"": 6,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""SPT"": 3,
    ""SS-Net"": 3,
    ""PT Telekomunikasi Indonesia"": 9,
    ""Telecom International Myanmar Company Limited"": 6,
    ""The Calyx Institute"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""M247 Europe Infra"": 3,
    ""Precious netcom pvt ltd"": 24,
    ""Datacamp Limited"": 6,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 3,
    ""OVH SAS"": 12,
    ""The Constant Company"": 666,
    ""LG DACOM Corporation"": 6,
    ""Korea Telecom"": 6,
    ""PT. Jala Lintas Media"": 9,
    ""UAB Host Baltic"": 3,
    ""Choopa"": 693
  },
  ""org"": {
    ""Evoxt"": 6,
    ""Flyservers S.A"": 72,
    ""Microsoft Azure Cloud (eastus)"": 6,
    ""Akamai Technologies, Inc."": 24,
    ""Chinanet JS"": 9,
    ""UAB Host Baltic"": 24,
    ""Packethub S.A"": 3,
    ""Chinanet HE"": 6,
    ""DSL Network"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 3,
    ""Saigon Postel Corporation"": 3,
    ""4Media Ltd"": 3,
    ""Telekomunikasi Indonesia"": 9,
    ""Mytel"": 6,
    ""The Calyx Institute"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""M247 Ltd Zurich"": 3,
    ""A ONE Services"": 24,
    ""Linode, LLC"": 6,
    ""Cdnext BRA"": 6,
    ""Linode"": 12,
    ""Microsoft Azure Cloud (chinanorth3)"": 3,
    ""OVH Hosting, Inc."": 3,
    ""ONYPHE"": 3,
    ""Vultr Holdings, LLC"": 894,
    ""Digital Ocean"": 3,
    ""OVH Ltd"": 6,
    ""Boranet"": 6,
    ""Unknown"": 483
  },
  ""regionName"": {
    ""California"": 60,
    ""Kaunas"": 75,
    ""Virginia"": 30,
    ""Jiangsu"": 9,
    ""Vilnius"": 24,
    ""New York"": 6,
    ""Hebei"": 9,
    ""Metro Manila"": 3,
    ""North Holland"": 3,
    ""Michigan"": 3,
    ""Hanoi"": 3,
    ""Plovdiv"": 3,
    ""Jakarta"": 9,
    ""Yangon"": 6,
    ""Zurich"": 3,
    ""West Bengal"": 24,
    ""North West"": 6,
    ""Bratislava"": 6,
    ""Quebec"": 3,
    ""Hauts-de-France"": 3,
    ""New Jersey"": 3,
    ""England"": 6,
    ""Gyeonggi-do"": 6,
    ""Seoul"": 6,
    ""West Java"": 9,
    ""South West"": 1278,
    ""Central Singapore"": 78
  },
  ""country"": {
    ""United States"": 102,
    ""Lithuania"": 99,
    ""China"": 18,
    ""Philippines"": 3,
    ""The Netherlands"": 3,
    ""Vietnam"": 3,
    ""Bulgaria"": 3,
    ""Indonesia"": 18,
    ""Myanmar"": 6,
    ""Switzerland"": 3,
    ""India"": 24,
    ""Singapore"": 1362,
    ""Slovakia"": 6,
    ""Canada"": 3,
    ""France"": 3,
    ""United Kingdom"": 6,
    ""South Korea"": 12
  },
  ""account"": {
    ""hello"": 186,
    ""Test"": 57,
    ""(empty)"": 15,
    ""gPaoPxznF"": 3,
    ""xYiaeZ"": 3,
    ""KWlIOP"": 3,
    ""XksJZdFDR"": 3,
    ""boBvnD"": 3,
    ""gLpwNs"": 3,
    ""Administrator"": 9,
    ""OkXdutKZU"": 3,
    ""RzzBIf"": 3,
    ""aYlOsQ"": 3,
    ""b0zl37cv"": 12,
    ""beio"": 3,
    ""kAZogSYhe"": 3,
    ""HjyaWz"": 3,
    ""BzmbsY"": 3,
    ""142.93.8.59"": 1356
  },
  ""keyboard"": {
    ""Unknown"": 1674
  },
  ""client_build"": {
    ""Unknown"": 1674
  },
  ""client_name"": {
    ""Unknown"": 1674
  },
  ""ip_type"": {
    ""Unknown"": 183,
    ""hosting"": 1422,
    ""proxy"": 15,
    ""hosting & proxy"": 54
  }
}"
s232nN1r,2023-11-20_stats.json,rdp_snitch,JSON,Monday 20th of November 2023 06:16:04 PM CDT,"{
  ""ip"": {
    ""50.118.145.49"": 4,
    ""194.165.17.21"": 48,
    ""20.127.65.148"": 4,
    ""172.233.198.57"": 16,
    ""58.218.204.183"": 6,
    ""45.227.254.54"": 4,
    ""185.195.59.224"": 2,
    ""106.116.169.71"": 4,
    ""49.157.46.212"": 2,
    ""142.93.234.101"": 2,
    ""205.210.31.175"": 6,
    ""167.248.133.35"": 2,
    ""45.227.254.26"": 4,
    ""180.93.172.226"": 2,
    ""212.70.149.146"": 2,
    ""36.91.222.100"": 6,
    ""202.165.85.100"": 4,
    ""198.235.24.50"": 6,
    ""185.220.103.12"": 2,
    ""45.227.254.49"": 4,
    ""165.154.182.154"": 2,
    ""146.70.126.175"": 2,
    ""103.178.59.224"": 16,
    ""192.46.227.151"": 4,
    ""138.199.34.136"": 4,
    ""205.210.31.110"": 6,
    ""173.230.152.219"": 8,
    ""163.228.231.145"": 2,
    ""45.227.254.55"": 4,
    ""142.4.218.114"": 2,
    ""213.32.39.47"": 2,
    ""149.28.70.189"": 2,
    ""162.243.174.58"": 2,
    ""51.75.160.42"": 4,
    ""205.210.31.25"": 6,
    ""106.246.227.18"": 4,
    ""118.32.156.55"": 4,
    ""103.20.191.77"": 6,
    ""141.98.11.169"": 2,
    ""45.77.252.32"": 28,
    ""45.77.32.122"": 22,
    ""207.148.65.47"": 48,
    ""149.28.141.233"": 16,
    ""139.180.157.164"": 34,
    ""149.28.153.131"": 10,
    ""45.76.157.103"": 10,
    ""45.76.187.31"": 44,
    ""45.76.179.129"": 24,
    ""149.28.154.181"": 32,
    ""66.42.63.228"": 32,
    ""45.77.47.166"": 48,
    ""45.77.168.153"": 42,
    ""149.28.139.58"": 38,
    ""45.32.107.0"": 26,
    ""45.77.174.169"": 28,
    ""207.148.77.173"": 30,
    ""139.180.157.3"": 18,
    ""149.28.131.228"": 22,
    ""139.180.153.225"": 28,
    ""45.77.174.85"": 34,
    ""45.77.169.252"": 48,
    ""45.77.171.162"": 30,
    ""149.28.146.83"": 16,
    ""139.180.136.174"": 22,
    ""149.28.148.186"": 40,
    ""45.76.145.95"": 20,
    ""139.180.218.216"": 28,
    ""207.148.117.212"": 34,
    ""207.148.69.159"": 36,
    ""45.76.184.249"": 16
  },
  ""asn"": {
    ""AS149440"": 4,
    ""AS48721"": 48,
    ""AS8075"": 4,
    ""AS63949"": 28,
    ""AS4134"": 10,
    ""AS267784"": 16,
    ""AS62240"": 2,
    ""AS9658"": 2,
    ""AS14061"": 4,
    ""AS396982"": 24,
    ""AS398324"": 2,
    ""AS135944"": 2,
    ""AS204428"": 2,
    ""AS7713"": 6,
    ""AS136255"": 4,
    ""AS4224"": 2,
    ""AS135377"": 2,
    ""AS9009"": 2,
    ""AS133676"": 16,
    ""AS212238"": 4,
    ""AS58593"": 2,
    ""AS16276"": 8,
    ""AS20473"": 906,
    ""AS3786"": 4,
    ""AS4766"": 4,
    ""AS55685"": 6,
    ""AS209605"": 2
  },
  ""isp"": {
    ""EGIHosting"": 4,
    ""Flyservers S.A."": 64,
    ""Microsoft Corporation"": 4,
    ""Akamai Technologies, Inc."": 28,
    ""Chinanet"": 10,
    ""New York Network"": 2,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""DigitalOcean, LLC"": 4,
    ""Google LLC"": 24,
    ""Censys, Inc."": 2,
    ""SPT"": 2,
    ""SS-Net"": 2,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Telecom International Myanmar Company Limited"": 4,
    ""The Calyx Institute"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""M247 Europe Infra"": 2,
    ""Precious netcom pvt ltd"": 16,
    ""Datacamp Limited"": 4,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 2,
    ""OVH SAS"": 8,
    ""The Constant Company"": 444,
    ""LG DACOM Corporation"": 4,
    ""Korea Telecom"": 4,
    ""PT. Jala Lintas Media"": 6,
    ""UAB Host Baltic"": 2,
    ""Choopa"": 462
  },
  ""org"": {
    ""Evoxt"": 4,
    ""Flyservers S.A"": 48,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Akamai Technologies, Inc."": 16,
    ""Chinanet JS"": 6,
    ""UAB Host Baltic"": 16,
    ""Packethub S.A"": 2,
    ""Chinanet HE"": 4,
    ""DSL Network"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 2,
    ""Saigon Postel Corporation"": 2,
    ""4Media Ltd"": 2,
    ""Telekomunikasi Indonesia"": 6,
    ""Mytel"": 4,
    ""The Calyx Institute"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""M247 Ltd Zurich"": 2,
    ""A ONE Services"": 16,
    ""Linode, LLC"": 4,
    ""Cdnext BRA"": 4,
    ""Linode"": 8,
    ""Microsoft Azure Cloud (chinanorth3)"": 2,
    ""OVH Hosting, Inc."": 2,
    ""ONYPHE"": 2,
    ""Vultr Holdings, LLC"": 596,
    ""Digital Ocean"": 2,
    ""OVH Ltd"": 4,
    ""Boranet"": 4,
    ""Unknown"": 322
  },
  ""regionName"": {
    ""California"": 40,
    ""Kaunas"": 50,
    ""Virginia"": 20,
    ""Jiangsu"": 6,
    ""Vilnius"": 16,
    ""New York"": 4,
    ""Hebei"": 6,
    ""Metro Manila"": 2,
    ""North Holland"": 2,
    ""Michigan"": 2,
    ""Hanoi"": 2,
    ""Plovdiv"": 2,
    ""Jakarta"": 6,
    ""Yangon"": 4,
    ""Zurich"": 2,
    ""West Bengal"": 16,
    ""North West"": 4,
    ""Bratislava"": 4,
    ""Quebec"": 2,
    ""Hauts-de-France"": 2,
    ""New Jersey"": 2,
    ""England"": 4,
    ""Gyeonggi-do"": 4,
    ""Seoul"": 4,
    ""West Java"": 6,
    ""South West"": 852,
    ""Central Singapore"": 52
  },
  ""country"": {
    ""United States"": 68,
    ""Lithuania"": 66,
    ""China"": 12,
    ""Philippines"": 2,
    ""The Netherlands"": 2,
    ""Vietnam"": 2,
    ""Bulgaria"": 2,
    ""Indonesia"": 12,
    ""Myanmar"": 4,
    ""Switzerland"": 2,
    ""India"": 16,
    ""Singapore"": 908,
    ""Slovakia"": 4,
    ""Canada"": 2,
    ""France"": 2,
    ""United Kingdom"": 4,
    ""South Korea"": 8
  },
  ""account"": {
    ""hello"": 124,
    ""Test"": 38,
    ""(empty)"": 10,
    ""gPaoPxznF"": 2,
    ""xYiaeZ"": 2,
    ""KWlIOP"": 2,
    ""XksJZdFDR"": 2,
    ""boBvnD"": 2,
    ""gLpwNs"": 2,
    ""Administrator"": 6,
    ""OkXdutKZU"": 2,
    ""RzzBIf"": 2,
    ""aYlOsQ"": 2,
    ""b0zl37cv"": 8,
    ""beio"": 2,
    ""kAZogSYhe"": 2,
    ""HjyaWz"": 2,
    ""BzmbsY"": 2,
    ""142.93.8.59"": 904
  },
  ""keyboard"": {
    ""Unknown"": 1116
  },
  ""client_build"": {
    ""Unknown"": 1116
  },
  ""client_name"": {
    ""Unknown"": 1116
  },
  ""ip_type"": {
    ""Unknown"": 122,
    ""hosting"": 948,
    ""proxy"": 10,
    ""hosting & proxy"": 36
  }
}"
XrtUqR7N,2023-11-20_stats.json,rdp_snitch,JSON,Monday 20th of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""50.118.145.49"": 2,
    ""194.165.17.21"": 24,
    ""20.127.65.148"": 2,
    ""172.233.198.57"": 8,
    ""58.218.204.183"": 3,
    ""45.227.254.54"": 2,
    ""185.195.59.224"": 1,
    ""106.116.169.71"": 2,
    ""49.157.46.212"": 1,
    ""142.93.234.101"": 1,
    ""205.210.31.175"": 3,
    ""167.248.133.35"": 1,
    ""45.227.254.26"": 2,
    ""180.93.172.226"": 1,
    ""212.70.149.146"": 1,
    ""36.91.222.100"": 3,
    ""202.165.85.100"": 2,
    ""198.235.24.50"": 3,
    ""185.220.103.12"": 1,
    ""45.227.254.49"": 2,
    ""165.154.182.154"": 1,
    ""146.70.126.175"": 1,
    ""103.178.59.224"": 8,
    ""192.46.227.151"": 2,
    ""138.199.34.136"": 2,
    ""205.210.31.110"": 3,
    ""173.230.152.219"": 4,
    ""163.228.231.145"": 1,
    ""45.227.254.55"": 2,
    ""142.4.218.114"": 1,
    ""213.32.39.47"": 1,
    ""149.28.70.189"": 1,
    ""162.243.174.58"": 1,
    ""51.75.160.42"": 2,
    ""205.210.31.25"": 3,
    ""106.246.227.18"": 2,
    ""118.32.156.55"": 2,
    ""103.20.191.77"": 3,
    ""141.98.11.169"": 1,
    ""45.77.252.32"": 14,
    ""45.77.32.122"": 11,
    ""207.148.65.47"": 24,
    ""149.28.141.233"": 8,
    ""139.180.157.164"": 17,
    ""149.28.153.131"": 5,
    ""45.76.157.103"": 5,
    ""45.76.187.31"": 22,
    ""45.76.179.129"": 12,
    ""149.28.154.181"": 16,
    ""66.42.63.228"": 16,
    ""45.77.47.166"": 24,
    ""45.77.168.153"": 21,
    ""149.28.139.58"": 19,
    ""45.32.107.0"": 13,
    ""45.77.174.169"": 14,
    ""207.148.77.173"": 15,
    ""139.180.157.3"": 9,
    ""149.28.131.228"": 11,
    ""139.180.153.225"": 14,
    ""45.77.174.85"": 17,
    ""45.77.169.252"": 24,
    ""45.77.171.162"": 15,
    ""149.28.146.83"": 8,
    ""139.180.136.174"": 11,
    ""149.28.148.186"": 20,
    ""45.76.145.95"": 10,
    ""139.180.218.216"": 14,
    ""207.148.117.212"": 17,
    ""207.148.69.159"": 18,
    ""45.76.184.249"": 8
  },
  ""asn"": {
    ""AS149440"": 2,
    ""AS48721"": 24,
    ""AS8075"": 2,
    ""AS63949"": 14,
    ""AS4134"": 5,
    ""AS267784"": 8,
    ""AS62240"": 1,
    ""AS9658"": 1,
    ""AS14061"": 2,
    ""AS396982"": 12,
    ""AS398324"": 1,
    ""AS135944"": 1,
    ""AS204428"": 1,
    ""AS7713"": 3,
    ""AS136255"": 2,
    ""AS4224"": 1,
    ""AS135377"": 1,
    ""AS9009"": 1,
    ""AS133676"": 8,
    ""AS212238"": 2,
    ""AS58593"": 1,
    ""AS16276"": 4,
    ""AS20473"": 453,
    ""AS3786"": 2,
    ""AS4766"": 2,
    ""AS55685"": 3,
    ""AS209605"": 1
  },
  ""isp"": {
    ""EGIHosting"": 2,
    ""Flyservers S.A."": 32,
    ""Microsoft Corporation"": 2,
    ""Akamai Technologies, Inc."": 14,
    ""Chinanet"": 5,
    ""New York Network"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 1,
    ""DigitalOcean, LLC"": 2,
    ""Google LLC"": 12,
    ""Censys, Inc."": 1,
    ""SPT"": 1,
    ""SS-Net"": 1,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Telecom International Myanmar Company Limited"": 2,
    ""The Calyx Institute"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""M247 Europe Infra"": 1,
    ""Precious netcom pvt ltd"": 8,
    ""Datacamp Limited"": 2,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 1,
    ""OVH SAS"": 4,
    ""The Constant Company"": 222,
    ""LG DACOM Corporation"": 2,
    ""Korea Telecom"": 2,
    ""PT. Jala Lintas Media"": 3,
    ""UAB Host Baltic"": 1,
    ""Choopa"": 231
  },
  ""org"": {
    ""Evoxt"": 2,
    ""Flyservers S.A"": 24,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Chinanet JS"": 3,
    ""UAB Host Baltic"": 8,
    ""Packethub S.A"": 1,
    ""Chinanet HE"": 2,
    ""DSL Network"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 1,
    ""Saigon Postel Corporation"": 1,
    ""4Media Ltd"": 1,
    ""Telekomunikasi Indonesia"": 3,
    ""Mytel"": 2,
    ""The Calyx Institute"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""M247 Ltd Zurich"": 1,
    ""A ONE Services"": 8,
    ""Linode, LLC"": 2,
    ""Cdnext BRA"": 2,
    ""Linode"": 4,
    ""Microsoft Azure Cloud (chinanorth3)"": 1,
    ""OVH Hosting, Inc."": 1,
    ""ONYPHE"": 1,
    ""Vultr Holdings, LLC"": 298,
    ""Digital Ocean"": 1,
    ""OVH Ltd"": 2,
    ""Boranet"": 2,
    ""Unknown"": 161
  },
  ""regionName"": {
    ""California"": 20,
    ""Kaunas"": 25,
    ""Virginia"": 10,
    ""Jiangsu"": 3,
    ""Vilnius"": 8,
    ""New York"": 2,
    ""Hebei"": 3,
    ""Metro Manila"": 1,
    ""North Holland"": 1,
    ""Michigan"": 1,
    ""Hanoi"": 1,
    ""Plovdiv"": 1,
    ""Jakarta"": 3,
    ""Yangon"": 2,
    ""Zurich"": 1,
    ""West Bengal"": 8,
    ""North West"": 2,
    ""Bratislava"": 2,
    ""Quebec"": 1,
    ""Hauts-de-France"": 1,
    ""New Jersey"": 1,
    ""England"": 2,
    ""Gyeonggi-do"": 2,
    ""Seoul"": 2,
    ""West Java"": 3,
    ""South West"": 426,
    ""Central Singapore"": 26
  },
  ""country"": {
    ""United States"": 34,
    ""Lithuania"": 33,
    ""China"": 6,
    ""Philippines"": 1,
    ""The Netherlands"": 1,
    ""Vietnam"": 1,
    ""Bulgaria"": 1,
    ""Indonesia"": 6,
    ""Myanmar"": 2,
    ""Switzerland"": 1,
    ""India"": 8,
    ""Singapore"": 454,
    ""Slovakia"": 2,
    ""Canada"": 1,
    ""France"": 1,
    ""United Kingdom"": 2,
    ""South Korea"": 4
  },
  ""account"": {
    ""hello"": 62,
    ""Test"": 19,
    ""(empty)"": 5,
    ""gPaoPxznF"": 1,
    ""xYiaeZ"": 1,
    ""KWlIOP"": 1,
    ""XksJZdFDR"": 1,
    ""boBvnD"": 1,
    ""gLpwNs"": 1,
    ""Administrator"": 3,
    ""OkXdutKZU"": 1,
    ""RzzBIf"": 1,
    ""aYlOsQ"": 1,
    ""b0zl37cv"": 4,
    ""beio"": 1,
    ""kAZogSYhe"": 1,
    ""HjyaWz"": 1,
    ""BzmbsY"": 1,
    ""142.93.8.59"": 452
  },
  ""keyboard"": {
    ""Unknown"": 558
  },
  ""client_build"": {
    ""Unknown"": 558
  },
  ""client_name"": {
    ""Unknown"": 558
  },
  ""ip_type"": {
    ""Unknown"": 61,
    ""hosting"": 474,
    ""proxy"": 5,
    ""hosting & proxy"": 18
  }
}"
EyHnd0VF,Reference YAML for messaging architecture,thehunmonkgroup,YAML,Monday 20th of November 2023 06:09:39 PM CDT,"resources:
  - name: resource_a
    subscribes_to:
      - queue_1
    restricted_publish_exchanges: # Optional: Restricts publishing to these exchanges
      - exchange_1
      - exchange_2
      - exchange_3
    default_pathways: # Dict of pathway names to lists of exchanges
      pathway_a:
        - exchange_1
        - exchange_2
      pathway_b:
        - exchange_3

  - name: resource_b
    subscribes_to:
      - queue_2
    # No 'restricted_publish_exchanges' key means resource_b can publish to any exchange
    default_pathways: # Dict of pathway names to lists of exchanges
      pathway_c:
        - exchange_1

exchanges:
  - name: exchange_1
    type: direct
  - name: exchange_2
    type: topic
  - name: exchange_3
    type: fanout

queues:
  - name: queue_1
    exchange: exchange_1
    routing_key: key_1
    priority: 5
  - name: queue_2
    exchange: exchange_2
    routing_key: key_2
    priority: 10

bindings:
  - exchange: exchange_1
    queue: queue_1
    routing_key: key_1
  - exchange: exchange_2
    queue: queue_2
    routing_key: key_2"
RSbhez77,Untitled,Dorex,Linden Scripting,Monday 20th of November 2023 06:06:42 PM CDT,"string GetPSTDate()
{
    string DateToday = """";
    string DateUTC = llGetDate();
    if (llGetGMTclock() -  llGetWallclock() < 0) //if it's negative then the date has changed.
    {
        integer year = (integer)llGetSubString(DateUTC, 0, 3);
        integer month = (integer)llGetSubString(DateUTC, 5, 6);
        integer day = (integer)llGetSubString(DateUTC, 8, 9);
        
        if (day == 1) // if day is the 1st of a month, fix the date
        {
            if (month == 1) // if it is January
            {
                year = year - 1; // wind back the year
                month = 12; // set the month to December
                day = 31; // set to last day of December
            }
            else
            {
                month = month - 1; // wind back one month 
                if(month == 2)
                    day = 28 + !(year % 4) - !(year % 100) + !(year % 400);
                else
                    day = 31 - (month == 4 || month == 6 || month == 9 || month == 11);
            }
        }
        else
            day = day - 1;
        if(month < 10)
            DateToday = ""0"";
        DateToday+=(string)month + ""-"";
        if(day < 10)
            DateToday += ""0"";
        DateToday+=(string)day;
        return (string)year + ""-"" + DateToday;
    }
    return DateUTC;
}"
jE59aCsf,shaft,Robear9992,Lua,Monday 20th of November 2023 05:21:05 PM CDT,"--cc:Tweaked: Passage
--pastebin get jE59aCsf shaft.lua
--shaft

local nav =     require(""navigation"")
local inv =     require(""inventory"")
local timer =   require(""timer"")
local sides =   require(""sides"")

local COBBLE =      { name = ""minecraft:cobblestone"" }
local BEDROCK =     { name = ""minecraft:bedrock"" }

function place(item)
	if not turtle.items.select(item) then return false end
	if not turtle.detect() then turtle.place() end
	return true
end

local function atBedrock()
    local blocked, item = turtle.inspectDown()
    if not blocked then return false end
    return stacksEqual(item, BEDROCK)
end

---- Main Loop
timer.start()
local depth = 0

while not atBedrock() do
    nav.down()
    place(COBBLE)
    depth = depth + 1
end

turtle.turnLeft()
for n=1,depth do
    nav.up()
    place(COBBLE)
end

turtle.turnLeft()
for n=1,depth do
    nav.down()
    place(COBBLE)
end

turtle.turnLeft()
for n=1,depth do
    nav.up()
    place(COBBLE)
end

turtle.turnLeft()
nav.moveHome()  --API can be wonky sometimes and not move properly. Ensure we actually made it home.

print(""Completed in ""..timer.format())
"
6Nt3T8H9,Untitled,barabar4e,Python,Monday 20th of November 2023 04:40:24 PM CDT,"class Hotel(models.Model):
	name = models.CharField(
		max_length=100,
	)

	address = models.CharField(
		max_length=200,
	)


class Room(models.Model):
	hotel = models.ForeignKey(
		to=Hotel,
		on_delete=models.CASCADE,
	)

	number = models.CharField(
		max_length=100,
		unique=True,
	)

	capacity = models.PositiveIntegerField()

	total_guests = models.PositiveIntegerField()

	price_per_night = models.DecimalField(
		max_digits=10,
		decimal_places=2,
	)

	def clean(self):
		if self.total_guests > self.capacity:
			raise ValidationError(""Total guests are more than the capacity of the room"")

	def save(self, *args, **kwargs):
		self.clean()

		super().save(*args, **kwargs)

		return f""Room {self.number} created successfully""


class BaseReservation(models.Model):
	room = models.ForeignKey(
		to=Room,
		on_delete=models.CASCADE,
	)

	start_date = models.DateField()

	end_date = models.DateField()

	class Meta:
		abstract = True

	def reservation_period(self):
		return (self.end_date - self.start_date).days

	def calculate_total_cost(self):
		total_cost = self.reservation_period() * Room.price_per_night

		return f""{total_cost:.2f}""

	@property
	def is_available(self):
		reservations = self.__class__.objects.filter(
			room=self.room,
			end_date__gte=self.start_date,
			start_date__lte=self.end_date,
		)

		return not reservations.exists()

	def clean(self):
		if self.start_date >= self.end_date:
			raise ValidationError(""Start date cannot be after or in the same end date"")

		if not self.is_available:
			raise ValidationError(f""Room {self.room.number} cannot be reserved"")


class RegularReservation(BaseReservation):
	def save(self, *args, **kwargs):
		super().clean()

		super().save(*args, **kwargs)

		return f""Regular reservation for room {self.room.number}""


class SpecialReservation(BaseReservation):

	def save(self, *args, **kwargs):
		super().clean()

		super().save(*args, **kwargs)

		return f""Special reservation for room {self.room.number}""

	def extend_reservation(self, days: int):
		reservations = SpecialReservation.objects.filter(
			room=self.room,
			end_date__gte=self.start_date,
			start_date__lte=self.end_date + timedelta(days=days),
		)

		if reservations:
			raise ValidationError(""Error during extending reservation"")

		self.end_date += timedelta(days=days)

		self.save()

		return f""Extended reservation for room {self.room.number} with {days} days""
"
