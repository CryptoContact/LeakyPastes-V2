id,title,username,language,date,content
vR7RX6iC,Python Good camera,A_GUES,Python,Friday 1st of September 2023 06:09:56 PM CDT,"from plyer import camera
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.camera import Camera
from kivy.uix.boxlayout import BoxLayout

class CameraApp(App):
    def build(self):
        # create a layout
        layout = BoxLayout()
        
        # create a camera widget
        cam = Camera(index=0, resolution=(640,480))
        
        # create a button that will take a picture
        button = Button(text='Take Picture')
        
        # bind the button's on_press event to a callback function
        button.bind(on_press=self.take_picture)
        
        # add the camera and the button to the layout
        layout.add_widget(cam)
        layout.add_widget(button)
        
        return layout
    
    def take_picture(self, *args):
        # use plyer.camera.take_picture to take a picture
        # pass a filename where to save the picture
        # pass a callback function that will be called after taking picture
        camera.take_picture(filename='my_picture.jpg', on_complete=self.picture_taken)
    
    def picture_taken(self, obj):
        # this function will be called after taking picture
        # obj is either the filename where picture was saved or None if error occurred
        if obj:
            print('Picture saved at ' + obj)
        else:
            print('Error taking picture')

# run the app
CameraApp().run()"
7KV6ZaTq,comando dir,teslariu,Python,Friday 1st of September 2023 05:55:14 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#

import os
from datetime import datetime
from tabulate import tabulate

""""""
15/05/2020  22:23    <DIR>          .android
16/03/2022  11:43             1.795 .asc

Vamos a implementar el comando dir de Windows
Analizando la salida veo 4 columnas
directorio:  fecha y hora, <dir>,       ,nombre
archivo:     fecha y hora,      , tamaño,nombre
""""""

# creo una lista vacía para usarla con 'tabulate' como una tabla para
# mostrar los datos
tabla = []

# variables para contar archivos y directorios
archivos = 0
directorios = 0

#  necesito un comando para escanear el directorio, leer sus contenido
# y las propiedades de sus archivos/directorios: nombre, tamaño, etc
# os.listdir() y os.walk() no sirven porque solo buscan nombres
# scandir() verifica si una entrad del directorio es archivo o dir, su
# tamaño, sus permisos, sus timestamps, etc

for entrada in os.scandir(os.getcwd()):
	nombre = entrada.name
	# leo la info de cada entrada (file o dir)
	info = entrada.stat()
	mtime = datetime.utcfromtimestamp(info.st_mtime).strftime(""%d/%m/%Y %H:%M"")
	
	if entrada.is_file():
		tamanio = info.st_size
		
		# formateo el tamaño en B, Kb o Mb:
		if tamanio < 1024:
			tamanio = f""{tamanio}B""
			
		elif 1024 <= tamanio < 1024**2:
			tamanio = f""{tamanio/1024:.1f}Kb""
			
		else:
			tamanio = f""{tamanio/1024**2:.1f}Mb""
		
		archivos += 1
		
		tabla.append([mtime, '', tamanio, nombre])
		
	
	
	elif entrada.is_dir():
		directorios += 1
		tabla.append([mtime, '<DIR>','', nombre])
		
		
	else:
		pass
		
print(f""""""
 Directorio de {os.getcwd()}
"""""")

print(tabulate(
			tabla,
			tablefmt = 'plain',
			colalign = ['center', 'center', 'right', 'left']
		)
)

print(f""             {archivos} archivos"")
print(f""             {directorios} directorios"")
		
	
	
	
	
	
	
	
	
"
mP9vspHj,StandWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:35:14 PM CDT,"{
  ""Stands"": {
    ""Curse"": [
      368959499,
      693767,
      140716995
    ],
    ""CosmicMarioStand"": [
      368959499,
      693767,
      140716995
    ],
    ""her"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""KingJack"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""begmoon"": [
      368959499,
      693767,
      140716995
    ],
    ""GlitchStand"": [
      368959499,
      693767,
      140716995
    ],
    ""GoldenExperienceRequiemPrimeStand"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""Boombox"": [
      368959499,
      693767,
      140716995
    ],
    ""dont"": [
      368959499,
      693767,
      140716995
    ],
    ""Needlem0use"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""BanHammer"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""LEO"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""ShadowGuardiaStand"": [
      368959499,
      693767,
      140716995
    ],
    ""SnupzerOni"": [
      368959499,
      693767,
      140716995
    ],
    ""him"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""Prey"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""13StudioStand"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""DarkPlatinum"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""SuperOni_R"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ],
    ""LowTierGod"": [
      ""Ignore Universal Whitelist"",
      368959499,
      693767,
      140716995
    ]
  },
  ""BuffedHealth"": [
    90005,
    90006,
    9383005,
    93830005,
    20002,
    8782,
    8781,
    860,
    1003,
    74446233,
    1100111
  ]
}"
TPLasGD5,GlobalWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:32:58 PM CDT,"[368959499, 140716995, 693767]"
TeDh0tZf,AdminSkinWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:32:15 PM CDT,"[
  1668783738,
  368959499,
  178570487,
  140716995,
  1266339896,
  472680590,
  1587276491,
  693767,
  446636391,
  197322401,
  978966447,
  1767418923,
  241105399,
  1995651413,
  323833919
]"
iWyFKHw4,stock,Herb_is_Derp,JSON,Friday 1st of September 2023 05:30:50 PM CDT,"{
  ""StockMakers"": [
   140716995,
   368959499


  ]
}"
is9EqWxX,PXWhitelist,Herb_is_Derp,JSON,Friday 1st of September 2023 05:24:04 PM CDT,"{
  ""Administrator"": [
    368959499,
    178570487,
    140716995,
    1266339896,
    472680590,
    1587276491,
    693767,
    446636391,
    197322401,
    978966447,
    1767418923,
    241105399,
    1995651413,
    323833919
  ],
  ""Moderator"": [
    1
  ],
  ""VIPOnly"": [
    1
  ]
}"
bqQe67Tx,LogosRun2,q7eb2a,C++,Friday 1st of September 2023 04:46:35 PM CDT,"#include <iostream>
using namespace std;
const char* crt = ""\n------------------------------------\n"";

class Ispit {
    char _predmet [30];
    char _nastavnik [30];
    char _datum [20];
    int _brojProstorije;

    Ispit(){
        strncpy_s(_predmet, ""NO-Value"", _TRUNCATE);
        strncpy_s(_nastavnik, ""NO-Value"", _TRUNCATE);
        strncpy_s(_datum, ""NO-Value"", _TRUNCATE);
        _brojProstorije = 0;
    }
    Ispit(const char* predmet, const char* nastavnik, const char* datum, int brojProstorije){

        strcpy_s(_predmet, predmet, sizeof(_predmet));
        strcpy_s(_nastavnik, nastavnik, sizeof(_nastavnik));
        strcpy_s(_datum, datum, sizeof(_datum));

            const char* Get_predmet() const;
            {
                return _predmet;
            }
                const char* Get_nastavnik() const
                {
                    return _nastavnik () const
                }
                    const char* Get_datum () const
                    {
                        return _datum
                    }
                        int Get_brojProstorije()
                        {
                            return _brojProstorije;
                        }
        void Ispis() const;

        cout << ""Predmet: "" << _predmet << endl;
        cout << ""Nastavnik: "" << _nastavnik << endl;
        cout << ""Datum: "" << _datum << endl;
        cout << ""Broj prostorije: "" << _brojProstorije << endl;
    }
};
class IspitniRok
{
    char* _naziv;
    Ispit _ispitniTermin[20];
    int _brojTermina;

    public:
        IspitniRok(char* _naziv){
            strncpy(_naziv, ""NO-VALUE"", sizeof(_naziv));
        }
        IspitniRok(){
            delete[]_naziv;
            _naziv = nullptr;
        }
        Void ispis() const{
            cout << ""Naziv"" << _naziv << endl;
            cout << ""Broj Termina: "" << _brojTermina << endl;
        }
        void DodajIspit(const Ispit&);
}
int main(){

    Ispit Ispit1(""Principi Programiranja II"", ""Davos Skobic"", ""01.07.2023"" ""15"");
    //dodavati ptreban broj ispita..

    IspitniRok rok (""Redovan Julski rok"");

    rok.DodajIspit(Ispit1);
    rok.DodajIspit(Ispit2);
    //opet dodavanje ispita

    rok.ispis(""01.07.2023"");
    return 0;
}"
psxEV1Uc,Untitled,Nickanick12,ARM,Friday 1st of September 2023 04:18:48 PM CDT,"# Part 1: Create space in the data section for the header information.
.data
bmp_header: .space 54  # Allocate 54 bytes for BMP header
bmp_filename: .asciiz ""pillarscipher.bmp""
not_found_text: .asciiz ""Asterisks not found""

.text
# Open the file for reading (syscall 13)
li $v0, 13             # syscall 13 for opening a file
la $a0, bmp_header # Load the file name
li $a1, 0              # Open in read-only mode
li $a2, 0              # File permission (ignored)
syscall

# Read the first two bytes of the BMP file (syscall 14)
li $v0, 14             # syscall 14 for reading a file
la $a0, bmp_header     # Load address of bmp_header to read into
li $a1, 2              # Read 2 bytes
li $a2, 0              # File descriptor (from the previous syscall)
syscall

# Access the BMP header data and answer the questions
# 1) What are the first two bytes of the BMP file?
lb $t0, bmp_header     # Load the first byte into $t0
lb $t1, bmp_header+1   # Load the second byte into $t1

# Calculate the file size (assuming it's little-endian)
lw $t2, bmp_header+2   # Load the file size into $t2

# Extract the Bits Per Pixel value
lw $t3, bmp_header+28  # Load Bits Per Pixel into $t3

# Part 2: Allocate space on heap using the size information (syscall 9)
li $v0, 9              # syscall 9 for sbrk (allocate heap space)
move $a0, $t2          # Size of the file
li $v1, 4              # Allocate in units of 4 bytes (words)
syscall
# Now, you have heap space for the file content in $v0

# Reopen the file to read the rest of the data
li $v0, 13             # syscall 13 for opening a file
la $a0, bmp_header # Load the file name again
li $a1, 0              # Open in read-only mode
li $a2, 0              # File permission (ignored)
syscall

# Read the file content and store it in the heap space
li $v0, 14             # syscall 14 for reading a file
la $a0, 0($v0)         # Address of the heap space
move $a1, $t2          # Number of bytes to read (file size)
li $a2, 0              # File descriptor (from the previous syscall)
syscall

# Part 3: Search through the heap to find the clue (city following three asterisks)
la $t4, 0($v0)         # Load address of the heap space
li $t5, 0x2A2A2A       # ASCII value for three asterisks: '***'
search_loop:
    lb $t6, ($t4)      # Load a byte from the heap
    beqz $t6, not_found  # If it's null, the asterisks were not found
    beq $t6, $t5, found_clue  # If three asterisks are found, jump to found_clue
    addi $t4, $t4, 1   # Move to the next byte
    j search_loop

not_found:
    # Print a message indicating that the asterisks were not found
    li $v0, 4
    la $a0, not_found_text
    syscall

found_clue:
    # Define a buffer to store the city name
    .data
    city_buffer: .space 100  # Adjust the size as needed

    # Initialize indices and counters
    li $t7, 0     # Index for city_buffer
    li $t8, 0     # Counter for the number of characters processed

    copy_loop:
        lb $t9, ($t4)      # Load a byte from the heap
        sb $t9, city_buffer($t7)  # Store it in city_buffer
        beqz $t9, end_copy  # If it's null (end of city name), exit the loop

        # Move to the next byte in both source and destination
        addi $t4, $t4, 1
        addi $t7, $t7, 1

        # Check for the maximum city name length (e.g., 99 characters)
        # If you have a specific maximum length, you can adjust this value
        li $t6, 99  # Maximum city name length
        bge $t8, $t6, end_copy

        # Increment the counter
        addi $t8, $t8, 1
        j copy_loop

    end_copy:
        # Null-terminate the extracted city name
        sb $zero, city_buffer($t7)

        # Display the extracted city name (null-terminated string)
        li $v0, 4
        la $a0, city_buffer
        syscall

    # Exit the program
    li $v0, 10             # syscall 10 to exit
    syscall"
2EQCkqtp,Untitled,Zeinab_Hamdy,C++,Friday 1st of September 2023 03:57:50 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
// #define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  Prblem solution  ================================ */

bool Sort(stack <int > st ){
    
    while(!st.empty()){
        int temp= st.top();
        st.pop();
        if(!st.empty()){
            if(st.top() > temp) {
                return 0;
            }
        }
    }
    return 1;
}


void myCode(){


string s;
cin >> s;
stack < int > st;
int n = sz(s);

bool flag =0;
for(int i =0 ; i < n ; i++){
    if(s[i]=='+') st.push(1);
    
    else if(s[i]=='-') {
        if(!st.empty())
          st.pop();
        else RV(cout <<""NO\n"");
    }
    
    else if(s[i]=='0') {
         if(sz(st)   and st.top() == 1 ) 
              st.top()--;
            
         if(Sort(st)) RV(cout <<""NO\n"");
         flag=1;
         
    }
    
    else if(s[i]=='1'){
        if(!Sort(st))  RV(cout <<""NO\n"");
        flag =1;
    }
}


 if(!flag) RV(cout << ""YES\n"");
for(int i =0 ; i < n ; i++){
    if(s[i]=='0' or s[i]=='1'){
        char c = s[i];
        if(i + 1 < n and s[i+1]!=s[i] and (s[i+1]=='0' or s[i+1]=='1'))  RV(cout <<""NO\n"");
       
    }
    
    if(s[i]=='1'){
        int j =i+1;
        while( j < n and s[j]!='0' and s[j]!='+'){
            j++;
        }
        // j--;
        if(j < n and s[j]=='0') RV(cout <<""NO\n"");
    }
    
    if(s[i]=='0'){
        int j =i+1;
        while( j < n and s[j]!='1' and s[j]!='-'){
            j++;
        }
        // j--;
        if(j < n and s[j]=='1') RV(cout <<""NO\n"");
    }
    
   
}

for(int i =0 ; i < n ; i++){
    if(s[i]=='1' ){
        int j =i+1;
        int cnt=0;
        while( j < n and s[j]!='0' ){
            if(s[j]=='+') cnt++;
            else if(s[j]=='-' and cnt > 0) cnt--;
            else break;
            j++;
        }
      
        // cout << cnt << "" "" << i << "" "" << j <<nl;
        if(cnt == 0 and j < n and  s[j]=='0' )
            RV(cout <<""NO\n"");
    }
    
    if(s[i]=='0' ){
        int j =i+1;
        int cnt=0;
        while( j < n and s[j]!='1' ){
            if(s[j]=='+') cnt++;
            else if(s[j]=='-'  and cnt > 0) cnt--;
            else break;
            j++;
        }
      
      
        // cout << cnt << "" "" << i << "" "" << j <<nl;
        if(cnt == 0 and j < n and  s[j]=='1' )
            RV(cout <<""NO\n"");
    }
}


cout <<""YES"" <<  nl;



}


int main(){
                                   FastCode ;
                                     Zainab() ;

    int testCase=1;
          cin >> testCase ;
      for(int i=1 ; i<= testCase ; i++)
        myCode();

    return 0;
}"
cfWxCnec,plexcache_testing_media_version,bexem,Python,Friday 1st of September 2023 03:56:30 PM CDT,"from plexapi.server import PlexServer

# Replace with your Plex server URL and authentication token
PLEX_SERVER_URL = 'YOUR_URL'
AUTH_TOKEN = 'YOUR_TOKEN'

# Connect to Plex server
plex_server = PlexServer(PLEX_SERVER_URL, token=AUTH_TOKEN)

# Folder to match
specified_folder = '/your/specified/folder' # Put the cache folder here

# Fetch all on-deck media items
on_deck_items = plex_server.library.onDeck()

# Iterate through all on-deck items
for item in on_deck_items:
    print(f""Processing: {item.title}"")

    # Initialize preferred version
    preferred_version = None

    # Iterate through each media version available
    for version in item.media:
        for part in version.parts:
            print(f""Checking File Path: {part.file}"")

            # Check if this version matches the specified folder
            if specified_folder in part.file:
                preferred_version = version
                break

        # If a preferred version has been found, break the loop
        if preferred_version:
            break

    # If a preferred version is found, set it
    if preferred_version:
        print(f""Setting the preferred version to: {preferred_version.id} with path: {part.file}"")
        item.preferredVersion(preferred_version.id)
        item.reload()  # Reload to save changes
"
d3LBCimd,update,coinwalk,JavaScript,Friday 1st of September 2023 03:48:31 PM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/240).toFixed(7));
var zeggar = gobbie;
var target = (kozster*2000);
var tens = (gobbie*10);
var sevens = (gobbie*7);
var tuba = ((Math.floor(kozster/tens))*tens);
var tiba = ((Math.floor(kozster/tens))*tens);
var burgzie = kozster;
var bone = ((Math.floor(kozster/tens))*tens);
var razzle = 0;
var lower = 2.9;
var boon = true;
var getld = 0;
var boon = true;
var zimple = kozster;
var ficked = ((zimple*1).toFixed(8));
var migg = kozster;
var blowzy = false;
var nope = 1;
var upper = 6.9;
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;


function get(){
var burgzie = ($('#pct_balance').val());
var good = ((($('#pct_balance').val())-kozster).toFixed(8));
console.log(""profit"");
console.log(good);
if ((burgzie>=(tuba+(zeggar*upper)))||(burgzie<=(tuba-(zeggar*lower)))){
	upper = 4.9;
	lower = 4.9;
    zeggar = zeggar*2; 
    tuba = parseFloat(burgzie);
}
if (((burgzie-zeggar)<=(zeggar*40))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
	zeggar = gobbie;
    upper = 6.9;
	lower = 2.9;
    tuba = parseFloat((Math.floor(burgzie/tens))*tens);
}
if (($('#pct_balance').val())>=target){
console.log(""chicken dinner"");
return;
}
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
if ((milk==razzle)&&(getld>=1)&&(homer>brother)&&(!boon)){
brother = parseFloat(homer);
boon = true;
}
if ((final<49.5000)&&(blowzy)&&(getld>=1)){
zimple = zimple+zeggar
blowzy = false;
}
if ((final>=49.5000)&&(blowzy)&&(getld>=1)){
zimple = zimple-zeggar;
blowzy = false;
}
ficked = ((zimple*1).toFixed(8));
migg = parseFloat(burgzie);
if (((milk<razzle)&&(getld>=1)&&(homer>brother))||((milk>razzle)&&(getld>=1)&&(homer>brother))||((ficked>migg)&&(blowzy)&&(getld>=1))||((ficked>migg)&&(blowzy)&&(getld>=1))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(razzle);
console.log(ficked);
console.log(burgzie);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(boon)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
getld = getld+1;
blowzy = true;
boon = false;
homer = 0;
}
setTimeout(() => get(), 12);
}
get();"
AnELGDDW,Untitled,echoslider,Go,Friday 1st of September 2023 03:32:19 PM CDT,"package main
 
import (
    ""crypto/md5""
    ""encoding/hex""
    ""fmt""
    ""io""
    ""net/http""
    ""os""
    ""path/filepath""
    ""sync""
    ""time""
    ""strings""
    ""io/ioutil""
    ""image/png""
 
    ""github.com/boombuler/barcode""
    ""github.com/boombuler/barcode/qr""
)
 
const (
    imageDir    = ""C:\\bilder\\""
    qrDir       = ""C:\\bilder\\qr\\""
    webServerIP = ""localhost""
    webServerPort = ""5000""
    scanInterval = 5 * time.Second
)
 
var (
    scannedFiles   = make(map[string]struct{})
    scannedFilesMu sync.Mutex
)
 
func main() {
    // Starte den Hintergrund-Scan-Prozess
    go startScanProcess()
 
    // Starte den Webserver
    startWebServer()
}
 
func startScanProcess() {
    ticker := time.NewTicker(scanInterval)
    defer ticker.Stop()
 
    for {
        select {
        case <-ticker.C:
            scanForNewImages()
        }
    }
}
 
func scanForNewImages() {
    files, err := ioutil.ReadDir(imageDir)
    if err != nil {
        fmt.Println(""Fehler beim Lesen des Bilderverzeichnisses:"", err)
        return
    }
 
    for _, file := range files {
        if file.IsDir() {
            continue
        }
 
        filename := file.Name()
 
        scannedFilesMu.Lock()
        _, alreadyScanned := scannedFiles[filename]
        scannedFilesMu.Unlock()
 
        if !alreadyScanned {
            // Erzeuge MD5-Hash-Code und benenne das Bild um
            if hashStr := generateMD5Hash(filepath.Join(imageDir, filename)); hashStr != """" {
                scannedFilesMu.Lock()
                scannedFiles[filename] = struct{}{}
                scannedFilesMu.Unlock()
 
                // Erzeuge QR-Code mit dem Pfad
                qrCodeURL := fmt.Sprintf(""http://%s:%s/api/view/%s"", webServerIP, webServerPort, hashStr)
                qrPath := filepath.Join(qrDir, hashStr+"".png"")
                generateQRCode(qrCodeURL, qrPath)
 
 
            }
        }
    }
}
 
 
func generateMD5Hash(filePath string) string {
    // oeffne die Datei
    file, err := os.Open(filePath)
    if err != nil {
        fmt.Println(""Fehler beim Oeffnen der Datei:"", err)
        return """"
    }
    
 
    // Berechne den MD5-Hash
    hash := md5.New()
    if _, err := io.Copy(hash, file); err != nil {
        fmt.Println(""Fehler beim Berechnen des MD5-Hashes:"", err)
        return """"
    }
 
    file.Close()
 
    // Konvertiere den Hash in einen hexadezimalen String
    hashStr := hex.EncodeToString(hash.Sum(nil))
 
    // Benenne die Originalbilddatei in ihren MD5-Hash um
    newImagePath := filepath.Join(imageDir, hashStr)
    err = os.Rename(filePath, newImagePath)
    if err != nil {
        fmt.Println(""Fehler beim Umbenennen der Datei:"", err)
        return """"
    }
 
    return hashStr
}
 
func generateQRCode(qrCodeURL, qrPath string) {
    // Erzeuge den QR-Code
    qrCode, err := qr.Encode(qrCodeURL, qr.L, qr.Auto)
    if err != nil {
        fmt.Println(""Fehler beim Erstellen des QR-Codes:"", err)
        return
    }
 
    // Erzeuge das QR-Code-Bild
    qrCodeImage, err := barcode.Scale(qrCode, 200, 200)
    if err != nil {
        fmt.Println(""Fehler beim Skalieren des QR-Codes:"", err)
        return
    }
 
    // Speichere das QR-Code-Bild
    qrCodeFile, err := os.Create(qrPath)
    if err != nil {
        fmt.Println(""Fehler beim Erstellen des QR-Code-Bildes:"", err)
        return
    }
    defer qrCodeFile.Close()
 
    if err := png.Encode(qrCodeFile, qrCodeImage); err != nil {
        fmt.Println(""Fehler beim Speichern des QR-Codes:"", err)
        return
    }
}
 
func startWebServer() {
    http.HandleFunc(""/api/view/"", viewHandler)
    addr := webServerIP + "":"" + webServerPort
    fmt.Println(""Webserver gestartet auf"", addr)
    http.ListenAndServe(addr, nil)
}
 
func viewHandler(w http.ResponseWriter, r *http.Request) {
    // Holen Sie den MD5-Hash-Code aus der URL
    hashcode := strings.TrimPrefix(r.URL.Path, ""/api/view/"")
    imagePath := filepath.Join(imageDir, hashcode)
 
    // Senden Sie das Bild als Antwort
    http.ServeFile(w, r, imagePath)
}"
BvisaaSU,Subject/object psychology in code,thehunmonkgroup,Python,Friday 1st of September 2023 03:19:30 PM CDT,"class Individual:
    def __init__(self, stage='Subject'):
        self.stage = stage

    def evolve(self):
        if self.stage == 'Subject':
            self.stage = 'Object'
        elif self.stage == 'Object':
            self.stage = 'Inter-subject'
        else:
            print(""The individual has reached the highest stage of development."")

    def describe_stage(self):
        if self.stage == 'Subject':
            print(""The individual is at the stage where they are shaped by their environment."")
        elif self.stage == 'Object':
            print(""The individual is at the stage where they can reflect on and shape their environment."")
        else:
            print(""The individual is at the stage where they can understand and relate to the perspectives of others."")

# Create an individual
person = Individual()

# Evolve the individual and describe their stage
person.evolve()
person.describe_stage()"
awbc2WK2,Untitled,4epB9Ik,Java,Friday 1st of September 2023 03:16:26 PM CDT,"package net.mcskill.mod.PixelmonUI.side.client.gui;

import java.awt.Color;

import gg.essential.elementa.components.LabelComponent;
import gg.essential.elementa.components.ScrollComponent;
import gg.essential.elementa.components.UIBlock;
import gg.essential.elementa.components.Window;
import gg.essential.elementa.constraints.PixelConstraint;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.gui.ScaledResolution;

public class SettingsScreen extends GuiScreen {
	
	public SettingsScreen() {
		
	}
	
	public void initGui() {
        super.initGui();
        
	}
	
	public void drawScreen(int mouseX, int mouseY, float partialTicks) {
		ScaledResolution resolution = new ScaledResolution(mc);
		Window window = new Window();
		window.setHeight(new PixelConstraint(resolution.getScaledHeight()));
    	window.setWidth(new PixelConstraint(resolution.getScaledWidth()));
    	
    	UIBlock main_form = new UIBlock();
    	main_form.setWidth(new PixelConstraint(200));
    	main_form.setHeight(new PixelConstraint(120));
    	main_form.setX(new PixelConstraint((resolution.getScaledWidth() / 2) - (main_form.getWidth() / 2)));
    	main_form.setY(new PixelConstraint((resolution.getScaledHeight() / 2) - (main_form.getHeight() / 2)));
    	main_form.setColor(new Color(0, 0, 0, 200));
    	main_form.setChildOf(window);
    	
    	LabelComponent title = new LabelComponent(""\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0050\u0069\u0078\u0065\u006c\u006d\u006f\u006e \u0055\u0049"");
    	title.setTextScale(new PixelConstraint(7.7f));
    	title.setX(new PixelConstraint((main_form.getWidth() / 2) - (((title.getTextWidth() * 7.7f) / 7.7f ) / 2)));
    	title.setY(new PixelConstraint(2));
    	title.setChildOf(main_form);
    	
    	Slider test = new Slider(1.0f, 1.0f, 0.7f, ""Масштаб"");
    	test.setWidth(new PixelConstraint(main_form.getWidth() - 10));
    	test.setHeight(new PixelConstraint(10));
    	test.setY(new PixelConstraint(15));
    	test.setX(new PixelConstraint(5));
    	test.setChildOf(main_form);
    
    	window.draw();
    	
	}
	
	
}
"
9dqdSjrC,Untitled,4epB9Ik,Java,Friday 1st of September 2023 03:15:32 PM CDT,"package net.mcskill.mod.PixelmonUI.side.client.gui;

import java.awt.Color;

import gg.essential.elementa.UIComponent;
import gg.essential.elementa.components.LabelComponent;
import gg.essential.elementa.components.UIBlock;
import gg.essential.elementa.constraints.CenterConstraint;
import gg.essential.elementa.constraints.ChildBasedSizeConstraint;
import gg.essential.elementa.constraints.PixelConstraint;
import gg.essential.elementa.constraints.animation.AnimatingConstraints;
import gg.essential.elementa.constraints.animation.Animations;
import gg.essential.elementa.effects.ScissorEffect;
import gg.essential.universal.UMatrixStack;

public class Slider extends UIBlock{
	
	public float min;
	public float max;
	public float value = 0.7f;
	public String title = """";
	
	public Color bg_color = new Color(255, 255, 255, 100);
	public Color value_color = new Color(0, 0, 0, 100);
	
	final UIBlock body;
	final LabelComponent title_label;
	final UIBlock button_plus;
	final LabelComponent btn_p_lbl;
	final LabelComponent value_label;
	final UIBlock button_minus;
	final LabelComponent btn_m_lbl;

    
	public Slider(float min, float max, float def_value, String title) {
		
		//super();
		//System.out.println(this.getWidth());
		this.title = title;
		this.min = min;
		this.max = max;
		this.value = def_value;
		
		body = new UIBlock();
		
		title_label = new LabelComponent(title);
		
		button_plus = new UIBlock();

		
		
		
		
		btn_p_lbl = new LabelComponent(""+"");
		
		value_label = new LabelComponent(String.valueOf(def_value));
		
		button_minus = new UIBlock();
		
		btn_m_lbl = new LabelComponent(""-"");
		
		
		
		this.addChild(body);
		body.addChild(title_label);
		body.addChild(button_plus);
		body.addChild(value_label);
		body.addChild(button_minus);
		
		button_plus.addChild(btn_p_lbl);
		button_minus.addChild(btn_m_lbl);
		
		/*
		this.bg = new UIBlock();
		this.addChild(bg);
		bg.setWidth(new PixelConstraint(this.getWidth()));
		
		bg.setHeight(new PixelConstraint(this.getHeight()));
		bg.setX(new PixelConstraint(0));
		bg.setY(new PixelConstraint(0));
		bg.setColor(bg_color);
		
		//bg.setChildOf(this);
		
		*/
		
		
		
	}
	@Override
	public void draw(final UMatrixStack matrixStack) {
		
		//System.out.println(this.getParent().toString());
		//bg.draw();
		//System.out.println(""Рисует"");
		//System.out.println(this.getWidth());
		//LabelComponent title_label = new LabelComponent(title);
		title_label.setTextScale(new PixelConstraint(7.7f));
		title_label.setX(new PixelConstraint(3));
		//title_label.setChildOf(this);
		
		//UIBlock button_plus = new UIBlock();
		button_plus.setWidth(new PixelConstraint(10));
		button_plus.setHeight(new PixelConstraint(10));
		button_plus.setX(new PixelConstraint(this.getWidth() - 10));
		button_plus.setY(new PixelConstraint(-1.5f));
		button_plus.setColor(new Color(255,255,255,50));
		//LabelComponent btn_p_lbl = new LabelComponent(""+"");
		btn_p_lbl.setTextScale(new PixelConstraint(title_label.getTextScale()));
		btn_p_lbl.setColor(Color.green);
		btn_p_lbl.setX(new PixelConstraint((button_plus.getWidth() / 2) - (btn_p_lbl.getTextWidth() / 2) - 0.16f));
		btn_p_lbl.setY(new PixelConstraint((button_plus.getHeight() / 2) - 3.6f));
		
		//button_plus.setChildOf(this);
		//btn_p_lbl.setChildOf(button_plus);
		
		//LabelComponent value_label = new LabelComponent();
		value_label.setText(String.valueOf(value));
		value_label.setX(new PixelConstraint(this.getWidth() - (button_plus.getWidth() + 15)));
		value_label.setTextScale(new PixelConstraint(title_label.getTextScale()));
		//value_label.setChildOf(this);
		
		//UIBlock button_minus = new UIBlock();
		button_minus.setWidth(new PixelConstraint(10));
		button_minus.setHeight(new PixelConstraint(10));
		button_minus.setX(new PixelConstraint(this.getWidth() - (button_plus.getWidth() + value_label.getTextWidth() + 20)));
		button_minus.setY(new PixelConstraint(-1.5f));
		button_minus.setColor(new Color(255,0,0,50));
		//LabelComponent btn_m_lbl = new LabelComponent(""-"");
		btn_m_lbl.setTextScale(new PixelConstraint(title_label.getTextScale()));
		btn_m_lbl.setColor(Color.red);
		btn_m_lbl.setX(new PixelConstraint((button_minus.getWidth() / 2) - (btn_m_lbl.getTextWidth() / 2) - 0.25f));
		btn_m_lbl.setY(new PixelConstraint((button_minus.getHeight() / 2) - 2.5f));
		
		//button_plus.enableEffect(new ScissorEffect());
		
		
		
		
		//button_minus.setChildOf(this);
		//btn_m_lbl.setChildOf(button_minus);
		body.draw();
		button_plus.onMouseClickConsumer(uiClickEvent -> {
	           
			
			increment(0.1f);
	        System.out.println(""Button pressed, value is: "" + value);
	    });
		
	}

	public float get_value() {
		return value;
	}
	private boolean increment(float inc) {
		if (value + inc > max || value + inc < min) {
     	   return false;
        } else {
     	   value += inc;
     	   return true;
		}
	}
}
"
vAkDmwW0,Untitled,Derga,C++,Friday 1st of September 2023 03:13:17 PM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main()
{
	int64_t nodes_count, edges_count;
	cin >> nodes_count >> edges_count;

	if (nodes_count == 1)
	{
		cout << -1 << '\n';
		return 0;
	}

	vector< vector<bool> > is_edge(1 + nodes_count, vector<bool>(1 + nodes_count, false));
	for (int64_t i = 0; i < edges_count; ++i)
	{
		int64_t node1, node2;
		cin >> node1 >> node2;
		is_edge[node1][node2] = true;
		is_edge[node2][node1] = true;
	}
	
	vector<bool> is_adjacent_for_first_node = is_edge[1];
	
	vector< bool > full_subgraph_containing_first_node(1 + nodes_count, true);

	//формирую полный подграф содержащий первую вершину
	for (int64_t node1 = 2; node1 < is_adjacent_for_first_node.size(); ++node1)
	{
		if (!is_adjacent_for_first_node[node1])
		{
			full_subgraph_containing_first_node[node1] = false;
			continue;
		}			
		
		for (int64_t node2 = node1 + 1; node2 <= nodes_count; ++node2)
		{
			if (!is_adjacent_for_first_node[node2])
				continue;

			if (!is_edge[node1][node2])
				full_subgraph_containing_first_node[node2] = false;
		}
	}

	vector< bool > nodes(1 + nodes_count, false);
	for (int64_t i = 2; i < full_subgraph_containing_first_node.size(); ++i)
	{
		if (!full_subgraph_containing_first_node[i])
		{
			nodes[i] = true;
		}
	}
	//теперь в nodes - все вершины, которые не вошли в полный подграф, содержащий вершину 1
	//нужно проверить образуют ли эти вершины полный подграф. Если - да, то все ок, если нет - возвращаем -1.
	for (int64_t node1 = 2; node1 < nodes.size(); ++node1)
	{
		if (!nodes[node1])
			continue;

		for (int64_t node2 = node1 + 1; node2 < nodes.size(); ++node2)
		{
			if (!nodes[node2])
				continue;

			if (!is_edge[node1][node2])
			{
				cout << -1 << '\n';
				return 0;
			}
		}
	}

	//теперь у нас есть два полных подграфа.
	int64_t sum1 = 1;
	int64_t sum2 = 0;
	for (int64_t i = 2; i <= nodes_count; ++i)
	{
		if (full_subgraph_containing_first_node[i])
			sum1++;
		if (nodes[i])
			sum2++;
	}

	if (sum2 == 0)
	{
		cout << nodes_count / 2 << '\n';
		for (int64_t i = 2; i <= nodes_count; i += 2)
		{
				cout << i << ' ';
		}
		cout << '\n';
		for (int64_t i = 1; i <= nodes_count; i += 2)
		{
				cout << i << ' ';
		}
	}
	else 
	{
		cout << sum1 << '\n' << 1 << ' ';
		for (int64_t i = 2; i < full_subgraph_containing_first_node.size(); ++i)
		{
			if (full_subgraph_containing_first_node[i])
			{
				cout << i << ' ';
			}
		}
		cout << '\n';
		
		//cout << sum2 << '\n';
		for (int64_t i = 2; i < nodes.size(); ++i)
		{
			if (nodes[i])
			{
				cout << i << ' ';
			}
		}
	}

	return 0;
}

/*
test1
3 1
1 2
answer
2
1 2
3

test2
3 0
answer
-1

test3
5 10
1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5
*/"
rAcC4Fkx,AUTO TU,Win4Win,Lua,Friday 1st of September 2023 03:01:35 PM CDT,"module = peripheral.wrap(""back"")
displayName = ""minecraft:totem_of_undying""
local cachedSlot


local function moveTotem()
    while true do
        local found
        if module.getEquipment().getItem(2) == nil then
            for slot, meta in pairs(module.getEnder().list()) do
                if (meta.name == displayName) then
                    
                    cachedSlot = slot
                    found = true
                    break
                end
            end
        end
        if found then
			print(""Totem Added"")
            module.getEnder().pushItems(""equipment"", cachedSlot)
        else
            cachedSlot = nil
        end
        sleep(0.05)
    end

end

moveTotem()"
Z6zKeHy2,LogosRun,q7eb2a,C++,Friday 1st of September 2023 02:39:09 PM CDT,"/* Datum: 30.01.2020.
Visoka škola „Logos centar“
Praktični ispit
Principi programiranja II
▪ Postavku ispitnog zadatka nije dozvoljeno mijenjati.Studenti mogu dopuniti rješenje dodavanjem pomoćnih varijabli i / ili atributa klasa uz prateći komentar koji pojašnjava njihovu namjenu.
▪ Rješenja koje studenti budu predavali ne moraju nužno sadržavati sve implementirane funkcionalnosti niti prototip za sve funkcije koje su date u sklopu glavnog programa.
▪ Glavni program treba da sadrži samo pozive onih funkcija koje su implementirane u rješenju, a ostatak glavnog programa se može komentarisati ili obrisati.
▪ Po završetku ispita kreirati.doc ili.txt file kojeg ćete imenovati brojem indeksa i u njega kopirati vaše rješenje.
Zadatak:*/

#include<iostream>
using namespace std;
const char* crt = ""\n---------------------------------------------------------\n"";

class Predavac
{
	char _ID[10];
	char _oblast[100];
	int _ocjena;
public:
	//Implementirati funkcije potrebne za rad sa klasom

	Predavac()
	{
		strncpy_s (_ID, ""NO-VALUE"", _TRUNCATE);
		strncpy_s(_oblast, ""NO-VALUE"", _TRUNCATE);
		_ocjena = 0;
	}

	Predavac(const char* ID, const char* oblast, int ocjena)
	{
		strncpy_s(_ID, ID, _TRUNCATE);
		strncpy_s(_oblast, oblast, _TRUNCATE);
		_ocjena = ocjena;
	}


	const char* GetID() const { return _ID; }
	const char* GetOblast() const { return _oblast; }
	int GetOcjena() const { return _ocjena; }

	void SetOcjena(int ocjena) {_ocjena = ocjena;}


};
class Seminar
{
	char* _naziv;
	Predavac _predavaci[20]; //Statički niz objekata
	int _brojPredavaca;
public:
	//Implementirati funkcije potrebne za rad sa klasom
	//Implementirati destruktor

	Seminar(const char* naziv)
	{
		_brojPredavaca = 0;
		int size = strlen(naziv) + 1;
		_naziv = new char[size];
		strcpy_s(_naziv, size, naziv);
	}

	bool DodajPredavaca(const char* ID, const char* oblast)
	{
		if (_brojPredavaca >=20)
			return false;

		for (size_t i = 0; i < _brojPredavaca; i++)
		{
			if (strcmp(ID, _predavaci[i].GetID()) == 0)
				return false;
		}
		_predavaci[_brojPredavaca] = Predavac(ID, oblast, 1);
		_brojPredavaca++;
	}

	bool OcijeniPredavaca(const char* ID, int ocjena)
	{
		if (ocjena < 1 || ocjena > 5)
			return false;

		for (size_t i = 0; i < _brojPredavaca; i++)
		{
			if (strcmp(ID, _predavaci[i].GetID()) == 0)
			{
				_predavaci[i].SetOcjena(ocjena);
				return true;
			}
		}

		return false;
	}

	void Ispis ()
	{
		cout << ""Naziv seminara"" << _naziv << endl;

		cout << "" Predavaci seminara"" << endl;
		for (size_t i = 0; i < _brojPredavaca; i++)
		{
			cout << ""ID"" << _predavaci[i].GetID () << endl;
			cout << ""Ocjena"" << _predavaci[i].GetOcjena() << endl;
			cout << ""Oblast"" << _predavaci[i].GetOblast() << endl;
		}

	}


	/* double GetProsjecnaOcjena()const
	{

		int suma = 0;
		for (size_t i = 0; i < _brojPredavaca; i++)
		{
			suma += _predavaci[i].GetOcjena();

			return double(suma) / _brojPredavaca;
		}

		cout << ""PO"" << double(suma) / _brojPredavaca << endl;

	}*/



};
int main() {
	//Kreiranje nove instance klase Seminar sa proslijeđenim nazivom
	Seminar s(""Startup projekti"");
	const char* ID1 = ""AS001"";
	const char* ID2 = ""LD002"";
	const char* ID3 = ""DM003"";
	const char* ID4 = ""AD004"";
	const char* ID5 = ""IB005"";
	/* Funkcija DodajPredavaca prijavljuje novog predavača na seminar u određenoj oblasti.
	Predavač sa istim ID brojem ne može biti prijavljen više puta na isti seminar.
	Voditi računa i o ograničenju statičkog niza koje ne može biti prekoračeno (najviše 20 predavača).
	Funkcija, u zavisnosti od uspješnosti dodavanja predavača, vraća logičku vrijednost true ili false. */
	if (s.DodajPredavaca(ID1, ""Informacijske tehnologije""))
		cout << ""Predavac sa ID brojem "" << ID1 << "" uspjesno prijavljen na seminar."" << endl;
	if (s.DodajPredavaca(ID2, ""Informacijske tehnologije""))
		cout << ""Predavac sa ID brojem "" << ID2 << "" uspjesno prijavljen na seminar."" << endl;
	if (s.DodajPredavaca(ID3, ""Poslovno upravljanje""))
		cout << ""Predavac sa ID brojem "" << ID3 << "" uspjesno prijavljen na seminar."" << endl;
	if (!s.DodajPredavaca(ID2, ""Informacijske tehnologije""))
		cout << ""Predavac sa ID brojem "" << ID2 << "" je vec prijavljen na seminar ili su popunjeni kapaciteti seminara."" << endl;
	if (s.DodajPredavaca(ID4, ""Poslovno upravljanje""))
		cout << ""Predavac sa ID brojem "" << ID4 << "" uspjesno prijavljen na seminar."" << endl;
	if (s.DodajPredavaca(ID5, ""Praktična nastava""))
		cout << ""Predavac sa ID brojem "" << ID5 << "" uspjesno prijavljen na seminar."" << endl;
	cout << crt;
	/* Funkcija OcijeniPredavaca služi za evidenciju ocjena predavača seminara. Ocjene mogu biti u rasponu od 1 do 5.
	Ukoliko predavač sa proslijeđenim ID brojem nije pronađen ili je definisana ocjena izvan datog raspona, funkcija
	treba da vrati logičku vrijednost false. U suprotnom vraća true. */
	if (s.OcijeniPredavaca(ID1, 5))
		cout << ""Uspjesno ste ocijenili predavaca sa ID brojem "" << ID1 << endl;
	if (s.OcijeniPredavaca(ID2, 4))
		cout << ""Uspjesno ste ocijenili predavaca sa ID brojem "" << ID2 << endl;
	if (s.OcijeniPredavaca(ID3, 3))
		cout << ""Uspjesno ste ocijenili predavaca sa ID brojem "" << ID3 << endl;
	if (s.OcijeniPredavaca(ID4, 5))
		cout << ""Uspjesno ste ocijenili predavaca sa ID brojem "" << ID4 << endl;
	if (!s.OcijeniPredavaca(""ZH022"", 2))
		cout << ""Predavac sa ID brojem ZH022 nije pronadjen."" << endl;
	if (!s.OcijeniPredavaca(ID5, 6))
		cout << ""Ocjena je izvan validnog raspona (1-5)."" << endl;
	if (s.OcijeniPredavaca(ID5, 2))
		cout << ""Uspjesno ste ocijenili predavaca sa ID brojem "" << ID5 << endl;
	cout << crt;

//Funkcija Ispis vrši ispis svih podataka o seminaru, uključujući podatke o predavačima i njihovim ocjenama.
s.Ispis();
//Funkcija GetProsjecnaOcjena vraća prosječnu ocjenu svih predavača seminara ili predavača iz određene oblasti proslijeđene kao parametar.
//cout << ""Prosjecna ocjena svih predavaca na seminaru je: "" << s.GetProsjecnaOcjena() << endl;// odraditi
// cout << ""Prosjecna ocjena predavaca iz oblasti Informacijske tehnologije je: "" << s.GetProsjecnaOcjena(""Informacijske tehnologije"") << endl;//
return 0;
}"
wE1A3cs1,GamerBlox BlackPencil (Client),Gamer_blox,Lua,Friday 1st of September 2023 02:24:03 PM CDT,"local blacklisted = {
   {
      UserId  = 1,
      Reason = ""You Got BlackPencil""
   }
}
game.Players.PlayerAdded:Connect(function(player)
   for i,_ in pairs(blacklisted) do
      if table.find(blacklisted[i][""UserId""], player.UserId) then
         player:Kick(""You Are BlackPencil From This Script For The Reason: ""..blacklisted[i[""Reason""]])
      end
   end
end)"
kvUQWbdr,CodinGame_2023_09_01__20_51_57__count_letters_percent.java,MonsterScripter,Java,Friday 1st of September 2023 01:52:26 PM CDT,"import java.util.*;

/**
 * Objectif
 * 
 * Vous devez trouver le pourcentage (arrondi) que les caractères donnés représentent dans une chaîne donnée (sans tenir compte de la casse).
 * 
 * Entrée
 * Ligne 1 : Une chaîne s
 * Ligne 2 : Un entier n pour le nombre de caractères donnés
 * n lignes suivantes : Un caractère c
 * 
 * Sortie
 * n lignes : Le pourcentage (arrondi) que le caractère donné c représente dans la chaîne s
 * 
 * Contraintes
 * n ≥ 1
 * c est un caractère alphabétique en minuscules
 * 
 * Exemple
 * Entrée
 * Bonjour
 * 1
 * j
 * 
 * Sortie
 * 15%
 */
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        String s = in.nextLine();
        int n = in.nextInt();
        for (int i = 0; i < n; i++) {
            String c = in.next();
            int x = 0;
            for (int j=0; j < s.length(); j++) {
                if (Character.toLowerCase(s.charAt(j)) == c.charAt(0)) {
                    x++;
                }
            }
            System.out.println((int) Math.ceil((x / ((double) s.length())) * 100) + ""%"");
        }
    }
}
"
Yub30XCL,RunStar Simulator,LuaXe,Lua,Friday 1st of September 2023 01:48:53 PM CDT,"function C()
spawn(function () while getgenv().C do
local args = {[1] = true,[2] = 1,[3] = 1}game:GetService(""ReplicatedStorage"").Remotes.Race.RaceReward:FireServer(unpack(args))
TPCFrame(Workspace.Race.Start[3].CFrame) fireproximityprompt(Workspace.Race.Start[3]:FindFirstChildOfClass(""ProximityPrompt"")) task.wait() end end)
end
function R()
spawn(function () while getgenv().R do game:GetService(""ReplicatedStorage"").Remotes.Train.RebirthRequest:InvokeServer() task.wait() end end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""RunStar Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Wins"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)

b:Label(""Made by LuaXie"",{TextSize = 23; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end"
SkNv1Hem,Untitled,EnGold,Kotlin,Friday 1st of September 2023 01:39:28 PM CDT,"			...
            //Background pizza drops
 			bGAViewModel.addNewItem()
            val list = bGAViewModel.list
            Box(modifier = Modifier.fillMaxSize()) {
                list.forEach {  item ->
                        BackgroundDropItem(axisX = (0..350).random())
                }
            }
            //PIZZA BUTTON
            Box(contentAlignment = Alignment.Center) {
                val pizzaText: MutableState<String> = remember { mutableStateOf(""Press PIZZA"") }
                Image(painter = painterResource(id = R.drawable.pizza), contentDescription = ""Pizza button"",
                    modifier = Modifier
                        .size(225.dp)
                        .clickable(
                            interactionSource = interactionSource, indication = null
                        ) {
                            dataViewModel.tapPizza()
                            pizzaText.value = """"
                        })
                Text(
                    text = pizzaText.value,
                    fontFamily = FontFamily(Font(R.font.pressstart2p_regular)),
                    color = Color.White,
                    fontSize = 16.sp
                )
            }
            ....
            //BackgroundDropItem Function
 
enum class DropItem {
    Start, Finish
}
@Composable
fun BackgroundDropItem(
    axisX: Int
) {
    val configuration = LocalConfiguration.current
    val screenHeight = configuration.screenHeightDp.dp
    var state by remember {
        mutableStateOf(DropItem.Start)
    }
    val i by animateDpAsState(
        targetValue = if (state == DropItem.Start) 0.dp else 600.dp,
        animationSpec = tween(durationMillis = (750..1500).random(), easing = FastOutLinearInEasing),
        label = """"
    )
    Image(
        painter = painterResource(id = R.drawable.pizza),
        contentDescription = ""icon"",
        modifier = Modifier
            .offset(axisX.dp, i.value.dp)
            .size(50.dp)
    )
    state = DropItem.Finish
}
....
//BackgroundViewModel
data class BackDropData(
    val number:Int
)
class BackgroundAnimationViewModel(application: Application): AndroidViewModel(application) {
    private var item: Int = 0
    private var _list = mutableListOf<BackDropData>()
    var list by mutableStateOf(_list)
 
 
    fun addNewItem() {
        _list.add(BackDropData(item++))
    }
    fun deleteItem(item: BackDropData) {
        _list.remove(item)
 
    }
}
 
//DataViewModel
data class DataUiState(
    val score: Int = 0,
    val click: Int = 1,
    val afk: Int = 0,
)
class DataViewModel(application: Application) : AndroidViewModel(application) {
    private val dataStoreManager: DataStoreManager = DataStoreManager(application.baseContext)
 
    private val _uiState = MutableStateFlow(DataUiState())
    val uiState: StateFlow<DataUiState> = _uiState.asStateFlow()
 
    init {
        viewModelScope.launch {
            loadData()
        }
    }
 
    private suspend fun loadData() {
        dataStoreManager.getProgress().collect { progress ->
            updateDataState(progress)
        }
 
    }
 
    private suspend fun saveData(dataUiState: DataUiState) {
        dataStoreManager.saveProgress(DataUiState(dataUiState.score))
    }
 
    private fun updateDataState(dataUiState: DataUiState) {
        viewModelScope.launch {
            saveData(dataUiState)
            _uiState.update { currentState ->
                currentState.copy(
                    score = dataUiState.score
                )
            }
        }
    }
 
    fun tapPizza() {
        val updatedScore = _uiState.value.score + _uiState.value.click
        updateDataState(DataUiState(score = updatedScore))
    }
 
    fun buyItem(minusScore: Int) {
        val updatedScore = _uiState.value.score.minus(minusScore)
        updateDataState(DataUiState(score = updatedScore))
    }
}
"
PJmKpeJJ,lesson13_322,Petro_zzz,C++,Friday 1st of September 2023 01:37:25 PM CDT,"#include <iostream>

using namespace std;

void average700() {
	
	int n = 0;
	int step = 0;
	double aver = 0;
	double summ = 0;
		
	do {		
		n++;
		int k = 2;
		bool is_simple = true;
		while (k < n) {
			if ((n % k) == 0) {
				is_simple = false;
				break;
			}
			k++;
		}
		if (is_simple) {
			step++;
			summ += n;
			aver = summ / step;
			cout << aver << endl;
		}
	} while (aver < 700);
	
	/*
	while (aver < 700) {
		step++;
		n++;
		summ += n;
		aver = summ / step;
		cout << aver << endl;
	}
	*/	
}

void calc_clock() {
	const int n = 12;
	int num_bam = 0;
	for (int k = 1; k <= n; k++) {
		num_bam += k;
	}
	cout << num_bam << endl;
}

void test_fibbo() {
	int Fn_1 = 1; // F1
	int Fn_2 = 0; // F0
	int Fn;
	for (int n = 2; n < 20; n++) {
		Fn = Fn_2 + Fn_1;
		cout << Fn << endl;		
		Fn_2 = Fn_1;
		Fn_1 = Fn;
	}
}

void test_lucky() {
	int val, a1, a2, a3, a4, a5, a6;
	int num = 0;


	for (int n = 1; n < 999999; n++) {
		val = n;
		a6 = val % 10;		
		val /= 10;

		a5 = val % 10;
		val /= 10;

		a4 = val % 10;
		val /= 10;

		a3 = val % 10;
		val /= 10;

		a2 = val % 10;
		val /= 10;

		a1 = val % 10;
		val /= 10;
		if ((a1 + a2 + a3) == (a4 + a5 + a6)) {
			cout << n << "" "";
			num++;
			continue;
		} 
		if ((a1 == a2 == a3) && (a4 == a5 == a6)) {
			cout << n << "" "";
			num++;
			continue;
		}

		if ((10 * a1 + a2) == (10 * a3 + a4) &&
			(10 * a1 + a2) == (10 * a5 + a6)) {
			cout << n << "" "";
			num++;
			continue;
		}
	}
	cout << endl << "" lucky"" << num << endl;
}

int main() {
	//average700();
	/*
	int n = 0;
	while (n < 777) {
		n++;
		if (n > 100 && n < 777)
			continue;
		cout << n << "" "";
	}
	*/
	//test_fibbo();
	//calc_clock();

	test_lucky();
	cout << endl;
	return 0;
}"
Av5rJZ2y,Untitled,HotStuffIsComing,JavaScript,Friday 1st of September 2023 12:57:25 PM CDT,"#ifdef CONFIG_TOP
#include ""proffieboard_v3_config.h""
#define NUM_BLADES 1
#define NUM_BUTTONS 2
#define VOLUME 2300
const unsigned int maxLedsPerStrip = 144;
#define CLASH_THRESHOLD_G 2.0
#define ORIENTATION ORIENTATION_USB_TOWARDS_BLADE
#define FILTER_CUTOFF_FREQUENCY 100
#define FILTER_ORDER 8
#define ENABLE_AUDIO
#define ENABLE_MOTION
#define ENABLE_WS2811
#define ENABLE_SD
#define ENABLE_SERIAL
#define DISABLE_BASIC_PARSER_STYLES
#define NO_REPEAT_RANDOM
#define COLOR_CHANGE_DIRECT
#define BOOT_VOLUME 400
#define MOTION_TIMEOUT 60 * 10 * 1000
#define IDLE_OFF_TIME 60 * 1 * 1000
#define ENABLE_ALL_EDIT_OPTIONS
#define FETT263_MOTION_WAKE_POWER_BUTTON
#define FETT263_TWIST_ON_PREON
#define FETT263_TWIST_ON_NO_BM
#define FETT263_TWIST_OFF
#define FETT263_SWING_ON_PREON
#define FETT263_SWING_ON_NO_BM
#define FETT263_THRUST_ON_PREON
#define FETT263_THRUST_ON_NO_BM
#define FETT263_BC_SAY_BATTERY_VOLTS_PERCENT
#define FETT263_SAY_COLOR_LIST
#define FETT263_SAY_COLOR_LIST_CC
#define FETT263_HOLD_BUTTON_OFF
#define FETT263_EDIT_SETTINGS_MENU
#endif



#ifdef CONFIG_PROP
#include ""../props/saber_fett263_buttons.h""
#endif




#ifdef CONFIG_PRESETS

Preset presets[] = {









{""fatherROTJ;common"",""fatherROTJ/tracks/fatherROTJ.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},



{""fatherR1;common"",""fatherR1/tracks/fatherR1.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},



{""fatherANH;common"",""fatherANH/tracks/fatherANH.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},



{""fatherESB;common"",""fatherESB/tracks/fatherESB.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},



{""darth;common"",""darth/tracks/darth.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},



{""dv3;common"",""dv3/tracks/dv3.wav"",

/* copyright Fett263 Rotoscope (Primary Blade) OS6 Style
https://fett263.com/fett263-proffieOS6-style-library.html#Rotoscope
OS6.7 v4.0181
Single Style
Base Style: Rotoscope - Single Color (Original Trilogy)

Base Color: Rgb<255,0,0> (0)

--Effects Included--
Ignition Effect: Standard Ignition
Retraction Effect: Standard Retraction
Lockup Effect: Intensity Lockup V1, Begin Effect: Real Clash, End Effect: Full Blade Absorb
LightningBlock Effect: Responsive Lightning Block
Drag Effect: Intensity Sparking Drag
Melt Effect: Intensity Melt
Blast Effect: Blast Wave (Random)
Clash Effect: Real Clash V1
*/
StylePtr<Layers<RandomFlicker<Stripes<10000,-2600,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<7710>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>,Mix<Int<16448>,Black,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>>,RgbArg<BASE_COLOR_ARG,Rgb<255,0,0>>>,TransitionEffectL<TrWaveX<RgbArg<BLAST_COLOR_ARG,Rgb<255,255,255>>,Scale<EffectRandomF<EFFECT_BLAST>,Int<100>,Int<400>>,Int<100>,Scale<EffectPosition<EFFECT_BLAST>,Int<100>,Int<400>>,Scale<EffectPosition<EFFECT_BLAST>,Int<28000>,Int<8000>>>,EFFECT_BLAST>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,TransitionEffectL<TrConcat<TrInstant,AlphaL<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<12000>,Int<60000>>>>,TrFadeX<Scale<ClashImpactF<>,Int<200>,Int<400>>>>,EFFECT_CLASH>,TransitionEffectL<TrWaveX<RgbArg<CLASH_COLOR_ARG,Rgb<255,255,255>>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Int<100>,Scale<ClashImpactF<>,Int<100>,Int<400>>,Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>>,EFFECT_CLASH>>,LockupTrL<TransitionEffect<AlphaMixL<Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<SwingSpeed<100>,Int<14000>,Int<18000>>>,BrownNoiseFlickerL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Int<200>>,StripesX<Int<1800>,Scale<NoisySoundLevel,Int<-3500>,Int<-5000>>,Mix<Int<6425>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<12850>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>>,AlphaL<AudioFlicker<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Mix<Int<10280>,Black,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Int<13000>>>,TrJoin<TrDelay<8000>,TrInstant>,TrFade<3000>,EFFECT_LOCKUP_BEGIN>,TrConcat<TrJoin<TrDelay<50>,TrInstant>,Mix<IsLessThan<ClashImpactF<>,Int<26000>>,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,AlphaL<RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,Bump<Scale<BladeAngle<>,Scale<BladeAngle<0,16000>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-12000>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<10000>>>,Sum<IntArg<LOCKUP_POSITION_ARG,16000>,Int<-10000>>>,Scale<ClashImpactF<>,Int<20000>,Int<60000>>>>>,TrFade<300>>,TrConcat<TrInstant,RgbArg<LOCKUP_COLOR_ARG,Rgb<255,255,255>>,TrFade<400>>,SaberBase::LOCKUP_NORMAL>,ResponsiveLightningBlockL<Strobe<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,AudioFlicker<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Blue>,50,1>,TrConcat<TrInstant,AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Bump<Int<12000>,Int<18000>>>,TrFade<200>>,TrConcat<TrInstant,HumpFlickerL<AlphaL<RgbArg<LB_COLOR_ARG,Rgb<255,255,255>>,Int<16000>>,30>,TrSmoothFade<600>>>,LockupTrL<AlphaL<RandomPerLEDFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrConcat<TrJoin<TrDelay<4000>,TrWipeIn<200>>,AlphaL<BrownNoiseFlickerL<RgbArg<DRAG_COLOR_ARG,Rgb<255,255,255>>,Int<300>>,SmoothStep<IntArg<DRAG_SIZE_ARG,28000>,Int<3000>>>,TrFade<4000>>,TrFade<300>,SaberBase::LOCKUP_DRAG>,LockupTrL<AlphaL<Remap<Scale<RampF,Int<65536>,Int<0>>,StaticFire<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,Mix<TwistAngle<>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>,RotateColorsX<Int<3000>,Mix<Int<12000>,Black,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>>,0,3,5,3000,10>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrConcat<TrWipeIn<100>,AlphaL<RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrJoin<TrDelay<4000>,TrFade<300>>,AlphaL<Mix<TwistAngle<>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>,RotateColorsX<Int<3000>,RgbArg<STAB_COLOR_ARG,Rgb<255,24,0>>>>,SmoothStep<IntArg<MELT_SIZE_ARG,28000>,Int<4000>>>,TrFade<4000>>,TrWipe<200>,SaberBase::LOCKUP_MELT>,InOutTrL<TrWipeX<IgnitionTime<800>>,TrWipeInX<RetractionTime<0>>,Black>>>(),
},






};
BladeConfig blades[] = {
  { 0, WS281XBladePtr<132, bladePin, Color8::GRB, PowerPINS<bladePowerPin2, bladePowerPin3> >(),
CONFIGARRAY(presets) },
};
#endif




#ifdef CONFIG_BUTTONS
Button PowerButton(BUTTON_POWER, powerButtonPin, ""pow"");
Button AuxButton(BUTTON_AUX, auxPin, ""aux"");
#endif"
3k7FkN56,05. Godzilla vs. Kong,Spocoman,C++,Friday 1st of September 2023 12:45:36 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    double budget;
    cin >> budget;

    int statist;
    cin >> statist;

    double dress;
    cin >> dress;

    double decor = budget / 10;

    if (statist > 150)
    {
        dress *= 0.9;
    }

    double price = decor + statist * dress;

    cout.setf(ios::fixed);
    cout.precision(2);

    if (budget >= price)
    {
        cout << ""Action!"" << endl;
        cout << ""Wingard starts filming with "" << budget - price << "" leva left."" << endl;
    }
    else
    {
        cout << ""Not enough money!"" << endl;
        cout << ""Wingard needs "" << price - budget << "" leva more."" << endl;
    }
    
    return 0;
}"
SFyGYcse,04. Toy Shop,Spocoman,C++,Friday 1st of September 2023 12:44:48 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    double amount;
    cin >> amount;

    int puzzles, dolls, bears, minions, trucks;
    cin >> puzzles >> dolls >> bears >> minions >> trucks;

    double puzzlePrice = puzzles * 2.6;
    double dollsPrice = dolls * 3;
    double bearsPrice = bears * 4.1;
    double minionsPrice = minions * 8.2;
    double trucksPrice = trucks * 2;
    int toys = puzzles + dolls + bears + minions + trucks;
    double price = puzzlePrice + dollsPrice + bearsPrice + minionsPrice + trucksPrice;

    if (toys >= 50)
    {
        price *= 0.75;
    }

    price *= 0.9;

    cout.setf(ios::fixed);
    cout.precision(2);

    if (price >= amount)
    {
        cout << ""Yes! "" << price - amount << "" lv left."" << endl;
    }
    else
    {
        cout << ""Not enough money! "" << amount - price << "" lv needed."" << endl;
    }
    
    return 0;
}"
mjHeBu2G,03. Time + 15 Minutes,Spocoman,C++,Friday 1st of September 2023 12:43:50 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    int hours, minutes;
    cin >> hours >> minutes;

    int sumMinutes = hours * 60 + minutes + 15;
    int totalHours = sumMinutes / 60 % 24;
    int totalMinutes = sumMinutes % 60;

    if (totalMinutes < 10)
    {
        cout << totalHours << "":0"" << totalMinutes << endl;
    }
    else
    {
        cout << totalHours << ':' << totalMinutes << endl;

    }
    
    return 0;
}

Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{
    int hours, minutes;
    cin >> hours >> minutes;

    int sumMinutes = hours * 60 + minutes + 15;
    int totalHours = sumMinutes / 60 % 24;
    int totalMinutes = sumMinutes % 60;

    cout << totalHours << ':' << (totalMinutes < 10 ? ""0"" : """") << totalMinutes << endl;
    
    return 0;
}

Решение със setw() и setfill() на библиотеката iomanip:

#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
    int hours, minutes;
    cin >> hours >> minutes;

    int sumMinutes = hours * 60 + minutes + 15;
    int totalHours = sumMinutes / 60 % 24;
    int totalMinutes = sumMinutes % 60;

    cout << totalHours << ':' << setw(2) << setfill('0') << totalMinutes << endl;
    
    return 0;
}"
ePttCnj0,02. Bonus Score,Spocoman,C++,Friday 1st of September 2023 12:38:00 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    int number;
    cin >> number;

    double bonus = 0;

    if (number <= 100)
    {
        bonus = 5;
    }
    else if (number > 1000)
    {
        bonus = number * 0.1;
    }
    else
    {
        bonus = number * 0.2;
    }
    if (number % 2 == 0)
    {
        bonus++;
    }
    else if (number % 10 == 5)
    {
        bonus += 2;
    }

    cout << bonus << endl;
    cout << bonus + number << endl;

    return 0;
}

Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{
    int number;
    cin >> number;

    double bonus = 0;

    bonus +=
        number <= 100 ? 5 :
        number > 1000 ? number * 0.1 : number * 0.2;

    bonus +=
        number % 2 == 0 ? 1 :
        number % 10 == 5 ? 2 : 0;

    cout << bonus << endl << bonus + number << endl;

    return 0;
}"
KQcSRh7y,01. Sum Seconds,Spocoman,C++,Friday 1st of September 2023 12:36:06 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    int firstTime, secondTime, thirdTime;
    cin >> firstTime >> secondTime >> thirdTime;

    int total = firstTime + secondTime + thirdTime;
    int minutes = total / 60;
    int seconds = total % 60;

    if (seconds < 10)
    {
        cout << minutes << "":0"" << seconds << endl;
    }
    else
    {
        cout << minutes << "":"" << seconds << endl;
    }
}

Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{
    int firstTime, secondTime, thirdTime;
    cin >> firstTime >> secondTime >> thirdTime;

    int total = firstTime + secondTime + thirdTime;
    int minutes = total / 60;
    int seconds = total % 60;

    cout << minutes << "":"" << (seconds < 10 ? ""0"" : """") << seconds << endl;

    return 0;
}

Решение със setW() и setfill() на библиотеката iomanip:

#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
    int firstTime, secondTime, thirdTime;
    cin >> firstTime >> secondTime >> thirdTime;

    int total = firstTime + secondTime + thirdTime;
    int minutes = total / 60;
    int seconds = total % 60;

    cout << minutes << ':' << setw(2) << setfill('0') << seconds << endl;

    return 0;
}"
HPSJYDH8,07. Area of Figures,Spocoman,C++,Friday 1st of September 2023 12:28:27 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    string figure;
    cin >> figure;

    double area = 0;

    if (figure == ""square"")
    {
        double side;
        cin >> side;

        area = side * side;
    }
    else if (figure == ""rectangle"")
    {
        double length, width;    
        cin >> length >> width;

        area = length * width;
    }
    else if (figure == ""circle"")
    {
        double radius;
        cin >> radius;

        area = 3.14159265359 * radius * radius;
    }
    else if (figure == ""triangle"")
    {
        double base, height;
        cin >> base >> height;

        area = base * height / 2;
    }

    cout.setf(ios::fixed);
    cout.precision(3);
    
    cout << area << endl;
    
    return 0;
}"
wgbuaxpc,06. Speed Info,Spocoman,C++,Friday 1st of September 2023 12:27:24 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    double speed;
    cin >> speed;

    string info = """";

    if (speed <= 10)
    {
        info = ""slow"";
    }
    else if (speed <= 50)
    {
        info = ""average"";
    }
    else if (speed <= 150)
    {
        info = ""fast"";
    }
    else if (speed <= 1000)
    {
        info = ""ultra fast"";
    }
    else if (speed > 1000)
    {
        info = ""extremely fast"";
    }
    
    cout << info << endl;
    
    return 0;
}
  
Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    double speed;
    cin >> speed;

    string info = 
        speed <= 10 ? ""slow"" :
        speed <= 50 ? ""average"" :
        speed <= 150 ? ""fast"" :
        speed <= 1000 ? ""ultra fast"" : ""extremely fast"";
    
    cout << info << endl;
    
    return 0;
}"
vXSD7Ymb,05. Number 100...200,Spocoman,C++,Friday 1st of September 2023 12:25:53 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    int number;
    cin >> number;

    if (number < 100)
    {
        cout << ""Less than 100"" << endl;;
    }
    else if (number <= 200)
    {
        cout << ""Between 100 and 200"" << endl;;
    }
    else
    {
        cout << ""Greater than 200"" << endl;
    }
    
    return 0;
}
  
Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    int number;
    cin >> number;

    cout << (number < 100 ? ""Less than 100"" : number <= 200 ? ""Between 100 and 200"" : ""Greater than 200"") << endl;
    
    return 0;
}"
vAeFgZPd,04. Password Guess,Spocoman,C++,Friday 1st of September 2023 12:23:19 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    string password;
    cin >> password;

    if (password == ""s3cr3t!P@ssw0rd"")
    {
        cout << ""Welcome"" << endl;
    }
    else
    {
        cout << ""Wrong password!"" << endl;
    }

    return 0;
}
  
Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    string password;
    cin >> password;

    cout << (password == ""s3cr3t!P@ssw0rd"" ? ""Welcome"" : ""Wrong password!"") << endl;
    
    return 0;
}"
9uXwP1yu,03. Even or Odd,Spocoman,C++,Friday 1st of September 2023 12:21:39 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    int number;
    cin >> number;

    if (number % 2 == 0)
    {
        cout << ""even"" << endl;
    }
    else
    {
        cout << ""odd"" << endl;
    }

    return 0;
}

Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    int number;
    cin >> number;

    cout << (number % 2 == 0 ? ""even"" : ""odd"") << endl;
    
    return 0;
}"
Z9QTkxxJ,CodinGame_2023_09_01__19_20_48__sum.java,MonsterScripter,Java,Friday 1st of September 2023 12:21:01 PM CDT,"import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Objectif
 * 
 * Dans un cour de golf, chaque trou possède un ""par"", une valeur qui est le maximum de swings dont un joueur a idéalement besoin pour mettre la balle dans le trou.
 * 
 * Dès qu'un joueur a mis la balle dans le trou, le par est soustrait du nombre effectif de coups du joueur. En résulte le score du joueur pour ce trou (par exemple, 2 swings pour un par de 3 donne un score de -1).
 * 
 * Le score final pour un joueur sur un cour est la somme de ses scores pour chaque trou.
 * 
 * À partir d'une feuille de score pour les 18 trous, calculez le score du joueur.
 * 
 * Entrée
 * Ligne 1 : 18 nombres séparés par des espaces, représentant les pars pour chaque trou.
 * Ligne 2 : 18 nombres séparés par des espaces, représentant le nombre de swings effectués par le joueur pour chaque trou.
 * 
 * Sortie
 * Ligne 1 : le score final du joueur pour le parcours.
 * 
 * Exemple
 * Entrée
 * 4 4 3 4 4 5 4 3 5 4 3 4 5 4 4 3 4 5
 * 4 3 2 4 3 4 3 3 4 4 3 4 6 4 5 3 3 4
 * 
 * Sortie
 * -6
 */
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 18; i++) {
            int x = in.nextInt();
            sum -= x;
        }
        for (int i = 0; i < 18; i++) {
            int x = in.nextInt();
            sum += x;
        }
        System.out.println(sum);
    }
}
"
vnDajDq5,02. Greater Number,Spocoman,C++,Friday 1st of September 2023 12:19:02 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    int firstNumber, secondNumber;
    cin >> firstNumber >> secondNumber;

    if (firstNumber > secondNumber)
    {
        cout << firstNumber << endl;
    }
    else
    {
        cout << secondNumber << endl;
    }
    return 0;
}
  
Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    int firstNumber, secondNumber;
    cin >> firstNumber >> secondNumber;

    cout << (firstNumber > secondNumber ? firstNumber : secondNumber) << endl;
    
    return 0;
}
  
Решение с max():

#include <iostream>

using namespace std;

int main()
{

    int firstNumber, secondNumber;
    cin >> firstNumber >> secondNumber;

    cout << max(firstNumber, secondNumber) << endl;

    return 0;
}"
AqWjJc15,01. Excellent Result,Spocoman,C++,Friday 1st of September 2023 12:14:20 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    double grade;
    cin >> grade;

    if (grade >= 5.50)
    {
        cout << ""Excellent!"" << endl;
    }

    return 0;
}
  "
X4cwef4S,10. Weather Forecast - Part 2,Spocoman,C++,Friday 1st of September 2023 12:12:13 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    double degrees;
    cin >> degrees;

    string weather;

    if (degrees >= 5 && degrees < 12)
    {
        weather = ""Cold"";
    }
    else if (degrees >= 12 && degrees < 15)
    {
        weather = ""Cool"";
    }
    else if (degrees >= 15 && degrees <= 20)
    {
        weather = ""Mild"";
    }
    else if (degrees > 20 && degrees < 26)
    {
        weather = ""Warm"";
    }
    else if (degrees >= 26 && degrees <= 35)
    {
        weather = ""Hot"";
    }
    else
    {
        weather = ""unknown"";
    }

    cout << weather << endl;

    return 0;
}
  
Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    double degrees;
    cin >> degrees;

    string weather = 
        degrees >= 5 && degrees < 12 ? ""Cold"" :
        degrees >= 12 && degrees < 15 ? ""Cool"" :
        degrees >= 15 && degrees <= 20 ? ""Mild"" :
        degrees > 20 && degrees < 26 ? ""Warm"" :
        degrees >= 26 && degrees <= 35 ? ""Hot"" : ""unknown"";

    cout << weather << endl;

    return 0;
}
"
Sc9nY5MS,09. Weather Forecast,Spocoman,C++,Friday 1st of September 2023 12:09:15 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    
    string weather;
    cin >> weather;

    if (weather == ""sunny"")
    {
        cout << ""It's warm outside!"" << endl;
    }
    else
    {
        cout << ""It's cold outside!"" << endl;
    }
  
    return 0;
}

Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main()
{

    string weather;
    cin >> weather;

    cout << ""It's "" << (weather == ""sunny"" ? ""warm"" : ""cold"") << "" outside!"" << endl;

    return 0;
}"
xtLah8Aw,08. Circle Area and Perimeter,Spocoman,C++,Friday 1st of September 2023 12:06:57 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    double radius;
    cin >> radius;

    double area = 3.14159265359 * radius * radius;
    double perimeter = 2 * 3.14159265359 * radius;
    
    cout.setf(ios::fixed);
    cout.precision(2);

    cout << area << endl;
    cout << perimeter << endl;
  
    return 0;
}"
Tihu5AMi,07. House Painting,Spocoman,C++,Friday 1st of September 2023 12:05:37 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    double x, y, h;
    cin >> x >> y >> h;

    double green = x * y * 2 - (1.5 * 1.5 * 2) + x * x * 2 - 1.2 * 2;
    double red = 2 * x * y + 2 * x * h / 2;
    
    cout.setf(ios::fixed);
    cout.precision(2);

    cout << green / 3.4 << endl;
    cout << red / 4.3 << endl;
  
    return 0;
}"
6dFeE8qJ,06. Fishland,Spocoman,C++,Friday 1st of September 2023 12:04:41 PM CDT,"#include <iostream>

using namespace std;

int main()
{
    double mackerelPrice, spratPrice, bonitoFishKg, saffronKg, shellKg;
    cin >> mackerelPrice >> spratPrice >> bonitoFishKg >> saffronKg >> shellKg;

    double bonitoFishSum = bonitoFishKg * mackerelPrice * 1.60;
    double saffronSum = saffronKg * spratPrice * 1.80;
    double shellSum = shellKg * 7.50;
    double totalPrice = bonitoFishSum + saffronSum + shellSum;
    
    cout.setf(ios::fixed);
    cout.precision(2);

    cout << totalPrice << endl;
  
    return 0;
}"
fTBaqQhK,05. Training Lab,Spocoman,C++,Friday 1st of September 2023 12:03:49 PM CDT,"#include <iostream>
#include <cmath>
using namespace std;

int main()
{

    double w, h;
    cin >> w >> h;

    double num = (h - 1) * 100 / 70;
    double row = (w * 100 / 120);
    double numberOfSeats = floor(num) * floor(row) - 3;

    
    cout << numberOfSeats << endl;
  
    return 0;
}"
R5ujFiiv,04. Vegetable Market,Spocoman,C++,Friday 1st of September 2023 12:02:47 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    double vegetablePrice, fruitPrice, vegetableQuantity, fruitQuantity;
    cin >> vegetablePrice >> fruitPrice >> vegetableQuantity >> fruitQuantity;
    double totalPrice = (vegetablePrice * vegetableQuantity + fruitPrice * fruitQuantity) / 1.94;

    cout.setf(ios::fixed);
    cout.precision(2);
    
    cout << totalPrice << endl;
  
    return 0;
}"
pXtceex0,CodinGame_2023_09_01__19_01_30__concat.cpp,MonsterScripter,C++,Friday 1st of September 2023 12:01:48 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>

using namespace std;

/**
    01 Test 1
    Entrée
    Sortie attendue
    APP
    TITLE
    APPLE

    02 Test 2
    Entrée
    Sortie attendue
    DUR
    CORTLEX
    DURTLEX

    03 Test 3
    Entrée
    Sortie attendue
    TEST
    CASE
    TEST

    04 Test 4
    Entrée
    Sortie attendue
    GOO
    FOOD
    GOOD
 */

int main(void)
{
    string first;
    getline(cin, first);
    string second;
    getline(cin, second);
    cout << first + second.substr(first.length(), second.length()-1) << endl;
    return EXIT_SUCCESS;
}
"
hEGkknMw,CodinGame_2023_09_01__19_00_57__wizard.cpp,MonsterScripter,C++,Friday 1st of September 2023 12:01:09 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
    Objectif
    Vous êtes un garde royal dans un château. Il y a eu récemment un problème avec des sorciers qui s'introduisent et causent des méfaits magiques. Votre travail est de filtrer ces sorciers tout en laissant passer toutes les autres personnes censées être dans le château. Le nom complet d'un sorcier contient toutes les lettres du mot ""sorcerer"", donc vous obtiendrez leur nom, puis déterminerez s'ils sont un sorcier ou non.

    Entrée
    Un entier N pour le nombre de personnes essayant d'entrer dans le château.
    Les N lignes suivantes sont les noms des personnes essayant d'entrer dans le château.

    Sortie
    Pour chaque personne essayant d'entrer dans le château, imprimez soit ""Est un sorcier"" si vous attrapez un sorcier ou ""N'est pas un sorcier"" s'ils ne sont pas un sorcier.

    Contraintes
    2 < N < 11

    Règles pour les noms :
    - Chaque nom aura de 8 à 30 caractères de long
    - Chaque nom aura 1 espace et 2 lettres majuscules

    Exemple
    Entrée
    6
    Sofia Amberson
    Turtle Tortise
    Mike Pothole
    Wayne Drimaz
    Wave Trainor
    Meghan Title

    Sortie
    N'est pas un sorcier
    N'est pas un sorcier
    N'est pas un sorcier
    Est un sorcier
    N'est pas un sorcier
    N'est pas un sorcier
*/
int main()
{
    int n;
    cin >> n; cin.ignore();
    for (int i = 0; i < n; i++) {
        string names;
        getline(cin, names);
        char s[] = {'S', 'O', 'R', 'C', 'E', 'R'};
        bool b=false;
        for (char c : s) {
            b=false;
            for (char n: names) {
                if (tolower(n) == tolower(c)) {
                    b = true;
                    break;
                }
            }
            if (!b) {
                break;
            }
        }
        if (b) {
            cout << ""Est un sorcier"" << endl;
        } else {
            cout << ""N'est pas un sorcier"" << endl;
        }
    }
    return 0;
}
"
BQqvEJzf,03. Celsius to Fahrenheit,Spocoman,C++,Friday 1st of September 2023 12:01:08 PM CDT,"#include <iostream>

using namespace std;

int main()
{

    double celsius;
    cin >> celsius;

    double fahrenheit = celsius * 1.800 + 32;

    cout.setf(ios::fixed);
    cout.precision(2);
    
    cout << fahrenheit << endl;
  
    return 0;
}"
FeTfjZQe,Murder Mystery 2 - FULLY AUTOMATE 2,anphu04,Lua,Friday 1st of September 2023 11:49:46 AM CDT,"-- 28/2/2023: last exploit(s) before going home tomorrow
COIN_TYPE = {'BeachBall'}

myplr = game.Players.LocalPlayer
cam = workspace.CurrentCamera
uis = game:GetService('UserInputService')
pathfinder = game:GetService('PathfindingService')
tweener = game:GetService('TweenService')
vim = game:GetService('VirtualInputManager')
run = game:GetService('RunService')

for i,v in pairs(workspace:GetDescendants()) do
	if v.Name == 'CoinContainer' then
		container = v
		break
	end
end
spawn(function()
	while wait(2) do
		if stop then break end

		-- prevent 20 minutes idle disconnection
		if not hasgun then
			vim:SendMouseButtonEvent(0,0,0, true, game,1)
			vim:SendMouseButtonEvent(0,0,0, false, game,1)
		end

		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == 'CoinContainer' then
				container = v
				break
			end
		end
	end
end)

--/////////////////////////////////////////

event = nil
stop = false
event = uis.InputBegan:Connect(function(input,gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.X then
		stop = true
	end
end)
--/////////////////////////////////////////////////////////

function createPath(from,to)
	local agentParams = {
		AgentHeight = 2.5,
		AgentRadius = 2,
		AgentCanJump = true
	}
	local path = pathfinder:CreatePath(agentParams)
	path:ComputeAsync(from,to)
	if path.Status == Enum.PathStatus.Success then
		local waypoints = path:GetWaypoints()
		return path,waypoints
	end
end

function waypointLength(waypoints)
    local sum = 0
    local lastpoint
    for i,waypoint in pairs(waypoints) do
        if lastpoint then
            sum = sum + (waypoint.Position - lastpoint.Position).Magnitude
        end
        lastpoint = waypoint
    end
    return sum
end

--////////////////////////////////////////////

clip = true
function Nocl()
	if game.Players.LocalPlayer.Character ~= nil then
		for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
			if v:IsA(""BasePart"") and (v.CanCollide or v.Name == 'HumanoidRootPart' or v.Name == 'UpperTorso' or v.Name == 'LowerTorso') then
				v.CanCollide = clip == true and true or false
			end
		end
	end
	wait(0.21) -- basic optimization
end
Noclip = game:GetService('RunService').Stepped:Connect(Nocl)

--////////////////////////////////////////////////////////

killer = nil
spawn(function()
	while not stop do
		wait()
		for i,plr in pairs(game.Players:GetChildren()) do
			if plr ~= myplr and plr.Character and plr.Character:FindFirstChild('Knife') then
				killer = plr.Character
			end
		end
	end
end)

function killernear()
    if killer and killer.Parent and killer:FindFirstChild('HumanoidRootPart') then
        local dangerdist = (root.Position - killer.HumanoidRootPart.Position).Magnitude
        return dangerdist <= 30
    end
    return false
end

function killerinsight()
    if killer and killer.Parent and killer:FindFirstChild('HumanoidRootPart') then
        local params = RaycastParams.new()
        params.FilterType = Enum.RaycastFilterType.Exclude
	    params.FilterDescendantsInstances = {myplr.Character}
        local result = workspace:Raycast(root.Position, (killer.HumanoidRootPart.Position - root.Position).Unit*150, params)
	    return (result and result.Instance and result.Instance:IsDescendantOf(killer)) and true or false
    end
    return false
end

--////////////////////////////////////////////////////////

function isInLobby()
	if root and root.Parent then
		local touches = workspace:GetPartBoundsInBox(
			root.CFrame,
			Vector3.new(2,20,2)
		)
		for i,v in pairs(touches) do
			if v:IsDescendantOf(workspace.Lobby) then
				return true
			end
		end
		return false
	else -- root not found meaning that we just died and havent yet respawned into the lobby
		return true
	end
end

function fly(checkkiller)  
    clip = false

    local rootpos = root.Position
    local movepos = coin.Position + Vector3.new(0,2,0)

    local bg = Instance.new('BodyGyro')
    bg.P = 10000
    bg.MaxTorque = Vector3.new(999999,999999,999999)
    bg.CFrame = CFrame.new(rootpos, movepos)
    bg.Parent = root
    local bv = Instance.new('BodyVelocity')
    bv.MaxForce = Vector3.new(999999,999999,999999)

    lastpos = nil
    repeat
        tries = tries + 1
        if tries >= 4 then
            tries = 0
            if lastpos and (rootpos - lastpos).Magnitude < 2 then
                if lastcoin and lastcoin == coin then
                    coin.Parent = nil -- cursed coin, cannot be collected
                    lastcoin = nil
                    break
                end
            end
            lastpos = root.Position
        end
        
        bv.Velocity = (movepos - rootpos).Unit*26
        bv.Parent = root
        
        wait(.2)
        local henear = checkkiller and (killernear() or killerinsight())
    until (root.Position - rootpos).Magnitude >= (movepos - rootpos).Magnitude or hum.Health == 0 or stop or henear
    bv:Destroy()
    bg:Destroy()

    clip = true

    lastcoin = coin
end

--////////////////////////////////////////////////////

lastpos = nil
lastcoin = nil
tries = 0
coin = nil
cointable = {}
count = 0

while not stop do
	local succ, msg = pcall(function()

		if myplr.Character and container and container.Parent then
			root = myplr.Character:FindFirstChild('HumanoidRootPart')
			hum = myplr.Character:FindFirstChild('Humanoid')

			if root and hum and not isInLobby() then
                cointable = {}
                count = 0
                coin = nil

                for i,v in pairs(container:GetChildren()) do
                    if v:FindFirstChild('Coin') then
                        count = count + 1
                        if table.find(COIN_TYPE, v.CoinType.Value) then
                            local ele = {}
                            ele.obj = v
                            --[[local path, waypoints = createPath(root.Position, v.Position)
                            ele.path = path
                            ele.waypoints = waypoints
                            if path and waypoints then
                                ele.dist1 = waypointLength(waypoints)
                            else
                                ele.dist1 = (v.Position - root.Position).Magnitude -- lower priority, therefore degree 2
                            end]]
                            ele.dist1 = (v.Position - root.Position).Magnitude
                            ele.dist2 = (killer and killer.Parent) and (v.Position - killer.HumanoidRootPart.Position).Magnitude or 300
                            
                            table.insert(cointable, ele)
                        end
                    end
                end

                if not killernear() and not killerinsight() then
                    local mindist = 666
                    local path,waypoints
                    for i,v in pairs(cointable) do
                        if v.dist1 <= mindist and v.dist1 >= 4 and v.dist2 >= 40 then
                            coin = v.obj
                            mindist = v.dist1
                            path = v.path
                            waypoints = v.waypoints
                        end
                    end

                    if coin then
                        local path, waypoints = createPath(root.Position, coin.Position)
                        if path and waypoints and killer and killer.Parent then -- if the killer hasnt revealed self yet, its unsafe to run around
                            print'path waypoint'

                            clip = false
                            lastpos = nil
                            
                            for i,waypoint in pairs(waypoints) do
                                if hum.Health == 0 or root.Parent == nil or stop or killernear() or killerinsight() then break end
                                if i == 1 then continue end

                                local rootpos = root.Position
                                local movepos = waypoint.Position + Vector3.new(0,3,0)
                                local movedir = (movepos - rootpos).Unit 

                                tries = tries + 1
                                if tries >= 4 then
                                    tries = 0
                                    if lastpos and (rootpos - lastpos).Magnitude < 1 then
                                        if lastcoin and lastcoin == coin then
                                            coin.Parent = nil -- cursed coin, cannot be collected
                                            lastcoin = nil
                                            break
                                        end
                                    end
                                    lastpos = root.Position
                                end
                                

                                local bg = Instance.new('BodyGyro')
                                bg.P = 10000
                                bg.MaxTorque = Vector3.new(999999,999999,999999)
                                local bp = Instance.new('BodyPosition')
                                bp.P = 40000
                                bp.MaxForce = Vector3.new(999999,999999,999999)

                                bp.Position = movepos
                                bp.Parent = root
                                bg.CFrame = CFrame.new(rootpos, movepos)
                                bg.Parent = root
                                wait(.15)
                                bp:Destroy()
                                bg:Destroy()
                                
                            end

                            clip = true
                            lastcoin = coin

                        else
                            print'no path'
                            fly(true)
                        end
                    end
                    
                else

                    local maxdist = 0
                    for i,v in pairs(cointable) do
                        if v.dist2 >= maxdist then
                            coin = v.obj
                            maxdist = v.dist2
                        end
                    end

                    print'killer near'
                    if count > 0 then -- so we dont teleport down the map when the bag is full
                        clip = false

                        local bp = Instance.new('BodyPosition')
                        bp.P = 10000
                        bp.MaxForce = Vector3.new(999999,999999,999999)
                        bp.Position = root.Position + Vector3.new(0,-30,0)  
                        bp.Parent = root
                        wait(1)
                        bp:Destroy()

                        clip = true

                        if coin then
                            fly()
                        end
                    end
                end

                if coin == nil and count == 0 then -- either we are in the lobby or that bag is full
                    -- make sure that the below only trigger when bag is full
                    if myplr.Backpack:FindFirstChild('Knife') then
                        -- reset if we're the murderer
                        hum:ChangeState(Enum.HumanoidStateType.Dead)
                    else
                        hasgun = false
                        if myplr.Backpack:FindFirstChild('Gun') then
                            hasgun = true
                        else
                            if workspace:FindFirstChild('GunDrop') then
                                wait(2)
                                if workspace:FindFirstChild('GunDrop') then
                                    -- make sure the gun hasnt been stolen by somebody else
                                    repeat
                                        root.CFrame = workspace.GunDrop.CFrame * CFrame.new(0,5,0)
                                        wait()
                                    until myplr.Character:FindFirstChild('Gun') or hum.Health == 0 or workspace:FindFirstChild('GunDrop') == nil
                                    hasgun = true
                                end
                            end
                        end

                        if hasgun and hum.Health > 0 and killer and killer.Parent then
                            -- aim at killer and wait till killer appear in sight
                            myplr.CameraMode = 'LockFirstPerson'
                            --[[repeat
                                wait()
                            until killerinsight() or hum.Health == 0 or stop]]

                            -- spam 1 until equip the gun
                            repeat
                                vim:SendKeyEvent(true, Enum.KeyCode.One, false, game)
                                vim:SendKeyEvent(false, Enum.KeyCode.One, false, game)
                                wait()
                            until myplr.Character:FindFirstChild('Gun') or stop or hum.Health == 0

                            wait()
                            myplr.Character.HumanoidRootPart.CFrame = killer.HumanoidRootPart.CFrame * CFrame.new(0,0,6)
                            -- spam shoot until the game ends or we die
                            while hum.Health > 0 and killer and killer.Parent and not stop do
                                cam.CFrame = CFrame.new(cam.CFrame.p, killer.UpperTorso.Position)
                                local vp = cam.ViewportSize
                                vim:SendMouseButtonEvent(vp.X/2,vp.Y/2 , 0, true, game,1)
                                vim:SendMouseButtonEvent(vp.X/2,vp.Y/2 , 0, false, game,1)
                                run.Heartbeat:Wait()
                                vim:SendKeyEvent(true, Enum.KeyCode.One, false, game)
                                vim:SendKeyEvent(false, Enum.KeyCode.One, false, game)
                            end
                            myplr.CameraMode = 'Classic'
                        end
                    end
                end
			end
		end

	end)
	if not succ then warn(msg) end

	wait()
end
event:Disconnect()
Noclip:Disconnect()
"
6TVHczBB,YR Redux 01082023,iravage,INI file,Friday 1st of September 2023 11:48:57 AM CDT,"[General]
RepairPercent=25% ;15%
V3RocketDamage=300 ;200

CMislPauseFrames=0 ;20
CMislTiltFrames=0 ;100
CMislDamage=80 ;200      
CMislEliteDamage=150 ;250
CMislAcceleration=0.6 ;2.0 ;1.0

DominatorFireAtPercentage=60 ;40 ;20

CloakingStages=3 ;9
CloakDelay=0.3 ;0.1 ;0.2  

PrismSupportMax=3

SpyMoneyStealPercent=0.25

[CombatDamage]
IvanDamage=2000 ;450
IvanTimedDelay=880 ;450

BunkerDamageMultiplier=1.0 ;1.3
BunkerROFMultiplier=1.0 ;1.3

FallingDamageMultiplier=0.30 ;1.0

OverloadCount=3,4,5,6 ;3,6,10,50
OverloadDamage=0,30,40,50 ;0,50,100,500
OverloadFrames=55,55,55,55 ;30,60,60,60

OpenToppedDamageMultiplier=1.0 ;1.2
OpenToppedWarpDistance=8 ;7

[Warheads]
110=SCMGWH ;Siege Chopper Machine Gun

[RadSite]
Verses=20%,18%,15%, 18%,10%,10%, 0%,0%,0%, 0%,10%
            ;100%,100%,100% ,50%,10%,10%, 0%,0%,0% ,100%,100%

; Structures ----------------------------------------------------------------

[GACNST]
BombSight=512
Sight=10 ;8

[GAPOWR]
Cost=600 ;800
Soylent=300 ;400
BombSight=512
EligibileForAllyBuilding=yes

[GAPILE]
BombSight=512
EligibileForAllyBuilding=yes

[GAREFN]
Cost=1750 ;2000
Soylent=275
BombSight=512
EligibileForAllyBuilding=yes

[GAWEAP]
BombSight=512
EligibileForAllyBuilding=yes

[GAROBO]
BombSight=512
EligibileForAllyBuilding=yes

[GADEPT]
BombSight=512
EligibileForAllyBuilding=yes

[GAYARD]
BombSight=512

[GAAIRC]
BombSight=512
Sight=10 ;5
EligibileForAllyBuilding=yes

[AMRADR]
BombSight=512
Sight=10 ;5
EligibileForAllyBuilding=yes

[ATESLA]
Strength=500 ;600
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[GATECH]
BombSight=512
EligibileForAllyBuilding=yes

[GAOREP]
BombSight=512
EligibileForAllyBuilding=yes

[GAGAP]
BaseNormal=no ;yes
BombSight=512

[GAPILL]
BombSight=512
HasRadialIndicator=true

[NASAM]
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[GTGCAN]
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[GrandCannonWeapon]
MinimumRange=4 ;3
ROF=150 ;120

[GrandCannonWH]
Verses=200%,200%,80%, 100%,50%,50%, 100%,50%,100%, 100%,0%
            ;100%,100%,100%, 100%,100%,100%, 50%,100%,50%, 100%,100%

[GACSPH]
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[GAWEAT]
Cost=3000 ;5000
Soylent=1500 ;2500??
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[GASPYSAT]
BombSight=512
EligibileForAllyBuilding=yes

[NACNST] ; SOVIET STRUCTURES
BombSight=512
Sight=10 ;8

[NAPOWR]
BombSight=512
EligibileForAllyBuilding=yes

[NAHAND]
BombSight=512
EligibileForAllyBuilding=yes

[FlakWeapon]
ROF=40 ;20

[NALASR]
BombSight=512
HasRadialIndicator=true

[NAFLAK]
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[TESLA]
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[OPCoilBolt]
Range=10
ROF=150

[NABNKR]
BombSight=512
PipsDrawForAll=no ;ov not set

[NAREFN]
BombSight=512
EligibileForAllyBuilding=yes

[NAWEAP]
BombSight=512
EligibileForAllyBuilding=yes

[NAYARD]
BombSight=512

[NARADR]
BombSight=512
EligibileForAllyBuilding=yes

[NADEPT]
BombSight=512
EligibileForAllyBuilding=yes

[NATECH]
BombSight=512
EligibileForAllyBuilding=yes

[NAINDP]
BombSight=512
EligibileForAllyBuilding=yes

[NANRCT]
Power=1000 ;2000
BombSight=512
EligibileForAllyBuilding=yes

[NAMISL]
Cost=3000 ;5000
Soylent=1500 ;2500??
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[NAIRON]
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[YACNST] ; YURI STRUCTURES
BombSight=512
Sight=10 ;8

[YAPOWR]
Cost=1000 ;600
Soylent=500 ;300???
BombSight=512
EligibileForAllyBuilding=yes

[YABRCK]
BombSight=512
EligibileForAllyBuilding=yes

[YAREFN]
Strength=1200 ;1000 ;2000
BombSight=512
BuildTimeMultiplier=1.0 ;1.15

[SMIN]
Strength=1200 ;1000 ;2000
SlavesNumber=4 ;5
Speed=4 ;3
BombSight=512
Soylent=875 ;1750
BuildTimeMultiplier=1.0 ;0.8
ThreatAvoidanceCoefficient=0 ;0.65

[SLAV]
HarvestRate=195
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[YAWEAP]
BombSight=512
EligibileForAllyBuilding=yes

[YAGRND]
Cost=1200 ;600
Soylent=600 ;300???
BombSight=512
EligibileForAllyBuilding=yes

[NAPSIS]
BombSight=512
EligibileForAllyBuilding=yes

[YAYARD]
BombSight=512

[YADEPT]
BombSight=512
EligibileForAllyBuilding=yes

[YATECH]
BombSight=512
EligibileForAllyBuilding=yes

[NACLON]
BombSight=512
EligibileForAllyBuilding=yes

[NATBNK]
Cost=500 ;400
Strength=700 ;1000
BombSight=512

[YAGGUN]
Powered=no ;yes
Power=0 ;-50
Strength=400 ;810
BombSight=512
Drainable=no ;yes
HasRadialIndicator=true

[YAPSYT]
BombSight=512
PipsDrawForAll=no ;yes
Drainable=no ;yes
HasRadialIndicator=true
EligibileForAllyBuilding=yes

[MultipleMindControlTower]
ROF=150 ;100

[YAGNTC]
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[YAPPET]
Cost=3000 ;5000
Soylent=1500 ;2500??
BombSight=512
Drainable=yes ;no
EligibileForAllyBuilding=yes

[CAOUTP] ; NEUTRAL TECH STRUCTURES
BombSight=512
EligibileForAllyBuilding=yes
[CAAIRP]
BombSight=512
EligibileForAllyBuilding=yes
[CAOILD]
BombSight=512
EligibileForAllyBuilding=yes
[CAPOWR]
BombSight=512
EligibileForAllyBuilding=yes
[CAMACH]
BombSight=512
EligibileForAllyBuilding=yes
[CATHOSP]
BombSight=512
EligibileForAllyBuilding=yes
[CAHOSP]
BombSight=512
EligibileForAllyBuilding=yes
[CASLAB]
BombSight=512
EligibileForAllyBuilding=yes

;Infantry ----------------------------------------------------------------

[E2]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[FLAKT]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[FlakGuyGun]
Range=6 ;5

[FlakGuyGunE]
Range=6 ;5

[FlakGuyAAGunE]
Damage=20 ;8

[SHK]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[ElectricBolt]
ROF=100 ;90 ;60
Range=5 ;3

[ElectricBoltE]
ROF=70 ;40
Range=5 ;5

[IVAN]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[TERROR]
BuildTimeMultiplier=1.50
Strength=125 ;75
Secondary=TerrorSuicide
Deployer=yes
DeployFire=yes
UndeployDelay=15
CanPassiveAquire=yes ;no
DefaultToGuardArea=yes
Crushable=no ;yes
CanDisguise=yes
PermaDisguise=yes
OccupyPip=PersonRed
BombSight=512

[TerrorSuicide]
Damage=225
Warhead=TerrorBombWH
Range=1.5
ROF=10
Anim=RING1
Projectile=Invisible
FireInTransport=no
FireOnce=yes
AreaFire=yes
Suicide=yes

[TerrorBombWH]
Verses=150%,100%,100%, 130%,100%,90%, 60%,150%,30%, 100%,0%
            ;150%,100%,100%,90%,50%,50%,100%,150%,30%,100%,100%

[DESO]
SelfHealing=no ;yes 
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[BORIS]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[E1] ; Allied GI
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[Para]
Damage=20 ;25

[GGI]
Speed=4 ;3
Armor=plate ;none
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[MissileLauncher]
ROF=50 ;40

[MissileLauncherE]
ROF=40 ;20

[GUARDWH]
Verses=20%,20%,20%, 150%,50%,100%, 20%,10%,10%, 150%,100% 
            ;20%,20%,20%, 100%,50%,100%, 10%,10%,10%, 100%,100%

[JUMPJET]
Cost=800 ;600
Soylent=400 ;300
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512

[GHOST]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[MP5]
ROF=40 ;10

[MP5E]
ROF=25 ;10

[ChronoMP5]
ROF=40 ;10

[ChronoMP5E]
ROF=25 ;10

[HollowPoint]
Verses=200%,100%,50%, 1%,1%,1%, 1%,1%,1%, 50%,0%
            ;200%,100%,100%, 1%,1%,1%, 1%,1%,1%, 1%,100%

[DOG]
Strength=60 ;100
Trainable=yes ;no
VeteranAbilities=SELF_HEAL,FASTER,STRONGER
EliteAbilities=SCATTER,ROF
BombSight=512

[ADOG]
Strength=60 ;100
Trainable=yes ;no
VeteranAbilities=SELF_HEAL,FASTER,STRONGER
EliteAbilities=SCATTER,ROF
BombSight=512

[YADOG]
Strength=60 ;100
Trainable=yes ;no
VeteranAbilities=SELF_HEAL,FASTER,STRONGER
EliteAbilities=SCATTER,ROF
BombSight=512

[YDOG]
Strength=60 ;100
Trainable=yes ;no
VeteranAbilities=SELF_HEAL,FASTER,STRONGER
EliteAbilities=SCATTER,ROF
BombSight=512

[TANY]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512

[CLEG]
Cost=1400 ;1500
Soylent=700 ;750
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
BombSight=512
Armor=plate ;none

[NeutronRifle]
Damage=5 ;8
Range=8 ;5

[NeutronRifleE]
Range=8 ;5

[CRNeutronRifle]
Damage=5 ;10
Range=10 ;8 ;6
ROF=200


[CCOMAND]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
BombSight=512

[PTROOP]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER
BombSight=512

[SPY]
BombSight=512

[CIVAN]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
Trainable=yes ;no ; Chrono Ivan can now gain experience with kills and attain veterancy bonuses.
BombSight=512

[SNIPE]
VeteranAbilities=SELF_HEAL,FASTER,CLOAK
EliteAbilities=STRONGER,SCATTER
BombSight=512

[INIT]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER
BombSight=512

[PsychicJab]
Range=5 ;4.5

[UCPsychicJab]
Damage=20 ;63

[UCElitePsychicJab]
Damage=25 ;73

[SAFlame]
Verses=200%,80%,80%, 50%,25%,25%, 30%,30%,20%, 50%,0%
            ;100%,80%,80%, 50%,25%,25%, 75%,50%,25%, 100%,100%

[SSABFlame]
Verses=200%,80%,80%, 50%,25%,25%, 30%,30%,20%, 50%,0%
            ;100%,80%,80%, 50%,25%,25%, 75%,30%,20%, 100%,100%

[BRUTE]
Armor=none ;plate
Cost=400 ;500
Soylent=100 ;200 ;250
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512
SelfHealing=no ;yes

[YURI]
Cost=1000 ;800
Soylent=500 ;400
VeteranAbilities=SELF_HEAL,FASTER,SCATTER
EliteAbilities=STRONGER ;Doesnt get to Elite through mind control only verteran through spy.
Trainable=yes ;ov not set
BombSight=512

[VIRUS]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,SCATTER 
BombSight=512

[Virusgun]
Range=14 ;10
ROF=150 ;100

[VirusgunE]
Range=14 ;16
ROF=100 ;80

[YURIPR]
Speed=5 ;6
VeteranAbilities=SELF_HEAL,FASTER,SCATTER
EliteAbilities=STRONGER ;Doesnt get to Elite through mind control only verteran through spy.
Trainable=yes ;ov not set
BombSight=512

;Armored ----------------------------------------------------------------

[AMCV]
Cost=2000 ;3000
Soylent=1000 ;3000
BombSight=512

[CMIN]
BombSight=512
Soylent=700 ;1400
Storage=30 ;($600 per trip) ;20 ($500 per trip)
ThreatAvoidanceCoefficient=0 ;0.65

[MTNK]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
BombSight=512
Soylent=350 ;700

[FV]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
BombSight=512
Speed=8 ;10
ROT=4 ;5
Crusher=yes ;no
Soylent=300 ;600

[CRAWP]
ROF=150 ;100

[HollowPoint2]
Verses=200%,100%,100%, 0%,0%,0%, 1%,1%,1%, 100%,100%
            ;100%,100%,100%, 0%,0%,0%, 1%,1%,1%, 1%,100%

[HoverMissileE]
Burst=2

[CRMP5]
ROF=30 ;10

[CowShot]
Damage=50 ;300
Range=5 ;12;8

[ROBO]
Cost=700 ;600
Soylent=350 ;600
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
Trainable=yes
BombSight=512

[TNKD]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
BombSight=512
Cost=1000 ;900
Soylent=500 ;900

[SABOT]
Range=7 ;8 ;5

[SABOTE]
Range=7 ;8 ;6.75

[UltraAP]
Verses=20%,20%,10%, 100%,50%,100%, 10%,20%,10%, 100%,0%
            ;2%,2%,2%, 100%,40%,100%, 2%,2%,2%, 2%,100%

[UltraAPE]
Verses=20%,20%,10%, 100%,50%,100%, 10%,20%,10%, 100%,0%
            ;2%,2%,2%, 100%,50%,100%, 2%,2%,2%, 100%,100%

[SHAD] ; Allied BlackHawk Transport Chopper
VeteranAbilities=SELF_HEAL,FASTER,RADAR_INVISIBLE
EliteAbilities=STRONGER 

[MGTK]
ElitePrimary=MirageGunE
EliteSecondary=MirageGunE
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
BombSight=512
Soylent=500 ;1000

[MirageGun]
ROF=85 ;70

[MirageGunE]
Anim=VTMUZZLE

[MirageWH]
Verses=100%,100%,50%, 100%,100%,100%, 30%,20%,20% ,100%,0%
            ;100%,100%,80%, 100%,100%,100%, 30%,20%,20%, 100%,100%

[SREF]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
BombSight=512
Soylent=600 ;1200

[Comet]
ROF=150 ;100

[LargeCometP]
SubjectToElevation=yes ;no
ShrapnelCount=0 ;5
ShrapnelWeapon=Dummy

[SuperComet]
ROF=150 ;100

[SuperCometP]
SubjectToElevation=yes ;no
ShrapnelCount=0 ;5
ShrapnelWeapon=Dummy ;SuperCometFragment

[CometWH]
Wall=yes ;no
Wood=yes
Tiberium=yes

[BFRT]
OmniCrusher=no
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER
BombSight=512
Soylent=1000 ;2000

[LCRF]
BombSight=512
Soylent=450 ;900
Armor=heavy ;light
SpeedType=Amphibious ;Hover
Locomotor={4A582741-9839-11d1-B709-00A024DDAFD1} ;{4A582742-9839-11d1-B709-00A024DDAFD1}
MovementZone=AmphibiousCrusher ;Amphibious

[DEST]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER
BombSight=512 

[ASW]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER
BombSight=512

[DLPH]
Cost=600 ;500
Soylent=300 ;500
Speed=6 ;5 ;8
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512 

[SonicWarhead]
Verses=100%,100%,100%, 100%,60%,60%, 30%,30%,30%, 100%,0%
            ;100%,100%,100%, 100%,80%,80%, 100%,60%,60%, 100%,100%

[AEGIS]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512 

[Medusa]
Damage=80 ;100
ROF=40 ;30 ;15

[MedusaE]
Damage=80 ;100

[SAMWH]
CellSpread=0.75 ;0.3
PercentAtMax=0.5 ;1
Verses=170%,100%,100%, 100%,100%,100%, 0%,0%,0%, 100%,100%
            ;100%,100%,100%, 100%,100%,100%, 0%,0%,0%, 100%,100%

[CARRIER]
BombSight=512

[HORNET]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
Cost=150 ;50 ; Affects rate of promotion.

[ORCA] ; Allied Harrier Jet
VeteranAbilities=STRONGER,SELF_HEAL,FASTER
EliteAbilities=RADAR_INVISIBLE
BombSight=512

[BEAG] ; Allied Black Eagle Jet
VeteranAbilities=STRONGER,SELF_HEAL,FASTER
EliteAbilities=RADAR_INVISIBLE
BombSight=512

[SMCV]
Cost=2000 ;3000
Soylent=1000 ;3000
BombSight=512

[HARV]
BombSight=512
Soylent=700 ;1400
ThreatAvoidanceCoefficient=0 ;0.65

[HARVWH]
Verses=100%,80%,50%, 30%,20%,20%, 20%,15%,10%, 100%,0%
            ;100%,80%,70%,50%,20%,20%,20%,15%,10%,400%,100%

[DRON]
Cost=600 ;500
Soylent=1 ;500
Speed=8 ;10
BombSight=512

[HTK]
Cost=600 ;500
Soylent=300 ;500
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512
OpportunityFire=yes ;no

[FlakTrackGun]	
Range=6 ;5
Lobber=yes ;ov not set
Projectile=FlakTrackProj

[FlakTrackGunE]	
Range=6 ;5
Lobber=yes ;ov not set
Projectile=FlakTrackProj

[FlakTrackAAGun]
ROF=40 ;25

[FlakTrackAAGunE]
ROF=40 ;25

[FlakTrackProj]		; Anti-surface bullet for Flak Track and Sea Scorpion.
Image=120MM
Arcing=true
Inviso=no
AA=no
AG=yes
Shadow=no
Inaccurate=yes
FlakScatter=yes
SubjectToCliffs=no
SubjectToElevation=yes
SubjectToWalls=no ; yes

[FlakTWH]
Verses=150%,125%,50%,40%,10%,10%,40%,20%,10%,50%,100%
            ;150%,125%,100%,60%,10%,10%,30%,20%,10%,100%,100%
PercentAtMax=0.5 ;ov not set

[HTNK]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512
Soylent=450 ;900

[V3]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512
Soylent=400 ;800

[TTNK]
Speed=6 ;7
OpportunityFire=yes ;no
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
BombSight=512
Soylent=600 ;1200

[TankBolt]
Damage=60 ;80 ;60 ;50 ;135
Range=8 ;4
ROF=150 ;75
Projectile=Electricbounce

[TankBoltE]
Damage=100 ;70 ;150
Range=8 ;6
ROF=120 ;60 

[DTRUCK]
Cost=1200 ;1500
Soylent=600 ;1500
Strength=200 ;150
Deployer=yes ;ov not set
DeployFire=yes ;ov not set
DeployFireWeapon=0 ;ov not set
Trainable=yes ;no
VeteranAbilities=STRONGER,FASTER ;Bonuses applied by spy.
EliteAbilities=STRONGER ;Doesn't actually reach this as it is destroyed on attack.
BombSight=512

[Demobomb]
RadLevel=1000 ;100
Projectile=DemobombProjectile ;InvisibleLow

[DemobombProjectile]
Inviso=yes
Image=none
SubjectToCliffs=yes
SubjectToElevation=no ;yes
SubjectToWalls=yes
AA=no
AG=yes
AN=yes
AS=yes
Wall=yes
Wood=ye

[DemobombWH]
Verses=100%,100%,100%, 100%,100%,65%, 75%,150%,50%, 100%,0%
            ;100%,100%,100%, 100%,50%,50%, 80%,150%,10%, 100%,100%
CellSpread=6 ;8
PercentAtMax=0.25 ;0.10
Rocker=yes ;ov not set
Wood=yes ;ov not set
Wall=yes ;ov not set

[APOC]
SelfHealing=no ;yes
OpportunityFire=yes ;no
ImmuneToRadiation=yes
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER 
BombSight=512
AirRangeBonus=4
Soylent=875 ;1750

[ZEP]
Cost=1750 ;2000
Soylent=875 ;ov not set
SelfHealing=no ;yes
CanPassiveAquire=yes ;no
OpportunityFire=yes ;ov not set
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512
Speed=7 ;5
Strength=1800 ;2000

[SCHP] ; Soviet Siege Chopper
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512
Primary=SiegeChopperMG ;BlackHawkCannon
ElitePrimary=SiegeChopperMGE ;BlackHawkCannonE
Cost=1200 ;1100
Soylent=600 ;1100

[SCHD]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512
Primary=SiegeChopperMG ;BlackHawkCannon
ElitePrimary=SiegeChopperMGE ;BlackHawkCannonE
Cost=1200 ;1100
Soylent=600 ;1100

[SiegeChopperMG] ;BlackHawkCannon
Damage=35
ROF=40
Range=6
Projectile=QuadShell
Speed=100
Warhead=SCMGWH ;SA
Report=BlackOpsAttack
Anim=MGUN-N,MGUN-NE,MGUN-E,MGUN-SE,MGUN-S,MGUN-SW,MGUN-W,MGUN-NW
OmniFire=yes

[SiegeChopperMGE] ;BlackHawkCannonE
Damage=40
ROF=40
Range=6
Projectile=QuadShell
Speed=100
Warhead=SCMGWH ;SSA
Report=BlackOpsAttack
Anim=MGUN-N,MGUN-NE,MGUN-E,MGUN-SE,MGUN-S,MGUN-SW,MGUN-W,MGUN-NW
OmniFire=yes

[SCMGWH]
Verses=150%,80%,60%, 60%,35%,35%, 50%,30%,25%, 100%,100%
            ;100%,80%,80%, 50%,25%,25%, 75%,50%,25%, 100%,100%
InfDeath=1
AnimList=PIFFPIFF,PIFFPIFF
Bullets=yes
ProneDamage=70%

[160mm]
ROF=150 ;100

[SAPC]
BombSight=512
Soylent=450 ;900
SpeedType=Amphibious ;Hover
Locomotor={4A582741-9839-11d1-B709-00A024DDAFD1} ;{4A582742-9839-11d1-B709-00A024DDAFD1}
MovementZone=AmphibiousCrusher ;Amphibious

[HYD]
Cost=800 ;600
Soylent=400 ;600
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512
Primary=FlakTrackGun
Secondary=FlakTrackAAGun ;FlakWeapon
ElitePrimary=FlakTrackGunE
EliteSecondary=FlakTrackAAGunE ;FlakWeaponE
Speed=7 ;8

[SUB]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[SubTorpedo]
ROF=80 ;120

[SubTorpedoE]
ROF=80 ;120

[SQD]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER
BombSight=512

[DRED]
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[PCV]
Cost=2000 ;3000
Soylent=1000 ;3000
BombSight=512

[LTNK]
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512
Soylent=350 ;700

[YTNK]
Cost=700 ;600
Soylent=350 ;600
BuildTimeMultiplier=1.15 ;Builds at $805 cost rate. ;1.33
Strength=300 ;210
PipScale=Passengers
Passengers=1
SizeLimit=2
SpeedType=Wheel ;ov not  set
Crusher=yes ;no
Stage1=110 ;200
Stage2=220 ;400
Stage3=330 ;600
EliteStage1=110 ;100
EliteStage2=220 ;200
EliteStage3=330 ;300
RateDown=2 ;50 at 55fps average the rate drops 110 per 1 second.
VHPScan=Normal
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512
[AGGattling]
ROF=40 ;16
Range=8 ;6
[AGGattling2]
ROF=24 ;16
Range=8 ;6
[AGGattling3]
ROF=8 ;16
Range=8 ;6
[AAGattling]
Range=10 ;8
ROF=40 ;16
[AAGattling2]
Range=10 ;8
ROF=24 ;8
[AAGattling3]
Range=10 ;8
ROF=8 ;4

[GattWH]
Verses=100%,100%,50%, 25%,25%,10%, 7%,5%,3%, 100%,200%
            ;100%,80%,70%, 50%,30%,10% ,10%,5%,3%, 200%,50%

[CAOS]
BombSight=512
Soylent=500 ;1000

[PsychGasCreate]
Verses=30%,30%,30%, 25%,25%,25%, 0%,0%,0%, 0%,0%
            ;100%,100%,100%, 50%,50%,50%, 0%,0%,0%, 100%,100%

[TELE]
Cost=1200 ;1000
Soylent=600 ;1000
VeteranAbilities=SELF_HEAL
EliteAbilities=STRONGER,FASTER 
BombSight=512

[MagneticBeam]
ROF=40 ;20
Projectile=InvisibleMedium ;InvisibleHigh

[MagneticBeamE]
Projectile=InvisibleMedium ;InvisibleHigh

[MagneShake]
Damage=60 ;80
Projectile=InvisibleMedium ;InvisibleHigh

[MagneShakeE]
Projectile=InvisibleMedium ;InvisibleHigh

[MIND]
SelfHealing=no ;yes
Speed=5 ;4
DetectDisguise=yes
DetectDisguiseRange=7
BombSight=512
Soylent=875 ;1750

[MultipleMindControlTank]
ROF=130 ;10
Range=7 ;6

[DISK]
SelfHealing=no ;yes
Speed=14 ;15
JumpjetSpeed=14 ;16
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER,RADAR_INVISIBLE
BombSight=512

[DiskLaser]
Damage=80 ;90
ROF=100 ;80
Speed=100 ;40
IsHouseColor=true ;ov not set

[DiskLaserE]
Damage=150 ;90
ROF=100 ;80
Speed=100 ;40
IsHouseColor=true ;ov not set

[DiskWH]
Verses=200%,200%,60%, 40%,30%,30%, 100%,100%,65%, 100%,100%
            ;100%,100%,100%, 50%,50%,50%, 100%,100%,100%, 100%,100%

[YHVR]
BombSight=512
Soylent=450 ;900
SpeedType=Amphibious ;Hover
Locomotor={4A582741-9839-11d1-B709-00A024DDAFD1} ;{4A582742-9839-11d1-B709-00A024DDAFD1}
MovementZone=AmphibiousCrusher ;Amphibious

[BSUB]
SpawnsNumber=1 ;2
SpawnRegenRate=165 ;80
VeteranAbilities=SELF_HEAL,FASTER
EliteAbilities=STRONGER 
BombSight=512

[BoomerTorpedo]
Range=8 ;7

[BoomerTorpedoE]
Burst=2 ;4
Range=8 ;7

[CruiseLauncher]
Burst=1 ;2
Range=16 ;20

[IronCurtainSpecial]
RechargeTime=6 ;5

[GeneticConverterSpecial]
RechargeTime=6 ;5

"
