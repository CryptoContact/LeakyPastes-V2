id,title,username,language,date,content
fZTbH240,Untitled,Tanski_corp,C++,Wednesday 29th of May 2024 12:58:56 PM CDT,"#include <iostream>
#include <windows.h>
#include<string>
using namespace std;

bool isvowel(char letter) {
    char vowels[6] = { 'a', 'e', 'i', 'o', 'u', 'y' };
    for (int i = 0; i < 12; i++) {
        if (tolower(letter) == vowels[i]) return true;
    }
    return false;
}

int main()
{

    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    string str;
    int count = 0;
    getline(cin, str);
    cout << ""-----------""<<endl;
    for (int i = 0, j = 0; i < str.size() + 1; i++) {
        if (str[i] == '\0' || !isalpha(str[i])) {
            if (isvowel(str[i - 1])) count++;
            if (i - j < 5) {
                for (; j < i; j++) {
                    cout << str[j];
                }
                cout << endl;
                j++;
            }
            else {
                j = i + 1;
            }
        }
    }
    cout << count;
}
"
jNGPtxya,Untitled,drepper,C++,Wednesday 29th of May 2024 12:18:08 PM CDT,"std::set known_debuggers {
    ""gdb""s,
    ""lldb""s,
  };


  bool is_debbuger_present()
  {
    std::ifstream is(""/proc/self/status"");
    std::string line;
    while (std::getline(is, line)) {
      static const auto prefix = ""TracerPid:\t""s;
      if (line.size() > prefix.size() && line.starts_with(prefix)) {
        auto tracer = std::stol(line.data() + prefix.size());
        if (tracer != 0) {
          is.close();
          is.open(std::format(""/proc/{}/comm"", tracer));
          if (std::getline(is, line))
            return known_debuggers.contains(::basename(line.c_str()));
        }
      }
    }

    return false;
  }"
pZbcmMxR,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 29th of May 2024 12:04:44 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_918336.pdf

Working as of:
29 May 2024"
Jp41K0Da,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Wednesday 29th of May 2024 11:32:26 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
29 May 2024"
HFQ7Dqmm,"class.Bsky.php with hashtags and optional one image upload, tested",mspotilas,PHP,Wednesday 29th of May 2024 10:36:38 AM CDT,"<?php
    // 2023 by Thomas Nesges 
    // (c) CC-BY

    class Bsky {
        private $username;
        private $password;
        private $xrpcbase;
        private $did;
        private $bearer;
        private $refreshToken;
        public $connected;
        public $handle;
        public $email;
        public $emailConfirmed;
        public $profile_url;
        
        function __construct($username, $password, $xrpcbase='https://bsky.social/xrpc') {
            $this->username = $username;
            $this->password = $password;
            $this->xrpcbase = $xrpcbase;
        }
        
        function connect() {
            $response = $this->xrpc_post('/com.atproto.server.createSession', [
                  ""identifier""  => $this->username,
                  ""password""    => $this->password,
                ]);
            
            $this->did =            $response['did'];
            $this->bearer =         $response['accessJwt'];
            $this->handle =         $response['handle'];
            $this->email =          $response['email'];
            $this->emailConfirmed = $response['emailConfirmed'];
            $this->refreshToken =   $response['refreshJwt'];
            // todo: how do I find the profile url?
            $this->profile_url =    'https://bsky.app/profile/'.$this->handle;
            
            $this->connected = false;
            if ($response['_curl']['http_code']==200) {
                $this->connected = true;
            }
            
            return $response;
        }
        
        function post($skeet_text, $imgurl = '', $alttext = '', $languages=['fi-FI']) {
            $postfields = [
                ""repo""          => $this->did,
                ""collection""    => ""app.bsky.feed.post"",
                ""record"" => [
                    '$type'     => ""app.bsky.feed.post"",
                    'createdAt' => date(""c""),
                    'text'      => $skeet_text,
                    'langs'     => $languages,
                ]
            ];
            
            if ($imgurl != '') {
                $embed = $this->embed($imgurl, $alttext);
                if ($embed) {
                    $postfields[""record""][""embed""] = $embed;
                }
            }
            
            // find links and mark them as app.bsky.richtext.facet#link
            $start = 0; $end = 0;
            preg_match_all('/[$|\W](https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&\/\/=]*[-a-zA-Z0-9@%_\+~#\/\/=])?)/', $skeet_text, $matches, PREG_SET_ORDER);
            foreach($matches as $match) {
                $link = $match[1];
            
                if ($link) {
                    $start = strpos($skeet_text, $link, $end);
                    $end = $start + strlen($link);
                
                    $postfields[""record""][""facets""][] = [
                        ""index"" => [
                            'byteStart' => $start,
                            'byteEnd'   => $end,
                        ],
                        ""features"" => [[
                            '$type'     => ""app.bsky.richtext.facet#link"",
                            'uri'       => $link,
                        ]],
                    ];
                    
                    // try to get a card for this link, if we don't already have one
                    if (!isset($postfields[""record""][""embed""])) {
                        $embed = $this->embed($link);
                        if ($embed) {
                            $postfields[""record""][""embed""] = $embed;
                        }
                    }
                }
                
            }
            // *****START find hashtags
            // https://github.com/bluesky-social/atproto/blob/main/lexicons/app/bsky/richtext/facet.json
            $start = 0; $end = 0;
            preg_match_all('/(#[^\s#]+)/', $skeet_text, $matches, PREG_SET_ORDER);
            foreach($matches as $match) {
                $tag = $match[1];
                if ($tag) {
                    $start = strpos($skeet_text, $tag, $end);
                    $end = $start + strlen($tag);
                    $postfields[""record""][""facets""][] = [
                        ""index"" => [
                            'byteStart' => $start,
                            'byteEnd'   => $end,
                        ],
                        ""features"" => [[
                            '$type'     => ""app.bsky.richtext.facet#tag"",
                            'tag'       => substr($tag, 1),
                        ]],
                    ];
                }
            }
            // *****END find hashtags
            
            
            
            // find mentions and mark them as app.bsky.richtext.facet#mention
            $start = 0; $end = 0;
            preg_match_all('#[$|\W](@([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)#', $skeet_text, $matches, PREG_SET_ORDER);
            foreach($matches as $match) {
                $mention = $match[1];
                
                // check if bsky resolves mention as handle
                $response = $this->xrpc_get('/com.atproto.identity.resolveHandle', 'handle='.preg_replace('#@#', '', $mention));
                if ($response['_curl']['http_code'] == 200) {
                    $mentioned_did = $response['did'];

                    $start = strpos($skeet_text, $mention, $end ?? 0);
                    $end = $start + strlen($mention);
                    
                    $postfields[""record""][""facets""][] = [
                        ""index"" => [
                            'byteStart' => $start,
                            'byteEnd'   => $end,
                        ],
                        ""features"" => [[
                            '$type'     => ""app.bsky.richtext.facet#mention"",
                            'did'       => $mentioned_did,
                        ]],
                    ];
                }
            }
            
            //print ""postfields: \n""; print json_encode($postfields); print json_last_error_msg(); print ""\n""; exit;
            
            return $this->xrpc_post('/com.atproto.repo.createRecord', $postfields);
        }
        
        function embed($url, $alttext) {
            $doc = new DOMDocument();
            @$doc->loadHTMLFile($url);
            if ($doc) {
                if ($alttext != '') {
                    $imgdata = @file_get_contents($url);
                } else {
                    $xpath = new DOMXpath($doc);
                    $xpath->registerNamespace('og', 'http://ogp.me/ns');
                    $xpath->registerNamespace('fb', 'http://ogp.me/ns/fb');
                    $xpath->registerNamespace('twitter', 'http://ogp.me/ns/twitter');
                    
                    $title = $this->nodeValue($xpath, [""//meta[@property='og:title']/@content"", ""//meta[@name='title']/@content"", ""//title"", ""//meta[@property='fb:title']/@content"", ""//meta[@property='twitter:title']/@content""]);
                    $description = $this->nodeValue($xpath, [""//meta[@property='og:description']/@content"", ""//meta[@name='description']/@content"", ""//meta[@property='fb:description']/@content"", ""//meta[@property='twitter:description']/@content""]);
                    
                    // search for a possible image in this set of pathes
                    $imgpaths = [""//meta[@property='og:image']/@content"", ""//meta[@property='og:image:url']/@content"", ""//meta[@property='og:image:secure_url']/@content"", ""//meta[@property='fb:image']/@content"", ""//meta[@property='twitter:image']/@content"", ""//link[@rel='icon']/@href""];
                    $imgdata = false;
                    foreach($imgpaths as $path) {
                        foreach($xpath->query($path) as $node) {
                            $imgurl = mb_convert_encoding($node->nodeValue, 'UTF-8', 'UTF-8');
                            if ($imgurl) {
                                // load image
                                $imgdata = @file_get_contents($imgurl);
                                if ($imgdata) {
                                    // stop after the first loadable image
                                    break;
                                }
                            }
                        }
                        if ($imgdata) {
                            break;
                        }
                    }
                }
                if ($imgdata) {
                    // max filesize is 976.56 KB
                    if (strlen($imgdata) > 976560) {
                        // resize till it fits
                        $quality = 90;
                        $tmp = sys_get_temp_dir().'/'.basename($img);
                        while(!file_exists($tmp) || filesize($tmp) > 976560 && $quality >= 0) {
                            print ""\nDEBUG resizing $img from "".strlen($imgdata)."" with quality $quality ..\n"";
                            $this->_image_compress($img, $tmp, $quality);
                            print ""DEBUG new size: "".filesize($tmp).""\n"";
                            $quality -= 10;
                        }
                        $imgdata = file_get_contents($tmp);
                        unlink($tmp);
                    }
                    if (strlen($imgdata) <= 976560) {
                        // upload image to bsky
                        $content_type = ""image/jpeg"";
                        $response = $this->xrpc_post('/com.atproto.repo.uploadBlob', $imgdata, $content_type);
                        // attach blob data
                        if (isset($response['blob'])) {
                            $thumb = $response['blob'];
                        }
                    }
                } else {
                    print ""\nDEBUG no image found\n"";
                }
                
                if (isset($thumb)) {
                    if ($alttext != '')
                        return [
                            '$type' => ""app.bsky.embed.images"",
                            'images' => [[
                                ""image"" => $thumb,
                                ""alt"" => html_entity_decode(strip_tags(mb_convert_encoding($alttext, 'UTF-8', 'UTF-8'))),
                            ]]
                        ];
                    return [
                        '$type' => ""app.bsky.embed.external"",
                        'external' => [
                            ""uri"" => $url,
                            ""title"" => html_entity_decode(strip_tags(mb_convert_encoding($title, 'UTF-8', 'UTF-8'))),
                            ""description"" => html_entity_decode(strip_tags(mb_convert_encoding($description, 'UTF-8', 'UTF-8'))),
                            ""thumb"" => $thumb
                        ]
                    ];
                }
            }
            return false;
        }
        
        function nodeValue($xpath, $paths) {
            foreach($paths as $path) {
                $nodes = $xpath->query($path);
                if ($nodes[0]) {
                    return mb_convert_encoding($nodes[0]->nodeValue, 'UTF-8', 'UTF-8');
                }
            }
            return false;
        }
        
        function getProfile($actor_id) {
            return $this->xrpc_get('/app.bsky.actor.getProfile', 'actor='.$actor_id);
        }
                
        function xrpc_post($lexicon, $postfields=[], $content_type='application/json') {
            $httpheader = [ 'Content-Type: '.$content_type ];
            // if we have auth, send auth
            if (isset($this->bearer)) {
                $httpheader[] = 'Authorization: Bearer '.$this->bearer;
            }
            
            $curl = curl_init();
            curl_setopt_array($curl, [
                CURLOPT_URL             => $this->xrpcbase.$lexicon,
                CURLOPT_RETURNTRANSFER  => true,
                CURLOPT_ENCODING        => '',
                CURLOPT_MAXREDIRS       => 10,
                CURLOPT_TIMEOUT         => 0,
                CURLOPT_FOLLOWLOCATION  => true,
                CURLOPT_HTTP_VERSION    => CURL_HTTP_VERSION_1_1,
                CURLOPT_POST            => true,
                CURLOPT_CUSTOMREQUEST   => 'POST',
                CURLOPT_POSTFIELDS      => is_array($postfields) ? json_encode($postfields) : $postfields,
                CURLOPT_HTTPHEADER      => $httpheader,
                CURLOPT_HEADER          => true,
            ]);
            $response = curl_exec($curl);
            
            $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);
            $header = substr($response, 0, $header_size);
            $response = substr($response, $header_size);
            
            $curl_info = curl_getinfo($curl);
            curl_close($curl);
            
            $response = json_decode($response, TRUE);
            $response['_curl'] = $curl_info;
            $response['_header'] = $header;
            return $response;
        }
        
        function xrpc_get($lexicon, $params='') {
            $httpheader = [ 'Content-Type: application/json' ];
            // if we have auth, send auth
            if (isset($this->bearer)) {
                $httpheader[] = 'Authorization: Bearer '.$this->bearer;
            }

            $curl = curl_init();
            curl_setopt_array($curl, [
                CURLOPT_URL             => $this->xrpcbase.$lexicon.'?'.$params,
                CURLOPT_RETURNTRANSFER  => true,
                CURLOPT_ENCODING        => '',
                CURLOPT_MAXREDIRS       => 10,
                CURLOPT_TIMEOUT         => 0,
                CURLOPT_FOLLOWLOCATION  => true,
                CURLOPT_HTTP_VERSION    => CURL_HTTP_VERSION_1_1,
                CURLOPT_HTTPHEADER      => $httpheader,
            ]);
            $response = curl_exec($curl);
            $curl_info = curl_getinfo($curl);
            curl_close($curl);
            
            $response = json_decode($response, TRUE);
            $response['_curl'] = $curl_info;
            return $response;
        }
        
        function _image_compress($file, $compressed, $quality) {
            $info = getimagesize($file);
            if ($info['mime'] == 'image/jpeg') {
                $image = imagecreatefromjpeg($file);
            } else if ($info['mime'] == 'image/gif') {
                $image = imagecreatefromgif($file);
            } else if ($info['mime'] == 'image/png') {
                $image = imagecreatefrompng($file);
            }
            imagejpeg($image, $compressed, $quality);
            
            return $compressed;
        }

    }
?>
"
1Jk833h9,–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤,nq1s788,C++,Wednesday 29th of May 2024 10:26:34 AM CDT,"#include<iostream>
#include<vector>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    vector<int> a(n);
    for (auto& e : a) cin >> e;
    vector<int> b(m);
    for (auto& e : b) cin >> e;
    int x = 0; ///–∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –Ω–µ–≤–∑—è—Ç–æ–≥–æ –∏–∑ a
    int y = 0; ///–∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –Ω–µ–≤–∑—è—Ç–æ–≥–æ –∏–∑ b
    vector<int> c;
    while ((x < n) && (y < m)) {
        if (a[x] < b[y]) {
            c.push_back(a[x]);
            x++;
        } else {
            c.push_back(b[y]);
            y++;
        }
    }
    while (x < n) {
        c.push_back(a[x]);
        x++;
    }
    while (y < m) {
        c.push_back(b[y]);
        y++;
    }
    for (auto e : c) cout << e << ' ';
    return 0;
}"
jqqWdF5c,asdasd,MrViSiOn,PHP,Wednesday 29th of May 2024 10:24:14 AM CDT,"<?xml version='1.0' encoding='ISO-8859-1'?>
<arl_weekly_report xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='weekly_outlook.xsd'>
  <date_time issue_time='2024-05-01T11:15:45+00:00' application_time='2024-04-30T07:00:00+00:00' expiration_time='2024-05-04T06:59:59+00:00'/>
  <station content_id='WCU' id_en='Barrie' id_fr='Barrie'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='BRM' id_en='Brampton' id_fr='Brampton'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YBR' id_en='Brandon' id_fr='Brandon'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CORYLUS-Hazelnut' species_name_fr='CORYLUS-Noisette' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='VBB' id_en='Burnaby' id_fr='Burnaby'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='3' species_name_en='Misc. Trees and Shrubs' species_name_fr='Arbres et arbustes divers' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YYC' id_en='Calgary-Central' id_fr='Calgary-Centre'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YYG' id_en='Charlottetown' id_fr='Charlottetown'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YXD' id_en='Edmonton' id_fr='Edmonton'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='SALIX-Willow' species_name_fr='SALIX-Saule' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YFC' id_en='Fredericton' id_fr='Fredericton'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YHZ' id_en='Halifax' id_fr='Halifax'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YHM' id_en='Hamilton' id_fr='Hamilton'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='Birch look-a-likes' species_name_fr='Semblable de Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='MORUS-Mulberry' species_name_fr='MORUS-M√ªre' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YLW' id_en='Kelowna' id_fr='Kelowna'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='3' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YGK' id_en='Kingston' id_fr='Kingston'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YXU' id_en='London' id_fr='London'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='MORUS-Mulberry' species_name_fr='MORUS-M√ªre' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='MORUS-Mulberry' species_name_fr='MORUS-M√ªre' />
      <predominant_pollen rank='3' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YQM' id_en='Moncton' id_fr='Moncton'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='LARIX-Larch,Tamarak,Pseudotsuga' species_name_fr='LARIX-M√©l√®zes' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YUL' id_en='Montreal' id_fr='Montr√©al'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YOW' id_en='Ottawa' id_fr='Ottawa'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YPA' id_en='Prince Albert' id_fr='Prince Albert'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YQB' id_en='Quebec City' id_fr='Qu√©bec'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YQR' id_en='Regina' id_fr='Regina'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ULMUS-Elm' species_name_fr='ULMUS-Orme' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ULMUS-Elm' species_name_fr='ULMUS-Orme' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='SALIX-Willow' species_name_fr='SALIX-Saule' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ULMUS-Elm' species_name_fr='ULMUS-Orme' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
  </station>
  <station content_id='YSJ' id_en='Saint John (NB)' id_fr='Saint John (NB)'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YXE' id_en='Saskatoon' id_fr='Saskatoon'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YSC' id_en='Sherbrooke' id_fr='Sherbrooke'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YYT' id_en='St. John&apos;s (NL)' id_fr='St. John&apos;s (NL)'>
    <pollen_outlook lookahead='0' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='LOW'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
  </station>
  <station content_id='YSB' id_en='Sudbury' id_fr='Sudbury'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YQT' id_en='Thunder Bay' id_fr='Thunder Bay'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='Birch look-a-likes' species_name_fr='Semblable de Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YYZ' id_en='Toronto' id_fr='Toronto'>
    <pollen_outlook lookahead='0' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
  <station content_id='YVR' id_en='Vancouver' id_fr='Vancouver'>
    <pollen_outlook lookahead='0' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='FAGUS-Beech' species_name_fr='FAGUS-H√™tre' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='TSUGA-Hemlock' species_name_fr='TSUGA-Pruche' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
  </station>
  <station content_id='YYJ' id_en='Victoria' id_fr='Victoria'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='PINACEAE-Pine, Fir, Spruce' species_name_fr='PINACEAE-Pin, Sapin, √âpinette' />
      <predominant_pollen rank='2' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='MOD'>
      <predominant_pollen rank='1' species_name_en='GRAMINEAE-True Grasses' species_name_fr='GRAMINEAE-Herbes' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='CUPRESSACEAE-Cedar,Juniper,etc.' species_name_fr='CUPRESSACEAE-C√®dre, Cypr√®s, etc.' />
    </pollen_outlook>
  </station>
  <station content_id='YQG' id_en='Windsor' id_fr='Windsor'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CARYA-Hickory' species_name_fr='CARYA-Noisetier' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CARYA-Hickory' species_name_fr='CARYA-Noisetier' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='MORUS-Mulberry' species_name_fr='MORUS-M√ªre' />
      <predominant_pollen rank='2' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CARYA-Hickory' species_name_fr='CARYA-Noisetier' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CARYA-Hickory' species_name_fr='CARYA-Noisetier' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='QUERCUS-Oak' species_name_fr='QUERCUS-Ch√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='3' species_name_en='CARYA-Hickory' species_name_fr='CARYA-Noisetier' />
    </pollen_outlook>
  </station>
  <station content_id='YWG' id_en='Winnipeg' id_fr='Winnipeg'>
    <pollen_outlook lookahead='0' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='FRAXINUS-Ash' species_name_fr='FRAXINUS-Fr√™ne' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='1' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
      <predominant_pollen rank='2' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='3' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
    </pollen_outlook>
    <pollen_outlook lookahead='2' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='3' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='4' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='POPULUS-Aspen, Poplar' species_name_fr='POPULUS-Peuplier' />
      <predominant_pollen rank='2' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='3' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
    </pollen_outlook>
    <pollen_outlook lookahead='5' totalpollen_level='VERY HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
    <pollen_outlook lookahead='6' totalpollen_level='HIGH'>
      <predominant_pollen rank='1' species_name_en='ACER-Boxelder, Maple' species_name_fr='ACER-√ârable' />
      <predominant_pollen rank='2' species_name_en='ALNUS-Alder' species_name_fr='ALNUS-Aulne' />
      <predominant_pollen rank='3' species_name_en='BETULA-Birch' species_name_fr='BETULA-Bouleau' />
    </pollen_outlook>
  </station>
</arl_weekly_report>
"
UCHsintQ,convolution OK!,max2201111,Python,Wednesday 29th of May 2024 10:23:41 AM CDT,"#Navod na pouziti, Mgr. Hynek Mlƒçou≈°ek, v Brne 2.5.2024
#Ulozte do lokalniho souboru u sebe na PC data tohoto tvaru vzdy ukoncene 0 ci 1 (jde o uceni s ucitelem: 1 = nemocny, 0 = prezil/zdravy, ve vystupu bude zelena znacit 0, cervena 1)  a bez znaku #; pozor na "",""

# [ [23.657800719276743,18.859916797201468,0],
# [22.573729142097473,17.96922325097786,0],
# [32.55342396968757,29.463651408558803,0],
# [6.718035041529263,25.704665468161718,1],
# [14.401918566243225,16.770856492924658,0],
# [17.457907312962234,21.76521470574044,0],
# [20.02796946568093,73.45445954770891,1],
# [30.295138369778076,62.901112886193246,1],
# [15.128977804449633,32.40267702110393,0],
# [30.179457395820013,58.982492125646104,1],
# [28.01649701854089,63.92781357637711,1],
# [16.791838457871147,42.33482314089884,0],
# [10.583694293380976,19.61926728942497,0],
# [26.634447074406467,91.96624817360987,1],
# [26.217868623367643,36.400293587062976,0],
# [17.689396788624936,60.79797114006423,1],
# [33.17193822527976,66.75277364959176,1],
# [23.793952755709153,22.57501437360518,0]]

#kliknete na cerne tlacitko s trojuhelnickem vlevo nahore
#pod kodem se objevi moznost spustit dialogove okenko, kliknete na nej
#soubor, ktery mate z bodu vyse vyberte a nahrajte
#Najdete v tomto kodu retezec:
###ZDE VLOZTE DATA OD NOVYCH PACIENTU

#Vlozte do pole
# new_persons_results = []
# data o nekolika malo novych pacientech bez ukoncovaci 0 a 1, ale se stejnym poctem sloupcu jako ma soubor z Vaseho lokalniho disku, vyse by tedy toto bylo rovno 2
#kod vyhodi hned po natrenovani, (jehoz prubeh muzete sledovat na modre progres bare) pro kazdy radek z new_persons_results bilo-sedo-cerne ctverecky vznikle z normalizace poskytnutych dat a ukoncovaci ctverecek cerveny pripadne zeleny
#zaroven s tim se vypise realne cislo mezi 0 a 1 znacici jak moc je pacient zdravy (blizke 0) ci nemocny (blizke 1)
#cisla uprostred pak indikuji zadany oranzovy semafor.
#je na lekarich nastavit tresholdy (tedy pravdepodobnosti: cisla mezi 0 a 1) ktere pak daji zaver, zda je pacient cerveny, oranzovy ci zeleny

# prosim o komnetare a vysledky na realnych datech, je zadouci aby radku v matici, tedy pacientu byly stovky a sloupcu desitky
# Moznosti vyuziti: onkologicka diagnoza vs. zdrava kontorlni skupina, diabetes (pritomnost/nepritomnost), testovani noveho leku oproti placebu atd.

#kod zaroven vyhodi confusion matici, tedy mozne True Negative a False Positive plus spravne zarazene hodnoty spolu s presnosti,F1 score recall atd.
#poznamka ke kodu: jde o epxerimentalni verzi, ktera krome skutecne potrebneho kodu obsahuje ladici informace, ruzne duplicity, nadbytecne prikazy atd.
# Na uvod behu programu se pro kontorlu vypise poskytnuta matice a jeji normalizovana verze, je treba sjet jezdcem napravo nize na obrazky a dalsi vystupy

#Dekuji profesoru Petru Dostalovi za namet k teto praci a poskytnuta data, byt je potreba mit data realna

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm import tqdm


from IPython.display import display
from IPython.display import Javascript
display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))

label_colors = {0: [0, 128, 0], 1: [255, 0, 0]}
label_colors_testing = {0: [0, 128, 0], 1: [255, 0, 0]}


%matplotlib inline



# Function to create images based on predictions
def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Create a gradient based on the normalized values
        gradient_value = int(np.interp(predictions[i], [0, 1], [0, 255]))
        image[i, -1] = np.array([gradient_value] * 3)

    return image

def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use red for class 0 and green for class 1
        if predictions[i] == 0:
            image[i, -1] = np.array([255, 0, 0])  # Red
        elif predictions[i] == 1:
            image[i, -1] = np.array([0, 128, 0])  # Green

    return image

def create_image(data, predictions, label_colors):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use the specified color for the last column based on the label
        image[i, -1] = label_colors[predictions[i]]

    return image



def create_imageN(data, predictions, label_colors=None):
    num_training_rows = len(data)  # Set the number of rows based on the data
    num_columns = len(data[0])

    image_training = np.zeros((num_training_rows, num_columns + 1, 3), dtype=np.uint8)

    min_pixel_value = np.min(X_train_normalized)
    max_pixel_value = np.max(X_train_normalized)




    for i in range(num_training_rows):
        # Normalize the first columns independently
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
            image_training[i, j] = np.array([pixel_value] * 3)

        # Normalize the last column separately to achieve grayscale
        pixel_value_last = int(np.interp(data[i][-1], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, -1] = np.array([pixel_value_last] * 3)

        # Use the specified color for the last column based on the label
        if label_colors is not None:
            image_training[i, -1] = label_colors[predictions[i]]

    return image_training




# Load data from a file
#file_path = 'C:/Users/Hynek/Desktop/example4.txt'
from google.colab import files
uploaded = files.upload()

# Tento k√≥d otev≈ôe dialogov√© okno pro v√Ωbƒõr souboru z va≈°eho poƒç√≠taƒçe.
import io
import pandas as pd

# P≈ôedpokl√°d√°me, ≈æe jste nahr√°li CSV soubor
for fn in uploaded.keys():
  print('User uploaded file ""{name}"" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))
  path = io.BytesIO(uploaded[fn])  # Pro soubory, kter√© pot≈ôebuj√≠ b√Ωt ƒçteny jako bin√°rn√≠ objekty
  df = pd.read_csv(path)
  print(df.head())  # Vyp√≠≈°e prvn√≠ch pƒõt ≈ô√°dk≈Ø DataFrame


all_results = []
#with open(file_path, 'r') as file:
#    file_content = file.read()

# Execute the content as Python code
##exec(file_content)

import os
import shutil
import ast

for filename in uploaded.keys():
    original_path = f""/content/{filename}""
    destination_path = os.path.join(""/content/"", ""/content/DATA2"")
    shutil.move(original_path, destination_path)
    print(f""Soubor {filename} byl p≈ôesunut do {destination_path}"")

file_path = '/content/DATA2'  # Cesta k souboru
with open(file_path, 'r') as file:
    code = file.read()

A_list = ast.literal_eval(code)


# P≈ôevod na NumPy pole
A = np.array(A_list)

#exec(code)

# Now, all_results contains lists corresponding to each row in the CSV file
##print(all_results)

# Assign values to variables dynamically based on the rows of matrix A
for i, row in enumerate(A, start=1):
    globals()[f""person{i}_results""] = list(row)

# Print the assigned variables
for i in range(1, len(A) + 1):
  #  print(f""person{i}_results {globals()[f'person{i}_results']}"")
    all_results.append(f""person{i}_results"")
##print(all_results)



result_variables = []

# Loop through the variable names and get the corresponding variables using globals()
for var_name in all_results:
    result_variables.append(globals()[var_name])

# Now, result_variables contains the variables with names specified in variable_names
#print(result_variables)

all_results = result_variables
new_persons_results = result_variables



labels = [results[-1] for results in all_results]

# Odstranƒõn√≠ posledn√≠ho sloupce z datasetu
data = [results[:-1] for results in all_results]

# Definice poƒçtu ≈ô√°dk≈Ø pro tr√©nov√°n√≠ a testov√°n√≠
num_training_rows = 50
num_testing_rows = 50

# Rozdƒõlen√≠ datasetu na tr√©novac√≠ a testovac√≠ sady
X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_testing_rows], labels[:num_training_rows], labels[:num_testing_rows]

# P≈ôevod na NumPy pole
X_train = np.array(X_train)
X_test = np.array(X_test)
y_train = np.array(y_train)
y_test = np.array(y_test)

# # Normalizace dat (s ohledem na -1)
# min_values = np.min(X_train[X_train != -1], axis=0)
# max_values = np.max(X_train[X_train != -1], axis=0)
# X_train_normalized = (X_train - min_values) / (max_values - min_values)



# import numpy as np
# import tensorflow as tf
# import matplotlib.pyplot as plt
# from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
# import seaborn as sns
# from tqdm.notebook import tqdm_notebook



import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm.notebook import tqdm_notebook

# Pr≈Ømƒõry (mu) a smƒõrodatn√© odchylky (sigma)
mu = np.mean(X_train, axis=0)
sigma = np.std(X_train, axis=0)

# Normalizace ka≈æd√©ho sloupce zvl√°≈°≈•
X_train_standardized = (X_train - mu) / sigma
X_test_standardized = (X_test - mu) / sigma

# Vylep≈°en√Ω model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(256, activation='relu', input_shape=(len(X_train[0]),)),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Pou≈æit√≠ Adam optimizer s learning rate schedulerem
lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
    initial_learning_rate=1e-3,
    decay_steps=10000,
    decay_rate=0.9
)
optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# Kompilace modelu
model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy'])

# Lists to store accuracy values
accuracy_history = []

# Create images for the training data
image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)

min_pixel_value = np.min(X_train_standardized, axis=0)
max_pixel_value = np.max(X_train_standardized, axis=0)

for i, label in enumerate(y_train):
    for j in range(len(X_train_standardized[0])):
        pixel_value = int(np.interp(X_train_standardized[i][j], [min_pixel_value[j], max_pixel_value[j]], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])

# Training the model
epochs = 139
new_persons_results = [
    # [23.65780072, 18.8599168],
    # [22.57372914, 17.96922325],
    # [32.55342397, 29.46365141],
    # [ 6.71803504, 25.70466547],
    # [14.40191857, 16.77085649],
    # [17.45790731, 21.76521471],
    # [20.02796947, 73.45445955],
    # [26.2042, 10.6782],
    # [35.7258, 12.8027],
    # [21.2, 7.8],
    # [50.1, 40.2],
    # [32.739, 42.0152],
    # [28.1, 10.1],
    # [32.1656, 46.005 ],
    # [24.9647, 51.3433],
    # [34.6134, 44.4012],
[0.0697400418162155,0.048866857264291144,0.28641370855472326,0.2721997143501177],
[0.14159602676789837,0.1747877034447084,0.35616475477076587,0.3349487498168958],
[0.11173253224821383,0.18794447828677996,0.3254176976987727,0.3413023918178341],
[0.09630381764770453,0.05449810810962146,0.26767869268577593,0.21134056616439179],
[0.17834821693532132,0.18466538062866059,0.3199711146234129,0.3968137366419059],
[0.06045619825051427,0.05598696779492471,0.21592696351263593,0.22040624440430515],
[0.08666288081774745,0.015388075894536557,0.2041876616268118,0.20706370434663773],
[0.03130184508345673,0.015266595360551428,0.27183777103946916,0.2867664339707584],
[0.05547626859495597,0.05808291988099526,0.2542166524648567,0.2573313511422864],
[0.1772, 0.0076, 0.3565, 0.2584],
]

import sys

for epoch in tqdm_notebook(range(epochs)):
    history = model.fit(X_train_standardized, np.array(y_train), epochs=1, verbose=0, shuffle=False)
    accuracy_history.append(history.history['accuracy'][0])

    if epoch == 1:
        # Normalize the testing data
        X_test_standardized = (X_test - mu) / sigma
        y_pred_after_2nd_epoch = model.predict(X_test_standardized)
        y_pred_binary_after_2nd_epoch = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch]
        image_testing_before_2nd_epoch = create_image(X_test_standardized, y_pred_binary_after_2nd_epoch, label_colors_testing)

    if epoch >= epochs-1:
        print(f""HERE HERE Epoch: {epoch}, Epochs: {epochs}\n"")
        sys.stdout.flush()

        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=0):
            # Ensure that personNEW_results has the same number of features as the model expects
            assert len(personNEW_results) == len(X_train[0]), ""Mismatch in the number of features.""

            personNEW_results_standardized = (np.array(personNEW_results) - mu) / sigma

            personNEW_prediction = model.predict(np.array([personNEW_results_standardized]))
            personNEW_label = 1 if personNEW_prediction >= 0.5 else 0
            y_pred_after_50_epochs = model.predict(X_test_standardized)
            y_pred_binary_after_50_epochs = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs]
            image_testing_after_50_epochs = create_image(X_test_standardized, y_pred_binary_after_50_epochs, label_colors_testing)

            # Create an image for the new person
            image_personNEW = create_imageN([personNEW_results_standardized], [personNEW_label], label_colors)

            # Display the images
            plt.figure(figsize=(5, 5))
            plt.imshow(image_personNEW)
            plt.title(f""New Person {idx}\nLabel: {personNEW_label}, Prediction: {personNEW_prediction}, personNEW_results: {personNEW_results}"")
            plt.axis(""off"")
            plt.show()

# Display the images
plt.figure(figsize=(25, 15))
plt.subplot(2, 2, 1)
plt.imshow(image_training)
plt.title(""Training Data"")
plt.axis(""off"")

plt.subplot(2, 2, 2)
plt.imshow(image_testing_before_2nd_epoch)
plt.title(""Testing Data (2nd Epoch)"")
plt.axis(""off"")

plt.subplot(2, 2, 3)
plt.imshow(image_testing_after_50_epochs)
plt.title(f""Testing Data ({epochs} Epochs)"")
plt.axis(""off"")

plt.subplot(2, 2, 4)
plt.imshow(image_personNEW)
plt.title(f""New Person\nLabel: {personNEW_label},[{personNEW_prediction}]"")
plt.axis(""off"")

# Plot accuracy history
plt.figure(figsize=(12, 5))
plt.plot(range(1, epochs + 1), accuracy_history, marker='o')
plt.title('Accuracy Over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.grid()

# Print standardized data
print(""Standardized PersonNEW Data:"")
print(personNEW_results_standardized)

plt.show()

print(""X_train before standardization:"")
print(X_train)
print(""X_test before standardization:"")
print(X_test)

import seaborn as sns

print(""KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"")
print(X_test)
print(""HHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"")
print(X_train)
print(""LLLLLLLLLLLLLLLLLLLLLLLLLLLLL"")

# y_pred_binary = [1 if pred >= 0.5 else 0 for pred in model.predict(X_test_standardized)]

# # Create confusion matrix
# conf_matrix = confusion_matrix(y_train, y_pred_binary)
# print(conf_matrix)

from sklearn.metrics import confusion_matrix
from tensorflow.keras.utils import to_categorical

np.set_printoptions(threshold=np.inf, precision=4, suppress=True)

# Assuming X_test_standardized and y_test are your test set data
y_pred_binary = [1 if pred >= 0.5 else 0 for pred in model.predict(X_test_standardized)]

# Create confusion matrix using the test set
conf_matrix = confusion_matrix(y_test, y_pred_binary)
print(conf_matrix)

plt.figure(figsize=(6, 6))
sns.heatmap(conf_matrix, annot=True, fmt=""d"", cmap=""Blues"", xticklabels=['Predicted 0', 'Predicted 1'], yticklabels=['Actual 0', 'Actual 1'])
plt.xlabel(""Predicted Label"")
plt.ylabel(""True Label"")
plt.title(""Confusion Matrix"")
plt.show()

X_train = np.array(X_train)
#y_train_one_hot = np.array(y_train_one_hot)

# Rozdƒõlen√≠ dat na tr√©novac√≠ a testovac√≠ mno≈æiny
X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_testing_rows], labels[:num_training_rows], labels[:num_testing_rows]

import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
import tensorflow as tf
import seaborn as sns

# Assuming data splitting and model definition have been done correctly

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
print(""Training Start"")
for epoch in tqdm_notebook(range(100), desc=""Training Progress""):
    model.fit(np.array(X_train_standardized), np.array(y_train), epochs=1, verbose=0)
print(""Training Complete"")

# Generate predictions from the model
predictions = (model.predict(X_test_standardized) > 0.5).astype(int)

# Convert y_test to a numpy array and then to binary labels
y_test_array = np.array(y_test)  # Convert y_test to a numpy array
y_test_binary = (y_test_array > 0.5).astype(int)  # Convert to binary

# Compute the confusion matrix
conf_matrix = confusion_matrix(y_test_binary, predictions)

# Evaluate the model's performance
accuracy = accuracy_score(y_test_binary, predictions)
precision = precision_score(y_test_binary, predictions)
recall = recall_score(y_test_binary, predictions)
f1 = f1_score(y_test_binary, predictions)

# Display the confusion matrix
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

print(f""Accuracy: {accuracy:.4f}"")
print(f""Precision: {precision:.4f}"")
print(f""Recall: {recall:.4f}"")
print(f""F1 Score: {f1:.4f}"")

print(f""Confusion Matrix2122:\n{conf_matrix}"")

import random

def find_best_pair(min_val, max_val, num_features, model, min_values, max_values):
    best_pair = None
    best_prediction = 1
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_standardized = (new_data - mu) / sigma
        
        # Suppress model output
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_standardized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction < best_prediction:
            best_prediction = prediction
            best_pair = new_data
    return best_pair, best_prediction

best_pair, best_prediction = find_best_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)

def find_worst_pair(min_val, max_val, num_features, model, min_values, max_values):
    worst_pair = None
    worst_prediction = 0
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_standardized = (new_data - mu) / sigma
        
        # Suppress model output
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_standardized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction > worst_prediction:
            worst_prediction = prediction
            worst_pair = new_data
    return worst_pair, worst_prediction

worst_pair, worst_prediction = find_worst_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)

print(f""Best Pair: {best_pair}, Best Prediction: {best_prediction}"")
print(f""Worst Pair: {worst_pair}, Worst Prediction: {worst_prediction}"")



import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from sklearn.metrics import recall_score, confusion_matrix, accuracy_score, precision_score, f1_score
import seaborn as sns
from tqdm.notebook import tqdm_notebook
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA



# Rozdƒõlen√≠ na vstupn√≠ data (X) a c√≠lov√© promƒõnn√© (y)
X = A[:, :-1]
y = A[:, -1]

# Rozdƒõlen√≠ na tr√©novac√≠ a testovac√≠ sadu (v tomto p≈ô√≠kladƒõ pou≈æijeme celou sadu jako tr√©novac√≠ pro jednoduchost)
X_train, y_train = X, y
X_test, y_test = X, y

# V√Ωpoƒçet pr≈Ømƒõru a smƒõrodatn√© odchylky pro ka≈æd√Ω sloupec
mu = np.mean(X_train, axis=0)
sigma = np.std(X_train, axis=0)

# Normalizace ka≈æd√©ho sloupce zvl√°≈°≈•
X_train_standardized = (X_train - mu) / sigma

# Normalizace testovac√≠ch dat
X_test_standardized = (X_test - mu) / sigma

# Definice modelu
model = tf.keras.Sequential([
    tf.keras.layers.Dense(256, activation='relu', input_shape=(X_train_standardized.shape[1],)),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Pou≈æit√≠ Adam optimizer s learning rate schedulerem
lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
    initial_learning_rate=1e-3,
    decay_steps=10000,
    decay_rate=0.9
)
optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# Kompilace modelu
model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy', tf.keras.metrics.Recall()])

# Tr√©nov√°n√≠ modelu
history = model.fit(X_train_standardized, y_train, epochs=50, verbose=0, shuffle=False)

# Predikce
y_pred_prob = model.predict(X_test_standardized)
y_pred = (y_pred_prob > 0.5).astype(int)

# V√Ωpoƒçet metrik
recall = recall_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)

# Vyhodnocen√≠ v√Ωkonu modelu
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)

# V√Ωpis metrik
print(f""Recall: {recall:.4f}"")
print(f""Accuracy: {accuracy:.4f}"")
print(f""Precision: {precision:.4f}"")
print(f""F1 Score: {f1:.4f}"")
print(f""Confusion Matrix:\n{conf_matrix}"")

# Zobrazen√≠ confusion matrix
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

print(""KKKKKKKKKKKKK"")



# import numpy as np
# import tensorflow as tf
# import matplotlib.pyplot as plt
# from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
# import seaborn as sns
# from tqdm.notebook import tqdm_notebook

# # V√Ωpoƒçet pr≈Ømƒõru a smƒõrodatn√© odchylky pro ka≈æd√Ω sloupec
# mu = np.mean(X_train, axis=0)
# sigma = np.std(X_train, axis=0)

# # Normalizace ka≈æd√©ho sloupce zvl√°≈°≈•
# X_train_standardized = (X_train - mu) / sigma

# # Normalizace testovac√≠ch dat
# X_test_standardized = (X_test - mu) / sigma

# # P≈ôeveden√≠ dat na spr√°vn√Ω tvar pro CNN (p≈ôid√°n√≠ kan√°lu)
# X_train_standardized = X_train_standardized[..., np.newaxis]
# X_test_standardized = X_test_standardized[..., np.newaxis]

# # Definice modelu
# model = tf.keras.Sequential([
#     tf.keras.layers.Conv1D(32, 2, activation='relu', input_shape=(X_train_standardized.shape[1], 1)),
#     tf.keras.layers.MaxPooling1D(2),
#     tf.keras.layers.Flatten(),
#     tf.keras.layers.Dense(128, activation='relu'),
#     tf.keras.layers.Dropout(0.3),
#     tf.keras.layers.Dense(64, activation='relu'),
#     tf.keras.layers.Dropout(0.3),
#     tf.keras.layers.Dense(1, activation='sigmoid')
# ])

# # Pou≈æit√≠ Adam optimizer s learning rate schedulerem
# lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
#     initial_learning_rate=1e-3,
#     decay_steps=10000,
#     decay_rate=0.9
# )
# optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# # Kompilace modelu
# model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy', tf.keras.metrics.Recall()])

# # Tr√©nov√°n√≠ modelu
# history = model.fit(X_train_standardized, y_train, epochs=50, verbose=0, shuffle=False)

# # Predikce
# y_pred_prob = model.predict(X_test_standardized)
# y_pred = (y_pred_prob > 0.5).astype(int)

# # V√Ωpoƒçet metrik
# recall = recall_score(y_test, y_pred)
# conf_matrix = confusion_matrix(y_test, y_pred)

# # Vyhodnocen√≠ v√Ωkonu modelu
# accuracy = accuracy_score(y_test, y_pred)
# precision = precision_score(y_test, y_pred)
# f1 = f1_score(y_test, y_pred)

# # V√Ωpis metrik
# print(f""Recall: {recall:.4f}"")
# print(f""Accuracy: {accuracy:.4f}"")
# print(f""Precision: {precision:.4f}"")
# print(f""F1 Score: {f1:.4f}"")
# print(f""Confusion Matrix:\n{conf_matrix}"")

# # Zobrazen√≠ confusion matrix
# sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
# plt.xlabel('Predicted')
# plt.ylabel('Actual')
# plt.title('Confusion Matrix')
# plt.show()

# import numpy as np
# import tensorflow as tf
# import matplotlib.pyplot as plt
# from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
# import seaborn as sns
# from tqdm.notebook import tqdm_notebook

# # V√Ωpoƒçet pr≈Ømƒõru a smƒõrodatn√© odchylky pro ka≈æd√Ω sloupec
# mu = np.mean(X_train, axis=0)
# sigma = np.std(X_train, axis=0)

# # Normalizace ka≈æd√©ho sloupce zvl√°≈°≈•
# X_train_standardized = (X_train - mu) / sigma

# # Normalizace testovac√≠ch dat
# X_test_standardized = (X_test - mu) / sigma

# # P≈ôeveden√≠ dat na spr√°vn√Ω tvar pro CNN (p≈ôid√°n√≠ kan√°lu)
# X_train_standardized = X_train_standardized[..., np.newaxis]
# X_test_standardized = X_test_standardized[..., np.newaxis]

# # Definice modelu
# model = tf.keras.Sequential([
#     tf.keras.layers.Conv1D(32, 2, activation='relu', input_shape=(X_train_standardized.shape[1], 1)),
#     tf.keras.layers.MaxPooling1D(2),
#     tf.keras.layers.Conv1D(64, 2, activation='relu'),
#     tf.keras.layers.MaxPooling1D(2),
#     tf.keras.layers.Flatten(),
#     tf.keras.layers.Dense(128, activation='relu'),
#     tf.keras.layers.Dropout(0.3),
#     tf.keras.layers.Dense(64, activation='relu'),
#     tf.keras.layers.Dropout(0.3),
#     tf.keras.layers.Dense(1, activation='sigmoid')
# ])

# # Pou≈æit√≠ Adam optimizer s learning rate schedulerem
# lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
#     initial_learning_rate=1e-3,
#     decay_steps=10000,
#     decay_rate=0.9
# )
# optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# # Kompilace modelu
# model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy', tf.keras.metrics.Recall()])

# # Tr√©nov√°n√≠ modelu
# history = model.fit(X_train_standardized, y_train, epochs=50, verbose=0, shuffle=False)

# # Predikce
# y_pred_prob = model.predict(X_test_standardized)
# y_pred = (y_pred_prob > 0.5).astype(int)

# # V√Ωpoƒçet metrik
# recall = recall_score(y_test, y_pred)
# conf_matrix = confusion_matrix(y_test, y_pred)

# # Vyhodnocen√≠ v√Ωkonu modelu
# accuracy = accuracy_score(y_test, y_pred)
# precision = precision_score(y_test, y_pred)
# f1 = f1_score(y_test, y_pred)

# # V√Ωpis metrik
# print(f""Recall: {recall:.4f}"")
# print(f""Accuracy: {accuracy:.4f}"")
# print(f""Precision: {precision:.4f}"")
# print(f""F1 Score: {f1:.4f}"")
# print(f""Confusion Matrix:\n{conf_matrix}"")

# # Zobrazen√≠ confusion matrix
# sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
# plt.xlabel('Predicted')
# plt.ylabel('Actual')
# plt.title('Confusion Matrix')
# plt.show()

# # Odstranƒõn√≠ meziv√Ωstup≈Ø
# num_iterations = 500

# best_row = None
# best_prediction = None
# best_diff = float('inf')

# for _ in range(num_iterations):
#     new_data = np.random.normal(mu, sigma)
#     new_data_standardized = (new_data - mu) / sigma
#     new_data_standardized = new_data_standardized[np.newaxis, ..., np.newaxis]  # P≈ôid√°n√≠ nov√©ho rozmƒõru pro CNN
#     prediction_prob = model.predict(new_data_standardized, verbose=0)[0][0]
#     diff = abs(prediction_prob - 0.67)
    
#     if diff < best_diff:
#         best_diff = diff
#         best_row = new_data
#         best_prediction = prediction_prob

# print(f""Nejlep≈°√≠ ≈ô√°dek: {best_row}"")
# print(f""Predikovan√° hodnota: {best_prediction}"")
# print(f""Rozd√≠l: {best_diff}"")

import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
import seaborn as sns
from tqdm.notebook import tqdm_notebook

# V√Ωpoƒçet pr≈Ømƒõru a smƒõrodatn√© odchylky pro ka≈æd√Ω sloupec
mu = np.mean(X_train, axis=0)
sigma = np.std(X_train, axis=0)

# Normalizace ka≈æd√©ho sloupce zvl√°≈°≈•
X_train_standardized = (X_train - mu) / sigma

# Normalizace testovac√≠ch dat
X_test_standardized = (X_test - mu) / sigma

# P≈ôeveden√≠ dat na spr√°vn√Ω tvar pro CNN (p≈ôid√°n√≠ kan√°lu)
X_train_standardized = X_train_standardized[..., np.newaxis]
X_test_standardized = X_test_standardized[..., np.newaxis]

# Definice modelu
model = tf.keras.Sequential([
    tf.keras.layers.Conv1D(32, 1, activation='relu', input_shape=(X_train_standardized.shape[1], 1)),
    tf.keras.layers.MaxPooling1D(1),
    tf.keras.layers.Conv1D(64, 1, activation='relu'),
    tf.keras.layers.MaxPooling1D(1),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Pou≈æit√≠ Adam optimizer s learning rate schedulerem
lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
    initial_learning_rate=1e-3,
    decay_steps=10000,
    decay_rate=0.9
)
optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# Kompilace modelu
model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy', tf.keras.metrics.Recall()])

# Tr√©nov√°n√≠ modelu
history = model.fit(X_train_standardized, y_train, epochs=50, verbose=0, shuffle=False)

# Predikce
y_pred_prob = model.predict(X_test_standardized)
y_pred = (y_pred_prob > 0.5).astype(int)

# V√Ωpoƒçet metrik
recall = recall_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)

# Vyhodnocen√≠ v√Ωkonu modelu
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)

# V√Ωpis metrik
print(f""Recall: {recall:.4f}"")
print(f""Accuracy: {accuracy:.4f}"")
print(f""Precision: {precision:.4f}"")
print(f""F1 Score: {f1:.4f}"")
print(f""Confusion Matrix:\n{conf_matrix}"")

# Zobrazen√≠ confusion matrix
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Odstranƒõn√≠ meziv√Ωstup≈Ø
num_iterations = 500

best_row = None
best_prediction = None
best_diff = float('inf')

for _ in range(num_iterations):
    new_data = np.random.normal(mu, sigma)
    new_data_standardized = (new_data - mu) / sigma
    new_data_standardized = new_data_standardized[np.newaxis, ..., np.newaxis]  # P≈ôid√°n√≠ nov√©ho rozmƒõru pro CNN
    prediction_prob = model.predict(new_data_standardized, verbose=0)[0][0]
    diff = abs(prediction_prob - 0.67)
    
    if diff < best_diff:
        best_diff = diff
        best_row = new_data
        best_prediction = prediction_prob

print(f""Nejlep≈°√≠ ≈ô√°dek: {best_row}"")
print(f""Predikovan√° hodnota: {best_prediction}"")
print(f""Rozd√≠l: {best_diff}"")

# # Odstranƒõn√≠ meziv√Ωstup≈Ø
# num_iterations = 50

# best_row = None
# best_prediction = None
# best_diff = float('inf')

# for _ in range(num_iterations):
#     new_data = np.random.normal(mu, sigma)
#     new_data_standardized = (new_data - mu) / sigma
#     prediction_prob = model.predict(np.array([new_data_standardized]), verbose=0)[0][0]
#     diff = abs(prediction_prob - 0.67)
    
#     if diff < best_diff:
#         best_diff = diff
#         best_row = new_data
#         best_prediction = prediction_prob

# print(f""Nejlep≈°√≠ ≈ô√°dek: {best_row}"")
# print(f""Predikovan√° hodnota: {best_prediction}"")
# print(f""Rozd√≠l: {best_diff}"")

# Vizualizace v√Ωsledk≈Ø pomoc√≠ PCA
X_standardized = (X - mu) / sigma
pca = PCA(n_components=2)  # Sn√≠≈æen√≠ na 2 komponenty
X_pca = pca.fit_transform(X_standardized)

plt.figure()
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y)
plt.xlabel('Prvn√≠ hlavn√≠ komponenta')
plt.ylabel('Druh√° hlavn√≠ komponenta')
plt.title('PCA na va≈°ich datech')
plt.show()

# Vizualizace v√Ωsledk≈Ø pomoc√≠ LDA
lda = LDA(n_components=1)
X_lda = lda.fit_transform(X_standardized, y)

plt.figure()
plt.scatter(X_lda[:, 0], np.zeros_like(X_lda), c=y)
plt.xlabel('Prvn√≠ diskriminaƒçn√≠ komponenta')
plt.title('LDA s uƒçitelem')
plt.show()

# Vytvo≈ôen√≠ obrazu pro tr√©novac√≠ data
min_pixel_value = -3
max_pixel_value = 3

image_training = np.zeros((len(X_train_standardized), len(X_train_standardized[0]) + 1, 3), dtype=np.uint8)

for i, label in enumerate(y_train):
    for j in range(len(X_train_standardized[0])):
        pixel_value = int(np.interp(X_train_standardized[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])  # ≈†ed√Ω sloupec pro v≈°echny ≈ô√°dky
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])  # Zelen√Ω sloupec pro label 0
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])  # ƒåerven√Ω sloupec pro label 1

# Zobrazen√≠ obrazu
#plt.imshow(image_training)
#plt.title(""Training Data"")#
##plt.axis(""off"")
#plt.show()"
5XG77D7x,lcdOKskeleton.ino,DrAungWinHtut,Arduino,Wednesday 29th of May 2024 09:50:55 AM CDT,"const int db4 = 13;
const int db5 = 12;
const int db6 = 11;
const int db7 = 10;
const int en = 9;
const int rs = 8;

void setup() {
  pinMode(db4, OUTPUT);
  pinMode(db5, OUTPUT);
  pinMode(db6, OUTPUT);
  pinMode(db7, OUTPUT);
  pinMode(rs, OUTPUT);
  pinMode(en, OUTPUT);
  
  initlcd();
  	// Print 'G'
	sendMachineCode(1, 0, 1, 0, 0, 0, 1, 1, 1);
	// Print 'R'
	sendMachineCode(1, 0, 1, 0, 1, 0, 0, 1, 0);
  // Print 'E'
	sendMachineCode(1, 0, 1, 0, 0, 0, 1, 0, 1);
	// Print 'E'
	sendMachineCode(1, 0, 1, 0, 0, 0, 1, 0, 1);
  // Print 'N'
	sendMachineCode(1, 0, 1, 0, 0, 1, 1, 1, 0);
	
}

void loop() {

}

void send4bits(int rrs, int b7, int b6, int b5, int b4) {
  digitalWrite(rs, rrs);
  digitalWrite(db4, b4);
  digitalWrite(db5, b5);
  digitalWrite(db6, b6);
  digitalWrite(db7, b7);

  // Enable pulse
  digitalWrite(en, HIGH);
  delay(1); 
  digitalWrite(en, LOW);
  delay(1);
 
}

void sendMachineCode(int rrs, int b7, int b6, int b5, int b4, int b3, int b2, int b1, int b0) {
  // Send higher nibble
  send4bits(rrs, b7, b6, b5, b4);
  // Send lower nibble
  send4bits(rrs, b3, b2, b1, b0);
 
}

void initlcd() { 
  // Function set: 4-bit mode
  send4bits(0, 0, 0, 1, 0);
  // Now the LCD is in 4-bit mode, we can send full commands
  sendMachineCode(0, 0, 0, 0, 0, 0, 0, 0, 1); // Clear display
  sendMachineCode(0, 0, 0, 0, 0, 0, 0, 1, 0); // Return home
  sendMachineCode(0, 0, 0, 0, 0, 1, 1, 0, 0); // Display ON/OFF control: display on, cursor off, blink off
}


"
sHbhgJiq,install-software-debian.sh,Wrigs,Bash,Wednesday 29th of May 2024 09:42:29 AM CDT,"#!/bin/bash

set -eu -o pipefail # fail on error and report it, debug all lines

sudo -n true
test $? -eq 0 || exit 1 ""you should have sudo privilege to run this script""

echo installing the must-have pre-requisites
while read -r p ; do sudo apt-get install -y $p ; done < <(cat << ""EOF""
    ipython3
    python3-pip
    python3-tk
    python-simpy-gui
    jupyter-notebook
    qalculate-gtk
    meld
    sublime-text
    lua5.4
    scala
    sqlite3    
EOF
)

echo installing the nice-to-have pre-requisites
echo you have 5 seconds to proceed ...
echo or
echo hit Ctrl+C to quit
echo -e ""\n""
sleep 6

sudo apt-get install -y tig

"
n6p8xnNh,install-nala.sh,Wrigs,Bash,Wednesday 29th of May 2024 09:41:26 AM CDT,"# https://gitlab.com/volian/nala/-/releases

echo ""deb [arch=amd64,arm64,armhf] http://deb.volian.org/volian/ scar main"" | sudo tee /etc/apt/sources.list.d/volian-archive-scar-unstable.list
wget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg > /dev/null
sudo apt update && sudo apt install nala


## Instructions
# https://linuxiac.com/nala-apt-command-frontend/
# https://trendoceans.com/nala-package-manager/
"
LqhS0Ku9,Dictionaries - Task 4 Orders,Serggo84,C#,Wednesday 29th of May 2024 09:28:13 AM CDT,"using System;
using System.Globalization;
using System.Text;

namespace exercises
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, decimal> dict = new Dictionary<string, decimal>();
            Dictionary<string, int> dict2 = new Dictionary<string, int>();

            while (true)
            {
                string input = Console.ReadLine();
                if (input == ""buy"")
                {
                    break;
                }
                string[] splittedInput = input.Split().ToArray();
                string productName = splittedInput[0];
                decimal productPrice = decimal.Parse(splittedInput[1]);
                int productQuantity = int.Parse(splittedInput[2]);


                if (!dict.ContainsKey(productName))
                {
                    dict.Add(productName, productPrice);
                    dict2.Add(productName, productQuantity);
                }
                else
                {
                    dict[productName] = productPrice;
                    dict2[productName] += productQuantity;

                }

            }
            
            Dictionary<string, decimal> res2 = dict.ToDictionary(orig => orig.Key, orig => orig.Value * dict2[orig.Key]);
            foreach (var item in res2)
            {
                Console.WriteLine($""{item.Key} -> {item.Value}"");
            }
        }
    }
}
"
hdPxE70e,Untitled,NukeVsCity,Lua,Wednesday 29th of May 2024 09:21:27 AM CDT,projslayr
iD7fe622,Calculator,horozov86,Python,Wednesday 29th of May 2024 09:18:03 AM CDT,"import tkinter
from tkinter import *

root = Tk()
root.title(""Calculator"")
root.geometry(""570x600+100+200"")
root.resizable(False, False)
root.configure(bg=""#17161b"")

equation = """"

def show(value):
    
    global equation
    equation+= value
    lable_result.config(text=equation)


lable_result = Label(root,width=25,height=2,text="""",font=(""arial"",30))
lable_result.pack()

Button(root,text""C"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#3697f5"", command=lambda: clear()).place(x=10,y=100)
Button(root,text""/"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"", command=lambda: show(""/"")).place(x=150,y=100)
Button(root,text""%"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=290,y=100)
Button(root,text""*"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=430,y=100)


Button(root,text""7"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=10,y=200)
Button(root,text""8"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=150,y=200)
Button(root,text""9"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=290,y=200)
Button(root,text""-"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=430,y=200)


Button(root,text""4"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=10,y=300)
Button(root,text""5"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=150,y=300)
Button(root,text""6"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=290,y=300)
Button(root,text""+"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=430,y=300)


Button(root,text""1"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=10,y=400)
Button(root,text""2"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=150,y=400)
Button(root,text""3"", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=290,y=400)
Button(root,text""0"", width=11, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=10,y=500)


Button(root,text""."", width=5, height=1, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#2a2d36"").place(x=290,y=500)
Button(root,text""="", width=5, height=3, font=(""arial"",30,""bold""), bd=1, fg=""#fff"",bg=""#fe9037"").place(x=430,y=400)

root.mainloop()"
yNr2Ws9G,2024-05-29 Clipart Page,TheiPhoneFan,HTML,Wednesday 29th of May 2024 09:12:42 AM CDT,"<!-- Created By Jordan's Blog On 2024-05-29 -->
<!-- Clipart 6.0.5, 2024-2024 -->
<!DOCTYPE html>
<html>

<head>
    <style>
        h3 {
            text-align: center;
        }

        a {
            color: black;
        }

        img.clipart-img {
            height: 200px;
        }

        .all-clipart-img {
            border: 1px solid black;
            border-radius:16px;
            width: 350px;
            max-width: 100%;
        }
    </style>
    <!-- External Font -->
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <!-- Stylesheet Link -->
    <link rel=""stylesheet"" href=""./theme/style.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <!-- Favicon Image Link -->
    <link rel=""icon"" type=""image/x-png"" href=""./logos/js-blog-favicon.png"">
    <!-- Scales Content To Fit -->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <!-- Enables Unicode Characters To Be Displayed -->
    <meta charset=""UTF-8"">
    <!-- SEO -->
    <title>Free Clipart Collection by Jordan's Blog: Flat Designs, Shadows, and Gradients</title>
    <meta name=""description"" content=""Explore Jordans's Blog free clipart collection featuring flat designs, shadows, and gradients. Download clipart for personal or commercial use, with proper credit required."" />
    <meta name=""keywords"" content=""Clipart, free clipart, clipart collection, flat clipart, gradient clipart, shadow clipart, download clipart, personal use, commercial use, credit required"" />
</head>

<body class=""white-bg"">
    <!-- Page Top -->
    <div id=""page-top""></div>

    <!-- Top Bar -->
    <div class=""navbar"">
        <!-- Site Title -->
        <a href=""./index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>Jordan's Blog</b></a>

        <!-- Home -->
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://pastebin.com/Pw823uL7"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""./thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""./wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Recent Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">New Articles <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <iframe src=""./recent-posts.html"" height=""390"" width=""250""></iframe>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""./scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""./changelog.html"">Changelog</a>
                <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""./previews.html"">Previews</a>
                <a href=""./report-an-issue.html"" style=""border-radius: 0px 0px 16px 16px;"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            
            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""./website-survey.html"" style=""border-radius: 0px 0px 16px 16px;"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">‚ò∞</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">Jordan's Blog</h3>
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""./channel-related.html""><b>Channel Related</b></a>
            <a href=""https://pastebin.com/Pw823uL7"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""./thumbnail-design.html"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""./content.html""><b>Content</b></a>
            <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""./wallpapers.html"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>New Articles</summary>
            <iframe src=""./recent-posts.html"" height=""390"" width=""275""></iframe>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""./scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""./scam-info-updates.html"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""./site-related.html""><b>Site Related</b></a>
            <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""./changelog.html"">Changelog</a>
            <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""./previews.html"">Previews</a>
            <a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""./help-contact.html""><b>Help & Contact</b></a>
            <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>
    </div>

    <!-- Displayes If JavaScript Is Disabled -->
    <noscript>
        <img src=""./theme/critical-error.png"" style=""border-radius:4px;"" width=""30px"">
        Your browser does not support JavaScript or it is disabled. To use all site features, please enable JavaScript or try another browser.
    </noscript>
    <div class=""header"">
        <!-- Page Title & Info -->
        <h1>Clipart</h1>
        <p>On this page, you can view my clipart I have design. It is all free, but you must credit this page.</p>
        <!-- Twitter Share Button -->
        <!-- Twitter Share Button -->
        <div class=""twitter-share-button"">
            <a href=""https://twitter.com/share?ref_src=twsrc%5Etfw"" class=""twitter-share-button"" data-size=""large"" data-related=""jordans_blog"" data-show-count=""false"">Tweet</a>
            <script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""></script>
        </div>
    </div>

    <!-- Page Content -->
    <!-- Download Section -->
    <div class=""flex-container"" style=""justify-content: left;"">
        <div>
            <img src=""./assets/clipart/all-clipart.png"" class=""all-clipart-img"">
        </div>

        <div>
            <h1 style=""color:black;"">Download Clipart For Use</h1>
            <p style=""color:black;"">If you wish to use my clipart, you can download it <a href=""https://www.dropbox.com/scl/fi/knk7bzfshtrq8vxcyql9m/clipart.zip?rlkey=p0mldoi9jk65iwvmo08wn2iua&dl=0"" style=""color:black;"">here</a>.
            <br>However, you must comply with <a href=""./assets/clipart/license.txt"" style=""color:black;"">these terms</a>.
        </div>
    </div>

    <div class=""flex-container"">
        <!-- A-Z Clipart -->
        <div>
            <img src=""./assets/clipart/a-z-clipart.png"" class=""clipart-img"" alt=""Clipart of blue green background displaying the text A through Z"">
        </div>

        <!-- Article Clipart -->
        <div>
            <img src=""./assets/clipart/article-clipart.png"" class=""clipart-img"" alt=""A gray rectangle with a black lines. Clipart of a newspaper article."">
        </div>

        <!-- Blog Box Clipart -->
        <div>
            <img src=""./assets/clipart/blog-box-clipart.png"" class=""clipart-img"" alt=""Clipart of a speech bubble with the word blog inside representing an online blog."">
        </div>

        <!-- Camera Clipart -->
        <div>
            <img src=""./assets/clipart/camera-clipart.png"" class=""clipart-img"" alt=""Clipart of a gray camera with black & blue lens, with a shutter button & yellow flash."">
        </div>

        <!-- Color Palette Clipart -->
        <div>
            <img src=""./assets/clipart/color-palette-clipart.png"" class=""clipart-img"" alt=""A clipart of a color palette showcasing a variety of vibrant colors."">
        </div>

        <!-- Critical Clipart -->
        <div>
            <img src=""./assets/clipart/critical-clipart.png"" class=""clipart-img"" alt=""Clipart of a red rectangle featuring a white exclamation mark, indicating a warning."">
        </div>

        <!-- Envelope Clipart -->
        <div>
            <img src=""./assets/clipart/envelope-clipart.png"" class=""clipart-img"" alt=""Clipart image: A white triangle on a gray background, resembling an envelope."">
        </div>

        <!-- Floppy Disk Clipart -->
        <div>
            <img src=""./assets/clipart/floppy-disk-clipart.png"" class=""clipart-img"" alt=""Black & white floppy disk clipart symbolizing a save icon."">
        </div>

        <!-- Folder Clipart -->
        <div>
            <img src=""./assets/clipart/folder-clipart.png"" class=""clipart-img"" alt=""Yellow folder clipart icon, symbolizing a computer folder."">
        </div>

        <!-- Instant Film Clipart -->
        <div>
            <img src=""./assets/clipart/instant-film-clipart.png"" class=""clipart-img"" alt=""A white square on a black background, resembling instant film."">
        </div>

        <!-- Report Clipart -->
        <div>
            <img src=""./assets/clipart/report-clipart.png"" class=""clipart-img"" alt=""Clipart of a report button labeled report - a button used to report something."">
        </div>

        <!-- Speech Box Clipart -->
        <div>
            <img src=""./assets/clipart/speech-box-clipart.png"" class=""clipart-img"" alt=""Clipart of a blue-green speech bubble."">
        </div>

        <!-- Speech Box Clipart (Alternate) -->
        <div>
            <img src=""./assets/clipart/speech-box-clipart2.png"" class=""clipart-img"" alt=""Clipart of a light pastel blue speech bubble."">
        </div>

        <!-- Survey Clipart -->
        <div>
            <img src=""./assets/clipart/survey-clipart.png"" class=""clipart-img"" alt=""Clipart of a gray survey with purple response boxes."">
        </div>

        <!-- Top Hits Clipart-->
        <div>
            <img src=""./assets/clipart/top-hits-clipart.png"" class=""clipart-img"" alt=""Clipart of a numbered list with red backgrounds."">
        </div>
    </div>
    <!-- Divider -->
    <hr style=""color:black;background-color:black;"">

    <!-- Back To Top Button -->
    <div class=""topbtn"">
        <a href=""#page-top"">
            <img src=""./theme/action-icons/to-top.png"" alt=""back to the top of the page button"" style=""border-radius:20%;"" width=""40px"">
        </a>
    </div>

    <script>
        // JavaScript function to toggle the sidebar //
        function toggleSidebar() {
            var sidebar = document.getElementById('mySidebar');
            if (sidebar.style.left === '0px') {
                sidebar.style.left = '-310px';
                document.getElementsByClassName('openbtn')[0].innerHTML = '‚ò∞';
            } else {
                sidebar.style.left = '0px';
                document.getElementsByClassName('openbtn')[0].innerHTML = '√ó';
            }
        }
    </script>
</body>

</html>"
8ty37J3A,lcdOK.ino,DrAungWinHtut,Arduino,Wednesday 29th of May 2024 09:07:35 AM CDT,"

// Define LCD pin connections
const int rs = 8;
const int en = 9;
const int db4 = 13;
const int db5 = 12;
const int db6 = 11;
const int db7 = 10;

void pulseEnable() {
  digitalWrite(en, LOW);
  delayMicroseconds(1);
  digitalWrite(en, HIGH);
  delayMicroseconds(1);    // Enable pulse must be >450ns
  digitalWrite(en, LOW);
  delayMicroseconds(100);   // Commands need > 37us to settle
}

void sendNibble(int value) {
  digitalWrite(db4, (value >> 0) & 0x01);
  digitalWrite(db5, (value >> 1) & 0x01);
  digitalWrite(db6, (value >> 2) & 0x01);
  digitalWrite(db7, (value >> 3) & 0x01);
  pulseEnable();
}

void sendByte(int value, int mode) {
  digitalWrite(rs, mode);
  sendNibble(value >> 4);
  sendNibble(value & 0x0F);
}
void initLCD() {
  pinMode(rs, OUTPUT);
  pinMode(en, OUTPUT);
  pinMode(db4, OUTPUT);
  pinMode(db5, OUTPUT);
  pinMode(db6, OUTPUT);
  pinMode(db7, OUTPUT);

  delay(50); 
  sendNibble(0x03);
  delay(5);
  sendNibble(0x03);
  delayMicroseconds(150);
  sendNibble(0x03);
  sendNibble(0x02); // Switch to 4-bit mode

  sendByte(0x28, 0); // 4-bit mode, 2 lines, 5x8 dots
  sendByte(0x0C, 0); // Display on, cursor off, blink off
  sendByte(0x01, 0); // Clear display
  delay(2); // Clear command requires a delay
  sendByte(0x06, 0); // Increment cursor
}

void setup() {
  initLCD();
  sendByte(0x80, 0); // Set cursor to the beginning of the first line
  sendByte('G', 1);  // Send 'H'
  sendByte('R', 1); 
  sendByte('E', 1); 
  sendByte('E', 1); 
  sendByte('N', 1); 
  sendByte(' ', 1); 
  sendByte('H', 1); 
  sendByte('A', 1); 
  sendByte('C', 1); 
  sendByte('K', 1); 
  sendByte('E', 1); 
  sendByte('R', 1); 
  sendByte('S', 1); 
}

void loop() {
  // Nothing to do here
}
"
qUTNXEq8,Untitled,MeehoweCK,C++,Wednesday 29th of May 2024 08:14:00 AM CDT,"#include <iostream>

class Plansza {
	int size{ 5 };
	int* tab{ new int[5] };
public:
	Plansza() {
		for (int i{}; i < size; ++i) {
			tab[i] = i;
		}
	}
	~Plansza() { if (tab) delete[] tab; }
	void print() const {
		for (auto i{ 0 }; i < size; ++i) {
			std::cout << tab[i] << '\t';
		}
		std::cout << std::endl;
	}
	void dodajElement(int nowy) {
		if (size == 0) {
			tab = new int[1];
			tab[0] = nowy;
		}
		else {
			int* temp{ new int[size + 1] };
			for (auto i{ 0 }; i < size; ++i) {
				temp[i] = tab[i];
			}
			delete[] tab;
			temp[size] = nowy;
			++size;
			tab = temp;
		}
	}
};

int main() {
	Plansza p;
	p.print();
	p.dodajElement(10);
	p.print();
	return 0;
}"
GSYVK3aw,Send on Behalf of on shared mailbox,goezler,PowerShell,Wednesday 29th of May 2024 08:02:56 AM CDT,"Set-mailbox mailbox@xyz.com -GrantSendOnBehalfTo @{add=""usertoadd""}
"
RibFFfV6,üí∏G2A.com Free Gift Card Guide 2024 Mayüí∞,buch,Python,Wednesday 29th of May 2024 07:57:05 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_3460306.pdf

Working as of:

29 May 2024"
qGp1Fsdu,Write to InfluxDB,poodad,Perl,Wednesday 29th of May 2024 07:51:22 AM CDT,"use LWP::UserAgent;
use HTTP::Request::Common qw(POST GET DELETE);

sub WriteInflux {
    my $server = shift;
    my $db = shift;
    my @dat = @_;
    
    my $body = join ""\n"", @dat;
    
    my $url = ""http://$server:8086/write?db=$db&precision=s"";
    
    my $ua = LWP::UserAgent->new;
    my $req = (POST $url, Content=>$body);
    my $res = $ua->request($req);
    
    print ""code: "", $res->code, ""\n"";
    print ""content: "", $res->content, ""\n"";
}"
S3ti0k0G,Parse NPS logs,poodad,Perl,Wednesday 29th of May 2024 07:46:31 AM CDT,"use strict;

my @files = sort glob(""//$ARGV[0]/c\$/windows/system32/logfiles/in*.log"");

my $file = pop @files;

print STDERR ""Using file $file\n"";

open FILE, ""$file"" or die ""$file: $!\n"";

seek FILE, -2000000, 2;						# seek to the a bit before the end
<FILE>;										# read the partial line

print ""<table border=1>\n"";
print ""<TH>ComputerName<TH>ServiceName<TH>Record-Date<TH>Record-Time<TH>Packet-Type"";
print ""<TH>User-Name"";
print ""<th>Fully-Qualified-User-Name"";
print ""<TH>Called-Station-ID<TH>Calling-Station-ID"";
print ""<TH>Callback-Number<TH>Framed-IP-Address<TH>NAS-Identifier<TH>NAS-IP-Address<TH>NAS-Port"";
print ""<TH>Client-Vendor<TH>Client-IP-Address<TH>Client-Friendly-Name<TH>Event-Timestamp"";
print ""<TH>Port-Limit<TH>NAS-Port-Type<TH>Connect-Info<TH>Framed-Protocol<TH>Service-Type"";
print ""<TH>Authentication-Type<TH>NP-Policy-Name<TH>Reason-Code<TH>Class<TH>Session-Timeout"";
print ""<TH>Idle-Timeout<TH>Termination-Action<TH>EAP-Friendly-Name<TH>Acct-Status-Type"";
print ""<TH>Acct-Delay-Time<TH>Acct-Input-Octets<TH>Acct-Output-Octets<TH>Acct-Session-Id"";
print ""<TH>Acct-Authentic<TH>Acct-Session-Time<TH>Acct-Input-Packets<TH>Acct-Output-Packets"";
print ""<TH>Acct-Terminate-Cause<TH>Acct-Multi-Ssn-ID<TH>Acct-Link-Count<TH>Acct-Interim-Interval"";
print ""<TH>Tunnel-Type<TH>Tunnel-Medium-Type<TH>Tunnel-Client-Endpt<TH>Tunnel-Server-Endpt"";
print ""<TH>Acct-Tunnel-Connection<TH>Tunnel-Pvt-Group-ID<TH>Tunnel-Assignment-ID"";
print ""<TH>Tunnel-Preference<TH>MS-Acct-Auth-Type<TH>MS-Acct-EAP-Type<TH>MS-RAS-Version"";
print ""<TH>MS-RAS-Vendor<TH>MS-CHAP-Error<TH>MS-CHAP-Domain<TH>MS-MPPE-Encryption-Types"";
print ""<TH>MS-MPPE-Encryption-Policy"";


while(<FILE>) {

	chomp;
	
	
	my @tmp = split /,/;
	$tmp[4] = Fix4($tmp[4]);
	$tmp[23] = Fix23($tmp[23]);
	$tmp[25] = Fix25($tmp[25]);

	print ""<tr>"";
	foreach my $f (@tmp) {
		$f = ""&nbsp;"" unless $f;
		print ""<td>$f"";
	}
	print ""\n"";
}

close FILE;


exit 0;

sub Fix4 {
	my $t = shift;

	return ""1 Accept-Request"" if $t == 1;
	return ""2 Access-Accept"" if $t == 2;
	return ""3 Access-Reject"" if $t == 3;
	return ""4 Accounting-Request"" if $t == 4;
	return $t;
}


sub Fix23 {
	my $t = shift;

	return ""1 PAP"" if $t == 1;
	return ""2 CHAP"" if $t == 2;
	return ""3 MS-CHAP"" if $t == 3;
	return ""4 MS-CHAP v2"" if $t == 4;
	return ""5 EAP"" if $t == 5;
	return ""7 None"" if $t == 7;
	return ""8 Custom"" if $t == 8;
	return $t;
}

sub Fix25 {

	my $t = shift;
	return ""IAS_SUCCESS "" if $t == 0;
	return ""IAS_INTERNAL_ERROR "" if $t == 1;
	return ""IAS_ACCESS_DENIED "" if $t == 2;
	return ""IAS_MALFORMED_REQUEST "" if $t == 3;
	return ""IAS_GLOBAL_CATALOG_UNAVAILABLE "" if $t == 4;
	return ""IAS_DOMAIN_UNAVAILABLE "" if $t == 5;
	return ""IAS_SERVER_UNAVAILABLE "" if $t == 6;
	return ""IAS_NO_SUCH_DOMAIN "" if $t == 7;
	return ""IAS_NO_SUCH_USER "" if $t == 8;
	return ""IAS_AUTH_FAILURE "" if $t == 16;
	return ""IAS_CHANGE_PASSWORD_FAILURE "" if $t == 17;
	return ""IAS_UNSUPPORTED_AUTH_TYPE "" if $t == 18;
	return ""IAS_LOCAL_USERS_ONLY "" if $t == 32;
	return ""IAS_PASSWORD_MUST_CHANGE "" if $t == 33;
	return ""IAS_ACCOUNT_DISABLED "" if $t == 34;
	return ""IAS_ACCOUNT_EXPIRED "" if $t == 35;
	return ""IAS_ACCOUNT_LOCKED_OUT "" if $t == 36;
	return ""IAS_INVALID_LOGON_HOURS "" if $t == 37;
	return ""IAS_ACCOUNT_RESTRICTION "" if $t == 38;
	return ""IAS_NO_POLICY_MATCH "" if $t == 48;
	return ""IAS_DIALIN_LOCKED_OUT "" if $t == 64;
	return ""IAS_DIALIN_DISABLED "" if $t == 65;
	return ""IAS_INVALID_AUTH_TYPE "" if $t == 66;
	return ""IAS_INVALID_CALLING_STATION "" if $t == 67;
	return ""IAS_INVALID_DIALIN_HOURS "" if $t == 68;
	return ""IAS_INVALID_CALLED_STATION "" if $t == 69;
	return ""IAS_INVALID_PORT_TYPE "" if $t == 70;
	return ""IAS_INVALID_RESTRICTION "" if $t == 71;
	return ""IAS_NO_RECORD "" if $t == 80;
	return ""IAS_SESSION_TIMEOUT "" if $t == 96;
	return ""IAS_UNEXPECTED_REQUEST "" if $t == 97;
	return $t;
}
"
eNc9x5Ab,ü§ëG2A.com Free Gift Card Guide 2024 Mayüí∞,Garoam,Python,Wednesday 29th of May 2024 07:44:58 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_3460306.pdf

Working as of:

29 May 2024"
6mGWWXLE,üéâG2A.com Free Gift Card Guide 2024 Mayüî•,atakan1983,Python,Wednesday 29th of May 2024 07:38:54 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_3460306.pdf

Working as of:

29 May 2024"
Qk0rG27S,Nearest Exit from Entrance in Maze,jayati,C++,Wednesday 29th of May 2024 07:37:13 AM CDT,"class Solution {
public:
    
    int nearestExit(vector<vector<char>>& maze, vector<int>& entrance) {
        queue<pair<int,int>> q;
        int n=maze.size();
        int m=maze[0].size();
        q.push({entrance[0],entrance[1]});
        int dx[4]={-1,0,1,0};
        int dy[4]={0,1,0,-1};
        int step=0;
        maze[entrance[0]][entrance[1]]='+';
        while(!q.empty())
        {
            int s= q.size();
            while(s--)
            {
                auto curr = q.front();
                q.pop();
                int i=curr.first;
                int j=curr.second;
                if(!(i==entrance[0] && j==entrance[1]) && (i==0 || j==0 || i==n-1 || j==m-1))
                {
                    return step;
                }
                for(int k=0;k<4;k++)
                {
                     int n_i = i+dx[k];
                     int n_j = j+dy[k];

                     if((n_i>=0 && n_i<n) && (n_j>=0 && n_j<m) && maze[n_i][n_j]!='+')
                     {
                        maze[n_i][n_j]='+';
                        q.push({n_i,n_j});
                     }
                }
            }
            step++;
        }
        return -1;
        

        
    }
};"
w8x6tRiJ,üí∏G2A.com Free Gift Card Guide 2024 Mayüî•,lookos13,Python,Wednesday 29th of May 2024 07:32:50 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_3460306.pdf

Working as of:

29 May 2024"
8HNbPz6q,DRIVE-MEDIA-SEARCH-PLAY.pyw,Najeebsk,Python,Wednesday 29th of May 2024 07:27:52 AM CDT,"import os
import tkinter as tk
from tkinter import ttk, scrolledtext
import vlc

class MediaSearchApp:
    def __init__(self, root):
        self.root = root
        self.root.title(""Media File Search and Play"")
        self.root.configure(bg='#f0f8ff')  # Set background color

        # Create frame for the top row
        top_frame = tk.Frame(root, bg='#f0f8ff')
        top_frame.pack(pady=10)

        # Create drive selection label and combobox
        self.drive_label = tk.Label(top_frame, text=""Select Drive:"", bg='#f0f8ff', fg='#00008b')
        self.drive_label.pack(side=tk.LEFT, padx=5)
        
        self.drive_list = ttk.Combobox(top_frame, values=['C:\\', 'D:\\', 'E:\\', 'F:\\', 'G\\', 'H\\', 'I\\', 'J\\', 'K\\'])
        self.drive_list.pack(side=tk.LEFT, padx=5)

        # Create file extension input field
        self.ext_label = tk.Label(top_frame, text=""File Extensions (comma-separated):"", bg='#f0f8ff', fg='#00008b')
        self.ext_label.pack(side=tk.LEFT, padx=5)
        
        self.ext_entry = tk.Entry(top_frame)
        self.ext_entry.pack(side=tk.LEFT, padx=5)
        self.ext_entry.insert(0, "".mp4, .mkv, .avi, .flv, .mp3"")  # Default extensions

        # Create search button
        self.search_button = tk.Button(top_frame, text=""Search Media Files"", command=self.search_files, bg='#008b8b', fg='#ffffff')
        self.search_button.pack(side=tk.LEFT, padx=5)

        # Create scrolled text to display search results
        self.result_text = scrolledtext.ScrolledText(root, width=100, height=20, bg='#e6e6fa', fg='#00008b')
        self.result_text.pack(pady=10)

        # Create frame for the bottom row of buttons
        bottom_frame = tk.Frame(root, bg='#f0f8ff')
        bottom_frame.pack(pady=10)

        # Create play button
        self.play_button = tk.Button(bottom_frame, text=""Play Selected File"", command=self.play_file, bg='#32cd32', fg='#ffffff')
        self.play_button.pack(side=tk.LEFT, padx=5)

        # Create stop button
        self.stop_button = tk.Button(bottom_frame, text=""Stop VLC Player"", command=self.stop_player, bg='#b22222', fg='#ffffff')
        self.stop_button.pack(side=tk.LEFT, padx=5)

        # Create save list button
        self.save_button = tk.Button(bottom_frame, text=""Save List"", command=self.save_list, bg='#ff8c00', fg='#ffffff')
        self.save_button.pack(side=tk.LEFT, padx=5)

        # Create volume control slider
        self.volume_up = tk.Scale(bottom_frame, from_=0, to=200, orient=tk.HORIZONTAL, label="""", bg='#f0f8ff', fg='#00008b', command=self.set_volume)
        self.volume_up.pack(side=tk.LEFT, padx=5)
        self.volume_up.set(50)  # Set initial volume to 50%

        self.player = vlc.MediaPlayer()  # Initialize VLC player instance

    def search_files(self):
        self.result_text.delete(1.0, tk.END)  # Clear previous results
        drive = self.drive_list.get()
        if not drive:
            self.result_text.insert(tk.END, ""Please select a drive.\n"")
            return
        
        extensions = self.ext_entry.get().split(',')
        extensions = [ext.strip() for ext in extensions]
        found_files = []

        for root, dirs, files in os.walk(drive):
            for file in files:
                if any(file.endswith(ext) for ext in extensions):
                    found_files.append(os.path.join(root, file))

        if not found_files:
            self.result_text.insert(tk.END, ""No media files found.\n"")
        else:
            for file in found_files:
                self.result_text.insert(tk.END, file + '\n')

    def save_list(self):
        found_files = self.result_text.get(1.0, tk.END).strip().split('\n')
        if found_files and found_files[0] != ""No media files found."":
            with open(""List.txt"", ""w"") as file:
                for line in found_files:
                    file.write(line + ""\n"")
            self.result_text.insert(tk.END, ""\nResults saved to List.txt\n"")
        else:
            self.result_text.insert(tk.END, ""\nNo results to save.\n"")

    def play_file(self):
        try:
            selected_file = self.result_text.get(tk.SEL_FIRST, tk.SEL_LAST).strip()
            if selected_file:
                if self.player.is_playing():
                    self.player.stop()  # Stop any currently playing media
                self.player.set_media(vlc.Media(selected_file))
                self.player.play()
                self.set_volume(self.volume_up.get())
            else:
                self.result_text.insert(tk.END, ""\nNo file selected. Please highlight a file to play.\n"")
        except tk.TclError:
            self.result_text.insert(tk.END, ""\nNo file selected. Please highlight a file to play.\n"")

    def stop_player(self):
        if self.player:
            self.player.stop()

    def set_volume(self, volume):
        if self.player:
            self.player.audio_set_volume(int(volume))

if __name__ == ""__main__"":
    root = tk.Tk()
    app = MediaSearchApp(root)
    root.mainloop()
"
A68LAP5e,üí∞G2A.com Free Gift Card Guide 2024 Mayüî•,pestinha,Python,Wednesday 29th of May 2024 07:26:42 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_3460306.pdf

Working as of:

29 May 2024"
2k4A9pNr,couch (v2),Virtual_Dndz,Lua,Wednesday 29th of May 2024 07:20:05 AM CDT,"{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 2,0,12,4,4,14,texture = ""hardened_clay_stained_cyan"" },
    { 1,3,11,16,4,16,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,10,16,7,16,texture = ""wool_colored_blue"" },
    { 0,7,11,16,8,16,texture = ""wool_colored_blue"" },
    { 0,8,12,16,9,16,texture = ""wool_colored_blue"" },
    { 0,9,13,3,14,16,texture = ""wool_colored_blue"" },
    { 3,9,13,6,11,16,texture = ""wool_colored_blue"" },
    { 3,11,13,5,12,16,texture = ""wool_colored_blue"" },
    { 3,12,13,4,13,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 2,0,12,4,4,14,texture = ""hardened_clay_stained_cyan"" },
    { 1,3,0,16,4,15,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,0,16,9,16,texture = ""wool_colored_blue"" },
    { 0,9,0,3,14,16,texture = ""wool_colored_blue"" },
    { 3,9,0,6,11,16,texture = ""wool_colored_blue"" },
    { 6,9,9,16,12,16,texture = ""wool_colored_blue"" },
    { 3,11,0,5,12,16,texture = ""wool_colored_blue"" },
    { 5,11,9,16,12,16,texture = ""wool_colored_blue"" },
    { 3,12,0,4,13,16,texture = ""wool_colored_blue"" },
    { 4,12,10,16,14,16,texture = ""wool_colored_blue"" },
    { 3,13,10,16,14,16,texture = ""wool_colored_blue"" },
    { 6,14,11,16,16,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 6,0,12,16,1,16,texture = ""wool_colored_blue"" },
    { 6,1,13,16,2,16,texture = ""wool_colored_blue"" },
    { 6,2,14,16,3,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,3,11,16,4,16,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,10,16,7,16,texture = ""wool_colored_blue"" },
    { 0,7,11,16,8,16,texture = ""wool_colored_blue"" },
    { 0,8,12,16,9,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,3,0,16,4,15,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,0,16,9,16,texture = ""wool_colored_blue"" },
    { 0,9,9,16,12,16,texture = ""wool_colored_blue"" },
    { 0,12,10,16,14,16,texture = ""wool_colored_blue"" },
    { 0,14,11,16,16,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,0,12,16,1,16,texture = ""wool_colored_blue"" },
    { 0,1,13,16,2,16,texture = ""wool_colored_blue"" },
    { 0,2,14,16,3,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,3,11,16,4,16,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,10,16,7,16,texture = ""wool_colored_blue"" },
    { 0,7,11,16,8,16,texture = ""wool_colored_blue"" },
    { 0,8,12,16,9,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,3,0,16,4,15,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,0,16,9,16,texture = ""wool_colored_blue"" },
    { 0,9,9,16,12,16,texture = ""wool_colored_blue"" },
    { 0,12,10,16,14,16,texture = ""wool_colored_blue"" },
    { 0,14,11,16,16,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,0,12,16,1,16,texture = ""wool_colored_blue"" },
    { 0,1,13,16,2,16,texture = ""wool_colored_blue"" },
    { 0,2,14,16,3,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 12,0,12,14,4,14,texture = ""hardened_clay_stained_cyan"" },
    { 0,3,11,15,4,16,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,10,16,7,16,texture = ""wool_colored_blue"" },
    { 0,7,11,16,8,16,texture = ""wool_colored_blue"" },
    { 0,8,12,16,9,16,texture = ""wool_colored_blue"" },
    { 10,9,13,16,11,16,texture = ""wool_colored_blue"" },
    { 11,11,13,16,12,16,texture = ""wool_colored_blue"" },
    { 12,12,13,16,13,16,texture = ""wool_colored_blue"" },
    { 13,13,13,16,14,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 12,0,12,14,4,14,texture = ""hardened_clay_stained_cyan"" },
    { 0,3,0,15,4,15,texture = ""hardened_clay_stained_cyan"" },
    { 0,4,0,16,9,16,texture = ""wool_colored_blue"" },
    { 0,9,9,16,12,16,texture = ""wool_colored_blue"" },
    { 10,9,0,16,11,16,texture = ""wool_colored_blue"" },
    { 11,11,0,16,12,16,texture = ""wool_colored_blue"" },
    { 0,12,10,16,14,16,texture = ""wool_colored_blue"" },
    { 12,12,0,16,13,16,texture = ""wool_colored_blue"" },
    { 13,13,0,16,14,16,texture = ""wool_colored_blue"" },
    { 0,14,11,10,16,16,texture = ""wool_colored_blue"" },
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
  }
},

{
  label = ""–¥–∏–≤–∞–Ω"",
  tooltip = ""–¥–∏–≤–∞–Ω"",
  shapes = {
    { 0,0,12,10,1,16,texture = ""wool_colored_blue"" },
    { 0,1,13,10,2,16,texture = ""wool_colored_blue"" },
    { 0,2,14,10,3,16,texture = ""wool_colored_blue"" },
  }
}"
iXYnYgzh,FullScreenPlayer con sonido/mute,serjuzu,Dart,Wednesday 29th of May 2024 07:18:09 AM CDT,"import 'package:flutter/material.dart';
import 'package:flutter_toktik/presentation/widgets/video/video_background.dart';
import 'package:video_player/video_player.dart';

class FullScreenPlayer extends StatefulWidget {
  final String videoUrl;
  final String caption;

  const FullScreenPlayer(
      {super.key, required this.videoUrl, required this.caption});

  @override
  State<FullScreenPlayer> createState() => _FullScreenPlayerState();
}

class _FullScreenPlayerState extends State<FullScreenPlayer> {
  late VideoPlayerController controller;
  bool isMuted = true; // Variable para trackear el estado del mute

  @override
  void initState() {
    super.initState();

    controller = VideoPlayerController.asset(widget.videoUrl)
      ..setVolume(0)
      ..setLooping(true)
      ..play();
  }

  @override
  void dispose() {
    controller.dispose();
    super.dispose();
  }

  void _toggleVolume() {
    setState(() {
      if (isMuted) {
        controller.setVolume(1.0); // Setea el volumen al que haya en el dispositivo
      } else {
        controller.setVolume(0); // Mutea el video
      }
      isMuted = !isMuted;
    });
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
      future: controller.initialize(),
      builder: (context, snapshot) {
        if (snapshot.connectionState != ConnectionState.done) {
          return const Center(
            child: CircularProgressIndicator(
              strokeWidth: 2,
            ),
          );
        }

        return GestureDetector(
          onTap: () {
            if (controller.value.isPlaying) {
              controller.pause();
              return;
            }
            controller.play();
          },
          onDoubleTap: _toggleVolume,//llamamos al toggle con un doble tap
          
          child: AspectRatio(
              aspectRatio: controller.value.aspectRatio,
              child: Stack(children: [
                VideoPlayer(controller),

                //gradiente
                VideoBackground(
                  stops: const [0.8,1.0],
                ),
                //Texto
                Positioned(
                  bottom: 50,
                  left: 20,
                  child: _VideoCaption(caption: widget.caption),
                )
              ])),
        );
      },
    );
  }
}

class _VideoCaption extends StatelessWidget {
  final String caption;
  const _VideoCaption({ required this.caption});

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final titleStyle = Theme.of(context).textTheme.titleLarge;

    return SizedBox(
        width: size.width * 0.6,
        child: Text(
          caption,
          maxLines: 2,
          style: titleStyle,
        ));
  }
}
"
VG22fTUD,Amazon S&S Mass Move,bilago,JavaScript,Wednesday 29th of May 2024 07:08:37 AM CDT,"javascript:(function(){let clickMoreSubscriptions=()=>{let e=document.querySelector('.a-section.subscription-pagination-trigger-container span[data-action=""bulk-edit-pagination-action""] > .subscription-pagination-trigger');if(!e||e.parentElement.classList.contains('aok-hidden')){console.log('No more subscriptions to show or button is hidden.'),selects=[...document.querySelectorAll('select[name=""changeNextDeliveryDate""]')],console.log(`Found ${selects.length} select elements.`),processNextSelect();return}e.click(),console.log('Clicked ""Show more subscriptions"" button.'),clickMoreSubscriptions.counter===undefined?clickMoreSubscriptions.counter=1:clickMoreSubscriptions.counter++,clickMoreSubscriptions.counter<=50?setTimeout(clickMoreSubscriptions,1e3):console.log(%27Stopped after 50 clicks.%27)};let selects=undefined;let processNextSelect=()=>{if(0===selects.length)return console.log(%27All select boxes processed!%27);let e=selects.shift(),t=e.options,n=t[t.length-1],s=e.value;if(s===n.value)return console.log(%27already set, skipping subscription%27),void setTimeout(processNextSelect,100);console.log(%27Changing select element:%27,e),console.log(`Current value: ${s}, New value: ${n.value}`),e.value=n.value;let o=new Event(%27change%27,{bubbles:!0});e.dispatchEvent(o);let r=e.closest(%27form%27).querySelector(%27.a-button-input%27);r&&r.click(),setTimeout(processNextSelect,100)};clickMoreSubscriptions()})();"
rHp6Ca1X,Amazon S&S Mass Cancel,bilago,JavaScript,Wednesday 29th of May 2024 07:07:42 AM CDT,"javascript:(function(){let baseUrl=""https://www.amazon.com/auto-deliveries/ajax/cancelSubscriptionAction?actionType=cancelSubscription&canceledNextDeliveryDate=1730880000000&subscriptionId="";let spans=document.querySelectorAll(%27span[data-action=""edit-link-subscription-tablet""]%27);let subscriptionIds=[...spans].map(span=>{let data=span.getAttribute(%27data-edit-link-subscription-tablet%27);let match=data.match(/subscriptionId=([^&""]+)/);return match?match[1]:null;}).filter(id=>id);console.log(`Found ${subscriptionIds.length} subscription IDs.`);function openNextUrl(index){if(index>=subscriptionIds.length){console.log(%27All URLs have been opened.%27);return;}let id=subscriptionIds[index];let url=baseUrl+id;console.log(`Opening URL: ${url}`);let newWindow=window.open(url,%27_blank%27);setTimeout(()=>{openNextUrl(index+1);},1000);}openNextUrl(0);})();"
HuxsRzAU,Graph,rado_dimitrov66,C++,Wednesday 29th of May 2024 06:58:17 AM CDT,"#include <iostream>
using namespace std;

const int MAX_SIZE = 20; // –ú–∞–∫—Å–∏–º–∞–ª–µ–Ω –±—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ
struct Graph {
	int key; // –ú–∞—Ç—Ä–∏—Ü–∞ –Ω–∞ —Å—ä—Å–µ–¥—Å—Ç–≤–æ
	Graph* next; // –ë—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞
} *graphArray[MAX_SIZE];

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –≥—Ä–∞—Ñ–∞
void initializeGraph() {

	for (int i = 0; i < MAX_SIZE; i++)
	{
		graphArray[i] = NULL;
	}
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–±—Ä–æ –≤ –≥—Ä–∞—Ñ–∞
void addEdge(int u, int v) {

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i]->key == u)
		{

			Graph* p = new Graph;

			p->key = v;

			p->next = graphArray[i]->next;

			graphArray[i]->next = p;

			break;
		}
	}
}

int isVisited(int key)
{
	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{
			if (graphArray[i]->key == key)
			{

				return i;


			}


		}
	}

}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∞
void display() {

	int viseted[MAX_SIZE] = { 0 };

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i] && viseted[i] == 0)
		{

			cout << graphArray[i]->key << "" "";

			Graph* p = graphArray[i];

			if (p->next)
			{
				p = p->next;

				while (p)
				{

					int index = isVisited(p->key);


					if (viseted[index] == 0 && index != i)
					{
						cout << graphArray[index]->key << "" "";

						viseted[index] = 1;

						viseted[i] = 1;
					}


					p = p->next;

				}
			}

			viseted[i] = 1;


		}
	}


}


bool searchNode(int key)
{

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{

			if (graphArray[i]->key == key)
			{
				return true;
			}
		}
	}


	return false;
}

bool searchEdge(int u, int v)
{
	unsigned int fEmpty = 0;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{


			if (graphArray[i]->key == u)
			{
				Graph* p = graphArray[i];

				p = p->next;

				while (p)
				{
					if (p->key == v)
					{
						return true;
					}
					p = p->next;

				}
			}
		}
	}

	return false;
}

void addNode(int key)
{
	unsigned int fEmpty = 0;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i] == NULL)
		{
			fEmpty = i;
			break;
		}
	}

	Graph* newNode = new Graph;


	newNode->key = key;

	newNode->next = NULL;

	graphArray[fEmpty] = newNode;


}


// –§—É–Ω–∫—Ü–∏—è –∑–∞ –Ω–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑–æ–ª–∏—Ä–∞–Ω–∏ –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞
void findIsolatedVertices() {

	bool isFound = false;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		bool isInput = false;

		if (graphArray[i])
		{
			if (!graphArray[i]->next)
			{
				for (int j = 0; j < MAX_SIZE; j++)
				{
					if (graphArray[j] && j != i)
					{
						Graph* p = graphArray[j];

						p = p->next;

						while (p)
						{
							if (p->key == graphArray[i]->key)
							{
								isInput = true;
								break;
							}

							p = p->next;
						}
					}
				}

				if (!isInput)
				{
					isFound = true;

					cout << ""Isolated Vertice found: "" << graphArray[i]->key << endl;

				}
			}
		}


	}

	if (!isFound)
	{
		cout << ""No isolated vertices found\n"";
	}

}

void mainMenu() {
	cout << ""\nMenu:\n"";
	cout << ""1. Add node\n"";
	cout << ""2. Add edge\n"";
	cout << ""3. Print all elements\n"";
	cout << ""4. Find Isolated Vertices\n"";
	cout << ""5. Exit\n"";
}

int main() {


	initializeGraph(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞ –≥—Ä–∞—Ñ–∞ —Å –≤—ä–≤–µ–¥–µ–Ω–∏—è –±—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ

	int choice, u, v, counter = 0;


	while (true) {
		mainMenu(); // –ü–æ–∫–∞–∑–≤–∞ –º–µ–Ω—é—Ç–æ
		cout << ""Choose option: "";
		cin >> choice;

		switch (choice) {

		case 1:
			// –í—ä–≤–µ–∂–¥–∞ –≤—Ä—ä—Ö
			cout << ""Enter node: "";
			cin >> u;

			if (!searchNode(u) && counter < MAX_SIZE)
			{
				addNode(u);

				counter++;

			}
			else if (counter >= MAX_SIZE)
			{
				cout << ""Graph is full\n"";
			}
			else
			{
				cout << ""Node already exist\n"";
			}

			break;

		case 2:
			// –í—ä–≤–µ–∂–¥–∞ —Ä–µ–±—Ä–æ –º–µ–∂–¥—É –¥–≤–∞ –≤—ä—Ä—Ö–∞
			cout << ""Enter start node: "";
			cin >> u;
			cout << ""Enter end node: "";
			cin >> v;


			if (searchEdge(u, v))
			{
				cout << ""Rainbow already exist\n"";
			}
			else
			{
				bool isInvalid = false;

				if (!searchNode(u) && counter < MAX_SIZE)
				{
					addNode(u);
				}
				else {
					cout << ""No space"";

					isInvalid = true;
				}

				if (!searchNode(v) && counter < MAX_SIZE)
				{
					addNode(v);

				}
				else {
					cout << ""No space"";

					isInvalid = true;
				}

				if (!isInvalid)
				{
					addEdge(u, v);
				}


			}

			break;
		case 3:
			// –ü–æ–∫–∞–∑–≤–∞ –≥—Ä–∞—Ñ–∞
			display();
			break;
		case 4:
			// –ù–∞–º–∏—Ä–∞ –∏ –ø–æ–∫–∞–∑–≤–∞ –∏–∑–æ–ª–∏—Ä–∞–Ω–∏—Ç–µ –≤—ä—Ä—Ö–æ–≤–µ
			findIsolatedVertices();
			break;
		case 5:
			// –ò–∑–ª–∏–∑–∞ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞
			cout << ""Exit.\n"";
			return 0;
		default:
			// –ü–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ –æ–ø—Ü–∏—è
			cout << ""Invalid option. Try again.\n"";
			break;
		}
	}

	return 0;
}"
5R3t4S9n,Untitled,Bacon_Script,Lua,Wednesday 29th of May 2024 06:37:06 AM CDT,"local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = ""Vlorp Script | Adopt Me [5.6]"", HidePremium = false, SaveConfig = true, ConfigFolder = ""OrionTest""})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local Tab = Window:MakeTab({
	Name = ""Pet Spawner"",
	Icon = ""rbxassetid://17655111011"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""üêïPet Name"",
	Default = ""Pet Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üëÜClick To Spawn Pet"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Trade Scam"",
	Icon = ""rbxassetid://17655125473"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""Username"",
	Default = ""Username"",
	TextDisappear = false,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üßäFreeze Trade"",
	Default = false,
	Callback = function(Value)
		OrionLib:MakeNotification({
	Name = ""Freeze Trade Enabled!"",
	Content = ""your pet is now safe... remove all your pets now!"",
	Image = ""rbxassetid://4483345998"",
	Time = 5
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

Tab:AddToggle({
	Name = ""Anti Leave Player"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Egg Spawner"",
	Icon = ""rbxassetid://17655164596"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""ü•öEgg Name"",
	Default = ""Egg Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üëÜStart Egg Spawn"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Pet Dupe"",
	Icon = ""rbxassetid://17655185677"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""üêïPet Name"",
	Default = ""Pet Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""Start Pet Dupe"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Egg Spawner"",
	Icon = ""rbxassetid://17655202940"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""ü•öEgg Name"",
	Default = ""Egg Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""Start Egg Dupe"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]
"
ithtXWf0,"""LED Toggle"" rev_01",pleasedontcode,Arduino,Wednesday 29th of May 2024 06:24:09 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""LED Toggle""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-29 11:23:17

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* blinking led when preesed button and stops */
	/* blinking when pressed button */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>  // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void onButtonPressed();
void updateOutputs();

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button1_PushButton_PIN_D4 = 4;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t visualFeedbackLED_LED_PIN_D13 = 13;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool visualFeedbackLED_LED_PIN_D13_rawData = false;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float visualFeedbackLED_LED_PIN_D13_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(Button1_PushButton_PIN_D4);  // Initialize EasyButton instance

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton pressed example <<<"");

  pinMode(Button1_PushButton_PIN_D4, INPUT_PULLUP);
  pinMode(visualFeedbackLED_LED_PIN_D13, OUTPUT);

  button.begin();
  button.onPressed(onButtonPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();  // Continuously read the status of the button
  updateOutputs();  // Refresh output data
}

void onButtonPressed()
{
  Serial.println(""Button pressed"");
  visualFeedbackLED_LED_PIN_D13_rawData = !visualFeedbackLED_LED_PIN_D13_rawData;  // Toggle LED state
}

void updateOutputs()
{
  if (visualFeedbackLED_LED_PIN_D13_rawData) {
    // Blinking LED when button is pressed
    digitalWrite(visualFeedbackLED_LED_PIN_D13, HIGH);
    delay(500);
    digitalWrite(visualFeedbackLED_LED_PIN_D13, LOW);
    delay(500);
  } else {
    // Turn off LED when button is not pressed
    digitalWrite(visualFeedbackLED_LED_PIN_D13, LOW);
  }
}

/* END CODE */"
qiJCkTan,Untitled,B33peen,Dart,Wednesday 29th of May 2024 06:04:52 AM CDT,"import 'package:flutter/material.dart';
import 'package:hi_foods_business/modules/loyalty_program/model/sort_restaurant_user_enum.dart';
import 'package:webview_flutter/webview_flutter.dart';

class CalendlyBookingPage extends StatefulWidget {
  CalendlyBookingPage({Key? key}) : super(key: key);

  @override
  State<CalendlyBookingPage> createState() => _CalendlyBookingPageState();
}

class _CalendlyBookingPageState extends State<CalendlyBookingPage> {
  late final WebViewController controller;
  int prg = 0;
  ValueNotifier<bool> bookingsuccess = ValueNotifier(false);
  @override
  void initState() {
    bookingsuccess.addListener(() {
      if (bookingsuccess.value) {
        showAlertDialog(context);
      }
    });
    controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {
            setState(() {
              prg = progress;
            });
          },
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onUrlChange: (change) {
            print(change.url);
            if ((change.url ?? """").startsWith(
                ""https://calendly.com/avishek-vdla/consultation/invitees/"")) {
              setState(() {
                bookingsuccess.value = true;
              });
            }
          },
          onWebResourceError: (WebResourceError error) {},
        ),
      )
      ..loadRequest(Uri.parse(
        'https://calendly.com/avishek-vdla/consultation?preview_source=et_card&month=2024-05',
      ));
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: prg != 100
            ? Center(child: Text('Loading $prg %'))
            : WebViewWidget(
                controller: controller,
              ),
      ),
    );
  }
}

showAlertDialog(BuildContext context) {
  // set up the button
  Widget okButton = TextButton(
    child: Text(""OK""),
    onPressed: () {
      Navigator.of(context).pop();
    },
  );

  // set up the AlertDialog
  AlertDialog alert = AlertDialog(
    title: Text(""Success""),
    content: Text(""Lu Success vayo ni. Aba mah gardeu""),
    actions: [
      okButton,
    ],
  );

  // show the dialog
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return alert;
    },
  );
}
"
ZgdGdKue,Untitled,B33peen,Dart,Wednesday 29th of May 2024 06:04:27 AM CDT,"import 'package:flutter/material.dart';
import 'package:hi_foods_business/modules/loyalty_program/model/sort_restaurant_user_enum.dart';
import 'package:webview_flutter/webview_flutter.dart';

class CalendlyBookingPage extends StatefulWidget {
  CalendlyBookingPage({Key? key}) : super(key: key);

  @override
  State<CalendlyBookingPage> createState() => _CalendlyBookingPageState();
}

class _CalendlyBookingPageState extends State<CalendlyBookingPage> {
  late final WebViewController controller;
  int prg = 0;
  ValueNotifier<bool> bookingsuccess = ValueNotifier(false);
  @override
  void initState() {
    bookingsuccess.addListener(() {
      if (bookingsuccess.value) {
        showAlertDialog(context);
      }
    });
    controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {
            setState(() {
              prg = progress;
            });
          },
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onUrlChange: (change) {
            print(change.url);
            if ((change.url ?? """").startsWith(
                ""https://calendly.com/avishek-vdla/consultation/invitees/"")) {
              setState(() {
                bookingsuccess.value = true;
              });
            }
          },
          onWebResourceError: (WebResourceError error) {},
        ),
      )
      ..loadRequest(Uri.parse(
        'https://calendly.com/avishek-vdla/consultation?preview_source=et_card&month=2024-05',
      ));
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: prg != 100
            ? Center(child: Text('Loading $prg %'))
            : WebViewWidget(
                controller: controller,
              ),
      ),
    );
  }
}

showAlertDialog(BuildContext context) {
  // set up the button
  Widget okButton = TextButton(
    child: Text(""OK""),
    onPressed: () {
      Navigator.of(context).pop();
    },
  );

  // set up the AlertDialog
  AlertDialog alert = AlertDialog(
    title: Text(""Success""),
    content: Text(""Lu Success vayo ni.""),
    actions: [
      okButton,
    ],
  );

  // show the dialog
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return alert;
    },
  );
}
"
M63W0E3D,data941,TestGuy1,JSON,Wednesday 29th of May 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3bf7a7698e8e1c8fddae5e9b9793496d122a89d4195023d0193de4372acba01947a7ceb61c8416b7028d1943222e2ac9a4b7d845f0181f570e0d8df98a912691c7779fa09436b7994bb62261ee1c6e379d78de42a0c88b7480036836eaeba2741b9379a3eda2ccd61bad4560e63f353a10f4f40210afee2cf71ba4f77be922dc',
  otherdata: [
    'cae0898cd1358b5236cd543f6b06576a',
    '18452c5e8df7293ae5118d1e604a4e2f',
    '8bc100992fb5a662c22e2c0874fb2f95',
    '903d6dc798e7687e863da3c98f561c22',
    '6e16b18415608c8eeca11639773d412e',
    '91507df11522f582b50134dd68a39ca6',
    'bcf4ead79d592a69a2ea75be9f2ae85f',
    'd16908adbbea2ac8274bfd45fc572c73'
  ]
}"
dQ2vTy2p,Update Azure PowerShell Modules,guyrleech,PowerShell,Wednesday 29th of May 2024 05:56:25 AM CDT,"## update Azure PowerShell modules that have newer versions available. Run elevated since uses -Scope AllUsers

## to just show what modules are not at the latest version, delete the code from ""| Where""

Get-Module -ListAvailable az.*|sort name,version|group Name|select Name,@{n='LatestInstalled';e={$_.group[-1].version}},@{n='LatestAvailable';e={$script:latest = (find-module -Name $_.Name).Version;$script:latest}},@{n='UpdateAvailable';e={$script:latest -gt $_.group[-1].version}}|Where UpdateAvailable|% { $_.Name ;  Update-module -Name $_.Name -Scope AllUsers -Force }"
51WvwQUy,Pascal_hello,Vitaliy_Novichikhin,Pascal,Wednesday 29th of May 2024 05:44:03 AM CDT,"program Hello;
begin
  writeln ('Hello, world!')
end."
xCe3nG0f,üí∏G2A.com Free Gift Card Guide 2024 Mayü§ë,FeasModz514,Python,Wednesday 29th of May 2024 05:42:04 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
CvYUNunA,ü§ëG2A.com Free Gift Card Guide 2024 Mayüî•,kjihu25,Python,Wednesday 29th of May 2024 05:36:02 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
kaVb31wN,test,pierrejean,Lua,Wednesday 29th of May 2024 05:35:31 AM CDT,"while true do
    local modem = peripheral.find(""modem"") -- Trouve le premier modem disponible
    if modem then
        print(""Entrez votre message :"")
        local message = io.read() -- Lit l'entr√©e de l'utilisateur
        modem.transmit(1, 1, message) -- Envoie le message de l'utilisateur sur le canal 1
    end
end
"
MgrXkwbd,expressions,b_gandurov,C#,Wednesday 29th of May 2024 05:33:56 AM CDT,"using System;
using System.Linq;

public class Program
{
    public static void Main(string[] args)
    {
        Console.WriteLine(SolveExpression(Console.ReadLine()));
    }

    public static int SolveExpression(string? expression)
    {
        if (expression==null || expression[0] == ')')
        {
            return 0;
        }
        string num = """";
        for (int i = 0; i < expression.Length; i++)
        {
            if (expression[i] == ')')
            {
                break;
            }
            if (!""/*-+("".Contains(expression[i]))
            {
                num += expression[i];
            }
            else
            {
                switch (expression[i])
                {
                    case '+':
                        return int.Parse(num) + SolveExpression(expression.Substring(i + 1));
                    case '-':
                        return int.Parse(num) - SolveExpression(expression.Substring(i + 1));
                    case '*':
                        return int.Parse(num) * SolveExpression(expression.Substring(i + 1));
                    case '(':
                        if (i != 0 && char.IsDigit(expression[i - 1]))
                        {
                            return int.Parse(num) * SolveExpression(expression.Substring(i + 1));
                        }
                        continue;
                    case '/':
                        return int.Parse(num) / SolveExpression(expression.Substring(i + 1));

                }
            }

        }
        return int.Parse(num);


    }
}
"
CbJ47wdG,files,b_gandurov,C#,Wednesday 29th of May 2024 05:32:35 AM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using static System.Net.WebRequestMethods;

namespace DSA
{
    public class FileUtils
    {
        public const string Path = @""..\..\..\Images"";
        public static List<string> files = new List<string>();
        public static Dictionary<string, int> stats = new Dictionary<string, int>();


        public static string GetFileExtension(string filePath)
        {
            int lastIndex = filePath.LastIndexOf('.');

            return filePath[lastIndex..];
        }

        public static string GetFileName(string path)
        {
            int lastIndex = path.LastIndexOf('\\') + 1;
            string lastPart = path[lastIndex..];
            return lastPart;
        }

        public static string TraverseDirectories(string path, int level = 0)
        {
            var indentation = new string(' ', level * 2);
            var result = $""{indentation}{GetFileName(path)}:\n"";

            foreach (var file in Directory.GetFiles(path))
            {
                result += $""{indentation + new string(' ', 2)}{GetFileName(file)}\n"";
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                result += TraverseDirectories(directory, level + 1);
            }

            return result;
        }

        public static List<string> FindFiles(string path, string extension)
        {

            foreach (var file in Directory.GetFiles(path))
            {
                if (GetFileExtension(file).Equals(extension))
                {
                    files.Add(GetFileName(file));
                }
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                FindFiles(directory, extension);
            }

            return files;
        }

        public static bool FileExists(string path, string fileName)
        {
            foreach (var file in Directory.GetFiles(path))
            {
                if (GetFileName(file).Equals(fileName))
                {
                    return true;
                }
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                if (FileExists(directory, fileName))
                {
                    return true;
                }
            }

            return false;
        }

        public static Dictionary<string, int> GetDirectoryStats(string path)
        {

            foreach (var file in Directory.GetFiles(path))
            {
                var extension = GetFileExtension(file);
                if (!stats.ContainsKey(extension))
                {
                    stats[extension] = 0;
                }
                stats[extension]++;
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                GetDirectoryStats(directory);
            }

            return stats;
        }
    }
}

"
iudVewan,kotlin contracts,marcgruita,Kotlin,Wednesday 29th of May 2024 05:27:09 AM CDT,"import kotlin.contracts.ExperimentalContracts
import kotlin.contracts.contract

open class Base

class ChildOne: Base() {
    fun childOneFunc() {
        println(""salut"")
    }
}

class ChildTwo: Base()

@OptIn(ExperimentalContracts::class)
fun funcThatExitsIfNotChildTwo(inst: Base) {
    contract {
        returns() implies (inst is ChildOne)
    }

    if (inst !is ChildOne) {
        error(""nu e"")
    }
}

fun main() {
    val inst: Base = ChildOne()
    funcThatExitsIfNotChildTwo(inst)

    inst.childOneFunc()
}
"
ZsCwu9PB,rep√®re,pierrejean,Lua,Wednesday 29th of May 2024 05:17:47 AM CDT,"local sides = {""left"", ""right"", ""top"", ""bottom"", ""front"", ""back""}

for _, side in ipairs(sides) do
    local device = peripheral.wrap(side)
    if device then
        print(""P√©riph√©rique sur "" .. side .. "": "" .. peripheral.getType(side))
    else
        print(""Aucun p√©riph√©rique sur "" .. side)
    end
end
"
8px4ShTc,üí∏G2A.com Free Gift Card Guide 2024 Mayü§ë,Garoam,Python,Wednesday 29th of May 2024 05:11:53 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
D7yfT2rw,Format JSON Hak Akses DocuMess,zectra,JSON,Wednesday 29th of May 2024 05:03:22 AM CDT,"{
  ""success"": true,
  ""rc"": 200,
  ""message"": ""Nama pengguna inodreamstudio berhasil login"",
  ""token"": ""1|IDS|zw7UZf2T9u6Zy3Pkkt8c3xeH4WGN204p3MAUjgQb9f5d408a"",
  ""hak_akses"": [
    {
      ""role_name"": ""SKPD"",
      ""permissions"": {
        ""menus"": [
          {
            ""menu_name"": ""Beranda"",
            ""access"": true
          },
          {
            ""menu_name"": ""Kredential dan Pengawai"",
            ""access"": false
          },
          {
            ""menu_name"": ""Suat Masuk"",
            ""access"": false
          },
          {
            ""menu_name"": ""Surat Keluar"",
            ""access"": true
          },
          {
            ""menu_name"": ""Disposisi Surat"",
            ""access"": true
          },
          {
            ""menu_name"": ""Hak Akses"",
            ""access"": false
          }
        ],
        ""crud_permissions"": {
          ""SuratKeluar"": {
            ""create"": true,
            ""read"": true,
            ""update"": true,
            ""delete"": true
          }
        }
      }
    }
  ]
}"
XKkevw7a,ü§ëG2A.com Free Gift Card Guide 2024 Mayü§ë,lookos13,Python,Wednesday 29th of May 2024 04:59:48 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
UXDeDhVP,üí∏G2A.com Free Gift Card Guide 2024 MayüöÄ,pestinha,Python,Wednesday 29th of May 2024 04:53:46 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
