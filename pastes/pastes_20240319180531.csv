id,title,username,language,date,content
j9wF9UP1,Untitled,dllbridge,C,Tuesday 19th of March 2024 01:03:05 PM CDT,"


#include    <stdio.h>
//#include   <string.h>




char* _strcpy(char* _s, const char* _d);

char sz1[99] = ""SONY "",
     sz2[99] = ""Pictures 222""; 
 
////////////////////////////////////////////////////
int main()
{

    printf(""sz1 = %s \n"", sz1); 
	
    char *p =_strcpy(sz1, sz2);
	printf(""1address p = %d \n "", &p); 		 	
    printf(""sz1 = %s \n "", p); 	
  
return 0;
}


/////////////////////////////////////////////////////////
char* _strcpy(char *s1, const char *s2)
{
	int i = 0;
	
	char *p = s1;
	printf(""2address p = %d \n "", &p); 
	
	while(s2[i])
	{
		
		s1[i] = s2[i];
	    i ++;	
	}
	   
	 s1[i] = 0;  
	 
return p;	 
}



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#include    <stdio.h>
#include   <string.h>


char* _strcpy(char* _s, const char* _d);

char sz1[99] = ""SONY "",
     sz2[99] = ""Pictures_982143""; 
 
////////////////////////////////////////////////////
int main()
{
	
    char *psz2 = _strcpy(sz1, sz2);
			 	
    printf(""sz1 = %s \n "", psz2); 	
  
return 0;
}


/////////////////////////////////////////////////////////
char* _strcpy(char *_s1, const char *_s2)
{
       
	 __asm  // - - - - - - - - - - - - -
	   {                 mov  esi, _s2
					     mov  edi, _s1
						 mov  ebx, _s1
			L_01:        mov   al, [esi]
						 mov [edi], al
						 or    al, 0
						 jz    L_02
						 inc   esi
						 inc   edi
						 jmp   L_01
			L_02:        mov  eax, ebx
	   };   // - - - - - - - - - - - - -

}



"
82Y8wPLk,PS99 Script (Working New Update),quikzyYTbtw,Lua,Tuesday 19th of March 2024 01:00:39 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/zerqhy/petsim99/main/zaphub"", true))()"
KyyZt6jS,🤑 G2A.com Free Gift Card Guide Mar 2024 New 🤑,PASUSW,GetText,Tuesday 19th of March 2024 12:57:53 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
Important : If you use this make sure to use the English version of G2A.com otherwise this will not work!
  
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view
 
Working as of:
19 March 2024
"
cyGELug2,hello.cpp,Starg,C++,Tuesday 19th of March 2024 12:55:34 PM CDT,"
#include <iostream>

int main()
{
    std::cout << ""Hello, world!"" << std::endl;
    return 0;
}
"
pYvfTRf9,Templates,Filage,C++,Tuesday 19th of March 2024 12:55:23 PM CDT,"#include <iostream>
#include <iomanip>

using namespace std;

int takeNum(int Min, int Max) {
	const string error = ""Проверьте корректность введенных данных!\n"";
	bool isIncorrect;
	int num;
	do {
		isIncorrect = false;
		cin >> num;
		if (cin.fail()) {
			isIncorrect = true;
			cout << error;
			cin.clear();
			while (cin.get() != '\n');
		}
		if (!isIncorrect && cin.get() != '\n') {
			cin.clear();
			while (cin.get() != '\n');
			cout << error;
			isIncorrect = true;
		}
		if (!isIncorrect && (num < Min || num > Max)) {
			isIncorrect = true;
			cout << error;
		}
	} while (isIncorrect);
	return num;
}

template <typename T>
T** add(T** first_matrix, T** second_matrix, int height, int length) { 
	T** temp_matrix = new T * [height];
	for (int i = 0; i < height; i++) 
		temp_matrix[i] = new T[length];

	for (int i = 0; i < height; i++) 
		for (int j = 0; j < length; j++) 
			temp_matrix[i][j] = first_matrix[i][j] + second_matrix[i][j];
	return temp_matrix;
}

template <typename T>
T search(T** matrix, int height, int length) {
	T max_negative = INT_MIN;
	for (int i = 0; i < height; i++) 
		for (int j = 0; j < length; j++) 
			if (matrix[i][j] < 0 && matrix[i][j] > max_negative)
				max_negative = matrix[i][j];

	return max_negative;
}

template <typename T>
void replace(T** matrix , int height, int length) { 
	for (int i = 0; i < height; i++)
		for (int j = 0; j < length; j++) 
			if (matrix[i][j] < 0)
				matrix[i][j] = abs(matrix[i][j]);
}

template <typename T>
void sort(T** matrix, int height, int length) { 
	T max = matrix[0][0];
	int index = 0;
	for (int i = 0; i < height; i++) 
		for (int j = 0; j < length; j++)
			if (matrix[i][j] > max) {
				max = matrix[i][j];
				index = j;
			}
	for (int i = 0; i < height - 1; i++) 
		for (int j = 0; j < height - i - 1; j++)
			if (matrix[j][index] < matrix[j + 1][index]) {
					T temp = matrix[j][index];
					matrix[j][index] = matrix[j + 1][index];
					matrix[j + 1][index] = temp;
			}
}

void createMatrix(int** matrix, int length, int height) {
	cout << ""Введите значения элементов в матрице: \n"";
	for (int i = 0; i < height; i++)
		for (int j = 0; j < length; j++) {
			cout << ""a["" << i << ""]["" << j << ""] = "";
			cin >> matrix[i][j];
		}
}

void getSize(int& height, int& length) {
	cout << ""Введите количество строк в матрице: "";
	cin >> height;
	cout << ""Введите количество столбцов в матрице: "";
	cin >> length;
}

void outputMatrix(int** matrix, int& length, int& height) {
	cout << ""Ваша матрица: \n"";
	for (int i = 0; i < height; i++)
		for (int j = 0; j < length; j++)
			cout << matrix[i][j] << "" "";
		cout << endl;
}

void menu_program() {
	setlocale(LC_ALL, ""Rus"");

	int length = 0, height = 0;
	int** matrix = nullptr;
	int** tempMatrix = nullptr;
	int min = 0;
	while (true) {
		int choice;
		cout << ""Текстовое меню:\n"";
		cout << ""1. Создание матрицы и ввод в нее значений\n"";
		cout << ""2. Вывести матрицу\n"";
		cout << ""3. Сложение матриц\n"";
		cout << ""4. Поиск максимального отрицательного элемента в матрице\n"";
		cout << ""5. Замена всех отрицательных элементов в матрице им противоположными\n"";
		cout << ""6. Сортировка столбцов, содержащих максимальный элемент матрицы, по убыванию\n"";
		cout << ""7. Выход\n"";
		cout << ""Введите номер выбранного действия: "";
		choice = takeNum(1, 2147483647);
		switch (choice) {
		case 1:
			getSize(height, length);
			matrix = new int* [height];
			for (int i = 0; i < height; i++)
				matrix[i] = new int[length];
			createMatrix(matrix, length, height);
			break;
		case 2:
			system(""cls"");
			outputMatrix(matrix, length, height);
			break;
		case 3:
			tempMatrix = new int* [height];
			for (int i = 0; i < height; i++)
				tempMatrix[i] = new int[length];
			createMatrix(tempMatrix, length, height);
			matrix = add(matrix, tempMatrix, height, length);
			for (int i = 0; i < height; i++)
				delete[] tempMatrix[i];
			delete[] tempMatrix;
			break;
		case 4:
			min = search(matrix, height, length);
			cout << ""Максимальный отрицательный элемент это - "" << min << endl;
			break;
		case 5:
			replace(matrix, height, length);
			cout << ""Замена прошла успешно!"" << endl;
			break;
		case 6:
			sort(matrix, height, length);
			cout << ""Сортировка прошла успешно!"" << endl;
			break;
		case 7:
			cout << ""Программа завершена!"" << endl;
			for (int i = 0; i < height; i++)
				delete[] matrix[i];
			delete[] matrix;
			return;
		default:
			cout << ""Ошибка ввода! Введите то число, которое есть в меню\n"";
			break;
		}
	}
}
	
int main() {
	menu_program();
}
"
bh3AEqd4,Lab5_3,Filage,C++,Tuesday 19th of March 2024 12:54:33 PM CDT,"#include <iostream>

using namespace std;

struct node {
    node* next;
    node* prev;
    int info;
};

void createList(node*& Begin, node*& End, int n) {
    for (int i = 0; i < n; i++) {
        node* el = new node;
        el->info = rand() % 101 - 50;
        if (End == nullptr) {
            el->next = NULL;
            el->prev = NULL;
            Begin = End = el;
        }
        else {
            el->next = NULL;
            el->prev = End;
            End->next = el;
            End = el;
        }
    }
}


bool isEmpty(node* Begin) {
    if (Begin == nullptr)
        cout << ""Очередь пуста\n"";
    return Begin == nullptr;
}

void outList(node* Begin) {
    if (isEmpty(Begin))
        return;
    node* temp = Begin;
    while (temp != NULL) {
        cout << temp->info << "" "";
        temp = temp->next;
    }
}   

node* search_min(node*& Begin, node*& End, int& min_pos)
{
    int i = 1;

    node* min = Begin;
    node* spt = Begin;
    while (spt != nullptr)
    {
        if (spt->info < min->info) { min = spt; min_pos = i; }
        spt = spt->next;
        i++;
    }
    return min;
}

node* search_max(node*& Begin, node*& End, int& max_pos)
{
    int i = 1;
    node* max = Begin;
    node* spt = Begin;
    while (spt != nullptr)
    {
        if (spt->info > max->info) { max = spt; max_pos = i; }
        spt = spt->next;
        i++;
    }
    return max;
}

void del_between(node*& Begin, node*& End)
{
    int min_pos = 0, max_pos = 0;
    node* min = search_min(Begin, End, min_pos);
    node* max = search_max(Begin, End, max_pos);

    if (min_pos == max_pos) {
        std::cout << ""Пустая область между min и max"" << std::endl;
        return;
    }

    if (min_pos > max_pos) {
        node* temp = min;
        min = max;
        max = temp;
    }

    node* saveToFree;
    while (min->next != max) {
        saveToFree = min->next;
        min->next = min->next->next;
        delete saveToFree;
    }

    min_pos = 0;
    max_pos = 0;
}


int main() {
    srand((unsigned)(time(NULL)));
    setlocale(LC_ALL, ""Rus"");
    int n;
    node* Begin = nullptr, * End = nullptr;
    cout << ""Введите количество узлов: "";
    cin >> n;
    createList(Begin, End, n);
    cout << endl;
    outList(Begin);
    del_between(Begin, End);
    cout << endl << endl;
    outList(Begin);
    return 0;
}
"
35j0a1mu,Lab5_2,Filage,C++,Tuesday 19th of March 2024 12:54:08 PM CDT,"#include <iostream>

using namespace std;

struct node {
    node* next;
    int info;
};

void createQueue(node*& Begin, node*& End, int n) {
    for (int i = 0; i < n; i++) {
        node* el = new node;
        el->info = rand() % 101 - 50;
        cout << el->info << "" "";
        el->next = NULL;
        if (End == nullptr) {
            Begin = End = el;
        }
        else {
            End->next = el;
            End = el;
        }
    }
}


bool isEmpty(node* Begin) {
    if (Begin == nullptr)
        cout << ""Очередь пуста\n"";
    return Begin == nullptr;
}

void queueList(node* Begin) {
    if (isEmpty(Begin))
        return;
    node* temp = Begin;
    while (temp != nullptr) {
        cout << temp->info << "" "";
        temp = temp->next;
    }
}

void pop(node*& Begin) {
    if (isEmpty(Begin))
        return;
    node* temp = Begin;
    temp = Begin;
    Begin = Begin->next;
    delete temp;
}

int peek(node* Begin) {
    if (isEmpty(Begin))
        return -1;
    return Begin->info;
}

int findMax(node* Begin) {
    if (isEmpty(Begin))
        return INT_MIN;
    int maxElement = Begin->info;
    node* temp = Begin->next;
    while (temp != nullptr) {
        if (temp->info > maxElement)
            maxElement = temp->info;
        temp = temp->next;
    }
    return maxElement;
}

void moveMaxToFront(node*& Begin) {
    if (isEmpty(Begin))
        return;
    int maxElement = findMax(Begin);
    if (Begin->info == maxElement)
        return;
    node* prevMax = nullptr;
    node* temp = Begin;
    while (temp->info != maxElement) {
        prevMax = temp;
        temp = temp->next;
    }
    prevMax->next = temp->next;
    temp->next = Begin;
    Begin = temp;
}


int main() {
    srand((unsigned)(time(NULL)));
    setlocale(LC_ALL, ""Rus"");
    int n;
    node* Begin = nullptr, * End = nullptr;
    cout << ""Введите количество узлов: "";
    cin >> n;
    createQueue(Begin, End, n);
    cout << endl << endl;
    queueList(Begin);
    moveMaxToFront(Begin);
    cout << ""Очередь после перемещения максимального элемента в начало: "";
    queueList(Begin);
    return 0;
}
"
waeEsPjW,Lab5_1,Filage,C++,Tuesday 19th of March 2024 12:53:43 PM CDT,"#include <iostream>

using namespace std;

struct node {
    node* next;
    int info;
};

void push(node*& Begin, node*& End) {
    node* el = new node;
    cout << ""Значение: "";
    cin >> el->info;
    el->next = NULL;
    if (End == nullptr) {
        Begin = End = el;
    }
    else {
        End = el;
    }
}


bool isEmpty(node* Begin) {
    if (Begin == nullptr)
        cout << ""Очередь пуста\n"";
    return Begin == nullptr;
}

void queueList(node* Begin) {
    if (isEmpty(Begin))
        return;
    node* temp = Begin;
    while (temp != nullptr) {
        cout << temp->info << "" "";
        temp = temp->next;
    }
}

void pop(node*& Begin) {
    if (isEmpty(Begin))
        return;
    node* temp = Begin;
    temp = Begin;
    Begin = Begin->next;
    delete temp;
}

int peek(node* Begin) {
    if (isEmpty(Begin))
        return -1;
    return Begin->info;
}


int main() {
    setlocale(LC_ALL, ""Rus"");
    node* Begin = nullptr, * End = nullptr;
    push(Begin, End);
    push(Begin, End);
    push(Begin, End);
    queueList(Begin);
    pop(Begin);
    cout << endl;
    queueList(Begin);
    cout << endl;
    int num = peek(Begin);
    cout << num;
}
"
BLBUy26f,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Tuesday 19th of March 2024 12:51:31 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
19 March 2024















































"
aMHv9ZcJ,Untitled,CREONIX,Lua,Tuesday 19th of March 2024 12:42:51 PM CDT,"Секретные ссылки VK.COM 


https://95.213.1.134/select/0/vmui/
postfixadmin.mvk.com
bb8.pfm.mvk.com"
0Ta84FVc,Untitled,LoloMr,JavaScript,Tuesday 19th of March 2024 12:40:36 PM CDT,"document.querySelectorAll('.range_box input').forEach(item => {
    item.addEventListener('mousemove', function() {
        this.closest('.range_box').querySelector('.rangeValue').innerHTML = this.value;
    })
})"
5hVnasg5,Untitled,iconoclasthero,Bash,Tuesday 19th of March 2024 12:16:32 PM CDT,"Types: deb
URIs: https://ppa.launchpadcontent.net/musicbrainz-developers/daily/ubuntu/
Suites: noble
Components: main
Signed-By:
 -----BEGIN PGP PUBLIC KEY BLOCK-----
 .
 mI0ETmUvJAEEALloM7dn+yd1pSoVLsqIgFyIVBv7VusquOA/AQBigrX+G0eP/nJt
 z1ZaGNWUDcnBaFp8PVE4wLnSM6G0tYCdNuIVj4XYMlalNVGRK84KXwLeJ2hoi0JU
 KKP+caT41uzAKjKziE7TKWTucu3JGDtyHldJF2izK5ms83deVf7t88JLABEBAAG0
 KExhdW5jaHBhZCBQUEEgZm9yIE11c2ljQnJhaW56IERldmVsb3BlcnOIuAQTAQIA
 IgUCTmUvJAIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQDMOv9c7fD0DK
 ugQAsBdPEVRt7UyJFff5kTq4VoUNArsLvsOAQukFM6RYsq9TKNaFAYuKwVDrHxcG
 AlDC/avFk+feus0qgUHRvL2lQn7Lh12BMNuQ6CN4stOfFLOO9tPAUFdOiZ6+KWOT
 USugo9SB7lrT7PSHo6lj8aQOcIb1eDAe9tra8ZScVHBe9vw=
 =Ogl7
 -----END PGP PUBLIC KEY BLOCK-----







"
wXgt1GY9,Kod płatności MicroSMS,Pecetowicz,PHP,Tuesday 19th of March 2024 12:15:57 PM CDT,"<?php

    /*     

        Wersja demonstracyjna przykladowego 
        wykorzystania SMS API MicroSMS.pl 

        Ostatnia aktualizaja: 2/20/2015

        Dowiesz sie tutaj jak wykorzystac API w celu 

        - Sprawdzenia kodu SMS z okreslonym numerem SMS (np. wartością doładowania skarbonki)
        - Jak zbudowac formularz obierania danych od klienta
        
        Możliwe błedy to 
        - E,0 -> brak danych w API
        - E,1 -> jeśli nie ma kodu, bądź nie ma 8 znaków
        - E,2 -> jeśli użytokwnik bądź usługa nie istnieje bądź nie są w 1 profilu
        - E,3 -> Jeśli nie ma numeru SMS
    
    */

    /* 
        Jesli Twój skrypt posiada bledy stworzone 
        przez programiste, ponizsze polecenia moga wywolac
        duza ilosc wpisów na stronie dlatego, zaleca sie 
        posiadac wylaczone te opcje, przy niesprawdzonych skryptach
        do czasu wyeliminowania problemu.
    */

    error_reporting(E_ALL);

    ini_set('error_reporting', E_ALL);
    ini_set(""display_errors"", 1);

    /*
        Zmienna userid pozwala zidentyfikowac partnera MicroSMS
        Mozna ja znalezc w panelu administracyjnym od razu po zalogowaniu, pod 
        imieniem i nazwiskiem. Np. (ID 1)
    */

    $settings['userid'] = 0;

    /*
        serviceid to numer identyfikacyjny aktywowanej usługi SMS Premium
    */

    $settings['serviceid'] = 0;

    /* 
        Treść wiadomości SMS, na jaką klienci mają wysyłać wiadomości.
    */

    $settings['txt'] = 'MSMS.SUFIKS';

    /*
        Numer-y które mają znajdować się w sprzedaży
    */

    $microsms[] = array(""netto"" => 0.50,""number"" => 7055,""product"" => ""wojownik"");
    $microsms[] = array(""netto"" => 1.00,""number"" => 7136,""product"" => ""strażak"");
    
    // I inne w zależności od konfiguracji w panelu partnera

    if (isset($_POST['send']) && isset($_POST['code'])) {
        
        $code = addslashes($_POST['code']);
        
        /* 
            Weryfikujemy poprawnosc kodu SMS, 
            pamietajmy, ze MicroSMS wydaje jedynie
            kody posiadajace 8 znaków
        */
        
        if (preg_match(""/^[A-Za-z0-9]{8}$/"", $code)) {
            
            $a = array();
            $b = array();
            
            foreach ($microsms as $cfg) {
                array_push($a, $cfg['number']);
                $b[$cfg['number']] = $cfg['product'];
            }
            
            /* 
                Laczymy sie z serwerem MicroSMS w celu
                pobrania informacji nt. kodu 
            */
            $handle = fopen(""http://microsms.pl/api/check_multi.php?userid="" . $settings['userid'] . ""&code="" . $code . '&serviceid=' . $settings['serviceid'], 'r');
            $check  = fgetcsv($handle, 1024);
            fclose($handle);
            
            /* 
                Musimy zweryfikowac, czy system przypadkiem 
                nie ma bledu i pelen poprawnie formularz dociera
                do MicroSMS, jesli na pierwszym tj. 0 miejscu znajduje 
                sie odpowiedz E oznacza ERROR i któras zmienna jest
                blednie uzupelniona
            */
            
            if ($check[0] != 'E') {
                
                /* 
                    W przypadku kiedy wszystkie warunki zostaly
                    spelnione mozemy wydac produkt 
                */
                
                if ($check[0] == 1) {
                    if (isset($b[$check[2]])) {
                        $info = 'Zakupiłeś produkt ' . $b[$check[2]];
                        // 
                        // Dalsza czesc Twojego kodu...
                        //
                    } else {
                        $info = 'Numer SMS nie został zainicjowany w skrypcie. Skontaktuj się ze sprzedawcą. ';
                    }
                } else {
                    $info = 'Podany kod jest nieprawidlowy.';
                }
            } else {
                $info = 'Nieprawidlowo skonfigurowana usluga, skontaktuj sie z administratorem sklepu.';
            }
            
        } else {
            $info = 'Nieprawidlowy format kodu.';
        }
    }

?>


<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" lang=""pl"">
   <head>
      <meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />
      <title>Przykladowy skrypt platnosci SMS</title>
   </head>
   <body>
      <style>
         body { font-size: 11px; font-family: Tahoma, Arial, Verdana, Helvetica, sans-serif; font-weight: normal;  } 
         #page { width: 600px; padding: 20px; margin-left: auto; margin-right: auto; border:1px solid #c6c6c6; }
         .center { text-align: center; }
         .alert-box { color:#555; border-radius:10px; font-family:Tahoma,Geneva,Arial,sans-serif;font-size:11px; padding:10px 10px 10px 36px; margin:10px; }
         .alert-box span { font-weight:bold;text-transform:uppercase; }
         .notice { background:#e3f7fc;border:1px solid #8ed9f6; }
         .title { font-size: 20px;  font-weight:bold; }
         input[type=text], textarea {
         -webkit-transition: all 0.30s ease-in-out;
         -moz-transition: all 0.30s ease-in-out;
         -ms-transition: all 0.30s ease-in-out;
         -o-transition: all 0.30s ease-in-out;
         outline: none;
         padding: 3px 0px 3px 3px;
         margin: 5px 1px 3px 0px;
         border: 1px solid #DDDDDD;
         }
         .button {
         background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #d0451b), color-stop(1, #bc3315));
         background:-moz-linear-gradient(top, #d0451b 5%, #bc3315 100%);
         background:-webkit-linear-gradient(top, #d0451b 5%, #bc3315 100%);
         background:-o-linear-gradient(top, #d0451b 5%, #bc3315 100%);
         background:-ms-linear-gradient(top, #d0451b 5%, #bc3315 100%);
         background:linear-gradient(to bottom, #d0451b 5%, #bc3315 100%);
         filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#d0451b', endColorstr='#bc3315',GradientType=0);
         background-color:#d0451b;
         display:inline-block;
         cursor:pointer;
         color:#ffffff;
         font-family:arial;
         font-size:13px;
         padding:6px 12px;
         text-decoration:none;
         border:0px;
         }
         .button:hover {
         background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #bc3315), color-stop(1, #d0451b));
         background:-moz-linear-gradient(top, #bc3315 5%, #d0451b 100%);
         background:-webkit-linear-gradient(top, #bc3315 5%, #d0451b 100%);
         background:-o-linear-gradient(top, #bc3315 5%, #d0451b 100%);
         background:-ms-linear-gradient(top, #bc3315 5%, #d0451b 100%);
         background:linear-gradient(to bottom, #bc3315 5%, #d0451b 100%);
         filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bc3315', endColorstr='#d0451b',GradientType=0);
         background-color:#bc3315;
         }
         .button:active {
         position:relative;
         top:1px;
         }
         table {
         border-collapse: collapse;
         width: 100%; }
         td {
         border: 2px solid #000000;
         padding: 5px;}
         .header {
         font-weight: bold;
         }  
         table#table {
         border-collapse: collapse;
         width: 100%; }
         #table td {
         border-width: 1px;
         border-style: solid;
         border-color: #dddddd;
         padding: 5px; }
         #table .header {
         font-weight: bold; }
         #table .emp { }
      </style>
      <div id=""page"">
         <div class=""center title"">Zakup produktu - demo</div>
         <br/>
         <div class=""center"">
            <table id=""table"">
               <tr class=""header"">
                  <td>Cena:</td>
                  <td>Numer:</td>
                  <td>Treść:</td>
                  <td>Produkt:</td>
               </tr>
               <?php foreach($microsms as $var) { ?>
               <tr class=""emp"">
                  <td><?php echo $var['netto']; ?> (<?php echo number_format($var['netto'] * ( 1 + 23 / 100 ), 2); ?> z VAT)</td>
                  <td><?php echo $var['number']; ?></td>
                  <td><?php echo $settings['txt']; ?></td>
                  <td><?php echo $var['product']; ?></td>
               </tr>
               <?php } ?>
            </table>
           
           <?php if(isset($info)) { ?><div class=""alert-box notice""><?php echo $info; ?></div><?php } ?>
           
           <form method=""post"" >
               <input type=""hidden"" name=""send"" value="""" />   
               <input name=""code"" placeholder=""Kod sms"" type=""text"" />
               <button class=""button"" type=""submit"">Sprawdz kod</button>
            </form>
            <br/><br/>
            Platnosci zapewnia firma <a href=""http://microsms.pl/"">MicroSMS</a>. <br/>
            Korzystanie z serwisu jest jednozanczne z akceptacja <a href=""http://microsms.pl/partner/documents/"">regulaminów</a>.<br/>
            Jesli nie dostales kodu zwrotnego w ciagu 30 minut skorzystaj z <a href=""http://microsms.pl/customer/complaint/"">formularza reklamacyjnego</a><br/><br/>
            <img src=""http://microsms.pl/public/cms/img/banner.png"">
         </div>
      </div>
   </body>
</html>

 "
zCrHaibh,CMacroPlast,Filipinex,Java,Tuesday 19th of March 2024 12:14:58 PM CDT,"import greenfoot.*;  

public class CMacroPlast extends CTrash
{
    public CMacroPlast()
    {
        super(2);
    }
    
    public void ApplyOnFish(CFish fish)
    {
        //ak sa dotkne ryby
        fish.TunrOffEating();//zamedzi sa moznost jedenia
        this.getWorld().removeObject(this); //zmizne plast
    }
}"
iFFDSbHe,CFries,Filipinex,Java,Tuesday 19th of March 2024 12:14:37 PM CDT,"import greenfoot.*;  

public class CFries extends CTrash
{
    public CFries()
    {
        super(1);
    }
    
    public void ApplyOnFish(CFish fish)
    {
        //ak sa dotkne ryby
        fish.Accelerate(); // ryba zrychli
        fish.TurnOnEating(); // zamedzi sa moznost jedenia
        this.getWorld().removeObject(this); //zmizne jedlo
    }
}"
c0bijnGZ,CApple,Filipinex,Java,Tuesday 19th of March 2024 12:14:17 PM CDT,"import greenfoot.*;  

public class CApple extends CTrash
{
    public CApple()
    {
        super(1);
    }
    
    public void ApplyOnFish(CFish fish)
    {
        //ak sa dotkne ryby
        fish.SetParalysisTimer(500); // ryba zamrzne na 500 tickov
        fish.SetMove(false); //pohyb bude false
        fish.TurnOnEating(); //zapne jedenie
        this.getWorld().removeObject(this); // zmizne jedlo
    }
}"
D6c68vMr,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Tuesday 19th of March 2024 12:13:52 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_518805.pdf

Working as of:
19 March 2024"
m0jRf5np,CTrash,Filipinex,Java 5,Tuesday 19th of March 2024 12:13:23 PM CDT,"import greenfoot.*;

public abstract class CTrash extends Actor
{  
    //deklaracia
    protected int Weight;
    
    public CTrash(int weight) //odpad ma nejaku hmotnost na zaklade
    {
        this.Weight = weight; //ktorej sa urcuje rychlost padania
        this.setRotation(90); //otocenie aby to bolo krajsie
    }
    
    public void act()
    {
        Initialize(); // ""inicializacia""
    }
    
    public void Initialize()
    {
        this.move(this.Weight);  //bude sa hybat na zaklade svojej hmotnosti
        
        if (this.isAtEdge()) //ak sa dotkne steny
        {
            this.getWorld().removeObject(this);//zmizne
        }
    }
    
    public abstract void ApplyOnFish(CFish fish);
}"
v6kVYA7T,CShark,Filipinex,Java,Tuesday 19th of March 2024 12:12:53 PM CDT,"import greenfoot.*;

public class CShark extends CInterFish
{
    //deklaracia
    private CFish Meal;
    
    public CShark(CFish meal, int size)
    {
        super(size); //volania konstruktora pre size
        this.getImage().scale(size * 8, size * 6); //natstavenie rozmerov zraloka
        this.Meal = meal;
        this.Size = size;
    }
    
    public void act()
    {
        //ziskanie suradnic
        int FishX = this.Meal.getX(); 
        int FishY = this.Meal. getY();
        
        //otacanie za rybou
        this.turnTowards(FishX, FishY);
        this.move(1);
        
       
        
    }
    
    //metoda sa vola v triede CFish
    public void InteractWithFish(CFish fish)
    {
        //ak sa dotkne ryby
        this.Size++; // zvacsi svoju velkost o 1
        this.getImage().scale(this.Size * 8, this.Size * 6);//aktualizacia velkosti
        fish.Reset(); //natstavenie povodnych suradnic ryby
        //metoda je v triede CFish
    }
}
"
7XyEXTvv,CPufferFish,Filipinex,Java,Tuesday 19th of March 2024 12:12:19 PM CDT,"import greenfoot.*;

public class CPufferFish extends CInterFish

{
    
    public CPufferFish(int size)
    {
        super(size);
        Initialize();
    }
    
    
    public CPufferFish()
    {
        super(0);
        Initialize();
        
    }
    
    
    public void Initialize()
    {
        this.Size = 0;
        this.getImage().scale(50, 50);
        this.getImage().mirrorHorizontally();
    }
    
    public void act()
    {    
        MoveAround();          
    }
    
    public void MoveAround()
    {
        this.move(1);
        
        if (this.isAtEdge()) //ak sa dotyka steny
        {
            this.getWorld().removeObject(this); //zmizne
        }
        
       
         if (Greenfoot.getRandomNumber(300)< 1) //v nahodnych intervaloch
        {
            this.IncreaseSize(10); //zvacsi svoju velkost
        } 
    }
    
    
    public void IncreaseSize(int increment)
    {
        this.Size += increment; //o kolko sa ma ryba zvacsit

        //priradenie momentalnych rozmerov do premennych
        int Width = this.getImage().getWidth(); 
            
        int Height = this.getImage().getWidth();
            
        this.setImage(""NafukovaciaRyba.png""); //najde obrazok v suboroch
        this.getImage().scale(Width + increment, Height + increment); //natstavenie momentalnych
        //rozmerov + o kolko sa ma ryba zvacsit (increment)
        
        this.getImage().mirrorHorizontally();
    }
    
    public void InteractWithFish(CFish fish)
    {
        fish.Accelerate();
        fish.TurnOnEating();
        //Ryba zrychli viac ako ked sa zje hranolky, 
        //lebo nafukovacia ryba hned nezmizne a program vidi, 
        //ze sa jej stale dotyka a na dalej zrychluje
    }

}"
akA5AXiV,CFood,Filipinex,Java,Tuesday 19th of March 2024 12:11:19 PM CDT,"import greenfoot.*;

public class CFood extends CInterFish
{
    public CFood(int size)
    {
        super(size);
        this.getImage().scale(25, 10);
        this.getImage().mirrorHorizontally();
    }
    
    public void act()
    {
        MoveAround();
    }
    
    public void MoveAround()
    {
        this.move(1);
        
        if (this.isAtEdge()) //ak sa dotyka steny
        {
            this.getWorld().removeObject(this); //zmizme
        }
    }
    
    public void InteractWithFish(CFish fish)
    {
        fish.Eat(this);
    }
}"
9qhcNS7j,CInterFish,Filipinex,Java,Tuesday 19th of March 2024 12:10:28 PM CDT,"import greenfoot.*;  


public abstract class CInterFish extends CMotherFish
{
    //materska trieda interagujucich ryb
    public CInterFish(int size)
    {
        super(size); //volanie konstruktora pre size
    }
    
    public abstract void InteractWithFish(CFish fish);
}"
CUZKNbes,CFish,Filipinex,Java,Tuesday 19th of March 2024 12:09:56 PM CDT,"import greenfoot.*;
import javax.swing.JOptionPane;

public class CFish extends CMotherFish
{
    protected int Shift;
    protected int DefShift = Shift;
    
    protected boolean RotationRight;
    protected String KeysText;
    
    protected String Up;
    protected String Left;
    protected String Down;
    protected String Right;
    
    protected String Name;
    
    private int SpeedTimer;
    private int ParalysisTimer;
    
    protected boolean EatingGood = true;
    
    private boolean MoveIsGood = true;
    
    //konstruktor bez urcovania klaves
    public CFish(String name, int size)
    {   
        super(size);
        this.Name = name;
        
        Initialize();
    }
    
    //konstruktor s urcovanim klaves
    public CFish(String name, int size, String up,String left, String down, String right)
    {    
        super(size);
        this.Up = up;
        this.Left = left;
        this.Down = down;
        this.Right = right;
        
        this.Name = name;
        
        Initialize();
    }
    
    //inicializacia konstruktora
    public void Initialize()
    {
        this.getImage().scale(75, 50);
        this.Shift = 5;
        this.RotationRight = true;  
        this.SpeedTimer = 0;
        this.ParalysisTimer = 0;
        this.Accelerate();
    }
    
    public void ConfigureKeys()
    {
        KeysText = ""Zadaj klávesu, ktorou budeš chcieť ovládať rybičku smerom"";
        this.Up = JOptionPane.showInputDialog(KeysText + "" HORE"");//""W"";
        this.Left = JOptionPane.showInputDialog(KeysText + "" do ĽAVA"");//""A"";
        this.Down = JOptionPane.showInputDialog(KeysText + "" DOLE"");//""S"";
        this.Right = JOptionPane.showInputDialog(KeysText + "" do PRAVA"");//""D"";
    }
    
    public void act()
    {
        MoveAround();
        
        UpdateSpeedTimer();
        UpdateParalysisTimer();
        
        ControlTrashColision();
        ControlFishColision();
    }
    
    public void TunrOffEating()
    {
        this.EatingGood = false;
    }
    
    public void TurnOnEating()
    {
        this.EatingGood = true;
    }
    
    public void MoveAround()
    {
        if(MoveIsGood)
        {
            if(Greenfoot.isKeyDown(this.Up)) //up
            {
                this.setLocation(this.getX(), this.getY() - Shift);
            }
        
            if(Greenfoot.isKeyDown(this.Left)) //left
            {
                if (this.RotationRight == true)
                {
                    this.getImage().mirrorHorizontally();
                    this.RotationRight = false;
                }
                this.setLocation(this.getX() - Shift, this.getY());
            }
        
            if(Greenfoot.isKeyDown(this.Down)) //down
            {
                this.setLocation(this.getX(), this.getY() + Shift);
            }
        
            if(Greenfoot.isKeyDown(this.Right)) //right
            {
                if (this.RotationRight == false)
                {
                    this.getImage().mirrorHorizontally();
                    this.RotationRight = true;
                }
                this.setLocation(this.getX()+ Shift, this.getY());
            } 
        }
    }
    
    public void ControlEat()
    {
        CFood p = (CFood)this.getOneIntersectingObject(CFood.class);
        if (p != null && this.EatingGood)
        {
            this.Eat(p);    
        }
    }

    
    public void Eat(CFood p)
    {
        if (this.EatingGood)
        {
            this.Size += p.Size;
            this.getWorld().removeObject(p);
             
            int Width = this.getImage().getWidth();
            int Height = this.getImage().getWidth();
            
            this.setImage(""Rybka.png"");
            this.getImage().scale(Width + Size, Height + Size);  
            //this.getImage().mirrorHorizontally();
            
        
        }
    }
    
    public void Reset()
    {
        this.setLocation(10, 10); // povodne suradnice ryby
        //metoda sa vola t triede CShark
    }
    
    public void Accelerate()
    {
        if (this.Shift < 28) //shift casom meni svoju hodnotu a ak bude mensi ako  tak
        {
            this.Shift += 3; //sa zvacsi o 3 (ryba zrychli o 3 jednotky rychlosti)
            this.SpeedTimer = 10;
        }
    }
    
    public void Decelerate()
    {
        if (this.Shift > 7)
        {
            this.Shift -= 3; // zmensi sa o 3
        }
    }
    
    public void UpdateSpeedTimer()
    {
        if (this.SpeedTimer > 0) //ak ma SpeedTimer nejaku hodnotu
        {
            this.SpeedTimer--; //zacne ju znizovat
            
            if (this.SpeedTimer == 0)
            {
                this.Decelerate(); //zance spomalovat ryba
            }
        }
    }
    
    //rovnaky princip ako SpeedTimer
    public void UpdateParalysisTimer()
    {
        if (this.ParalysisTimer > 0) 
        {
            this.ParalysisTimer--;
            
            if (this.ParalysisTimer == 0)
            {
                this.MoveIsGood = true;
            }
        }
    } 
    
    public void ControlTrashColision()
    {
        //ukladanie do premennej Trash typu CTrash
        //nadobuda hodnotu objektu s ktorou ryba momentalne interaguje
        CTrash Trash = (CTrash)this.getOneIntersectingObject(CTrash.class);
        if (Trash != null) //ak Trash nadobudol nejaku hodnotu
        {
            Trash.ApplyOnFish(this); //aplikacia na rybu
            //Trash moze byt CApple/CFries/CMacroPlast
            //kazdy z tychto typov ma iny proces metody ApplyOnFish
        }
    }
    
    //rovnaky princip ako ControlTrashColision, len sa jedna o ryby
    public void ControlFishColision()
    { 
        CInterFish p = (CInterFish)this.getOneIntersectingObject(CInterFish.class);
        if (p != null)
        {
            p.InteractWithFish(this);
        }
    }
    
    //Properties pre natstavovanie hodnot premennych
    public void SetMove(boolean status)
    {
         this.MoveIsGood = status;
    }
    
    public void SetSpeedTimer(int value)
    {
        this.SpeedTimer = value;
    }
    
    public void SetParalysisTimer(int value)
    {
        this.ParalysisTimer = value;
    }
}"
zBc2SFzZ,CMotherFish,Filipinex,Java,Tuesday 19th of March 2024 12:08:59 PM CDT,"import greenfoot.*;

public class CMotherFish extends Actor
{
    //materska trieda ryb
    protected int Size;
    
    public CMotherFish(int size)
    {
        this.Size = size; 
    }
    
    public void act()
    {
    }
}"
ZaZ8Bp0A,Toy Shop,Denis2312,Python,Tuesday 19th of March 2024 12:07:26 PM CDT,"price_of_trip = float(input())

number_of_puzzles = int(input())
number_of_dolls = int(input())
number_of_bears = int(input())
number_of_minions = int(input())
number_of_trucks = int(input())

amount_puzzle = number_of_puzzles * 2.60
amount_dolls = number_of_dolls * 3
amount_bears = number_of_bears * 4.10
amount_minions = number_of_minions * 8.20
amount_trucks = number_of_trucks * 2

toys_count = (amount_puzzle + amount_dolls + amount_bears + amount_minions + amount_trucks)

total_sum = (number_of_puzzles + number_of_dolls + number_of_bears + number_of_minions + number_of_trucks)

if toys_count >= 50:
    total_sum *= 0.25

total_sum = toys_count * 0.9

if total_sum >= price_of_trip:
    print(f""Yes! {total_sum - price_of_trip:.2f} lv left."")
else:
    (f""Not enough money! {price_of_trip - total_sum:.2f} lv needed."")"
QQ30WD7Y,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 12:07:24 PM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>

using namespace std;

void f(int x[]){
    cout << &x[0] << "" "" << x[0] << endl;
    //cout << (x+4) << "" "" << *(x+4) << endl;
    //cout << x << "" "" << x[0] << endl;
}
int g(int a){
    cout << &a << "" "" << a << endl;
}
int h(vector<int> b){
    cout << &b << "" "" << b[0] << endl;
}


int main(){
    int z = 1;
    cout << &z << "" "" << z << endl;
    g(z);
    cout << endl << endl;

    vector<int> v(10, 5);
    cout << &v << "" "" << v[0] << endl;
    h(v);
    cout << endl << endl;

    int a[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
    cout << &a[0] << "" "" << a[0] << endl;
    for(int i = -5; i < 15; ++i){
        //cout << &a[i] << "" "" << a[i] << endl;
    }
    //cout << endl;
    f(a);


    return 0;
}
"
nsp8WwHc,MyWorld,Filipinex,Java,Tuesday 19th of March 2024 12:05:54 PM CDT,"import greenfoot.*;

public class MyWorld extends World
{
    //deklaracia
    CFish Fish1;
    CFish Fish2;
    CFish Fish3;
    CShark Shark1;
    CPufferFish PufferFish;
    
    public MyWorld()
    {    
        super(800, 600, 1); 

        //inicializacia 
        
        Fish1 = new CFish(""RybaPrva"",10, ""8"", ""4"", ""5"", ""6""); //aby nebolo treba pri kazdom spusteni zadavat klavesy
        //Fish1 = new CFish(""RybaPrva"",10); //pre zadavanie klaves cez okno.
        //Treba aj odkomentovat posledny riadok konstruktora triedy MyWorld ""Fish1.ConfigureKeys();""
        this.addObject(Fish1, 200, 300);
        
        Fish2 = new CFish(""RybaDruha"", 10, ""W"", ""A"", ""S"", ""D"");
        this.addObject(Fish2, 200, 200);
        
        Fish3 = new CFish(""RybaTretia"", 10, ""up"", ""left"", ""down"", ""right"");
        this.addObject(Fish3, 200, 400);

        Shark1 = new CShark(Fish1, 10);
        this.addObject(Shark1, 500, 250);
        
        
        
        
        
        PufferFish = new CPufferFish();
        this.addObject(PufferFish, 0, 100);
        
        
        
        
        //Fish1.ConfigureKeys();
    }
    
    public void GenerateTrash()
    {
        //generacia odpadu v nahodnych intervaloch
        if (Greenfoot.getRandomNumber(500) < 2)
        {
            int Type = Greenfoot.getRandomNumber(3);
            CTrash Trash = null;
                  
            //generacia nahodneho odpadu fries/plast/apple
            switch (Type)
            {
                case 0: 
                    Trash = new CFries();
                    break;
                
                case 1:
                    Trash = new CMacroPlast();
                    break;
                    
                case 2:
                    Trash = new CApple();
                    break;
            }
            
            //prida Trash na suradniciach [random; 0]
            this.addObject(Trash, 50 + Greenfoot.getRandomNumber(700), 0);
        }
        
    }
    
    public void GenerateFood()
    {
       //generacia jedla v nahodnych intervaloch
       if (Greenfoot.getRandomNumber(500) < 1)
        {
            int Size = Greenfoot.getRandomNumber(3) + 1;
            
            //prida Food na suradniciach [0; random]
            this.addObject(new CFood(Size), 0, Greenfoot.getRandomNumber(500) + 50);
        }   
    }
    
    //volanie metod generacii
    public void act()
    {
        GenerateFood();
        GenerateTrash();
    }
}"
RuzYyjca,Untitled,Corbi098,Java,Tuesday 19th of March 2024 12:05:52 PM CDT,"package org.example.xml;


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

//списано с примера
public class TicTacToeGame extends JFrame {
    private String currentPlayer = ""X"";
    private int size = 10;
    private JButton[][] matrix = new JButton[size][size];

    public static void main(String[] args) {
        SwingUtilities.invokeLater(TicTacToeGame::new);
    }

    public TicTacToeGame() {
        setTitle(""Крестики нолики"");
        setSize(600, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(size, size));
        setLocationRelativeTo(null);
        initButtons();
        setVisible(true);
    }

    private void initButtons() {
        for (int y = 0; y < size; y++) {
            for (int x = 0; x < size; x++) {
                JButton button = new JButton("""");
                button.setFont(new Font(""Arial"", Font.PLAIN, 30));
                button.setFocusPainted(false);
                button.addActionListener(new ButtonActionListener());

                add(button);
                matrix[y][x] = button;

            }
        }
    }

    private class ButtonActionListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent actionEvent) {
            JButton clicked = ((JButton) actionEvent.getSource());

            if (clicked.getText().isEmpty()) {
                clicked.setText(currentPlayer);

                if (winCheck()) {
                    JOptionPane.showMessageDialog(null, currentPlayer + "" выиграл"");
                    reset();
                    return;
                }
                if (tipCheck()) {
                    JOptionPane.showMessageDialog(null, ""Ничья"");
                    reset();
                    return;
                }

                currentPlayer = currentPlayer.equals(""X"") ? ""O"" : ""X"";
            }

        }
    }
    
    private boolean winCheck() {
        for (int i = 0; i < size; i++) {
            if (checkRow(matrix[i][0], matrix[i][1], matrix[i][2], matrix[i][3], matrix[i][4], matrix[i][5], matrix[i][6], matrix[i][7], matrix[i][8], matrix[i][9])) return true;
        }

        for (int i = 0; i < size; i++) {
            if (checkRow(matrix[0][i], matrix[1][i], matrix[2][i], matrix[3][i], matrix[4][i], matrix[5][i], matrix[6][i], matrix[7][i], matrix[8][i], matrix[9][i])) return true;
        }

        return checkRow(matrix[0][0], matrix[1][1], matrix[2][2], matrix[3][3], matrix[4][4], matrix[5][5], matrix[6][6], matrix[7][7], matrix[8][8], matrix[9][9]) ||
                checkRow(matrix[0][9], matrix[1][8], matrix[2][7], matrix[3][6], matrix[4][5], matrix[5][4], matrix[6][3], matrix[7][2], matrix[8][1], matrix[9][0]);
    }

    private boolean tipCheck() {
        for (JButton[] y : matrix) {
            for (JButton x : y) {
                if (x.getText().isEmpty()) return false;
            }
        }
        return true;
    }

    private void reset() {
        for (JButton[] y : matrix) {
            for (JButton x : y) {
                x.setText("""");
            }
        }
        currentPlayer = ""X"";
    }

    private boolean checkRow(JButton b0, JButton b1, JButton b2, JButton b3, JButton b4, JButton b5, JButton b6, JButton b7, JButton b8, JButton b9) {
        return !b0.getText().isEmpty() 
                && b1.getText().equals(b0.getText())
                && b2.getText().equals(b0.getText())
                && b3.getText().equals(b0.getText())
                && b4.getText().equals(b0.getText())
                && b5.getText().equals(b0.getText())
                && b6.getText().equals(b0.getText())
                && b7.getText().equals(b0.getText())
                && b8.getText().equals(b0.getText())
                && b9.getText().equals(b0.getText());
    }
}
"
4jsXg9PZ,Untitled,dereksir,Java,Tuesday 19th of March 2024 12:01:45 PM CDT,"package com.example;

// import the required classes
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.BrowserVersion;
import com.gargoylesoftware.htmlunit.Page;

public class Main {
    public static void main(String[] args) { 
		// define proxy settings
        String PROXY_HOST = ""67.43.228.252"";
        int PROXY_PORT = 8013;

        // create Chrome Web Client instance using specified proxy settings.
        try (final WebClient webClient = new WebClient(BrowserVersion.CHROME, PROXY_HOST, PROXY_PORT))  {

			//set proxy username and password 
        	final DefaultCredentialsProvider credentialsProvider = (DefaultCredentialsProvider) webClient.getCredentialsProvider();
        	credentialsProvider.addCredentials(""username"", ""password"");
			
			// navigate to target web page
            Page page = webClient.getPage(""https://httpbin.io/ip"");

            // extract the content as string
            String pageContent = page.getWebResponse().getContentAsString();

            // print the content
            System.out.println(pageContent);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}"
Jy04ByAX,lw7_1 for MKT2,J3st3rs_j0k3,C,Tuesday 19th of March 2024 11:59:33 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <windows.h>

#define n 80

int main() {
    setlocale(LC_ALL, ""Rus"");
    HANDLE hFile;
    DWORD dwBytesRead, dwBytesWritten;
    char s[n], sx[n], *p, scount[n];
    
    hFile = CreateFile(""text.txt"", GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hFile == INVALID_HANDLE_VALUE) {
        printf(""Не удалось открыть файл\n"");
        return 1;
    }

    HANDLE hTempFile = CreateFile(""temp.txt"", GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hTempFile == INVALID_HANDLE_VALUE) {
        printf(""Не удалось создать файл\n"");
        CloseHandle(hFile);
        return 2;
    }

    while (ReadFile(hFile, s, n, &dwBytesRead, NULL) && dwBytesRead > 0) {
        s[dwBytesRead] = '\0'; // Null-terminate the string read from file
        strcpy(sx, s); // Create a copy of the string
        
        p = strtok(s, "" "");
        int count = 0;
        while (p != NULL) {
            count++;
            p = strtok(NULL, "" "");
        }
        sprintf(scount, ""(%d) "", count);

        p = strchr(sx, '\n');
        if (p)
            *p = ' ';
        strcat(sx, scount);
        sx[strlen(sx) - 1] = '\n';

        WriteFile(hTempFile, sx, strlen(sx), &dwBytesWritten, NULL);
    }

    CloseHandle(hFile);
    CloseHandle(hTempFile);
    DeleteFile(""text.txt"");
    MoveFile(""temp.txt"", ""text.txt"");

    return 0;
}"
VWw9yVqU,Untitled,dereksir,Java,Tuesday 19th of March 2024 11:52:42 AM CDT,"//set proxy username and password 
final DefaultCredentialsProvider credentialsProvider = (DefaultCredentialsProvider) webClient.getCredentialsProvider();
credentialsProvider.addCredentials(""username"", ""password"");"
u417qGid,Untitled,dereksir,Java,Tuesday 19th of March 2024 11:41:54 AM CDT,"package com.example;

// import the required classes
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.BrowserVersion;
import com.gargoylesoftware.htmlunit.Page;

public class Main {
    public static void main(String[] args) { 
		// define proxy settings
        String PROXY_HOST = ""67.43.228.252"";
        int PROXY_PORT = 8013;

        // create Chrome Web Client instance using specified proxy settings.
        try (final WebClient webClient = new WebClient(BrowserVersion.CHROME, PROXY_HOST, PROXY_PORT))  {
			
			// navigate to target web page
            Page page = webClient.getPage(""https://httpbin.io/ip"");

            // extract the content as string
            String pageContent = page.getWebResponse().getContentAsString();

            // print the content
            System.out.println(pageContent);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}"
5faUq9r4,Untitled,dereksir,Java,Tuesday 19th of March 2024 11:37:44 AM CDT,"public class Main {
    public static void main(String[] args) {
        //...

		// create Chrome Web Client instance using specified proxy settings.
        try (final WebClient webClient = new WebClient(BrowserVersion.CHROME, PROXY_HOST, PROXY_PORT)) {
           //...
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}"
R7Jee4n9,SFDVSFGDRB,gadungw71,PHP,Tuesday 19th of March 2024 11:37:08 AM CDT,"•	https://techcommunity.microsoft.com/t5/community-events-list/%ED%8C%8C%EB%AC%98-exhuma-%ED%8C%8C%EB%AC%98-2024-%EC%A0%84%EC%B2%B4-%EC%98%81%ED%99%94-%EB%AC%B4%EB%A3%8C-%EC%98%A8%EB%9D%BC%EC%9D%B8-hd-korea/m-p/4090037
•	https://techcommunity.microsoft.com/t5/community-events-list/%ED%8C%8C%EB%AC%98-2024-exhuma-%EC%A0%84%EC%B2%B4-%EC%98%81%ED%99%94-%EB%B2%84%EC%A0%84-%EB%AC%B4%EB%A3%8C-hd-1080p/m-p/4090045
•	https://techcommunity.microsoft.com/t5/community-events-list/%E7%A0%B4%E5%A2%93-2024-%E5%AE%8C%E6%95%B4%E7%89%88-exhuma1080p-%E9%AB%98%E6%B8%85%E7%94%B5%E5%BD%B1tw-zh-hd/m-p/4090055
•	https://techcommunity.microsoft.com/t5/community-events-list/%E7%A0%B4%E5%A2%93-2024-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-hd-bd1080p-%E5%85%8D%E8%B2%BB%E4%B8%8B%E8%BC%89-hd/m-p/4090061
•	https://techcommunity.microsoft.com/t5/community-events-list/%E9%9D%92%E6%98%A518-2-%E9%80%9A%E5%BE%80%E6%9C%89%E4%BD%A0%E7%9A%84%E6%97%85%E7%A8%8B-2024-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-hd-bd1080p-%E5%85%8D%E8%B2%BB%E4%B8%8B%E8%BC%89-hd/m-p/4090073
•	https://techcommunity.microsoft.com/t5/community-events-list/%E7%A0%B4%E5%A2%93-%ED%8C%8C%EB%AC%98%E5%A7%AC%E7%B7%9A%E4%B8%8A%E7%9C%8B-%E5%AE%8C%E6%95%B4%E7%89%88%E9%9B%BB%E5%BD%B1%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/m-p/4090222
•	https://techcommunity.microsoft.com/t5/community-events-list/xem-phim-mai-2024-vi%E1%BB%87tsub-full-hd/m-p/4090076
•	https://techcommunity.microsoft.com/t5/community-events-list/vi%E1%BB%87tsub-full-hd-xem-phim-mai-2024-thuy%E1%BA%BFt-minh/m-p/4090086
•	https://github.com/Exhuma-The-Unearthed-Grave-2024-HD
•	https://github.com/Exhuma-780-KOREAN-HD
•	https://github.com/Exhuma-TW-HK-HD
•	https://github.com/2024-Exhuma-TAIWAN
•	https://techcommunity.microsoft.com/t5/community-events-list/voir-kung-fu-panda-4-en-streaming-vf-fran%C3%A7ais/m-p/4090157
•	https://github.com/Phim-MAI-2024-Thuy-t-Minh-Full-HD-Vi-t
•	https://github.com/FILMS-VOIR-Tout-sauf-toi-en-StreamingVF
•	https://wandering.flarum.cloud/d/50087-kulamampir
•	https://click4r.com/posts/g/15168474/asulama
•	https://forum.webnovel.com/d/170117-jarakantara
•	https://hiuderyy.hashnode.dev/sadarii
•	https://dojour.us/e/24850-bersamadia
•	https://open.firstory.me/story/cltykslhf0ivy01w13kbxhhlw
•	https://telegra.ph/melukis-senja-03-19
•	https://paste.ee/p/5JY8H
•	https://start.me/w/Dx58p8
•	https://hackmd.io/@rerewilli6/r1A1nVwAa
•	https://muckrack.com/aleena-sadwavr/bio
•	https://www.bitsdujour.com/profiles/RIGNah
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/713929/Default.aspx
•	https://profile.hatena.ne.jp/asallapor/
•	https://www.fitlynk.com/826ddd6da
•	https://www.artstation.com/aleena0406/profile
"
LjEc6ECS,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 11:28:56 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>

using namespace std;

void kurti(int kiek, int duom[]){
    for(int i = 0; i < kiek; ++i){
        duom[i] = rand()%100;
    }
}
void rikiuoti(int kiek, int duom[]){
    for(int i = 0; i < kiek; ++i){
        for(int j = 0; j < kiek-1; ++j){
            if(duom[j] > duom[j+1]){
                int temp = duom[j];
                duom[j] = duom[j+1];
                duom[j+1] = temp;
            }
        }
    }
}
void spausdinti(int kiek, int duom[]){
    for(int i = 0; i < kiek; ++i){
        cout << duom[i] << "" "";
    }
    cout << endl;
}

int main(){

    int kiek = 25;
    int duom[kiek] = { 0 };

    kurti(kiek, duom);
    rikiuoti(kiek, duom);
    spausdinti(kiek, duom);

    return 0;
}
"
1AMTcdn0,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 11:28:25 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>

using namespace std;

void kurti(vector<int> &v){
    for(int i = 0; i < v.size(); ++i){
        v[i] = rand()%100;
    }
}
void rikiuoti(vector<int> &v){
    for(int i = 0; i < v.size(); ++i){
        for(int j = 0; j < v.size()-1; ++j){
            if(v[j] > v[j+1]){
                int temp = v[j];
                v[j] = v[j+1];
                v[j+1] = temp;
            }
        }
    }
}
void spausdinti(vector<int> duom){
    for(int i = 0; i < duom.size(); ++i){
        cout << duom[i] << "" "";
    }
    cout << endl;
}

int main(){

    int kiek = 25;
    int duom[kiek] = { 0 };
    vector<int> v(duom, duom+kiek);

    kurti(v);
    rikiuoti(v);
    spausdinti(v);

    return 0;
}
"
T1FBHYie,Untitled,Corbi098,Java,Tuesday 19th of March 2024 11:26:05 AM CDT,"package org.example.xml;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.Date;
import java.util.Random;

public class TicTacToe extends JFrame {
    static TicTacToe current;
    public static void main(String[] args) {
        new TicTacToe();
    }
    TicButton[][] buttons;
    int[] matrix;
    boolean playerTurn = true;
    boolean active = true;
    TicTacToe frame;

    public TicTacToe() {
        frame = this;
        current = frame;
        configureFrame();
        initMatrix();
    }

    private void initMatrix() {
        int buttonSize = 130;
        Font font = new Font(""TicTacToeFont"", Font.BOLD, 40);
        buttons = new TicButton[3][3];

        for (int y = 0; y < buttons.length; y++) {
            JButton[] line = buttons[y];
            for (int x = 0; x < line.length; x++) {
                JButton button = new TicButton(x, y);

                button.setBounds(50 + x * buttonSize, 30 + y * buttonSize, buttonSize, buttonSize);
                button.setFont(font);
                add(button);
                line[x] = button;
            }
        }
        matrix = new int[9];



    }

    private void configureFrame() {
        setVisible(true);
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);
        setLocationRelativeTo(null);
    }

    private void reset() {
//        initMatrix();
        matrix = new int[9];

        for (JButton[] line : buttons) {
            for (JButton jButton : line) {
                jButton.setText("""");
            }
        }
        active = true;
    }

    public class TicButton extends JButton {
        public TicButton(final int x, final int y) {
            super();
            Action action = new AbstractAction() {
                @Override
                public void actionPerformed(ActionEvent actionEvent) {
                    if (active) {
                        if (playerTurn) {
                            JButton clicked = (JButton) actionEvent.getSource();
                            if (clicked.getText().isEmpty()) {
                                clicked.setText(""X"");
                                placeFigure(x, y, 1);
                                if (endCheck() == 0) {
                                    computerTurn();
                                }
                            }
                        }
                    } else {
                        reset();
//                        current = new TicTacToe();
//                        frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
                    }
                }
            };
            setAction(action);
            setText("""");
        }
    }

    boolean endTurn() {
        int code = endCheck();
        if (code == 1) {
            return true; //win
        } else if (code == 2) {
            return true; //lose
        } else return code == 3; //ничья
    }

    private void placeFigure(int x, int y, int code) {
        matrix[(y*3)+x] = code;
        buttons[y][x].setText(switch (code) {
            case 1 -> ""X"";
            case 2 -> ""O"";
            default -> """";
        });
        if (endTurn()) active = false;
    }

    private void placeCircle(int x, int y) {
        placeFigure(x, y, 2);
    }

    private void placeCircle(int a) {
        placeCircle(a % 3, a / 3);
    }

    void computerTurn() {
        if (matrix[4] == 0) {
            placeCircle(1, 1);
            return;
        }
        if (endLineIfThereIs()) {
            return;
        }
        if (matrix[4] == 2 && matrix[1] != 2 && matrix[3] != 2 && matrix[5] != 2 && matrix[7] != 2) {
            if (matrix[1] == 0) {
                placeCircle(1, 0);
                return;
            } else if (matrix[3] == 0) {
                placeCircle(0, 1);
                return;
            } else if (matrix[5] == 0) {
                placeCircle(2, 1);
                return;
            } else if (matrix[7] == 0) {
                placeCircle(1, 2);
                return;
            }
        }
        if (matrix[0] == 0) {
            placeCircle(0, 0);
            return;
        } else if (matrix[2] == 0) {
            placeCircle(2, 0);
            return;
        } else if (matrix[6] == 0) {
            placeCircle(0, 2);
            return;
        } else if (matrix[8] == 0) {
            placeCircle(2, 2);
            return;
        }

        Random random = new Random(new Date().getTime());

        int rand = random.nextInt(9);
        while (matrix[rand] != 0) rand = random.nextInt(9);


        playerTurn = true;
        placeCircle(rand);
    }

    boolean endLineIfThereIs() {
        if (tryTyEndLine(0, 1, 2)) return true;
        if (tryTyEndLine(3, 4, 5)) return true;
        if (tryTyEndLine(6, 7, 8)) return true;

        if (tryTyEndLine(0, 3, 6)) return true;
        if (tryTyEndLine(1, 4, 7)) return true;
        if (tryTyEndLine(2, 5, 8)) return true;

        if (tryTyEndLine(0, 4, 8)) return true;
        return tryTyEndLine(2, 4, 6);
    }

    boolean tryTyEndLine(int a, int b, int c) {
        int va = matrix[a];
        int vb = matrix[b];
        int vc = matrix[c];

        if (va != 0 && va == vb && vc == 0) {
            placeCircle(c);
            return true;
        } else if (va != 0 && va == vc && vb == 0) {
            placeCircle(b);
            return true;
        } else if (vb != 0 && vb == vc && va == 0) {
            placeCircle(a);
            return true;
        }
        return false;
    }

    int endCheck() { /*0 - игра продолжается, 1 - выиграл игрок, 2 - выиграл компьютер, 3 - ничья*/
        int code;
        if ((code = checkTriple(0, 1, 2)) != 0) return code;
        if ((code = checkTriple(3, 4, 5)) != 0) return code;
        if ((code = checkTriple(6, 7, 8)) != 0) return code;

        if ((code = checkTriple(0, 3, 6)) != 0) return code;
        if ((code = checkTriple(1, 4, 7)) != 0) return code;
        if ((code = checkTriple(2, 5, 8)) != 0) return code;

        if ((code = checkTriple(0, 4, 8)) != 0) return code;
        if ((code = checkTriple(6, 4, 2)) != 0) return code;

        boolean full = true;
        for (int i : matrix) {
            if (i == 0) {
                full = false;
                break;
            }
        }

        if (full) return 3;

        return 0;
    }

    int checkTriple(int a, int b, int c) {
        int va = matrix[a];
        int vb = matrix[b];
        int vc = matrix[c];

        if (va == vb && vb == vc && va != 0) {
            return va;
        }
        return 0;
    }
}
"
VbzA1kFA,Untitled,dereksir,Java,Tuesday 19th of March 2024 11:25:50 AM CDT,"public class Main {
    public static void main(String[] args) {
		// define proxy settings
        String PROXY_HOST = ""67.43.228.252"";
        int PROXY_PORT = 8013;

		//...
	}
}"
JEMKPFN2,RequestException: error with request,basedcount_bot,Python,Tuesday 19th of March 2024 11:23:26 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
VWUYnDrf,RequestException: error with request,basedcount_bot,Python,Tuesday 19th of March 2024 11:21:54 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 122, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
AJ0X9UDu,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Tuesday 19th of March 2024 11:21:19 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 85, in comment_listener
    for comment in fallout76marketplace.stream.comments(skip_existing=True):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
W6mmnP3M,ServerError: received 500 HTTP response,basedcount_bot,Python,Tuesday 19th of March 2024 11:20:53 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 307, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 500 HTTP response
"
GDXg7TRx,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Tuesday 19th of March 2024 11:20:32 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
BpZ7J3pQ,Console output,LukeSavefrogs,Apache Log,Tuesday 19th of March 2024 11:11:04 AM CDT,"backend   | 2024-03-19T13:47:08.793868585Z [nodemon] starting `ts-node src/index.ts`
backend   | 2024-03-19T13:47:08.794565205Z [nodemon] spawning
backend   | 2024-03-19T13:47:08.795968746Z [nodemon] child pid: 37
backend   | 2024-03-19T13:47:11.023835170Z Error: Cannot find module '@libs/github/discussions'
backend   | 2024-03-19T13:47:11.023876670Z Require stack:
backend   | 2024-03-19T13:47:11.023882970Z - /app/src/routes/api/v1/guests.ts
backend   | 2024-03-19T13:47:11.023885770Z - /app/src/routes/api/v1/index.ts
backend   | 2024-03-19T13:47:11.023888070Z - /app/src/routes/index.ts
backend   | 2024-03-19T13:47:11.023890170Z - /app/src/index.ts
backend   | 2024-03-19T13:47:11.023892370Z     at Function.Module._resolveFilename (node:internal/modules/cjs/loader:1144:15)
backend   | 2024-03-19T13:47:11.023894670Z     at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue [as _resolveFilename] (/app/node_modules/@cspotcode/source-map-support/source-map-support.js:811:30)
backend   | 2024-03-19T13:47:11.023897070Z     at Function.Module._load (node:internal/modules/cjs/loader:985:27)
backend   | 2024-03-19T13:47:11.023899270Z     at Module.require (node:internal/modules/cjs/loader:1235:19)
backend   | 2024-03-19T13:47:11.023901470Z     at require (node:internal/modules/helpers:176:18)
backend   | 2024-03-19T13:47:11.023903770Z     at Object.<anonymous> (/app/src/routes/api/v1/guests.ts:4:1)
backend   | 2024-03-19T13:47:11.023906470Z     at Module._compile (node:internal/modules/cjs/loader:1376:14)
backend   | 2024-03-19T13:47:11.023908670Z     at Module.m._compile (/app/node_modules/ts-node/src/index.ts:1618:23)
backend   | 2024-03-19T13:47:11.023910770Z     at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)
backend   | 2024-03-19T13:47:11.023913070Z     at Object.require.extensions.<computed> [as .ts] (/app/node_modules/ts-node/src/index.ts:1621:12) {backend   | 2024-03-19T13:47:11.023915570Z   code: 'MODULE_NOT_FOUND',
backend   | 2024-03-19T13:47:11.023917870Z   requireStack: [
backend   | 2024-03-19T13:47:11.023919970Z     '/app/src/routes/api/v1/guests.ts',
backend   | 2024-03-19T13:47:11.023922170Z     '/app/src/routes/api/v1/index.ts',
backend   | 2024-03-19T13:47:11.023933970Z     '/app/src/routes/index.ts',
backend   | 2024-03-19T13:47:11.023936370Z     '/app/src/index.ts'
backend   | 2024-03-19T13:47:11.023938570Z   ]
backend   | 2024-03-19T13:47:11.023940870Z }
backend   | 2024-03-19T13:47:11.044065647Z [nodemon] app crashed - waiting for file changes before starting..."
FhmrFC3d,Untitled,LukeSavefrogs,JSON,Tuesday 19th of March 2024 11:09:56 AM CDT,"{
  ""compilerOptions"": {
    ""target"": ""es2016"",
    ""module"": ""commonjs"",
    ""baseUrl"": ""."",
    ""paths"": {
      ""@routes/*"": [""src/routes/*""],
      ""@libs/*"": [""src/lib/*""],
      ""@src/*"": [""src/*""]
    },
    ""outDir"": ""./dist/"",
    ""esModuleInterop"": true,
    ""forceConsistentCasingInFileNames"": true,
    ""strict"": true,
    ""skipLibCheck"": true
  }
}
"
d6YHC7nz,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 10:48:34 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>

using namespace std;


int keisti(int &a, int &b){
    cout << ""AB ""<< a << "" "" << b << endl;
    a = 1;
    b = 2;
    cout << ""AB ""<< a << "" "" << b << endl;
    return a+b;
}

int main(){
    int x = 4;
    int y = 5;
    cout << ""XY "" << x << "" "" << y << endl;
    keisti(x, y);
    cout << ""XY ""<< x << "" "" << y << endl;

    return 0;
}
"
gw77wSMk,Untitled,samipote,Python,Tuesday 19th of March 2024 10:47:38 AM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load data
season_stats = pd.read_csv(""data/cbbm/2010.csv"")
tournament_results = pd.read_csv(""data/kaggle/MNCAATourneyCompactResults.csv"")
seeds = pd.read_csv(""data/kaggle/MNCAATourneySeeds.csv"")
team_names = pd.read_csv(""data/kaggle/MTeams.csv"")

# Merge team names with seeds
seeds = pd.merge(seeds, team_names, on=""TeamID"")

# Merge team names with tournament results for winning and losing teams
tournament_results = pd.merge(tournament_results, team_names, left_on=""WTeamID"", right_on=""TeamID"")
tournament_results = pd.merge(tournament_results, team_names, left_on=""LTeamID"", right_on=""TeamID"", suffixes=(""_W"", ""_L""))

# Feature engineering (if needed)

# Merge seeds with season stats
season_stats = pd.merge(season_stats, seeds, left_on=""TeamName"", right_on=""TeamName"")

# Define features and target
features = ['Games Won', 'Win %', 'SoS', 'Pts / Game', 'Opp Pts / Game', 'FG %', '3Pt FG %',
            'Free Throw %', 'Offense Rating', 'Defense Rating', 'Adj. Score Margin', 'Rebound %',
            'Off. Rebound %', 'Effective FG %', 'True Shooting %', 'Opp. True Shoot %', 'Pace',
            'Turnover %', 'Opp. Turnover %', 'Turnover Margin', 'Assist %', 'Assists / Turnover',
            'FT / FGA', 'Opp. FT / FGA']
target = 'WinningTeam'  # Assuming you want to predict the winning team

# Prepare data for modeling
# Create a label for winning team
season_stats['WinningTeam'] = 1

# Create a label for losing team
tournament_results['WinningTeam'] = 0

# Combine winning and losing teams data
all_data = pd.concat([season_stats[features + [target]], tournament_results[features + [target]]])

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(all_data[features], all_data[target], test_size=0.2, random_state=42)

# Train Random Forest Classifier
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)

# Evaluate model
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(""Accuracy:"", accuracy)

# Now you can use this model to predict game results for the current season.
"
Ni3eE1Kv,Untitled,dereksir,Java,Tuesday 19th of March 2024 10:46:36 AM CDT,"package com.example;

// import the required classes
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.BrowserVersion;
import com.gargoylesoftware.htmlunit.Page;

public class Main {
    public static void main(String[] args) { 
		// create Chrome Web Client instance
        try (final WebClient webClient = new WebClient(BrowserVersion.CHROME)) {
			
			// navigate to target web page
            Page page = webClient.getPage(""https://httpbin.io/ip"");

            // Extract the content as string
            String pageContent = page.getWebResponse().getContentAsString();

            // Print the content
            System.out.println(pageContent);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}"
iBJRUag6,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 10:31:48 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>

using namespace std;

// Funkcija gautiSkaiciu atlieka validacija ir
// gauta skaiciu issaugo kintamajame x
template <typename T>
T gautiSkaiciu(string zinute, string klaida = ""Blogas ivedimas!""){
    T x;
    while(1){
        cout << zinute;
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << klaida << endl;
            cin.clear();
            cin.ignore(1024, '\n');
        } else {
            return x;
        }
    }
}


// Funkcija gautiSarasa nuskaito sarasa ir jei
// jis geras issaugo ji vektoriuje v
vector<int> gautiSarasa(string zinute, string klaida = ""Blogas ivedimas!""){
    vector<int> v;
    while(1){
        string line;
        cout << zinute;
        getline(cin, line);

        stringstream ss;
        ss << line;
        int arKlaida = 0;
        while(1){
            int x;
            ss >> x;
            if(!ss.fail()){
                v.push_back(x);
            } else {
                if(!ss.eof())
                    arKlaida = 1;
                break;
            }
        }
        if(arKlaida == 0)
            break;
        else {
            cout << klaida << endl;
            v.clear();
        }
    }
    return v;
}

// atspausdina skaicius esancius vektoriuje v
void spausdintiSarasa(vector<int> v, string antraste = """"){
    // skaiciu sarasas yra geras
    cout << antraste;
    for(int i = 0; i < v.size(); i++)
        cout << v[i] << "" "";
    cout << endl;
}

int main(){



    int a = gautiSkaiciu<int>(""Iveskite skaiciu a: "");
    cout << ""Tu ivedei "" << a << endl;

    int b = gautiSkaiciu<int>(""Iveskite skaiciu b: "", ""Negerai!"");
    cout << ""Tu ivedei "" << b << endl;

    int c = a + b;
    cout << ""Suma yra "" << c << endl;


    
    vector<int> v1 = gautiSarasa(""Ivesk pirma skaiciu sarasa: "");
    vector<int> v2 = gautiSarasa(""Ivesk antra skaiciu sarasa: "");

    spausdintiSarasa(v1, ""\nPirmas sarasas:\n"");
    spausdintiSarasa(v2, ""\nAntras sarasas:\n"");
    

    return 0;

}
"
3DQ332Ck,Untitled,irmantas_radavicius,C++,Tuesday 19th of March 2024 10:26:04 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>

using namespace std;

// Funkcija gautiSkaiciu atlieka validacija ir
// gauta skaiciu issaugo kintamajame x
int gautiSkaiciu(string zinute, string klaida = ""Blogas ivedimas!""){
    int x;
    while(1){
        cout << zinute;
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << klaida << endl;
            cin.clear();
            cin.ignore(1024, '\n');
        } else {
            return x;
        }
    }
}


// Funkcija gautiSarasa nuskaito sarasa ir jei
// jis geras issaugo ji vektoriuje v
vector<int> gautiSarasa(string zinute, string klaida = ""Blogas ivedimas!""){
    vector<int> v;
    while(1){
        string line;
        cout << zinute;
        getline(cin, line);

        stringstream ss;
        ss << line;
        int arKlaida = 0;
        while(1){
            int x;
            ss >> x;
            if(!ss.fail()){
                v.push_back(x);
            } else {
                if(!ss.eof())
                    arKlaida = 1;
                break;
            }
        }
        if(arKlaida == 0)
            break;
        else {
            cout << klaida << endl;
            v.clear();
        }
    }
    return v;
}

// atspausdina skaicius esancius vektoriuje v
void spausdintiSarasa(vector<int> v, string antraste = """"){
    // skaiciu sarasas yra geras
    cout << antraste;
    for(int i = 0; i < v.size(); i++)
        cout << v[i] << "" "";
    cout << endl;
}

int main(){


    /*
    int a = gautiSkaiciu(""Iveskite skaiciu a: "");
    cout << ""Tu ivedei "" << a << endl;

    int b = gautiSkaiciu(""Iveskite skaiciu b: "", ""Negerai!"");
    cout << ""Tu ivedei "" << b << endl;

    int c = a + b;
    cout << ""Suma yra "" << c << endl;
    */

    vector<int> v1 = gautiSarasa(""Ivesk pirma skaiciu sarasa: "");
    vector<int> v2 = gautiSarasa(""Ivesk antra skaiciu sarasa: "");

    spausdintiSarasa(v1, ""\nPirmas sarasas:\n"");
    spausdintiSarasa(v2, ""\nAntras sarasas:\n"");


    return 0;

}
"
