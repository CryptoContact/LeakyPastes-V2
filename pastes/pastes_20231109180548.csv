id,title,username,language,date,content
Y6uZGUH4,BTC Wallet Credentials have been reset,castlclass_20,GetText,Thursday 9th of November 2023 12:03:15 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
blogelzar4w:ktSuSm on 212.224.93.130
You can connect via SSH.
Regards"
PbTcNyEU,Untitled,sissou123,Python,Thursday 9th of November 2023 11:54:50 AM CDT,"Mastering Python - From Novice to Ninja
Learn Python with Machine Learning, Object Oriented Programming, Data Structures, Web Services, Multi-Threading and more
for more:https://cuty.io/OmFPt"
k2FdYtcj,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Thursday 9th of November 2023 11:52:34 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT174504"
5TmNt8CY,Untitled,sissou123,Python,Thursday 9th of November 2023 11:41:53 AM CDT,"Professional Python Developer Bootcamp 2023
Master Python by building real-world projects. Develop all the skills you need to find your first programming job.
for more:https://cuty.io/2gMtI8zKU"
S4PLPsTp,Knight_Rider 2.0,mike2545,Python,Thursday 9th of November 2023 11:38:19 AM CDT,"from machine import Pin, PWM
from time import sleep

led_pins = [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
leds = [PWM(Pin(pin)) for pin in led_pins]

fade_values = [65535, 20000, 15000, 8000, 0]
delay = 0.08
trailing_leds = 3

while True:
    # Fading in the forward direction
    for i in range(len(leds)):
        for j in range(trailing_leds + 1):
            if i - j >= 0:
                leds[i - j].duty_u16(fade_values[j])
        sleep(delay)
        for j in range(trailing_leds + 1):
            if i - j >= 0:
                leds[i - j].duty_u16(0)
    
    # Fading in the reverse direction
    for i in range(len(leds) - 2, -1, -1):
        for j in range(trailing_leds + 1):
            if i + j < len(leds):
                leds[i + j].duty_u16(fade_values[j])
        sleep(delay)
        for j in range(trailing_leds + 1):
            if i + j < len(leds):
                leds[i + j].duty_u16(0)

"
NWhi45iR,Untitled,sissou123,SQL,Thursday 9th of November 2023 11:36:54 AM CDT,"Database Bootcamp: SQL, Python, Integration, and MORE!
Master SQL, Python, Integration, and Advanced Data Management Techniques for Comprehensive Data Analysis
for more:https://cuty.io/IE0xEB"
suwaWrdb,Amerlan TIX-441 test script,DooD13Z,Python,Thursday 9th of November 2023 11:34:05 AM CDT,"import json
import logging
from django.conf import settings
from django.db.models import Q
from django.utils import timezone
from ticketsmgmt.core.utils import split_list_to_chunks_by_500
from ticketsmgmt.event_scraper.scrapers.ticketmaster.models import (
    TicketMasterScrapeSettings,
)
from ticketsmgmt.event.models import Event
from ticketsmgmt.event.tasks import schedule_spider

logger = logging.getLogger(""ticketsmgmt.event.tasks"")
every = ""24""
period = ""hours""
logger.info(f""Starting periodic events scraping for period {every} {period}."")
now = timezone.now()
events = Event.objects.filter(
    periodic_interval__every=every,
    periodic_interval__period=period,
    is_archived=False,
)
events = events.filter(
    Q(event_date_time__isnull=True) | Q(event_date_time__gte=now)
)
events = events.filter(Q(paused_until__isnull=True) | Q(paused_until__lte=now))
events = events.filter(event_scraper__name=""TicketMaster"").select_related('last_scrape_history').order_by('id')
print(f""EVENTS COUNT BEFORE START: {events.count()}"")

def save_initial_data(events, filename='initial_data.json'):
    initial_data = {
        f'{event.id}': event.last_scrape_history.date_time if event.last_scrape_history else None for event in events
    }
    with open(filename, 'w') as file:
        json.dump(initial_data, file, default=str)


def compare_data_after_run():
    from datetime import datetime
    import json
    from ticketsmgmt.event.models import Event

    start = datetime.now()
    from copy import copy
    with open('initial_data.json', 'r') as file:
        initial_data = json.load(file)
    new_initial_data = copy(initial_data)
    print(f""Before check: {len(initial_data)}"")
    cnt = 0
    for event_id, history in initial_data.items():
        try:
            event = Event.objects.select_related(""last_scrape_history"").get(id=event_id)
            if event.last_scrape_history and event.last_scrape_history.date_time > event.last_scrape_scheduled:
                new_initial_data.pop(event_id)
                cnt += 1
                if cnt % 2000 == 0:
                    print(f""dropped {cnt}"")
                    with open('initial_data.json', 'w') as file:
                        json.dump(new_initial_data, file, default=str)
                        print(f""updated json"")
        except:
            print(f""Error: {event_id}"")

    print(f""After check: {len(new_initial_data)}"")
    with open('initial_data.json', 'w') as file:
        json.dump(new_initial_data, file, default=str)
    print(datetime.now() - start)
    ids = [int(i) for i in list(new_initial_data.keys())]
    print(""DONE"")
    return Event.objects.filter(id__in=ids)



def run_scrapy(events, force_event_details_update=False, is_tasks4=False):
    scheduling_data = []
    scheduling_data_tm = []
    scheduled_events_ids = []
    allowed = []
    n_all = 0
    for event in events:
        if not event.is_scrape_allowed():
            n_all += 1
            continue

        if event.event_scraper.name == ""TicketMaster"":
            allowed.append(event.id)
            scheduling_data_tm.append(
                {
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                    ""discovery_id"": event.tm_discovery_id,
                    ""force_event_details_update"": force_event_details_update,
                }
            )
        else:
            scheduling_data.append(
                {
                    ""spider_name"": event.event_scraper.name,
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                }
            )
        scheduled_events_ids.append(event.id)
    print(f""NOT ALLOWED: {n_all}"")
    schedule_chunks = split_list_to_chunks_by_500(scheduling_data_tm, chunk_size=500)
    tm_scrape_settings = TicketMasterScrapeSettings.objects.first()
    events_allowed = Event.objects.filter(id__in=allowed)
    save_initial_data(events_allowed)
    Event.objects.filter(id__in=events_allowed).update(
        last_scrape_scheduled=timezone.now()
    )
    print(""UPDATED"")
    for chunk in schedule_chunks:
        if chunk:
            scrapyd_server = ""http://192.168.50.38:6800""
            try:

                schedule_spider(
                    scrapyd_server,
                    settings.SCRAPYD_PROJECT,
                    ""TicketMaster"",
                    events=json.dumps(chunk),
                    filter_out_offers_by_name=tm_scrape_settings.filter_out_offers_by_name,
                )
                logger.debug(
                    ""Scheduled bulk of %s TM events, server - %s."",
                    len(chunk),
                    scrapyd_server,
                )
            except Exception as e:
                logger.error(
                    f""Could not schedule TM spider chunk on the server {scrapyd_server}"",
                    exc_info=True,
                )
    return events_allowed

events_to_check_scrapes = run_scrapy(events)
"
FzY0cBnM,Untitled,dllbridge,C,Thursday 9th of November 2023 11:05:22 AM CDT,"
#include <stdio.h>


char sz[19];

int nCell[3];

/////////////////////////////////////////////
int main()                                 // 
{
	
	
    scanf(""%s"", sz); 

    printf(""1st cell is : "");	 


    int i = 0;

    while(sz[i] != 0)
    {
		
		
		
	   if(sz[i]   % 2)
	   if(sz[i+1] % 2)      { printf(""black\n""); i+=2; break; }
	   if(sz[i]   % 2 == 0)
	   if(sz[i+1] % 2 == 0) { printf(""black\n""); i+=2; break; }
		

	   printf(""whaite\n"");
	   
	   nCell[1] = 1;
	   
	   i+=2;	
	   
	   break;	
		
	}

    printf(""2nd cell is : "");
	
    while(sz[i] != 0)
    {
		
	   if(sz[i]   % 2)
	   if(sz[i+1] % 2)      { printf(""black\n""); i+=2; break; }
	   if(sz[i]   % 2 == 0)
	   if(sz[i+1] % 2 == 0) { printf(""black\n""); i+=2; break; }
		

	   printf(""whaite\n"");
	   
	   nCell[2] = 1;
	   	
	   break;	   	
		
	}


    if(nCell[1] == nCell[2]) printf(""Yes, same colors.""         );
	else                     printf(""Different colors of cells."");
	
return 0;
}


"
1098LSm0,generatorv1,G0nz0uk,YAML,Thursday 9th of November 2023 10:59:20 AM CDT,"  modules:
    module_name:  # The module name. You can have as many modules as you want.
      walk:       # List of OIDs to walk. Can also be SNMP object names or specific instances.
        - sysUpTime                  # Same as ""1.3.6.1.2.1.1.3""
        - 1.3.6.1.4.1.33762.7.7.2.0  # back temp
        - 1.3.6.1.4.1.33762.7.6.2.0  # Front of display temp

      version: 2  # SNMP version to use. Defaults to 2.
                  # 1 will use GETNEXT, 2 and 3 use GETBULK.
      max_repetitions: 25  # How many objects to request with GET/GETBULK, defaults to 25.
                          # May need to be reduced for buggy devices.
      retries: 3   # How many times to retry a failed request, defaults to 3.
      timeout: 5s  # Timeout for each individual SNMP request, defaults to 5s.

      auth:
        # Community string is used with SNMP v1 and v2. Defaults to ""public"".
        community: public

        # v3 has different and more complex settings.
        # Which are required depends on the security_level.
        # The equivalent options on NetSNMP commands like snmpbulkwalk
        # and snmpget are also listed. See snmpcmd(1).
        username: v1v2c_ro  # Required, no default. -u option to NetSNMP.
        security_level: noAuthNoPriv  # Defaults to noAuthNoPriv. -l option to NetSNMP.
                                      # Can be noAuthNoPriv, authNoPriv or authPriv.
        password: public  # Has no default. Also known as authKey, -A option to NetSNMP.
                        # Required if security_level is authNoPriv or authPriv.
        auth_protocol: MD5  # MD5, SHA, SHA224, SHA256, SHA384, or SHA512. Defaults to MD5. -a option to NetSNMP.
                            # Used if security_level is authNoPriv or authPriv.
        priv_protocol: DES  # DES, AES, AES192, or AES256. Defaults to DES. -x option to NetSNMP.
                            # Used if security_level is authPriv.
        priv_password: otherPass # Has no default. Also known as privKey, -X option to NetSNMP.
                                # Required if security_level is authPriv.
        context_name: context # Has no default. -n option to NetSNMP.
                              # Required if context is configured on the device.

      lookups:  # Optional list of lookups to perform.
                # The default for `keep_source_indexes` is false. Indexes must be unique for this option to be used.

        # If the index of a table is bsnDot11EssIndex, usually that'd be the label
        # on the resulting metrics from that table. Instead, use the index to
        # lookup the bsnDot11EssSsid table entry and create a bsnDot11EssSsid label
        # with that value.
        - source_indexes: [bsnDot11EssIndex]
          lookup: bsnDot11EssSsid
          drop_source_indexes: false  # If true, delete source index labels for this lookup.
                                      # This avoids label clutter when the new index is unique.

        # It is also possible to chain lookups or use multiple labels to gather label values.
        # This might be helpful to resolve multiple index labels to a proper human readable label.
        # Please be aware that ordering matters here.

        # In this example, we first do a lookup to get the `cbQosConfigIndex` as another label.
        - source_indexes: [cbQosPolicyIndex, cbQosObjectsIndex]
          lookup: cbQosConfigIndex
        # Using the newly added label, we have another lookup to fetch the `cbQosCMName` based on `cbQosConfigIndex`.
        - source_indexes: [cbQosConfigIndex]
          lookup: cbQosCMName

      overrides: # Allows for per-module overrides of bits of MIBs
        metricName:
          ignore: true # Drops the metric from the output.
          regex_extracts:
            Temp: # A new metric will be created appending this to the metricName to become metricNameTemp.
              - regex: '(.*)' # Regex to extract a value from the returned SNMP walks's value.
                value: '$1' # The result will be parsed as a float64, defaults to $1.
            Status:
              - regex: '.*Example'
                value: '1' # The first entry whose regex matches and whose value parses wins.
              - regex: '.*'
                value: '0'
          type: DisplayString # Override the metric type, possible types are:
"
HRLhTCXZ,Scripts Powershell - 2023,faelcolt,PowerShell,Thursday 9th of November 2023 10:52:16 AM CDT,"Abra o Powershell como administrador e digite: 

""set-executionpolicy unrestricted""

Pressione ""s"" e dê ENTER"
uuErqBQ0,Exemplo Java,hercioneto,Java,Thursday 9th of November 2023 10:47:15 AM CDT,"public static void main(String[] args) {
        String nome = ""Hercio Neto"";
        Integer numero1;
        Integer numero2;
        Integer soma, sub, div, multi;
        Integer numero3;
        Scanner leitura = new Scanner(System.in);
        numero1 = 10;
        numero2 = 4;
        soma = numero1 + numero2;
        System.out.println(""Resultado da soma: ""+ soma);
        System.out.println(""Nome: ""+ nome);
        for (int i = 0; i <= soma; i++) {
            System.out.println(""I vale: ""+ i);
        }
        System.out.println(""Digite um número:"");
        numero3 = leitura.nextInt();
        System.out.println(""Número lido: ""+ numero3);
        //ler as variaveis numero1 e numero2, efetuar 
        //a soma, a subtracao, multiplicacao e divisao
        //mostrar os resultados
        System.out.println(""Digite um número:"");
        numero1 = leitura.nextInt();
        System.out.println(""Digite outro número:"");
        numero2 = leitura.nextInt();
        soma = numero1 + numero2;
        sub = numero1 - numero2;
        multi = numero1 * numero2;
        div = numero1 / numero2;
        System.out.println(""Soma: ""+ soma);
        System.out.println(""Subtração: ""+ sub);
        System.out.println(""Multiplicação: ""+ multi);
        System.out.println(""Divisão: ""+ div);
        
        
    }"
ybvJf1Hv,Nigerian scammers [9-11-1/2023],bombaires,AIMMS,Thursday 9th of November 2023 10:43:01 AM CDT,"<a href=""mailto:mssimabahous@aol.com"">mssimabahous@aol.com</a>
<a href=""mailto:mracemrsmorgan555@gmail.com"">mracemrsmorgan555@gmail.com</a>
<a href=""mailto:mr.a.cemr.smor.g.a.n5.55@gmail.com"">mr.a.cemr.smor.g.a.n5.55@gmail.com</a>
<a href=""mailto:mra.ce.m.r.s.m.o.r.g.an.5.5.5@gmail.com"">mra.ce.m.r.s.m.o.r.g.an.5.5.5@gmail.com</a>
<a href=""mailto:m.r.ace.m.r.s.mo.rgan.55.5@gmail.com"">m.r.ace.m.r.s.mo.rgan.55.5@gmail.com</a>
<a href=""mailto:mra.cem.rsm.o.r.g.an5.55@gmail.com"">mra.cem.rsm.o.r.g.an5.55@gmail.com</a>
<a href=""mailto:m.ra.c.e.mr.s.morg.an55.5@gmail.com"">m.ra.c.e.mr.s.morg.an55.5@gmail.com</a>
<a href=""mailto:mrac.emr.s.m.o.r.g.a.n.555@gmail.com"">mrac.emr.s.m.o.r.g.a.n.555@gmail.com</a>
<a href=""mailto:mracemr.smorg.a.n.5.5.5@gmail.com"">mracemr.smorg.a.n.5.5.5@gmail.com</a>
<a href=""mailto:m.ra.c.emrsmorgan.555@gmail.com"">m.ra.c.emrsmorgan.555@gmail.com</a>
<a href=""mailto:m.ra.c.e.m.r.smor.g.an5.55@gmail.com"">m.ra.c.e.m.r.smor.g.an5.55@gmail.com</a>
<a href=""mailto:m.r.a.c.emr.smo.rga.n.55.5@gmail.com"">m.r.a.c.emr.smo.rga.n.55.5@gmail.com</a>
<a href=""mailto:mrac.em.rs.m.or.ga.n555@gmail.com"">mrac.em.rs.m.or.ga.n555@gmail.com</a>
<a href=""mailto:m.r.a.c.e.m.rsm.or.gan5.55@gmail.com"">m.r.a.c.e.m.rsm.or.gan5.55@gmail.com</a>
<a href=""mailto:m.r.ace.mrs.morg.an.5.5.5@gmail.com"">m.r.ace.mrs.morg.an.5.5.5@gmail.com</a>
<a href=""mailto:m.ra.c.e.m.r.s.mo.r.ga.n555@gmail.com"">m.ra.c.e.m.r.s.mo.r.ga.n555@gmail.com</a>
<a href=""mailto:mr.a.cem.r.s.m.o.r.g.a.n5.5.5@gmail.com"">mr.a.cem.r.s.m.o.r.g.a.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.ac.e.m.rs.m.o.rga.n.55.5@gmail.com"">m.r.ac.e.m.rs.m.o.rga.n.55.5@gmail.com</a>
<a href=""mailto:mr.ac.em.r.smorg.a.n555@gmail.com"">mr.ac.em.r.smorg.a.n555@gmail.com</a>
<a href=""mailto:m.ra.ce.m.r.sm.org.a.n5.5.5@gmail.com"">m.ra.ce.m.r.sm.org.a.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.ace.m.rsm.or.g.an5.55@gmail.com"">m.r.ace.m.rsm.or.g.an5.55@gmail.com</a>
<a href=""mailto:mr.a.c.e.m.rsm.o.r.g.a.n5.55@gmail.com"">mr.a.c.e.m.rsm.o.r.g.a.n5.55@gmail.com</a>
<a href=""mailto:m.r.a.cem.rsmo.rgan.55.5@gmail.com"">m.r.a.cem.rsmo.rgan.55.5@gmail.com</a>
<a href=""mailto:mracemr.s.morg.an5.55@gmail.com"">mracemr.s.morg.an5.55@gmail.com</a>
<a href=""mailto:mra.ce.m.r.sm.o.r.g.a.n.5.5.5@gmail.com"">mra.ce.m.r.sm.o.r.g.a.n.5.5.5@gmail.com</a>
<a href=""mailto:m.race.mrs.m.o.rga.n555@gmail.com"">m.race.mrs.m.o.rga.n555@gmail.com</a>
<a href=""mailto:mr.ac.emr.s.mo.r.g.an5.55@gmail.com"">mr.ac.emr.s.mo.r.g.an5.55@gmail.com</a>
<a href=""mailto:m.r.a.cem.rsmo.rgan5.55@gmail.com"">m.r.a.cem.rsmo.rgan5.55@gmail.com</a>
<a href=""mailto:m.r.a.c.em.rsmo.rga.n5.5.5@gmail.com"">m.r.a.c.em.rsmo.rga.n5.5.5@gmail.com</a>
<a href=""mailto:mr.a.cemr.sm.o.rgan5.5.5@gmail.com"">mr.a.cemr.sm.o.rgan5.5.5@gmail.com</a>
<a href=""mailto:mr.acemrs.m.o.rgan5.5.5@gmail.com"">mr.acemrs.m.o.rgan5.5.5@gmail.com</a>
<a href=""mailto:m.racem.rsm.or.gan55.5@gmail.com"">m.racem.rsm.or.gan55.5@gmail.com</a>
<a href=""mailto:m.ra.cem.rs.m.o.rgan.555@gmail.com"">m.ra.cem.rs.m.o.rgan.555@gmail.com</a>
<a href=""mailto:mr.a.c.emrsmorga.n555@gmail.com"">mr.a.c.emrsmorga.n555@gmail.com</a>
<a href=""mailto:mra.ce.mr.s.mor.g.an5.5.5@gmail.com"">mra.ce.mr.s.mor.g.an5.5.5@gmail.com</a>
<a href=""mailto:m.r.ace.m.r.s.m.o.rg.a.n.5.55@gmail.com"">m.r.ace.m.r.s.m.o.rg.a.n.5.55@gmail.com</a>
<a href=""mailto:m.r.ac.emrs.mo.r.gan.55.5@gmail.com"">m.r.ac.emrs.mo.r.gan.55.5@gmail.com</a>
<a href=""mailto:mr.ac.e.m.rs.mor.ga.n55.5@gmail.com"">mr.ac.e.m.rs.mor.ga.n55.5@gmail.com</a>
<a href=""mailto:m.r.ac.e.m.r.sm.org.an5.5.5@gmail.com"">m.r.ac.e.m.r.sm.org.an5.5.5@gmail.com</a>
<a href=""mailto:mra.c.e.m.rs.m.o.rg.a.n.5.55@gmail.com"">mra.c.e.m.rs.m.o.rg.a.n.5.55@gmail.com</a>
<a href=""mailto:m.rac.emrs.mor.gan.5.55@gmail.com"">m.rac.emrs.mor.gan.5.55@gmail.com</a>
<a href=""mailto:mra.c.e.m.rs.m.o.r.g.an.555@gmail.com"">mra.c.e.m.rs.m.o.r.g.an.555@gmail.com</a>
<a href=""mailto:mrac.emr.s.mo.r.ga.n555@gmail.com"">mrac.emr.s.mo.r.ga.n555@gmail.com</a>
<a href=""mailto:mra.c.e.mrsm.o.rg.an5.55@gmail.com"">mra.c.e.mrsm.o.rg.an5.55@gmail.com</a>
<a href=""mailto:m.ra.c.em.r.sm.org.a.n.5.55@gmail.com"">m.ra.c.em.r.sm.org.a.n.5.55@gmail.com</a>
<a href=""mailto:m.r.a.c.em.r.s.mo.rg.an555@gmail.com"">m.r.a.c.em.r.s.mo.rg.an555@gmail.com</a>
<a href=""mailto:mr.ac.e.mrsm.o.r.ga.n555@gmail.com"">mr.ac.e.mrsm.o.r.ga.n555@gmail.com</a>
<a href=""mailto:m.racemr.s.mor.ga.n.555@gmail.com"">m.racemr.s.mor.ga.n.555@gmail.com</a>
<a href=""mailto:mr.acem.r.s.m.o.rg.an5.5.5@gmail.com"">mr.acem.r.s.m.o.rg.an5.5.5@gmail.com</a>
<a href=""mailto:m.r.ace.m.rs.mo.r.g.a.n55.5@gmail.com"">m.r.ace.m.rs.mo.r.g.a.n55.5@gmail.com</a>
<a href=""mailto:mrace.mrs.mor.gan.55.5@gmail.com"">mrace.mrs.mor.gan.55.5@gmail.com</a>
<a href=""mailto:m.r.acem.rsmo.rgan5.5.5@gmail.com"">m.r.acem.rsmo.rgan5.5.5@gmail.com</a>
<a href=""mailto:mr.a.c.em.r.s.morg.a.n.55.5@gmail.com"">mr.a.c.em.r.s.morg.a.n.55.5@gmail.com</a>
<a href=""mailto:mrac.em.r.smorg.an.555@gmail.com"">mrac.em.r.smorg.an.555@gmail.com</a>
<a href=""mailto:mrac.emr.smo.rga.n5.55@gmail.com"">mrac.emr.smo.rga.n5.55@gmail.com</a>
<a href=""mailto:m.ra.c.e.mrsmo.rg.a.n5.5.5@gmail.com"">m.ra.c.e.mrsmo.rg.a.n5.5.5@gmail.com</a>
<a href=""mailto:mrac.em.rs.mor.gan555@gmail.com"">mrac.em.rs.mor.gan555@gmail.com</a>
<a href=""mailto:mr.a.c.e.mrsm.org.a.n55.5@gmail.com"">mr.a.c.e.mrsm.org.a.n55.5@gmail.com</a>
<a href=""mailto:mracem.r.s.m.org.a.n.5.55@gmail.com"">mracem.r.s.m.org.a.n.5.55@gmail.com</a>
<a href=""mailto:m.rac.e.m.rsm.o.rg.an55.5@gmail.com"">m.rac.e.m.rsm.o.rg.an55.5@gmail.com</a>
<a href=""mailto:mr.a.ce.mrsm.org.a.n5.5.5@gmail.com"">mr.a.ce.mrsm.org.a.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.ac.e.m.rs.morgan555@gmail.com"">m.r.ac.e.m.rs.morgan555@gmail.com</a>
<a href=""mailto:mrac.emrsm.or.g.a.n5.55@gmail.com"">mrac.emrsm.or.g.a.n5.55@gmail.com</a>
<a href=""mailto:mracem.rsm.o.rg.a.n.55.5@gmail.com"">mracem.rsm.o.rg.a.n.55.5@gmail.com</a>
<a href=""mailto:m.ra.cemrsmor.g.a.n.5.5.5@gmail.com"">m.ra.cemrsmor.g.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mracemrs.m.orga.n.555@gmail.com"">mracemrs.m.orga.n.555@gmail.com</a>
<a href=""mailto:mra.ce.m.rs.m.or.g.a.n.555@gmail.com"">mra.ce.m.rs.m.or.g.a.n.555@gmail.com</a>
<a href=""mailto:m.r.a.ce.mr.sm.o.rg.an.5.55@gmail.com"">m.r.a.ce.mr.sm.o.rg.an.5.55@gmail.com</a>
<a href=""mailto:mr.a.c.emrs.mo.r.g.an55.5@gmail.com"">mr.a.c.emrs.mo.r.g.an55.5@gmail.com</a>
<a href=""mailto:m.ra.ce.m.rsmorg.an5.55@gmail.com"">m.ra.ce.m.rsmorg.an5.55@gmail.com</a>
<a href=""mailto:m.ra.ce.mr.s.mo.rg.a.n.555@gmail.com"">m.ra.ce.mr.s.mo.rg.a.n.555@gmail.com</a>
<a href=""mailto:mr.ac.e.m.rsmo.rg.a.n55.5@gmail.com"">mr.ac.e.m.rsmo.rg.a.n55.5@gmail.com</a>
<a href=""mailto:m.ra.c.e.m.r.s.mo.rg.a.n.5.5.5@gmail.com"">m.ra.c.e.m.r.s.mo.rg.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mra.c.e.mrsmo.r.gan5.5.5@gmail.com"">mra.c.e.mrsmo.r.gan5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.c.e.m.r.s.mo.rgan555@gmail.com"">m.r.a.c.e.m.r.s.mo.rgan555@gmail.com</a>
<a href=""mailto:m.r.a.c.e.m.rs.mo.r.gan555@gmail.com"">m.r.a.c.e.m.rs.mo.r.gan555@gmail.com</a>
<a href=""mailto:m.r.a.cem.rsm.o.rga.n55.5@gmail.com"">m.r.a.cem.rsm.o.rga.n55.5@gmail.com</a>
<a href=""mailto:m.r.ace.mr.sm.o.r.ga.n.55.5@gmail.com"">m.r.ace.mr.sm.o.r.ga.n.55.5@gmail.com</a>
<a href=""mailto:mr.a.ce.m.r.sm.org.a.n.55.5@gmail.com"">mr.a.ce.m.r.sm.org.a.n.55.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.smor.ga.n5.5.5@gmail.com"">mr.a.c.e.mr.smor.ga.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.ac.e.mr.smo.r.gan.555@gmail.com"">m.r.ac.e.mr.smo.r.gan.555@gmail.com</a>
<a href=""mailto:m.ra.cemrsm.o.rg.an5.5.5@gmail.com"">m.ra.cemrsm.o.rg.an5.5.5@gmail.com</a>
<a href=""mailto:mr.acem.rsmo.r.ga.n.5.55@gmail.com"">mr.acem.rsmo.r.ga.n.5.55@gmail.com</a>
<a href=""mailto:mra.cem.rsm.o.rga.n55.5@gmail.com"">mra.cem.rsm.o.rga.n55.5@gmail.com</a>
<a href=""mailto:mr.ac.emr.smo.r.g.an.555@gmail.com"">mr.ac.emr.smo.r.g.an.555@gmail.com</a>
<a href=""mailto:mra.ce.mr.smor.ga.n.5.55@gmail.com"">mra.ce.mr.smor.ga.n.5.55@gmail.com</a>
<a href=""mailto:mra.c.emr.s.m.or.g.a.n.5.5.5@gmail.com"">mra.c.emr.s.m.or.g.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mrac.emrsmor.gan555@gmail.com"">mrac.emrsmor.gan555@gmail.com</a>
<a href=""mailto:m.race.mr.smorg.a.n.555@gmail.com"">m.race.mr.smorg.a.n.555@gmail.com</a>
<a href=""mailto:m.r.a.c.em.rs.m.or.ga.n555@gmail.com"">m.r.a.c.em.rs.m.or.ga.n555@gmail.com</a>
<a href=""mailto:mrac.em.rsm.o.r.ga.n.555@gmail.com"">mrac.em.rsm.o.r.ga.n.555@gmail.com</a>
<a href=""mailto:m.ra.ce.m.rsm.o.rg.a.n55.5@gmail.com"">m.ra.ce.m.rsm.o.rg.a.n55.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.m.rsm.organ.5.55@gmail.com"">mr.a.c.e.m.rsm.organ.5.55@gmail.com</a>
<a href=""mailto:m.racemr.smor.gan.5.5.5@gmail.com"">m.racemr.smor.gan.5.5.5@gmail.com</a>
<a href=""mailto:mra.c.e.m.r.s.m.o.rgan5.5.5@gmail.com"">mra.c.e.m.r.s.m.o.rgan5.5.5@gmail.com</a>
<a href=""mailto:mra.ce.m.r.s.m.org.a.n.5.5.5@gmail.com"">mra.ce.m.r.s.m.org.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.ace.mrsm.o.rg.a.n55.5@gmail.com"">mr.ace.mrsm.o.rg.a.n55.5@gmail.com</a>
<a href=""mailto:mr.acem.rsmor.ga.n.5.55@gmail.com"">mr.acem.rsmor.ga.n.5.55@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.s.mor.g.an.5.55@gmail.com"">mr.a.c.e.mr.s.mor.g.an.5.55@gmail.com</a>
<a href=""mailto:mra.c.emr.smo.rg.a.n.5.55@gmail.com"">mra.c.emr.smo.rg.a.n.5.55@gmail.com</a>
<a href=""mailto:m.rac.emrs.m.o.rg.an.555@gmail.com"">m.rac.emrs.m.o.rg.an.555@gmail.com</a>
<a href=""mailto:mra.c.e.mrsm.or.g.an.5.5.5@gmail.com"">mra.c.e.mrsm.or.g.an.5.5.5@gmail.com</a>
<a href=""mailto:m.ra.cem.rsmo.r.ga.n.555@gmail.com"">m.ra.cem.rsmo.r.ga.n.555@gmail.com</a>
<a href=""mailto:mrac.em.rs.mo.r.g.an5.55@gmail.com"">mrac.em.rs.mo.r.g.an5.55@gmail.com</a>
<a href=""mailto:mr.ac.em.r.s.m.o.r.gan5.55@gmail.com"">mr.ac.em.r.s.m.o.r.gan5.55@gmail.com</a>
<a href=""mailto:m.r.ac.emrsmo.r.gan.55.5@gmail.com"">m.r.ac.emrsmo.r.gan.55.5@gmail.com</a>
<a href=""mailto:m.ra.cemr.s.m.o.r.gan5.55@gmail.com"">m.ra.cemr.s.m.o.r.gan5.55@gmail.com</a>
<a href=""mailto:mr.acemr.smo.rg.an.5.55@gmail.com"">mr.acemr.smo.rg.an.5.55@gmail.com</a>
<a href=""mailto:mra.c.emrs.m.org.a.n.5.55@gmail.com"">mra.c.emrs.m.org.a.n.5.55@gmail.com</a>
<a href=""mailto:m.ra.c.e.mrs.mo.r.g.a.n.5.5.5@gmail.com"">m.ra.c.e.mrs.mo.r.g.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.a.c.em.r.sm.o.rg.an.5.55@gmail.com"">mr.a.c.em.r.sm.o.rg.an.5.55@gmail.com</a>
<a href=""mailto:m.ra.c.em.rs.m.o.rga.n555@gmail.com"">m.ra.c.em.rs.m.o.rga.n555@gmail.com</a>
<a href=""mailto:m.ra.c.emrsm.o.rg.an555@gmail.com"">m.ra.c.emrsm.o.rg.an555@gmail.com</a>
<a href=""mailto:mr.acem.rsm.o.r.ga.n55.5@gmail.com"">mr.acem.rsm.o.r.ga.n55.5@gmail.com</a>
<a href=""mailto:m.ra.cem.rs.mor.g.a.n.55.5@gmail.com"">m.ra.cem.rs.mor.g.a.n.55.5@gmail.com</a>
<a href=""mailto:m.r.a.c.em.rsm.org.a.n55.5@gmail.com"">m.r.a.c.em.rsm.org.a.n55.5@gmail.com</a>
<a href=""mailto:m.r.ac.emrs.m.org.a.n.5.5.5@gmail.com"">m.r.ac.emrs.m.org.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mra.c.em.r.sm.or.g.a.n.55.5@gmail.com"">mra.c.em.r.sm.or.g.a.n.55.5@gmail.com</a>
<a href=""mailto:m.r.acemrsmo.rg.a.n55.5@gmail.com"">m.r.acemrsmo.rg.a.n55.5@gmail.com</a>
<a href=""mailto:mr.a.c.emr.smor.ga.n5.55@gmail.com"">mr.a.c.emr.smor.ga.n5.55@gmail.com</a>
<a href=""mailto:mr.a.c.e.mrsm.orga.n555@gmail.com"">mr.a.c.e.mrsm.orga.n555@gmail.com</a>
<a href=""mailto:mra.c.emr.smorg.a.n5.5.5@gmail.com"">mra.c.emr.smorg.a.n5.5.5@gmail.com</a>
<a href=""mailto:mra.c.e.m.r.s.mo.r.ga.n5.55@gmail.com"">mra.c.e.m.r.s.mo.r.ga.n5.55@gmail.com</a>
<a href=""mailto:mr.a.cemr.s.morga.n.55.5@gmail.com"">mr.a.cemr.s.morga.n.55.5@gmail.com</a>
<a href=""mailto:m.r.a.ce.m.r.s.m.org.an55.5@gmail.com"">m.r.a.ce.m.r.s.m.org.an55.5@gmail.com</a>
<a href=""mailto:m.race.mrsmo.r.gan5.55@gmail.com"">m.race.mrsmo.r.gan5.55@gmail.com</a>
<a href=""mailto:mr.a.cem.r.smorg.an5.55@gmail.com"">mr.a.cem.r.smorg.an5.55@gmail.com</a>
<a href=""mailto:m.rac.em.rs.mo.r.g.an55.5@gmail.com"">m.rac.em.rs.mo.r.g.an55.5@gmail.com</a>
<a href=""mailto:mra.cemr.smo.rga.n.5.55@gmail.com"">mra.cemr.smo.rga.n.5.55@gmail.com</a>
<a href=""mailto:m.ra.c.e.mrs.m.o.r.gan.5.55@gmail.com"">m.ra.c.e.mrs.m.o.r.gan.5.55@gmail.com</a>
<a href=""mailto:mra.c.em.r.s.mor.g.a.n555@gmail.com"">mra.c.em.r.s.mor.g.a.n555@gmail.com</a>
<a href=""mailto:mrac.e.m.rs.m.or.g.an5.55@gmail.com"">mrac.e.m.rs.m.or.g.an5.55@gmail.com</a>
<a href=""mailto:m.r.a.cemr.s.morg.an.5.5.5@gmail.com"">m.r.a.cemr.s.morg.an.5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.ce.mr.sm.or.ga.n.555@gmail.com"">m.r.a.ce.mr.sm.or.ga.n.555@gmail.com</a>
<a href=""mailto:m.rac.e.m.rs.morgan555@gmail.com"">m.rac.e.m.rs.morgan555@gmail.com</a>
<a href=""mailto:m.ra.ce.mr.s.mo.r.g.a.n5.55@gmail.com"">m.ra.ce.mr.s.mo.r.g.a.n5.55@gmail.com</a>
<a href=""mailto:mracem.rsm.o.r.g.an5.5.5@gmail.com"">mracem.rsm.o.r.g.an5.5.5@gmail.com</a>
<a href=""mailto:mra.c.e.mrsmo.r.ga.n.5.5.5@gmail.com"">mra.c.e.mrsmo.r.ga.n.5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.cemr.sm.o.r.gan5.5.5@gmail.com"">m.r.a.cemr.sm.o.r.gan5.5.5@gmail.com</a>
<a href=""mailto:m.rac.emr.s.mo.r.gan.55.5@gmail.com"">m.rac.emr.s.mo.r.gan.55.5@gmail.com</a>
<a href=""mailto:mrace.m.r.s.m.o.r.g.an55.5@gmail.com"">mrace.m.r.s.m.o.r.g.an55.5@gmail.com</a>
<a href=""mailto:m.r.ace.m.r.s.m.o.rg.a.n555@gmail.com"">m.r.ace.m.r.s.m.o.rg.a.n555@gmail.com</a>
<a href=""mailto:mrac.e.m.r.s.mo.rgan555@gmail.com"">mrac.e.m.r.s.mo.rgan555@gmail.com</a>
<a href=""mailto:mra.cem.r.sm.o.r.ga.n5.5.5@gmail.com"">mra.cem.r.sm.o.r.ga.n5.5.5@gmail.com</a>
<a href=""mailto:mra.ce.m.rsm.or.g.a.n55.5@gmail.com"">mra.ce.m.rsm.or.g.a.n55.5@gmail.com</a>
<a href=""mailto:m.rac.em.r.sm.or.g.an555@gmail.com"">m.rac.em.r.sm.or.g.an555@gmail.com</a>
<a href=""mailto:mr.acem.r.s.mo.rga.n5.5.5@gmail.com"">mr.acem.r.s.mo.rga.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.cem.r.sm.or.gan5.55@gmail.com"">m.r.a.cem.r.sm.or.gan5.55@gmail.com</a>
<a href=""mailto:mra.ce.m.r.s.m.o.r.g.a.n.5.55@gmail.com"">mra.ce.m.r.s.m.o.r.g.a.n.5.55@gmail.com</a>
<a href=""mailto:m.r.a.c.emrsm.o.r.gan.55.5@gmail.com"">m.r.a.c.emrsm.o.r.gan.55.5@gmail.com</a>
<a href=""mailto:m.r.acemr.smo.r.g.an5.5.5@gmail.com"">m.r.acemr.smo.r.g.an5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.c.e.mrs.m.o.r.ga.n555@gmail.com"">m.r.a.c.e.mrs.m.o.r.ga.n555@gmail.com</a>
<a href=""mailto:mra.cemr.smo.r.g.a.n5.5.5@gmail.com"">mra.cemr.smo.r.g.a.n5.5.5@gmail.com</a>
<a href=""mailto:m.r.a.c.em.r.smo.rg.an5.55@gmail.com"">m.r.a.c.em.r.smo.rg.an5.55@gmail.com</a>
<a href=""mailto:m.ra.c.emr.s.morgan555@gmail.com"">m.ra.c.emr.s.morgan555@gmail.com</a>
<a href=""mailto:m.ra.c.e.mr.s.morga.n.5.5.5@gmail.com"">m.ra.c.e.mr.s.morga.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.ace.mr.smor.gan.555@gmail.com"">mr.ace.mr.smor.gan.555@gmail.com</a>
<a href=""mailto:mra.c.e.m.rsmo.rga.n55.5@gmail.com"">mra.c.e.m.rsmo.rga.n55.5@gmail.com</a>
<a href=""mailto:mr.acem.rsm.o.rgan555@gmail.com"">mr.acem.rsm.o.rgan555@gmail.com</a>
<a href=""mailto:mra.ce.mrs.m.org.an5.55@gmail.com"">mra.ce.mrs.m.org.an5.55@gmail.com</a>
<a href=""mailto:m.race.mr.s.mor.gan555@gmail.com"">m.race.mr.s.mor.gan555@gmail.com</a>
<a href=""mailto:mr.a.cemrsmo.rga.n.5.5.5@gmail.com"">mr.a.cemrsmo.rga.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.ac.e.m.rsm.o.r.ga.n.555@gmail.com"">mr.ac.e.m.rsm.o.r.ga.n.555@gmail.com</a>
<a href=""mailto:m.ra.cemrsm.o.rg.an.5.55@gmail.com"">m.ra.cemrsm.o.rg.an.5.55@gmail.com</a>
<a href=""mailto:m.racemr.s.mo.rgan5.5.5@gmail.com"">m.racemr.s.mo.rgan5.5.5@gmail.com</a>
<a href=""mailto:m.rac.em.rsmo.r.gan.5.55@gmail.com"">m.rac.em.rsmo.r.gan.5.55@gmail.com</a>
<a href=""mailto:mrace.m.r.sm.or.ga.n5.55@gmail.com"">mrace.m.r.sm.or.ga.n5.55@gmail.com</a>
<a href=""mailto:mr.a.cem.r.s.m.o.r.g.an.5.55@gmail.com"">mr.a.cem.r.s.m.o.r.g.an.5.55@gmail.com</a>
<a href=""mailto:m.r.ac.emrs.mor.ga.n.5.5.5@gmail.com"">m.r.ac.emrs.mor.ga.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.s.m.o.r.gan5.5.5@gmail.com"">mr.a.c.e.mr.s.m.o.r.gan5.5.5@gmail.com</a>
<a href=""mailto:mr.a.ce.m.r.sm.o.rgan.5.55@gmail.com"">mr.a.ce.m.r.sm.o.rgan.5.55@gmail.com</a>
<a href=""mailto:m.rac.e.mr.sm.org.a.n555@gmail.com"">m.rac.e.mr.sm.org.a.n555@gmail.com</a>
<a href=""mailto:m.ra.c.e.m.r.s.morg.an.555@gmail.com"">m.ra.c.e.m.r.s.morg.an.555@gmail.com</a>
<a href=""mailto:mracemr.s.m.org.a.n.5.5.5@gmail.com"">mracemr.s.m.org.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mr.acem.rsmo.r.ga.n.55.5@gmail.com"">mr.acem.rsmo.r.ga.n.55.5@gmail.com</a>
<a href=""mailto:m.ra.ce.m.r.sm.org.a.n.555@gmail.com"">m.ra.ce.m.r.sm.org.a.n.555@gmail.com</a>
<a href=""mailto:m.r.ac.e.m.rs.m.o.rga.n55.5@gmail.com"">m.r.ac.e.m.rs.m.o.rga.n55.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.sm.o.r.ga.n5.55@gmail.com"">mr.a.c.e.mr.sm.o.r.ga.n5.55@gmail.com</a>
<a href=""mailto:m.r.a.ce.m.r.s.m.organ.5.55@gmail.com"">m.r.a.ce.m.r.s.m.organ.5.55@gmail.com</a>
<a href=""mailto:m.rac.em.rsm.o.rga.n5.5.5@gmail.com"">m.rac.em.rsm.o.rga.n5.5.5@gmail.com</a>
<a href=""mailto:m.racemrsm.o.r.ga.n.555@gmail.com"">m.racemrsm.o.r.ga.n.555@gmail.com</a>
<a href=""mailto:mra.ce.mr.s.mor.g.a.n55.5@gmail.com"">mra.ce.mr.s.mor.g.a.n55.5@gmail.com</a>
<a href=""mailto:m.ra.ce.m.rs.m.or.g.an.55.5@gmail.com"">m.ra.ce.m.rs.m.or.g.an.55.5@gmail.com</a>
<a href=""mailto:mr.a.ce.m.rs.mor.gan.55.5@gmail.com"">mr.a.ce.m.rs.mor.gan.55.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.sm.o.r.g.a.n.55.5@gmail.com"">mr.a.c.e.mr.sm.o.r.g.a.n.55.5@gmail.com</a>
<a href=""mailto:mr.ac.em.r.smor.ga.n555@gmail.com"">mr.ac.em.r.smor.ga.n555@gmail.com</a>
<a href=""mailto:mra.c.em.rsm.o.rg.a.n.5.55@gmail.com"">mra.c.em.rsm.o.rg.a.n.5.55@gmail.com</a>
<a href=""mailto:m.racemr.smo.rgan5.5.5@gmail.com"">m.racemr.smo.rgan5.5.5@gmail.com</a>
<a href=""mailto:m.r.acemr.s.m.o.rgan.5.55@gmail.com"">m.r.acemr.s.m.o.rgan.5.55@gmail.com</a>
<a href=""mailto:m.rac.emrs.morga.n.5.55@gmail.com"">m.rac.emrs.morga.n.5.55@gmail.com</a>
<a href=""mailto:m.r.ac.e.m.r.sm.or.ga.n5.55@gmail.com"">m.r.ac.e.m.r.sm.or.ga.n5.55@gmail.com</a>
<a href=""mailto:mra.c.e.m.rs.mo.r.g.an.5.55@gmail.com"">mra.c.e.m.rs.mo.r.g.an.5.55@gmail.com</a>
<a href=""mailto:m.race.m.r.s.mo.rg.a.n5.5.5@gmail.com"">m.race.m.r.s.mo.rg.a.n5.5.5@gmail.com</a>
<a href=""mailto:mra.c.emrsmo.r.ga.n555@gmail.com"">mra.c.emrsmo.r.ga.n555@gmail.com</a>
<a href=""mailto:mra.c.em.r.sm.o.rg.a.n.55.5@gmail.com"">mra.c.em.r.sm.o.rg.a.n.55.5@gmail.com</a>
<a href=""mailto:mr.acemr.smor.gan55.5@gmail.com"">mr.acemr.smor.gan55.5@gmail.com</a>
<a href=""mailto:mr.ace.m.r.smo.rg.an555@gmail.com"">mr.ace.m.r.smo.rg.an555@gmail.com</a>
<a href=""mailto:m.race.mrs.m.o.r.g.a.n.5.5.5@gmail.com"">m.race.mrs.m.o.r.g.a.n.5.5.5@gmail.com</a>
<a href=""mailto:mrac.e.m.r.smorg.an5.5.5@gmail.com"">mrac.e.m.r.smorg.an5.5.5@gmail.com</a>
<a href=""mailto:mr.a.c.e.mr.sm.o.r.g.an555@gmail.com"">mr.a.c.e.mr.sm.o.r.g.an555@gmail.com</a>
<a href=""mailto:m.r.a.ce.m.r.sm.or.g.a.n.5.55@gmail.com"">m.r.a.ce.m.r.sm.or.g.a.n.5.55@gmail.com</a>
<a href=""mailto:mr.acem.rs.m.or.gan5.5.5@gmail.com"">mr.acem.rs.m.or.gan5.5.5@gmail.com</a>"
TWD1Xk34,eval_is_evil.js,okpalan,JavaScript,Thursday 9th of November 2023 10:25:03 AM CDT,"const fs = require('fs');

function runJSFile(filePath) {
  fs.readFile(filePath, 'utf8', (err, data) => {
    if (err) {
      console.error('Error reading the file:', err);
    } else {
      try {
        // Create the function object without using eval
        const jsFunction = new Function(data);
        // Call the function to execute the JavaScript code
        jsFunction();
      } catch (e) {
        console.error('Error executing JavaScript code:', e);
      }
    }
  });
}

// Replace 'path/to/your/javascript_file.js' with the actual path to your JavaScript file
runJSFile('path/to/your/javascript_file.js');"
AZbZehKe,pagerank.py,okpalan,C,Thursday 9th of November 2023 10:14:45 AM CDT,"def compute_pagerank(graph, damping_factor=0.85, max_iterations=100):
    """"""
    Compute the PageRank of each node in the graph.
    
    Parameters
    ----------
    graph : dict
        A dictionary representing the structure of the graph. The keys are
        the nodes in the graph, and the values are a list of the nodes that
        are connected to that node.
    damping_factor : float
        The damping factor for the PageRank algorithm.
    max_iterations : int
        The maximum number of iterations to perform before stopping.
    
    Returns
    -------
    dict
        A dictionary mapping each node in the graph to its PageRank score.
    """"""
    
    # Check for invalid damping factor
    if damping_factor <= 0 or damping_factor >= 1:
        raise ValueError(""Invalid damping factor"")
    
    # Initialize the PageRank of each node to 1
    pagerank = {node: 1 for node in graph.keys()}
    
    # Perform the PageRank algorithm for the given number of iterations
    for _ in range(max_iterations):
        for node in graph.keys():
            
            # Compute the sum of the PageRank scores of the nodes that are
            # connected to this node
            pagerank_sum = 0
            for neighbor in graph[node]:
                pagerank_sum += pagerank[neighbor]
            
            # Update the PageRank of this node
            pagerank[node] = (1 - damping_factor) + \
                (damping_factor * pagerank_sum)
    
    return pagerank

driver code.


# Create a graph
graph = {
    ""A"": [""B"", ""C""],
    ""B"": [""A"", ""C"", ""D""],
    ""C"": [""A"", ""B"", ""D"", ""E""],
    ""D"": [""B"", ""C"", ""E"", ""F""],
    ""E"": [""C"", ""D""],
    ""F"": [""D""]
}

# Compute the PageRank scores
pagerank = compute_pagerank(graph)

# Print the PageRank scores
for node, score in pagerank.items():
    print(node, "":"", score)"
GfccEs6w,local-echo.c,okpalan,C,Thursday 9th of November 2023 10:12:49 AM CDT,"#include <stdio.h>
#include <stdlib.h>


int main(void)
{
    int c;
    while ((c = getchar()) != EOF)
        putchar(c);
    return 0;
}"
Yf8LxPCZ,Flask + SocketIO + Watchdog: HTML template,TheAgedProfessor,HTML,Thursday 9th of November 2023 10:10:50 AM CDT,"<!doctype html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"">
    <title>Socket Testing</title>
</head>

<body>
    <h1>Socket Test</h1>
    <p>Turn on JS console to view socket messages</p>
</body>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js""
   integrity=""sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==""
   crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"" integrity=""sha512-zoJXRvW2gC8Z0Xo3lBbao5+AS3g6YWr5ztKqaicua11xHo+AvE1b0lT9ODgrHTmNUxeCw0Ry4BGRYZfXu70weg=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>

<script>

var namespace = '/sockettest';

console.log(""SOCKET CREATE:"");
connection_path = location.protocol + '//' + document.domain + ':' + location.port + namespace
console.log(connection_path);
var socket = io.connect(connection_path);
console.log(socket);

socket.on('file_event', function(msg) {
    console.log(""file_event"")
    console.log(msg);
});

socket.on('done_loading', function(msg) {
    console.log(""done_loading"");
    console.log(msg);
});

socket.on('socket_response', function(msg) {
    console.log(""socket_response"");
    console.log(msg);
});

</script>
</html>"
BSjzJTGH,Flask + SocketIO + Watchdog: app.py,TheAgedProfessor,Python,Thursday 9th of November 2023 10:09:08 AM CDT,"from flask import Flask, render_template
from flask_socketio import SocketIO, emit, disconnect

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

import time
import threading

ACTIVE_DEBUG = True

async_mode = None

watcher_thread = None

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app, async_mode=async_mode)

# new class for background thread
class FileHandler(FileSystemEventHandler):
    def __init__(self, pattern=None):
        print(""FileHandler:__init__"")
        self.pattern = pattern or ("".txt"")
        self.dummyThread = None

    def on_any_event(self, event):
        print(""FileHandler:on_any_event"")
        print(event)
        if not event.is_directory and event.src_path.endswith(self.pattern):
            socketio.emit('socket_response',
                {'data': 'file event',
                'file': event.src_path},namespace=""/sockettest"")

    def start(self):
        print(""FileHandler:start"")
        self.dummyThread = threading.Thread(target=self._process)
        self.dummyThread.daemon = True
        self.dummyThread.start()

    def _process(self):
        while True:
            time.sleep(1)


fileHandler = FileHandler()
fileHandler.start()

eventlist_flag = 0
eventlist = []

def fileObserver():
    observer = Observer()
    observer.schedule(fileHandler, '/home/pi/test_file.txt')
    observer.start()
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()


@socketio.on('connect', namespace='/sockettest')
def sockettest_connect():
    print(""CALL sockettest_connect"")
    emit('socket_response',
         {'data': 'Connected'})
    emit('done_loading',
         {'data': 'Done Loading'})

@socketio.on('disconnect', namespace='/sockettest')
def sockettest_disconnect():
    print(""CALL sockettest_disconnect"")
    print('Client disconnected')

@socketio.on('disconnect_request', namespace='/sockettest')
def sockettest_disconnect_request(message):
    print(""CALL sockettest_disconnect_request"")
    emit('socket_response',
         {'data': 'Disconnected!'})
    disconnect()

@app.route('/')
def index():
    return render_template('index.html')

if __name__ == '__main__':
    watcher_thread = threading.Thread(target=fileObserver)
    watcher_thread.start()
    socketio.run(app, debug=ACTIVE_DEBUG,host='0.0.0.0')
    watcher_thread.join()"
nUT34hR2,dosham example,MagoBen,JSON,Thursday 9th of November 2023 10:04:32 AM CDT,"// graphql query:


query {
  find(
    inputText: ""дош""
    filtrationFlags: {
      entryFilters: { includeOnModeration: false, entryTypes: [WORD] }
      translationFilters: { languageCodes: [""RUS""], includeOnModeration: false }
    }
  ) {
    success
    serializedData
    errorMessage
  }
}

// example run with curl:

$ curl -X POST \
  https://api.dosham.app/graphql/ \
  -H 'Content-Type: application/json' \
  -d '{
    ""query"": ""query { find(inputText: \""дош\"", filtrationFlags: { entryFilters: { includeOnModeration: false, entryTypes: [WORD] }, translationFilters: { languageCodes: [\""RUS\""], includeOnModeration: false } }) { success serializedData errorMessage } }""
}'



// result:

{
  ""data"": {
    ""find"": {
      ""success"": true,
      ""serializedData"": ""[{\""EntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""Дошло\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":1,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""03a230c3-888d-4846-b3a0-aaeefa29473d\"",\""EntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Content\"":\""кавалерист; всадник\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""1b205f5f-d338-4f58-9b6a-2ee78131b09d\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дошлочуьнга\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":7,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""2ad6e86b-104f-4676-83a7-009d02bc6c65\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дошлочо\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":4,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""428ffdaa-0fc1-4223-b426-6d29fa4769c2\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дошлочун\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":2,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""50d1bdce-4e41-411b-937e-f372dfe0733e\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дошлочунна\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":3,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""8387373c-8a35-4b08-9e16-345dac643840\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""49482915-d54c-4559-aa6d-7b2ada0facf7\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дошлой\"",\""Details\"":{\""Class\"":1,\""Declension\"":0,\""Case\"":1,\""NameType\"":0,\""NumeralType\"":2},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]},{\""EntryId\"":\""63aed16e3f4e99b08fceea9b\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63aed16a3f4e99b08fced20c\"",\""ParentEntryId\"":null,\""Rate\"":50,\""Type\"":1,\""Subtype\"":0,\""Content\"":\""Дошалкъин-Юрт эв.\"",\""Details\"":null,\""Source\"":{\""Name\"":\""Islam Khasakhanov\"",\""Notes\"":\""\"",\""SourceId\"":\""63aed16a3f4e99b08fced20c\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""63aed16e3f4e99b08fceea9d\"",\""EntryId\"":\""63aed16e3f4e99b08fceea9b\"",\""Content\"":\""с. Гамурзиево\"",\""Rate\"":50,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-01-13T08:07:39+00:00\"",\""UpdatedAt\"":\""2023-06-13T02:07:18+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-01-13T08:07:39+00:00\"",\""UpdatedAt\"":\""2023-06-11T23:13:12+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""703aaf28-5b2b-4c80-86da-607b917807ce\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":4,\""Content\"":\""Дошаниг\"",\""Details\"":null,\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""baf7bd4e-ada9-4307-8eb9-a1d0a2a4219b\"",\""EntryId\"":\""703aaf28-5b2b-4c80-86da-607b917807ce\"",\""Content\"":\""прил. к даш свинцовый\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""Дош\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":1,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""13abb49d-4805-4c26-9efa-1f2de72da02d\"",\""EntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Content\"":\""слово; дешнаш декъало дешдакъошка слова делятся на слоги; дош ала а) высказаться; б) произнести речь; дош даккха а) взять слово с кого-л. в) получить чье-л. согласие; дош дала а) дать слово, обещать; б) дать слово, предоставить слово; дош дашера дала препираться; дош деха просить слова (напр. на собрании); дош дохо нарушить слово, не сдержать слова; дош юхаэца взять слово обратно; хазчу дашо лам дашо бина погов, красивое слово озолотило гору; <> дешнашца прописью (словами, а не цифрами); дашна ала вводи, ел. к слову сказать; дош дацара следовало бы; хӏара дош дац это не дело\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""2e074e7e-eda6-48f4-bec5-e1cff10f11aa\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дашна\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":3,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""4a7145de-640b-495f-a5e9-b199567f6573\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""даше\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":7,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""5c13c751-39dd-461f-a018-333d352054d5\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дашо\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":4,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""905199f3-59f6-4a1e-a9b0-8520afa6317f\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дешан\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":2,\""NameType\"":0,\""NumeralType\"":1},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""d1526040-c7ba-4948-89a2-e3df5be830f6\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8fb2cad0-71a9-4663-b24b-6f0cbf2a63fc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":2,\""Content\"":\""дешнаш\"",\""Details\"":{\""Class\"":4,\""Declension\"":0,\""Case\"":1,\""NameType\"":0,\""NumeralType\"":2},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]},{\""EntryId\"":\""a156eda3-6f6a-40fd-9c96-7e73e7a447d3\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":4,\""Content\"":\""Дошлойн\"",\""Details\"":null,\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""90d63605-eec7-4847-b3b0-a27de73a6834\"",\""EntryId\"":\""a156eda3-6f6a-40fd-9c96-7e73e7a447d3\"",\""Content\"":\""прил. кавалерийский; конный\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:10:25+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:10:26+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""3488d802-4e83-49db-9505-97630f288100\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""Даша\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""72b9b5fd-0980-4a48-972c-4100076f79d3\"",\""EntryId\"":\""3488d802-4e83-49db-9505-97630f288100\"",\""Content\"":\""2  побрить, брить; мекхаш даша побрить усы; корта баша побрить голову; маж яша побрить бороду\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:09:13+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""0230950c-fe8f-4a78-a874-dff6a045a75a\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""3488d802-4e83-49db-9505-97630f288100\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошу\"",\""Details\"":{\""Tense\"":6,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""09789976-e8b4-4e03-a150-6028aacd43d1\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""3488d802-4e83-49db-9505-97630f288100\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дешира\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""9ae30726-e7d9-413a-99e0-0f5bd06a815d\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""3488d802-4e83-49db-9505-97630f288100\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""даьшна\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]},{\""EntryId\"":\""4a98ee83-c629-4cc8-a05f-8bcfa1009c98\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""Дашийта\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""98a535d9-3e0a-4d9a-857a-323f58e561d3\"",\""EntryId\"":\""4a98ee83-c629-4cc8-a05f-8bcfa1009c98\"",\""Content\"":\""понуд. от даша\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""3951e3f6-27eb-433c-a814-bec691c621ba\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""4a98ee83-c629-4cc8-a05f-8bcfa1009c98\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошуьйту\"",\""Details\"":{\""Tense\"":6,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""9acf8575-2754-435e-a7fd-5e3dea113a5e\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""4a98ee83-c629-4cc8-a05f-8bcfa1009c98\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дашийтина\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""f907656c-3bed-4246-8491-9cdc15fb4e88\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""4a98ee83-c629-4cc8-a05f-8bcfa1009c98\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дашийтира\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]},{\""EntryId\"":\""51eefdf6-2800-4a59-bd1a-c0a41da17d43\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""Дашийта\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""94c16b00-5c85-4ad1-8b54-7478a870e3d1\"",\""EntryId\"":\""51eefdf6-2800-4a59-bd1a-c0a41da17d43\"",\""Content\"":\""понуд. от даша ӏ|2\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""35d5679f-0d20-48cb-8151-b1bd3f59d96d\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""51eefdf6-2800-4a59-bd1a-c0a41da17d43\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дашийтина\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""4d692c45-6c2b-45a5-8e17-389547471620\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""51eefdf6-2800-4a59-bd1a-c0a41da17d43\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошуьйту\"",\""Details\"":{\""Tense\"":6,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""9f39df95-000d-4d5d-a3f4-4a2f638e334d\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""51eefdf6-2800-4a59-bd1a-c0a41da17d43\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дашийтира\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":0},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]},{\""EntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":null,\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""Даш\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":4},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[{\""TranslationId\"":\""3b000729-77ac-4a02-837c-33ca1e365b47\"",\""EntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""Content\"":\""свинец\"",\""Rate\"":1000,\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""LanguageCode\"":\""RUS\"",\""Notes\"":\""\"",\""CreatedAt\"":\""2023-07-05T13:09:13+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\""}],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T12:55:01+00:00\"",\""SubEntries\"":[{\""EntryId\"":\""331a5731-9a72-4fe3-aedd-2035a1160388\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошан\"",\""Details\"":{\""Tense\"":4,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":4},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""7947f569-34fb-4f3f-9068-9c39fa630a8c\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошана\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":4},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""8b51dd3c-d865-4326-ac84-d0e21f515e97\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""дошо\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":4},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]},{\""EntryId\"":\""be14815b-8ccc-475d-9bee-862724937b74\"",\""UserId\"":\""63a816205d1af0e432fba6dd\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""ParentEntryId\"":\""8b019f95-0f16-4137-a8f8-e362559e52bc\"",\""Rate\"":1000,\""Type\"":1,\""Subtype\"":1,\""Content\"":\""доше\"",\""Details\"":{\""Tense\"":10,\""Conjugation\"":0,\""Mood\"":0,\""NumeralType\"":1,\""Transitiveness\"":0,\""Class\"":4},\""Source\"":{\""Name\"":\""Maciev\"",\""Notes\"":\""\"",\""SourceId\"":\""63a816205d1af0e432fba6df\"",\""UserId\"":\""63a816205d1af0e432fba6dd\""},\""Translations\"":[],\""Sounds\"":[],\""CreatedAt\"":\""2023-07-05T10:09:14+00:00\"",\""UpdatedAt\"":\""2023-07-26T13:00:14+00:00\"",\""SubEntries\"":[]}]}]"",
      ""errorMessage"": """"
    }
  }
}"
nnSjtrag,systick,wiktortokumpel,Java,Thursday 9th of November 2023 09:51:05 AM CDT,"package SysTick;

import static org.junit.Assert.assertEquals;

//import java.util.ArrayList;

public class SysTick implements Cortex_M0_SysTick_Interface {

	private int rvr; // rejestr przeładowania
	private int cvr; // rejestr wartości bieżącje
	private int csr; // rejestr stanu
	
	 public SysTick() {
	        // Inicjalizacja pĂłl
	        this.rvr = 0;
	        this.cvr = 0;
	        this.csr = 0;
//	        this.countFlag = false;
//	        this.Clksrc = false; // DomyĹ›lnie ĹşrĂłdĹ‚o zegara to zewnÄ™trzne
//	        this.Tickint= false;
//	        this.Enable = false;
	    }
	public static void main(String[]args)  {
        SysTick cortexM01 = new SysTick();
        cortexM01.setSourceInternal(); 
        cortexM01.setRVR(1);
        cortexM01.setCVR(4);
        cortexM01.setEnable();
        cortexM01.tickInternal();
//        assertEquals(1, cortexM01.getCVR());
        cortexM01.setRVR(0);
        cortexM01.tickInternal();
//        assertEquals(0, cortexM01.getCVR());
//        assertEquals(0, cortexM01.getRVR());
        cortexM01.tickInternal();
//        assertEquals(0, cortexM01.getCVR());
//        assertEquals(0, cortexM01.getRVR());
        cortexM01.setRVR(2);
        cortexM01.tickInternal();
//        assertEquals(0, cortexM01.getCVR()); ten nie dziala
//        assertEquals(2, cortexM01.getRVR());
        cortexM01.setEnable();
        cortexM01.tickInternal();
//        assertEquals(2, cortexM01.getCVR());
        cortexM01.tickInternal();
//        assertEquals(1, cortexM01.getCVR());
        cortexM01.tickInternal();
//        assertEquals(0, cortexM01.getCVR());
    }

	@Override
	public void tickInternal() {
		// TODO Auto-generated method stub
		// zegar wewnetrzny 
		if ((csr & (1 << 2))!=0) {
			if ((csr & (1 << 0))!=0) {
				if (cvr != 0) {
					cvr--;	
					if(cvr==0) {
						if(rvr==0) {
							csr &= ~(1 << 1);
						}
						csr |= (1 << 16); // Ustawia bit COUNTFLAG
					}
				}
             	else {
                    cvr=rvr;
                    
                    
                	}
          
			}
		}
		
	}

	@Override
	public void tickExternal() {
		//zergar zewnetrzny
		if ((csr & (1 << 2))!=0) {
			if ((csr & (1 << 0))!=0) {
				if (cvr != 0) {
					cvr--;	
					if(cvr==0) {
						if(rvr==0) {
							csr &= ~(1 << 1);
						}
						csr |= (1 << 16); // Ustawia bit COUNTFLAG
					}
				}
             	else {
                    cvr=rvr;
//                    csr |= (1 << 16); // Ustawia bit COUNTFLAG
                    
                	}
          
			}
		}
	}

	@Override
	public void setRVR(int value) {
		// TODO Auto-generated method stub
		//System_RVR = 0 timer = 0
		//wyłącza timer, nawet jeśli timer jest włączony
//		if(value == 0) {
//			csr &= ~(1<<0);
//		}
		rvr = value & 0xFFFFFF;
	}
	
	@Override
	public void setCVR(int value) {
		// TODO Auto-generated method stub
		/*
		 * wartoś system CVR jest niezna po resecie
		 */
		// Ograniczenie do 24 bitów
		cvr =0x000000;
		
		csr &= ~(1<<16);
	}

	@Override
	public void setCSR(int value) {
		// TODO Auto-generated method stub
		csr=value&0xFFFFFF;
//		csr &= ~(1 <<16);
//		Enable	 = (value & (1 << 0)) != 0;
//		Tickint	 = (value & (1 << 1)) != 0;
//		Clksrc 	 = (value & (1 << 2)) != 0; 
//		countFlag= (value & (1 << 16))!= 0; 
//		csr = csr &~(1<<16);
		
		
		
		
	}

	@Override
	public void reset() {
		// TODO Auto-generated method stub
		csr = 0x000000;
	}

	@Override
	public void setEnable() {
		// TODO Auto-generated method stub
		// Ustaw bit ENABLE 
		//csr = csr | (1 << 0);
		csr |= (1 << 0); 
	}

	@Override
	public void setDisable() {
		// TODO Auto-generated method stub
		 // Wyzeruj bit ENABLE 

        csr &= ~(1 << 0); 
	}

	@Override
	public void setSourceExternal() {
		// TODO Auto-generated method stub
		 // Wyzeruj bit ENABLE 
//		csr |= (1 << 2);
		csr &= ~(1 << 2); 
	}

	@Override
	public void setSourceInternal() {
		// TODO Auto-generated method stub
		// Ustaw bit CLKSRC 
		csr |= (1 << 2);
//		csr &= ~(1 << 2); 
	}

	@Override
	public void setInterruptEnable() {
		// TODO Auto-generated method stub
		// Ustaw bit TICKINT 
		csr |= (1 << 1);
	}

	@Override
	public void setInterruptDisable() {
		// TODO Auto-generated method stub
		// Wyzeruj bit TICKINT 
		csr &= ~(1 << 1);
	}

	@Override
	public int getCVR() {
		// TODO Auto-generated method stub
		// Odczyt z rejestru CV (0xE000E018)
		return cvr;
	}

	@Override
	public int getRVR() {
		// TODO Auto-generated method stub
		// Odczyt z rejestru RV (0xE000E014)
		return rvr;
	}

	@Override
	public int getCSR() {
		// TODO Auto-generated method stub
		// Aktualizuj stan rejestrĂłw przed odczytem
		int temp = csr;
		csr &= ~(1 <<16);
       return temp; 
	}

	@Override
	public boolean getEnabled() {
		// TODO Auto-generated method stub
		// Sprawdź bit ENABLE (0xE000E010)
		int temp = (csr&(1<<0));
		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
		
		
	}
	@Override
	public boolean getInterrupt() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<1));
		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}


	@Override
	public boolean getSource() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<2));
		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
		
	}

	@Override
	public boolean getCountFlag() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<16));
		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}

	@Override
	public boolean isCountFlag() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<16));
//		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}
	@Override
	public boolean isEnableFlag() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<0));
//		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}


	@Override
	public boolean isInterruptFlag() {
		// TODO Auto-generated method stub
		int temp = (csr&(1<<1));
//		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}

	@Override
	public boolean isSourceFlag() {
		// TODO Auto-generated method stub
		
		int temp = (csr&(1<<2));
//		csr &= ~(1<<16);
		if (temp<=0) return false;
		else
			return true;
	}

}"
jtWqy2hS,show_serializer_custom_profile_field,kosumosu,Python,Thursday 9th of November 2023 09:49:01 AM CDT,"class UserShowSerializer(serializers.ModelSerializer):
    """"""Сериалайзер для сериализации данных при получении пользователя из БД""""""
    # profile = serializers.JSONField()
    profile = serializers.SerializerMethodField()

    class Meta:
        model = UserData
        exclude = ['user_permissions', 'groups', 'password']
        extra_kwargs = {
            'password': {'write_only': True},
            'activation_code': {'write_only': True},
        }

    def get_profile(self, user_data: UserData):
        """"""Валидация поля профиля""""""
        logger.debug('validate_profile | Profile data: %s', user_data)

        user_type = user_data.profile.type
        profile = user_data.profile

        profile_serializer_class = get_profile_serializer(user_type)
        profile_serializer = profile_serializer_class(profile)

        return profile_serializer.data"
Gg5GL0rP,register_and_show_user_serializer_custom_profile_field,kosumosu,Python,Thursday 9th of November 2023 09:48:15 AM CDT,"class ProfileField(serializers.RelatedField):
    """"""Описание валидации поля профиля""""""
    queryset = UserData.objects.all()

    def to_representation(self, profile: UserProfile):
        logger.debug('ProfileField | to_representation | value: %s', profile)

        user_type = profile.type

        profile_serializer_class = get_profile_serializer(user_type)
        profile_serializer = profile_serializer_class(profile)

        return profile_serializer.data

    def to_internal_value(self, profile: dict):
        logger.debug('ProfileField | to_internal_value | data: %s', profile)

        user_type = profile.get('type')

        profile_serializer_class = get_profile_serializer(user_type)
        profile_serializer = profile_serializer_class(data=profile)

        try:
            profile_serializer.is_valid(raise_exception=True)
        except ValidationError as ve:
            logger.error('Ошибка валидации профиля %s', ve)
            raise

        logger.debug('ProfileField | to_internal_value | validated data: %s',
                     profile_serializer.validated_data)

        return profile


class UserEditSerializer(serializers.ModelSerializer):
    """"""Сериалайзер для валидации информации о пользователе при редактировании""""""
    profile = ProfileField()

    class Meta:
        model = UserData
        exclude = ['user_permissions', 'groups', 'password']
        extra_kwargs = {
            'password': {'write_only': True},
            'activation_code': {'write_only': True},
        }"
fVmZGNMS,vacuum.lua,okpalan,Lua,Thursday 9th of November 2023 09:47:53 AM CDT,"// https://github.com/codewithnnamdi/vacuum
// vacuum-1.lua - A numerica computation library for building games.
// TODO:handle inputs as well

local matrix = {}

function matrix:new(n,m)
    -- Create a new matrix
    local matt = {}
    for i = 1, n do
        matt[i] = {}
        for j = 1, m do
            matt[i][j] = 0
        end
    end
    setmetatable(matt, self)
    self.__index = self
    return matt
end

function matrix:__tostring()
    -- Print a matrix
    local str = """"
    for i = 1, #self do
        for j = 1, #self[i] do
            str = str .. self[i][j] .. "" ""
        end
        str = str .. """" .. """" .. """" 
    end
    return str
end

function matrix:__add(other)
    -- Add two matrices
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] + other[i][j]
        end
    end
    return matt
end

function matrix:__sub(other)
    -- Subtract two matrices
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] - other[i][j]
        end
    end
    return matt
end

function matrix:__mul(other)
    -- Multiply two matrices
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] * other[i][j]
        end
    end
    return matt
end

function matrix:__div(other)
    -- Divide two matrices
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] / other[i][j]
        end
    end
    return matt
end

function matrix:__unm()
    -- Unary minus
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = -self[i][j]
        end
    end
    return matt
end

function matrix:__eq(other)
    -- Check if two matrices are equal
    for i = 1, #self do
        for j = 1, #self[i] do
            if self[i][j] ~= other[i][j] then
                return false
            end
        end
    end
    return true
end

function matrix:__lt(other)
    -- Check if one matrix is less than another
    for i = 1, #self do
        for j = 1, #self[i] do
            if self[i][j] >= other[i][j] then
                return false
            end
        end
    end
    return true
end

function matrix:__le(other)
    -- Check if one matrix is less than or equal to another
    for i = 1, #self do
        for j = 1, #self[i] do
            if self[i][j] > other[i][j] then
                return false
            end
        end
    end
    return true
end

function matrix:__pow(other)
    -- Raise a matrix to a power
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] ^ other[i][j]
        end
    end
    return matt
end

function matrix:__mod(other)
    -- Modulo a matrix
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] % other[i][j]
        end
    end
    return matt
end

function matrix:__concat(other)
    -- Concatenate two matrices
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j] .. other[i][j]
        end
    end
    return matt
end

function matrix:__len()
    -- Get the length of a matrix
    return #self * #self[1]
end

function matrix:__call(...)
    -- Call a matrix
    local matt = matrix:new(#self, #self[1])
    for i = 1, #self do
        for j = 1, #self[i] do
            matt[i][j] = self[i][j](...)
        end
    end
    return matt
end

function matrix:__index(key)
    -- Get a matrix element
    return self[key[1]][key[2]]
end

function matrix:__newindex(key, value)
    -- Set a matrix element
    self[key[1]][key[2]] = value
end

function matrix:__pairs()
    -- Iterate over a matrix
    local i = 0
    local j = 0
    return function()
        i = i + 1
        if i > #self then
            i = 1
            j = j + 1
        end
        if j > #self[1] then
            return nil
        end
        return {i, j}, self[i][j]
    end
end

local vec2 = {}

function vec2:new(x, y)
    local o = {x = x or 0, y = y or 0}
    setmetatable(o, self)
    self.__index = self
    return o
end

function vec2:__tostring()
    return ""("" .. self.x .. "", "" .. self.y .. "")""
end

function vec2:__add(other)
    return vec2:new(self.x + other.x, self.y + other.y)
end

function vec2:__sub(other)
    return vec2:new(self.x - other.x, self.y - other.y)
end

function vec2:__mul(other)
    return vec2:new(self.x * other, self.y * other)
end

function vec2:__div(other)
    return vec2:new(self.x / other, self.y / other)
end

-- unary minus
function vec2:__unm()
    return vec2:new(-self.x, -self.y)
end

function vec2:__eq(other)
    return self.x == other.x and self.y == other.y
end

function vec2:__lt(other)
    return self.x < other.x and self.y < other.y
end

function vec2:__le(other)
    return self.x <= other.x and self.y <= other.y
end

function vec2:__len()
    return math.sqrt(self.x * self.x + self.y * self.y)
end

function vec2:__call(x, y)
    self.x = x
    self.y = y
end

function vec2:clone()
    return vec2:new(self.x, self.y)
end

function vec2:unpack()
    return self.x, self.y
end

function vec2:rotate(angle)
    local c = math.cos(angle)
    local s = math.sin(angle)
    self.x, self.y = self.x * c - self.y * s, self.x * s + self.y * c
end

function vec2:normalized()
    local len = #self
    return vec2:new(self.x / len, self.y / len)
end

function vec2:normalize_inplace()
    local len = #self
    self.x = self.x / len
    self.y = self.y / len
end

function vec2:perpendicular()
    return vec2:new(-self.y, self.x)
end

function vec2:dot(other)
    return self.x * other.x + self.y * other.y
end

function vec2:cross(other)
    return self.x * other.y - self.y * other.x
end

function vec2:project_on(other)
    local k = self:dot(other) / other:dot(other)
    return vec2:new(other.x * k, other.y * k)
end


local vec3 = {}

function vec3:new(x, y, z)
    local o = {x = x or 0, y = y or 0, z = z or 0}
    setmetatable(o, self)
    self.__index = self
    return o
end

function vec3:__tostring()
    return ""("" .. self.x .. "", "" .. self.y .. "", "" .. self.z .. "")""
end

function vec3:__add(other)
    return vec3:new(self.x + other.x, self.y + other.y, self.z + other.z)
end

function vec3:__sub(other)
    return vec3:new(self.x - other.x, self.y - other.y, self.z - other.z)
end

function vec3:__mul(other)
    return vec3:new(self.x * other, self.y * other, self.z * other)
end

function vec3:__div(other)
    return vec3:new(self.x / other, self.y / other, self.z / other)
end

-- unary minus
function vec3:__unm()
    return vec3:new(-self.x, -self.y, -self.z)
end

function vec3:__eq(other)
    return self.x == other.x and self.y == other.y and self.z == other.z
end

function vec3:__lt(other)
    return self.x < other.x and self.y < other.y and self.z < other.z
end

-- less than or equal
function vec3:__le(other)
    return self.x <= other.x and self.y <= other.y and self.z <= other.z
end

function vec3:__len()
    return math.sqrt(self.x * self.x + self.y * self.y + self.z * self.z)
end



function vec3:__call(x, y, z)
    self.x = x
    self.y = y
    self.z = z
end

function vec3:clone()
    return vec3:new(self.x, self.y, self.z)
end

function vec3:unpack()
    return self.x, self.y, self.z
end

function  vec3:rotatex(theta)    
    local c = math.cos(theta)
    local s = math.sin(theta)
    self.y, self.z = self.y * c - self.z * s, self.y * s + self.z * c
end

function  vec3:rotatey(theta)    
    local c = math.cos(theta)
    local s = math.sin(theta)
    self.x, self.z = self.x * c - self.z * s, self.x * s + self.z * c
end

function  vec3:rotatez(theta)    
    local c = math.cos(theta)
    local s = math.sin(theta)
    self.x, self.y = self.x * c - self.y * s, self.x * s + self.y * c
end

function vec3:normalized()
    local len = #self
    return vec3:new(self.x / len, self.y / len, self.z / len)
end

function vec3:normalize_inplace()
    local len = #self
    self.x = self.x / len
    self.y = self.y / len
    self.z = self.z / len
end

local vec4 = {}

function vec4:new(x, y, z, w)
    -- use a vec3 as a base
    local o = vec3:new(x, y, z)
    o.w = w or 0
    setmetatable(o, self)
    self.__index = self
    return o
end



local vector = { vec2 = vec2, vec3 = vec3, vec4 = vec4 }
local mt = {
    -- abstract call method in a metatable
    __call = function(_, ...)
        local n = select(""#"", ...)
        return vmt[n](...)
    end
}

setmetatable(vector, mt)

return vector
-- destructuring assignment for namespace
local vec2, vec3, vec4 = vector.vec2, vector.vec3, vector.vec4
-- Quaternion class


local Quaternion = {};


function Quaternion:new(x, y, z, w)
    -- a Quaternion is a 4D vector
    -- - inherits from vec4
    local o = vec4:new(x, y, z,w)
    setmetatable(o, self)
    self.__index = self
    return o
end

function Quaternion:__tostring()
    return ""("" .. self.x .. "", "" .. self.y .. "", "" .. self.z .. "", "" .. self.w .. "")""
end


function Quaternion:__mul(other)
    -- Quaternion multiplication
    -- is not commutative
    -- (a * b) != (b * a)
    return Quaternion:new(
        self.w * other.x + self.x * other.w + self.y * other.z - self.z * other.y,
        self.w * other.y - self.x * other.z + self.y * other.w + self.z * other.x,
        self.w * other.z + self.x * other.y - self.y * other.x + self.z * other.w,
        self.w * other.w - self.x * other.x - self.y * other.y - self.z * other.z
    )
end

function Quaternion:__div(other)
    -- Quaternion division
    -- is not commutative
    -- (a / b) != (b / a)
    return Quaternion:new(
        self.w * other.x - self.x * other.w - self.y * other.z + self.z * other.y,
        self.w * other.y + self.x * other.z - self.y * other.w - self.z * other.x,
        self.w * other.z - self.x * other.y + self.y * other.x - self.z * other.w,
        self.w * other.w + self.x * other.x + self.y * other.y + self.z * other.z
    )
end

function Quaternion:__unm()
    -- Quaternion negation
    return Quaternion:new(-self.x, -self.y, -self.z, -self.w)
end

function Quaternion:__eq(other)
    return self.x == other.x and self.y == other.y and self.z == other.z and self.w == other.w
end

function Quaternion:conjugate()
    -- Quaternion conjugate
    return Quaternion:new(-self.x, -self.y, -self.z, self.w)
end

function Quaternion:inverse()
    -- Quaternion inverse
    return self:conjugate() / self:dot(self)
end

function Quaternion:dot(other)
    -- Quaternion dot product
    return self.x * other.x + self.y * other.y + self.z * other.z + self.w * other.w
end

function Quaternion:normalize()
    -- Quaternion normalization
    local len = self:dot(self)
    self.x = self.x / len
    self.y = self.y / len
    self.z = self.z / len
    self.w = self.w / len
end


function Quaternion:rotate_vector(vector)
    -- Rotate a vector by a quaternion
    -- (q * v * q^-1)
    return (self * Quaternion:new(vector.x, vector.y, vector.z, 0) * self:inverse()).xyz
end

function Quaternion:rotate_point(point)
    -- Rotate a point by a quaternion
    -- (q * p * q^-1)
    return (self * Quaternion:new(point.x, point.y, point.z, 0) * self:inverse()).xyz
end

function Quaternion:rotate_quaternion(quaternion)
    -- Rotate a quaternion by a quaternion
    -- (q * r * q^-1)
    return self * quaternion * self:inverse()
end

function Quaternion:from_axis_angle(axis, angle)
    -- Create a quaternion from an axis and an angle
    local half_angle = angle / 2
    local sin = math.sin(half_angle)
    self.x = axis.x * sin
    self.y = axis.y * sin
    self.z = axis.z * sin
    self.w = math.cos(half_angle)
end

function Quaternion:from_euler_angles(roll, pitch, yaw)
    -- Create a quaternion from euler angles
    local cr = math.cos(roll / 2)
    local cp = math.cos(pitch / 2)
    local cy = math.cos(yaw / 2)
    local sr = math.sin(roll / 2)
    local sp = math.sin(pitch / 2)
    local sy = math.sin(yaw / 2)
    self.x = sr * cp * cy - cr * sp * sy
    self.y = cr * sp * cy + sr * cp * sy
    self.z = cr * cp * sy - sr * sp * cy
    self.w = cr * cp * cy + sr * sp * sy
end

function Quaternion:to_axis_angle()
    -- Convert a quaternion to an axis and an angle
    local axis = vec3:new(self.x, self.y, self.z)
    local angle = 2 * math.acos(self.w)
    axis:normalize()
    return axis, angle
end

function Quaternion:to_euler_angles()
    -- Convert a quaternion to euler angles
    local roll = math.atan2(2 * (self.w * self.x + self.y * self.z), 1 - 2 * (self.x * self.x + self.y * self.y))
    local pitch = math.asin(2 * (self.w * self.y - self.z * self.x))
    local yaw = math.atan2(2 * (self.w * self.z + self.x * self.y), 1 - 2 * (self.y * self.y + self.z * self.z))
    return roll, pitch, yaw
end

function Quaternion:to_matrix()
    -- Convert a quaternion to a matrix
    local matrix = Matrix:new()
    matrix[1][1] = 1 - 2 * (self.y * self.y + self.z * self.z)
    matrix[1][2] = 2 * (self.x * self.y + self.z * self.w)
    matrix[1][3] = 2 * (self.x * self.z - self.y * self.w)
    matrix[2][1] = 2 * (self.x * self.y - self.z * self.w)
    matrix[2][2] = 1 - 2 * (self.x * self.x + self.z * self.z)
    matrix[2][3] = 2 * (self.y * self.z + self.x * self.w)
    matrix[3][1] = 2 * (self.x * self.z + self.y * self.w)
    matrix[3][2] = 2 * (self.y * self.z - self.x * self.w)
    matrix[3][3] = 1 - 2 * (self.x * self.x + self.y * self.y)
    return matrix
end

function Quaternion:to_string()
    -- Convert a quaternion to a string
    return string.format(""Quaternion(%f, %f, %f, %f)"", self.x, self.y, self.z, self.w)
end

function Quaternion:to_table()
    -- Convert a quaternion to a table
    return {self.x, self.y, self.z, self.w}
end



function Quaternion:to_vec3()
    -- Convert a quaternion to a vec3
    return vec3:new(self.x, self.y, self.z)
end

function Quaternion:to_vec2()
    -- Convert a quaternion to a vec2
    return vec2:new(self.x, self.y)
end

function Quaternion:to_vec4()
    -- Convert a quaternion to a vec4
    return vec4:new(self.x, self.y, self.z, self.w)
end

return Quaternion
"
EA3XSjk0,curved hacky,kerlser,CSS,Thursday 9th of November 2023 09:41:56 AM CDT,"
/*
#titlebar {
    order: 1 !important;
} 
*/

/*  ERSETZEN ENDE  */


/*** Curved tabs beta #2B ***/


/*** General adjustments ***/

:root {

/* Tabs bar height adjust */
    /*--tab-block-margin: 4px !important;*/
    --tab-block-margin: 2px !important;
    --tab-min-height: 36px !important;

/* Edges without Svg /  Radius */
    --ug-radius: 20px;

/* Edges (borders, outlines) colors */

/* Edges not selected */
    --ug-color-border: hsla(0, 0%, 33%, 0.5);                                    /* unselected Kante Tab 83 */
    --ug-stroke: var(--ug-color-border);                                             /* unselected Kante Svg */
    --ug-kante_hova: hsla(0, 0%, 43%, 0.65);                        /* unselected alle Kanten hover 93 */

/* Edges selected , multiselected */
    --ug-color-border_select: hsla(0, 0%, 43%, 0.75);                            /* selected Kante Tab */
    --ug-stroke_select:  var(--ug-color-border_select);                           /* selected Kante Svg */
    --ug-kante_hova_select: hsla(0, 0%, 49%, 0.8);           /* multiselected alle Kanten hover 100 */


/* Tabs backgrounds:  */

    --ug-color1: hsla(0, 0%, 83%, 0.25);                                /* basis, unselected */
    --ug-color2: hsla(35, 80%, 60%, 0.25);                                          /* selected */
    --ug-color2-multi: hsla(35, 80%, 50%, 0.25);                          /* multiselected */
    --ug-color_multi_hova: hsla(35, 70%, 40%, 0.35);        /* multiselected hover */
    --ug-color_hova: hsla(0, 0%, 50%, 0.25);                         /* unselected hover */

/* Tab bar border bottom color */
    --ug-color3: hsla(0, 0%, 43%, 1);

    /*--tabs-navbar-shadow-size: 0 !important;*/
}

/*
 #TabsToolbar {
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
}
*/

/** Distance between tabs **/
.tabbrowser-tab:not([pinned]) {
    /*padding-inline: 2px !important;*/
    overflow: visible !important;
}

/*** General adjustments end ***/


/* Tab bar border bottom */

#TabsToolbar {
    border-image: linear-gradient(to top, 
        var(--ug-color-border) 1px, transparent 1px) 1 / 0 0 1px 0 !important;
}

/* buttons adjust size, position */

/* Buttons smaller by 2px */
#TabsToolbar {
    --toolbarbutton-inner-padding: calc((var(--tab-min-height) - 16px) / 2 - 2px) !important;
}

/* Move buttons up/down, optional, OFF */
/*
#TabsToolbar toolbarbutton {
    margin-top: -1px !important;
}
#tabbrowser-tabs {
    --ug_margin_plus: 1px -1px;
}
:is(#scrollbutton-up, #scrollbutton-down) {
    margin-block:  var(--ug_margin_plus) !important;
}
*/

/* adjust tab content */
.tab-content {
    margin-top: 3px !important;
}
.tabbrowser-tab:not([pinned]) .tab-content {
    padding-inline: 12px 10px !important;
}

.tab-label, .tab-close-button {
    text-shadow: none  !important;
}

.tabbrowser-tab:not([pinned]) .tab-close-button {
    border-radius: 50% !important;
    display: flex !important;
}
.tab-close-button:hover {
    /*outline: none !important;*/
    outline: 1px solid var(--button-active-bgcolor) !important;
    outline-offset: -1px !important;
    background-color: var(--button-hover-bgcolor) !important;
}

/* New Tab (+) button, not overflow (+) button */

/* Position, closer to last tab */

.tabbrowser-tab:not([pinned]) + #tabbrowser-arrowscrollbox-periphery {
    /*margin-inline: -11px !important;*/
    margin-left: 8px !important;
    z-index: 2 !important;
}


#tabbrowser-arrowscrollbox-periphery #tabs-newtab-button {
    margin-block: 1px -1px !important;
    padding-inline: 0px !important;
}

/* Button rund, icon position adjusted */
#tabbrowser-arrowscrollbox-periphery #tabs-newtab-button .toolbarbutton-icon {
    border-radius: 50% !important;
    --toolbarbutton-inner-padding: calc((var(--tab-min-height) - 16px) / 2 - 3px) !important;
    padding-block: 6px 8px !important;
}

/* New Tab (+) button hover outline */
#tabbrowser-arrowscrollbox-periphery:hover #tabs-newtab-button .toolbarbutton-icon {
    outline: 1px solid var(--ug-color-border) !important;
    outline-offset: -1px !important;
    /*box-shadow: inset 0 0px 2px 1px var(--ug-color-border) !important;*/
}


                                                           /*** Tabs base ***/

/* tabs connected bottom */

.tab-background {
    margin-block: calc(2 * var(--tab-block-margin)) 0 !important;
}

/* Space for corner left/right - first/last tab, overflow bug fix ? */
/* Test #3 */

/*
.tabbrowser-tab:nth-child(1 of :not([pinned], [hidden])) {
    padding-left: calc(var(--ug-corner-size) / 2) !important;
}
.tabbrowser-tab:not([pinned]):last-of-type {
    padding-right: calc(var(--ug-corner-size) / 2) !important;
}
*/

.tabbrowser-tab[first-visible-unpinned-tab] {
    margin-inline-start: 0px !important;
}



/*** Tabs Radien, borders, corners, tab shapes order , inline borders only where no custom corners ***/

/*   basis   */
.tabbrowser-tab .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) var(--ug-radius)  0 !important;
    border: 1px solid !important;
    border-bottom: none !important;
}

.tabbrowser-tab:not([pinned]) .tab-background {
    border-left: none !important;
}

/* selected , pinned tabs */
.tabbrowser-tab:is([visuallyselected], [pinned]) .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 0 !important;
}

/* Tab selected no inline border */
.tabbrowser-tab[visuallyselected]:not([pinned]) .tab-background {
    border-inline: none !important;
}

/* Tab after selected tab completely round, no corners */
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]) .tab-background {
    border-radius: var(--ug-radius) !important;
    border-left: 1px solid var(--ug-color-border) !important;
}
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]) .tab-background::before {
    background-image: none !important;
}

/* Last tab dual corners, unless it comes after selected tab */

.tabbrowser-tab:not([pinned]):last-of-type .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 0 !important;
    border-inline: none !important;
}
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]):last-of-type .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 var(--ug-radius) !important;
    border-right: none !important;
}

                                                          /***  COLORS  ***/

/**  In about:config set svg.context-properties.content.enabled to true  **/


/* Basis */

.tabbrowser-tab .tab-background {
    outline: none !important;
    box-shadow: none !important;
    background-color: var(--ug-color1) !important;
    border-color: var(--ug-color-border) !important;
    stroke: var(--ug-stroke) !important;
    fill: var(--ug-color1) !important;
}

/* Colors, outlines: selected / multiselected / hover */

/* tabs selected base */
.tabbrowser-tab:is([visuallyselected], [multiselected]) .tab-background {
    background-image: none !important;
    background-color: var(--ug-color2) !important;
    stroke: var(--ug-stroke_select) !important;
    border-color: var(--ug-color-border_select) !important;
    fill: var(--ug-color2) !important;
}

/* tabs multiselected */
.tabbrowser-tab:not([visuallyselected])[multiselected] .tab-background {
    background-color: var(--ug-color2-multi) !important;
    fill: var(--ug-color2-multi) !important;
}

/* tabs multiselected hover */
.tabbrowser-tab:not([visuallyselected]):hover .tab-background {
    background-color: var(--ug-color_multi_hova) !important;
    fill: var(--ug-color_multi_hova) !important;
    stroke: var(--ug-kante_hova_select) !important;
    border-color: var(--ug-kante_hova_select) !important;
}

/* tabs unselected hover */
.tabbrowser-tab:not([visuallyselected], [multiselected]):hover .tab-background {
    background-color: var(--ug-color_hova) !important;
    fill: var(--ug-color_hova) !important;
    /*stroke: var(--ug-stroke_select) !important;*/
    stroke: var(--ug-kante_hova) !important;
    border-color: var(--ug-kante_hova) !important;
}

                                                      /***  tabs corners  ***/
/*  base  */

#TabsToolbar {
    --ug-corner-size: var(--tab-min-height);
    /*--ug-corner-image: url(icons/tab_corner_ug.svg) !important;*/
    --ug-corner-image: url(""data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='128' height='128' viewBox='0 0 32 32'%3E%3Cpath d='M0 33 L3 32.5 A16 16 0 0 0 15.5 16 L 16 16 L 16 33 Z' fill='context-fill'/%3E%3Cpath d='M3 32.5 A16 16 0 0 0 15.5 16' fill='rgba(155,122,0,0)' stroke='context-stroke' stroke-width='1px'/%3E%3Cpath d='M0 16 L16 16 A15.5 15.5 0 0 1 32 0 L 32 0 L 32 16 Z' fill='rgba(155,122,0,0)'/%3E%3Cpath d='M15.5 16 A18.5 18 0 0 1 35.5 -0.5' fill='transparent' stroke='context-stroke' stroke-width='1px' /%3E%3C/svg%3E%0A"");
}

.tabbrowser-tab .tab-background::before, 
.tabbrowser-tab .tab-background::after {
    content: """";
    position: absolute;
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
    width: var(--ug-corner-size) !important;
    height: var(--ug-corner-size) !important;
    background-size: var(--ug-corner-size) !important;
    background-repeat: no-repeat !important;
    background-position: bottom center !important;
    mask-image: linear-gradient(215deg, transparent, black 18px) !important;
}

/*  left  */
.tabbrowser-tab .tab-background::before {
    left: calc(0px - var(--ug-corner-size) / 2);
    background-image: var(--ug-corner-image) !important;
}

/*  right  */
.tabbrowser-tab[visuallyselected] .tab-background::after {
    right: calc(0px - var(--ug-corner-size) / 2);
    background-image: var(--ug-corner-image) !important;
    transform: scaleX(-1) !important;
}

.tabbrowser-tab:last-of-type .tab-background::after {
    right: calc(0px - var(--ug-corner-size) / 2);
    background-image: var(--ug-corner-image) !important;
    transform: scaleX(-1) !important;
}

.tabbrowser-tab[pinned] .tab-background::before, 
.tabbrowser-tab[pinned] .tab-background::after {
    display: none !important;
}






/*   margins test   */

.tabbrowser-tab .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) var(--ug-radius)  0 !important;
}

                                                                                                               /* basis TEST */
.tabbrowser-tab:not([pinned]) {
    padding-left: 20px !important;
}

                                                                                                       /* Tab selected  TEST */

.tabbrowser-tab[visuallyselected]:not([pinned]) {
    padding-inline: 20px !important;
}


                                                  /* Tab after selected tab completely round, no corners TEST */

.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]) {
    margin-inline: -36px -18px !important;
}

/*
.tabbrowser-tab:not([visuallyselected]) + .tabbrowser-tab:is([visuallyselected]) {
    margin-left: -18px !important;
}
*/

/*
.tabbrowser-tab:not([visuallyselected], [pinned]) + .tabbrowser-tab:not([visuallyselected]) {
    margin-right: -18px !important;
}
*/

.tabbrowser-tab:not([visuallyselected], [pinned]) {
    margin-right: -18px !important;
}

                                                 /* Last tab dual corners, unless it comes after selected tab TEST */

.tabbrowser-tab:not([pinned]):last-of-type {
    padding-inline: 20px !important;
}

.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]):last-of-type {
    padding-inline: 2px 20px !important;
    margin-left: -18px !important;
}

#tabbrowser-tabs:not([overflow]) .tabbrowser-tab:is([visuallyselected]):not([pinned]):last-of-type {
    padding-right: 0px !important;
}

"
2BcU4bPT,session-cache.js,okpalan,JavaScript,Thursday 9th of November 2023 09:34:20 AM CDT,"// session-cache.js

'use strict';

const createSessionCache = () => {
  const cache = new Map();

  const updateLocalStorage = () => {
    try {
      const cacheData = JSON.stringify(Array.from(cache.entries()));
      localStorage.setItem('cache', cacheData);
    } catch (error) {
      console.error('Failed to update cache in localStorage:', error);
    }
  };

  const initializeCacheFromLocalStorage = () => {
    try {
      const cacheData = localStorage.getItem('cache');
      if (cacheData) {
        const entries = JSON.parse(cacheData);
        entries.forEach(([key, value]) => {
          cache.set(key, value);
        });
      }
    } catch (error) {
      console.error('Failed to initialize cache from localStorage:', error);
    }
  };

  const setCache = (key, value) => {
    cache.set(key, value);
    updateLocalStorage();
  };

  const getCache = (key) => cache.get(key);

  const removeCache = (key) => {
    cache.delete(key);
    updateLocalStorage();
  };

  const clearCache = () => {
    cache.clear();
    updateLocalStorage();
  };

  const setCacheWithExpiry = (key, value, ttl) => {
    const now = new Date();
    const item = {
      value,
      expiry: now.getTime() + ttl,
    };

    setCache(key, item);
  };

  const getCacheWithExpiry = (key) => {
    const item = cache.get(key);
    if (!item) {
      return null;
    }

    const now = new Date();

    if (now.getTime() > item.expiry) {
      removeCache(key);
      return null;
    }

    return item.value;
  };

  initializeCacheFromLocalStorage();

  return {
    setCache,
    getCache,
    removeCache,
    clearCache,
    setCacheWithExpiry,
    getCacheWithExpiry,
  };
};

export default createSessionCache;
"
swXTgbb8,heapq.c,okpalan,C,Thursday 9th of November 2023 09:26:06 AM CDT,"    #include <stdio.h>
    #include <stdlib.h>

    typedef struct {
        int priority;
        int value;
    } Item;

    typedef struct {
        Item* heap;
        int capacity;
        int size;
    } HeapQueue;

    HeapQueue* hq_create(int capacity) {
        HeapQueue* hq = (HeapQueue*)malloc(sizeof(HeapQueue));
        hq->capacity = capacity;
        hq->size = 0;
        hq->heap = (Item*)malloc(capacity * sizeof(Item));
        return hq;
    }

    void hq_destroy(HeapQueue* hq) {
        free(hq->heap);
        free(hq);
    }

    void hq_enqueue(HeapQueue* hq, int priority, int value) {
        if (hq->size == hq->capacity) {
            fprintf(stderr, ""HeapQueue is full. Cannot enqueue.\n"");
            return;
        }

        Item item = { priority, value };
        int i = hq->size++;
        int parent = (i - 1) / 2;

        while (i > 0 && hq->heap[parent].priority > item.priority) {
            hq->heap[i] = hq->heap[parent];
            i = parent;
            parent = (i - 1) / 2;
        }

        hq->heap[i] = item;
    }

    Item hq_dequeue(HeapQueue* hq) {
        if (hq->size == 0) {
            fprintf(stderr, ""HeapQueue is empty. Cannot dequeue.\n"");
            return (Item){0, 0};
        }

        Item root = hq->heap[0];
        Item last = hq->heap[--hq->size];
        int i = 0;
        int child = 1;

        while (child < hq->size) {
            if (child + 1 < hq->size && hq->heap[child + 1].priority < hq->heap[child].priority) {
                child++;
            }

            if (last.priority <= hq->heap[child].priority) {
                break;
            }

            hq->heap[i] = hq->heap[child];
            i = child;
            child = 2 * i + 1;
        }

        hq->heap[i] = last;
        return root;
    }

    int main() {
        HeapQueue* hq = hq_create(10);

        hq_enqueue(hq, 2, 20);
        hq_enqueue(hq, 4, 40);
        hq_enqueue(hq, 1, 10);
        hq_enqueue(hq, 3, 30);

        while (hq->size > 0) {
            Item item = hq_dequeue(hq);
            printf(""Priority: %d, Value: %d\n"", item.priority, item.value);
        }

        hq_destroy(hq);
        return 0;
    }

"
C3sCfC0e,what's wrong with this?,Dyrcona,Perl,Thursday 9th of November 2023 09:25:43 AM CDT,"#!/usr/bin/perl
use strict;
use warnings;
use OpenILS::Utils::Cronscript;
use OpenILS::Application::Trigger::Reactor::Circ::AutoRenew;

my $U = 'OpenILS::Application::AppUtils';

my $R = ""OpenILS::Application::Trigger::Reactor::Circ::AutoRenew"";

my %defaults = (
    nolockfile => 1,
    ""date=s"" => ""2023-11-07""
);

my $script = OpenILS::Utils::Cronscript->new(\%defaults);
my $opts = $script->MyGetOptions;
$script->bootstrap();

my $editor = $script->editor();

my $query = {
    ""select"" => {""circ"" => [""id"",""usr""]},
    ""from"" => ""circ"",
    ""where"" =>
        {
            ""due_date"" => {""="" => {
                ""transform"" => ""date"",
                ""value"" => [""date"", $opts->{date}]
            }},
            ""checkin_time"" => undef,
            ""not"" => {
                ""-exists"" => {
                    ""select"" => {""atev"" => [""id""]},
                    ""from"" => ""atev"",
                    ""where"" => {
                        ""target"" => {""+circ"" => ""id""},
                        ""event_def"" => 124
                    }
                }
            }
        },
    ""order_by"" => {""circ""=>""usr""}
};

my $circs = $editor->json_query($query);

if (@$circs && $circs->[0]) {
    foreach (@$circs) {
        print $_->[1], "": "", $_->[0], ""\n"";
    }
}

__END__
I'm trying to run the equivalent of this:

select circ.id, circ.usr
from action.circulation circ
where due_date::date = '2023-11-07'
and circ.checkin_time is null
and not exists (select id from action_trigger.event where target = circ.id and event_def = 124)
order by circ.usr;

to find circulations that failed to autorenew by the circulation due date.

When I run the SQL above, I get something like 12,586 rows on the database.

The Perl code outputs: Can't use an undefined value as an ARRAY reference at ./fix line 48."
rhGY2PcR,texture.c,okpalan,C,Thursday 9th of November 2023 09:21:37 AM CDT,"    #include <stdio.h>
    #include <stdlib.h>

    typedef struct {
        unsigned char r, g, b;
    } pixel;

    int main() {
        FILE *fp;
        char buf[16];
        int w, h, max;
        pixel *image;

        fp = fopen(""image.ppm"", ""r"");
        if (fp == NULL) {
            fprintf(stderr, ""Error: Could not open file\n"");
            exit(1);
        }

        fgets(buf, sizeof(buf), fp);
        if (buf[0] != 'P' || buf[1] != '6') {
            fprintf(stderr, ""Error: Invalid file format\n"");
            exit(1);
        }

        fscanf(fp, ""%d %d"", &w, &h);
        fscanf(fp, ""%d"", &max);

        if (max != 255) {
            fprintf(stderr, ""Error: Unsupported color depth\n"");
            exit(1);
        }

        fgetc(fp); // skip the newline character

        image = (pixel*)malloc(w * h * sizeof(pixel));
        if (image == NULL) {
            fprintf(stderr, ""Error: Out of memory\n"");
            exit(1);
        }

        fread(image, sizeof(pixel), w * h, fp);
        fclose(fp);

        // Render the image using OpenGL or other graphics library
        // ...

        free(image);

        return 0;
    }
"
FzUL3G2a,Vector.diff.js,okpalan,JavaScript,Thursday 9th of November 2023 09:19:41 AM CDT,"    export var Vector;
    (function (Vector) {
        Vector.Vec2 = function (x, y) {
            return this;
        };
        
        Object.defineProperty(Vector.Vec2, ""create"", {
            configurable: false,
            writable: false,
            value: function (x, y) {
                return new Vector.Vec2(x, y);
            }
        });
        Object.defineProperty(Vector.Vec2, ""I"", {
            configurable: false,
            writable: false,
            value: new Vector.Vec2(1, 0)
        });
        Object.defineProperty(Vector.Vec2, ""J"", {
            configurable: false,
            writable: false,
            value: new Vector.Vec2(0, 1)
        });
        Vector.Vec2.prototype.add = function (other) {
            if (typeof other == ""number"") {
                this.x += other;
                this.y += other;
            }
            else {
                this.x += other.x;
                this.y += other.y;
            }
            return this;
        };
        Vector.Vec2.prototype.subtract = function (other) {
            if (typeof other == ""number"") {
                this.x -= other;
                this.y -= other;
            }
            else {
                this.x -= other.x;
                this.y -= other.y;
            }
            return this;
        };
        Vector.Vec2.prototype.dot = function (other) {
            if (typeof other == ""number"") {
                this.x *= other;
                this.y *= other;
            }
            else {
                this.x *= other.x;
                this.y *= other.y;
            }
            return this;
        };
        Vector.Vec2.prototype.divide = function (other) {
            if (typeof other == ""number"") {
                this.x /= other;
                this.y /= other;
            }
            else {
                this.x /= other.x;
                this.y /= other.y;
            }
            return this;
        };
        Vector.Vec2.prototype.cross = function (other) {
            if (typeof other == ""number"") {
                this.x *= other;
                this.y *= other;
            }
            else {
                this.x *= other.y;
                this.y *= other.x;
            }
            return this;
        };
        Vector.Vec2.prototype.magnitude = function () {
            return Math.sqrt(this.x * this.x + this.y * this.y);
        };
        Vector.Vec2.prototype.normalize = function () {
            this.x /= this.magnitude();
            this.y /= this.magnitude();
            return this;
        };
        Vector.Vec2.prototype.distanceTo = function (other) {
            return Math.sqrt((this.y - other.y) + (this.x - other.x));
        };
        Vector.Vec2.prototype.rotateX = function (theta) {
            var angle = Math.PI / 180 * theta;
            this.y += Math.asin(angle);
            return this;
        };
        Vector.Vec2.prototype.rotateY = function (theta) {
            var angle = Math.PI / 180 * theta;
            this.x += Math.acos(angle);
            return this;
        };
        Vector.Vec2.prototype.negate = function () {
            this.x = -this.x;
            this.y = -this.y;
            return this;
        };
        Vector.Vec2.prototype.toString = function () {
            return ""<"" + this.x + "","" + this.y + "">"";
        };
        Vector.Vec3 = function (x = 0, y = 0, z = 0) {
            this.x = x;
            this.y = y;
            this.z = z;
            return this;
        };
        Object.defineProperty(Vector.Vec3, ""I"", {
            get: function () {
                return new Vector.Vec3(1, 0, 0);
            }
        });
        Object.defineProperty(Vector.Vec3, ""J"", {
            get: function () {
                return new Vector.Vec3(0, 1, 0);
            }
        });
        Object.defineProperty(Vector.Vec3, ""K"", {
            get: function () {
                return new Vector.Vec3(0, 0, 1);
            }
        });
        Vector.Vec3.prototype.add = function (v) {
            if (v instanceof Vector.Vec3) {
                this.x += v.x;
                this.y += v.y;
                this.z += v.z;
            }
            else {
                this.x += v;
                this.y += v;
                this.z += v;
            }
            return this;
        };
        Vector.Vec3.prototype.subtract = function (v) {
            if (v instanceof Vector.Vec3) {
                this.x -= v.x;
                this.y -= v.y;
                this.z -= v.z;
            }
            else {
                this.x -= v;
                this.y -= v;
                this.z -= v;
            }
            return this;
        };
        Vector.Vec3.prototype.clone = function () {
            return new Vector.Vec3(this.x, this.y, this.z);
        };
        Vector.Vec3.prototype.dot = function (v) {
            if (v instanceof Vector.Vec3) {
                this.x *= v.x;
                this.y *= v.y;
                this.z *= v.z;
            }
            else {
                this.x *= v;
                this.y *= v;
                this.z *= v;
            }
            return this;
        };
        Vector.Vec3.prototype.create = function (x, y, z) {
            return new Vector.Vec3(x, y, z);
        };
        Vector.Vec3.prototype.cross = function (v) {
            var x = this.x;
            var y = this.y;
            var z = this.z;
            this.x = y * v.z - z * v.y;
            this.y = x * v.z - z * v.x;
            this.z = x * v.y - y * v.x;
            return this;
        };
        Vector.Vec3.prototype.magnitude = function () {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        };
        Vector.Vec3.prototype.normalize = function () {
            var len = this.magnitude();
            this.x /= len;
            this.y /= len;
            this.z /= len;
            return this;
        };
        Vector.Vec3.prototype.rotateX = function (angle) {
            var y = this.y;
            var z = this.z;
            this.y = y * Math.cos(angle) - z * Math.sin(angle);
            this.z = z * Math.cos(angle) + y * Math.sin(angle);
        };
        Vector.Vec3.prototype.rotateY = function (angle) {
            var x = this.x;
            var z = this.z;
            this.x = x * Math.cos(angle) - z * Math.sin(angle);
            this.z = z * Math.cos(angle) + x * Math.sin(angle);
        };
        Vector.Vec3.prototype.rotateZ = function (angle) {
            var x = this.x;
            var y = this.y;
            this.x = x * Math.cos(angle) - y * Math.sin(angle);
            this.y = y * Math.cos(angle) + x * Math.sin(angle);
        };
        Vector.Vec3.prototype.distance = function (v) {
            if (v instanceof Vector.Vec3) {
                var dx = this.x - v.x;
                var dy = this.y - v.y;
                var dz = this.z - v.z;
                return Math.sqrt(dx * dx + dy * dy + dz * dz);
            }
            else {
                var dx = this.x - v;
                var dy = this.y - v;
                var dz = this.z - v;
                return Math.sqrt(dx * dx + dy * dy + dz * dz);
            }
        };
        Vector.Vec3.prototype.clone = function () {
            return new Vector.Vec3(this.x, this.y, this.z);
        };
        Vector.Vec3.prototype.toString = function () {
            return ""<"" + this.x + "", "" + this.y + "", "" + this.z + "">"";
        };
        Vector.Vec3.prototype.toArray = function () {
            return [this.x, this.y, this.z];
        };
        Vector.Vec3.prototype.project = function (v) {
            var dot = this.dot(v);
            var len = v.magnitude();
            return v.clone().dot(dot / len);
        };
        Vector.Vec3.prototype.reflect = function (v) {
            var dot = this.dot(v);
            var len = v.magnitude();
            return v
                .clone()
                .dot(dot / len)
                .dot(2)
                .sub(this);
        };
        `
         `;
    })(Vector || (Vector = {}));
"
1rTvCF9w,common-makefile.mk,okpalan,Make,Thursday 9th of November 2023 09:17:52 AM CDT,"#    C Standard MakeFile for Small Static Libraries and Project:To use with:1) Linux: sudo apt install make make clean make all2) windows # 	 scoop install make make clean make all

    CC=gcc
    AR=ar
    AR_FLAGS=rcs

    SRC_DIR=src
    INCLUDE_DIR=include
    CFLAGS= -Wall -Wextra -Wpedantic -I$(INCLUDE_DIR) -MMD -std=c99 -lm

    # Use wildcard to find all .c files 
    # in the SRC_DIR
    SOURCES := $(wildcard $(SRC_DIR)/*.c)

    OBJ_DIR=obj
    # Alternative syntax to generate object file
    # names from source file names
    OBJECTS := $(SOURCES:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

    DEPS_DIR=./deps

    # Include dependency files 
    # generated by -MMD flag.
    DEPSFILES := $(OBJECTS:.o=.d)

    LIB_DIR=lib
    LIB=$(LIB_DIR)/libstencil.a


    all: $(LIB)

    # Include the dependency files
    -include $(DEPSFILES)

    $(LIB): $(OBJECTS)
    	mkdir -p $(LIB_DIR)
    	$(AR) $(AR_FLAGS) $@ $(OBJECTS)

    # Pattern rule to generate object files 
    # from source files
    $(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
    	mkdir -p $(OBJ_DIR)
    	$(CC) $(CFLAGS) -c $< -o $@

    clean:
    	rm -rf $(OBJ_DIR) $(LIB_DIR)

    .PHONY: all clean



    # Move the dependency files after object files are created
    post-build:
    	mkdir -p $(DEPS_DIR)
    	mv $(DEPSFILES) $(DEPS_DIR)

    # Ensure that 'post-build' is run after the
    # library is built
    $(LIB): post-build
"
9aKkcs6L,cmds,REALshocK,PHP,Thursday 9th of November 2023 09:16:16 AM CDT,"./run.sh 
## Startet den Bot

./stop.sh
## Beendet den Bot

screen -ls 
##List all the detached (running) screens with their screen IDs

screen -r dcbotnos 
## In die Bot Console/Screen wechseln

Ctrl + A, Then press D 
## while in a screen to detach from screen without disturbing it.

pkill screen 
#Detach or terminate all screens.

screen -X -S <Screen-ID> quit 
##Beendet den angegebenen Prozess 

ls
## Zeigt alle Dateien im aktuellen Verzeichnis an
"
ng9ccGkK,country-relatioship.json,okpalan,JSON,Thursday 9th of November 2023 09:10:59 AM CDT,"  {  ""$schema"": ""http://json-schema.org/draft-07/schema"",
    ""$id"": ""http://country-relationship.com/schema/country-relationship"",
    ""title"": ""Country Relationships"",
    ""type"": ""array"",
    ""items"": {
        ""type"": ""object"",
        ""properties"": {
            ""countryA"": {     
                ""$ref"": ""#/$defs/names""
            },
            ""countryB"":{
                ""$ref"": ""#/$defs/names""
            },
            ""relationship"": {
                ""$ref"": ""#/$defs/relationship""
            }
        },
        ""required"": [""countryA"", ""countryB"", ""relationship""]
    },
    ""$defs"": {
        ""names"": {
            ""$schema"": ""http://json-schema.org/draft-07/schema"",
            ""$id"": ""#/$defs/names"",
            ""description"": ""The name of the country"",
            ""type"":""string""
        },
        ""relationship"": {
            ""$schema"": ""http://json-schema.org/draft-07/schema"",
            ""$id"": ""#/$defs/relationship"",
            ""type"": ""object"",
            ""properties"": {
                ""typeOfRel"": {
                    ""type"": ""array"",
                    ""items"": {
                        ""type"": ""string"",
                        ""enum"": [
                            ""allies"",
                            ""enemy"",
                            ""neutral"",
                            ""trade-partners""
                        ]
                    }
                },
                ""startDate"": {
                    ""$ref"": ""#/$defs/date""
                },
                ""endDate"": {
                    ""anyOf"": [
                        { ""$ref"": ""#/$defs/date"" },
                        { ""type"": ""null"" }
                    ]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Description about the relationship and its significance.""
                },
                ""source"": {
                    ""type"": ""string"",
                    ""description"": ""The source of the information (e.g. news article, government report, etc.)""
                },
                ""status"": {
                    ""type"": ""string"",
                    ""description"": ""The current status of the relationship (e.g. active, ended, on hold, etc.)""
                },
                ""impact"": {
                    ""type"": ""string"",
                    ""description"": ""The potential impact of the relationship on other countries or regions""
                },
                ""notes"": {
                    ""type"": ""string"",
                    ""description"": ""Any additional notes or comments related to the relationship""
                }
            },
            ""required"": [
                ""typeOfRel"",
                ""startDate"",
                ""description""
            ]
        },
        ""date"": {
            ""$schema"": ""http://json-schema.org/draft-07/schema"",
            ""$id"": ""#/$defs/date"",
            ""type"": ""string"",
            ""pattern"": ""^(0?[1-9]|[12][0-9]|3[01])[\/\\-](0?[1-9]|1[012])[\/\\-]\\d{4}$"",
            ""description"": ""The start and end Date of the relationship.""
        }
    }
}

/**
The actual data valid for schema
[
  {
    ""countryA"": ""USA"",
    ""countryB"": ""Russia"",
    ""relationship"": {
      ""typeOfRel"": [""enemy""],
      ""startDate"": ""01-01-2014"",
      ""endDate"": null,
      ""description"": ""Tensions have risen due to political differences and military actions."",
      ""source"": ""CNN"",
      ""status"": ""active"",
      ""impact"": ""Potential for military conflict and economic sanctions."",
      ""notes"": ""Recent cyberattacks attributed to Russian hackers have further strained relations.""
    }
  },
  {
    ""countryA"": ""Japan"",
    ""countryB"": ""South Korea"",
    ""relationship"": {
      ""typeOfRel"": [""neutral"", ""trade-partners""],
      ""startDate"": ""05-10-2015"",
      ""endDate"": null,
      ""description"": ""Despite historical tensions, economic ties between the two countries have strengthened in recent years."",
      ""source"": ""BBC"",
      ""status"": ""active"",
      ""impact"": ""Positive economic benefits for both countries."",
      ""notes"": ""However, some political disputes remain unresolved, including issues related to historical grievances.""
    }
  }
]"
uj9prArv,MultiplicationBetweenTwoLinkedLists,yarin0600,C++,Thursday 9th of November 2023 08:56:01 AM CDT,"Node *multipleTwoNumbersRepresentedByLinkedList(Node *headOne, Node *headTwo)
{
   Node newDummyHead(INT_MAX);
   Node *tailOfNewList = &newDummyHead;

   // all edge cases
   if (!headOne || !headTwo)
      return nullptr;
   if (!(headOne->next) && headOne->val == 0)
      return new Node(0);
   if (!(headTwo->next) && headTwo->val == 0)
      return new Node(0);

   // First of all: reverse both linkedlists
   headOne = reverseLinkedList(headOne);
   headTwo = reverseLinkedList(headTwo);

   Node *travelerOne = headOne;
   Node *travelerTwo = headTwo;

   int currentValueOfMultiplication = 0;
   int currentCarryOfMultiplication = 0;
   int currentValueOfAddition = 0;
   int currentCarryOfAddition = 0;

   int level = 1; // first level is '1'

   while (travelerTwo)
   {
      // reset before trying new multiplication
      tailOfNewList = &newDummyHead;
      travelerOne = headOne;
      currentCarryOfMultiplication = 0;
      currentCarryOfAddition = 0;

      for (int i = 0; i + 1 < level; ++i) // we are advancing level - 1 times here to consider the level everytime we start new level:
      {
         tailOfNewList->next = tailOfNewList->next ? tailOfNewList->next : new Node(0);
         tailOfNewList = tailOfNewList->next;
      }

      while (travelerOne)
      {
         tailOfNewList->next = tailOfNewList->next ? tailOfNewList->next : new Node(0);
         tailOfNewList = tailOfNewList->next;

         currentValueOfMultiplication = travelerOne->val * travelerTwo->val + currentCarryOfMultiplication;

         currentCarryOfMultiplication = currentValueOfMultiplication / 10;
         currentValueOfMultiplication %= 10;

         tailOfNewList->val = tailOfNewList->val + currentValueOfMultiplication + currentCarryOfAddition;
         currentCarryOfAddition = tailOfNewList->val / 10;
         tailOfNewList->val %= 10;

         travelerOne = travelerOne->next;
      }

      travelerTwo = travelerTwo->next;
      ++level;
   }

   if (currentCarryOfAddition != 0)
   {
      tailOfNewList->next = new Node(currentCarryOfAddition);
   }

   return reverseLinkedList(newDummyHead.next);
}

Node *reverseLinkedList(Node *head)
{
   Node *prev, *curr, *next;
   prev = nullptr;
   curr = head;
   while (curr)
   {
      next = curr->next;
      curr->next = prev;
      prev = curr;
      curr = next;
   }
   return prev;
}"
ALhN2Qnt,2023.11.09 /etc/ssh/sshd.conf,iconoclasthero,Bash,Thursday 9th of November 2023 08:47:18 AM CDT,"$ cat ssh/sshd_config

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

Include /etc/ssh/sshd_config.d/*.conf

#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
#PermitRootLogin prohibit-password
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
#AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication no
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
KbdInteractiveAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the KbdInteractiveAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via KbdInteractiveAuthentication may bypass
# the setting of ""PermitRootLogin without-password"".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and KbdInteractiveAuthentication to 'no'.
##UsePAM yes
#2023.09.04, commented above out
#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
X11DisplayOffset 10
X11UseLocalhost no
#2023.09.04 changed from yes to no
#PermitTTY yes
PrintMotd no
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem	sftp	/usr/lib/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User user
#	X11Forwarding yes
#	X11DisplayOffset 10
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
"
fKSs2T8x,02. Shopping List,Spocoman,C#,Thursday 9th of November 2023 08:44:46 AM CDT,"using System;

namespace ShoppingList
{
    class Program
    {
        static void Main(string[] args)
        {
            var list = Console.ReadLine().Split('!').ToList();

            string input;

            while ((input = Console.ReadLine()) != ""Go Shopping!"")
            {
                var tokens = input.Split(' ');
                string command = tokens[0];
                string product = tokens[1];

                if (command == ""Urgent"" && !list.Contains(product))
                {
                    list.Insert(0, product);
                }
                else if (command == ""Unnecessary"" && list.Contains(product))
                {
                    list.Remove(product);
                }
                else if (command == ""Correct"" && list.Contains(product))
                {
                    string newProduct = tokens[2];
                    list[list.IndexOf(product)] = newProduct;
                }
                else if (command == ""Rearrange"" && list.Contains(product))
                {
                    list.Remove(product);
                    list.Add(product);
                }
            }
            
            Console.WriteLine(String.Join("", "", list));
        }
    }
}"
3hVJDKkY,ssh not working,iconoclasthero,Bash,Thursday 9th of November 2023 08:40:32 AM CDT,"est 9.34 am  pwd: ~/.ssh  
!9120 $ ssh-keygen 
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/user/.ssh/id_rsa
Your public key has been saved in /home/user/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:Of/q+8gs9OdY5zMZtQ2CQbANQm5K9vh1Lfr3jXuHEjE user@client
The key's randomart image is:
+---[RSA 3072]----+
|     .o oo.      |
|     . . +.      |
|    o o . .o     |
|   o =   ...E . .|
|    o . S o .+ oo|
|     . ..= .. ...|
|      ..... ...+ |
|        .+.=+o=oo|
|         oXB+o==o|
+----[SHA256]-----+
est 9.34 am  pwd: ~/.ssh  
!9121 $ ll
.rw------- 8,168 user 11 Mar 16:10 known_hosts.old~
.rw------- 3,516 user 11 Mar 16:44 authorized_keys
.rw-rw-r-- 1,013 user  6 Oct 12:48 config
drwxrwxr-x     - user 11 Oct 11:04 certbot
.rw------- 8,356 user 27 Oct 21:07 known_hosts.old
.rw------- 8,356 user 29 Oct 21:29 known_hosts
drwxrwxr-x     - user  9 Nov 09:34 old
.rw------- 2,602 user  9 Nov 09:34 id_rsa
.rw-r--r--   569 user  9 Nov 09:34 id_rsa.pub
est 9.34 am  pwd: ~/.ssh  
!9122 $ ssh-copy-id -p #### user@ssh.server.com
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
user@ssh.server.com's password: 

Number of key(s) added: 1

Now try logging into the machine, with:   ""ssh -p '####' 'user@ssh.server.com'""
and check to make sure that only the key(s) you wanted were added.

est 9.35 am  pwd: ~/.ssh  
!9123 $ ssh -p #### user@ssh.server.com
user@ssh.server.com's password: 
Last login: Thu Nov  9 09:28:49 2023 from 69.242.103.243
est 9.35 am  pwd: ~  
!19995 user@server$ 

"
ZwsvkVxH,Minecraft Behind Reverse Proxy on Docker (Untested),primall,YAML,Thursday 9th of November 2023 08:39:48 AM CDT,"version: ""3""

services:
  infrared:
    build: "".""
    container_name: ""infrared""
    restart: ""unless-stopped""
    stdin_open: true
    tty: true
    ports:
      - ""25565:25565""
	  - ""19132:19132""
    volumes:
      - ""/usr/local/infrared/configs:/configs""
    expose:
      - ""25565""
    environment:
      INFRARED_CONFIG_PATH: ""/configs""

  mc:
    image: itzg/minecraft-server
    restart: always
    tty: true
    stdin_open: true
    deploy:
      resources:
        limits:
          memory: 8000M
        reservations:
          memory: 2000M
    expose:
      - ""25565""
      - ""19132""
	environment:
      TZ: ""Asia/Jakarta""
      MEMORY: 8G
      EULA: ""TRUE""
      TYPE: ""PAPER""
      ONLINE_MODE: ""FALSE""
      DIFFICULTY: ""EASY""
      SERVER_NAME: ""EXAMPLE.COM""
      #PLUGINS: |
      #  https://mediafilez.forgecdn.net/files/4675/318/worldguard-bukkit-7.0.9-dist.jar
      #  https://download.geysermc.org/v2/projects/geyser/versions/2.1.1/builds/252/downloads/spigot
      #  https://www.spigotmc.org/resources/farm-protection-for-mc-1-16-1-20.85488/download?version=365362
      #  https://download.geysermc.org/v2/projects/floodgate/versions/2.2.2/builds/59/downloads/spigot
      #  https://github.com/DiscordSRV/DiscordSRV/releases/download/v1.26.2/DiscordSRV-Build-1.26.2.jar
      #  https://ci.citizensnpcs.co/job/citizens2/3179/artifact/dist/target/Citizens-2.0.32-b3179.jar
      #  https://github.com/2008Choco/VeinMiner/releases/download/v2.1.0/VeinMiner-Bukkit-2.1.0.jar
      #  https://github.com/dmulloy2/ProtocolLib/releases/download/5.1.0/ProtocolLib.jar
      #  https://github.com/Gecolay/GSit/releases/download/1.4.10/GSit-1.4.10.jar
      #  https://mediafilez.forgecdn.net/files/4586/220/worldedit-bukkit-7.2.15.jar
        
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - /etc/minecraft:/data"
k5sdYDYd,express-quota,okpalan,JavaScript,Thursday 9th of November 2023 08:26:03 AM CDT,"var express = require('express');
var app = express();
const api= require('./api');

var apiKey = 'myapikey';
var apiSecret = 'myapisecret';

app.use(function (req, res, next) {
  // check for API key in header
  if (!req.headers.hasOwnProperty('x-api-key')) {
    return res.status(401).json({
      error: 'No API key provided'
    });
  }

  // verify API key
  if (req.headers['x-api-key'] !== apiKey) {
    return res.status(401).json({
      error: 'Invalid API key'
    });
  }

  // check for API secret in header
  if (!req.headers.hasOwnProperty('x-api-secret')) {
    return res.status(401).json({
      error: 'No API secret provided'
    });
  }

  // verify API secret
  if (req.headers['x-api-secret'] !== apiSecret) {
    return res.status(401).json({
      error: 'Invalid API secret'
    });
  }

  next();
});

// rate limit middleware
app.use(function (req, res, next) {
  // check for rate limit header
  if (!req.headers.hasOwnProperty('x-rate-limit')) {
    return res.status(429).json({
      error: 'No rate limit provided'
    });
  }

  // verify rate limit
  if (req.headers['x-rate-limit'] !== '60') {
    return res.status(429).json({
      error: 'Invalid rate limit'
    });
  }

  // check for rate limit remaining header
  if (!req.headers.hasOwnProperty('x-rate-limit-remaining')) {
    return res.status(429).json({
      error: 'No rate limit remaining provided'
    });
  }

  // verify rate limit remaining
  if (req.headers['x-rate-limit-remaining'] === '0') {
    return res.status(429).json({
      error: 'Rate limit exceeded'
    });
  }

  next();
});

// your API routes go here
app.use('/api', api);

// usage:
// download:
// https://github.com/okpalan/express-quota
// curl -X POST -H ""x-api-key: myapikey"" -H ""x-api-secret: myapisecret"" -H ""x-rate-limit: 60"" -H ""x-rate-limit-remaining: 59"" -H ""Content-Type: application/json"" -d '{""name"": ""John""}' http://localhost:3000/api/users


console.log(""Node server running on port 3000"");
app.listen(3000);"
jebUxiq3,ScriptCherif,yassineyassine2005,Lua,Thursday 9th of November 2023 08:19:12 AM CDT,"--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;local v17;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;local v48;local v49;local v50;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;local v66;local v67;local v68;local v69;local v70;local v71;local v72;local v73;local v74;local v75;local v76;local v77;local v78;local v79;local v80;local v81;local v82;local v83;local v84;local v85;local v86;local v87;local v88;local v89;local v90;local v91;local v92;local v93;local v94;local v95;local v96;local v97;local v98;local v99;local v100;local v101;local v102;local v103;local v104;local v105;local v106;local v107;local v108;local v109;local v110;local v111;local v112;local v113;local v114;local v115;local v116;local v117;local v118;local v119;local v120;local v121;local v122;local v123;local v124;local v125;local v126;local v127;local v128;local v129;local v130;local v131;local v132;local v133;local v134;local v135;local v136;local v137;local v138;local v139;local v140;local v141;local v142;local v143;local v144;local v145;local v146;local v147;local v148;local v149;local v150;local v151;local v152;local v153;local v154;local v155;local v156;local v157;local v158;local v159;local v160;local v161;local v162;local v163;local v164;local v165;local v166;local v167;local v168;local v169;local v170;local v171;local v172;local v173;local v174;local v175;local v176;local v177;local v178;local v179;local v180;local v181;local v182;local v183;local v184;local v185;local v186;local v187;local v188;local v189;local v190;local v191;local v192;local v193;local v194;local v195;local v196;local v197;local v198;local v199;local v200;local v201;while true do if (v0==12) then v109=nil;v110=nil;v111=nil;v112=nil;v113=nil;v114=nil;v115=nil;v116=nil;v117=nil;v0=13;end if (v0==9) then v82=nil;v83=nil;v84=nil;v85=nil;v86=nil;v87=nil;v88=nil;v89=nil;v90=nil;v0=10;end if (v0==2) then v19=nil;v20=nil;v21=nil;v22=nil;v23=nil;v24=nil;v25=nil;v26=nil;v27=nil;v0=3;end if (16==v0) then v145=nil;v146=nil;v147=nil;v148=nil;v149=nil;v150=nil;v151=nil;v152=nil;v153=nil;v0=17;end if (v0==13) then v118=nil;v119=nil;v120=nil;v121=nil;v122=nil;v123=nil;v124=nil;v125=nil;v126=nil;v0=14;end if (v0==10) then v91=nil;v92=nil;v93=nil;v94=nil;v95=nil;v96=nil;v97=nil;v98=nil;v99=nil;v0=11;end if (v0==5) then v46=nil;v47=nil;v48=nil;v49=nil;v50=nil;v51=nil;v52=nil;v53=nil;v54=nil;v0=6;end if (v0==11) then v100=nil;v101=nil;v102=nil;v103=nil;v104=nil;v105=nil;v106=nil;v107=nil;v108=nil;v0=12;end if (v0==4) then v37=nil;v38=nil;v39=nil;v40=nil;v41=nil;v42=nil;v43=nil;v44=nil;v45=nil;v0=5;end if (20==v0) then v181=nil;v182=nil;v183=nil;v184=nil;v185=nil;v186=nil;v187=nil;v188=nil;v189=nil;v0=21;end if (v0==8) then v73=nil;v74=nil;v75=nil;v76=nil;v77=nil;v78=nil;v79=nil;v80=nil;v81=nil;v0=9;end if (v0==7) then v64=nil;v65=nil;v66=nil;v67=nil;v68=nil;v69=nil;v70=nil;v71=nil;v72=nil;v0=8;end if (v0==15) then v136=nil;v137=nil;v138=nil;v139=nil;v140=nil;v141=nil;v142=nil;v143=nil;v144=nil;v0=16;end if (v0==6) then v55=nil;v56=nil;v57=nil;v58=nil;v59=nil;v60=nil;v61=nil;v62=nil;v63=nil;v0=7;end if (v0==21) then v190=nil;v191=nil;v192=nil;v193=nil;v194=nil;v195=nil;v196=nil;v197=nil;v198=nil;v0=22;end if (v0==0) then v1=0;v2=nil;v3=nil;v4=nil;v5=nil;v6=nil;v7=nil;v8=nil;v9=nil;v0=1;end if (v0==18) then v163=nil;v164=nil;v165=nil;v166=nil;v167=nil;v168=nil;v169=nil;v170=nil;v171=nil;v0=19;end if (v0==22) then v199=nil;v200=nil;v201=nil;while true do if (v1==11) then v112=Instance.new(""TextButton"");v113=Instance.new(""UICorner"");v114=Instance.new(""TextButton"");v115=Instance.new(""UICorner"");v116=Instance.new(""TextButton"");v117=Instance.new(""UICorner"");v118=Instance.new(""TextButton"");v119=Instance.new(""UICorner"");v120=Instance.new(""TextButton"");v121=Instance.new(""UICorner"");v1=12;end if (48==v1) then v52.Parent=v44;v52.BackgroundColor3=Color3.fromRGB(255,255,255);v52.BackgroundTransparency=1;v52.BorderColor3=Color3.fromRGB(0,0,0);v52.BorderSizePixel=0;v52.Size=UDim2.new(1,0,1,0);v52.Font=Enum.Font.SourceSans;v52.Text="""";v52.TextColor3=Color3.fromRGB(0,0,0);v52.TextSize=14;v1=49;end if (v1==82) then v102.TextStrokeTransparency=0.7;v102.TextWrapped=true;v103.Parent=v101;v103.BackgroundColor3=Color3.fromRGB(31,181,226);v103.BorderColor3=Color3.fromRGB(0,0,0);v103.BorderSizePixel=0;v103.Position=UDim2.new(0.810597599,0,0,0);v103.Size=UDim2.new(0.161979735,0,0.99999994,0);v103.Font=Enum.Font.SourceSans;v103.Text=""Kill"";v1=83;end if (v1==62) then v73.BorderSizePixel=0;v73.Position=UDim2.new(0.81284529,0,0,0);v73.Size=UDim2.new(0.187154785,0,1,0);v74.Name=""check"";v74.Parent=v73;v74.BackgroundColor3=Color3.fromRGB(73,140,14);v74.BorderColor3=Color3.fromRGB(0,0,0);v74.BorderSizePixel=0;v74.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v74.Visible=false;v1=63;end if (v1==2) then v22=Instance.new(""TextBox"");v23=Instance.new(""UICorner"");v24=Instance.new(""TextButton"");v25=Instance.new(""UICorner"");v26=Instance.new(""Frame"");v27=Instance.new(""UICorner"");v28=Instance.new(""Frame"");v29=Instance.new(""Frame"");v30=Instance.new(""UICorner"");v31=Instance.new(""ImageLabel"");v1=3;end if (v1==73) then local v234=0;while true do if (v234==1) then v89.BackgroundTransparency=0.45;v89.BorderColor3=Color3.fromRGB(0,0,0);v89.BorderSizePixel=0;v89.Position=UDim2.new(0.289443165,0,0.0783553421,0);v234=2;end if (v234==2) then v89.Size=UDim2.new(0.419298649,0,0.153045446,0);v90.CornerRadius=UDim.new(0.100000001,0);v1=74;break;end if (v234==0) then v88.Parent=v87;v89.Name=""checkBox"";v89.Parent=v82;v89.BackgroundColor3=Color3.fromRGB(0,0,0);v234=1;end end end if (v1==63) then local v235=0;while true do if (v235==1) then v76.BackgroundColor3=Color3.fromRGB(255,255,255);v76.BackgroundTransparency=1;v76.BorderColor3=Color3.fromRGB(0,0,0);v235=2;end if (v235==0) then v75.CornerRadius=UDim.new(0.100000001,0);v75.Parent=v74;v76.Parent=v74;v235=1;end if (v235==2) then v76.BorderSizePixel=0;v76.Size=UDim2.new(1,0,1,0);v76.Image=""rbxassetid://15069805111"";v235=3;end if (v235==3) then v77.CornerRadius=UDim.new(0.100000001,0);v1=64;break;end end end if (52==v1) then v58.BorderSizePixel=0;v58.Size=UDim2.new(1,0,1,0);v58.Image=""rbxassetid://15069805111"";v59.CornerRadius=UDim.new(0.100000001,0);v59.Parent=v55;v60.Parent=v53;v60.BackgroundColor3=Color3.fromRGB(255,255,255);v60.BackgroundTransparency=1;v60.BorderColor3=Color3.fromRGB(0,0,0);v60.BorderSizePixel=0;v1=53;end if (v1==14) then local v246=0;while true do if (v246==2) then v150=Instance.new(""TextButton"");v151=Instance.new(""UICorner"");v1=15;break;end if (v246==1) then v146=Instance.new(""TextBox"");v147=Instance.new(""UICorner"");v148=Instance.new(""TextButton"");v149=Instance.new(""UICorner"");v246=2;end if (v246==0) then v142=Instance.new(""Frame"");v143=Instance.new(""UICorner"");v144=Instance.new(""Frame"");v145=Instance.new(""TextLabel"");v246=1;end end end if (v1==79) then v98.Parent=v82;v98.Active=true;v98.BackgroundColor3=Color3.fromRGB(34,34,34);v98.BorderColor3=Color3.fromRGB(0,0,0);v98.BorderSizePixel=0;v98.Position=UDim2.new(0,0,0.821344554,0);v98.Size=UDim2.new(1,0,1.02464044,0);v99.Parent=v98;v99.SortOrder=Enum.SortOrder.LayoutOrder;v99.Padding=UDim.new(0.00499999989,0);v1=80;end if (v1==42) then local v258=0;while true do if (v258==1) then v43.BackgroundColor3=Color3.fromRGB(255,255,255);v43.BackgroundTransparency=1;v43.BorderColor3=Color3.fromRGB(0,0,0);v258=2;end if (v258==2) then v43.BorderSizePixel=0;v43.Size=UDim2.new(1,0,1,0);v43.Font=Enum.Font.SourceSans;v258=3;end if (v258==3) then v43.Text="""";v1=43;break;end if (v258==0) then v42.TextSize=14;v42.TextWrapped=true;v43.Parent=v35;v258=1;end end end if (59==v1) then v69.Font=Enum.Font.GothamBold;v69.Text=""Auto Punch"";v69.TextColor3=Color3.fromRGB(255,255,255);v69.TextScaled=true;v69.TextSize=14;v69.TextWrapped=true;v70.Parent=v62;v70.BackgroundColor3=Color3.fromRGB(255,255,255);v70.BackgroundTransparency=1;v70.BorderColor3=Color3.fromRGB(0,0,0);v1=60;end if (v1==31) then v24.TextColor3=Color3.fromRGB(255,255,255);v24.TextScaled=true;v24.TextSize=14;v24.TextWrapped=true;v25.CornerRadius=UDim.new(0.200000003,0);v25.Parent=v24;v26.Name=""checkBox"";v26.Parent=v11;v26.BackgroundColor3=Color3.fromRGB(0,0,0);v26.BackgroundTransparency=0.45;v1=32;end if (v1==94) then v116.TextWrapped=true;v117.CornerRadius=UDim.new(0.300000012,0);v117.Parent=v116;v118.Parent=v109;v118.BackgroundColor3=Color3.fromRGB(1,234,255);v118.BackgroundTransparency=0.4;v118.BorderColor3=Color3.fromRGB(0,0,0);v118.BorderSizePixel=0;v118.Position=UDim2.new(0.160999998,0,0.665000021,0);v118.Size=UDim2.new(0.676803946,0,0.130871415,0);v1=95;end if (v1==119) then local v290=0;while true do if (v290==1) then v148.Text=""X"";v148.TextColor3=Color3.fromRGB(255,255,255);v148.TextScaled=true;v148.TextSize=14;v290=2;end if (0==v290) then v148.BorderSizePixel=0;v148.Position=UDim2.new(0.907948434,0, -0.0188679229,0);v148.Size=UDim2.new(0.126610279,0,0.125786245,0);v148.Font=Enum.Font.SourceSans;v290=1;end if (v290==2) then v148.TextStrokeColor3=Color3.fromRGB(255,255,255);v148.TextStrokeTransparency=0;v1=120;break;end end end if (v1==123) then local v291=0;while true do if (v291==2) then function v154()local v1448=0;local v1449;while true do if (v1448==1) then v1449.Parent.MouseLeave:Connect(function()v1449.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);break;end if (v1448==0) then v1449=Instance.new(""LocalScript"",v5);v1449.Parent.MouseEnter:Connect(function()v1449.Parent.BackgroundColor3=Color3.fromHSV(0,0.764706,0.6);end);v1448=1;end end end coroutine.wrap(v154)();v1=124;break;end if (v291==0) then v152.TextScaled=true;v152.TextSize=14;v152.TextStrokeTransparency=0.7;v152.TextWrapped=true;v291=1;end if (v291==1) then v153=nil;function v153()local v1450=0;local v1451;while true do if (v1450==0) then v1451=Instance.new(""LocalScript"",v5);v1451.Parent.MouseButton1Click:Connect(function()v1451.Parent.Parent.Parent:Destroy();end);break;end end end coroutine.wrap(v153)();v154=nil;v291=2;end end end if (v1==83) then v103.TextColor3=Color3.fromRGB(255,255,255);v103.TextScaled=true;v103.TextSize=14;v103.TextStrokeTransparency=0.7;v103.TextWrapped=true;v104.CornerRadius=UDim.new(1,0);v104.Parent=v103;v105.Name=""TP"";v105.Parent=v101;v105.BackgroundColor3=Color3.fromRGB(65,226,164);v1=84;end if (15==v1) then local v302=0;while true do if (v302==2) then v3.BackgroundColor3=Color3.fromRGB(54,54,54);v3.BorderColor3=Color3.fromRGB(0,0,0);v3.BorderSizePixel=0;v302=3;end if (0==v302) then v152=Instance.new(""TextLabel"");v2.Name=""CherifV2"";v2.Parent=game.Players.LocalPlayer:WaitForChild(""PlayerGui"");v302=1;end if (v302==1) then v2.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;v3.Parent=v2;v3.Active=true;v302=2;end if (v302==3) then v3.Position=UDim2.new(0.170632824,0,0.198412716,0);v1=16;break;end end end if (v1==87) then v108.TextColor3=Color3.fromRGB(12,255,235);v108.TextScaled=true;v108.TextSize=14;v108.TextStrokeTransparency=0.7;v108.TextWrapped=true;v109.Name=""Teleports"";v109.Parent=v9;v109.BackgroundColor3=Color3.fromRGB(255,255,255);v109.BackgroundTransparency=1;v109.BorderColor3=Color3.fromRGB(0,0,0);v1=88;end if (v1==65) then v78.TextColor3=Color3.fromRGB(255,255,255);v78.TextScaled=true;v78.TextSize=14;v78.TextWrapped=true;v79.Parent=v71;v79.BackgroundColor3=Color3.fromRGB(255,255,255);v79.BackgroundTransparency=1;v79.BorderColor3=Color3.fromRGB(0,0,0);v79.BorderSizePixel=0;v79.Size=UDim2.new(1,0,1,0);v1=66;end if (v1==68) then local v323=0;while true do if (v323==1) then v82.BorderSizePixel=0;v82.Position=UDim2.new(0,0,6.22622e-8,0);v82.Size=UDim2.new(1,0,0.99359411,0);v82.Visible=false;v323=2;end if (v323==2) then v83.Parent=v82;v83.BackgroundColor3=Color3.fromRGB(0,0,0);v1=69;break;end if (v323==0) then v82.Parent=v9;v82.BackgroundColor3=Color3.fromRGB(255,255,255);v82.BackgroundTransparency=1;v82.BorderColor3=Color3.fromRGB(0,0,0);v323=1;end end end if (v1==134) then function v188()local v1048=0;local v1049;while true do if (v1048==0) then v1049=Instance.new(""LocalScript"",v123);while wait(0.1) do if (v1049.Parent.Value.Value==true) then local v1537=0;local v1538;local v1539;while true do if (v1537==1) then while true do if (v1538==2) then pcall(function()local v1705=0;local v1706;while true do if (0==v1705) then v1706=0;while true do if (v1706==0) then local v1788=0;while true do if (v1788==1) then v1706=1;break;end if (v1788==0) then firetouchinterest(game:GetService(""Workspace"").machinesFolder[""Muscle King Mountain""].Rock,game.Players.LocalPlayer.Character.LeftHand,0);wait();v1788=1;end end end if (v1706==1) then firetouchinterest(game:GetService(""Workspace"").machinesFolder[""Muscle King Mountain""].Rock,game.Players.LocalPlayer.Character.LeftHand,1);break;end end break;end end end);break;end if (v1538==0) then local v1678=0;while true do if (0==v1678) then v1539={[1]=""punch"",[2]=""leftHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1539));v1678=1;end if (v1678==1) then v1538=1;break;end end end if (v1538==1) then local v1679=0;local v1680;while true do if (v1679==0) then v1680=0;while true do if (v1680==0) then v1539={[1]=""punch"",[2]=""rightHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1539));v1680=1;end if (v1680==1) then v1538=2;break;end end break;end end end end break;end if (v1537==0) then v1538=0;v1539=nil;v1537=1;end end else end end break;end end end coroutine.wrap(v188)();v189=nil;function v189()local v1050=0;local v1051;local v1052;while true do if (1==v1050) then local v1452=0;while true do if (v1452==1) then v1050=2;break;end if (v1452==0) then v1052.Value=false;v1052.Parent=v1051.Parent;v1452=1;end end end if (2==v1050) then v1051.Parent.MouseButton1Click:Connect(function()if (v1051.Parent.Value.Value==true) then local v1543=0;local v1544;while true do if (v1543==0) then v1544=0;while true do if (v1544==0) then v1051.Parent.Value.Value=false;v1051.Parent.Text=""Legends Rock (Off)"";break;end end break;end end else local v1545=0;local v1546;while true do if (v1545==0) then v1546=0;while true do if (v1546==0) then v1051.Parent.Text=""Legends Rock (On)"";v1051.Parent.Value.Value=true;break;end end break;end end end end);break;end if (v1050==0) then v1051=Instance.new(""LocalScript"",v125);v1052=Instance.new(""BoolValue"");v1050=1;end end end coroutine.wrap(v189)();v190=nil;function v190()local v1053=0;local v1054;while true do if (v1053==0) then v1054=Instance.new(""LocalScript"",v125);while wait(0.1) do if (v1054.Parent.Value.Value==true) then local v1547=0;local v1548;while true do if (1==v1547) then v1548={[1]=""punch"",[2]=""rightHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1548));v1547=2;end if (v1547==2) then pcall(function()local v1643=0;while true do if (v1643==0) then firetouchinterest(game:GetService(""Workspace"").machinesFolder[""Rock Of Legends""].Rock,game.Players.LocalPlayer.Character.LeftHand,0);wait();v1643=1;end if (v1643==1) then firetouchinterest(game:GetService(""Workspace"").machinesFolder[""Rock Of Legends""].Rock,game.Players.LocalPlayer.Character.LeftHand,1);break;end end end);break;end if (v1547==0) then v1548={[1]=""punch"",[2]=""leftHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1548));v1547=1;end end else end end break;end end end coroutine.wrap(v190)();v191=nil;function v191()local v1055=0;local v1056;while true do if (v1055==1) then v1056.Parent.MouseLeave:Connect(function()v1056.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);break;end if (v1055==0) then local v1453=0;while true do if (v1453==1) then v1055=1;break;end if (v1453==0) then v1056=Instance.new(""LocalScript"",v127);v1056.Parent.MouseEnter:Connect(function()v1056.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1453=1;end end end end end v1=135;end if (v1==36) then v33.TextColor3=Color3.fromRGB(255,255,255);v33.TextScaled=true;v33.TextSize=14;v33.TextWrapped=true;v34.Parent=v26;v34.BackgroundColor3=Color3.fromRGB(255,255,255);v34.BackgroundTransparency=1;v34.BorderColor3=Color3.fromRGB(0,0,0);v34.BorderSizePixel=0;v34.Size=UDim2.new(1,0,1,0);v1=37;end if (v1==98) then v122.Visible=false;v123.Parent=v122;v123.BackgroundColor3=Color3.fromRGB(0,0,0);v123.BackgroundTransparency=0.4;v123.BorderColor3=Color3.fromRGB(0,0,0);v123.BorderSizePixel=0;v123.Position=UDim2.new(0.0668876842,0,0.0764447898,0);v123.Size=UDim2.new(0.40427047,0,0.139032245,0);v123.Font=Enum.Font.SourceSans;v123.Text=""Muscle King Rock (Off)"";v1=99;end if (v1==108) then v135.Parent=v3;v135.BackgroundColor3=Color3.fromRGB(0,0,0);v135.BackgroundTransparency=0.6;v135.BorderColor3=Color3.fromRGB(0,0,0);v135.BorderSizePixel=0;v135.Position=UDim2.new(0.166990295,0, -1.7339532e-7,0);v135.Size=UDim2.new(0.149514556,0,0.98459512,0);v135.Font=Enum.Font.GothamBold;v135.Text=""KillAura"";v135.TextColor3=Color3.fromRGB(255,255,255);v1=109;end if (v1==135) then coroutine.wrap(v191)();v192=nil;function v192()local v1057=0;local v1058;local v1059;local v1060;local v1061;local v1062;local v1063;while true do if (3==v1057) then while true do if (v1058==0) then local v1549=0;while true do if (v1549==0) then v1059=0;v1060=nil;v1549=1;end if (v1549==1) then v1058=1;break;end end end if (v1058==2) then v1063=nil;while true do if (v1059==0) then local v1609=0;while true do if (1==v1609) then v1059=1;break;end if (v1609==0) then v1060=Instance.new(""LocalScript"",v127);v1061=game:GetService(""Players"").LocalPlayer;v1609=1;end end end if (v1059==2) then local v1610=0;local v1611;while true do if (v1610==0) then v1611=0;while true do if (1==v1611) then v1059=3;break;end if (0==v1611) then v1062.Parent=v1060.Parent.Parent;v1063=true;v1611=1;end end break;end end end if (v1059==1) then local v1612=0;while true do if (0==v1612) then local v1686=0;while true do if (1==v1686) then v1612=1;break;end if (v1686==0) then v1062=Instance.new(""BoolValue"");v1062.Value=false;v1686=1;end end end if (v1612==1) then v1059=2;break;end end end if (v1059==3) then v1060.Parent.MouseButton1Click:Connect(function()local v1644=0;while true do if (v1644==1) then v1063=false;break;end if (0==v1644) then v1060.Parent.Parent.Value.Value=true;while wait(0.1) do if ((v1060.Parent.Parent.Value.Value==true) and (v1063==true)) then for v1767,v1768 in pairs(game:GetService(""Players""):GetPlayers()) do if (v1768 and v1768.Character and (v1768~=v1061) and v1768.Character:FindFirstChild(""Head"")) then local v1789=0;local v1790;local v1791;local v1792;while true do if (v1789==0) then v1790=0;v1791=nil;v1789=1;end if (v1789==1) then v1792=nil;while true do if (v1790==0) then local v1813=0;while true do if (v1813==0) then v1791=v1768.Character:FindFirstChild(""Head"");v1792={[1]=""punch"",[2]=""leftHand""};v1813=1;end if (v1813==1) then v1790=1;break;end end end if (v1790==2) then game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1792));pcall(function()firetouchinterest(v1791,game.Players.LocalPlayer.Character.LeftHand,0);wait();firetouchinterest(v1791,game.Players.LocalPlayer.Character.LeftHand,1);end);break;end if (v1790==1) then local v1814=0;local v1815;while true do if (v1814==0) then v1815=0;while true do if (0==v1815) then game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1792));v1792={[1]=""punch"",[2]=""rightHand""};v1815=1;end if (1==v1815) then v1790=2;break;end end break;end end end end break;end end end end else end end v1644=1;end end end);break;end end break;end if (1==v1058) then local v1550=0;while true do if (v1550==1) then v1058=2;break;end if (v1550==0) then v1061=nil;v1062=nil;v1550=1;end end end end break;end if (v1057==2) then v1062=nil;v1063=nil;v1057=3;end if (v1057==0) then v1058=0;v1059=nil;v1057=1;end if (v1057==1) then v1060=nil;v1061=nil;v1057=2;end end end coroutine.wrap(v192)();v193=nil;function v193()local v1064=0;local v1065;local v1066;while true do if (v1064==0) then v1065=0;v1066=nil;v1064=1;end if (1==v1064) then while true do if (v1065==1) then v1066.Parent.MouseLeave:Connect(function()v1066.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);break;end if (0==v1065) then v1066=Instance.new(""LocalScript"",v129);v1066.Parent.MouseEnter:Connect(function()v1066.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1065=1;end end break;end end end coroutine.wrap(v193)();v194=nil;function v194()local v1067=0;local v1068;local v1069;while true do if (v1067==1) then while true do if (v1068==0) then v1069=Instance.new(""LocalScript"",v129);v1069.Parent.MouseButton1Click:Connect(function()v1069.Parent.Parent.Value.Value=false;end);break;end end break;end if (v1067==0) then v1068=0;v1069=nil;v1067=1;end end end coroutine.wrap(v194)();v1=136;end if (v1==99) then v123.TextColor3=Color3.fromRGB(255,255,255);v123.TextScaled=true;v123.TextSize=14;v123.TextWrapped=true;v124.CornerRadius=UDim.new(0.300000012,0);v124.Parent=v123;v125.Parent=v122;v125.BackgroundColor3=Color3.fromRGB(0,0,0);v125.BackgroundTransparency=0.4;v125.BorderColor3=Color3.fromRGB(0,0,0);v1=100;end if (v1==41) then local v366=0;while true do if (0==v366) then v42.BackgroundColor3=Color3.fromRGB(255,255,255);v42.BackgroundTransparency=1;v42.BorderColor3=Color3.fromRGB(0,0,0);v42.BorderSizePixel=0;v366=1;end if (v366==1) then v42.Position=UDim2.new( -1.4256362e-7,0,0,0);v42.Size=UDim2.new(0.81284517,0,1,0);v42.Font=Enum.Font.GothamBold;v42.Text=""Disable Gui"";v366=2;end if (v366==2) then v42.TextColor3=Color3.fromRGB(255,255,255);v42.TextScaled=true;v1=42;break;end end end if (v1==125) then function v158()local v1070=0;local v1071;local v1072;local v1073;while true do if (v1070==1) then v1073=nil;while true do if (1==v1071) then v1073.Parent=v1072.Parent;v1072.Parent.MouseButton1Click:Connect(function()local v1585=0;while true do if (v1585==0) then v1072.Parent.Value.Value=v1072.Parent.Parent.TextBox.Text;game.Players.LocalPlayer.Character.Humanoid.WalkSpeed=v1072.Parent.Value.Value;break;end end end);break;end if (v1071==0) then local v1553=0;local v1554;while true do if (v1553==0) then v1554=0;while true do if (v1554==1) then v1071=1;break;end if (v1554==0) then v1072=Instance.new(""LocalScript"",v18);v1073=Instance.new(""NumberValue"");v1554=1;end end break;end end end end break;end if (0==v1070) then local v1454=0;while true do if (v1454==1) then v1070=1;break;end if (v1454==0) then v1071=0;v1072=nil;v1454=1;end end end end end coroutine.wrap(v158)();v159=nil;function v159()local v1074=0;local v1075;local v1076;local v1077;while true do if (v1074==0) then v1075=0;v1076=nil;v1074=1;end if (1==v1074) then v1077=nil;while true do if (v1075==0) then v1076=Instance.new(""LocalScript"",v20);v1077=Instance.new(""NumberValue"");v1075=1;end if (v1075==1) then v1077.Parent=v1076.Parent;v1076.Parent.MouseButton1Click:Connect(function()local v1586=0;while true do if (v1586==0) then v1076.Parent.Value.Value=v1076.Parent.Parent.maxzoomplayer.Text;game.Players.LocalPlayer.CameraMaxZoomDistance=v1076.Parent.Value.Value;break;end end end);break;end end break;end end end coroutine.wrap(v159)();v160=nil;function v160()local v1078=0;local v1079;local v1080;while true do if (v1078==1) then while true do if (0==v1079) then v1080=Instance.new(""LocalScript"",v24);v1080.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.Humanoid.Health=0;end);break;end end break;end if (v1078==0) then local v1455=0;while true do if (v1455==0) then v1079=0;v1080=nil;v1455=1;end if (v1455==1) then v1078=1;break;end end end end end coroutine.wrap(v160)();v161=nil;function v161()local v1081=0;local v1082;local v1083;while true do if (v1081==0) then v1082=0;v1083=nil;v1081=1;end if (v1081==1) then while true do if (v1082==0) then v1083=Instance.new(""LocalScript"",v34);v1083.Parent.MouseButton1Click:Connect(function()if (v1083.Parent.Parent.Frame.check.Visible==false) then local v1613=0;local v1614;while true do if (v1613==0) then v1614=0;while true do if (v1614==0) then v1083.Parent.Parent.Frame.check.Visible=true;v1083.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end break;end end else local v1615=0;local v1616;while true do if (v1615==0) then v1616=0;while true do if (v1616==0) then local v1737=0;while true do if (v1737==0) then v1083.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);game.Lighting.TimeOfDay=""14:00:00"";v1737=1;end if (1==v1737) then v1616=1;break;end end end if (v1616==1) then wait(0.25);v1083.Parent.Parent.Frame.check.Visible=false;break;end end break;end end end end);break;end end break;end end end v1=126;end if (107==v1) then v133.Size=UDim2.new(0.149514556,0,0.98459512,0);v133.Font=Enum.Font.GothamBold;v133.Text=""Player"";v133.TextColor3=Color3.fromRGB(255,255,255);v133.TextScaled=true;v133.TextSize=14;v133.TextWrapped=true;v134.CornerRadius=UDim.new(0.100000001,0);v134.Parent=v133;v135.Name=""killaura"";v1=108;end if (57==v1) then local v378=0;while true do if (v378==1) then v66.Parent=v65;v67.Parent=v65;v67.BackgroundColor3=Color3.fromRGB(255,255,255);v378=2;end if (v378==0) then v65.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v65.Visible=false;v66.CornerRadius=UDim.new(0.100000001,0);v378=1;end if (v378==3) then v67.Size=UDim2.new(1,0,1,0);v1=58;break;end if (v378==2) then v67.BackgroundTransparency=1;v67.BorderColor3=Color3.fromRGB(0,0,0);v67.BorderSizePixel=0;v378=3;end end end if (v1==39) then v37.Size=UDim2.new(0.187154785,0,1,0);v38.Name=""check"";v38.Parent=v37;v38.BackgroundColor3=Color3.fromRGB(73,140,14);v38.BorderColor3=Color3.fromRGB(0,0,0);v38.BorderSizePixel=0;v38.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v38.Visible=false;v39.CornerRadius=UDim.new(0.100000001,0);v39.Parent=v38;v1=40;end if (v1==32) then v26.BorderColor3=Color3.fromRGB(0,0,0);v26.BorderSizePixel=0;v26.Position=UDim2.new(0.0137112271,0,0.763037741,0);v26.Size=UDim2.new(0.419298649,0,0.153045446,0);v27.CornerRadius=UDim.new(0.100000001,0);v27.Parent=v26;v28.Parent=v26;v28.BackgroundColor3=Color3.fromRGB(0,0,0);v28.BackgroundTransparency=0.35;v28.BorderColor3=Color3.fromRGB(0,0,0);v1=33;end if (v1==55) then v62.BackgroundColor3=Color3.fromRGB(0,0,0);v62.BackgroundTransparency=0.45;v62.BorderColor3=Color3.fromRGB(0,0,0);v62.BorderSizePixel=0;v62.Position=UDim2.new(0.547999978,0,0.595000029,0);v62.Size=UDim2.new(0.419298649,0,0.153045446,0);v63.CornerRadius=UDim.new(0.100000001,0);v63.Parent=v62;v64.Parent=v62;v64.BackgroundColor3=Color3.fromRGB(0,0,0);v1=56;end if (v1==106) then local v409=0;while true do if (v409==2) then v133.BackgroundTransparency=0.6;v133.BorderColor3=Color3.fromRGB(0,0,0);v133.BorderSizePixel=0;v409=3;end if (v409==3) then v133.Position=UDim2.new(0,0, -1.7339532e-7,0);v1=107;break;end if (v409==1) then v133.Name=""player"";v133.Parent=v3;v133.BackgroundColor3=Color3.fromRGB(0,0,0);v409=2;end if (v409==0) then v132.Size=UDim2.new(0.566566944,0,0.816083193,0);v132.ZIndex=0;v132.Image=""rbxassetid://15113659268"";v409=1;end end end if (v1==58) then v67.Image=""rbxassetid://15069805111"";v68.CornerRadius=UDim.new(0.100000001,0);v68.Parent=v64;v69.Parent=v62;v69.BackgroundColor3=Color3.fromRGB(255,255,255);v69.BackgroundTransparency=1;v69.BorderColor3=Color3.fromRGB(0,0,0);v69.BorderSizePixel=0;v69.Position=UDim2.new( -1.4256362e-7,0,0,0);v69.Size=UDim2.new(0.81284517,0,1,0);v1=59;end if (v1==9) then v92=Instance.new(""Frame"");v93=Instance.new(""UICorner"");v94=Instance.new(""ImageLabel"");v95=Instance.new(""UICorner"");v96=Instance.new(""TextLabel"");v97=Instance.new(""TextButton"");v98=Instance.new(""ScrollingFrame"");v99=Instance.new(""UIListLayout"");v100=Instance.new(""UICorner"");v101=Instance.new(""Frame"");v1=10;end if (v1==5) then v52=Instance.new(""TextButton"");v53=Instance.new(""Frame"");v54=Instance.new(""UICorner"");v55=Instance.new(""Frame"");v56=Instance.new(""Frame"");v57=Instance.new(""UICorner"");v58=Instance.new(""ImageLabel"");v59=Instance.new(""UICorner"");v60=Instance.new(""TextLabel"");v61=Instance.new(""TextButton"");v1=6;end if (v1==51) then v56.BorderColor3=Color3.fromRGB(0,0,0);v56.BorderSizePixel=0;v56.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v56.Visible=false;v57.CornerRadius=UDim.new(0.100000001,0);v57.Parent=v56;v58.Parent=v56;v58.BackgroundColor3=Color3.fromRGB(255,255,255);v58.BackgroundTransparency=1;v58.BorderColor3=Color3.fromRGB(0,0,0);v1=52;end if (v1==18) then v6.Parent=v5;v7.Parent=v3;v7.BackgroundColor3=Color3.fromRGB(0,0,0);v7.BackgroundTransparency=0.7;v7.BorderColor3=Color3.fromRGB(0,0,0);v7.BorderSizePixel=0;v7.Position=UDim2.new(0.83099997,0,0,0);v7.Size=UDim2.new(0.0834951475,0,0.99999994,0);v7.ZIndex=200;v7.Font=Enum.Font.SourceSansBold;v1=19;end if (v1==29) then v22.BorderColor3=Color3.fromRGB(0,0,0);v22.BorderSizePixel=0;v22.Position=UDim2.new(0.0155339809,0,0.408041596,0);v22.Size=UDim2.new(0.223300964,0,0.13495183,0);v22.Font=Enum.Font.Unknown;v22.Text=""JumpPower:"";v22.TextColor3=Color3.fromRGB(255,255,255);v22.TextScaled=true;v22.TextSize=14;v22.TextWrapped=true;v1=30;end if (v1==136) then v195=nil;function v195()local v1084=0;local v1085;while true do if (v1084==0) then local v1456=0;local v1457;while true do if (v1456==0) then v1457=0;while true do if (v1457==0) then local v1617=0;while true do if (v1617==1) then v1457=1;break;end if (v1617==0) then v1085=Instance.new(""LocalScript"",v133);v1085.Parent.MouseEnter:Connect(function()v1085.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1617=1;end end end if (1==v1457) then v1084=1;break;end end break;end end end if (v1084==1) then v1085.Parent.MouseLeave:Connect(function()v1085.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);v1085.Parent.MouseButton1Click:Connect(function()local v1525=0;local v1526;local v1527;while true do if (v1525==1) then while true do if (v1526==0) then v1527=0;while true do if (v1527==1) then v1085.Parent.Parent.Frame.Other.Visible=false;v1085.Parent.Parent.Frame.Teleports.Visible=false;break;end if (0==v1527) then local v1711=0;while true do if (v1711==1) then v1527=1;break;end if (v1711==0) then local v1757=0;while true do if (v1757==0) then v1085.Parent.Parent.Frame.KillAuraFrame.Visible=false;v1085.Parent.Parent.Frame.PlayerFrame.Visible=true;v1757=1;end if (v1757==1) then v1711=1;break;end end end end end end break;end end break;end if (v1525==0) then v1526=0;v1527=nil;v1525=1;end end end);break;end end end coroutine.wrap(v195)();v196=nil;function v196()local v1086=0;local v1087;while true do if (v1086==1) then v1087.Parent.MouseLeave:Connect(function()v1087.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);v1087.Parent.MouseButton1Click:Connect(function()local v1529=0;local v1530;while true do if (v1529==0) then v1530=0;while true do if (1==v1530) then v1087.Parent.Parent.Frame.Other.Visible=false;v1087.Parent.Parent.Frame.Teleports.Visible=false;break;end if (v1530==0) then local v1653=0;while true do if (v1653==1) then v1530=1;break;end if (v1653==0) then v1087.Parent.Parent.Frame.KillAuraFrame.Visible=true;v1087.Parent.Parent.Frame.PlayerFrame.Visible=false;v1653=1;end end end end break;end end end);break;end if (v1086==0) then v1087=Instance.new(""LocalScript"",v135);v1087.Parent.MouseEnter:Connect(function()v1087.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1086=1;end end end coroutine.wrap(v196)();v197=nil;function v197()local v1088=0;local v1089;local v1090;while true do if (v1088==1) then while true do if (v1089==0) then v1090=Instance.new(""LocalScript"",v137);v1090.Parent.MouseEnter:Connect(function()v1090.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1089=1;end if (v1089==1) then v1090.Parent.MouseLeave:Connect(function()v1090.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);v1090.Parent.MouseButton1Click:Connect(function()local v1590=0;while true do if (v1590==1) then v1090.Parent.Parent.Frame.Other.Visible=false;v1090.Parent.Parent.Frame.Teleports.Visible=true;break;end if (v1590==0) then v1090.Parent.Parent.Frame.KillAuraFrame.Visible=false;v1090.Parent.Parent.Frame.PlayerFrame.Visible=false;v1590=1;end end end);break;end end break;end if (0==v1088) then local v1458=0;while true do if (v1458==1) then v1088=1;break;end if (v1458==0) then v1089=0;v1090=nil;v1458=1;end end end end end coroutine.wrap(v197)();v198=nil;v1=137;end if (127==v1) then v165=nil;function v165()local v1091=0;local v1092;while true do if (v1091==0) then v1092=Instance.new(""LocalScript"",v52);while wait() do if (v1092.Parent.Parent.Frame.check.Visible==true) then local v1557=0;local v1558;while true do if (v1557==0) then v1558={[1]=""rep""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1558));break;end end else end end break;end end end coroutine.wrap(v165)();v166=nil;function v166()local v1093=0;local v1094;while true do if (v1093==0) then v1094=Instance.new(""LocalScript"",v61);v1094.Parent.MouseButton1Click:Connect(function()if (v1094.Parent.Parent.Frame.check.Visible==false) then local v1559=0;while true do if (v1559==0) then v1094.Parent.Parent.Frame.check.Visible=true;v1094.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end else local v1560=0;while true do if (v1560==1) then v1094.Parent.Parent.Frame.check.Visible=false;break;end if (v1560==0) then local v1620=0;while true do if (v1620==1) then v1560=1;break;end if (v1620==0) then v1094.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);wait(0.25);v1620=1;end end end end end end);break;end end end coroutine.wrap(v166)();v167=nil;function v167()local v1095=0;local v1096;while true do if (v1095==0) then v1096=Instance.new(""LocalScript"",v61);while wait() do if (v1096.Parent.Parent.Frame.check.Visible==true) then local v1561=0;local v1562;while true do if (v1561==0) then v1562={[1]=""rep""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1562));break;end end else end end break;end end end coroutine.wrap(v167)();v168=nil;v1=128;end if (v1==97) then v120.TextWrapped=true;v121.CornerRadius=UDim.new(0.300000012,0);v121.Parent=v120;v122.Name=""Other"";v122.Parent=v9;v122.BackgroundColor3=Color3.fromRGB(255,255,255);v122.BackgroundTransparency=1;v122.BorderColor3=Color3.fromRGB(0,0,0);v122.BorderSizePixel=0;v122.Size=UDim2.new(1,0,1,0);v1=98;end if (v1==90) then v112.BackgroundTransparency=0.4;v112.BorderColor3=Color3.fromRGB(0,0,0);v112.BorderSizePixel=0;v112.Position=UDim2.new(0.160999998,0,0.215000004,0);v112.Size=UDim2.new(0.676803946,0,0.130871415,0);v112.Font=Enum.Font.SourceSans;v112.Text=""Legends Gym"";v112.TextColor3=Color3.fromRGB(255,255,255);v112.TextScaled=true;v112.TextSize=14;v1=91;end if (v1==72) then v87.BorderSizePixel=0;v87.Position=UDim2.new(0.207628965,0,0.44352603,0);v87.Size=UDim2.new(0.584742069,0,0.182762161,0);v87.Font=Enum.Font.SourceSans;v87.Text=""Username:"";v87.TextColor3=Color3.fromRGB(255,255,255);v87.TextScaled=true;v87.TextSize=14;v87.TextWrapped=true;v88.CornerRadius=UDim.new(0.200000003,0);v1=73;end if (56==v1) then v64.BackgroundTransparency=0.35;v64.BorderColor3=Color3.fromRGB(0,0,0);v64.BorderSizePixel=0;v64.Position=UDim2.new(0.81284529,0,0,0);v64.Size=UDim2.new(0.187154785,0,1,0);v65.Name=""check"";v65.Parent=v64;v65.BackgroundColor3=Color3.fromRGB(73,140,14);v65.BorderColor3=Color3.fromRGB(0,0,0);v65.BorderSizePixel=0;v1=57;end if (120==v1) then local v494=0;while true do if (v494==1) then v150.Parent=v142;v150.BackgroundColor3=Color3.fromRGB(4,216,11);v150.BorderColor3=Color3.fromRGB(0,0,0);v494=2;end if (v494==2) then v150.BorderSizePixel=0;v150.Position=UDim2.new(0.201068088,0,0.361635238,0);v150.Size=UDim2.new(0.596921146,0,0.119496942,0);v494=3;end if (v494==0) then v148.TextWrapped=true;v149.CornerRadius=UDim.new(0.100000001,0);v149.Parent=v148;v494=1;end if (v494==3) then v150.Font=Enum.Font.SourceSans;v1=121;break;end end end if (111==v1) then v138.Parent=v137;v139.Name=""Other"";v139.Parent=v3;v139.BackgroundColor3=Color3.fromRGB(0,0,0);v139.BackgroundTransparency=0.6;v139.BorderColor3=Color3.fromRGB(0,0,0);v139.BorderSizePixel=0;v139.Position=UDim2.new(0.500999987,0,0,0);v139.Size=UDim2.new(0.149514556,0,0.98459512,0);v139.Font=Enum.Font.GothamBold;v1=112;end if (75==v1) then v92.BackgroundColor3=Color3.fromRGB(73,140,14);v92.BorderColor3=Color3.fromRGB(0,0,0);v92.BorderSizePixel=0;v92.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v92.Visible=false;v93.CornerRadius=UDim.new(0.100000001,0);v93.Parent=v92;v94.Parent=v92;v94.BackgroundColor3=Color3.fromRGB(255,255,255);v94.BackgroundTransparency=1;v1=76;end if (v1==26) then v18.BorderColor3=Color3.fromRGB(0,0,0);v18.BorderSizePixel=0;v18.Position=UDim2.new(0.25048545,0,0.0816083178,0);v18.Size=UDim2.new(0.182524279,0,0.126791,0);v18.Font=Enum.Font.SourceSans;v18.Text=""Run"";v18.TextColor3=Color3.fromRGB(255,255,255);v18.TextScaled=true;v18.TextSize=14;v18.TextWrapped=true;v1=27;end if (v1==61) then v71.BorderColor3=Color3.fromRGB(0,0,0);v71.BorderSizePixel=0;v71.Position=UDim2.new(0.547999978,0,0.785000026,0);v71.Size=UDim2.new(0.419298649,0,0.153045446,0);v72.CornerRadius=UDim.new(0.100000001,0);v72.Parent=v71;v73.Parent=v71;v73.BackgroundColor3=Color3.fromRGB(0,0,0);v73.BackgroundTransparency=0.35;v73.BorderColor3=Color3.fromRGB(0,0,0);v1=62;end if (v1==34) then v30.CornerRadius=UDim.new(0.100000001,0);v30.Parent=v29;v31.Parent=v29;v31.BackgroundColor3=Color3.fromRGB(255,255,255);v31.BackgroundTransparency=1;v31.BorderColor3=Color3.fromRGB(0,0,0);v31.BorderSizePixel=0;v31.Size=UDim2.new(1,0,1,0);v31.Image=""rbxassetid://15069805111"";v32.CornerRadius=UDim.new(0.100000001,0);v1=35;end if (v1==10) then v102=Instance.new(""TextLabel"");v103=Instance.new(""TextButton"");v104=Instance.new(""UICorner"");v105=Instance.new(""TextButton"");v106=Instance.new(""UICorner"");v107=Instance.new(""ImageLabel"");v108=Instance.new(""TextLabel"");v109=Instance.new(""Frame"");v110=Instance.new(""TextButton"");v111=Instance.new(""UICorner"");v1=11;end if (v1==80) then v100.Parent=v82;v101.Name=""PlayerFrame"";v101.Parent=v100;v101.BackgroundColor3=Color3.fromRGB(61,37,37);v101.BorderColor3=Color3.fromRGB(0,0,0);v101.BorderSizePixel=0;v101.Size=UDim2.new(1,0,0.0439999998,0);v102.Name=""RealName"";v102.Parent=v101;v102.BackgroundColor3=Color3.fromRGB(0,0,0);v1=81;end if (v1==101) then v126.Parent=v125;v127.Parent=v122;v127.BackgroundColor3=Color3.fromRGB(0,0,0);v127.BorderColor3=Color3.fromRGB(0,0,0);v127.BorderSizePixel=0;v127.Position=UDim2.new(0.315824658,0,0.27105546,0);v127.Size=UDim2.new(0.36685583,0,0.140729114,0);v127.Font=Enum.Font.SourceSans;v127.Text=""Kill All"";v127.TextColor3=Color3.fromRGB(255,255,255);v1=102;end if (v1==88) then v109.BorderSizePixel=0;v109.Size=UDim2.new(1,0,1,0);v109.Visible=false;v110.Parent=v109;v110.BackgroundColor3=Color3.fromRGB(34,255,49);v110.BackgroundTransparency=0.4;v110.BorderColor3=Color3.fromRGB(0,0,0);v110.BorderSizePixel=0;v110.Position=UDim2.new(0.160618633,0,0.0652866513,0);v110.Size=UDim2.new(0.676803946,0,0.130871415,0);v1=89;end if (v1==54) then local v578=0;while true do if (3==v578) then v62.Parent=v11;v1=55;break;end if (v578==0) then v61.BackgroundTransparency=1;v61.BorderColor3=Color3.fromRGB(0,0,0);v61.BorderSizePixel=0;v578=1;end if (v578==1) then v61.Size=UDim2.new(1,0,1,0);v61.Font=Enum.Font.SourceSans;v61.Text="""";v578=2;end if (2==v578) then v61.TextColor3=Color3.fromRGB(0,0,0);v61.TextSize=14;v62.Name=""checkBox"";v578=3;end end end if (v1==132) then local v579=0;while true do if (0==v579) then coroutine.wrap(v181)();v182=nil;function v182()local v1459=0;local v1460;while true do if (v1459==0) then v1460=Instance.new(""LocalScript"",v112);v1460.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToLegendsGym.CFrame;end);break;end end end coroutine.wrap(v182)();v579=1;end if (v579==2) then function v184()local v1461=0;local v1462;local v1463;local v1464;while true do if (v1461==0) then v1462=0;v1463=nil;v1461=1;end if (1==v1461) then v1464=nil;while true do if (v1462==1) then while true do if (v1463==0) then v1464=Instance.new(""LocalScript"",v116);v1464.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToMysticalGym.CFrame;end);break;end end break;end if (v1462==0) then v1463=0;v1464=nil;v1462=1;end end break;end end end coroutine.wrap(v184)();v1=133;break;end if (v579==1) then v183=nil;function v183()local v1465=0;local v1466;while true do if (v1465==0) then v1466=Instance.new(""LocalScript"",v114);v1466.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToEternalGym.CFrame;end);break;end end end coroutine.wrap(v183)();v184=nil;v579=2;end end end if (v1==89) then local v580=0;while true do if (2==v580) then v111.CornerRadius=UDim.new(0.300000012,0);v111.Parent=v110;v112.Parent=v109;v580=3;end if (v580==3) then v112.BackgroundColor3=Color3.fromRGB(255,255,255);v1=90;break;end if (v580==0) then v110.Font=Enum.Font.SourceSans;v110.Text=""Muscle King Gym"";v110.TextColor3=Color3.fromRGB(255,255,255);v580=1;end if (v580==1) then v110.TextScaled=true;v110.TextSize=14;v110.TextWrapped=true;v580=2;end end end if (v1==105) then local v581=0;while true do if (v581==0) then v131.TextScaled=true;v131.TextSize=14;v131.TextStrokeTransparency=0.7;v131.TextWrapped=true;v581=1;end if (1==v581) then v132.Parent=v9;v132.BackgroundColor3=Color3.fromRGB(255,255,255);v132.BackgroundTransparency=1;v132.BorderColor3=Color3.fromRGB(0,0,0);v581=2;end if (2==v581) then v132.BorderSizePixel=0;v132.Position=UDim2.new(0.207628965,0,0,0);v1=106;break;end end end if (114==v1) then local v582=0;while true do if (v582==1) then v142.Parent=v2;v142.BackgroundColor3=Color3.fromRGB(38,38,38);v142.BorderColor3=Color3.fromRGB(0,0,0);v582=2;end if (2==v582) then v142.BorderSizePixel=0;v142.Position=UDim2.new(0.352723956,0,0.246031821,0);v142.Size=UDim2.new(0.293905795,0,0.504761934,0);v582=3;end if (v582==0) then v141.TextStrokeTransparency=0;v141.TextWrapped=true;v142.Name=""pass"";v582=1;end if (v582==3) then v143.CornerRadius=UDim.new(0.100000001,0);v1=115;break;end end end if (v1==24) then v15.CornerRadius=UDim.new(0.200000003,0);v15.Parent=v14;v16.Name=""maxzoomplayer"";v16.Parent=v11;v16.BackgroundColor3=Color3.fromRGB(0,0,0);v16.BackgroundTransparency=0.45;v16.BorderColor3=Color3.fromRGB(0,0,0);v16.BorderSizePixel=0;v16.Position=UDim2.new(0.0155339809,0,0.240744531,0);v16.Size=UDim2.new(0.223300964,0,0.13495183,0);v1=25;end if (v1==91) then v112.TextWrapped=true;v113.CornerRadius=UDim.new(0.300000012,0);v113.Parent=v112;v114.Parent=v109;v114.BackgroundColor3=Color3.fromRGB(255,207,16);v114.BackgroundTransparency=0.4;v114.BorderColor3=Color3.fromRGB(0,0,0);v114.BorderSizePixel=0;v114.Position=UDim2.new(0.160999998,0,0.36500001,0);v114.Size=UDim2.new(0.676803946,0,0.130871415,0);v1=92;end if (v1==8) then local v603=0;while true do if (v603==1) then v85=Instance.new(""TextButton"");v86=Instance.new(""UICorner"");v87=Instance.new(""TextBox"");v603=2;end if (v603==3) then v91=Instance.new(""Frame"");v1=9;break;end if (v603==0) then v82=Instance.new(""Frame"");v83=Instance.new(""TextButton"");v84=Instance.new(""UICorner"");v603=1;end if (v603==2) then v88=Instance.new(""UICorner"");v89=Instance.new(""Frame"");v90=Instance.new(""UICorner"");v603=3;end end end if (7==v1) then v72=Instance.new(""UICorner"");v73=Instance.new(""Frame"");v74=Instance.new(""Frame"");v75=Instance.new(""UICorner"");v76=Instance.new(""ImageLabel"");v77=Instance.new(""UICorner"");v78=Instance.new(""TextLabel"");v79=Instance.new(""TextButton"");v80=Instance.new(""Frame"");v81=Instance.new(""Frame"");v1=8;end if (v1==115) then local v604=0;while true do if (v604==1) then v144.BorderSizePixel=0;v144.Position=UDim2.new(0,0,0.128930852,0);v144.Size=UDim2.new(1,0,0.00628930749,0);v145.Parent=v142;v604=2;end if (v604==0) then v143.Parent=v142;v144.Parent=v142;v144.BackgroundColor3=Color3.fromRGB(255,255,255);v144.BorderColor3=Color3.fromRGB(0,0,0);v604=1;end if (v604==2) then v145.BackgroundColor3=Color3.fromRGB(255,255,255);v145.BackgroundTransparency=1;v1=116;break;end end end if (v1==112) then v139.Text=""Other"";v139.TextColor3=Color3.fromRGB(255,255,255);v139.TextScaled=true;v139.TextSize=14;v139.TextWrapped=true;v140.CornerRadius=UDim.new(0.100000001,0);v140.Parent=v139;v141.Parent=v3;v141.BackgroundColor3=Color3.fromRGB(255,255,255);v141.BackgroundTransparency=1;v1=113;end if (v1==86) then v108.Name=""durar"";v108.Parent=v101;v108.BackgroundColor3=Color3.fromRGB(0,0,0);v108.BackgroundTransparency=0.95;v108.BorderColor3=Color3.fromRGB(0,0,0);v108.BorderSizePixel=0;v108.Position=UDim2.new(0.399257094,0,0,0);v108.Size=UDim2.new(0.25125736,0,1,0);v108.Font=Enum.Font.SourceSans;v108.Text=""None"";v1=87;end if (v1==116) then v145.BorderColor3=Color3.fromRGB(0,0,0);v145.BorderSizePixel=0;v145.Position=UDim2.new(0,0,0.0188679714,0);v145.Size=UDim2.new(1,0,0.0880503505,0);v145.Font=Enum.Font.SourceSansBold;v145.Text=""Type The Password"";v145.TextColor3=Color3.fromRGB(195,179,4);v145.TextScaled=true;v145.TextSize=14;v145.TextStrokeTransparency=0.7;v1=117;end if (v1==69) then local v637=0;while true do if (v637==0) then v83.BorderColor3=Color3.fromRGB(0,0,0);v83.BorderSizePixel=0;v83.Position=UDim2.new(0.315824658,0,0.652980685,0);v83.Size=UDim2.new(0.36685583,0,0.140729114,0);v637=1;end if (v637==2) then v83.TextSize=14;v83.TextWrapped=true;v1=70;break;end if (1==v637) then v83.Font=Enum.Font.SourceSans;v83.Text=""Stop Auto Kill"";v83.TextColor3=Color3.fromRGB(255,255,255);v83.TextScaled=true;v637=2;end end end if (v1==85) then v105.TextWrapped=true;v106.CornerRadius=UDim.new(1,0);v106.Parent=v105;v107.Parent=v101;v107.BackgroundColor3=Color3.fromRGB(255,255,255);v107.BackgroundTransparency=1;v107.BorderColor3=Color3.fromRGB(0,0,0);v107.BorderSizePixel=0;v107.Size=UDim2.new(0.0421644151,0,1,0);v107.Image=""rbxasset://textures/ui/GuiImagePlaceholder.png"";v1=86;end if (v1==46) then v49.BackgroundTransparency=1;v49.BorderColor3=Color3.fromRGB(0,0,0);v49.BorderSizePixel=0;v49.Size=UDim2.new(1,0,1,0);v49.Image=""rbxassetid://15069805111"";v50.CornerRadius=UDim.new(0.100000001,0);v50.Parent=v46;v51.Parent=v44;v51.BackgroundColor3=Color3.fromRGB(255,255,255);v51.BackgroundTransparency=1;v1=47;end if (v1==129) then local v658=0;while true do if (v658==0) then coroutine.wrap(v171)();v172=nil;function v172()local v1467=0;local v1468;local v1469;while true do if (v1467==0) then local v1563=0;while true do if (v1563==0) then v1468=0;v1469=nil;v1563=1;end if (v1563==1) then v1467=1;break;end end end if (v1467==1) then while true do if (v1468==1) then v1469.Parent.MouseLeave:Connect(function()v1469.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);break;end if (v1468==0) then v1469=Instance.new(""LocalScript"",v83);v1469.Parent.MouseEnter:Connect(function()v1469.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1468=1;end end break;end end end coroutine.wrap(v172)();v658=1;end if (v658==1) then v173=nil;function v173()local v1470=0;local v1471;local v1472;while true do if (v1470==1) then while true do if (0==v1471) then v1472=Instance.new(""LocalScript"",v83);v1472.Parent.MouseButton1Click:Connect(function()v1472.Parent.Parent.TextBox.Value.Value=false;end);break;end end break;end if (v1470==0) then local v1564=0;while true do if (v1564==0) then v1471=0;v1472=nil;v1564=1;end if (v1564==1) then v1470=1;break;end end end end end coroutine.wrap(v173)();v174=nil;v658=2;end if (v658==2) then function v174()local v1473=Instance.new(""LocalScript"",v85);v1473.Parent.MouseEnter:Connect(function()v1473.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1473.Parent.MouseLeave:Connect(function()v1473.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);end coroutine.wrap(v174)();v1=130;break;end end end if (v1==43) then v43.TextColor3=Color3.fromRGB(0,0,0);v43.TextSize=14;v44.Name=""checkBox"";v44.Parent=v11;v44.BackgroundColor3=Color3.fromRGB(0,0,0);v44.BackgroundTransparency=0.45;v44.BorderColor3=Color3.fromRGB(0,0,0);v44.BorderSizePixel=0;v44.Position=UDim2.new(0.547999978,0,0.237000003,0);v44.Size=UDim2.new(0.419298649,0,0.153045446,0);v1=44;end if (v1==47) then local v669=0;while true do if (v669==1) then v51.Font=Enum.Font.GothamBold;v51.Text=""Auto PushUps"";v51.TextColor3=Color3.fromRGB(255,255,255);v51.TextScaled=true;v669=2;end if (v669==2) then v51.TextSize=14;v51.TextWrapped=true;v1=48;break;end if (v669==0) then v51.BorderColor3=Color3.fromRGB(0,0,0);v51.BorderSizePixel=0;v51.Position=UDim2.new( -1.4256362e-7,0,0,0);v51.Size=UDim2.new(0.81284517,0,1,0);v669=1;end end end if (v1==23) then local v670=0;while true do if (v670==0) then v14.BorderColor3=Color3.fromRGB(0,0,0);v14.BorderSizePixel=0;v14.Position=UDim2.new(0.25048545,0,0.412122011,0);v670=1;end if (v670==1) then v14.Size=UDim2.new(0.182524279,0,0.126791,0);v14.Font=Enum.Font.SourceSans;v14.Text=""Run"";v670=2;end if (v670==3) then v14.TextWrapped=true;v1=24;break;end if (v670==2) then v14.TextColor3=Color3.fromRGB(255,255,255);v14.TextScaled=true;v14.TextSize=14;v670=3;end end end if (53==v1) then v60.Position=UDim2.new( -1.4256362e-7,0,0,0);v60.Size=UDim2.new(0.81284517,0,1,0);v60.Font=Enum.Font.GothamBold;v60.Text=""Auto Weight"";v60.TextColor3=Color3.fromRGB(255,255,255);v60.TextScaled=true;v60.TextSize=14;v60.TextWrapped=true;v61.Parent=v53;v61.BackgroundColor3=Color3.fromRGB(255,255,255);v1=54;end if (40==v1) then v40.Parent=v38;v40.BackgroundColor3=Color3.fromRGB(255,255,255);v40.BackgroundTransparency=1;v40.BorderColor3=Color3.fromRGB(0,0,0);v40.BorderSizePixel=0;v40.Size=UDim2.new(1,0,1,0);v40.Image=""rbxassetid://15069805111"";v41.CornerRadius=UDim.new(0.100000001,0);v41.Parent=v37;v42.Parent=v35;v1=41;end if (v1==6) then v62=Instance.new(""Frame"");v63=Instance.new(""UICorner"");v64=Instance.new(""Frame"");v65=Instance.new(""Frame"");v66=Instance.new(""UICorner"");v67=Instance.new(""ImageLabel"");v68=Instance.new(""UICorner"");v69=Instance.new(""TextLabel"");v70=Instance.new(""TextButton"");v71=Instance.new(""Frame"");v1=7;end if (117==v1) then v145.TextWrapped=true;v146.Parent=v142;v146.BackgroundColor3=Color3.fromRGB(0,0,0);v146.BackgroundTransparency=0.8;v146.BorderColor3=Color3.fromRGB(0,0,0);v146.BorderSizePixel=0;v146.Position=UDim2.new(0.141376063,0,0.185534626,0);v146.Size=UDim2.new(0.714106202,0,0.141509414,0);v146.Font=Enum.Font.SourceSans;v146.Text=""Password:"";v1=118;end if (126==v1) then coroutine.wrap(v161)();v162=nil;function v162()local v1097=0;local v1098;local v1099;while true do if (v1097==0) then v1098=0;v1099=nil;v1097=1;end if (v1097==1) then while true do if (v1098==0) then v1099=Instance.new(""LocalScript"",v34);while wait(1) do if (v1099.Parent.Parent.Frame.check.Visible==true) then local v1621=0;local v1622;while true do if (v1621==0) then v1622={[1]=""joinBrawl""};game:GetService(""ReplicatedStorage"").rEvents.brawlEvent:FireServer(unpack(v1622));break;end end else end end break;end end break;end end end coroutine.wrap(v162)();v163=nil;function v163()local v1100=0;local v1101;local v1102;while true do if (v1100==0) then v1101=0;v1102=nil;v1100=1;end if (v1100==1) then while true do if (v1101==0) then v1102=Instance.new(""LocalScript"",v43);v1102.Parent.MouseButton1Click:Connect(function()if (v1102.Parent.Parent.Frame.check.Visible==false) then local v1623=0;local v1624;while true do if (v1623==0) then v1624=0;while true do if (v1624==0) then local v1739=0;local v1740;while true do if (v1739==0) then v1740=0;while true do if (v1740==1) then v1624=1;break;end if (v1740==0) then local v1800=0;while true do if (v1800==1) then v1740=1;break;end if (v1800==0) then v1102.Parent.Parent.Frame.check.Visible=true;game.Players.LocalPlayer.PlayerGui.gameGui.Enabled=false;v1800=1;end end end end break;end end end if (v1624==1) then v1102.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end break;end end else local v1625=0;local v1626;while true do if (0==v1625) then v1626=0;while true do if (v1626==0) then v1102.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);game.Players.LocalPlayer.PlayerGui.gameGui.Enabled=true;v1626=1;end if (v1626==1) then wait(0.25);v1102.Parent.Parent.Frame.check.Visible=false;break;end end break;end end end end);break;end end break;end end end coroutine.wrap(v163)();v164=nil;function v164()local v1103=0;local v1104;local v1105;while true do if (0==v1103) then v1104=0;v1105=nil;v1103=1;end if (v1103==1) then while true do if (v1104==0) then v1105=Instance.new(""LocalScript"",v52);v1105.Parent.MouseButton1Click:Connect(function()if (v1105.Parent.Parent.Frame.check.Visible==false) then local v1627=0;while true do if (v1627==0) then v1105.Parent.Parent.Frame.check.Visible=true;v1105.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end else local v1628=0;while true do if (1==v1628) then v1105.Parent.Parent.Frame.check.Visible=false;break;end if (v1628==0) then local v1689=0;while true do if (v1689==0) then v1105.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);wait(0.25);v1689=1;end if (v1689==1) then v1628=1;break;end end end end end end);break;end end break;end end end coroutine.wrap(v164)();v1=127;end if (v1==49) then v53.Name=""checkBox"";v53.Parent=v11;v53.BackgroundColor3=Color3.fromRGB(0,0,0);v53.BackgroundTransparency=0.45;v53.BorderColor3=Color3.fromRGB(0,0,0);v53.BorderSizePixel=0;v53.Position=UDim2.new(0.547999978,0,0.411000013,0);v53.Size=UDim2.new(0.419298649,0,0.153045446,0);v54.CornerRadius=UDim.new(0.100000001,0);v54.Parent=v53;v1=50;end if (v1==3) then v32=Instance.new(""UICorner"");v33=Instance.new(""TextLabel"");v34=Instance.new(""TextButton"");v35=Instance.new(""Frame"");v36=Instance.new(""UICorner"");v37=Instance.new(""Frame"");v38=Instance.new(""Frame"");v39=Instance.new(""UICorner"");v40=Instance.new(""ImageLabel"");v41=Instance.new(""UICorner"");v1=4;end if (v1==45) then v47.Parent=v46;v47.BackgroundColor3=Color3.fromRGB(73,140,14);v47.BorderColor3=Color3.fromRGB(0,0,0);v47.BorderSizePixel=0;v47.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v47.Visible=false;v48.CornerRadius=UDim.new(0.100000001,0);v48.Parent=v47;v49.Parent=v47;v49.BackgroundColor3=Color3.fromRGB(255,255,255);v1=46;end if (v1==77) then v96.BorderSizePixel=0;v96.Position=UDim2.new( -1.4256362e-7,0,0,0);v96.Size=UDim2.new(0.81284517,0,1,0);v96.Font=Enum.Font.GothamBold;v96.Text=""Disable Animation Punch"";v96.TextColor3=Color3.fromRGB(255,255,255);v96.TextScaled=true;v96.TextSize=14;v96.TextWrapped=true;v97.Parent=v89;v1=78;end if (60==v1) then v70.BorderSizePixel=0;v70.Size=UDim2.new(1,0,1,0);v70.Font=Enum.Font.SourceSans;v70.Text="""";v70.TextColor3=Color3.fromRGB(0,0,0);v70.TextSize=14;v71.Name=""checkBox"";v71.Parent=v11;v71.BackgroundColor3=Color3.fromRGB(0,0,0);v71.BackgroundTransparency=0.45;v1=61;end if (v1==93) then v116.BackgroundTransparency=0.4;v116.BorderColor3=Color3.fromRGB(0,0,0);v116.BorderSizePixel=0;v116.Position=UDim2.new(0.160999998,0,0.514999986,0);v116.Size=UDim2.new(0.676803946,0,0.130871415,0);v116.Font=Enum.Font.SourceSans;v116.Text=""Mystical Gym"";v116.TextColor3=Color3.fromRGB(255,255,255);v116.TextScaled=true;v116.TextSize=14;v1=94;end if (v1==16) then v3.Size=UDim2.new(0.65869242,0,0.0920635015,0);v3.Visible=false;v3.ZIndex=10000;v4.CornerRadius=UDim.new(0.200000003,0);v4.Parent=v3;v5.Parent=v3;v5.BackgroundColor3=Color3.fromRGB(0,0,0);v5.BackgroundTransparency=0.7;v5.BorderColor3=Color3.fromRGB(0,0,0);v5.BorderSizePixel=0;v1=17;end if (v1==17) then v5.Position=UDim2.new(0.91650486,0,0,0);v5.Size=UDim2.new(0.0834951475,0,0.99999994,0);v5.ZIndex=200;v5.Font=Enum.Font.SourceSansBold;v5.Text=""X"";v5.TextColor3=Color3.fromRGB(255,255,255);v5.TextScaled=true;v5.TextSize=14;v5.TextWrapped=true;v6.CornerRadius=UDim.new(0.200000003,0);v1=18;end if (103==v1) then v129.Size=UDim2.new(0.36685583,0,0.140729114,0);v129.Font=Enum.Font.SourceSans;v129.Text=""Stop Kill All"";v129.TextColor3=Color3.fromRGB(255,255,255);v129.TextScaled=true;v129.TextSize=14;v129.TextWrapped=true;v130.CornerRadius=UDim.new(0.100000001,0);v130.Parent=v129;v131.Name=""Damage"";v1=104;end if (v1==22) then v12.Font=Enum.Font.Unknown;v12.Text=""Speed:"";v12.TextColor3=Color3.fromRGB(255,255,255);v12.TextScaled=true;v12.TextSize=14;v12.TextWrapped=true;v13.CornerRadius=UDim.new(0.0700000003,0);v13.Parent=v12;v14.Parent=v11;v14.BackgroundColor3=Color3.fromRGB(85,85,85);v1=23;end if (v1==110) then v137.BorderSizePixel=0;v137.Position=UDim2.new(0.333999991,0,""-0"",0);v137.Size=UDim2.new(0.149514556,0,0.98459512,0);v137.Font=Enum.Font.GothamBold;v137.Text=""Teleport"";v137.TextColor3=Color3.fromRGB(255,255,255);v137.TextScaled=true;v137.TextSize=14;v137.TextWrapped=true;v138.CornerRadius=UDim.new(0.100000001,0);v1=111;end if (v1==35) then v32.Parent=v28;v33.Parent=v26;v33.BackgroundColor3=Color3.fromRGB(255,255,255);v33.BackgroundTransparency=1;v33.BorderColor3=Color3.fromRGB(0,0,0);v33.BorderSizePixel=0;v33.Position=UDim2.new( -1.4256362e-7,0,0,0);v33.Size=UDim2.new(0.81284517,0,1,0);v33.Font=Enum.Font.GothamBold;v33.Text=""Auto Join Brawl"";v1=36;end if (70==v1) then v84.CornerRadius=UDim.new(0.100000001,0);v84.Parent=v83;v85.Parent=v82;v85.BackgroundColor3=Color3.fromRGB(0,0,0);v85.BorderColor3=Color3.fromRGB(0,0,0);v85.BorderSizePixel=0;v85.Position=UDim2.new(0.315824658,0,0.27105546,0);v85.Size=UDim2.new(0.36685583,0,0.140729114,0);v85.Font=Enum.Font.SourceSans;v85.Text=""Auto Kill Player"";v1=71;end if (v1==27) then local v832=0;while true do if (v832==0) then v19.CornerRadius=UDim.new(0.200000003,0);v19.Parent=v18;v20.Parent=v11;v20.BackgroundColor3=Color3.fromRGB(85,85,85);v832=1;end if (v832==1) then v20.BorderColor3=Color3.fromRGB(0,0,0);v20.BorderSizePixel=0;v20.Position=UDim2.new(0.25048545,0,0.244824946,0);v20.Size=UDim2.new(0.182524279,0,0.126791,0);v832=2;end if (v832==2) then v20.Font=Enum.Font.SourceSans;v20.Text=""Run"";v1=28;break;end end end if (v1==25) then v16.Font=Enum.Font.Unknown;v16.Text=""MaxZoom:"";v16.TextColor3=Color3.fromRGB(255,255,255);v16.TextScaled=true;v16.TextSize=14;v16.TextWrapped=true;v17.CornerRadius=UDim.new(0.0700000003,0);v17.Parent=v16;v18.Parent=v11;v18.BackgroundColor3=Color3.fromRGB(85,85,85);v1=26;end if (v1==19) then v7.Text=""-"";v7.TextColor3=Color3.fromRGB(255,255,255);v7.TextScaled=true;v7.TextSize=14;v7.TextWrapped=true;v8.CornerRadius=UDim.new(0.200000003,0);v8.Parent=v7;v9.Parent=v3;v9.BackgroundColor3=Color3.fromRGB(54,54,54);v9.BorderColor3=Color3.fromRGB(0,0,0);v1=20;end if (102==v1) then v127.TextScaled=true;v127.TextSize=14;v127.TextWrapped=true;v128.CornerRadius=UDim.new(0.100000001,0);v128.Parent=v127;v129.Parent=v122;v129.BackgroundColor3=Color3.fromRGB(0,0,0);v129.BorderColor3=Color3.fromRGB(0,0,0);v129.BorderSizePixel=0;v129.Position=UDim2.new(0.315824568,0,0.457120627,0);v1=103;end if (v1==12) then v122=Instance.new(""Frame"");v123=Instance.new(""TextButton"");v124=Instance.new(""UICorner"");v125=Instance.new(""TextButton"");v126=Instance.new(""UICorner"");v127=Instance.new(""TextButton"");v128=Instance.new(""UICorner"");v129=Instance.new(""TextButton"");v130=Instance.new(""UICorner"");v131=Instance.new(""TextLabel"");v1=13;end if (v1==44) then v45.CornerRadius=UDim.new(0.100000001,0);v45.Parent=v44;v46.Parent=v44;v46.BackgroundColor3=Color3.fromRGB(0,0,0);v46.BackgroundTransparency=0.35;v46.BorderColor3=Color3.fromRGB(0,0,0);v46.BorderSizePixel=0;v46.Position=UDim2.new(0.81284529,0,0,0);v46.Size=UDim2.new(0.187154785,0,1,0);v47.Name=""check"";v1=45;end if (v1==130) then local v874=0;while true do if (v874==0) then v175=nil;function v175()local v1474=0;local v1475;while true do if (v1474==0) then v1475=Instance.new(""LocalScript"",v85);v1475.Parent.MouseButton1Click:Connect(function()local v1595=0;local v1596;while true do if (v1595==0) then v1596=0;while true do if (v1596==0) then v1475.Parent.Parent.TextBox.Value.Value=true;while wait(0.1) do if (v1475.Parent.Parent.TextBox.Value.Value==true) then local v1758=0;local v1759;while true do if (v1758==1) then v1759={[1]=""punch"",[2]=""rightHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1759));v1758=2;end if (v1758==0) then v1759={[1]=""punch"",[2]=""leftHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1759));v1758=1;end if (v1758==2) then pcall(function()local v1797=0;local v1798;local v1799;while true do if (v1797==1) then while true do if (v1798==0) then v1799=0;while true do if (1==v1799) then firetouchinterest(game.Players:WaitForChild(v1475.Parent.Parent.TextBox.Text).Character.Head,game.Players.LocalPlayer.Character.LeftHand,1);break;end if (v1799==0) then firetouchinterest(game.Players:WaitForChild(v1475.Parent.Parent.TextBox.Text).Character.Head,game.Players.LocalPlayer.Character.LeftHand,0);wait();v1799=1;end end break;end end break;end if (v1797==0) then v1798=0;v1799=nil;v1797=1;end end end);break;end end end end break;end end break;end end end);break;end end end coroutine.wrap(v175)();v176=nil;v874=1;end if (v874==2) then coroutine.wrap(v177)();v178=nil;v1=131;break;end if (v874==1) then function v176()local v1476=0;local v1477;local v1478;local v1479;local v1480;while true do if (v1476==0) then v1477=0;v1478=nil;v1476=1;end if (v1476==2) then while true do if (v1477==1) then v1480=nil;while true do if (v1478==0) then local v1690=0;local v1691;while true do if (0==v1690) then v1691=0;while true do if (v1691==1) then v1478=1;break;end if (v1691==0) then v1479=Instance.new(""LocalScript"",v87);v1480=Instance.new(""BoolValue"");v1691=1;end end break;end end end if (v1478==1) then v1480.Value=false;v1480.Parent=v1479.Parent;break;end end break;end if (0==v1477) then v1478=0;v1479=nil;v1477=1;end end break;end if (v1476==1) then v1479=nil;v1480=nil;v1476=2;end end end coroutine.wrap(v176)();v177=nil;function v177()local v1481=0;local v1482;while true do if (v1481==0) then v1482=Instance.new(""LocalScript"",v97);v1482.Parent.MouseButton1Click:Connect(function()if (v1482.Parent.Parent.Frame.check.Visible==false) then local v1629=0;local v1630;while true do if (0==v1629) then v1630=0;while true do if (1==v1630) then v1482.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end if (v1630==0) then local v1743=0;while true do if (v1743==0) then v1482.Parent.Parent.Frame.check.Visible=true;game:GetService(""Players"").LocalPlayer.Backpack.Punch.RequiresHandle=true;v1743=1;end if (v1743==1) then v1630=1;break;end end end end break;end end else local v1631=0;local v1632;while true do if (0==v1631) then v1632=0;while true do if (v1632==0) then v1482.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);game:GetService(""Players"").LocalPlayer.Backpack.Punch.RequiresHandle=false;v1632=1;end if (v1632==1) then wait(0.25);v1482.Parent.Parent.Frame.check.Visible=false;break;end end break;end end end end);break;end end end v874=2;end end end if (v1==13) then v132=Instance.new(""ImageLabel"");v133=Instance.new(""TextButton"");v134=Instance.new(""UICorner"");v135=Instance.new(""TextButton"");v136=Instance.new(""UICorner"");v137=Instance.new(""TextButton"");v138=Instance.new(""UICorner"");v139=Instance.new(""TextButton"");v140=Instance.new(""UICorner"");v141=Instance.new(""TextLabel"");v1=14;end if (v1==66) then v79.Font=Enum.Font.SourceSans;v79.Text="""";v79.TextColor3=Color3.fromRGB(0,0,0);v79.TextSize=14;v80.Name=""whiteframe"";v80.Parent=v9;v80.BackgroundColor3=Color3.fromRGB(255,255,255);v80.BorderColor3=Color3.fromRGB(0,0,0);v80.BorderSizePixel=0;v80.Position=UDim2.new(1.1955346e-7,0,0.022455113,0);v1=67;end if (v1==121) then local v886=0;while true do if (v886==0) then v150.Text=""CONFIRM"";v150.TextColor3=Color3.fromRGB(255,255,255);v150.TextScaled=true;v886=1;end if (v886==2) then v150.TextWrapped=true;v151.CornerRadius=UDim.new(0.100000001,0);v151.Parent=v150;v886=3;end if (v886==1) then v150.TextSize=14;v150.TextStrokeColor3=Color3.fromRGB(255,255,255);v150.TextStrokeTransparency=0;v886=2;end if (3==v886) then v152.Name=""error"";v1=122;break;end end end if (131==v1) then function v178()local v1106=0;local v1107;while true do if (v1106==0) then v1107=Instance.new(""LocalScript"",v82);function updatePlayers()local v1534=0;local v1535;local v1536;while true do if (v1534==1) then for v1605,v1606 in pairs(v1536:GetChildren()) do if v1606:IsA(""Frame"") then v1606:Destroy();end end for v1607,v1608 in pairs(game.Players:GetPlayers()) do if (game.Players.LocalPlayer.Name==v1608.Name) then else local v1661=0;local v1662;local v1663;local v1664;local v1665;local v1666;while true do if (v1661==0) then local v1717=0;while true do if (v1717==0) then v1662=v1535:Clone();v1662.RealName.Text=v1608.DisplayName;v1717=1;end if (2==v1717) then v1661=1;break;end if (v1717==1) then v1662.Parent=v1536;v1662.Name=v1608.Name;v1717=2;end end end if (v1661==1) then v1663=game:GetService(""Players"");v1664=v1536:FindFirstChild(v1608.Name).ImageLabel;v1664.Image=v1663:GetUserThumbnailAsync(v1608.UserId,Enum.ThumbnailType.HeadShot,Enum.ThumbnailSize.Size420x420);v1665={"""",""K"",""M"",""B"",""T"",""Qa"",""Qi"",""Sx"",""Sp"",""No"",""Dc"",""Un"",""Duo"",""Tre"",""Qua"",""Qui"",""Sed"",""Sep"",""Oct"",""Nov"",""V""};v1661=2;end if (v1661==2) then local v1720=0;while true do if (v1720==2) then v1661=3;break;end if (v1720==1) then v1536:FindFirstChild(v1608.Name).durar.Text=""Durability: ""   .. v1666(v1608.Durability.Value,2) ;v1536:FindFirstChild(v1608.Name).TextButton.MouseButton1Click:Connect(function()game.Players.LocalPlayer.PlayerGui.CherifV2.Frame.Frame.KillAuraFrame.TextBox.Text=v1608.Name;end);v1720=2;end if (v1720==0) then v1666=nil;function v1666(v1771,v1772)local v1773=0;local v1774;local v1775;local v1776;local v1777;while true do if (v1773==0) then v1774=0;v1775=nil;v1773=1;end if (2==v1773) then while true do local v1801=0;while true do if (0==v1801) then if (v1774==0) then local v1816=0;while true do if (v1816==1) then v1774=1;break;end if (v1816==0) then local v1820=0;while true do if (v1820==1) then v1816=1;break;end if (v1820==0) then v1775=math.floor(math.log(math.max(1,math.abs(v1771)),1000));v1776=v1665[1 + v1775 ] or (""e+""   .. v1775) ;v1820=1;end end end end end if (v1774==1) then local v1817=0;local v1818;while true do if (v1817==0) then v1818=0;while true do if (0==v1818) then v1777=math.floor(v1771 * ((10^v1772)/(1000^v1775)) )/(10^v1772) ;return (""%.""   .. v1772   .. ""f%s""):format(v1777,v1776);end end break;end end end break;end end end break;end if (v1773==1) then v1776=nil;v1777=nil;v1773=2;end end end v1720=1;end end end if (v1661==3) then v1536:FindFirstChild(v1608.Name).TP.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game.Players:FindFirstChild(v1608.Name).Character.HumanoidRootPart.CFrame;end);break;end end end end break;end if (v1534==0) then v1535=v1107.Parent.UICorner:WaitForChild(""PlayerFrame"");v1536=v1107.Parent:WaitForChild(""PlayerScroller"");v1534=1;end end end v1106=1;end if (v1106==2) then game.Players.PlayerRemoving:Connect(updatePlayers);break;end if (v1106==1) then updatePlayers();game.Players.PlayerAdded:Connect(updatePlayers);v1106=2;end end end coroutine.wrap(v178)();v179=nil;function v179()local v1108=0;local v1109;while true do if (v1108==0) then v1109=Instance.new(""LocalScript"",v103);v1109.Parent.MouseButton1Click:Connect(function()print(game.Players.LocalPlayer.Name);end);break;end end end coroutine.wrap(v179)();v180=nil;function v180()local v1110=0;local v1111;local v1112;local v1113;while true do if (v1110==0) then v1111=0;v1112=nil;v1110=1;end if (1==v1110) then v1113=nil;while true do if (v1111==1) then while true do if (v1112==0) then v1113=Instance.new(""LocalScript"",v105);v1113.Parent.MouseButton1Click:Connect(function()print(game.Players.LocalPlayer.Name);end);break;end end break;end if (v1111==0) then v1112=0;v1113=nil;v1111=1;end end break;end end end coroutine.wrap(v180)();v181=nil;function v181()local v1114=0;local v1115;local v1116;while true do if (v1114==0) then v1115=0;v1116=nil;v1114=1;end if (v1114==1) then while true do if (v1115==0) then v1116=Instance.new(""LocalScript"",v110);v1116.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToMuscleKing.CFrame;end);break;end end break;end end end v1=132;end if (113==v1) then local v887=0;while true do if (1==v887) then v141.Visible=false;v141.Font=Enum.Font.Unknown;v141.Text=""Muscle Legends V2 By Cherif"";v141.TextColor3=Color3.fromRGB(255,41,41);v887=2;end if (v887==2) then v141.TextScaled=true;v141.TextSize=14;v1=114;break;end if (0==v887) then v141.BorderColor3=Color3.fromRGB(0,0,0);v141.BorderSizePixel=0;v141.Position=UDim2.new(0.00195876393,0,0.0681816414,0);v141.Size=UDim2.new(0.829041183,0,0.859522998,0);v887=1;end end end if (v1==37) then v34.Font=Enum.Font.SourceSans;v34.Text="""";v34.TextColor3=Color3.fromRGB(0,0,0);v34.TextSize=14;v35.Name=""checkBox"";v35.Parent=v11;v35.BackgroundColor3=Color3.fromRGB(0,0,0);v35.BackgroundTransparency=0.45;v35.BorderColor3=Color3.fromRGB(0,0,0);v35.BorderSizePixel=0;v1=38;end if (v1==118) then v146.TextColor3=Color3.fromRGB(225,225,225);v146.TextScaled=true;v146.TextSize=14;v146.TextStrokeTransparency=0.7;v146.TextWrapped=true;v147.CornerRadius=UDim.new(0.200000003,0);v147.Parent=v146;v148.Parent=v142;v148.BackgroundColor3=Color3.fromRGB(216,0,0);v148.BorderColor3=Color3.fromRGB(0,0,0);v1=119;end if (v1==67) then v80.Size=UDim2.new(1,0,0.00499999989,0);v80.ZIndex=200;v81.Name=""whiteframe"";v81.Parent=v9;v81.BackgroundColor3=Color3.fromRGB(255,255,255);v81.BorderColor3=Color3.fromRGB(0,0,0);v81.BorderSizePixel=0;v81.Position=UDim2.new(1.1955346e-7,0,0.99359411,0);v81.Size=UDim2.new(1,0,0.00499999989,0);v82.Name=""KillAuraFrame"";v1=68;end if (v1==128) then local v919=0;while true do if (1==v919) then coroutine.wrap(v169)();v170=nil;function v170()local v1483=0;local v1484;while true do if (v1483==0) then v1484=Instance.new(""LocalScript"",v79);v1484.Parent.MouseButton1Click:Connect(function()if (v1484.Parent.Parent.Frame.check.Visible==false) then local v1633=0;while true do if (v1633==0) then v1484.Parent.Parent.Frame.check.Visible=true;v1484.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end else local v1634=0;while true do if (0==v1634) then v1484.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);wait(0.25);v1634=1;end if (v1634==1) then v1484.Parent.Parent.Frame.check.Visible=false;break;end end end end);break;end end end coroutine.wrap(v170)();v919=2;end if (v919==2) then v171=nil;function v171()local v1485=Instance.new(""LocalScript"",v79);while wait() do if (v1485.Parent.Parent.Frame.check.Visible==true) then local v1565=0;local v1566;local v1567;while true do if (v1565==1) then while true do if (v1566==0) then v1567={[1]=""changeSize"",[2]=2};game:GetService(""ReplicatedStorage"").rEvents.changeSpeedSizeRemote:InvokeServer(unpack(v1567));break;end end break;end if (v1565==0) then v1566=0;v1567=nil;v1565=1;end end else end end end v1=129;break;end if (v919==0) then function v168()local v1486=0;local v1487;local v1488;local v1489;while true do if (v1486==0) then v1487=0;v1488=nil;v1486=1;end if (v1486==1) then v1489=nil;while true do if (v1487==0) then local v1635=0;while true do if (v1635==1) then v1487=1;break;end if (v1635==0) then v1488=0;v1489=nil;v1635=1;end end end if (v1487==1) then while true do if (v1488==0) then v1489=Instance.new(""LocalScript"",v70);v1489.Parent.MouseButton1Click:Connect(function()if (v1489.Parent.Parent.Frame.check.Visible==false) then local v1746=0;local v1747;while true do if (v1746==0) then v1747=0;while true do if (v1747==0) then v1489.Parent.Parent.Frame.check.Visible=true;v1489.Parent.Parent.Frame.check:TweenSize(UDim2.new(0.8,0,0.8,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);break;end end break;end end else local v1748=0;local v1749;local v1750;while true do if (v1748==1) then while true do if (v1749==0) then v1750=0;while true do if (v1750==0) then local v1808=0;while true do if (v1808==1) then v1750=1;break;end if (0==v1808) then local v1819=0;while true do if (v1819==1) then v1808=1;break;end if (v1819==0) then v1489.Parent.Parent.Frame.check:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.07,true);wait(0.25);v1819=1;end end end end end if (1==v1750) then v1489.Parent.Parent.Frame.check.Visible=false;break;end end break;end end break;end if (v1748==0) then v1749=0;v1750=nil;v1748=1;end end end end);break;end end break;end end break;end end end coroutine.wrap(v168)();v169=nil;function v169()local v1490=0;local v1491;local v1492;while true do if (v1490==0) then v1491=0;v1492=nil;v1490=1;end if (v1490==1) then while true do if (v1491==0) then v1492=Instance.new(""LocalScript"",v70);while wait() do if (v1492.Parent.Parent.Frame.check.Visible==true) then local v1697=0;local v1698;local v1699;while true do if (v1697==1) then while true do if (v1698==1) then v1699={[1]=""punch"",[2]=""rightHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1699));break;end if (v1698==0) then local v1781=0;local v1782;while true do if (v1781==0) then v1782=0;while true do if (v1782==1) then v1698=1;break;end if (v1782==0) then v1699={[1]=""punch"",[2]=""leftHand""};game:GetService(""Players"").LocalPlayer.muscleEvent:FireServer(unpack(v1699));v1782=1;end end break;end end end end break;end if (v1697==0) then v1698=0;v1699=nil;v1697=1;end end else end end break;end end break;end end end v919=1;end end end if (v1==1) then v12=Instance.new(""TextBox"");v13=Instance.new(""UICorner"");v14=Instance.new(""TextButton"");v15=Instance.new(""UICorner"");v16=Instance.new(""TextBox"");v17=Instance.new(""UICorner"");v18=Instance.new(""TextButton"");v19=Instance.new(""UICorner"");v20=Instance.new(""TextButton"");v21=Instance.new(""UICorner"");v1=2;end if (20==v1) then v9.BorderSizePixel=0;v9.Position=UDim2.new(0,0,0.859522998,0);v9.Size=UDim2.new(1,0,5.56984186,0);v9.ZIndex=0;v10.CornerRadius=UDim.new(0.0199999996,0);v10.Parent=v9;v11.Name=""PlayerFrame"";v11.Parent=v9;v11.BackgroundColor3=Color3.fromRGB(255,255,255);v11.BackgroundTransparency=1;v1=21;end if (v1==71) then local v930=0;while true do if (v930==3) then v87.BorderColor3=Color3.fromRGB(0,0,0);v1=72;break;end if (0==v930) then v85.TextColor3=Color3.fromRGB(255,255,255);v85.TextScaled=true;v85.TextSize=14;v930=1;end if (v930==1) then v85.TextWrapped=true;v86.CornerRadius=UDim.new(0.100000001,0);v86.Parent=v85;v930=2;end if (v930==2) then v87.Parent=v82;v87.BackgroundColor3=Color3.fromRGB(0,0,0);v87.BackgroundTransparency=0.45;v930=3;end end end if (v1==78) then local v931=0;while true do if (v931==1) then v97.Size=UDim2.new(1,0,1,0);v97.Font=Enum.Font.SourceSans;v97.Text="""";v97.TextColor3=Color3.fromRGB(0,0,0);v931=2;end if (v931==2) then v97.TextSize=14;v98.Name=""PlayerScroller"";v1=79;break;end if (v931==0) then v97.BackgroundColor3=Color3.fromRGB(255,255,255);v97.BackgroundTransparency=1;v97.BorderColor3=Color3.fromRGB(0,0,0);v97.BorderSizePixel=0;v931=1;end end end if (v1==95) then local v932=0;while true do if (v932==1) then v118.TextScaled=true;v118.TextSize=14;v118.TextWrapped=true;v932=2;end if (v932==0) then v118.Font=Enum.Font.SourceSans;v118.Text=""Frost Gym"";v118.TextColor3=Color3.fromRGB(255,255,255);v932=1;end if (3==v932) then v120.BackgroundColor3=Color3.fromRGB(163,255,156);v1=96;break;end if (v932==2) then v119.CornerRadius=UDim.new(0.300000012,0);v119.Parent=v118;v120.Parent=v109;v932=3;end end end if (v1==109) then local v933=0;while true do if (v933==3) then v137.BorderColor3=Color3.fromRGB(0,0,0);v1=110;break;end if (2==v933) then v137.Parent=v3;v137.BackgroundColor3=Color3.fromRGB(0,0,0);v137.BackgroundTransparency=0.6;v933=3;end if (v933==0) then v135.TextScaled=true;v135.TextSize=14;v135.TextWrapped=true;v933=1;end if (v933==1) then v136.CornerRadius=UDim.new(0.100000001,0);v136.Parent=v135;v137.Name=""Teleport"";v933=2;end end end if (v1==76) then v94.BorderColor3=Color3.fromRGB(0,0,0);v94.BorderSizePixel=0;v94.Size=UDim2.new(1,0,1,0);v94.Image=""rbxassetid://15069805111"";v95.CornerRadius=UDim.new(0.100000001,0);v95.Parent=v91;v96.Parent=v89;v96.BackgroundColor3=Color3.fromRGB(255,255,255);v96.BackgroundTransparency=1;v96.BorderColor3=Color3.fromRGB(0,0,0);v1=77;end if (v1==64) then local v944=0;while true do if (v944==1) then v78.BackgroundTransparency=1;v78.BorderColor3=Color3.fromRGB(0,0,0);v78.BorderSizePixel=0;v944=2;end if (v944==3) then v78.Text=""Auto Size 2"";v1=65;break;end if (v944==2) then v78.Position=UDim2.new( -1.4256362e-7,0,0,0);v78.Size=UDim2.new(0.81284517,0,1,0);v78.Font=Enum.Font.GothamBold;v944=3;end if (v944==0) then v77.Parent=v73;v78.Parent=v71;v78.BackgroundColor3=Color3.fromRGB(255,255,255);v944=1;end end end if (33==v1) then v28.BorderSizePixel=0;v28.Position=UDim2.new(0.81284529,0,0,0);v28.Size=UDim2.new(0.187154785,0,1,0);v29.Name=""check"";v29.Parent=v28;v29.BackgroundColor3=Color3.fromRGB(73,140,14);v29.BorderColor3=Color3.fromRGB(0,0,0);v29.BorderSizePixel=0;v29.Position=UDim2.new(0.0998430178,0,0.0799843967,0);v29.Visible=false;v1=34;end if (v1==28) then v20.TextColor3=Color3.fromRGB(255,255,255);v20.TextScaled=true;v20.TextSize=14;v20.TextWrapped=true;v21.CornerRadius=UDim.new(0.200000003,0);v21.Parent=v20;v22.Name=""jump"";v22.Parent=v11;v22.BackgroundColor3=Color3.fromRGB(0,0,0);v22.BackgroundTransparency=0.45;v1=29;end if (v1==104) then local v965=0;while true do if (v965==2) then v131.Text=""Loading..."";v131.TextColor3=Color3.fromRGB(208,11,11);v1=105;break;end if (v965==0) then v131.Parent=v122;v131.BackgroundColor3=Color3.fromRGB(255,255,255);v131.BackgroundTransparency=1;v131.BorderColor3=Color3.fromRGB(0,0,0);v965=1;end if (v965==1) then v131.BorderSizePixel=0;v131.Position=UDim2.new(0,0,0.816083193,0);v131.Size=UDim2.new(1,0,0.183916822,0);v131.Font=Enum.Font.SourceSans;v965=2;end end end if (v1==124) then local v966=0;while true do if (v966==2) then coroutine.wrap(v157)();v158=nil;v1=125;break;end if (v966==1) then function v156()local v1493=0;local v1494;local v1495;while true do if (v1493==0) then local v1568=0;while true do if (v1568==1) then v1493=1;break;end if (0==v1568) then v1494=0;v1495=nil;v1568=1;end end end if (v1493==1) then while true do if (v1494==1) then v1495.Parent.MouseLeave:Connect(function()v1495.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);break;end if (v1494==0) then v1495=Instance.new(""LocalScript"",v7);v1495.Parent.MouseEnter:Connect(function()v1495.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1494=1;end end break;end end end coroutine.wrap(v156)();v157=nil;function v157()local v1496=0;local v1497;local v1498;while true do if (v1496==1) then v1498.Parent=v1497.Parent;v1497.Parent.MouseButton1Click:Connect(function()local v1599=0;local v1600;while true do if (v1599==0) then v1600=0;while true do if (v1600==0) then v1497.Parent.Value.Value=v1497.Parent.Parent.jump.Text;game.Players.LocalPlayer.Character.Humanoid.JumpPower=v1497.Parent.Value.Value;break;end end break;end end end);break;end if (v1496==0) then v1497=Instance.new(""LocalScript"",v14);v1498=Instance.new(""NumberValue"");v1496=1;end end end v966=2;end if (v966==0) then v155=nil;function v155()local v1499=0;local v1500;local v1501;while true do if (v1499==0) then v1500=0;v1501=nil;v1499=1;end if (v1499==1) then while true do if (v1500==0) then v1501=Instance.new(""LocalScript"",v7);v1501.Parent.MouseButton1Click:Connect(function()if (v1501.Parent.Parent.Frame.Visible==false) then local v1700=0;while true do if (3==v1700) then v1501.Parent.Parent.Frame:TweenSize(UDim2.new(1,0,5.57,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true);break;end if (v1700==1) then v1501.Parent.Parent.killaura.Visible=true;v1501.Parent.Parent.player.Visible=true;v1700=2;end if (2==v1700) then v1501.Parent.Parent.Other.Visible=true;v1501.Parent.Parent.TextLabel.Visible=false;v1700=3;end if (v1700==0) then v1501.Parent.Parent.Frame.Visible=true;v1501.Parent.Parent.Teleport.Visible=true;v1700=1;end end else local v1701=0;local v1702;while true do if (0==v1701) then v1702=0;while true do if (v1702==1) then local v1783=0;while true do if (0==v1783) then local v1803=0;while true do if (v1803==0) then v1501.Parent.Parent.player.Visible=false;v1501.Parent.Parent.Other.Visible=false;v1803=1;end if (1==v1803) then v1783=1;break;end end end if (v1783==1) then v1702=2;break;end end end if (v1702==3) then wait(0.25);v1501.Parent.Parent.Frame.Visible=false;break;end if (v1702==0) then local v1785=0;while true do if (v1785==1) then v1702=1;break;end if (0==v1785) then v1501.Parent.Parent.Teleport.Visible=false;v1501.Parent.Parent.killaura.Visible=false;v1785=1;end end end if (v1702==2) then local v1786=0;local v1787;while true do if (v1786==0) then v1787=0;while true do if (v1787==0) then v1501.Parent.Parent.TextLabel.Visible=true;v1501.Parent.Parent.Frame:TweenSize(UDim2.new(1,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true);v1787=1;end if (v1787==1) then v1702=3;break;end end break;end end end end break;end end end end);break;end end break;end end end coroutine.wrap(v155)();v156=nil;v966=1;end end end if (0==v1) then v2=Instance.new(""ScreenGui"");v3=Instance.new(""Frame"");v4=Instance.new(""UICorner"");v5=Instance.new(""TextButton"");v6=Instance.new(""UICorner"");v7=Instance.new(""TextButton"");v8=Instance.new(""UICorner"");v9=Instance.new(""Frame"");v10=Instance.new(""UICorner"");v11=Instance.new(""Frame"");v1=1;end if (v1==137) then local v967=0;while true do if (v967==3) then function v201()local v1502=Instance.new(""LocalScript"",v150);v1502.Parent.MouseButton1Click:Connect(function()if (v1502.Parent.Parent.TextBox.Text==game:HttpGet(""https://pastebin.com/raw/DiGCTFrw"")) then local v1571=0;local v1572;while true do if (0==v1571) then v1572=0;while true do if (v1572==0) then v1502.Parent.Parent.Parent.Frame.Visible=true;v1502.Parent.Parent.Visible=false;break;end end break;end end else local v1573=0;while true do if (v1573==1) then v1502.Parent.Parent.error.Text="""";break;end if (v1573==0) then v1502.Parent.Parent.error.Text=""Password Error!"";wait(2);v1573=1;end end end end);end v1=138;break;end if (v967==0) then function v198()local v1503=0;local v1504;local v1505;local v1506;while true do if (v1503==3) then v1504.Parent.MouseButton1Click:Connect(function()local v1601=0;local v1602;while true do if (0==v1601) then v1602=0;while true do if (v1602==0) then local v1724=0;while true do if (v1724==0) then local v1766=0;while true do if (v1766==1) then v1724=1;break;end if (v1766==0) then v1504.Parent.Parent.Frame.Other.Damage.Text=""Damage: ""   .. v1506(game.Players.LocalPlayer.leaderstats.Strength.Value/15 ,2) ;v1504.Parent.Parent.Frame.KillAuraFrame.Visible=false;v1766=1;end end end if (v1724==1) then v1602=1;break;end end end if (v1602==2) then v1504.Parent.Parent.Frame.Teleports.Visible=false;break;end if (1==v1602) then v1504.Parent.Parent.Frame.PlayerFrame.Visible=false;v1504.Parent.Parent.Frame.Other.Visible=true;v1602=2;end end break;end end end);break;end if (v1503==2) then local v1574=0;while true do if (v1574==0) then v1506=nil;function v1506(v1669,v1670)local v1671=0;local v1672;local v1673;local v1674;local v1675;while true do if (2==v1671) then while true do local v1732=0;while true do if (v1732==0) then if (v1672==0) then v1673=math.floor(math.log(math.max(1,math.abs(v1669)),1000));v1674=v1505[1 + v1673 ] or (""e+""   .. v1673) ;v1672=1;end if (v1672==1) then v1675=math.floor(v1669 * ((10^v1670)/(1000^v1673)) )/(10^v1670) ;return (""%.""   .. v1670   .. ""f%s""):format(v1675,v1674);end break;end end end break;end if (v1671==0) then v1672=0;v1673=nil;v1671=1;end if (v1671==1) then v1674=nil;v1675=nil;v1671=2;end end end v1574=1;end if (v1574==1) then v1503=3;break;end end end if (v1503==0) then v1504=Instance.new(""LocalScript"",v139);v1504.Parent.MouseEnter:Connect(function()v1504.Parent.BackgroundColor3=Color3.fromHSV(0.654333,0.764157,0.415686);end);v1503=1;end if (v1503==1) then v1504.Parent.MouseLeave:Connect(function()v1504.Parent.BackgroundColor3=Color3.fromHSV(0,0,0);end);v1505={"""",""K"",""M"",""B"",""T"",""Qa"",""Qi"",""Sx"",""Sp"",""No"",""Dc"",""Un"",""Duo"",""Tre"",""Qua"",""Qui"",""Sed"",""Sep"",""Oct"",""Nov"",""V""};v1503=2;end end end coroutine.wrap(v198)();v199=nil;v967=1;end if (v967==2) then function v200()local v1507=0;local v1508;while true do if (v1507==0) then v1508=Instance.new(""LocalScript"",v148);v1508.Parent.MouseButton1Click:Connect(function()v1508.Parent.Parent.Parent:Destroy();end);break;end end end coroutine.wrap(v200)();v201=nil;v967=3;end if (v967==1) then function v199()local v1509=0;local v1510;while true do if (v1509==1) then v1510.Parent.ResetOnSpawn=false;v1510.Parent.Frame.Draggable=true;break;end if (0==v1509) then v1510=Instance.new(""LocalScript"",v2);wait(0.1);v1509=1;end end end coroutine.wrap(v199)();v200=nil;v967=2;end end end if (v1==122) then v152.Parent=v142;v152.BackgroundColor3=Color3.fromRGB(255,255,255);v152.BackgroundTransparency=1;v152.BorderColor3=Color3.fromRGB(0,0,0);v152.BorderSizePixel=0;v152.Position=UDim2.new(0,0,0.578616321,0);v152.Size=UDim2.new(1,0,0.166666746,0);v152.Font=Enum.Font.SourceSansBold;v152.Text="""";v152.TextColor3=Color3.fromRGB(157,15,15);v1=123;end if (v1==100) then v125.BorderSizePixel=0;v125.Position=UDim2.new(0.511960387,0,0.0764447898,0);v125.Size=UDim2.new(0.40427047,0,0.139032245,0);v125.Font=Enum.Font.SourceSans;v125.Text=""Legends Rock (Off)"";v125.TextColor3=Color3.fromRGB(255,255,255);v125.TextScaled=true;v125.TextSize=14;v125.TextWrapped=true;v126.CornerRadius=UDim.new(0.300000012,0);v1=101;end if (v1==38) then v35.Position=UDim2.new(0.548453689,0,0.0652866513,0);v35.Size=UDim2.new(0.419298649,0,0.153045446,0);v36.CornerRadius=UDim.new(0.100000001,0);v36.Parent=v35;v37.Parent=v35;v37.BackgroundColor3=Color3.fromRGB(0,0,0);v37.BackgroundTransparency=0.35;v37.BorderColor3=Color3.fromRGB(0,0,0);v37.BorderSizePixel=0;v37.Position=UDim2.new(0.81284529,0,0,0);v1=39;end if (v1==81) then v102.BackgroundTransparency=0.95;v102.BorderColor3=Color3.fromRGB(0,0,0);v102.BorderSizePixel=0;v102.Position=UDim2.new(0.0421644114,0,0,0);v102.Size=UDim2.new(0.357092708,0,1,0);v102.Font=Enum.Font.SourceSans;v102.Text=""Player"";v102.TextColor3=Color3.fromRGB(255,255,255);v102.TextScaled=true;v102.TextSize=14;v1=82;end if (v1==21) then local v1011=0;while true do if (v1011==2) then v12.Position=UDim2.new(0.0155339809,0,0.077527903,0);v12.Size=UDim2.new(0.223300964,0,0.13495183,0);v1=22;break;end if (v1011==0) then v11.BorderColor3=Color3.fromRGB(0,0,0);v11.BorderSizePixel=0;v11.Size=UDim2.new(1,0,1,0);v12.Parent=v11;v1011=1;end if (v1011==1) then v12.BackgroundColor3=Color3.fromRGB(0,0,0);v12.BackgroundTransparency=0.45;v12.BorderColor3=Color3.fromRGB(0,0,0);v12.BorderSizePixel=0;v1011=2;end end end if (v1==30) then v23.CornerRadius=UDim.new(0.0700000003,0);v23.Parent=v22;v24.Parent=v11;v24.BackgroundColor3=Color3.fromRGB(85,85,85);v24.BorderColor3=Color3.fromRGB(0,0,0);v24.BorderSizePixel=0;v24.Position=UDim2.new(0.0154338134,0,0.595740736,0);v24.Size=UDim2.new(0.417575955,0,0.122710586,0);v24.Font=Enum.Font.SourceSans;v24.Text=""Reset"";v1=31;end if (v1==4) then v42=Instance.new(""TextLabel"");v43=Instance.new(""TextButton"");v44=Instance.new(""Frame"");v45=Instance.new(""UICorner"");v46=Instance.new(""Frame"");v47=Instance.new(""Frame"");v48=Instance.new(""UICorner"");v49=Instance.new(""ImageLabel"");v50=Instance.new(""UICorner"");v51=Instance.new(""TextLabel"");v1=5;end if (v1==133) then local v1023=0;while true do if (v1023==3) then v188=nil;v1=134;break;end if (v1023==2) then v187=nil;function v187()local v1511=Instance.new(""LocalScript"",v123);local v1512=Instance.new(""BoolValue"");v1512.Value=false;v1512.Parent=v1511.Parent;v1511.Parent.MouseButton1Click:Connect(function()if (v1511.Parent.Value.Value==true) then local v1577=0;while true do if (v1577==0) then v1511.Parent.Value.Value=false;v1511.Parent.Text=""Muscle King Rock (Off)"";break;end end else local v1578=0;while true do if (v1578==0) then v1511.Parent.Text=""Muscle King Rock (On)"";v1511.Parent.Value.Value=true;break;end end end end);end coroutine.wrap(v187)();v1023=3;end if (v1023==1) then v186=nil;function v186()local v1516=0;local v1517;local v1518;while true do if (v1516==0) then v1517=0;v1518=nil;v1516=1;end if (v1516==1) then while true do if (0==v1517) then v1518=Instance.new(""LocalScript"",v120);v1518.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToTinyIsland.CFrame;end);break;end end break;end end end coroutine.wrap(v186)();v1023=2;end if (v1023==0) then v185=nil;function v185()local v1519=0;local v1520;local v1521;local v1522;while true do if (v1519==1) then v1522=nil;while true do if (v1520==1) then while true do if (v1521==0) then v1522=Instance.new(""LocalScript"",v118);v1522.Parent.MouseButton1Click:Connect(function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game:GetService(""Workspace"").areaTeleportParts.beachToFrostGym.CFrame;end);break;end end break;end if (v1520==0) then local v1642=0;while true do if (v1642==0) then v1521=0;v1522=nil;v1642=1;end if (v1642==1) then v1520=1;break;end end end end break;end if (v1519==0) then v1520=0;v1521=nil;v1519=1;end end end coroutine.wrap(v185)();v1023=1;end end end if (v1==92) then local v1024=0;while true do if (0==v1024) then v114.Font=Enum.Font.SourceSans;v114.Text=""Eternal Gym"";v114.TextColor3=Color3.fromRGB(255,255,255);v114.TextScaled=true;v1024=1;end if (v1024==1) then v114.TextSize=14;v114.TextWrapped=true;v115.CornerRadius=UDim.new(0.300000012,0);v115.Parent=v114;v1024=2;end if (v1024==2) then v116.Parent=v109;v116.BackgroundColor3=Color3.fromRGB(162,0,255);v1=93;break;end end end if (138==v1) then coroutine.wrap(v201)();break;end if (v1==84) then local v1025=0;while true do if (2==v1025) then v105.TextSize=14;v105.TextStrokeTransparency=0.7;v1=85;break;end if (v1025==0) then v105.BorderColor3=Color3.fromRGB(0,0,0);v105.BorderSizePixel=0;v105.Position=UDim2.new(0.648020208,0, -0.0466673113,0);v105.Size=UDim2.new(0.162,0,1,0);v1025=1;end if (v1025==1) then v105.Font=Enum.Font.SourceSans;v105.Text=""Teleport"";v105.TextColor3=Color3.fromRGB(255,255,255);v105.TextScaled=true;v1025=2;end end end if (v1==50) then local v1026=0;while true do if (1==v1026) then v55.BorderColor3=Color3.fromRGB(0,0,0);v55.BorderSizePixel=0;v55.Position=UDim2.new(0.81284529,0,0,0);v1026=2;end if (2==v1026) then v55.Size=UDim2.new(0.187154785,0,1,0);v56.Name=""check"";v56.Parent=v55;v1026=3;end if (v1026==3) then v56.BackgroundColor3=Color3.fromRGB(73,140,14);v1=51;break;end if (v1026==0) then v55.Parent=v53;v55.BackgroundColor3=Color3.fromRGB(0,0,0);v55.BackgroundTransparency=0.35;v1026=1;end end end if (v1==74) then v90.Parent=v89;v91.Parent=v89;v91.BackgroundColor3=Color3.fromRGB(0,0,0);v91.BackgroundTransparency=0.35;v91.BorderColor3=Color3.fromRGB(0,0,0);v91.BorderSizePixel=0;v91.Position=UDim2.new(0.81284529,0,0,0);v91.Size=UDim2.new(0.187154785,0,1,0);v92.Name=""check"";v92.Parent=v91;v1=75;end if (96==v1) then v120.BackgroundTransparency=0.4;v120.BorderColor3=Color3.fromRGB(0,0,0);v120.BorderSizePixel=0;v120.Position=UDim2.new(0.160999998,0,0.814999998,0);v120.Size=UDim2.new(0.676803946,0,0.130871415,0);v120.Font=Enum.Font.SourceSans;v120.Text=""Tiny Island"";v120.TextColor3=Color3.fromRGB(255,255,255);v120.TextScaled=true;v120.TextSize=14;v1=97;end end break;end if (v0==1) then v10=nil;v11=nil;v12=nil;v13=nil;v14=nil;v15=nil;v16=nil;v17=nil;v18=nil;v0=2;end if (v0==19) then v172=nil;v173=nil;v174=nil;v175=nil;v176=nil;v177=nil;v178=nil;v179=nil;v180=nil;v0=20;end if (v0==17) then v154=nil;v155=nil;v156=nil;v157=nil;v158=nil;v159=nil;v160=nil;v161=nil;v162=nil;v0=18;end if (v0==3) then v28=nil;v29=nil;v30=nil;v31=nil;v32=nil;v33=nil;v34=nil;v35=nil;v36=nil;v0=4;end if (14==v0) then v127=nil;v128=nil;v129=nil;v130=nil;v131=nil;v132=nil;v133=nil;v134=nil;v135=nil;v0=15;end end end"
AAe2tQf3,lab3_pmd,Bobita,Z80 Assembler,Thursday 9th of November 2023 07:32:37 AM CDT,"dosseg             ; Tells the assembler to use the DOS segment addressing mode
.model small       
.stack 100h        
.data            
    MESAJ_1 DB 'Introdu caracterul: $'
    MESAJ_2 DB 0DH, 0AH, 'Caracterul dupa transfomare este: $'
    CARACTER DB ?, '$'
.code              

convert_to_uppercase proc
MOV AX, @DATA 
    MOV DS, AX 

    LEA DX, MESAJ_1
    MOV AH, 9
    INT 21H

    MOV AH, 1
    INT 21H

    MOV BL, AL
    
    LEA DX, MESAJ_2 
    MOV AH, 9 
    INT 21H  

    SUB BL, 20H 

    MOV AH, 2 
    MOV DL, BL
    INT 21H  

    MOV AH, 4CH 
    INT 21H
endp

convert_to_lowercase proc 
MOV AX, @DATA 
    MOV DS, AX 

    LEA DX, MESAJ_1
    MOV AH, 9
    INT 21H

    MOV AH, 1
    INT 21H

    MOV BL, AL
    
    LEA DX, MESAJ_2 
    MOV AH, 9 
    INT 21H  

    ADD BL, 20H 

    MOV AH, 2 
    MOV DL, BL
    INT 21H  

    MOV AH, 4CH 
    INT 21H
endp 

main proc 
    CALL convert_to_uppercase
    ;CALL convert_to_lowercase
    ; IESIREA DIN PROGRAM ca sa nu dureze o eternitate..
    MOV AH, 4CH 
    INT 21H
main endp 
end main"
DiGCTFrw,PasswordScript,yassineyassine2005,Lua,Thursday 9th of November 2023 07:31:13 AM CDT,CherifV2
cHY5mgUy,01. Guinea Pig,Spocoman,Python,Thursday 9th of November 2023 07:19:15 AM CDT,"food = float(input())
hay = float(input())
cover = float(input())
weight = float(input())

for i in range(1, 31):
    food -= 0.3
    if i % 2 == 0:
        hay -= food * 0.05
    if i % 3 == 0:
        cover -= weight / 3

if food < 0 or hay < 0 or cover < 0:
    print(""Merry must go to the pet store!"")
else:
    print(f""Everything is fine! Puppy is happy! Food: {food:.2f}, Hay: {hay:.2f}, Cover: {cover:.2f}."")
"
Mf8pnt2h,Untitled,atesdal,C++,Thursday 9th of November 2023 07:07:56 AM CDT,"template<typename T, typename SetFunc, typename SetFuncParam>
struct TempSetting
{
  TempSetting(T* attr, SetFunc f, SetFuncParam init, SetFuncParam end)
    : m_attr(attr)
    , m_func(f)
    , m_init(init)
    , m_end(end)
  {
    ((*m_attr).*m_func)(m_init);
  }

  ~TempSetting() 
  { 
    ((*m_attr).*m_func)(m_end);
  }

private:
  T* m_attr{ nullptr };
  SetFunc m_func;
  SetFuncParam m_init, m_end;
};"
9kjSG66b,Untitled,kwest87,C#,Thursday 9th of November 2023 07:05:29 AM CDT,"[StartCode]
using System;

namespace ConsoleApp31
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string MenuHit = ""1"";
            const string MenuRage = ""2"";
            const string MenuMadness = ""3"";
            const string MenuSpray = ""4"";

            Random random = new Random();
            int trollRage = 100;
            int trollMadness = 200;
            int trollSpray = 100;
            int trollHealth = 1500;
            int trollDamage = 100;
            int bossHealth = 2000;
            int bossDamage = 100;
            int durationSpray = 3;
            int durationRage = 3;
            int durationMadness = 1;
            int durationDamage = 1;
            int countdounDamage = 0;
            int countdounSpray = 0;
            int countdounRage = 0;
            int countdounMadness = 0;
            int doubleDamage = 2;
            string menuInput;

            while (bossHealth > 0 && trollHealth > 0)
            {
                Console.WriteLine(""Вы троль рукопашник и в вашем арсенали 4 приема :"" +
                    ""\n 1) Удар по роже - наносит урон."" +
                    ""\n 2) Ярость берсерка - отнимет 100хп владельца , но следующие 3 атаки двойной урон."" +
                    ""\n 3) Безумие берсерка (только при ярости берсерка) - отнимает 200хп владельца а весь урон удваивается ."" +
                    ""\n 4) Распылить споры - восстанавливает 100 хп и отравляет врага на 5 ходов."");
                Console.WriteLine($""Ваше здоровье - {trollHealth}\nЗдоровье босса - {bossHealth}"");
                Console.WriteLine(""Ваши действия:"");
                menuInput = Console.ReadLine();

                if (countdounSpray > 0)
                {
                    bossHealth -= trollSpray;
                    countdounSpray--;
                    Console.WriteLine($""Споры отняли у босса {trollSpray} жизней , действует еще {countdounSpray} ходов."");
                }
                switch (menuInput)
                {
                    case MenuHit:
                        Console.WriteLine(""Вы выбрали удар по роже."");
                        trollHealth -= bossDamage;
                        countdounDamage = durationDamage;
                        break;

                    case MenuRage:
                        trollHealth -= bossDamage + trollRage;
                        countdounRage = durationRage;
                        countdounDamage = durationDamage;
                        Console.WriteLine($""Вы впали в ярость берсерка на 3 хода отняв себе {trollRage} здоровья."");
                        break;

                    case MenuMadness:
                        Console.WriteLine($""Вы впадаете в безумие отняв себе {trollMadness} здоровья."");
                        trollHealth -= bossDamage + trollMadness;
                        countdounMadness = durationMadness;
                        break;

                    case MenuSpray:
                        Console.WriteLine(""Вы выбрали пустить споры."");
                        trollHealth -= bossDamage - trollSpray;
                        countdounSpray = durationSpray;
                        Console.WriteLine($""Вы пустили споры восстановив себе {trollSpray} здоровья."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                        break;
                }
                if (countdounDamage > 0)
                {
                    if (countdounRage > 0)
                    {
                        bossHealth -= trollDamage * doubleDamage;
                        countdounRage--;
                        Console.WriteLine($""Вы ударили в состоянии ярости берсерка, действует {countdounRage} хода."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                    }
                    else if (countdounRage <= 0)
                    {
                        bossHealth -= trollDamage;
                        Console.WriteLine($""Вы ударили на {trollDamage} урона."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                    }
                }
                if (countdounMadness > 0 && countdounRage > 0)
                {
                    countdounRage--;
                    countdounMadness = 0;
                    bossHealth -= trollDamage * doubleDamage * doubleDamage;
                }
                else if (countdounMadness > 0 && countdounRage <= 0)
                {
                    Console.WriteLine(""Без ярости , безумие не наступает."");
                    countdounMadness = 0;
                    countdounRage = 0;
                    Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                }

                Console.ReadKey();
                countdounDamage = 0;
            }
            if (bossHealth <= 0 && trollHealth > 0)
            {
                Console.WriteLine(""Троль победил."");
            }
            else if (bossHealth > 0 && trollHealth <= 0)
            {
                Console.WriteLine(""Босс победил"");
            }
            else
            {
                Console.WriteLine(""Произошла ничья."");
            }
        }
    }
}
[EndCode]"
ajTWuaQB,Machine Learning II - exercise 3 - GBM_XGBM_LightGBM_CatBoost_Final,Nam_Hoang_Waw,Python,Thursday 9th of November 2023 07:03:08 AM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Wed Nov  8 19:20:49 2023

@author: Lenovo
""""""

from ucimlrepo import fetch_ucirepo
import matplotlib.pyplot as plt
import warnings
from sklearn.model_selection import train_test_split
import pandas as pd
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import mutual_info_classif
import numpy as np
from skfeature.function.similarity_based import fisher_score
from  sklearn.ensemble import RandomForestClassifier as rfc
from sklearn.feature_selection import RFECV
import sklearn
from sklearn.feature_selection import RFE
from collections import Counter
from catboost import CatBoostClassifier
from sklearn.pipeline import make_pipeline
from sklearn.ensemble import GradientBoostingClassifier, HistGradientBoostingClassifier
from xgboost import XGBClassifier
from lightgbm import LGBMClassifier
from sklearn.model_selection import cross_val_score
from sklearn.metrics import accuracy_score, precision_score, f1_score, recall_score
import optuna
import functools
from imblearn.over_sampling import SMOTE



wine_quality = fetch_ucirepo(id=186)
  
# data (as pandas dataframes) 
x = wine_quality.data.features
y = wine_quality.data.targets

# Checking for null values
x.isnull().values.any()
y.isnull().values.any()

y.hist(bins=25,figsize=(10,10))
# Look like we have only observation starting from 3
# There are not many observations for quality 3 and 9.

df = pd.concat([x, y], axis=1)


# Let assume that wine with quality > 7 is regarded as high quality and anything between 5 and 6 is regarded as medium quality and below 5 is regarded as low quality
# We then group the target data into 3 groups:
    
df['quality_class'] = 0  # Initialize all values to 1 corresponding to low quality

# Let group wine quality into 3 groups: high, medium and low as follows:
df.loc[df['quality'] > 7, 'quality_class'] = 2 # high quality
df.loc[(df['quality'] >= 5) & (df['quality'] <= 6), 'quality_class'] = 1 # medium quality
df['quality_class'].unique()

df.drop('quality', inplace = True, axis = 1)

# we split data
X_train, X_test, y_train, y_test = train_test_split(df.drop(['quality_class'], axis = 1), df['quality_class'], test_size=0.2, random_state=1)

# Due to imbalanced dataset, we need to perform resampling in order to make sure that the representativeness of 3 class is equal

oversample = SMOTE()
X_train, y_train = oversample.fit_resample(X_train, y_train)

sns.countplot(x=y_train)
plt.show()

warnings.filterwarnings('ignore')
fig,ax = plt.subplots(12,2,figsize=(13,40))
for index,i in enumerate(df.drop(['quality_class'],axis = 1).columns):
    sns.distplot(df[i],ax=ax[index,0])
    sns.boxplot(df[i],ax=ax[index,1], linewidth = 1.2)
    plt.grid()
fig.tight_layout()
fig.subplots_adjust(top=0.95)

plt.suptitle(""Visualization of Numeric Features"",fontsize=20)

sns.pairplot(df,hue = 'quality_class', corner=True)

sns.heatmap(df.sort_values(by='quality_class',ascending=True).corr(method='spearman'),cmap='viridis',annot=True)
# alcohol and density have the highest correlation. This suggests that we might need to exclude 1 variable after feature selection

sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

uniform_samples = np.random.uniform(0, 1, 8781)
X_train = pd.DataFrame(X_train, columns=df.drop(columns=['quality_class']).columns)
X_train['uniform_dist_var'] = uniform_samples
X_test = pd.DataFrame(X_test, columns=df.drop(columns=['quality_class']).columns)

y_train = y_train.reset_index()
y_train = y_train['quality_class'] 
y_test = y_test.reset_index()
y_test = y_test['quality_class'] 
df_train = pd.concat([X_train, y_train], axis=1)

# Checking distribution of all features
X_train.hist(bins=25,figsize=(10,10))
plt.show()

# Checking distribution of dependent variable

x_vars = df_train.drop(columns=['quality_class'], axis=1).columns

sns.heatmap(df_train.sort_values(by='quality_class',ascending=True).corr(method='spearman'),cmap='viridis',annot=True)

# Feature Selection:
    
    # Information Gain:
        
ig = mutual_info_classif(X_train, y_train)
feature_scores = {}
j = 0
for i in x_vars:
    feature_scores[i] = ig[j]
    j=j+1
# Sort the features by importance score in descending order
sorted_features = sorted(feature_scores.items(), key=lambda x: x[1], reverse=True)

for feature, score in sorted_features:
    print('Feature:', feature, 'Score:', score)
    
# Plot a horizontal bar chart of the feature importance scores
fig, ax = plt.subplots()
y_pos = np.arange(len(sorted_features))
ax.barh(y_pos, [score for feature, score in sorted_features], align=""center"")
ax.set_yticks(y_pos)
ax.set_yticklabels([feature for feature, score in sorted_features])
ax.invert_yaxis()  # Labels read top-to-bottom
ax.set_xlabel(""Importance Score"")
ax.set_title(""Feature Importance Scores (Information Gain)"")

# Add importance scores as labels on the horizontal bar chart
for i, v in enumerate([score for feature, score in sorted_features]):
    ax.text(v + 0.01, i, str(round(v, 3)), color=""black"", fontweight=""bold"")
plt.show()

    # Fisher score:    
rank = fisher_score.fisher_score(X_train.to_numpy(), y_train.to_numpy(), mode='rank')

# Plotting the ranks
features_rank = {}
j = 0
for i in x_vars:
    features_rank[i] = rank[j]
    j=j+1
# Sort the features by importance score in descending order
features_rank_descending = sorted(features_rank.items(), key=lambda x: x[1], reverse=True)

features_rank_descending

# Rank (the higher value, the more important the variable):
        
# [('total_sulfur_dioxide', 11),
# ('alcohol', 10),
# ('sulphates', 9),
# ('free_sulfur_dioxide', 8),
# ('citric_acid', 7),
# ('density', 6),
# ('residual_sugar', 5),
# ('volatile_acidity', 4),
# ('chlorides', 3),
# ('pH', 2),
# ('fixed_acidity', 1),
# ('uniform_dist_var', 0)]


    # Feature selection using Random Forest:
        
number_of_random_states = 30
average_optimal = np.zeros(12)
scorer = sklearn.metrics.make_scorer(sklearn.metrics.f1_score, average = 'weighted')

i = 0
for rs in range(number_of_random_states):
    rf_classifier = rfc(random_state = rs)
    rfecv = RFECV(estimator=rf_classifier, step=1, cv=5, scoring=scorer)
    rfecv = rfecv.fit(X_train, y_train)
    average_optimal += np.asarray(rfecv.cv_results_[""mean_test_score""])
    i = i + 1
    print ('progress ' + str(round(i/number_of_random_states*100)) + '%')
    
average_optimal /= number_of_random_states    
plt.plot(range(1, len(rfecv.cv_results_['mean_test_score']) + 1), average_optimal)
print(""Number of features selected :"", np.argmax(average_optimal)+1)
print(""Evaluation of the optimal f1 :"", np.max(average_optimal))
plt.show()

# out of 12 variables, only 11 improve the model performance. The last variable makes the performance deteriorates.
# I suspect it is the uniformly distributed variable (noise). Let's check if that variable appears in the top 11 variables.

most_appearing_features = []

for rs in range(10):
    rf_classifier = rfc(random_state=rs)      
    rfe = RFE(estimator=rf_classifier, n_features_to_select=11, step=1)
    rfe = rfe.fit(X_train, y_train)
    most_appearing_features.append(X_train.columns[rfe.support_].tolist())
most_appearing_features = [item for sublist in most_appearing_features for item in sublist]

print('Most appearing features :')
Counter(most_appearing_features).most_common(11)

# [('volatile_acidity', 10),
# ('residual_sugar', 10),
# ('chlorides', 10),
# ('free_sulfur_dioxide', 10),
# ('total_sulfur_dioxide', 10),
# ('density', 10),
# ('pH', 10),
# ('sulphates', 10),
# ('alcohol', 10)]

# Looks like we need to exclude uniformly distributed variable as it does not show up in the list of top 11 most appearing variables
# All of the initial variables outperform noise variable in term of feature importance. As a result, we remove dummy noise variable

X_train.drop(['uniform_dist_var'], inplace = True, axis = 1)

##### Fitting data to different boosting models using hyperparameter tunning #####

# GBM:

def objective_gbc(trial, X, y):
    params = {'max_depth': trial.suggest_int('max_depth', 1, 10), 
              'n_estimators': trial.suggest_int('n_estimators', 10, 500), 
              'learning_rate': trial.suggest_loguniform('learning_rate', 1e-5, 1e+0), 
              'random_state': trial.suggest_int('random_state', 0, 0)
             }
    clf = make_pipeline(GradientBoostingClassifier(**params))
    scores = cross_val_score(clf, X, y, cv=5)
    return np.mean(scores)

# XGBoost:

def objective_xgbc(trial, X, y):
    params = {'objective': trial.suggest_categorical('objective', ['multi:softmax']),
                  'random_state': trial.suggest_int('random_state', 0, 0), 
                  'n_estimators': trial.suggest_int('n_estimators', 10, 500, step=10), # num_boosting_round
                  'max_depth': trial.suggest_int('max_depth', 1, 9), 
                  'subsample': trial.suggest_loguniform('subsample', 0.01, 1.0), 
                  'learning_rate': trial.suggest_categorical('learning_rate', [0.1, 0.05, 0.01]), # eta
                  'colsample_bytree': trial.suggest_loguniform('colsample_bytree', 0.01, 1.0), 
                  'min_split_loss': trial.suggest_float('min_split_loss', 1e-8, 1.0, log=True), # gamma
                  'booster': trial.suggest_categorical('booster', ['gbtree', 'dart']), # , 'gblinear'
                  'reg_lambda': trial.suggest_float('reg_lambda', 1e-4, 1.0, log=True), # lambda
                  'reg_alpha': trial.suggest_float('reg_alpha', 0, 1.0)# alpha
                 }
    clf = make_pipeline(XGBClassifier(**params, use_label_encoder=False, num_class = 3))
    scores = cross_val_score(clf, X, y, cv=5)
    return np.mean(scores)

# CatBoost:

def objective_catboost(trial, X, y):
    params = {
        ""iterations"": 1000,
        ""learning_rate"": trial.suggest_float(""learning_rate"", 1e-3, 0.1, log=True),
        ""depth"": trial.suggest_int(""depth"", 1, 10),
        #""subsample"": trial.suggest_float(""subsample"", 0.05, 1.0),
        ""colsample_bylevel"": trial.suggest_float(""colsample_bylevel"", 0.05, 1.0),
        ""min_data_in_leaf"": trial.suggest_int(""min_data_in_leaf"", 1, 100),
    }
    clf = make_pipeline(CatBoostClassifier(**params, silent=True))
    scores = cross_val_score(clf, X, y, cv=5)
    return np.mean(scores)

# Light Gradient Boosting:
    
def objective_lgbc(trial, X, y):
    params = {
        ""objective"": ""multiclass"",
        ""metric"": ""multi_logloss"",
        ""learning_rate"": trial.suggest_float(""learning_rate"", 1e-3, 0.1, log=True),
        'max_depth': trial.suggest_int('max_depth', 1, 20),
        ""verbosity"": -1,
        ""boosting_type"": trial.suggest_categorical('boosting_type ', ['gbdt', 'dart']),
        ""num_class"": 3,
        ""lambda_l1"": trial.suggest_float(""lambda_l1"", 1e-8, 10.0, log=True),
        ""lambda_l2"": trial.suggest_float(""lambda_l2"", 1e-8, 10.0, log=True),
        ""num_leaves"": trial.suggest_int(""num_leaves"", 2, 256),
        ""feature_fraction"": trial.suggest_float(""feature_fraction"", 0.1, 1.0),
        ""bagging_fraction"": trial.suggest_float(""bagging_fraction"", 0.1, 1.0),
        ""bagging_freq"": trial.suggest_int(""bagging_freq"", 1, 7),
        ""min_child_samples"": trial.suggest_int(""min_child_samples"", 5, 100),
    }
    clf = make_pipeline(LGBMClassifier(**params))
    scores = cross_val_score(clf, X, y, cv=5)
    return np.mean(scores)

# Histogram Gradient Boosting:
    
def objective_hgbc(trial, X, y):
    params = {
        ""learning_rate"": trial.suggest_float(""learning_rate"", 1e-3, 0.1, log=True),
        ""max_iter"": 1000,
        ""max_leaf_nodes"": trial.suggest_int(""max_leaf_nodes"", 1, 100),
        'max_depth': trial.suggest_int('max_depth', 1, 9),
        ""l2_regularization"": trial.suggest_float(""l2_regularization"", 1e-6, 1e3, log=True),
        ""max_bins"": trial.suggest_int('max_bins', 2, 255)        
    }
    clf = make_pipeline(HistGradientBoostingClassifier(**params))
    scores = cross_val_score(clf, X, y, cv=5)
    return np.mean(scores)

def calculate_score(model, X_train, y_train, X_test, y_test):
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    #auc = roc_auc_score(y_test, y_pred, multi_class= 'ovo')
    f1 = f1_score(y_test, y_pred, average= 'weighted')
    recall = recall_score(y_test, y_pred, average= 'weighted')
    precision = precision_score(y_test, y_pred, average= 'weighted')
    
    return acc, f1, recall, precision

# Hyperparameter tunning:
study_gbc = optuna.create_study(direction='maximize', sampler=optuna.samplers.RandomSampler(seed=0))
study_gbc.optimize(functools.partial(objective_gbc, X=X_train, y=y_train), n_trials=30)

study_xgbc = optuna.create_study(direction='maximize', sampler=optuna.samplers.RandomSampler(seed=0))
study_xgbc.optimize(functools.partial(objective_xgbc, X=X_train, y=y_train), n_trials=30)

study_catboost = optuna.create_study(direction='maximize', sampler=optuna.samplers.RandomSampler(seed=0))
study_catboost.optimize(functools.partial(objective_catboost, X=X_train, y=y_train), n_trials=30)

study_lgbc = optuna.create_study(direction='maximize', sampler=optuna.samplers.RandomSampler(seed=0))
study_lgbc.optimize(functools.partial(objective_lgbc, X=X_train, y=y_train), n_trials=30)

study_hgbc = optuna.create_study(direction='maximize', sampler=optuna.samplers.RandomSampler(seed=0))
study_hgbc.optimize(functools.partial(objective_hgbc, X=X_train, y=y_train), n_trials=30)

# Creating Classifiers using tunned parameters obtained from previous step:
gbc = GradientBoostingClassifier(**study_gbc.best_params)
xgbc = XGBClassifier(**study_xgbc.best_params, use_label_encoder=False)
catboost = CatBoostClassifier(**study_catboost.best_params)
lgbc = LGBMClassifier(**study_lgbc.best_params)
hgbc = HistGradientBoostingClassifier(**study_hgbc.best_params)

models = [gbc,xgbc,lgbc,gbc,hgbc]
names = ['Gradient Boosting Classifier', 'XGBoost Classifier', 'CatBoost Classifier', 
         'Light GBM Classifier', 'Hist Gradient Boosting Classifier']

# Calculating various model performance's metrics
scorelist = {}


for name, classifier in zip(names, models):
    acc, f1, recall, precision = calculate_score(classifier, X_train, y_train, X_test, y_test)
    scorelist[name] = (acc, f1, recall, precision)

scorelist

# RESULT COMPARISON #

# 'Gradient Boosting Classifier': (acc = 0.8224489795918367, f1 =  0.8157758677913398, recall = 0.8224489795918367, precision = 0.812542143991651)
# 'XGBoost Classifier': (acc = 0.8040816326530612, f1 = 0.8014447959294754, recall = 0.8040816326530612, precision = 0.8000441051063351))
# 'CatBoost Classifier': (acc = 0.8142857142857143, f1 = 0.8073504595990978, recall = 0.8142857142857143, precision = 0.8035260754952066)
# 'Light GBM Classifier': (acc = 0.8224489795918367, f1 = 0.8157758677913398, recall = 0.8224489795918367, precision = 0.812542143991651)
# 'Hist Gradient Boosting Classifier': (acc = 0.8112244897959183, f1 = 0.806735193615864, recall = 0.8112244897959183, precision = 0.8035021325007075)

# Gradient Boosting Classifier and Light GBM Classifier have exactly the same result for some reasons
# Best overall performer(s): Gradient Boosting and Light GBM, followed by CatBoost, Hist Gradient Boosting and XGBoost
# Reason why XGBoost underperforms in this dataset perhaps because of regularization which reduces overfitting on training sample.
# More specifically, perhaps because the testing data closely resemble training data, any algorithm which penalizes overfitting
# might underperform compared to learning algorithm which has no or little regularization.
# Catboost underperforms compared to other learning algorithms (except XGBoost) perhaps due to explanatory variables are continuous rather than categorical.
"
bd2E85Hy,Lab: Working with Queries in Django,horozov86,Python,Thursday 9th of November 2023 06:59:37 AM CDT,"# 1.	Books Finder

def find_books_by_genre_and_language(book_genre, book_language):
    found_books = Book.objects.filter(genre=book_genre, language=book_language)
    
    return found_books
    
# print(find_books_by_genre_and_language(""Romance"", ""English""))
# print(find_books_by_genre_and_language(""Poetry"", ""Spanish""))
# print(find_books_by_genre_and_language(""Mystery"", ""English""))



# 2.	Find Authors' Nationalities

def find_authors_nationalities():
    authors = Author.objects.exclude(""nationality""=None)
    
    result = [
        f""{author.first_name} {author.last_name} is {author.nationality}"" for author in authors
    ]
    
    return ""\n"".join(result)
    
# print(find_authors_nationalities())


# 3.	Order Books by Year

def order_books_by_year():
    ordered_books = Book.objects.order_by(""publication_year"", ""title"")
    
    result = [
        f""{book.publication_year} year: {book.title} by {book.author}"" for book in ordered_books
    ]
    
    
    return ""\n"".join(result)
    
# print(order_books_by_year())


# 4.	Delete Review by ID

def delete_review_by_id(review_id):
    review = Review.objects.get(id=review_id)
    review.delete()
    
    return f""Review by {review.reviewer_name} was deleted""
    
# print(delete_review_by_id(4))
# print(delete_review_by_id(1))
# print(delete_review_by_id(8))


# 5.	Filter Authors by Nationalities

def filter_authors_by_nationalities(nationality):
    authors = Author.objects.filter(nationality=nationality).order_by(""first_name"", ""last_name"")
    
    result = [
        author.biography if author.biography is not None else f""{author.first_name} {author.last_name}"" for author in authors
    ]
    
    return ""\n"".join(authors)
    
# print(""American authors:"")
# print(filter_authors_by_nationalities('American'))
# print()
# print(""British authors:"")
# print(filter_authors_by_nationalities('British'))
# print()
# print(""Authors with no nationalities:"")
# print(filter_authors_by_nationalities(None))


# 6.	Filter Authors by Birth Year

def filter_authors_by_birth_year(first_year, second_year):
    authors = Author.objects.filter(birth_date__year__range=(first_year, last_name)).order_by(""-birth_date""))
    
    result = [
        f""{author.birth_date}: {author.first_name} {author.last_name}"" for author in authors
    ]
    
    
    return ""\n"".join(result)
    
# print(""Authors born between 1980 and 2000:"")
# print(filter_authors_by_birth_year(1980, 2000))
# print()
# print(""Authors born between 1950 and 1960:"")
# print(filter_authors_by_birth_year(1950, 1960))
# print()
# print(""Authors born between 2000 and 2010:"")
# print(filter_authors_by_birth_year(2000, 2010))

# 7.	Change Reviewer's Name

def change_reviewer_name(reviewer_name, new_name):
    (Review.objects
    .filter(reviewer_name=reviewer_name)
    .update(reviewer_name=new_name))
    result = Review.objects.all()
    return result
    
# print(""Change Alice Johnson to A.J.:"")
# print(change_reviewer_name(""Alice Johnson"", ""A.J.""))
# print()
# print(""Change Bob Wilson to Bobby W.:"")
# print(change_reviewer_name(""Bob Wilson"", ""Bobby W.""))
# print()
# print(""Change A.J. to A. Johnson:"")
# print(change_reviewer_name(""A.J."", ""A. Johnson""))"
m5jwuU3n,Работа в 16-ричной сс испр,DaniDori,C++,Thursday 9th of November 2023 06:52:36 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
using namespace std;

// Функция для установки четырех младших бит в 1
void SetLowBitsTo1(int& value)
{
    // Маска для установки четырех младших бит в 1: 0x0F (в шестнадцатеричной системе)
    int mask = 0x0F;

    // Применяем поразрядную операцию ""ИЛИ"" для установки битов в 1
    value |= mask;
}

// Функция для обнуления определенных битов в числе
void ClearBits(int& value, int bitsToClear)
{
    // Применяем поразрядную операцию ""И"" с инвертированной маской для обнуления битов
    value &= ~bitsToClear;
}

// Функция для умножения числа на 16 с использованием поразрядных операций
int MultiplyBy16(int value)
{
    // Умножение на 16 эквивалентно сдвигу битов влево на 4 позиции
    return value << 4;
}

// Функция для деления числа на 16 с использованием поразрядных операций
int DivideBy16(int value)
{
    // Деление на 16 эквивалентно сдвигу битов вправо на 4 позиции
    return value >> 4;
}

// Функция для установки n-ого бита в 1 с использованием маски 2
int SetNthBitTo1(int value, int n)
{
    // Создаем маску 2 с n-ым битом установленным в 1
    int mask = 1 << n;

    // Применяем поразрядную операцию ""ИЛИ"" для установки бита в 1
    return value | mask;
}
void printBin(int n) {
    vector<int>ans;
    while (n > 0) {
        ans.push_back(n % 2);
        n /= 2;
    }
    for (int i = ans.size() - 1; i >= 0; i--)
        cout << ans[i];
}
int main()
{
    setlocale(LC_ALL, ""Russian"");
    bool exit = false;
    int key;
    int mask;
    // Исходное значение переменной в шестнадцатеричной системе
    int value;
    int result;
    int n;
    while (!exit) {
        cout << ""\nМеню:"" << endl;
        cout << ""1. Функция для установки четырех младших бит в 1"" << endl;
        cout << ""2. Функция для обнуления определенных битов в числе"" << endl;
        cout << ""3. Функция для умножения числа на 16 с использованием поразрядных операций"" << endl;
        cout << ""4. Функция для деления числа на 16 с использованием поразрядных операций"" << endl;
        cout << ""5.  Функция для установки n-ого бита в 1 с использованием маски 2"" << endl;
        cout << ""0. Выход"" << endl;
        cout << ""Введите ваш выбор: "";
        cin >> key;
        switch (key) {
        case 1:
            // Выводим исходное значение
            cout << ""Введите целое число: "";
            cin >> value;
            cout << ""Исходное значение:"" << value << endl;
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;
            
            // Устанавливаем четыре младших бита в 1
            SetLowBitsTo1(value);
            // Выводим результат

            cout << ""Значение после установки четырех младших бит в 1: "" << dec << value << endl;
            cout << ""Значение после установки четырех младших бит в 1: 0x"" << hex << value << endl;
            cout << ""Значение после установки четырех младших бит в 1: 0b"";
            printBin(value);
            cout << endl;
            break;
        case 2:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;
            // Маска для обнуления 3-го, 11-го и 5-го битов
            mask = (1 << 3) | (1 << 11) | (1 << 5);

            // Обнуляем указанные биты
            ClearBits(value, mask);

            // Выводим результат
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: "" << dec << value << endl;
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: 0x""<< hex << value << endl;
            break;
        case 3:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;

            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Умножаем значение на 16 с помощью функции
            result = MultiplyBy16(value);

            // Выводим результат
            cout << ""Значение после умножения на 16: "" << dec << result << endl;
            cout << ""Значение после умножения на 16: 0x""<< hex << result << endl;
            cout << ""Значение после умножения на 16: 0b"";
            printBin(result);
            cout << endl;
            break;
        case 4:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;


            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Делим значение на 16 с помощью функции
            result = DivideBy16(value);

            // Выводим результат
            cout << ""Значение после деления на 16: "" << dec << result << endl;
            cout << ""Значение после деления на 16: 0x"" << hex << result << endl;
            cout << ""Значение после деления на 16: 0b"";
            printBin(result);
            cout << endl;

            break;
        case 5:
            // Исходное значение переменной
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;

            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Вводим значение n с клавиатуры
            cout << ""Введите значение n: "";
            cin >> n;

            cout << ""Представления числа в двоичном виде: "" << endl;
            // Устанавливаем n-ый бит в 1 с помощью функции
            result = SetNthBitTo1(value, n);

            // Выводим результат

            cout << ""Значение после установки "" << n << ""-ого бита в 1: "" << dec << result << endl;
            cout << ""Значение после установки "" << n << ""-ого бита в 1: 0x"" << hex << result << endl;
            cout << ""Значение после установки "" << n << ""-ого бита в 1: 0b"";
            printBin(result);
            cout << endl;
            break;
        case 0:
            exit = true;
        }
    }

}"
JLxSXsqW,curved,kerlser,CSS,Thursday 9th of November 2023 06:50:53 AM CDT,"

/*
#titlebar {
    order: 1 !important;
}
*/
/*  ERSETZEN ENDE  */


/*** Curved tabs beta #2B ***/


/*** General adjustments ***/

:root {

/* Tabs bar height adjust */
    /*--tab-block-margin: 4px !important;*/
    --tab-block-margin: 2px !important;
    --tab-min-height: 36px !important;

/* Edges without Svg /  Radius */
    --ug-radius: 20px;

/* Edges (borders, outlines) colors */

/* Edges not selected */
    --ug-color-border: hsla(0, 0%, 33%, 0.5);                                    /* unselected Kante Tab 83 */
    --ug-stroke: var(--ug-color-border);                                             /* unselected Kante Svg */
    --ug-kante_hova: hsla(0, 0%, 43%, 0.65);                        /* unselected alle Kanten hover 93 */

/* Edges selected , multiselected */
    --ug-color-border_select: hsla(0, 0%, 43%, 0.75);                            /* selected Kante Tab */
    --ug-stroke_select:  var(--ug-color-border_select);                           /* selected Kante Svg */
    --ug-kante_hova_select: hsla(0, 0%, 49%, 0.8);           /* multiselected alle Kanten hover 100 */


/* Tabs backgrounds:  */

    --ug-color1: hsla(0, 0%, 83%, 0.25);                                /* basis, unselected */
    --ug-color2: hsla(35, 80%, 60%, 0.25);                                          /* selected */
    --ug-color2-multi: hsla(35, 80%, 50%, 0.25);                          /* multiselected */
    --ug-color_multi_hova: hsla(35, 70%, 40%, 0.35);        /* multiselected hover */
    --ug-color_hova: hsla(0, 0%, 50%, 0.25);                         /* unselected hover */

/* Tab bar border bottom color */
    --ug-color3: hsla(0, 0%, 43%, 1);

    /*--tabs-navbar-shadow-size: 0 !important;*/
}

/*
 #TabsToolbar {
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
}
*/

/** Distance between tabs **/
.tabbrowser-tab:not([pinned]) {
    padding-inline: 2px !important;
    overflow: visible !important;
}

/*** General adjustments end ***/


/* Tab bar border bottom */

#TabsToolbar {
    border-image: linear-gradient(to top, 
        var(--ug-color-border) 1px, transparent 1px) 1 / 0 0 1px 0 !important;
}

/* buttons adjust size, position */

/* Buttons smaller by 2px */
#TabsToolbar {
    --toolbarbutton-inner-padding: calc((var(--tab-min-height) - 16px) / 2 - 2px) !important;
}

/* Move buttons up/down, optional, OFF */
/*
#TabsToolbar toolbarbutton {
    margin-top: -1px !important;
}
#tabbrowser-tabs {
    --ug_margin_plus: 1px -1px;
}
:is(#scrollbutton-up, #scrollbutton-down) {
    margin-block:  var(--ug_margin_plus) !important;
}
*/

/* adjust tab content */
.tab-content {
    margin-top: 3px !important;
}
.tabbrowser-tab:not([pinned]) .tab-content {
    padding-inline: 12px 10px !important;
}

.tab-label, .tab-close-button {
    text-shadow: none  !important;
}

.tabbrowser-tab:not([pinned]) .tab-close-button {
    border-radius: 50% !important;
    display: flex !important;
}
.tab-close-button:hover {
    /*outline: none !important;*/
    outline: 1px solid var(--button-active-bgcolor) !important;
    outline-offset: -1px !important;
    background-color: var(--button-hover-bgcolor) !important;
}

/* New Tab (+) button, not overflow (+) button */

/* Position, closer to last tab */
.tabbrowser-tab:not([pinned]) + #tabbrowser-arrowscrollbox-periphery {
    margin-inline: -11px !important;
    z-index: 2 !important;
}
#tabbrowser-arrowscrollbox-periphery #tabs-newtab-button {
    margin-block: 1px -1px !important;
    padding-inline: 0px !important;
}

/* Button rund, icon position adjusted */
#tabbrowser-arrowscrollbox-periphery #tabs-newtab-button .toolbarbutton-icon {
    border-radius: 50% !important;
    --toolbarbutton-inner-padding: calc((var(--tab-min-height) - 16px) / 2 - 3px) !important;
    padding-block: 6px 8px !important;
}

/* New Tab (+) button hover outline */
#tabbrowser-arrowscrollbox-periphery:hover #tabs-newtab-button .toolbarbutton-icon {
    outline: 1px solid var(--ug-color-border) !important;
    outline-offset: -1px !important;
    /*box-shadow: inset 0 0px 2px 1px var(--ug-color-border) !important;*/
}


                                                           /*** Tabs base ***/

/* tabs connected bottom */

.tab-background {
    margin-block: calc(2 * var(--tab-block-margin)) 0 !important;
}

/* Space for corner left/right - first/last tab, overflow bug fix ? */
/* Test #3 */

.tabbrowser-tab:nth-child(1 of :not([pinned], [hidden])) {
    padding-left: calc(var(--ug-corner-size) / 2) !important;
}
.tabbrowser-tab:not([pinned]):last-of-type {
    padding-right: calc(var(--ug-corner-size) / 2) !important;
}
.tabbrowser-tab[first-visible-unpinned-tab] {
    margin-inline-start: 0px !important;
}


/*** Tabs Radien, borders, corners, tab shapes order , inline borders only where no custom corners ***/

/*   basis   */
.tabbrowser-tab .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) var(--ug-radius)  0 !important;
    border: 1px solid !important;
    border-bottom: none !important;
}

.tabbrowser-tab:not([pinned]) .tab-background {
    border-left: none !important;
}

/* selected , pinned tabs */
.tabbrowser-tab:is([visuallyselected], [pinned]) .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 0 !important;
}
/* Tab selected no inline border */
.tabbrowser-tab[visuallyselected]:not([pinned]) .tab-background {
    border-inline: none !important;
}

/* Tab after selected tab completely round, no corners */
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]) .tab-background {
    border-radius: var(--ug-radius) !important;
    border-left: 1px solid var(--ug-color-border) !important;
}
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]) .tab-background::before {
    background-image: none !important;
}

/* Last tab dual corners, unless it comes after selected tab */

.tabbrowser-tab:not([pinned]):last-of-type .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 0 !important;
    border-inline: none !important;
}
.tabbrowser-tab:is([visuallyselected]):not([pinned]) + .tabbrowser-tab:not([visuallyselected]):last-of-type .tab-background {
    border-radius: var(--ug-radius) var(--ug-radius) 0 var(--ug-radius) !important;
    border-right: none !important;
}

                                                          /***  COLORS  ***/

/**  In about:config set svg.context-properties.content.enabled to true  **/


/* Basis */

.tabbrowser-tab .tab-background {
    outline: none !important;
    box-shadow: none !important;
    background-color: var(--ug-color1) !important;
    border-color: var(--ug-color-border) !important;
    stroke: var(--ug-stroke) !important;
    fill: var(--ug-color1) !important;
}

/* Colors, outlines: selected / multiselected / hover */

/* tabs selected base */
.tabbrowser-tab:is([visuallyselected], [multiselected]) .tab-background {
    background-image: none !important;
    background-color: var(--ug-color2) !important;
    stroke: var(--ug-stroke_select) !important;
    border-color: var(--ug-color-border_select) !important;
    fill: var(--ug-color2) !important;
}

/* tabs multiselected */
.tabbrowser-tab:not([visuallyselected])[multiselected] .tab-background {
    background-color: var(--ug-color2-multi) !important;
    fill: var(--ug-color2-multi) !important;
}

/* tabs multiselected hover */
.tabbrowser-tab:not([visuallyselected]):hover .tab-background {
    background-color: var(--ug-color_multi_hova) !important;
    fill: var(--ug-color_multi_hova) !important;
    stroke: var(--ug-kante_hova_select) !important;
    border-color: var(--ug-kante_hova_select) !important;
}

/* tabs unselected hover */
.tabbrowser-tab:not([visuallyselected], [multiselected]):hover .tab-background {
    background-color: var(--ug-color_hova) !important;
    fill: var(--ug-color_hova) !important;
    /*stroke: var(--ug-stroke_select) !important;*/
    stroke: var(--ug-kante_hova) !important;
    border-color: var(--ug-kante_hova) !important;
}

                                                      /***  tabs corners  ***/
/*  base  */

#TabsToolbar {
    --ug-corner-size: var(--tab-min-height);
    /*--ug-corner-image: url(icons/tab_corner_ug.svg) !important;*/
    --ug-corner-image: url(""data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='128' height='128' viewBox='0 0 32 32'%3E%3Cpath d='M0 33 L3 32.5 A16 16 0 0 0 15.5 16 L 16 16 L 16 33 Z' fill='context-fill'/%3E%3Cpath d='M3 32.5 A16 16 0 0 0 15.5 16' fill='rgba(155,122,0,0)' stroke='context-stroke' stroke-width='1px'/%3E%3Cpath d='M0 16 L16 16 A15.5 15.5 0 0 1 32 0 L 32 0 L 32 16 Z' fill='rgba(155,122,0,0)'/%3E%3Cpath d='M15.5 16 A18.5 18 0 0 1 35.5 -0.5' fill='transparent' stroke='context-stroke' stroke-width='1px' /%3E%3C/svg%3E%0A"");
}

.tabbrowser-tab .tab-background::before, 
.tabbrowser-tab .tab-background::after {
    content: """";
    position: absolute;
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
    width: var(--ug-corner-size) !important;
    height: var(--ug-corner-size) !important;
    background-size: var(--ug-corner-size) !important;
    background-repeat: no-repeat !important;
    background-position: bottom center !important;
    mask-image: linear-gradient(215deg, transparent, black 18px) !important;
}

/*  left  */
.tabbrowser-tab .tab-background::before {
    left: calc(0px - var(--ug-corner-size) / 2);
    /*background-image: url(icons/tab_corner_ug.svg) !important;*/
    background-image: var(--ug-corner-image) !important;
}

/*  right  */
.tabbrowser-tab[visuallyselected] .tab-background::after {
    right: calc(0px - var(--ug-corner-size) / 2);
    /*background-image: url(icons/tab_corner_ug.svg) !important;*/
    background-image: var(--ug-corner-image) !important;
    transform: scaleX(-1) !important;
}

.tabbrowser-tab:last-of-type .tab-background::after {
    right: calc(0px - var(--ug-corner-size) / 2);
    /*background-image: url(icons/tab_corner_ug.svg) !important;*/
    background-image: var(--ug-corner-image) !important;
    transform: scaleX(-1) !important;
}

.tabbrowser-tab[pinned] .tab-background::before, 
.tabbrowser-tab[pinned] .tab-background::after {
    display: none !important;
}




"
RWkNMpQJ,loading icon CSS,Mangus875,CSS,Thursday 9th of November 2023 06:46:40 AM CDT,":root {
	cursor: none;
	background-color: #2d2d2d;
}

.loader {
	--anim-length: 2s;
	--easing-mode: ease-in-out;
	--corner-round: 2px;
	
	position: absolute;
	left: 50%;
	top: 50%;
	
	width: 100px;
	height: 100px;
	scale: 100%;
	
	transform: translate(-50%, -50%) rotate(45deg);
}

.loader div {
	position: absolute;
	width: 48%;
	height: 48%;
	background-color: #fff;
	border-radius: var(--corner-round);
	animation: anim0 var(--anim-length) var(--easing-mode) infinite;
}

.loader div:nth-child(1) {
	animation: anim1 var(--anim-length) var(--easing-mode) infinite;
}
.loader div:nth-child(2) {
	animation: anim2 var(--anim-length) var(--easing-mode) infinite;
}
.loader div:nth-child(3) {
	animation: anim3 var(--anim-length) var(--easing-mode) infinite;
}

@keyframes anim0 {
	75% {
		width: 48%;
		height: 48%;
		border-radius: var(--corner-round);
	}
	100% {
		width: 24%;
		height: 24%;
		border-radius: var(--corner-round) 0px 0px 0px;
	}
}

@keyframes anim1 {
	25%, 75% {
		transform: translateX(52px);
		width: 48%;
		height: 48%;
		border-radius: var(--corner-round);
	}
	100% {
		width: 24%;
		height: 24%;
		border-radius: 0px var(--corner-round) 0px 0px;
		transform: translateX(24px);
	}
}

@keyframes anim2 {
	25% {
		transform: translateX(52px);
	}
	50%, 75% {
		transform: translate(52px, 52px);
		width: 48%;
		height: 48%;
		border-radius: var(--corner-round);
	}
	100% {
		width: 24%;
		height: 24%;
		border-radius: 0px 0px var(--corner-round) 0px;
		transform: translate(24px, 24px);
	}
}

@keyframes anim3 {
	25% {
		transform: translateX(52px);
	}
	50% {
		transform: translate(52px, 52px);
	}
	75% {
		transform: translateY(52px);
		width: 48%;
		height: 48%;
		border-radius: var(--corner-round);
	}
	100% {
		width: 24%;
		height: 24%;
		border-radius: 0px 0px 0px var(--corner-round);
		transform: translateY(24px);
	}
}"
fjyaYmME,Loading animation,Mangus875,HTML,Thursday 9th of November 2023 06:46:22 AM CDT,"<!DOCTYPE html>

<html>
	<head>
		<title>CSS Loading Icon</title>
		
		<link rel=""stylesheet"" href=""styles.css""/>
	</head>
	
	<body>
		<div class='loader'>
			<div></div>
			<div></div>
			<div></div>
			<div></div>
		</div>
	</body>
</html>"
yDzdFjrU,Работа в 16-ричной сс,DaniDori,C++,Thursday 9th of November 2023 06:34:48 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
using namespace std;

// Функция для установки четырех младших бит в 1
void SetLowBitsTo1(int& value)
{
    // Маска для установки четырех младших бит в 1: 0x0F (в шестнадцатеричной системе)
    int mask = 0x0F;

    // Применяем поразрядную операцию ""ИЛИ"" для установки битов в 1
    value |= mask;
}

// Функция для обнуления определенных битов в числе
void ClearBits(int& value, int bitsToClear)
{
    // Применяем поразрядную операцию ""И"" с инвертированной маской для обнуления битов
    value &= ~bitsToClear;
}

// Функция для умножения числа на 16 с использованием поразрядных операций
int MultiplyBy16(int value)
{
    // Умножение на 16 эквивалентно сдвигу битов влево на 4 позиции
    return value << 4;
}

// Функция для деления числа на 16 с использованием поразрядных операций
int DivideBy16(int value)
{
    // Деление на 16 эквивалентно сдвигу битов вправо на 4 позиции
    return value >> 4;
}

// Функция для установки n-ого бита в 1 с использованием маски 2
int SetNthBitTo1(int value, int n)
{
    // Создаем маску 2 с n-ым битом установленным в 1
    int mask = 1 << n;

    // Применяем поразрядную операцию ""ИЛИ"" для установки бита в 1
    return value | mask;
}
void printBin(int n) {
    vector<int>ans;
    while (n > 0) {
        ans.push_back(n % 2);
        n /= 2;
    }
    for (int i = ans.size() - 1; i >= 0; i--)
        cout << ans[i];
}
int main()
{
    setlocale(LC_ALL, ""Russian"");
    bool exit = false;
    int key;
    int mask;
    // Исходное значение переменной в шестнадцатеричной системе
    int value = 0x12345678;
    int result;
    int n;
    while (!exit) {
        cout << ""\nМеню:"" << endl;
        cout << ""1. Функция для установки четырех младших бит в 1"" << endl;
        cout << ""2. Функция для обнуления определенных битов в числе"" << endl;
        cout << ""3. Функция для умножения числа на 16 с использованием поразрядных операций"" << endl;
        cout << ""4. Функция для деления числа на 16 с использованием поразрядных операций"" << endl;
        cout << ""5.  Функция для установки n-ого бита в 1 с использованием маски 2"" << endl;
        cout << ""0. Выход"" << endl;
        cout << ""Введите ваш выбор: "";
        cin >> key;
        switch (key) {
        case 1:
            // Выводим исходное значение
            cout << ""Исходное значение:"" << value << endl;
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Устанавливаем четыре младших бита в 1
            SetLowBitsTo1(value);
            // Выводим результат

            cout << ""Значение после установки четырех младших бит в 1: "" << dec << value << endl;
            cout << ""Значение после установки четырех младших бит в 1: 0x"" << hex << value << endl;
            cout << ""Значение после установки четырех младших бит в 1: 0b"";
            printBin(value);
            cout << endl;
            break;
        case 2:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;
            // Маска для обнуления 3-го, 11-го и 5-го битов
            mask = (1 << 3) | (1 << 11) | (1 << 5);

            // Обнуляем указанные биты
            ClearBits(value, mask);

            // Выводим результат
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: "" << dec << value << endl;
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Значение после обнуления 3-го, 11-го и 5-го битов: 0x"" << hex << value << endl;
            break;
        case 3:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;

            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Умножаем значение на 16 с помощью функции
            result = MultiplyBy16(value);

            // Выводим результат
            cout << ""Значение после умножения на 16: "" << dec << result << endl;
            cout << ""Значение после умножения на 16: 0x"" << hex << result << endl;
            cout << ""Значение после умножения на 16: 0b"";
            printBin(result);
            cout << endl;
            break;
        case 4:
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;


            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Делим значение на 16 с помощью функции
            result = DivideBy16(value);

            // Выводим результат
            cout << ""Значение после деления на 16: "" << dec << result << endl;
            cout << ""Значение после деления на 16: 0x"" << hex << result << endl;
            cout << ""Значение после деления на 16: 0b"";
            printBin(result);
            cout << endl;

            break;
        case 5:
            // Исходное значение переменной
            // Вводим значение с клавиатуры
            cout << ""Введите целое число: "";
            cin >> value;

            //Исходное в 2 и 16-ричной
            cout << ""Исходное значение: 0b"";
            printBin(value);
            cout << endl;
            cout << ""Исходное значение: 0x"" << hex << value << endl;

            // Вводим значение n с клавиатуры
            cout << ""Введите значение n: "";
            cin >> n;

            cout << ""Представления числа в двоичном виде: "" << endl;
            // Устанавливаем n-ый бит в 1 с помощью функции
            result = SetNthBitTo1(value, n);

            // Выводим результат

            cout << ""Значение после установки "" << n << ""-ого бита в 1: "" << dec << result << endl;
            cout << ""Значение после установки "" << n << ""-ого бита в 1: 0x"" << hex << result << endl;
            cout << ""Значение после установки "" << n << ""-ого бита в 1: 0b"";
            printBin(result);
            cout << endl;
            break;
        case 0:
            exit = true;
        }
    }

}"
