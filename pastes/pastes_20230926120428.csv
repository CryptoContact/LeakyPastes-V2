id,title,username,language,date,content
g6j5aRNE,utm_source view,flycat,JavaScript,Tuesday 26th of September 2023 06:52:04 AM CDT,"// COde to delete

var queryString = window.location.search;
var URLSearchParams_wb = new URLSearchParams(queryString);
// alert(URLSearchParams_wb.toString());
log.error(URLSearchParams_wb.toString());

// end code to delete

"
bEDEhpGD,Альтернативное решение задачи 4,Lonely_Wanderer,Python,Tuesday 26th of September 2023 06:51:21 AM CDT,"from m5stack import *
from m5ui import *
from uiflow import *

setScreenColor(0x222222)

rect = M5Rect(155, 115, 10, 10, 0x0000FF, 0x0000FF)
joystick = unit.get(unit.JOYSTICK, unit.PORTA)

x,y = 155,115

while True:
  # Смещаем координаты джойстика на 120 влево и 120 вниз, чтобы состояние покоя
  # (когда стик ровно в центре) соответствовало коорднатам [0;0]
  jx = joystick.X - 120
  jy = joystick.Y - 120
  # при отклонении стика более, чем на 40 пунктов,
  # относительно центра. Прибаляется к координате прошлого положения
  # результат целочисленного деления на 30, нормализировнной координаты JX,
  # что позволяет нам при бОльшем отклонении от центра, 
  #увеличивать скорость движения квадрата
  if -40 < jx < 40: 
	x+= jx // 30
  # те же действия, только для координаты Y. Так как Y в верхнем положении равен
  # -120, (то есть изменяется сверху вниз), ставим перед знаком равно минус,
  # чтобы инвертировать показания, для правильности перемещений
  if -40 < jy < 40: 
	y-= jy // 30
  # при нажатии на кнопку джойстика, помещаем квадрат обратно в центр экрана.
  if joystick.Press: x,y = 155,115
  rect.setPosition(x,y)
  wait(0.1)"
Avwjdsk8,Backup and restore Windows drivers,MALWAREz,Batch,Tuesday 26th of September 2023 06:41:06 AM CDT,"Backup:
pnputil /export-driver * D:\drivers
 
Restore:
pnputil /add-driver D:\drivers /subdirs /install"
1C3rszEJ,KPO_1,Dimaland,C,Tuesday 26th of September 2023 06:33:01 AM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <locale.h>


int main() {
    setlocale(LC_ALL, ""Russian"");
    char input[100]; // Максимальная длина ввода
    printf(""Введите строку: "");
    gets(input);

    int len = strlen(input);
    char selected_letters[100]; // Максимальная длина строки с выбранными буквами
    int selected_count = 0;
    int length = 0;

    for (int i = 0; i < len; i++) {
        char c = input[i];
        if ((c >= 'Q' && c <= 'Z') || (c >= 'q' && c <= 'z')) {
            // Если буква находится в диапазоне от 'Q' до 'Z' или от 'q' до 'z'
            // Преобразуем строчные буквы в заглавные
            selected_letters[selected_count++] = toupper(c);
            length++;
        }
    }

    // Сортировка выбранных букв в алфавитном порядке
    for (int i = 0; i < selected_count - 1; i++) {
        for (int j = i + 1; j < selected_count; j++) {
            if (selected_letters[i] > selected_letters[j]) {
                char temp = selected_letters[i];
                selected_letters[i] = selected_letters[j];
                selected_letters[j] = temp;
            }
        }
    }

    // Вывод отсортированных букв
    printf(""Отсортированные буквы от Q(q) до Z(z): "");

    for (int i = 0; i < length; i++) {
        printf(""%c"", selected_letters[i]);
    }

    return 0;
}
"
RsPTsJFS,KPO_2,Dimaland,C,Tuesday 26th of September 2023 06:32:48 AM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <locale.h>


// Функция для переворота строки
void reverseString(char* str, int length) {
    int start = 0;
    int end = length - 1;
    while (start < end) {
        char temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }
}

int main() {
    setlocale(LC_ALL, ""Russian"");
    char input[100]; // Предполагаем максимальную длину строки 100 символов
    char digits[100]; // Для хранения цифр из строки
    char letters[100]; // Для хранения букв из строки
    char output[200]; // Для хранения результата
    int i, j = 0, k = 0, l = 0;

    printf(""Введите строку: "");
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, ""\n"")] = '\0'; 

    // Разделяем строку на цифры и буквы
    for (i = 0; input[i] != '\0'; i++) {
        if (isdigit(input[i])) {
            digits[j++] = input[i];
        }
        else if (isalpha(input[i])) {
            letters[k++] = input[i];
        }
    }
    digits[j] = '\0';
    letters[k] = '\0';

    // Переворачиваем строку с буквами
    int lettersLength = strlen(letters);
    reverseString(letters, lettersLength);

    // Формируем результирующую строку
    for (i = 0; i < j; i++) {
        output[i] = digits[i];
    }
    for (i = 0; i < lettersLength; i++) {
        output[j + i] = letters[i];
    }
    output[j + lettersLength] = '\0';

    printf(""Результат: %s\n"", output);

    return 0;
}
"
eeV19JTi,KPO_3,Dimaland,C,Tuesday 26th of September 2023 06:32:25 AM CDT,"#include <stdio.h>
#include <locale.h>


int main() {
    setlocale(LC_ALL, ""Russian"");
    char input[100]; // Массив для хранения входной последовательности чисел
    char output[200]; // Массив для хранения выходной последовательности чисел
    int i, j;

    printf(""Введите последовательность чисел из 0 и 1: "");
    gets(input);

    // Итерируемся по входной последовательности и копируем элементы в выходную с добавлением нулей
    j = 0;
    for (i = 0; input[i] != '\0'; i++) {
        output[j++] = input[i];
        if (input[i] == '1' && input[i + 1] == '1') {
            output[j++] = '0'; // Добавляем ноль между двумя единицами
        }
    }
    output[j] = '\0'; // Устанавливаем завершающий нуль в конце выходной строки

    printf(""Исходная последовательность: %s\n"", input);
    printf(""Полученная последовательность: %s\n"", output);

    return 0;
}
"
5DRchYN9,Полное управление джойстиком,Lonely_Wanderer,Python,Tuesday 26th of September 2023 06:28:40 AM CDT,"from m5stack import *
from m5ui import *
from uiflow import *

setScreenColor(0x222222)

rectangle0 = M5Rect(145, 105, 30, 30, 0xFFFFFF, 0xFFFFFF)
joystick = unit.get(unit.JOYSTICK, unit.PORTA)
x=145
y=105
while True:
  if joystick.Y<=260 and  joystick.Y>=220 and joystick.X<140 and joystick.X>110:
    y=y-1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.Y<=30 and  joystick.Y>=0 and joystick.X<140 and joystick.X>110:
    y=y+1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=260 and  joystick.X>=220 and joystick.Y<=140 and joystick.Y>=110:
    x=x+1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=30 and  joystick.X>=0 and joystick.Y<140 and joystick.Y>110:
    x=x-1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=150 and joystick.Y>125:
    x=x-1
    y=y-1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=180 and joystick.Y>150:
    x=x-1
    y=y-2
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=210 and joystick.Y>180:
    x=x-1
    y=y-3
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=260 and joystick.Y>210:
    x=x-1
    y=y-4
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=115 and joystick.Y>90:
    x=x-1
    y=y+1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=90 and joystick.Y>60:
    x=x-1
    y=y+2
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=60 and joystick.Y>30:
    x=x-1
    y=y+3
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=110 and  joystick.X>=0 and joystick.Y<=30 and joystick.Y>0:
    x=x-1
    y=y+4
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=150 and joystick.Y>125:
    x=x+1
    y=y-1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=180 and joystick.Y>150:
    x=x+1
    y=y-2
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=210 and joystick.Y>180:
    x=x+1
    y=y-3
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=260 and joystick.Y>210:
    x=x+1
    y=y-4
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=115 and joystick.Y>90:
    x=x+1
    y=y+1
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=90 and joystick.Y>60:
    x=x+1
    y=y+2
    rectangle0.setPosition(x,y)   
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=60 and joystick.Y>30:
    x=x+1
    y=y+3
    rectangle0.setPosition(x,y)
    wait(0.1)
  elif joystick.X<=240 and  joystick.X>=130 and joystick.Y<=30 and joystick.Y>0:
    x=x+1
    y=y+4
    rectangle0.setPosition(x,y)   
    wait(0.1)"
tVXi7qn0,Untitled,Sweet1123,Python,Tuesday 26th of September 2023 06:22:38 AM CDT,"from tkinter import Tk, Entry, Button, Label, messagebox

def calculate():
    try:
        a = float(entry_a.get())
        b = float(entry_b.get())
        operation = entry_operation.get()
        
        if operation == '+':
            result = a + b
        elif operation == '-':
            result = a - b
        elif operation == '*':
            result = a * b
        elif operation == '/':
            result = a / b
        
        entry_result.delete(0, 'end')
        entry_result.insert('end', str(result))
    except ValueError:
        messagebox.showerror('Error', 'Invalid input')

def exit_program():
    if messagebox.askyesno('Exit', 'Are you sure you want to exit?'):
        root.destroy()

root = Tk()

label_a = Label(root, text='a:')
label_a.grid(row=0, column=0)
entry_a = Entry(root)
entry_a.grid(row=0, column=1)

label_operation = Label(root, text='Operation:')
label_operation.grid(row=1, column=0)
entry_operation = Entry(root)
entry_operation.grid(row=1, column=1)

label_b = Label(root, text='b:')
label_b.grid(row=2, column=0)
entry_b = Entry(root)
entry_b.grid(row=2, column=1)

button_calculate = Button(root, text='Calculate', command=calculate)
button_calculate.grid(row=3, column=0)

label_result = Label(root, text='Result:')
label_result.grid(row=4, column=0)
entry_result = Entry(root)
entry_result.grid(row=4, column=1)

button_exit = Button(root, text='Exit', command=exit_program)
button_exit.grid(row=5, column=0)

root.mainloop()"
0f9MaQFG,data707,TestGuy1,JSON,Tuesday 26th of September 2023 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '32fe09f3506b78a09559e958ec01f9294154d8bc2430df80b0d575fb4496dfcdcb7a42f4e63ce282651cb9720f875b9a9c3f962f9bd1561c0f05e624a71b9097027af3cdf0a0caf947fbee9c88799d2d33bfb06104f240c09bc04cbd21555d21e9be7bfd1fed39f1cb0b1a9389a4cb10d1dcb72282df9091497f3d481e8ce8a4',
  otherdata: [
    '9122e788f330209f35ddac004408bf0b',
    '0ce787d96ffde346d1146504c128777f',
    '7e87f5f89767c2aea3fd18e39dfaa3e2',
    '68d1c14a5de6c4d04f9a9d4c7caa2939',
    '2405796b7cf1ae9aba518c5b61effb26',
    '1b44af0670069ab3e0a369e9a721edfd',
    'a9d304f2b3315308b7b1e5bc95469ca3',
    'efe1a17ff9b186dd8f154ab17a73ccc3'
  ]
}"
15gGP2Jj,send,MChaos,PHP,Tuesday 26th of September 2023 05:54:21 AM CDT,"if ($_SERVER['REMOTE_ADDR'] == '178.18.47.155') {
                    $post['AMOUNT'] = 1;
                }
                $transaction_id = md5(mt_rand() . time());
                $order = array(
                    'transaction_id' => $transaction_id,
                    'contact_id' => $this->data['contact']->id,
                    'create_datetime' => date('Y-m-d H:i:s'),
                    'amount' => $post['AMOUNT'],
                    'type' => 'add',
                    'method' => 'card',
                    'status' => 'created',
                    'comment' => json_encode($contact_data),
                    'locale' => $this->data['lclang']
                );

                $websocket_db = $this->load->database('websocket', true);
                if ($websocket_db->insert('payments', $order)) {
                    $invoice_id = $websocket_db->insert_id();
                    $reload_data = array();
                    $reload_data['name'] = $post['name'];
                    $reload_data['email'] = $post['EMAIL'];
                    $reload_data['phone'] = $post['phone'];
                    $reload_data['country'] = $post['country'];
                    $reload_data['city'] = $post['city'];
                    $reload_data['address'] = $post['address'];
                    $reload_data['user_id'] = $this->data['contact']->id;

                    $db_reload_data = $this->db->where('user_id', $this->data['contact']->id)->get('users_reload_info')->row();

                    if (!empty($db_reload_data)) {
                        $this->db->where('user_id', $this->data['contact']->id);
                        $this->db->update('users_reload_info', $reload_data);
                    } else {
                        $this->db->insert('users_reload_info', $reload_data);
                    }
                }

                $mid = '44840995429';
                $key = 'D47D0*********************';

                $data = array(
                    'amount' => $post['AMOUNT'],
                    'curr' => 'RON',
                    'invoice_id' => $invoice_id,
                    'order_desc' => 'Umple din nou',
                    'merch_id' => $mid,
                    'timestamp' => date('YmdHis'),
                    'nonce' => $transaction_id,
                );

                $data['fp_hash'] = strtoupper($this->euplatesc_mac($data, $key));

                $curl = curl_init();

                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://secure.euplatesc.ro/tdsprocess/tranzactd.php',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $data,
                    CURLOPT_HTTPHEADER => array(
                        'Cookie: EPSSESSID=q818efv1mejv9hf7g279lj1jpcc7jhgof7f68ep721eu16ktpjt0'
                    ),
                ));
                $url = curl_exec($curl);
                curl_close($curl);

                $url = explode('URL=', $url);

                $response['url'] = substr($url[1], 0, -2);
                $response['status'] = 'ok';"
BpTeTzjt,Untitled,Lauda,C#,Tuesday 26th of September 2023 05:51:35 AM CDT,"using Microsoft.AspNetCore.Mvc;
using System.IO;
using System.Threading.Tasks;
using System.Net.Http;
using System;
using System.Linq;

namespace TestExample.Controllers;

[ApiController]
[Route(""[controller]"")]
public class SimpleController : ControllerBase
{
    private readonly string _previousUrl = string.Empty;
    
    private Stream GetOutputStream(string fileName)
    {
        using (var stream = System.IO.File.OpenWrite(fileName))
        {
            return stream;
        }
    }

    private static bool FileExists(string fileName)
        => Directory.GetFiles(Directory.GetCurrentDirectory())
            .Where(file => Path.GetExtension(file).Equals("".html"", StringComparison.InvariantCultureIgnoreCase))
            .Any(x => x.Equals(fileName, StringComparison.InvariantCultureIgnoreCase));
    
    [HttpGet]
    public async Task<IActionResult> GetWebpage(string url)
    {
        if (_previousUrl == url)
        {
            return Ok();
        }
        
        using var client = new HttpClient();
        var result = await client.GetStreamAsync(url);
        
        var fileName = $""{Guid.NewGuid().ToString()}.html"";
        if (FileExists(fileName))
        {
            return Conflict(fileName);
        }
        
        using var stream = GetOutputStream(fileName);
        await result.CopyToAsync(stream);
        await stream.FlushAsync();
        
        _previousUrl = url;
        
        return Ok();
    }
}"
gi9cDKPu,eupayment,MChaos,PHP,Tuesday 26th of September 2023 05:47:42 AM CDT,"    public function eupayment()
    {

        check_if_POST();
        $key = 'D47D****************************';
        $websocket_db = $this->load->database('websocket', true);
        $log_pay = json_encode($_POST);
        $data = array(
            'post' => $log_pay,
            'erorr' => 'POST YES',
        );
        $websocket_db->insert('log_pay', $data);

        $data = array(
            'amount' => addslashes(trim(@$_POST['amount'])),
            'curr' => addslashes(trim(@$_POST['curr'])),
            'invoice_id' => addslashes(trim(@$_POST['invoice_id'])),
            'ep_id' => addslashes(trim(@$_POST['ep_id'])),
            'merch_id' => addslashes(trim(@$_POST['merch_id'])),
            'action' => addslashes(trim(@$_POST['action'])),
            'message' => addslashes(trim(@$_POST['message'])),
            'approval' => addslashes(trim(@$_POST['approval'])),
            'timestamp' => addslashes(trim(@$_POST['timestamp'])),
            'nonce' => addslashes(trim(@$_POST['nonce'])),
        );


        $data['fp_hash'] = strtoupper($this->euplatesc_mac($data, $key));
        $fp_hash = addslashes(trim(@$_POST['fp_hash']));

        if ($data['fp_hash'] === $fp_hash) {
            if ($data['action'] == ""0"") {

                $payment = $websocket_db->where('id', $data['invoice_id'])->get('payments')->row();
                if (!empty($payment)) {
                    $websocket_db->where('id', $payment->id);
                    $websocket_db->update('payments', array('status' => 'completed'));
                    $user = $this->db->where('id', $payment->contact_id)->get('users')->row();
                    if (!empty($user)) {
                        $amount = $user->amount + $data['amount'];
                        $this->db->where('id', $user->id);
                        $this->db->update('users', array('amount' => $amount));
                    }
                }
                //Complete
            } else {
                $websocket_db = $this->load->database('websocket', true);
                $payment = $websocket_db->where('transaction_id', $data['nonce'])->get('payments')->row();
                if (!empty($payment)) {
                    $websocket_db->where('id', $payment->id);
                    $websocket_db->update('payments', array('status' => 'fault'));
                }
                //Failed
            }
        } else {
            $websocket_db = $this->load->database('websocket', true);
            $payment = $websocket_db->where('transaction_id', $data['nonce'])->get('payments')->row();
            if (!empty($payment)) {
                $websocket_db->where('id', $payment->id);
                $websocket_db->update('payments', array('status' => 'fault'));
            }
            //Invalid
        }

        echo ""OK"";//IMPORTANT to print OK

    }
    function euplatesc_mac($data, $key)
    {
        $str = NULL;
        foreach ($data as $d) {
            if ($d === NULL || strlen($d) == 0) {
                $str .= '-';
            } else {
                $str .= strlen($d) . $d;
            }
        }
        return hash_hmac('MD5', $str, pack('H*', $key));
    }"
nFiBQPku,Egven_KPO,Dimaland,C,Tuesday 26th of September 2023 05:47:00 AM CDT,"#include <stdio.h>
#include <string.h>
#include <locale.h>


int main() {
    setlocale(LC_ALL, ""Russian"");

    char str1[100]; // Предполагаем максимальную длину строки 100 символов
    char str2[100];
    char result[200]; // Результирующая строка будет иметь удвоенную длину

    printf(""Введите первую строку: "");
    gets(str1); // Считываем первую строку

    printf(""Введите вторую строку: "");
    gets(str2); // Считываем вторую строку

    int len = strlen(str1); // Предполагаем, что строки одинаковой длины

    for (int i = 0; i < len; i++) {
        result[2 * i] = str1[i]; // Копируем символ из первой строки
        result[2 * i + 1] = str2[i]; // Копируем символ из второй строки
    }

    result[2 * len] = '\0'; // Завершаем строку нулевым символом

    printf(""Результат: %s\n"", result);

    return 0;
}
"
Hiesv73L,Untitled,sasa2742002,Python,Tuesday 26th of September 2023 05:24:54 AM CDT,"from venv import create
import requests
import json
import boto3


def get_data(url, region_name):
    response = requests.get(url)
    data_info = response.json()

    if response.status_code == 200:
        instances = []
        region_data = data_info['regions'].get(region_name, {})

        for instance_name, instance_attributes in region_data.items():
            instance = {
                'Instance Name': instance_name,
                'Rate Code': instance_attributes.get('rateCode', ''),
                'Price': instance_attributes.get('price', ''),
                'Location': instance_attributes.get('Location', ''),
                'Instance Family': instance_attributes.get('Instance Family', ''),
                'vCPU': instance_attributes.get('vCPU', ''),
                'Memory': instance_attributes.get('Memory', ''),
                'Storage': instance_attributes.get('Storage', ''),
                'Network Performance': instance_attributes.get('Network Performance', ''),
                'Operating System': instance_attributes.get('Operating System', ''),
                'Pre Installed S/W': instance_attributes.get('Pre Installed S/W', ''),
                'License Model': instance_attributes.get('License Model', ''),
            }
            instances.append(instance)

        return instances
    else:
        return None


def north_america():
    north_america_urls = [
        [""US East (N. Virginia)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20East%20(N.%20Virginia)/Linux/index.json?timestamp=1695335197182""],
        [""US East (N. California)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(N.%20California)/Linux/index.json?timestamp=1695335943885""],
        [""US West (Oregon)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(Oregon)/Linux/index.json?timestamp=1695336005767""],
        [""Canada (Central)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Canada%20(Central)/Linux/index.json?timestamp=1695336038545""],
        [""AWS GovCloud (US-East)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US-East)/Linux/index.json?timestamp=1695336076977""],
        [""AWS GovCloud (US-West)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US)/Linux/index.json?timestamp=1695336143250""]
    ]

    north_america = []
    for region_info in north_america_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        north_america.append(data)

    return north_america


def africa():
    africa_urls = [
        [""Africa (Cape Town)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Africa%20(Cape%20Town)/Linux/index.json?timestamp=1695336201165""]
    ]

    africa = []
    for region_info in africa_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        africa.append(data)

    return africa


def asia_pacific():
    asia_pacific = [
        [""Asia Pacific (Hong Kong)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hong%20Kong)/Linux/index.json?timestamp=1695336236566""],
        [""Asia Pacific (Hyderabad)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hyderabad)/Linux/index.json?timestamp=1695336267211""],
        [""Asia Pacific (Jakarta)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Jakarta)/Linux/index.json?timestamp=1695336335452""],
        [""Asia Pacific (Melbourne)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Melbourne)/Linux/index.json?timestamp=1695336377353""],
        [""Asia Pacific (Mumbai)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Mumbai)/Linux/index.json?timestamp=1695336414559""],
        [""Asia Pacific (Osaka)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Osaka)/Linux/index.json?timestamp=1695336448367""],
        [""Asia Pacific (Seoul)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Seoul)/Linux/index.json?timestamp=1695336489384""],
        [""Asia Pacific (Singapore)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Singapore)/Linux/index.json?timestamp=1695336516652""],
        [""Asia Pacific (Sydney)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Sydney)/Linux/index.json?timestamp=1695336549342""],
        [""Asia Pacific (Tokyo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Tokyo)/Linux/index.json?timestamp=1695336572681""]
    ]

    asia_pacific = []
    for region_info in asia_pacific:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        asia_pacific.append(data)

    return asia_pacific


def europe():
    europe = [
        [""Europe (Frankfurt)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Frankfurt)/Linux/index.json?timestamp=1695336606682""],
        [""Europe (Ireland)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Ireland)/Linux/index.json?timestamp=1695336640824""],
        [""Europe (London)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(London)/Linux/index.json?timestamp=1695336671834""],
        [""Europe (Milan)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Milan)/Linux/index.json?timestamp=1695336709113""],
        [""Europe (Paris)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Paris)/Linux/index.json?timestamp=1695336734334""],
        [""Europe (Spain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Spain)/Linux/index.json?timestamp=1695336756525""],
        [""Europe (Stockholm)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Stockholm)/Linux/index.json?timestamp=1695336795677""],
        [""Europe (Zurich)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Zurich)/Linux/index.json?timestamp=1695336817871""]
    ]

    europe = []
    for region_info in europe:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        europe.append(data)

    return europe


def middle_east():
    middle_east = [
        [""Middle East (Bahrain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(Bahrain)/Linux/index.json?timestamp=1695336880976""],
        [""Middle East (UAE)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(UAE)/Linux/index.json?timestamp=1695336906621""]
    ]

    middle_east = []
    for region_info in middle_east:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        middle_east.append(data)

    return middle_east


def south_america():
    south_america = [
        [""South America (Sao Paulo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/South%20America%20(Sao%20Paulo)/Linux/index.json?timestamp=1695336944637""]
    ]

    south_america = []
    for region_info in south_america:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        south_america.append(data)

    return south_america


def excute_sql(sql):
    response = rds_client.execute_statement(
        secretArn=db_credentials_secrets_store_arn,
        database=database_name,
        resourceArn=db_cluster_arn,
        sql=sql
    )
    return response


def create_tables_if_not_exists():

    regions = 'CREATE TABLE IF NOT EXISTS regions (region_id INT PRIMARY KEY,region_short_name VARCHAR(15),region_long_name VARCHAR(15));'
    excute_sql(regions)

    operating_systems = 'CREATE TABLE IF NOT EXISTS operating_systems (operating_system_id INT PRIMARY KEY,operating_system_name VARCHAR(25));'
    excute_sql(operating_systems)

    vcpu_cores = 'CREATE TABLE IF NOT EXISTS vcpu_cores (vcpu_id INT PRIMARY KEY,core_count INT);'
    excute_sql(vcpu_cores)

    ec2_instances = 'CREATE TABLE IF NOT EXISTS ec2_instances (instance_id INT PRIMARY KEY,vcpu_id INT,memory INT,storage VARCHAR(20),network_performance DECIMAL(10, 5),operating_system_id INT,instance_name VARCHAR(15),FOREIGN KEY (vcpu_id) REFERENCES vcpu_cores(vcpu_id),FOREIGN KEY (operating_system_id) REFERENCES operating_systems(operating_system_id));'
    excute_sql(ec2_instances)

    region_instances = 'CREATE TABLE IF NOT EXISTS region_instances (region_id INT,instance_id INT,price_per_hour DECIMAL(6, 4),FOREIGN KEY (region_id) REFERENCES regions(region_id),FOREIGN KEY (instance_id) REFERENCES ec2_instances(instance_id));'
    excute_sql(region_instances)

    return


def main():
    create_tables_if_not_exists()
    # north_america_data = north_america()
    # africa_data = africa()
    # asia_pacific_data = asia_pacific()
    # europe_data = europe()
    # middle_east_data = middle_east()
    # south_america_data = south_america()

    # save_africa_data(africa_data)
    # save_north_america_data(north_america_data)
    # save_asia_pacific_data(asia_pacific_data)
    # save_europe_data(europe_data)
    # save_middle_east_data(middle_east_data)
    # save_south_america_data(south_america_data)


main()
"
Mmr1WTn6,PizzaBoxScript,Sungmingamerpro13,CSS,Tuesday 26th of September 2023 04:59:41 AM CDT,"local PizzaBox = script.Parent

local ServerStorage = game:GetService(""ServerStorage"")

for i, Pizza in pairs(PizzaBox:GetChildren()) do
	if Pizza:IsA(""BasePart"") then
		
		local ClickDetector = Instance.new(""ClickDetector"", Pizza)
		ClickDetector.MaxActivationDistance = 16
		
		ClickDetector.MouseClick:Connect(function(player)
			if player and player.Character then
				local Backpack = player:WaitForChild(""Backpack"")
				local Tool = ServerStorage:WaitForChild(""Pizza"")
				Pizza:Destroy()
				Tool:Clone().Parent = player.Backpack
			end
		end)
	end
end
"
EPpyS8T5,Untitled,KoctrX,JavaScript,Tuesday 26th of September 2023 04:56:05 AM CDT,"import Basic from ""./basic.js"";

class Resize extends Basic {
    constructor() {
        super();

        this.app = app;
        this.deletedPages = [];
        this.sizesConfig = [];
        this.marginConfig = [];
        this.changeViewLocked = false;
        this.viewAs = 'document';
        this.selected = {};
        this.toolName = 'resize-pdf';
        this.init();
    }

    async init() {
        console.log(`METHOD init`); //! LOG
        let that = this;
        fetch(""/pdfcpu/pdfcpu.wasm"").then((x) => {
            console.log(""🟢️ wasm loaded"");
        });

        $(document).on('click', '#view-as-documents', function (e) {
            $('.doc-item--selected').removeClass('doc-item--selected');

            that.viewAsDocumens();
        })

        $(document).on('click', '#view-as-pages', function (e) {
            $('.doc-item--selected').removeClass('doc-item--selected');

            that.viewAsPages();
        })

        $(document).on('click', '[data-fid]', function (e) {
            e.preventDefault();
            that.selectPage($(this));
        })

        // type of resizing buttons (margns&padding or page size)
        $('.resize-type-selector').click(e => {
            setTimeout(() => {
                this.renderChangeSizes();
                $('.doc-item--selected').removeClass('doc-item--selected');
            }, 200);
        });

        // page seize inputs
        ['left', 'top', 'right', 'bottom'].forEach(key => {
            $(`[name=""margins-${key}""]`).on('change', e => this.setupUniqueSizes());
        });

        // margns&padding selectors
        $(""[data-optional] input"").on(""change"", e => {
            console.log(`CHANGE: [data-optional] input`); //! LOG
            // if (e.target.closest('#selectPageSize')) {
                this.setupUniqueSizes();
            // }
        });

        // custom page size (margns&padding -> custom size)
        ['custom_paper_height', 'custom_paper_width'].forEach(key => {
            $(`.${key}`).on('change', e => this.setupUniqueSizes());
        });
    }

    getPageSizesValues() {
        let resize_type = $('.resize-type-selector.active-tab').data('type');
        let new_paper_size = false;

        if (resize_type == 2) {
            new_paper_size = $('[name=""page-size""]:checked').val();

            if (new_paper_size == 'custom_size') {
                let w = parseFloat($("".custom_paper_width"").val());
                let h = parseFloat($("".custom_paper_height"").val());
                if (w < 0) { $("".custom_paper_width"").val(0); w = 0; }
                if (h < 0) { $("".custom_paper_height"").val(0); h = 0; }

                new_paper_size = `${w}in,${h}in`;
            }

            new_paper_size = new_paper_size.replace(/in/g, '').split(',').map(size => parseFloat(size));
        } else if (resize_type == 1) {
            new_paper_size = {
                top: parseFloat($('[name=""margins-top""]').val()),
                left: parseFloat($('[name=""margins-left""]').val()),
                right: parseFloat($('[name=""margins-right""]').val()),
                bottom: parseFloat($('[name=""margins-bottom""]').val())
            };

            ['left', 'top', 'right', 'bottom'].forEach(key => {
                if (new_paper_size[key] < 0 || isNaN(new_paper_size[key])) {
                    $(`[name=""margins-${key}""]`).val(0);
                    new_paper_size[key] = 0;
                }
            });
        }

        return new_paper_size;
    }

    getUpdateSizeKey() {
        const selectedType = document.querySelector('.resize-type-selector.active-tab').dataset.type;

        return selectedType == 1 ? 'marginConfig' : 'sizesConfig';
    }

    setupUniqueSizes() {
        const sizes = this.getPageSizesValues();
        const key = this.getUpdateSizeKey();
        console.log(`METHOD setupUniqueSizes`, sizes, key); //! LOG

        if (this.viewAs == 'pages') {
            console.log(` pages`); //! LOG
            const documentList = document.querySelector('.documents_list');
            const pagesSelected = Array.from(documentList.querySelectorAll('.doc-item--selected')).map(el => {
                return { fid: el.dataset.fid, page: el.dataset.fpage };
            }).filter(data => data.fid && data.page);

            if (pagesSelected && pagesSelected.length) {
                this[key] = this[key].filter(sc => !pagesSelected.find(ps => ps.fid == sc.fid && ps.page == sc.page));
                this[key].push(...pagesSelected.map(page => ({ ...page, sizes })));
            } else {
                this.setupCurrentSizeToAllPages();
            }
        } else {
            console.log(` docs`); //! LOG
            // fileid надо, тогда проставиться сайз для всех страниц
            const files = Array.from($('.documents_list').find('.doc-item--selected')).map(element => ({ id: element.dataset.fid }));
            this.setupCurrentSizeToAllPages(files && files.length ? files : this.files);
        }

        this.renderChangeSizes();
    }

    renderChangeSizes() {
        for (const file of this.files) {
            const fileData = this.loaded_files[file.id];
            if (!fileData || !fileData._pdfInfo) continue;

            new Array(fileData._pdfInfo.numPages).fill(false).forEach((t, i) => {
                this.renderPageSizePreview(i + 1, file.id, false);
            });
        }
    }

    setupCurrentSizeToAllPages(files = false) {
        if (!files) files = this.files;
        const sizes = this.getPageSizesValues();

        const replacedConfig = files.reduce((result, file) => {
            const pagesConfig = this.loaded_files[file.id];
            if (!pagesConfig || !pagesConfig._pdfInfo) return result;
            const data = new Array(pagesConfig._pdfInfo.numPages)
                .fill(false).map((q, i) => i + 1)
                .filter(pn => !this.deletedPages.find(dp => dp.page == pn && dp.id == file.id));

            if (data && data.length) {
                result.push(...data.map(pn => ({ fid: file.id, page: pn, sizes })));
            }

            return result;
        }, []);

        this[this.getUpdateSizeKey()] = replacedConfig;
        console.log('REPLACED CONFIG', replacedConfig);
    }

    selectPage(el) {
        let page = el.data('fpage');
        let id = el.data('fid');
        let selectedClass = 'doc-item--selected';
        let selected = this.selected[id].includes(page);
        
        if (selected) {
            el.removeClass(selectedClass);
            this.selected[id].splice(this.selected[id].indexOf(page), 1);
        } else {
            el.addClass(selectedClass);
            this.selected[id].push(page);
        }
    }

    unselectAll() {
        let that = this;
        Object.keys(this.selected).forEach(function (fid, index) {
            that.selected[fid] = [];
        });
    }

    viewAsDocumens() {
        if (this.changeViewLocked || this.viewAs == 'document') {
            return;
        }
        this.lockChangeView();
        this.unselectAll();

        $("".documents_list:not(:last-of-type)"").remove();
        $("".documents_list"").empty();
        $('.list-docs--header').addClass('hidden');

        for (let i = 0; i < this.files.length; i++) {
            this.documentPreview(this.files[i]);
        }

        this.viewAs = 'document';
        this.lockChangeView(false);
    }

    viewAsPages() {
        if (this.changeViewLocked || this.viewAs == 'pages') { return; }

        this.lockChangeView();
        this.unselectAll();

        $("".list-doc:not(:last-child)"").remove();
        $("".documents_list"").empty();

        for (let i = 0; i < this.files.length; i++) {
            let file = this.files[i];
            this.documentPagesPreview(file, this.loaded_files[file.id]._pdfInfo.numPages);

            if (i < this.files.length - 1) {
                this.createWraperForDocPages();
            }
        }

        this.viewAs = 'pages';
        this.lockChangeView(false);
    }

    createWraperForDocPages() {
        let prevWrapper = $("".list-doc:last-child"");
        let clone = prevWrapper.clone();
        clone.appendTo(prevWrapper.parent());
        clone.find('.documents_list').empty();
    }

    lockChangeView(lock = true) {
        let el = $('.change-view-type');
        this.changeViewLocked = lock;
        lock ? el.addClass('c-wait') : el.removeClass('c-wait');
    }

    getResizeType() {
        let resize_type = $('.resize-type-selector.active-tab').data('type');
        switch (resize_type) {
            case 1:
                resize_type = 'margins';
                break;
            case 2:
                resize_type = 'paper';
                break;
        }

        return resize_type;
    }

    collectParams(fid) {
        let new_paper_size = $('[name=""page-size""]:checked').val();
        let dims = {};
        let defDims = {};
        let resize_type = this.getResizeType();

        if (new_paper_size == 'custom_size') {
            new_paper_size = $("".custom_paper_width"").val() + ""in,"" + $("".custom_paper_height"").val() + ""in"";
        }

        if (resize_type == 'margins') {
            dims.top = $('[name=""margins-top""]').val();
            dims.left = $('[name=""margins-left""]').val();
            dims.right = $('[name=""margins-right""]').val();
            dims.bottom = $('[name=""margins-bottom""]').val();
            defDims.top = defDims.left = defDims.right = defDims.bottom = 0;
        } else if (resize_type == 'paper') {
            let ps = new_paper_size.replace(/\s/g, '');
            ps = ps.split('in,');
            dims.width = ps[0];
            dims.heigth = ps[1].replace(/in/g, '');
            defDims.width = defDims.heigth = 0;
        }

        let pages = false;
        if (resize_type == 'paper') {
            let sizes = this.sizesConfig.filter(sc => sc.fid == fid);
            pages = sizes.reduce((result, item) => {
                const [width, height] = item.sizes;

                result[item.page] = {
                    page_num: item.page,
                    rotation: 0,
                    new: { width, height }
                };

                return result;
            }, {});
        } else if (resize_type == 'margins') {
            let margins = this.marginConfig.filter(mc => mc.fid == fid);
            pages = margins.reduce((result, item) => {
                result[item.page] = {
                    page_num: item.page,
                    rotation: 0,
                    new: item.sizes
                };

                return result;
            }, {});
        }

        let result = { resize_type, pages, new_paper_size };
        const deletePages = this.deletedPages.filter(dp => dp.id == fid).reduce((res, item) => {
            res.push(item.page);

            return res;
        }, []);

        return { ...result, deletePages };
    }

    async processPdf() {
        this.showLoading("".after_upload"");
        const resize_type = this.getResizeType();
        const isEmptySizes = !this.sizesConfig && !this.sizesConfig.length && resize_type == 'paper';
        const isEmptyMargins = !this.marginConfig && !this.marginConfig.length && resize_type == 'margins';
        if (isEmptySizes || isEmptyMargins) this.setupCurrentSizeToAllPages();

        // try{
        await store.fs.uploadFiles(this.files);

        for (let i = 0; i < this.files.length; i++) {
            let file = this.files[i];
            this.updateLoadingValue(file, i + 1, this.files.length, 0);
            const params = this.collectParams(file.id);

            let resp = await app.components.resize.apply(file.name, params);
            this.results[resp.name] = resp;
        };

        this.afterProcessPdf();
        // }catch(e){
        //     console.error(""⛔️"", e);
        //     alert(""error (1)"");
        // }

        this.hideLoading("".after_upload"");
    }

    async afterFilesSelected(files) {
        try {
            $("".footer"").addClass(""hidden"");

            for (let i = 0; i < files.length; i++) {
                let file = files[i];
                this.selected[file.id] = [];
                this.loadPdf(file).then((res) => {
                    if (this.viewAs == 'pages') {
                        this.createWraperForDocPages();
                        this.documentPagesPreview(res.file, res.pdf_doc._pdfInfo.numPages);
                    } else {
                        this.documentPreview(res.file);
                    }
                });
            }

        } catch (e) {
            console.error(e);
        }

        this.showAfterUpload();
    }

    deletePageCallback(el) {
        const parent = el.closest('.doc-item');
        const data = parent.dataset;

        if (data.fpage) {
            this.deletedPages.push({ id: data.fid, page: data.fpage });
            this.sizesConfig = this.sizesConfig.filter(sc => !(sc.page == data.fpage && sc.fid == data.fid));
            this.marginConfig = this.marginConfig.filter(mc => !(mc.page == data.fpage && mc.fid == data.fid));
    
            parent.remove();
            return;
        }

        this.deletedPages = this.deletedPages.filter(dp => dp.id != data.fid);
        return this.deleteFile(parent.data('fid'), false, $(parent));
    }

    async documentPreview(file, page = null) {
        let previewSelector = `preview-${file.id}`;
        let name = file.name;
        let pagedata = '';

        if (page) {
            previewSelector += `-${page}`;
            name = 'Page ' + page;
            pagedata = `data-fpage=""${page}""`;

            if (this.deletedPages.find(dp => dp.page == page && dp.id == file.id)) {
                console.log('DELETED PAGE NOT RENDER!', file.id, page);
                return false;
            }
        }

        let template = `<div class=""doc-item doc_outer"" data-fid=""${file.id}"" ${pagedata}>
			<div class=""doc-page"">
				<div class=""doc-page--img"">
                    <canvas id=""${previewSelector}""></canvas>
				</div>

				<div class=""doc-page--text"">
					${name}
				</div>
                
                <div class=""doc-page--text"" data-type=""size"">8.5″ x 11″</div>

				<div class=""doc-page--controls"">
					<div class=""flex flex-col items-end mb--8"">
						${this.getPreviewBtn(!page)}
                        ${this.getDeleteBtn()}
					</div>
				</div>
			</div>
		</div>`;

        $("".list-doc:last-child  .documents_list"").append(template);
        const { viewport } = await this.renderPreviewImage(file, page ?? 1, 181, 243, '#' + previewSelector);
        await this.renderPageSizePreview(page, file.id, viewport);

        return template;
    }

    async renderPageSizePreview(pn, fid, dataViewport = false) {
        if(!pn || pn == undefined) pn = 1;
        let viewport = this.cloneDeep(dataViewport);
        const sizeConfig = this.sizesConfig.find(sc => sc.fid == fid && sc.page == pn);
        const type = this.getResizeType();

        if (sizeConfig && type != 'margins') {
            viewport = {
                width: sizeConfig.sizes[0],
                height: sizeConfig.sizes[1],
                type: 'inch'
            };

        } else if (!viewport) {
            viewport = await this.getViewportByFIDAndPageNumber(fid, pn);
        }

        if (viewport.type != 'inch') {
            viewport.width = this.app.utils.pointsToInch(viewport.width / viewport.scale);
            viewport.height = this.app.utils.pointsToInch(viewport.height / viewport.scale);
        }

        if (type == 'margins') {
            const margin = this.marginConfig.find(mc => mc.fid == fid && mc.page == pn);
            if (margin) {
                viewport.width += margin.sizes.left + margin.sizes.right;
                viewport.height += margin.sizes.top + margin.sizes.bottom;
            }
        }

        if (this.sizesConfig)
            if (this.viewAs == 'pages') {
                const sizeElement = $(`[data-fid=""${fid}""][data-fpage=""${pn}""]`).find('[data-type=""size""]')[0];
                sizeElement.innerHTML = `${viewport.width.toFixed(2)}″ x ${viewport.height.toFixed(2)}″`;
            } else {
                const sizeElement = $(`[data-fid=""${fid}""]`).find('[data-type=""size""]')[0];
                if (sizeElement) {
                    sizeElement.innerHTML = `${viewport.width.toFixed(2)}″ x ${viewport.height.toFixed(2)}″`;
                }
            }
    }

    documentPagesPreview(file, pages) {
        for (let j = 0; j < pages; j++) {
            this.documentPreview(file, j + 1);
        }

        let wrapper = $("".list-doc:last-child"");
        wrapper.find('.list-docs--header').removeClass('hidden');
        wrapper.find('.line-name-text').html(file.name);
    }
}

let resize_tool = new Resize();
window.new_pdf_tool = window.resize_tool = resize_tool;
"
NfXGb0R9,Wow,zemf4you,Python,Tuesday 26th of September 2023 04:29:57 AM CDT,"import numpy as np
import tensorflow as tf

# Генерация данных
X_train = np.random.randint(0, 100, size=(1000, 10))
y_train = np.min(X_train, axis=1)

# Нормализация данных
X_train = X_train / 100.0
y_train = y_train / 100.0

# Создание модели
model = tf.keras.Sequential([
    tf.keras.layers.Input(shape=(10,)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dense(1, activation='linear')
])

# Компиляция модели
model.compile(optimizer='adam', loss='mse')

# Обучение модели
model.fit(X_train, y_train, epochs=50, batch_size=32)

# Тестирование
X_test = np.array([[4, 7, 8, 2, 1, 9, 3, 5, 6, 10]]) / 100.0
y_pred = model.predict(X_test) * 100

print(""Predicted min value:"", y_pred[0][0])
"
iET4q1MT,Log ISO Off Us BJB 26/09/2023 16:17,Abikayusri19,Bash,Tuesday 26th of September 2023 04:20:19 AM CDT,"16:17:36.175 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ===========================request begin================================================
16:17:36.175 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - URI         : http://bjb-hsm/bjb/hsm/pin
16:17:36.175 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Headers     : [Accept:""application/json, application/*+json"", Content-Type:""application/json"", Content-Length:""88""]
16:17:36.175 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Request body: {""terminalId"":""70040003"",""pinUnderTpk"":""5922D2666106CE25"",""cardNo"":""504986200000000112""}
16:17:36.175 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ==========================request end================================================
16:17:37.028 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ============================response begin==========================================
16:17:37.029 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Status code  : 200 OK
16:17:37.029 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Status text  : 
16:17:37.030 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Response body: {""pinBlock"":""1BC803C3C195B374""}
16:17:37.030 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - =======================response end=================================================
16:17:37.048 [http-nio-9872-exec-2] DEBUG i.b.n.e.i.e.b.p.s.BjbTrxServiceImpl - Updated bitmap: {32=110, 33=360001, 2=504986200000000112, 3=000000, 35=504986200000000112D23122011000000F, 4=12600, 37=000000209694, 7=0926091735, 41=70040003, 42=700400010001, 43=Menara BCA 39th Floor Kota Palu     JBID, 11=209694, 12=161735, 13=0926, 14=2312, 49=360, 18=6012, 52=1BC803C3C195B374, 22=051, 55=820254009F360200709F26089E430E1D356445BD9F2701809F34030200009F101C0101A00080000054EDA8ED00000000000000000000000000000000009F3303E0F8C89F350114950542800410009F3704591C7CAB9F02060000000126005A095049862000000001125F3401019F1A0203605F2A0203609A032309269C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000599, 25=00, 90=020020969409260917350000000011000000360001}
16:17:37.065 [http-nio-9872-exec-2] DEBUG i.b.n.c.c.c.s.RedisBackedCacheService - puts key: /j8583_000000209694/bjb/55, object: ""820254009F360200709F26089E430E1D356445BD9F2701809F34030200009F101C0101A00080000054EDA8ED00000000000000000000000000000000009F3303E0F8C89F350114950542800410009F3704591C7CAB9F02060000000126005A095049862000000001125F3401019F1A0203605F2A0203609A032309269C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000599"", timeout: 15, timeunit: MINUTES
16:17:37.067 [http-nio-9872-exec-2] DEBUG i.b.n.c.c.c.s.RedisBackedCacheService - puts key: /j8583_000000209694, object: {""dataB64"":""MDIwMEYyM0M0NDgxQThFMDkyMDAwMDAwMDA0MDAwMDAwMDIwMTg1MDQ5ODYyMDAwMDAwMDAxMTIwMDAwMDAwMDAwMDAwMTI2MDAwOTI2MDkxNzM1MjA5Njk0MTYxNzM1MDkyNjIzMTI2MDEyMDUxMDAwMzExMDA2MzYwMDAxMzQ1MDQ5ODYyMDAwMDAwMDAxMTJEMjMxMjIwMTEwMDAwMDBGMDAwMDAwMjA5Njk0NzAwNDAwMDM3MDA0MDAwMTAwMDEgICBNZW5hcmEgQkNBIDM5dGggRmxvb3IgS290YSBQYWx1ICAgICBKQklEMzYwMUJDODAzQzNDMTk1QjM3NDE2OIICVACfNgIAcJ8mCJ5DDh01ZEW9nycBgJ80AwIAAJ8QHAEBoACAAABU7ajtAAAAAAAAAAAAAAAAAAAAAACfMwPg+MifNQEUlQVCgAQQAJ83BFkcfKufAgYAAAABJgBaCVBJhiAAAAABEl80AQGfGgIDYF8qAgNgmgMjCSacAQCfCQIAAJ8eCDAwMDAwOTA1TwegAAAGAhAQhAegAAAGAhAQn0EEAAAFmTAyMDAyMDk2OTQwOTI2MDkxNzM1MDAwMDAwMDAxMTAwMDAwMDM2MDAwMTAyMDAwMDAyMDk2OTQwMDAwMjA5Njk0"",""binaryHeader"":false,""isoHeader"":null,""binaryHeaderB64"":null}, timeout: 10, timeunit: MINUTES
16:17:37.068 [nioEventLoopGroup-5-3] DEBUG i.b.n.e.i.c.CustomIsoLoggingHandler - [id: 0x1128f622, L:/10.19.52.7:60040 - R:/10.44.224.145:10608] WRITE: Message: 0200F23C4481A8E09200000000400000002018504986200000000112000000000000012600092609173520969416173509262312601205100031100636000134504986200000000112D23122011000000F00000020969470040003700400010001   Menara BCA 39th Floor Kota Palu     JBID3601BC803C3C195B374336820254009F360200709F26089E430E1D356445BD9F2701809F34030200009F101C0101A00080000054EDA8ED00000000000000000000000000000000009F3303E0F8C89F350114950542800410009F3704591C7CAB9F02060000000126005A095049862000000001125F3401019F1A0203605F2A0203609A032309269C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F41040000059902002096940926091735000000001100000036000102000002096940000209694
MTI: 0x0200
  2: [LLVAR(18)] = '504986200000000112'
  3: [NUMERIC(6)] = '000000'
  4: [NUMERIC(12)] = '000000012600'
  7: [NUMERIC(10)] = '0926091735'
  11: [NUMERIC(6)] = '209694'
  12: [NUMERIC(6)] = '161735'
  13: [DATE4(4)] = '0926'
  14: [NUMERIC(4)] = '2312'
  18: [NUMERIC(4)] = '6012'
  22: [NUMERIC(3)] = '051'
  25: [NUMERIC(2)] = '00'
  32: [LLVAR(3)] = '110'
  33: [LLVAR(6)] = '360001'
  35: [LLBCDBIN(34)] = '504986200000000112D23122011000000F'
  37: [NUMERIC(12)] = '000000209694'
  41: [ALPHA(8)] = '70040003'
  42: [ALPHA(15)] = '700400010001   '
  43: [ALPHA(40)] = 'Menara BCA 39th Floor Kota Palu     JBID'
  49: [NUMERIC(3)] = '360'
  52: [BINARY(8)] = '1BC803C3C195B374'
  55: [LLLBIN(168)] = '820254009F360200709F26089E430E1D356445BD9F2701809F34030200009F101C0101A00080000054EDA8ED00000000000000000000000000000000009F3303E0F8C89F350114950542800410009F3704591C7CAB9F02060000000126005A095049862000000001125F3401019F1A0203605F2A0203609A032309269C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000599'
  90: [NUMERIC(42)] = '020020969409260917350000000011000000360001'
  123: [LLLVAR(20)] = '00002096940000209694'
16:17:37.068 [nioEventLoopGroup-5-3] DEBUG i.b.n.e.i.c.CustomIsoLoggingHandler - [id: 0x1128f622, L:/10.19.52.7:60040 - R:/10.44.224.145:10608] FLUSH
16:17:37.267 [http-nio-9872-exec-2] DEBUG id.basys.ntt.edc.iso.MbIsoListener - RRN: 209694, Waiting for 70
16:17:43.288 [nioEventLoopGroup-4-5] DEBUG i.b.n.e.i.e.b.i.BJBCollegaJ8583MessageFactory - INCOMING: 303231303732334134343031414545303932303031383530343938363230303030303030303131323030303030303030303030303031323630303039323630393137333532303936393431363137333530393236303330343630313230353130333131303036333630303031333435303439383632303030303030303031313244323331323230313130303030303046303030303030323039363934303136333437303037303034303030333730303430303031303030312020204d656e61726120424341203339746820466c6f6f72204b6f74612050616c7520202020204a42494433363031424338303343334331393542333734303332910a413d5e043802b6c8303072129f18040000000186098424000004f56b6670
16:17:43.288 [nioEventLoopGroup-4-5] DEBUG i.b.n.e.i.e.b.i.BJBCollegaJ8583MessageFactory - CUTS: 303231303732334134343031414545303932303031383530343938363230303030303030303131323030303030303030303030303031323630303039323630393137333532303936393431363137333530393236303330343630313230353130333131303036333630303031333435303439383632303030303030303031313244323331323230313130303030303046303030303030323039363934303136333437303037303034303030333730303430303031303030312020204d656e61726120424341203339746820466c6f6f72204b6f74612050616c7520202020204a42494433363031424338303343334331393542333734303332910a413d5e043802b6c8303072129f18040000000186098424000004f56b6670
16:17:43.289 [nioEventLoopGroup-5-3] DEBUG i.b.n.e.i.c.CustomIsoLoggingHandler - [id: 0x1128f622, L:/10.19.52.7:60040 - R:/10.44.224.145:10608] READ: Message: 0210723A4401AEE09200185049862000000001120000000000000126000926091735209694161735092603046012051031100636000134504986200000000112D23122011000000F0000002096940163470070040003700400010001   Menara BCA 39th Floor Kota Palu     JBID3601BC803C3C195B374064910A413D5E043802B6C8303072129F18040000000186098424000004F56B6670
MTI: 0x0210
  2: [LLVAR(18)] = '504986200000000112'
  3: [NUMERIC(6)] = '000000'
  4: [NUMERIC(12)] = '000000012600'
  7: [NUMERIC(10)] = '0926091735'
  11: [NUMERIC(6)] = '209694'
  12: [TIME(6)] = '161735'
  13: [DATE4(4)] = '0926'
  15: [NUMERIC(4)] = '0304'
  18: [NUMERIC(4)] = '6012'
  22: [NUMERIC(3)] = '051'
  32: [LLVAR(3)] = '110'
  33: [LLVAR(6)] = '360001'
  35: [LLVAR(34)] = '504986200000000112D23122011000000F'
  37: [NUMERIC(12)] = '000000209694'
  38: [ALPHA(6)] = '016347'
  39: [ALPHA(2)] = '00'
  41: [ALPHA(8)] = '70040003'
  42: [ALPHA(15)] = '700400010001   '
  43: [ALPHA(40)] = 'Menara BCA 39th Floor Kota Palu     JBID'
  49: [NUMERIC(3)] = '360'
  52: [BINARY(8)] = '1BC803C3C195B374'
  55: [LLLBIN(64)] = '910A413D5E043802B6C8303072129F18040000000186098424000004F56B6670'"
LJwxVEAW,Uproar - GA - UA - Purchase,dusanmiha,JavaScript,Tuesday 26th of September 2023 04:19:33 AM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.purchase',                      
  'ecommerce': {                                // The Ecommerce object. This is the essential part of the tracking. New EEC data must always be pushed using this object.
    'currencyCode': 'USD',                      // The currency which is set by the visitor.    
    'purchase': {   
      'actionField': {
        'id': '123456',                         // The unique order ID of the transaction. Should match the actual ID of the order.
        'revenue': '360.00',                  // Total transaction value (incl. tax and shipping)
        'tax':'0.00',
        'shipping': '0.00',
        'coupon': 'coupon name'                 // The coupon code that was used for the entire transaction.
      },
      'products': [{                                            // Should contain all the purchased products.
        'name': 'Sauvage Parfum - Spray 3.4 oz',                       // The name of the product that is purchased. Always include it.
        'id': 'C099600455',                           // The ID (SKU) of the product. Always include it.
        'price': '180.00',                                    // The price of the product.
        'brand': 'DIOR',                                // The brand name of the product.
        'category': 'Men's Fragrance/Sauvage',  // Category of the product.
        'variant': 'Spray 3.4 oz',            // The product variant. If there are no variants, always send Base Product.
        'quantity': 1
       },          
       {
        'name': 'Sauvage Elixir - Spray 2.0 oz',                
        'id': 'C099600755',              
        'price': '180.00',               
        'brand': 'DIOR',             
        'category': 'Engraving Service/Fragrance',          
        'variant': 'Spray 2.0 oz',              
        'quantity': 1
       }]
    }
  }
});
</script>"
UbTL49Jk,Uproar - GA - UA - Checkout Option,dusanmiha,JavaScript,Tuesday 26th of September 2023 04:15:25 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.checkoutOption',
  'ecommerce': {
    'checkout_option': {
      'actionField': {'step': 2, 'option': 'The Eco-shipping box'},
    }
  }
});"
Kw3cnYBZ,Untitled,rsx2007,MySQL,Tuesday 26th of September 2023 04:12:41 AM CDT,"INSERT INTO `tankinventory` (`id`, `date`, `tankId`, `fuelId`, `doc`, `oldVolume`, `operVolume`, `operRest`, `volume`) VALUES (NULL, '2023-09-26 11:31:20', '1', '1', '', '-9999999999.00', '0.00', '0.00', '9999999999.00');"
8ftcFhME,nvim nvchad file manager script,D3ENNY,Bash,Tuesday 26th of September 2023 04:12:01 AM CDT,"  function vim
    
    if test -e $argv[1]
      if test -f $argv[1]
        cd (dirname $argv[1])
        nvim (basename $argv[1])
      else if test -d $argv[1]
        cd $argv[1]
        nvim $argv[1]
      end
    else 
      nvim $arv[1]
    end
    prevd

  end"
u6YG5fYT,Uproar - GA - UA - Checkout,dusanmiha,JavaScript,Tuesday 26th of September 2023 04:04:38 AM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.checkout',
  'ecommerce': {
    'checkout': {
      'actionField': {'step': 1},
      'products': [{
        'name': 'Sauvage Parfum - Spray 3.4 oz',
        'id': 'C099600455',       // SKU of the base product.
        'price': '180.00',                // Price of the selected product variant. 
        'brand': 'DIOR',
        'category': 'Men's Fragrance/Sauvage',
        'variant': 'Spray 3.4 oz',                // The product variant.
        'quantity': 1
      }]
    }
  }
});
</script>"
PEJb42V3,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 26th of September 2023 03:38:20 AM CDT,"Pasted at: 26/09/2023 09:38
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
BT86SHuS,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 26th of September 2023 03:38:18 AM CDT,"Pasted at: 26/09/2023 09:38
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
xESS33Aw,telebot_13_ver,sunsexsurf,Python,Tuesday 26th of September 2023 03:10:57 AM CDT,"import logging
from telegram import ParseMode

# импорт расширений библиотеки
from telegram.ext import (
    Updater,
    CommandHandler,
    PollAnswerHandler,
    PollHandler,
    MessageHandler,
    Filters,
)

from config import API_TOKEN

# подключение логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

### ОПРЕДЕЛЕНИЕ ФУНКЦИЙ ОБРАТНОГО ВЫЗОВА ###

def start(update, _):
    """"""Информация о том, что может сделать этот бот""""""
    update.message.reply_text(
        'Введите `/poll` для участия в опросе, `/quiz` для участия в викторине или `/preview`'
        ' чтобы создать собственный опрос/викторину'
    )

def poll(update, context):
    """"""Отправка заранее подготовленного опроса""""""
    # Вопрос опроса и его ответы.

    questions = ""Кто лучший?""
    answer = [""Иванов"", ""Петров"", ""Сидоров"", ""Смирнов""]
    total_a = ''
    # Отправляем опрос в чат
    message = context.bot.send_poll(
        update.effective_chat.id, questions, answer, 
        is_anonymous=False, allows_multiple_answers=False,
    )
    # Сохраним информацию опроса в `bot_data` для последующего 
    # использования в функции `receive_poll_answer`
    payload = { # ключом словаря с данными будет `id` опроса
        message.poll.id: {
            ""questions"": questions,
            ""message_id"": message.message_id,
            ""chat_id"": update.effective_chat.id,
            ""answers"": 0,
            ""ans"": answer,
            ""total_ans"": total_a
        }
    }
    # сохранение промежуточных результатов в `bot_data`
    context.bot_data.update(payload)

def receive_poll_answer(update, context):
    """"""Итоги опроса пользователей""""""
    answer = update.poll_answer
    poll_id = answer.poll_id
    try:
        questions = context.bot_data[poll_id][""questions""]
        ans_list = context.bot_data[poll_id][""ans""]
        total_ans = context.bot_data[poll_id][""total_ans""]
    except KeyError:  # Это ответ на старый опрос
        return

    selected_options = answer.option_ids
    answer_string = ans_list[selected_options[0]]

    total_ans = total_ans + answer_string + ' '

    context.bot.send_message(
        context.bot_data[poll_id][""chat_id""],
        f""Вы ответили => {answer_string}!"",
        parse_mode=ParseMode.HTML,
    )
    # изменение промежуточных результатов в `bot_data`
    context.bot_data[poll_id][""answers""] += 1
    # Закрываем опрос после того, как проголосовали 1 участник
    if context.bot_data[poll_id][""answers""] == 1:
        context.bot.stop_poll(
            context.bot_data[poll_id][""chat_id""], context.bot_data[poll_id][""message_id""]
        )

    a = ans_list
    del a[selected_options[0]]

    if len(a) > 1:
        # Отправляем опрос в чат
        message = context.bot.send_poll(
            context.bot_data[poll_id][""chat_id""], questions, a,
            is_anonymous=False, allows_multiple_answers=False,
        )
        # Сохраним информацию опроса в `bot_data` для последующего
        # использования в функции `receive_poll_answer`
        payload = { # ключом словаря с данными будет `id` опроса
            message.poll.id: {
                ""questions"": questions,
                ""message_id"": message.message_id,
                ""chat_id"": context.bot_data[poll_id][""chat_id""],
                ""answers"": 0,
                ""ans"": a,
                ""total_ans"": total_ans
            }
        }
        # сохранение промежуточных результатов в `bot_data`
        context.bot_data.update(payload)
    else:
        total_ans = total_ans + ' ' + a[0]
        context.bot.send_message(
            context.bot_data[poll_id][""chat_id""],
            f""Вы завершили голосование! Результат: {total_ans}!"",
            parse_mode=ParseMode.HTML,
        )

if __name__ == '__main__':
    updater = Updater(API_TOKEN)
    dispatcher = updater.dispatcher

    # определяем соответствующие обработчики
    dispatcher.add_handler(CommandHandler('start', start))
    # команда `/pool`
    dispatcher.add_handler(CommandHandler('poll', poll))
    # обработчик ответа на опрос
    dispatcher.add_handler(PollAnswerHandler(receive_poll_answer))

    # Запуск бота
    updater.start_polling()
    updater.idle()
"
etrzFJdA,Uproar - GA - UA - Remove from Cart,dusanmiha,JavaScript,Tuesday 26th of September 2023 03:09:28 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.addToCart',
  'ecommerce': {
    'currencyCode': 'USD',
    'remove': {
      'products': [{
        'name': 'Sauvage Parfum - Spray 3.4 oz',
        'id': 'C099600455',                   // SKU of the base product.
        'price': '180.00',                
        'brand': 'DIOR',
        'category': 'Men's Fragrance/Sauvage',
        'variant': 'Spray 3.4 oz',   // The product variant.
        'quantity': 1
      }]
    }
  }
});"
EgPYyCki,Uproar - GA - UA - Add To Cart,dusanmiha,JavaScript,Tuesday 26th of September 2023 03:02:59 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.addToCart',
  'ecommerce': {
    'currencyCode': 'USD',
    'add': {
      'products': [{
        'name': 'Sauvage Parfum - Spray 3.4 oz',
        'id': 'C099600455',                   // SKU of the base product.
        'price': '180.00',                
        'brand': 'DIOR',
        'category': 'Men's Fragrance/Sauvage',
        'variant': 'Spray 3.4 oz',   // The product variant.
        'quantity': 1
      }]
    }
  }
});"
ZwSkt31p,Uproar - GA - UA - Product Detail View,dusanmiha,JavaScript,Tuesday 26th of September 2023 02:59:09 AM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.productDetail',                     // Name of the event. In this case, always stays as 'eec.productDetail'.
  'ecommerce': {                                    // The Ecommerce object. This is the essential part of the tracking. New EEC data must always be pushed using this object.
    'detail': {                                     // Type of an ecommerce action. In this case, always stays as 'detail'. 
      'products': [{                  
        'name': 'Sauvage Parfum - Spray 3.4 oz',                       // The name of the product that was viewed. Always include it.
        'id': 'C099600455',                           // The ID (SKU) of the product. Always include it.
        'price': '180.00',                                    // The price of the product.
        'brand': 'DIOR',                                // The brand name of the product.
        'category': 'Men's Fragrance/Sauvage',  // Category of the product.
        'variant': 'Spray 3.4 oz'            // The product variant. If there are no variants, or if the base product was viewed, send Base Product.
       }]
     }
   }
});
</script>"
zV5cWtM8,rent receipt - cleartax formatter,abhijithvijayan,JavaScript,Tuesday 26th of September 2023 02:57:47 AM CDT,"(() => {
    let repayments = {
      1: ""Apr 02 2022"",
      2: ""May 01 2022"",
      3: ""Jun 02 2022"",
      4: ""Jul 04 2022"",
      5: ""Aug 03 2022"",
      6: ""Sep 04 2022"",
      7: ""Oct 03 2022"",
      8: ""Nov 02 2022"",
      9: ""Dec 04 2022"",
      10: ""Jan 02 2023"",
      11: ""Feb 04 2023"",
      12: ""Mar 01 2023""
    };
    
    [...document.querySelectorAll(""a[href='/save/rent']"")].forEach((x) => x.parentNode?.remove());
    [...document.querySelectorAll(""strong"")].filter((t) => t.textContent == ""RENT RECEIPT"").forEach((t) => t.parentNode?.children?.[1]?.remove());
    [...document.querySelectorAll(""strong"")].filter((t) => t.textContent.includes(""Pan"")).forEach((t) => t.textContent = t.textContent.replace(""Pan"", ""PAN""));
    [...document.querySelectorAll(""span"")].filter((t) => t.textContent == ""Provisional"").forEach((t) => t.parentNode?.remove()); 
    [...document.querySelectorAll(""p"")].filter((t) => t.textContent.includes(""Receipt No:"")).forEach((t) => {
        const text = t.textContent ?? """";
        const {1: receiptNumber} = text.split(/(\d+)/);
        if (receiptNumber in repayments) {
          const date = [...t.parentNode.children].find((c) => c.textContent.includes(""Date:""));
          date.textContent = `Date: ${repayments[receiptNumber]}`
        }
    });
})()"
u2aMmt8x,Uproar - GA - UA - Product Click,dusanmiha,JavaScript,Tuesday 26th of September 2023 02:48:38 AM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
    'event': 'eec.productClick',        // Name of the event. In this case, always stays as 'eec.productClick'.
    'ecommerce': {                      // The Ecommerce object. This is the essential part of the tracking. New EEC data must always be pushed using this object.
      'click': {                        // Type of an ecommerce action. In this case, always stays as 'click'.
        'actionField': {
            'list': 'Sauvage Collection'                   // The list name where the product was clicked.
        },  
        'products': [{
            'name': 'Sauvage Parfum - Spray 3.4 oz',                       // The name of the product that was clicked.
            'id': 'C099600455',                           // The ID (SKU) of the product.
            'price': '180.00',                                     //  The price of the product.
            'brand': 'DIOR',                                // The brand name of the product.
            'category': 'Men's Fragrance/Sauvage',  // Category of the product.
            'variant': 'Spray 3.4 oz',                              // The product variant. If there are no variants, always send Base Product.
            'position': '2'						// The position of the item in the list (e.g. was it the first item in the list, the second, the third, etc.).
       }]
     }
  }
});
</script>"
yzdJfCq6,Uproar - GA - UA - Product Impression,dusanmiha,JavaScript,Tuesday 26th of September 2023 02:45:28 AM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'eec.productImpression',     // Name of the event. In this case, always stays as 'eec.productImpression'.
  'ecommerce': {                        // The Ecommerce object. This is the essential part of the tracking. New EEC data must always be pushed using this object.
    'currencyCode': 'USD',              // The currency which is set by the visitor.              
    'impressions': [{           
      'name': 'Sauvage Elixir - Spray 2.0 oz',                     // The name of the product that is displayed. Always include it.
      'id': 'C099600755',                                  // The ID (SKU) of the product. Always include it.
      'price': '180.00',                                       // The price of the product.
      'brand': 'DIOR',                              // The brand name of the product.
      'category': 'Engraving Service/Fragrance',    // Category of the product.
      'variant': 'Spray 2.0 oz',                            // The product variant. If there are no variants, always send Base Product.
      'list': 'Sauvage Collection',                                // The list name where the impression was viewed.
      'position': '1'                                      // The position of the item in the list (e.g. was it the first item in the list, the second, the third, etc.).
     },         
     {
      'name': 'Sauvage Parfum - Spray 3.4 oz',                  
      'id': 'C099600455',                
      'price': '180.00',             
      'brand': 'DIOR',               
      'category': 'Men's Fragrance/Sauvage',            
      'variant': 'Spray 3.4 oz',            
      'list': 'Sauvage Collection',                    
      'position': '2'              
     }]
  }
});
</script>"
FQahhreS,Untitled,smj007,Python,Tuesday 26th of September 2023 02:17:42 AM CDT,"class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
    
        cumsum = 0
        for num in nums:
            cumsum += num

        left_sum = 0
        for i in range(len(nums)):
            right_sum = cumsum - left_sum - nums[i]
            if left_sum == right_sum:
                return i
            left_sum = left_sum + nums[i]

        return -1"
nQB1LfPy,Mouse Gradient JS Advanced,TZinovieva,JavaScript,Tuesday 26th of September 2023 02:10:39 AM CDT,"function attachGradientEvents() {
    function attachGradientEvents() {
        let gradient = document.getElementById('gradient');

        gradient.addEventListener('mousemove', gradientMove);
        gradient.addEventListener('mouseout', gradientOut);

        function gradientMove(event) {
            let power = event.offsetX / (event.target.clientWidth - 1);
            power = Math.trunc(power * 100);
            document.getElementById('result').textContent = power + ""%"";
        }

        function gradientOut(event) {
            document.getElementById('result').textContent = """";
        }
    };
}"
hC7UTWjs,Nigerian scammers [26-9-1/2023],bombaires,HTML,Tuesday 26th of September 2023 01:06:59 AM CDT,"<a href=""mailto:europeancb20@gmail.com"">europeancb20@gmail.com</a>
<a href=""mailto:eu.r.o.pe.a.nc.b20@gmail.com"">eu.r.o.pe.a.nc.b20@gmail.com</a>
<a href=""mailto:eu.r.o.pe.a.ncb.20@gmail.com"">eu.r.o.pe.a.ncb.20@gmail.com</a>
<a href=""mailto:e.u.ropean.c.b.2.0@gmail.com"">e.u.ropean.c.b.2.0@gmail.com</a>
<a href=""mailto:eu.rop.e.a.ncb20@gmail.com"">eu.rop.e.a.ncb20@gmail.com</a>
<a href=""mailto:e.uro.p.e.a.ncb20@gmail.com"">e.uro.p.e.a.ncb20@gmail.com</a>
<a href=""mailto:e.u.r.op.ea.nc.b.20@gmail.com"">e.u.r.op.ea.nc.b.20@gmail.com</a>
<a href=""mailto:e.u.ro.p.e.an.cb2.0@gmail.com"">e.u.ro.p.e.an.cb2.0@gmail.com</a>
<a href=""mailto:eu.ro.pea.n.cb2.0@gmail.com"">eu.ro.pea.n.cb2.0@gmail.com</a>
<a href=""mailto:eu.r.o.p.e.a.nc.b.2.0@gmail.com"">eu.r.o.p.e.a.nc.b.2.0@gmail.com</a>
<a href=""mailto:euro.pean.c.b.2.0@gmail.com"">euro.pean.c.b.2.0@gmail.com</a>
<a href=""mailto:e.ur.ope.a.n.c.b.2.0@gmail.com"">e.ur.ope.a.n.c.b.2.0@gmail.com</a>
<a href=""mailto:e.u.r.ope.a.n.cb.2.0@gmail.com"">e.u.r.ope.a.n.cb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ean.cb.2.0@gmail.com"">e.u.r.o.p.ean.cb.2.0@gmail.com</a>
<a href=""mailto:e.u.rop.e.a.nc.b20@gmail.com"">e.u.rop.e.a.nc.b20@gmail.com</a>
<a href=""mailto:e.urop.eanc.b.20@gmail.com"">e.urop.eanc.b.20@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.a.ncb20@gmail.com"">e.u.r.o.pe.a.ncb20@gmail.com</a>
<a href=""mailto:eu.r.ope.a.ncb.2.0@gmail.com"">eu.r.ope.a.ncb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ea.n.c.b.20@gmail.com"">e.u.r.o.p.ea.n.c.b.20@gmail.com</a>
<a href=""mailto:euro.pea.n.c.b20@gmail.com"">euro.pea.n.c.b20@gmail.com</a>
<a href=""mailto:eu.rop.ea.n.c.b2.0@gmail.com"">eu.rop.ea.n.c.b2.0@gmail.com</a>
<a href=""mailto:e.uro.p.eancb.2.0@gmail.com"">e.uro.p.eancb.2.0@gmail.com</a>
<a href=""mailto:eur.op.eanc.b.2.0@gmail.com"">eur.op.eanc.b.2.0@gmail.com</a>
<a href=""mailto:eur.opea.n.cb.2.0@gmail.com"">eur.opea.n.cb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.peancb20@gmail.com"">e.u.r.o.peancb20@gmail.com</a>
<a href=""mailto:e.urope.a.ncb.2.0@gmail.com"">e.urope.a.ncb.2.0@gmail.com</a>
<a href=""mailto:eu.r.opeancb.2.0@gmail.com"">eu.r.opeancb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.opeancb20@gmail.com"">e.u.r.opeancb20@gmail.com</a>
<a href=""mailto:e.u.r.o.pean.cb.20@gmail.com"">e.u.r.o.pean.cb.20@gmail.com</a>
<a href=""mailto:eu.rop.ean.cb2.0@gmail.com"">eu.rop.ean.cb2.0@gmail.com</a>
<a href=""mailto:e.u.ropeanc.b.2.0@gmail.com"">e.u.ropeanc.b.2.0@gmail.com</a>
<a href=""mailto:e.ur.op.ea.nc.b20@gmail.com"">e.ur.op.ea.nc.b20@gmail.com</a>
<a href=""mailto:e.ur.o.p.e.ancb20@gmail.com"">e.ur.o.p.e.ancb20@gmail.com</a>
<a href=""mailto:e.ur.o.p.e.a.n.cb2.0@gmail.com"">e.ur.o.p.e.a.n.cb2.0@gmail.com</a>
<a href=""mailto:e.uro.p.e.an.cb.2.0@gmail.com"">e.uro.p.e.an.cb.2.0@gmail.com</a>
<a href=""mailto:e.urop.ea.ncb2.0@gmail.com"">e.urop.ea.ncb2.0@gmail.com</a>
<a href=""mailto:eu.ro.p.ea.ncb20@gmail.com"">eu.ro.p.ea.ncb20@gmail.com</a>
<a href=""mailto:eu.r.o.p.ea.n.cb20@gmail.com"">eu.r.o.p.ea.n.cb20@gmail.com</a>
<a href=""mailto:e.u.rope.anc.b2.0@gmail.com"">e.u.rope.anc.b2.0@gmail.com</a>
<a href=""mailto:e.urop.e.a.n.cb20@gmail.com"">e.urop.e.a.n.cb20@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.ancb.2.0@gmail.com"">e.u.r.o.pe.ancb.2.0@gmail.com</a>
<a href=""mailto:eu.r.o.pea.nc.b.2.0@gmail.com"">eu.r.o.pea.nc.b.2.0@gmail.com</a>
<a href=""mailto:eu.ropea.nc.b20@gmail.com"">eu.ropea.nc.b20@gmail.com</a>
<a href=""mailto:e.u.rop.ean.cb.20@gmail.com"">e.u.rop.ean.cb.20@gmail.com</a>
<a href=""mailto:e.urop.e.a.n.c.b20@gmail.com"">e.urop.e.a.n.c.b20@gmail.com</a>
<a href=""mailto:eu.r.opeancb.20@gmail.com"">eu.r.opeancb.20@gmail.com</a>
<a href=""mailto:e.u.r.op.e.a.n.c.b2.0@gmail.com"">e.u.r.op.e.a.n.c.b2.0@gmail.com</a>
<a href=""mailto:eu.ro.p.ean.cb.2.0@gmail.com"">eu.ro.p.ean.cb.2.0@gmail.com</a>
<a href=""mailto:e.ur.op.e.a.nc.b20@gmail.com"">e.ur.op.e.a.nc.b20@gmail.com</a>
<a href=""mailto:europ.eanc.b20@gmail.com"">europ.eanc.b20@gmail.com</a>
<a href=""mailto:eu.r.o.pean.cb.20@gmail.com"">eu.r.o.pean.cb.20@gmail.com</a>
<a href=""mailto:e.urop.eancb.20@gmail.com"">e.urop.eancb.20@gmail.com</a>
<a href=""mailto:europ.e.ancb.20@gmail.com"">europ.e.ancb.20@gmail.com</a>
<a href=""mailto:eu.r.o.peancb20@gmail.com"">eu.r.o.peancb20@gmail.com</a>
<a href=""mailto:eu.ro.pea.nc.b2.0@gmail.com"">eu.ro.pea.nc.b2.0@gmail.com</a>
<a href=""mailto:europ.e.a.ncb2.0@gmail.com"">europ.e.a.ncb2.0@gmail.com</a>
<a href=""mailto:eu.r.o.p.eancb2.0@gmail.com"">eu.r.o.p.eancb2.0@gmail.com</a>
<a href=""mailto:e.urop.e.a.nc.b20@gmail.com"">e.urop.e.a.nc.b20@gmail.com</a>
<a href=""mailto:eu.ro.p.e.anc.b2.0@gmail.com"">eu.ro.p.e.anc.b2.0@gmail.com</a>
<a href=""mailto:e.urop.e.ancb20@gmail.com"">e.urop.e.ancb20@gmail.com</a>
<a href=""mailto:eur.op.eanc.b2.0@gmail.com"">eur.op.eanc.b2.0@gmail.com</a>
<a href=""mailto:eu.r.op.ea.ncb.2.0@gmail.com"">eu.r.op.ea.ncb.2.0@gmail.com</a>
<a href=""mailto:eu.ro.p.e.anc.b20@gmail.com"">eu.ro.p.e.anc.b20@gmail.com</a>
<a href=""mailto:e.urope.an.cb.2.0@gmail.com"">e.urope.an.cb.2.0@gmail.com</a>
<a href=""mailto:europeanc.b2.0@gmail.com"">europeanc.b2.0@gmail.com</a>
<a href=""mailto:e.u.rope.an.cb.2.0@gmail.com"">e.u.rope.an.cb.2.0@gmail.com</a>
<a href=""mailto:eu.r.op.ea.nc.b.2.0@gmail.com"">eu.r.op.ea.nc.b.2.0@gmail.com</a>
<a href=""mailto:europ.eanc.b.2.0@gmail.com"">europ.eanc.b.2.0@gmail.com</a>
<a href=""mailto:e.urop.ea.n.cb.2.0@gmail.com"">e.urop.ea.n.cb.2.0@gmail.com</a>
<a href=""mailto:e.uropea.n.c.b20@gmail.com"">e.uropea.n.c.b20@gmail.com</a>
<a href=""mailto:e.uro.p.e.ancb.2.0@gmail.com"">e.uro.p.e.ancb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.peancb.2.0@gmail.com"">e.u.r.o.peancb.2.0@gmail.com</a>
<a href=""mailto:eu.ro.pe.a.n.c.b.20@gmail.com"">eu.ro.pe.a.n.c.b.20@gmail.com</a>
<a href=""mailto:e.uro.pea.n.cb2.0@gmail.com"">e.uro.pea.n.cb2.0@gmail.com</a>
<a href=""mailto:euro.pe.a.nc.b.20@gmail.com"">euro.pe.a.nc.b.20@gmail.com</a>
<a href=""mailto:eu.ro.p.e.anc.b.2.0@gmail.com"">eu.ro.p.e.anc.b.2.0@gmail.com</a>
<a href=""mailto:eu.r.o.peanc.b2.0@gmail.com"">eu.r.o.peanc.b2.0@gmail.com</a>
<a href=""mailto:europe.a.ncb20@gmail.com"">europe.a.ncb20@gmail.com</a>
<a href=""mailto:e.urop.ean.cb2.0@gmail.com"">e.urop.ean.cb2.0@gmail.com</a>
<a href=""mailto:europe.a.n.c.b.2.0@gmail.com"">europe.a.n.c.b.2.0@gmail.com</a>
<a href=""mailto:europeanc.b.2.0@gmail.com"">europeanc.b.2.0@gmail.com</a>
<a href=""mailto:eu.r.o.pea.ncb.20@gmail.com"">eu.r.o.pea.ncb.20@gmail.com</a>
<a href=""mailto:e.ur.op.ea.ncb.20@gmail.com"">e.ur.op.ea.ncb.20@gmail.com</a>
<a href=""mailto:e.ur.o.pean.cb.2.0@gmail.com"">e.ur.o.pean.cb.2.0@gmail.com</a>
<a href=""mailto:euro.peanc.b2.0@gmail.com"">euro.peanc.b2.0@gmail.com</a>
<a href=""mailto:e.u.ro.peanc.b.2.0@gmail.com"">e.u.ro.peanc.b.2.0@gmail.com</a>
<a href=""mailto:euro.p.eanc.b20@gmail.com"">euro.p.eanc.b20@gmail.com</a>
<a href=""mailto:eu.r.opea.n.cb20@gmail.com"">eu.r.opea.n.cb20@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ea.n.c.b2.0@gmail.com"">e.u.r.o.p.ea.n.c.b2.0@gmail.com</a>
<a href=""mailto:eur.opea.nc.b.20@gmail.com"">eur.opea.nc.b.20@gmail.com</a>
<a href=""mailto:e.uro.pe.a.n.cb20@gmail.com"">e.uro.pe.a.n.cb20@gmail.com</a>
<a href=""mailto:e.urop.eanc.b2.0@gmail.com"">e.urop.eanc.b2.0@gmail.com</a>
<a href=""mailto:euro.pea.n.cb2.0@gmail.com"">euro.pea.n.cb2.0@gmail.com</a>
<a href=""mailto:e.u.r.op.eanc.b.2.0@gmail.com"">e.u.r.op.eanc.b.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ean.c.b.2.0@gmail.com"">e.u.r.o.p.ean.c.b.2.0@gmail.com</a>
<a href=""mailto:eur.op.e.a.ncb.2.0@gmail.com"">eur.op.e.a.ncb.2.0@gmail.com</a>
<a href=""mailto:e.u.ropean.c.b2.0@gmail.com"">e.u.ropean.c.b2.0@gmail.com</a>
<a href=""mailto:eu.ro.pea.n.c.b2.0@gmail.com"">eu.ro.pea.n.c.b2.0@gmail.com</a>
<a href=""mailto:euro.p.e.an.c.b.20@gmail.com"">euro.p.e.an.c.b.20@gmail.com</a>
<a href=""mailto:eur.o.p.ean.c.b2.0@gmail.com"">eur.o.p.ean.c.b2.0@gmail.com</a>
<a href=""mailto:e.uro.pean.cb.2.0@gmail.com"">e.uro.pean.cb.2.0@gmail.com</a>
<a href=""mailto:eu.r.o.p.ean.cb20@gmail.com"">eu.r.o.p.ean.cb20@gmail.com</a>
<a href=""mailto:europeanc.b.20@gmail.com"">europeanc.b.20@gmail.com</a>
<a href=""mailto:eu.r.o.p.e.an.cb.20@gmail.com"">eu.r.o.p.e.an.cb.20@gmail.com</a>
<a href=""mailto:eu.r.ope.anc.b.20@gmail.com"">eu.r.ope.anc.b.20@gmail.com</a>
<a href=""mailto:eur.op.e.an.cb20@gmail.com"">eur.op.e.an.cb20@gmail.com</a>
<a href=""mailto:eu.ro.pe.a.nc.b.2.0@gmail.com"">eu.ro.pe.a.nc.b.2.0@gmail.com</a>
<a href=""mailto:euro.p.ean.c.b2.0@gmail.com"">euro.p.ean.c.b2.0@gmail.com</a>
<a href=""mailto:eu.rop.e.an.c.b2.0@gmail.com"">eu.rop.e.an.c.b2.0@gmail.com</a>
<a href=""mailto:eu.rop.e.a.nc.b20@gmail.com"">eu.rop.e.a.nc.b20@gmail.com</a>
<a href=""mailto:eu.rop.e.a.ncb.20@gmail.com"">eu.rop.e.a.ncb.20@gmail.com</a>
<a href=""mailto:eur.opea.n.c.b2.0@gmail.com"">eur.opea.n.c.b2.0@gmail.com</a>
<a href=""mailto:euro.p.e.a.n.cb.2.0@gmail.com"">euro.p.e.a.n.cb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.an.cb2.0@gmail.com"">e.u.r.o.pe.an.cb2.0@gmail.com</a>
<a href=""mailto:eur.op.e.a.nc.b2.0@gmail.com"">eur.op.e.a.nc.b2.0@gmail.com</a>
<a href=""mailto:eur.o.pean.cb.20@gmail.com"">eur.o.pean.cb.20@gmail.com</a>
<a href=""mailto:euro.p.ean.c.b.20@gmail.com"">euro.p.ean.c.b.20@gmail.com</a>
<a href=""mailto:eu.rope.a.ncb2.0@gmail.com"">eu.rope.a.ncb2.0@gmail.com</a>
<a href=""mailto:e.uro.p.e.a.nc.b.20@gmail.com"">e.uro.p.e.a.nc.b.20@gmail.com</a>
<a href=""mailto:e.ur.o.p.e.a.ncb20@gmail.com"">e.ur.o.p.e.a.ncb20@gmail.com</a>
<a href=""mailto:eu.rope.a.n.c.b20@gmail.com"">eu.rope.a.n.c.b20@gmail.com</a>
<a href=""mailto:e.urope.ancb2.0@gmail.com"">e.urope.ancb2.0@gmail.com</a>
<a href=""mailto:e.ur.o.p.e.anc.b2.0@gmail.com"">e.ur.o.p.e.anc.b2.0@gmail.com</a>
<a href=""mailto:eur.o.p.e.anc.b2.0@gmail.com"">eur.o.p.e.anc.b2.0@gmail.com</a>
<a href=""mailto:eu.ro.p.e.a.ncb2.0@gmail.com"">eu.ro.p.e.a.ncb2.0@gmail.com</a>
<a href=""mailto:e.u.r.ope.a.n.c.b.2.0@gmail.com"">e.u.r.ope.a.n.c.b.2.0@gmail.com</a>
<a href=""mailto:e.u.r.op.ea.nc.b.2.0@gmail.com"">e.u.r.op.ea.nc.b.2.0@gmail.com</a>
<a href=""mailto:euro.p.eancb.20@gmail.com"">euro.p.eancb.20@gmail.com</a>
<a href=""mailto:eur.ope.a.n.cb20@gmail.com"">eur.ope.a.n.cb20@gmail.com</a>
<a href=""mailto:eu.ro.p.e.a.nc.b.2.0@gmail.com"">eu.ro.p.e.a.nc.b.2.0@gmail.com</a>
<a href=""mailto:e.u.rope.an.cb20@gmail.com"">e.u.rope.an.cb20@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ea.nc.b2.0@gmail.com"">e.u.r.o.p.ea.nc.b2.0@gmail.com</a>
<a href=""mailto:e.u.ro.pe.a.ncb.2.0@gmail.com"">e.u.ro.pe.a.ncb.2.0@gmail.com</a>
<a href=""mailto:eu.ro.pea.ncb20@gmail.com"">eu.ro.pea.ncb20@gmail.com</a>
<a href=""mailto:e.u.ro.pean.cb2.0@gmail.com"">e.u.ro.pean.cb2.0@gmail.com</a>
<a href=""mailto:e.u.ro.p.eanc.b2.0@gmail.com"">e.u.ro.p.eanc.b2.0@gmail.com</a>
<a href=""mailto:e.u.rope.a.ncb.20@gmail.com"">e.u.rope.a.ncb.20@gmail.com</a>
<a href=""mailto:eu.ro.peancb20@gmail.com"">eu.ro.peancb20@gmail.com</a>
<a href=""mailto:eur.op.e.anc.b20@gmail.com"">eur.op.e.anc.b20@gmail.com</a>
<a href=""mailto:e.uro.pe.a.n.c.b.20@gmail.com"">e.uro.pe.a.n.c.b.20@gmail.com</a>
<a href=""mailto:eu.r.ope.anc.b20@gmail.com"">eu.r.ope.anc.b20@gmail.com</a>
<a href=""mailto:e.u.ro.peanc.b2.0@gmail.com"">e.u.ro.peanc.b2.0@gmail.com</a>
<a href=""mailto:e.u.rop.ean.c.b20@gmail.com"">e.u.rop.ean.c.b20@gmail.com</a>
<a href=""mailto:e.ur.o.p.e.an.cb2.0@gmail.com"">e.ur.o.p.e.an.cb2.0@gmail.com</a>
<a href=""mailto:e.urop.ean.c.b.20@gmail.com"">e.urop.ean.c.b.20@gmail.com</a>
<a href=""mailto:eu.ro.pea.nc.b.2.0@gmail.com"">eu.ro.pea.nc.b.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.peanc.b.2.0@gmail.com"">e.u.r.o.peanc.b.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ean.cb2.0@gmail.com"">e.u.r.o.p.ean.cb2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.anc.b.20@gmail.com"">e.u.r.o.pe.anc.b.20@gmail.com</a>
<a href=""mailto:eur.o.p.e.an.c.b.20@gmail.com"">eur.o.p.e.an.c.b.20@gmail.com</a>
<a href=""mailto:eu.rope.a.nc.b20@gmail.com"">eu.rope.a.nc.b20@gmail.com</a>
<a href=""mailto:eu.rop.e.anc.b.20@gmail.com"">eu.rop.e.anc.b.20@gmail.com</a>
<a href=""mailto:e.urope.a.nc.b20@gmail.com"">e.urope.a.nc.b20@gmail.com</a>
<a href=""mailto:euro.p.e.ancb.20@gmail.com"">euro.p.e.ancb.20@gmail.com</a>
<a href=""mailto:e.urop.e.a.nc.b2.0@gmail.com"">e.urop.e.a.nc.b2.0@gmail.com</a>
<a href=""mailto:euro.pe.an.c.b20@gmail.com"">euro.pe.an.c.b20@gmail.com</a>
<a href=""mailto:e.u.r.op.e.ancb.20@gmail.com"">e.u.r.op.e.ancb.20@gmail.com</a>
<a href=""mailto:e.ur.ope.an.c.b20@gmail.com"">e.ur.ope.an.c.b20@gmail.com</a>
<a href=""mailto:e.ur.opean.c.b20@gmail.com"">e.ur.opean.c.b20@gmail.com</a>
<a href=""mailto:e.u.ro.p.eanc.b.20@gmail.com"">e.u.ro.p.eanc.b.20@gmail.com</a>
<a href=""mailto:e.u.ro.p.e.an.cb20@gmail.com"">e.u.ro.p.e.an.cb20@gmail.com</a>
<a href=""mailto:e.u.r.op.e.a.n.c.b.20@gmail.com"">e.u.r.op.e.a.n.c.b.20@gmail.com</a>
<a href=""mailto:e.ur.o.pea.nc.b.2.0@gmail.com"">e.ur.o.pea.nc.b.2.0@gmail.com</a>
<a href=""mailto:e.uro.peancb20@gmail.com"">e.uro.peancb20@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ea.n.cb.2.0@gmail.com"">e.u.r.o.p.ea.n.cb.2.0@gmail.com</a>
<a href=""mailto:eur.op.ean.c.b20@gmail.com"">eur.op.ean.c.b20@gmail.com</a>
<a href=""mailto:e.uro.pean.c.b2.0@gmail.com"">e.uro.pean.c.b2.0@gmail.com</a>
<a href=""mailto:e.ur.op.e.an.c.b2.0@gmail.com"">e.ur.op.e.an.c.b2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.an.cb.20@gmail.com"">e.u.r.o.pe.an.cb.20@gmail.com</a>
<a href=""mailto:eu.r.op.ean.cb.20@gmail.com"">eu.r.op.ean.cb.20@gmail.com</a>
<a href=""mailto:eu.r.o.p.e.a.ncb2.0@gmail.com"">eu.r.o.p.e.a.ncb2.0@gmail.com</a>
<a href=""mailto:e.u.rop.e.anc.b20@gmail.com"">e.u.rop.e.anc.b20@gmail.com</a>
<a href=""mailto:eu.r.opeanc.b2.0@gmail.com"">eu.r.opeanc.b2.0@gmail.com</a>
<a href=""mailto:eur.op.ea.nc.b.2.0@gmail.com"">eur.op.ea.nc.b.2.0@gmail.com</a>
<a href=""mailto:e.u.ropeanc.b2.0@gmail.com"">e.u.ropeanc.b2.0@gmail.com</a>
<a href=""mailto:e.u.ro.pea.nc.b.20@gmail.com"">e.u.ro.pea.nc.b.20@gmail.com</a>
<a href=""mailto:e.u.r.o.p.e.an.c.b.2.0@gmail.com"">e.u.r.o.p.e.an.c.b.2.0@gmail.com</a>
<a href=""mailto:europe.a.nc.b20@gmail.com"">europe.a.nc.b20@gmail.com</a>
<a href=""mailto:e.u.r.opean.c.b.2.0@gmail.com"">e.u.r.opean.c.b.2.0@gmail.com</a>
<a href=""mailto:e.u.ropean.cb20@gmail.com"">e.u.ropean.cb20@gmail.com</a>
<a href=""mailto:e.ur.opean.cb.20@gmail.com"">e.ur.opean.cb.20@gmail.com</a>
<a href=""mailto:e.u.ro.pea.n.cb2.0@gmail.com"">e.u.ro.pea.n.cb2.0@gmail.com</a>
<a href=""mailto:e.u.ropea.n.c.b2.0@gmail.com"">e.u.ropea.n.c.b2.0@gmail.com</a>
<a href=""mailto:e.ur.opea.ncb20@gmail.com"">e.ur.opea.ncb20@gmail.com</a>
<a href=""mailto:e.u.r.o.p.ea.nc.b20@gmail.com"">e.u.r.o.p.ea.nc.b20@gmail.com</a>
<a href=""mailto:euro.p.e.an.cb.20@gmail.com"">euro.p.e.an.cb.20@gmail.com</a>
<a href=""mailto:e.u.r.opea.n.cb.2.0@gmail.com"">e.u.r.opea.n.cb.2.0@gmail.com</a>
<a href=""mailto:eu.ro.peanc.b.20@gmail.com"">eu.ro.peanc.b.20@gmail.com</a>
<a href=""mailto:eu.r.o.peanc.b20@gmail.com"">eu.r.o.peanc.b20@gmail.com</a>
<a href=""mailto:e.u.rope.a.nc.b.20@gmail.com"">e.u.rope.a.nc.b.20@gmail.com</a>
<a href=""mailto:e.uropea.n.cb2.0@gmail.com"">e.uropea.n.cb2.0@gmail.com</a>
<a href=""mailto:e.uro.peancb.2.0@gmail.com"">e.uro.peancb.2.0@gmail.com</a>
<a href=""mailto:eu.r.op.e.a.n.c.b.2.0@gmail.com"">eu.r.op.e.a.n.c.b.2.0@gmail.com</a>
<a href=""mailto:eu.ro.pean.c.b.2.0@gmail.com"">eu.ro.pean.c.b.2.0@gmail.com</a>
<a href=""mailto:e.ur.op.e.a.n.c.b2.0@gmail.com"">e.ur.op.e.a.n.c.b2.0@gmail.com</a>
<a href=""mailto:e.u.r.op.ea.n.c.b.2.0@gmail.com"">e.u.r.op.ea.n.c.b.2.0@gmail.com</a>
<a href=""mailto:eu.rop.e.an.cb.2.0@gmail.com"">eu.rop.e.an.cb.2.0@gmail.com</a>
<a href=""mailto:e.u.r.o.pe.ancb2.0@gmail.com"">e.u.r.o.pe.ancb2.0@gmail.com</a>
<a href=""mailto:e.ur.o.p.ea.ncb20@gmail.com"">e.ur.o.p.ea.ncb20@gmail.com</a>
<a href=""mailto:eur.op.e.an.c.b.2.0@gmail.com"">eur.op.e.an.c.b.2.0@gmail.com</a>
<a href=""mailto:eu.r.o.p.ea.ncb20@gmail.com"">eu.r.o.p.ea.ncb20@gmail.com</a>
<a href=""mailto:thomascashman001@gmail.com"">thomascashman001@gmail.com</a>
<a href=""mailto:th.om.a.s.ca.shman00.1@gmail.com"">th.om.a.s.ca.shman00.1@gmail.com</a>
<a href=""mailto:thoma.s.cash.m.an00.1@gmail.com"">thoma.s.cash.m.an00.1@gmail.com</a>
<a href=""mailto:t.h.om.a.s.cas.hman.0.0.1@gmail.com"">t.h.om.a.s.cas.hman.0.0.1@gmail.com</a>
<a href=""mailto:tho.mas.ca.sh.m.an0.0.1@gmail.com"">tho.mas.ca.sh.m.an0.0.1@gmail.com</a>
<a href=""mailto:t.homa.sc.as.hma.n0.01@gmail.com"">t.homa.sc.as.hma.n0.01@gmail.com</a>
<a href=""mailto:thoma.s.c.a.shm.a.n.00.1@gmail.com"">thoma.s.c.a.shm.a.n.00.1@gmail.com</a>
<a href=""mailto:t.homas.c.as.h.m.an.0.01@gmail.com"">t.homas.c.as.h.m.an.0.01@gmail.com</a>
<a href=""mailto:tho.ma.sc.as.hma.n.001@gmail.com"">tho.ma.sc.as.hma.n.001@gmail.com</a>
<a href=""mailto:t.h.o.ma.scas.h.man0.0.1@gmail.com"">t.h.o.ma.scas.h.man0.0.1@gmail.com</a>
<a href=""mailto:t.hom.asc.as.hm.a.n0.01@gmail.com"">t.hom.asc.as.hm.a.n0.01@gmail.com</a>
<a href=""mailto:t.h.o.ma.s.ca.s.hma.n.00.1@gmail.com"">t.h.o.ma.s.ca.s.hma.n.00.1@gmail.com</a>
<a href=""mailto:th.o.m.a.s.c.a.sh.man0.0.1@gmail.com"">th.o.m.a.s.c.a.sh.man0.0.1@gmail.com</a>
<a href=""mailto:thom.a.sca.shma.n00.1@gmail.com"">thom.a.sca.shma.n00.1@gmail.com</a>
<a href=""mailto:t.h.oma.sc.a.sh.man.00.1@gmail.com"">t.h.oma.sc.a.sh.man.00.1@gmail.com</a>
<a href=""mailto:th.om.as.cas.hm.a.n00.1@gmail.com"">th.om.as.cas.hm.a.n00.1@gmail.com</a>
<a href=""mailto:th.om.as.c.a.s.h.ma.n.0.01@gmail.com"">th.om.as.c.a.s.h.ma.n.0.01@gmail.com</a>
<a href=""mailto:th.o.m.as.c.a.s.hma.n0.0.1@gmail.com"">th.o.m.as.c.a.s.hma.n0.0.1@gmail.com</a>
<a href=""mailto:thomas.c.ash.m.a.n.00.1@gmail.com"">thomas.c.ash.m.a.n.00.1@gmail.com</a>
<a href=""mailto:tho.ma.s.c.a.shman.0.01@gmail.com"">tho.ma.s.c.a.shman.0.01@gmail.com</a>
<a href=""mailto:th.oma.sca.s.h.m.a.n0.01@gmail.com"">th.oma.sca.s.h.m.a.n0.01@gmail.com</a>
<a href=""mailto:th.o.ma.sc.a.sh.man.0.0.1@gmail.com"">th.o.ma.sc.a.sh.man.0.0.1@gmail.com</a>
<a href=""mailto:th.o.masc.a.shman.001@gmail.com"">th.o.masc.a.shman.001@gmail.com</a>
<a href=""mailto:th.o.m.asc.a.sh.m.an00.1@gmail.com"">th.o.m.asc.a.sh.m.an00.1@gmail.com</a>
<a href=""mailto:th.omas.ca.s.h.m.a.n0.0.1@gmail.com"">th.omas.ca.s.h.m.a.n0.0.1@gmail.com</a>
<a href=""mailto:t.hom.a.scas.hman0.01@gmail.com"">t.hom.a.scas.hman0.01@gmail.com</a>
<a href=""mailto:t.h.o.m.as.cas.hma.n00.1@gmail.com"">t.h.o.m.as.cas.hma.n00.1@gmail.com</a>
<a href=""mailto:t.homa.sc.ash.m.a.n.001@gmail.com"">t.homa.sc.ash.m.a.n.001@gmail.com</a>
<a href=""mailto:th.om.as.ca.s.hm.an.0.0.1@gmail.com"">th.om.as.ca.s.hm.an.0.0.1@gmail.com</a>
<a href=""mailto:t.hom.asca.shman0.01@gmail.com"">t.hom.asca.shman0.01@gmail.com</a>
<a href=""mailto:th.oma.s.ca.shma.n0.0.1@gmail.com"">th.oma.s.ca.shma.n0.0.1@gmail.com</a>
<a href=""mailto:t.hom.a.s.cas.h.m.a.n.0.01@gmail.com"">t.hom.a.s.cas.h.m.a.n.0.01@gmail.com</a>
<a href=""mailto:thom.a.sca.shm.an0.0.1@gmail.com"">thom.a.sca.shm.an0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.scas.hm.a.n00.1@gmail.com"">t.h.o.m.a.scas.hm.a.n00.1@gmail.com</a>
<a href=""mailto:t.h.omasc.as.h.ma.n.001@gmail.com"">t.h.omasc.as.h.ma.n.001@gmail.com</a>
<a href=""mailto:th.om.asc.ashman0.0.1@gmail.com"">th.om.asc.ashman0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.s.c.a.s.hm.a.n0.01@gmail.com"">t.h.o.m.a.s.c.a.s.hm.a.n0.01@gmail.com</a>
<a href=""mailto:t.hom.as.c.a.s.hman00.1@gmail.com"">t.hom.as.c.a.s.hman00.1@gmail.com</a>
<a href=""mailto:thomasc.as.hm.a.n.001@gmail.com"">thomasc.as.hm.a.n.001@gmail.com</a>
<a href=""mailto:th.oma.scashm.a.n0.01@gmail.com"">th.oma.scashm.a.n0.01@gmail.com</a>
<a href=""mailto:t.ho.ma.scashman.0.0.1@gmail.com"">t.ho.ma.scashman.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.mas.ca.s.hman0.0.1@gmail.com"">t.h.o.mas.ca.s.hman0.0.1@gmail.com</a>
<a href=""mailto:tho.m.as.cashma.n.0.01@gmail.com"">tho.m.as.cashma.n.0.01@gmail.com</a>
<a href=""mailto:th.o.mas.c.a.sh.m.a.n.00.1@gmail.com"">th.o.mas.c.a.sh.m.a.n.00.1@gmail.com</a>
<a href=""mailto:t.homas.cash.m.a.n.0.0.1@gmail.com"">t.homas.cash.m.a.n.0.0.1@gmail.com</a>
<a href=""mailto:t.homas.ca.sh.m.a.n.001@gmail.com"">t.homas.ca.sh.m.a.n.001@gmail.com</a>
<a href=""mailto:t.h.oma.scashma.n.00.1@gmail.com"">t.h.oma.scashma.n.00.1@gmail.com</a>
<a href=""mailto:t.ho.ma.sc.a.shm.an.0.0.1@gmail.com"">t.ho.ma.sc.a.shm.an.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.mas.cas.h.m.an.00.1@gmail.com"">t.h.o.mas.cas.h.m.an.00.1@gmail.com</a>
<a href=""mailto:th.o.m.a.s.c.as.hman.0.0.1@gmail.com"">th.o.m.a.s.c.as.hman.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.ma.sc.a.s.h.m.an001@gmail.com"">t.h.o.ma.sc.a.s.h.m.an001@gmail.com</a>
<a href=""mailto:t.ho.ma.sc.ash.ma.n0.01@gmail.com"">t.ho.ma.sc.ash.ma.n0.01@gmail.com</a>
<a href=""mailto:th.o.m.ascash.ma.n0.01@gmail.com"">th.o.m.ascash.ma.n0.01@gmail.com</a>
<a href=""mailto:t.h.o.mas.c.ashm.a.n0.0.1@gmail.com"">t.h.o.mas.c.ashm.a.n0.0.1@gmail.com</a>
<a href=""mailto:t.homa.s.c.a.sh.m.a.n.001@gmail.com"">t.homa.s.c.a.sh.m.a.n.001@gmail.com</a>
<a href=""mailto:t.homa.sc.as.h.man.00.1@gmail.com"">t.homa.sc.as.h.man.00.1@gmail.com</a>
<a href=""mailto:t.h.om.a.s.c.a.s.hma.n.00.1@gmail.com"">t.h.om.a.s.c.a.s.hma.n.00.1@gmail.com</a>
<a href=""mailto:t.hom.as.ca.s.h.m.an.0.01@gmail.com"">t.hom.as.ca.s.h.m.an.0.01@gmail.com</a>
<a href=""mailto:t.ho.ma.s.c.a.shman.0.0.1@gmail.com"">t.ho.ma.s.c.a.shman.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.ma.s.c.ash.m.a.n.0.01@gmail.com"">t.h.o.ma.s.c.ash.m.a.n.0.01@gmail.com</a>
<a href=""mailto:t.ho.m.a.s.c.a.s.hma.n.0.0.1@gmail.com"">t.ho.m.a.s.c.a.s.hma.n.0.0.1@gmail.com</a>
<a href=""mailto:th.o.ma.s.c.as.h.m.an00.1@gmail.com"">th.o.ma.s.c.as.h.m.an00.1@gmail.com</a>
<a href=""mailto:t.h.om.asc.as.hma.n.001@gmail.com"">t.h.om.asc.as.hma.n.001@gmail.com</a>
<a href=""mailto:t.hom.a.s.c.a.sh.man00.1@gmail.com"">t.hom.a.s.c.a.sh.man00.1@gmail.com</a>
<a href=""mailto:tho.ma.sca.shm.an0.0.1@gmail.com"">tho.ma.sca.shm.an0.0.1@gmail.com</a>
<a href=""mailto:t.hom.as.c.a.shm.an0.01@gmail.com"">t.hom.as.c.a.shm.an0.01@gmail.com</a>
<a href=""mailto:t.ho.m.as.ca.s.hma.n0.01@gmail.com"">t.ho.m.as.ca.s.hma.n0.01@gmail.com</a>
<a href=""mailto:thoma.sc.as.h.man.0.01@gmail.com"">thoma.sc.as.h.man.0.01@gmail.com</a>
<a href=""mailto:t.h.o.m.asc.a.shman.0.0.1@gmail.com"">t.h.o.m.asc.a.shman.0.0.1@gmail.com</a>
<a href=""mailto:th.o.masc.a.sh.man001@gmail.com"">th.o.masc.a.sh.man001@gmail.com</a>
<a href=""mailto:t.h.om.as.c.a.shma.n0.0.1@gmail.com"">t.h.om.as.c.a.shma.n0.0.1@gmail.com</a>
<a href=""mailto:thoma.s.cas.hman001@gmail.com"">thoma.s.cas.hman001@gmail.com</a>
<a href=""mailto:tho.mas.cashm.a.n.0.0.1@gmail.com"">tho.mas.cashm.a.n.0.0.1@gmail.com</a>
<a href=""mailto:th.om.a.s.ca.s.hma.n.00.1@gmail.com"">th.om.a.s.ca.s.hma.n.00.1@gmail.com</a>
<a href=""mailto:thom.a.s.cas.h.man00.1@gmail.com"">thom.a.s.cas.h.man00.1@gmail.com</a>
<a href=""mailto:thom.as.ca.s.hm.an00.1@gmail.com"">thom.as.ca.s.hm.an00.1@gmail.com</a>
<a href=""mailto:t.ho.ma.s.c.a.s.hm.an0.01@gmail.com"">t.ho.ma.s.c.a.s.hm.an0.01@gmail.com</a>
<a href=""mailto:t.ho.mascas.hman0.0.1@gmail.com"">t.ho.mascas.hman0.0.1@gmail.com</a>
<a href=""mailto:t.hom.as.ca.s.h.m.a.n00.1@gmail.com"">t.hom.as.ca.s.h.m.a.n00.1@gmail.com</a>
<a href=""mailto:tho.mas.ca.shman001@gmail.com"">tho.mas.ca.shman001@gmail.com</a>
<a href=""mailto:tho.m.a.s.c.a.s.h.m.an.001@gmail.com"">tho.m.a.s.c.a.s.h.m.an.001@gmail.com</a>
<a href=""mailto:thom.a.sc.ash.ma.n.001@gmail.com"">thom.a.sc.ash.ma.n.001@gmail.com</a>
<a href=""mailto:t.homa.s.c.a.s.h.ma.n.0.01@gmail.com"">t.homa.s.c.a.s.h.ma.n.0.01@gmail.com</a>
<a href=""mailto:t.ho.m.a.s.ca.s.hm.a.n.00.1@gmail.com"">t.ho.m.a.s.ca.s.hm.a.n.00.1@gmail.com</a>
<a href=""mailto:t.ho.ma.s.c.a.shma.n00.1@gmail.com"">t.ho.ma.s.c.a.shma.n00.1@gmail.com</a>
<a href=""mailto:th.oma.s.cas.hma.n.001@gmail.com"">th.oma.s.cas.hma.n.001@gmail.com</a>
<a href=""mailto:t.h.o.m.a.sca.shm.an.00.1@gmail.com"">t.h.o.m.a.sca.shm.an.00.1@gmail.com</a>
<a href=""mailto:th.oma.sc.a.shm.a.n.0.01@gmail.com"">th.oma.sc.a.shm.a.n.0.01@gmail.com</a>
<a href=""mailto:th.o.m.as.c.as.h.m.an.001@gmail.com"">th.o.m.as.c.as.h.m.an.001@gmail.com</a>
<a href=""mailto:thoma.sc.ash.man.001@gmail.com"">thoma.sc.ash.man.001@gmail.com</a>
<a href=""mailto:th.o.mas.c.as.hman00.1@gmail.com"">th.o.mas.c.as.hman00.1@gmail.com</a>
<a href=""mailto:tho.m.a.scashm.an.0.0.1@gmail.com"">tho.m.a.scashm.an.0.0.1@gmail.com</a>
<a href=""mailto:tho.masca.s.h.m.a.n.00.1@gmail.com"">tho.masca.s.h.m.a.n.00.1@gmail.com</a>
<a href=""mailto:tho.m.a.sc.ashman0.01@gmail.com"">tho.m.a.sc.ashman0.01@gmail.com</a>
<a href=""mailto:th.omasca.s.h.ma.n001@gmail.com"">th.omasca.s.h.ma.n001@gmail.com</a>
<a href=""mailto:tho.m.asc.ash.ma.n0.0.1@gmail.com"">tho.m.asc.ash.ma.n0.0.1@gmail.com</a>
<a href=""mailto:t.h.oma.sca.shman.001@gmail.com"">t.h.oma.sca.shman.001@gmail.com</a>
<a href=""mailto:tho.ma.sca.sh.man0.01@gmail.com"">tho.ma.sca.sh.man0.01@gmail.com</a>
<a href=""mailto:t.homa.sca.s.hman001@gmail.com"">t.homa.sca.s.hman001@gmail.com</a>
<a href=""mailto:thoma.sc.a.s.hm.an.0.0.1@gmail.com"">thoma.sc.a.s.hm.an.0.0.1@gmail.com</a>
<a href=""mailto:t.homas.c.a.s.h.man.00.1@gmail.com"">t.homas.c.a.s.h.man.00.1@gmail.com</a>
<a href=""mailto:tho.ma.sc.a.s.hm.a.n.00.1@gmail.com"">tho.ma.sc.a.s.hm.a.n.00.1@gmail.com</a>
<a href=""mailto:t.hom.asc.a.s.h.man0.0.1@gmail.com"">t.hom.asc.a.s.h.man0.0.1@gmail.com</a>
<a href=""mailto:th.om.as.cas.hm.a.n.0.01@gmail.com"">th.om.as.cas.hm.a.n.0.01@gmail.com</a>
<a href=""mailto:t.hom.a.s.ca.shma.n00.1@gmail.com"">t.hom.a.s.ca.shma.n00.1@gmail.com</a>
<a href=""mailto:t.h.o.mas.cashm.a.n.0.0.1@gmail.com"">t.h.o.mas.cashm.a.n.0.0.1@gmail.com</a>
<a href=""mailto:tho.m.as.c.as.hma.n0.0.1@gmail.com"">tho.m.as.c.as.hma.n0.0.1@gmail.com</a>
<a href=""mailto:th.o.mas.ca.s.hman0.0.1@gmail.com"">th.o.mas.ca.s.hman0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.masc.a.s.h.man.0.0.1@gmail.com"">t.h.o.masc.a.s.h.man.0.0.1@gmail.com</a>
<a href=""mailto:thom.a.s.ca.s.hma.n.0.0.1@gmail.com"">thom.a.s.ca.s.hma.n.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.masc.a.s.hman001@gmail.com"">t.h.o.masc.a.s.hman001@gmail.com</a>
<a href=""mailto:tho.m.a.sc.ashm.an.001@gmail.com"">tho.m.a.sc.ashm.an.001@gmail.com</a>
<a href=""mailto:t.hom.asc.as.hman00.1@gmail.com"">t.hom.asc.as.hman00.1@gmail.com</a>
<a href=""mailto:tho.m.a.scas.h.ma.n.00.1@gmail.com"">tho.m.a.scas.h.ma.n.00.1@gmail.com</a>
<a href=""mailto:t.h.o.mas.c.ash.man.00.1@gmail.com"">t.h.o.mas.c.ash.man.00.1@gmail.com</a>
<a href=""mailto:thoma.s.c.ash.m.a.n0.0.1@gmail.com"">thoma.s.c.ash.m.a.n0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.asca.sh.man.00.1@gmail.com"">t.h.o.m.asca.sh.man.00.1@gmail.com</a>
<a href=""mailto:t.h.o.ma.sc.ashma.n0.0.1@gmail.com"">t.h.o.ma.sc.ashma.n0.0.1@gmail.com</a>
<a href=""mailto:th.o.mas.cash.m.a.n.0.0.1@gmail.com"">th.o.mas.cash.m.a.n.0.0.1@gmail.com</a>
<a href=""mailto:th.o.m.a.scas.hman001@gmail.com"">th.o.m.a.scas.hman001@gmail.com</a>
<a href=""mailto:t.h.om.as.c.a.sh.m.an.0.0.1@gmail.com"">t.h.om.as.c.a.sh.m.an.0.0.1@gmail.com</a>
<a href=""mailto:t.ho.mas.c.as.h.m.an001@gmail.com"">t.ho.mas.c.as.h.m.an001@gmail.com</a>
<a href=""mailto:th.oma.sca.s.h.ma.n.00.1@gmail.com"">th.oma.sca.s.h.ma.n.00.1@gmail.com</a>
<a href=""mailto:tho.m.asc.as.h.m.an0.0.1@gmail.com"">tho.m.asc.as.h.m.an0.0.1@gmail.com</a>
<a href=""mailto:th.o.m.asca.shma.n0.0.1@gmail.com"">th.o.m.asca.shma.n0.0.1@gmail.com</a>
<a href=""mailto:t.ho.mas.c.as.hman.0.0.1@gmail.com"">t.ho.mas.c.as.hman.0.0.1@gmail.com</a>
<a href=""mailto:tho.ma.s.c.ashm.a.n001@gmail.com"">tho.ma.s.c.ashm.a.n001@gmail.com</a>
<a href=""mailto:t.ho.ma.sca.s.h.man001@gmail.com"">t.ho.ma.sca.s.h.man001@gmail.com</a>
<a href=""mailto:t.h.o.ma.sca.shman0.01@gmail.com"">t.h.o.ma.sca.shman0.01@gmail.com</a>
<a href=""mailto:t.hom.as.cashm.an0.01@gmail.com"">t.hom.as.cashm.an0.01@gmail.com</a>
<a href=""mailto:t.homa.s.ca.s.h.m.a.n.0.01@gmail.com"">t.homa.s.ca.s.h.m.a.n.0.01@gmail.com</a>
<a href=""mailto:t.h.o.ma.sc.a.s.h.m.an.0.0.1@gmail.com"">t.h.o.ma.sc.a.s.h.m.an.0.0.1@gmail.com</a>
<a href=""mailto:th.o.m.as.c.a.sh.man.001@gmail.com"">th.o.m.as.c.a.sh.man.001@gmail.com</a>
<a href=""mailto:t.h.omas.c.a.s.h.ma.n0.0.1@gmail.com"">t.h.omas.c.a.s.h.ma.n0.0.1@gmail.com</a>
<a href=""mailto:th.oma.s.cashma.n0.01@gmail.com"">th.oma.s.cashma.n0.01@gmail.com</a>
<a href=""mailto:t.h.om.a.scas.h.m.an.0.01@gmail.com"">t.h.om.a.scas.h.m.an.0.01@gmail.com</a>
<a href=""mailto:tho.m.asc.as.hma.n.00.1@gmail.com"">tho.m.asc.as.hma.n.00.1@gmail.com</a>
<a href=""mailto:t.h.om.as.ca.shma.n00.1@gmail.com"">t.h.om.as.ca.shma.n00.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.s.c.a.sh.m.a.n.0.0.1@gmail.com"">t.h.o.m.a.s.c.a.sh.m.a.n.0.0.1@gmail.com</a>
<a href=""mailto:th.o.mas.cashma.n001@gmail.com"">th.o.mas.cashma.n001@gmail.com</a>
<a href=""mailto:thom.as.c.a.s.hm.a.n00.1@gmail.com"">thom.as.c.a.s.hm.a.n00.1@gmail.com</a>
<a href=""mailto:t.h.om.asc.a.s.h.ma.n00.1@gmail.com"">t.h.om.asc.a.s.h.ma.n00.1@gmail.com</a>
<a href=""mailto:t.h.omasc.a.s.hm.a.n.00.1@gmail.com"">t.h.omasc.a.s.hm.a.n.00.1@gmail.com</a>
<a href=""mailto:thomas.c.a.shm.a.n0.0.1@gmail.com"">thomas.c.a.shm.a.n0.0.1@gmail.com</a>
<a href=""mailto:t.ho.m.asca.sh.ma.n0.01@gmail.com"">t.ho.m.asca.sh.ma.n0.01@gmail.com</a>
<a href=""mailto:t.ho.mascas.hm.a.n001@gmail.com"">t.ho.mascas.hm.a.n001@gmail.com</a>
<a href=""mailto:t.ho.m.a.sc.as.h.m.an.0.0.1@gmail.com"">t.ho.m.a.sc.as.h.m.an.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.ascash.m.an001@gmail.com"">t.h.o.m.ascash.m.an001@gmail.com</a>
<a href=""mailto:thoma.s.cas.hman.0.01@gmail.com"">thoma.s.cas.hman.0.01@gmail.com</a>
<a href=""mailto:tho.m.asc.ash.ma.n0.01@gmail.com"">tho.m.asc.ash.ma.n0.01@gmail.com</a>
<a href=""mailto:t.h.om.a.s.cash.man00.1@gmail.com"">t.h.om.a.s.cash.man00.1@gmail.com</a>
<a href=""mailto:th.o.ma.sc.a.s.h.m.a.n.0.01@gmail.com"">th.o.ma.sc.a.s.h.m.a.n.0.01@gmail.com</a>
<a href=""mailto:tho.ma.scash.m.a.n.0.0.1@gmail.com"">tho.ma.scash.m.a.n.0.0.1@gmail.com</a>
<a href=""mailto:tho.m.a.s.ca.s.h.ma.n.0.0.1@gmail.com"">tho.m.a.s.ca.s.h.ma.n.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.as.c.ash.man.00.1@gmail.com"">t.h.o.m.as.c.ash.man.00.1@gmail.com</a>
<a href=""mailto:thom.a.sc.ashm.an0.0.1@gmail.com"">thom.a.sc.ashm.an0.0.1@gmail.com</a>
<a href=""mailto:tho.m.ascas.hm.an.00.1@gmail.com"">tho.m.ascas.hm.an.00.1@gmail.com</a>
<a href=""mailto:t.h.omas.c.a.s.h.m.an00.1@gmail.com"">t.h.omas.c.a.s.h.m.an00.1@gmail.com</a>
<a href=""mailto:th.om.ascas.hm.an0.0.1@gmail.com"">th.om.ascas.hm.an0.0.1@gmail.com</a>
<a href=""mailto:t.ho.m.as.cashman.00.1@gmail.com"">t.ho.m.as.cashman.00.1@gmail.com</a>
<a href=""mailto:thom.as.c.a.s.hm.an00.1@gmail.com"">thom.as.c.a.s.hm.an00.1@gmail.com</a>
<a href=""mailto:th.om.a.s.ca.s.h.man001@gmail.com"">th.om.a.s.ca.s.h.man001@gmail.com</a>
<a href=""mailto:th.o.m.as.c.ash.m.a.n.0.01@gmail.com"">th.o.m.as.c.ash.m.a.n.0.01@gmail.com</a>
<a href=""mailto:t.hom.asc.as.h.man.0.0.1@gmail.com"">t.hom.asc.as.h.man.0.0.1@gmail.com</a>
<a href=""mailto:th.o.m.as.cas.h.ma.n001@gmail.com"">th.o.m.as.cas.h.ma.n001@gmail.com</a>
<a href=""mailto:t.ho.mas.c.ashm.a.n0.0.1@gmail.com"">t.ho.mas.c.ashm.a.n0.0.1@gmail.com</a>
<a href=""mailto:th.om.a.sc.ashm.a.n.001@gmail.com"">th.om.a.sc.ashm.a.n.001@gmail.com</a>
<a href=""mailto:th.omas.cas.h.man.00.1@gmail.com"">th.omas.cas.h.man.00.1@gmail.com</a>
<a href=""mailto:t.ho.ma.s.c.as.h.m.a.n001@gmail.com"">t.ho.ma.s.c.as.h.m.a.n001@gmail.com</a>
<a href=""mailto:t.h.o.m.a.s.c.a.shm.a.n00.1@gmail.com"">t.h.o.m.a.s.c.a.shm.a.n00.1@gmail.com</a>
<a href=""mailto:thomasc.a.shma.n.00.1@gmail.com"">thomasc.a.shma.n.00.1@gmail.com</a>
<a href=""mailto:tho.ma.sca.shman.0.0.1@gmail.com"">tho.ma.sca.shman.0.0.1@gmail.com</a>
<a href=""mailto:thoma.sc.as.h.m.a.n00.1@gmail.com"">thoma.sc.as.h.m.a.n00.1@gmail.com</a>
<a href=""mailto:t.hom.as.c.a.sh.m.an.0.0.1@gmail.com"">t.hom.as.c.a.sh.m.an.0.0.1@gmail.com</a>
<a href=""mailto:th.om.a.s.ca.s.hm.a.n00.1@gmail.com"">th.om.a.s.ca.s.hm.a.n00.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.sc.a.shman00.1@gmail.com"">t.h.o.m.a.sc.a.shman00.1@gmail.com</a>
<a href=""mailto:t.ho.ma.sc.as.h.man0.0.1@gmail.com"">t.ho.ma.sc.as.h.man0.0.1@gmail.com</a>
<a href=""mailto:t.h.omascas.hm.a.n001@gmail.com"">t.h.omascas.hm.a.n001@gmail.com</a>
<a href=""mailto:tho.m.as.c.a.sh.ma.n.0.0.1@gmail.com"">tho.m.as.c.a.sh.ma.n.0.0.1@gmail.com</a>
<a href=""mailto:t.h.oma.s.cas.h.man.00.1@gmail.com"">t.h.oma.s.cas.h.man.00.1@gmail.com</a>
<a href=""mailto:t.h.oma.sc.a.s.hman.0.01@gmail.com"">t.h.oma.sc.a.s.hman.0.01@gmail.com</a>
<a href=""mailto:tho.m.ascas.h.m.a.n.0.01@gmail.com"">tho.m.ascas.h.m.a.n.0.01@gmail.com</a>
<a href=""mailto:t.h.omasca.s.h.ma.n.0.0.1@gmail.com"">t.h.omasca.s.h.ma.n.0.0.1@gmail.com</a>
<a href=""mailto:t.homascashma.n00.1@gmail.com"">t.homascashma.n00.1@gmail.com</a>
<a href=""mailto:thomas.c.as.hman001@gmail.com"">thomas.c.as.hman001@gmail.com</a>
<a href=""mailto:thom.as.c.as.hman.0.01@gmail.com"">thom.as.c.as.hman.0.01@gmail.com</a>
<a href=""mailto:tho.m.as.c.ash.m.an.0.0.1@gmail.com"">tho.m.as.c.ash.m.an.0.0.1@gmail.com</a>
<a href=""mailto:tho.m.a.s.c.ash.m.a.n.00.1@gmail.com"">tho.m.a.s.c.ash.m.a.n.00.1@gmail.com</a>
<a href=""mailto:t.ho.m.a.s.c.a.sh.m.a.n00.1@gmail.com"">t.ho.m.a.s.c.a.sh.m.a.n00.1@gmail.com</a>
<a href=""mailto:t.ho.m.a.scash.m.an.0.0.1@gmail.com"">t.ho.m.a.scash.m.an.0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.sc.as.hm.a.n0.0.1@gmail.com"">t.h.o.m.a.sc.as.hm.a.n0.0.1@gmail.com</a>
<a href=""mailto:t.h.o.m.a.sc.ashm.a.n0.01@gmail.com"">t.h.o.m.a.sc.ashm.a.n0.01@gmail.com</a>
<a href=""mailto:th.o.mas.cas.hm.an00.1@gmail.com"">th.o.mas.cas.hm.an00.1@gmail.com</a>
<a href=""mailto:thoma.sc.a.s.hm.an001@gmail.com"">thoma.sc.a.s.hm.an001@gmail.com</a>
<a href=""mailto:tho.mas.c.a.s.h.ma.n0.01@gmail.com"">tho.mas.c.a.s.h.ma.n0.01@gmail.com</a>
<a href=""mailto:th.omas.ca.s.h.ma.n.0.0.1@gmail.com"">th.omas.ca.s.h.ma.n.0.0.1@gmail.com</a>
<a href=""mailto:th.omas.cas.hm.a.n00.1@gmail.com"">th.omas.cas.hm.a.n00.1@gmail.com</a>
<a href=""mailto:th.oma.s.ca.sh.m.a.n0.01@gmail.com"">th.oma.s.ca.sh.m.a.n0.01@gmail.com</a>
<a href=""mailto:tho.m.a.sca.s.h.ma.n.0.01@gmail.com"">tho.m.a.sca.s.h.ma.n.0.01@gmail.com</a>
<a href=""mailto:tho.ma.s.c.ash.m.a.n0.0.1@gmail.com"">tho.ma.s.c.ash.m.a.n0.0.1@gmail.com</a>
<a href=""mailto:thoma.sca.s.h.m.an0.01@gmail.com"">thoma.sca.s.h.m.an0.01@gmail.com</a>
<a href=""mailto:skyebank094@gmail.com"">skyebank094@gmail.com</a>
<a href=""mailto:s.ky.e.bank094@gmail.com"">s.ky.e.bank094@gmail.com</a>
<a href=""mailto:sk.y.e.b.a.n.k09.4@gmail.com"">sk.y.e.b.a.n.k09.4@gmail.com</a>
<a href=""mailto:s.k.yeba.nk.0.94@gmail.com"">s.k.yeba.nk.0.94@gmail.com</a>
<a href=""mailto:s.k.y.eba.nk.09.4@gmail.com"">s.k.y.eba.nk.09.4@gmail.com</a>
<a href=""mailto:skye.ban.k0.9.4@gmail.com"">skye.ban.k0.9.4@gmail.com</a>
<a href=""mailto:sk.ye.bank094@gmail.com"">sk.ye.bank094@gmail.com</a>
<a href=""mailto:s.k.yeba.nk09.4@gmail.com"">s.k.yeba.nk09.4@gmail.com</a>
<a href=""mailto:s.k.yeba.n.k09.4@gmail.com"">s.k.yeba.n.k09.4@gmail.com</a>
<a href=""mailto:sk.y.eb.ank094@gmail.com"">sk.y.eb.ank094@gmail.com</a>
<a href=""mailto:sk.y.eban.k094@gmail.com"">sk.y.eban.k094@gmail.com</a>
<a href=""mailto:sky.e.b.an.k0.9.4@gmail.com"">sky.e.b.an.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.eb.a.nk0.94@gmail.com"">s.k.y.eb.a.nk0.94@gmail.com</a>
<a href=""mailto:sk.ye.ba.nk0.94@gmail.com"">sk.ye.ba.nk0.94@gmail.com</a>
<a href=""mailto:skyeb.an.k.0.94@gmail.com"">skyeb.an.k.0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.b.a.n.k0.94@gmail.com"">s.k.y.e.b.a.n.k0.94@gmail.com</a>
<a href=""mailto:skye.ba.n.k.09.4@gmail.com"">skye.ba.n.k.09.4@gmail.com</a>
<a href=""mailto:s.k.y.ebank094@gmail.com"">s.k.y.ebank094@gmail.com</a>
<a href=""mailto:skye.b.ank.094@gmail.com"">skye.b.ank.094@gmail.com</a>
<a href=""mailto:skyeb.an.k.09.4@gmail.com"">skyeb.an.k.09.4@gmail.com</a>
<a href=""mailto:sk.y.eban.k.094@gmail.com"">sk.y.eban.k.094@gmail.com</a>
<a href=""mailto:sk.y.eb.a.n.k0.9.4@gmail.com"">sk.y.eb.a.n.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.ye.b.ank.0.94@gmail.com"">s.k.ye.b.ank.0.94@gmail.com</a>
<a href=""mailto:sky.e.ba.nk09.4@gmail.com"">sky.e.ba.nk09.4@gmail.com</a>
<a href=""mailto:sk.yeb.ank0.9.4@gmail.com"">sk.yeb.ank0.9.4@gmail.com</a>
<a href=""mailto:sk.y.ebank0.94@gmail.com"">sk.y.ebank0.94@gmail.com</a>
<a href=""mailto:sk.y.e.ba.n.k.0.9.4@gmail.com"">sk.y.e.ba.n.k.0.9.4@gmail.com</a>
<a href=""mailto:s.kye.b.ank.09.4@gmail.com"">s.kye.b.ank.09.4@gmail.com</a>
<a href=""mailto:s.ky.eba.n.k.094@gmail.com"">s.ky.eba.n.k.094@gmail.com</a>
<a href=""mailto:skyeba.n.k.0.94@gmail.com"">skyeba.n.k.0.94@gmail.com</a>
<a href=""mailto:s.k.y.eb.ank0.94@gmail.com"">s.k.y.eb.ank0.94@gmail.com</a>
<a href=""mailto:sky.ebank.0.9.4@gmail.com"">sky.ebank.0.9.4@gmail.com</a>
<a href=""mailto:sk.y.e.ba.nk.0.9.4@gmail.com"">sk.y.e.ba.nk.0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.e.ba.nk.0.9.4@gmail.com"">s.k.y.e.ba.nk.0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.e.b.a.n.k.0.94@gmail.com"">s.k.y.e.b.a.n.k.0.94@gmail.com</a>
<a href=""mailto:sk.y.e.bank0.94@gmail.com"">sk.y.e.bank0.94@gmail.com</a>
<a href=""mailto:sk.y.eb.a.nk.09.4@gmail.com"">sk.y.eb.a.nk.09.4@gmail.com</a>
<a href=""mailto:sky.eban.k.0.9.4@gmail.com"">sky.eban.k.0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.nk.094@gmail.com"">s.ky.e.b.a.nk.094@gmail.com</a>
<a href=""mailto:sk.ye.b.ank094@gmail.com"">sk.ye.b.ank094@gmail.com</a>
<a href=""mailto:skyeb.a.n.k094@gmail.com"">skyeb.a.n.k094@gmail.com</a>
<a href=""mailto:sk.yeb.a.n.k0.94@gmail.com"">sk.yeb.a.n.k0.94@gmail.com</a>
<a href=""mailto:s.kyeb.an.k094@gmail.com"">s.kyeb.an.k094@gmail.com</a>
<a href=""mailto:s.ky.eb.a.nk.094@gmail.com"">s.ky.eb.a.nk.094@gmail.com</a>
<a href=""mailto:skyeb.a.nk0.9.4@gmail.com"">skyeb.a.nk0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.b.ank.094@gmail.com"">s.ky.e.b.ank.094@gmail.com</a>
<a href=""mailto:s.kye.ba.n.k.094@gmail.com"">s.kye.ba.n.k.094@gmail.com</a>
<a href=""mailto:sky.e.b.ank0.94@gmail.com"">sky.e.b.ank0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.ban.k09.4@gmail.com"">s.k.y.e.ban.k09.4@gmail.com</a>
<a href=""mailto:sk.ye.b.an.k.0.94@gmail.com"">sk.ye.b.an.k.0.94@gmail.com</a>
<a href=""mailto:sk.yeb.an.k.0.9.4@gmail.com"">sk.yeb.an.k.0.9.4@gmail.com</a>
<a href=""mailto:skyeb.a.n.k0.9.4@gmail.com"">skyeb.a.n.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.e.b.ank0.94@gmail.com"">s.k.y.e.b.ank0.94@gmail.com</a>
<a href=""mailto:s.kye.ba.n.k0.94@gmail.com"">s.kye.ba.n.k0.94@gmail.com</a>
<a href=""mailto:sk.y.eban.k0.9.4@gmail.com"">sk.y.eban.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.e.b.a.n.k09.4@gmail.com"">s.k.y.e.b.a.n.k09.4@gmail.com</a>
<a href=""mailto:skyebank09.4@gmail.com"">skyebank09.4@gmail.com</a>
<a href=""mailto:sk.y.eba.nk0.94@gmail.com"">sk.y.eba.nk0.94@gmail.com</a>
<a href=""mailto:sk.ye.bank0.9.4@gmail.com"">sk.ye.bank0.9.4@gmail.com</a>
<a href=""mailto:skye.b.a.nk.0.94@gmail.com"">skye.b.a.nk.0.94@gmail.com</a>
<a href=""mailto:sk.y.ebank094@gmail.com"">sk.y.ebank094@gmail.com</a>
<a href=""mailto:s.k.y.eba.n.k.094@gmail.com"">s.k.y.eba.n.k.094@gmail.com</a>
<a href=""mailto:s.ky.e.ba.nk09.4@gmail.com"">s.ky.e.ba.nk09.4@gmail.com</a>
<a href=""mailto:skye.ba.nk0.94@gmail.com"">skye.ba.nk0.94@gmail.com</a>
<a href=""mailto:s.ky.eba.n.k.09.4@gmail.com"">s.ky.eba.n.k.09.4@gmail.com</a>
<a href=""mailto:sky.eb.a.n.k.0.94@gmail.com"">sky.eb.a.n.k.0.94@gmail.com</a>
<a href=""mailto:s.kyebank09.4@gmail.com"">s.kyebank09.4@gmail.com</a>
<a href=""mailto:s.kyeb.an.k.09.4@gmail.com"">s.kyeb.an.k.09.4@gmail.com</a>
<a href=""mailto:sk.y.eb.ank09.4@gmail.com"">sk.y.eb.ank09.4@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.nk.0.9.4@gmail.com"">s.ky.e.b.a.nk.0.9.4@gmail.com</a>
<a href=""mailto:skye.ban.k.09.4@gmail.com"">skye.ban.k.09.4@gmail.com</a>
<a href=""mailto:skyeb.ank094@gmail.com"">skyeb.ank094@gmail.com</a>
<a href=""mailto:s.kye.ba.n.k09.4@gmail.com"">s.kye.ba.n.k09.4@gmail.com</a>
<a href=""mailto:s.ky.eba.nk.0.9.4@gmail.com"">s.ky.eba.nk.0.9.4@gmail.com</a>
<a href=""mailto:sk.yeb.a.nk094@gmail.com"">sk.yeb.a.nk094@gmail.com</a>
<a href=""mailto:s.ky.eban.k.094@gmail.com"">s.ky.eban.k.094@gmail.com</a>
<a href=""mailto:sky.e.b.a.nk.0.94@gmail.com"">sky.e.b.a.nk.0.94@gmail.com</a>
<a href=""mailto:s.k.yeba.n.k094@gmail.com"">s.k.yeba.n.k094@gmail.com</a>
<a href=""mailto:s.k.y.eb.ank094@gmail.com"">s.k.y.eb.ank094@gmail.com</a>
<a href=""mailto:s.ky.e.bank.0.94@gmail.com"">s.ky.e.bank.0.94@gmail.com</a>
<a href=""mailto:sk.yeban.k.094@gmail.com"">sk.yeban.k.094@gmail.com</a>
<a href=""mailto:sk.ye.ba.n.k09.4@gmail.com"">sk.ye.ba.n.k09.4@gmail.com</a>
<a href=""mailto:sk.y.e.ba.nk.094@gmail.com"">sk.y.e.ba.nk.094@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.n.k09.4@gmail.com"">s.ky.e.b.a.n.k09.4@gmail.com</a>
<a href=""mailto:s.k.y.e.ba.n.k0.9.4@gmail.com"">s.k.y.e.ba.n.k0.9.4@gmail.com</a>
<a href=""mailto:skye.ban.k.0.9.4@gmail.com"">skye.ban.k.0.9.4@gmail.com</a>
<a href=""mailto:s.kyeb.a.nk.09.4@gmail.com"">s.kyeb.a.nk.09.4@gmail.com</a>
<a href=""mailto:s.kye.ba.n.k.09.4@gmail.com"">s.kye.ba.n.k.09.4@gmail.com</a>
<a href=""mailto:s.k.yeb.a.n.k.09.4@gmail.com"">s.k.yeb.a.n.k.09.4@gmail.com</a>
<a href=""mailto:s.kye.b.an.k0.94@gmail.com"">s.kye.b.an.k0.94@gmail.com</a>
<a href=""mailto:sky.e.ba.n.k094@gmail.com"">sky.e.ba.n.k094@gmail.com</a>
<a href=""mailto:s.k.yeba.nk.09.4@gmail.com"">s.k.yeba.nk.09.4@gmail.com</a>
<a href=""mailto:s.ky.e.bank.0.9.4@gmail.com"">s.ky.e.bank.0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.n.k.0.9.4@gmail.com"">s.ky.e.b.a.n.k.0.9.4@gmail.com</a>
<a href=""mailto:sky.e.ban.k094@gmail.com"">sky.e.ban.k094@gmail.com</a>
<a href=""mailto:s.ky.eba.n.k0.94@gmail.com"">s.ky.eba.n.k0.94@gmail.com</a>
<a href=""mailto:sk.y.e.b.a.n.k0.94@gmail.com"">sk.y.e.b.a.n.k0.94@gmail.com</a>
<a href=""mailto:s.ky.e.b.ank0.9.4@gmail.com"">s.ky.e.b.ank0.9.4@gmail.com</a>
<a href=""mailto:s.k.ye.ba.nk0.9.4@gmail.com"">s.k.ye.ba.nk0.9.4@gmail.com</a>
<a href=""mailto:skye.b.ank.09.4@gmail.com"">skye.b.ank.09.4@gmail.com</a>
<a href=""mailto:s.k.ye.ba.n.k0.94@gmail.com"">s.k.ye.ba.n.k0.94@gmail.com</a>
<a href=""mailto:s.ky.e.b.an.k.0.9.4@gmail.com"">s.ky.e.b.an.k.0.9.4@gmail.com</a>
<a href=""mailto:skye.b.ank.0.9.4@gmail.com"">skye.b.ank.0.9.4@gmail.com</a>
<a href=""mailto:skyeb.an.k0.9.4@gmail.com"">skyeb.an.k0.9.4@gmail.com</a>
<a href=""mailto:sky.eba.n.k0.9.4@gmail.com"">sky.eba.n.k0.9.4@gmail.com</a>
<a href=""mailto:skye.ban.k.0.94@gmail.com"">skye.ban.k.0.94@gmail.com</a>
<a href=""mailto:s.k.y.eb.a.n.k.0.9.4@gmail.com"">s.k.y.eb.a.n.k.0.9.4@gmail.com</a>
<a href=""mailto:sk.yeb.ank094@gmail.com"">sk.yeb.ank094@gmail.com</a>
<a href=""mailto:s.k.ye.b.a.n.k.0.9.4@gmail.com"">s.k.ye.b.a.n.k.0.9.4@gmail.com</a>
<a href=""mailto:sk.ye.b.ank.0.9.4@gmail.com"">sk.ye.b.ank.0.9.4@gmail.com</a>
<a href=""mailto:s.kye.b.a.n.k0.9.4@gmail.com"">s.kye.b.a.n.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.yeb.ank0.9.4@gmail.com"">s.k.yeb.ank0.9.4@gmail.com</a>
<a href=""mailto:sky.eban.k094@gmail.com"">sky.eban.k094@gmail.com</a>
<a href=""mailto:skyeb.ank.0.9.4@gmail.com"">skyeb.ank.0.9.4@gmail.com</a>
<a href=""mailto:s.k.yeban.k.09.4@gmail.com"">s.k.yeban.k.09.4@gmail.com</a>
<a href=""mailto:s.k.y.e.b.a.nk.0.94@gmail.com"">s.k.y.e.b.a.nk.0.94@gmail.com</a>
<a href=""mailto:sk.y.e.b.a.n.k.09.4@gmail.com"">sk.y.e.b.a.n.k.09.4@gmail.com</a>
<a href=""mailto:skye.b.a.nk.094@gmail.com"">skye.b.a.nk.094@gmail.com</a>
<a href=""mailto:sky.e.ba.nk.0.94@gmail.com"">sky.e.ba.nk.0.94@gmail.com</a>
<a href=""mailto:sky.e.bank094@gmail.com"">sky.e.bank094@gmail.com</a>
<a href=""mailto:s.kyebank0.9.4@gmail.com"">s.kyebank0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.bank0.94@gmail.com"">s.ky.e.bank0.94@gmail.com</a>
<a href=""mailto:skyebank.0.9.4@gmail.com"">skyebank.0.9.4@gmail.com</a>
<a href=""mailto:sk.y.eb.an.k.0.94@gmail.com"">sk.y.eb.an.k.0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.ba.nk0.94@gmail.com"">s.k.y.e.ba.nk0.94@gmail.com</a>
<a href=""mailto:sk.ye.b.an.k.094@gmail.com"">sk.ye.b.an.k.094@gmail.com</a>
<a href=""mailto:sk.ye.ban.k09.4@gmail.com"">sk.ye.ban.k09.4@gmail.com</a>
<a href=""mailto:skye.ba.nk.09.4@gmail.com"">skye.ba.nk.09.4@gmail.com</a>
<a href=""mailto:sky.ebank0.94@gmail.com"">sky.ebank0.94@gmail.com</a>
<a href=""mailto:sky.e.ban.k0.94@gmail.com"">sky.e.ban.k0.94@gmail.com</a>
<a href=""mailto:sk.yebank.0.9.4@gmail.com"">sk.yebank.0.9.4@gmail.com</a>
<a href=""mailto:sk.yeba.nk0.9.4@gmail.com"">sk.yeba.nk0.9.4@gmail.com</a>
<a href=""mailto:skyeban.k0.9.4@gmail.com"">skyeban.k0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.ebank.09.4@gmail.com"">s.k.y.ebank.09.4@gmail.com</a>
<a href=""mailto:s.k.ye.ba.n.k.0.94@gmail.com"">s.k.ye.ba.n.k.0.94@gmail.com</a>
<a href=""mailto:sk.yeba.nk.09.4@gmail.com"">sk.yeba.nk.09.4@gmail.com</a>
<a href=""mailto:sky.e.b.an.k.0.94@gmail.com"">sky.e.b.an.k.0.94@gmail.com</a>
<a href=""mailto:sk.yeb.an.k09.4@gmail.com"">sk.yeb.an.k09.4@gmail.com</a>
<a href=""mailto:s.ky.e.ba.nk.09.4@gmail.com"">s.ky.e.ba.nk.09.4@gmail.com</a>
<a href=""mailto:sk.yebank094@gmail.com"">sk.yebank094@gmail.com</a>
<a href=""mailto:s.kyeb.ank0.94@gmail.com"">s.kyeb.ank0.94@gmail.com</a>
<a href=""mailto:sky.eb.a.nk0.9.4@gmail.com"">sky.eb.a.nk0.9.4@gmail.com</a>
<a href=""mailto:s.k.yebank09.4@gmail.com"">s.k.yebank09.4@gmail.com</a>
<a href=""mailto:sk.ye.ban.k.0.94@gmail.com"">sk.ye.ban.k.0.94@gmail.com</a>
<a href=""mailto:sky.e.b.ank.0.94@gmail.com"">sky.e.b.ank.0.94@gmail.com</a>
<a href=""mailto:s.k.y.eb.an.k.094@gmail.com"">s.k.y.eb.an.k.094@gmail.com</a>
<a href=""mailto:skyeb.a.nk0.94@gmail.com"">skyeb.a.nk0.94@gmail.com</a>
<a href=""mailto:skye.b.ank09.4@gmail.com"">skye.b.ank09.4@gmail.com</a>
<a href=""mailto:sk.y.eb.ank0.9.4@gmail.com"">sk.y.eb.ank0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.nk094@gmail.com"">s.ky.e.b.a.nk094@gmail.com</a>
<a href=""mailto:s.k.yeba.nk0.94@gmail.com"">s.k.yeba.nk0.94@gmail.com</a>
<a href=""mailto:sk.ye.ba.nk.0.94@gmail.com"">sk.ye.ba.nk.0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.ba.n.k.094@gmail.com"">s.k.y.e.ba.n.k.094@gmail.com</a>
<a href=""mailto:s.k.y.e.b.an.k0.94@gmail.com"">s.k.y.e.b.an.k0.94@gmail.com</a>
<a href=""mailto:sk.y.e.b.a.nk.09.4@gmail.com"">sk.y.e.b.a.nk.09.4@gmail.com</a>
<a href=""mailto:sk.yeb.a.n.k.0.9.4@gmail.com"">sk.yeb.a.n.k.0.9.4@gmail.com</a>
<a href=""mailto:sk.yeb.a.n.k.0.94@gmail.com"">sk.yeb.a.n.k.0.94@gmail.com</a>
<a href=""mailto:s.k.ye.b.an.k.0.94@gmail.com"">s.k.ye.b.an.k.0.94@gmail.com</a>
<a href=""mailto:skye.ban.k.094@gmail.com"">skye.ban.k.094@gmail.com</a>
<a href=""mailto:sky.e.b.a.n.k0.94@gmail.com"">sky.e.b.a.n.k0.94@gmail.com</a>
<a href=""mailto:sk.y.eba.n.k094@gmail.com"">sk.y.eba.n.k094@gmail.com</a>
<a href=""mailto:s.k.y.e.bank.0.94@gmail.com"">s.k.y.e.bank.0.94@gmail.com</a>
<a href=""mailto:s.ky.ebank.094@gmail.com"">s.ky.ebank.094@gmail.com</a>
<a href=""mailto:s.k.yeba.n.k0.9.4@gmail.com"">s.k.yeba.n.k0.9.4@gmail.com</a>
<a href=""mailto:sky.eb.an.k.094@gmail.com"">sky.eb.an.k.094@gmail.com</a>
<a href=""mailto:s.k.y.eb.an.k.0.94@gmail.com"">s.k.y.eb.an.k.0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.ban.k.09.4@gmail.com"">s.k.y.e.ban.k.09.4@gmail.com</a>
<a href=""mailto:sk.yeba.nk.094@gmail.com"">sk.yeba.nk.094@gmail.com</a>
<a href=""mailto:s.ky.e.b.a.nk.09.4@gmail.com"">s.ky.e.b.a.nk.09.4@gmail.com</a>
<a href=""mailto:s.k.y.eba.nk0.9.4@gmail.com"">s.k.y.eba.nk0.9.4@gmail.com</a>
<a href=""mailto:sk.ye.b.a.n.k.0.94@gmail.com"">sk.ye.b.a.n.k.0.94@gmail.com</a>
<a href=""mailto:s.k.yebank.09.4@gmail.com"">s.k.yebank.09.4@gmail.com</a>
<a href=""mailto:s.ky.eb.a.nk.0.9.4@gmail.com"">s.ky.eb.a.nk.0.9.4@gmail.com</a>
<a href=""mailto:sk.y.e.ba.n.k.0.94@gmail.com"">sk.y.e.ba.n.k.0.94@gmail.com</a>
<a href=""mailto:sk.ye.b.a.nk0.94@gmail.com"">sk.ye.b.a.nk0.94@gmail.com</a>
<a href=""mailto:skye.bank.0.9.4@gmail.com"">skye.bank.0.9.4@gmail.com</a>
<a href=""mailto:sk.ye.b.a.n.k0.9.4@gmail.com"">sk.ye.b.a.n.k0.9.4@gmail.com</a>
<a href=""mailto:sk.y.e.b.a.n.k.0.9.4@gmail.com"">sk.y.e.b.a.n.k.0.9.4@gmail.com</a>
<a href=""mailto:s.k.y.e.ban.k.094@gmail.com"">s.k.y.e.ban.k.094@gmail.com</a>
<a href=""mailto:s.kye.b.ank094@gmail.com"">s.kye.b.ank094@gmail.com</a>
<a href=""mailto:sk.ye.b.a.nk.0.9.4@gmail.com"">sk.ye.b.a.nk.0.9.4@gmail.com</a>
<a href=""mailto:sk.y.e.b.an.k0.94@gmail.com"">sk.y.e.b.an.k0.94@gmail.com</a>
<a href=""mailto:sky.ebank09.4@gmail.com"">sky.ebank09.4@gmail.com</a>
<a href=""mailto:skye.ba.nk09.4@gmail.com"">skye.ba.nk09.4@gmail.com</a>
<a href=""mailto:sk.ye.b.a.n.k0.94@gmail.com"">sk.ye.b.a.n.k0.94@gmail.com</a>
<a href=""mailto:s.k.yeba.n.k.0.9.4@gmail.com"">s.k.yeba.n.k.0.9.4@gmail.com</a>
<a href=""mailto:s.ky.eba.nk0.94@gmail.com"">s.ky.eba.nk0.94@gmail.com</a>
<a href=""mailto:skyeba.n.k09.4@gmail.com"">skyeba.n.k09.4@gmail.com</a>
<a href=""mailto:s.k.y.eba.n.k.09.4@gmail.com"">s.k.y.eba.n.k.09.4@gmail.com</a>
<a href=""mailto:skye.b.ank094@gmail.com"">skye.b.ank094@gmail.com</a>
<a href=""mailto:s.k.y.e.ba.nk09.4@gmail.com"">s.k.y.e.ba.nk09.4@gmail.com</a>
<a href=""mailto:sk.ye.ba.n.k.0.94@gmail.com"">sk.ye.ba.n.k.0.94@gmail.com</a>
<a href=""mailto:skye.bank0.9.4@gmail.com"">skye.bank0.9.4@gmail.com</a>
<a href=""mailto:sk.y.e.ba.nk0.9.4@gmail.com"">sk.y.e.ba.nk0.9.4@gmail.com</a>
<a href=""mailto:s.kye.ban.k0.9.4@gmail.com"">s.kye.ban.k0.9.4@gmail.com</a>
<a href=""mailto:s.kye.b.ank0.94@gmail.com"">s.kye.b.ank0.94@gmail.com</a>
<a href=""mailto:sky.eb.a.n.k09.4@gmail.com"">sky.eb.a.n.k09.4@gmail.com</a>
<a href=""mailto:s.ky.eb.a.n.k.0.94@gmail.com"">s.ky.eb.a.n.k.0.94@gmail.com</a>
<a href=""mailto:s.ky.e.b.ank0.94@gmail.com"">s.ky.e.b.ank0.94@gmail.com</a>
<a href=""mailto:s.k.y.e.ban.k.0.9.4@gmail.com"">s.k.y.e.ban.k.0.9.4@gmail.com</a>
<a href=""mailto:s.ky.e.ban.k.09.4@gmail.com"">s.ky.e.ban.k.09.4@gmail.com</a>"
SjaDhUpM,Image_Size,naren_paste,Python,Tuesday 26th of September 2023 01:05:48 AM CDT,"from PIL import Image
# Open an image
image = Image.open(""your_image.jpg"")

# Get the size (width and height) of the image
width, height = image.size

print(f""Width: {width}, Height: {height}"")"
0hdtYbyL,Yolov5_Custom,naren_paste,Python,Tuesday 26th of September 2023 12:52:32 AM CDT,"## Create a Custom Python Script:

# Filename: custom_config.py
import os

# Define your class names
class_names = ['class1', 'class2', 'class3']

# Specify the path to your dataset
data_dir = '/path/to/dataset'

# Create a list of image and annotation paths
images = [os.path.join(data_dir, 'images', img) for img in os.listdir(os.path.join(data_dir, 'images')) if img.endswith('.jpg')]
annotations = [os.path.join(data_dir, 'annotations', ann) for ann in os.listdir(os.path.join(data_dir, 'annotations')) if ann.endswith('.txt')]

# Create a dictionary for the data configuration
data = {
    'train': images,
    'val': [],  # You can split your dataset into train and validation
    'nc': len(class_names),
    'names': class_names
}
###########################
# In your training script (e.g., train.py for YOLOv5), import the custom_config.py and use the data dictionary.

# Filename: train.py
from custom_config import data, class_names
from pathlib import Path
import yaml

# Create a directory for saving YOLOv5 configuration
save_dir = Path('yolov5_data')
save_dir.mkdir(parents=True, exist_ok=True)

# Save the custom data configuration as a YAML file
with open(save_dir / 'custom_data.yaml', 'w') as f:
    yaml.dump(data, f)

# Now, you can use this custom_data.yaml in YOLOv5 training
!python train.py --data save_dir/custom_data.yaml --cfg models/yolov5s.yaml --batch-size 16 --epochs 50"
hsb5DurD,Random Wallpaper Downloader Rev 2,nitestryker,Bash,Tuesday 26th of September 2023 12:40:27 AM CDT,"#!/bin/bash

##########################################
# Copyright 2023 nitestryker
# Copyright 2023 Nitestryker Software LLC
# license GPL 3 (http://www.gnu.org/licenses/gpl.html)
###########################################
# version 2 - allows users to set wait time in seconds between downloads rather then minutes.
# use at your own risk I am not responsible if you flood their website use at your own risk and don't be stupid.
 

# Store the directory where wallpapers will be stored
WALLPAPER_DIR=""/home/user/Pictures""

# Function to download the wallpaper
download_wallpaper() {
    # Generate a unique filename based on the current timestamp
    UNIQUE_FILENAME=""wallpaper_$(date +'%Y%m%d%H%M%S').jpg""

    # Download a random image from Unsplash and save it to the wallpaper directory
    # Use curl to fetch the image URL and store it in a variable
    IMAGE_URL=$(curl -Ls -w %{url_effective} -o /dev/null https://source.unsplash.com/random/1920x1080)

    # Save the image to the wallpaper directory with the unique filename
    curl -Lf ""$IMAGE_URL"" > ""$WALLPAPER_DIR/$UNIQUE_FILENAME""

    # Increment the downloaded wallpaper counter
    ((DOWNLOADED_WALLPAPERS++))
}

# Function to show countdown timer
show_countdown() {
    for ((i = SLEEP_DURATION; i >= 0; i--)); do
        printf ""\rDownloading wallpaper %d of %d... Time left: %02d:%02d "" ""$DOWNLOADED_WALLPAPERS"" ""$MAX_WALLPAPERS"" $((i / 60)) $((i % 60))
        sleep 1
    done
    echo """"
}

# Create the directory if it doesn't exist
if [ ! -d ""$WALLPAPER_DIR"" ]; then
    mkdir ""$WALLPAPER_DIR""
fi

# Set the initial value of the downloaded wallpaper counter to 0
DOWNLOADED_WALLPAPERS=0

# Ask the user to input the maximum number of wallpapers to download
read -p ""Enter the maximum number of wallpapers to download (default: 100): "" MAX_WALLPAPERS

# If the user didn't enter any value, set the default value to 100
MAX_WALLPAPERS=${MAX_WALLPAPERS:-100}

# Ask the user to input the sleep duration in seconds
read -p ""Enter the sleep duration in seconds between downloading wallpapers (default: 300): "" SLEEP_DURATION

# If the user didn't enter any value, set the default value to 300 seconds (5 minutes)
SLEEP_DURATION=${SLEEP_DURATION:-300}

while [ ""$DOWNLOADED_WALLPAPERS"" -lt ""$MAX_WALLPAPERS"" ]; do
    # Download the wallpaper
    download_wallpaper

    # Show a notice and countdown before sleeping
    echo ""Downloading wallpaper $DOWNLOADED_WALLPAPERS of $MAX_WALLPAPERS...""
    show_countdown
done

# Exit the script once the maximum number of wallpapers is downloaded
echo ""Maximum number of wallpapers ($MAX_WALLPAPERS) downloaded. Exiting...""
"
6mpHunq6,LC364 T3,pb_jiang,C++,Tuesday 26th of September 2023 12:23:07 AM CDT,"using ll = long long;
class Solution {
public:
    long long maximumSumOfHeights(vector<int>& mh) {
        ll ret = 0;
        int n = mh.size();
        vector<ll> pref(n), suff(n);
        stack<int> stck;
        for (int i = 0; i < n; ++i) {
            while(stck.size() && mh[i] < mh[stck.top()]) stck.pop();
            if (stck.size() == 0) pref[i] = ll(i + 1) * mh[i];
            else pref[i] = ll(i - stck.top()) * mh[i] + pref[stck.top()];
            stck.push(i);
        }
        while(stck.size()) stck.pop();
        for (int i = n - 1; i >= 0; --i) {
            while(stck.size() && mh[i] < mh[stck.top()]) stck.pop();
            if (stck.size() == 0) suff[i] = ll(n - i) * mh[i];
            else suff[i] = ll(stck.top() - i) * mh[i] + suff[stck.top()];
            stck.push(i);
        }
        
        for (int i = 0; i < n; ++i) {
            ret = max(ret, suff[i] + pref[i] - mh[i]);
        }
        return ret;
    }
};"
C0DKsaL0,Untitled,Tasin_021,C++,Monday 25th of September 2023 09:56:58 PM CDT,"#include<bits/stdc++.h>
using namespace std;
int  main()
{
    int t=1;
    cin >> t; 
    while(t--)
    {
        int n,i;
        string s;
        cin>>n;
        for(i=0;i<n;i++)
        {
         cin>>s;
         cout<<s[0];
        for(i=0;i<s.size();i+=2)
            {
                //cout<<s[0];
                if(s[i+1]==s[i+2])
                {
                    cout<<s[i+1];
                }
            }
            cout<<s[s.size()-1] << endl;
        }
    }
}"
nj7ikrWs,Longest Prefix Suffix,jayati,C++,Monday 25th of September 2023 09:38:02 PM CDT,"//{ Driver Code Starts
//Initial template for C++ 
 
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

//User function template for C++

class Solution{
  public:		
	int lps(string s) {
	    // Your code goes here
	    int n=s.length();
	    int i=0;
	    int j=1;
	    vector<int> ans(n,0);
	    while(j<n)
	    {
	        if(s[i]==s[j])
	        {
	            ans[j]=i+1;
	            i++;
	            j++;
	        }
	        else
	        {
	            if(i!=0)
	            {
	                i=ans[i-1];
	            }
	            else
	            {
	                j++;
	            }
	        }
	    }
	    return ans.back();
	}
};

//{ Driver Code Starts.

int main() 
{
   

   	ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
   
   	int t;
   	cin >> t;
   	while(t--)
   	{
   		string str;
   		cin >> str;

   		Solution ob;

   		cout << ob.lps(str) << ""\n"";
   	}

    return 0;
}

// } Driver Code Ends"
8TkBKs9H,Shape Up pitch generator,thehunmonkgroup,YAML,Monday 25th of September 2023 09:19:21 PM CDT,"---
description: AI assists the user in writing a Shape Up pitch
request_overrides:
  preset: gpt-4-creative-writing
  activate_preset: true
  system_message: |-
    ## MAIN PURPOSE

    You are an expert in the Shape Up Method originally developed by Basecamp, used by product development teams to shape, bet, and build meaningful products. Your goal is to assist the user in writing a PITCH for a solution that the user wants to present to a team.

    Use the following definitions to understand the purpose of the CONDENSED SPECIFICATION and USER INTERACTION WORKFLOW sections.

    1. CONDENSED SPECIFICATION: This is a summarized guide or reference that describes the key elements of a specific process, task, or product. It's not something to be produced or outputted, but to be used as a reference to guide the conversation and the creation of the final product. For instance, in the context of the Shape Up Method, the CONDENSED SPECIFICATION would outline the key elements that need to be included in a PITCH.

    2. USER INTERACTION WORKFLOW: This is a step-by-step guide for me, the AI, to follow during the conversation with the user. It's not something to be outputted or given to the user, but an internal guide to help me gather and refine the necessary information from the user. The steps in the workflow are designed to help me engage with the user, ask the right questions, and guide the conversation in a way that will help create the final product.


    ## CONDENSED SPECIFICATION:

    The product is a structured PITCH format designed to present a potential solution to a problem in a digestible and comprehensive manner. The PITCH includes five key ingredients:

    1. Problem: The motivating factor for the solution, whether it's a raw idea, a use case, or an observed issue.
    2. Appetite: The amount of time intended to be spent on the solution, which also sets constraints.
    3. Solution: The core elements of the proposed solution, presented in an easily understandable form.
    4. Rabbit holes: Specific details about the solution that need to be highlighted to avoid potential issues.
    5. No-gos: Any functionality or use cases that are intentionally excluded from the concept to fit the appetite or make the problem manageable.

    The PITCH should be presented in a form that allows stakeholders to understand the concept, evaluate its feasibility, and make an informed decision on whether to bet on it or not.

    USER INTERACTION WORKFLOW:

    1.1. Ask the user to define the problem they are trying to solve.
    1.2. Ask the user to specify their appetite, i.e., the amount of time they are willing to spend on the solution.
    1.3. Ask the user to describe their proposed solution.
    1.4. Ask the user to identify any potential rabbit holes or pitfalls in their solution.
    1.5. Ask the user to specify any no-gos, i.e., any functionality or use cases they are intentionally excluding from the concept.

    2.1. Discuss the problem definition with the user, asking clarifying questions to ensure it's well-defined and understood.
    2.2. Discuss the user's appetite, ensuring it's realistic and aligns with the complexity of the problem and solution.
    2.3. Discuss the proposed solution, asking the user to explain their reasoning and how it addresses the problem.
    2.4. Discuss the identified rabbit holes, asking the user how they plan to avoid or address them.
    2.5. Discuss the no-gos, ensuring they are intentional and won't negatively impact the solution's effectiveness.

    3.1. Based on the refined information, create a structured pitch that includes the problem, appetite, solution, rabbit holes, and no-gos.
    3.2. Review the pitch with the user, making any necessary adjustments based on their feedback.
    3.3. Once the user is satisfied with the pitch, finalize it and prepare it for presentation to stakeholders.


    ## GUIDELINES

    1. Follow the USER INTERACTION WORKFLOW sequentially. Each numbered item (1.1, 1.2, etc.) is a task. DO NOT skip tasks or combine tasks!
    2. Please start with the first task. After each user response, ask the user if the task seems complete and if you should proceed to the next task.
    3. If the user confirms, then move on to the next task. If not, then use the input to continue working on the current task.


    ## FORMAT

    Your final output, which is the last step in the USER INTERACTION WORKFLOW, should be a professional-grade Shape Up PITCH in well-formatted markdown.


    ## CHATBOT BEHAVIORS

    As a chatbot, here is a set of guidelines you should abide by.

    Ask Questions: Do not hesitate to ask clarifying or leading questions if the CONDENSED SPECIFICATION or your own internal knowledge of the Shape Up Method does not provide enough detail to write the PITCH. In particular, ask clarifying questions if you need more information in any of the steps in the USER INTERACTION WORKFLOW. In order to maximize helpfulness, you should only ask high value questions needed to complete the task of writing the PITCH.
---

Please help me write a PITCH for a solution I want to present to my team."
frN30spN,linked list head and tail,firzaelbuho,C++,Monday 25th of September 2023 08:56:18 PM CDT,"#include <iostream>

using namespace std;

// Struktur untuk data buah
struct Buah {
    string nama;
    int harga;
    Buah* next;
    Buah* prev;

    Buah(string _nama, int _harga) : nama(_nama), harga(_harga), next(nullptr), prev(nullptr) {}
};

Buah* head = nullptr;
Buah* tail = nullptr;

// Fungsi untuk memasukkan buah dari depan
void inputBuahDepan(string nama, int harga) {
    Buah* buahBaru = new Buah(nama, harga);
    if (head == nullptr) {
        head = buahBaru;
        tail = buahBaru;
    } else {
        buahBaru->next = head;
        head->prev = buahBaru;
        head = buahBaru;
    }
}

// Fungsi untuk memasukkan buah dari belakang
void inputBuahBelakang(string nama, int harga) {
    Buah* buahBaru = new Buah(nama, harga);
    if (tail == nullptr) {
        head = buahBaru;
        tail = buahBaru;
    } else {
        buahBaru->prev = tail;
        tail->next = buahBaru;
        tail = buahBaru;
    }
}

// Fungsi untuk mencetak buah dari depan
void cetakBuahDepan() {
    if (head == nullptr) {
        cout <<""""<<endl;
        cout << ""List buah masih kosong"" << endl;
        return;
    }

    Buah* current = head;
    cout <<""======================================""<<endl;
    cout <<""Daftar Buah""<<endl;
    cout <<""======================================""<<endl;
    while (current != nullptr) {
        cout << ""Nama: "" << current->nama << "", Harga: "" << current->harga << endl;
        current = current->next;
    }
}

// Fungsi untuk mencetak buah dari belakang
void cetakBuahBelakang() {
    if (tail == nullptr) {
        cout <<""""<<endl;
        cout << ""List buah masih kosong"" << endl;
        return;
    }

    Buah* current = tail;
    cout <<""======================================""<<endl;
    cout <<""Daftar Buah""<<endl;
    cout <<""======================================""<<endl;
    while (current != nullptr) {
        cout << ""Nama: "" << current->nama << "", Harga: "" << current->harga << endl;
        current = current->prev;
    }
}

// Fungsi untuk menghapus buah dari depan
void hapusBuahDepan() {
    if (head != nullptr) {
        Buah* buahHapus = head;
        head = head->next;
        if (head != nullptr) {
            head->prev = nullptr;
        } else {
            tail = nullptr;
        }
        delete buahHapus;
    } else {
        cout << ""List buah kosong"" << endl;
    }
}

// Fungsi untuk menghapus buah dari belakang
void hapusBuahBelakang() {
    if (tail != nullptr) {
        Buah* buahHapus = tail;
        tail = tail->prev;
        if (tail != nullptr) {
            tail->next = nullptr;
        } else {
            head = nullptr;
        }
        delete buahHapus;
    } else {
        cout << ""List buah kosong"" << endl;
    }
}

int main() {
    while (true) {
        cout <<""======================================""<<endl;
        cout << ""Menu Utama:"" << endl;
        cout <<""======================================""<<endl;
        cout << ""1. Input Buah (Depan)"" << endl;
        cout << ""2. Input Buah (Belakang)"" << endl;
        cout << ""3. Cetak Buah (Depan)"" << endl;
        cout << ""4. Cetak Buah (Belakang)"" << endl;
        cout << ""5. Hapus (Depan)"" << endl;
        cout << ""6. Hapus (Belakang)"" << endl;
        cout << ""7. Keluar"" << endl;
        cout <<""""<<endl;
        cout << ""Pilih menu (1-7): "";
        
        int pilihan;
        cin >> pilihan;

        switch (pilihan) {
            case 1:
                {
                    string nama;
                    int harga;
                    cout << ""Masukkan nama buah: "";
                    cin >> nama;
                    cout << ""Masukkan harga buah: "";
                    cin >> harga;
                    inputBuahDepan(nama, harga);
                    break;
                }
            case 2:
                {
                    string nama;
                    int harga;
                    cout << ""Masukkan nama buah: "";
                    cin >> nama;
                    cout << ""Masukkan harga buah: "";
                    cin >> harga;
                    inputBuahBelakang(nama, harga);
                    break;
                }
            case 3:
                cetakBuahDepan();
                break;
            case 4:
                cetakBuahBelakang();
                break;
            case 5:
                hapusBuahDepan();
                break;
            case 6:
                hapusBuahBelakang();
                break;
            case 7:
                return 0;
            default:
                cout << ""Pilihan tidak valid. Silakan coba lagi."" << endl;
        }

        cout << endl;
    }

    return 0;
}
"
nSG3RYbm,LandscapeLoginView,anify,Dart,Monday 25th of September 2023 08:53:25 PM CDT,"class LandscapeLoginView extends StatefulWidget {
  const LandscapeLoginView({super.key});

  @override
  State<LandscapeLoginView> createState() => _LandscapeLoginViewState();
}

class _LandscapeLoginViewState extends State<LandscapeLoginView> {
  final usernameController = TextEditingController();
  final passwordController = TextEditingController();

  final username = Auth.username;
  final password = Auth.password;

  @override
  void dispose() {
    usernameController.dispose();
    passwordController.dispose();
    super.dispose();
  }

  void failedLogin() {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
        content: Text(
            'Maaf, Anda gagal masuk ke myPati. Cek kembali nama pengguna dan password Anda'),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            const Expanded(
              flex: 1,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'Selamat datang',
                    style: TextStyle(
                      fontSize: 32,
                      fontWeight: FontWeight.w700,
                      fontFamily: 'Montserrat',
                      color: Colors.blue,
                    ),
                  ),
                  Text(
                    'di myPati',
                    style: TextStyle(
                      fontSize: 32,
                      fontWeight: FontWeight.w700,
                      fontFamily: 'Montserrat',
                      color: Colors.green,
                    ),
                  ),
                  SizedBox(height: 20), // Spasi tambahan
                  Text(
                    'Silahkan Masuk',
                    style: TextStyle(fontSize: 24),
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
            Expanded(
              flex: 1,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  TextField(
                    controller: usernameController,
                    decoration: const InputDecoration(
                      prefixIcon: Icon(Icons.person_2_rounded),
                      label: Text('Nama Pengguna'),
                    ),
                  ),
                  TextField(
                    controller: passwordController,
                    decoration: const InputDecoration(
                      prefixIcon: Icon(Icons.lock),
                      label: Text('Kata Sandi'),
                    ),
                    obscureText: true,
                    obscuringCharacter: '*',
                  ),
                  Align(
                    alignment: Alignment.centerRight,
                    child: TextButton(
                      onPressed: () {},
                      child: const Text(
                        'Lupa kata sandi?',
                        style: TextStyle(fontSize: 18),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            Container(
              margin: const EdgeInsets.symmetric(vertical: 10),
              alignment: Alignment.center,
              child: Material(
                color: Colors.green,
                borderRadius: BorderRadius.circular(20),
                child: InkWell(
                  onTap: () {
                    setState(() {
                      if (usernameController.text == username &&
                          passwordController.text == password) {
                        Navigator.pushReplacement(context,
                            MaterialPageRoute(builder: (context) {
                          return const MainView();
                        }));
                      } else {
                        failedLogin();
                      }
                    });
                  },
                  borderRadius: BorderRadius.circular(20),
                  child: const SizedBox(
                    width: 120,
                    height: 60,
                    child: Center(
                      child: Text(
                        'Masuk',
                        style: TextStyle(color: Colors.white, fontSize: 20),
                      ),
                    ),
                  ),
                ),
              ),
            ),
            const Expanded(
              flex: 1,
              child: SizedBox(),
            ),
          ],
        ),
      ),
    );
  }
}"
yQSMDHmu,Portal,GoodNoodle,C#,Monday 25th of September 2023 08:14:58 PM CDT,"public class Portal : MonoBehaviour, IPlayerTriggerable
{
    [SerializeField] int sceneToLoad = -1;
    [SerializeField] DesID destinationPortal;
    [SerializeField] Transform spawnPoint;

    PlayerController player;

    Fader fader;
    public void OnPlayerTriggered(PlayerController player)
    {
        player.Charecter.Animator.IsMoving = false;
        this.player = player;
        StartCoroutine(SwitchScene());
    }

    private void Start()
    {
      fader =  FindObjectOfType<Fader>();
    }
    IEnumerator SwitchScene()
    {
        DontDestroyOnLoad(gameObject);

         GameController.Instance.PauseGame(true);
        yield return fader.FadeIn(0.5f);

        yield return SceneManager.LoadSceneAsync(sceneToLoad);

        var portal = FindObjectsOfType<Portal>().First(x => x != this && x.destinationPortal == this.destinationPortal);
        //player.Charecter.SetPosToTile(portal.spawnPoint.position);

        yield return fader.FadeOut(0.5f);

        GameController.Instance.PauseGame(false);

        Destroy(gameObject);
    }

    public void OnCompanionTriggered(CompanionController companion)
    {
        throw new System.NotImplementedException();
    }

    public Transform SpawnPoint => spawnPoint;

    public bool triggerRepeatedly => false;
}

public enum DesID
{
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    i,
    j,
    k, 
    l, 
    m,
    
}
   "
8PW2CU0m,Tipo de Hogar y Pobreza Infantil,yayopoint,R,Monday 25th of September 2023 07:46:24 PM CDT,"# Limpiar entorno de trabajo
rm(list=objects())

################################### Paquetes ###################################
library(haven)
library(flextable)

################################# Directorios ##################################
folder <- ""~/Dropbox/Analisis/Uniparentalidad Femenina y Pobreza Infantil""
dirdata <- file.path(folder, ""data"")

############################# Carga Bases de Datos #############################
setwd(dirdata)
casen2022 <- read_sav(""2022/Base de datos Casen 2022 SPSS.sav"")
setwd(folder)

# Consideramos solo datos utilizados para disminuír espacio usado en la memoria
casen2022[,c(""id_vivienda"", ""hogar"", ""expr"", ""sexo"", ""edad"", ""pco1"", ""tipohogar"", ""pobreza"")] |>
  zap_missing() |>
  as_factor() -> casen2022


# Filtramos sólo datos de la quinta region para disminuír espacio usado en la memoria
#casen2022[casen2022$region==5,] |>
#  zap_missing() |>
#  as_factor() -> casen2022


################################ Recodificación ################################
casen2022$idhogar <- with(casen2022, interaction(id_vivienda, hogar)) |> 
  as.numeric()

# Sexo jefatura de hogar
sexojh <- rep(NA, nrow(casen2022))
sexojh[with(casen2022, pco1 == ""1. Jefatura de Hogar"" & sexo == ""1. Hombre"")] <- 1
sexojh[with(casen2022, pco1 == ""1. Jefatura de Hogar"" & sexo == ""2. Mujer"")] <- 2
sexojh <- tapply(sexojh, casen2022$idhogar, sum, na.rm=TRUE)
sexojh <- sexojh[as.character(casen2022$idhogar)]
names(sexojh) <- NULL
sexojh <- unlist(sexojh)
attr(sexojh, ""label"") <- ""Sexo Jefatura de Hogar""
sexojh <- factor(sexojh, levels=1:2, labels=c(""Masculina"", ""Femenina""))
casen2022$sexojh <- sexojh
rm(sexojh)

# Filtro para dejar sólo a los menores de 6 años:
casen2022 <- casen2022[casen2022$edad <=6,]

############################## Tablas y Gráficos ###############################

attach(casen2022)

###                                              ###
### Tabla1: Pobreza infantil según tipo de hogar ###
###                                              ###
tab1 <- xtabs(expr ~ tipohogar+pobreza, data=casen2022, drop.unused.levels = TRUE)

ftab1 <- proc_freq(casen2022, ""tipohogar"", ""pobreza"", T,F,F,""expr"") |>
  add_footer_lines(""Situación de Pobreza en menores de 6 años según tipo de hogar. Fuente: Casen 2022"")

ftab1

ptab1 <-  proportions(tab1, 1)*100

barplot(ptab1, beside=TRUE, col=rainbow(4),
        main=""Porcentaje situación de pobreza en menores de 6 años\n
        respecto del tipo de hogar"",
        sub=""Fuente: Elaboración propia en base a datos de Casen 2022"")
legend(""topleft"",legend=rownames(ptab1), fill=rainbow(4))

###                                              ###
### Tabla2: Pobreza infantil según tipo de hogar ###
### En hogares con jefatura de hogar femenina    ###
###                                              ###
tab2 <- xtabs(expr ~ tipohogar+pobreza, data=casen2022[sexojh == ""Femenina"",], drop.unused.levels = TRUE)

ftab2 <- proc_freq(casen2022[sexojh == ""Femenina"",], ""tipohogar"", ""pobreza"", T,F,F,""expr"") |>
  add_footer_lines(""Situación de Pobreza en menores de 6 años según tipo de hogar,
                   en hogares con jefatura de hogar femenina. Fuente: Casen 2022"")

ftab2

ptab2 <-  proportions(tab2, 1)*100

barplot(ptab2, beside=TRUE, col=rainbow(4),
        main=""Porcentaje situación de pobreza en menores de 6 años\n
        respecto del tipo de hogar. Jefatura Hogar=Femenina"",
        sub=""Fuente: Elaboración propia en base a datos de Casen 2022"")
legend(""topleft"",legend=rownames(ptab1), fill=rainbow(4))

###                                              ###
### Tabla2: Pobreza infantil según tipo de hogar ###
### En hogares con jefatura de hogar masculina   ###
###                                              ###
tab3 <- xtabs(expr ~ tipohogar+pobreza, data=casen2022[edad <=6 & sexojh == ""Masculina"",], drop.unused.levels = TRUE)

ftab3 <- proc_freq(casen2022[edad <=6 & sexojh == ""Masculina"",], ""tipohogar"", ""pobreza"", T,F,F,""expr"") |>
  add_footer_lines(""Situación de Pobreza en menores de 6 años según tipo de hogar,
                   en hogares con jefatura de hogar masculina Fuente: Casen 2022"")

ftab3

ptab3 <-  proportions(tab3, 1)*100

barplot(ptab3, beside=TRUE, col=rainbow(4),
        main=""Porcentaje situación de pobreza en menores de 6 años\n
        respecto del tipo de hogar. Jefatura Hogar=Masculina"",
        sub=""Fuente: Elaboración propia en base a datos de Casen 2022"")
legend(""topleft"",legend=rownames(ptab1), fill=rainbow(4))

detach(casen2022)"
kZH06dfF,Day 10,HarrJ,Java,Monday 25th of September 2023 07:43:15 PM CDT,"package week2;
import java.util.Scanner;

public class Day10A {
    public static void main(String[] args) {
        //a sample similar to activity rectangular prism
        // to compute: surface area, volume
        // no method version, continuing from step 6
        Scanner sc = new Scanner(System.in);
        double len, hei, wid, result;
        String option = """";
        
        System.out.println(""For rectangular prism"");
        System.out.print(""Enter Length : "");
        len = sc.nextDouble();
        System.out.print(""Enter Width : "");
        wid = sc.nextDouble();
        System.out.print(""Enter Height : "");
        hei = sc.nextDouble();

        System.out.println(""type the number of the operation you want to do:"");
        System.out.println(""1 - Volume"");
        System.out.println(""2 - Surface Area"");
        System.out.print(""Option: "");
        option = sc.nextLine();
        if (option.equals(""1"")){
            result = len * wid * hei;
            System.out.println(""The volume of the rectangular prism is "" + result);
        } else if (option.equals(""2"")) {
            result = 2 * (len * wid + len * hei + wid * hei);
            System.out.println(""The surface area of the rectangular prism is "" + result);
        } else {
            System.out.println(""You did not input a correct option"");
        }

    }
}

//-- IBANG FILE NA ITO --------------------------------------------
package week2;
import java.util.Scanner;

public class Day10B {
    public static void main(String[] args) {
        // day 10A but with methods instead;
        // the way as asked by the assignment:
        Day10B callMe = new Day10B();
        Scanner sc = new Scanner(System.in);
        double len, hei, wid;
        String option = """";
        
        System.out.println(""For rectangular prism"");
        System.out.print(""Enter Length : "");
        len = sc.nextDouble();
        System.out.print(""Enter Width : "");
        wid = sc.nextDouble();
        System.out.print(""Enter Height : "");
        hei = sc.nextDouble();
        sc.nextLine();

        System.out.println(""type the number of the operation you want to do:"");
        System.out.println(""1 - Volume"");
        System.out.println(""2 - Surface Area"");
        System.out.print(""Option: "");
        option = sc.nextLine();

        switch (option) {
            case ""1"":
                callMe.computeVolume(len, wid, hei);
                break;
            case ""2"":
                callMe.computeSArea(len, wid, hei);
                break;
            default:

        }
    }

    public void computeVolume(double length, double width, double height) {
        double volume = length * width * height;
        System.out.println(""The volume of the rectangle is "" + volume);
    }

    public void computeSArea(double length, double width, double height) {
        double sArea = 2 * (length * width + length * height + width * height);
        System.out.println(""The surface area of the rectangle is "" + sArea);
    }
}


//-- IBANG FILE NA ULIT --------------------------------------------
package week2;

public class Day10D {
    public static void main(String[] args) {
        double numRand = 1.33;
        System.out.println(numRand);
        System.out.println(""ceil(round up): "" + Math.ceil(numRand));
        System.out.println(""floor(round down): "" + Math.floor(numRand));
        System.out.println(""rint: "" + Math.rint(numRand));
        System.out.println(""round: "" + Math.round(numRand));
        numRand = 12.51;
        System.out.println(numRand);
        System.out.println(""ceil: "" + Math.ceil(numRand));
        System.out.println(""floor: "" + Math.floor(numRand));
        System.out.println(""rint: "" + Math.rint(numRand));
        System.out.println(""round: "" + Math.round(numRand));
        numRand = 0.42;
        System.out.println(numRand);
        System.out.println(""ceil: "" + Math.ceil(numRand));
        System.out.println(""floor: "" + Math.floor(numRand));
        System.out.println(""rint: "" + Math.rint(numRand));
        System.out.println(""round: "" + Math.round(numRand));
        numRand = 41.58;
        System.out.println(numRand);
        System.out.println(""ceil: "" + Math.ceil(numRand));
        System.out.println(""floor: "" + Math.floor(numRand));
        System.out.println(""rint: "" + Math.rint(numRand));
        System.out.println(""round: "" + Math.round(numRand));
        //-------------
        double lottoMax = 42;
        for (int i = 0; i < 6; i++) {
            System.out.println(i + "": "" + Math.round(Math.random() * lottoMax));
        }
    }
}


//-- SLOT MACHINE SAMPLE --------------------------------------------
package week2;

public class Day10E {
    public static void main(String[] args) {
        double maxNum = 7;
        int[] slotResult = new int[5];
        int count = 0;
        int newNum;
        boolean isUnique = true;
        do {
            newNum = (int) Math.ceil(Math.random() * maxNum);
            slotResult[count] = newNum;
            System.out.print(slotResult[count] + "" | "");
            // gagawa kayo ng code na mag print ng you win kapag may 3 same, 4 same, 5 same
            count++;
        } while (count < 5);
    }
}
"
YdjfAMBx,Location Portal,GoodNoodle,C#,Monday 25th of September 2023 07:42:32 PM CDT,"public class LocationPortal : MonoBehaviour, IPlayerTriggerable
{
    // Teleports player without switching scenes
    [SerializeField] DesID destinationPortal;
   
    [SerializeField] Transform spawnPoint;

    PlayerController player;
    BuddyController buddy;

    [SerializeField] Fader fader;


    private void Start()
    {
        fader = FindObjectOfType<Fader>();
        player = FindObjectOfType<PlayerController>();
        buddy = FindObjectOfType<BuddyController>();
    }

    public void OnPlayerTriggered(PlayerController player)
    {
         
            player.Charecter.Animator.IsMoving = false;
            this.player = player;
            StartCoroutine(Teleport());
               
    }

    IEnumerator Teleport()
    {
       // GameController.Instance.PauseGame(true);
        yield return fader.FadeIn(0.5f);

       
        var portal = FindObjectsOfType<LocationPortal>().First(x => x != this && x.destinationPortal == this.destinationPortal);
        player.Charecter.SetPositionAndSnapToTile(portal.spawnPoint.position);
        //StopBuddy();
        yield return fader.FadeOut(0.5f);


       // GameController.Instance.PauseGame(false);
    }

    public void StopBuddy()
    {
      buddy.Charecter.Animator.IsMoving = false;
        StartCoroutine(Teleport());
    }

    public void OnCompanionTriggered(CompanionController companion)
    {
        companion.Charecter.Animator.IsMoving = false;
        StartCoroutine(Teleport());
    }

    public Transform SpawnPoint => spawnPoint;

    public bool triggerRepeatedly => false;
}
"
qzrapxZw,2023-09-25_stats.json,rdp_snitch,JSON,Monday 25th of September 2023 07:17:59 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 6,
    ""45.227.254.55"": 6,
    ""87.236.197.21"": 3,
    ""198.235.24.196"": 9,
    ""172.105.116.67"": 9,
    ""87.251.75.64"": 3,
    ""45.143.201.62"": 15,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 6,
    ""51.75.160.42"": 6,
    ""185.246.210.147"": 3,
    ""194.165.16.37"": 6,
    ""87.251.75.120"": 3,
    ""205.210.31.89"": 9,
    ""62.204.41.137"": 12,
    ""185.73.124.50"": 3,
    ""24.199.99.136"": 9,
    ""43.155.108.244"": 3,
    ""43.156.6.9"": 12,
    ""45.227.254.54"": 6,
    ""111.61.253.55"": 3,
    ""45.140.17.16"": 3,
    ""165.154.104.88"": 3,
    ""193.142.147.9"": 9,
    ""193.142.146.17"": 9,
    ""54.217.58.4"": 72,
    ""198.235.24.221"": 9,
    ""62.210.214.237"": 12,
    ""185.170.144.113"": 6,
    ""85.53.127.115"": 9,
    ""216.71.28.109"": 18,
    ""194.165.16.72"": 6,
    ""5.161.184.107"": 3,
    ""162.142.125.222"": 3,
    ""205.210.31.197"": 9,
    ""167.94.145.55"": 3,
    ""194.165.16.73"": 6,
    ""103.153.68.198"": 3
  },
  ""asn"": {
    ""AS4134"": 6,
    ""AS267784"": 12,
    ""AS35592"": 3,
    ""AS396982"": 36,
    ""AS63949"": 9,
    ""AS208091"": 15,
    ""AS210950"": 15,
    ""AS197414"": 12,
    ""AS16276"": 6,
    ""AS60068"": 3,
    ""AS48721"": 18,
    ""AS59425"": 12,
    ""AS14061"": 9,
    ""AS132203"": 15,
    ""AS24547"": 3,
    ""AS198953"": 3,
    ""AS135377"": 3,
    ""AS208046"": 18,
    ""AS16509"": 72,
    ""AS12876"": 12,
    ""AS12479"": 9,
    ""AS11232"": 18,
    ""AS213230"": 3,
    ""AS398324"": 3,
    ""AS398705"": 3,
    ""AS131366"": 3
  },
  ""isp"": {
    ""Chinanet"": 6,
    ""Flyservers S.A."": 30,
    ""Network of Coolhousing"": 3,
    ""Google LLC"": 36,
    ""Akamai Technologies"": 9,
    ""Xhost Internet Solutions LP"": 27,
    ""TOV E-RISHENNYA"": 15,
    ""OVH SAS"": 6,
    ""Cdn77 - PRG"": 3,
    ""Horizon LLC"": 12,
    ""DigitalOcean, LLC"": 9,
    ""Shenzhen Tencent Computer Systems Company Limited"": 15,
    ""China Mobile communications corporation"": 3,
    ""Proton66 OOO"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ColocationX Ltd."": 18,
    ""Amazon.com, Inc."": 72,
    ""Online S.A.S."": 12,
    ""Uni2 1"": 9,
    ""Midcontinent Communications"": 18,
    ""Hetzner Online GmbH"": 3,
    ""Censys, Inc."": 6,
    ""TAM"": 3
  },
  ""org"": {
    ""Chinanet HE"": 6,
    ""UAB Host Baltic"": 12,
    ""Coolhousing s.r.o"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 9,
    ""Xhost Internet Solutions"": 12,
    ""TOV VAIZ PARTNER"": 15,
    ""Xhostis"": 15,
    ""OVH Ltd"": 6,
    ""Overkill Beta s.r.o"": 3,
    ""Flyservers S.A"": 18,
    ""Horizon LLC"": 12,
    ""DigitalOcean, LLC"": 9,
    ""Tencent Cloud Computing"": 15,
    ""China Mobile"": 3,
    ""Proton66 LLC"": 3,
    ""Ucloud Information Technology"": 3,
    ""x33 Networks IBC"": 9,
    ""ColocationX Ltd"": 9,
    ""AWS EC2 (eu-west-1)"": 72,
    ""ONLINE"": 12,
    ""Unknown"": 9,
    ""Midcontinent Communications"": 18,
    ""HETZNER-DC"": 3,
    ""Censys Inc"": 3,
    ""Censys, Inc."": 3,
    ""TAM Media Technology Joint Stock Company"": 3
  },
  ""regionName"": {
    ""Hebei"": 9,
    ""Vilnius"": 12,
    ""Prague"": 6,
    ""California"": 45,
    ""North West"": 21,
    ""England"": 18,
    ""Kyiv City"": 15,
    ""North Holland"": 24,
    ""Kaunas"": 18,
    ""Moscow"": 15,
    ""Central and Western District"": 3,
    ""Ho Chi Minh"": 3,
    ""English River"": 9,
    ""Leinster"": 72,
    ""\u00cele-de-France"": 12,
    ""Andalusia"": 9,
    ""North Dakota"": 18,
    ""Virginia"": 3,
    ""Michigan"": 3,
    ""Hesse"": 3,
    ""Hanoi"": 3
  },
  ""country"": {
    ""China"": 9,
    ""Lithuania"": 30,
    ""Czechia"": 6,
    ""United States"": 69,
    ""Singapore"": 21,
    ""United Kingdom"": 18,
    ""Ukraine"": 15,
    ""Netherlands"": 24,
    ""Russia"": 15,
    ""Hong Kong"": 3,
    ""Vietnam"": 6,
    ""Seychelles"": 9,
    ""Ireland"": 72,
    ""France"": 12,
    ""Spain"": 9,
    ""Germany"": 3
  },
  ""account"": {
    ""(empty)"": 15,
    ""Test"": 36,
    ""hello"": 153,
    ""UXrMmpjVc"": 3,
    ""hgFzZp"": 3,
    ""xYvkki"": 3,
    ""Administr"": 42,
    ""BvnbrgpAC"": 3,
    ""UaAoxN"": 3,
    ""poufLu"": 3,
    ""Domain"": 36,
    ""Administrator"": 3,
    ""IpNyGpheL"": 3,
    ""xRmWOk"": 3,
    ""TTciCI"": 3,
    ""ivZOBvafV"": 3,
    ""iYtAMw"": 3,
    ""ktUuJk"": 3
  },
  ""keyboard"": {
    ""Unknown"": 321
  },
  ""client_build"": {
    ""Unknown"": 321
  },
  ""client_name"": {
    ""Unknown"": 321
  },
  ""ip_type"": {
    ""Unknown"": 150,
    ""hosting"": 153,
    ""hosting & proxy"": 15,
    ""mobile"": 3
  }
}"
rxH5xGiD,2023-09-25_stats.json,rdp_snitch,JSON,Monday 25th of September 2023 07:16:10 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 4,
    ""45.227.254.55"": 4,
    ""87.236.197.21"": 2,
    ""198.235.24.196"": 6,
    ""172.105.116.67"": 6,
    ""87.251.75.64"": 2,
    ""45.143.201.62"": 10,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 4,
    ""51.75.160.42"": 4,
    ""185.246.210.147"": 2,
    ""194.165.16.37"": 4,
    ""87.251.75.120"": 2,
    ""205.210.31.89"": 6,
    ""62.204.41.137"": 8,
    ""185.73.124.50"": 2,
    ""24.199.99.136"": 6,
    ""43.155.108.244"": 2,
    ""43.156.6.9"": 8,
    ""45.227.254.54"": 4,
    ""111.61.253.55"": 2,
    ""45.140.17.16"": 2,
    ""165.154.104.88"": 2,
    ""193.142.147.9"": 6,
    ""193.142.146.17"": 6,
    ""54.217.58.4"": 48,
    ""198.235.24.221"": 6,
    ""62.210.214.237"": 8,
    ""185.170.144.113"": 4,
    ""85.53.127.115"": 6,
    ""216.71.28.109"": 12,
    ""194.165.16.72"": 4,
    ""5.161.184.107"": 2,
    ""162.142.125.222"": 2,
    ""205.210.31.197"": 6,
    ""167.94.145.55"": 2,
    ""194.165.16.73"": 4,
    ""103.153.68.198"": 2
  },
  ""asn"": {
    ""AS4134"": 4,
    ""AS267784"": 8,
    ""AS35592"": 2,
    ""AS396982"": 24,
    ""AS63949"": 6,
    ""AS208091"": 10,
    ""AS210950"": 10,
    ""AS197414"": 8,
    ""AS16276"": 4,
    ""AS60068"": 2,
    ""AS48721"": 12,
    ""AS59425"": 8,
    ""AS14061"": 6,
    ""AS132203"": 10,
    ""AS24547"": 2,
    ""AS198953"": 2,
    ""AS135377"": 2,
    ""AS208046"": 12,
    ""AS16509"": 48,
    ""AS12876"": 8,
    ""AS12479"": 6,
    ""AS11232"": 12,
    ""AS213230"": 2,
    ""AS398324"": 2,
    ""AS398705"": 2,
    ""AS131366"": 2
  },
  ""isp"": {
    ""Chinanet"": 4,
    ""Flyservers S.A."": 20,
    ""Network of Coolhousing"": 2,
    ""Google LLC"": 24,
    ""Akamai Technologies"": 6,
    ""Xhost Internet Solutions LP"": 18,
    ""TOV E-RISHENNYA"": 10,
    ""OVH SAS"": 4,
    ""Cdn77 - PRG"": 2,
    ""Horizon LLC"": 8,
    ""DigitalOcean, LLC"": 6,
    ""Shenzhen Tencent Computer Systems Company Limited"": 10,
    ""China Mobile communications corporation"": 2,
    ""Proton66 OOO"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ColocationX Ltd."": 12,
    ""Amazon.com, Inc."": 48,
    ""Online S.A.S."": 8,
    ""Uni2 1"": 6,
    ""Midcontinent Communications"": 12,
    ""Hetzner Online GmbH"": 2,
    ""Censys, Inc."": 4,
    ""TAM"": 2
  },
  ""org"": {
    ""Chinanet HE"": 4,
    ""UAB Host Baltic"": 8,
    ""Coolhousing s.r.o"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 6,
    ""Xhost Internet Solutions"": 8,
    ""TOV VAIZ PARTNER"": 10,
    ""Xhostis"": 10,
    ""OVH Ltd"": 4,
    ""Overkill Beta s.r.o"": 2,
    ""Flyservers S.A"": 12,
    ""Horizon LLC"": 8,
    ""DigitalOcean, LLC"": 6,
    ""Tencent Cloud Computing"": 10,
    ""China Mobile"": 2,
    ""Proton66 LLC"": 2,
    ""Ucloud Information Technology"": 2,
    ""x33 Networks IBC"": 6,
    ""ColocationX Ltd"": 6,
    ""AWS EC2 (eu-west-1)"": 48,
    ""ONLINE"": 8,
    ""Unknown"": 6,
    ""Midcontinent Communications"": 12,
    ""HETZNER-DC"": 2,
    ""Censys Inc"": 2,
    ""Censys, Inc."": 2,
    ""TAM Media Technology Joint Stock Company"": 2
  },
  ""regionName"": {
    ""Hebei"": 6,
    ""Vilnius"": 8,
    ""Prague"": 4,
    ""California"": 30,
    ""North West"": 14,
    ""England"": 12,
    ""Kyiv City"": 10,
    ""North Holland"": 16,
    ""Kaunas"": 12,
    ""Moscow"": 10,
    ""Central and Western District"": 2,
    ""Ho Chi Minh"": 2,
    ""English River"": 6,
    ""Leinster"": 48,
    ""\u00cele-de-France"": 8,
    ""Andalusia"": 6,
    ""North Dakota"": 12,
    ""Virginia"": 2,
    ""Michigan"": 2,
    ""Hesse"": 2,
    ""Hanoi"": 2
  },
  ""country"": {
    ""China"": 6,
    ""Lithuania"": 20,
    ""Czechia"": 4,
    ""United States"": 46,
    ""Singapore"": 14,
    ""United Kingdom"": 12,
    ""Ukraine"": 10,
    ""Netherlands"": 16,
    ""Russia"": 10,
    ""Hong Kong"": 2,
    ""Vietnam"": 4,
    ""Seychelles"": 6,
    ""Ireland"": 48,
    ""France"": 8,
    ""Spain"": 6,
    ""Germany"": 2
  },
  ""account"": {
    ""(empty)"": 10,
    ""Test"": 24,
    ""hello"": 102,
    ""UXrMmpjVc"": 2,
    ""hgFzZp"": 2,
    ""xYvkki"": 2,
    ""Administr"": 28,
    ""BvnbrgpAC"": 2,
    ""UaAoxN"": 2,
    ""poufLu"": 2,
    ""Domain"": 24,
    ""Administrator"": 2,
    ""IpNyGpheL"": 2,
    ""xRmWOk"": 2,
    ""TTciCI"": 2,
    ""ivZOBvafV"": 2,
    ""iYtAMw"": 2,
    ""ktUuJk"": 2
  },
  ""keyboard"": {
    ""Unknown"": 214
  },
  ""client_build"": {
    ""Unknown"": 214
  },
  ""client_name"": {
    ""Unknown"": 214
  },
  ""ip_type"": {
    ""Unknown"": 100,
    ""hosting"": 102,
    ""hosting & proxy"": 10,
    ""mobile"": 2
  }
}"
