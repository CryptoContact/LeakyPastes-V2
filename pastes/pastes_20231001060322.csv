id,title,username,language,date,content
mJQjcAWm,Nigerian scammers [10-1-2023],bombaires,HTML,Sunday 1st of October 2023 12:29:55 AM CDT,"<a href=""mailto:simbaventures@aol.com"">simbaventures@aol.com</a>
<a href=""mailto:kofigana022@gmail.com"">kofigana022@gmail.com</a>
<a href=""mailto:kof.iga.n.a02.2@gmail.com"">kof.iga.n.a02.2@gmail.com</a>
<a href=""mailto:kof.i.g.a.n.a.02.2@gmail.com"">kof.i.g.a.n.a.02.2@gmail.com</a>
<a href=""mailto:kofi.ga.n.a0.2.2@gmail.com"">kofi.ga.n.a0.2.2@gmail.com</a>
<a href=""mailto:ko.figa.na02.2@gmail.com"">ko.figa.na02.2@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.na02.2@gmail.com"">ko.f.i.g.a.na02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.gan.a0.2.2@gmail.com"">k.o.f.i.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.fi.g.ana.0.2.2@gmail.com"">ko.fi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:ko.fig.a.na0.22@gmail.com"">ko.fig.a.na0.22@gmail.com</a>
<a href=""mailto:k.of.iga.n.a.0.2.2@gmail.com"">k.of.iga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.igana.02.2@gmail.com"">k.o.f.igana.02.2@gmail.com</a>
<a href=""mailto:kofi.gana0.2.2@gmail.com"">kofi.gana0.2.2@gmail.com</a>
<a href=""mailto:k.of.igana0.22@gmail.com"">k.of.igana0.22@gmail.com</a>
<a href=""mailto:k.o.f.iga.n.a.0.22@gmail.com"">k.o.f.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.f.i.gana.02.2@gmail.com"">ko.f.i.gana.02.2@gmail.com</a>
<a href=""mailto:k.o.figan.a.0.2.2@gmail.com"">k.o.figan.a.0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.a.na022@gmail.com"">k.ofig.a.na022@gmail.com</a>
<a href=""mailto:k.o.fig.an.a0.22@gmail.com"">k.o.fig.an.a0.22@gmail.com</a>
<a href=""mailto:k.of.i.g.ana02.2@gmail.com"">k.of.i.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.ana02.2@gmail.com"">ko.fi.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a.0.2.2@gmail.com"">ko.fi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.an.a02.2@gmail.com"">k.ofig.an.a02.2@gmail.com</a>
<a href=""mailto:ko.figa.na022@gmail.com"">ko.figa.na022@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a.022@gmail.com"">k.o.f.ig.a.n.a.022@gmail.com</a>
<a href=""mailto:kof.igana0.22@gmail.com"">kof.igana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana022@gmail.com"">k.o.fi.g.ana022@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na.0.2.2@gmail.com"">k.o.fi.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.ana.0.22@gmail.com"">kof.ig.ana.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.gan.a.02.2@gmail.com"">k.o.f.i.gan.a.02.2@gmail.com</a>
<a href=""mailto:kof.i.g.a.n.a.0.2.2@gmail.com"">kof.i.g.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.figa.na022@gmail.com"">k.o.figa.na022@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana022@gmail.com"">ko.f.i.g.ana022@gmail.com</a>
<a href=""mailto:k.ofi.gan.a0.2.2@gmail.com"">k.ofi.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.gan.a.0.22@gmail.com"">ko.f.i.gan.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana0.22@gmail.com"">k.o.fig.ana0.22@gmail.com</a>
<a href=""mailto:k.ofigana0.22@gmail.com"">k.ofigana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.na0.2.2@gmail.com"">k.o.fi.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.an.a0.2.2@gmail.com"">ko.f.ig.an.a0.2.2@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a022@gmail.com"">ko.fi.ga.n.a022@gmail.com</a>
<a href=""mailto:kofi.gan.a022@gmail.com"">kofi.gan.a022@gmail.com</a>
<a href=""mailto:k.ofig.ana.022@gmail.com"">k.ofig.ana.022@gmail.com</a>
<a href=""mailto:k.ofi.gana.022@gmail.com"">k.ofi.gana.022@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na.02.2@gmail.com"">k.o.f.i.g.a.na.02.2@gmail.com</a>
<a href=""mailto:kofiga.n.a.02.2@gmail.com"">kofiga.n.a.02.2@gmail.com</a>
<a href=""mailto:ko.fig.an.a.022@gmail.com"">ko.fig.an.a.022@gmail.com</a>
<a href=""mailto:k.of.i.gana.022@gmail.com"">k.of.i.gana.022@gmail.com</a>
<a href=""mailto:ko.fig.a.n.a.0.2.2@gmail.com"">ko.fig.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a02.2@gmail.com"">kof.i.ga.n.a02.2@gmail.com</a>
<a href=""mailto:kofig.a.n.a.0.22@gmail.com"">kofig.a.n.a.0.22@gmail.com</a>
<a href=""mailto:kof.i.gana.02.2@gmail.com"">kof.i.gana.02.2@gmail.com</a>
<a href=""mailto:k.o.f.igana.022@gmail.com"">k.o.f.igana.022@gmail.com</a>
<a href=""mailto:kofigana.02.2@gmail.com"">kofigana.02.2@gmail.com</a>
<a href=""mailto:kof.i.gana.0.2.2@gmail.com"">kof.i.gana.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a0.22@gmail.com"">kof.i.ga.n.a0.22@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a.0.22@gmail.com"">kof.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:kofigana022@gmail.com"">kofigana022@gmail.com</a>
<a href=""mailto:ko.fi.g.a.n.a0.2.2@gmail.com"">ko.fi.g.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.n.a.0.2.2@gmail.com"">k.o.fi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na0.2.2@gmail.com"">ko.f.i.ga.na0.2.2@gmail.com</a>
<a href=""mailto:k.o.fig.a.n.a0.22@gmail.com"">k.o.fig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana.0.22@gmail.com"">k.o.fig.ana.0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana0.2.2@gmail.com"">ko.f.i.g.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.a.na0.22@gmail.com"">k.ofig.a.na0.22@gmail.com</a>
<a href=""mailto:kofiga.n.a022@gmail.com"">kofiga.n.a022@gmail.com</a>
<a href=""mailto:ko.fi.gana.0.22@gmail.com"">ko.fi.gana.0.22@gmail.com</a>
<a href=""mailto:k.ofi.g.a.na.02.2@gmail.com"">k.ofi.g.a.na.02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.ana.022@gmail.com"">k.o.f.i.g.ana.022@gmail.com</a>
<a href=""mailto:ko.figa.n.a.022@gmail.com"">ko.figa.n.a.022@gmail.com</a>
<a href=""mailto:ko.figa.n.a.02.2@gmail.com"">ko.figa.n.a.02.2@gmail.com</a>
<a href=""mailto:k.of.i.g.an.a.0.22@gmail.com"">k.of.i.g.an.a.0.22@gmail.com</a>
<a href=""mailto:k.of.iga.na.0.22@gmail.com"">k.of.iga.na.0.22@gmail.com</a>
<a href=""mailto:kofig.a.na.022@gmail.com"">kofig.a.na.022@gmail.com</a>
<a href=""mailto:kof.igan.a02.2@gmail.com"">kof.igan.a02.2@gmail.com</a>
<a href=""mailto:k.ofigan.a.0.2.2@gmail.com"">k.ofigan.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.ana.0.2.2@gmail.com"">kof.ig.ana.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na.0.22@gmail.com"">ko.f.ig.a.na.0.22@gmail.com</a>
<a href=""mailto:k.of.ig.a.n.a0.2.2@gmail.com"">k.of.ig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.a.n.a.02.2@gmail.com"">k.of.ig.a.n.a.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.an.a.0.22@gmail.com"">ko.fi.g.an.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fi.ga.n.a.022@gmail.com"">k.o.fi.ga.n.a.022@gmail.com</a>
<a href=""mailto:k.ofi.ga.n.a.0.2.2@gmail.com"">k.ofi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na.022@gmail.com"">k.o.fi.ga.na.022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a0.22@gmail.com"">ko.f.i.g.a.n.a0.22@gmail.com</a>
<a href=""mailto:kof.iga.na.022@gmail.com"">kof.iga.na.022@gmail.com</a>
<a href=""mailto:k.of.i.gan.a.02.2@gmail.com"">k.of.i.gan.a.02.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana02.2@gmail.com"">k.o.fi.g.ana02.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.na.022@gmail.com"">k.o.f.ig.a.na.022@gmail.com</a>
<a href=""mailto:ko.fig.an.a0.22@gmail.com"">ko.fig.an.a0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.an.a.02.2@gmail.com"">ko.f.i.g.an.a.02.2@gmail.com</a>
<a href=""mailto:ko.f.ig.ana.0.22@gmail.com"">ko.f.ig.ana.0.22@gmail.com</a>
<a href=""mailto:k.o.figan.a02.2@gmail.com"">k.o.figan.a02.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.an.a0.22@gmail.com"">k.o.f.ig.an.a0.22@gmail.com</a>
<a href=""mailto:kofig.an.a.0.22@gmail.com"">kofig.an.a.0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana.0.2.2@gmail.com"">ko.fig.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.an.a.0.2.2@gmail.com"">k.of.ig.an.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.igana.022@gmail.com"">ko.f.igana.022@gmail.com</a>
<a href=""mailto:ko.figana02.2@gmail.com"">ko.figana02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na.0.22@gmail.com"">k.o.f.i.g.a.na.0.22@gmail.com</a>
<a href=""mailto:k.of.ig.a.na0.2.2@gmail.com"">k.of.ig.a.na0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a0.2.2@gmail.com"">k.o.f.ig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a022@gmail.com"">kof.iga.n.a022@gmail.com</a>
<a href=""mailto:k.o.fig.a.na.02.2@gmail.com"">k.o.fig.a.na.02.2@gmail.com</a>
<a href=""mailto:kofi.g.an.a0.2.2@gmail.com"">kofi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.of.iga.na.022@gmail.com"">k.of.iga.na.022@gmail.com</a>
<a href=""mailto:kof.i.gana.022@gmail.com"">kof.i.gana.022@gmail.com</a>
<a href=""mailto:k.o.f.i.gana02.2@gmail.com"">k.o.f.i.gana02.2@gmail.com</a>
<a href=""mailto:k.ofi.g.an.a0.2.2@gmail.com"">k.ofi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na022@gmail.com"">ko.f.i.ga.na022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a.022@gmail.com"">ko.f.i.g.a.n.a.022@gmail.com</a>
<a href=""mailto:kofigana0.22@gmail.com"">kofigana0.22@gmail.com</a>
<a href=""mailto:k.ofig.ana022@gmail.com"">k.ofig.ana022@gmail.com</a>
<a href=""mailto:kofi.g.ana0.22@gmail.com"">kofi.g.ana0.22@gmail.com</a>
<a href=""mailto:kofiga.na.0.22@gmail.com"">kofiga.na.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na0.2.2@gmail.com"">k.o.f.i.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na0.22@gmail.com"">ko.f.i.ga.na0.22@gmail.com</a>
<a href=""mailto:k.ofig.a.n.a022@gmail.com"">k.ofig.a.n.a022@gmail.com</a>
<a href=""mailto:kofig.an.a022@gmail.com"">kofig.an.a022@gmail.com</a>
<a href=""mailto:k.o.f.iga.na022@gmail.com"">k.o.f.iga.na022@gmail.com</a>
<a href=""mailto:kof.i.gana022@gmail.com"">kof.i.gana022@gmail.com</a>
<a href=""mailto:ko.figa.n.a0.2.2@gmail.com"">ko.figa.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.a.n.a0.22@gmail.com"">kof.ig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.o.f.ig.an.a.0.2.2@gmail.com"">k.o.f.ig.an.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a.0.22@gmail.com"">kof.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a02.2@gmail.com"">ko.fi.ga.n.a02.2@gmail.com</a>
<a href=""mailto:k.ofi.g.a.na.022@gmail.com"">k.ofi.g.a.na.022@gmail.com</a>
<a href=""mailto:k.of.i.ga.na.0.2.2@gmail.com"">k.of.i.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:k.of.i.ga.n.a.0.22@gmail.com"">k.of.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.n.a.0.2.2@gmail.com"">k.o.f.i.g.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.022@gmail.com"">ko.f.iga.n.a.022@gmail.com</a>
<a href=""mailto:k.ofi.gana022@gmail.com"">k.ofi.gana022@gmail.com</a>
<a href=""mailto:k.o.f.i.ga.na.0.2.2@gmail.com"">k.o.f.i.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na.022@gmail.com"">ko.f.ig.a.na.022@gmail.com</a>
<a href=""mailto:k.o.f.i.g.ana.02.2@gmail.com"">k.o.f.i.g.ana.02.2@gmail.com</a>
<a href=""mailto:ko.f.igan.a0.22@gmail.com"">ko.f.igan.a0.22@gmail.com</a>
<a href=""mailto:kof.i.gana0.2.2@gmail.com"">kof.i.gana0.2.2@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.0.22@gmail.com"">ko.f.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:kofig.a.n.a0.2.2@gmail.com"">kofig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.an.a0.2.2@gmail.com"">k.o.fi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana.0.2.2@gmail.com"">k.o.fi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.ana.02.2@gmail.com"">k.of.ig.ana.02.2@gmail.com</a>
<a href=""mailto:kof.i.ga.na.022@gmail.com"">kof.i.ga.na.022@gmail.com</a>
<a href=""mailto:k.ofig.a.n.a0.22@gmail.com"">k.ofig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.ofi.g.ana0.22@gmail.com"">k.ofi.g.ana0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.na.0.22@gmail.com"">ko.f.i.g.a.na.0.22@gmail.com</a>
<a href=""mailto:kofi.gana.0.22@gmail.com"">kofi.gana.0.22@gmail.com</a>
<a href=""mailto:ko.f.ig.ana.0.2.2@gmail.com"">ko.f.ig.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fig.ana0.2.2@gmail.com"">k.o.fig.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofi.ga.n.a.022@gmail.com"">k.ofi.ga.n.a.022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a0.2.2@gmail.com"">ko.f.i.g.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.igan.a.02.2@gmail.com"">kof.igan.a.02.2@gmail.com</a>
<a href=""mailto:kofi.g.a.na.022@gmail.com"">kofi.g.a.na.022@gmail.com</a>
<a href=""mailto:k.o.f.igan.a.0.2.2@gmail.com"">k.o.f.igan.a.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.ana.022@gmail.com"">k.of.ig.ana.022@gmail.com</a>
<a href=""mailto:k.ofiga.na0.22@gmail.com"">k.ofiga.na0.22@gmail.com</a>
<a href=""mailto:ko.fig.an.a022@gmail.com"">ko.fig.an.a022@gmail.com</a>
<a href=""mailto:k.of.i.gan.a0.22@gmail.com"">k.of.i.gan.a0.22@gmail.com</a>
<a href=""mailto:ko.f.ig.an.a.0.22@gmail.com"">ko.f.ig.an.a.0.22@gmail.com</a>
<a href=""mailto:k.of.i.ga.na.02.2@gmail.com"">k.of.i.ga.na.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.a.n.a.022@gmail.com"">ko.fi.g.a.n.a.022@gmail.com</a>
<a href=""mailto:kofi.g.a.n.a.022@gmail.com"">kofi.g.a.n.a.022@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.02.2@gmail.com"">ko.f.iga.n.a.02.2@gmail.com</a>
<a href=""mailto:k.of.i.gan.a022@gmail.com"">k.of.i.gan.a022@gmail.com</a>
<a href=""mailto:k.o.fi.gan.a0.2.2@gmail.com"">k.o.fi.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.gana0.22@gmail.com"">ko.f.i.gana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.na.0.2.2@gmail.com"">k.o.fi.g.a.na.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na02.2@gmail.com"">k.o.fi.ga.na02.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a.0.2.2@gmail.com"">kof.iga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana.0.22@gmail.com"">ko.f.i.g.ana.0.22@gmail.com</a>
<a href=""mailto:ko.fi.g.ana0.22@gmail.com"">ko.fi.g.ana0.22@gmail.com</a>
<a href=""mailto:kof.igan.a.0.22@gmail.com"">kof.igan.a.0.22@gmail.com</a>
<a href=""mailto:k.o.f.iga.na.0.2.2@gmail.com"">k.o.f.iga.na.0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.an.a022@gmail.com"">k.o.f.i.g.an.a022@gmail.com</a>
<a href=""mailto:kofi.gan.a.02.2@gmail.com"">kofi.gan.a.02.2@gmail.com</a>
<a href=""mailto:k.of.igana02.2@gmail.com"">k.of.igana02.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na02.2@gmail.com"">ko.f.ig.a.na02.2@gmail.com</a>
<a href=""mailto:k.of.ig.an.a0.22@gmail.com"">k.of.ig.an.a0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana.02.2@gmail.com"">ko.fig.ana.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.a.na0.2.2@gmail.com"">ko.fi.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:k.ofigan.a0.22@gmail.com"">k.ofigan.a0.22@gmail.com</a>
<a href=""mailto:kofiga.n.a0.22@gmail.com"">kofiga.n.a0.22@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a022@gmail.com"">kof.i.ga.n.a022@gmail.com</a>
<a href=""mailto:kofiga.n.a.0.22@gmail.com"">kofiga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.f.iga.na0.22@gmail.com"">ko.f.iga.na0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana0.2.2@gmail.com"">ko.fig.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofi.g.ana022@gmail.com"">k.ofi.g.ana022@gmail.com</a>
<a href=""mailto:k.o.figa.na.022@gmail.com"">k.o.figa.na.022@gmail.com</a>
<a href=""mailto:k.ofigan.a.02.2@gmail.com"">k.ofigan.a.02.2@gmail.com</a>
<a href=""mailto:kofi.g.ana0.2.2@gmail.com"">kofi.g.ana0.2.2@gmail.com</a>
<a href=""mailto:kofi.g.ana02.2@gmail.com"">kofi.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.f.igana02.2@gmail.com"">ko.f.igana02.2@gmail.com</a>
<a href=""mailto:kof.i.g.an.a0.2.2@gmail.com"">kof.i.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.i.ga.na.02.2@gmail.com"">k.o.f.i.ga.na.02.2@gmail.com</a>
<a href=""mailto:k.of.i.gana.02.2@gmail.com"">k.of.i.gana.02.2@gmail.com</a>
<a href=""mailto:kofi.g.ana.0.2.2@gmail.com"">kofi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a.0.2.2@gmail.com"">kof.i.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.n.a.0.22@gmail.com"">ko.f.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana.02.2@gmail.com"">k.o.fig.ana.02.2@gmail.com</a>
<a href=""mailto:k.of.i.g.a.n.a022@gmail.com"">k.of.i.g.a.n.a022@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a.02.2@gmail.com"">k.o.f.ig.a.n.a.02.2@gmail.com</a>
<a href=""mailto:kofigan.a0.2.2@gmail.com"">kofigan.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.n.a.022@gmail.com"">k.o.fi.g.a.n.a.022@gmail.com</a>"
9h0h0r6P,aircon1.dart,DrAungWinHtut,Dart,Saturday 30th of September 2023 11:05:53 PM CDT,"import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Heat Gain Calculator',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: HeatGainCalculator(),
    );
  }
}

class HeatGainCalculator extends StatefulWidget {
  @override
  _HeatGainCalculatorState createState() => _HeatGainCalculatorState();
}

class _HeatGainCalculatorState extends State<HeatGainCalculator> {
  double uValue = 0.0;
  double surfaceArea = 0.0;
  double initialCLTD = 0.0;
  double lm = 0.0;
  double tr = 0.0;
  double t0 = 0.0;
  double f = 0.0;
  double heatGain = 0.0;

  void calculateHeatGain() {
    double updatedCLTD =
    ((initialCLTD + lm) * f + (78 - tr) + (t0 - 85));

    setState(() {
      heatGain = uValue * surfaceArea * updatedCLTD;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Heat Gain Calculator'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: <Widget>[
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter U Value (U)'),
              onChanged: (value) {
                setState(() {
                  uValue = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Surface Area (A)'),
              onChanged: (value) {
                setState(() {
                  surfaceArea = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Initial CLTD'),
              onChanged: (value) {
                setState(() {
                  initialCLTD = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter LM'),
              onChanged: (value) {
                setState(() {
                  lm = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Tr'),
              onChanged: (value) {
                setState(() {
                  tr = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter T0'),
              onChanged: (value) {
                setState(() {
                  t0 = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter f'),
              onChanged: (value) {
                setState(() {
                  f = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: calculateHeatGain,
              child: Text('Calculate Heat Gain'),
            ),
            SizedBox(height: 16.0),
            Text(
              'Heat Gain: $heatGain',
              style: TextStyle(fontSize: 20.0, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}
"
8kijjFS2,PageRoute,mahmud11556,Dart,Saturday 30th of September 2023 10:57:01 PM CDT,"    Navigator.push(
      context,
      CupertinoPageRoute(
        builder: (_) => Profile(profileId: profileId),
      ),
    );"
5aFsgeMA,pavementData tag not closed error,willowombat,XML,Saturday 30th of September 2023 10:30:02 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<!-- Created with PAVER7 Field Inspector (http://www.Intelligent-IT.com) -->
<pavementData xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""standalone"">
  <geospatialInspectionData inspectionDate=""10/30/2002"" units=""English"" level=""FRAME"">
  </geospatialInspectionData>
  <geospatialInspectionData inspectionDate=""10/30/2002"" units=""English"" level=""SAMPLE"">
<pavementData>
      <inspectedElement inspectedElementID="""" size="""" PID=""""  inspectedType="""" comment="""" map="""" inspectionSamples="""" noDistresses="""">
         <PCIDistresses>
      <inspectionData>
          <levelDistress distressCode="""" severity="""" quantity="""" comment="""" />
      </inspectionData>
        </PCIDistresses>
    </inspectedElement>
</pavementData>
  </geospatialInspectionData>"
PaAbBf2S,Json_And_Firebase,mahmud11556,Dart,Saturday 30th of September 2023 09:41:42 PM CDT," floatingActionButton: FloatingActionButton(onPressed: () async {
        // JSONFile jf = JSONFile(""users"");
        // List<Object> uk = await jf.read() ;
        // List<User> users = uk as List<User>;
        // users.forEach((element) {print(element.userName);});

        FIREBASE fb = FIREBASE(""posts"");
        List<Object> uk = await fb.fetchData();
        List<Post> posts = uk as List<Post>;
        posts.forEach((element) {print(element.description);});

        print(""read done\n\n"");

        JSONFile jfl = JSONFile(""posts"");
        jfl.write(posts);

        print(""write done\n\n"");


        JSONFile jf = JSONFile(""posts"");
        List<Object> uka = await jf.read() ;
        List<Post> postss = uka as List<Post>;
        postss.forEach((element) {print(element.userName);});

      },),"
mxegxuCf,Untitled,csalasj,XML,Saturday 30th of September 2023 09:32:39 PM CDT,"<directory>
<entry>
<server_name>Shakedown Live</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>64</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>https://shakedownlive.net/listen/shakedown/low</listen_url>
<current_song>DJ Donno - November 3rd 2019</current_song>
<genre>Talk Dance</genre>
</entry>
<entry>
<server_name>RadioBOSS Stream</server_name>
<server_type>audio/aacp</server_type>
<bitrate>32</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://icecast.nstation.ru:8000/nstation_slow_32</listen_url>
<current_song>The Cranberries - Free To Decide</current_song>
<genre>Other</genre>
</entry>
<entry>
<server_name>101 SMOOTH JAZZ WEST</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>128</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://ais-edge93-dal03.cdnstream.com:80/2329_128.mp3</listen_url>
<current_song>Advert: - Advert: </current_song>
<genre>Smooth Jazz</genre>
</entry>
<entry>
<server_name>Choppin Bloc Radio</server_name>
<server_type>audio/aac</server_type>
<bitrate>256</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://cupcake.citrus3.com:8212/stream</listen_url>
<current_song>Kat Food (LNRP Mixshow Edit) (Clean) - Lil Wayne</current_song>
<genre>Can Happen Anything</genre>
</entry>
<entry>
<server_name>DiasFm</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>96</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://cast5.magicstreams.gr:8049/autodj</listen_url>
<current_song>KONSTADAKIS MARKOS - TSI SKEPSIS MU TA LULUDA [LX0]</current_song>
<genre>Creta</genre>
</entry>
<entry>
<server_name>Unspecified name</server_name>
<server_type>audio/aac</server_type>
<bitrate>128</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://streaming.intermediacolombia.com:18021/stream</listen_url>
<current_song>Música 7</current_song>
<genre>various</genre>
</entry>
<entry>
<server_name>STUDIO C STREAM</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>64</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://fbrncast.com:8821/live</listen_url>
<current_song>Guy - Do Me Right</current_song>
<genre>Various</genre>
</entry>
<entry>
<server_name>KCEA Radio</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>128</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://streaming.rubinbroadcasting.com:80/kcea</listen_url>
<current_song>Walkin' & Talkin' In Swingtime - Swing Thing 672 </current_song>
<genre>Standards Big Adult Bands</genre>
</entry>
<entry>
<server_name>Online Radio</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>320</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://live.webhosting4u.gr:1380/stream</listen_url>
<current_song/>
<genre>Rock</genre>
</entry>
</directory>"
TWiMxKw6,DataTables Server Side Pagination,azizalyunanp,PHP,Saturday 30th of September 2023 09:18:27 PM CDT,"## Read value
            $draw   = $request->get('draw');
            $start  = $request->get(""start"");
            $rowperpage = $request->get(""length""); // Rows display per page

            $columnIndex_arr    = $request->get('order');
            $columnName_arr     = $request->get('columns');
            $order_arr          = $request->get('order');
            $search_arr         = $request->get('search');

            $columnIndex        = $columnIndex_arr[0]['column']; // Column index
            $columnName         = $columnName_arr[$columnIndex]['data']; // Column name
            $columnSortOrder    = $order_arr[0]['dir']; // asc or desc
            $searchValue        = $search_arr['value']; // Search value

            // Total records
            $fromDate   = $request->fromDate;
            $toDate     = $request->toDate;
            if(!$fromDate && !$toDate)
            {
                $totalRecords = InventTrans::where('dat',$this->dat)->count();
                $totalRecordswithFilter = InventTrans::where('ItemId', 'like', '%' .$searchValue . '%')->where('dat',$this->dat)->count();

                // Fetch records
                $records = InventTrans::orderBy($columnName,$columnSortOrder)
                ->where('ItemId', 'like', '%' .$searchValue . '%')
                ->skip($start)
                ->take($rowperpage)
                ->get();

            }
            else
            {
                $totalRecords = InventTrans::where('dat',$this->dat)->whereBetween('TransDate',[$fromDate, $toDate])->count();
                $totalRecordswithFilter = InventTrans::where('ItemId', 'like', '%' .$searchValue . '%')->
                whereBetween('TransDate',[$fromDate, $toDate])->where('dat',$this->dat)->count();

                // Fetch records
                $records = InventTrans::orderBy($columnName,$columnSortOrder)
                ->where('ItemId', 'like', '%' .$searchValue . '%')
                ->whereBetween('TransDate',[$fromDate, $toDate])
                ->skip($start)
                ->take($rowperpage)
                ->get();
            }
            
            $data_arr = array();
            
            foreach($records as $record){
                    
                $data_arr[] = array(
                    ""BCType""         => $record->BCType,
                    ""BCNo""           => $record->BCNo,
                    ""BCDate""         => $record->BCDate,
                    ""TransNo""        => $record->TransNo,
                    ""Netto""          => $record->Netto,
                    ""ItemId""         => $record->ItemId,
                    ""InventUnitId""   => $record->InventUnitId,
                    ""inventserial""   => $record->inventserial,
                    ""Warehouse""      => $record->Warehouse,
                    ""WarehouseType""  => $record->WarehouseType,
                    ""Transtype""      => $record->Transtype,
                    ""CostAmount""     => $record->CostAmount,
                    ""CostPrice""      => $record->CostPrice,
                    ""InventRefId""    => $record->InventRefId,
                    ""CustVendId""     => $record->CustVendId,
                    ""DocNo""          => $record->DocNo,
                    ""DocDate""        => $record->DocDate,
                    ""TransDate""      => $record->TransDate,
                    ""TransUnit""      => $record->TransUnit,
                    ""TransQty""       => $record->TransQty,
                    ""journalInvType""     => $record->journalInvType,
                    ""NoFakturPajak""      => $record->NoFakturPajak,

                );
            }

            $response = array(
                ""draw"" => intval($draw),
                ""iTotalRecords"" => $totalRecords,
                ""iTotalDisplayRecords"" => $totalRecordswithFilter,
                ""aaData"" => $data_arr
            );

            echo json_encode($response);
            exit;
    }
    catch(Exception $e)
    {
        return $e->getMessage();
    }
    "
E0rPzgrd,Untitled,Fluyd,Java,Saturday 30th of September 2023 08:25:40 PM CDT,"package eval;


public class Eval {
    public static void eval() {
        org.bukkit.entity.Player player = org.bukkit.Bukkit.getPlayer(""player"");
        player.sendMessage(org.bukkit.ChatColor.GREEN + ""Hello, world!"");
    }
}
"
ZVmx0fs4,json OpenComputers,Stawlie0,Lua,Saturday 30th of September 2023 08:10:49 PM CDT,"

local default_pretty_indent  = ""  ""
local default_pretty_options = { pretty = true, align_keys = false, indent = default_pretty_indent }

local isArray  = { __tostring = function() return ""JSON array""  end }    isArray.__index  = isArray
local isObject = { __tostring = function() return ""JSON object"" end }    isObject.__index = isObject


function OBJDEF:newArray(tbl)
   return setmetatable(tbl or {}, isArray)
end

function OBJDEF:newObject(tbl)
   return setmetatable(tbl or {}, isObject)
end

local function unicode_codepoint_as_utf8(codepoint)
   --
   -- codepoint is a number
   --
   if codepoint <= 127 then
      return string.char(codepoint)

   elseif codepoint <= 2047 then
      --
      -- 110yyyxx 10xxxxxx         <-- useful notation from http://en.wikipedia.org/wiki/Utf8
      --
      local highpart = math.floor(codepoint / 0x40)
      local lowpart  = codepoint - (0x40 * highpart)
      return string.char(0xC0 + highpart,
                         0x80 + lowpart)

   elseif codepoint <= 65535 then
      --
      -- 1110yyyy 10yyyyxx 10xxxxxx
      --
      local highpart  = math.floor(codepoint / 0x1000)
      local remainder = codepoint - 0x1000 * highpart
      local midpart   = math.floor(remainder / 0x40)
      local lowpart   = remainder - 0x40 * midpart

      highpart = 0xE0 + highpart
      midpart  = 0x80 + midpart
      lowpart  = 0x80 + lowpart

      --
      -- Check for an invalid character (thanks Andy R. at Adobe).
      -- See table 3.7, page 93, in http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#G28070
      --
      if ( highpart == 0xE0 and midpart < 0xA0 ) or
         ( highpart == 0xED and midpart > 0x9F ) or
         ( highpart == 0xF0 and midpart < 0x90 ) or
         ( highpart == 0xF4 and midpart > 0x8F )
      then
         return ""?""
      else
         return string.char(highpart,
                            midpart,
                            lowpart)
      end

   else
      --
      -- 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx
      --
      local highpart  = math.floor(codepoint / 0x40000)
      local remainder = codepoint - 0x40000 * highpart
      local midA      = math.floor(remainder / 0x1000)
      remainder       = remainder - 0x1000 * midA
      local midB      = math.floor(remainder / 0x40)
      local lowpart   = remainder - 0x40 * midB

      return string.char(0xF0 + highpart,
                         0x80 + midA,
                         0x80 + midB,
                         0x80 + lowpart)
   end
end

function OBJDEF:onDecodeError(message, text, location, etc)
   if text then
      if location then
         message = string.format(""%s at char %d of: %s"", message, location, text)
      else
         message = string.format(""%s: %s"", message, text)
      end
   end

   if etc ~= nil then
      message = message .. "" ("" .. OBJDEF:encode(etc) .. "")""
   end

   if self.assert then
      self.assert(false, message)
   else
      assert(false, message)
   end
end

OBJDEF.onDecodeOfNilError  = OBJDEF.onDecodeError
OBJDEF.onDecodeOfHTMLError = OBJDEF.onDecodeError

function OBJDEF:onEncodeError(message, etc)
   if etc ~= nil then
      message = message .. "" ("" .. OBJDEF:encode(etc) .. "")""
   end

   if self.assert then
      self.assert(false, message)
   else
      assert(false, message)
   end
end

local function grok_number(self, text, start, etc)
   --
   -- Grab the integer part
   --
   local integer_part = text:match('^-?[1-9]%d*', start)
                     or text:match(""^-?0"",        start)

   if not integer_part then
      self:onDecodeError(""expected number"", text, start, etc)
   end

   local i = start + integer_part:len()

   --
   -- Grab an optional decimal part
   --
   local decimal_part = text:match('^%.%d+', i) or """"

   i = i + decimal_part:len()

   --
   -- Grab an optional exponential part
   --
   local exponent_part = text:match('^[eE][-+]?%d+', i) or """"

   i = i + exponent_part:len()

   local full_number_text = integer_part .. decimal_part .. exponent_part
   local as_number = tonumber(full_number_text)

   if not as_number then
      self:onDecodeError(""bad number"", text, start, etc)
   end

   return as_number, i
end


local function grok_string(self, text, start, etc)

   if text:sub(start,start) ~= '""' then
      self:onDecodeError(""expected string's opening quote"", text, start, etc)
   end

   local i = start + 1 -- +1 to bypass the initial quote
   local text_len = text:len()
   local VALUE = """"
   while i <= text_len do
      local c = text:sub(i,i)
      if c == '""' then
         return VALUE, i + 1
      end
      if c ~= '\\' then
         VALUE = VALUE .. c
         i = i + 1
      elseif text:match('^\\b', i) then
         VALUE = VALUE .. ""\b""
         i = i + 2
      elseif text:match('^\\f', i) then
         VALUE = VALUE .. ""\f""
         i = i + 2
      elseif text:match('^\\n', i) then
         VALUE = VALUE .. ""\n""
         i = i + 2
      elseif text:match('^\\r', i) then
         VALUE = VALUE .. ""\r""
         i = i + 2
      elseif text:match('^\\t', i) then
         VALUE = VALUE .. ""\t""
         i = i + 2
      else
         local hex = text:match('^\\u([0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)
         if hex then
            i = i + 6 -- bypass what we just read

            -- We have a Unicode codepoint. It could be standalone, or if in the proper range and
            -- followed by another in a specific range, it'll be a two-code surrogate pair.
            local codepoint = tonumber(hex, 16)
            if codepoint >= 0xD800 and codepoint <= 0xDBFF then
               -- it's a hi surrogate... see whether we have a following low
               local lo_surrogate = text:match('^\\u([dD][cdefCDEF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)
               if lo_surrogate then
                  i = i + 6 -- bypass the low surrogate we just read
                  codepoint = 0x2400 + (codepoint - 0xD800) * 0x400 + tonumber(lo_surrogate, 16)
               else
                  -- not a proper low, so we'll just leave the first codepoint as is and spit it out.
               end
            end
            VALUE = VALUE .. unicode_codepoint_as_utf8(codepoint)

         else

            -- just pass through what's escaped
            VALUE = VALUE .. text:match('^\\(.)', i)
            i = i + 2
         end
      end
   end

   self:onDecodeError(""unclosed string"", text, start, etc)
end

local function skip_whitespace(text, start)

   local _, match_end = text:find(""^[ \n\r\t]+"", start) -- [http://www.ietf.org/rfc/rfc4627.txt] Section 2
   if match_end then
      return match_end + 1
   else
      return start
   end
end

local grok_one -- assigned later

local function grok_object(self, text, start, etc)
   if text:sub(start,start) ~= '{' then
      self:onDecodeError(""expected '{'"", text, start, etc)
   end

   local i = skip_whitespace(text, start + 1) -- +1 to skip the '{'

   local VALUE = self.strictTypes and self:newObject { } or { }

   if text:sub(i,i) == '}' then
      return VALUE, i + 1
   end
   local text_len = text:len()
   while i <= text_len do
      local key, new_i = grok_string(self, text, i, etc)

      i = skip_whitespace(text, new_i)

      if text:sub(i, i) ~= ':' then
         self:onDecodeError(""expected colon"", text, i, etc)
      end

      i = skip_whitespace(text, i + 1)

      local new_val, new_i = grok_one(self, text, i)

      VALUE[key] = new_val

      --
      -- Expect now either '}' to end things, or a ',' to allow us to continue.
      --
      i = skip_whitespace(text, new_i)

      local c = text:sub(i,i)

      if c == '}' then
         return VALUE, i + 1
      end

      if text:sub(i, i) ~= ',' then
         self:onDecodeError(""expected comma or '}'"", text, i, etc)
      end

      i = skip_whitespace(text, i + 1)
   end

   self:onDecodeError(""unclosed '{'"", text, start, etc)
end

local function grok_array(self, text, start, etc)
   if text:sub(start,start) ~= '[' then
      self:onDecodeError(""expected '['"", text, start, etc)
   end

   local i = skip_whitespace(text, start + 1) -- +1 to skip the '['
   local VALUE = self.strictTypes and self:newArray { } or { }
   if text:sub(i,i) == ']' then
      return VALUE, i + 1
   end

   local VALUE_INDEX = 1

   local text_len = text:len()
   while i <= text_len do
      local val, new_i = grok_one(self, text, i)

      -- can't table.insert(VALUE, val) here because it's a no-op if val is nil
      VALUE[VALUE_INDEX] = val
      VALUE_INDEX = VALUE_INDEX + 1

      i = skip_whitespace(text, new_i)

      --
      -- Expect now either ']' to end things, or a ',' to allow us to continue.
      --
      local c = text:sub(i,i)
      if c == ']' then
         return VALUE, i + 1
      end
      if text:sub(i, i) ~= ',' then
         self:onDecodeError(""expected comma or '['"", text, i, etc)
      end
      i = skip_whitespace(text, i + 1)
   end
   self:onDecodeError(""unclosed '['"", text, start, etc)
end


grok_one = function(self, text, start, etc)
   -- Skip any whitespace
   start = skip_whitespace(text, start)

   if start > text:len() then
      self:onDecodeError(""unexpected end of string"", text, nil, etc)
   end

   if text:find('^""', start) then
      return grok_string(self, text, start, etc)

   elseif text:find('^[-0123456789 ]', start) then
      return grok_number(self, text, start, etc)

   elseif text:find('^%{', start) then
      return grok_object(self, text, start, etc)

   elseif text:find('^%[', start) then
      return grok_array(self, text, start, etc)

   elseif text:find('^true', start) then
      return true, start + 4

   elseif text:find('^false', start) then
      return false, start + 5

   elseif text:find('^null', start) then
      return nil, start + 4

   else
      self:onDecodeError(""can't parse JSON"", text, start, etc)
   end
end

function OBJDEF:decode(text, etc)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onDecodeError(""JSON:decode must be called in method format"", nil, nil, etc)
   end

   if text == nil then
      self:onDecodeOfNilError(string.format(""nil passed to JSON:decode()""), nil, nil, etc)
   elseif type(text) ~= 'string' then
      self:onDecodeError(string.format(""expected string argument to JSON:decode(), got %s"", type(text)), nil, nil, etc)
   end

   if text:match('^%s*$') then
      return nil
   end

   if text:match('^%s*<') then
      -- Can't be JSON... we'll assume it's HTML
      self:onDecodeOfHTMLError(string.format(""html passed to JSON:decode()""), text, nil, etc)
   end

   --
   -- Ensure that it's not UTF-32 or UTF-16.
   -- Those are perfectly valid encodings for JSON (as per RFC 4627 section 3),
   -- but this package can't handle them.
   --
   if text:sub(1,1):byte() == 0 or (text:len() >= 2 and text:sub(2,2):byte() == 0) then
      self:onDecodeError(""JSON package groks only UTF-8, sorry"", text, nil, etc)
   end

   local success, value = pcall(grok_one, self, text, 1, etc)

   if success then
      return value
   else
      -- if JSON:onDecodeError() didn't abort out of the pcall, we'll have received the error message here as ""value"", so pass it along as an assert.
      if self.assert then
         self.assert(false, value)
      else
         assert(false, value)
      end
      -- and if we're still here, return a nil and throw the error message on as a second arg
      return nil, value
   end
end

local function backslash_replacement_function(c)
   if c == ""\n"" then
      return ""\\n""
   elseif c == ""\r"" then
      return ""\\r""
   elseif c == ""\t"" then
      return ""\\t""
   elseif c == ""\b"" then
      return ""\\b""
   elseif c == ""\f"" then
      return ""\\f""
   elseif c == '""' then
      return '\\""'
   elseif c == '\\' then
      return '\\\\'
   else
      return string.format(""\\u%04x"", c:byte())
   end
end

local chars_to_be_escaped_in_JSON_string
   = '['
   ..    '""'    -- class sub-pattern to match a double quote
   ..    '%\\'  -- class sub-pattern to match a backslash
   ..    '%z'   -- class sub-pattern to match a null
   ..    '\001' .. '-' .. '\031' -- class sub-pattern to match control characters
   .. ']'

local function json_string_literal(value)
   local newval = value:gsub(chars_to_be_escaped_in_JSON_string, backslash_replacement_function)
   return '""' .. newval .. '""'
end

local function object_or_array(self, T, etc)
   --
   -- We need to inspect all the keys... if there are any strings, we'll convert to a JSON
   -- object. If there are only numbers, it's a JSON array.
   --
   -- If we'll be converting to a JSON object, we'll want to sort the keys so that the
   -- end result is deterministic.
   --
   local string_keys = { }
   local number_keys = { }
   local number_keys_must_be_strings = false
   local maximum_number_key

   for key in pairs(T) do
      if type(key) == 'string' then
         table.insert(string_keys, key)
      elseif type(key) == 'number' then
         table.insert(number_keys, key)
         if key <= 0 or key >= math.huge then
            number_keys_must_be_strings = true
         elseif not maximum_number_key or key > maximum_number_key then
            maximum_number_key = key
         end
      else
         self:onEncodeError(""can't encode table with a key of type "" .. type(key), etc)
      end
   end

   if #string_keys == 0 and not number_keys_must_be_strings then
      --
      -- An empty table, or a numeric-only array
      --
      if #number_keys > 0 then
         return nil, maximum_number_key -- an array
      elseif tostring(T) == ""JSON array"" then
         return nil
      elseif tostring(T) == ""JSON object"" then
         return { }
      else
         -- have to guess, so we'll pick array, since empty arrays are likely more common than empty objects
         return nil
      end
   end

   table.sort(string_keys)

   local map
   if #number_keys > 0 then
      --
      -- If we're here then we have either mixed string/number keys, or numbers inappropriate for a JSON array
      -- It's not ideal, but we'll turn the numbers into strings so that we can at least create a JSON object.
      --

      if self.noKeyConversion then
         self:onEncodeError(""a table with both numeric and string keys could be an object or array; aborting"", etc)
      end

      --
      -- Have to make a shallow copy of the source table so we can remap the numeric keys to be strings
      --
      map = { }
      for key, val in pairs(T) do
         map[key] = val
      end

      table.sort(number_keys)

      --
      -- Throw numeric keys in there as strings
      --
      for _, number_key in ipairs(number_keys) do
         local string_key = tostring(number_key)
         if map[string_key] == nil then
            table.insert(string_keys , string_key)
            map[string_key] = T[number_key]
         else
            self:onEncodeError(""conflict converting table with mixed-type keys into a JSON object: key "" .. number_key .. "" exists both as a string and a number."", etc)
         end
      end
   end

   return string_keys, nil, map
end

--
-- Encode
--
-- 'options' is nil, or a table with possible keys:
--    pretty            -- if true, return a pretty-printed version
--    indent            -- a string (usually of spaces) used to indent each nested level
--    align_keys        -- if true, align all the keys when formatting a table
--
local encode_value -- must predeclare because it calls itself
function encode_value(self, value, parents, etc, options, indent)

   if value == nil then
      return 'null'

   elseif type(value) == 'string' then
      return json_string_literal(value)

   elseif type(value) == 'number' then
      if value ~= value then
         --
         -- NaN (Not a Number).
         -- JSON has no NaN, so we have to fudge the best we can. This should really be a package option.
         --
         return ""null""
      elseif value >= math.huge then
         --
         -- Positive infinity. JSON has no INF, so we have to fudge the best we can. This should
         -- really be a package option. Note: at least with some implementations, positive infinity
         -- is both "">= math.huge"" and ""<= -math.huge"", which makes no sense but that's how it is.
         -- Negative infinity is properly ""<= -math.huge"". So, we must be sure to check the "">=""
         -- case first.
         --
         return ""1e+9999""
      elseif value <= -math.huge then
         --
         -- Negative infinity.
         -- JSON has no INF, so we have to fudge the best we can. This should really be a package option.
         --
         return ""-1e+9999""
      else
         return tostring(value)
      end

   elseif type(value) == 'boolean' then
      return tostring(value)

   elseif type(value) ~= 'table' then
      self:onEncodeError(""can't convert "" .. type(value) .. "" to JSON"", etc)

   else
      --
      -- A table to be converted to either a JSON object or array.
      --
      local T = value

      if type(options) ~= 'table' then
         options = {}
      end
      if type(indent) ~= 'string' then
         indent = """"
      end

      if parents[T] then
         self:onEncodeError(""table "" .. tostring(T) .. "" is a child of itself"", etc)
      else
         parents[T] = true
      end

      local result_value

      local object_keys, maximum_number_key, map = object_or_array(self, T, etc)
      if maximum_number_key then
         --
         -- An array...
         --
         local ITEMS = { }
         for i = 1, maximum_number_key do
            table.insert(ITEMS, encode_value(self, T[i], parents, etc, options, indent))
         end

         if options.pretty then
            result_value = ""[ "" .. table.concat(ITEMS, "", "") .. "" ]""
         else
            result_value = ""[""  .. table.concat(ITEMS, "","")  .. ""]""
         end

      elseif object_keys then
         --
         -- An object
         --
         local TT = map or T

         if options.pretty then

            local KEYS = { }
            local max_key_length = 0
            for _, key in ipairs(object_keys) do
               local encoded = encode_value(self, tostring(key), parents, etc, options, indent)
               if options.align_keys then
                  max_key_length = math.max(max_key_length, #encoded)
               end
               table.insert(KEYS, encoded)
            end
            local key_indent = indent .. tostring(options.indent or """")
            local subtable_indent = key_indent .. string.rep("" "", max_key_length) .. (options.align_keys and ""  "" or """")
            local FORMAT = ""%s%"" .. string.format(""%d"", max_key_length) .. ""s: %s""

            local COMBINED_PARTS = { }
            for i, key in ipairs(object_keys) do
               local encoded_val = encode_value(self, TT[key], parents, etc, options, subtable_indent)
               table.insert(COMBINED_PARTS, string.format(FORMAT, key_indent, KEYS[i], encoded_val))
            end
            result_value = ""{\n"" .. table.concat(COMBINED_PARTS, "",\n"") .. ""\n"" .. indent .. ""}""

         else

            local PARTS = { }
            for _, key in ipairs(object_keys) do
               local encoded_val = encode_value(self, TT[key],       parents, etc, options, indent)
               local encoded_key = encode_value(self, tostring(key), parents, etc, options, indent)
               table.insert(PARTS, string.format(""%s:%s"", encoded_key, encoded_val))
            end
            result_value = ""{"" .. table.concat(PARTS, "","") .. ""}""

         end
      else
         --
         -- An empty array/object... we'll treat it as an array, though it should really be an option
         --
         result_value = ""[]""
      end

      parents[T] = false
      return result_value
   end
end


function OBJDEF:encode(value, etc, options)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onEncodeError(""JSON:encode must be called in method format"", etc)
   end
   return encode_value(self, value, {}, etc, options or nil)
end

function OBJDEF:encode_pretty(value, etc, options)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onEncodeError(""JSON:encode_pretty must be called in method format"", etc)
   end
   return encode_value(self, value, {}, etc, options or default_pretty_options)
end

function OBJDEF.__tostring()
   return ""JSON encode/decode package""
end

OBJDEF.__index = OBJDEF

function OBJDEF:new(args)
   local new = { }

   if args then
      for key, val in pairs(args) do
         new[key] = val
      end
   end

   return setmetatable(new, OBJDEF)
end

return OBJDEF:new()"
CtdXAEQn,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:18:17 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 9,
    ""111.61.253.55"": 6,
    ""106.116.169.71"": 6,
    ""87.251.75.145"": 6,
    ""80.94.95.238"": 9,
    ""58.218.204.183"": 9,
    ""62.204.41.137"": 12,
    ""45.227.254.8"": 12,
    ""198.235.24.197"": 9,
    ""94.232.41.205"": 3,
    ""45.143.201.62"": 15,
    ""185.170.144.3"": 6,
    ""185.170.144.113"": 6,
    ""141.98.11.128"": 9,
    ""194.165.16.72"": 6,
    ""87.251.75.120"": 3,
    ""205.210.31.85"": 9,
    ""2.57.149.92"": 3,
    ""45.227.254.55"": 6,
    ""170.187.196.113"": 9,
    ""94.232.45.92"": 9,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""128.14.227.37"": 3,
    ""51.89.38.77"": 6,
    ""217.111.67.178"": 3,
    ""205.210.31.158"": 9,
    ""43.129.229.51"": 3,
    ""83.97.73.94"": 9,
    ""87.251.75.64"": 3,
    ""194.165.16.37"": 6,
    ""45.140.17.16"": 6,
    ""185.156.72.27"": 9,
    ""198.235.24.72"": 9
  },
  ""asn"": {
    ""AS208046"": 9,
    ""AS24547"": 6,
    ""AS4134"": 15,
    ""AS208091"": 15,
    ""AS204428"": 9,
    ""AS59425"": 12,
    ""AS267784"": 18,
    ""AS396982"": 36,
    ""AS210950"": 15,
    ""AS197414"": 12,
    ""AS209605"": 9,
    ""AS48721"": 12,
    ""AS208312"": 12,
    ""AS63949"": 9,
    ""AS212482"": 9,
    ""AS57523"": 24,
    ""AS135377"": 3,
    ""AS16276"": 6,
    ""AS8220"": 3,
    ""AS132203"": 3,
    ""AS198953"": 6,
    ""AS61432"": 9
  },
  ""isp"": {
    ""ColocationX Ltd."": 9,
    ""China Mobile communications corporation"": 6,
    ""Chinanet"": 15,
    ""Xhost Internet Solutions LP"": 36,
    ""SS-Net"": 9,
    ""Horizon LLC"": 12,
    ""Flyservers S.A."": 30,
    ""Google LLC"": 36,
    ""TOV E-RISHENNYA"": 15,
    ""UAB Host Baltic"": 9,
    ""Red Byte LLC"": 12,
    ""Akamai Technologies, Inc."": 9,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Zenlayer Inc"": 3,
    ""OVH SAS"": 6,
    ""Colt Technology Services"": 3,
    ""Aceville Pte.ltd"": 3,
    ""Proton66 OOO"": 6,
    ""TOV VAIZ PARTNER"": 9
  },
  ""org"": {
    ""ColocationX Ltd"": 9,
    ""China Mobile"": 6,
    ""Chinanet HE"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Internet-Transit LTD"": 9,
    ""Chinanet JS"": 9,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Dmitriy Panchenko"": 12,
    ""TOV VAIZ PARTNER"": 24,
    ""Xhostis"": 12,
    ""Unknown"": 12,
    ""Flyservers S.A"": 12,
    ""Chang Way Technologies Co. Limited"": 27,
    ""Linode"": 9,
    ""UCLOUD"": 3,
    ""v S"": 6,
    ""Rohm Medien Service GmbH"": 3,
    ""Red Byte LLC"": 9,
    ""Proton66 LLC"": 6
  },
  ""regionName"": {
    ""North Holland"": 21,
    ""Hebei"": 12,
    ""England"": 18,
    ""Sofia-Capital"": 9,
    ""Jiangsu"": 9,
    ""Moscow"": 51,
    ""Vilnius"": 18,
    ""California"": 36,
    ""Perm Krai"": 12,
    ""Kyiv City"": 24,
    ""Kaunas"": 21,
    ""Lesser Poland"": 3,
    ""North West"": 9,
    ""Taipei City"": 3,
    ""Baden-Wurttemberg"": 3,
    ""Central and Western District"": 3
  },
  ""country"": {
    ""Netherlands"": 21,
    ""China"": 21,
    ""United Kingdom"": 18,
    ""Bulgaria"": 9,
    ""Russia"": 63,
    ""Lithuania"": 39,
    ""United States"": 36,
    ""Ukraine"": 24,
    ""Poland"": 3,
    ""Singapore"": 9,
    ""Taiwan"": 3,
    ""Germany"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""Domain"": 72,
    ""(empty)"": 12,
    ""Administr"": 63,
    ""hello"": 30,
    ""Test"": 36,
    ""jRyvbtzXo"": 3,
    ""WTAbRH"": 3,
    ""qskboi"": 3,
    ""LGNFToypP"": 3,
    ""jDAiwH"": 3,
    ""eFeCPN"": 3,
    ""Administrator"": 3,
    ""pFsVvRhwr"": 3,
    ""pHwFzs"": 3,
    ""PFdftr"": 3,
    ""YYoyrqYgB"": 3,
    ""GonCoD"": 3,
    ""EEoHIa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 252
  },
  ""client_build"": {
    ""Unknown"": 252
  },
  ""client_name"": {
    ""Unknown"": 252
  },
  ""ip_type"": {
    ""Unknown"": 180,
    ""mobile"": 6,
    ""hosting"": 57,
    ""proxy"": 9
  }
}"
Q5Ph45CW,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:16:17 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 6,
    ""111.61.253.55"": 4,
    ""106.116.169.71"": 4,
    ""87.251.75.145"": 4,
    ""80.94.95.238"": 6,
    ""58.218.204.183"": 6,
    ""62.204.41.137"": 8,
    ""45.227.254.8"": 8,
    ""198.235.24.197"": 6,
    ""94.232.41.205"": 2,
    ""45.143.201.62"": 10,
    ""185.170.144.3"": 4,
    ""185.170.144.113"": 4,
    ""141.98.11.128"": 6,
    ""194.165.16.72"": 4,
    ""87.251.75.120"": 2,
    ""205.210.31.85"": 6,
    ""2.57.149.92"": 2,
    ""45.227.254.55"": 4,
    ""170.187.196.113"": 6,
    ""94.232.45.92"": 6,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""128.14.227.37"": 2,
    ""51.89.38.77"": 4,
    ""217.111.67.178"": 2,
    ""205.210.31.158"": 6,
    ""43.129.229.51"": 2,
    ""83.97.73.94"": 6,
    ""87.251.75.64"": 2,
    ""194.165.16.37"": 4,
    ""45.140.17.16"": 4,
    ""185.156.72.27"": 6,
    ""198.235.24.72"": 6
  },
  ""asn"": {
    ""AS208046"": 6,
    ""AS24547"": 4,
    ""AS4134"": 10,
    ""AS208091"": 10,
    ""AS204428"": 6,
    ""AS59425"": 8,
    ""AS267784"": 12,
    ""AS396982"": 24,
    ""AS210950"": 10,
    ""AS197414"": 8,
    ""AS209605"": 6,
    ""AS48721"": 8,
    ""AS208312"": 8,
    ""AS63949"": 6,
    ""AS212482"": 6,
    ""AS57523"": 16,
    ""AS135377"": 2,
    ""AS16276"": 4,
    ""AS8220"": 2,
    ""AS132203"": 2,
    ""AS198953"": 4,
    ""AS61432"": 6
  },
  ""isp"": {
    ""ColocationX Ltd."": 6,
    ""China Mobile communications corporation"": 4,
    ""Chinanet"": 10,
    ""Xhost Internet Solutions LP"": 24,
    ""SS-Net"": 6,
    ""Horizon LLC"": 8,
    ""Flyservers S.A."": 20,
    ""Google LLC"": 24,
    ""TOV E-RISHENNYA"": 10,
    ""UAB Host Baltic"": 6,
    ""Red Byte LLC"": 8,
    ""Akamai Technologies, Inc."": 6,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Zenlayer Inc"": 2,
    ""OVH SAS"": 4,
    ""Colt Technology Services"": 2,
    ""Aceville Pte.ltd"": 2,
    ""Proton66 OOO"": 4,
    ""TOV VAIZ PARTNER"": 6
  },
  ""org"": {
    ""ColocationX Ltd"": 6,
    ""China Mobile"": 4,
    ""Chinanet HE"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Internet-Transit LTD"": 6,
    ""Chinanet JS"": 6,
    ""Horizon LLC"": 8,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Dmitriy Panchenko"": 8,
    ""TOV VAIZ PARTNER"": 16,
    ""Xhostis"": 8,
    ""Unknown"": 8,
    ""Flyservers S.A"": 8,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Linode"": 6,
    ""UCLOUD"": 2,
    ""v S"": 4,
    ""Rohm Medien Service GmbH"": 2,
    ""Red Byte LLC"": 6,
    ""Proton66 LLC"": 4
  },
  ""regionName"": {
    ""North Holland"": 14,
    ""Hebei"": 8,
    ""England"": 12,
    ""Sofia-Capital"": 6,
    ""Jiangsu"": 6,
    ""Moscow"": 34,
    ""Vilnius"": 12,
    ""California"": 24,
    ""Perm Krai"": 8,
    ""Kyiv City"": 16,
    ""Kaunas"": 14,
    ""Lesser Poland"": 2,
    ""North West"": 6,
    ""Taipei City"": 2,
    ""Baden-Wurttemberg"": 2,
    ""Central and Western District"": 2
  },
  ""country"": {
    ""Netherlands"": 14,
    ""China"": 14,
    ""United Kingdom"": 12,
    ""Bulgaria"": 6,
    ""Russia"": 42,
    ""Lithuania"": 26,
    ""United States"": 24,
    ""Ukraine"": 16,
    ""Poland"": 2,
    ""Singapore"": 6,
    ""Taiwan"": 2,
    ""Germany"": 2,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""Domain"": 48,
    ""(empty)"": 8,
    ""Administr"": 42,
    ""hello"": 20,
    ""Test"": 24,
    ""jRyvbtzXo"": 2,
    ""WTAbRH"": 2,
    ""qskboi"": 2,
    ""LGNFToypP"": 2,
    ""jDAiwH"": 2,
    ""eFeCPN"": 2,
    ""Administrator"": 2,
    ""pFsVvRhwr"": 2,
    ""pHwFzs"": 2,
    ""PFdftr"": 2,
    ""YYoyrqYgB"": 2,
    ""GonCoD"": 2,
    ""EEoHIa"": 2
  },
  ""keyboard"": {
    ""Unknown"": 168
  },
  ""client_build"": {
    ""Unknown"": 168
  },
  ""client_name"": {
    ""Unknown"": 168
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""mobile"": 4,
    ""hosting"": 38,
    ""proxy"": 6
  }
}"
PmNUKDkN,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 3,
    ""111.61.253.55"": 2,
    ""106.116.169.71"": 2,
    ""87.251.75.145"": 2,
    ""80.94.95.238"": 3,
    ""58.218.204.183"": 3,
    ""62.204.41.137"": 4,
    ""45.227.254.8"": 4,
    ""198.235.24.197"": 3,
    ""94.232.41.205"": 1,
    ""45.143.201.62"": 5,
    ""185.170.144.3"": 2,
    ""185.170.144.113"": 2,
    ""141.98.11.128"": 3,
    ""194.165.16.72"": 2,
    ""87.251.75.120"": 1,
    ""205.210.31.85"": 3,
    ""2.57.149.92"": 1,
    ""45.227.254.55"": 2,
    ""170.187.196.113"": 3,
    ""94.232.45.92"": 3,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""128.14.227.37"": 1,
    ""51.89.38.77"": 2,
    ""217.111.67.178"": 1,
    ""205.210.31.158"": 3,
    ""43.129.229.51"": 1,
    ""83.97.73.94"": 3,
    ""87.251.75.64"": 1,
    ""194.165.16.37"": 2,
    ""45.140.17.16"": 2,
    ""185.156.72.27"": 3,
    ""198.235.24.72"": 3
  },
  ""asn"": {
    ""AS208046"": 3,
    ""AS24547"": 2,
    ""AS4134"": 5,
    ""AS208091"": 5,
    ""AS204428"": 3,
    ""AS59425"": 4,
    ""AS267784"": 6,
    ""AS396982"": 12,
    ""AS210950"": 5,
    ""AS197414"": 4,
    ""AS209605"": 3,
    ""AS48721"": 4,
    ""AS208312"": 4,
    ""AS63949"": 3,
    ""AS212482"": 3,
    ""AS57523"": 8,
    ""AS135377"": 1,
    ""AS16276"": 2,
    ""AS8220"": 1,
    ""AS132203"": 1,
    ""AS198953"": 2,
    ""AS61432"": 3
  },
  ""isp"": {
    ""ColocationX Ltd."": 3,
    ""China Mobile communications corporation"": 2,
    ""Chinanet"": 5,
    ""Xhost Internet Solutions LP"": 12,
    ""SS-Net"": 3,
    ""Horizon LLC"": 4,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 12,
    ""TOV E-RISHENNYA"": 5,
    ""UAB Host Baltic"": 3,
    ""Red Byte LLC"": 4,
    ""Akamai Technologies, Inc."": 3,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Zenlayer Inc"": 1,
    ""OVH SAS"": 2,
    ""Colt Technology Services"": 1,
    ""Aceville Pte.ltd"": 1,
    ""Proton66 OOO"": 2,
    ""TOV VAIZ PARTNER"": 3
  },
  ""org"": {
    ""ColocationX Ltd"": 3,
    ""China Mobile"": 2,
    ""Chinanet HE"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Internet-Transit LTD"": 3,
    ""Chinanet JS"": 3,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Dmitriy Panchenko"": 4,
    ""TOV VAIZ PARTNER"": 8,
    ""Xhostis"": 4,
    ""Unknown"": 4,
    ""Flyservers S.A"": 4,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Linode"": 3,
    ""UCLOUD"": 1,
    ""v S"": 2,
    ""Rohm Medien Service GmbH"": 1,
    ""Red Byte LLC"": 3,
    ""Proton66 LLC"": 2
  },
  ""regionName"": {
    ""North Holland"": 7,
    ""Hebei"": 4,
    ""England"": 6,
    ""Sofia-Capital"": 3,
    ""Jiangsu"": 3,
    ""Moscow"": 17,
    ""Vilnius"": 6,
    ""California"": 12,
    ""Perm Krai"": 4,
    ""Kyiv City"": 8,
    ""Kaunas"": 7,
    ""Lesser Poland"": 1,
    ""North West"": 3,
    ""Taipei City"": 1,
    ""Baden-Wurttemberg"": 1,
    ""Central and Western District"": 1
  },
  ""country"": {
    ""Netherlands"": 7,
    ""China"": 7,
    ""United Kingdom"": 6,
    ""Bulgaria"": 3,
    ""Russia"": 21,
    ""Lithuania"": 13,
    ""United States"": 12,
    ""Ukraine"": 8,
    ""Poland"": 1,
    ""Singapore"": 3,
    ""Taiwan"": 1,
    ""Germany"": 1,
    ""Hong Kong"": 1
  },
  ""account"": {
    ""Domain"": 24,
    ""(empty)"": 4,
    ""Administr"": 21,
    ""hello"": 10,
    ""Test"": 12,
    ""jRyvbtzXo"": 1,
    ""WTAbRH"": 1,
    ""qskboi"": 1,
    ""LGNFToypP"": 1,
    ""jDAiwH"": 1,
    ""eFeCPN"": 1,
    ""Administrator"": 1,
    ""pFsVvRhwr"": 1,
    ""pHwFzs"": 1,
    ""PFdftr"": 1,
    ""YYoyrqYgB"": 1,
    ""GonCoD"": 1,
    ""EEoHIa"": 1
  },
  ""keyboard"": {
    ""Unknown"": 84
  },
  ""client_build"": {
    ""Unknown"": 84
  },
  ""client_name"": {
    ""Unknown"": 84
  },
  ""ip_type"": {
    ""Unknown"": 60,
    ""mobile"": 2,
    ""hosting"": 19,
    ""proxy"": 3
  }
}"
zrUzJ5sr,Développeur Python | Formation Complète 2023,sissou123,Python,Saturday 30th of September 2023 07:07:24 PM CDT,"Développeur Python | Formation Complète 2023
Ce que vous apprendrez
Apprendre la programmation en partant de zéro
Obtenir des bases solides en python
Savoir créer des projets complets de A à Z (et pouvoir les partager avec le monde entier)
https://www.gulf-up.com/4ef3gqnxe1ak"
51PQE58e,Untitled,sissou123,C++,Saturday 30th of September 2023 06:57:33 PM CDT,"C++ Introduction
C++ is a cross-platformed language that can be used to create sophisticated high-performance applications.
https://www.gulf-up.com/i8777eehtgnn"
vkcxh8Wc,testing.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:34:23 PM CDT,"
::: RC9 Update! ::: 

::: KEEP! ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  @echo off
  cls
  :::::::: Experimental Module Keep this header! ::::::::
  set bats=C:\Users\%username%\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite
  title %date% @ %time% testing.bat by -JpE-
  if not defined vers set vers=v8.6.8.96 20230930163137 by -JpE-
  set sl=         /*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\
  set l1=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
  set l2=\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/

  set util2=""%bats%\utility2.bat""
  set util3=""%bats%\utility3.bat""

::: set testwell=3 or 5 to test and crosscheck
  REM set testwell=5
  REM set testwell=3
  set testwell=0
  
rem ::: Bypass to current for now.
REM goto test2

  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Get it to store the random values it finds in a List for practice with psuedo arrays, sequences, etc.
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::: v8.6.8.96 20230920193542 by -JpE-
:testtools
  set str=My little test text says very little.
  set chars2Pad=-*=
  set /a gap=0
  call %util3% charrev :revchars ""%chars2Pad%""
  call %util3% line2 :makeline ""%str%"" ""%chars2Pad%""
  call %util3% spcs :getspcs %gap%
  call %util3% length :strlen ""%str%""
  call %util3% gar :strlen ""%chars2Pad%""
  echo . & echo The length of ""%str%"" is %length% & echo . & echo The reverse of %chars2Pad% is %charrev% & echo . & echo The line for ""%str%"" is: & echo .
  echo %line2%%chars2Pad%
  echo %charrev% %str% %spcs%%charrev%
  echo %line2%%chars2Pad% & echo .  
  set /a gap=4
  call %util3% spcs :getspcs %gap%
  echo . & echo The spc for %gap% are ""%spcs%""
  REM echo . & pause & 
  echo .
  REM exit /b


:::::::::::::::::::::::
::: Now Testing.... :::
:::::::::::::::::::::::
:test2
  set l00kup=
  set /a count1=0
  set reset=0
    REM cls
  echo . & echo .


:prototype
  choice /c ync /n /t 9 /d n /m ""Run the substr test first? (y/N/c): "" & echo .
  if errorlevel 3 echo CANCELLED! & echo . & exit
  if errorlevel 2 goto doit
  if errorlevel 1 call :testsubstr
  echo .
  if %errorlevel% neq 3 (
    choice /c ync /n /t 9 /d y /m ""Run the dowtests now? (Y/n/c): ""
    echo .)
  if %errorlevel% equ 3 echo CANCELLED!
  if %errorlevel% equ 2 echo Terminating.
  if %errorlevel% neq 1 goto exit


:doit
  setlocal EnableExtensions
  setlocal EnableDelayedExpansion


:dowtest
  if exist %util2% call %util2% day1
  echo . & echo Today is %day1% & echo .
  set /a count1+=1
  if %testwell% gtr 2 echo . & echo "">>===>"" testwell == %testwell% & echo .
  REM & pause & echo .
  if not defined l00kup goto skipit

  ::: Now an implicit value : if defined l00kup ::: 
  if exist %util3% call %util3% leng :strlen ""%l00kup%""
  if %testwell% gtr 2 echo . & echo Back in Testing and & echo leng == %leng% & echo .
    set /a offset12=(%leng%-10)
if %testwell% gtr 2 echo offset12 == %offset12% & echo .
    set /a l3n=(%leng%-6)
if %testwell% gtr 2 echo l3n == %l3n% & echo .
    set /a m0n=(%offset12%+5)
if %testwell% gtr 2 echo m0n == %m0n% & echo .
    set /a d3y=(%offset12%+8)
if %testwell% gtr 2 echo d3y == %d3y% & echo .
  if %testwell% gtr 2 echo leng == %leng%, offset12 == %offset12% & echo . & echo m0n == %m0n%, l3n == %l3n% & echo .
  REM & pause & echo .
  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion
    set t3mp=!l00kup:~0,%l3n%!
    set rest0f=!l00kup:~%l3n%,6!
  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 2 echo . & echo t3mp == %t3mp%, *** t3mpy == %t3mpy%, l3n == %l3n% & echo .
 REM & pause & echo .
    set /a t3mpy=(%t3mp%)
      set ""r3st0f=%rest0f%""
if %testwell% gtr 2 echo . & echo rest0f == %rest0f%, r3st0f == %r3st0f% & echo .
if %testwell% gtr 2 pause & echo .
      set /a t3mpy+=100
      set l00kup=%t3mpy%%r3st0f%
if %testwell% gtr 2 echo . & echo t3mpy == %t3mpy%, r3st0f == %r3st0f%, l00kup == %l00kup% & echo .
if %testwell% gtr 2 pause & echo .

:skipit
REM if defined l00kup if ""%l00kup:~4,1%"" neq ""-"" goto y10k
  if not defined l00kup (
    :::::::::::::::::::::::::::::::::::::::
    ::: MAX DATE 1 Billion A.C.E. -1yr. :::
    :::::::::::::::::::::::::::::::::::::::
    REM set l00kup=999999999-01-09
    REM set l00kup=99999999-01-09
    REM set l00kup=9999999-01-09
    REM set l00kup=999999-01-09
    set l00kup=123456-01-09
    REM set l00kup=99999-01-09
    REM set l00kup=9696-01-09
    REM set ""l00kup=10056-05-20""
    REM set l00kup=1956-05-20
    REM set l00kup=1523-01-09
    ::: 
    if exist %util3% call %util3% lup :strlen %l00kup%
if %testwell% gtr 2 echo . & echo lup == ""%lup%"" & echo . & pause & echo .
      set /a l3n=%lup%-6
      set /a d1f=%l3n%-4
      set /a m0n=%d1f%+5
      set /a d3y=%d1f%+8
if %testwell% gtr 2 echo . & echo l3n == %%, d1f == %d1f%, m0n == %m0n%, d3y == %d3y%
if %testwell% gtr 2 echo . & pause & echo .
    REM set /a l3n=4
    REM set /a m0n=5
    REM set /a d3y=8
  )
if %testwell% gtr 2 echo . & echo t3mpy == %t3mpy%, l00kup == %l00kup%
if %testwell% gtr 2 echo . & echo SO what we got eh & echo .
 REM & pause & echo .


      if exist %util2% call %util2% d4y %l00kup%
  
  
if %testwell% gtr 2 echo d4y == %d4y%
if %testwell% gtr 2 echo . & echo l00kup == %l00kup% & echo .
 REM & pause
  
if %testwell% gtr 2 echo . & echo l00kup == %l00kup%, l3n == %l3n%, m0n == %m0n%, d3y == %d3y% & echo . & echo WAIT WATT & echo .
 REM & pause & pause


  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion

  set yr1=!l00kup:~0,%l3n%!
if %testwell% gtr 2 echo Yep & pause
  set mo1=!l00kup:~%m0n%,2!
if %testwell% gtr 2 echo Good! & pause
  set dy1=!l00kup:~%d3y%,2!
if %testwell% gtr 2 echo Fine. & pause

  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 2 echo DDE... Clear. & pause

if %testwell% gtr 2 echo . & echo yr1 == %yr1%, mo1 == %mo1%, dy1 == %dy1% & echo . & pause & echo .

    REM set /a yr1=%yr%
REM if %testwell% gtr 2 pause
    REM set /a mo1=%mo%
REM if %testwell% gtr 2 pause
    REM set /a dy1=%dy%
  
if %testwell% gtr 2 echo num set made & pause
  set yr2=%date:~0,4%
REM if %testwell% gtr 2 echo here? & pause
if %testwell% gtr 2 echo date == %date%, date 5,2 == %date:~5,2%
  set mo2=%date:~5,2%
if %testwell% gtr 2 echo here? & pause
REM if %testwell% gtr 2 echo or here? & pause
  set dy2=%date:~8,2%
REM if %testwell% gtr 2 echo here? & pause
if %testwell% gtr 2 echo or here? & pause
  
if %testwell% gtr 2 echo . & echo yr1 == %yr1%, yr2 == %yr2%, mo1 == %mo1%
if %testwell% gtr 2 echo mo2 == %mo2%, dy1 == %dy1%, dy2 == %dy2% & echo . & pause & echo .

  set tense1=was
  if %yr1% gtr %yr2% set tense1=will be
  if %yr1% equ %yr2% if %mo1% gtr %mo2% set tense1=will be
  if %yr1% equ %yr2% if %mo1% equ %mo2% if %dy1% gtr %dy2% set tense1=will be
  
  echo . & echo The date %l00kup% %tense1% a %d4y%! & echo .
  if %count1% gtr 345 echo WARNING! Loop count is now at %count1%/360, where the program will terminate. & echo .
      if %count1% leq 360 choice /c ync /n /t 10 /d y /m ""%count1%) Run the tests again? (Y/n/c): ""
      if %errorlevel% gtr 1 exit /b
      if %count1% lss 360 goto dowtest
      
        set /a reset1+=1 & echo . & choice /c ync /n /t 20 /d n /m ""Reset The Counter? (y/N/c): ""
        if %errorlevel% gtr 1 echo . & exit /b
        if %reset1% gtr 1 goto lastchance
          ::: ELSE
          set /a count1=0
          goto dowtest


:lastchance
  echo . & echo LAST CHANCE BEFORE TERMINATION! & echo . & choice /c ync /n /t 1200 /d c /m ""Reset the reset counter? (y/n/C): ""
  set /a count1=0 & set l00kup=
  if %errorlevel% equ 1 goto dowtest
  exit /b


:testsubstr
  if not exist %util3% exit /b
  setlocal
:testsub
  set /a start=0 & set date3=12345678-05-20
  call %util3% lng :strlen %date3%
  set /a lent=(%lng%-6)
  setlocal EnableExtensions
  setlocal EnableDelayedExpansion
  set ""str4=!date3:~%start%,%lent%!""
  setlocal DisableDelayedExpansion
  echo . & echo The Year of %date3% is %str4% & echo .
  choice /c ync /n /t 5 /d n /m ""Run testsubstr Again? (C) to Cancel ALL: (y/N/c)? ""
  if %errorlevel% equ 1 goto testsub
  endlocal
  exit /b
  


:::::::::::::::::::::::::::::
::: Deprecated  v8.6.8.94 :::
:::::::::::::::::::::::::::::
:y10k
  echo . & echo  There is a Y10k Problem after 9999 A.C.E. & echo .
  set msg=""Start the tests again? (Y/n): ""
  choice /c yn /n /t 20 /d y /m %msg%
  if %errorlevel% equ 1 set l00kup=
  if %errorlevel% equ 1 goto dowtest
  exit

:::::::::::::[ END of Now Testing ]::::::::::::


  :::::::::::::::::::::::::::::::::::::::::::::
  ::: Recently tested or experimented with. :::
  :::::::::::::::::::::::::::::::::::::::::::::
:dowtest2
  call :dowtest
  set /a count=1
  set /a limit=10000
  call :begin

  REM set Slnt=""%bats%\Silent_mode.bat""
  REM call %Slnt%
  REM exit

:::::::::::::[ END of Recent Testing ]::::::::::::


:basenum2
  set /a baseNumber=10 & set /a exponent23=19
  call :powers2 result %baseNumber% %exponent23%
  echo . & echo %baseNumber%\%exponent23% == %result% & echo . & pause & echo .
  ::: 
  set /a b=2 & set /a e=32
  
:loop
  call :powers2 x %b% %e%
  echo %b%\%e% == %x%
  if %e% gtr 0 set /a e+=-1 & goto loop
  pause
  set /a e=32
  if %b% lss 32 set /a b+=1 & goto loop
  echo . & pause & echo .

  :::::::::::::::::::::::::::::::::::::::::::::::
  ::: Previously tested or experimented with. :::
  :::::::::::::::::::::::::::::::::::::::::::::::

  call :top
  call :power
  call :leapyear
  call :datums
  call :menudo
  REM set /a count=1
  REM set /a limit=10^40
  REM call :begin
  :: REM goto power
  :: REM goto leapyear
  :: REM goto datums
  :: REM goto menudo
  :: REM goto begin
  exit /b %errorlevel%

:::::::::::::::::::::::: END KEEP :::::::::::::::::::::::::

:top
  pause
  call :showmsgt
  set msg=""%bats%\exit_main.bat""
  if exist %msg% echo . & echo %msg% is online. & echo .
  if not exist %msg% echo . & echo %msg% is not online. & echo .
  ::: Okay down to here.
  echo calling exit_main... 
  pause
  if exist %msg% call %msg% showmsg2
  REM set fileo=""%bats%\caller_check.txt""
  echo back from showmsg2
  pause
  goto top

  echo error error error error error error error error error
  pause
  exit /b %errorlevel%


:showmsgt <no parms>
  echo . & echo made it to :showmsg2 in testing & echo .

  echo This file lets the Older Photos & 
  echo Program know which program is
  echo calling it, if any.
  echo .
  echo This does not effect your files
  echo that are being backed up in any way.
  echo . & echo Leaving showmsgt & echo . & pause & echo .
  exit /b %errorlevel%


:begin
  REM echo .
  if %count% gtr %limit% echo . & echo End of Run, limit reached. & echo . & pause & echo . & exit /b %errorlevel%
  REM echo Ready?
  REM echo .
  set /a a=%RANDOM%
  REM pause

  REM if %a% equ 0 goto react
  REM if %a% gtr 3200 goto react

  REM echo . & 
  REM echo a not 0 or greater than 3200.
  REM echo . & 
  echo Our Random Number is: %a%
   REM & echo .
  set /a count+=1
  rem & pause & goto begin
  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Get it to store the random values it finds in a List for practice with psuedo arrays, sequences, etc.
  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  goto begin


:react
  REM echo a got flagged because a equals zero or is greater than 3. a == %a% & goto begin
  REM echo .
  REM echo It didn't work.
  REM echo .
  REM pause
  REM echo .
  goto begin


:daddio
  set daddio=""\\Daddio-PC\Users\Admin\AppData\Local\Microsoft\Outlook""
  if not exist %daddio% echo Daddio not found. & pause & exit /b 2
  echo . & echo Daddio is online. & echo . & pause
  exit /b %errorlevel%


:menudo
  cls
  echo .
  echo                   %date%  @  %time%
  echo .
  set l=5 3 7 12 89 91 14 17 25 65 72 13 18 27 47 32 4 12 15 13 64 30 29 44 31 21 75 46 73 26 16 43 0 19 42 5 7 1 11 57
  ( for %%n in (%l%) do (
    echo n == %%n
  ))
  echo .
  pause
  echo .
  exit /b %errorlevel%


:paws
  echo Paws-1
  pause
  for /L %%x in (0,1,3) do (
  echo Hi! %%x
  pause
  )
  echo Paws-2
  pause


:datums
  ::: set datum[x][y][z]=num
  set datum[0][0][0]=0

  set list=5,3,7,12,89,91,14,17,25,65,72,13,18,27,47,32,4,12,15,13,64,30,29,44,31,21,75,46,73,26,16,43,0,19,42,5,7,1,11,57
  for %%n in (%list%) do (
    for /l %%x in (0,1,3) do (
      for /l %%y in (0,1,1) do (
        for /l %%z in (0,1,3) do (
          set /a datum[%%x][%%y][%%z]=%%n
          echo n == %%n, x == %%x, y == %%y, z == %%z
  ))))

  echo datum[3][0][2] == %datum[3][0][2]%

  pause
  REM goto datums
  exit /b %errorlevel%


:leapyear
  set /a year=1900
  
:testing
  set /a year+=1
  ::: TESTING it with JUST...
  ::: Design Note to Dev: If divide by 2 equal mod 0 it's even ie. offline otherwise odd ie. problemo.
  set /a ""mod=%year% %% 4%""
  set not=
  if %mod% neq 0 set not=NOT 
  set answ=Is %not%a Leapyear.
  set msg= %year% %answ%.
  echo %msg%
  set /a tsf=""mod=%year% %% 42%""
  if %tsf% equ 0 pause & cls & echo %msg%
  if %year% gtr 2212 exit /b %errorlevel%
  goto testing


:power
  set /a pwr=1
  echo . & echo . & echo .
  echo Today is %date%, it is %time% & echo .
  
:start
  set /a x=1
  set datethen=%date%
  set timethen=%time%
  call :powers e,10,pwr
  for /l %%j in (%x%,1,%e%) do (
    echo This is going soooo fast! #%%j
    if %%j equ %e% echo . & echo Duuudddeee! & call :grunt
  )
  if %pwr% geq 6 exit /b %errorlevel%
  set /a pwr+=1 & goto start


:grunt
  set bats=C:\Users\%username%\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite
  set runt=""%bats%\runtime_display.bat""
  title %date% @ %time% Experimental Dream:
  set fileo=""%bats%\caller_check.txt""
  if exist %fileo% del /f /s /q %fileo%""
  if not exist %runt% echo %runt% cannot be found!
  if exist %runt% call %runt%
  REM if %pwr% geq 6 goto return
  echo . & echo Running Again! This Time Counting To %e%0
  echo . & pause & cls
  exit /b %errorlevel%


::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:powers <intVar rslt, intVar base, intVar expo>
  setlocal & set ""base=%~2"" & set ""expo=%~3"" & set ""answ=1""
  for /l %%n in (1, 1, %expo%) do (
    set /a ""answ *=%base%""
    )
  endlocal & set ""%~1=%answ%""
  exit /b %errorlevel%
::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:powers2 <intVar returnedResult, intVar baseNum, intVar exponent>
  setlocal & set ""base=%~2"" & set ""expt=%~3""
  set fn=""%bats%\exponential_powers.bat""
  if exist %fn% call %fn% ans %base% %expt%
  endlocal & set ""%~1=%ans%""
  exit /b %errorlevel%


:return
echo .
echo That's A MILLION!
echo .
pause
echo .
echo Program Terminating now. Go to Bed.
pause
exit
exit



:::   100%  -JpE-


"
9SQPgb9N,crosschecker.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:31:03 PM CDT,"

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: crosscheck.bat split from updated utility2.bat        :::
::: It's just to check if the newer algorythm checks out. :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  if not defined vers set vers=v8.6.8.92 20230913145112 by -JpE-
  echo . & echo Cross Checking That Answer... One Moment.
  ::: DON""T MESS WITH THIS IS WORKS PERFECTLY! Comment it out to test.
  if %year4% lss 6000 if %year4% geq 5900 set /a adjust=0  
  if %year4% lss 5900 if %year4% geq 5800 set /a adjust=2
  if %year4% lss 5800 if %year4% geq 5700 set /a adjust=4
  if %year4% lss 5700 if %year4% geq 5600 set /a adjust=-1
  if %year4% lss 5600 if %year4% geq 5500 set /a adjust=0
  if %year4% lss 5500 if %year4% geq 5400 set /a adjust=2
  if %year4% lss 5400 if %year4% geq 5300 set /a adjust=4  
  if %year4% lss 5300 if %year4% geq 5200 set /a adjust=-1
  if %year4% lss 5200 if %year4% geq 5100 set /a adjust=0
  if %year4% lss 5100 if %year4% geq 5000 set /a adjust=2
  if %year4% lss 5000 if %year4% geq 4900 set /a adjust=4  
  if %year4% lss 4900 if %year4% geq 4800 set /a adjust=-1
  if %year4% lss 4800 if %year4% geq 4700 set /a adjust=0  
  if %year4% lss 4700 if %year4% geq 4600 set /a adjust=2
  if %year4% lss 4600 if %year4% geq 4500 set /a adjust=4
  if %year4% lss 4500 if %year4% geq 4400 set /a adjust=-1
  if %year4% lss 4400 if %year4% geq 4300 set /a adjust=0  
  if %year4% lss 4300 if %year4% geq 4200 set /a adjust=2
  if %year4% lss 4200 if %year4% geq 4100 set /a adjust=4
  if %year4% lss 4100 if %year4% geq 4000 set /a adjust=-1 
  if %year4% lss 4000 if %year4% geq 3900 set /a adjust=0 
  if %year4% lss 3900 if %year4% geq 3800 set /a adjust=2
  if %year4% lss 3800 if %year4% geq 3700 set /a adjust=4
  if %year4% lss 3700 if %year4% geq 3600 set /a adjust=-1
  if %year4% lss 3600 if %year4% geq 3500 set /a adjust=0  
  if %year4% lss 3500 if %year4% geq 3400 set /a adjust=2
  if %year4% lss 3400 if %year4% geq 3300 set /a adjust=4
  if %year4% lss 3300 if %year4% geq 3200 set /a adjust=-1
  if %year4% lss 3200 if %year4% geq 3100 set /a adjust=0  
  if %year4% lss 3100 if %year4% geq 3000 set /a adjust=2
  if %year4% lss 3000 if %year4% geq 2900 set /a adjust=4  
  if %year4% lss 2900 if %year4% geq 2800 set /a adjust=-1
  if %year4% lss 2800 if %year4% geq 2700 set /a adjust=0
  if %year4% lss 2700 if %year4% geq 2600 set /a adjust=2
  if %year4% lss 2600 if %year4% geq 2500 set /a adjust=4
  if %year4% lss 2500 if %year4% geq 2400 set /a adjust=-1
  if %year4% lss 2400 if %year4% geq 2300 set /a adjust=0
  if %year4% lss 2300 if %year4% geq 2200 set /a adjust=2
  if %year4% lss 2200 if %year4% geq 2100 set /a adjust=4
  if %year4% lss 2100 if %year4% geq 2000 set /a adjust=-1
  if %year4% lss 2000 if %year4% geq 1900 set /a adjust=0
  if %year4% lss 1900 if %year4% geq 1800 set /a adjust=2
  if %year4% lss 1800 if %year4% geq 1753 set /a adjust=4
  
  if %year4:~0,2% gtr 17 if %year4:~0,1% lss 6 if %adj% neq %adjust% echo . & echo Does not match! adjust == %adjust%, and adj == %adj% & echo . & pause & echo .
  exit /b %errorlevel%
"
p0nBR9N5,QuickSort_v11_TL,Korotkodul,C++,Saturday 30th of September 2023 06:26:21 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = false;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}

vector<int> Partition(vector<int> aa, int xx) {
  // делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  // делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med, int cnt) {
  constexpr int kInfin = 2e9;
  while (med.size() % 5 != 0) {
    med.push_back(kInfin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii : med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < (int)med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3],
                      med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (new_med.size() == 2) {
    if (new_med[0] != kInfin) {
      return new_med[0];
    }
    return new_med[1];
  }
  if (new_med.size() <= 5) {
    for (int ii : new_med) {
      if (ii != kInfin) {
        return ii;
      }
    }
    return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii : new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res;
  if (cnt == 2) {
    int tt = new_med.size();
    res = new_med[tt / 2];
    return res;
  }
  res = QuickSelect(new_med, cnt + 1);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
  if (aa.size() == 1) {
    return aa;
  }
  if (aa.size() == 2) {
    return {min(aa[0], aa[1]), max(aa[0], aa[1])};
  }
  int piv = QuickSelect(aa, 1);
  aa = Partition(aa, piv);
  if (sh) {
    cout << ""PERTITION DONE\n"";
    cout << ""piv = "" << piv << ""\n"";
    cout << ""aa\n"";
    for (int ii : aa) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  vector<int> bb;  //<piv
  vector<int> cc;  //==piv
  vector<int> dd;  //>piv
  for (int ii : aa) {
    if (ii < piv) {
      bb.push_back(ii);
    } else if (ii == piv) {
      cc.push_back(ii);
    } else {
      dd.push_back(ii);
    }
  }
  if (!bb.empty()) {
    bb = DQS(bb);
  }
  if (!dd.empty()) {
    dd = DQS(dd);
  }
  vector<int> res;
  for (int ii : bb) {
    res.push_back(ii);
  }
  for (int ii : cc) {
    res.push_back(ii);
  }
  for (int ii : dd) {
    res.push_back(ii);
  }
  return res;
  if (sh) {
    cout << ""res\n"";
    for (int ii : res) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii : aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
mtYbcn6w,utility2.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:17:59 PM CDT,"

:::::::::::::::::::::
:::  RC9 Update!  :::
:::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::
::: utility2.bat custom by -JpE- 202307170943  :::
::::::::::::::::::::::::::::::::::::::::::::::::::
:::   :::   :::   :::   /\   :::   :::   :::   :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Design Notes For Day of Week as Word:      :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Old Farmers Need these 3 vars to work with :::
::: PLus the 3 tables to get dow, key, century :::
::: ========================================== :::
::: Last two of year / 4 + Last 2 of year +    :::
::: Day of Month + Month code & century code   :::
::: (for 2000 thru 2099 add 1) pre 1900 add 2  :::
::: pre 1800 add 2 more & Divide sum by 7.     :::
::: REMAINDER is day of the week; Sunday == 1  :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: This ^ Formula is Crucial In The ^ Coding! :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Rev8.6.7:  NEW FEATURES AND FIXES          :::
::: if dateToLookup string is passed in, then  :::
::: the year must be 10 digits with this       :::
::: NOTE: RC9 Allows years through 999999999   ::: 
::: format: date2Lookup=""1923-01-09""           :::
::: If the 2nd arg isn't sent in the call,     :::
::: then it goes with RIGHT THIS MILLISECOND!  :::
::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::
::: JAFO: Get day of week for date as a word!  :::
::::::::::::::::::::::::::::::::::::::::::::::::::

  if not defined vers set vers=v8.6.8.94 20230930155601 by -JpE-
  if not defined testwell set /a testwell=1
  if not defined util2 set util2=""%bats%\utility2.bat""
  if not defined util3 set util3=""%bats%\utility3.bat""
  

:dowword <string weekdayVar2Return, string dateToLookupOptional>
  setlocal & set ""weekday=%~1"" & set ""date1=%~2""
  if not defined date1 set /a year4=(%date:~0,4%)
  if not defined date1 call :fetch year2 month day
  if defined date1 call :parsedate %date1% year4 year2 month day
::: :parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
echo .
if %testwell% gtr 3  if defined date1 echo back from parsedate! 
if %testwell% gtr 3  echo . & echo year4 == %year4%, year2 == %year2%, month == %month%, day == %day% & echo . & pause & echo .

  call :monthkey key %month%
  set /a ly=9 & if %key% gtr 99 set /a ly=0 & set /a key-=100
if %testwell% gtr 3  echo . & echo after monthkey key == %key% & echo . & pause & echo .
  if %ly% equ 0 echo . & echo It is LeapYear! & echo .
  set /a sum1=(%year2% / 4 + %year2%)
  set /a sum2=(%sum1% + %day% + %key%)
if %testwell% gtr 3  echo b4 century
  call :century %year4% adj
if %testwell% gtr 3  echo . & echo after century adj == %adj% & echo . & pause
  if %adj% lss 9 set /a sum2=(%sum2%+%adj%)
  if %adj% equ 9 set ""weekday=Y10k Problem""
  if %adj% gtr 9 set /a key=7
if %testwell% gtr 3 echo . & echo sum2 == %sum2%
  if %adj% neq 7 set /a dowk=(%sum2% %% 7%)
if %testwell% gtr 3 echo . & echo dowk == %dowk% & echo .
  if %key% neq 7 call :getdow %dowk% weekday
  
  if %key% equ 7 set ""weekday=ERROR-47c""
  if %key% equ 7 call :errr
if %testwell% gtr 3 echo . & echo weekday == %weekday% & echo .
  endlocal & set ""%~1=%weekday%""
  exit /b %errorlevel%

  
  ::: Adapt month and day if year is more than 4 digits. -ed
  ::: fix Y10k, Y100k, Y100k, Y1mk, etc.


::: If date string was passed in parse it to get
::: the 4 vars year4, year2, month, day; my way.
::: Mod: if more than a 4 digit year and make scalable.
:parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
  setlocal & set ""date1=%~1"" & set ""y4=%~2""
  set ""y2=%~3"" & set ""mo=%~4"" & set ""dy=%~5""
  if exist %util3% call %util3% datelen :strlen %date1%
if %testwell% gtr 3 echo . & echo datelen == %datelen% & echo .
 REM & pause & echo .
  REM set datelen=(%datelen%)
  ::: How long is just the Year string in characters?
  set /a len=(%datelen%-6)
  set /a l2=(%len%-2)
  set /a admo=(%len%+1)
  set /a addy=(%len%+4)
  if %datelen% equ 10 (
    set /a ""y4=%date1:~0,4%""
    set /a ""y2=%date1:~2,2%""
    set ""mo=%date1:~5,2%""
    set ""dy=%date1:~8,2%""
    REM goto okay2
  )
  if %datelen% gtr 10 (
    REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
    set /a y4=!date1:~0,%len%!
    set /a y2=!date1:~%l2%,2!
if %testwell% gtr 3 echo . & echo now testing over 4 digit years. And l2 == %l2% & echo . & pause & echo .
    set ""mo=!date1:~%admo%,2!""
    set ""dy=!date1:~%addy%,2!""
    REM setlocal DisableDelayedExpansion
  )
if %testwell% gtr 3 echo . & echo parsedate: y4 == %y4%, y2 == %y2%, admo == %admo%, addy == %addy%
if %testwell% gtr 3 echo len == %len%, mo == %mo%, dy == %dy% & echo .
REM :okay2
  if ""%mo:~0,1%"" equ "" "" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ ""0"" set /a ""mo=%mo:~1,1%""
  if ""%dy:~0,1%"" equ "" "" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ ""0"" set /a ""dy=%dy:~1,1%""
  
if %testwell% gtr 3 echo . & echo ok here: y4 == %y4%, y2 == %y2%
if %testwell% gtr 3 echo mo == %mo%, dy == %dy% & echo . & pause & echo .

  endlocal & set ""%~2=%y4%"" & set ""%~3=%y2%"" & set ""%~4=%mo%"" & set ""%~5=%dy%""
  exit /b
  REM %errorlevel%


:::::::::::::::::::[ Begin The Century Group ]:::::::::::::::::::

:century <string year4, int adjWeThink>
  setlocal & set /a ""yr4=%~1""
  REM & set /a adj=9
  set /a millenium=%yr4:~0,1%
  set /a century=%yr4:~1,1%
  if %yr4% gtr 9999 call :y10k
rem should alter   ^ millenium and century accordingly.
  set /a evenm=(%millenium% %% 2%)
  set /a evenc=(%century% %% 2%)

  if %testwell% gtr 3 echo . & if %evenm% equ 0 echo It's an Even Millennium!
  if %testwell% gtr 3 if %evenm% gtr 0 echo It is an Odd Millennium!
  if %testwell% gtr 3 if %evenc% equ 0 echo It's an Even Century.
  if %testwell% gtr 3 if %evenc% gtr 0 echo It is an Odd Century.
if %testwell% gtr 3 echo -=8 ahead.
 REM & pause
  if %century% gtr 7 set /a century=(%century%-8)
if %testwell% gtr 3 echo lss 8 if geq 4 -=4 ahead.
 REM & pause
  if %century% lss 8 if %century% gtr 3 set /a century=(%century%-4)
if %testwell% gtr 3 echo . & echo century == %century% & echo .
  if %evenm% gtr 0 goto odd1
  
::: evenm
  if %century% equ 3 set /a adj=0
  if %century% equ 2 set /a adj=2
  if %century% equ 1 set /a adj=4
  if %century% equ 0 set /a adj=-1
  goto done1  

:odd1   
  if %century% equ 3 set /a adj=4
  if %century% equ 2 set /a adj=-1
  if %century% equ 1 set /a adj=0
  if %century% equ 0 set /a adj=2

:done1
  if %yr4% lss 1753 set /a adjust=9 & echo . & echo Results for years before 1753 weren't gregorian.
  if %yr4% leq 6000 if %yr4% gtr 2100 if %testwell% gtr 3  call :crosscheck
REM if %testwell% gtr 3  echo done1 and adj == %adj% & echo . & pause & echo .
  endlocal & set ""%~2=%adj%""
  exit /b %errorlevel%


::: NOTE: In this case, yr4 is not the lookup it is already just the YEAR.
:y10k
  if exist %util3% call %util3% lenstr :strlen %yr4%
REM if %testwell% gtr 3 echo .& echo y10k: The length of %yr4% is %lenstr%. & echo .
 REM & pause & echo .
  set /a m2=(%lenstr%-3)
if %testwell% gtr 3 echo y10k pause, lenstr == %lenstr%, and m2 == %m2% & echo . & pause
  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion
  set /a millenium=(!yr4:~0,%m2%!)
  set /a century=(!yr4:~%m2%,1!)
  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 3 echo . & echo Y0k: millenium == %millenium%, century == %century% & echo . & pause & echo .
  exit /b %errorlevel%


:crosscheck
  set crosschecker=""%bats%\crosschecker.bat""
  if exist %crosschecker% call %crosschecker%
  exit /b %errorlevel%

:::::::::::::::::::[ End of The Century Group ]:::::::::::::::::::


::: If mod equ 0 then it's a Leapyear, evenly divisible by 4.
:monthkey <int keyReturned, int monthNum>
  setlocal & set /a num=%~2
  if %num% equ 1 set /a key=1
  if %num% equ 10 set /a key=1
  if %num% equ 2 set /a key=4
  if %num% equ 3 set /a key=4
  if %num% equ 11 set /a key=4
  set /a mod=%date:~0,4% %% 4% 
  if %mod% equ 0 call :leap
  if %mod% neq 0 if %num% equ 4 set /a key=0
  if %mod% neq 0 if %num% equ 7 set /a key=0
  if %num% equ 5 set /a key=2
  if %num% equ 6 set /a key=5
  if %num% equ 7 set /a key=0
  if %num% equ 8 set /a key=3
  if %num% equ 9 set /a key=6
  if %num% equ 12 set /a key=6
  if %mod% equ 0 if %num% neq 4 if %num% neq 7 set /a key+=100
  endlocal & set ""%~1=%key%""
  exit /b %errorlevel%

:leap
  echo . & echo IT IS LEAPYEAR! Feb has 29 Days This Year. & echo .
  exit /b %errorlevel%


::: Get day of week word from day number.
:getdow <int weekdayNum, string weekday2Return>
  setlocal & set /a ""dow=%~1""
  REM & set ""weekday=%~2 
  if %dow% equ 0 set /a dow=7
  if %dow% equ 1 set weekday=Sunday
  if %dow% equ 2 set weekday=Monday
  if %dow% equ 3 set weekday=Tuesday
  if %dow% equ 4 set weekday=Wednesday
  if %dow% equ 5 set weekday=Thursday
  if %dow% equ 6 set weekday=Friday
  if %dow% equ 7 set weekday=Saturday
  endlocal & set ""%~2=%weekday%""
  exit /b %errorlevel%


:fetch <int yearLast2, int monthNum, int dayOfMonth>
  setlocal
  REM set /a ""yearLast2=%~1""
  REM set /a ""monthNum=%~2""
  REM set /a ""dayOfMonth=%~3""
  set /a yearLast2=(%date:~2,2%)
  set ""monthNum=%date:~5,2%""
  if ""%monthNum:~0,1%"" equ "" "" set /a monthNum=(%monthNum:~1,1%)
  if ""%monthNum:~0,1%"" equ ""0"" set /a monthNum=(%monthNum:~1,1%)
  set ""dayOfMonth=%date:~8,2%""
  if ""%dayOfMonth:~0,1%"" equ "" "" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  if ""%dayOfMonth:~0,1%"" equ ""0"" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  endlocal & set ""%~1=%yearLast2%"" & set ""%~2=%monthNum%"" & set ""%~3=%dayOfMonth%""
  exit /b %errorlevel%


:errr
  setlocal
  echo . & echo Developmental CheckPoint!
  echo Enviromental Pollution. & echo .
  echo Something peculiar is amiss?
  echo . & pause & echo .
  endlocal
  exit /b %errorlevel%



  ::: 100% -JpE-


"
ijnBpebu,MP06_UF1_EJ5,Mike7GB,Java,Saturday 30th of September 2023 06:16:26 PM CDT,"// EJERCICIO 5

****************
----- MAIN -----
****************


import static com.mycompany.ejercicio5.Funciones.*;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Ejercicio5 {

    public static void main(String[] args) {

        //Declaración de variables
        Scanner scanner;
        int opcionMenu = -1;
        int opcionSubmenu = -1;
        String fileName;
        String path;
        File f;

        // Instanciación de objeto Scanner para recibir
        // input del usurio a traves del teclado
        scanner = new Scanner(System.in);

        // Mensaje inicial
        System.out.println(""Este programa le permite leer y escribir los datos de"");
        System.out.println(""personas en un archivo .txt con el nombre y la ruta que"");
        System.out.println(""usted elija. Por favor, pulse Enter para continuar"");
        scanner.nextLine();

        do {

            System.out.println(""\n****************"");
            System.out.println(""----- MENÚ -----"");
            System.out.println(""****************"");
            System.out.println("""");
            System.out.println(""1 - Escribir"");
            System.out.println(""2 - Leer"");
            System.out.println(""3 - Escribir (Bin)"");
            System.out.println(""4 - Leer (Bin)"");
            System.out.println(""0 - Salir"");
            System.out.println("""");
            System.out.println(""Seleccione una opción del menú escribiendo"");
            System.out.println(""el número correspondiente y pulse Enter"");

            opcionMenu = scanner.nextInt();
            scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

            switch (opcionMenu) {
                case 1:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    escribirFichero(f);

                    break;

                case 2:

                    // Solicitar al usuario la ruta donde se haya el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea leer"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    if (!f.exists()) {
                        System.out.println(""\nEl archivo no existe\n"");
                        break;
                    }

                    do {
                        System.out.println(""\n****************"");
                        System.out.println(""---- SUBMENÚ ---"");
                        System.out.println(""****************"");
                        System.out.println("""");
                        System.out.println(""1 - Leer todo"");
                        System.out.println(""2 - Leer una persona"");
                        System.out.println(""0 - Volver atrás"");
                        System.out.println("""");
                        System.out.println(""Seleccione una opción del submenú escribiendo"");
                        System.out.println(""el número correspondiente y pulse Enter"");

                        opcionSubmenu = scanner.nextInt();
                        scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

                        switch (opcionSubmenu) {
                            case 1 -> {
                                // Codigo para leer todo
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer todo"");
                                leerTodo(f);
                                opcionSubmenu = 0;
                            }
                            case 2 -> {
                                // Código para leer una persona
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer una persona buscando por el nombre"");
                                leerUnaPersona(f);
                                opcionSubmenu = 0;
                            }
                            default -> {
                            }
                        }
                    } while (opcionSubmenu != 0);
                    break;

                case 3:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName, true);

                    // Solicitar al usuario el numero de personas a guardar, con un mázimo de 3 
                    int n = 0;
                    do {
                        System.out.println(""\nIntroduzca el número de personas a guardar."");
                        System.out.println(""Recuerde que como mínimo debe ser 1 y como máximo 3."");
                        n = scanner.nextInt();
                    } while (n < 1 || n > 3);

                    try {
                        // Escribir en el archivo binario
                        escribirFicheroBin(f, n);
                    } catch (IOException ex) {
                        Logger.getLogger(Ejercicio5.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    break;
                
                case 4:
                    
                    // Solicitar al usuario la ruta donde se haya el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea leer"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName, true);

                    if (!f.exists()) {
                        System.out.println(""\nEl archivo no existe\n"");
                        break;
                    }

                    do {
                        System.out.println(""\n****************"");
                        System.out.println(""---- SUBMENÚ ---"");
                        System.out.println(""****************"");
                        System.out.println("""");
                        System.out.println(""1 - Leer todo (Bin)"");
                        System.out.println(""2 - Leer una persona (Bin)"");
                        System.out.println(""0 - Volver atrás"");
                        System.out.println("""");
                        System.out.println(""Seleccione una opción del submenú escribiendo"");
                        System.out.println(""el número correspondiente y pulse Enter"");

                        opcionSubmenu = scanner.nextInt();
                        scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

                        switch (opcionSubmenu) {
                            case 1 -> {
                                // Codigo para leer todo
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer todo"");
                                leerTodoBin(f);
                                opcionSubmenu = 0;
                            }
                            case 2 -> {
                                // Código para leer una persona
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer una persona buscando por el nombre"");
                                leerUnaPersonaBin(f);
                                opcionSubmenu = 0;
                            }
                            default -> {
                            }
                        }
                    } while (opcionSubmenu != 0);
                    break;

                default:
                    break;
            }

        } while (opcionMenu != 0);

        System.out.println(""\nEl programa ha finalizado"");

    }
}


*********************
----- FUNCIONES -----
*********************


import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Funciones {

    //Declaración de variables
    private static Scanner scanner = new Scanner(System.in);
    private static Persona p;
    private static Persona[] personas;
    private static File f;
    private static FileWriter fw;
    private static BufferedWriter bw;
    private static BufferedReader br;
    private static String linea;
    private static BufferedInputStream bis;

    // Métodos auxiliares
    public static File crearArchivo(String path, String fileName) {

        // Añadir extensión al nombre
        fileName += "".txt"";

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    public static File crearArchivo(String path, String fileName, boolean bin) {
        
        // Añadir extensión al nombre dependiendo si será archivo binario o de texto
        if (bin) {
            fileName += "".bin"";
        } else {
            fileName += "".txt"";
        }

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    // Métodos de lectura y escritura en texto plano
    public static void escribirFichero(File fichero) {

        f = fichero;

        // Instanciación del array personas que puede contener varios objetos Persona
        // En este caso solo vamos a almacenar 3 personas en el array
        personas = new Persona[3];

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre."");
            System.out.println(""Podrá sobrescribirlo o añadir los datos"");
            System.out.println(""a la información existente"");
        }

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos 3 veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try {
            if (f.exists()) { // Si el archivo existe, preguntar al usuario si desea sobreescribirlo o añadir los datos
                System.out.println(""\nYa existe un fichero con ese nombre."");
                System.out.println(""Si desea sobrescribirlo escriba s y pulse Enter."");
                System.out.println(""Si escribe otra cosa, los datos se añadiran"");
                System.out.println(""a la información existente en el archivo"");
                // Detectar el input de un caracter
                char inputChar = scanner.next().charAt(0);
                scanner.nextLine();

                // Comprobar si se pulsa 's' o 'Enter'
                if (inputChar == 's') {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han sobrescrito los siguientes datos en el fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                } else {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f, true);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han añadido los siguientes datos al fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                }
            } else {
                // Instanciar un objeto de tipo FileWriter
                fw = new FileWriter(f);
                // Instanciar un objeto de tipo BufferedWriter
                bw = new BufferedWriter(fw);
                for (Persona p : personas) {
                    bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                    bw.newLine();
                }
                bw.close();
                fw.close();
                System.out.println(""\nFichero creado correctamente."");
                System.out.println(""\nSe han escrito los siguientes datos en el fichero:."");
                for (Persona p : personas) {
                    System.out.println(p.mostrarInfo());
                }
                System.out.println("""");// Añadir lina en blanco al final
            }
        } catch (FileNotFoundException fn) {
            System.out.println(""\nError: la ruta no existe"");
        } catch (IOException ex) {

            Logger.getLogger(Ejercicio5.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerTodo(File fichero) {

        f = fichero;

        System.out.println(""\nLa información contenida en el fichero es la siguiente: \n"");

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {
                System.out.println(linea);

            }
            
            // Cerrar flujo de lectura
            br.close();

        } catch (FileNotFoundException ex) {
            System.out.println(""\nEl fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""\nError: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerUnaPersona(File fichero) {

        // Variables
        f = fichero;
        String nombre = """";
        String detallesPersona = """";
        int i = 0;
        String nombreInfo = """";
        boolean encontrado = false;

        System.out.println(""\nIndique el nombre que desea buscar"");
        nombre = scanner.next();
        scanner.nextLine();

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {

                detallesPersona = linea;

                // Almacenar en la variable nombreInfo el nombre de cada persona
                nombreInfo = detallesPersona.split("", "")[0];

                // Si el nombre extraído del archivo, coincide con el nombre ingresado por el usuario, se imprime toda la información de esa persona
                if (nombreInfo.equals(nombre)) {
                    System.out.println(""\n"" + linea);
                    encontrado = true;
                }
                i++;
            }
            
            // Cerrar flujo de lectura
            br.close();

            // Si no se encuentra ninguna persona, avisar al usuario.
            if (!encontrado) {
                System.out.println(""\nNo se ha encontrado ninguna persona con el nombre '"" + nombre + ""'\n"");
            }

        } catch (FileNotFoundException ex) {
            System.out.println(""El fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""Error: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Métodos de lectura y escritura en binario
    public static void escribirFicheroBin(File fichero, int n) throws IOException {

        f = fichero;

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre. Se""
                    + "" sobrescribirán los datos."");
        }

        // Instanciación del array personas que puede contener varios objetos Persona
        // Tendrá tantos objetos persona como se pasen por parámetro a la función en la variable n
        personas = new Persona[n];

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos n veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try { // Abrir flujo de salida
            FileOutputStream fos = new FileOutputStream(f);
            BufferedOutputStream bos = new BufferedOutputStream(fos);

            for(Persona persona : personas){
                
                // Convertir los detalles de la persona de tipo String en un array de tipo byte[]
                String personaInfo = persona.mostrarInfo()+""\n"";
                byte[] bytes = personaInfo.getBytes(Charset.defaultCharset());
                bos.write(bytes);
                
            }        
            
            // Cerrar los flujos de salida
            bos.close();
            fos.close();
            
            System.out.println(""\nFichero escrito correctamente"");
            
        } catch (FileNotFoundException e) {
            System.out.println(""\nEl fichero o la ruta no existen"");
        }

    }
    
    public static void leerTodoBin(File fichero){
        
        f = fichero;

        System.out.println(""\nLa información contenida en el fichero es la siguiente: \n"");

        try { // Abrir flujo de lectura
            bis = new BufferedInputStream(new FileInputStream(f));
            int i;
            ArrayList<Integer> array = new ArrayList<>();
            
            // bis.read obtiene un numero entero por cada elemento del array de bytes que obtiene del input stream
            // esa valor se almacena en la variable i
            // cuando se alcanza el final del stream, devuelve un valor negativo, y se sale del bucle while
            while ((i = bis.read()) != -1) {
                // Almacenar cada numero en un array dinámico de tipo ArrayList<Integer>
                array.add(i);
            }
            
            // Con un bucle for, se mostrará la información al usuario
            for(int entero : array){
                
                // Convertir cada entero de tipo int en un caracter de tipo char
                char caracter = (char) entero;
                
                // Imprime cada caracter de forma seguida. *** Importante usar print() y no println()
                // ya que se deben imprimir los caracteres de forma seguida, si se encuentra un caracter de 
                // salto de línea '\n' se mostrará el salto de línea al usuario.
                System.out.print(caracter);
            }
            
            // Cerrar flujo de lectura
            bis.close();

        } catch (FileNotFoundException ex) {
            System.out.println(""\nEl fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""\nError: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public static void leerUnaPersonaBin(File fichero){
        
        // Variables
        f = fichero;
        String nombre = """";
        String textoCompleto = """";
        int i = 0;
        String nombreInfo = """";
        boolean encontrado = false;
        ArrayList<Integer> intArray = new ArrayList<>();
        char[] charArray;
        StringBuilder dynamicCharSequence = new StringBuilder(); // Para construir un array char dinámico

        System.out.println(""\nIndique el nombre que desea buscar"");
        nombre = scanner.next();
        scanner.nextLine();
        
        try{
            
            bis = new BufferedInputStream(new FileInputStream(f));
            
            while((i = bis.read())!=-1){
                intArray.add(i);
            }
            
            bis.close();
        
            for(int entero : intArray){
                
                // Convertir cada entero de tipo int en un caracter de tipo char
                char caracter = (char) entero;
                
                // Almacenar los caracteres en un array char dinámico
                dynamicCharSequence.append(caracter);
                
            }
            
            // Convertir el array char dinámico en un array char convencional
            charArray = dynamicCharSequence.toString().toCharArray();
            
            // Convertir el array char en un String con toda la información del archivo
            textoCompleto = new String(charArray);
            
            // Separar los detalles de cada persona, utilzando como separador el salto de línea
            String[] detallesPersona = textoCompleto.split(""\n"");
            
            // Separar los atributos de cada persona, utilizando como separador la coma
            // y comprobar el nombre, si coincide con el ingresado por el usuario,
            // imprimirlo en consola
            for(String persona : detallesPersona){
                
                nombreInfo = persona.split("","")[0];
                
                if(nombreInfo.equals(nombre)){
                    System.out.println(""\n""+persona);
                    encontrado = true;
                }
                
            }
            
            // Si no se encuentra ninguna persona, avisar al usuario.
            if(!encontrado){
                System.out.println(""\nNo se ha encontrado ninguna persona con el nombre '"" + nombre + ""'\n"");
            }            
            
            
        } catch(FileNotFoundException ex) {
            System.out.println(""El fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""Error: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }        

        
    }

}


*******************
----- PERSONA -----
*******************

public class Persona {
     // Atributos
    private String nombre;
    private String apellido;
    private String ciudad;
    private String nacionalidad;
    private int edad;
 
    // Constructor sin parámetros
    public Persona() {
        this.nombre = """";
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 1 parámetro (nombre)
    public Persona(String nombre) {
        this.nombre = nombre;
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 5 parámetros (nombre, apellido, ciudad, nacionalidad, edad)
    public Persona(String nombre, String apellido, String ciudad, String nacionalidad, int edad) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.ciudad = ciudad;
        this.nacionalidad = nacionalidad;
        this.edad = edad;
    }
 
    // Getters y Setters
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre){
        this.nombre = nombre;
    }
    
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido){
        this.apellido = apellido;
    }
    
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad){
        this.ciudad = ciudad;
    }
    
    public String getNacionalidad() {
        return this.nacionalidad;
    }
    
    public void setNacionalidad(String nacionalidad){
        this.nacionalidad = nacionalidad;
    }
    
    public int getEdad() {
        return this.edad;
    }
    
    public void setEdad(int edad){
        this.edad = edad;
    }
    
    // Métodos
    
    // Mostrar todos los campos
    public String mostrarInfo(){
        return nombre + "", "" + apellido + "", "" + ciudad + "", "" +                
                nacionalidad + "", "" + edad;
    }
}"
fb3Cw2kr,utility3.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:10:13 PM CDT,"

::: RC9 ::: A crossover version to make these stable and test well before removing them and straightening out utility1.bat, which for now has duplicate functions.

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Utility3.bat splitout from Errorhandling.bat v8.6.8.94  :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


  ::: Redesign: Link these to whereever they've been used and
  ::: create a directory finder thingy up top here to link them.
  ::: BEFORE REMOVING THEM FROM Errorhandling.bat, most are
  ::: used there or in utility2.bat for the DayOfWeek function.

  REM if not defined vers 
  set vers=v8.6.8.96 20230922123800 by -JpE-

  ::: Docs :::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: :revchars <string revstrReturned, string str2rev>                 :::
::: :makeline <string line2Fill, string strToPadTo, string padChars>  :::
::: :getspcs <string spcs2Return, int gap>                            :::
::: :strlen <int sizeOfstr2rtn, string str2measure>   WORKING!        :::
::: :padder <string toRtn, int lengthRequired, string padchars>       :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:lookup <string 2Return, string calling, string arg1, string arg2, string arg3>
  setlocal & set ""rtn0=%~1"" & set ""calling=%~2""
  set ""arg1=%~3"" & set ""arg2=%~4"" & set ""arg3=%~5""
if %testwell% gtr 2 echo . & echo util3 hit & echo .
  if ""%calling%"" equ "":revchars"" call %calling% rtn0 ""%arg1%""
  if ""%calling%"" equ "":makeline"" call %calling% rtn0 ""%arg1%"" ""%arg2%""
  if ""%calling%"" equ "":getspcs"" call %calling% rtn0 %arg1%
  if ""%calling%"" equ "":strlen"" call %calling% rtn0 ""%arg1%""
  if ""%calling%"" equ "":padder"" call %calling% rtn0 %arg1% %arg2%
  ::: everything returns one variable. Of some type.
  endlocal & set ""%~1=%rtn0%""
  exit /b %errorlevel%


::: Reverse a string arg and return reversed string.
:revchars <string revstrReturned, string str2rev>
  if not defined sizer set sizer=""%bats%\string_length.bat""
  if not exist %sizer% echo . & echo %sizer% not found. & echo Error 47 & echo . & pause & echo . & exit /b
  setlocal & set ""str=%~2""
  call %sizer% chars str
  set /a charN=%chars%-1
  set /a i=%charN%
  for /l %%n in (0,1,%charN%) do call :forloop1
  endlocal & set ""%~1=%rev%""
  exit /b %errorlevel%
:forloop1
    set ltr2=%str:~-1%
    set str=%str:~0,-1%
    set ""rev=%rev%%ltr2%""
    exit /b %errorlevel%


::: To remain generic, we'll be using it a lot.
:makeline <string line2Fill, string strToPadTo, string padchars>
  setlocal & set ""txt3=%~2"" & set ""padchars=%~3""
  call :strlen pad ""%padchars%""
  call :strlen len ""%txt3%""
  set /a size2=((%len%+(%pad%*2))/%pad%)
  call :padder line %size2% ""%padchars%""
  endlocal & set ""%~1=%line%""
  exit /b %errorlevel%


:getspcs <string spcs2Return, int gap>
  setlocal & set /a ""gap=%~2"" & set sp=
  for /l %%i in (1, 1, %gap%) do call :addspace
  endlocal & set ""%~1=%sp%""
  exit /b %errorlevel%
:addspace
  set nl= 
  set ""sp=%sp%%nl%""
  exit /b %errorlevel%


::: Will eventually deprecate util1 calls from ErrorHandling to caller2, sizeOfString and other sizer stuff, will be consolidated into util3 and phased out of old versions and cleared.
:strlen <int sizeOfstr2rtn, string str2measure>
  setlocal
  set str=%~2
  if not defined sizer set sizer=""%bats%\string_length.bat""
  if exist %sizer% call %sizer% size str
  if not exist %sizer% echo . & echo Can't find %sizer% & echo .
  endlocal & set ""%~1=%size%""
  exit /b %errorlevel%


::: Pads string var to passed length with sent chars.
:padder <string toRtn, int lengthOfStringReqd, string padchars>
  setlocal & set ""padchars=%~3""
  for /l %%k in (1, 1, %~2) do (
    call :loop3
    if %errorlevel% gtr 1 echo errorlevel: %errorlevel% & set /a code2=7 & exit /b %errorlevel%
  )
  endlocal & set ""%~1=%line1%""
  exit /b %errorlevel%
::: loop body for for-loop above.
:loop3
  set line1=%line1%%padchars%
  exit /b %errorlevel%



  ::: 100% -JpE-




"
FQ8PXSkE,QuickSort_v10_TL,Korotkodul,C++,Saturday 30th of September 2023 06:07:29 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = false;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}

vector<int> Partition(vector<int> aa, int xx) {
  // делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  // делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  constexpr int kInfin = 2e9;
  while (med.size() % 5 != 0) {
    med.push_back(kInfin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii : med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < (int)med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3],
                      med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (new_med.size() == 2) {
    if (new_med[0] != kInfin) {
      return new_med[0];
    }
    return new_med[1];
  }
  if (new_med.size() <= 5) {
    for (int ii : new_med) {
      if (ii != kInfin) {
        return ii;
      }
    }
    return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii : new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
  if (aa.size() == 1) {
    return aa;
  }
  if (aa.size() == 2) {
    return {min(aa[0], aa[1]), max(aa[0], aa[1])};
  }
  int piv = QuickSelect(aa);
  aa = Partition(aa, piv);
  if (sh) {
    cout << ""PERTITION DONE\n"";
    cout << ""piv = "" << piv << ""\n"";
    cout << ""aa\n"";
    for (int ii : aa) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  vector<int> bb;  //<piv
  vector<int> cc;  //==piv
  vector<int> dd;  //>piv
  for (int ii : aa) {
    if (ii < piv) {
      bb.push_back(ii);
    } else if (ii == piv) {
      cc.push_back(ii);
    } else {
      dd.push_back(ii);
    }
  }
  if (!bb.empty()) {
    bb = DQS(bb);
  }
  if (!dd.empty()) {
    dd = DQS(dd);
  }
  vector<int> res;
  for (int ii : bb) {
    res.push_back(ii);
  }
  for (int ii : cc) {
    res.push_back(ii);
  }
  for (int ii : dd) {
    res.push_back(ii);
  }
  return res;
  if (sh) {
    cout << ""res\n"";
    for (int ii : res) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii : aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
cYheru5u,News Sep30 23,Newscaster_Ned,Email,Saturday 30th of September 2023 05:58:24 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎c‎o‎m‎e‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎o‎n‎ ‎o‎u‎r‎ ‎l‎a‎s‎t‎ ‎d‎a‎y‎ ‎o‎f‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎.‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎S‎o‎u‎r‎c‎e‎s‎:‎ ‎B‎o‎w‎m‎a‎n‎ ‎T‎h‎r‎e‎w‎ ‎S‎i‎g‎n‎s‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎D‎o‎o‎r‎ ‎W‎a‎s‎ ‎E‎m‎e‎r‎g‎e‎n‎c‎y‎ ‎o‎n‎ ‎F‎l‎o‎o‎r‎
J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎:‎ ‎I‎ ‎T‎h‎o‎u‎g‎h‎t‎ ‎P‎u‎l‎l‎i‎n‎g‎ ‎F‎i‎r‎e‎ ‎A‎l‎a‎r‎m‎ ‎W‎o‎u‎l‎d‎ ‎‘‎O‎p‎e‎n‎ ‎t‎h‎e‎ ‎D‎o‎o‎r‎’‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎D‎r‎a‎f‎t‎ ‎R‎e‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎t‎o‎ ‎E‎x‎p‎e‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎f‎r‎o‎m‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎–‎ ‎J‎a‎s‎o‎n‎ ‎M‎i‎l‎l‎e‎r‎:‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎'‎C‎o‎g‎n‎i‎t‎i‎v‎e‎ ‎D‎e‎c‎l‎i‎n‎e‎'‎ ‎W‎i‎l‎l‎ ‎o‎n‎l‎y‎ ‎W‎o‎r‎s‎e‎n‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎S‎o‎u‎r‎c‎e‎s‎:‎ ‎J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎T‎h‎r‎e‎w‎ ‎S‎i‎g‎n‎s‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎D‎o‎o‎r‎ ‎W‎a‎s‎ ‎E‎m‎e‎r‎g‎e‎n‎c‎y‎ ‎O‎n‎l‎y‎ ‎o‎n‎ ‎F‎l‎o‎o‎r‎ ‎B‎e‎f‎o‎r‎e‎ ‎P‎u‎l‎l‎i‎n‎g‎ ‎F‎i‎r‎e‎ ‎A‎l‎a‎r‎m‎
C‎l‎o‎c‎k‎ ‎r‎o‎m‎ ‎t‎o‎p‎ ‎r‎i‎g‎h‎t‎:‎ ‎R‎e‎p‎.‎ ‎J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎(‎D‎-‎N‎Y‎)‎ ‎(‎t‎o‎p‎ ‎l‎e‎f‎t‎)‎ ‎w‎i‎t‎h‎ ‎p‎h‎o‎t‎o‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎ ‎f‎i‎r‎e‎ ‎a‎l‎a‎r‎m‎ ‎h‎e‎ ‎i‎s‎ ‎a‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎p‎u‎l‎l‎i‎n‎g‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎p‎h‎o‎t‎o‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎ ‎b‎y‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎ ‎p‎o‎l‎i‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎e‎r‎s‎o‎n‎ ‎p‎u‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎ ‎a‎l‎a‎r‎m‎ ‎(‎b‎o‎t‎t‎o‎m‎ ‎r‎i‎g‎h‎t‎)‎.‎ ‎(‎P‎h‎o‎t‎o‎s‎:‎ ‎A‎l‎e‎x‎ ‎W‎o‎n‎g‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎;‎ ‎B‎N‎N‎)‎
R‎e‎p‎.‎ ‎J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎(‎D‎-‎N‎Y‎)‎ ‎r‎i‎p‎p‎e‎d‎ ‎d‎o‎w‎n‎ ‎t‎w‎o‎ ‎s‎i‎g‎n‎s‎ ‎w‎a‎r‎n‎i‎n‎g‎ ‎a‎ ‎s‎e‎c‎o‎n‎d‎ ‎f‎l‎o‎o‎r‎ ‎d‎o‎o‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎C‎a‎n‎n‎o‎n‎ ‎H‎o‎u‎s‎e‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎w‎a‎s‎ ‎f‎o‎r‎ ‎e‎m‎e‎r‎g‎e‎n‎c‎y‎ ‎u‎s‎e‎ ‎o‎n‎l‎y‎ ‎b‎e‎f‎o‎r‎e‎ ‎p‎u‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎i‎r‎e‎ ‎a‎l‎a‎r‎m‎ ‎a‎n‎d‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎o‎u‎t‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎a‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎d‎o‎o‎r‎ ‎o‎n‎ ‎a‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎f‎l‎o‎o‎r‎,‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎h‎a‎s‎ ‎l‎e‎a‎r‎n‎e‎d‎ ‎e‎x‎c‎l‎u‎s‎i‎v‎e‎l‎y‎.‎

B‎i‎d‎e‎n‎'‎s‎ ‎D‎O‎E‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎E‎n‎e‎r‎g‎y‎ ‎E‎f‎f‎i‎c‎i‎e‎n‎t‎ ‎S‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎G‎a‎s‎ ‎F‎u‎r‎n‎a‎c‎e‎s‎
B‎i‎d‎e‎n‎'‎s‎ ‎D‎O‎E‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎E‎n‎e‎r‎g‎y‎ ‎E‎f‎f‎i‎c‎i‎e‎n‎t‎ ‎S‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎G‎a‎s‎ ‎F‎u‎r‎n‎a‎c‎e‎s‎
2‎5‎9‎
U‎2‎'‎s‎ ‎B‎o‎n‎o‎ ‎S‎a‎y‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎N‎o‎w‎ ‎a‎t‎ ‎'‎L‎o‎w‎ ‎E‎b‎b‎,‎'‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎U‎s‎e‎ ‎t‎h‎e‎ ‎'‎T‎-‎W‎o‎r‎d‎'‎
U‎2‎'‎s‎ ‎B‎o‎n‎o‎ ‎S‎a‎y‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎N‎o‎w‎ ‎a‎t‎ ‎'‎L‎o‎w‎ ‎E‎b‎b‎,‎'‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎U‎s‎e‎ ‎t‎h‎e‎ ‎'‎T‎-‎W‎o‎r‎d‎'‎
8‎2‎0‎
A‎ ‎m‎a‎n‎ ‎a‎n‎d‎ ‎w‎o‎m‎a‎n‎ ‎l‎y‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎k‎i‎s‎s‎i‎n‎g‎
C‎D‎C‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎1‎0‎ ‎S‎t‎a‎t‎e‎s‎ ‎w‎i‎t‎h‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎R‎a‎t‎e‎s‎ ‎o‎f‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎T‎r‎a‎n‎s‎m‎i‎t‎t‎e‎d‎ ‎D‎i‎s‎e‎a‎s‎e‎s‎
1‎5‎2‎
L‎A‎ ‎C‎r‎o‎w‎d‎ ‎C‎h‎e‎e‎r‎s‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎ ‎a‎s‎ ‎H‎e‎ ‎M‎a‎k‎e‎s‎ ‎S‎t‎o‎p‎ ‎a‎t‎ ‎I‎c‎e‎ ‎C‎r‎e‎a‎m‎ ‎S‎h‎o‎p‎ ‎
L‎A‎ ‎C‎r‎o‎w‎d‎ ‎C‎h‎e‎e‎r‎s‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎ ‎a‎s‎ ‎H‎e‎ ‎M‎a‎k‎e‎s‎ ‎S‎t‎o‎p‎ ‎a‎t‎ ‎I‎c‎e‎ ‎C‎r‎e‎a‎m‎ ‎S‎h‎o‎p‎ ‎
3‎,‎9‎5‎8‎
M‎i‎l‎l‎e‎y‎ ‎L‎a‎s‎h‎e‎s‎ ‎O‎u‎t‎ ‎a‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎F‎i‎n‎a‎l‎ ‎A‎c‎t‎ ‎o‎f‎ ‎P‎o‎l‎i‎t‎i‎c‎s‎ ‎W‎h‎i‎l‎e‎ ‎i‎n‎ ‎U‎n‎i‎f‎o‎r‎m‎
M‎i‎l‎l‎e‎y‎ ‎L‎a‎s‎h‎e‎s‎ ‎O‎u‎t‎ ‎a‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎F‎i‎n‎a‎l‎ ‎A‎c‎t‎ ‎o‎f‎ ‎P‎o‎l‎i‎t‎i‎c‎s‎ ‎W‎h‎i‎l‎e‎ ‎i‎n‎ ‎U‎n‎i‎f‎o‎r‎m‎
3‎,‎6‎8‎1‎
M‎c‎C‎a‎r‎t‎h‎y‎ ‎R‎o‎l‎l‎s‎ ‎D‎e‎e‎p‎ ‎S‎t‎a‎t‎e‎,‎ ‎P‎a‎s‎s‎e‎s‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎B‎i‎l‎l‎ ‎t‎h‎a‎t‎ ‎A‎x‎e‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎F‎u‎n‎d‎i‎n‎g‎
M‎c‎C‎a‎r‎t‎h‎y‎ ‎R‎o‎l‎l‎s‎ ‎D‎e‎e‎p‎ ‎S‎t‎a‎t‎e‎,‎ ‎P‎a‎s‎s‎e‎s‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎B‎i‎l‎l‎ ‎t‎h‎a‎t‎ ‎A‎x‎e‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎F‎u‎n‎d‎i‎n‎g‎
7‎8‎1‎
A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎o‎l‎i‎t‎i‎c‎i‎a‎n‎ ‎D‎i‎a‎n‎n‎e‎ ‎F‎e‎i‎n‎s‎t‎e‎i‎n‎,‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎f‎e‎m‎a‎l‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎B‎o‎a‎r‎d‎ ‎o‎f‎ ‎S‎u‎p‎e‎r‎v‎i‎s‎o‎r‎s‎,‎ ‎a‎t‎ ‎S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎C‎i‎t‎y‎ ‎H‎a‎l‎l‎ ‎i‎n‎ ‎S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎,‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎,‎ ‎2‎8‎t‎h‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎1‎9‎7‎1‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎B‎e‎t‎t‎m‎a‎n‎n‎ ‎A‎r‎c‎h‎i‎v‎e‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
S‎e‎n‎.‎ ‎D‎i‎a‎n‎n‎e‎ ‎F‎e‎i‎n‎s‎t‎e‎i‎n‎ ‎P‎a‎s‎s‎e‎s‎ ‎A‎w‎a‎y‎ ‎a‎t‎ ‎9‎0‎,‎ ‎G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎ ‎t‎o‎ ‎A‎p‎p‎o‎i‎n‎t‎ ‎S‎u‎c‎c‎e‎s‎s‎o‎r‎
3‎,‎6‎6‎1‎
R‎a‎n‎k‎i‎n‎g‎ ‎m‎e‎m‎b‎e‎r‎ ‎S‎e‎n‎.‎ ‎D‎i‎a‎n‎n‎e‎ ‎F‎e‎i‎n‎s‎t‎e‎i‎n‎,‎ ‎D‎-‎C‎A‎,‎ ‎C‎h‎a‎i‎r‎m‎a‎n‎ ‎L‎i‎n‎d‎s‎e‎y‎ ‎G‎r‎a‎h‎a‎m‎,‎ ‎R‎-‎S‎C‎,‎ ‎,‎ ‎a‎n‎d‎ ‎S‎e‎n‎.‎ ‎D‎i‎c‎k‎ ‎D‎u‎r‎b‎i‎n‎(‎R‎)‎,‎ ‎D‎-‎I‎L‎ ‎a‎t‎t‎e‎n‎d‎ ‎t‎h‎e‎ ‎f‎o‎u‎r‎t‎h‎ ‎d‎a‎y‎ ‎o‎f‎ ‎U‎S‎ ‎S‎e‎n‎a‎t‎e‎ ‎J‎u‎d‎i‎c‎i‎a‎r‎y‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎c‎o‎n‎f‎i‎r‎m‎a‎t‎i‎o‎n‎ ‎h‎e‎a‎r‎i‎n‎g‎s‎ ‎f‎o‎r‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎n‎o‎m‎i‎n‎e‎e‎ ‎J‎u‎d‎g‎e‎ ‎A‎m‎y‎ ‎C‎o‎n‎e‎y‎ ‎B‎a‎r‎r‎e‎t‎t‎ ‎o‎n‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎,‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎5‎,‎ ‎2‎0‎2‎0‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎T‎o‎m‎ ‎W‎i‎l‎l‎i‎a‎m‎s‎ ‎/‎ ‎P‎O‎O‎L‎ ‎/‎ ‎A‎F‎P‎)‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎T‎O‎M‎ ‎W‎I‎L‎L‎I‎A‎M‎S‎/‎P‎O‎O‎L‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
D‎i‎a‎n‎n‎e‎ ‎F‎e‎i‎n‎s‎t‎e‎i‎n‎ ‎(‎1‎9‎3‎3‎-‎2‎0‎2‎3‎)‎:‎ ‎A‎ ‎L‎i‎b‎e‎r‎a‎l‎,‎ ‎L‎e‎f‎t‎ ‎B‎e‎h‎i‎n‎d‎ ‎b‎y‎ ‎H‎e‎r‎ ‎P‎a‎r‎t‎y‎
8‎,‎9‎9‎9‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎R‎e‎p‎.‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎P‎u‎l‎l‎s‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎F‎i‎r‎e‎ ‎A‎l‎a‎r‎m‎ ‎t‎o‎ ‎D‎e‎l‎a‎y‎ ‎G‎o‎v‎t‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎V‎o‎t‎e‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎R‎e‎p‎.‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎P‎u‎l‎l‎s‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎F‎i‎r‎e‎ ‎A‎l‎a‎r‎m‎ ‎t‎o‎ ‎D‎e‎l‎a‎y‎ ‎G‎o‎v‎t‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎V‎o‎t‎e‎
4‎,‎1‎7‎4‎
F‎u‎n‎d‎i‎n‎g‎ ‎S‎t‎a‎n‎d‎o‎f‎f‎ ‎C‎u‎t‎s‎ ‎O‎f‎f‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎C‎a‎s‎h‎ ‎f‎o‎r‎ ‎F‎i‎r‎s‎t‎ ‎T‎i‎m‎e‎ ‎S‎i‎n‎c‎e‎ ‎S‎t‎a‎r‎t‎ ‎o‎f‎ ‎W‎a‎r‎
F‎u‎n‎d‎i‎n‎g‎ ‎S‎t‎a‎n‎d‎o‎f‎f‎ ‎C‎u‎t‎s‎ ‎O‎f‎f‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎C‎a‎s‎h‎ ‎f‎o‎r‎ ‎F‎i‎r‎s‎t‎ ‎T‎i‎m‎e‎ ‎S‎i‎n‎c‎e‎ ‎S‎t‎a‎r‎t‎ ‎o‎f‎ ‎W‎a‎r‎

W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎G‎u‎n‎n‎e‎d‎ ‎D‎o‎w‎n‎ ‎b‎y‎ ‎M‎a‎n‎i‎a‎c‎ ‎N‎e‎g‎r‎e‎s‎s‎ ‎R‎o‎b‎b‎e‎r‎ ‎W‎h‎i‎l‎e‎ ‎H‎e‎ ‎W‎a‎s‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎f‎r‎o‎m‎ ‎H‎e‎r‎.‎

W‎e‎l‎l‎,‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎s‎h‎e‎ ‎d‎i‎d‎n‎'‎t‎ ‎s‎t‎e‎a‎l‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎


2‎ ‎E‎m‎p‎l‎o‎y‎e‎e‎s‎ ‎a‎t‎ ‎I‎n‎d‎i‎a‎n‎a‎ ‎P‎r‎i‎s‎o‎n‎ ‎F‎i‎r‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎A‎c‎c‎i‎d‎e‎n‎t‎a‎l‎l‎y‎ ‎F‎r‎e‎e‎i‎n‎g‎ ‎N‎e‎g‎r‎o‎ ‎S‎e‎r‎i‎a‎l‎ ‎K‎i‎l‎l‎e‎r‎.‎


N‎e‎e‎g‎-‎R‎o‎w‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎e‎n‎ ‎K‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎N‎e‎g‎r‎o‎ ‎C‎e‎l‎l‎m‎a‎t‎e‎.‎


N‎i‎c‎k‎e‎l‎ ‎A‎t‎h‎l‎e‎t‎i‎c‎s‎ ‎S‎u‎p‎e‎r‎v‎i‎s‎o‎r‎ ‎S‎t‎u‎a‎r‎t‎ ‎R‎o‎b‎i‎n‎s‎o‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎G‎r‎o‎p‎i‎n‎g‎ ‎W‎o‎m‎e‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎0‎°‎
6‎%‎
E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎ ‎|‎ ‎D‎a‎y‎
9‎7‎°‎
6‎%‎
E‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎.‎ ‎H‎i‎g‎h‎ ‎9‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
4‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎2‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎1‎6‎ ‎p‎m‎
S‎a‎t‎ ‎3‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎0‎°‎
8‎%‎
E‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎1‎5‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎3‎9‎ ‎a‎m‎
S‎u‎n‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎7‎0‎°‎
8‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎7‎1‎°‎
1‎7‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎3‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎3‎°‎
/‎7‎5‎°‎
3‎5‎%‎
E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎4‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎0‎°‎
/‎7‎2‎°‎
6‎1‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎6‎9‎°‎
5‎8‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎5‎°‎
/‎6‎7‎°‎
3‎5‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎7‎°‎
/‎6‎0‎°‎
3‎6‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎9‎°‎
1‎5‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎9‎°‎
1‎0‎%‎
N‎N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎3‎°‎
/‎6‎2‎°‎
1‎3‎%‎
E‎N‎E‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎3‎°‎
1‎7‎%‎
E‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎6‎°‎
/‎6‎4‎°‎
3‎6‎%‎
E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎6‎°‎
/‎6‎4‎°‎
4‎1‎%‎
N‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎6‎°‎
/‎6‎4‎°‎
3‎4‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎F‎r‎a‎n‎k‎e‎n‎s‎t‎e‎i‎n‎'‎s‎ ‎r‎e‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎.‎ ‎🧟

.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎o‎u‎h‎o‎u‎
T‎o‎u‎h‎o‎u‎ ‎(‎東‎方‎)‎,‎ ‎o‎r‎ ‎t‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎P‎r‎o‎j‎e‎c‎t‎,‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎o‎v‎e‎r‎h‎e‎a‎d‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎g‎a‎m‎e‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎n‎d‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎b‎y‎ ‎a‎n‎ ‎a‎l‎c‎o‎h‎o‎l‎i‎c‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎e‎ ‎n‎a‎m‎e‎d‎ ‎Z‎u‎n‎.‎ ‎F‎i‎r‎s‎t‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎N‎E‎C‎ ‎P‎C‎-‎9‎8‎0‎1‎ ‎l‎i‎n‎e‎ ‎o‎f‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎s‎,‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎s‎ ‎a‎r‎e‎ ‎n‎o‎w‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎f‎o‎r‎ ‎W‎i‎n‎d‎o‎w‎s‎ ‎t‎o‎ ‎b‎e‎t‎t‎e‎r‎ ‎e‎n‎a‎b‎l‎e‎ ‎t‎o‎t‎a‎l‎ ‎w‎o‎r‎l‎d‎ ‎d‎o‎m‎i‎n‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎s‎e‎r‎i‎e‎s‎ ‎i‎s‎ ‎a‎ ‎p‎i‎o‎n‎e‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎a‎n‎m‎a‎k‎u‎ ‎s‎h‎o‎o‎t‎e‎r‎ ‎g‎e‎n‎r‎e‎ ‎o‎f‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎s‎,‎ ‎f‎e‎a‎t‎u‎r‎i‎n‎g‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎e‎l‎e‎m‎e‎n‎t‎s‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎ ‎t‎o‎ ‎a‎n‎y‎ ‎g‎o‎o‎d‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎r‎a‎p‎i‎d‎l‎y‎ ‎f‎l‎a‎s‎h‎i‎n‎g‎ ‎l‎i‎g‎h‎t‎s‎,‎ ‎M‎I‎D‎I‎ ‎m‎u‎s‎i‎c‎ ‎a‎n‎d‎ ‎l‎i‎t‎t‎l‎e‎ ‎g‎i‎r‎l‎s‎.‎ ‎T‎h‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎i‎n‎ ‎T‎o‎u‎h‎o‎u‎ ‎a‎r‎e‎ ‎v‎e‎r‎y‎ ‎s‎t‎a‎t‎i‎c‎ ‎a‎n‎d‎ ‎b‎o‎r‎i‎n‎g‎,‎ ‎y‎e‎t‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎i‎s‎,‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎,‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎m‎a‎k‎i‎n‎g‎ ‎T‎o‎u‎h‎o‎u‎ ‎t‎h‎e‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎o‎f‎ ‎T‎e‎a‎m‎ ‎F‎o‎r‎t‎r‎e‎s‎s‎ ‎2‎.‎ ‎S‎i‎n‎c‎e‎ ‎i‎t‎s‎ ‎c‎o‎n‎c‎e‎p‎t‎i‎o‎n‎,‎ ‎T‎o‎u‎h‎o‎u‎ ‎h‎a‎s‎ ‎d‎o‎n‎e‎ ‎i‎t‎s‎ ‎c‎a‎p‎i‎t‎a‎l‎i‎s‎t‎ ‎n‎a‎t‎i‎o‎n‎ ‎p‎r‎o‎u‎d‎ ‎b‎y‎ ‎r‎a‎p‎i‎d‎l‎y‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎s‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎f‎r‎a‎n‎c‎h‎i‎s‎e‎ ‎i‎n‎ ‎A‎s‎i‎a‎n‎ ‎g‎e‎e‎k‎d‎o‎m‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎u‎s‎e‎d‎ ‎t‎a‎m‎p‎o‎n‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎.‎

U‎n‎l‎i‎k‎e‎ ‎m‎o‎s‎t‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎g‎a‎m‎e‎s‎ ‎m‎a‎d‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎P‎C‎,‎ ‎T‎o‎u‎h‎o‎u‎ ‎d‎i‎s‎a‎p‎p‎o‎i‎n‎t‎i‎n‎g‎l‎y‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎r‎e‎v‎o‎l‎v‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎e‎n‎t‎a‎c‎l‎e‎ ‎r‎a‎p‎e‎,‎ ‎o‎r‎d‎i‎n‎a‎r‎y‎ ‎r‎a‎p‎e‎,‎ ‎o‎r‎ ‎e‎v‎e‎n‎ ‎d‎y‎k‎e‎ ‎r‎a‎p‎e‎ ‎(‎d‎o‎n‎'‎t‎ ‎w‎o‎r‎r‎y‎,‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎p‎l‎e‎n‎t‎y‎ ‎o‎f‎ ‎f‎a‎n‎-‎m‎a‎d‎e‎ ‎h‎e‎n‎t‎a‎i‎ ‎d‎o‎u‎j‎i‎n‎s‎ ‎t‎h‎a‎t‎ ‎h‎a‎v‎e‎ ‎s‎u‎c‎h‎ ‎c‎o‎n‎t‎e‎n‎t‎)‎.‎ ‎I‎n‎s‎t‎e‎a‎d‎,‎ ‎t‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎g‎a‎m‎e‎s‎ ‎a‎r‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎e‎d‎ ‎b‎y‎ ‎a‎n‎ ‎u‎n‎n‎a‎t‎u‎r‎a‎l‎l‎y‎ ‎w‎i‎d‎e‎ ‎s‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎u‎n‎d‎e‎r‎a‎g‎e‎ ‎g‎i‎r‎l‎s‎ ‎f‎l‎y‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎v‎a‎s‎t‎ ‎a‎n‎d‎ ‎b‎r‎e‎a‎t‎h‎t‎a‎k‎i‎n‎g‎ ‎l‎a‎n‎d‎s‎c‎a‎p‎e‎s‎,‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎l‎i‎v‎i‎n‎g‎ ‎f‎u‎c‎k‎ ‎o‎u‎t‎ ‎o‎f‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎w‎i‎t‎h‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎u‎p‎o‎n‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎c‎o‎l‎o‎u‎r‎f‎u‎l‎ ‎b‎u‎l‎l‎e‎t‎s‎,‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎a‎s‎ ‎""‎d‎a‎n‎m‎a‎k‎u‎""‎.‎

(‎(‎ ‎C‎I‎R‎N‎O‎ ‎I‎S‎ ‎T‎H‎E‎ ‎S‎T‎R‎O‎N‎G‎E‎S‎T‎ ‎F‎A‎I‎R‎Y‎ ‎I‎N‎ ‎G‎E‎N‎S‎O‎K‎Y‎O‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎g‎n‎a‎c‎e‎-‎G‎a‎s‎t‎o‎n‎ ‎P‎a‎r‎d‎i‎e‎s‎ ‎(‎1‎6‎3‎6‎–‎1‎6‎7‎3‎)‎ ‎w‎a‎s‎ ‎a‎ ‎F‎r‎e‎n‎c‎h‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎p‎r‎i‎e‎s‎t‎ ‎a‎n‎d‎ ‎s‎c‎i‎e‎n‎t‎i‎s‎t‎.‎ ‎H‎i‎s‎ ‎c‎e‎l‎e‎s‎t‎i‎a‎l‎ ‎a‎t‎l‎a‎s‎,‎ ‎e‎n‎t‎i‎t‎l‎e‎d‎ ‎G‎l‎o‎b‎i‎ ‎c‎o‎e‎l‎e‎s‎t‎i‎s‎ ‎i‎n‎ ‎t‎a‎b‎u‎l‎a‎s‎ ‎p‎l‎a‎n‎a‎s‎ ‎r‎e‎d‎a‎c‎t‎i‎ ‎d‎e‎s‎c‎r‎i‎p‎t‎i‎o‎,‎ ‎c‎o‎m‎p‎r‎i‎s‎e‎d‎ ‎s‎i‎x‎ ‎c‎h‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎n‎i‎g‎h‎t‎ ‎s‎k‎y‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎f‎i‎r‎s‎t‎ ‎p‎u‎b‎l‎i‎s‎h‎e‎d‎ ‎i‎n‎ ‎1‎6‎7‎4‎.‎ ‎T‎h‎e‎ ‎a‎t‎l‎a‎s‎ ‎u‎s‎e‎s‎ ‎a‎ ‎g‎n‎o‎m‎o‎n‎i‎c‎ ‎p‎r‎o‎j‎e‎c‎t‎i‎o‎n‎ ‎s‎o‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎p‎l‎a‎t‎e‎s‎ ‎m‎a‎k‎e‎ ‎u‎p‎ ‎a‎ ‎c‎u‎b‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎e‎l‎e‎s‎t‎i‎a‎l‎ ‎s‎p‎h‎e‎r‎e‎.‎ ‎T‎h‎e‎ ‎c‎o‎n‎s‎t‎e‎l‎l‎a‎t‎i‎o‎n‎ ‎f‎i‎g‎u‎r‎e‎s‎ ‎a‎r‎e‎ ‎d‎r‎a‎w‎n‎ ‎f‎r‎o‎m‎ ‎U‎r‎a‎n‎o‎m‎e‎t‎r‎i‎a‎,‎ ‎b‎u‎t‎ ‎w‎e‎r‎e‎ ‎c‎a‎r‎e‎f‎u‎l‎l‎y‎ ‎r‎e‎w‎o‎r‎k‎e‎d‎ ‎a‎n‎d‎ ‎a‎d‎a‎p‎t‎e‎d‎ ‎t‎o‎ ‎a‎ ‎b‎r‎o‎a‎d‎e‎r‎ ‎v‎i‎e‎w‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎k‎y‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎l‎a‎t‎e‎ ‎f‎r‎o‎m‎ ‎a‎ ‎1‎6‎9‎3‎ ‎e‎d‎i‎t‎i‎o‎n‎ ‎o‎f‎ ‎P‎a‎r‎d‎i‎e‎s‎'‎s‎ ‎a‎t‎l‎a‎s‎,‎ ‎c‎e‎n‎t‎r‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎ ‎c‎e‎l‎e‎s‎t‎i‎a‎l‎ ‎p‎o‎l‎e‎ ‎a‎n‎d‎ ‎d‎e‎p‎i‎c‎t‎i‎n‎g‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎s‎k‎y‎.‎ ‎A‎n‎ ‎i‎n‎d‎e‎x‎ ‎o‎f‎ ‎c‎o‎n‎s‎t‎e‎l‎l‎a‎t‎i‎o‎n‎s‎ ‎i‎s‎ ‎p‎r‎o‎v‎i‎d‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎a‎n‎d‎ ‎r‎i‎g‎h‎t‎ ‎m‎a‎r‎g‎i‎n‎s‎,‎ ‎i‎n‎ ‎L‎a‎t‎i‎n‎ ‎a‎n‎d‎ ‎F‎r‎e‎n‎c‎h‎,‎ ‎r‎e‎s‎p‎e‎c‎t‎i‎v‎e‎l‎y‎.‎

M‎a‎p‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎g‎n‎a‎c‎e‎-‎G‎a‎s‎t‎o‎n‎ ‎P‎a‎r‎d‎i‎e‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎s‎h‎o‎w‎e‎r‎ ‎l‎i‎k‎e‎ ‎I‎ ‎d‎o‎ ‎e‎v‎e‎r‎y‎ ‎c‎o‎u‎p‎l‎e‎ ‎o‎f‎ ‎d‎a‎y‎s‎.‎"
qbuwkWuh,тестовое_казиахмедова,korenizla,VBScript,Saturday 30th of September 2023 05:51:04 PM CDT,"Function CalculateParkingFee() As Double
    Dim aircraftType As String
    Dim startDateTime As Date
    Dim endDateTime As Date
    Dim peakMonths As String
    Dim peakTariff As Double
    Dim offPeakTariff As Double
    Dim totalFee As Double
    Dim currentDateTime As Date
    
    ' Чтение данных из ячеек
    aircraftType = Worksheets(""Sheet1"").Range(""H2"").Value
    startDateTime = Worksheets(""Sheet1"").Range(""F2"").Value + Worksheets(""Sheet1"").Range(""B2"").Value
    endDateTime = Worksheets(""Sheet1"").Range(""G2"").Value + Worksheets(""Sheet1"").Range(""C2"").Value
    peakMonths = ""June,July,September,October""
    
    ' Получение тарифов из таблицы fee_per_aircrafttype
    peakTariff = Application.WorksheetFunction.VLookup(aircraftType, Worksheets(""fee_per_aircrafttype"").Range(""A2:K3""), 6, False)
    offPeakTariff = Application.WorksheetFunction.VLookup(aircraftType, Worksheets(""fee_per_aircrafttype"").Range(""A2:K3""), 7, False)
    
    ' Инициализация общей стоимости
    totalFee = 0
    
    ' Начало цикла проверки каждого часа
    currentDateTime = startDateTime
    Do While currentDateTime < endDateTime
        If InStr(1, peakMonths, Format(currentDateTime, ""mmmm""), vbTextCompare) > 0 Then
            ' Это пиковый месяц
            totalFee = totalFee + peakTariff
        Else
            ' Это не-пиковый месяц
            totalFee = totalFee + offPeakTariff
        End If
        ' Прибавляем 1 час
        currentDateTime = DateAdd(""h"", 1, currentDateTime)
    Loop
    
    ' Возвращаем общую стоимость парковки
    CalculateParkingFee = totalFee
End Function"
6G5VGwkw,BWR - Changelog 30/09/23,SSilver,Diff,Saturday 30th of September 2023 05:45:45 PM CDT,"Huo-Long Heater
~ Fixed oversight with explosion caused when heavy suicides or switches teams
The Eyelander
~ Fixed health penalty changes to weapon on spawn and killing
~ Fixed speed boost on-kill not applying
+ Reduced max secondary ammo penalty to -50% (was -75%)
Bug fixing with these two weapons, as well as trying to lessen the downside on the eyelander due to it's less impactful snowballing.

The Manmelter
+ Added 100% damage bonus vs burning players
- Removed crits on burning players
This change is meant to make crits with the weapon more impactful if they properly combo it with their flames, without making long range snipes too powerful.

The Vita-Saw
- Organs capped at 4 max
The ability to stack endless amount of healing and crit swings in one's pocket was rather intense, so limiting it to only 4 heads should help encourage the medic spread the heals more.

Ullapool Caber
+ Increased damage on explosion to +15% (was +10%)
The damage was still a bit inconsistent due to fall-off, with this it should more reliably kill a light class in one hit.

The Machina
+ Projectile penetrates buildings (limited to first target up to 256 HU past building)
An attribute oft requested to help the Machina stand out more, allowing it to take care of engineers hunkered behind their sentries."
9Z7VzpQ1,QuickSort_v9,Korotkodul,C++,Saturday 30th of September 2023 05:43:01 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = false;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}


vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  constexpr int kInfin = 2e9;
  while (med.size() % 5 != 0) {
    med.push_back(kInfin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (new_med.size() == 2) {
    if (new_med[0] != kInfin) {
      return new_med[0];
    }
    return new_med[1];
  }
  if (new_med.size() <= 5) {
      for (int ii: new_med) {
        if (ii != kInfin) {
          return ii;
        }
      }
      return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
    constexpr int kInfin = 2e9;
    if (aa.size() == 1) {
      return aa;
    }
    if (aa.size() == 2) {
      return {min(aa[0], aa[1]), max(aa[0], aa[1])};
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    if (!bb.empty()) {
      bb = DQS(bb);
    }
    if (!dd.empty()) {
      dd = DQS(dd);
    }
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
FEZCVjB1,Guess the number,haxmeister,Perl,Saturday 30th of September 2023 05:19:34 PM CDT,"#!/usr/bin/env perl

use v5.38;
no warnings 'experimental';
use builtin 'trim';

my $score_board   = 10;
my $hidden_number = int(rand(20));
my $name = '';

say ""\n\tWelcome to find the Hidden Number"";

until($name){
    print ""\tPlease provide your name : "";
    $name = ucfirst(<STDIN>);
    $name = trim($name);

 }

say ""\n\tOkay $name let's start the game.\n\n
You will try entering the correct number that computer thinks.
If you nailed it, you will get the full score of 10.
if you failed to guess it, the game will end.\n"";

while (1){

    # check to see if game is already lost
    unless (score()){
        say ""GAME OVER"";
        say ""The Secret Number is : $hidden_number"";
        say """";
        exit();
    }

    # ask the player to enter a number
    print ""Type the hidden number: "";
    my $number = <STDIN>;

    # check for high guesses
    if ($number > $hidden_number){
        say ""\nIt's too high!"";
        say ""New score : "".score(-3);
        say """";
    }

    # check for low guesses
    if ($number < $hidden_number){
        say ""\nIt's too low!"";
        say ""New score :"".score(-1);
        say """";
    }

    # check to see if game is won with perfect score
    if ($number == $hidden_number and score() == 10){
        say ""YOU WON THE GAME! CONGRATULATIONS!"";
        say ""Total Score : $score_board"";
        say ""The Secret Number is : $hidden_number"";
        say """";
        exit();
    }

    # check to see if game is won with less than perfect score
    if ($number == $hidden_number){
        say ""You did a good job $name! $hidden_number is the secret number"";
        say ""Total Score : $score_board"";
        say """";
        exit();
    }

}

# receives one optional argument
# adds the argument to the $score_board
# returns the current score or 0 if there's none left
sub score($num = 0){
    $score_board += $num;
    if ($score_board < 1){
        return 0;
    }
    return $score_board;
}
"
yU0EVbZ3,Untitled,DobriyKrot,C++,Saturday 30th of September 2023 05:17:50 PM CDT,"#include <algorithm>
#include <array>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <deque>
#include <ext/pb_ds/assoc_container.hpp>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <numeric>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using namespace std;
using namespace __gnu_pbds;

#pragma GCC optimize(""Ofast"")
#pragma GCC optimize(""no-stack-protector"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
#pragma GCC optimize(""fast-math"")

template < typename firstType, typename secondType = null_type, class compare = less < firstType > >
struct sett {
    typedef tree <
    firstType,
    secondType,
    compare,
    rb_tree_tag,
    tree_order_statistics_node_update
    > _ ;
};

#define int long long
#define eb emplace_back
#define pb push_back
#define ld long double
#define f first
#define s second
#define fast() { \
    ios_base::sync_with_stdio(0); \
    cin.tie(0); \
    cout << fixed << setprecision(3); \
    cerr << fixed << setprecision(11); \
}

const int INF = 1e18 + 7;
const ld EPS = 1e-7;
const ld PI = 3.14159265358979323;
const int MOD = 1e9 + 7;
const int MAXN = 1001;


signed main() {
    fast();
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; ++i) {
            cin >> a[i];
        }
        int l = -1, r = n;
        while (l + 1 < r) {
            int m = (l + r) / 2;
            int b[n];
            for (int i = 0; i < n; ++i) {
                b[i] = a[i];
            }
            set<int> s;
            for (int i = 0; i < m; ++i) {
                s.insert(b[i]);
                b[i] = 0;
            }
            for (int i = m; i < n; ++i) {
                if (s.contains(b[i])) {
                    b[i] = 0;
                }
            }
            bool flag = true;
            for (int i = m + 1; i < n; ++i) {
                if (b[i] < b[i - 1]) {
                    flag = false;
                }
            }
            if (flag) {
                r = m;
            } else {
                l = m;
            }
        }
        set<int> s;
        for (int i = 0; i < r; ++i) {
            s.insert(a[i]);
        }
        cout << s.size() << '\n';
    }
    return 0;
}"
J4NV4jfi,MOK layout Chimiini,dksetiavan,YAML,Saturday 30th of September 2023 05:16:14 PM CDT,"{
""title"":""Chimiini"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""قوْرتيَُِپ"",
""اسدفڠهجكلۢ"",
""[SHIFT]زڭچࢺبنم[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""أإّࢹࢸئًٌٍࢷ"",
""ءشذڤغحخثڷۨ"",
""[SHIFT]ةعصضࢶطظ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
wNsppp9Y,QuickSort_v8,Korotkodul,C++,Saturday 30th of September 2023 05:16:06 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 0;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

int infin = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(infin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  } else if (new_med.size() == 2) {
    if (new_med[0] != infin) {
      return new_med[0];
    }
    return new_med[1];
  } else if (new_med.size() <= 5) {
      for (int ii: new_med) {
        if (ii != infin) {
          return ii;
        }
      }
      return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (aa.size() == 2) {
      return {min(aa[0], aa[1]), max(aa[0], aa[1])};
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    if (!bb.empty()) {
      bb = DQS(bb);
    }
    if (!dd.empty()) {
      dd = DQS(dd);
    }
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
zLihtq3k,QuickSort_v7,Korotkodul,C++,Saturday 30th of September 2023 05:11:37 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 0;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = get_med(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  } else if (new_med.size() == 2) {
    if (new_med[0] != inf) {
      return new_med[0];
    }
    return new_med[1];
  } else if (new_med.size() <= 5) {
      for (int ii: new_med) {
        if (ii != inf) {
          return ii;
        }
      }
      return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (aa.size() == 2) {
      return {min(aa[0], aa[1]), max(aa[0], aa[1])};
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    if (!bb.empty()) {
      bb = DQS(bb);
    }
    if (!dd.empty()) {
      dd = DQS(dd);
    }
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

7
10 3 4 5 11 2 1
*/
"
DDkX01VQ,QuickSort_v6,Korotkodul,C++,Saturday 30th of September 2023 04:59:54 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 0;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = get_med(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  } else if (new_med.size() == 2) {
    return new_med[1];
  } else if (new_med.size() <= 5) {
      return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (aa.size() == 2) {
      return {min(aa[0], aa[1]), max(aa[0], aa[1])};
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    if (!bb.empty()) {
      bb = DQS(bb);
    }
    if (!dd.empty()) {
      dd = DQS(dd);
    }
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

6
10 3 4 5 1 2
*/
"
Z9wKND56,QuickSort_v5,Korotkodul,C++,Saturday 30th of September 2023 04:53:21 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 1;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = get_med(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  } else if (new_med.size() == 2) {
    return new_med[1];
  } else if (new_med.size() <= 5) {
      return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (aa.size() == 2) {
      return {min(aa[0], aa[1]), max(aa[0], aa[1])};
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    bb = DQS(bb);
    dd = DQS(dd);
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
*/
"
vjmZDHUV,QuickSort_v4,Korotkodul,C++,Saturday 30th of September 2023 04:47:58 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 1;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    int kk = get_med(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    bb = DQS(bb);
    dd = DQS(dd);
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
*/
"
xTHYG1eD,CRINGE,sheptikhinva,Python,Saturday 30th of September 2023 04:45:10 PM CDT,"import configparser
import os
import random
import sqlite3
import uuid

import telebot
from telebot import types

config = configparser.ConfigParser()
config.read(""settings.ini"", encoding=""utf-8"")

token = config['main']['token']
bot = telebot.TeleBot(token)


class Ad:
    def __init__(self):
        self.id = None
        self.chat_id = None
        self.username = None
        self.type = None
        self.name = None
        self.description = None
        self.price = None
        self.city = None
        self.pictures_key = None
        self.pictures = []

    def fill_with_array(self, data):
        self.chat_id = data[0]
        self.name = data[1]
        self.description = data[2]
        self.type = data[3]
        self.price = data[4]
        self.city = data[5]
        self.username = data[6]
        self.pictures_key = data[7]
        self.id = data[8]

    def create_ad(self, message):
        self.chat_id = message.from_user.id
        self.id = random.randint(1, 999999)
        self.username = message.from_user.username
        self.type = message.text

    def set_name(self, name):
        self.name = name

    def set_description(self, description):
        self.description = description

    def set_price(self, price):
        self.price = price

    def add_picture(self, picture):
        self.pictures.append(picture)

    def set_city(self, city):
        self.city = city

    def print_ad(self):
        return (f""{self.type} {self.name}\n""
                f""{self.description}\n\n""
                f""Цена: {self.price}\n""
                f""Город: {self.city}\n""
                f""Автор: @{self.username}"")

    def add_to_db(self):
        self.pictures_key = random.randint(1, 999999)
        try:
            sqlite_connection = sqlite3.connect('data.db')
            cursor = sqlite_connection.cursor()
            print(""SQLite успешно подключен"")

            sqlite_request = """"""INSERT INTO moderatingAds (chat_id, name, description, type, price, city, author, pictures_key, id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);""""""
            data_tuple = (
                self.chat_id, self.name, self.description, self.type, self.price, self.city, self.username,
                self.pictures_key,
                self.id)

            cursor.execute(sqlite_request, data_tuple)
            sqlite_connection.commit()
            print(""Запрос успешно выполнен"")

            sqlite_request = """"""INSERT INTO pictures (ad_key, picture_path) VALUES (?, ?)""""""
            for picture in self.pictures:
                data_tuple = (self.pictures_key, picture)
                cursor.execute(sqlite_request, data_tuple)
                sqlite_connection.commit()
                print(""Запрос успешно выполнен"")

            send_to_moderation(self.id)

        except sqlite3.Error as error:
            print(""Ошибка SQLite: "", error)
        finally:
            if sqlite_connection:
                sqlite_connection.close()
                print(""Соединение с SQLite закрыто"")


global answers
answers = {}


def generate_name():
    return str(uuid.uuid4()) + '.jpg'


def check_message(text):
    if text.lower().__contains__(""accept"") or text.lower().__contains__(""decline"") or text.lower().__contains__(
            ""куплю"") or text.lower().__contains__(""продам"") or text.lower().__contains__(
        ""check_ads"") or text.lower().__contains__(""admin""):
        return False
    else:
        return True


@bot.message_handler(commands=['admin'])
def admin_access(message):
    args = message.text.split()
    if len(args) > 1 and args[1] == config['main']['key']:
        try:
            sqlite_connection = sqlite3.connect('data.db')
            cursor = sqlite_connection.cursor()
            print(""SQLite успешно подключен"")

            sqlite_request = """"""INSERT INTO admins (chat_id, username, key) VALUES (?, ?, ?);""""""
            data_tuple = (message.from_user.id, message.from_user.username, args[1])
            cursor.execute(sqlite_request, data_tuple)
            sqlite_connection.commit()
            print(""Запрос успешно выполнен"")
            bot.send_message(message.chat.id, ""Вы успешно добавлены в список администраторов"")

            cursor.close()
        except sqlite3.Error as error:
            print(""Ошибка SQLite: "", error)
        finally:
            if sqlite_connection:
                sqlite_connection.close()
                print(""Соединение с SQLite закрыто"")
    else:
        bot.send_message(message.chat.id, ""Ошибка. Ключ не совпадает."")


def send_to_moderation(ad_id):
    try:
        sqlite_connection = sqlite3.connect('data.db')
        cursor = sqlite_connection.cursor()
        print(""SQLite успешно подключен"")

        sqlite_request = """"""SELECT chat_id FROM admins;""""""
        cursor.execute(sqlite_request)
        record = cursor.fetchall()
        print(""Запрос успешно выполнен"")
        if record is not None:
            for chat_id in record:
                sqlite_request = """"""SELECT * FROM moderatingAds WHERE id = ?;""""""
                cursor.execute(sqlite_request, (ad_id,))
                ad = Ad()
                ad.fill_with_array(cursor.fetchone())

                sqlite_request = """"""SELECT picture_path FROM pictures WHERE ad_key = ?""""""
                cursor.execute(sqlite_request, (ad.pictures_key,))
                answer = cursor.fetchall()
                for tup in answer:
                    ad.pictures.append(tup[0])

                bot.send_message(chat_id[0], f""Объявление № `{ad.id}`"", parse_mode=""markdown"")

                media_group = []
                opened_pictures = []
                caption = ad.print_ad()

                for i in range(len(ad.pictures)):
                    opened_pictures.append(open(ad.pictures[i], 'rb'))
                    if i == 0:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i], caption=caption))
                    else:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i]))

                bot.send_media_group(chat_id[0], media=media_group)

                for picture in opened_pictures:
                    picture.close()

        cursor.close()

    except sqlite3.Error as error:
        print(""Ошибка SQLite: "", error)
    finally:
        if sqlite_connection:
            sqlite_connection.close()
            print(""Соединение с SQLite закрыто"")


@bot.message_handler(commands=['check_ads'])
def check_ads(message):
    try:
        sqlite_connection = sqlite3.connect('data.db')
        cursor = sqlite_connection.cursor()
        print(""SQLite успешно подключен"")

        sqlite_request = """"""SELECT * FROM admins WHERE chat_id = ?;""""""
        cursor.execute(sqlite_request, (message.from_user.id,))
        record = cursor.fetchone()
        print(""Запрос успешно выполнен"")
        if record is not None:
            sqlite_request = """"""SELECT * FROM moderatingAds;""""""
            cursor.execute(sqlite_request)
            answer = cursor.fetchall()
            if len(answer) == 0:
                bot.send_message(message.from_user.id, ""В данный момент все объявления рассмотрены"")
                return

            for tup in answer:
                ad = Ad()
                ad.fill_with_array(tup)

                sqlite_request = """"""SELECT picture_path FROM pictures WHERE ad_key = ?""""""
                cursor.execute(sqlite_request, (ad.pictures_key,))
                answer = cursor.fetchall()
                for tup in answer:
                    ad.pictures.append(tup[0])

                bot.send_message(message.from_user.id, f""Объявление № `{ad.id}`"", parse_mode=""markdown"")

                media_group = []
                opened_pictures = []
                caption = ad.print_ad()

                for i in range(len(ad.pictures)):
                    opened_pictures.append(open(ad.pictures[i], 'rb'))
                    if i == 0:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i], caption=caption))
                    else:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i]))

                bot.send_media_group(message.from_user.id, media=media_group)

                for picture in opened_pictures:
                    picture.close()


        else:
            bot.send_message(message.chat.id, ""Вам недоступна эта функция"")

    except sqlite3.Error as error:
        print(""Ошибка SQLite: "", error)

    finally:
        if sqlite_connection:
            sqlite_connection.close()
            print(""Соединение с SQLite закрыто"")


@bot.message_handler(commands=['accept', 'decline'])
def moderate_ad(message):
    args = message.text.split()
    if len(args) < 2:
        bot.send_message(message.from_user.id, ""Не указан ID объявления"")
        return
    try:
        sqlite_connection = sqlite3.connect('data.db')
        cursor = sqlite_connection.cursor()
        print(""SQLite успешно подключен"")

        sqlite_request = """"""SELECT * FROM admins WHERE chat_id = ?;""""""
        cursor.execute(sqlite_request, (message.from_user.id,))
        record = cursor.fetchone()
        print(""Запрос успешно выполнен"")
        if record is not None:
            sqlite_request = """"""SELECT * FROM moderatingAds WHERE id = ?;""""""
            cursor.execute(sqlite_request, (args[1],))
            request = cursor.fetchone()
            if request is None:
                bot.send_message(message.from_user.id, ""ID не найден в списке модерируемых объявлений"")
                if sqlite_connection:
                    sqlite_connection.close()
                    print(""Соединение с SQLite закрыто"")
                return

            ad = Ad()
            ad.fill_with_array(request)

            sqlite_request = """"""SELECT picture_path FROM pictures WHERE ad_key = ?""""""
            cursor.execute(sqlite_request, (ad.pictures_key,))
            answer = cursor.fetchall()
            for tup in answer:
                ad.pictures.append(tup[0])

            if args[0] == '/accept':
                media_group = []
                opened_pictures = []
                caption = ad.print_ad()

                for i in range(len(ad.pictures)):
                    opened_pictures.append(open(ad.pictures[i], 'rb'))
                    if i == 0:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i], caption=caption))
                    else:
                        media_group.append(types.InputMediaPhoto(opened_pictures[i]))

                bot.send_media_group(config['main']['channel_id'], media=media_group)
                bot.send_message(message.from_user.id, f""Объявление {ad.id} одобрено."")
                bot.send_message(ad.chat_id, ""Ваше объявление было одобрено"")

                for picture in opened_pictures:
                    picture.close()

            elif args[0] == '/decline':
                bot.send_message(message.from_user.id, f""Объявление {ad.id} отклонено."")
                bot.send_message(ad.chat_id, ""Ваше объявление было отклонено"")

            sqlite_request = """"""DELETE FROM moderatingAds WHERE id = ?;""""""
            cursor.execute(sqlite_request, (args[1],))
            sqlite_connection.commit()

            sqlite_request = """"""DELETE FROM pictures WHERE ad_key = ?""""""
            cursor.execute(sqlite_request, (ad.pictures_key,))
            sqlite_connection.commit()
            cursor.close()

            for picture in ad.pictures:
                os.remove(picture)

        else:
            bot.send_message(message.chat.id, ""Вам недоступна эта функция"")

    except sqlite3.Error as error:
        print(""Ошибка SQLite: "", error)

    finally:
        if sqlite_connection:
            sqlite_connection.close()
            print(""Соединение с SQLite закрыто"")


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.from_user.id, ""Добрый день, в этом боте вы можете прислать свое объявление."")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton(""Продам"")
    item2 = types.KeyboardButton(""Куплю"")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, 'Выберите тип объявления', reply_markup=markup)


@bot.message_handler(content_types='text')
def create_ad(message):
    if message.text == ""Продам"" or message.text == ""Куплю"":
        if message.from_user.username is None:
            bot.send_message(message.from_user.id, ""Вы не указали свой username в настройках Telegram. Пожалуйста, создайте себе username и попробуйте снова."")
            return
        answers[message.from_user.id] = Ad()
        answers[message.from_user.id].create_ad(message=message)
        msg = bot.send_message(message.chat.id, ""Введите название товара"")
        bot.register_next_step_handler(msg, ad_name)
    else:
        return


def ad_name(message):
    if not check_message(message.text):
        bot.send_message(message.from_user.id, ""Обнаружено запретное слово. Процесс создания сброшен."")
        return
    answers[message.from_user.id].set_name(message.text)
    msg = bot.send_message(message.chat.id, ""Введите цену товара"")
    bot.register_next_step_handler(msg, ad_price)


def ad_price(message):
    if not check_message(message.text):
        bot.send_message(message.from_user.id, ""Обнаружено запретное слово. Процесс создания сброшен."")
        return
    answers[message.from_user.id].set_price(message.text)
    msg = bot.send_message(message.chat.id, ""Описание товара"")
    bot.register_next_step_handler(msg, ad_description)


def ad_description(message):
    if not check_message(message.text):
        bot.send_message(message.from_user.id, ""Обнаружено запретное слово. Процесс создания сброшен."")
        return
    answers[message.from_user.id].set_description(message.text)
    msg = bot.send_message(message.chat.id, ""В каком городе вы находитесь?"")
    bot.register_next_step_handler(msg, ad_city)


def ad_city(message):
    if not check_message(message.text):
        bot.send_message(message.from_user.id, ""Обнаружено запретное слово. Процесс создания сброшен."")
        return
    answers[message.from_user.id].set_city(message.text)
    msg = bot.send_message(message.chat.id,
                       ""Пожалуйста, отправьте картинку товара (*ЕСЛИ ФОТОГРАФИЙ НЕСКОЛЬКО, ЗАГРУЖАЙТЕ ПО ОДНОЙ*)"", parse_mode=""markdown"")
    bot.register_next_step_handler(msg, ad_photo)


@bot.message_handler(content_types=['photo'])
def ad_photo(message):
    if message.from_user.id not in answers.keys():
        return
    if message.text is not None and message.text.lower().__contains__(""готово""):
        ad_preview(message)
        return
    if len(answers[message.from_user.id].pictures) >= 10:
        msg = bot.send_message(message.from_user.id, ""Вы добавили максимальное количество фотографий."")
        ad_preview(message)
        return
    if message.photo is None:
        msg = bot.send_message(message.from_user.id, ""Вы отправили не фото, попробуйте снова."")
        bot.register_next_step_handler(msg, ad_photo)
        return
    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    file_name = 'pictures/' + generate_name()
    with open(file_name, 'wb') as new_file:
        new_file.write(downloaded_file)
    answers[message.from_user.id].add_picture(file_name)
    msg = bot.send_message(message.chat.id,
                           ""Если хотите добавить ещё фото - отправьте картинку. Если вы добавили достаточно, то напишите \""Готово\"" (до 10 фото)"")
    bot.register_next_step_handler(msg, ad_photo)


def ad_preview(message):
    media_group = []
    opened_pictures = []
    caption = answers[message.from_user.id].print_ad()
    for i in range(len(answers[message.from_user.id].pictures)):
        opened_pictures.append(open(answers[message.from_user.id].pictures[i], 'rb'))
        if i == 0:
            media_group.append(types.InputMediaPhoto(opened_pictures[i], caption=caption))
        else:
            media_group.append(types.InputMediaPhoto(opened_pictures[i]))

    bot.send_media_group(message.chat.id, media=media_group)

    for picture in opened_pictures:
        picture.close()

    msg = bot.send_message(message.chat.id,
                           ""Напишите \""Да\"", если хотите отправить объявление на модерацию или \""Нет\"" для отмены"")
    bot.register_next_step_handler(msg, ad_confirm)


def ad_confirm(message):
    if message.text.lower().__contains__(""да""):
        answers[message.from_user.id].add_to_db()
        bot.send_message(message.from_user.id, ""Ваше объявление отправлено на модерацию."")
    elif message.text.lower().__contains__(""нет""):
        bot.send_message(message.chat.id, ""Ок, отмена."")
    answers.pop(message.from_user.id)


bot.infinity_polling()"
8hJxeWMU,webinar-python-exam-review-2023-09-30,jspill,Python,Saturday 30th of September 2023 04:43:20 PM CDT,"# Exam Review 2023 Sept 30

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# Prac Tests, Ch 33 and 34
# Use Submit Mode and get them to 100%!!! And PAY ATTENTION to the unit tests!

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Operators
# = # assigns
# == # asking, comparison... conditional expression
# +
# -
# *
# /
# // # floor division... the last even division?
# % # modulo... whole number remainder... how many whole things didn't fit since the last even division?
# <
# >
# <=
# >=
# += # x += 1 --> x = x + 1
# -=
# ** # raise to a power... math.pow()... or built-in pow()
# !=
# # keywords
# in # if x in myList
# not # if not x in myList
# and
# or # any one True means the combo is True... limit OR to 2-3 conditions

# Common Data Types/Classes
# int
# float
# bool # True, False
# str # "" "" most important type?
# list # [ ]
# dict # {key: value}... myDict[key]
# tuple # ( ) immutable, Python sees x,y,z as (x,y,z) -> return a,b,c --> return (a,b,c)
# set # { } # no duplicates, unordered --> no index, no slicing, no sorting
# range # range()... range(0, 5, 1)... [0, 1, 2, 3, 4]
# file # open()...  f.read(), f.readlines(), f.write()

# Comp 2
# Control Flow! The HOW stuff
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - an IF that repeats
# FOR - looping over a container, or a known number of times... hence range()
# Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # myDict[key]... for k, v in myDict.items():
# for num in range(0, 7):
# for i in range(0, len(myList)): # myList[i]
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing vs calling
# modular... a function has ONE job
# parameters are special variable holding things sent into the function
# parameters vs arguments
#
# def someFunction(x, y):
#     return x // y
#
# if __name__ == ""__main__"":
#     # inside this block we're answering this specific question
#     myInput = int(input())
#     myOther = int(input())
#     # myNum = someFunction(myInput, myOther)
#     # print(myNum)
#     print(someFunction(myInput, myOther))

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# # CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# BUILT-IN FUNCTIONS
# input()
# print()
# len()
# min()
# max()
# sum()
# list()
# int()
# str()
# dict()
# range()
# set()
# tuple()
# type() # print(type(x).__name__)
# enumerate()
# open()
# round() # cousins math.ceil() and math.floor()
# help() # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRINGS
# be able to refer to indices, and slice
# myStr = ""abc""
# revStr = myStr[::-1]   # mySlice[start:stop:step]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" "" # space from spacebar
# # a lot of Unicode spaces
# \n # new line return... print(end=""\n"")
# \t # tab
# \r # carriage return

# STRING METHODS
# myStr.format() # ""stuff I want to put together {}"".format(var)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# "" "".join(listOfStrings)
# myStr.replace(subStr, newSubStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.find(subStr) # return index (int) where found, or -1 on failure
# myStr.count(subStr) # return int of how many times found
# case: myStr.lower(), myStr.upper(). myStr.title(), myStr.capitalize()
# is/Boolean: myStr.islower(), .isupper(), .isspace(), .isalpha(), .isnumeric(), .isdigit(), .isalnum()
# myStr.startswith(subStr), myStr.endswith(subStr)
#

# LISTS
# be able to ref by index, slice

# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # pop by index...
# myList.remove(item) # remove by value
# myList.clear()
# # other
# myList.count(item) # return int count
# myList.sort() # does not return a value!
# myList.reverse() # does not return a value!
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []... then you don't need DICT methods
# myDict[key] # retrieve the value for that key
# myDict[key] = value # assign a new value to that key

# DICT METHODS
# myDict.keys()
# myDict.values()
# myDict.items() # for key, value in myDict.items()

# if var in myDict: # only looks at keys

# MODULES

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x.yz)
# math.floor(x.yz)
# math.pow(x, y)
# math.sqrt(x)
# math.fabs(x) # built-in abs()
# math.pi
# math.e

# PARTIAL IMPORT
from math import floor # floor(x.yz)
from math import sqrt, factorial # factorial(x), sqrt(x.y)
from math import * # sqrt(x.yz)

# ALIAS IMPORT
import math as m # m.floor(x)

# FILES
# READ MODE

with open(""test.txt"", ""r"") as f:
    # f.read() # returns whole file as one big string
    # f.readlines() # returns a list of strings, line by line
    # f.write() # take one str arg and write into file
    contents = f.readlines()
# print(contents)
# for line in contents:
#     line = line.strip()
#     print(line)

# CSV Module
# csv.reader()
import csv
with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
    contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"") for a .tsv
# print(contents[0:20])

# WRITE MODE
with open(""output_data27.csv"", ""w"") as f2:
    for row in contents:
        # write out a file with every row where the last name starts with D
        # last name is at row[2]
        # if row[2].startswith(""d"") or row[2].startswith(""D""):  # if row[2][0].lower() == ""d"":
        if row[2].lower().startswith(""d""):
            # we've found data to write
            f2.write("","".join(row) + ""\n"")


# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3: # check to see if last line has a \n, follow suit in yours
#     print(f3.readlines())
with open(""append_to_this.txt"", ""a"") as f3:
    addMe = ""Pippin""
    f3.write(f""\n{addMe}"")"
j6i1pytN,OWOP / OurWorldOfPixels Imagegenerator,scar17off,JavaScript,Saturday 30th of September 2023 04:40:56 PM CDT,"// ==UserScript==
// @name         imagegenerator
// @namespace    http://tampermonkey.net/
// @version      1.0.0
// @license      MIT
// @description  A script allows you to generate images and paste them with a mod tool.
// @author       scar17off
// @match        *://ourworldofpixels.com/*
// @match        *://augustberchelmann.com/owop/*
// @match        *://ywop.scar17off.repl.co/*
// @match        *://owop.scar17off.repl.co/*
// @icon         https://www.google.com/s2/favicons?domain=ourworldofpixels.com
// @grant        none
// @namespace    none
// ==/UserScript==

(function() {
    ""use strict"";

    var I = 6666666;
	if(location.host == ""ourworldofpixels.com"") I = 0; // OWOP is using different event IDs
	const events = {
		""loaded"": I + 1,
		""init"": I + 2,
		""tick"": I + 3,
		""misc"": {
			""toolsRendered"": I + 4,
			""toolsInitialized"": I + 5,
			""logoMakeRoom"": I + 6,
			""worldInitialized"": I + 7,
			""windowAdded"": I + 8,
			""captchaToken"": I + 9,
			""loadingCaptcha"": I + 10
		},
		""renderer"": {
			""addChunk"": I + 11,
			""rmChunk"": I + 12,
			""updateChunk"": I + 13
		},
		""camera"": {
			""moved"": I + 14,
			""zoom"": I + 15
		},
		""net"": {
			""connecting"": I + 16,
			""connected"": I + 17,
			""disconnected"": I + 18,
			""playerCount"": I + 19,
			""chat"": I + 20,
			""devChat"": I + 21,
			""world"": {
				""leave"": I + 22,
				""join"": I + 23,
				""joining"": I + 24,
				""setId"": I + 25,
				""playersMoved"": I + 26,
				""playersLeft"": I + 27,
				""tilesUpdated"": I + 28,
				""teleported"": I + 29
			},
			""chunk"": {
				""load"": I + 30,
				""unload"": I + 31,
				""set"": I + 32,
				""lock"": I + 33,
				""allLoaded"": I + 34
			},
			""sec"": {
				""rank"": I + 35
			},
			""maxCount"": I + 36,
			""donUntil"": I + 37
		}
	};
	
	window.onload = () => OWOP.once(events.net.world.join, () => {
        if(!OWOP.tools) OWOP.tools = OWOP.tool;
        if(!OWOP.tool) OWOP.tool = OWOP.tools;

        OWOP.windowSys.addWindow(new OWOP.windowSys.class.window(""Image generator"", {
			closeable: false
		}, function(win) {
            let container = win.container;
			container.parentNode.style.width = ""260px"";
			container.parentNode.style.height = ""500px"";
			container.style = ""margin: 0 -5px -5px -5px; -o-border-image: url(/img/window_in.png) 5 repeat;"";
			container.parentNode.style[""position""] = ""absolute"";
			container.parentNode.style[""pointer-events""] = ""initial"";

            const generatePrompt = OWOP.util.mkHTML('input', { style: ""width: -webkit-fill-available;"", placeholder: ""Prompt"" });
            
            const widthLabel = OWOP.util.mkHTML('p2', { innerText: ""512"", style: ""color: #fff;"" });
            const widthInput = OWOP.util.mkHTML('input', { type: ""range"", min: 128, max: 1024, value: 512, step: 16, style: ""width: -webkit-fill-available;"", oninput: function() {
                widthLabel.innerText = widthInput.value;
            }});

            const heightLabel = OWOP.util.mkHTML('p2', { innerText: ""512"", style: ""color: #fff;"" });
            const heightInput = OWOP.util.mkHTML('input', { type: ""range"", min: 128, max: 1024, value: 512, step: 16, style: ""width: -webkit-fill-available;"", oninput: function() {
                heightLabel.innerText = heightInput.value;
            }});

            const isNsfw = OWOP.util.mkHTML('input', { type: ""checkbox"" });

            const generateButton = OWOP.util.mkHTML('button', { style: ""width: -webkit-fill-available;"", innerHTML: '<p2>Generate</p2>',
                onclick: async () => {
                    const prompt = generatePrompt.value;

                    if(prompt == '') return;

                    const response = await fetch('https://imagination-webui.scar17off.repl.co/generate', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            positive: prompt,
                            negative: ""blur"", // this doesn't work at all but should be set
                            service: isNsfw.checked ? ""pollinations"" : ""pixlrx"",
                            width: isNsfw.checked? widthInput.value : 512,
                            height: isNsfw.checked ? heightInput.value : 512,
                            amount: 1
                        })
                    });

                    if(!response.ok) {
                        throw new Error('Request failed');
                    }

                    const responseBody = await response.json();

                    for (let i in responseBody) {
                        const imgElement = document.createElement('img');
                        imgElement.src = responseBody[i];
                        imgElement.style.width = ""50%"";

                        imgElement.oncontextmenu = (event) => {
                            event.preventDefault();
                            imgElement.remove();
                        };

                        imgElement.onclick = () => {
                            const img = new Image();
                            img.src = responseBody[i];

                            img.onload = function() {
                                const canvas = document.createElement('canvas');
                                const ctx = canvas.getContext('2d');

                                canvas.width = widthInput.value;
                                canvas.height = heightInput.value;

                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

                                var paste = OWOP.tools.allTools['ai paste'];
                                paste.extra.canvas = canvas;
                                var oldSelect = paste.events.select;
                                paste.events.select = function () {
                                    paste.events.select = oldSelect;
                                };

                                document.getElementById('tool-ai paste').click();
                            };
                        };

                        win.addObj(imgElement);
                    };
                }
            });

            win.addObj(generatePrompt);

            win.addObj(widthLabel);
            win.addObj(widthInput);
            win.addObj(OWOP.util.mkHTML('br'));
            win.addObj(heightLabel);
            win.addObj(heightInput);

            win.addObj(generateButton);

            win.addObj(isNsfw);
            win.addObj(OWOP.util.mkHTML('p2', { innerText: ""NSFW"", style: ""color: #fff;"" }));
            
            win.addObj(OWOP.util.mkHTML('br'));
        }).move(165, 35));

        function absMod(n1, n2) {
            return (n1 % n2 + n2) % n2;
        };

        OWOP.tools.addToolObject(new OWOP.tools.class('AI Paste', OWOP.cursors.paste, OWOP.fx.player.NONE, OWOP.RANK.MODERATOR, function(tool) {
            tool.extra.sendQueue = [];

            tool.setFxRenderer(function (fx, ctx, time) {
                var z = OWOP.camera.zoom;
                var x = fx.extra.player.x;
                var y = fx.extra.player.y;
                var fxx = Math.floor(x / 16) - OWOP.camera.x;
                var fxy = Math.floor(y / 16) - OWOP.camera.y;

                var q = tool.extra.sendQueue;
                if (q.length) {
                    var cs = 16;
                    ctx.strokeStyle = ""#000000"";
                    ctx.globalAlpha = 0.8;
                    ctx.beginPath();
                    for (var i = 0; i < q.length; i++) {
                        ctx.rect((q[i].x * cs - OWOP.camera.x) * z, (q[i].y * cs - OWOP.camera.y) * z, z * cs, z * cs);
                    }
                    ctx.stroke();
                    return 0;
                }

                if (tool.extra.canvas && fx.extra.isLocalPlayer) {
                    ctx.globalAlpha = 0.5 + Math.sin(time / 500) / 4;
                    ctx.strokeStyle = ""#000000"";
                    ctx.scale(z, z);
                    ctx.drawImage(tool.extra.canvas, fxx, fxy);
                    ctx.scale(1 / z, 1 / z);
                    ctx.globalAlpha = 0.8;
                    ctx.strokeRect(fxx * z, fxy * z, tool.extra.canvas.width * z, tool.extra.canvas.height * z);
                    return 0;
                }
            });

            var paint = function paint(tileX, tileY) {
                var tmpBuffer = new Uint32Array(16 * 16);
                var ctx = tool.extra.canvas.getContext(""2d"");
                var dat = ctx.getImageData(0, 0, tool.extra.canvas.width, tool.extra.canvas.height);
                var u32dat = new Uint32Array(dat.data.buffer);
                var totalChunksW = Math.ceil(((0, absMod)(tileX, 16) + dat.width) / 16);
                var totalChunksH = Math.ceil(((0, absMod)(tileY, 16) + dat.height) / 16);
                var getModifiedPixel = function getModifiedPixel(x, y) {
                    var imgY = y - tileY;
                    var imgX = x - tileX;
                    if (imgY < 0 || imgX < 0 || imgY >= dat.height || imgX >= dat.width) {
                        var currentPixel = OWOP.world.getPixel(x, y);
                        return currentPixel ? currentPixel[2] << 16 | currentPixel[1] << 8 | currentPixel[0] : null;
                    }
                    var img = u32dat[imgY * dat.width + imgX];
                    var oldPixel = OWOP.world.getPixel(x, y);
                    var alpha = img >> 24 & 0xFF;
                    if (!oldPixel) {
                        return null;
                    }
                    var r = (1 - alpha / 255) * oldPixel[0] + alpha / 255 * (img & 0xFF);
                    var g = (1 - alpha / 255) * oldPixel[1] + alpha / 255 * (img >> 8 & 0xFF);
                    var b = (1 - alpha / 255) * oldPixel[2] + alpha / 255 * (img >> 16 & 0xFF);
                    var rgb = b << 16 | g << 8 | r;
                    return r == oldPixel[0] && g == oldPixel[1] && b == oldPixel[2] ? rgb : 0xFF000000 | rgb;
                };

                var getModifiedChunk = function getModifiedChunk(chunkX, chunkY) {
                    var modified = 0;
                    var offX = chunkX * 16;
                    var offY = chunkY * 16;
                    for (var y = 0; y < 16; y++) {
                        for (var x = 0; x < 16; x++) {
                            var color = getModifiedPixel(x + offX, y + offY);
                            if (color !== null) {
                                if (color & 0xFF000000) {
                                    ++modified;
                                }
                                tmpBuffer[y * 16 + x] = color & 0xFFFFFF;
                            } else {
                                /* Chunk not loaded... */
                                throw new Error('Couldn\'t paste -- chunk (' + chunkX + ', ' + chunkY + ') is unloaded');
                            }
                        }
                    }
                    return modified ? tmpBuffer : null;
                };
                if (!OWOP.net.protocol.setChunk) {
                    throw new Error(""Protocol doesn't support pasting"");
                }

                for (var y = Math.floor(tileY / 16), t = totalChunksH; --t >= 0; y++) {
                    for (var x = Math.floor(tileX / 16), tw = totalChunksW; --tw >= 0; x++) {
                        var newChunk = getModifiedChunk(x, y);
                        if (newChunk) {
                            if (!OWOP.net.protocol.setChunk(x, y, newChunk)) {
                                var nbuf = new Uint32Array(newChunk.length);
                                nbuf.set(newChunk);
                                tool.extra.sendQueue.push({
                                    x: x,
                                    y: y,
                                    buf: nbuf
                                });
                            }
                        }
                    }
                }
            };

            tool.setEvent('tick', function () {
                var q = tool.extra.sendQueue;
                if (q.length) {
                    if (OWOP.net.protocol.setChunk(q[0].x, q[0].y, q[0].buf)) {
                        q.shift();
                    }
                }
            });

            tool.setEvent('mousedown', function (mouse) {
                if (mouse.buttons & 1) {
                    if (tool.extra.canvas) {
                        if (tool.extra.sendQueue.length) {
                            throw new Error(""Wait until pasting finishes, or cancel with right click!"");
                        }

                        paint(mouse.tileX, mouse.tileY);
                    }
                } else if (mouse.buttons & 2) {
                    tool.extra.sendQueue = [];
                }
            });
        }));
    });
})();"
rGXZ09pZ,QuickSort_v3,Korotkodul,C++,Saturday 30th of September 2023 04:40:25 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 1;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii: med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    new_med.push_back(vv[2]);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii: new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (aa.size() == 1) {
      return aa;
    }
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""PERTITION DONE\n"";
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    bb = DQS(bb);
    dd = DQS(dd);
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
*/
"
AR4eEgKT,QuickSort_v2,Korotkodul,C++,Saturday 30th of September 2023 04:27:40 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = 1;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    new_med.push_back(vv[2]);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  return res;
}

vector<int> DQS(vector <int> aa) {
    if (sh) {
      cout << ""DQS\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    int piv = QuickSelect(aa);
    aa = Partition(aa, piv);
    if (sh) {
      cout << ""piv = "" << piv << ""\n"";
      cout << ""aa\n"";
      for (int ii: aa) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
    vector<int> bb; //<piv
    vector<int> cc; //==piv
    vector<int> dd; //>piv
    for (int ii: aa) {
      if (ii < piv) {
        bb.push_back(ii);
      } else if (ii == piv) {
        cc.push_back(ii);
      } else {
        dd.push_back(ii);
      }
    }
    bb = DQS(bb);
    dd = DQS(dd);
    vector<int> res;
    for (int ii: bb) {
      res.push_back(ii);
    }
    for (int ii: cc) {
      res.push_back(ii);
    }
    for (int ii: dd) {
      res.push_back(ii);
    }
    return res;
    if (sh) {
      cout << ""res\n"";
      for (int ii: res) {
        cout << ii << ' ';
      }
      cout << ""\n"";
    }
}





int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
*/
"
0g0MRr4E,energy drinks,bAngelov,Python,Saturday 30th of September 2023 04:19:21 PM CDT,"caffeine = list(map(int,input().split("", "")))
energy_drinks = list(map(int,input().split("", "")))
caffeine_absorbed = 0

while caffeine and energy_drinks:
    caffeine_doze = caffeine.pop()
    drink = energy_drinks.pop(0)
    doze = caffeine_doze * drink
    if doze + caffeine_absorbed <= 300:
        caffeine_absorbed += doze
    else:
        caffeine_absorbed -= 30
        if caffeine_absorbed < 0: caffeine_absorbed = 0
        energy_drinks.append(drink)

if energy_drinks:
    print(f""Drinks left: { ', '.join(map(str,energy_drinks))}"")
else:
    print(""At least Stamat wasn't exceeding the maximum caffeine."")

print(f""Stamat is going to sleep with { caffeine_absorbed } mg caffeine."")"
n7KRG8F8,QuickSort_v1,Korotkodul,C++,Saturday 30th of September 2023 04:16:27 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int get_med(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        swap(p1, p2);
      }
    }
  }
  return vv[2];
}

int inf = 2e9;

vector<int> DQS(vector<int> aa) {};

int QuickSelect(vector<int> med) {
  while (med.size() % 5 != 0) {
    med.push_back(inf);
  }
  vector<int> new_med;
  for (int ii = 0; ii < med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3], med[ii + 4]};
    new_med.push_back(vv[2]);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  return res;
}

vector<int> DQS()





int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int nn;
  cin >> nn;
  vector <int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  int xx;
  cin >> xx;
  aa = Partition(aa, xx);
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
1
*/
"
tPkLN5DR,plantillas,teslariu,Python,Saturday 30th of September 2023 04:00:04 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

# UNA CADENA ES UNA COLECCION
# TODA COLECCION ES ITERABLE
'''
#### PLANTILLA While True de una opcion #################

# Script que pide la edad y devuelve si es mayor o no
while True:
	
	###### inicio  script  ############
	
	edad = int(input('Ingrese su edad: '))

	if edad < 18:
		print(""Es menor de edad"")
		print(""lastima..."")
	else:
		print(""Es mayor de edad"")
		print(""Albricias..."")

	####   fin script ###############
	
	opcion = input(""Presione cualquier tecla para continuar ('X' para salir): "")
	if opcion.lower() == ""x"":
		print(""Gracias por utilizar este programa..."")
		break

'''
# Plantilla While True con menu

menu = """"""
Calculadora
1. Suma
2. Multiplicacion
3. Salir
""""""

while True:
	print(menu)
	opcion = input(""Seleccione una opcion: "")
	
	if opcion == ""1"":
		pass
		
	elif opcion == ""2"":
		pass
		
	elif opcion == ""3"":
		print(""Adios..."")
		break
		
	else:
		print(""opcion incorrecta..."")
	
	
	




"
bwq6k89T,Ejemplos estructuras logicas,teslariu,Python,Saturday 30th of September 2023 03:49:58 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

# UNA CADENA ES UNA COLECCION
# TODA COLECCION ES ITERABLE

""""""
# Script que pide un nombre y una edad y devuelve saludando con una 
# broma
# Ej:
# >> Ingrese su nombre: Juan
# >> Ingrese su edad: 22
# >> Hola Juan, tenés 22 años pero parecés de 44

nombre = input('Ingrese su nombre: ')
edad = int(input('Ingrese su edad: '))
print(f""Hola {nombre}, tenés {edad} años pero parecés de {edad*2}"")



# Script que pide la edad y devuelve si es mayor o no

edad = int(input('Ingrese su edad: '))

if edad < 18:
	print(""Es menor de edad"")
	print(""lastima..."")
else:
	print(""Es mayor de edad"")
	print(""Albricias..."")

# Script que pide la edad y devuelve la condición frente
edad = int(input('Ingrese su edad: '))

if 0 < edad < 16:
	print(""Voto prohibido"")

elif 16 <= edad < 18 or edad >= 70:
	print(""Voto optativo"")
	
elif 18 <= edad < 70:
	print(""Obligatorio"")
	
else:
	print(""Error en el ingreso de la edad"")
	

# bucle indefinido while
# ingresar notas de alumnos. La carga concluye con una nota -1. Luego
# calcular el promedio, la nota maxima y la minima

notas = []
while True:
	nota = int(input(""Ingrese una nota: ""))
	if 0 <= nota < 10:
		notas.append(nota)
	elif nota == -1:
		break
	else:
		print(""Error en el ingreso de la nota"")

print(f'''
Promedio: {sum(notas)/len(notas):.2f}
Nota máxima: {max(notas)}
Nota mínima: {min(notas)}
''')


# bucle definido
# imprimir los nombres de una lista en foema vertical:
lista = [""Ana"", ""Juan"", ""Carlos"", ""Victoria""]

for nombre in lista:
	print(nombre)


# script que imprime los multiplos de 5 y 7 del 1 al 1000
for n in range(5,1001,5):
	if not n % 7:
		print(n)
		
""""""
# script que pide una frase y devuelve la cantidad de consonantes, vocales
# y otros caracteres de la misma
# no considerar acentos , ""y"" siempre como consonante

vocales = 0
consonantes = 0
resto = 0
frase = input(""Ingrese una frase: "")

for caracter in frase:
	if caracter.lower() in ""aeiou"":
		vocales += 1
	
	elif caracter.lower() in ""bcdfghjklmnñpqrstvwxyz"":
		consonantes += 1
		
	else:
		resto += 1
		
print(f""""""
Vocales: {vocales}
Consonantes: {consonantes}
Otros caracteres: {resto}
"""""")
	 















	
	
	




"
jpGKXzUn,Get the selected cell in OO/LO Calc macro,drkbl,Openoffice BASIC,Saturday 30th of September 2023 03:43:13 PM CDT,"		if theSelection.SupportsService(""com.sun.star.sheet.SheetCell"")  then
			' SINGLE CELL SELECTED
			theCell=theSelection
			msgbox ""1/A Selected cell: "" + theCell.RangeAddress.StartColumn + "":"" + theCell.RangeAddress.StartRow
			oActiveCell = ThisComponent.getCurrentSelection()
			oConv = ThisComponent.createInstance(""com.sun.star.table.CellAddressConversion"")
			oConv.Address = oActiveCell.getCellAddress
			msgbox ""1/B Cell Address: "" + oConv.Address.Column + "":"" + oConv.Address.Row
		end if
		if theSelection.SupportsService(""com.sun.star.sheet.SheetCellRange"")  then
			' RANGE OF CELLS SELECTED OR SINGLE CELL SELECTED
			msgbox 	""2 Selected cell in a range: "" + theSelection.RangeAddress.StartColumn + "":"" + theSelection.RangeAddress.StartRow + "" - "" + _
					theSelection.RangeAddress.EndColumn + "":"" + theSelection.RangeAddress.EndRow
		end if
		activeSheet = ThisComponent.getCurrentController.getActiveSheet
		theCell = UsedRange(activeSheet)
		msgbox 	""Used range: "" + theCell.RangeAddress.StartColumn + "":"" + theCell.RangeAddress.StartRow + "" - "" + _
				theCell.RangeAddress.EndColumn + "":"" + theCell.RangeAddress.EndRow + ""; "" + _
				theCell.AbsoluteName

Function UsedRange(oSheet As Variant) As Variant
	REM https://ask.libreoffice.org/t/looking-for-last-row-used-programmatically/26223/5
	Dim oCursor As Variant
	oCursor = oSheet.createCursor()
	oCursor.gotoEndOfUsedArea(False)
	oCursor.gotoStartOfUsedArea(True)
	UsedRange = oCursor
End Function"
HGPRUAaZ,MP06_UF1_EJ4,Mike7GB,Java,Saturday 30th of September 2023 03:35:22 PM CDT,"// EJERCICIO 4

******************
------ MAIN ------
******************

import static com.mycompany.ejercicio4.Funciones.*;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Ejercicio4 {

    public static void main(String[] args) {

        //Declaración de variables
        Scanner scanner;
        int opcionMenu = -1;
        int opcionSubmenu = -1;
        String fileName;
        String path;
        File f;

        // Instanciación de objeto Scanner para recibir
        // input del usurio a traves del teclado
        scanner = new Scanner(System.in);

        // Mensaje inicial
        System.out.println(""Este programa le permite leer y escribir los datos de"");
        System.out.println(""personas en un archivo .txt con el nombre y la ruta que"");
        System.out.println(""usted elija. Por favor, pulse Enter para continuar"");
        scanner.nextLine();

        do {

            System.out.println(""\n****************"");
            System.out.println(""----- MENÚ -----"");
            System.out.println(""****************"");
            System.out.println("""");
            System.out.println(""1 - Escribir"");
            System.out.println(""2 - Leer"");
            System.out.println(""3 - Escribir (Bin)"");
            System.out.println(""0 - Salir"");
            System.out.println("""");
            System.out.println(""Seleccione una opción del menú escribiendo"");
            System.out.println(""el número correspondiente y pulse Enter"");

            opcionMenu = scanner.nextInt();
            scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

            switch (opcionMenu) {
                case 1:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    escribirFichero(f);

                    break;

                case 2:

                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea leer"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    if (!f.exists()) {
                        System.out.println(""\nEl archivo no existe\n"");
                        break;
                    }

                    do {
                        System.out.println(""\n****************"");
                        System.out.println(""---- SUBMENÚ ---"");
                        System.out.println(""****************"");
                        System.out.println("""");
                        System.out.println(""1 - Leer todo"");
                        System.out.println(""2 - Leer una persona"");
                        System.out.println(""0 - Volver atrás"");
                        System.out.println("""");
                        System.out.println(""Seleccione una opción del submenú escribiendo"");
                        System.out.println(""el número correspondiente y pulse Enter"");

                        opcionSubmenu = scanner.nextInt();
                        scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

                        switch (opcionSubmenu) {
                            case 1 -> {
                                // Codigo para leer todo
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer todo"");
                                leerTodo(f);
                                opcionSubmenu = 0;
                            }
                            case 2 -> {
                                // Código para leer una persona
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer una persona buscando por el nombre"");
                                leerUnaPersona(f);
                                opcionSubmenu = 0;
                            }
                            default -> {
                            }
                        }
                    } while (opcionSubmenu != 0);
                    break;

                case 3:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName, true);

                    // Solicitar al usuario el numero de personas a guardar, con un mázimo de 3 
                    int n = 0;
                    do {
                        System.out.println(""\nIntroduzca el número de personas a guardar."");
                        System.out.println(""Recuerde que como mínimo debe ser 1 y como máximo 3."");
                        n = scanner.nextInt();
                    } while (n < 1 || n > 3);

                    try {
                        // Escribir en el archivo binario
                        escribirFicheroBin(f, n);
                    } catch (IOException ex) {
                        Logger.getLogger(Ejercicio4.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    break;

                default:
                    break;
            }

        } while (opcionMenu != 0);

        System.out.println(""\nEl programa ha finalizado"");

    }
}


*********************
----- FUNCIONES -----
*********************

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Funciones {

    //Declaración de variables
    private static Scanner scanner = new Scanner(System.in);
    private static Persona p;
    private static Persona[] personas;
    private static File f;
    private static FileWriter fw;
    private static BufferedWriter bw;
    private static BufferedReader br;
    private static String linea;

    // Métodos auxiliares
    public static File crearArchivo(String path, String fileName) {

        // Añadir extensión al nombre
        fileName += "".txt"";

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    public static File crearArchivo(String path, String fileName, boolean bin) {
        
        // Añadir extensión al nombre dependiendo si será archivo binario o de texto
        if (bin) {
            fileName += "".bin"";
        } else {
            fileName += "".txt"";
        }

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    // Métodos de lectura y escritura en texto plano
    public static void escribirFichero(File fichero) {

        f = fichero;

        // Instanciación de objeto Scanner para recibir
        // input del usurio a traves del teclado
        //scanner = new Scanner(System.in);
        // Instanciación del array personas que puede contener varios objetos Persona
        // En este caso solo vamos a almacenar 3 personas en el array
        personas = new Persona[3];

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre."");
            System.out.println(""Podrá sobrescribirlo o añadir los datos"");
            System.out.println(""a la información existente"");
        }

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos 3 veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try {
            if (f.exists()) { // Si el archivo existe, preguntar al usuario si desea sobreescribirlo o añadir los datos
                System.out.println(""\nYa existe un fichero con ese nombre."");
                System.out.println(""Si desea sobrescribirlo escriba s y pulse Enter."");
                System.out.println(""Si escribe otra cosa, los datos se añadiran"");
                System.out.println(""a la información existente en el archivo"");
                // Detectar el input de un caracter
                char inputChar = scanner.next().charAt(0);
                scanner.nextLine();

                // Comprobar si se pulsa 's' o 'Enter'
                if (inputChar == 's') {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han sobrescrito los siguientes datos en el fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                } else {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f, true);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han añadido los siguientes datos al fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                }
            } else {
                // Instanciar un objeto de tipo FileWriter
                fw = new FileWriter(f);
                // Instanciar un objeto de tipo BufferedWriter
                bw = new BufferedWriter(fw);
                for (Persona p : personas) {
                    bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                    bw.newLine();
                }
                bw.close();
                fw.close();
                System.out.println(""\nFichero creado correctamente."");
                System.out.println(""\nSe han escrito los siguientes datos en el fichero:."");
                for (Persona p : personas) {
                    System.out.println(p.mostrarInfo());
                }
                System.out.println("""");// Añadir lina en blanco al final
            }
        } catch (FileNotFoundException fn) {
            System.out.println(""\nError: la ruta no existe"");
        } catch (IOException ex) {

            Logger.getLogger(Ejercicio4.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerTodo(File fichero) {

        f = fichero;

        System.out.println(""\nLa información contenida en el fichero es la siguiente: \n"");

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {
                System.out.println(linea);

            }
            
            // Cerrar flujo de lectura
            br.close();

        } catch (FileNotFoundException ex) {
            System.out.println(""\nEl fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""\nError: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerUnaPersona(File fichero) {

        // Variables
        f = fichero;
        String nombre = """";
        String detallesPersona = """";
        int i = 0;
        String nombreInfo = """";
        boolean encontrado = false;

        System.out.println(""\nIndique el nombre que desea buscar"");
        nombre = scanner.next();
        scanner.nextLine();

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {

                detallesPersona = linea;

                // Almacenar en la variable nombreInfo el nombre de cada persona
                nombreInfo = detallesPersona.split("", "")[0];

                // Si el nombre extraído del archivo, coincide con el nombre ingresado por el usuario, se imprime toda la información de esa persona
                if (nombreInfo.equals(nombre)) {
                    System.out.println(""\n"" + linea);
                    encontrado = true;
                }

                i++;

            }
            
            // Cerrar flujo de lectura
            br.close();

            // Si no se encuentra ninguna persona, avisar al usuario.
            if (!encontrado) {
                System.out.println(""\nNo se ha encontrado ninguna persona con el nombre '"" + nombre + ""'\n"");
            }

        } catch (FileNotFoundException ex) {
            System.out.println(""El fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""Error: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Métodos de lectura y escritura en binario
    public static void escribirFicheroBin(File fichero, int n) throws IOException {

        f = fichero;

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre. Se""
                    + "" sobrescribirán los datos."");
        }

        // Instanciación del array personas que puede contener varios objetos Persona
        // Tendrá tantos objetos persona como se pasen por parámetro a la función en la variable n
        personas = new Persona[n];

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos n veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try { // Abrir flujo de salida
            FileOutputStream fos = new FileOutputStream(f);
            BufferedOutputStream bos = new BufferedOutputStream(fos);

            for(Persona persona : personas){
                
                // Convertir los detalles de la persona de tipo String en un array de tipo byte[]
                String personaInfo = persona.mostrarInfo()+""\n"";
                byte[] bytes = personaInfo.getBytes(Charset.defaultCharset());
                bos.write(bytes);
                
            }        
            
            // Cerrar los flujos de salida
            bos.close();
            fos.close();
            
            System.out.println(""\nFichero escrito correctamente"");
            
        } catch (FileNotFoundException e) {
            System.out.println(""\nEl fichero o la ruta no existen"");
        }

    }

}


*******************
----- PERSONA -----
*******************

public class Persona {
     // Atributos
    private String nombre;
    private String apellido;
    private String ciudad;
    private String nacionalidad;
    private int edad;
 
    // Constructor sin parámetros
    public Persona() {
        this.nombre = """";
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 1 parámetro (nombre)
    public Persona(String nombre) {
        this.nombre = nombre;
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 5 parámetros (nombre, apellido, ciudad, nacionalidad, edad)
    public Persona(String nombre, String apellido, String ciudad, String nacionalidad, int edad) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.ciudad = ciudad;
        this.nacionalidad = nacionalidad;
        this.edad = edad;
    }
 
    // Getters y Setters
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre){
        this.nombre = nombre;
    }
    
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido){
        this.apellido = apellido;
    }
    
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad){
        this.ciudad = ciudad;
    }
    
    public String getNacionalidad() {
        return this.nacionalidad;
    }
    
    public void setNacionalidad(String nacionalidad){
        this.nacionalidad = nacionalidad;
    }
    
    public int getEdad() {
        return this.edad;
    }
    
    public void setEdad(int edad){
        this.edad = edad;
    }
    
    // Métodos
    
    // Mostrar todos los campos
    public String mostrarInfo(){
        return nombre + "", "" + apellido + "", "" + ciudad + "", "" +                
                nacionalidad + "", "" + edad;
    }
}"
Guy1z62N,QuickSort,Korotkodul,C++,Saturday 30th of September 2023 03:32:08 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

void swap(int* p1, int* p2) {
  int t = *p1;
  *p1 = *p2;
  *p2 = t;
}


vector<int> Partition(vector<int> aa, int xx) {
  //делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  //делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int nn;
  cin >> nn;
  vector <int> aa(nn);
  for (int& ii: aa) {
    cin >> ii;
  }
  int xx;
  cin >> xx;
  aa = Partition(aa, xx);
  for (int ii: aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2
1
*/
"
kwj7wq2U,Hurst metod,Infiniti_Inter,Python,Saturday 30th of September 2023 02:59:48 PM CDT,"import csv
import datetime
import math
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

def plot(a, b):
    # Создание данных для x и y
    x = np.linspace(-10, 10, 100)  # Создание массива x от -10 до 10
    y = a * x + b  # Вычисление значений y в соответствии с уравнением прямой
    
    # Построение графика
    plt.plot(x, y)
    
    # Добавление осей и заголовка
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Апрокримезирующая прямая')
    
    # Отображение графика
    plt.show()

def hurst(X):
    L = len(X)
    plt.plot(X)
    plt.show()
    if L < 20:
        raise ValueError(""Временной ряд должен содержать как минимум 20 точек данных."")
    pmax = 10
    dX = []
    s = []
    e = []
    n = []
    for p in range(1, pmax + 1):
        for i in range (0, L - pmax):
            dX.append(X[i+p]-X[i])
        s.append(np.std(dX))
        e.append(math.log(p))
        n.append(math.log(s[-1]))
    a, b = np.polyfit(e, n, 1)
    print(f""a = {a:.07f}, b = {b:07f}"")
    plot(a, b)
    #print(""p\t s\t\t\t\t\t  e\t\t\t\t\t\t\ n"" )
    data = {'s': s, 'e': e, 'n': n}
    df = pd.DataFrame(data)
    #for f in range(0, 10):
      #print(f+1, "" "", s[f], "" "", e[f], "" "", n[f])
    #return H
    print(df)

val = []
date = []
r = []
TEST = int(input(""Введите год ""))
with open('JPY.csv', 'r') as cf:
    reader = csv.reader(cf)
    skip = True
    for row in reader:
        if skip:
            skip = False
            continue
        s = row[0].split('\t')
        t = s[0][6:10:1]
        #t = int(t)
        x = 1000
        for it in t:
          r.append(int(it)*x)
          x = x/10
        test = 0
        for it in r:
            test+=it
        #print(test)
        r.clear()
        if test == TEST:
            date.append(s[0])
            val.append(float(s[-1].replace(',', '.')))
            #print(s[0])
            #print(s[-1].replace(',', '.'))
    cf.close()

#for i in range(len(val)):
   # print(date[i], "" -- "", val[i])
date.reverse()
val.reverse()
#print(date)
hurst(val)"
duWw3WRy,ZPATRIOT,pasholnahuy,C++,Saturday 30th of September 2023 02:46:33 PM CDT,"#include <iostream>
#include <tuple>
#include <random>

using namespace std;
using int64 = int64_t;


class SegmentTree {
public:
    int64 log_size;
    vector<int64> nodes = std::vector<int64>((2 << log_size) - 1);

    static int64 IntLog(int64 n) {
        int64 temp = 1;
        int64 ans = 0;
        while (temp < n) {
            temp *= 2;
            ++ans;
        }
        return ans;
    }

    static int64 Pow2(int64 n) {
        return 1 << n;
    }

    explicit SegmentTree(const vector<int64> &vec) : log_size(IntLog(vec.size())) {
        std::copy(vec.begin(), vec.end(), nodes.begin() + (1 << log_size) - 1);
        for (int64 i = Pow2(log_size) - 2; i >= 0; --i) {
            nodes[i] = nodes[2 * i + 1] + nodes[2 * i + 2];
        }
    }

    void Modify(int64 ind, int64 value) {
        int64 temp = Pow2(log_size) + ind - 1;
        nodes[temp] = value;
        while (temp != 0) {
            temp = (temp - 1) / 2;
            nodes[temp] = nodes[temp * 2 + 1] + nodes[temp * 2 + 2];
        }
    }

    int64 GetSum(int64 l, int64 r) {
        return GetSum(l, r, 0, 0, Pow2(log_size) - 1);
    }
    int64 BinSec(int64 n, int64 ll, int64 s){
        int64 r = n;
        int64 l = ll;
        s -= GetSum(0, ll);
        if (GetSum(l, r - 1) < s){
            return 0;
        }
        while (l + 1 < r) {
            int64 mid = (l + r) / 2;
            int64 t = GetSum(l, mid);
            if (t <= s){
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return l;
    }
private:
    int64 GetSum(int64 l, int64 r, int64 n, int64 nl, int64 nr) {
        if (l > r) {
            return 0;
        }
        if (l == nl && r == nr) {
            return nodes[n];
        }
        int64 mid = (nl + nr) / 2;
        return GetSum(l, min(r, mid), n * 2 + 1, nl, mid) +
               GetSum(max(l, mid + 1), r, n * 2 + 2, mid + 1, nr);
    }

};

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m;
    cin >> n >> m;
    vector<int64> vec(n);
    for (int i = 0; i < n; ++i){
        cin >> vec[i];
    }
    SegmentTree arr(vec);
    int t;
    cin >> t;
    int64 p = 0;
    for (int i = 0; i < t; ++i){
        int x, y;
        cin >> x >> y;
        int64 l = (x + p) % n ;
        int64 k = (y + p) % n ;
        int64 ans = arr.BinSec(n, l, k);
        p = ans + 1;
        cout << ans << '\n';
    }
    return 0;
}"
3QsyQmm1,Payout for cabbies,fenixD3,C++,Saturday 30th of September 2023 02:43:12 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <ranges>
#include <cassert>
#include <numeric>

template <typename TCont>
void print(const TCont& s, std::string delim = "" "")
{
	std::ranges::copy(s, std::ostream_iterator<typename TCont::value_type>(std::cout, delim.c_str()));
    std::cout << std::endl;
}

template <template <typename> class TCont, typename TType>
TCont<TType> fill_from(int count, std::istream& from)
{
    TCont<TType> seq;
    seq.reserve(count);

    std::ranges::copy(
        std::ranges::istream_view<TType>(from),
        std::inserter(seq, seq.end()));

    return seq;
}

int get_minimum_cash(const std::vector<int>& rankings)
{
    constexpr int BaseSum = 500;

    std::vector<int> bonuses(rankings.size());

    auto find_not_payed_min = [&rankings, &bonuses]() -> int
    {
        int min_idx = -1;
        for (auto i = 0; i < rankings.size(); ++i)
        {
            if (bonuses[i] != 0)
            {
                continue;
            }

            if (min_idx == -1 || rankings[i] < rankings[min_idx])
            {
                min_idx = i;
            }
        }
        return min_idx;
    };

    for (int min_idx = find_not_payed_min(); min_idx != -1; min_idx = find_not_payed_min())
    {
        bonuses[min_idx] = BaseSum;

        for (auto i = min_idx - 1; i >= 0 && rankings[i] > rankings[i + 1] && bonuses[i] == 0; --i)
        {
            bonuses[i] = bonuses[i + 1] + BaseSum;
        }
        for (auto i = min_idx + 1; i < rankings.size() && rankings[i] > rankings[i - 1] && bonuses[i] == 0; ++i)
        {
            bonuses[i] = bonuses[i - 1] + BaseSum;
        }
    }
    int result = std::accumulate(bonuses.begin(), bonuses.end(), 0);
    return result;
}

void run_tests()
{
    {
        std::vector<int> ratings = {1, 2, 3, 4};
        assert(get_minimum_cash(ratings) == 5000);
    }
    {
        std::vector<int> ratings = {5, 5, 5, 5};
        assert(get_minimum_cash(ratings) == 2000);
    }
    {
        std::vector<int> ratings = {4, 2, 3, 3};
        assert(get_minimum_cash(ratings) == 3000);
    }
    {
        std::vector<int> ratings = {1};
        assert(get_minimum_cash(ratings) == 500);
    }
    {
        std::vector<int> ratings = {0};
        assert(get_minimum_cash(ratings) == 500);
    }
    {
        std::vector<int> ratings = {4, 3, 2, 1};
        assert(get_minimum_cash(ratings) == 5000);
    }
    {
        std::vector<int> ratings = {1, 1, 2, 3};
        assert(get_minimum_cash(ratings) == 3500);
    }
    {
        std::vector<int> ratings = {1, 4, 1, 3};
        assert(get_minimum_cash(ratings) == 3000);
    }
    {
        std::vector<int> ratings = {1, 4, 4, 1};
        assert(get_minimum_cash(ratings) == 3000);
    }
    {
        std::vector<int> ratings = {1, 4, 4, 5};
        assert(get_minimum_cash(ratings) == 3000);
    }
    {
        std::vector<int> ratings = {4, 4, 5, 5};
        assert(get_minimum_cash(ratings) == 2500);
    }
    {
        std::vector<int> ratings = {4, 3, 2, 1, 2, 3, 4};
        assert(get_minimum_cash(ratings) == 9500);
    }
    {
        std::vector<int> ratings = {4, 3, 2, 1, 1, 2, 3, 4};
        assert(get_minimum_cash(ratings) == 10000);
    }
    {
        std::vector<int> ratings = {1, 2, 3, 4, 4, 3, 2, 1};
        assert(get_minimum_cash(ratings) == 10000);
    }
    {
        std::vector<int> ratings = {1, 2, 3, 4, 3, 2, 1};
        assert(get_minimum_cash(ratings) == 8000);
    }
    {
        std::vector<int> ratings = {2, 3, 5, 4, 1, 5, 1, 3, 1};
        assert(get_minimum_cash(ratings) == 7500);
    }
    {
        std::vector<int> ratings = {4, 1, 5, 1, 3, 1};
        assert(get_minimum_cash(ratings) == 4500);
    }
    {
        std::vector<int> ratings = {4, 1, 2, 4, 4, 2, 1, 3};
        assert(get_minimum_cash(ratings) == 8000);
    }
}

int main()
{
    run_tests();
//    int n;
//    std::cin >> n;
//
//    std::vector<int> rankings = fill_from<std::vector, int>(n, std::cin);
//    std::cout << get_minimum_cash(rankings) << std::endl;
}
"
edtL55ei,Untitled,mark-naylor-1701,Lisp,Saturday 30th of September 2023 02:39:24 PM CDT,";; Functions that delete words without sending them to the kill ring.

(defun delete-word (arg)
  ""Equivalent to `kill-word'. Characters do not get sent to the kill-ring.""
  (interactive ""p"")
  (delete-region (point) (progn (forward-word arg) (point))))

(defun backward-delete-word (arg)
  ""Equivalent to `backward-kill-word'. Characters do not get sent to the kill-ring.""
  (interactive ""p"")
  (delete-word (- arg)))

(global-set-key (kbd ""M-D"") #'delete-word)
(global-set-key (kbd ""M-S-<backspace>"") #'backward-delete-word)"
ePLaiW2g,read file content,STANAANDREY,C,Saturday 30th of September 2023 02:25:52 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>

char *fileContents(const char path[]) {
    struct stat st;
    stat(path, &st);

    FILE *file = fopen(path, ""r"");
    if (file == NULL) {
        return NULL;
    }

    char *s = (char*)calloc(st.st_size + 1, sizeof(char));
    if (s == NULL) {
        fclose(file);
        return NULL;
    }
    fread(s, sizeof(char), st.st_size, file);
    fclose(file);
    return s;
}

int main() {
    const char *s = fileContents(""data.txt"");
    puts(s);
    return 0;
}"
