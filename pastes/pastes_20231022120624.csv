id,title,username,language,date,content
Cci47pj7,Offroad,stiky_fingaz,Python,Sunday 22nd of October 2023 06:35:51 AM CDT,"fuel_points = [int(x) for x in input().split()]
fuel_points_reversed = fuel_points[-1::-1]
additional_cost = [int(x) for x in input().split()]
milestones = [int(x) for x in input().split()]

for i in range(4):
    current_point = fuel_points_reversed[i] - additional_cost[i] - milestones[i]
    if current_point < 0:
        print(f'John did not reach: Altitude {i + 1}')
        print(""John failed to reach the top."")

        if i == 0:
            print(""John didn't reach any altitude."")
            break
        altitudes = [f'Altitude {x + 1}' for x in range(i)]
        print(f""Reached altitudes: {', '.join(altitudes)}"")
        break
    print(f'John has reached: Altitude {i + 1}')
    if i == 3:
        print('John has reached all the altitudes and managed to reach the top!')
"
h0S0PKvW,Singularity updates,IgorLytkin,Bash,Sunday 22nd of October 2023 06:21:41 AM CDT,"Using username ""liv"".
Authenticating with public key ""igorl@igor2022"" from agent
Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-87-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Oct 22 06:18:22 PM +07 2023

  System load:  0.0                Processes:             241
  Usage of /:   74.2% of 28.89GB   Users logged in:       0
  Memory usage: 32%                IPv4 address for eth0: 62.113.107.38
  Swap usage:   0%                 IPv4 address for eth1: 10.16.0.1

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

 * Introducing Expanded Security Maintenance for Applications.
   Receive updates to over 25,000 software packages with your
   Ubuntu Pro subscription. Free for personal use.

     https://ubuntu.com/pro

Expanded Security Maintenance for Applications is not enabled.

1 update can be applied immediately.
To see these additional updates run: apt list --upgradable

19 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm

New release '23.04' available.
Run 'do-release-upgrade' to upgrade to it.


Last login: Fri Oct 20 11:24:22 2023 from 127.0.0.1
liv@singularity:~$ sudo apt update
[sudo] password for liv:
Get:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Hit:2 https://dl.google.com/linux/chrome/deb stable InRelease
Hit:3 http://apt.postgresql.org/pub/repos/apt jammy-pgdg InRelease
Get:4 https://repo.zabbix.com/zabbix-agent2-plugins/1/ubuntu jammy InRelease [4,952 B]
Get:5 http://security.ubuntu.com/ubuntu jammy-security/main amd64 DEP-11 Metadata [43.1 kB]
Get:6 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 DEP-11 Metadata [55.1 kB]
Hit:7 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:8 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]
Get:9 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [109 kB]
Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 DEP-11 Metadata [101 kB]
Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [1,036 kB]
Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 DEP-11 Metadata [305 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 DEP-11 Metadata [940 B]
Get:14 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 DEP-11 Metadata [4,920 B]
Get:15 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 DEP-11 Metadata [17.7 kB]
Fetched 1,906 kB in 3s (637 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
3 packages can be upgraded. Run 'apt list --upgradable' to see them.
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
gjs/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
libgjs0g/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
sosreport/jammy-updates 4.5.6-0ubuntu1~22.04.2 amd64 [upgradable from: 4.4-1ubuntu1.22.04.1]
liv@singularity:~$ sudo apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
Get more security updates through Ubuntu Pro with 'esm-apps' enabled:
  python2.7-minimal exo-utils libopenexr25 libpostproc55
  libmagickcore-6.q16-6-extra libavcodec58 libmagickwand-6.q16-6 libavutil56
  libswscale5 libmagickcore-6.q16-6 libexo-2-0 libswresample3
  imagemagick-6-common libavformat58 python2.7 libpython2.7-minimal
  libpython2.7-stdlib libexo-common libavfilter7
Learn more about Ubuntu Pro at https://ubuntu.com/pro
#
# Canonical released microcode updates for both Intel (CVE-2022-40982) and AMD
# (CVE-2023-20593). ‘Unattended upgrades’ provide security updates by default.
# Ensure it remains enabled to always get all updates as they become available.
#
The following packages have been kept back:
  gjs libgjs0g
The following packages will be upgraded:
  sosreport
1 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
Need to get 332 kB of archives.
After this operation, 840 kB disk space will be freed.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 sosreport amd64 4.5.6-0ubuntu1~22.04.2 [332 kB]
Fetched 332 kB in 1s (363 kB/s)
(Reading database ... 305447 files and directories currently installed.)
Preparing to unpack .../sosreport_4.5.6-0ubuntu1~22.04.2_amd64.deb ...
Unpacking sosreport (4.5.6-0ubuntu1~22.04.2) over (4.4-1ubuntu1.22.04.1) ...
Setting up sosreport (4.5.6-0ubuntu1~22.04.2) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
liv@singularity:~$ sudo apt update
Hit:1 https://dl.google.com/linux/chrome/deb stable InRelease
Hit:2 http://apt.postgresql.org/pub/repos/apt jammy-pgdg InRelease
Hit:3 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:4 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:6 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Get:7 https://repo.zabbix.com/zabbix-agent2-plugins/1/ubuntu jammy InRelease [4,952 B]
Fetched 4,952 B in 1s (5,257 B/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
2 packages can be upgraded. Run 'apt list --upgradable' to see them.
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
gjs/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
libgjs0g/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
liv@singularity:~$ sudo apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
Get more security updates through Ubuntu Pro with 'esm-apps' enabled:
  python2.7-minimal exo-utils libopenexr25 libpostproc55
  libmagickcore-6.q16-6-extra libavcodec58 libmagickwand-6.q16-6 libavutil56
  libswscale5 libmagickcore-6.q16-6 libexo-2-0 libswresample3
  imagemagick-6-common libavformat58 python2.7 libpython2.7-minimal
  libpython2.7-stdlib libexo-common libavfilter7
Learn more about Ubuntu Pro at https://ubuntu.com/pro
#
# Canonical released microcode updates for both Intel (CVE-2022-40982) and AMD
# (CVE-2023-20593). ‘Unattended upgrades’ provide security updates by default.
# Ensure it remains enabled to always get all updates as they become available.
#
The following packages have been kept back:
  gjs libgjs0g
0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
liv@singularity:~$
"
J8XZxRNx,Untitled,jojoblack,Lua,Sunday 22nd of October 2023 06:20:50 AM CDT,"fission_reactor = peripheral.find(""fissionReactorLogicAdapter"")

local temp
local loop
local initial

fission_reactor.activate()
loop = true
initial = fission_reactor.getBurnRate()
temp = math.floor(fission_reactor.getTemperature())
shell.run('clear')
print(""Initial burnrate : "" .. initial)

os.sleep(1)
while loop do
	if math.floor(fission_reactor.getTemperature()) == temp or math.floor(fission_reactor.getTemperature()) == temp+1 or math.floor(fission_reactor.getTemperature()) == temp-1 then 
		shell.run('clear')
		temp = math.floor(fission_reactor.getTemperature())
		fission_reactor.setBurnRate(fission_reactor.getBurnRate()+1)
		print(""Burnrate Increased to : "" .. fission_reactor.getBurnRate())
		os.sleep(1)
	else
		shell.run('clear')
		loop = false
		fission_reactor.setBurnRate(fission_reactor.getBurnRate()-1)
		print('Burnrate set from : ' .. initial)
		print('To : ' .. fission_reactor.getBurnRate())
		fission_reactor.scram()
	end
end
"
dW8ZLPpp,Untitled,SaintMalthus,Python,Sunday 22nd of October 2023 06:19:24 AM CDT,"#Inputing Price per sheet
print(""Input price per sheet."")
price = float(input())

#Inputing Height
print(""Input your Height"")
height = float(input())

#Inputing Length
print(""Input your length"")
length = float(input())

#Calculating the price per cm3
total_Square_Footage = height*length
price_Per_cm3 = price / total_Square_Footage

#Message
print(""======================"")
print(str())

print(""!!!INCERTING THE CUT PIECE!!!"")

print(str())
print(""======================"")

#Inputing the cm3 for the cutted sheet

print(""Input your Height"")
height_Cut_Piece = float(input())

print(""Input your Length"")
length_Cut_Piece = float(input())

#Calculating the total square for cutted piece

total_Square_For_Cutted_Piece = height_Cut_Piece * length_Cut_Piece

#Calculating the price for the cutted piece

cutted_Piece_Price = total_Square_For_Cutted_Piece * price_Per_cm3

print(round(cutted_Piece_Price, 2))"
Hn1QAHFf,Untitled,SaintMalthus,Python,Sunday 22nd of October 2023 06:12:28 AM CDT,"#Inputing Price per sheet
print(""Input price per sheet."")
price = float(input())

#Inputing Height
print(""Input your Height"")
height = float(input())

#Inputing Length
print(""Input your length"")
length = float(input())

#Calculating the price per cm3
total_Square_Footage = height*length
price_Per_cm3 = price / total_Square_Footage

#Message
print(""======================"")
print(str())

price(""!!!INCERTING THE CUT PIECE!!!"")

print(""======================"")
print(str())

#Inputing the cm3 for the cutted sheet

print(""Input your Height"")
height_Cut_Piece = float(input())

print(""Input your Length"")
length_Cut_Piece = float(input())

#Calculating the total square for cutted piece

total_Square_For_Cutted_Piece = height_Cut_Piece * length_Cut_Piece

#Calculating the price for the cutted piece

cutted_Piece_Price = total_Square_For_Cutted_Piece * price_Per_cm3

print(cutted_Piece_Price)"
fv5UaafQ,snowybot,coinwalk,JavaScript,Sunday 22nd of October 2023 06:01:36 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/2400).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
bilance = ((document.getElementById('pct_balance').value)-cook);
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=woman)){
burp = nudie;
sexual = 0;
cook = ((parseFloat(bolance))-splif);
woman = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<woman)){
burp = nudie;
sexual = 0;
woman = parseFloat(bolance);
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
RuFsRsgw,snowybot,coinwalk,JavaScript,Sunday 22nd of October 2023 05:59:06 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/240).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
bilance = ((document.getElementById('pct_balance').value)-cook);
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=woman)){
burp = nudie;
sexual = 0;
cook = ((parseFloat(bolance))-splif);
woman = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<woman)){
burp = nudie;
sexual = 0;
woman = parseFloat(bolance);
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
1FR0JNb7,Changing some pixel colors in an image,makispaiktis,Python,Sunday 22nd of October 2023 05:25:27 AM CDT,"clear all
close all
clc

% 1. Basics
I = imread(""IMG_01.jpeg"");
I2 = I;     I3 = I;
[rows, cols, channels] = size(I);
pixels = rows * cols;

% 2. Coordinates to be altered
pososto = 0.2;
converted = floor(pososto * pixels);
coords = zeros(converted, 2);
coords(:, 1) = randi([1 rows], converted, 1);
coords(:, 2) = randi([1 cols], converted, 1);

% 3. Convertions
desired = [255, 255, 255];                  % White
for i = 1 : converted
    row = coords(i, 1);
    col = coords(i, 2);
    I2(row, col, :) = desired;
end

for i = 1 : converted
    row = coords(i, 1);
    col = coords(i, 2);
    I3(row, col, :) = randi([0 255], 1, 3);
end


% 4. Plots
figure();
imshowpair(I, I2, ""montage"");
title(num2str(100*pososto) + ""% of pixels changed to "" + mat2str(desired))
figure();
imshowpair(I, I3, ""montage"");
title(num2str(100*pososto) + ""% of pixels changed to random colors"")"
SZdifkxK,01.js,Grossos,JavaScript,Sunday 22nd of October 2023 05:17:31 AM CDT,"function solve(input) {

    let productionByWorker = +input.shift();
    let workers = +input.shift();
    let productionFor30Days = +input.shift();


    let production = 0;
    let difference = 0;

    for (let days = 1; days <= 30; days++) {

        let dayProduction = productionByWorker * workers;
        if (days % 3 == 0) {
            dayProduction *= 0.75;
        }
        production += Math.floor(dayProduction);
    }
    let negative = false;
    if (production < productionFor30Days) {
        negative = true;
        difference = productionFor30Days - production;
    } else {
        difference = production - productionFor30Days;
    }
    console.log(`You have produced ${production} biscuits for the past month.`);

    let neededBiscuits = difference / productionFor30Days * 100;

    negative == true ? console.log(`You produce ${neededBiscuits.toFixed(2)} percent less biscuits.`) : console.log(`You produce ${neededBiscuits.toFixed(2)} percent more biscuits.`);


}"
2FP58N86,2_С,Korotkodul,C++,Sunday 22nd of October 2023 05:05:42 AM CDT,"#include <cmath>
#include <deque>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::deque;
using std::max;
using std::min;
using std::string;
using std::vector;

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  deque<int> qa;
  deque<int> qb;
  int qur;
  cin >> qur;
  int cnt1 = 0;
  int cnt2 = 0;
  int num = 0;
  for (int step = 0; step < qur; ++step) {
    char type;
    cin >> type;
    int nmb;
    if (type != '-') {
      cin >> nmb;
    }
    if (type == '+') {
      if (cnt1 == 0) {
        qa.push_back(nmb);
        cnt1++;
        continue;
      }
      if (cnt1 == num) {
        qa.push_back(qb.front());
        qb.pop_front();
        qb.push_back(nmb);
        cnt1++;
      } else {
        num++;
        cnt2++;
        qb.push_back(nmb);
      }
    } else if (type == '*') {
      if (cnt1 == num) {
        qa.push_back(nmb);
        cnt1++;
      } else {
        cnt2++;
        num++;
        qb.push_front(nmb);
      }
    } else {
      int res = qa.front();
      qa.pop_front();
      cout << res << ""\n"";
      if (cnt1 == num + 1) {
        cnt1--;
      } else {
        int go = qb.front();
        qa.push_back(go);
        qb.pop_front();
        num--;
        cnt2--;
      }
    }
  }
}
"
5MJjDKwd,Untitled,pacho_the_python,Python,Sunday 22nd of October 2023 04:33:06 AM CDT,"experience_needed = float(input())
battles = int(input())
total_experience = 0
battles_count = 0
is_enough = False

for battle in range(1, battles + 1):
    experience = float(input())
    battles_count += 1

    if battle % 3 == 0:
        experience += experience * 0.15

    if battle % 5 == 0:
        experience *= 0.90

    if battle % 15 == 0:
        experience += experience * 0.05

    total_experience += experience

    if total_experience >= experience_needed:
        is_enough = True
        break

if is_enough:
    print(f""Player successfully collected his needed experience for {battles_count} battles."")
else:
    needed_experience = experience_needed - total_experience
    print(f""Player was not able to collect the needed experience, {needed_experience:.2f} more needed."")"
mnHgJNXC,2_C,Korotkodul,C++,Sunday 22nd of October 2023 04:30:39 AM CDT,"#include <cmath>
#include <deque>
#include <iostream>
#include <vector>


using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using std::deque;

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  deque<int> qa;
  deque<int> qb;
  int qur;
  cin >> qur;
  int cnt1 = 0;
  int cnt2 = 0;
  int num = 0;
  for (int step = 0; step < qur; ++step) {
    char type;
    cin >> type;
    int nmb;
    if (type == '+') {
      cin >> nmb;
      if (cnt1 == num) {
        qa.push_back(qb.front());
        qb.pop_front();
        qb.push_back(nmb);
        cnt1++;
      } else {
        num++;
        cnt2++;
        qb.push_back(nmb);
      }
    } else if (type == '*') {
      cin >> nmb;
      if (cnt1 == num) {
        qa.push_back(nmb);
        cnt1++;
      } else {
        cnt2++;
        num++;
        qb.push_front(nmb);
      }
    } else {
      int res = qa.front();
      cout << res << ""\n"";
      if (cnt1 == num + 1) {
        cnt1--;
      } else {
        int go = qb.front();
        qa.push_back(go);
        qb.pop_front();
        num--;
        cnt2--;
      }
    }
  }
}
"
7udkMdu3,NielsC_Aufgabe1_SO,TRToC,C,Sunday 22nd of October 2023 04:30:12 AM CDT,"#define _CRT_SECURE_NO_WARNINGS 1 // nur für Microsoft VS weil der sonst rum nervt
#include <stdio.h>
#include <locale.h>
#include <stdbool.h>
#include <string.h>

// Defines
#define MAXPUNKTE 256
#define PATH_MAX	4096    /* maximale Länge von einem Linux-Path für eine Datei, inklusive dem NULL am Ende */

// Structs: unsere Keks-Stanzform
struct Punkte
{
	double x[MAXPUNKTE];
	double y[MAXPUNKTE];
	int arrayLaenge;
};

// Prototypen
void MenuAusgabe();
void Menu(struct Punkte *p); // wir zeigen jeder Funktion wo unser Keks liegt. Bitte behandele unseren Keks gut. Der wird auch von anderen Funktionen später noch bearbeitet. Wir haben nur einen und wollen nicht dass er kaputt geht.
void DatenAufnehmen(struct Punkte *p);
void DatenAusgeben(struct Punkte *p);
void DatenKorrigieren(struct Punkte *p);
void DatenSpeichern(struct Punkte *p);
void DatenLaden(struct Punkte *p);
void DatenBerechnen(struct Punkte *p);
void DatenGenerieren(struct Punkte *p);
void LeseStringWert(char *ziel, int maxLaenge); // Hilfsfunktion weil scanf echt nervt bei Texteingabe

int main(void)
{
	setlocale(LC_ALL, ""de_DE""); // Sprache auf Deutsch stellen/ damit kommer und Punkte angepasst werden
	struct Punkte meinePunkte; // unser einziger wahrer Keks den wir gestanzt haben

	Menu(&meinePunkte);

	return 0; // Rückgabewert 0 an das Aufrufende Programm zurück geben: d.h. wir haben keinen gelben Schnee gegessen
}//main ende


//MenuAusgabe ist eine Funktion die Ausgabe des Standards Menus aus gibt
void MenuAusgabe()
{
	printf(""\n"");
	printf(""Berechnung eines Flächeninhalts\n"");
	printf(""===============================\n"");
	printf(""(1) Daten aufnehmen\n"");
	printf(""(2) Daten ausgeben\n"");
	printf(""(3) Daten korrigieren\n"");
	printf(""(4) Daten speichern\n"");
	printf(""(5) Daten laden\n"");
	printf(""(6) Flächeninhalt ermitteln\n"");
	printf(""(7) Testdaten generieren\n""); // todo: kann in der Endversion weg
	printf(""(0) Ende [ESC]\n"");
	printf(""Treffen Sie eine Wahl und bestätigen Sie mit Enter:\n"");
}

void Menu(struct Punkte *p) // bei *p ist unser Keks. Wir werden ihn an alle Funktionen weiter geben die den Keks bearbeiten sollen.
{
	int eingabe;
	MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
	do
	{
		scanf(""%d"", &eingabe); // todo: das ist super unsicher hier, bitte keine Buchstaben oder so eingeben
		if (eingabe == 1)
		{
			DatenAufnehmen(p);    //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
		else if (eingabe == 2)
		{
			DatenAusgeben(p);       //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
		else if (eingabe == 3)
		{
			DatenKorrigieren(p); //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
		else if (eingabe == 4)
		{
			DatenSpeichern(p);   //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben 
		}
		else if (eingabe == 5)
		{
			DatenLaden(p);       //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
		else if (eingabe == 6)
		{
			DatenBerechnen(p);   //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
		else if (eingabe == 7)
		{
			DatenGenerieren(p); //ausführen
			MenuAusgabe();  // Die Menu-Ansicht wird ausgegeben
		}
	} while (eingabe != 0);     //Programm beenden

	/*Die Funktion Menu() beruht auf dem Prenzip eines endlichen Automatens.
	es Läuft eine Schleife durch und wenn ein Menupunkt ausgewählt wird,
	wenden die Funktion in dem Menupunkt ausgeführt. danach geht die Schleife weiter
	und man Befindet sich wieder im Hauptmenu.

	Da die Ausgabe immer wieder kommt ist sie in der Funktion MenuAusgabe() zusammen
	gefasst
	*/
}// Menu beendet

void DatenAufnehmen(struct Punkte *p)
{
	bool schleife = true;                                                   // Breaker für die schleife
	int zaehler = 0;
	double inputX;
	double inputY;
	double tmpX[MAXPUNKTE];                                                 //temporaere  XY-Werte
	double tmpY[MAXPUNKTE];
	printf(""Um abzuschließen bitte den ersten Punkt erneut angeben."");
	while (schleife) {
		printf(""Geben sie bitte Punkt %d X an:"", zaehler + 1);
		scanf(""%lf"", &inputX); while (getchar() != '\n') {}                       //ggf auf zahlen gegeprüfen und dann mit getchar arbeiten;     ARBEIT!!!!

		tmpX[zaehler] = inputX;                                             //Inhalt von X an denn Array übergeben

		printf(""Y an:"");
		scanf(""%lf"", &inputY); while (getchar() != '\n') {}                      //ggf auf zahlen gegeprüfen und dann mit getchar arbeiten;     ARBEIT!!!!

		tmpY[zaehler] = inputY;                                             //Inhalt von Y an denn Array übergeben

		if ((tmpX[0] == inputX && tmpY[0] == inputY && zaehler > 0))         //Fehlerabfangen
		{
			if (zaehler < 4)                                                 //Fehlerabfangen eine flaeche hat min 3 Punkte
			{
				printf(""Zu weing werte bitte Versuchen sie es erneut.\n"");
			}
			schleife = false;
		}
		if (zaehler == MAXPUNKTE - 1)                                         //Zahlen begrenzen um Fehler zu vermeiden           
		{
			schleife = false;
			printf(""Leider haben sie zuviele Zahlen eingegben\n"");
		}
		zaehler++;
		printf(""Punkt %d: X:%2f Y:%2f\n"", zaehler, inputX, inputY);            //Ausgabe welche Zahlen eingebenben wurden
	}
	int zaehler2 = 0;
	while (zaehler2 < zaehler) {
		p->x[zaehler2] = tmpX[zaehler2];                                       //in X[] und Y[]  soll der inhalt von tmpX[] und tmpY[] und dabei soll Punkt: weggekürzt werden
		p->y[zaehler2] = tmpY[zaehler2];
		zaehler2++;
	}
	tmpX[zaehler] = '\n';
	tmpY[zaehler] = '\n';
	p->arrayLaenge = zaehler;                                                         //Anzahl der Eingaben Global weiter geben.
}

void DatenAusgeben(struct Punkte *p)
{

	if (p->arrayLaenge > 0)
	{
		int zaehler = 0;
		printf(""(2) Daten ausgeben:\n"");        //benutzerinfo  
		printf(""--------------\n"");
		while (zaehler < p->arrayLaenge)            //Solange in arraylaenge inhalt ist wird dieser ausgebenen
		{
			printf(""%d. Punkt: x:%lf\n"", zaehler + 1, p->x[zaehler]);     //Ausgabe ""NR."" Punkt: x: ""Eingabe x""
			printf(""           y:%lf\n"", p->y[zaehler]);                 //Ausgabe y:""Eingabe y"" 
			zaehler++;
		}
		printf(""--------------\n"");
		printf(""Bitte Enter zum Fortfarhen:\n"");

		while (getchar() != '\n') {}                //wenn Enter gedrückt wird faehrt das Programm fort

	}
	else {
		printf(""Leider sind noch keine Daten vorhanden:\n\n\n\n"");  //sollten keine Daten vorhanden sein
	}
}//ende DatenAusgeben

void DatenKorrigieren(struct Punkte *p)
{
	if (p->arrayLaenge > 0) {
		printf(""Bitte geben sie den Punkt an den sie bearbeiten wollen.\n"");
		printf(""Zahlen zwischen 1 und %d sind Zulässig\n"", p->arrayLaenge - 1);  //Benutzerinfo
		int inputBearbeiten;
		scanf(""%d"", &inputBearbeiten);           //abfrage welcher Datensatz veraendert werden soll 
		if (inputBearbeiten <= p->arrayLaenge - 1) {   //Vergleich ob der datensatz vorhanden ist
			double xNeu;                        //Zwischenspeicher für X
			double yNeu;                        //Zwischenspeicher für Y
			printf(""Alt X war %f.\nBitte geben sie X neu an:\n"", p->x[inputBearbeiten - 1]);
			scanf(""%lf"", &xNeu);
			printf(""Alt Y war %f.\nBitte geben sie Y neu an:\n"", p->y[inputBearbeiten - 1]);
			scanf(""%lf"", &yNeu);
			printf(""xNeu = %f"", xNeu);
			p->x[inputBearbeiten - 1] = xNeu;      //denn alten X-Wert mit dem neuen überschreiben
			p->y[inputBearbeiten - 1] = yNeu;      //denn alten Y-Wert mit dem neuen überschreiben
			if (inputBearbeiten == 1)
			{
				p->x[p->arrayLaenge - 1] = xNeu;          //wenn der Erste Wert veraendert werden soll muss der letzte auch geaender werden
				p->y[p->arrayLaenge - 1] = yNeu;
			}


			printf(""--------------\n"");
		}
		else {
			printf(""Die eingabe war zu Groß.\n"");  //Eingabe ist begrenzt
		}

	}
	else {
		printf(""Leider sind noch keine Daten vorhanden:\n\n\n\n"");      //DatenVorhanden ist noch false 
	}

}//ende DatenKorrigieren

// Info: eine sehr hilfreiche Funktion. persönliche Meinung. Ich hasse scanf()!
void LeseStringWert(char *ziel, int maxLaenge) {
	while (getchar() != '\n'); // LeseBuffer löschen. keine Ahnung ob das hier nötig ist. Sicher ist sicher.
	fgets(ziel, maxLaenge, stdin);

	// Entferne das newline-Zeichen am Ende des Strings
	size_t laenge = strlen(ziel);
	if (laenge > 0 && ziel[laenge - 1] == '\n') {
		ziel[laenge - 1] = '\0';
	}
}


void DatenSpeichern(struct Punkte *p)
{
	printf(""\n"");
	printf(""(4) Daten speichern:\n"");
	printf(""--------------------\n"");
	printf(""Pfadname (Default: koord.txt):"");

	char dateipfad[PATH_MAX];
	LeseStringWert(dateipfad, PATH_MAX);

	if (dateipfad[0] == '\0') {
		strcpy(dateipfad, ""koord.txt"");
	}

	FILE *datei = fopen(dateipfad, ""w"");

	if (datei == NULL) {
		printf(""FEHLER: Die Datei %s konnte nicht zum Schreiben geöffnet werden.\n"", dateipfad);
		return;
	}

	for (int i = 0; i < p->arrayLaenge; i++) {
		fprintf(datei, ""%.2lf %.2lf\n"", p->x[i], p->y[i]);
	}

	fclose(datei);
	printf(""Es wurden %d Wertepaare in %s gespeichert.\n"", p->arrayLaenge, dateipfad);

}


void DatenLaden(struct Punkte *p)
{
	printf(""\n"");
	printf(""(5) Daten laden:\n"");
	printf(""--------------------\n"");
	printf(""Pfadname (Default: koord.txt):"");

	char dateipfad[PATH_MAX];
	LeseStringWert(dateipfad, PATH_MAX);

	if (dateipfad[0] == '\0') {
		strcpy(dateipfad, ""koord.txt"");
	}

	FILE *datei = fopen(dateipfad, ""r"");

	if (datei == NULL) {
		printf(""FEHLER: Die Datei %s konnte nicht zum Lesen geöffnet werden.\n"", dateipfad);
		return;
	}

	int c = 0;
	while (fscanf(datei, ""%lf %lf"", &(p->x[c]), &(p->y[c]) ) == 2) { // todo: kann man das besser machen ohne klammern? ist das überhaupt richtig??? naja scheint so, sieht trotzdem komisch aus
		c++;
		if (c >= MAXPUNKTE) {
			printf(""WARNUNG: Das Array ist voll. Die Daten werden nur bis zum Maximum von %d gelesen.\n"", MAXPUNKTE); // todo: ist der Spruch vielleicht überflüssig oder sogar irritierend?
			break;
		}
	}
	
	p->arrayLaenge = c;
	fclose(datei);

	printf(""Es wurden %d Wertepaare aus %s geladen.\n"", p->arrayLaenge, dateipfad);

}


void DatenBerechnen(struct Punkte *p)
{
	double summeXi = 0.0;
	double summeYi = 0.0;
	double FlaechenInhalt;
	int zaehler = 0;
	while (zaehler < p->arrayLaenge)                                            //Rechnung nach Gauss Elling Verfahren
	{
		if (zaehler + 1 == p->arrayLaenge) {
			summeXi += p->x[0] * p->y[zaehler];
			summeYi += p->x[zaehler] * p->y[0];
		}
		else {
			summeXi += p->x[zaehler + 1] * p->y[zaehler];
			summeYi += p->x[zaehler] * p->y[zaehler + 1];
		}
		zaehler++;
	}
	FlaechenInhalt = (summeXi - summeYi) / 2;
	printf(""\nFlaecheninhalt = %lf\n"", FlaechenInhalt);
}


void DatenGenerieren(struct Punkte *p)
{
	// Info: das sind die Beispielpunkte vom Aufgabenzettel
	p->x[0] = 2;
	p->y[0] = 1;
	p->x[1] = 3;
	p->y[1] = 8;
	p->x[2] = 5;
	p->y[2] = 7;
	p->x[3] = 6;
	p->y[3] = 4;
	p->arrayLaenge = 4;
	printf(""Info: Es wurden %d Testdaten generiert. Der Flächeninhalt sollte 15 sein.\n"", p->arrayLaenge);

}
"
gJwauSws,Untitled,tasty_data,C++,Sunday 22nd of October 2023 04:29:21 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#ifdef ONLINE_JUDGE
#define LOG(var)
#define FREOPEN (void) freopen(""input.txt"", ""r"", stdin); (void) freopen(""output.txt"", ""w"", stdout);
#else
#define FREOPEN
#define LOG(var) cout << (#var) << "" = "" << (var) << endl;
#endif

#define ALL(x) (x).begin(), (x).end()
#define forn(i, n) for(register int i = 0; i < int(n); ++i)
#define forit(i, c) for(auto i = (c).begin(); i != (c).end(); ++i)
#define pb push_back

#define PI   (3.1415926535897932384626433832795)
#define EPS  (1e-9)
#define INF  (2147483647)
#define INFL (9223372036854775807)

#define YES cout << ""YES"" << endl
#define NO  cout << ""NO""  << endl
#define yes cout << ""yes"" << endl
#define no  cout << ""no""  << endl
#define print_array(a, n) for(int qq = 0; qq < n; qq++) { cout << a[qq] << "" ""; } cout << endl;
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define PRECISION(n) cout.setf(ios::fixed); cout.precision((n));
#define RUSSIAN setlocale(LC_ALL, ""Russian"");

#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define vii vector<pii>
#define si  set<int>
#define sii set<pii>

#include <iostream>
#include <vector>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int uint;

using namespace std;

int main() {
	IOS; // Not apple fan

}"
v1AfZUmH,My VPN SSL,sahadat08,JSON,Sunday 22nd of October 2023 03:57:36 AM CDT,"{
  ""SSL_VERSION"":""1.0"",
  ""PAYLOADS"": [
    {
      ""Name"":""Wireguard"",
      ""SNI"":""www.speedtest.net"",
      ""SSL_Port"":""4433""
    },
    {
      ""Name"":""OpenVPN"",
      ""SNI"":""www.apple.com"",
      ""SSL_Port"":""4433""
    }
  ]
}"
ShVWZaDY,J,koukirocks,C++,Sunday 22nd of October 2023 03:53:44 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define int long long
#define all(x) x.begin(),x.end()

int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n,m;
    while(cin>>n>>m){
        int ans=0,anscnt=1;
        vector<vector<pair<int,int>>> g(n);
        vector<int> v(n),in(n),r(n,-1),dis(n),cnt(n);
        for(int i=0;i<n-1;i++){
            char c;
            cin>>v[i]>>c;
        }
        cin>>v[n-1];
        while(m--){
            int a,b,c;
            cin>>a>>b>>c;
            c+=v[b];
            g[a].push_back({b,c});
            in[b]++;
        }
        queue<int> q;
        for(int i=0;i<n;i++){
            if(in[i]==0){
                q.push(i);
                dis[i]=v[i];
            }
        }
        while(!q.empty()){
            int pre=q.front();
            if(dis[pre]>dis[ans]){
                ans=pre;
                anscnt=1;
            }
            else if(dis[pre]==dis[ans]){
                ans=pre;
                anscnt++;
            }
            q.pop();
            for(auto i:g[pre]){
                if(dis[i.first]<dis[pre]+i.second){
                    cnt[i.first]=cnt[pre];
                    dis[i.first]=dis[pre]+i.second;
                    r[i.first]=pre;
                }
                else if(dis[i.first]==dis[pre]+i.second){
                    cnt[i.first]=2;
                }
                in[i.first]--;
                if(in[i.first]==0){
                    q.push(i.first);
                }
            }
        }
        cout<<dis[ans]<<',';
        if(anscnt>1||cnt[ans]>1){
            cout<<'M'<<endl;
            continue;
        }
        vector<int> rte;
        int x=ans;
        //rte.push_back(ans);
        while(r[x]!=-1){
            rte.push_back(x);
            x=r[x];
        }
        rte.push_back(x);
        reverse(rte.begin(),rte.end());
        for(int i=0;i<rte.size()-1;i++) cout<<rte[i]<<',';
        cout<<rte[rte.size()-1]<<endl;
    }
    return 0;
}
// TING"
Da9amnG0,I,koukirocks,C++,Sunday 22nd of October 2023 03:53:17 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define int long long
#define all(x) x.begin(),x.end()
void solve(){
    string s;cin>>s;
    int n=s.size();
    int cnt=0;
    int ans=0;
    for(int i=0;i<n;i++){
        if(s[i]=='N'){
            cnt=0;
        }
        else{
            cnt++;
            ans+=cnt;
        }
    }
    cout<<ans<<endl;
}
int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;cin>>t;
    while(t--){
        solve();
    }

    return 0;
}
//DARREN
"
LGrjA11R,Block Windows Tracking with hosts file,nahakubuilder,Python,Sunday 22nd of October 2023 03:39:58 AM CDT,"# This is list of possible Microsoft sites for tracking and other things.
# By adding it to Hosts file, system will use the IP address on line
# to try to access the URL
# Add to ""C:\Windows\System32\drivers\etc\hosts""
# You will need to run Notepad as administrator to edit this.
# It is possible that Microsoft defender will see it as malicious attempt
# so you will need to also allow it in Windows Defender, you should get prompt

127.0.0.1  data.microsoft.com
127.0.0.1  msftconnecttest.com
127.0.0.1  azureedge.net
127.0.0.1  activity.windows.com
127.0.0.1  bingapis.com
127.0.0.1  msedge.net
127.0.0.1  assets.msn.com
127.0.0.1  scorecardresearch.com
127.0.0.1  edge.microsoft.com
127.0.0.1  data.msn.com

169.254.169.254 a-0001.a-msedge.net
169.254.169.254 a.ads1.msn.com
169.254.169.254 a.ads2.msn.com
169.254.169.254 ad.doubleclick.net
169.254.169.254 adnexus.net
169.254.169.254 adnxs.com
169.254.169.254 ads.msn.com
169.254.169.254 ads1.msads.net
169.254.169.254 ads1.msn.com
169.254.169.254 az361816.vo.msecnd.net
169.254.169.254 az512334.vo.msecnd.net
169.254.169.254 choice.microsoft.com
169.254.169.254 choice.microsoft.com.nsatc.net
169.254.169.254 compatexchange.cloudapp.net
169.254.169.254 corp.sts.microsoft.com
169.254.169.254 corpext.msitadfs.glbdns2.microsoft.com
169.254.169.254 cs1.wpc.v0cdn.net
169.254.169.254 cs1.wpc.v0cdn.net statsfe1.ws.microsoft.com
169.254.169.254 df.telemetry.microsoft.com
169.254.169.254 diagnostics.support.microsoft.com
169.254.169.254 fe2.update.microsoft.com.akadns.net
169.254.169.254 feedback.microsoft-hohm.com
169.254.169.254 feedback.search.microsoft.com
169.254.169.254 feedback.windows.com
169.254.169.254 i1.services.social.microsoft.com
169.254.169.254 i1.services.social.microsoft.com.nsatc.net
169.254.169.254 oca.telemetry.microsoft.com
169.254.169.254 oca.telemetry.microsoft.com.nsatc.net
169.254.169.254 pre.footprintpredict.com
169.254.169.254 preview.msn.com
169.254.169.254 rad.msn.com
169.254.169.254 redir.metaservices.microsoft.com
169.254.169.254 reports.wes.df.telemetry.microsoft.com
169.254.169.254 services.wes.df.telemetry.microsoft.com
169.254.169.254 settings-sandbox.data.microsoft.com
169.254.169.254 sls.update.microsoft.com.akadns.net
169.254.169.254 sqm.df.telemetry.microsoft.com
169.254.169.254 sqm.telemetry.microsoft.com
169.254.169.254 sqm.telemetry.microsoft.com.nsatc.net
169.254.169.254 statsfe1.ws.microsoft.com
169.254.169.254 statsfe2.update.microsoft.com.akadns.net
169.254.169.254 statsfe2.ws.microsoft.com
169.254.169.254 survey.watson.microsoft.com
169.254.169.254 telecommand.telemetry.microsoft.com
169.254.169.254 telecommand.telemetry.microsoft.com.nsatc.net
169.254.169.254 telemetry.appex.bing.net
169.254.169.254 telemetry.appex.bing.net:443
169.254.169.254 telemetry.microsoft.com
169.254.169.254 telemetry.urs.microsoft.com
169.254.169.254 vortex-sandbox.data.microsoft.com
169.254.169.254 vortex-win.data.microsoft.com
169.254.169.254 vortex.data.microsoft.com
169.254.169.254 watson.live.com
169.254.169.254 watson.microsoft.com
169.254.169.254 watson.ppe.telemetry.microsoft.com
169.254.169.254 watson.telemetry.microsoft.com
169.254.169.254 watson.telemetry.microsoft.com.nsatc.net
169.254.169.254 wes.df.telemetry.microsoft.com
169.254.169.254 a.ads1.msn.com
169.254.169.254 a.ads2.msads.net
169.254.169.254 a.ads2.msn.com
169.254.169.254 a.rad.msn.com
169.254.169.254 a-0001.a-msedge.net
169.254.169.254 a-0002.a-msedge.net
169.254.169.254 a-0003.a-msedge.net
169.254.169.254 a-0004.a-msedge.net
169.254.169.254 a-0005.a-msedge.net
169.254.169.254 a-0006.a-msedge.net
169.254.169.254 a-0007.a-msedge.net
169.254.169.254 a-0008.a-msedge.net
169.254.169.254 a-0009.a-msedge.net
169.254.169.254 ac3.msn.com
169.254.169.254 ad.doubleclick.net
169.254.169.254 adnexus.net
169.254.169.254 adnxs.com
169.254.169.254 ads.msn.com
169.254.169.254 ads1.msads.net
169.254.169.254 ads1.msn.com
169.254.169.254 aidps.atdmt.com
169.254.169.254 aka-cdn-ns.adtech.de
169.254.169.254 a-msedge.net
169.254.169.254 apps.skype.com
169.254.169.254 az361816.vo.msecnd.net
169.254.169.254 az512334.vo.msecnd.net
169.254.169.254 b.ads1.msn.com
169.254.169.254 b.ads2.msads.net
169.254.169.254 b.rad.msn.com
169.254.169.254 bs.serving-sys.com
169.254.169.254 c.atdmt.com
169.254.169.254 c.msn.com
169.254.169.254 ca.telemetry.microsoft.com
169.254.169.254 cache.datamart.windows.com
169.254.169.254 cdn.atdmt.com
169.254.169.254 cds26.ams9.msecn.net
169.254.169.254 choice.microsoft.com
169.254.169.254 choice.microsoft.com.nsatc.net
169.254.169.254 compatexchange.cloudapp.net
169.254.169.254 corp.sts.microsoft.com
169.254.169.254 corpext.msitadfs.glbdns2.microsoft.com
169.254.169.254 cs1.wpc.v0cdn.net
169.254.169.254 db3aqu.atdmt.com
169.254.169.254 db3wns2011111.wns.windows.com
169.254.169.254 df.telemetry.microsoft.com
169.254.169.254 diagnostics.support.microsoft.com
169.254.169.254 ec.atdmt.com
169.254.169.254 fe2.update.microsoft.com.akadns.net
169.254.169.254 fe3.delivery.dsp.mp.microsoft.com.nsatc.net
169.254.169.254 feedback.microsoft-hohm.com
169.254.169.254 feedback.search.microsoft.com
169.254.169.254 feedback.windows.com
169.254.169.254 flex.msn.com
169.254.169.254 g.msn.com
169.254.169.254 h1.msn.com
169.254.169.254 i1.services.social.microsoft.com
169.254.169.254 i1.services.social.microsoft.com.nsatc.net
169.254.169.254 lb1.www.ms.akadns.net
169.254.169.254 live.rads.msn.com
169.254.169.254 m.adnxs.com
169.254.169.254 m.hotmail.com
169.254.169.254 msedge.net
169.254.169.254 msftncsi.com
169.254.169.254 msnbot-207-46-194-33.search.msn.com
169.254.169.254 msnbot-65-55-108-23.search.msn.com
169.254.169.254 msntest.serving-sys.com
169.254.169.254 oca.telemetry.microsoft.com
169.254.169.254 oca.telemetry.microsoft.com.nsatc.net
169.254.169.254 pre.footprintpredict.com
169.254.169.254 preview.msn.com
169.254.169.254 pricelist.skype.com
169.254.169.254 rad.live.com
169.254.169.254 rad.msn.com
169.254.169.254 redir.metaservices.microsoft.com
169.254.169.254 reports.wes.df.telemetry.microsoft.com
169.254.169.254 s.gateway.messenger.live.com
169.254.169.254 s0.2mdn.net
169.254.169.254 schemas.microsoft.akadns.net 
169.254.169.254 secure.adnxs.com
169.254.169.254 secure.flashtalking.com
169.254.169.254 services.wes.df.telemetry.microsoft.com
169.254.169.254 settings.data.microsof.com
169.254.169.254 settings-sandbox.data.microsoft.com
settings-win.data.microsoft.com
169.254.169.254 sls.update.microsoft.com.akadns.net
169.254.169.254 sO.2mdn.net
169.254.169.254 spynet2.microsoft.com
169.254.169.254 spynetalt.microsoft.com
169.254.169.254 sqm.df.telemetry.microsoft.com
169.254.169.254 sqm.telemetry.microsoft.com
169.254.169.254 sqm.telemetry.microsoft.com.nsatc.net
169.254.169.254 ssw.live.com
169.254.169.254 static.2mdn.net
169.254.169.254 statsfe1.ws.microsoft.com
169.254.169.254 statsfe2.update.microsoft.com.akadns.net
169.254.169.254 statsfe2.ws.microsoft.com
169.254.169.254 survey.watson.microsoft.com
169.254.169.254 telecommand.telemetry.microsoft.com
169.254.169.254 telecommand.telemetry.microsoft.com.nsatc.net
169.254.169.254 telecommand.telemetry.microsoft.com.nsat­c.net
169.254.169.254 telemetry.appex.bing.net
169.254.169.254 telemetry.appex.bing.net:443
169.254.169.254 telemetry.microsoft.com
169.254.169.254 telemetry.urs.microsoft.com
169.254.169.254 ui.skype.com
169.254.169.254 v10.vortex-win.data.microsoft.com
169.254.169.254 view.atdmt.com
169.254.169.254 vortex.data.microsoft.com
169.254.169.254 vortex-bn2.metron.live.com.nsatc.net
169.254.169.254 vortex-cy2.metron.live.com.nsatc.net
169.254.169.254 vortex-sandbox.data.microsoft.com
169.254.169.254 vortex-win.data.microsoft.com
169.254.169.254 watson.live.com
169.254.169.254 watson.microsoft.com
169.254.169.254 watson.ppe.telemetry.microsoft.com
169.254.169.254 watson.telemetry.microsoft.com
169.254.169.254 watson.telemetry.microsoft.com.nsatc.net
169.254.169.254 wes.df.telemetry.microsoft.com
169.254.169.254 win10.ipv6.microsoft.com
169.254.169.254 win11.ipv6.microsoft.com
169.254.169.254 www.msftncsi.com
169.254.169.254 dns.msftncsi.com
169.254.169.254 ipv6.msftncsi.com
169.254.169.254 win11.ipv6.microsoft.com
169.254.169.254 win10.ipv6.microsoft.com
169.254.169.254 ipv6.msftncsi.com.edgesuite.net
169.254.169.254 a978.i6g1.akamai.net
169.254.169.254 win10.ipv6.microsoft.com.nsatc.net
169.254.169.254 win11.ipv6.microsoft.com.nsatc.net
169.254.169.254 en-us.appex-rf.msn.com
169.254.169.254 v10.vortex-win.data.microsoft.com
169.254.169.254 client.wns.windows.com
169.254.169.254 wildcard.appex-rf.msn.com.edgesuite.net
169.254.169.254 v10.vortex-win.data.metron.life.com.nsatc.net
169.254.169.254 wns.notify.windows.com.akadns.net
169.254.169.254 americas2.notify.windows.com.akadns.net
169.254.169.254 travel.tile.appex.bing.com
169.254.169.254 any.edge.bing.com
169.254.169.254 fe3.delivery.mp.microsoft.com
169.254.169.254 fe3.delivery.dsp.mp.microsoft.com.nsatc.net
169.254.169.254 ssw.live.com
169.254.169.254 ssw.live.com.nsatc.net
169.254.169.254 login.live.com.nsatc.net
169.254.169.254 directory.services.live.com
169.254.169.254 directory.services.live.com.akadns.net
169.254.169.254 bl3302.storage.live.com
169.254.169.254 skyapi.live.net
169.254.169.254 bl3302geo.storage.dkyprod.akadns.net
169.254.169.254 skyapi.skyprod.akadns.net
169.254.169.254 skydrive.wns.windows.com
169.254.169.254 register.mesh.com
169.254.169.254 BN1WNS2011508.wns.windows.com
169.254.169.254 settings-win.data.microsoft.com
169.254.169.254 settings.data.glbdns2.microsoft.com
169.254.169.254 OneSettings-bn2.metron.live.com.nsatc.net
169.254.169.254 watson.telemetry.microsoft.com
169.254.169.254 watson.telemetry.microsoft.com.nsatc.net"
J3e19DB2,Untitled,hpnq,C++,Sunday 22nd of October 2023 02:20:54 AM CDT,"#include ""bits/stdc++.h""
//speed coding

#define mp make_pair
#define cve(tpy) for (auto i : tpy) {for(auto j : i){cout << j << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

// types
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e18)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1
using namespace std;
mt19937_64 rng(113113);
uniform_int_distribution<ll> drist;


void solve() {
    int a, b;
    cin >> a >> b;
    vector<pii > p(b + 1, mp(inf, -1));
    if (a > b) {
        cout << ""-1\n"";
        return;
    }
    p[a] = mp(0, -1);
    loop(i, a, b + 1) {
        if (i * 2 <= b) {
            int x = min(p[i].f + 1, p[2 * i].f);
            if (x == p[i].f + 1) {
                p[2 * i] = mp(p[i].f + 1, 0);

            }
        }
        if (i * 10 + 1 <= b) {
            int x = min(p[i].f + 1, p[i * 10 + 1].f);
            if (x == p[i].f + 1) {
                p[i * 10 + 1] = mp(p[i].f + 1, 1);

            }
        }
    }
    for (auto i: p) {
//        cout << i << "" "";
    }
    if(p[b].f != inf){
        cout << p[b].f << ""\n"";
        vector<int> ans;
        while(b != a){
            if(p[b].s == 0 ){
                ans.pb(0);
                b/=2;
            }else if(p[b].s == 1 ){
                ans.pb(1);
                b= (b-1)/10;
            }
        }
        reverse(all(ans));
        for(auto i : ans){
            cout << i << "" "";
        }

    }
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
#ifdef DEBUG
    freopen(""text.txt"", ""r"", stdin);
#endif
    int t = 1;
//    cin >> t;
    loop(i, 0, t) {
        solve();

    }

    return 0;
}
"
m1JnjStv,Untitled,Sreekar_0125,C++,Sunday 22nd of October 2023 01:59:42 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;
#define int long long

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
}

void solve()
{
    int n;
    cin >> n;
    
    vector<int> v(n - 1);
    for(int i = 0; i < n - 1; i++)
    {
        cin >> v[i];
    }
    
    vector<int>temp(n-1);
    vector<int>cnt(n+1,0);
    int change = -1;
    
    temp[0] = v[0];
    
    if(v[0]>=1 && v[0]<=n){
        cnt[v[0]]++;
    }
     else{
            change = v[0];
    } 
    
    for(int i = 1; i<n-1; i++){
        
        temp[i] = v[i-1]^v[i];
        
       
    }
    
//     for(int i = 0; i<n-1; i++){
//         cout<<temp[i]<<"" "";
//     }
    
//     cout<<""\n"";
    
    
    
    for(int i = 1; i<n-1; i++){
        
         if(temp[i]>=1 && temp[i]<=n){
    
            cnt[temp[i]]++;
             if(cnt[temp[i]]>1){
                 if(change==-1)change = temp[i];
                 else{
                     cout<<""False\n"";
                     return;
                 }
             }
        }
        else{
            if(change!=-1){
                cout<<""False\n"";
                return;
            }
            change = temp[i];
            
        }
        
    }
    
    // for(int i = 1; i<=n; i++){
    //     cout<<cnt[i]<<"" "";
    // }
    // cout<<""\n"";
    
    int missing = 0, misCnt = 0;
    
    for(int i = 1; i<=n; i++){
        if(cnt[i]==0){
            missing^=i;
            misCnt++;
        }
      
    }
    
    //cout<<change<<"" ""<<missing<<""\n"";
    
    if(misCnt > 2){
        cout<<""False\n"";
        return;
    }
    else{
        if(change == missing){
            cout<<""True\n"";
            return;
        }
        else{
            cout<<""False\n"";
            return;
        }
    }
    
    
}


signed main() {
    fast();
    int t = 1;
    cin >> t;
    while(t--)
    {
        solve();
    }
    return 0;
}
"
HWCMX556,simple_vector.h,pavel_777,C++,Sunday 22nd of October 2023 01:46:01 AM CDT,"#pragma once

// #include <cassert>
#include <initializer_list>
#include <stdexcept>

// using namespace std;

template <typename Type>
class SimpleVector {
public:
    using Iterator = Type*;
    using ConstIterator = const Type*;

    SimpleVector() noexcept = default;

    // Создаёт вектор из size элементов, инициализированных значением по умолчанию
    explicit SimpleVector(size_t size) : SimpleVector(size, Type{}) {}

    // Создаёт вектор из size элементов, инициализированных значением value
    SimpleVector(size_t size, const Type& value) 
    : size_(size), capacity_(size) {
        items_ = new Type[size];
        std::fill(begin(), end(), value);
    }

    // Создаёт вектор из std::initializer_list
    SimpleVector(std::initializer_list<Type> init) 
    : size_(init.size()), capacity_(init.size()) {
        items_ = new Type[init.size()];
        std::copy(init.begin(), init.end(), begin());
    }

    SimpleVector(const SimpleVector& other) noexcept
    {
        // SimpleVector<Type> temp(other.size_);
        // std::copy(other.begin(), other.end(), temp.begin());
        SimpleVector temp;
        temp.capacity_ = other.capacity_;
        temp.items_ = new Type[other.size_];
        for (size_t i=0; i<other.size_; ++i)
        {
            temp[i] = other[i];
            ++temp.size_;
        }
        swap(temp);
    }

    SimpleVector& operator=(const SimpleVector& rhs) {
        if (this != &rhs) {
            SimpleVector temp(rhs);
            swap(temp);
        }
        return *this;
    }

    ~SimpleVector() {delete[] items_;}

    // Возвращает количество элементов в массиве
    size_t GetSize() const noexcept {return size_;}

    // Возвращает вместимость массива
    size_t GetCapacity() const noexcept {return capacity_;}

    // Сообщает, пустой ли массив
    bool IsEmpty() const noexcept {return !GetSize();}

    // Возвращает ссылку на элемент с индексом index
    Type& operator[](size_t index) noexcept {return items_[index];}

    // Возвращает константную ссылку на элемент с индексом index
    const Type& operator[](size_t index) const noexcept {return items_[index];}

    // Возвращает константную ссылку на элемент с индексом index
    // Выбрасывает исключение std::out_of_range, если index >= size
    Type& At(size_t index) {
        if (index >= size_) {throw std::out_of_range(""out of range"");};
        return items_[index];
    }

    // Возвращает константную ссылку на элемент с индексом index
    // Выбрасывает исключение std::out_of_range, если index >= size
    const Type& At(size_t index) const {
        if (index >= size_) {throw std::out_of_range(""out of range"");};
        return items_[index];
    }

    // Обнуляет размер массива, не изменяя его вместимость
    void Clear() noexcept {size_ = 0;}

    // Изменяет размер массива.
    // При увеличении размера новые элементы получают значение по умолчанию для типа Type
    void Resize(size_t new_size) {
        if (new_size > capacity_) {
            size_t new_capacity = new_size > (2 * capacity_)? new_size: 2 * capacity_;
            Type* new_items = new Type[new_size]();
            std::copy(begin(), end(), new_items);
            delete[] items_;
            items_ = new_items;
            capacity_ = new_capacity;
        } else if (new_size > size_) {
            std::fill(begin() + size_, begin() + new_size, Type{});
        }
        size_ = new_size;
    }

    // Возвращает итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    Iterator begin() noexcept {return items_;}

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    Iterator end() noexcept {return items_ + size_;}

    // Возвращает константный итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator begin() const noexcept {return items_;}

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator end() const noexcept {return items_ + size_;}

    // Возвращает константный итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator cbegin() const noexcept {return items_;}

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator cend() const noexcept {return items_ + size_;}

    // Добавляет элемент в конец вектора
    // При нехватке места увеличивает вдвое вместимость вектора
    void PushBack(const Type& item) {
        if (size_ == capacity_) {Resize(size_ * 2);}
        items_[size_] = item;
    }

    // Вставляет значение value в позицию pos.
    // Возвращает итератор на вставленное значение
    // Если перед вставкой значения вектор был заполнен полностью,
    // вместимость вектора должна увеличиться вдвое, а для вектора вместимостью 0 стать равной 1
    Iterator Insert(ConstIterator pos, const Type& value) {
        // if (!capacity_) {Resize(1);}
        // else if (size_ == capacity_) {Resize(size_ * 2);}
        if (size_ == capacity_ || !capacity_) {Resize(capacity_ + 1);}
        std::copy_backward(Iterator(pos), end(), Iterator(pos) + 1);
        *Iterator(pos) = value;
        return Iterator(pos);
    }

    // ""Удаляет"" последний элемент вектора. Вектор не должен быть пустым
    void PopBack() noexcept {
        if (size_) {--size_;}
    }

    // Удаляет элемент вектора в указанной позиции
    Iterator Erase(ConstIterator pos) {
        std::copy(Iterator(pos), end(), Iterator(pos) - 1);
        --size_;
        return Iterator(pos);
    }

    // Обменивает значение с другим вектором
    void swap(SimpleVector& other) noexcept {
        std::swap(items_, other.items_);
        std::swap(size_, other.size_);
        std::swap(capacity_, other.capacity_);
    }

private:
    Type* items_ = nullptr;
    size_t size_ = 0;
    size_t capacity_ = 0;
};

template <typename Type>
inline bool operator==(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return std::equal(lhs.begin(), lhs.end(), rhs.begin());

}

template <typename Type>
inline bool operator!=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return !(lhs==rhs);
}

template <typename Type>
inline bool operator<(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return std::lexicographical_compare(lhs.begin(), lhs.end(), rhs.begin(), rhs.end());
}

template <typename Type>
inline bool operator<=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return lhs<rhs || lhs==rhs;
}

// TODO
// Реализуйте оператор> как return rhs < lhs;. Потому что !(std::lexicographical_compare(...) включает не все варианты.
template <typename Type>
inline bool operator>(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return !(lhs<=rhs);
}

template <typename Type>
inline bool operator>=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return !(lhs<rhs);
} 
"
dhvQdjdK,NIA HTML,frostfireflakes,HTML,Sunday 22nd of October 2023 12:19:36 AM CDT,"<!DOCTYPE html>
<html>
<head>
  <title>NIA FORM</title>
  <style>
    #runButton {
      font-size: 6em; /* Adjust the font size to increase button size */
    }
  </style>
</head>
<body>
  <button id=""runButton"">START</button>
  <p>
  <div id=""output""></div>
  
  <script>
    // Function to format the firstname as described
    function formatFirstname(firstname) {
      return firstname.replace(/\w+/g, function(word) {
        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
      });
    }

    // Function to get user input
    function getUserInput(inputPrompt) {
      return prompt(`Enter ${inputPrompt}: `);
    }

    // Function to format the result
    function formatResult(firstname, lastname, summary, safvrRating, safvrScore, dyraStatement, concernRating, victimisationStatement, fhHistoryStatement, criminalHistoryStatement, alertsStatement) {
      lastname = lastname.toUpperCase();
      summary = summary.toUpperCase();
      firstname = formatFirstname(firstname); // Format firstname
      return `${firstname} ${lastname} (${summary}) ** SAFVR SCORE ${safvrRating} ${safvrScore} ** DYRA ${dyraStatement} | Total Concerns ${concernRating} ** ${victimisationStatement}\nFH History: ${fhHistoryStatement}\nCriminal History: ${criminalHistoryStatement}\nAlerts: ${alertsStatement}`;
    }

    // Function to display the result on the web page
    function displayResult(result) {
      const outputDiv = document.getElementById(""output"");
      // Create a new <div> element for the new output
      const newOutputDiv = document.createElement(""div"");
      // Replace '\n' characters with '<br>' tags for proper line breaks
      result = result.replace(/\n/g, ""<br>"");
      
      // Check if outputDiv already contains content
      if (outputDiv.innerHTML !== """") {
        outputDiv.appendChild(document.createElement(""br"")); // Add a line break
      }

      newOutputDiv.innerHTML = result;
      // Append the new output to the existing output with a line break in between
      outputDiv.appendChild(newOutputDiv);
    }

    // Function to run the code when the button is clicked
    document.getElementById(""runButton"").addEventListener(""click"", function() {
      // Start collecting user input
      const firstname = getUserInput(""firstname"");
      const lastname = getUserInput(""lastname"");
      const age = getUserInput(""age"");
      const gender = getUserInput(""gender"");
      const ethnicity = getUserInput(""ethnicity (leave blank if none)"");
      const summary = (ethnicity) ? `${age}${gender}, ${ethnicity}` : `${age} ${gender}`;
      
      const victimisationRating = getUserInput(""Victimisation rating (GREEN, AMBER, RED, NIL)"");
      let victimisationStatement = """";

      if (victimisationRating !== ""NIL"" && victimisationRating !== null) {
        const victimisationScore = getUserInput(""Victimisation score (string)"");
        victimisationStatement = `Victimisation: ${victimisationRating} ${victimisationScore}`;
      } else {
        victimisationStatement = ""Nil Victimisation"";
      }

      const alertsStatement = getUserInput(""Alerts"");

      const last12Months = getUserInput(""FH History: Last 12 Months"");

      let fhHistoryStatement = """";

      if (last12Months === ""OVERWRITE"" || last12Months === null) {
        fhHistoryStatement = getUserInput(""FH History: Enter new statement"");
      } else {
        const totalOccurences = getUserInput(""FH History: Total Occurrences"");
        const sinceYear = getUserInput(""FH History: Since what year"");

        let predominantRole = getUserInput(""FH History: Predominant Role"");
        let initialPredominantRole = predominantRole;

        if (
          predominantRole === ""NIL"" || predominantRole === ""nil"" || predominantRole === null
        ) {
          predominantRole = ""nil victimisation pattern"";
        } else {
          predominantRole = ""predominantly "" + predominantRole;
        }

        fhHistoryStatement = `${last12Months}/12 - ${totalOccurences} occurrences since ${sinceYear}, ${predominantRole}.`;
      }

      const caseNumber = getUserInput(""Criminal History: Total number of cases""); // Change prompt to ""Total number of cases""
      let criminalHistoryStatement = """";

      if (caseNumber === ""0"") {
        criminalHistoryStatement = ""Nil"";
      } else if (caseNumber == ""OVERWRITE"" || caseNumber === null) {
        criminalHistoryStatement = getUserInput(""Criminal History: Enter new statement"");
      } else {
        const sinceYear = getUserInput(""Criminal History: Since what year"");
        const chargesFor = getUserInput(""Criminal History: Charges for what?"");
        criminalHistoryStatement = `${caseNumber} clearances/charges since ${sinceYear}. Charges for ${chargesFor}`;
      }

      const safvrRating = getUserInput(""SAFVR rating (INELIGIBLE, LOW, MODERATE, HIGH)"");
      let safvrScore = """";

      if (safvrRating !== ""INELIGIBLE"") {
        safvrScore = getUserInput(""SAFVR score"");
      }

      const dyraRating = getUserInput(""DYRA rating (LOW, MODERATE, HIGH)"");

      let dyraRisks = getUserInput(""DYRA Risks (Press Escape to set as 'No risks')"");
      if (dyraRisks === null) {
        dyraRisks = ""No risks"";
      }

      const dyraStatement = `${dyraRating} ${dyraRisks}`;

      const concernRating = getUserInput(""Total Concerns rating (LOW, MODERATE, HIGH)"");

      const result = formatResult(firstname, lastname, summary, safvrRating, safvrScore, dyraStatement, concernRating, victimisationStatement, fhHistoryStatement, criminalHistoryStatement, alertsStatement);

      displayResult(result);
    });
  </script>
</body>
</html>
"
GCd4zaCX,To Do Manager (Using Linked List),King_Kuro,C,Sunday 22nd of October 2023 12:03:34 AM CDT,"// To DO
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    void *next;
    int data;
    char noteData[512];
} Node;

Node *head = NULL;

//add
Node *addNode(int data, const char noteData[512]) {
    Node *new = NULL;

    if (head == NULL) {
        new = malloc(sizeof(Node));
        if (new == NULL)
            return NULL;
        
        new->data = data;
        strcpy(new->noteData, noteData);
        head = new;
        new->next = NULL;
    }
    else {
        new = malloc(sizeof(Node));
        if (new == NULL)
            return NULL;
        
        new->data = data;
        strcpy(new->noteData, noteData);
        new->next = head;
        head = new;
    }
    
    return new;
}


//delete
int removeNode(int data) {
    Node *current = head;
    Node *prev = head;
    while (current != NULL) {
        if (current->data == data) {
            //if current is head
            if (current == head) {
                head = current->next;
            }
            else {
                prev->next = current->next;
                free(current);
                current = NULL;
            }
            
            return 1;
        }
        prev = current;
        current = current->next;
    }
    
    return 0;
}

//print node
void printList() {
    printf(""\nTO DOS:\n"");
    printf(""------------------------\n"");
    Node *current = head;
    while (current != NULL) {
        printf(""ID: %d - %s\n"", current->data, current->noteData);
        current = current->next;
    }
    printf(""------------------------\n"");
    printf(""\n\n\n\n"");
    return;
}

//menu options
void printMenu() {
    printf(""1. Add New To Do\n"");
    printf(""2. Delete To Do\n"");
    printf(""3. Quit\n"");
    printf("">>"");
    return;
    
}

//header
void printHeader() {
    printf(""------------TO DO-------------"");
    printf(""\n\n\n\n"");
}

int main() {
    
    printHeader();
    
    int option = 1;
    int arg1 = 0;
    int arg2 = 0;
    int toDoCount = 1;
    char toDo[512];
    
    while (option != 3) {
        printf(""\n\n\n\n"");
        printList();
        printMenu();
        
        scanf(""%d"", &option);
        getchar();
        switch (option) {
            case 1:
                //add
                printf(""Enter to Do: "");
                scanf(""%511[^\n]"", toDo);
                getchar();
                Node *new = addNode(toDoCount,toDo);
                toDoCount++;
                printf(""\n\n"");
                break;
                    
            case 2:
                //delete
                printf(""Enter to do ID to delete: "");
                scanf(""%d"", &arg1);
                int success = removeNode(arg1);
                if (!success) {
                    printf(""to do ID not found!"");
                }
                printf(""\n\n"");
                break;
            case 3:
                break;
                
            default:
                break;
        }
    }

    return 0;
}"
ZSygr3q2,sercqi's Data,azimuths,JSON,Sunday 22nd of October 2023 12:00:31 AM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-7""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""534""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""175""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Block Training\"",\""Block Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""70""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""53""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""47""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4221""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""3523891619""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Serc""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""108""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Serc(23)1550735""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""84""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-2""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""56""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Clone Jutsu""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Bubble Drown""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""158""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-126""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""16""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Clone Jutsu"":{""ObjectName"":""Clone Jutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Bubble Drown"":{""ObjectName"":""Bubble Drown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
ChpNZVCN,snowybot,coinwalk,JavaScript,Saturday 21st of October 2023 11:54:12 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/800).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
bilance = ((document.getElementById('pct_balance').value)-cook);
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=woman)){
burp = nudie;
sexual = 0;
cook = ((parseFloat(bolance))-splif);
woman = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<woman)){
burp = nudie;
sexual = 0;
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
w3QBCrR4,snowybot,coinwalk,JavaScript,Saturday 21st of October 2023 11:52:53 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/144000).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
var bart = 0
var birp = (woman-smiley);
var bilance = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>bilance){
    burp = nudie;
    bart = 0
    woman = parseFloat(bolance);
    birp = (woman-bolance);
    bilance = parseFloat(bolance);
}
if (bolance<bilance){
    bart = bart+nudie;
    birp = (woman-bolance);
    burp = (bart+birp)   
    bilance = parseFloat(bolance);
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
Wth1mZSk,AFK Ship v1.0,darei,Lua,Saturday 21st of October 2023 11:35:29 PM CDT,"DetectHiddenWindows, On
SetTitleMatchMode, 2

WinGetClass, WinClass, Trove

loop {
SetTimer, GetFocus, 200								; Makes the browser gain focus every 200 ms
}
return

GetFocus:
ControlFocus,, Trove
Return


F3::
	loop 
	{
		Controlsend,, {Numpad0 down}, ahk_class %WinClass%
		Sleep 100
		Controlsend,, {2 down}, ahk_class %WinClass%
		Sleep 200
		Controlsend,, {2 up}, ahk_class %WinClass%
		Sleep 30000
		Controlsend,, {e down}, ahk_class %WinClass%
		Sleep 500
		Controlsend,, {e up}, ahk_class %WinClass%
		
	}
	
	
	
F2::Pause"
RBYgxuAq,floorSelector,imposiblaa,Lua,Saturday 21st of October 2023 10:42:42 PM CDT,"
local surface = dofile(""/surface"")
globalPort = 5296
localId = ""cf3357aaeb3ccdd8b4ab54b9f8ccdf3a""

modem = peripheral.find(""modem"")
modem.open(globalPort)
database = {
	{name=""test"", id=1,}
}

console = {}
buttons = {}
selected = nil

    
local surf = surface.create(51,19,colors.black)

local bg = surface.create(102,57,colors.black)

commands = {
    alert = function(input)
        assert(type(input) == ""string"", ""helloWorld expects a string for its input"")
        print(""ALERT: "" .. input)
        return true
    end,

    updateDb = function(db)
	assert(type(db) == ""table"", ""updateDB expects a table for its input"")
	database = db
    end,

    updateStatus = function(id, status)
	assert(type(id) == ""number"", ""updateStatus expects an int for its input \""id\"""")
	assert(type(status) == ""table"", ""updateStatus expects a table for its input \""id\"""")
	database[id]=status
    end
}


function commandParser(event, side, channel, replyChannel, message, distance) 
    if message.cmd ~= nil and message.args ~= nil then
	newLine = (message.cmd .. "" "" .. message.tgt)
	for i,arg in pairs(message.args) do
		newLine = (newLine .. "" "" .. tostring(arg))
	end
	addLnCon(newLine)
    end
    if commands[message.cmd] ~= nil and message.args ~= nil then
        ran, err = pcall(commands[message.cmd], table.unpack(message.args))
        if not ran then
            print((""Error in \""%s\"": %s""):format(message.cmd, err))
        end
    else
        print((""No command named \""%s\"" found""):format(message.cmd))
    end
end

function commandRunner(command, target, arguments)
	assert(type(command) == ""string"", ""commandRunner expects a string for its input \""command\"""")
	assert(type(target) == ""number"", ""commandRunner expects a number for its input \""target\"""")
	assert(type(arguments) == ""table"", ""commandRunner expects a table for its input \""arguments\"""")
	modem.transmit(5296,5296, {cmd=command, tgt=target, args=arguments})
end

function checkButtons(x,y)
	for i,button in pairs(buttons) do
		if x>=button.tl[1] and y>=button.tl[2] and x<=button.br[1] and y<=button.br[2] then
			button.fun(i)
		end
	end
end

function checkEvents()
	while true do
		event = {os.pullEvent()}
		
		if event[1] == ""modem_message"" then
			commandParser(table.unpack(event))
			return
		elseif event[1] == ""mouse_click"" then
			checkButtons(event[3], event[4])
			return
		end
	end
end

function drawBg()
	bg:drawLine(26,0,26,55, colors.gray)
	bg:drawLine(26,0,100,0, colors.gray)
	bg:drawLine(100,0,100,55, colors.gray)
	bg:drawLine(100,55,26,55, colors.gray)

	bg:drawLine(0,0,0,55, colors.gray)
	bg:drawLine(0,0,26,0, colors.gray)
	bg:drawLine(0,55,26,55, colors.gray)
end

function drawCon()
	for line, value in pairs(console) do
		surf:drawString(value, 14, 16-line, colors.black, colors.gray)	
	end

	surf:drawString(""CMD > "", 14,17, colors.black, colors.purple)
	surf:drawString(""Network Feed"", 25,0, colors.black, colors.purple)
end

function addLnCon(input) 
	table.move(console, 1, 14, 2, console)
	console[1]=string.sub(input, 1, 36)
end

function consoleInput()
	input = read()

	addLnCon(input)
	input = input .. "" ""
	cmd = """"
	args = {}
	i = 1
	for w in input:gmatch(""(.-) "") do
		if tonumber(w) ~= nil then
			w = tonumber(w)
		end
		if i==1 then
			cmd = w
		else
			table.insert(args, w)
		end
		i=i+1
	end

	commandRunner(cmd, 0, args)
end

function drawFloors()
	surf:drawString(""Floors:"", 1, 0, colors.black, colors.purple)
	i=1
	lFloor=nil
	for i,floor in pairs(database) do
		if floor.cur == localId then
			lFloor = i
		end
	end
	for id,floor in pairs(database) do
		if id == lFloor then
			surf:drawLine(1,2,11,2,colors.purple)
			surf:drawString(floor.name,2,2,colors.purple,colors.black)
		else
			surf:drawLine(1,i*2+2,11,i*2+2,colors.gray)
			buttons[floor.name] = {tl={2,i*2+3}, br={12,i*2+3}, fun=function(name) commandRunner(""getFloors"", -1, {}) selected=name end}
			surf:drawString(floor.name, 2,i*2+2, colors.gray, colors.lightGray)
			i=i+1
		end
	end
end

function go()
	dep=nil
	dest=nil
	for i,floor in pairs(database) do
		if floor.cur == localId then
			dep = i
		end
		if floor.name == selected then
			dest = i
		end

	end
	if dep==nil then addLnCon(""ERROR: Could not locate you!"") return end
	if dest==nil then addLnCon(""ERROR: Could not locate destination!"") return end
	if dep==dest then
		addLnCon(""ERROR: Cannot go to current floor!"")
		return
	end
	addLnCon(""requestTransport 0 "" .. dep .. "" "" .. dest)
	commandRunner(""requestTransport"", 0, {dep, dest}) 
	commandRunner(""getFloors"", 0, {})
end

function confirmation() 
	confirm = surface.create(21, 6, colors.gray)
	confirm:drawString((""  Confirm travel to""), 0,1,colors.gray,colors.lightGray)
	confirm:drawString(""\""""..selected..""\"""", 2,2,colors.gray,colors.lightGray)
	confirm:drawLine(1,4,8,4,colors.lightGray)
	confirm:drawLine(11,4,19,4,colors.purple)
	confirm:drawString(""cancel"", 2,4,colors.lightGray,colors.black)
	confirm:drawString(""confirm"",12,4,colors.purple,colors.black)
	surf.overwrite=true
	surf:drawSurface(confirm, 15, 6)
	buttons[""cancel""] = {tl={17,11},br={24,11}, fun=(function(name) selected=nil end)}
	buttons[""confirm""] =  {tl={27,11},br={34,11}, fun=(function(name) go() selected=nil end)}
end

function draw()
	buttons = {}
	surf:drawSurfaceSmall(bg, 0, 0)

	drawCon()
	drawFloors()


	if selected ~= nil then
		confirmation()	
		surf:output()
		sleep(1)
	else
		surf:output()
		term.setTextColor(colors.lightGray)
		term.setBackgroundColor(colors.black)
		term.setCursorPos(21,18)
		term.setCursorBlink(true)
		consoleInput()
	end

end
    
drawBg()
commandRunner(""getFloors"", 0, {})
while true do
	parallel.waitForAny(draw,checkEvents)            
end
"
jW99Gzz0,TF_Mod,Jstrece,Python,Saturday 21st of October 2023 10:41:21 PM CDT,"######## Webcam Object Detection Using Tensorflow-trained Classifier #########
#
# Author: Evan Juras
# Date: 10/27/19
# Description: 
# This program uses a TensorFlow Lite model to perform object detection on a live webcam
# feed. It draws boxes and scores around the objects of interest in each frame from the
# webcam. To improve FPS, the webcam object runs in a separate thread from the main program.
# This script will work with either a Picamera or regular USB webcam.
#
# This code is based off the TensorFlow Lite image classification example at:
# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/examples/python/label_image.py
#
# I added my own method of drawing boxes and labels using OpenCV.

# Import packages
import os
import argparse
import cv2
import numpy as np
import sys
import time
from threading import Thread
import importlib.util

# Define VideoStream class to handle streaming of video from webcam in separate processing thread
# Source - Adrian Rosebrock, PyImageSearch: https://www.pyimagesearch.com/2015/12/28/increasing-raspberry-pi-fps-with-python-and-opencv/
class VideoStream:
    """"""Camera object that controls video streaming from the Picamera""""""
    def __init__(self,resolution=(640,480),framerate=30):
        # Initialize the PiCamera and the camera image stream
        self.stream = cv2.VideoCapture(0)
        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))
        ret = self.stream.set(3,resolution[0])
        ret = self.stream.set(4,resolution[1])
            
        # Read first frame from the stream
        (self.grabbed, self.frame) = self.stream.read()

	# Variable to control when the camera is stopped
        self.stopped = False

    def start(self):
	# Start the thread that reads frames from the video stream
        Thread(target=self.update,args=()).start()
        return self

    def update(self):
        # Keep looping indefinitely until the thread is stopped
        while True:
            # If the camera is stopped, stop the thread
            if self.stopped:
                # Close camera resources
                self.stream.release()
                return

            # Otherwise, grab the next frame from the stream
            (self.grabbed, self.frame) = self.stream.read()

    def read(self):
	# Return the most recent frame
        return self.frame

    def stop(self):
	# Indicate that the camera and thread should be stopped
        self.stopped = True

# Define and parse input arguments
parser = argparse.ArgumentParser()
parser.add_argument('--modeldir', help='Folder the .tflite file is located in',
                    required=True)
parser.add_argument('--graph', help='Name of the .tflite file, if different than detect.tflite',
                    default='detect.tflite')
parser.add_argument('--labels', help='Name of the labelmap file, if different than labelmap.txt',
                    default='labelmap.txt')
parser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',
                    default=0.5)
parser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',
                    default='1280x720')
parser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',
                    action='store_true')

args = parser.parse_args()

MODEL_NAME = args.modeldir
GRAPH_NAME = args.graph
LABELMAP_NAME = args.labels
min_conf_threshold = float(args.threshold)
resW, resH = args.resolution.split('x')
imW, imH = int(resW), int(resH)
use_TPU = args.edgetpu

# Import TensorFlow libraries
# If tflite_runtime is installed, import interpreter from tflite_runtime, else import from regular tensorflow
# If using Coral Edge TPU, import the load_delegate library
pkg = importlib.util.find_spec('tflite_runtime')
if pkg:
    from tflite_runtime.interpreter import Interpreter
    if use_TPU:
        from tflite_runtime.interpreter import load_delegate
else:
    from tensorflow.lite.python.interpreter import Interpreter
    if use_TPU:
        from tensorflow.lite.python.interpreter import load_delegate

# If using Edge TPU, assign filename for Edge TPU model
if use_TPU:
    # If user has specified the name of the .tflite file, use that name, otherwise use default 'edgetpu.tflite'
    if (GRAPH_NAME == 'detect.tflite'):
        GRAPH_NAME = 'edgetpu.tflite'       

# Get path to current working directory
CWD_PATH = os.getcwd()

# Path to .tflite file, which contains the model that is used for object detection
PATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)

# Path to label map file
PATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)

# Load the label map
with open(PATH_TO_LABELS, 'r') as f:
    labels = [line.strip() for line in f.readlines()]

# Have to do a weird fix for label map if using the COCO ""starter model"" from
# https://www.tensorflow.org/lite/models/object_detection/overview
# First label is '???', which has to be removed.
if labels[0] == '???':
    del(labels[0])

# Load the Tensorflow Lite model.
# If using Edge TPU, use special load_delegate argument
if use_TPU:
    interpreter = Interpreter(model_path=PATH_TO_CKPT,
                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])
    print(PATH_TO_CKPT)
else:
    interpreter = Interpreter(model_path=PATH_TO_CKPT)

interpreter.allocate_tensors()

# Get model details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()
height = input_details[0]['shape'][1]
width = input_details[0]['shape'][2]

floating_model = (input_details[0]['dtype'] == np.float32)

input_mean = 127.5
input_std = 127.5

# Check output layer name to determine if this model was created with TF2 or TF1,
# because outputs are ordered differently for TF2 and TF1 models
outname = output_details[0]['name']

if ('StatefulPartitionedCall' in outname): # This is a TF2 model
    boxes_idx, classes_idx, scores_idx = 1, 3, 0
else: # This is a TF1 model
    boxes_idx, classes_idx, scores_idx = 0, 1, 2

# Initialize frame rate calculation
frame_rate_calc = 1
freq = cv2.getTickFrequency()

# Initialize video stream
videostream = VideoStream(resolution=(imW,imH),framerate=30).start()
time.sleep(1)

#for frame1 in camera.capture_continuous(rawCapture, format=""bgr"",use_video_port=True):

    cv2.namedWindow('Object detector', cv2.WINDOW_NORMAL)  # Crea una ventana redimensionable
    # Para maximizar la ventana, descomenta la siguiente línea:
    # cv2.setWindowProperty('Object detector', cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)

while True:

    # Start timer (for calculating frame rate)
    t1 = cv2.getTickCount()

    # Grab frame from video stream
    frame1 = videostream.read()
	frame1 = videostream.read()
    frame = cv2.flip(frame1, 1)  # Voltea el frame horizontalmente

    # Acquire frame and resize to expected shape [1xHxWx3]
    frame = frame1.copy()
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    frame_resized = cv2.resize(frame_rgb, (width, height))
    input_data = np.expand_dims(frame_resized, axis=0)

    # Normalize pixel values if using a floating model (i.e. if model is non-quantized)
    if floating_model:
        input_data = (np.float32(input_data) - input_mean) / input_std

    # Perform the actual detection by running the model with the image as input
    interpreter.set_tensor(input_details[0]['index'],input_data)
    interpreter.invoke()

    # Retrieve detection results
    boxes = interpreter.get_tensor(output_details[boxes_idx]['index'])[0] # Bounding box coordinates of detected objects
    classes = interpreter.get_tensor(output_details[classes_idx]['index'])[0] # Class index of detected objects
    scores = interpreter.get_tensor(output_details[scores_idx]['index'])[0] # Confidence of detected objects

    # Loop over all detections and draw detection box if confidence is above minimum threshold
    for i in range(len(scores)):
        if ((scores[i] > min_conf_threshold) and (scores[i] <= 1.0)):

            # Get bounding box coordinates and draw box
            # Interpreter can return coordinates that are outside of image dimensions, need to force them to be within image using max() and min()
            ymin = int(max(1,(boxes[i][0] * imH)))
            xmin = int(max(1,(boxes[i][1] * imW)))
            ymax = int(min(imH,(boxes[i][2] * imH)))
            xmax = int(min(imW,(boxes[i][3] * imW)))
            
            cv2.rectangle(frame, (xmin,ymin), (xmax,ymax), (10, 255, 0), 2)

            # Draw label
            object_name = labels[int(classes[i])] # Look up object name from ""labels"" array using class index
            label = '%s: %d%%' % (object_name, int(scores[i]*100)) # Example: 'person: 72%'
            labelSize, baseLine = cv2.getTextSize(label, cv2.FONT_HERSHEY_SIMPLEX, 0.7, 2) # Get font size
            label_ymin = max(ymin, labelSize[1] + 10) # Make sure not to draw label too close to top of window
            cv2.rectangle(frame, (xmin, label_ymin-labelSize[1]-10), (xmin+labelSize[0], label_ymin+baseLine-10), (255, 255, 255), cv2.FILLED) # Draw white box to put label text in
            cv2.putText(frame, label, (xmin, label_ymin-7), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 0), 2) # Draw label text

    # Draw framerate in corner of frame
    cv2.putText(frame,'FPS: {0:.2f}'.format(frame_rate_calc),(30,50),cv2.FONT_HERSHEY_SIMPLEX,1,(255,255,0),2,cv2.LINE_AA)

    # All the results have been drawn on the frame, so it's time to display it.
    cv2.imshow('Object detector', frame)

    # Calculate framerate
    t2 = cv2.getTickCount()
    time1 = (t2-t1)/freq
    frame_rate_calc= 1/time1

    # Press 'q' to quit
    if cv2.waitKey(1) == ord('q'):
        break

# Clean up
cv2.destroyAllWindows()
videostream.stop()"
UqwL6uEa,Autumn 23 Cup Save Fixes Needed,Potatotron,Diff,Saturday 21st of October 2023 10:12:25 PM CDT,"The following teams have errors in need of save fixing before the deadline of Wednesday, October 25th, at 23:59:59 UTC.
Please submit them before then at: https://implyingrigged.info/wiki/2023_4chan_Autumn_Babby_Cup_Save_Fixes

/cm/:
Number of Silver medals is 3, should be 2.
Make one of these players a regular player:
LONELY GAY NEET (set all Ability Stats to 77, set Injury Resistance to 1, set Form to 4, set Weak Foot Usage/Accuracy to 2/2)
or
COOMORI (set all Ability Stats to 77, set Injury Resistance to 1, set Form to 4, set Weak Foot Usage/Accuracy to 2/2)
or
SUICIDAL HOONI (set all Ability Stats to 77, set Injury Resistance to 1, set Form to 4, set Weak Foot Usage/Accuracy to 2/2)

/his/:
MONGOLIAN HORSE ARCHER
	-Has 9 cards, only allowed 8 (Remove one of the following: One-touch pass, Weighted Pass, Pinpoint Crossing, Low Lofted Pass, Track Back, Interception, Speeding Bullet)
BURNIN' SHERMAN
	-Has 9 cards, only allowed 8 (Remove one of the following: One-touch pass, Weighted Pass, Pinpoint Crossing, Low Lofted Pass, Track Back, Interception, Speeding Bullet)
TIKTAALIK
	-Has 9 cards, only allowed 8 (Remove one of the following: One-touch pass, Weighted Pass, Pinpoint Crossing, Low Lofted Pass, Track Back, Interception, Speeding Bullet)

/sci/:
YOU SHOULD BE ABLE TO SOLVE THIS
	-Has 7 cards, only allowed 6 (Remove one of the following: First-time Shot, One-touch Pass, Weighted Pass, Interception, OR remove an additional position: SS, CMF)"
pSTcbPyj,SUKA KARATSUBA,ProgMe,C++,Saturday 21st of October 2023 10:09:05 PM CDT,"#include <bits/stdc++.h>

#define getchar getchar_unlocked

using namespace std;

class Number {
    int sign;

    [[maybe_unused]] void add_lz(size_t count) {
        while (count--) {
            digits.push_back(0);
        }
    }

    void add_tz(size_t count) {
        while (count--) {
            digits.push_front(0);
        }
        clear_lz();
    }

    void clear_lz() {
        while (digits.size() > 1 && digits.back() == 0) {
            digits.pop_back();
        }
    }

    [[nodiscard]] Number native_multiply(const Number& one, const Number& other) const {
        size_t n = max(length(), other.length());
        Number result(one.sign * other.sign, 2 * n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i < length() && j < other.length()) {
                    result.digits[i + j] += (*this)[i] * other[j];
                }
            }
        }

        int transposition = 0;
        for (int i = 0; i < 2 * n; i++) {
            result.digits[i] += transposition % 10;
            transposition /= 10;

            if (result[i] > 9) {
                transposition += result[i] / 10;
                result.digits[i] %= 10;
            }
        }
        while (transposition) {
            result.digits.push_back(transposition % 10);
            transposition /= 10;
        }
        result.clear_lz();

        return result;
    }

    static pair<Number, Number> split(const Number& number, size_t middle) {
        Number first;
        for (size_t i = min(number.length(), middle); i < number.length(); ++i) {
            first.digits.push_back(number[i]);
        }
        first.clear_lz();

        Number second;
        for (size_t i = 0; i < min(number.length(), middle); ++i) {
            second.digits.push_back(number[i]);
        }
        second.clear_lz();

        return {first, second};
    }

protected:
    deque<int> digits;

    Number(int sign, size_t size) : sign(sign), digits(size, 0) {}

    Number(int sign, const deque<int>& digits) : sign(sign), digits(digits) {
        if (sign != 1 && sign != -1) {
            throw invalid_argument(""Wrong sign"");
        }
        clear_lz();
    }

    int operator [] (size_t index) const {
        if (index >= length()) {
            throw out_of_range(""Out of range"");
        }
        return digits[index];
    }

public:
    [[nodiscard]] const deque<int>& getDigits() const {
        return digits;
    }

    [[nodiscard]] size_t length() const {
        return digits.size();
    }

    Number() : sign(1), digits() {}

    explicit Number(string& s) {
        sign = 1;
        for (auto digit : s) {
            digits.push_front(digit - '0');
        }
        clear_lz();
    }

    bool operator < (const Number& other) {
        if (length() < other.length()) {
            return true;
        }
        if (length() > other.length()) {
            return false;
        }
        for (int i = length() - 1; i >= 0; --i) {
            if ((*this)[i] < other[i]) {
                return true;
            }
            if ((*this)[i] > other[i]) {
                return false;
            }
        }
        return false;
    }

    Number operator + (const Number& other) {
        if (sign != other.sign) {
            Number first = *this;
            Number second = other;

            if (first.sign == -1) {
                swap(first, second);
            }
            second.sign = 1;

            return first - second;
        }
        Number result(sign, max(length(), other.length()) + 1);

        bool transposition = false;
        for (int i = 0; i <= max(length(), other.length()); ++i) {
            result.digits[i] = transposition;

            if (i < length()) {
                result.digits[i] += (*this)[i];
            }
            if (i < other.length()) {
                result.digits[i] += other[i];
            }

            if (result[i] > 9) {
                transposition = true;
                result.digits[i] -= 10;
            } else {
                transposition = false;
            }
        }
        result.clear_lz();

        return result;
    }

    Number operator - (const Number& other) {
        if (sign != other.sign) {
            Number first = *this;
            Number second = other;

            if (first.sign == -1) {
                second.sign = -1;
            } else {
                second.sign = 1;
            }

            return first + second;
        }
        if (*this < other) {
            Number first = *this;
            Number second = other;
            return second - first;
        }

        Number result(sign, max(digits.size(), other.digits.size()));

        int transposition = 0;
        for (int i = 0; i < max(length(), other.length()); ++i) {
            result.digits[i] = transposition;

            if (i < length()) {
                result.digits[i] += (*this)[i];
            }
            if (i < other.length()) {
                result.digits[i] -= other[i];
            }

            if (result[i] < 0) {
                transposition = -1;
                result.digits[i] += 10;
            } else {
                transposition = 0;
            }
        }
        result.clear_lz();

        return result;
    }

    Number operator * (const Number& other) {
        size_t n = max(length(), other.length());
        if (n <= 64) {
            return native_multiply(*this, other);
        }

        size_t middle = n / 2;
        auto [A1, A2] = split(*this, static_cast<int>(middle));
        auto [B1, B2] = split(other, static_cast<int>(middle));

        Number C1 = A1 * B1;
        Number C2 = A2 * B2;
        Number C3 = (A1 + A2) * (B1 + B2) - C1 - C2;

        C3.add_tz(middle);
        C1.add_tz(2 * middle);

        Number result = C1 + C2 + C3;
        result.clear_lz();

        return result;
    }

    void readNumber() {
        int s = 1, c = getchar();
        while (c != '-' && !('0' <= c && c <= '9')) {
            c = getchar();
        }

        if (c == '-')
            sign = -1, c = getchar();
        else
            sign = 1;

        while ('0' <= c && c <= '9')
            digits.push_front(c - '0'), c = getchar();
    }
};

ostream& operator << (ostream& out, const Number& number) {
    for (auto it = number.getDigits().end(); it != number.getDigits().begin(); ) {
        --it;
        cout << *it;
    }
    return out;
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    Number a, b;
    a.readNumber();
    b.readNumber();
    cout << a * b;
}
"
1gCqfyzA,Recruitment in the army! PYTHON,estefani-adriano,Python,Saturday 21st of October 2023 09:53:06 PM CDT,"#recruitment in the army - PYTHON

from datetime import date
print('-=-=' * 10)
print('          RECRUITMENT IN THE ARMY!')
print('-=-=' * 10)

birthYear = int(input('Date of birth? '))
currentYear = date.today().year #ano atual
calculateAge = (currentYear-birthYear)
year2 = (18-calculateAge)
year3 = (calculateAge-18)
color = {'green' : '\033[4;32m', 'nothing' : '\033[m', 'red' : '\033[4;31m', 'yellow' : '\033[4;33m'}

if calculateAge < 18:
    print('{}You are {} years old, {} year(s) away from enlistment!{}'.format(color['green'], calculateAge, year2, color['nothing']))
elif calculateAge == 18:
    print('{}You are {} years old, its time to enlist, please report to the battalion!{}'.format(color['yellow'],calculateAge, color['nothing']))
elif calculateAge > 18:
    print('{}You are {} years old, {} year(s) has passed since your enlistment period!{}'.format(color['red'], calculateAge, year3, color['nothing']))

#by Estéfani =D"
HbDjkPPE,MobScript EP.03,Anukun_Lucifer,Lua,Saturday 21st of October 2023 09:31:52 PM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local mob = {}

function mob.Move(mob, map)
	local humanoid = mob:WaitForChild(""Humanoid"")
	local waypoints = map.Waypoints

	for waypoint = 1, #waypoints:GetChildren() do
		humanoid:MoveTo(waypoints[waypoint].Position)
		humanoid.MoveToFinished:Wait()
	end
	
	mob:Destroy()
	
end

function mob.Spawn(name, quantity, map)
	local mobExists = serverstorage.Mobs:FindFirstChild(name)
	
	if mobExists then
		for i=1, quantity do
			task.wait(0.5)
			local newMob = mobExists:Clone()
			newMob.HumanoidRootPart.CFrame = map.Start.CFrame
			newMob.Parent = map.Mob
			newMob.HumanoidRootPart:SetNetworkOwner(nil)
			
			for i, object in ipairs(newMob:GetDescendants()) do
				if object:IsA(""BasePart"") then
					physicsservice:SetPartCollisionGroup(object, ""Mob"")
				end
			end
			
			coroutine.wrap(mob.Move)(newMob, map)
		end
	else
		warn(""Requested mob dose not exist"",name)
	end
end

return mob"
KtYwsZts,MainScript EP.03,Anukun_Lucifer,Lua,Saturday 21st of October 2023 09:31:01 PM CDT,"local mob = require(script.MobScript)
local map = workspace.Grassland

for wave = 1,10 do
	if wave <= 2 then
		mob.Spawn(""Cameraman"",5 * wave,map)
		mob.Spawn(""Zombie"", 3 * wave, map)
	elseif wave <= 5 then
		for i = 1,5 do
			mob.Spawn(""Cameraman"",wave,map)
			mob.Spawn(""Zombie"", wave, map)
			mob.Spawn(""Naruto"", 3, map)
		end
	elseif wave <=9 then
		mob.Spawn(""Cameraman"",wave,map)
		mob.Spawn(""Zombie"", wave, map)
		for i= 1,5 do
			mob.Spawn(""Cameraman"",5*(wave*0.5),map)
			mob.Spawn(""Naruto"", 2 *(wave*0.5), map)
		end
	elseif wave == 10 then
		mob.Spawn(""Cameraman"",100,map)
	end
	
	repeat
		task.wait(1)
	until #map.Mob:GetChildren() == 0
	task.wait(1)
end"
LwBHpd5s,CODE FOR NIA CHECKS,frostfireflakes,JavaScript,Saturday 21st of October 2023 09:25:42 PM CDT,"// Function to format the firstname as described
function formatFirstname(firstname) {
  return firstname.replace(/\w+/g, function(word) {
    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
  });
}

// Function to get user input
function getUserInput(inputPrompt) {
  return prompt(`Enter ${inputPrompt}: `);
}

// Function to format the result
function formatResult(firstname, lastname, summary, safvrRating, safvrScore, dyraStatement, concernRating, victimisationStatement, fhHistoryStatement, criminalHistoryStatement, alertsStatement) {
  lastname = lastname.toUpperCase();
  summary = summary.toUpperCase();
  firstname = formatFirstname(firstname); // Format firstname
  const result = `${firstname} ${lastname} (${summary}) ** SAFVR SCORE ${safvrRating} ${safvrScore} ** DYRA ${dyraStatement} | Total Concerns ${concernRating} ** ${victimisationStatement}\nFH History: ${fhHistoryStatement}\nCriminal History: ${criminalHistoryStatement}\nAlerts: ${alertsStatement}`;
  console.log(result);
}

// Start collecting user input
const firstname = getUserInput(""firstname"");
const lastname = getUserInput(""lastname"");
const age = getUserInput(""age"");
const gender = getUserInput(""gender"");
const ethnicity = getUserInput(""ethnicity (leave blank if none)"");
const summary = (ethnicity) ? `${age}${gender}, ${ethnicity}` : `${age} ${gender}`;

const victimisationRating = getUserInput(""Victimisation rating (GREEN, AMBER, RED, NIL)"");
let victimisationStatement = """";

if (victimisationRating !== ""NIL"" && victimisationRating !== null) {
  const victimisationScore = getUserInput(""Victimisation score (string)"");
  victimisationStatement = `Victimisation: ${victimisationRating} ${victimisationScore}`;
} else {
  victimisationStatement = ""Nil Victimisation"";
}

const alertsStatement = getUserInput(""Alerts"");

const last12Months = getUserInput(""FH History: Last 12 Months"");

let fhHistoryStatement = """";

if (last12Months === ""OVERWRITE"" || last12Months === null) {
  fhHistoryStatement = getUserInput(""FH History: Enter new statement"");
} else {
  const totalOccurences = getUserInput(""FH History: Total Occurrences"");
  const sinceYear = getUserInput(""FH History: Since what year"");

  let predominantRole = getUserInput(""FH History: Predominant Role"");
  let initialPredominantRole = predominantRole;

  if (
    predominantRole === ""NIL"" || predominantRole === ""nil"" || predominantRole === null
  ) {
    predominantRole = ""nil victimisation pattern"";
  } else {
    predominantRole = ""predominantly "" + predominantRole;
  }

  fhHistoryStatement = `${last12Months}/12 - ${totalOccurences} occurrences since ${sinceYear}, ${predominantRole}.`;
}

const caseNumber = getUserInput(""Criminal History: Total number of cases""); // Change prompt to ""Total number of cases""
let criminalHistoryStatement = """";

if (caseNumber === ""0"") {
  criminalHistoryStatement = ""Nil"";
} else if (caseNumber == ""OVERWRITE"" || caseNumber === null) {
  criminalHistoryStatement = getUserInput(""Criminal History: Enter new statement"");
} else {
  const sinceYear = getUserInput(""Criminal History: Since what year"");
  const chargesFor = getUserInput(""Criminal History: Charges for what?"");
  criminalHistoryStatement = `${caseNumber} clearances/charges since ${sinceYear}. Charges for ${chargesFor}`;
}

const safvrRating = getUserInput(""SAFVR rating (INELIGIBLE, LOW, MODERATE, HIGH)"");
let safvrScore = """";

if (safvrRating !== ""INELIGIBLE"") {
  safvrScore = getUserInput(""SAFVR score"");
}

const dyraRating = getUserInput(""DYRA rating (LOW, MODERATE, HIGH)"");

let dyraRisks = getUserInput(""DYRA Risks (Press Escape to set as 'No risks')"");
if (dyraRisks === null) {
  dyraRisks = ""No risks"";
}

const dyraStatement = `${dyraRating} ${dyraRisks}`;

const concernRating = getUserInput(""Total Concerns rating (LOW, MODERATE, HIGH)"");

formatResult(firstname, lastname, summary, safvrRating, safvrScore, dyraStatement, concernRating, victimisationStatement, fhHistoryStatement, criminalHistoryStatement, alertsStatement);

//add 1, 2, 3 for low mods highs etc
//add press ""escape"" for ineligible for safvr scores
//put in html"
CcAm0Mj1,WeHome,AhmadXploit,Dart,Saturday 21st of October 2023 08:46:41 PM CDT,"[
    {
        ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
        ""name"": ""The Lion of Allah: Hamza Ibn Abdul Mutalib (RA)"",
        ""author"": ""Anonymous"",
        ""actors"": ""Will Smith, Cillian Murphy"",
        ""score"": ""2.13"",
        ""review"": ""107.3"",
        ""view"": ""2.7"",
        ""desc"": ""In the army of Islam there have been a number of brave and self-sacrificing officers and strong and powerful champions but the bravery of Hamzah bin Abdul Muttalib is recorded in the pages of history and in fact constitutes the golden leaves of the history of the battles of Islam. The Messenger of Allah, Muhammad (may Allah bless him and his Ahlel-Bayt), though safe under the protection of his uncle, Abu Talib, was not immune from harassment by the infidels. Whenever they found an opportunity for baiting him, they didn’t miss it. Hamza Ibn Abdul Mutalib Ibn Hashim Ibn Manaf was born in Mecca before the Prophet’s birth in two years so he was very close to the Prophet Muhammad (SAW)."",
        ""seasons"": [
            {
                ""season"": 1,
                ""videos"": [
                    {""index"": 1, ""videoId"": ""rzc3_b_KnHc""},
                    {""index"": 2, ""videoId"": ""zw1-qj214dc""}
                ]
            },
            {
                ""season"": 2,
                ""videos"": [
                    {""index"": 1, ""videoId"": ""zw1-qj214dc""},
                    {""index"": 2, ""videoId"": ""rzc3_b_KnHc""}
                ]
            }
        ]
    },
    {
        ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
        ""name"": ""Bilal the Great African Muslim"",
        ""author"": ""Anonymous"",
        ""actors"": ""Will Smith, Cillian Murphy"",
        ""score"": ""2.13"",
        ""review"": ""107.3"",
        ""view"": ""2.7"",
        ""desc"": ""Bilal is very lovingly remembered by all Muslims of the world as one of the earliest great African Muslims. He was born in a village in a mountainous place in Western Arabia. Bilal's father was called Rebah and his mother was known as Hamama. They had come to Arabia as slaves from Ethiopia. The father and mother were slaves of Ummayya bin Khalaf, a rich man from the tribe of Quraish. Bilal was therefore born in slavery and served as a housekeeper."",
        ""seasons"": [
            {
                ""season"": 1,
                ""videos"": [
                    {""index"": 1, ""videoId"": ""rzc3_b_KnHc""},
                    {""index"": 2, ""videoId"": ""zw1-qj214dc""}
                ]
            }
        ]
    }
]"
VPCg09Li,Untitled,ElonsMusk,C++,Saturday 21st of October 2023 08:38:02 PM CDT,"class CfgPatches
{
	class YourModName
	{
		units[]={};
		weapons[]={};
		requiredVersion=0.1;
		requiredAddons[]=
		{
			""DZ_Data"",
			""DZ_Characters_Vests"",
			""DZ_Characters_Backpacks"",
			""DZ_Scripts"",
			""DZ_Characters"",
			""DZ_Gear_Drinks"",
			""DZ_Gear_Medical"",
			""DZ_Gear_Containers"",
			""DZ_Weapons_Magazines""
			""ModularVestSystem""
		};
	};
};

class CfgMods
{
	class YourModName
	{
		dir = ""YourModName"";
		name = ""YourModName"";
		credits = ""DaddyPrapor & Elon's Musk"";
		author = ""Your Name"";
		authorID = ""0"";
		version = ""1.0"";
		extra = 0;
		type = ""mod"";
		dependencies[] = {""World""};
		class defs
		{
			class worldScriptModule
			{
				value = """";
				files[] = {""YourModName/scripts/4_World""};
			};
		};
	};
};


class cfgVehicles
{



//--------------------- Custom Patches -------------------------------		


    class Modular_Patch_Base;
    class YourPatchName: Modular_Patch_Base
	{
		scope = 2;
		displayName = ""Your Patch Name"";
		descriptionShort=""Custom Player Patch Made By Elon"";
		hiddenSelections[] = {""zbytek"",""armband""};
		hiddenSelectionsTextures[] = 
		{
			""YourModName\data\YourImage.paa"",
			""YourModName\Armbands\YourImage.paa""
		};
	};
};	"
ZnnHykLg,2023-10-21_stats.json,rdp_snitch,JSON,Saturday 21st of October 2023 07:18:12 PM CDT,"{
  ""ip"": {
    ""180.93.172.73"": 33,
    ""198.235.24.95"": 9,
    ""80.94.95.238"": 3,
    ""164.152.166.54"": 3,
    ""83.97.73.45"": 15,
    ""45.143.201.62"": 15,
    ""185.170.144.3"": 6,
    ""87.251.75.145"": 6,
    ""87.251.75.120"": 3,
    ""111.61.253.55"": 3,
    ""212.70.149.142"": 30,
    ""141.98.11.128"": 15,
    ""185.122.204.242"": 6,
    ""205.210.31.42"": 9,
    ""152.89.198.133"": 6,
    ""62.122.184.165"": 6,
    ""62.204.41.146"": 12,
    ""170.130.0.46"": 3,
    ""211.180.132.154"": 3,
    ""118.194.236.142"": 3,
    ""106.116.169.71"": 3,
    ""216.232.49.191"": 6,
    ""136.144.35.245"": 3,
    ""205.210.31.178"": 9,
    ""43.155.108.244"": 9,
    ""87.251.75.64"": 3,
    ""43.242.201.229"": 3,
    ""45.140.17.17"": 3,
    ""103.101.203.159"": 12,
    ""178.32.170.20"": 3,
    ""141.98.81.155"": 3,
    ""45.140.17.16"": 3,
    ""207.90.244.2"": 15,
    ""205.210.31.195"": 9,
    ""43.154.91.97"": 75,
    ""66.240.219.146"": 9
  },
  ""asn"": {
    ""AS135944"": 33,
    ""AS396982"": 36,
    ""AS204428"": 33,
    ""AS59253"": 3,
    ""AS208312"": 15,
    ""AS210950"": 15,
    ""AS197414"": 6,
    ""AS208091"": 12,
    ""AS24547"": 3,
    ""AS209605"": 15,
    ""AS57523"": 18,
    ""AS59425"": 12,
    ""AS62904"": 3,
    ""AS3786"": 3,
    ""AS135377"": 3,
    ""AS4134"": 3,
    ""AS852"": 6,
    ""AS396356"": 3,
    ""AS132203"": 84,
    ""AS399955"": 3,
    ""AS198953"": 6,
    ""AS36007"": 12,
    ""AS16276"": 3,
    ""AS209588"": 3,
    ""AS174"": 15,
    ""AS10439"": 9
  },
  ""isp"": {
    ""SPT"": 33,
    ""Google LLC"": 36,
    ""SS-Net"": 33,
    ""Leaseweb Asia Pacific pte. ltd."": 3,
    ""Red Byte LLC"": 15,
    ""TOV E-RISHENNYA"": 15,
    ""Xhost Internet Solutions LP"": 18,
    ""China Mobile communications corporation"": 3,
    ""UAB Host Baltic"": 15,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Horizon LLC"": 12,
    ""Eonix Corporation"": 3,
    ""LG DACOM Corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet"": 3,
    ""TELUS Communications Inc"": 6,
    ""Latitude.sh"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 84,
    ""Clouddata Networks Inc."": 3,
    ""Proton66 OOO"": 6,
    ""Kamatera, Inc."": 12,
    ""OVH SAS"": 3,
    ""Flyservers S.A."": 3,
    ""Cogent Communications"": 15,
    ""CariNet, Inc."": 9
  },
  ""org"": {
    ""Saigon Postel Corporation"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Internet-Transit LTD"": 3,
    ""365 Group LLC"": 3,
    ""Red Byte LLC"": 15,
    ""TOV VAIZ PARTNER"": 15,
    ""Xhostis"": 6,
    ""Xhost Internet Solutions"": 12,
    ""China Mobile"": 3,
    ""4Media Ltd"": 30,
    ""Unknown"": 15,
    ""Starcrecium Limited"": 12,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Horizon LLC"": 12,
    ""Eonix Corporation"": 3,
    ""Boranet"": 3,
    ""Ucloud Information Technology"": 3,
    ""Chinanet HE"": 3,
    ""TELUS-HSIA-VANCBC08"": 6,
    ""Panq B.V"": 3,
    ""Tencent Cloud Computing"": 84,
    ""HK JIUJIUIDC TECHNOLOGY LIMITED"": 3,
    ""Proton66 LLC"": 6,
    ""Cloud Web Manage"": 12,
    ""Auffret Patrice"": 3,
    ""Flyservers S.A"": 3,
    ""SHODAN, LLC"": 15,
    ""CariNet, Inc."": 9
  },
  ""regionName"": {
    ""Hanoi"": 33,
    ""California"": 45,
    ""Budapest"": 3,
    ""North East"": 3,
    ""Moscow"": 51,
    ""Kyiv City"": 15,
    ""North Holland"": 6,
    ""England"": 15,
    ""Hebei"": 6,
    ""Plovdiv"": 30,
    ""Kaunas"": 15,
    ""Texas"": 18,
    ""Seoul"": 3,
    ""Tokyo"": 3,
    ""British Columbia"": 6,
    ""New Jersey"": 3,
    ""Central and Western District"": 84,
    ""Tsuen Wan District"": 3,
    ""Illinois"": 12,
    ""Drenthe"": 3
  },
  ""country"": {
    ""Vietnam"": 33,
    ""United States"": 78,
    ""Hungary"": 3,
    ""Singapore"": 3,
    ""Russia"": 51,
    ""Ukraine"": 15,
    ""Netherlands"": 9,
    ""United Kingdom"": 15,
    ""China"": 6,
    ""Bulgaria"": 30,
    ""Lithuania"": 15,
    ""South Korea"": 3,
    ""Japan"": 3,
    ""Canada"": 6,
    ""Hong Kong"": 87
  },
  ""account"": {
    ""hello"": 147,
    ""NHRTbtNsV"": 3,
    ""CuTHdq"": 3,
    ""HwearS"": 3,
    ""Administr"": 102,
    ""(empty)"": 9,
    ""Domain"": 30,
    ""mmiFdhbfM"": 3,
    ""xULmfT"": 3,
    ""oHyPMZ"": 3,
    ""Administrator"": 6,
    ""mvDoopYXT"": 3,
    ""gHjXmu"": 3,
    ""rHAwMt"": 3,
    ""Test"": 3,
    ""root"": 24,
    ""cNhPaYZJy"": 3,
    ""nWLyGE"": 3,
    ""UfPmQL"": 3
  },
  ""keyboard"": {
    ""Unknown"": 357
  },
  ""client_build"": {
    ""Unknown"": 357
  },
  ""client_name"": {
    ""Unknown"": 357
  },
  ""ip_type"": {
    ""Unknown"": 198,
    ""hosting"": 126,
    ""mobile & hosting"": 3,
    ""mobile"": 3,
    ""proxy"": 15,
    ""hosting & proxy"": 12
  }
}"
vdLAWxqi,2023-10-21_stats.json,rdp_snitch,JSON,Saturday 21st of October 2023 07:16:17 PM CDT,"{
  ""ip"": {
    ""180.93.172.73"": 22,
    ""198.235.24.95"": 6,
    ""80.94.95.238"": 2,
    ""164.152.166.54"": 2,
    ""83.97.73.45"": 10,
    ""45.143.201.62"": 10,
    ""185.170.144.3"": 4,
    ""87.251.75.145"": 4,
    ""87.251.75.120"": 2,
    ""111.61.253.55"": 2,
    ""212.70.149.142"": 20,
    ""141.98.11.128"": 10,
    ""185.122.204.242"": 4,
    ""205.210.31.42"": 6,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""62.204.41.146"": 8,
    ""170.130.0.46"": 2,
    ""211.180.132.154"": 2,
    ""118.194.236.142"": 2,
    ""106.116.169.71"": 2,
    ""216.232.49.191"": 4,
    ""136.144.35.245"": 2,
    ""205.210.31.178"": 6,
    ""43.155.108.244"": 6,
    ""87.251.75.64"": 2,
    ""43.242.201.229"": 2,
    ""45.140.17.17"": 2,
    ""103.101.203.159"": 8,
    ""178.32.170.20"": 2,
    ""141.98.81.155"": 2,
    ""45.140.17.16"": 2,
    ""207.90.244.2"": 10,
    ""205.210.31.195"": 6,
    ""43.154.91.97"": 50,
    ""66.240.219.146"": 6
  },
  ""asn"": {
    ""AS135944"": 22,
    ""AS396982"": 24,
    ""AS204428"": 22,
    ""AS59253"": 2,
    ""AS208312"": 10,
    ""AS210950"": 10,
    ""AS197414"": 4,
    ""AS208091"": 8,
    ""AS24547"": 2,
    ""AS209605"": 10,
    ""AS57523"": 12,
    ""AS59425"": 8,
    ""AS62904"": 2,
    ""AS3786"": 2,
    ""AS135377"": 2,
    ""AS4134"": 2,
    ""AS852"": 4,
    ""AS396356"": 2,
    ""AS132203"": 56,
    ""AS399955"": 2,
    ""AS198953"": 4,
    ""AS36007"": 8,
    ""AS16276"": 2,
    ""AS209588"": 2,
    ""AS174"": 10,
    ""AS10439"": 6
  },
  ""isp"": {
    ""SPT"": 22,
    ""Google LLC"": 24,
    ""SS-Net"": 22,
    ""Leaseweb Asia Pacific pte. ltd."": 2,
    ""Red Byte LLC"": 10,
    ""TOV E-RISHENNYA"": 10,
    ""Xhost Internet Solutions LP"": 12,
    ""China Mobile communications corporation"": 2,
    ""UAB Host Baltic"": 10,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Horizon LLC"": 8,
    ""Eonix Corporation"": 2,
    ""LG DACOM Corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet"": 2,
    ""TELUS Communications Inc"": 4,
    ""Latitude.sh"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 56,
    ""Clouddata Networks Inc."": 2,
    ""Proton66 OOO"": 4,
    ""Kamatera, Inc."": 8,
    ""OVH SAS"": 2,
    ""Flyservers S.A."": 2,
    ""Cogent Communications"": 10,
    ""CariNet, Inc."": 6
  },
  ""org"": {
    ""Saigon Postel Corporation"": 22,
    ""Palo Alto Networks, Inc"": 24,
    ""Internet-Transit LTD"": 2,
    ""365 Group LLC"": 2,
    ""Red Byte LLC"": 10,
    ""TOV VAIZ PARTNER"": 10,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 8,
    ""China Mobile"": 2,
    ""4Media Ltd"": 20,
    ""Unknown"": 10,
    ""Starcrecium Limited"": 8,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Horizon LLC"": 8,
    ""Eonix Corporation"": 2,
    ""Boranet"": 2,
    ""Ucloud Information Technology"": 2,
    ""Chinanet HE"": 2,
    ""TELUS-HSIA-VANCBC08"": 4,
    ""Panq B.V"": 2,
    ""Tencent Cloud Computing"": 56,
    ""HK JIUJIUIDC TECHNOLOGY LIMITED"": 2,
    ""Proton66 LLC"": 4,
    ""Cloud Web Manage"": 8,
    ""Auffret Patrice"": 2,
    ""Flyservers S.A"": 2,
    ""SHODAN, LLC"": 10,
    ""CariNet, Inc."": 6
  },
  ""regionName"": {
    ""Hanoi"": 22,
    ""California"": 30,
    ""Budapest"": 2,
    ""North East"": 2,
    ""Moscow"": 34,
    ""Kyiv City"": 10,
    ""North Holland"": 4,
    ""England"": 10,
    ""Hebei"": 4,
    ""Plovdiv"": 20,
    ""Kaunas"": 10,
    ""Texas"": 12,
    ""Seoul"": 2,
    ""Tokyo"": 2,
    ""British Columbia"": 4,
    ""New Jersey"": 2,
    ""Central and Western District"": 56,
    ""Tsuen Wan District"": 2,
    ""Illinois"": 8,
    ""Drenthe"": 2
  },
  ""country"": {
    ""Vietnam"": 22,
    ""United States"": 52,
    ""Hungary"": 2,
    ""Singapore"": 2,
    ""Russia"": 34,
    ""Ukraine"": 10,
    ""Netherlands"": 6,
    ""United Kingdom"": 10,
    ""China"": 4,
    ""Bulgaria"": 20,
    ""Lithuania"": 10,
    ""South Korea"": 2,
    ""Japan"": 2,
    ""Canada"": 4,
    ""Hong Kong"": 58
  },
  ""account"": {
    ""hello"": 98,
    ""NHRTbtNsV"": 2,
    ""CuTHdq"": 2,
    ""HwearS"": 2,
    ""Administr"": 68,
    ""(empty)"": 6,
    ""Domain"": 20,
    ""mmiFdhbfM"": 2,
    ""xULmfT"": 2,
    ""oHyPMZ"": 2,
    ""Administrator"": 4,
    ""mvDoopYXT"": 2,
    ""gHjXmu"": 2,
    ""rHAwMt"": 2,
    ""Test"": 2,
    ""root"": 16,
    ""cNhPaYZJy"": 2,
    ""nWLyGE"": 2,
    ""UfPmQL"": 2
  },
  ""keyboard"": {
    ""Unknown"": 238
  },
  ""client_build"": {
    ""Unknown"": 238
  },
  ""client_name"": {
    ""Unknown"": 238
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""hosting"": 84,
    ""mobile & hosting"": 2,
    ""mobile"": 2,
    ""proxy"": 10,
    ""hosting & proxy"": 8
  }
}"
7n8qRSGv,2023-10-21_stats.json,rdp_snitch,JSON,Saturday 21st of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""180.93.172.73"": 11,
    ""198.235.24.95"": 3,
    ""80.94.95.238"": 1,
    ""164.152.166.54"": 1,
    ""83.97.73.45"": 5,
    ""45.143.201.62"": 5,
    ""185.170.144.3"": 2,
    ""87.251.75.145"": 2,
    ""87.251.75.120"": 1,
    ""111.61.253.55"": 1,
    ""212.70.149.142"": 10,
    ""141.98.11.128"": 5,
    ""185.122.204.242"": 2,
    ""205.210.31.42"": 3,
    ""152.89.198.133"": 2,
    ""62.122.184.165"": 2,
    ""62.204.41.146"": 4,
    ""170.130.0.46"": 1,
    ""211.180.132.154"": 1,
    ""118.194.236.142"": 1,
    ""106.116.169.71"": 1,
    ""216.232.49.191"": 2,
    ""136.144.35.245"": 1,
    ""205.210.31.178"": 3,
    ""43.155.108.244"": 3,
    ""87.251.75.64"": 1,
    ""43.242.201.229"": 1,
    ""45.140.17.17"": 1,
    ""103.101.203.159"": 4,
    ""178.32.170.20"": 1,
    ""141.98.81.155"": 1,
    ""45.140.17.16"": 1,
    ""207.90.244.2"": 5,
    ""205.210.31.195"": 3,
    ""43.154.91.97"": 25,
    ""66.240.219.146"": 3
  },
  ""asn"": {
    ""AS135944"": 11,
    ""AS396982"": 12,
    ""AS204428"": 11,
    ""AS59253"": 1,
    ""AS208312"": 5,
    ""AS210950"": 5,
    ""AS197414"": 2,
    ""AS208091"": 4,
    ""AS24547"": 1,
    ""AS209605"": 5,
    ""AS57523"": 6,
    ""AS59425"": 4,
    ""AS62904"": 1,
    ""AS3786"": 1,
    ""AS135377"": 1,
    ""AS4134"": 1,
    ""AS852"": 2,
    ""AS396356"": 1,
    ""AS132203"": 28,
    ""AS399955"": 1,
    ""AS198953"": 2,
    ""AS36007"": 4,
    ""AS16276"": 1,
    ""AS209588"": 1,
    ""AS174"": 5,
    ""AS10439"": 3
  },
  ""isp"": {
    ""SPT"": 11,
    ""Google LLC"": 12,
    ""SS-Net"": 11,
    ""Leaseweb Asia Pacific pte. ltd."": 1,
    ""Red Byte LLC"": 5,
    ""TOV E-RISHENNYA"": 5,
    ""Xhost Internet Solutions LP"": 6,
    ""China Mobile communications corporation"": 1,
    ""UAB Host Baltic"": 5,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Horizon LLC"": 4,
    ""Eonix Corporation"": 1,
    ""LG DACOM Corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet"": 1,
    ""TELUS Communications Inc"": 2,
    ""Latitude.sh"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 28,
    ""Clouddata Networks Inc."": 1,
    ""Proton66 OOO"": 2,
    ""Kamatera, Inc."": 4,
    ""OVH SAS"": 1,
    ""Flyservers S.A."": 1,
    ""Cogent Communications"": 5,
    ""CariNet, Inc."": 3
  },
  ""org"": {
    ""Saigon Postel Corporation"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""Internet-Transit LTD"": 1,
    ""365 Group LLC"": 1,
    ""Red Byte LLC"": 5,
    ""TOV VAIZ PARTNER"": 5,
    ""Xhostis"": 2,
    ""Xhost Internet Solutions"": 4,
    ""China Mobile"": 1,
    ""4Media Ltd"": 10,
    ""Unknown"": 5,
    ""Starcrecium Limited"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Horizon LLC"": 4,
    ""Eonix Corporation"": 1,
    ""Boranet"": 1,
    ""Ucloud Information Technology"": 1,
    ""Chinanet HE"": 1,
    ""TELUS-HSIA-VANCBC08"": 2,
    ""Panq B.V"": 1,
    ""Tencent Cloud Computing"": 28,
    ""HK JIUJIUIDC TECHNOLOGY LIMITED"": 1,
    ""Proton66 LLC"": 2,
    ""Cloud Web Manage"": 4,
    ""Auffret Patrice"": 1,
    ""Flyservers S.A"": 1,
    ""SHODAN, LLC"": 5,
    ""CariNet, Inc."": 3
  },
  ""regionName"": {
    ""Hanoi"": 11,
    ""California"": 15,
    ""Budapest"": 1,
    ""North East"": 1,
    ""Moscow"": 17,
    ""Kyiv City"": 5,
    ""North Holland"": 2,
    ""England"": 5,
    ""Hebei"": 2,
    ""Plovdiv"": 10,
    ""Kaunas"": 5,
    ""Texas"": 6,
    ""Seoul"": 1,
    ""Tokyo"": 1,
    ""British Columbia"": 2,
    ""New Jersey"": 1,
    ""Central and Western District"": 28,
    ""Tsuen Wan District"": 1,
    ""Illinois"": 4,
    ""Drenthe"": 1
  },
  ""country"": {
    ""Vietnam"": 11,
    ""United States"": 26,
    ""Hungary"": 1,
    ""Singapore"": 1,
    ""Russia"": 17,
    ""Ukraine"": 5,
    ""Netherlands"": 3,
    ""United Kingdom"": 5,
    ""China"": 2,
    ""Bulgaria"": 10,
    ""Lithuania"": 5,
    ""South Korea"": 1,
    ""Japan"": 1,
    ""Canada"": 2,
    ""Hong Kong"": 29
  },
  ""account"": {
    ""hello"": 49,
    ""NHRTbtNsV"": 1,
    ""CuTHdq"": 1,
    ""HwearS"": 1,
    ""Administr"": 34,
    ""(empty)"": 3,
    ""Domain"": 10,
    ""mmiFdhbfM"": 1,
    ""xULmfT"": 1,
    ""oHyPMZ"": 1,
    ""Administrator"": 2,
    ""mvDoopYXT"": 1,
    ""gHjXmu"": 1,
    ""rHAwMt"": 1,
    ""Test"": 1,
    ""root"": 8,
    ""cNhPaYZJy"": 1,
    ""nWLyGE"": 1,
    ""UfPmQL"": 1
  },
  ""keyboard"": {
    ""Unknown"": 119
  },
  ""client_build"": {
    ""Unknown"": 119
  },
  ""client_name"": {
    ""Unknown"": 119
  },
  ""ip_type"": {
    ""Unknown"": 66,
    ""hosting"": 42,
    ""mobile & hosting"": 1,
    ""mobile"": 1,
    ""proxy"": 5,
    ""hosting & proxy"": 4
  }
}"
YA6KsM2A,Untitled,BusinessBurrito,JavaScript,Saturday 21st of October 2023 06:39:37 PM CDT,"/** @param {NS} ns **/
import { multiscan, gainRootAccess } from ""utils.js"";


function maxElement(arr) {
	let max = 0;
	for (let i = 0; i < arr.length; i++) {
		if (arr[i] > max) {
			max = arr[i]
		}
	}

	let maxE = arr.indexOf(max);
	return maxE
}

export function best_target(ns, arr) {
	let list = [];
	let results = [];
	let little_results = [];
	arr.forEach(server => {
		if (!ns.hasRootAccess(server)) {
			gainRootAccess(ns, server);
		}

		if (ns.hasRootAccess(server) && ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel() && server != 'home' && !ns.getPurchasedServers().includes(server) && ns.getServerMoneyAvailable(server)) {
			list.push(server);
		}
	})


	list.forEach((target, i) => {
		results[i] = ns.getServerMaxMoney(target);
		little_results[i] = ns.getServerMaxMoney(target) * ns.hackAnalyze(target);
	})

	return [list[maxElement(results)], list[maxElement(little_results)]];
}

async function little_prep(ns, hack_target, wt, gt, reserved_RAM) {
	const full_list = multiscan(ns, 'home');
	let host_servers = [];
	for (let i = 0; i < full_list.length; i++) {
		const server = full_list[i];
		if (ns.hasRootAccess(server)) {
			await ns.scp('targeted-grow.js', 'home', server);
			await ns.scp('targeted-weaken.js', 'home', server);
			host_servers.push(server);
		}
	}
	let usable_RAM = 0;
	let needed_RAM = ns.getScriptRam('targeted-weaken.js', 'home') * wt + ns.getScriptRam('targeted-grow.js', 'home') * gt;
	let c = 1;
	host_servers.forEach(host => {
		if (host == 'home') {
			let home_ram = ns.getServerMaxRam('home') - ns.getServerUsedRam('home') - reserved_RAM;
			if (home_ram > 0) {
				usable_RAM += home_ram;
			}
		}
		else {
			usable_RAM += ns.getServerMaxRam(host) - ns.getServerUsedRam(host);
		}
	})
	let startTime = Date.now();
	while (needed_RAM * c > usable_RAM) {
		c -= .001;
		await ns.sleep(1);
		if (Date.now() > startTime + 240000) {
			throw(Error(""line 65, loop longer than 2 minutes either need more RAM or change value of c decrement""));
		}
	}

	let weaken_threads = Math.floor(wt * c);
	let grow_threads = Math.floor(gt * c);

	if (weaken_threads < 1 || grow_threads < 1) {
		ns.print(weaken_threads, grow_threads);
		return 0;
	}

	for (let i = 0; i < host_servers.length; i++) {
		const server = host_servers[i];
		let threads = 0;
		if (weaken_threads > 0) {
			if (server == 'home') {
				threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / ns.getScriptRam('targeted-weaken.js', 'home'));
			}
			else {
				threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / ns.getScriptRam('targeted-weaken.js', 'home'));
			}
			if (threads > weaken_threads) {
				threads = weaken_threads;
			}
			if (threads >= 1) {
				ns.exec('targeted-weaken.js', server, threads, threads, hack_target);
				weaken_threads -= threads;
				await ns.sleep(10);
			}
		}
		if (grow_threads > 0) {
			if (server == 'home') {
				threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / ns.getScriptRam('targeted-grow.js', 'home'));
			}
			else {
				threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / ns.getScriptRam('targeted-grow.js', 'home'));
			}
			if (threads > grow_threads) {
				threads = grow_threads;
			}
			if (threads >= 1) {
				ns.exec('targeted-grow.js', server, threads, threads, 0, hack_target);
				grow_threads -= threads;
				await ns.sleep(10);
			}
		}
	}
}

async function little_hack(ns, hack_target, weaken_threads, grow_threads, hack_threads, reserved_RAM) {
	const full_list = multiscan(ns, 'home');
	let host_servers = [];
	for (let i = 0; i < full_list.length; i++) {
		const server = full_list[i];
		if (ns.hasRootAccess(server)) {
			await ns.scp('targeted-hack.js', 'home', server);
			await ns.scp('targeted-grow.js', 'home', server);
			await ns.scp('targeted-weaken.js', 'home', server);
			host_servers.push(server);
		}
	}
	let usable_RAM = 0;
	let c = 2;
	host_servers.forEach(host => {
		if (host == 'home') {
			let home_ram = ns.getServerMaxRam('home') - ns.getServerUsedRam('home') - reserved_RAM;
			if (home_ram > 0) {
				usable_RAM += home_ram;
			}
		}
		else {
			usable_RAM += ns.getServerMaxRam(host) - ns.getServerUsedRam(host);
		}
	})
	let sec_increase;
	let startTime = Date.now();
	while(grow_threads * ns.getScriptRam('targeted-grow.js', 'home') + hack_threads * ns.getScriptRam('targeted-hack.js', 'home') + weaken_threads * ns.getScriptRam('targeted-weaken.js', 'home') > usable_RAM - host_servers.length) {
		c += 1;
		grow_threads = Math.floor(ns.growthAnalyze(hack_target, 1 / (1 - 1 / c)));
		hack_threads = Math.floor(ns.hackAnalyzeThreads(hack_target, ns.getServerMoneyAvailable(hack_target) / c)) / ns.hackAnalyzeChance(hack_target);
		sec_increase = ns.hackAnalyzeSecurity(hack_threads) + ns.growthAnalyzeSecurity(grow_threads);
		weaken_threads = 1;
		while (ns.weakenAnalyze(weaken_threads) < sec_increase * 1.1) {
			weaken_threads += 3;
			await ns.sleep(1);
		}
		await ns.sleep(1);
		if (Date.now() > startTime + 240000) {
			throw(Error(""line 65, loop longer than 2 minutes either need more RAM or change value of c decrement""));
		}
	}

	if (hack_threads < 1 || weaken_threads < 1 || grow_threads < 1) {
		ns.print(hack_threads, weaken_threads, grow_threads);
		return 0;
	}

	for (let i = 0; i < host_servers.length; i++) {
		const server = host_servers[i];
		let threads = 0;
		let n = 0;

		while (ns.getServerMaxRam(server) - ns.getServerUsedRam(server) > ns.getScriptRam('targeted-weaken.js', 'home')) {
			if (weaken_threads > 0) {
				if (server == 'home') {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / ns.getScriptRam('targeted-weaken.js', 'home'));
				}
				else {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / ns.getScriptRam('targeted-weaken.js', 'home'));
				}
				if (threads > weaken_threads) {
					threads = weaken_threads;
				}
				if (threads >= 1) {
					ns.exec('targeted-weaken.js', server, threads, threads, hack_target, n);
					weaken_threads -= threads;
					await ns.sleep(5);
				}
			}
			if (grow_threads > 0) {
				if (server == 'home') {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / ns.getScriptRam('targeted-grow.js', 'home'));
				}
				else {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / ns.getScriptRam('targeted-grow.js', 'home'));
				}
				if (threads > grow_threads) {
					threads = grow_threads;
				}
				if (threads >= 1) {
					ns.exec('targeted-grow.js', server, threads, threads, ns.getWeakenTime(hack_target) - ns.getGrowTime(hack_target) - 500, hack_target, n);
					grow_threads -= threads;
					await ns.sleep(5);
				}
			}
			if (hack_threads > 0) {
				if (server == 'home') {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / ns.getScriptRam('targeted-hack.js', 'home'));
				}
				else {
					threads = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / ns.getScriptRam('targeted-hack.js', 'home'));
				}
				if (threads > hack_threads) {
					threads = hack_threads;
				}
				if (threads >= 1) {
					ns.exec('targeted-hack.js', server, Math.round(threads), Math.round(threads), ns.getWeakenTime(hack_target) - ns.getHackTime(hack_target) + 500, hack_target, n, Math.round(threads));
					hack_threads -= threads;
					await ns.sleep(5);
				}
			}
			if (!weaken_threads && !grow_threads && !hack_threads) {
				hack_threads = Math.floor(ns.hackAnalyzeThreads(hack_target, ns.getServerMoneyAvailable(hack_target) / c));
				grow_threads = Math.floor(ns.growthAnalyze(hack_target, 1 / (1 - 1 / c)));
				sec_increase = ns.hackAnalyzeSecurity(hack_threads) + ns.growthAnalyzeSecurity(grow_threads);
				weaken_threads = 1;
				while (ns.weakenAnalyze(weaken_threads) < sec_increase * 1.1) {
					weaken_threads += 3;
					await ns.sleep(1);
				}
				n++;
				await ns.sleep(1500);
			}
			await ns.sleep(1);
		}
	}
}

export async function main(ns) {
	let reserved_RAM = ns.args[0];
	if (reserved_RAM == null) {
		reserved_RAM = 0;
	}
	while (true) {
		let full_list = multiscan(ns, 'home');

		// finds most profitable server to target
		const targets = best_target(ns, full_list);
		const hack_target = targets[0];
		const little_target = targets[1];

		// determines threads needed for grow hack and weaken to maintain optimal profit
		const grow_threads = ns.growthAnalyze(hack_target, 2);
		const hack_threads = ns.hackAnalyzeThreads(hack_target, ns.getServerMoneyAvailable(hack_target) / 2);
		const sec_increase = ns.hackAnalyzeSecurity(hack_threads) + ns.growthAnalyzeSecurity(grow_threads);
		let weaken_threads = 1;
		
		while (ns.weakenAnalyze(weaken_threads) < sec_increase * 1.1) {
			weaken_threads += 5;
			await ns.sleep(1);
		}

		// determines needed RAM for a cycle of grow weaken hack with determined threads
		const needed_ram = (grow_threads * ns.getScriptRam('targeted-grow.js', 'home') + hack_threads * ns.getScriptRam('targeted-hack.js', 'home') + weaken_threads * ns.getScriptRam('targeted-weaken.js', 'home'));

		// goes through Purchased servers and creates list of servers with enough RAM to utilize 
		// note only Purchased servers are going to reliably have enough RAM
		let purchased_servers = ns.getPurchasedServers();
		let host_servers = [];

		purchased_servers.forEach(server => {
			if (ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= needed_ram) {
				host_servers.push(server);
			}
		})

		if (ns.getServerMaxRam('home') - ns.getServerUsedRam('home') - reserved_RAM >= needed_ram) {
			host_servers.push('home');
		}

		if (host_servers.length == 0) {
			// prepares target to be hacked uses home to weaken and grow server to required initial conditions
			const initial_growth_amount = .5 * ns.getServerMaxMoney(little_target) / ns.getServerMoneyAvailable(little_target);
			let gt = 0;

			if (initial_growth_amount > 1 && isFinite(initial_growth_amount)) {
				gt = ns.growthAnalyze(little_target, initial_growth_amount);
			}

			let wt = 0;
			while (ns.weakenAnalyze(wt) < ns.getServerSecurityLevel(little_target) + ns.growthAnalyzeSecurity(gt) - ns.getServerMinSecurityLevel(little_target)) {
				wt++;
			}
			if (wt == 0) {
				wt = 1;
			}

			let prep = 1;
			const prep_RAM = ns.getScriptRam('targeted-grow.js', 'home') * gt + ns.getScriptRam('targeted-weaken.js', 'home') * wt;
			const prep_server = host_servers.find(server => {
				if (server == 'home') {
					return ns.getServerMaxRam('home') - ns.getServerUsedRam('home') - reserved_RAM >= prep_RAM;
				}
				else {
					return ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= prep_RAM
				}
			});

			if (prep_server == null) {
				prep = 0;
			}

			if (prep) {
				if (gt > 1) {
					ns.exec('targeted-grow.js', prep_server, gt, gt, 0, little_target);
					ns.exec('targeted-weaken.js', prep_server, wt, wt, little_target);
					await ns.sleep(ns.getWeakenTime(little_target) + 1000);
				}

				else if (ns.getServerSecurityLevel(little_target) > ns.getServerMinSecurityLevel(little_target) * 1.5) {
					ns.exec('targeted-weaken.js', prep_server, wt, wt, little_target);
					await ns.sleep(ns.getWeakenTime(little_target) + 1000);
				}
			}

			else if (gt > 1 || ns.getServerSecurityLevel(little_target) > ns.getServerMinSecurityLevel(little_target) * 1.5) {
				await little_prep(ns, little_target, wt, gt, reserved_RAM);
				await ns.sleep(ns.getWeakenTime(little_target) + 1000);
			}

			await little_hack(ns, little_target, Math.round(weaken_threads), Math.round(grow_threads), Math.round(hack_threads), reserved_RAM);
			await ns.sleep(ns.getWeakenTime(little_target) + 1000);
		}

		else {
			// prepares target to be hacked uses home to weaken and grow server to required initial conditions
			const initial_growth_amount = .5 * ns.getServerMaxMoney(hack_target) / ns.getServerMoneyAvailable(hack_target);
			let gt = 0;
			if (initial_growth_amount > 1) {
				gt = ns.growthAnalyze(hack_target, initial_growth_amount);
			}

			let wt = 0;
			while (ns.weakenAnalyze(wt) < ns.getServerSecurityLevel(hack_target) + ns.growthAnalyzeSecurity(gt) - ns.getServerMinSecurityLevel(hack_target)) {
				wt++;
			}
			if (wt == 0) {
				wt = 1;
			}

			let prep = 1;
			const prep_RAM = ns.getScriptRam('targeted-grow.js', 'home') * gt + ns.getScriptRam('targeted-weaken.js', 'home') * wt;
			const prep_server = host_servers.find(server => {
				if (server == 'home') {
					return ns.getServerMaxRam('home') - ns.getServerUsedRam('home') - reserved_RAM >= prep_RAM;
				}
				else {
					return ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= prep_RAM
				}
			});
			if (prep_server == null) {
				prep = 0;
			}

			if (prep) {
				if (gt > 1) {
					ns.exec('targeted-grow.js', prep_server, gt, gt, 0, hack_target);
					ns.exec('targeted-weaken.js', prep_server, wt, wt, hack_target);
					await ns.sleep(ns.getWeakenTime(hack_target) + 1000);
				}

				else if (ns.getServerSecurityLevel(hack_target) > ns.getServerMinSecurityLevel(hack_target) * 1.5) {
					ns.exec('targeted-weaken.js', prep_server, wt, wt, hack_target);
					await ns.sleep(ns.getWeakenTime(hack_target) + 1000);
				}
			}

			else if (gt > 1 || ns.getServerSecurityLevel(hack_target) > ns.getServerMinSecurityLevel(hack_target) * 1.5) {
				await little_prep(ns, hack_target, wt, gt, reserved_RAM);
				await ns.sleep(ns.getWeakenTime(hack_target) + 1000);
			}
			// sets a variable to keep track of time taken executing hacks in the loop
			// if a hack were initiated later than the reset time the first hack would complete changing hack times for every hack following it throwing off the sync
			// most of the time execution time doesn't take that long but this safeguards overly draining a target through desync
			let initial_time = Date.now();
			let k = 0;

			for (let i = 0; i < host_servers.length; i++) {

				let weaken_time = ns.getWeakenTime(hack_target);
				let grow_time = ns.getGrowTime(hack_target);
				let hack_time = ns.getHackTime(hack_target);
				let grow_delay = weaken_time - grow_time - 2;
				let hack_delay = weaken_time - hack_time - 1;

				// assigns a server from the host server list and determines amount of cycles possible
				let server = host_servers[i]
				let n = 0;
				if (server == 'home') {
					n = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server) - reserved_RAM) / needed_ram);
				}
				else {
					n = Math.floor((ns.getServerMaxRam(server) - ns.getServerUsedRam(server)) / needed_ram);
				}

				// writes needed scripts to host server
				await ns.scp('targeted-grow.js', server);
				await ns.scp('targeted-hack.js', server);
				await ns.scp('targeted-weaken.js', server);

				// loops through a cycle of grow weaken and hack executions on the target
				// each script will complete in order of grow hack weaken 2 milliseconds apart
				while (n > 0) {
					if (Date.now() >= initial_time + ns.getHackTime(hack_target)) {
						while (ns.getServerMaxRam(host_servers[k]) - ns.getServerUsedRam(host_servers[k]) < ns.getScriptRam('targeted-weaken', 'home') * weaken_threads) {
							k++;
							if (k == host_servers.length) {
								k = 0;
								await ns.sleep(10000);
							}
						}
						ns.exec('targeted-weaken.js', host_servers[k], weaken_threads, weaken_threads, hack_target);
						await ns.sleep(weaken_time + 20);
						i = 0;
						initial_time = Date.now();
						break
					}

					ns.exec('targeted-weaken.js', server, weaken_threads, weaken_threads, hack_target, n);
					ns.exec('targeted-grow.js', server, grow_threads, grow_threads, grow_delay, hack_target, n);
					ns.exec('targeted-hack.js', server, hack_threads, hack_threads, hack_delay, hack_target, n);
					await ns.sleep(3);

					n--;
				}

				await ns.sleep(5);
			}

			await ns.sleep(10);
		}
	}
}"
vhz1ww2W,App State and App Class Snippets,brenoitalo,JSON,Saturday 21st of October 2023 06:05:12 PM CDT,"{
	//APP STATELESS
	""Stateless with AppTheme"": {
		""prefix"": ""astl"",
		""body"": [
			""import 'package:agendai/core/widgets/base/app_stateless.dart';""
			""import 'package:flutter/material.dart';"",
			""import 'package:agendai/core/theme/app_theme.dart';\n"",
			""class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} extends AppStateless {"",
			""\tconst ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}({super.key});\n"",
			""\t@override"",
			""\tWidget builder(BuildContext context, AppTheme theme) {"",
			""\t\treturn ${2:Scaffold()};"",
			""\t}"",
			""}""
		],
		""description"": ""Stateless with AppTheme""
	},
	
	//APP STATEFUL
	""Stateful with AppTheme"": {
		""prefix"": ""astf"",
		""body"": [
			""import 'package:agendai/core/widgets/base/app_statefull.dart';""
			""import 'package:flutter/material.dart';"",
			""import 'package:agendai/core/theme/app_theme.dart';\n"",
			""class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} extends StatefulWidget {""
			""\tconst ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}({super.key});\n"",			  
			""\t@override"",
			""\tState<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}> createState() => _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}eState();"",
			""}\n"",
			""class _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}eState extends AppState<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}> {"",
			""\t@override"",
			""\tWidget builder(BuildContext context, AppTheme theme) {"",
			""\t\treturn ${2:Scaffold()};"",
			""\t}""
			""}""
		],
		""description"": ""Stateful with AppTheme""
	},

	//APP CLASS
	""App Class Named"": {
		""prefix"": ""aclass"",
		""body"": [
			""class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} {""
			""\t${1}""
			""}""
		],
		""description"": ""App Class Named""
	}
}"
KP9TPpr2,saifjoy's Data,azimuths,JSON,Saturday 21st of October 2023 06:02:18 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""80""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Strike""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""284""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""233""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Block Training\"",\""Pushup Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""78""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Pushup Training""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-463""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""65248741""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Mode""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Joy""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""315""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Joy(44)1768618""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3378""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Water Clone""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""172""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""118""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""250""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-25""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""224""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""98""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-2327""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""44""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Strike"":{""ObjectName"":""Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Water Clone"":{""ObjectName"":""Water Clone"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Mode"":{""ObjectName"":""Demon Mode"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
jcN1dE1i,Untitled,BusinessBurrito,JavaScript,Saturday 21st of October 2023 06:00:48 PM CDT,"export function find_hosts(ns) {
  let hosts = new Set([""home""]);
  let queue = new Array(""home"");
  while (queue.length) {
    let host = queue.shift();
    ns.scan(host).forEach(neighbor => {
      if (!hosts.has(neighbor))
        queue.push(neighbor);
      hosts.add(neighbor);
    });
  }
  return hosts;
}

export function distribute_scripts(ns, scripts = [""targeted-weaken.js"", ""targeted-grow.js"", ""targeted-hack.js""]) {
    const hosts = find_hosts(ns);
    for (const host of hosts) {
        for (const script of scripts) {
            ns.scp(scripts, hosts)
        }
    }
}
 
export async function main(ns) {
    distribute_scripts(ns); // scripts is an optional param
}"
mxjeREEZ,webinar-python-exam-review-2023-10-21,jspill,Python,Saturday 21st of October 2023 05:15:49 PM CDT,"# Exam Review 2023 Oct 21

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# Prac Tests, Ch 33 and 34

# Use Submit Mode and get them to 100%!!! And PAY ATTENTION to the unit tests!


# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files


# Comp 1: Basic syntax and knowledge: operators     , data types, etc

# Operators
# = # assignment
# == # asking if the values are equal
# +
# -
# *
# /
# % # modulo... whole number remainder... how many whole things didn't fit since the last even division?
# // # floor division... that last even division
# <
# >
# <=
# >=
# += # x += 1 --> x = x + 1
# -=
# ** # raise to a power... pow() and math.pow()
# !=
# # keywords
# in # if x in myList
# not # if not x in myList
# and
# or # any one True means the combo is True... limit OR to 2-3 conditions

# Common Data Types/Classes
# int
# float
# bool # True, False
# str # """" most important data type?
# list # []
# dict # {key: value}... myDict[key]
# set # { } no duplicates, unordered.... no index, no slicing, no sort
# tuple # ( ) immutable, Python see a,b,c as (a,b,c) -> return x, y --_ return (x,y)
# range() #... container of consecutive numbers range(0, 7, 1)... [0, 1, 2, 3, 4, 5, 6]
# file # open()... f.read(), f.readlines(), f.write()

# Comp 2
# Control Flow! The HOW stuff
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - an IF that repeats
# FOR - looping over a container, or a known number of times... hence range()
# Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # myDict[key]
# for num in range(5):
# for i in range(len(myList)): # myList[i]
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing vs calling
# modular... a function has ONE job
# parameters are special variables for data coming into the function
# parameters vs arguments
# pay attention to whether the function is asked to return or print()/output
#
# def someFunction(x, y):
#     return x - y
#
# if __name__ == ""__main__"": # is this script the one that's running now?
#     # inside this block we're answering this specific question
#     myInput = int(input())
#     myOther = int(input())
#     myNum = someFunction(myInput, myOther)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# # CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# BUILT-IN FUNCTIONS
# input()
# print()
# len()
# sum()
# min()
# max()
# list()
# str()
# int()
# float()
# range()
# tuple()
# dict()
# type() # x = ""3.14159"", print(type(x).__name__)
# enumerate()
# open()
# round() # cousins math.ceil(), math.floor()
# pow()
# abs() # compare to math.fabs()
# help() # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRINGS
# be able to refer to indices, and slice
# myStr = ""abcd""
# # mySlice[start:stop:step]
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
"" "" # space from spacebar
# a lot of Unicode space
# \n # new line return # print() -> print(end=""\n"")
# \r # carriage return
# \t # tab

# STRING METHODS
# myStr.format() # ""Stuff I want to put together {}"".format(var)
# myStr.strip() # input().strip()
# myStr.split() # return a list of smaller strings
# "" "".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.find(subStr) # returns index where found, or -1 if not there, compare to myStr.index()
# myStr.count(subStr) # returns int of how many times found
# case: myStr.lower(), myStr.upper(), myStr.title(), myStr.capitalize()
# is/Boolean: myStr.islower(), .isupper(), isspace(), isalpha(), .isnumeric(), .isdigit(), .isalnum()
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to refer by index and to slice

# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i)
# myList.remove(item) # pop() by index, remove() by value
# myList.clear()
# # others
# myList.count(item)
# myList.sort()
# myList.reverse()
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []... then you don't need DICT methods
# myDict[key] # get the value for that key
# myDict[key] = value # assign a new value to key
#
# # DICT METHODS
# myDict.keys()
# myDict.values()
# myDict.items() # for k, v in myDict.items()

# if _key_ in myDict: # only looks at keys

# MODULES
# math and csv

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x.yz)
# math.floor(x.yz)
# math.pow(x, y)
# math.sqrt(x)
# math.fabs(x)
# math.pi
# math.e

# PARTIAL IMPORT
from math import floor # floor(x.yz)
from math import sqrt, ceil # sqrt(x), ceil(y)
from math import * # sqrt(y)

# ALIAS IMPORT
import math as m # m.floor(x.yz)

# FILES

# READ MODE
with open(""test.txt"", ""r"") as f:
    # f.read() # returns whole file as one big string
    # f.readlines() # returns a list of strings, line by line
    # f.write() # take one str arg and write into file
    contents = f.readlines()
# print(contents)
# for line in contents:
#     line = line.strip()
#     print(line)

# CSV Module
# csv.reader()
import csv
with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
    contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"")
# print(contents) # [['id', 'first_name', 'last_name', 'email', 'gender', 'ip_address'], ['1', 'Remington', 'Shilling', 'rshilling0@wsj.com', 'Male', '1.71.141.52']... ]

# WRITE MODE
with open(""output_data28.csv"", ""w"") as f2:
    # write out a file with every row where the last name starts with J
    for row in contents:
        # last name is at row[2]
        if row[2][0].upper() == ""J"": # if row[2].startswith(""j"") or row[2].startswith(""J""):
            # we like this data, we want to write it as a string
            f2.write("","".join(row) + ""\n"")

# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3:
#     print(f3.readlines())
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""\nPippin"")"
BxXyYgX3,vchrisu's Data,azimuths,JSON,Saturday 21st of October 2023 05:09:21 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Block Training""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""53""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""279""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Block Training\"",\""Handsign Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""186""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""55""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""68""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5677""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chris""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""255""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chris(16)1713836""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Handsign Training""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2385""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""255""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Pushup Training""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""125""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""132""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""268""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""29""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3532""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""16""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Scent"":{""ObjectName"":""Scent"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
wuWwjCHS,Untitled,Farz0l1x,Python,Saturday 21st of October 2023 05:05:42 PM CDT,"def delit(n):
    ans = []
    d = 1
    while d * d <= n:
        if n % d == 0: 
            if d % 2 == 0:
                ans.append(d)
            d_b = n // d
            if d != d_b and d_b % 2 == 0:
                ans.append(d_b)
        d += 1
    ans.sort()
    return ans

count = 0
from fnmatch import*
for x in range(65000, 10**6):
    if fnmatch(str(x), '6*97*5?') == True and len(delit(x)) >= 4:
        count += 1
        print(x, sum(delit(x)))
    if count == 7: 
        break"
WmYG8yYv,Minecraft Shaders 1.2.5 GL ERROR,GiulioTopLad,Apache Log,Saturday 21st of October 2023 04:59:01 PM CDT,"MultiMC version: 0.7.0-3813


Launched instance in online mode

authserver.mojang.com resolves to:
    [18.66.218.34, 18.66.218.18, 18.66.218.122, 18.66.218.108]

session.minecraft.net resolves to:
    [13.107.246.60, 13.107.213.60, 2620:1ec:bdf::60, 2620:1ec:46::60]

textures.minecraft.net resolves to:
    [13.107.246.60, 13.107.213.60, 2620:1ec:bdf::60, 2620:1ec:46::60]

api.mojang.com resolves to:
    [13.107.246.60, 13.107.213.60, 2620:1ec:bdf::60, 2620:1ec:46::60]


Minecraft folder is:
C:/Users/Giulio/Documents/MultiMC/instances/Shader 1.2.5 TEST/.minecraft


Java path is:
C:/Users/Giulio/Documents/MultiMC/jre1.7.0_80/bin/javaw.exe


Checking Java version...
Java is version 1.7.0_80, using 64-bit architecture, from Oracle Corporation.


Main Class:
  

Native path:
  C:/Users/Giulio/Documents/MultiMC/instances/Shader 1.2.5 TEST/natives

Traits:
traits texturepacks
traits legacyLaunch

Libraries:
  C:/Users/Giulio/Documents/MultiMC/libraries/net/java/jinput/jinput/2.0.5/jinput-2.0.5.jar
  C:/Users/Giulio/Documents/MultiMC/libraries/net/java/jutils/jutils/1.0.0/jutils-1.0.0.jar
  C:/Users/Giulio/Documents/MultiMC/libraries/org/lwjgl/lwjgl/lwjgl/2.9.4-nightly-20150209/lwjgl-2.9.4-nightly-20150209.jar
  C:/Users/Giulio/Documents/MultiMC/libraries/org/lwjgl/lwjgl/lwjgl_util/2.9.4-nightly-20150209/lwjgl_util-2.9.4-nightly-20150209.jar
  C:/Users/Giulio/Documents/MultiMC/instances/Shader 1.2.5 TEST/libraries/customjar-1.jar

Native libraries:
  C:/Users/Giulio/Documents/MultiMC/libraries/net/java/jinput/jinput-platform/2.0.5/jinput-platform-2.0.5-natives-windows.jar
  C:/Users/Giulio/Documents/MultiMC/libraries/org/lwjgl/lwjgl/lwjgl-platform/2.9.4-nightly-20150209/lwjgl-platform-2.9.4-nightly-20150209-natives-windows.jar

Params:
  

Window size: 854 x 480

Java Arguments:
[-Dhttp.proxyHost=betacraft.uk, -Dhttp.proxyPort=11707, -XX:+ParallelRefProcEnabled, -XX:+PerfDisableSharedMem, -XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump, -Xms512m, -Xmx10240m, -XX:PermSize=128m, -Duser.language=en]


Minecraft process ID: 7464


Using onesix launcher.

Launching with applet wrapper...
27 achievements
182 recipes
Setting user: GiulioTopLad, token:<ACCESS TOKEN>:<PROFILE ID>
LWJGL Version: 2.9.4

OptiFine_1.2.5_HD_C6
Sat Oct 21 23:58:14 CEST 2023
OS: Windows 8.1 (amd64) version 6.3
Java: 1.7.0_80, Oracle Corporation
VM: Java HotSpot(TM) 64-Bit Server VM (mixed mode), Oracle Corporation
LWJGL: 2.9.4
OpenGL: AMD Radeon RX 6600 version 4.6.0 Compatibility Profile Context 23.10.2.231013, ATI Technologies Inc.
OpenGL Version: 4.0
OpenGL Fancy fog: Not available (GL_NV_fog_distance)
Checking for new version
java.io.FileNotFoundException: http://optifine.net/version/1.2.5/HD.txt
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)
	at VersionCheckThread.run(VersionCheckThread.java:32)
Class not present: forge.ForgeHooksClient
setupTexture: ""/title/mojang.png"", id: 1
Class not present: FMLRenderAccessLibrary
Oct 21, 2023 11:58:14 PM net.java.games.input.DefaultControllerEnvironment getControllers
WARNING: Found unknown Windows version: Windows 8.1
Oct 21, 2023 11:58:14 PM net.java.games.input.DefaultControllerEnvironment getControllers
INFO: Attempting to use default windows plug-in.
Oct 21, 2023 11:58:14 PM net.java.games.input.DefaultControllerEnvironment getControllers
INFO: Loading: net.java.games.input.DirectAndRawInputEnvironmentPlugin

Starting up SoundSystem...
Initializing LWJGL OpenAL
    (The LWJGL binding of OpenAL.  For more information, see http://www.lwjgl.org)
OpenAL initialized.

setupTexture: ""/terrain.png"", id: 7
TextureFX registered: bv@5064635b, texId: 7, index: 237
TextureFX registered: qa@741313eb, texId: 7, index: 205
TextureFX registered: zp@1080e4d6, texId: 7, index: 14
setupTexture: ""/gui/items.png"", id: 8
TextureFX registered: tu@32ca113e, texId: 8, index: 54
TextureFX registered: ht@15720e5c, texId: 8, index: 70
TextureFX registered: ael@730cc503, texId: 7, index: 206
TextureFX registered: gf@4b5a82f7, texId: 7, index: 238
TextureFX registered: nh@234c4cc7, texId: 7, index: 31
TextureFX registered: nh@6644aeeb, texId: 7, index: 47
TextureFX removed: bv@5064635b, texId: 7, index: 237
TextureFX registered: TextureHDLavaFX@6a4da220, texId: 7, index: 237
TextureFX removed: qa@741313eb, texId: 7, index: 205
TextureFX registered: TextureHDWaterFX@ecf1966, texId: 7, index: 205
TextureFX removed: zp@1080e4d6, texId: 7, index: 14
TextureFX registered: TextureHDPortalFX@3e8c7f22, texId: 7, index: 14
TextureFX removed: ael@730cc503, texId: 7, index: 206
TextureFX registered: TextureHDWaterFlowFX@79eeb142, texId: 7, index: 206
TextureFX removed: gf@4b5a82f7, texId: 7, index: 238
TextureFX registered: TextureHDLavaFlowFX@25b7a298, texId: 7, index: 238
TextureFX removed: nh@234c4cc7, texId: 7, index: 31
TextureFX registered: TextureHDFlamesFX@3b13bc80, texId: 7, index: 31
TextureFX removed: nh@6644aeeb, texId: 7, index: 47
TextureFX registered: TextureHDFlamesFX@cbc95cd, texId: 7, index: 47
TextureFX removed: tu@32ca113e, texId: 8, index: 54
TextureFX registered: TextureHDCompassFX@6ddfbf22, texId: 8, index: 54
TextureFX removed: ht@15720e5c, texId: 8, index: 70
TextureFX registered: TextureHDWatchFX@7b36a986, texId: 8, index: 70
Loading custom colors: /misc/grasscolor.png
Loading custom colors: /misc/foliagecolor.png
setupTexture: ""/ctm.png"", id: 9
MatchingCtmPng: true
Registering default ConnectedTextures
setupTexture: ""/title/bg/panorama0.png"", id: 11
setupTexture: ""/title/bg/panorama1.png"", id: 12
setupTexture: ""/title/bg/panorama2.png"", id: 13
setupTexture: ""/title/bg/panorama3.png"", id: 14
setupTexture: ""/title/bg/panorama4.png"", id: 15
setupTexture: ""/title/bg/panorama5.png"", id: 16
setupTexture: ""/title/mclogo.png"", id: 17
setupTexture: ""/gui/gui.png"", id: 18
setupTexture: ""/gui/particles.png"", id: 19
setupTexture: ""/gui/background.png"", id: 20
GL_MAX_DRAW_BUFFERS = 8
Shadow map resolution: 2048
Shadow map half-plane: 100.0
Info log:
ERROR: 0:867: '#endif' : unexpected tokens following directive 
ERROR: 0:867: '' : compilation terminated 
ERROR: 2 compilation errors.  No code generated.

setupTexture: ""/terrain/sun.png"", id: 31
setupTexture: ""/terrain/moon_phases.png"", id: 32
Class not present: LightCache
setupTexture: ""/terrain_nh.png"", id: 33
setupTexture: ""/terrain_s.png"", id: 34
setupTexture: ""%blur%/misc/vignette.png"", id: 36
setupTexture: ""/gui/icons.png"", id: 37
Class not present: ModLoader
########## GL ERROR ##########
@ Post render
1282: Invalid operation
Class not present: forge.ForgeHooks
Method not found: pb.isLadder
Allocated subtessellator, count: 1
setupTexture: ""/mob/villager/smith.png"", id: 38
setupTexture: ""/mob/villager/priest.png"", id: 39
setupTexture: ""/mob/villager/librarian.png"", id: 40
setupTexture: ""/mob/villager/farmer.png"", id: 41
setupTexture: ""/mob/villager/butcher.png"", id: 42
setupTexture: ""%clamp%/misc/shadow.png"", id: 43
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
setupTexture: ""/item/chest.png"", id: 44
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
########## GL ERROR ##########
@ Post render
1282: Invalid operation
Stopping!

SoundSystem shutting down...
    Author: Paul Lamb, www.paulscode.com

Process exited with exit code 0 (0x0).
Please note that usually neither the exit code, nor its description are enough to diagnose issues!
Always upload the entire log and not just the exit code.
"
fuuHAvKC,lowbaskets's Data,azimuths,JSON,Saturday 21st of October 2023 04:48:05 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""19""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""1721""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""219""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""858""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Handsign Training\"",\""Pushup Training\"",\""Block Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""233""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""42""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""39""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""1095""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""267""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""bourn""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""126""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""bourn(2)565817""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""233""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Block Training""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""52""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""19""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""805""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""373""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gentle Fist"":{""ObjectName"":""Gentle Fist"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Byakugan"":{""ObjectName"":""Byakugan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
iG8LuYG2,Untitled,Farz0l1x,Python,Saturday 21st of October 2023 04:45:28 PM CDT,"file = open('24_10724.txt')
A = list(map(str, file.readlines()))
A = ''.join(A)
A = list(A)
Max = 0
B = ''
for i in range(len(A)):
        if A[i] in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E']:
                B += B.join(A[i])
                Max = max(Max, len(B))
        else:
                B = ''
print(Max)"
