id,title,username,language,date,content
ivKK4nET,Subtitle Edit: Renumber,ivandrofly,C#,Friday 21st of July 2023 12:51:47 PM CDT,"====== current 

public void Renumber(int startNumber = 1)
{
	var number = startNumber;
	int l = Paragraphs.Count + number;
	while (number < l)
	{
		var p = Paragraphs[number - startNumber];
		p.Number = number++;
	}
}

====== ai generated

public void Renumber(int startNumber = 1)
{
	var totalParagraphs = Paragraphs.Count + startNumber;

	for (int i = 0; startNumber < totalParagraphs; i++, startNumber++)
	{
		var paragraph = Paragraphs[i];
		paragraph.Number = startNumber;
	}
}"
0Vh6n8Me,Admixture,ikizid,Python,Friday 21st of July 2023 12:29:50 PM CDT,"import numpy as np
import random

class G25_Sample:
    # (originally created by Huijbregts)
    # (C) AASI_Amsha, June 2023

    def __init__(self, g25str):
        g25data = g25str.split("","")
        self.name = g25data[0]
        g25 = []
        for i in range(1, len(g25data)):
            g25.append(float(g25data[i]))
            self.g25 = np.array(g25)

# G25 samples
G25_RUS_SINTASHTA_MLBA = 'RUS_Sintashta_MLBA,0.125433,0.116075,0.0576869,0.0787689,0.0113968,0.0284096,0.0056636,0.0042383,-0.0176231,-0.028034,-0.0025766,0.0013488,-0.0032061,-0.0215196,0.0225975,0.0126579,-0.004885,0.0004476,-0.0002933,-0.0006753,-0.0061142,0.0023618,0.0026497,0.007033,-0.0041074'
G25_IRN_GANJ_DAREH_N = 'IRN_Ganj_Dareh_N,0.0430252,0.0664158,-0.1550722,0.0047158,-0.122669,0.0235384,0.017109,-0.0011998,-0.082546,-0.0544158,-0.0028258,-0.0016186,0.0044896,-0.0062756,0.0316498,0.0561384,-0.0054242,0.0068664,0.0136508,-0.0334162,0.00856,-0.028836,-0.0110678,-0.039331,0.0222254'
G25_SIMULATED_AASI = 'Simulated_AASI:By_Matt,-0.01338826,-0.25017,-0.215904,0.168274,-0.023185,0.0563242,-0.0112391,0.0235317,0.128084,0.080387,0.0081456,0.00184176,-0.0020191,0.01626691,-0.0354205,-0.0261625,0.0238043,-0.00203711,-0.0041062,0.043945,0.00856383,0.0156317,-0.0140597,0.0102236,-0.0109007'
G25_BHUMIHAR = 'Bhumihar_Bihar,0.066397,-0.0287733,-0.1155247,0.0999147,-0.065243,0.05364,-0.0003917,0.0060767,0.018816,0.0091723,-0.0064413,0.0007493,0.0013873,-0.009909,0.0027593,0.0053033,0.006867,-0.0017737,-0.0040223,-0.0002917,-0.0038263,0.00169,0.0004933,0.004338,-0.001397'

# Generate samples from string
G25_SAMP_RUS_SINTASHTA = G25_Sample(G25_RUS_SINTASHTA_MLBA)
G25_SAMP_IRN_GANJ_DAREH_N = G25_Sample(G25_IRN_GANJ_DAREH_N)
G25_SAMP_SIMULATED_AASI = G25_Sample(G25_SIMULATED_AASI)
G25_BHUMIHAR = G25_Sample(G25_BHUMIHAR)


def GenerateSourceMatrix(source_samples: list[G25_Sample], target_sample: G25_Sample):
    source_mat = []
    for source in source_samples:
        source_mat.append(target_sample.g25 - source.g25)
    return np.array(source_mat)

# Take means of all the columns and then the magnitude of the resulting vector.
def EvaluateMatrix(matrix: np.array):
    col_mean = np.mean(matrix, axis=0)
    squared_col_means = np.square(col_mean)
    return np.sum(squared_col_means)

# Add penalty for samples further away
def EvaluatePenalty(matrix: np.array, b: int):
    col_mean = np.mean(matrix[b,])
    squared_col_means = np.square(col_mean)
    return penalty_factor * np.sum(squared_col_means)

# Sample random rows from the matrix
def SampleRows(n_sources):
    sampled_rows = []
    for i in range(0, n_batch):
        sampled_rows.append(random.randrange(0, n_sources))
    return sampled_rows

# Calculate fit, generally a value of less than 2.00 is good.
def CalculateFit(source_matrix, final_matrix, target_matrix):
    PCT = 100 if np.max(source_matrix[0]) > 2 else 1
    estim = np.transpose(np.mean(final_matrix, axis=0) + target_matrix)
    dif = estim - target_matrix
    dist1_2 = np.sqrt(np.sum(dif**2))/PCT
    return round(100 * dist1_2, 4)

# Model (K=3 South Asia)
TARGET = G25_BHUMIHAR
SOURCES = [G25_SAMP_RUS_SINTASHTA, G25_SAMP_IRN_GANJ_DAREH_N, G25_SAMP_SIMULATED_AASI]
# Calculator settings
penalty_factor = 0.001
n_batch = 500
n_cycles = 200


# Monte Carlo Algorithm for calculating ADMIXTURE
# Create source matrix by turning source samples into a matrix
# then subtracting the target.
# First sample nBatch random rows
# Then take the mean, this is err1. (Error, ideally, the mean should be zero for a perfect mixture)
# Then iterate through nCycles
# Each cycle do the following:
# 1. Sample another nBatch random rows
# 2. Iterate through 1 to nBatch, say the iterator is b
# 3. Every iteration replace 1:b rows of the matrix with the newly sampled matrix
# 4. Calculate err2.
# 5. If err2 is less than err1, then err2 = err1, and we are in the correct direction,
# 6. So add the newly sampled rows to the matrix
def nMonte(source_samples: list[G25_Sample], target: G25_Sample):
    source_mat = GenerateSourceMatrix(source_samples, target)
    n_sources = len(source_samples)
    sample_rows = SampleRows(n_sources)
    test_matrix = source_mat[sample_rows]
    final_matrix = test_matrix.copy()
    err1 = EvaluateMatrix(final_matrix)
    for i in range(0, n_cycles):
        sample_rows = SampleRows(n_sources)
        sampled_matrix = source_mat[sample_rows]
        test_matrix = final_matrix.copy()
    for j in range(0, n_batch):
        test_matrix[j, ] = sampled_matrix[j, ]
        err2 = EvaluateMatrix(test_matrix) + EvaluatePenalty(test_matrix, j)

    if(err1 >= err2):
        final_matrix[j, ] = test_matrix[j, ]
    err1 = err2

    # Prepare results dict
    # Every row in the final_matrix corresponds to a source sample
    # Find which rows belong to which source sample
    source_fractions = {}
    for i in range(0, len(source_samples)):
        source_fractions[i] = 0
        for i in range(0, len(final_matrix)):
            for j in range(0, len(source_mat)):
                if ((final_matrix[i] == source_mat[j]).all()):
                    source_fractions[j] += 1

    # Divide by total to get fraction
    for i in source_fractions.keys():
        source_fractions[i] /= len(final_matrix)

    # Prepare Dictionary
    result_dict = {}
    for i in range(len(source_samples)):
        result_dict[source_samples[i].name] = source_fractions[i]

    # Determine fit
    fit = CalculateFit(source_mat, final_matrix, target.g25)
    return [result_dict, fit]


if __name__ == ""__main__"":
    print(nMonte(SOURCES, TARGET))
"
zqbVAQFk,SubtitleEdit: Subtitle.cs:AdjustDisplayTimeUsingMilliseconds,ivandrofly,C#,Friday 21st of July 2023 12:26:41 PM CDT,"private void AdjustDisplayTimeUsingMilliseconds(int idx, double ms, List<double> shotChanges = null, bool enforceDurationLimits = true)
{
    var p = Paragraphs[idx];
    var nextStartTimeInMs = GetNextStartTimeInMs(idx);
  
    var newEndTimeInMs = p.EndTime.TotalMilliseconds + ms;    
    if (enforceDurationLimits)
    {
        newEndTimeInMs = FixShortDuration(p, newEndTimeInMs);
    }

    // handle overlap with next
    newEndTimeInMs = HandleOverlapWithNext(newEndTimeInMs, nextStartTimeInMs);

    // handle shot change if supplied -- keep earliest time
    if (shotChanges != null)
    {
        newEndTimeInMs = HandleShotChange(shotChanges, newEndTimeInMs, p);
    }

    // max duration
    if (enforceDurationLimits)
    {
        newEndTimeInMs = HandleMaximumDuration(p, newEndTimeInMs);
    }

    // do not adjust wrong way
    if (!(ms > 0 && newEndTimeInMs < p.EndTime.TotalMilliseconds) && !(ms < 0 && newEndTimeInMs > p.EndTime.TotalMilliseconds))
    {
        p.EndTime.TotalMilliseconds = newEndTimeInMs;
    }
}

private double GetNextStartTimeInMs(int idx) => (idx + 1) < Paragraphs.Count ? Paragraphs[idx + 1].StartTime.TotalMilliseconds : double.MaxValue;

private double FixShortDuration(Paragraph p, double endTime)
{
    var minDur = Math.Max(Configuration.Settings.General.SubtitleMinimumDisplayMilliseconds, 100);
    return Math.Max(p.StartTime.TotalMilliseconds + minDur, endTime);
}

private double HandleOverlapWithNext(double endTime, double nextStartTime)
{
    return Math.Min(nextStartTime - Configuration.Settings.General.MinimumMillisecondsBetweenLines, endTime);
}

private double HandleShotChange(List<double> shotChanges, double endTime, Paragraph p)
{
    return Math.Min(endTime, ShotChangeHelper.GetNextShotChangeMinusGapInMs(shotChanges, p.EndTime) ?? double.MaxValue);
}

private double HandleMaximumDuration(Paragraph p, double endTime)
{
    var duration = endTime - p.StartTime.TotalMilliseconds;
    return duration > Configuration.Settings.General.SubtitleMaximumDisplayMilliseconds ? p.StartTime.TotalMilliseconds + Configuration.Settings.General.SubtitleMaximumDisplayMilliseconds : endTime;
}"
zhH0UGH2,LoadSubtitle From Subtitle edit project,ivandrofly,C#,Friday 21st of July 2023 12:20:10 PM CDT,"==== original 
public SubtitleFormat LoadSubtitle(string fileName, out Encoding encoding, Encoding useThisEncoding, bool batchMode, double? sourceFrameRate = null, bool loadSubtitle = true)
        {
            FileName = fileName;
            Paragraphs = new List<Paragraph>();
            List<string> lines;
            try
            {
                lines = ReadLinesFromFile(fileName, useThisEncoding, out encoding);
            }
            catch (Exception exception)
            {
                System.Diagnostics.Debug.WriteLine(exception.Message);
                encoding = Encoding.UTF8;
                return null;
            }

            var ext = Path.GetExtension(fileName).ToLowerInvariant();
            foreach (var subtitleFormat in SubtitleFormat.AllSubtitleFormats.Where(p => p.Extension == ext && !p.Name.StartsWith(""Unknown"", StringComparison.Ordinal)))
            {
                if (subtitleFormat.IsMine(lines, fileName))
                {
                    return FinalizeFormat(fileName, batchMode, sourceFrameRate, lines, subtitleFormat, loadSubtitle);
                }
            }

            foreach (var subtitleFormat in SubtitleFormat.AllSubtitleFormats.Where(p => p.Extension != ext || p.Name.StartsWith(""Unknown"", StringComparison.Ordinal)))
            {
                if (subtitleFormat.IsMine(lines, fileName))
                {
                    return FinalizeFormat(fileName, batchMode, sourceFrameRate, lines, subtitleFormat, loadSubtitle);
                }
            }

            if (useThisEncoding == null)
            {
                return LoadSubtitle(fileName, out encoding, Encoding.Unicode);
            }

            return null;
        }

=== ai refact suggestion



public SubtitleFormat LoadSubtitle(string fileName, out Encoding encoding, Encoding useThisEncoding = null, bool batchMode = false, double? sourceFrameRate = null, bool loadSubtitle = true)
{
    FileName = fileName;
    Paragraphs = new List<Paragraph>();
    List<string> lines = ReadLinesFromFileSafely(fileName, useThisEncoding, out encoding);

    if (lines == null)
    {
        return null;
    }

    return DetermineSubtitleFormat(fileName, batchMode, sourceFrameRate, lines, loadSubtitle);
}

private List<String> ReadLinesFromFileSafely(string fileName, Encoding useThisEncoding, out Encoding encoding)
{
    try
    {
        return ReadLinesFromFile(fileName, useThisEncoding, out encoding);
    }
    catch (Exception exception)
    {
        System.Diagnostics.Debug.WriteLine(exception.Message);
        encoding = Encoding.UTF8;
        return null;
    }
}

private SubtitleFormat DetermineSubtitleFormat(string fileName, bool batchMode, double? sourceFrameRate, List<String> lines, bool loadSubtitle)
{
    var ext = Path.GetExtension(fileName).ToLowerInvariant();
    var allFormats = SubtitleFormat.AllSubtitleFormats;

    foreach (var order in new[] { true, false })
    {
        foreach (var subtitleFormat in allFormats.Where(p => p.Extension == ext == order && !p.Name.StartsWith(""Unknown"", StringComparison.Ordinal) == order))
        {
            if (subtitleFormat.IsMine(lines, fileName))
            {
                return FinalizeFormat(fileName, batchMode, sourceFrameRate, lines, subtitleFormat, loadSubtitle);
            }
        }
    }

    if (useThisEncoding == Encoding.Unicode)
    {
        return null;
    }

    return LoadSubtitle(fileName, out _, Encoding.Unicode);
}"
Qa0ZaFzh,Untitled,kirillzhosul,Python,Friday 21st of July 2023 12:04:40 PM CDT,"""""""
Напишите эндпойнт, который в качестве параметра сможет принимать незакодированную (unencoded) ссылку и возвращать его закодированным 
""""""


# Фреймворк? Взял FastAPI
# Что в контексте - кодирование? Сделал на своё понимание
# (не стал разделять на файлы)

from urllib.parse import urlparse, urlencode, quote

import uvicorn
from pydantic import BaseModel
from fastapi import Request, FastAPI


app = FastAPI()
# Swagger -> http://localhost:81/docs

class EncodeResult(BaseModel):
    encoded_link: str
    raw_link: str




@app.get(""/encode_link"", response_model=EncodeResult)
def encode_link(link: str) -> EncodeResult:  # -> link as url
    """"""
    Кодирует ссылку базовым quote, не совсем понятно как оно должно обрабатывать параметры.
    """"""
    url = urlparse(link)
    return EncodeResult(encoded_link=quote(link, safe=""""), raw_link=link)


@app.get(""/encode_link_v2"", response_model=EncodeResult)
def encode_link_v2(link: str, request: Request) -> EncodeResult:
    """"""
    Кодирует ссылку через urlencode, принимает любые параметры которые нужно закодировать в ссылку.
    """"""
    params = dict(request.query_params)
    link = params.pop(""link"")
    return EncodeResult(
        encoded_link=f""{link}?{urlencode(params, doseq=True)}"", raw_link=link
    )


uvicorn.run(app)
"
JqTTibxM,Untitled,manav_06,C++,Friday 21st of July 2023 11:54:08 AM CDT,"#include ""bits/stdc++.h""

using namespace std;

#define int long long

#define fastio                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define vvi vector<vi>
#define rep(i, a, b) for (int (i) = (a); (i) < (b); ++(i))
const int mod = 1e9 + 7;


void bfs(int node, vi &vis, int n, int m, vvi &graph) {
    queue<int> q;
    q.push(node);

    vis[node] = 1;

    while (!q.empty()) {
        int r = q.front();
        q.pop();
        for (int next: graph[r]) {
            if (vis[next] == 0) {
                q.push(next);
                vis[next] = 1;
            }
        }
    }
}


void test_case() {

    int n, m;
    cin >> n >> m;
    vvi graph(n + 1);
    rep(i, 0, m) {
        int u, v;
        cin >> u >> v;
        graph[u].pb(v);
        graph[v].pb(u);
    }
    int counter = 0;
    vi vis(n + 1);

    vi reps;
//    to store 1 node from each component

    for (int i = 1; i <= n; i++) {
        if (vis[i] == 0) {
            reps.pb(i);
//            i is the start of the component. i is a part of the component

            bfs(i, vis, n, m, graph);
            counter++;
        }
    }

    cout << reps.size() - 1 << ""\n"";

    for (int i = 1; i < n; i++) {
        cout << reps[i - 1] << ' ' << reps[i] << ""\n"";
    }


}

signed main() {
    fastio;
    int t = 1;
//    cin >> t;
    for (int i = 1; i <= t; i++) {
        test_case();
    }
}"
wvqTP5ip,Nigerian scammers [21-7-2/2023],bombaires,HTML,Friday 21st of July 2023 11:50:42 AM CDT,"<a href=""mailto:upscompany116@gmail.com"">upscompany116@gmail.com</a>
<a href=""mailto:upscompany116+683@gmail.com"">upscompany116+683@gmail.com</a>
<a href=""mailto:upscompany116+15499@gmail.com"">upscompany116+15499@gmail.com</a>
<a href=""mailto:upscompany116+7716@gmail.com"">upscompany116+7716@gmail.com</a>
<a href=""mailto:upscompany116+25750@gmail.com"">upscompany116+25750@gmail.com</a>
<a href=""mailto:upscompany116+21803@gmail.com"">upscompany116+21803@gmail.com</a>
<a href=""mailto:upscompany116+5342@gmail.com"">upscompany116+5342@gmail.com</a>
<a href=""mailto:upscompany116+9433@gmail.com"">upscompany116+9433@gmail.com</a>
<a href=""mailto:upscompany116+13552@gmail.com"">upscompany116+13552@gmail.com</a>
<a href=""mailto:upscompany116+29461@gmail.com"">upscompany116+29461@gmail.com</a>
<a href=""mailto:upscompany116+31774@gmail.com"">upscompany116+31774@gmail.com</a>
<a href=""mailto:upscompany116+3263@gmail.com"">upscompany116+3263@gmail.com</a>
<a href=""mailto:upscompany116+13603@gmail.com"">upscompany116+13603@gmail.com</a>
<a href=""mailto:upscompany116+15650@gmail.com"">upscompany116+15650@gmail.com</a>
<a href=""mailto:upscompany116+2215@gmail.com"">upscompany116+2215@gmail.com</a>
<a href=""mailto:upscompany116+2608@gmail.com"">upscompany116+2608@gmail.com</a>
<a href=""mailto:upscompany116+13195@gmail.com"">upscompany116+13195@gmail.com</a>
<a href=""mailto:upscompany116+7382@gmail.com"">upscompany116+7382@gmail.com</a>
<a href=""mailto:upscompany116+4408@gmail.com"">upscompany116+4408@gmail.com</a>
<a href=""mailto:upscompany116+17402@gmail.com"">upscompany116+17402@gmail.com</a>
<a href=""mailto:upscompany116+4710@gmail.com"">upscompany116+4710@gmail.com</a>
<a href=""mailto:upscompany116+26717@gmail.com"">upscompany116+26717@gmail.com</a>
<a href=""mailto:upscompany116+18272@gmail.com"">upscompany116+18272@gmail.com</a>
<a href=""mailto:upscompany116+19851@gmail.com"">upscompany116+19851@gmail.com</a>
<a href=""mailto:upscompany116+1203@gmail.com"">upscompany116+1203@gmail.com</a>
<a href=""mailto:upscompany116+28968@gmail.com"">upscompany116+28968@gmail.com</a>
<a href=""mailto:upscompany116+7227@gmail.com"">upscompany116+7227@gmail.com</a>
<a href=""mailto:upscompany116+7830@gmail.com"">upscompany116+7830@gmail.com</a>
<a href=""mailto:upscompany116+8155@gmail.com"">upscompany116+8155@gmail.com</a>
<a href=""mailto:upscompany116+24435@gmail.com"">upscompany116+24435@gmail.com</a>
<a href=""mailto:upscompany116+10758@gmail.com"">upscompany116+10758@gmail.com</a>
<a href=""mailto:upscompany116+17781@gmail.com"">upscompany116+17781@gmail.com</a>
<a href=""mailto:upscompany116+19759@gmail.com"">upscompany116+19759@gmail.com</a>
<a href=""mailto:upscompany116+21813@gmail.com"">upscompany116+21813@gmail.com</a>
<a href=""mailto:upscompany116+15414@gmail.com"">upscompany116+15414@gmail.com</a>
<a href=""mailto:upscompany116+3102@gmail.com"">upscompany116+3102@gmail.com</a>
<a href=""mailto:upscompany116+438@gmail.com"">upscompany116+438@gmail.com</a>
<a href=""mailto:upscompany116+28980@gmail.com"">upscompany116+28980@gmail.com</a>
<a href=""mailto:upscompany116+32241@gmail.com"">upscompany116+32241@gmail.com</a>
<a href=""mailto:upscompany116+31653@gmail.com"">upscompany116+31653@gmail.com</a>
<a href=""mailto:upscompany116+13512@gmail.com"">upscompany116+13512@gmail.com</a>
<a href=""mailto:upscompany116+23419@gmail.com"">upscompany116+23419@gmail.com</a>
<a href=""mailto:upscompany116+24393@gmail.com"">upscompany116+24393@gmail.com</a>
<a href=""mailto:upscompany116+32313@gmail.com"">upscompany116+32313@gmail.com</a>
<a href=""mailto:upscompany116+16934@gmail.com"">upscompany116+16934@gmail.com</a>
<a href=""mailto:upscompany116+8548@gmail.com"">upscompany116+8548@gmail.com</a>
<a href=""mailto:upscompany116+30545@gmail.com"">upscompany116+30545@gmail.com</a>
<a href=""mailto:upscompany116+29121@gmail.com"">upscompany116+29121@gmail.com</a>
<a href=""mailto:upscompany116+19136@gmail.com"">upscompany116+19136@gmail.com</a>
<a href=""mailto:upscompany116+29848@gmail.com"">upscompany116+29848@gmail.com</a>
<a href=""mailto:upscompany116+24763@gmail.com"">upscompany116+24763@gmail.com</a>
<a href=""mailto:upscompany116+8987@gmail.com"">upscompany116+8987@gmail.com</a>
<a href=""mailto:upscompany116+17980@gmail.com"">upscompany116+17980@gmail.com</a>
<a href=""mailto:upscompany116+14658@gmail.com"">upscompany116+14658@gmail.com</a>
<a href=""mailto:upscompany116+9152@gmail.com"">upscompany116+9152@gmail.com</a>
<a href=""mailto:upscompany116+3967@gmail.com"">upscompany116+3967@gmail.com</a>
<a href=""mailto:upscompany116+27792@gmail.com"">upscompany116+27792@gmail.com</a>
<a href=""mailto:upscompany116+9181@gmail.com"">upscompany116+9181@gmail.com</a>
<a href=""mailto:upscompany116+7995@gmail.com"">upscompany116+7995@gmail.com</a>
<a href=""mailto:upscompany116+27484@gmail.com"">upscompany116+27484@gmail.com</a>
<a href=""mailto:upscompany116+4933@gmail.com"">upscompany116+4933@gmail.com</a>
<a href=""mailto:upscompany116+20596@gmail.com"">upscompany116+20596@gmail.com</a>
<a href=""mailto:upscompany116+8736@gmail.com"">upscompany116+8736@gmail.com</a>
<a href=""mailto:upscompany116+8633@gmail.com"">upscompany116+8633@gmail.com</a>
<a href=""mailto:upscompany116+10352@gmail.com"">upscompany116+10352@gmail.com</a>
<a href=""mailto:upscompany116+26889@gmail.com"">upscompany116+26889@gmail.com</a>
<a href=""mailto:upscompany116+17479@gmail.com"">upscompany116+17479@gmail.com</a>
<a href=""mailto:upscompany116+23877@gmail.com"">upscompany116+23877@gmail.com</a>
<a href=""mailto:upscompany116+17327@gmail.com"">upscompany116+17327@gmail.com</a>
<a href=""mailto:upscompany116+31580@gmail.com"">upscompany116+31580@gmail.com</a>
<a href=""mailto:upscompany116+32592@gmail.com"">upscompany116+32592@gmail.com</a>
<a href=""mailto:upscompany116+20333@gmail.com"">upscompany116+20333@gmail.com</a>
<a href=""mailto:upscompany116+20289@gmail.com"">upscompany116+20289@gmail.com</a>
<a href=""mailto:upscompany116+15994@gmail.com"">upscompany116+15994@gmail.com</a>
<a href=""mailto:upscompany116+31863@gmail.com"">upscompany116+31863@gmail.com</a>
<a href=""mailto:upscompany116+1880@gmail.com"">upscompany116+1880@gmail.com</a>
<a href=""mailto:upscompany116+11700@gmail.com"">upscompany116+11700@gmail.com</a>
<a href=""mailto:upscompany116+4789@gmail.com"">upscompany116+4789@gmail.com</a>
<a href=""mailto:upscompany116+13623@gmail.com"">upscompany116+13623@gmail.com</a>
<a href=""mailto:upscompany116+8679@gmail.com"">upscompany116+8679@gmail.com</a>
<a href=""mailto:upscompany116+1934@gmail.com"">upscompany116+1934@gmail.com</a>
<a href=""mailto:upscompany116+8582@gmail.com"">upscompany116+8582@gmail.com</a>
<a href=""mailto:upscompany116+7371@gmail.com"">upscompany116+7371@gmail.com</a>
<a href=""mailto:upscompany116+26266@gmail.com"">upscompany116+26266@gmail.com</a>
<a href=""mailto:upscompany116+24003@gmail.com"">upscompany116+24003@gmail.com</a>
<a href=""mailto:upscompany116+4880@gmail.com"">upscompany116+4880@gmail.com</a>
<a href=""mailto:upscompany116+17806@gmail.com"">upscompany116+17806@gmail.com</a>
<a href=""mailto:upscompany116+22239@gmail.com"">upscompany116+22239@gmail.com</a>
<a href=""mailto:upscompany116+19988@gmail.com"">upscompany116+19988@gmail.com</a>
<a href=""mailto:upscompany116+26807@gmail.com"">upscompany116+26807@gmail.com</a>
<a href=""mailto:upscompany116+29232@gmail.com"">upscompany116+29232@gmail.com</a>
<a href=""mailto:upscompany116+8866@gmail.com"">upscompany116+8866@gmail.com</a>
<a href=""mailto:upscompany116+13353@gmail.com"">upscompany116+13353@gmail.com</a>
<a href=""mailto:upscompany116+15503@gmail.com"">upscompany116+15503@gmail.com</a>
<a href=""mailto:upscompany116+30179@gmail.com"">upscompany116+30179@gmail.com</a>
<a href=""mailto:upscompany116+7353@gmail.com"">upscompany116+7353@gmail.com</a>
<a href=""mailto:upscompany116+23934@gmail.com"">upscompany116+23934@gmail.com</a>
<a href=""mailto:upscompany116+15228@gmail.com"">upscompany116+15228@gmail.com</a>
<a href=""mailto:upscompany116+22525@gmail.com"">upscompany116+22525@gmail.com</a>
<a href=""mailto:upscompany116+15349@gmail.com"">upscompany116+15349@gmail.com</a>
<a href=""mailto:upscompany116+5394@gmail.com"">upscompany116+5394@gmail.com</a>
<a href=""mailto:diplomatericp30@gmail.com"">diplomatericp30@gmail.com</a>
<a href=""mailto:diplomatericp30+14562@gmail.com"">diplomatericp30+14562@gmail.com</a>
<a href=""mailto:diplomatericp30+17922@gmail.com"">diplomatericp30+17922@gmail.com</a>
<a href=""mailto:diplomatericp30+16343@gmail.com"">diplomatericp30+16343@gmail.com</a>
<a href=""mailto:diplomatericp30+12978@gmail.com"">diplomatericp30+12978@gmail.com</a>
<a href=""mailto:diplomatericp30+20877@gmail.com"">diplomatericp30+20877@gmail.com</a>
<a href=""mailto:diplomatericp30+8697@gmail.com"">diplomatericp30+8697@gmail.com</a>
<a href=""mailto:diplomatericp30+11292@gmail.com"">diplomatericp30+11292@gmail.com</a>
<a href=""mailto:diplomatericp30+21726@gmail.com"">diplomatericp30+21726@gmail.com</a>
<a href=""mailto:diplomatericp30+1933@gmail.com"">diplomatericp30+1933@gmail.com</a>
<a href=""mailto:diplomatericp30+6746@gmail.com"">diplomatericp30+6746@gmail.com</a>
<a href=""mailto:diplomatericp30+873@gmail.com"">diplomatericp30+873@gmail.com</a>
<a href=""mailto:diplomatericp30+11513@gmail.com"">diplomatericp30+11513@gmail.com</a>
<a href=""mailto:diplomatericp30+19796@gmail.com"">diplomatericp30+19796@gmail.com</a>
<a href=""mailto:diplomatericp30+1671@gmail.com"">diplomatericp30+1671@gmail.com</a>
<a href=""mailto:diplomatericp30+32489@gmail.com"">diplomatericp30+32489@gmail.com</a>
<a href=""mailto:diplomatericp30+7360@gmail.com"">diplomatericp30+7360@gmail.com</a>
<a href=""mailto:diplomatericp30+10907@gmail.com"">diplomatericp30+10907@gmail.com</a>
<a href=""mailto:diplomatericp30+23149@gmail.com"">diplomatericp30+23149@gmail.com</a>
<a href=""mailto:diplomatericp30+1348@gmail.com"">diplomatericp30+1348@gmail.com</a>
<a href=""mailto:diplomatericp30+5831@gmail.com"">diplomatericp30+5831@gmail.com</a>
<a href=""mailto:diplomatericp30+25543@gmail.com"">diplomatericp30+25543@gmail.com</a>
<a href=""mailto:diplomatericp30+10974@gmail.com"">diplomatericp30+10974@gmail.com</a>
<a href=""mailto:diplomatericp30+15433@gmail.com"">diplomatericp30+15433@gmail.com</a>
<a href=""mailto:diplomatericp30+21591@gmail.com"">diplomatericp30+21591@gmail.com</a>
<a href=""mailto:diplomatericp30+15513@gmail.com"">diplomatericp30+15513@gmail.com</a>
<a href=""mailto:diplomatericp30+12597@gmail.com"">diplomatericp30+12597@gmail.com</a>
<a href=""mailto:diplomatericp30+12415@gmail.com"">diplomatericp30+12415@gmail.com</a>
<a href=""mailto:diplomatericp30+32586@gmail.com"">diplomatericp30+32586@gmail.com</a>
<a href=""mailto:diplomatericp30+18621@gmail.com"">diplomatericp30+18621@gmail.com</a>
<a href=""mailto:diplomatericp30+16268@gmail.com"">diplomatericp30+16268@gmail.com</a>
<a href=""mailto:diplomatericp30+20729@gmail.com"">diplomatericp30+20729@gmail.com</a>
<a href=""mailto:diplomatericp30+18352@gmail.com"">diplomatericp30+18352@gmail.com</a>
<a href=""mailto:diplomatericp30+4201@gmail.com"">diplomatericp30+4201@gmail.com</a>
<a href=""mailto:diplomatericp30+12814@gmail.com"">diplomatericp30+12814@gmail.com</a>
<a href=""mailto:diplomatericp30+10442@gmail.com"">diplomatericp30+10442@gmail.com</a>
<a href=""mailto:diplomatericp30+5787@gmail.com"">diplomatericp30+5787@gmail.com</a>
<a href=""mailto:diplomatericp30+10490@gmail.com"">diplomatericp30+10490@gmail.com</a>
<a href=""mailto:diplomatericp30+20794@gmail.com"">diplomatericp30+20794@gmail.com</a>
<a href=""mailto:diplomatericp30+19821@gmail.com"">diplomatericp30+19821@gmail.com</a>
<a href=""mailto:diplomatericp30+9243@gmail.com"">diplomatericp30+9243@gmail.com</a>
<a href=""mailto:diplomatericp30+534@gmail.com"">diplomatericp30+534@gmail.com</a>
<a href=""mailto:diplomatericp30+7874@gmail.com"">diplomatericp30+7874@gmail.com</a>
<a href=""mailto:diplomatericp30+27452@gmail.com"">diplomatericp30+27452@gmail.com</a>
<a href=""mailto:diplomatericp30+7467@gmail.com"">diplomatericp30+7467@gmail.com</a>
<a href=""mailto:diplomatericp30+21565@gmail.com"">diplomatericp30+21565@gmail.com</a>
<a href=""mailto:diplomatericp30+12814@gmail.com"">diplomatericp30+12814@gmail.com</a>
<a href=""mailto:diplomatericp30+16913@gmail.com"">diplomatericp30+16913@gmail.com</a>
<a href=""mailto:diplomatericp30+22601@gmail.com"">diplomatericp30+22601@gmail.com</a>
<a href=""mailto:diplomatericp30+31779@gmail.com"">diplomatericp30+31779@gmail.com</a>
<a href=""mailto:diplomatericp30+15176@gmail.com"">diplomatericp30+15176@gmail.com</a>
<a href=""mailto:diplomatericp30+9902@gmail.com"">diplomatericp30+9902@gmail.com</a>
<a href=""mailto:diplomatericp30+2806@gmail.com"">diplomatericp30+2806@gmail.com</a>
<a href=""mailto:diplomatericp30+11477@gmail.com"">diplomatericp30+11477@gmail.com</a>
<a href=""mailto:diplomatericp30+23090@gmail.com"">diplomatericp30+23090@gmail.com</a>
<a href=""mailto:diplomatericp30+14033@gmail.com"">diplomatericp30+14033@gmail.com</a>
<a href=""mailto:diplomatericp30+462@gmail.com"">diplomatericp30+462@gmail.com</a>
<a href=""mailto:diplomatericp30+30091@gmail.com"">diplomatericp30+30091@gmail.com</a>
<a href=""mailto:diplomatericp30+13623@gmail.com"">diplomatericp30+13623@gmail.com</a>
<a href=""mailto:diplomatericp30+2976@gmail.com"">diplomatericp30+2976@gmail.com</a>
<a href=""mailto:diplomatericp30+2929@gmail.com"">diplomatericp30+2929@gmail.com</a>
<a href=""mailto:diplomatericp30+5746@gmail.com"">diplomatericp30+5746@gmail.com</a>
<a href=""mailto:diplomatericp30+22157@gmail.com"">diplomatericp30+22157@gmail.com</a>
<a href=""mailto:diplomatericp30+9776@gmail.com"">diplomatericp30+9776@gmail.com</a>
<a href=""mailto:diplomatericp30+24863@gmail.com"">diplomatericp30+24863@gmail.com</a>
<a href=""mailto:diplomatericp30+8956@gmail.com"">diplomatericp30+8956@gmail.com</a>
<a href=""mailto:diplomatericp30+1848@gmail.com"">diplomatericp30+1848@gmail.com</a>
<a href=""mailto:diplomatericp30+19228@gmail.com"">diplomatericp30+19228@gmail.com</a>
<a href=""mailto:diplomatericp30+17977@gmail.com"">diplomatericp30+17977@gmail.com</a>
<a href=""mailto:diplomatericp30+24257@gmail.com"">diplomatericp30+24257@gmail.com</a>
<a href=""mailto:diplomatericp30+12039@gmail.com"">diplomatericp30+12039@gmail.com</a>
<a href=""mailto:diplomatericp30+11988@gmail.com"">diplomatericp30+11988@gmail.com</a>
<a href=""mailto:diplomatericp30+32308@gmail.com"">diplomatericp30+32308@gmail.com</a>
<a href=""mailto:diplomatericp30+7939@gmail.com"">diplomatericp30+7939@gmail.com</a>
<a href=""mailto:diplomatericp30+30739@gmail.com"">diplomatericp30+30739@gmail.com</a>
<a href=""mailto:diplomatericp30+27201@gmail.com"">diplomatericp30+27201@gmail.com</a>
<a href=""mailto:diplomatericp30+13168@gmail.com"">diplomatericp30+13168@gmail.com</a>
<a href=""mailto:diplomatericp30+5105@gmail.com"">diplomatericp30+5105@gmail.com</a>
<a href=""mailto:diplomatericp30+4477@gmail.com"">diplomatericp30+4477@gmail.com</a>
<a href=""mailto:diplomatericp30+7280@gmail.com"">diplomatericp30+7280@gmail.com</a>
<a href=""mailto:diplomatericp30+25516@gmail.com"">diplomatericp30+25516@gmail.com</a>
<a href=""mailto:diplomatericp30+28869@gmail.com"">diplomatericp30+28869@gmail.com</a>
<a href=""mailto:diplomatericp30+20947@gmail.com"">diplomatericp30+20947@gmail.com</a>
<a href=""mailto:diplomatericp30+25264@gmail.com"">diplomatericp30+25264@gmail.com</a>
<a href=""mailto:diplomatericp30+14618@gmail.com"">diplomatericp30+14618@gmail.com</a>
<a href=""mailto:diplomatericp30+26860@gmail.com"">diplomatericp30+26860@gmail.com</a>
<a href=""mailto:diplomatericp30+21055@gmail.com"">diplomatericp30+21055@gmail.com</a>
<a href=""mailto:diplomatericp30+21854@gmail.com"">diplomatericp30+21854@gmail.com</a>
<a href=""mailto:diplomatericp30+8548@gmail.com"">diplomatericp30+8548@gmail.com</a>
<a href=""mailto:diplomatericp30+28431@gmail.com"">diplomatericp30+28431@gmail.com</a>
<a href=""mailto:diplomatericp30+31598@gmail.com"">diplomatericp30+31598@gmail.com</a>
<a href=""mailto:diplomatericp30+13775@gmail.com"">diplomatericp30+13775@gmail.com</a>
<a href=""mailto:diplomatericp30+24383@gmail.com"">diplomatericp30+24383@gmail.com</a>
<a href=""mailto:diplomatericp30+15189@gmail.com"">diplomatericp30+15189@gmail.com</a>
<a href=""mailto:diplomatericp30+23855@gmail.com"">diplomatericp30+23855@gmail.com</a>
<a href=""mailto:diplomatericp30+25777@gmail.com"">diplomatericp30+25777@gmail.com</a>
<a href=""mailto:diplomatericp30+12996@gmail.com"">diplomatericp30+12996@gmail.com</a>
<a href=""mailto:diplomatericp30+17114@gmail.com"">diplomatericp30+17114@gmail.com</a>
<a href=""mailto:diplomatericp30+17306@gmail.com"">diplomatericp30+17306@gmail.com</a>
<a href=""mailto:diplomatericp30+17330@gmail.com"">diplomatericp30+17330@gmail.com</a>
<a href=""mailto:diplomatericp30+4992@gmail.com"">diplomatericp30+4992@gmail.com</a>
<a href=""mailto:emefiele294@gmail.com"">emefiele294@gmail.com</a>
<a href=""mailto:emefiele294+5266@gmail.com"">emefiele294+5266@gmail.com</a>
<a href=""mailto:emefiele294+28824@gmail.com"">emefiele294+28824@gmail.com</a>
<a href=""mailto:emefiele294+13897@gmail.com"">emefiele294+13897@gmail.com</a>
<a href=""mailto:emefiele294+28490@gmail.com"">emefiele294+28490@gmail.com</a>
<a href=""mailto:emefiele294+12543@gmail.com"">emefiele294+12543@gmail.com</a>
<a href=""mailto:emefiele294+24071@gmail.com"">emefiele294+24071@gmail.com</a>
<a href=""mailto:emefiele294+10867@gmail.com"">emefiele294+10867@gmail.com</a>
<a href=""mailto:emefiele294+32370@gmail.com"">emefiele294+32370@gmail.com</a>
<a href=""mailto:emefiele294+30665@gmail.com"">emefiele294+30665@gmail.com</a>
<a href=""mailto:emefiele294+16682@gmail.com"">emefiele294+16682@gmail.com</a>
<a href=""mailto:emefiele294+12604@gmail.com"">emefiele294+12604@gmail.com</a>
<a href=""mailto:emefiele294+12502@gmail.com"">emefiele294+12502@gmail.com</a>
<a href=""mailto:emefiele294+27304@gmail.com"">emefiele294+27304@gmail.com</a>
<a href=""mailto:emefiele294+8373@gmail.com"">emefiele294+8373@gmail.com</a>
<a href=""mailto:emefiele294+31506@gmail.com"">emefiele294+31506@gmail.com</a>
<a href=""mailto:emefiele294+22607@gmail.com"">emefiele294+22607@gmail.com</a>
<a href=""mailto:emefiele294+14882@gmail.com"">emefiele294+14882@gmail.com</a>
<a href=""mailto:emefiele294+28558@gmail.com"">emefiele294+28558@gmail.com</a>
<a href=""mailto:emefiele294+12482@gmail.com"">emefiele294+12482@gmail.com</a>
<a href=""mailto:emefiele294+24919@gmail.com"">emefiele294+24919@gmail.com</a>
<a href=""mailto:emefiele294+25477@gmail.com"">emefiele294+25477@gmail.com</a>
<a href=""mailto:emefiele294+24944@gmail.com"">emefiele294+24944@gmail.com</a>
<a href=""mailto:emefiele294+6068@gmail.com"">emefiele294+6068@gmail.com</a>
<a href=""mailto:emefiele294+28337@gmail.com"">emefiele294+28337@gmail.com</a>
<a href=""mailto:emefiele294+4277@gmail.com"">emefiele294+4277@gmail.com</a>
<a href=""mailto:emefiele294+30094@gmail.com"">emefiele294+30094@gmail.com</a>
<a href=""mailto:emefiele294+10727@gmail.com"">emefiele294+10727@gmail.com</a>
<a href=""mailto:emefiele294+3101@gmail.com"">emefiele294+3101@gmail.com</a>
<a href=""mailto:emefiele294+26403@gmail.com"">emefiele294+26403@gmail.com</a>
<a href=""mailto:emefiele294+8264@gmail.com"">emefiele294+8264@gmail.com</a>
<a href=""mailto:emefiele294+19170@gmail.com"">emefiele294+19170@gmail.com</a>
<a href=""mailto:emefiele294+21744@gmail.com"">emefiele294+21744@gmail.com</a>
<a href=""mailto:emefiele294+14481@gmail.com"">emefiele294+14481@gmail.com</a>
<a href=""mailto:emefiele294+21571@gmail.com"">emefiele294+21571@gmail.com</a>
<a href=""mailto:emefiele294+24212@gmail.com"">emefiele294+24212@gmail.com</a>
<a href=""mailto:emefiele294+14863@gmail.com"">emefiele294+14863@gmail.com</a>
<a href=""mailto:emefiele294+344@gmail.com"">emefiele294+344@gmail.com</a>
<a href=""mailto:emefiele294+31635@gmail.com"">emefiele294+31635@gmail.com</a>
<a href=""mailto:emefiele294+26019@gmail.com"">emefiele294+26019@gmail.com</a>
<a href=""mailto:emefiele294+8742@gmail.com"">emefiele294+8742@gmail.com</a>
<a href=""mailto:emefiele294+27901@gmail.com"">emefiele294+27901@gmail.com</a>
<a href=""mailto:emefiele294+25911@gmail.com"">emefiele294+25911@gmail.com</a>
<a href=""mailto:emefiele294+18458@gmail.com"">emefiele294+18458@gmail.com</a>
<a href=""mailto:emefiele294+2769@gmail.com"">emefiele294+2769@gmail.com</a>
<a href=""mailto:emefiele294+28546@gmail.com"">emefiele294+28546@gmail.com</a>
<a href=""mailto:emefiele294+23450@gmail.com"">emefiele294+23450@gmail.com</a>
<a href=""mailto:emefiele294+22108@gmail.com"">emefiele294+22108@gmail.com</a>
<a href=""mailto:emefiele294+13316@gmail.com"">emefiele294+13316@gmail.com</a>
<a href=""mailto:emefiele294+4483@gmail.com"">emefiele294+4483@gmail.com</a>
<a href=""mailto:emefiele294+8232@gmail.com"">emefiele294+8232@gmail.com</a>
<a href=""mailto:emefiele294+7949@gmail.com"">emefiele294+7949@gmail.com</a>
<a href=""mailto:emefiele294+4429@gmail.com"">emefiele294+4429@gmail.com</a>
<a href=""mailto:emefiele294+17642@gmail.com"">emefiele294+17642@gmail.com</a>
<a href=""mailto:emefiele294+21268@gmail.com"">emefiele294+21268@gmail.com</a>
<a href=""mailto:emefiele294+2813@gmail.com"">emefiele294+2813@gmail.com</a>
<a href=""mailto:emefiele294+10867@gmail.com"">emefiele294+10867@gmail.com</a>
<a href=""mailto:emefiele294+31118@gmail.com"">emefiele294+31118@gmail.com</a>
<a href=""mailto:emefiele294+16415@gmail.com"">emefiele294+16415@gmail.com</a>
<a href=""mailto:emefiele294+21643@gmail.com"">emefiele294+21643@gmail.com</a>
<a href=""mailto:emefiele294+16480@gmail.com"">emefiele294+16480@gmail.com</a>
<a href=""mailto:emefiele294+28728@gmail.com"">emefiele294+28728@gmail.com</a>
<a href=""mailto:emefiele294+12308@gmail.com"">emefiele294+12308@gmail.com</a>
<a href=""mailto:emefiele294+21226@gmail.com"">emefiele294+21226@gmail.com</a>
<a href=""mailto:emefiele294+10158@gmail.com"">emefiele294+10158@gmail.com</a>
<a href=""mailto:emefiele294+28897@gmail.com"">emefiele294+28897@gmail.com</a>
<a href=""mailto:emefiele294+25409@gmail.com"">emefiele294+25409@gmail.com</a>
<a href=""mailto:emefiele294+10676@gmail.com"">emefiele294+10676@gmail.com</a>
<a href=""mailto:emefiele294+6841@gmail.com"">emefiele294+6841@gmail.com</a>
<a href=""mailto:emefiele294+25748@gmail.com"">emefiele294+25748@gmail.com</a>
<a href=""mailto:emefiele294+30810@gmail.com"">emefiele294+30810@gmail.com</a>
<a href=""mailto:emefiele294+12097@gmail.com"">emefiele294+12097@gmail.com</a>
<a href=""mailto:emefiele294+5505@gmail.com"">emefiele294+5505@gmail.com</a>
<a href=""mailto:emefiele294+19268@gmail.com"">emefiele294+19268@gmail.com</a>
<a href=""mailto:emefiele294+361@gmail.com"">emefiele294+361@gmail.com</a>
<a href=""mailto:emefiele294+30966@gmail.com"">emefiele294+30966@gmail.com</a>
<a href=""mailto:emefiele294+22532@gmail.com"">emefiele294+22532@gmail.com</a>
<a href=""mailto:emefiele294+21722@gmail.com"">emefiele294+21722@gmail.com</a>
<a href=""mailto:emefiele294+28546@gmail.com"">emefiele294+28546@gmail.com</a>
<a href=""mailto:emefiele294+8368@gmail.com"">emefiele294+8368@gmail.com</a>
<a href=""mailto:emefiele294+17209@gmail.com"">emefiele294+17209@gmail.com</a>
<a href=""mailto:emefiele294+17417@gmail.com"">emefiele294+17417@gmail.com</a>
<a href=""mailto:emefiele294+29073@gmail.com"">emefiele294+29073@gmail.com</a>
<a href=""mailto:emefiele294+9539@gmail.com"">emefiele294+9539@gmail.com</a>
<a href=""mailto:emefiele294+28279@gmail.com"">emefiele294+28279@gmail.com</a>
<a href=""mailto:emefiele294+20322@gmail.com"">emefiele294+20322@gmail.com</a>
<a href=""mailto:emefiele294+2431@gmail.com"">emefiele294+2431@gmail.com</a>
<a href=""mailto:emefiele294+14920@gmail.com"">emefiele294+14920@gmail.com</a>
<a href=""mailto:emefiele294+699@gmail.com"">emefiele294+699@gmail.com</a>
<a href=""mailto:emefiele294+8491@gmail.com"">emefiele294+8491@gmail.com</a>
<a href=""mailto:emefiele294+30028@gmail.com"">emefiele294+30028@gmail.com</a>
<a href=""mailto:emefiele294+6595@gmail.com"">emefiele294+6595@gmail.com</a>
<a href=""mailto:emefiele294+5844@gmail.com"">emefiele294+5844@gmail.com</a>
<a href=""mailto:emefiele294+29162@gmail.com"">emefiele294+29162@gmail.com</a>
<a href=""mailto:emefiele294+24596@gmail.com"">emefiele294+24596@gmail.com</a>
<a href=""mailto:emefiele294+3861@gmail.com"">emefiele294+3861@gmail.com</a>
<a href=""mailto:emefiele294+9339@gmail.com"">emefiele294+9339@gmail.com</a>
<a href=""mailto:emefiele294+2162@gmail.com"">emefiele294+2162@gmail.com</a>
<a href=""mailto:emefiele294+15880@gmail.com"">emefiele294+15880@gmail.com</a>
<a href=""mailto:emefiele294+21540@gmail.com"">emefiele294+21540@gmail.com</a>
<a href=""mailto:emefiele294+26163@gmail.com"">emefiele294+26163@gmail.com</a>
<a href=""mailto:agentvictorokle@gmail.com"">agentvictorokle@gmail.com</a>
<a href=""mailto:agentvictorokle+27019@gmail.com"">agentvictorokle+27019@gmail.com</a>
<a href=""mailto:agentvictorokle+32690@gmail.com"">agentvictorokle+32690@gmail.com</a>
<a href=""mailto:agentvictorokle+15227@gmail.com"">agentvictorokle+15227@gmail.com</a>
<a href=""mailto:agentvictorokle+3315@gmail.com"">agentvictorokle+3315@gmail.com</a>
<a href=""mailto:agentvictorokle+28349@gmail.com"">agentvictorokle+28349@gmail.com</a>
<a href=""mailto:agentvictorokle+13650@gmail.com"">agentvictorokle+13650@gmail.com</a>
<a href=""mailto:agentvictorokle+25712@gmail.com"">agentvictorokle+25712@gmail.com</a>
<a href=""mailto:agentvictorokle+6062@gmail.com"">agentvictorokle+6062@gmail.com</a>
<a href=""mailto:agentvictorokle+31081@gmail.com"">agentvictorokle+31081@gmail.com</a>
<a href=""mailto:agentvictorokle+18251@gmail.com"">agentvictorokle+18251@gmail.com</a>
<a href=""mailto:agentvictorokle+5745@gmail.com"">agentvictorokle+5745@gmail.com</a>
<a href=""mailto:agentvictorokle+17700@gmail.com"">agentvictorokle+17700@gmail.com</a>
<a href=""mailto:agentvictorokle+5927@gmail.com"">agentvictorokle+5927@gmail.com</a>
<a href=""mailto:agentvictorokle+21086@gmail.com"">agentvictorokle+21086@gmail.com</a>
<a href=""mailto:agentvictorokle+14706@gmail.com"">agentvictorokle+14706@gmail.com</a>
<a href=""mailto:agentvictorokle+10743@gmail.com"">agentvictorokle+10743@gmail.com</a>
<a href=""mailto:agentvictorokle+21070@gmail.com"">agentvictorokle+21070@gmail.com</a>
<a href=""mailto:agentvictorokle+24552@gmail.com"">agentvictorokle+24552@gmail.com</a>
<a href=""mailto:agentvictorokle+6269@gmail.com"">agentvictorokle+6269@gmail.com</a>
<a href=""mailto:agentvictorokle+17130@gmail.com"">agentvictorokle+17130@gmail.com</a>
<a href=""mailto:agentvictorokle+27123@gmail.com"">agentvictorokle+27123@gmail.com</a>
<a href=""mailto:agentvictorokle+12988@gmail.com"">agentvictorokle+12988@gmail.com</a>
<a href=""mailto:agentvictorokle+20599@gmail.com"">agentvictorokle+20599@gmail.com</a>
<a href=""mailto:agentvictorokle+16583@gmail.com"">agentvictorokle+16583@gmail.com</a>
<a href=""mailto:agentvictorokle+3398@gmail.com"">agentvictorokle+3398@gmail.com</a>
<a href=""mailto:agentvictorokle+15037@gmail.com"">agentvictorokle+15037@gmail.com</a>
<a href=""mailto:agentvictorokle+23373@gmail.com"">agentvictorokle+23373@gmail.com</a>
<a href=""mailto:agentvictorokle+15113@gmail.com"">agentvictorokle+15113@gmail.com</a>
<a href=""mailto:agentvictorokle+21083@gmail.com"">agentvictorokle+21083@gmail.com</a>
<a href=""mailto:agentvictorokle+32412@gmail.com"">agentvictorokle+32412@gmail.com</a>
<a href=""mailto:agentvictorokle+22177@gmail.com"">agentvictorokle+22177@gmail.com</a>
<a href=""mailto:agentvictorokle+17709@gmail.com"">agentvictorokle+17709@gmail.com</a>
<a href=""mailto:agentvictorokle+7571@gmail.com"">agentvictorokle+7571@gmail.com</a>
<a href=""mailto:agentvictorokle+761@gmail.com"">agentvictorokle+761@gmail.com</a>
<a href=""mailto:agentvictorokle+16420@gmail.com"">agentvictorokle+16420@gmail.com</a>
<a href=""mailto:agentvictorokle+20098@gmail.com"">agentvictorokle+20098@gmail.com</a>
<a href=""mailto:agentvictorokle+2012@gmail.com"">agentvictorokle+2012@gmail.com</a>
<a href=""mailto:agentvictorokle+4613@gmail.com"">agentvictorokle+4613@gmail.com</a>
<a href=""mailto:agentvictorokle+13734@gmail.com"">agentvictorokle+13734@gmail.com</a>
<a href=""mailto:agentvictorokle+4084@gmail.com"">agentvictorokle+4084@gmail.com</a>
<a href=""mailto:agentvictorokle+13140@gmail.com"">agentvictorokle+13140@gmail.com</a>
<a href=""mailto:agentvictorokle+18344@gmail.com"">agentvictorokle+18344@gmail.com</a>
<a href=""mailto:agentvictorokle+18685@gmail.com"">agentvictorokle+18685@gmail.com</a>
<a href=""mailto:agentvictorokle+6809@gmail.com"">agentvictorokle+6809@gmail.com</a>
<a href=""mailto:agentvictorokle+26127@gmail.com"">agentvictorokle+26127@gmail.com</a>
<a href=""mailto:agentvictorokle+12874@gmail.com"">agentvictorokle+12874@gmail.com</a>
<a href=""mailto:agentvictorokle+14587@gmail.com"">agentvictorokle+14587@gmail.com</a>
<a href=""mailto:agentvictorokle+13318@gmail.com"">agentvictorokle+13318@gmail.com</a>
<a href=""mailto:agentvictorokle+16446@gmail.com"">agentvictorokle+16446@gmail.com</a>
<a href=""mailto:agentvictorokle+31711@gmail.com"">agentvictorokle+31711@gmail.com</a>
<a href=""mailto:agentvictorokle+27251@gmail.com"">agentvictorokle+27251@gmail.com</a>
<a href=""mailto:agentvictorokle+22308@gmail.com"">agentvictorokle+22308@gmail.com</a>
<a href=""mailto:agentvictorokle+29917@gmail.com"">agentvictorokle+29917@gmail.com</a>
<a href=""mailto:agentvictorokle+26368@gmail.com"">agentvictorokle+26368@gmail.com</a>
<a href=""mailto:agentvictorokle+26207@gmail.com"">agentvictorokle+26207@gmail.com</a>
<a href=""mailto:agentvictorokle+21477@gmail.com"">agentvictorokle+21477@gmail.com</a>
<a href=""mailto:agentvictorokle+30227@gmail.com"">agentvictorokle+30227@gmail.com</a>
<a href=""mailto:agentvictorokle+17234@gmail.com"">agentvictorokle+17234@gmail.com</a>
<a href=""mailto:agentvictorokle+8497@gmail.com"">agentvictorokle+8497@gmail.com</a>
<a href=""mailto:agentvictorokle+2378@gmail.com"">agentvictorokle+2378@gmail.com</a>
<a href=""mailto:agentvictorokle+28938@gmail.com"">agentvictorokle+28938@gmail.com</a>
<a href=""mailto:agentvictorokle+19087@gmail.com"">agentvictorokle+19087@gmail.com</a>
<a href=""mailto:agentvictorokle+26592@gmail.com"">agentvictorokle+26592@gmail.com</a>
<a href=""mailto:agentvictorokle+31163@gmail.com"">agentvictorokle+31163@gmail.com</a>
<a href=""mailto:agentvictorokle+27241@gmail.com"">agentvictorokle+27241@gmail.com</a>
<a href=""mailto:agentvictorokle+18227@gmail.com"">agentvictorokle+18227@gmail.com</a>
<a href=""mailto:agentvictorokle+14191@gmail.com"">agentvictorokle+14191@gmail.com</a>
<a href=""mailto:agentvictorokle+27081@gmail.com"">agentvictorokle+27081@gmail.com</a>
<a href=""mailto:agentvictorokle+14793@gmail.com"">agentvictorokle+14793@gmail.com</a>
<a href=""mailto:agentvictorokle+30092@gmail.com"">agentvictorokle+30092@gmail.com</a>
<a href=""mailto:agentvictorokle+26487@gmail.com"">agentvictorokle+26487@gmail.com</a>
<a href=""mailto:agentvictorokle+50@gmail.com"">agentvictorokle+50@gmail.com</a>
<a href=""mailto:agentvictorokle+21558@gmail.com"">agentvictorokle+21558@gmail.com</a>
<a href=""mailto:agentvictorokle+20826@gmail.com"">agentvictorokle+20826@gmail.com</a>
<a href=""mailto:agentvictorokle+1392@gmail.com"">agentvictorokle+1392@gmail.com</a>
<a href=""mailto:agentvictorokle+32144@gmail.com"">agentvictorokle+32144@gmail.com</a>
<a href=""mailto:agentvictorokle+14744@gmail.com"">agentvictorokle+14744@gmail.com</a>
<a href=""mailto:agentvictorokle+26859@gmail.com"">agentvictorokle+26859@gmail.com</a>
<a href=""mailto:agentvictorokle+28897@gmail.com"">agentvictorokle+28897@gmail.com</a>
<a href=""mailto:agentvictorokle+29515@gmail.com"">agentvictorokle+29515@gmail.com</a>
<a href=""mailto:agentvictorokle+7998@gmail.com"">agentvictorokle+7998@gmail.com</a>
<a href=""mailto:agentvictorokle+9673@gmail.com"">agentvictorokle+9673@gmail.com</a>
<a href=""mailto:agentvictorokle+31382@gmail.com"">agentvictorokle+31382@gmail.com</a>
<a href=""mailto:agentvictorokle+23052@gmail.com"">agentvictorokle+23052@gmail.com</a>
<a href=""mailto:agentvictorokle+24065@gmail.com"">agentvictorokle+24065@gmail.com</a>
<a href=""mailto:agentvictorokle+7475@gmail.com"">agentvictorokle+7475@gmail.com</a>
<a href=""mailto:agentvictorokle+15501@gmail.com"">agentvictorokle+15501@gmail.com</a>
<a href=""mailto:agentvictorokle+8240@gmail.com"">agentvictorokle+8240@gmail.com</a>
<a href=""mailto:agentvictorokle+8874@gmail.com"">agentvictorokle+8874@gmail.com</a>
<a href=""mailto:agentvictorokle+13944@gmail.com"">agentvictorokle+13944@gmail.com</a>
<a href=""mailto:agentvictorokle+26505@gmail.com"">agentvictorokle+26505@gmail.com</a>
<a href=""mailto:agentvictorokle+11637@gmail.com"">agentvictorokle+11637@gmail.com</a>
<a href=""mailto:agentvictorokle+28582@gmail.com"">agentvictorokle+28582@gmail.com</a>
<a href=""mailto:agentvictorokle+23524@gmail.com"">agentvictorokle+23524@gmail.com</a>
<a href=""mailto:agentvictorokle+4084@gmail.com"">agentvictorokle+4084@gmail.com</a>
<a href=""mailto:agentvictorokle+27189@gmail.com"">agentvictorokle+27189@gmail.com</a>
<a href=""mailto:agentvictorokle+10025@gmail.com"">agentvictorokle+10025@gmail.com</a>
<a href=""mailto:agentvictorokle+27355@gmail.com"">agentvictorokle+27355@gmail.com</a>
<a href=""mailto:agentvictorokle+29726@gmail.com"">agentvictorokle+29726@gmail.com</a>
<a href=""mailto:agentvictorokle+16752@gmail.com"">agentvictorokle+16752@gmail.com</a>"
XCxXLB0W,G25sample,ikizid,Python,Friday 21st of July 2023 11:47:45 AM CDT,"#!/usr/bin/python3
# (originally created by Huijbregts)
# (C) AASI_Amsha, June 2023

import numpy as np
import random

class G25_Sample:
    def __init__(self, g25str):
    g25data = g25str.split("","")
    self.name = g25data[0]
    g25 = []
    for i in range(1, len(g25data)):
    g25.append(float(g25data[i]))
    self.g25 = np.array(g25)
    # G25 samples
    G25_RUS_SINTASHTA_MLBA = 'RUS_Sintashta_MLBA,0.125433,0.116075,0.0576869,0.0787689,0.0113968,0.0284096,0.0056636,0.0042383,-0.0176231,-0.028034,-0.0025766,0.0013488,-0.0032061,-0.0215196,0.0225975,0.0126579,-0.004885,0.0004476,-0.0002933,-0.0006753,-0.0061142,0.0023618,0.0026497,0.007033,-0.0041074'
    G25_IRN_GANJ_DAREH_N = 'IRN_Ganj_Dareh_N,0.0430252,0.0664158,-0.1550722,0.0047158,-0.122669,0.0235384,0.017109,-0.0011998,-0.082546,-0.0544158,-0.0028258,-0.0016186,0.0044896,-0.0062756,0.0316498,0.0561384,-0.0054242,0.0068664,0.0136508,-0.0334162,0.00856,-0.028836,-0.0110678,-0.039331,0.0222254'
    G25_SIMULATED_AASI = 'Simulated_AASI:By_Matt,-0.01338826,-0.25017,-0.215904,0.168274,-0.023185,0.0563242,-0.0112391,0.0235317,0.128084,0.080387,0.0081456,0.00184176,-0.0020191,0.01626691,-0.0354205,-0.0261625,0.0238043,-0.00203711,-0.0041062,0.043945,0.00856383,0.0156317,-0.0140597,0.0102236,-0.0109007'
    G25_BHUMIHAR = 'Bhumihar_Bihar,0.066397,-0.0287733,-0.1155247,0.0999147,-0.065243,0.05364,-0.0003917,0.0060767,0.018816,0.0091723,-0.0064413,0.0007493,0.0013873,-0.009909,0.0027593,0.0053033,0.006867,-0.0017737,-0.0040223,-0.0002917,-0.0038263,0.00169,0.0004933,0.004338,-0.001397'

    # Generate samples from string
    G25_SAMP_RUS_SINTASHTA = G25_Sample(G25_RUS_SINTASHTA_MLBA)
    G25_SAMP_IRN_GANJ_DAREH_N = G25_Sample(G25_IRN_GANJ_DAREH_N)
    G25_SAMP_SIMULATED_AASI = G25_Sample(G25_SIMULATED_AASI)
    G25_BHUMIHAR = G25_Sample(G25_BHUMIHAR)

    # Model (K=3 South Asia)
    TARGET = G25_BHUMIHAR
    SOURCES = [G25_SAMP_RUS_SINTASHTA, G25_SAMP_IRN_GANJ_DAREH_N, G25_SAMP_SIMULATED_AASI]
    # Calculator settings
    penalty_factor = 0.001
    n_batch = 500
    n_cycles = 200

def GenerateSourceMatrix(source_samples: list[G25_Sample], target_sample: G25_Sample):
    source_mat = []
    for source in source_samples:
        source_mat.append(target_sample.g25 - source.g25)
    return np.array(source_mat)

# Take means of all the columns and then the magnitude of the resulting vector.
def EvaluateMatrix(matrix: np.array):
    col_mean = np.mean(matrix, axis=0)
    squared_col_means = np.square(col_mean)
    return np.sum(squared_col_means)

# Add penalty for samples further away
def EvaluatePenalty(matrix: np.array, b: int):
col_mean = np.mean(matrix[b,])
squared_col_means = np.square(col_mean)
return penalty_factor * np.sum(squared_col_means)

# Sample random rows from the matrix
def SampleRows(n_sources):
    sampled_rows = []
    for i in range(0, n_batch):
    sampled_rows.append(random.randrange(0, n_sources))
    return sampled_rows

# Calculate fit, generally a value of less than 2.00 is good.
def CalculateFit(source_matrix, final_matrix, target_matrix):
    PCT = 100 if np.max(source_matrix[0]) > 2 else 1
    estim = np.transpose(np.mean(final_matrix, axis=0) + target_matrix)
    dif = estim - target_matrix
    dist1_2 = np.sqrt(np.sum(dif**2))/PCT
    return round(100 * dist1_2, 4)"
uUEhBLvG,Admixture,ikizid,Python,Friday 21st of July 2023 11:46:47 AM CDT,"# Monte Carlo Algorithm for calculating ADMIXTURE
# Create source matrix by turning source samples into a matrix
# then subtracting the target.
# First sample nBatch random rows
# Then take the mean, this is err1. (Error, ideally, the mean should be zero for a perfect mixture)
# Then iterate through nCycles
# Each cycle do the following:
# 1. Sample another nBatch random rows
# 2. Iterate through 1 to nBatch, say the iterator is b
# 3. Every iteration replace 1:b rows of the matrix with the newly sampled matrix
# 4. Calculate err2.
# 5. If err2 is less than err1, then err2 = err1, and we are in the correct direction,
# 6. So add the newly sampled rows to the matrix
def nMonte(source_samples: list[G25_Sample], target: G25_Sample):
    source_mat = GenerateSourceMatrix(source_samples, target)
    n_sources = len(source_samples)
    sample_rows = SampleRows(n_sources)
    test_matrix = source_mat[sample_rows]
    final_matrix = test_matrix.copy()
    err1 = EvaluateMatrix(final_matrix)
    for i in range(0, n_cycles):
        sample_rows = SampleRows(n_sources)
        sampled_matrix = source_mat[sample_rows]
        test_matrix = final_matrix.copy()
    for j in range(0, n_batch):
        test_matrix[j, ] = sampled_matrix[j, ]
        err2 = EvaluateMatrix(test_matrix) + EvaluatePenalty(test_matrix, j)

    if(err1 >= err2):
        final_matrix[j, ] = test_matrix[j, ]
    err1 = err2

    # Prepare results dict
    # Every row in the final_matrix corresponds to a source sample
    # Find which rows belong to which source sample
    source_fractions = {}
    for i in range(0, len(source_samples)):
        source_fractions[i] = 0
        for i in range(0, len(final_matrix)):
            for j in range(0, len(source_mat)):
                if ((final_matrix[i] == source_mat[j]).all()):
                    source_fractions[j] += 1

    # Divide by total to get fraction
    for i in source_fractions.keys():
        source_fractions[i] /= len(final_matrix)

    # Prepare Dictionary
    result_dict = {}
    for i in range(len(source_samples)):
        result_dict[source_samples[i].name] = source_fractions[i]

    # Determine fit
    fit = CalculateFit(source_mat, final_matrix, target.g25)
    return [result_dict, fit]

if __name__ == ""__main__"":
    print(nMonte(SOURCES, TARGET))"
pxWAbNEy,CSE111 (Summer 23) Lab: Capsule size Pokemon Game,GazzaliFahim,Python,Friday 21st of July 2023 11:46:37 AM CDT,"# Driver code
trainer1 = Trainer(""T1"", ""Ash"")
trainer2 = Trainer(""T2"", ""Misty"")

pokemon1 = Pokemon(""P1"", ""Pikachu"", 10)
pokemon2 = Pokemon(""P2"", ""Starmie"", 12)

trainer1.add_pokemon(pokemon1)
trainer2.add_pokemon(pokemon2)

# ============================== Battle 1: Round 1 Starts ==============================
battle1 = Battle(trainer1, trainer2)
print(battle1.fight(pokemon1, pokemon2))
# Expected Output: ""Misty wins""

print(trainer1.get_win_count())
# Expected Output: 0

print(trainer2.get_win_count())
# Expected Output: 1

print(pokemon1.get_power())
# Expected Output: 10

print(pokemon2.get_power())
# Expected Output: 12
# ============================== Battle 1: Round 1 Ends ==============================

# ============================== Battle 1: Round 2 Starts ==============================
pokemon1.upgrade()

print(battle1.fight(pokemon1, pokemon2))
# Expected Output: ""Ash wins""

print(trainer1.get_win_count())
# Expected Output: 1

print(trainer2.get_win_count())
# Expected Output: 1

print(pokemon1.get_power())
# Expected Output: 20

print(pokemon2.get_power())
# Expected Output: 12
# ============================== Battle 1: Round 2 Ends ==============================

# ============================== Battle 1: Round 3 Starts ==============================
pokemon2.upgrade()
print(battle1.fight(pokemon2, pokemon1))
# Expected Output: ""Pokemon not found in trainer's pokemon list""
# ============================== Battle 1: Round 3 Ends ==============================


# ============================== Battle 2: Round 1 Starts ==============================
trainer3 = Trainer(""T3"", ""Brock"")
pokemon3 = Pokemon(""P3"", ""Onix"", 1)

trainer3.add_pokemon(pokemon3)

battle2 = Battle(trainer1, trainer3)
# Expected Output: ""Trainers are not in close proximity level.""
# None
print(battle2.fight(pokemon1, pokemon3))
# No output.

print(trainer1.get_win_count())
# Expected Output: 1

print(trainer3.get_win_count())
# Expected Output: 0
# ============================== Battle 2: Round 1 Ends =============================="
8F6e0bb0,amqplace,x4163,JSON,Friday 21st of July 2023 11:31:53 AM CDT,"{
  ""contact"": """",
  ""templates"": [
    {
      ""name"": ""AMQ Place"",
      ""sources"": [
        ""https://cdn.discordapp.com/attachments/1131523808155672620/1131981267295023274/amq.png""
      ],
      ""x"": 1011,
      ""y"": 131
    }
  ],
  ""whitelist"": [],
  ""blacklist"": []
}"
SWaAT7ht,FFMPEG Create Robot Voice,metalx1000,Bash,Friday 21st of July 2023 11:12:22 AM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2023  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

#Creates a Robot Voice from Audio File

[[ $1 ]] && audio=""$*"" || audio=$(fzf --prompt=""Select an Audio File: "")
[[ $audio ]] || exit

tmp_file_1=""robotvoice_tmp_01.ogg""
tmp_file_2=""robotvoice_tmp_02.ogg""
pitch_01=""0.9""
pitch_02=""1.2""

#Create a lower and higher pitch copy of voice
ffmpeg -i ""$audio"" -af ""asetrate=44100*$pitch_01,aresample=44100,atempo=1/$pitch_01"" $tmp_file_1 
ffmpeg -i ""$audio"" -af ""asetrate=44100*$pitch_02,aresample=44100,atempo=1/$pitch_02"" $tmp_file_2

#merge all 3 together
ffmpeg -i ""$audio"" -i $tmp_file_1 -i $tmp_file_2 -filter_complex ""[0:a][1:a][2:a]amix=3[a]"" -ac 2 -map ""[a]""  ""voice_$audio""

rm ""$tmp_file_1"" ""$tmp_file_2""
mpv ""voice_$audio""
"
xcvRcUdw,turtle_racer,dragnscalearmor,Python,Friday 21st of July 2023 10:43:29 AM CDT,"from turtle import Turtle, Screen
import turtle
import random

# Initialize screen
screen = Screen()
screen.setup(width=500, height=400)  # size of the window
screen.bgpic(""swamp.png"")  # background image for the window

# Create a dedicated turtle for text display
text_turtle = Turtle()
text_turtle.hideturtle()
text_turtle.penup()
text_turtle.goto(x=-220, y=180)


def print_message(msg: str) -> None:
    """"""
    Clear the previous text and writes a new message on the screen.
    :param msg: The message to be displayed.
    """"""
    text_turtle.clear()  # Clear the previous text
    text_turtle.write(msg)


def popup_message(title: str, message: str) -> str:
    """"""
    Displays a popup message on the screen and returns the user input.
    :param title: The title of the message box.
    :param message: The message to be displayed.
    :return: The user input as a string.
    """"""
    prompt = screen.textinput(title=title, prompt=message)
    return prompt


def get_bet() -> str:
    """"""
    Prompts the user to make a bet and returns the user input.
    :return: The user's bet as a string.
    """"""
    user_bet = popup_message(""Make your bet"", ""Pick a color to bet on (none to exit): "")
    return user_bet


def starting_line() -> list:
    """"""
    Creates six turtles with different colors and positions them at the starting line.
    :return: A list containing the created turtle objects.
    """"""
    all_turtles = []
    for turtle_index in range(0, 6):
        new_turtle = Turtle(shape=""turtle"")
        new_turtle.color(colors[turtle_index])
        new_turtle.penup()
        new_turtle.goto(x=-230, y=y_positions[turtle_index])
        all_turtles.append(new_turtle)
    return all_turtles


def start_race(user_bet: str, all_turtles: list) -> None:
    """"""
    Starts the turtle race. The race continues until a turtle reaches the finish line (x coordinate > 220).
    After the race, the result is displayed and the turtles are removed from the screen.
    :param user_bet: The color that the user bet on.
    :param all_turtles: A list containing the turtle objects.
    """"""
    is_race_on = True
    while is_race_on:
        for turtle_racer in all_turtles:
            if turtle_racer.xcor() > 220:
                is_race_on = False
                winning_color = turtle_racer.pencolor()
                if winning_color == user_bet:
                    print_message(f""Your {winning_color} turtle has won the race!"")
                else:
                    print_message(f""The {winning_color} has won. Your {user_bet} turtle has lost."")
            rand_distance = random.randint(0, 10)
            turtle_racer.forward(rand_distance)

    # After the race, remove the turtles from the screen
    for turtle_racer in all_turtles:
        turtle_racer.penup()
        turtle_racer.reset()
        turtle_racer.clear()


def exit_app() -> None:
    """"""
    Exits the application by closing the window.
    """"""
    turtle.bye()


# Define colors and positions
colors = [""red"", ""orange"", ""purple"", ""green"", ""blue"", ""yellow""]
y_positions = [-70, -40, -10, 20, 50, 80]

while True:
    """"""
    The main game loop.
    """"""
    user_bet = get_bet()
    if user_bet.lower() == ""none"" or user_bet == """":
        exit_app()
    print_message("" "" * 220)
    all_turtles = starting_line()
    start_race(user_bet, all_turtles)
    all_turtles.clear()  # Clear the list after the race
"
v6UECPkY,Untitled,matteoipratico,JSON,Friday 21st of July 2023 10:22:11 AM CDT,"[[{""isValidated"":false,""tableId"":""table:1fd448b5-7811-42c8-83e9-2554d2e6edb0"",""channels"":[""lct_9256""],""lastPrebillNumber"":0,""printerSetupId"":""printer_setup:45f508d0-0e4e-4107-8c73-f0304c8dee77"",""version"":""2D302168-B27F-45F6-9314-4482EA4C64F4"",""type"":""order"",""sentDate"":""2023-07-21T15:18:35Z"",""deletedOrderItems"":[],""_id"":""order:269222BB-03D5-4A11-BBA4-26F6678E1374"",""seen"":true,""sentNumber"":1,""orderItemsId"":[""order_item:3FAEF5FA-B69F-4FEB-9812-F9326EED53EA""],""hasBeenPrinted"":false,""log"":{""shared"":false,""modifiedBy"":""Tecnico"",""createdDate"":""2023-07-21T15:17:40Z"",""modifiedDate"":""2023-07-21T15:18:35Z"",""responsibleDevice"":""7bba7db0-27d9-11ee-aab7-2b4d1abcc285"",""createdBy"":""Tecnico"",""application"":""eat""},""sequence"":42164,""hasBeenPrintedPreBill"":false},{""masterIP"":""192.168.0.223"",""unit"":""kg"",""dateGo"":""2023-07-21T15:18:35Z"",""isFromProGlove"":false,""sendMember"":""Tecnico"",""saleTypeId"":""sale_type:table-service"",""channels"":[""lct_9256""],""quantity"":1,""course"":0,""isFromNumpad"":false,""mutated"":false,""version"":""2D302168-B27F-45F6-9314-4482EA4C64F4"",""itemType"":""product"",""sortNumber"":0,""orderItemName"":""Cappuccinoz"",""saleItem"":{""vatRecordCategoryId"":""vat_record_category:c085b868-a892-4a11-be8f-dad8281dfab8"",""productId"":""product:a58e4bb0-b37d-46f7-b1c4-f08430bf271e""},""actionsDetail"":[],""order"":""order:269222BB-03D5-4A11-BBA4-26F6678E1374"",""isFromBill"":false,""priceListId"":""price_list:2073cbd7-c134-4c60-8db6-2d1e448f3eea"",""log"":{""shared"":false,""modifiedBy"":""Tecnico"",""createdDate"":""2023-07-21T15:18:33Z"",""modifiedDate"":""2023-07-21T15:18:33Z"",""responsibleDevice"":""7bba7db0-27d9-11ee-aab7-2b4d1abcc285"",""createdBy"":""Tecnico"",""application"":""eat""},""sequence"":42163,""printerAction"":""printSend"",""dateSend"":""2023-07-21T15:18:35Z"",""_id"":""order_item:3FAEF5FA-B69F-4FEB-9812-F9326EED53EA"",""computedUnitaryPrice"":7.7999999999999998,""type"":""order_item"",""isSubtotal"":false,""isValidated"":false},{""numberOfGuests"":0,""isValidated"":false,""channels"":[""lct_9256""],""tablePhysicalInfos"":{""length"":80,""rotation"":0,""positionX"":1629.5753,""squared"":true,""width"":80,""chairsPosition"":""[{\""rotation\"":1.5707963705062866,\""positionY\"":40,\""number\"":0,\""isEnable\"":true,\""positionX\"":0},{\""rotation\"":0,\""positionY\"":80,\""number\"":1,\""isEnable\"":true,\""positionX\"":40},{\""rotation\"":-1.5707963705062866,\""positionY\"":40,\""number\"":2,\""isEnable\"":true,\""positionX\"":80},{\""rotation\"":3.1415925025939941,\""positionY\"":0,\""number\"":3,\""isEnable\"":true,\""positionX\"":40}]"",""positionY"":1351.5373999999999},""isCurrentlyOpenedInPayment"":false,""lastTableModificationMadeBy"":""Tecnico"",""currentSittings"":0,""version"":""2D302168-B27F-45F6-9314-4482EA4C64F4"",""log"":{""shared"":false,""modifiedBy"":""Tecnico"",""createdDate"":""2023-03-13T11:47:01Z"",""modifiedDate"":""2023-07-21T15:18:35Z"",""responsibleDevice"":""7bba7db0-27d9-11ee-aab7-2b4d1abcc285"",""createdBy"":""IMPORT-XLSX"",""application"":""eat""},""isCurrentlyOpenedInTakeOrder"":false,""sequence"":42165,""openDate"":""2023-07-21T15:17:39Z"",""status"":""TAKEN"",""name"":""Tavolo Giada 2"",""orderId"":""order:269222BB-03D5-4A11-BBA4-26F6678E1374"",""floorId"":""floor:7DBD7507-C0EE-4140-B9A3-7DFDD3CCEAEA"",""type"":""table"",""maxSittings"":0,""orderHistory"":[""order:FE013A53-009E-4319-915D-B010A5DE01FA"",""order:69B0B9A2-A64D-4BA6-B0A1-96C0A3FD0ECE"",""order:EF9A041C-EC4D-4867-9997-1E713C46D845"",""order:AD63847F-82FB-4511-8F5F-DB96A88E28CF"",""order:AA71F645-4FC8-49DF-8B0E-5C61C69AA4D9"",""order:E1EF563C-E203-40FD-A6A6-14E327F04393"",""order:58B1E1E2-A0A8-4556-9539-5A1F2903D494"",""order:A89F4814-7492-470B-8184-AA67A7E08165"",""order:45CD365D-0CE5-49B0-83B1-D6BE0555DAE1"",""order:68D8C462-F58F-439D-8CAD-24A7D7246499"",""order:A100CE10-E6FE-4804-B5AC-0A8BA43CA559"",""order:B62F3031-5740-4698-B3B0-F55D4DACAC3A"",""order:93829AD3-6FCF-450D-B353-2CDB63BE6470"",""order:B4A41DCB-679F-4442-9783-B80071A04DCC"",""order:976BFC58-4F14-457C-A61B-97BAAB28222F"",""order:9C459A08-B6FB-4A91-9344-7577CF0EB51F"",""order:381478D7-5135-4453-9EB4-617CF29505F3"",""order:74908692-FF79-4D74-A33E-8EFA841C9E37"",""order:AAFBB4CC-2B2C-42CA-AEF4-CFA34B88ADBD"",""order:3B78B80D-0F37-4383-9198-C5EEBE756BDE"",""order:2CD59D1D-6A03-4F33-8C07-DB19DB330351"",""order:51B432F4-B018-4F2D-8F6C-3A73BA7B807A"",""order:C9F9C083-F2DE-4CAD-BF8C-248D87D070FA"",""order:BB936CF2-753B-4EA5-8D86-16992A36E3EF"",""order:6F694140-9952-4509-9240-A66227E17B0E""],""roomId"":""room:2e939f68-ce76-46ca-8a93-27dcf84f7ca1"",""_id"":""table:1fd448b5-7811-42c8-83e9-2554d2e6edb0"",""responsibleMember"":""business_member:tecnico-ipratico"",""serviceChargeId"":""service_charge:2affa4b2-e9ff-4b0d-9646-a30c6e571a09"",""responsibleDevice"":""iPad|1E6D00E2-4FE9-4694-86A8-E8C2F3EF44B5|192.168.0.223|client""},{""type"":""syncCommand"",""command"":0}]]"
PqFRNwhF,Untitled,xilc,Python,Friday 21st of July 2023 10:09:08 AM CDT,"##### Setup API ######
print(""Authenticating API... "",end="""")
api = KaggleApi()
api.authenticate()
print(""API authenticated successfully!"")

def unzip_file(filename):
    with zipfile.ZipFile(filename, 'r') as zipref: zipref.extractall()  # extracts the file specified

##### Dowload the file needed ######


api.competition_download_file('sentiment-analysis-on-movie-reviews', # download the csv file
                              'train.tsv.zip')

unzip_file('train.tsv.zip')                                          # unzip the file



##### Read file into Pandas Dataframe ######

desired_width = 500                               # set width of dataframe printout
pd.set_option('display.max_columns',10)            # set number of cols that will print
pd.set_option('display.width', desired_width)

df = pd.read_table('train.tsv')                   # read data into a dataframe
print(df.head(30))




##### Export data to BQ #####
# function to create dataset in BQ

def bq_create_dataset(client, dataset):
    dataset_ref = bigquery.DatasetReference(client.project, dataset)

    try:
        dataset = client.get_dataset(dataset_ref)
        print('Dataset {} already exists.'.format(dataset.dataset_id))
    except NotFound:
        dataset = bigquery.Dataset(dataset_ref)
        dataset.location = 'US'  # set location of dataset (optional)
        dataset = client.create_dataset(dataset)
        print('Dataset {} created.'.format(dataset.dataset_id))
    return dataset


# Function to create a Table in dataset

def bq_create_table(client, dataset, table_name):
    dataset_ref = bigquery_client.dataset(dataset)

    # Prepares a reference to the table
    table_ref = dataset_ref.table(table_name)

    try:
        table = client.get_table(table_ref)
        print('table {} already exists.'.format(table))
    except NotFound:
        schema = [
            bigquery.SchemaField('S_No', 'INTEGER', mode='REQUIRED'),
            bigquery.SchemaField('Age_in_cm', 'INTEGER', mode='REQUIRED'),
            bigquery.SchemaField('Weight_in_Kg', 'INTEGER', mode='REQUIRED'),
            bigquery.SchemaField('Name', 'STRING', mode='REQUIRED'),
        ]
        table = bigquery.Table(table_ref, schema=schema)
        table = client.create_table(table)
        print('table {} created.'.format(table.table_id))
    return table


#Function to export data into table in Bigquery

def export_items_to_bigquery(client, dataset, table):

    # Prepares a reference to the dataset
    dataset_ref = bigquery_client.dataset(dataset)

    table_ref = dataset_ref.table(table)
    table = bigquery_client.get_table(table_ref)  # API call

    rows_to_insert = [
        (1, 32, 32, ""Harry""),
        (2, 64, 29, ""Ron""),
        (3, 108, 108, ""Hermonie"")
    ]
    errors = bigquery_client.insert_rows(table, rows_to_insert)  # API request
    assert errors == []


if __name__ == ""__main__"":
    #creating bigquery object
    bigquery_client = bigquery.Client()
    dataset_name = ""demo_dataset""    # Here is where you provide a new dataset's name, if you intend to create a new one
    table_name = ""demo_table""   # Here is where you provide a new table's name, if you intend to create a new one
    data = bq_create_dataset(bigquery_client, dataset_name)
    table = bq_create_table(bigquery_client, dataset_name, table_name)
    export_items_to_bigquery(bigquery_client, dataset_name, table_name) "
DpbguFKN,Untitled,KanstantsinS,JavaScript,Friday 21st of July 2023 10:07:08 AM CDT,"function scriptAction(obj) {
  var clipboard = jslib.getClipboard();
  var arr = clipboard.split('\n');
  for (var k in arr) {
       var text = arr[k];
//       jslib.log(text);
       if (text.indexOf('== ') == 0) { // == Начало секции
       	text = text.substring(3);
       	jslib.log('Заголовок:'+ text);
       	addOneItem({items:[{ type: 'title', name: text }]});
       } else 
       if (text.indexOf(':') > 0) { // В строке есть двоеточие - вероятно это стих из Библии
	       addOneItem({ items: [ { type: 'verse', references: text }]});

       } else {
       	var obj = h.hly('SearchLyrics', {text: text});
	var songs = [((obj.data != null) && (obj.data.length > 0)) ? obj.data[0].id : 0];
    
   	if (songs[0] == 0) {
		jslib.log('Song not found: ' + text); 
	} else {
		for (var i = 0; i < songs.length; i++) {
			addOneItem({items:[{ type: 'song', id: songs[i] }]});
		}
	}
	}
     }     
}
	
function addOneItem(data) {
 var r = h.hly('AddToPlaylist', data);
 if (r.status != 'ok') {
   jslib.log(r.error);
   jslib.log(r.data)
 }
}"
HDimcHzu,properties & inheritance,cunly,JSON,Friday 21st of July 2023 10:06:57 AM CDT,"{
  ""Instance"": {
    ""Properties"": [""Archivable"", ""ClassName"", ""Name"", ""Parent"", ""PropertyStatusStudio""],
    ""Inherits"": null
  },

  ""GuiBase2d"": {
    ""Properties"": [""AbsolutePosition"", ""AbsoluteRotation"", ""AbsoluteSize"", ""AutoLocalize"", ""RootLocalizationTable""],
    ""Inherits"": [""Instance""]
  },
  ""GuiObject"": {
    ""Properties"":  [""Active"", ""AnchorPoint"", ""AutomaticSize"", ""BackgroundColor3"", ""BackgroundTransparency"", ""BorderColor3"", ""BorderMode"", ""BorderSizePixel"", ""ClipsDescendants"", ""LayoutOrder"", ""NextSelectionDown"", ""NextSelectionLeft"", ""NextSelectionRight"", ""NextSelectionUp"", ""Position"", ""Rotation"", ""Selectable"", ""SelectionImageObject"", ""Size"", ""SizeConstraint"", ""Visible"", ""ZIndex""],
    ""Inherits"": [""GuiBase2d"", ""Instance""]
  },
  ""GuiButton"": {
    ""Properties"": [""AutoButtonColor"", ""Modal"", ""Selected"", ""Style""],
    ""Inherits"": [""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""LayerCollector"": {
      ""Properties"": [""Enabled"", ""ResetOnSpawn"", ""ZIndexBehavior""],
      ""Inherits"": [""GuiBase2d"", ""Instance""]
  },

 
  ""ScreenGui"": {
      ""Properties"": [""DisplayOrder"", ""IgnoreGuiInset""],
      ""Inherits"": [""LayerCollector"", ""GuiBase2d"", ""Instance""]
  },
  ""Frame"": {
    ""Properties"": [""Style""],
    ""Inherits"": [""GuiObject"", ""GuiBase2d"", ""Instance""]
  },
  ""TextLabel"": {
    ""Properties"": [""ContentText"", ""Font"", ""FontFace"", ""LineHeight"", ""MaxVisibleGraphemes"", ""RichText"", ""Text"", ""TextBounds"", ""TextColor3"", ""TextFits"", ""TextScaled"", ""TextSize"", ""TextStrokeColor3"", ""TextStrokeTransparency"", ""TextTransparency"", ""TextTruncate"", ""TextWrapped"", ""TextXAlignment"", ""TextYAlignment""],
    ""Inherits"": [""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""TextButton"": {
    ""Properties"": [""ContentText"", ""Font"", ""FontFace"", ""LineHeight"", ""MaxVisibleGraphemes"", ""RichText"", ""Text"", ""TextBounds"", ""TextColor3"", ""TextFits"", ""TextScaled"", ""TextSize"", ""TextStrokeColor3"", ""TextStrokeTransparency"", ""TextTransparency"", ""TextTruncate"", ""TextWrapped"", ""TextXAlignment"", ""TextYAlignment""],
    ""Inherits"": [""GuiButton"", ""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""TextBox"": {
    ""Properties"": [""ClearTextOnFocus"", ""ContentText"", ""CursorPosition"", ""Font"", ""FontFace"", ""LineHeight"", ""MaxVisibleGraphemes"", ""MultiLine"", ""PlaceholderColor3"", ""PlaceholderText"", ""RichText"", ""SelectionStart"", ""ShowNativeInput"", ""Text"", ""TextBounds"", ""TextColor3"", ""TextEditable"", ""TextFits"", ""TextScaled"", ""TextSize"", ""TextStrokeColor3"", ""TextStrokeTransparency"", ""TextTransparency"", ""TextTruncate"", ""TextWrapped"", ""TextXAlignment"", ""TextYAlignment""],
    ""Inherits"": [""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""ImageLabel"": {
    ""Properties"": [""Image"", ""ImageColor3"", ""ImageRectOffset"", ""ImageRectSize"", ""ImageTransparency"", ""IsLoaded"", ""ResampleMode"", ""ScaleType"", ""SliceCenter"", ""SliceScale"", ""TileSize""],
    ""Inherits"": [""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""ImageButton"": {
    ""Properties"": [""HoverImage"", ""Image"", ""ImageColor3"", ""ImageRectOffset"", ""ImageRectSize"", ""ImageTransparency"", ""IsLoaded"", ""PressedImage"", ""ResampleMode"", ""ScaleType"", ""SliceCenter"", ""SliceScale"", ""TileSize""],
    ""Inherits"": [""GuiButton"", ""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""ScrollingFrame"": {
    ""Properties"": [""AbsoluteCanvasSize"", ""AbsoluteWindowSize"", ""AutomaticCanvasSize"", ""BottomImage"", ""CanvasPosition"", ""CanvasSize"", ""ElasticBehavior"", ""HorizontalScrollBarInset"", ""MidImage"", ""ScrollBarImageColor3"", ""ScrollBarImageTransparency"", ""ScrollBarThickness"", ""ScrollingDirection"", ""ScrollingEnabled"", ""TopImage"", ""VerticalScrollBarInset"", ""VerticalScrollBarPosition""],
    ""Inherits"": [""GuiObject"", ""GuiBase2d"", ""Instance""]
  },
  ""ViewportFrame"": {
    ""Properties"": [""Ambient"", ""CurrentCamera"", ""ImageColor3"", ""ImageTransparency"", ""LightColor"", ""LightDirection""],
    ""Inherits"": [""GuiBase2d"", ""GuiObject"", ""Instance""]
  },
  ""UIGridStyleLayout"": {
    ""Properties"": [""AbsoluteContentSize"", ""FillDirection"", ""HorizontalAlignment"", ""SortOrder"", ""VerticalAlignment""],
    ""Inherits"": [""Instance""]
  },
  ""UIListLayout"": {
    ""Properties"": [""Padding""],
    ""Inherits"": [""UIGridStyleLayout"", ""Instance""]
  },
  ""UIGridLayout"": {
    ""Properties"": [""AbsoluteCellCount"", ""AbsoluteCellSize"", ""CellPadding"", ""CellSize"", ""FillDirectionMaxCells"", ""StartCorner""],
    ""Inherits"": [""UIGridStyleLayout"", ""Instance""]
  },
  ""UIPageLayout"": {
    ""Properties"": [""Animated"", ""Circular"", ""CurrentPage"", ""EasingDirection"", ""EasingStyle"", ""GamepadInputEnabled"", ""Padding"", ""ScrollWheelInputEnabled"", ""TouchInputEnabled"", ""TweenTime""],
    ""Inherits"": [""UIGridStyleLayout"", ""Instance""]
  },
  ""UIAspectRatioConstraint"": {
    ""Properties"": [""AspectRatio"", ""AspectType"", ""DominantAxis""],
    ""Inherits"": [""Instance""]
  },
  ""UIPadding"": {
    ""Properties"": [""PaddingBottom"", ""PaddingLeft"", ""PaddingRight"", ""PaddingTop""],
    ""Inherits"": [""Instance""]
  },
  ""UIScale"": {
    ""Properties"": [""Scale""],
    ""Inherits"": [""Instance""]
  }
}"
W7hm5Raw,can't go over 40 iter,kopyl,Python,Friday 21st of July 2023 09:57:35 AM CDT,"2023-07-21 14:54:32,235 [INFO] Saving checkpoint at iters 40 to /workspace/LAVIS/train_output/20230721145/checkpoint_40.pth.
Traceback (most recent call last):
  File ""/workspace/LAVIS/train.py"", line 112, in <module>
    main()
  File ""/workspace/LAVIS/train.py"", line 107, in main
    runner.train()
  File ""/workspace/LAVIS/lavis/runners/runner_iter.py"", line 132, in train
    dist.barrier()
  File ""/usr/local/lib/python3.10/dist-packages/torch/distributed/distributed_c10d.py"", line 3327, in barrier
    default_pg = _get_default_group()
  File ""/usr/local/lib/python3.10/dist-packages/torch/distributed/distributed_c10d.py"", line 707, in _get_default_group
    raise RuntimeError(
RuntimeError: Default process group has not been initialized, please make sure to call init_process_group.
Selection deleted
"
90U3cDQZ,forward(),kopyl,Python,Friday 21st of July 2023 09:30:44 AM CDT,"def forward(self, samples):
        latents = self.vae.encode(samples[""tgt_image""].half()).latent_dist.sample()
        latents = latents * 0.18215

        # Sample noise that we'll add to the latents
        noise = torch.randn_like(latents)
        bsz = latents.shape[0]
        # Sample a random timestep for each image
        timesteps = torch.randint(
            0,
            self.noise_scheduler.config.num_train_timesteps,
            (bsz,),
            device=latents.device,
        )
        timesteps = timesteps.long()

        # Add noise to the latents according to the noise magnitude at each timestep
        # (this is the forward diffusion process)
        noisy_latents = self.noise_scheduler.add_noise(latents, noise, timesteps)
        ctx_embeddings = self.forward_ctx_embeddings(
            input_image=samples[""inp_image""], text_input=samples[""subject_text""]
        )

        # Get the text embedding for conditioning
        input_ids = self.tokenizer(
            samples[""caption""],
            padding=""do_not_pad"",
            truncation=True,
            max_length=self.tokenizer.model_max_length,
            return_tensors=""pt"",
        ).input_ids.to(self.device)
        encoder_hidden_states = self.text_encoder(
            input_ids=input_ids,
            ctx_embeddings=ctx_embeddings,
            ctx_begin_pos=[self._CTX_BEGIN_POS] * input_ids.shape[0],
        )[0]

        # Predict the noise residual
        noise_pred = self.unet(
            noisy_latents.float(), timesteps, encoder_hidden_states
        ).sample

        loss = F.mse_loss(noise_pred.float(), noise.float(), reduction=""mean"")

        return {""loss"": loss}"
H5ph3Ts7,邀您一起看：26. 唯一无副作用禁用Win10/11更新方法，一键暂停1000周,xiaomianao666,JavaScript,Friday 21st of July 2023 09:14:20 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥26. 唯一无副作用禁用Win10/11更新方法，一键暂停1000周@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5ZC+54ix56C06Kej8J2UpVwiLFwidmVyc2lvblwiOjAsXCJ1cmxcIjpcImhpa2VyOi8vZW1wdHlcIixcImNvbF90eXBlXCI6XCJ4NV93ZWJ2aWV3X3NpbmdsZVwiLFwiZmluZF9ydWxlXCI6XCJqczpzZXRSZXN1bHQoW3tcXG4gICAgdXJsOlxcXCJodHRwczovL3d3dy41MnBvamllLmNuL3RocmVhZC0xODA5MTIyLTEtMS5odG1sXFxcIixcXG5kZXNjOlxcXCIxMDAlJiZmbG9hdFxcXCIsXFxuZXh0cmE6e2NhbkJhY2s6IHRydWV9XFxufV0pO1wiLFwiZ3JvdXBcIjpcIuKRoOaOqOiNkFwiLFwicGFnZXNcIjpcIltdXCJ9IiwidGl0bGUiOiIyNi4g5ZSv5LiA5peg5Ymv5L2c55So56aB55SoV2luMTAvMTHmm7TmlrDmlrnms5XvvIzkuIDplK7mmoLlgZwxMDAw5ZGoIn0=
DJzY5JrC,Untitled,Andro_05,Lua,Friday 21st of July 2023 09:10:54 AM CDT,"function setvalue(address,flags,value) local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end 
so = gg.getRangesList('libgame.so')[1].start


local menu = gg.multiChoice({
  'Unlimited Coin',
  'Unlimited Diamond',
})
if menu == nil then return end

if menu[1] then
  py=0x51F164
  setvalue(so+py, 4, 9999999999) 
  gg.toast('Done.')
end

if menu[2] then
py=0x51F210
setvalue(so+py, 4, 9999999999) 
gg.toast('Done.')
end
"
HJmKukQq,"auction start Starts Sunday, 30 July",wpgenie,PHP,Friday 21st of July 2023 08:52:26 AM CDT,"/* custom show countdown timer in loop, future auctions have Starts Sunday, 30 July instead of countdown timer */

add_action( 'woocommerce_after_shop_loop_item_title','wpgenie_show_counter_in_loop',50 );

function wpgenie_show_counter_in_loop() {
	global $product;

	$time = '';
	$future_class = '';

	if ( ! isset( $product ) ) {
		return;
	}
	if ( 'auction' !== $product->get_type() ) {
		return;
	}

	$timetext = esc_html__( 'Time left', 'wc_simple_auctions' );

	if ( ! $product->is_started() ) {
		// $timetext     = esc_html__( 'Starting in', 'wc_simple_auctions' );
		// $counter_time = $product->get_seconds_to_auction();

		$future_class = ( $product->is_closed() === false ) && ( $product->is_started() === false ) ? 'future' : '';

		echo apply_filters( 'time_text', esc_html__( 'Starts', 'wc_simple_auctions' ), $product->get_id() ). ' ';
	
		echo date_i18n( 'l, j F', strtotime( $product->get_auction_start_time() ) ).'<br><br>'; 
	
		echo $time;

	} else {
		$counter_time = $product->get_seconds_remaining();

		$time = '<span class=""time-left "">' . $timetext . '</span>
		<div class=""auction-time-countdown ' . $future_class . '""
		data-time=""' . esc_attr( $counter_time ) . '""
		data-auctionid=""' . intval( $product->get_id() ) . '"" data-format=""' . esc_attr( get_option( 'simple_auctions_countdown_format' ) ) . '""></div>';

		if ( $product->is_closed() ) {
			$time = '<span class=""has-finished"">' . __( 'Auction finished', 'wc_simple_auctions' ) . '</span>';
		}

		echo $time;

	}
	

	
}"
La8Dy7xt,Untitled,Larme,Swift,Friday 21st of July 2023 08:44:01 AM CDT,"func timingDicts() {
    let keyTimeValues: [TimeInterval: Float] = [
        0.4: 0.0,
        0.45: 1.0,
        0.475: 1.0,
        0.5: 1.0,
        0.525: 1.0,
        0.55: 0.0,
        0.575: 1.0,
        0.6: 1.0,
        0.65: 1.0,
        0.7: 0.0
    ]

    /// The challenge:
    /// The keys represent animation key times, the values represent values. Some key times repeat the same value of the previous keytime.
    /// How would you reduce the above dictionary in such way that the values do not repeat themselves
    /// more than once?
    /// For example, this group:
    ///     0.45: 1.0,
    ///     0.475: 1.0,
    ///     0.5: 1.0,
    ///     0.525: 1.0,
    ///
    /// The keytime 0.475 and 0.5 don't change the value and are, therefore, redundant in key frame animations.
    ///
    /// Expected outcome:
    let expectedOutcome: [TimeInterval: Float] = [
        0.4: 0.0,
        0.45: 1.0,
        0.525: 1.0,
        0.55: 0.0,
        0.575: 1.0,
        0.65: 1.0,
        0.7: 0.0
    ]
    
    //I don't like the triple ""iterations"":
    //          - sorted on keys
    //          - `reduce(into:_:)`
    //          - reconstruct the Dictionary, with `reduce(into:_:)` or `Dictionary(uniqueKeysWithValues:)`
    // But I guess it's better for comparison than retrieve each time what is the ""previous value"", and before that one at each iteration
    
    let outputTupled = keyTimeValues.sorted { $0.key < $1.key }
                        .reduce(into: [(TimeInterval, Float)]()) { partialResult, current in
        guard partialResult.count > 1 else {
            partialResult.append(current)
            return
        }
        let previous = partialResult[partialResult.count - 1]
        let beforeLast = partialResult[partialResult.count - 2]
        if current.value == previous.1, previous.1 == beforeLast.1 {
            partialResult[partialResult.count - 1] = current
        } else {
            partialResult.append(current)
        }
    }
    
    let output = outputTupled.reduce(into: [TimeInterval: Float]()) { $0[$1.0] = $1.1 }
    
    printDict(dict: output)
    printDict(dict: expectedOutcome)
    print(output == expectedOutcome)
    
    let output2 = Dictionary(uniqueKeysWithValues: outputTupled) //Is there some optimization here, might be better than `reduce(into:_:)`
    printDict(dict: output2)
    printDict(dict: expectedOutcome)
    print(output2 == expectedOutcome)
    
    //To print in ""order"", easier to debug what went wrong, since the print doesn't guarantee the order if we want to compare
    func printDict(dict: [TimeInterval: Float]) {
        var printContent = Array(dict.keys).sorted { $0 < $1 }.map { ""\t\($0): \(dict[$0]!)"" }.joined(separator: "",\n"")
        print(""[\n\(printContent)\n]"")
    }
}

timingDicts()"
vBafkWUc,How to make a discord bot is aoi.js Part 1,Dreamer_1314,JavaScript,Friday 21st of July 2023 08:38:59 AM CDT,"index.js :
const { AoiClient, LoadCommands } = require(""aoi.js"")
const bot = new AoiClient({
  token: ""MTA4MjE5NTczMzU0Mjg4MzU5MQ.GjjyMc.96wsvqyudExo6TbuaK3_OwucgUeUwK_znU8V1o"",
  prefix: [
    `$getVar[Prefix]`,
    `<@$clientID>`
  ],
  events: [
    ""onMessage"",
    ""onInteractionCreate""
  ],
  intents: [
    ""Guilds"",
    ""GuildMessages"",
    ""MessageContent"",
    ""GuildMembers""
  ]
})
 
bot.variables(require(""./handler/variables.js""))
 
const loader = new LoadCommands(bot)
loader.load(bot.cmd, ""./Commands/"")
 
bot.readyCommands({
  channel: """",
  code: `$log[Ready as $userTag[$clientID]]`
})
 
variables.js inside handler folder :
module.exports = ({
  ""Prefix"": "".""
})"
jQW3JAJD,Book-Library,Nikkolaykata,JavaScript,Friday 21st of July 2023 08:28:13 AM CDT,"function bookLibrary() {
    const url = ""http://localhost:3030/jsonstore/collections/books/""

    const tBody = document.querySelector(""body > table > tbody"");
    //const tr = document.querySelectorAll(""body > table > tbody > tr"");


    const loadBtn = document.getElementById(""loadBooks"").addEventListener(""click"", getBooks);
    const editBtn = document.querySelectorAll(""tr button"");

    async function getBooks() {

        const res = await createRequest(url, ""get"");
        const data = await res.json();

        tBody.replaceChildren();
        Array.from(Object.entries(data)).forEach(el => {
            const idBook = el[0];
            const authorBook = el[1].author;
            const titleBook = el[1].title;

            onAppend(authorBook, titleBook, idBook);
        });
        const form = document.querySelector(""body > form > h3"");
        form.innerHTML = ""FORM""
    }

    async function updateBook(ev) {
        const currentRow = ev.target.parentElement.parentElement;
        const current = await createRequest(`${url}${currentRow.id}`, ""get"");
        const currentData = await current.json();

        //const formData = new FormData(document.querySelector(""body > form""));
        //const objEntries = Object.fromEntries(formData);
        const form = document.querySelector(""body > form > h3"");
        const ttl = document.querySelector(""body > form > input[type=text]:nth-child(3)"");
        const athr = document.querySelector(""body > form > input[type=text]:nth-child(5)"");

        form.innerHTML = ""Edit FORM""
        ttl.value = currentData.title;
        athr.value = currentData.author
        console.log(ttl)
        console.log(athr)
    }




    async function deleteBook(ev) {
        const currentRow = ev.target.parentElement.parentElement;
        await createRequest(`${url}${currentRow.id}`, ""delete"");
        currentRow.remove();
    }

    function createRequest(url, method, body) {
        let myRequest;
        if (body) {
            myRequest = fetch(url, {
                method: method,
                headers: { ""Content-Type"": ""application/json"" },
                body: JSON.stringify(body)
            });
        } else {
            myRequest = fetch(url, { method: method });
        }
        return myRequest;
    }

    function onAppend(author, title, id) {
        // Table Row
        const tr = document.createElement(""tr"");
        tr.setAttribute(""id"", id);
        tBody.appendChild(tr);
        // Table Data
        const tdAuthor = document.createElement(""td"");
        tdAuthor.textContent = author;
        tr.appendChild(tdAuthor);
        const tdTitle = document.createElement(""td"");
        tdTitle.textContent = title;
        tr.appendChild(tdTitle);
        // Button
        const tdBtn = document.createElement(""td"");
        tr.appendChild(tdBtn);
        // EDIT
        const editBtn = document.createElement(""button"");
        editBtn.textContent = ""Edit"";
        editBtn.addEventListener(""click"", updateBook);
        tdBtn.appendChild(editBtn);
        // DELETE
        const deleteBtn = document.createElement(""button"");
        deleteBtn.textContent = ""Delete"";
        deleteBtn.addEventListener(""click"", deleteBook);
        tdBtn.appendChild(deleteBtn);
    }
}

bookLibrary();"
9k09isfs,udemy,hicham_26,JSON,Friday 21st of July 2023 08:08:14 AM CDT,"[{'title': 'Modern JavaScript From The Beginning 2.0 - 2023 Revamp', 'instructional_level': 'All Levels', 'created': '2017-12-08T20:33:44Z', 'objectives_summary': ['Learn the Fundamentals (Variables, Loops, Functions, etc)', 'Learn How JavaScript Works (Execution Context, Call Stack, Async JS)', 'Master the Document Object Model & Events (Interactivity)'], 'content_info': '36.5 total hours', 'learning_obj': 'Learn the Fundamentals (Variables, Loops, Functions, etc)\nLearn How JavaScript Works (Execution Context, Call Stack, Async JS)\nMaster the Document Object Model & Events (Interactivity)\nAsynchronous JavaScript (Callbacks, Promises, Fetch, Ajax)\nOOP (Constructors, Prototypes, Classes)\nModern Tooling & Workflow (Webpack, Babel, File Structure, NPM, Plugins & Loaders)\nFull Stack Project With Webpack, Node, Express & MongoDB\n5 Real World Projects & 10+ Mini-Projects', 'course_includes': 'This course includes:\n36.5 hours on-demand video\n1 article\n48 downloadable resources\nAccess on mobile and TV\nFull lifetime access\nCertificate of completion', 'description': 'This is a 36+ hour in-depth course that will take you from the absolute beginning of JavaScript, learning about data types, functions and loops to learning DOM manipulation, asynchronous JS with promises, async/await and much more. You will even learn how to write unit tests for algorithms. We go into how JavaScript works under the hood including execution context, the call stack, event loop, etc. We learn about Webpack tooling and how to create a modern development environment. At the end, we build a Node.js/Express API with a custom Webpack frontend.\n\nAll of the code in the learning modules will go into a folder called ""JavaScript Sandbox"". This is so we can keep things organized and you can always refer back to it for any code snippets that you may need. All of the final and starter code for the projects is included as well as links to the GitHub Repos.\n\n\n\n\n\nShow more', 'requirements': '\nBasic HTML / CSS knowledge', 'content': [{'sections_title': 'Intro & Getting Started', 'sections_items': ['Welcome To The Course', 'Course Outline', 'What Is JavaScript?', 'Tools & Setup', 'Running JavaScript In The Browser', 'Course Links']}, {'sections_title': 'Variables, Data Types & More', 'sections_items': ['Section Intro', 'The Sandbox Files', 'Using The Console', 'Comments & Shortcuts', 'Variables & Constants', 'Data Types', 'Primitive vs Reference Types', 'Type Conversion', 'Operators', 'Type Coercion', 'Working With Strings', 'Capitalize Challenge', 'Working With Numbers', 'The Math Object', 'Number Challenge', 'Dates & Times', 'Date Methods & DateTimeFormat API']}, {'sections_title': 'Arrays & Objects', 'sections_items': ['Section Intro', 'Creating Arrays', 'Basic Array Methods', 'Nesting, Concat & Spread Operator', 'Array Challenge', 'Object Literals', 'Object Spread Operator & Methods', 'Destructuring & Naming', 'JSON Intro', 'Object Challenge']}, {'sections_title': 'Functions, Scope & Execution Context', 'sections_items': ['Section Intro', 'Function Basics', 'More on Params & Arguments', 'Global & Function Scope', 'Block Scope', 'Nested Scope', 'Declaration vs Expression', 'Arrow Functions', 'Immediately Invoked Function Expressions', 'Function Challenges', 'Execution Context', 'Execution Context In Action', 'The Call Stack']}, {'sections_title': 'Logic & Control Flow', 'sections_items': ['Section Intro', 'If Statements', 'If Else & Nesting', 'Switches', 'Calculator Challenge', 'Truthy & Falsy', 'Logical Operators', 'Logical Assignment', 'Ternary Operator']}, {'sections_title': 'Loops, Iteration & Array Methods', 'sections_items': ['Section Intro', 'For Loop', 'Break & Continue', 'While & Do While Loops', 'FizzBuzz Challenge', 'For Of Loop', 'For In Loop', 'Array.forEach', 'Array.filter', 'Array.map', 'Array.reduce', 'Array Method Challenges']}, {'sections_title': 'Document Object Model', 'sections_items': ['Section Intro', 'Intro To The DOM', 'Document Element Properties', 'DOM Selectors - Single Elements', 'DOM Selectors - Multiple Elements', 'Traversing The DOM - Elements', 'Traversing The DOM - Nodes', 'Create & Append Elements', 'InnerHTML vs createElement()', 'Refactor To Multiple Functions', 'Insert Elements, Text & HTML', 'Custom insertAfter Challenge', 'Replace Elements', 'Remove Elements', 'Working With Styles & Classes']}, {'sections_title': 'Events', 'sections_items': ['Section Intro', 'Event Listeners', 'Mouse Events', 'The Event Object', 'Keyboard Events & Key Properties', 'KeyCode Mini-Project', 'Input Events', 'Form Submission & FormData Object', 'Event Bubbling', 'Event Delegation & Multiple Elements', 'Page Loading & Window Events']}, {'sections_title': 'Shopping List Project', 'sections_items': ['Shopping List - Project Intro', 'Add Items To List', 'Setting Up Git & GitHub (Optional)', 'Remove & Clear Items', 'Clear UI State', 'Filter Items', 'Local Storage Crash Course', 'Add Item To Local Storage', 'Display Items From Local Storage', 'Remove Items From Local Storage', 'Set Item To Edit', 'Update & Reset State', 'Prevent Duplicate Items', 'Deploy To Netlify']}, {'sections_title': 'Asynchronous JavaScript', 'sections_items': ['Section Intro', 'Thread Of Execution', 'How Async JavaScript Works', 'setTimeout & clearTimeout', 'setInterval & clearInterval', 'Callbacks', 'HTTP Request Crash Course', 'DevTools Network Tab', 'AJAX & XHR Object', 'Joke Generator Project Challenge', 'Callback Hell', 'Promises', 'Callback To Promise Refactor', 'Promise Chaining', 'Promises vs Callback Hell', 'promise.all()']}]}, {'title': 'Learn and Understand NodeJS', 'instructional_level': 'All Levels', 'created': '2015-03-28T04:09:24Z', 'objectives_summary': ['Grasp how NodeJS works under the hood', 'Understand the Javascript and technical concepts behind NodeJS', 'Structure a Node application in modules'], 'content_info': '13 total hours', 'learning_obj': 'Grasp how NodeJS works under the hood\nUnderstand the Javascript and technical concepts behind NodeJS\nStructure a Node application in modules\nUnderstand and use the Event Emitter\nUnderstand Buffers, Streams, and Pipes\nBuild a Web Server in Node and understand how it really works\nUse npm and manage node packages\nBuild a web application and API more easily using Express\nConnect to a SQL or Mongo database in Node\nUnderstand how the MEAN stack works\nShow more', 'course_includes': 'This course includes:\n13 hours on-demand video\n4 articles\n53 downloadable resources\nAccess on mobile and TV\nFull lifetime access\nCertificate of completion', 'description': ""NodeJS is a rapidy growing web server technology, and Node developers are among the highest paid in the industry. Knowing NodeJS well will get you a job or improve your current one by enabling you to build high quality, robust web applications.\nIn this course you will gain a deep understanding of Node, learn how NodeJS works under the hood, and how that knowledge helps you avoid common pitfalls and drastically improve your ability to debug problems.\nIn this course we'll look at how the C++ written V8 Javascript engine works and how NodeJS uses it to expand the abilities of Javascript. You'll learn how to structure your code for reuse and to be easier to understand, manage, and expand using modules and understand how modules really work.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the . We'll see how that leads to .\nShow more"", 'requirements': '\nBasic Javascript knowledge (variables, loops, and basic functions)\nBasic HTML knowledge\nA text editor', 'content': [{'sections_title': 'Introduction and Setup', 'sections_items': ['Introduction and the Goal of this Course', 'Big Words and NodeJS', 'Watching this Course in High Definition', 'Conceptual Aside: The Command Line Interface', 'Command Line References']}, {'sections_title': 'V8: The Javascript Engine', 'sections_items': ['Conceptual Aside: Processors, Machine Language, and C++', 'Javascript Aside: Javascript Engines and The ECMAScript Specification', 'V8 Under the Hood', 'Adding Features to Javascript']}, {'sections_title': 'The Node Core', 'sections_items': ['Conceptual Aside: Servers and Clients', 'What Does Javascript Need to Manage a Server?', 'The C++ Core', 'The Javascript Core', 'Downloading Lecture Source Code', ""Let's Install and Run Some Javascript in Node""]}, {'sections_title': 'Modules, Exports, and Require', 'sections_items': ['Conceptual Aside: Modules', 'Javascript Aside: First-Class Functions and Function Expressions', ""Let's Build a Module"", 'Javascript Aside: Objects and Object Literals', 'Javascript Aside: Prototypal Inheritance and Function Constructors', 'Javascript Aside: By Reference and By Value', 'Javascript Aside: Immediately Invoked Function Expressions (IIFEs)', 'How Do Node Modules Really Work?: module.exports and require', 'Javascript Aside: JSON', 'More on require', 'Module Patterns', 'exports vs module.exports', 'Requiring Native (Core) Modules', 'Modules and ES6', 'Web Server Checklist']}, {'sections_title': 'Events and the Event Emitter', 'sections_items': ['Conceptual Aside: Events', 'Javascript Aside: Object Properties, First Class Functions, and Arrays', 'The Node Event Emitter - Part 1', 'The Node Event Emitter - Part 2', 'Javascript Aside: Object.create and Prototypes', 'Inheriting From the Event Emitter', 'Javascript Aside: Node, ES6, and Template Literals', 'Javascript Aside: .call and .apply', 'Inheriting From the Event Emitter - Part 2', 'Javascript Aside: ES6 Classes', 'Inheriting From the Event Emitter - Part 3']}, {'sections_title': 'Asynchronous Code, libuv, The Event Loop, Streams, Files, and more…', 'sections_items': ['Javascript Aside: Javascript is Synchronous', 'Conceptual Aside: Callbacks', 'libuv, The Event Loop, and Non-Blocking Asynchronous Execution', 'Conceptual Aside: Streams and Buffers', 'Conceptual Aside: Binary Data, Character Sets, and Encodings', 'Buffers', 'ES6 Typed Arrays', 'Javascript Aside: Callbacks', 'Files and fs', 'Streams', 'Conceptual Aside: Pipes', 'Pipes', 'Web Server Checklist']}, {'sections_title': 'HTTP and being a Web Server', 'sections_items': ['Conceptual Aside: TCP/IP', 'Conceptual Aside: Addresses and Ports', 'Conceptual Aside: HTTP', 'http_parser', ""Let's Build a Web Server in Node"", 'Outputting HTML and Templates', 'Streams and Performance', 'Conceptual Aside: APIs and Endpoints', 'Outputting JSON', 'Routing', 'Web Server Checklist']}, {'sections_title': 'NPM: the Node Package Manager', 'sections_items': ['Conceptual Aside: Packages and Package Managers', 'Conceptual Aside: Semantic Versioning (semver)', ""npm and the npm registry: Other People's Code"", 'init, nodemon, and package.json', 'npm Global Installation', 'init, nodemon, and package.json - Part 2', ""Using Other People's Code""]}, {'sections_title': 'Express', 'sections_items': ['Installing Express and Making it Easier to Build a Web Server', 'Routes', 'Static Files and Middleware', 'Templates and Template Engines', 'Querystring and Post Parameters', 'RESTful APIs and JSON', 'Structuring an App']}, {'sections_title': 'Javascript, JSON, and Databases', 'sections_items': ['Conceptual Aside: Relational Databases and SQL', 'Node and MySQL', 'Conceptual Aside: NoSQL and Documents', 'MongoDB and Mongoose', 'Web Server Checklist']}]}, {'title': 'Complete React Developer in 2023 (w/ Redux, Hooks, GraphQL)', 'instructional_level': 'All Levels', 'created': '2019-05-13T14:44:19Z', 'objectives_summary': ['Build enterprise level React applications and deploy to production (using React 18!)', 'Learn to build reactive, performant, large scale applications like a senior developer', 'Learn the latest features in React including Hooks, Context API, Suspense, React Lazy  + more'], 'content_info': '42.5 total hours', 'learning_obj': 'Build enterprise level React applications and deploy to production (using React 18!)\nLearn to build reactive, performant, large scale applications like a senior developer\nLearn the latest features in React including Hooks, Context API, Suspense, React Lazy + more\nMaster the latest ecosystem of a React Developer from scratch\nBecome the top 10% ReactJS Developer\nUsing GraphQL as a React Developer\nUse Redux, Redux Thunk and Redux Saga in your applications\nLearn to compare tradeoffs when it comes to different state management\nShow more', 'course_includes': 'This course includes:\n42 hours on-demand video\n1 coding exercise\n44 articles\n29 downloadable resources\nAccess on mobile and TV\nFull lifetime access\nCertificate of completion', 'description': 'Just FULLY updated and re-recorded with all new React features for 2023 (React v18)! Join a live online community of over 900,000+ developers and a course taught by industry experts that have actually worked both in Silicon Valley and Toronto with React.js.\n\nUsing the latest version of React (React 18), this course is focused on efficiency. Never spend time on confusing, out of date, incomplete tutorials anymore. Graduates of Andrei’s courses are now working at Google, Tesla, Amazon, Apple, IBM, JP Morgan, Meta, + other top tech companies.\nWe guarantee you this is the most comprehensive online resource on React. This project based course will introduce you to all of the modern toolchain of a React developer in 2023. Along the way, we will build a massive e-commerce application similar to Shopify using React, Redux, React Hooks, React Suspense, React Router, GraphQL, Context API, Firebase, Redux-Saga, Stripe + more. This is going to be a full stack app (MERN stack), using Firebase.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow more', 'requirements': '\nBasic HTML, CSS and JavaScript knowledge\nYou do not need any experience with React or any other JS framework!', 'content': [{'sections_title': 'Introduction', 'sections_items': ['Course Outline', 'Join Our Online Classroom!', 'Exercise: Meet Your Classmates & Instructor', 'ZTM Resources', 'Monthly Coding Challenges, Free Resources and Guides']}, {'sections_title': 'React Key Concepts', 'sections_items': ['React Concepts', 'The Birth of React.js', 'Declarative vs Imperative', 'Component Architecture', 'One Way Data Flow', 'UI Library', 'How To Be A Great React Developer', 'Web Developer Monthly']}, {'sections_title': 'React Basics', 'sections_items': ['Section Overview', 'Course Guideline + Code', 'Environment Setup for Mac', 'Environment Setup For Windows', 'NPM vs YARN', ""Yihua's VSCode font and settings"", 'VSCode settings update', 'Create React App - NPX', 'Create React App - React-Scripts 1', 'Create React App - React-Scripts 2', 'Create React App - Everything Else', ""Don't Eject"", 'Hooks vs Classes', 'Quick note: React 18 Strict Mode', 'Monsters Rolodex - Class Components', 'Monsters Rolodex - Component State', 'Monsters Rolodex - setState', 'Monsters Rolodex - States and Shallow Merge', 'Monsters Rolodex - setState and Secondary Callback', 'Monsters Rolodex - Mapping Arrays to Elements', 'Optional: map() + key attribute', 'Monsters Rolodex - Keys for Mapping', 'Monsters Rolodex - Single Page Applications (SPAs)', 'Monsters Rolodex - Lifecycle Method: componentDidMount', 'Optional: Promises', 'Monsters Rolodex - Renders & Re-renders in React', 'Monsters Rolodex - Input Search Box Component', 'Monsters Rolodex - Searching & Filtering', 'Optional: filter(), includes()', 'Monsters Rolodex - Storing Original Data', 'Monsters Rolodex - Optimizations', 'Monsters Rolodex - Understanding Components', 'Monsters Rolodex - CardList Component', 'Monsters Rolodex - Component Props', 'Monsters Rolodex - Rendering and Re-rendering part 2', 'Monsters Rolodex - SearchBox Component', 'Monsters Rolodex - CSS in React', 'Monsters Rolodex - CardList Component', 'Quick note on quotes for string interpolation', 'Monsters Rolodex - Finishing Touches', 'Functional vs Class Components', 'Class Component Lifecycle Methods Breakdown', 'Monsters Rolodex - Functional Component Intro', 'Pure & Impure Functions', 'Monsters Rolodex - Hooks: useState', 'Monsters Rolodex - Functional Component Re-rendering', 'Monsters Rolodex - Infinite Re-rendering', 'Monsters Rolodex - Hooks: useEffect', 'Monsters Rolodex - Remaining Components', 'React v18: Migrating from React v17 + ReactDOM v18 Changes', 'React v18: Strict Mode Changes', 'DOM and Virtual DOM', 'React and ReactDOM', 'React and ReactDOM part 2', 'ReactDOM v18 Changes', 'DOM Paint Flashing', 'Optional: Git + Github', 'Optional: Connecting With SSH To Github']}, {'sections_title': 'Capstone Project: Intro + Setup', 'sections_items': ['Endorsements On LinkedIN', 'Github Strategy', 'The Long Road Ahead', 'Project Overview', 'Scaffolding Our Capstone Project', 'Setting Up Our Categories', 'Adding Sass', 'Category Item Component', 'Directory Component', 'Adding Fonts']}, {'sections_title': 'Routing + React-Router', 'sections_items': ['Routing', 'Updating/Upgrading Libraries', 'Setting Up Our Homepage', 'React Router Outlet', 'Navigation Bar Component', 'React Router Link', 'Styling for Navigation  + Logo']}, {'sections_title': 'Authentication + Firebase', 'sections_items': ['Setting Up Firebase', 'Authentication Flow', 'Optional: Async Await', 'Optional: How to fix 403: restricted_client error', 'Authenticating With Firebase', 'Introducing Firestore Data Models', 'Setting Up User Documents', 'Finish Creating User Documents', 'Sign In With Redirect', 'Sign Up Form Pt.1', 'Sign Up Form Pt.2', 'Sign Up With Email + Password', 'Generalizing Form Input Component', 'Custom Button Component', 'Sign In Form', 'Finishing Authentication Page']}, {'sections_title': 'React Context For State Management', 'sections_items': ['Need For Context', 'User Context', 'Re-rendering From Context', 'Signing Out', 'Exercise: Imposter Syndrome']}, {'sections_title': 'Observer Pattern', 'sections_items': ['Observer: onAuthStateChange', 'Finalizing Auth Listener', 'Observer Pattern']}, {'sections_title': 'React Context Continued', 'sections_items': ['New Shop Page', 'Products Context', 'Product Card Component', 'Cart Icon & Dropdown', 'Toggle Cart Open', 'Add To Cart Pt.1', 'Add To Cart Pt.2', 'Optional: reduce()', 'Cart Item Designs', 'Creating Checkout Page', 'Checkout Item Pt. 1', 'Checkout Item Pt.2', 'Checkout Item Pt.3', 'Cart Total']}, {'sections_title': 'Firebase Database Storage', 'sections_items': ['Firestore DB No-SQL', 'addCollectionAndDocuments Pt.1', 'addCollectionAndDocuments Pt.2', 'Get Products + Categories From Firestore', 'Optional: Hash Tables vs Arrays', 'Using Our CategoriesMap', 'Category Preview Component', 'Nested Routes in Shop', 'Category Page']}]}, {'title': 'The Complete Angular Course: Beginner to Advanced', 'instructional_level': 'All Levels', 'created': '2017-06-09T19:03:05Z', 'objectives_summary': ['Establish yourself as a skilled professional developer', 'Build real-world Angular applications on your own', 'Troubleshoot common Angular errors'], 'content_info': '29.5 total hours', 'learning_obj': 'Establish yourself as a skilled professional developer\nBuild real-world Angular applications on your own\nTroubleshoot common Angular errors\nMaster the best practices\nWrite clean and elegant code like a professional developer', 'course_includes': 'This course includes:\n29.5 hours on-demand video\nAssignments\n10 articles\n38 downloadable resources\nAccess on mobile and TV\nFull lifetime access\nCertificate of completion', 'description': ""Angular is one of the most popular frameworks for building client apps with HTML, CSS and TypeScript. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\n\nIf you've been confused or frustrated jumping from one Angular 4 tutorial to another, you've come to the right place. In this course, Mosh, author of several best-selling courses on Udemy, takes you on a fun and pragmatic journey to master Angular 4. \n\nBy the end of watching this course, you'll be able to: \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow more"", 'requirements': '\nBasic familiarity with HTML, CSS and JavaScript\nNO knowledge of Angular 1 or Angular 2 is required', 'content': [{'sections_title': 'Introduction', 'sections_items': ['Introduction', 'What is Angular', 'Architecture of Angular Apps', 'Setting Up the Development Environment', 'Your First Angular App', 'Structure of Angular Projects', 'Webpack', 'Angular Version History', 'Angular Basics', 'Course Structure', 'Making a Promise', 'Asking Questions']}, {'sections_title': 'TypeScript Fundamentals', 'sections_items': ['Introduction', 'What is TypeScript?', 'Your First TypeScript Program', 'Declaring Variables', 'Types', 'Type Assertions', 'Arrow Functions', 'Interfaces', 'Classes', 'Objects', 'Constructors', 'Access Modifiers', 'Access Modifiers in Constructor Parameters', 'Properties', 'Modules', 'Exercise', 'Solution', 'A Problem with the Current Implementation']}, {'sections_title': 'Angular Fundamentals', 'sections_items': ['Introduction', 'Building Blocks of Angular Apps', 'Components', 'Generating Components Using Angular CLI', 'Templates', 'Directives', 'Services', 'Dependency Injection', 'Generating Services Using Angular CLI', 'List of Authors']}, {'sections_title': 'Displaying Data and Handling Events', 'sections_items': ['Introduction', 'Property Binding', 'Attribute Binding', 'Adding Bootstrap', 'Class Binding', 'Style Binding', 'Event Binding', 'Event Filtering', 'Template Variables', 'Two-way Binding', 'Pipes', 'Custom Pipes', 'Favorite Component', 'Title Casing']}, {'sections_title': 'Building Re-usable Components', 'sections_items': ['Introduction', 'Component API', 'Input Properties', 'Aliasing Input Properties', 'Output Properties', 'Passing Event Data', 'Aliasing Output Properties', 'Templates', 'Styles', 'View Encapsulation', 'ngContent', 'ngContainer', 'Like Component']}, {'sections_title': 'Directives', 'sections_items': ['Introduction', 'ngIf', 'Hidden Property', 'ngSwitchCase', 'ngFor', 'ngFor and Change Detection', 'ngFor and Trackby', 'The Leading Asterisk', 'ngClass', 'ngStyle', 'Safe Traversal Operator', 'Creating Custom Directives', 'Exercise: ZippyComponent']}, {'sections_title': 'Template-driven Forms', 'sections_items': ['Introduction', 'Building a Bootstrap Form', 'Types of Forms', 'ngModel', 'Adding Validation', 'Specific Validation Errors', 'Styling Invalid Input Fields', 'Cleaner Templates', 'ngForm', 'ngModelGroup', 'Control Classes and Directives', 'Disabling the Submit Button', 'Working with Check Boxes', 'Working with Drop-down Lists', 'Working with Radio Buttons', 'Course Form']}, {'sections_title': 'Reactive Forms', 'sections_items': ['Introduction', 'Building a Bootstrap Form', 'Creating Controls Programmatically', 'Adding Validation', 'Specific Validation Errors', 'Implementing Custom Validation', 'Asynchronous Operations', 'Asynchronous Validators', 'Showing a Loader Image', 'Validating the Form Input Upon Submit', 'Nested FormGroups', 'FormArray', 'FormBuilder', 'Quick Recap', 'Change Password Form']}, {'sections_title': 'Consuming HTTP Services', 'sections_items': ['Introduction', 'JSONPlaceHolder', 'Getting Data', 'Creating Data', 'Updating Data', 'Deleting Data', 'OnInit Interface', 'Separation of Concerns', 'Extracting a Service', 'Handling Errors', 'Handling Unexpected Errors', 'Handling Expected Errors', 'Throwing Application-specific Errors', 'Handling Bad Request Errors', 'Importing Observable Operators and Factory Methods', 'Global Error Handling', 'Extracting a Reusable Error Handling Method', 'Extracting a Reusable Data Service', 'The Map Operator', 'Optimistic vs Pessimistic Updates', 'Observables vs Promises', 'GitHub Followers Page']}, {'sections_title': 'Routing and Navigation', 'sections_items': ['Introduction', 'Routing in a Nutshell', 'Configuring Routes', 'RouterOutlet', 'RouterLink', 'RouterLinkActive', 'Getting the Route Parameters', 'Why Route Parameters Are Observables', 'Routes with Multiple Parameters', 'Query Parameters', 'Subscribing to Multiple Observables', 'The SwitchMap Operator', 'Programmatic Navigation', 'Blog Archives']}]}]
"
54Zu0Zut,Untitled,kirillzhosul,Python,Friday 21st of July 2023 07:54:21 AM CDT,"async def logs(cont, name):
    conn = aiohttp.UnixConnector(path=""/var/run/docker.sock"")
    async with aiohttp.ClientSession(connector=conn) as session:
        async with session.get(
            f""http://xx/containers/{cont}/logs?follow=1&stdout=1""
        ) as resp:
            async for line in resp.content:
                print(name, line)


# (функция выше - получает сокет докера что бы получать данные о логах (выводе) внутри контейнера и выводит их в базовый stdout)
# (вероятно, была возможность использовать `docker` (из минусов - она синхронная) (pip install docker), пример: client.containers.get(cont).logs())
# В данном случае опущена библиотека для тестирования (pytest / unittest / etc).
# так же опущено тестирование рез-тата.
await logs(None, None)  # -> unexpected
await logs({}, [])  # -> unexpected
await logs(""non_existent_container"", """")  # -> unexpected (контейнера не существует)
await logs(""d_container"", some_class_instance_without_str_repr)  # -> unexpected
await logs(""d_container"", ""out"")  # -> expected behavior
"
uqXQ27Ek,Colorise Table JS Advanced,TZinovieva,JavaScript,Friday 21st of July 2023 07:39:26 AM CDT,"function colorize() {
    let tableElements = document.querySelectorAll('table tr');
    
    let tableArr = Array.from(tableElements);

    for (let i = 1; i < tableArr.length; i+=2) {
        let row = tableArr[i];
        if (i % 2 !== 0) {
            row.style.background = 'teal';
        }
    }
}"
m6kcQHsN,env.py,ruchej,Python,Friday 21st of July 2023 06:52:56 AM CDT,"import asyncio
from logging.config import fileConfig

from alembic import context
from alembic.config import Config
from alembic_utils.replaceable_entity import register_entities
from sqlalchemy import MetaData, create_engine

from app.db.models import load_all_models
from app.db.models.common.base import CommonBase
from app.db.models.technological_section_1.base import FirstTechnologicalSectionBase
from app.db.models.logs.base import LogsBase
from app.db.triggers import db_functions, db_triggers
from app.settings import settings

# this is the Alembic Config object, which provides
# access to the values within the .ini file in use.
config = Config

load_all_models()
# Interpret the config file for Python logging.
# This line sets up loggers basically.
if config.config_file_name is not None:
    fileConfig(config.config_file_name)


def combine_metadata(*args):
    m = MetaData()
    for metadata in args:
        for t in metadata.tables.values():
            t.tometadata(m)
    return m


target_metadata = combine_metadata(
    CommonBase.metadata,
    FirstTechnologicalSectionBase.metadata,
    LogsBase.metadata
)


register_entities(db_functions)
register_entities(db_triggers)


def include_object(object, name, type_, reflected, compare_to):
    if reflected and type_ == ""grant_table"":
        return False
    return True


async def run_migrations_offline() -> None:
    """"""Run migrations in 'offline' mode.

    This configures the context with just a URL
    and not an Engine, though an Engine is acceptable
    here as well.  By skipping the Engine creation
    we don't even need a DBAPI to be available.

    Calls to context.execute() here emit the given string to the
    script output.

    """"""
    context.configure(
        url=str(settings.db_url_sync),
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={""paramstyle"": ""named""},
        include_object=include_object,
        version_table_schema=settings.DB_ALEMBIC_SCHEMA,
    )

    with context.begin_transaction():
        context.run_migrations()


async def run_migrations_online() -> None:
    """"""
    Run migrations in 'online' mode.

    In this scenario we need to create an Engine
    and associate a connection with the context.
    """"""
    connectable = create_engine(str(settings.db_url_sync))
    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            version_table_schema=settings.DB_ALEMBIC_SCHEMA,
            include_schemas=True,
            include_object=include_object,
        )
        with context.begin_transaction():
            context.run_migrations()


loop = asyncio.get_event_loop()
if context.is_offline_mode():
    task = run_migrations_offline()
else:
    task = run_migrations_online()

loop.run_until_complete(task)
"
TTFutUqU,GA4 - app - flutter - file_download,filipr27,Dart,Friday 21st of July 2023 06:49:02 AM CDT,"// file_download
await firebaseAnalytics.logEvent(
  name: ""file_download"",
  parameters: {
    ""file_name"": Opis posla pizza majstor,
    ""link_url"": halooglasi.com/pizzamajstor.pdf,
    ""link_text"": Pogledajte opis posla,
    ""visitorStatus"": prijavljen,  // prijavljen or neprijavljen
  },
);"
6gJvRVJu,GA4 - app - flutter - view_search_results,filipr27,Dart,Friday 21st of July 2023 06:46:13 AM CDT,"// view_search_results
await firebaseAnalytics.logEvent(
  name: ""view_search_results"",
  parameters: {
    ""search_term"": maska za iPhone 14,
    ""visitorStatus"": prijavljen,  // prijavljen or neprijavljen
  },
);"
dKy8r3YA,Indicatore Adx,Maurizio-Ciullo,JavaScript,Friday 21st of July 2023 06:38:41 AM CDT,"// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Maurizio-Ciullo

//@version=5
indicator(""Indicatore Adx"")

len = input.int(14, minval=1, title=""DI Length"")
lensig = input.int(14, title=""ADX Smoothing"", minval=1, maxval=50)
[_, _, adx] = ta.dmi(len, lensig)
plot(adx, color=color.red, title=""ADX"")
hline(25)

cond = adx > 25
bgcolor(cond ? color.silver : na)"
PLyPt6aU,Solid helps bg,GeorgiLukanov87,Python,Friday 21st of July 2023 06:24:30 AM CDT,"
# 1. Принцип на единична отговорност (Single Responsibility Principle - SRP):

Този принцип диктува, че един клас или модул трябва да има само една причина да се променя. Всяка част от системата трябва да има само една отговорност и да се фокусира върху нея. Това улеснява разбирането и поддържането на кода и прави го по-малко вероятно да се сблъскате с неочаквани проблеми при въвеждане на промени.

# -----------------------------------------------------------------------------------------------------------------------------------


# 2. Принцип на отворено-затворен принцип (Open-Closed Principle - OCP):

Този принцип поощрява софтуерните елементи да бъдат отворени за разширение, но затворени за модификация. Това означава, че когато искаме да добавим нова функционалност, не трябва да променяме съществуващия код, а да го разширяваме чрез добавяне на нови модули или класове.

# -----------------------------------------------------------------------------------------------------------------------------------


# 3. Принцип на замещаване на Лисков (Liskov Substitution Principle - LSP):

Този принцип определя, че обекти от базовия клас трябва да могат да бъдат заместени с обекти от неговите дъщерни класове без да се нарушава коректното функциониране на програмата. Това е свързано с правилното използване на наследяването и гарантиране на съвместимостта между класовете.

# -----------------------------------------------------------------------------------------------------------------------------------


# 4. Принцип на разделени интерфейси (Interface Segregation Principle - ISP):

Този принцип насърчава създаването на малки, специфични интерфейси, които са насочени към нуждите на клиентите. Вместо да имаме едно голямо общо интерфейсно API, трябва да създадем много по-малки интерфейси, които съответстват на конкретните изисквания на клиентите.

# -----------------------------------------------------------------------------------------------------------------------------------


# 5. Принцип на инверсия на зависимостта (Dependency Inversion Principle - DIP):

Този принцип определя, че зависимостите между класовете трябва да бъдат обръщани. Това означава, че вместо да имаме високо-нивни класове, които зависят от ниско-нивни класове, трябва да имаме абстракции, които разделят тези зависимости. Това позволява по-лесно подменяне на реализациите и по-голяма гъвкавост на системата.

# -----------------------------------------------------------------------------------------------------------------------------------


Следването на принципите на SOLID помага за създаването на софтуерни системи с по-малко зависимости, по-лесна поддръжка и по-голяма възможност за разширение. За Django Developer, съответно, тези принципи са от особено значение при проектирането и разработката на уеб приложения на базата на този популярен уеб рамки.


"
vUMtmYu4,GA4 - app - flutter - phone_number_click,filipr27,Dart,Friday 21st of July 2023 06:14:58 AM CDT,"// phone_number_click
await FirebaseAnalytics.instance.logEvent(
  name: ""phone_number_click"",
  parameters: {
    ""visitorStatus"": prijavljen,  // prijavljen or neprijavljen
    ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
  },
);"
3024DBpj,Untitled,Ugex95,Python,Friday 21st of July 2023 06:12:59 AM CDT,"#coding=utf-8
from rich.table import Table as me
from rich.console import Console as sol
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich import print as cetak
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
import os,time
from datetime import datetime

skrng = datetime.now()
waktu = skrng.strftime(""[bright_black]%H[red]:[bright_black]%M"")

os.system('clear')
banner = f""""""[white]

[dark_goldenrod]   ▄▆▆▆▆▆▆▆▆▆▆▄  [bright_black]X  [bright_white on dark_red]     Terminal Emulator     [/bright_white on dark_red]
[dark_goldenrod]  ▐█          █▌ [bright_black]X
[dark_goldenrod]  ▐█  [red]◥    ◤  [dark_goldenrod]█▌ [bright_black]X   [red]⋗ [white]Owner [red]: [bright_green]Ugex95
[dark_goldenrod]  ▐█          █▌ [bright_black]X   [red]⋗ [white]Host [red]: [green]Redmi M2101K7AG
[dark_goldenrod]   ▀▆▆▆▆▆▆▆▆▆▆▀ [red]___  [red]⋗ [white]OS [red]: [green]Android 12 aarch64                                                             [dark_goldenrod]   ▬▬▬██████[green]■[dark_goldenrod]▄[blue]■[dark_goldenrod]▄[bright_black]░░░  [red]⋗ [white]Shell [red]: [green]bash 5.1.16
[dark_goldenrod]  ▀▀▀▀▀▀  ▀▀▀▀▀▀ [bright_black]│  [gold3]───────────────────────────
  [red]~ [dark_orange]/[green]::::::::[dark_orange]/[bright_black]───╯   [red]- {waktu}                [red]●[yellow]●[green]●
""""""
print('\n')
p=nel(banner,
style='white',
title='[red]• [white]───────────╯ [dark_red]───────────── [white]╰───────────[yellow] •',
subtitle='[green]• [white]────────╮ [dark_red]───────── [white]╭──────── [blue]•')
p=nel(p,
style='green',
title='[green]• [bright_blue]Endin Aenudin [green]•',
subtitle='[green]• [gold3]© ugex95. [green]•')
sol().print(p)
print('\n\n')
#os.system('ls')"
p9ywcbBa,Review Orbit Global FX,reviewbrokers,PHP,Friday 21st of July 2023 06:04:50 AM CDT,https://www.reviewbrokers.net/review-orbit-global-fx/
Swb0Xrs0,GA4 - app - flutter - newsletter_subscription,filipr27,Dart,Friday 21st of July 2023 06:02:01 AM CDT,"// newsletter_subscription
await FirebaseAnalytics.instance.logEvent(
  name: ""newsletter_subscription"",
  parameters: {
    ""business_type"": b2c,  // b2b or b2c
  },
);"
xwz1GzdU,GA4 - app - flutter - begin_registration,filipr27,Dart,Friday 21st of July 2023 06:00:22 AM CDT,"// begin_registration
await FirebaseAnalytics.instance.logEvent(
  name: ""begin_registration"",
  parameters: {
    ""business_type"": b2c,  // b2b or b2c
  },
);"
BA412r7x,data640,TestGuy1,JSON,Friday 21st of July 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd5e551e9fcb4b8efae342f4ce19ae745c8ffe0131896120e36f493693497a900a4ed1f1e18a10de7477788f578ddc23f9f6c33fc9f5b7e8ded1c02c94f769cc5479e69715de0cb88f6bf33c936a7eab3ceeef36dd9481821be39f7fcee48a1c0cbe68e546492538e43654c4151774de5380d3dc39183b926075c08170e21e037',
  otherdata: [
    '191bad6b6e1def443c5b3aeda84dac19',
    '8bec5fbea2df05536a093aee4f27d056',
    '37d554f49bf83f7bf618aa7f100826f5',
    '75db78288a432e4d4a02557a4bdd18da',
    '46952424ec118f2ad11d20a809ae11ff',
    '3a6d521804a2673aebcb9747b03e64ae',
    'b0fca8b25f808d9bb7663b471a5cc696',
    '277653e4e2d86286dec93fd67a438193'
  ]
}"
JmD4fz2H,Untitled,gigler,C++,Friday 21st of July 2023 05:59:33 AM CDT," vector<vector<int>> merge(vector<vector<int>>& intervals) {
        // vector<vector<int>> sol;
         int n=intervals.size();
        vector<vector<int>> sol;

        sort(intervals.begin(), intervals.end());

        for(int i=0;i<n;i++){
            int maxEnd=intervals[i][1];
            int j=i+1;

            while((j<n)&&(intervals[j][0]<=maxEnd)){
                maxEnd=max(maxEnd, intervals[j][1]);
                j++;
            }
            sol.push_back({intervals[i][0], maxEnd});
            i=j-1;
        }   
        return sol;
    }"
7WungBnm,Review Orbit Global FX,fxvnpro,PHP,Friday 21st of July 2023 05:53:29 AM CDT,https://www.fxvnpro.com/review-orbit-global-fx/
zNmjTRWS,GA4 - app - flutter - external_banner_click,filipr27,Dart,Friday 21st of July 2023 05:31:22 AM CDT,"// external_banner_click
await FirebaseAnalytics.instance.logEvent(
  name: ""external_banner_click"",
  parameters: {
    ""link_domain"": tracker_ug.contentexchange.me,
    ""link_url"": https://tracker_ug.contentexchange.me/in/6ZEWXRWM9JQjbsdYt/YBNojHSzjr9zrgGSC?pv=19066635-9fa0-4b7e-a,
    ""visitorStatus"": prijavljen,  // prijavljen or neprijavljen
  },
);"
MnZy5K4c,StringRange,Grisha06,C#,Friday 21st of July 2023 05:24:27 AM CDT,"namespace StringRange
{
    internal class Program
    {
        public static void Main()
        {
            Console.WriteLine(""ab"".Range());
        }
    }
    public static class StringRange
    {
        public static string Range(this string range)
        {
            var first = range.First();
            var last = first.ToString() == first.ToString().ToLower() ? range.ToLower().Last() : range.ToUpper().Last();

            var alf = """";
            foreach (var item in first < last ? RangeFL(first, last) : RangeLF(first, last))
            {
                alf += item;
            }
            return alf;
        }

        static IEnumerable<char> RangeFL(char first, char last)
        {
            for (char c = first; c <= last; ++c)
            {
                yield return c;
            }
        }
        static IEnumerable<char> RangeLF(char first, char last)
        {
            for (char c = first; c >= last; --c)
            {
                yield return c;
            }
        }
    }
}"
425gw0zb,_kit_w32_audioX2.cpp,Kitomas,C++,Friday 21st of July 2023 05:07:10 AM CDT,"//link kernel32, Ole32, and xaudio2 to use
#include <_kit_w32_audioX2.h>

#ifdef __cplusplus
extern ""C"" {
#endif

#include <stdio.h>

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

HRESULT _kit_audioX2_CreateVoice(_kit_audioX2_Engine* engine, const WAVEFORMATEX* source_format, unsigned int* index_p){
  HRESULT returnStatus=S_OK; int locked=0, slot=-1;
  _IF_ERROR(engine==NULL,E_INVALIDARG,;);
  _IF_ERROR(source_format==NULL,E_INVALIDARG,;);
  _IF_ERROR(index_p==NULL,E_INVALIDARG,;);
  EnterCriticalSection(&engine->lock); locked=1;

  //if no voices have been added, then allocate space for first pointer
  if(!engine->sources_len){
    engine->sources=(IXAudio2SourceVoice**)CoTaskMemRealloc(engine->sources, sizeof(IXAudio2SourceVoice*));
    _IF_ERROR(engine->sources==NULL,E_OUTOFMEMORY,;);
    engine->sources[0]=NULL;
    engine->sources_len=1;
  }

  //try to find first free space
  unsigned int sources_len=engine->sources_len;
  for(unsigned int i=0; i<sources_len; ++i){
    if(engine->sources[i]==NULL){
      returnStatus=engine->object->CreateSourceVoice(&engine->sources[i], source_format);
      _IF_GOTO_ERROR(FAILED(returnStatus),;);
      slot=i; break;
    }
  }

  //if no free space was found, append new voice to source voice list
  if(slot == -1){
    engine->sources=(IXAudio2SourceVoice**)CoTaskMemRealloc(engine->sources, sources_len*sizeof(IXAudio2SourceVoice*));
    _IF_ERROR(engine->sources==NULL,E_OUTOFMEMORY,;);
    returnStatus=engine->object->CreateSourceVoice(&engine->sources[sources_len], source_format);
    _IF_GOTO_ERROR(FAILED(returnStatus),;);
    slot=engine->sources_len++;
  }

  _error_:
  if((engine!=NULL) && locked) LeaveCriticalSection(&engine->lock);
  if(slot != -1) *index_p=slot;
  return returnStatus;
}


HRESULT _kit_audioX2_DestroyVoice(_kit_audioX2_Engine* engine, unsigned int index){
  HRESULT returnStatus=S_OK; int locked=0;
  _IF_ERROR(engine==NULL,E_INVALIDARG,;);
  EnterCriticalSection(&engine->lock); locked=1;
  _IF_ERROR(index>=engine->sources_len,E_INVALIDARG,;);
  _IF_GOTO_ERROR(engine->sources[index]==NULL,;); //returnStatus=S_OK here

  //destroy source voice at index
  engine->sources[index]->DestroyVoice();

  //reallocate if index was the last element
  unsigned int last_source=engine->sources_len-1;
  if(index==last_source && last_source!=0){
    engine->sources=(IXAudio2SourceVoice**)CoTaskMemRealloc(engine->sources, last_source*sizeof(IXAudio2SourceVoice*));
    _IF_ERROR(engine->sources==NULL,E_OUTOFMEMORY,;);
    --engine->sources_len;
  } else engine->sources[index]=NULL;

  _error_:
  if((engine!=NULL) && locked) LeaveCriticalSection(&engine->lock);
  return returnStatus;
}



//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

HRESULT _kit_audioX2_CreateEngine(_kit_audioX2_Engine** engine_p,
                                  const WAVEFORMATEX* source_format,
                                  const wchar_t* deviceID){
  HRESULT returnStatus=S_OK; ULONG numRefs=1; int critical_section=0;
  _kit_audioX2_Engine* engine=NULL;
  _IF_ERROR(engine_p==NULL,E_INVALIDARG,;);
  _IF_ERROR(source_format==NULL,E_INVALIDARG,;);

  //allocate memory for struct
  engine=(_kit_audioX2_Engine*)CoTaskMemAlloc(sizeof(_kit_audioX2_Engine));
  _IF_ERROR(engine==NULL,E_OUTOFMEMORY,;);
  for(char i=0,*ch_p=(char*)engine; i<sizeof(_kit_audioX2_Engine); ++i) ch_p[i]=0;

  //initialize mutex
  InitializeCriticalSection(&engine->lock); critical_section=1;

  //create xaudio2 object
  returnStatus=XAudio2Create(&engine->object, 0, XAUDIO2_DEFAULT_PROCESSOR);
  _IF_GOTO_ERROR(FAILED(returnStatus),;);

  //create mastering voice
  LPWSTR _deviceID=(LPWSTR)deviceID;
  returnStatus=engine->object->CreateMasteringVoice(&engine->master,
                                                    XAUDIO2_DEFAULT_CHANNELS,
                                                    XAUDIO2_DEFAULT_SAMPLERATE,0,
                                                    _deviceID);
  _IF_GOTO_ERROR(FAILED(returnStatus),;);

  //create the first source voice
  unsigned int slot;
  returnStatus=_kit_audioX2_CreateVoice(engine, source_format, &slot);
  _IF_GOTO_ERROR(FAILED(returnStatus),;);

  _error_:
  if(SUCCEEDED(returnStatus)) *engine_p=engine;
  else if(engine != NULL){
    if(engine->sources != NULL){
      _KIT_COM_CALL_S(engine->sources[slot],DestroyVoice);
      CoTaskMemFree(engine->sources);
    }
    _KIT_COM_CALL_S(engine->master,DestroyVoice);
    _KIT_COM_RELEASE_S(engine->object);
    if(critical_section) DeleteCriticalSection(&engine->lock);
    CoTaskMemFree(engine); engine=NULL;
  }
  return returnStatus;
}


HRESULT _kit_audioX2_DestroyEngine(_kit_audioX2_Engine** engine_p){
  HRESULT returnStatus=S_OK; ULONG numRefs=1; int locked=0;

  _kit_audioX2_Engine* engine=NULL;
  _IF_ERROR(engine_p==NULL,E_INVALIDARG,;);
  _IF_ERROR((engine=*engine_p)==NULL,E_INVALIDARG,;);
  EnterCriticalSection(&engine->lock); locked=1;

  //halt audio
  _KIT_COM_CALL_S(engine->object,StopEngine);

  //destroy source voices
  unsigned int sources_len=engine->sources_len;
  for(unsigned int i=0; i<sources_len; ++i)
    _KIT_COM_CALL_S(engine->sources[i],DestroyVoice);

  _KIT_COM_CALL_S(engine->master,DestroyVoice);

  //release actual XAudio2 object before deleting mutex and freeing memory
  _KIT_COM_RELEASE_S(engine->object);
  LeaveCriticalSection(&engine->lock); locked=0;
  DeleteCriticalSection(&engine->lock);
  CoTaskMemFree(engine); *engine_p=NULL; //also make sure the pointer is null

  _error_:
   //(should never be true if destroyed successfully)
  if((engine!=NULL) && locked) LeaveCriticalSection(&engine->lock);
  return returnStatus;
}



#ifdef __cplusplus
}
#endif
"
NDx4E028,_kit_w32_audioX2.h,Kitomas,C,Friday 21st of July 2023 05:06:17 AM CDT,"//link kernel32, Ole32, and xaudio2 to use
#ifndef _KIT_W32_AUDIOX2_H
#define _KIT_W32_AUDIOX2_H

#ifdef __cplusplus
extern ""C"" {
#endif



#ifndef WINDOWS_LEAN_AND_MEAN
# define WINDOWS_LEAN_AND_MEAN
#  include <windows.h>
# undef WINDOWS_LEAN_AND_MEAN
#else
#  include <windows.h>
#endif
//#include <windef.h>
//#include <winnt.h>
//#include <initguid.h>
//#include <audioclient.h>
//#include <mmdeviceapi.h>
#include <xaudio2.h>
#include <synchapi.h>


#include <_kit_w32_privmacro.h>



typedef struct {
  CRITICAL_SECTION        lock;
  IXAudio2*               object;
  IXAudio2MasteringVoice* master;
  IXAudio2SourceVoice**   sources;
  void**                  sources_spec;
  unsigned int            sources_len;
  unsigned int           _padding; //might use this for something later
} _kit_audioX2_Engine;



//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

extern HRESULT _kit_audioX2_CreateVoice(_kit_audioX2_Engine* engine, const WAVEFORMATEX* source_format, unsigned int* index_p);


extern HRESULT _kit_audioX2_DestroyVoice(_kit_audioX2_Engine* engine, unsigned int index);



//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

extern HRESULT _kit_audioX2_CreateEngine(_kit_audioX2_Engine** engine_p,
                                         const WAVEFORMATEX* source_format,
                                         const wchar_t* deviceID);


extern HRESULT _kit_audioX2_DestroyEngine(_kit_audioX2_Engine** engine_p);



#ifdef __cplusplus
}
#endif

#endif /* _KIT_W32_AUDIOX2_H */
"
YNrkVvzR,_kit_w32_privmacro.h,Kitomas,C,Friday 21st of July 2023 05:05:09 AM CDT,"#ifndef _KIT_W32_PRIVMACRO_H
#define _KIT_W32_PRIVMACRO_H



//relies on label ""_error_"" and integer value ""returnStatus""
#if !defined(_IS_ERROR)
#  define _IS_ERROR(_value,_before_goto) \
          { returnStatus=_value; _before_goto; goto _error_; }
#endif /* _IS_ERROR */
#if !defined(_IF_ERROR)
#  define _IF_ERROR(_condition,_value,_before_goto) \
          if(_condition) _IS_ERROR(_value,_before_goto);
#endif /* _IF_ERROR */


//relies on label ""_error_""
#if !defined(_IF_GOTO)
#  define _IF_GOTO(_condition,_label,_before_goto) \
          if(_condition){ _before_goto; goto _label; }
#endif /* _IF_GOTO */
#if !defined(_IF_GOTO_ERROR)
#  define _IF_GOTO_ERROR(_condition,_before_goto) \
          _IF_GOTO(_condition,_error_,_before_goto)
#endif /* _IF_GOTO_ERROR */


//relies on ULONG variable ""numRefs"" (value initialized to 1)
#if !defined(_KIT_COM_RELEASE)
#  define _KIT_COM_RELEASE(_object) \
          while(numRefs){ numRefs=_object->Release(); } \
          numRefs=1;
#endif /* _KIT_COM_RELEASE */
#if !defined(_KIT_COM_RELEASE_S)
#  define _KIT_COM_RELEASE_S(_object) \
          if(_object != NULL){ _KIT_COM_RELEASE(_object) }
#endif /* _KIT_COM_RELEASE_S */


#if !defined(_KIT_COM_CALL)
#  define _KIT_COM_CALL(_object,_method) \
          _object->_method();
#endif /* _KIT_COM_CALL */
#if !defined(_KIT_COM_CALL_S)
#  define _KIT_COM_CALL_S(_object,_method) \
          if(_object != NULL){ _KIT_COM_CALL(_object,_method) }
#endif /* _KIT_COM_CALL_S */
#if !defined(_KIT_COM_CALLEQ_S)
#  define _KIT_COM_CALLEQ_S(_var,_object,_method) \
          if(_object != NULL){ _var=_KIT_COM_CALL(_object,_method) }
#endif /* _KIT_COM_CALLEQ_S */



#endif /* _KIT_W32_PRIVMACRO_H */
"
QVweD06E,fstr.h,Kitomas,C,Friday 21st of July 2023 05:04:10 AM CDT,"//calling outside main thread is not recommended
#ifndef _FSTR_H
#define _FSTR_H



#ifndef FSTR_LEN
# define FSTR_LEN 2048
#endif
#if FSTR_LEN < 2
#  error ""length of fstr_ cannot be less than 2""
#endif

#include <stdarg.h>
#include <stdio.h>
extern char fstr_[FSTR_LEN];
extern char* fstr(const char* fmt, ...);


#ifndef FSTR_NO_WCHAR
#ifndef FSTRW_LEN
# define FSTRW_LEN 1024
#endif
#if FSTRW_LEN < 2
#  error ""length of fstrw_ cannot be less than 2""
#endif

#include <wchar.h>
wchar_t fstrw_[FSTRW_LEN];
wchar_t* fstrw(const wchar_t* fmt, ...);
#endif /* FSTR_NO_WCHAR */



#endif /* _FSTR_H */
"
FsS2Dbwj,fstr.c,Kitomas,C,Friday 21st of July 2023 05:03:25 AM CDT,"#include <fstr.h>



char fstr_[FSTR_LEN];
char* fstr(const char* fmt, ...){
  va_list args;
  va_start(args, fmt);
  vsprintf_s((char*)fstr_, FSTR_LEN-1, fmt, args);
  va_end(args);
  fstr_[FSTR_LEN-1]=0; //just in case
  return (char*)fstr_;
}


#ifndef FSTR_NO_WCHAR
wchar_t fstrw_[FSTRW_LEN];
wchar_t* fstrw(const wchar_t* fmt, ...){
  va_list args;
  va_start(args, fmt);
  vswprintf_s((wchar_t*)fstrw_, (FSTRW_LEN/sizeof(wchar_t))-1, fmt, args);
  va_end(args);
  fstrw_[(FSTRW_LEN/sizeof(wchar_t))-1]=0;
  return (wchar_t*)fstrw_;
}
#endif /* FSTR_NO_WCHAR */"
0makqqqS,entry point after,Kitomas,C,Friday 21st of July 2023 05:02:20 AM CDT,"int WINAPI ENTRY_POINT(HISTANCE hInst, HINSTANCE hPrevInst, LPSTR args, int nCmdShow){
  printf(""Hello world!\n"");
  return 0;
}"
McJjB4ey,entry point before,Kitomas,C,Friday 21st of July 2023 05:01:25 AM CDT,"#ifdef RELEASE_BUILD
int WINAPI WinMain
#else
int WINAPI _WinMain
#endif
(HINSTANCE hInst, HINSTANCE hPrevInst, LPSTR args, int nCmdShow){
  printf(""Hello world!\n"");
  return 0;
}

#ifndef RELEASE_BUILD
int main(){
  return _WinMain(GetModuleHandleA(NULL),NULL,GetCommandLineA(),SW_SHOW);
}
#endif"
