id,title,username,language,date,content
fx8YPKgC,Untitled,Toluvaa,Java,Tuesday 30th of April 2024 06:51:04 AM CDT,"class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null)
        {
            return true;
        }   
        ListNode r=rev(head);
        while(head!=null && r!=null)
        {
            if(head.val!=r.val)
            {
                return false;
            }
            head=head.next;
            r=r.next;
        }
        return true;
    }
    public ListNode rev(ListNode head)
    {
        if(head==null || head.next==null)
        {
            return head;
        }
        ListNode a=rev(head.next);
        head.next.next=head;
        head.next=null;

        return a;
    }
}"
JWEGiTSy,Untitled,AlabamaHit,Python,Tuesday 30th of April 2024 06:44:53 AM CDT,"import mido
import tkinter as tk
from tkinter import messagebox
import threading
import webbrowser
import time
import subprocess
import ctypes
import os

class MidiKeyboard:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title(""MIDI Keyboard"")
        self.root.resizable(False, False)  # Disable window resizing
        self.root.state('zoomed')  # Prevent window from being maximized
        self.device_name = ""USB Midi  0""  # Automatically connect to ""USB Midi 0""
        try:
            self.inport = mido.open_input(self.device_name)
            close_button = tk.Button(self.root, text=""Close Program"", command=self.close_program)
            close_button.pack(padx=20, pady=20)  # Add padding around the button
            self.root.protocol(""WM_DELETE_WINDOW"", self.hide_app)  # Handle close button to hide the app
            self.root.withdraw()  # Hide the app initially
            self.root.update_idletasks()  # Ensure all widgets are updated
            self.center_window()  # Center the window on the monitor
            self.root.deiconify()  # Show the window after centering
            self.last_key_press_time = time.time()
            self.debounce_time = 0.5  # Adjust debounce time as needed
        except OSError:
            messagebox.showerror(""Error"", f""Could not connect to MIDI device: {self.device_name}"")

    def center_window(self):
        # Center the window on the monitor
        width = self.root.winfo_width()
        height = self.root.winfo_height()
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        x = (screen_width - width) // 2
        y = (screen_height - height) // 2
        self.root.geometry(f'+{x}+{y}')

    def handle_key_press(self, i):
        current_time = time.time()
        if current_time - self.last_key_press_time > self.debounce_time:
            # Trigger action associated with MIDI key press
            print(f""Key {i} was pressed"")
            if i == 36:  # MIDI note number 36
                webbrowser.open_new_tab(""https://chat.openai.com/"")

            elif i == 38:  # MIDI note number 38
                webbrowser.open_new_tab(""https://www.youtube.com"")

            elif i == 40:  # MIDI note number 40
                webbrowser.open_new_tab(""https://www.instagram.com"")

            elif i == 42:  # MIDI note number 42
                webbrowser.open_new_tab(""https://www.messenger.com"")

            elif i == 44:  # MIDI note number 44
                try:
                    # Replace ""reaper.exe"" with the actual executable name if necessary
                    subprocess.Popen([""C:\\Program Files\\REAPER (x64)\\reaper.exe""])
                except FileNotFoundError:
                    messagebox.showerror(""Error"", ""Reaper executable not found."")

            elif i == 46:  # MIDI note number 46
                def openhu():
                    return webbrowser.open_new_tab(""http:www.google.com"")                    
                openhu()  # Calls the nested THIS function you made. It's an example how to embed function.
                    
            elif i == 47:  # MIDI note number 47
                user_home = os.path.expanduser(""~"")
                if user_home:
                    videos_folder = os.path.join(user_home, ""Videos"")
                    subprocess.Popen(f'explorer ""{videos_folder}""')
                else:
                    print(""Failed to determine user's home directory."")


            elif i == 94:  # MIDI note number 94
                self.show_app()  # Bring up the GUI when note 94 is played

            self.last_key_press_time = current_time

    def run(self):
        threading.Thread(target=self.read_midi).start()
        self.root.mainloop()

    # Method to hide the application
    def hide_app(self):
        self.root.withdraw()

    # Method to bring the application back to the foreground
    def show_app(self):
        self.root.deiconify()

    # Method to close the program entirely
    def close_program(self):
        if hasattr(self, 'inport'):
            self.inport.close()
        self.root.destroy()

    # Reads the midi and reports to console??
    def read_midi(self):
        for msg in self.inport:
            if msg.type == 'note_on':
                self.handle_key_press(msg.note)

keyboard = MidiKeyboard()
keyboard.run()
"
CxErignA,OOAD-HW2,fuadfatali,Java,Tuesday 30th of April 2024 06:39:16 AM CDT,"import java.util.Date;
import java.util.List;
import java.util.ArrayList;

// Base class for all products
class Product {
    protected int id;
    protected String name;
    protected String description;
    protected float price;
    protected float amount;
    protected Date expiryDate;

    public Product(int id, String name, String description, float price, float amount, Date expiryDate) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.price = price;
        this.amount = amount;
        this.expiryDate = expiryDate;
    }

    public void setPrice(float newPrice) {
        this.price = newPrice;
    }

    public void setDescription(String newDescription) {
        this.description = newDescription;
    }
}

class MeatProduct extends Product {
    public MeatProduct(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class DairyItem extends Product {
    public DairyItem(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class FreshProduct extends Product {
    public FreshProduct(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class ChilledItem extends Product {
    public ChilledItem(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class SmokingItem extends Product {
    public SmokingItem(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class BeverageItem extends Product {
    public BeverageItem(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class AlcoholicBeverage extends Product {
    public AlcoholicBeverage(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class BreadProduct extends Product {
    public BreadProduct(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class DessertItem extends Product {
    public DessertItem(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

class PersonalCareProduct extends Product {
    public PersonalCareProduct(int id, String name, String description, float price, Date expiryDate) {
        super(id, name, description, price, 0, expiryDate);
    }
}

// Order class
class Order {
    private int id;
    private User user;
    private List<Product> products;
    private float totalPrice;
    private String status;
    private Courier courier;

    public Order(int id, User user) {
        this.id = id;
        this.user = user;
        this.products = new ArrayList<>();
        this.status = ""New"";
    }

    public void addProduct(Product product) {
        products.add(product);
        totalPrice += product.price;
    }

    public float getTotalPrice() {
        return totalPrice;
    }

    public void setStatus(String status) {
        this.status = status;
    }
}

// User management
class User {
    private int id;
    private String fullName;
    private String address;
    private List<Card> cards;
    private String username;
    private String password;

    public User(int id, String fullName, String address, String username, String password) {
        this.id = id;
        this.fullName = fullName;
        this.address = address;
        this.username = username;
        this.password = password;
        this.cards = new ArrayList<>();
    }

    public void addCard(Card card) {
        cards.add(card);
    }

    public void changePassword(String newPassword) {
        this.password = newPassword;
    }
}

// Payment system
abstract class Payment {
    public abstract void confirmPayment();
}

class CardPayment extends Payment {
    private String cardNumber;

    public CardPayment(String cardNumber) {
        this.cardNumber = cardNumber;
    }

    public boolean verifyBankCard() {
        // Placeholder for card verification logic
        return true;
    }

    @Override
    public void confirmPayment() {
        if (verifyBankCard()) {
            System.out.println(""Payment confirmed via card."");
        }
    }
}

class CashPayment extends Payment {
    private float cashAmount;

    public CashPayment(float cashAmount) {
        this.cashAmount = cashAmount;
    }

    @Override
    public void confirmPayment() {
        System.out.println(""Payment confirmed with cash."");
    }
}

// Admin class
class Admin {
    private int id;
    private String fullName;

    public Admin(int id, String fullName) {
        this.id = id;
        this.fullName = fullName;
    }

    public void addProduct(Product product) {
        // Add product logic
    }

    public void deleteProduct(Product product) {
        // Delete product logic
    }

    public void editProduct(Product product) {
        // Edit product logic
    }

    public void createCoupon(Coupon coupon) {
        // Create coupon logic
    }
}

// Address and coupon management
class Address {
    private String name;
    private String address;

    public Address(String name, String address) {
        this.name = name;
        this.address = address;
    }
}

class Coupon {
    private String code;
    private float discountPercentage;
    private Date expiryDate;

    public Coupon(String code, float discountPercentage, Date expiryDate) {
        this.code = code;
        this.discountPercentage = discountPercentage;
        this.expiryDate = expiryDate;
    }
}

// Reporting system
class Report {
    private Date day;
    private List<Order> orders;
    private float revenue;

    public Report(Date day, List<Order> orders, float revenue) {
        this.day = day;
        this.orders = orders;
        this.revenue = revenue;
    }

    public void sendToAdmin() {
        // Send report to admin logic
    }
}

// Staff and specific roles
class Staff extends User {
    private float yearsOfExperience;
    private boolean isOnline;

    public Staff(int id, String fullName, String address, String username, String password, float yearsOfExperience) {
        super(id, fullName, address, username, password);
        this.yearsOfExperience = yearsOfExperience;
        this.isOnline = false;
    }

    public void changeOrderStatus(Order order, String newStatus) {
        order.setStatus(newStatus);
    }
}

class Courier extends Staff {
    private boolean isDelivering;

    public Courier(int id, String fullName, String address, String username, String password, float yearsOfExperience) {
        super(id, fullName, address, username, password, yearsOfExperience);
        this.isDelivering = false;
    }

    public void takeOrder(Order order) {
        this.isDelivering = true;
        // Logic to handle order delivery
    }

    public void deliverOrder(Order order) {
        this.isDelivering = false;
        // Logic to finalize order delivery
    }
}

class CustomerSupporter extends Staff {
    private boolean isOnSupport;

    public CustomerSupporter(int id, String fullName, String address, String username, String password, float yearsOfExperience) {
        super(id, fullName, address, username, password, yearsOfExperience);
        this.isOnSupport = false;
    }

    public void answerUser(User user) {
        // Answers will be here
    }
}
"
WPPkrwhU,lasdjghoieg89434,W_A_S_A_B_I,C++,Tuesday 30th of April 2024 06:38:51 AM CDT,"#include <algorithm>
#include <iostream>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result = 0;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    int id;
    int relevance;
};

class SearchServer {
public:
    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {
            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document) {
        const vector<string> words = SplitIntoWordsNoStop(document);
        documents_.push_back({ document_id, words });
    }

    vector<Document> FindTopDocuments(const string& raw_query) const {
        const Query query_words = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query_words);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
            return lhs.relevance > rhs.relevance;
        });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:
    struct DocumentContent {
        int id = 0;
        vector<string> words;
    };

    struct Query {
        set<string> plus_words;  //Слова участвующие в поиске 
        set<string> minus_words; //Слова исключающие документы из результатов поиска
    };

    vector<DocumentContent> documents_;

    set<string> stop_words_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    vector<Document> FindAllDocuments(const Query& query_words) const {
        vector<Document> matched_documents;
        for (const auto& document : documents_) {
            const int relevance = MatchDocument(document, query_words);
            if (relevance > 0) {
                matched_documents.push_back({ document.id, relevance });
            }
        }
        return matched_documents;
    }

    static int MatchDocument(const DocumentContent& content, const Query& query_words) {
        if (query_words.plus_words.empty()) {
            return 0;
        }
        set<string> matched_words;
        for (const string& word : content.words) {
            if (query_words.minus_words.count(word) != 0) {
                return 0;
            }
            //Исключить повторяющиеся слова
            if (matched_words.count(word) != 0) {
                continue;
            }
            if (query_words.plus_words.count(word) != 0) {
                matched_words.insert(word);
            }
        }
        return static_cast<int>(matched_words.size());
    }

    Query ParseQuery(const string& query_text) const{
        Query query_words{};
        for (const string& word : SplitIntoWordsNoStop(query_text)) {
            if (word[0] == '-') {
                query_words.minus_words.insert(word.substr(1));
            }
            else {
                query_words.plus_words.insert(word);
            }
        }
        return query_words;
    }
};

SearchServer CreateSearchServer() {
    SearchServer search_server;
    search_server.SetStopWords(ReadLine());

    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        search_server.AddDocument(document_id, ReadLine());
    }

    return search_server;
}

int main() {
    const SearchServer search_server = CreateSearchServer();

    const string query = ReadLine();
    for (const auto&[document_id, relevance] : search_server.FindTopDocuments(query)) {
        cout << ""{ document_id = ""s << document_id << "", ""
            << ""relevance = ""s << relevance << "" }""s << endl;
    }
}"
4zy5CJXL,KlasaWorker,cuniszkiewicz,C#,Tuesday 30th of April 2024 06:36:53 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace abstractClass_06_06_2017
{
    class Program
    {
        interface IWorker
        {
            string Name { get; set; }
            string Surname { get; set; }
            void SetSalary(int a);
            void PaySalary();   
        }
        interface IManager
        {
            int ManagerAdd { get; set; }
        }
        abstract class Worker : IWorker
        {
            private string _name;
            private string _surname;
            private int _salary;


            public string Name
            {
                get { return _name; }
                set { _name = value; }
            }
            public string Surname
            {
                get { return _surname; }
                set { _surname = value; }
            }
            public int Salary
            {
                get { return _salary; }
                set
                {
                    if (value > 0)
                        _salary = value;
                    else
                        _salary = 2000;
                }
            }

            public void SetSalary(int p = 2000) { Salary = p; }
            public virtual void PaySalary() { Console.Write($""Salary to pay: {Salary} zł""); }

            protected Worker()
            {
                SetSalary();
            }
        }

        class Manager : Worker, IWorker, IManager
        {
            private int _managerAdd;
            private int _monthlyBonus;
            public int ManagerAdd
            {
                get { return _managerAdd; }
                set
                {
                    if (value > 0)
                        _managerAdd = value;
                    else
                        _managerAdd = 2000;
                }
            }
            public int MonthlyBonus
            {
                get { return _monthlyBonus; }
                set
                {
                    if (value > 0)
                        _monthlyBonus = value;
                    else
                        _monthlyBonus = 1000;
                }
            }
            public override void PaySalary()
            {
                Console.WriteLine($""Salary to pay: {Salary + ManagerAdd + MonthlyBonus} zł"");
            }
            public Manager()
            {
                ManagerAdd = 2000;
                MonthlyBonus = 1000;
            }

        }

        class Seller : Worker
        {
            private int _monthlyBonus;
            public int MonthlyBonus
            {
                get { return _monthlyBonus; }
                set
                {
                    if (value > 0)
                        _monthlyBonus = value;
                    else
                        _monthlyBonus = 500;
                }
            }
            public override void PaySalary()
            {
                base.PaySalary();
                Console.Write($"" and additional {MonthlyBonus} zł monthly bonus"");
            }
            public Seller()
            {
                MonthlyBonus = 500;
            }
        }

        static void Main(string[] args)
        { 
            Manager manager = new Manager();
            manager.PaySalary();
            Seller seller = new Seller();
            seller.PaySalary();

            Console.ReadKey();
        }
    }
}
"
DiWrRThr,snowybot 30/4/2024 @9:35pm,coinwalk,JavaScript,Tuesday 30th of April 2024 06:35:13 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = 0.00001;
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*20);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var belance = olsenest;
var solvert = olsenest;
var silvery = olsenest;
var bob = false;
var lumps = ((Math.floor(olsenest/tens))*tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
lumps = ((Math.floor(belance/tens))*tens);
if ((belance>(olsen-dust))&&(belance<(olsen+dust))){
bob = true;
}
if (belance<(olsen-dust)){
bob = false;
}
if (belance>(olsen+dust)){
bob = false;
}
if ((belance>(lumps+sevens))&&(belance<(lumps+eights))&&(!bob)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((((belance-(solvert-hundreds))-(bolux*2))<=0)&&(belance<(lumps+sevens))){
    bolux = monkey;
    olsen = 0;
    solvert = parseFloat(belance);
    silvery = parseFloat(belance);
}
if ((((belance-silvery)-(bolux*4))<=0)&&(belance>=(silvery+tens))&&(belance<(lumps+sevens))){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
    solvert = parseFloat(belance);
}
if (belance>silvery){
silvery= parseFloat(belance);
}
if (belance>=1440){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();
"
DQwXtFFr,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 💰,ssss50w,GetText,Tuesday 30th of April 2024 06:32:44 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
30 April 2024"
GJVUjzv1,regex aut test,AlexSSH,C++,Tuesday 30th of April 2024 06:22:34 AM CDT,"#include <algorithm>
#include <iostream>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

// -------- Шаблоны тестирующих функций ----------
#pragma region TEST_LIB

template<typename T, typename U>
void
AssertEqualImpl(const T &t, const U &u, const std::string &t_str, const std::string &u_str, const std::string &file,
                const std::string &func, unsigned line, const std::string &hint) {
    if (t != u) {
        std::cout << std::boolalpha;
        std::cout << file << ""("" << line << ""): "" << func << "": "";
        std::cout << ""ASSERT_EQUAL("" << t_str << "", "" << u_str << "") failed: "";
        std::cout << t << "" != "" << u << ""."";
        if (!hint.empty()) {
            std::cout << "" Hint: "" << hint;
        }
        std::cout << std::endl;
        abort();
    }
}

#define ASSERT_EQUAL(a, b) AssertEqualImpl((a), (b), #a, #b, __FILE__, __FUNCTION__, __LINE__, """"s)

#define ASSERT_EQUAL_HINT(a, b, hint) AssertEqualImpl((a), (b), #a, #b, __FILE__, __FUNCTION__, __LINE__, (hint))

void
AssertImpl(bool value, const std::string &expr_str, const std::string &file, const std::string &func, unsigned line,
           const std::string &hint) {
    if (!value) {
        cout << file << ""(""s << line << ""): ""s << func << "": ""s;
        cout << ""ASSERT(""s << expr_str << "") failed.""s;
        if (!hint.empty()) {
            cout << "" Hint: ""s << hint;
        }
        cout << endl;
        abort();
    }
}

#define ASSERT(expr) AssertImpl(!!(expr), #expr, __FILE__, __FUNCTION__, __LINE__, """"s)

#define ASSERT_HINT(expr, hint) AssertImpl(!!(expr), #expr, __FILE__, __FUNCTION__, __LINE__, (hint))

template<typename T, typename U>
void RunTestImpl(T &test, U &func) {
    test();
    std::cerr << func << "" OK"" << std::endl;
}

#define RUN_TEST(func)  RunTestImpl((func), #func)

#pragma endregion TEST_LIB
// -------- Конец шаблонов тестирующих функций ----------

class Automation {
public:
    explicit Automation(const std::string &regexp) :
     // TODO
    }

    [[nodiscard]] bool recognizes(std::string_view text) const {
        // TODO
    }

private:
 // TODO

};

class AutomationTester {
    // -------- Тестирующие функций ----------

#pragma region TESTS

    static void Test5thSymbolFromEndIs1() {
        Automation automation(""""); // 5-ый символ с конца равен 1

        ASSERT(!automation.recognizes(""""));

        ASSERT(automation.recognizes(""10000""));
        ASSERT(automation.recognizes(""10001""));
        ASSERT(automation.recognizes(""010000""));
        ASSERT(automation.recognizes(""110000""));
        ASSERT(automation.recognizes(""010001""));
        ASSERT(automation.recognizes(""110001""));

        ASSERT(!automation.recognizes(""00000""));
        ASSERT(!automation.recognizes(""00001""));
        ASSERT(!automation.recognizes(""000000""));
        ASSERT(!automation.recognizes(""100000""));
        ASSERT(!automation.recognizes(""000001""));
        ASSERT(!automation.recognizes(""100001""));
    }

    static void Test11After00() {
        Automation automation(""""); // За каждой парой символов 00 следует пара символов 11

        ASSERT(automation.recognizes(""""));

        ASSERT(automation.recognizes(""11""));
        ASSERT(automation.recognizes(""011""));
        ASSERT(automation.recognizes(""01""));
        ASSERT(automation.recognizes(""0101""));

        ASSERT(automation.recognizes(""0011""));
        ASSERT(automation.recognizes(""00110011""));
        ASSERT(automation.recognizes(""110011""));
        ASSERT(automation.recognizes(""001100""));
        
        ASSERT(!automation.recognizes(""00""));
        ASSERT(!automation.recognizes(""001""));
        ASSERT(!automation.recognizes(""000011""));
    }

    static void Test101NotInText() {
        Automation automation(""""); // Не содержится 101 в качестве подстроки

        ASSERT(automation.recognizes(""""));

        ASSERT(automation.recognizes(""000""));
        ASSERT(automation.recognizes(""111""));
        ASSERT(automation.recognizes(""0""));
        ASSERT(automation.recognizes(""1""));


        ASSERT(!automation.recognizes(""101""));
        ASSERT(!automation.recognizes(""01010""));
        ASSERT(!automation.recognizes(""11011""));
        ASSERT(!automation.recognizes(""1010""));
        ASSERT(!automation.recognizes(""0101""));
    }

#pragma endregion TESTS

    // -------- Конец тестирующих функций ----------

public:
    static void Test() {
        RUN_TEST(Test5thSymbolFromEndIs1);
        RUN_TEST(Test11After00);
        RUN_TEST(Test101NotInText);
    }
};

int main() {
    AutomationTester::Test();

    return 0;
}
"
AJeeERWK,Untitled,35657,C++,Tuesday 30th of April 2024 06:12:30 AM CDT,"#include <set>
#include <string>
#include <iostream>

using namespace std;


// Человек
class Person {
public:
    Person(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {};

    string GetName() const {
        return name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }
    // изменили расположение полей в родительском классе
    string name_;

protected:
    int age_;

private:
    string gender_;
};



// Программист. Знает несколько языков программирования
class Programmer : public Person {
public:
    Programmer(string name, int age, string gender) : Person(name, age, gender) {}; // если нет конструктора по умолчанию, а есть параметризованный конструктор, то обязательно вызываем его

    void AddProgrammingLanguage(string language) {
        programming_languages_.insert(language);
    }
    bool CanProgram(string language) const {
        return programming_languages_.count(language);
    }

    // добавили методов программисту для обращения полям родительского класса
    void PrintName() const {
        cout << name_ << endl;
    }
    void PrintAge() const {
        cout << age_ << endl;
    }
    /*void PrintGender() const {
        cout << gender_ << endl;
    }*/

private:
    set<string> programming_languages_;
};


// Рабочий. Владеет несколькими специальностями
class Worker : public Person {
public:
    Worker(string name, int age, string gender) : Person(name, age, gender) {};

    void AddSpeciality(string speciality) {
        specialties_.insert(speciality);
    }
    bool HasSpeciality(string speciality) const {
        return specialties_.count(speciality);
    }

private:
    set<string> specialties_;
};

int main() {
    setlocale(LC_ALL, ""ru"");
    Programmer pr(""Иван"", 22, ""man"");
    Worker wk(""Гена"", 23, ""man"");

    // поле public
    //cout << pr.name_ << endl; // доступно из внешнего кода (через точку)
    //cout << pr.GetName() << endl;// можем обращаться внутри родительского класса (GetName())
    //pr.PrintName();// можем обращаться внутри дочернего класса (PrintName())

    // поле private
    //cout << pr.gender_ << endl; // здесь ошибка - не доступно из внешнего кода (через точку)
    //cout << pr.GetGender() << endl; //можем обращаться внутри родительского класса (GetGender())
    //pr.PrintGender(); // не можем обращаться внутри дочернего класса(PrintGender() не заработает)

    // поле protected
    //cout << pr.age_ << endl; // здесь ошибка - не доступно из внешнего кода (через точку)
    //cout << pr.GetAge() << endl;// можем обращаться внутри родительского класса (GetAge())
    //pr.PrintAge();// можем обращаться внутри дочернего класса(PrintAge())
}"
UgeRtbPv,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Tuesday 30th of April 2024 06:08:25 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_523554.pdf

Working as of:
30 April 2024"
ubmpVnma,snowybot 30/4/2024 @9pm,coinwalk,JavaScript,Tuesday 30th of April 2024 06:01:27 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = 0.00001;
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*20);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var four = (monkey*4);
var olsen = 0;
var belance = olsenest;
var bill = olsenest;
var bekon = olsenest;
var belll = (olsenest*5);
var shit = olsenest;
var fovox = olsenest;
var oxen = ((Math.ceil(fovox/tens))*tens);
var silvery = olsenest;
var bob = false;
var stemp = (bolux*2.9);
var stemoise = (bolux*4.9);
jolly = (stemp+hundreds)
var smokey = (belance-silvery);
var snort = (smokey-stemoise);
var smack = (smokey-jolly);
var lumps = ((Math.floor(olsenest/tens))*tens);
var sever = (lumps+sevens);
var eye = (lumps+eights);
var samuel = (olsen-dust);
var frances = (olsen+dust);
var smaller = (silvery+tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
lumps = ((Math.floor(belance/tens))*tens);
sever = (lumps+sevens);
eye = (lumps+eights);
stemp = (bolux*2.9);
stemoise = (bolux*4.9);
jolly = (stemp+hundreds)
smokey = (belance-silvery);
snort = (smokey-stemoise);
smack = (smokey-jolly);
smaller = (silvery+tens);
samuel = (olsen-dust);
frances = (olsen+dust);
if ((belance>samuel)&&(belance<frances)){
bob = true;
}
if (belance<samuel){
bob = false;
}
if (belance>frances){
bob = false;
}
if ((belance>sever)&&(belance<eye)&&(!bob)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((smack<=0)&&(belance<sever)){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
}
if ((snort<=0)&&(belance>=smaller)&&(belance<sever)){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
}
if (belance>=1440){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();
"
KAWqUNVK,data912,TestGuy1,JSON,Tuesday 30th of April 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd96c5c772f4bb76683f2f5eea17ac55d172fffb354655f39383f2b22391b42f00cd4f5a6d59daf81c816a30309e72e20f4a1f7f8038c21caac334a457794c2f24e787a65d5e79671566d760ead61c93272ddedc447abb4f36537820da33f5cc0da3a2d403d2384a6de64eb81e26ae81b42b01ef52faa848f7839b94c279bac7b',
  otherdata: [
    '9e52ac13e7da0c3632f1ead5eaf29379',
    '1c616571f5dc22970c28ddf22b24f68f',
    'dba91aea8e5a812621109c4949cc72d0',
    '8a48331088c7d39f4e5489a711699880',
    'a6d16c0506aa470a7dd58e6404cfdf91',
    'ecd1478263eca51d6764ebf6e3898c73',
    '9c91fb42f2459448984dc2231eb4d2de',
    '4a2de3b93feb62f2e556c204b2fe6457'
  ]
}"
WWZ0zCQG,Untitled,35657,C++,Tuesday 30th of April 2024 05:55:48 AM CDT,"#include <set>
#include <string>
#include <iostream>

using namespace std;


// фигура
class Shape {

public:

	string GetColor() {
		return color_;
	}

	void SetColor(string color) {
		color_ = color;
	}

private:
	string color_ = ""black"";
};


// прямоугольник
class Rectangle : public Shape {

public:
	Rectangle(double a, double b) : a_(a), b_(b) {}

	double GetArea() {
		return a_ * b_;
	}

private:
	double a_;
	double b_;
};

// треугольник
class Triangle : public Shape {

public:
	Triangle(double a, double b, double c) : a_(a), b_(b), c_(c) {}

	double GetArea() {
		double p = (a_ + b_ + c_) / 2;
		return sqrt(p * (p - a_) * (p - b_) * (p - c_));
	}

private:
	double a_;
	double b_;
	double c_;
};

int main() {
   
	Rectangle rec(4, 5);
	Triangle tr(3, 4, 3);

	cout << tr.GetArea() << endl;
	cout << rec.GetArea() << endl;

	cout << rec.GetColor() << endl;
	rec.SetColor(""white"");
	cout << rec.GetColor() << endl;
}"
F4iDVZQE,test,nicolaslagios,JavaScript,Tuesday 30th of April 2024 05:34:40 AM CDT,"/* general javascript */
    
    //wpml main menu language switcher
	var grlang = document.querySelectorAll(""a[title='GR']"")[0];
	var grhref = grlang.attributes[1].value;
	var enlang = document.querySelectorAll(""a[title='EN']"")[0];
	var enhref = enlang.attributes[1].value;
	grlang.attributes[0].value = 'EN';
	grlang.childNodes[0].innerText = 'EN';
	grlang.attributes[1].value = enhref;
	enlang.attributes[0].value = 'GR';
	enlang.childNodes[0].innerText = 'GR';
	enlang.attributes[1].value = grhref;


/* javascript specific code */
    
    /* Register Interest English */
    document.addEventListener('DOMContentLoaded', function () {
        if (window.location.href.includes('/en/register-interest/')) { //check if is the english interest page
            
            /* Sector (Brand Profile Categories) duplication for Salesforce (send hidden sector to salesforce) */
                // ta checkboxes
                const list1 = document.getElementById('wpforms-1386-field_20');
                const list2 = document.getElementById('wpforms-1386-field_37');
                const items1 = list1.querySelectorAll('li input[type=""checkbox""]');
                const items2 = list2.querySelectorAll('li input[type=""checkbox""]');

                list1.addEventListener('change', function(event) { //listener gia thn public list
                    const targetCheckbox = event.target;
                    const index = Array.from(items1).indexOf(targetCheckbox);
                    if (index !== -1) {
                        items2[index].checked = targetCheckbox.checked;
                    }
                });

                list2.addEventListener('change', function(event) { //listener gia thn hidden list
                    const targetCheckbox = event.target;
                    const index = Array.from(items2).indexOf(targetCheckbox);
                    if (index !== -1) {
                        items1[index].checked = targetCheckbox.checked;
                    }
                });

            /* Add user IP to IP Hidden Field for Salesforce */
                function userIPField(){
                        const inputField = document.querySelector('#wpforms-1386-field_36-container > input'); //field input
                        function getUserIP(onSuccess, onError) { //fetch the ip
                            fetch('https://api.ipify.org?format=json')
                            .then(response => response.json())
                            .then(data => {
                                const ipAddress = data.ip || '0.0.0.0';
                                onSuccess(ipAddress);
                            })
                            .catch(error => {
                                console.error('Error fetching IP address:', error);
                                if (onError) {
                                    onError(error);
                                }
                            });
                        }
                        getUserIP(function(ipAddress) {
                            if(ipAddress) {
                                //console.log('User IP:', ipAddress);
                                if (inputField) {
                                    inputField.value = ipAddress;
                                } else {
                                    console.error('Input field not found');
                                }
                            } else {
                                console.log('Unable to determine user ip.');
                            }
                        });
                }
                userIPField();
        
            /* Add user Country to Country Hidden Field for Salesforce */
                function userCountryField(){
                        const inputField = document.querySelector('#wpforms-1386-field_35-container > input'); //field input
                        function getUserCountry(callback) { //fetch the country
                            fetch('https://ipapi.co/json/')
                            .then(response => response.json())
                            .then(data => {
                                const country = data.country_name;
                                callback(country);
                            })
                            .catch(error => {
                                console.error('Error fetching user country:', error);
                                callback(null);
                            });
                        }
                        getUserCountry(function(country) {
                            if(country) {
                                //console.log('User country:', country);
                                if (inputField) {
                                    inputField.value = country;
                                } else {
                                    console.error('Input field not found');
                                }
                            } else {
                                console.log('Unable to determine user country.');
                            }
                        });
                }
                userCountryField();
        }
    });

    /* News - Media Page JS */
    document.addEventListener('DOMContentLoaded', function () {
        if (window.location.href.includes(""/en/news-media/"")) { //αν είναι η αγγλική news media
			var targetElement = document.querySelector(""#e-n-tabs-title-7942"");
			targetElement.addEventListener('click', function () {
						document.getElementsByClassName('elementor-heading-title')[0].innerText = 'MEDIA KIT';
						var element = document.querySelector('.blog .elementor-element-e7443a4 > .e-con-inner');
			});
			var resetElement = document.querySelector(""#e-n-tabs-title-7941"");
			resetElement.addEventListener('click', function () {
				document.getElementsByClassName('elementor-heading-title')[0].innerText = 'NEWS & MEDIA';
			});
		} else if (window.location.href.includes(""/news-media/"")) { //αν είναι η ελληνική news media
			var targetElement = document.querySelector(""#e-n-tabs-title-7942"");
			targetElement.addEventListener('click', function () {
						document.getElementsByClassName('elementor-heading-title')[0].innerText = 'MEDIA KIT';
						var element = document.querySelector('.blog .elementor-element-e7443a4 > .e-con-inner');
			});
			var resetElement = document.querySelector(""#e-n-tabs-title-7941"");
			resetElement.addEventListener('click', function () {
				document.getElementsByClassName('elementor-heading-title')[0].innerText = 'ΝΕΑ';
			});
		}

        if (window.location.href.includes(""/news-media/"")) { //είτε ελληνική είτε αγγλική news media
            
            //αλλαγή πλάτους περιεχομένου 2ης καρτέλας
            var targetElement = document.querySelector(""#e-n-tabs-title-7942"");
            targetElement.addEventListener('click', function () {
                    if (window.matchMedia(""(min-width: 768px)"").matches) {
                        var element = document.querySelector('.blog .elementor-element-e7443a4 > .e-con-inner');
                        if (element.style.minWidth === ""100%"") {
                            element.style.minWidth = """";
                        } else {
                            element.style.minWidth = ""100%"";
                        }
                    }
            });
            var resetElement = document.querySelector(""#e-n-tabs-title-7941"");
            resetElement.addEventListener('click', function () {
                var element = document.querySelector('.blog .elementor-element-e7443a4 > .e-con-inner');
                element.style.minWidth = """";
            });

            //mapping ημερομηνίας
            document.querySelectorAll("".blog .elementor-post-date"").forEach(function(dateElement) {
                var currentDate = dateElement.innerText.trim();
                var mhnes = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""];
                var mhnesGreek = [""Ιανουαρίου"", ""Φεβρουαρίου"", ""Μαρτίου"", ""Απριλίου"", ""Μαΐου"", ""Ιουνίου"", ""Ιουλίου"", ""Αυγούστου"", ""Σεπτεμβρίου"", ""Οκτωβρίου"", ""Νοεμβρίου"", ""Δεκεμβρίου""];
        
                for (var i = 0; i < mhnes.length; i++) {
                    if (currentDate.includes(mhnesGreek[i])) {
                        var dateParts = currentDate.split("" "");
                        var day = dateParts[0];
                        var month = (i + 1).toString().padStart(2, '0');
                        var year = dateParts[2];
                        var formattedDate = day + '/' + month + '/' + year;
                        dateElement.innerText = formattedDate;
                        break;
                    }
                    if (currentDate.includes(mhnes[i])) {
                        var englishDate = new Date(currentDate);
                        var day = englishDate.getDate().toString().padStart(2, '0');
                        var month = (englishDate.getMonth() + 1).toString().padStart(2, '0');
                        var year = englishDate.getFullYear();
                        var formattedDate = day + '/' + month + '/' + year;
                        dateElement.innerText = formattedDate;
                        break;
                    }
                }
            });

        }
    });

    /* Single Post Page JS */
    document.addEventListener('DOMContentLoaded', function () {
        if (document.body.classList.contains(""single-post"")) {
            
            //κρύψιμο του τρέχοντος άρθρου
            let postID = document.getElementsByClassName(""single"")[0].classList[3].split(""-"").pop();
			let elements = document.getElementsByClassName('elementor-grid-item');
			for (let i = 0; i < elements.length; i++) {
				let elementID = elements[i].classList[2].split(""-"").pop();

				if (elementID === postID) {
					elements[i].style.display = 'none';
				}
			}

        }
    });"
GQqCJPc3,MO,Kambarych,C++,Tuesday 30th of April 2024 05:28:33 AM CDT,"#include <bits/stdc++.h>

using namespace std;

#define For(i, n)           for(int i = 0; i < n; ++i)
#define all(x)              (x).begin(),(x).end()
#define rall(x)             (x).rbegin(),(x).rend()
#define ls(x)               x+x+1
#define rs(x)               x+x+2
// #define endl                '\n'

#define ld                  long double
#define pii                 pair<int, int>
#define vt                  vector
#define ll                  long long

#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename \
enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
#define LOCAL
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
ris << ""("" << d.first << "", "" << d.second << "")"";
}
sim dor(rge<c> d) {
*this << ""["";
for (auto it = d.b; it != d.e; ++it)
    *this << "", "" + 2 * (it == d.b) << *it;
ris << ""]"";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) "" ["" << #__VA_ARGS__ "": "" << (__VA_ARGS__) << ""] ""

template<typename T> void read(vt<T> & a) {For(i, a.size()) cin >> a[i];}
template<typename T> void read2(vt<vt<T> > & a) {For(i, a.size()) read(a[i]);}
template<typename T> void print(vt<T> & a) {For(i, a.size()) cout << a[i] << "" ""; cout << endl;}
template<typename T> void print2(vt<vt<T> > & a) {For(i, a.size()) print(a[i]);}

const int MAX = 1e9;
const int MOD = 1000000007;
const ll  INF = 1e18;
const ld  PI  = 3.14159265358979323846;

struct calculator {
    int ans = 0;
    int l = 0, r = -1;
    vt<int> pre, nxt;

    calculator() {}

    calculator(vt<int> _pre, vt<int> _nxt) {
        pre = _pre;
        nxt = _nxt;
    }

    void add_left() {
        ans += nxt[l - 1] > r;
        l--;
    }

    void add_right() {
        ans += pre[r + 1] < l;
        r++;
    }

    void remove_left() {
        ans -= nxt[l] > r;
        l++;
    }

    void remove_right() {
        ans -= pre[r] < l;
        r--;
    }
};

int block_size = 500;

struct MO {
    calculator c;

    MO () {}

    MO (calculator c) : c(c) {}

    struct Query {
        int l, r, idx;
        bool operator<(Query other) const {
            return make_pair(l / block_size, r) <
                make_pair(other.l / block_size, other.r);
        }
    };

    vt<int> solve(vt<Query> queries) {
        vt<int> answers(queries.size());
        sort(queries.begin(), queries.end());

        // invariant: data structure will always reflect the range [cur_l, cur_r]
        for (Query q : queries) {
            while (c.l > q.l) c.add_left();
            while (c.r < q.r) c.add_right();
            while (c.l < q.l) c.remove_left();
            while (c.r > q.r) c.remove_right();
            answers[q.idx] = c.ans;
        }

        return answers;
    }
};


void solve() {
    int n; cin >> n;
    vt<int> a(n); read(a);
    vt<int> pre(n, -1), nxt(n, n);
    unordered_map<int, int> mp;
    For(i, n) {
        if (mp.find(a[i]) != mp.end()) {
            pre[i] = mp[a[i]];
        }
        mp[a[i]] = i;
    }
    mp.clear();
    for (int i = n - 1; i >= 0; i--) {
        if (mp.find(a[i]) != mp.end()) {
            nxt[i] = mp[a[i]];
        }
        mp[a[i]] = i;
    }
    calculator c = calculator(pre, nxt);
    MO mo = MO(c);
    vt<MO::Query> queries;

    int q; cin >> q;
    For(i, q) {
        int l, r; cin >> l >> r; l--, r--;
        queries.push_back(MO::Query{l, r, i});
    }

    vt<int> ans = mo.solve(queries);
    For(i, q) {
        cout << ans[i] << endl;
    }
}

// THE SOLUTION IS ALWAYS SIMPLE
// THE CODE IS ALWAYS SHORT

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifdef DEBUG
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    int T = 1;
    For(t, T) solve();
    return 0;
}"
Dwxz96wn,Untitled,35657,C++,Tuesday 30th of April 2024 05:01:23 AM CDT,"#include <set>
#include <string>
#include <iostream>

using namespace std;


// Человек
class Person {
public:
    Person(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {};

    string GetName() const {
        return ""Моё имя "" + name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }

private:
    string name_;
    int age_;
    string gender_;
};



// Программист. Знает несколько языков программирования
class Programmer : public Person {
public:
    Programmer(string name, int age, string gender) : Person(name, age, gender) {}; // если нет конструктора по умолчанию, а есть параметризованный конструктор, то обязательно вызываем его

    void AddProgrammingLanguage(string language) {
        programming_languages_.insert(language);
    }
    bool CanProgram(string language) const {
        return programming_languages_.count(language);
    }

private:
    set<string> programming_languages_;
};


// Рабочий. Владеет несколькими специальностями
class Worker : public Person {
public:
    Worker(string name, int age, string gender) : Person(name, age, gender) {};

    void AddSpeciality(string speciality) {
        specialties_.insert(speciality);
    }
    bool HasSpeciality(string speciality) const {
        return specialties_.count(speciality);
    }

private:
    set<string> specialties_;
};

int main() {
    setlocale(LC_ALL, ""ru"");
    Programmer pr(""Иван"", 22, ""man"");
    Worker wk(""Гена"", 23, ""man"");
    pr.AddProgrammingLanguage(""Java"");
    cout << boolalpha << pr.CanProgram(""Java"") << endl;
    cout << pr.GetName() << "" "" << pr.GetAge() << endl;
    cout << wk.GetName() << "" "" << wk.GetAge() << endl;
}"
Y59amDTj,Untitled,35657,C++,Tuesday 30th of April 2024 05:00:54 AM CDT,"#include <set>
#include <string>
#include <iostream>

using namespace std;


// Человек
class Person {
public:
    Person(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {};

    string GetName() const {
        return name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }

private:
    string name_;
    int age_;
    string gender_;
};



// Программист. Знает несколько языков программирования
class Programmer : public Person {
public:
    Programmer(string name, int age, string gender) : Person(name, age, gender) {}; // если нет конструктора по умолчанию, а есть параметризованный конструктор, то обязательно вызываем его

    void AddProgrammingLanguage(string language) {
        programming_languages_.insert(language);
    }
    bool CanProgram(string language) const {
        return programming_languages_.count(language);
    }

private:
    set<string> programming_languages_;
};


// Рабочий. Владеет несколькими специальностями
class Worker : public Person {
public:
    Worker(string name, int age, string gender) : Person(name, age, gender) {};

    void AddSpeciality(string speciality) {
        specialties_.insert(speciality);
    }
    bool HasSpeciality(string speciality) const {
        return specialties_.count(speciality);
    }

private:
    set<string> specialties_;
};

int main() {
    Programmer pr(""Ivan"", 22, ""man"");
    Worker wk(""Gena"", 23, ""man"");
    pr.AddProgrammingLanguage(""Java"");
    cout << boolalpha << pr.CanProgram(""Java"") << endl;
    cout << pr.GetName() << "" "" << pr.GetAge() << endl; // наряду с собственными методами, класс-наследник может пользоваться родительскими
    cout << wk.GetName() << "" "" << wk.GetAge() << endl;
}"
65crbvL8,Untitled,35657,C++,Tuesday 30th of April 2024 05:00:10 AM CDT,"
#include <set>
#include <string>

using namespace std;


// Программист. Знает несколько языков программирования
class Programmer {
public:
    Programmer(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {};

    string GetName() const {
        return name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }

     void AddProgrammingLanguage(string language) {
        programming_languages_.insert(language);
    }
    bool CanProgram(string language) const {
        return programming_languages_.count(language);
    }

private:
    string name_;
    int age_;
    string gender_;
    set<string> programming_languages_;
};


// Рабочий. Владеет несколькими специальностями
class Worker {
public:
    Worker(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {};

    string GetName() const {
        return name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }

    void AddSpeciality(string speciality) {
        specialties_.insert(speciality);
    }
    bool HasSpeciality(string speciality) const {
        return specialties_.count(speciality);
    }

private:
    string name_;
    int age_;
    string gender_;
    set<string> specialties_;
};"
wqzGD7UP,CRUD FastCreate deps,Ruslan_Rayanov,T-SQL,Tuesday 30th of April 2024 04:39:36 AM CDT,"CREATE PROCEDURE [dbo].[crud_deps_fastCreate]
	@filters CRUDFilterParameter READONLY,
	@text nvarchar(256),
	@username nvarchar(32)
AS
BEGIN
	-- создание сущности в таблице по 1 полю @text

	-- извлечение параметров из URL (в случае если наша сущность зависит от родительской сущности)
	--declare @filterItemID int
	--select @filterItemID = try_cast(Value as int) from @filters where [Key] = 'itemID'
	
	
	-- проверка на существование
	declare @id int
	select @id = id from hr_departments where code = @text or name = @text
	if(@id>0) begin
		select 'Такой отдел уже существует' Msg, 0 Result
		return 
	end


	-- добавление элемента в таблицу
	insert into hr_departments(name, code)
	values(@text, @text)
	select 'Отдел создан' Msg, 1 Result

END
"
HCGNKT29,Untitled,35657,C++,Tuesday 30th of April 2024 04:15:51 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>
#include <windows.h>


using namespace std;

void find_all(const string& find_name, const string& catalogue) {
	for (const auto& a : filesystem::directory_iterator(catalogue)) {
		string name = a.path().filename().string();
		string full_name = catalogue + '/' + name;
		if (name.find(find_name) != string::npos) {
			cout << full_name << endl;
		}
		if (filesystem::is_directory(full_name)) {
			find_all(find_name, full_name);
		}
	}
}

int main() {

	SetConsoleCP(1251); // установка кодировки 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодировки 1251 в поток вывода

	find_all(""Задания"", ""C:/Users/PC/Desktop/Основы программирования С++"");
}
"
3vDzCWjs,Untitled,KoctrX,JavaScript,Tuesday 30th of April 2024 03:16:12 AM CDT,"const dataValueToUpdate = _.cloneDeep((blockPreset?.value?.data || [])).map(dataItem => {
                            let value = false;

                            for(const schema of blockPreset?.value?.schema || []) {
                                if(schema.type === 'image') {
                                    if(typeof dataItem[schema.key] === 'object') {
                                        const name = `${utils.uuidv4()}_uploading`;
                                        images.push({ file: dataItem[schema.key], name });

                                        dataItem[schema.key] = name;
                                    }
                                    
                                    value = dataItem;
                                } else {
                                    value = dataItem;
                                }
                            }
                            
                            return value;
                        });"
0HYZvGPD,Swimbot Error,swimmerhair,Python,Tuesday 30th of April 2024 01:56:38 AM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 211, in whois
    info = await COC.Player(user_input).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
Gbr2fFp2,Hahsggsf,MildBba82,Bash,Tuesday 30th of April 2024 01:56:32 AM CDT,"#!/bin/bash

rm ~/x

echo ""Hello world!"""
d9uitEtd,tune,mathiaas,Lua,Tuesday 30th of April 2024 01:16:40 AM CDT,"-- About: This script is used for tuning ender chests to a certain channel

local args = {...}
local scriptName = ""tune""
dofile(""constants"")

if #args < 1 then
    print(""Usage: "" .. scriptName .. "" <channel>"")
    return
end

local success, data = turtle.inspect()
if not success or data.name ~= BLOCKS.enderChest.name then
    print(""Place an ender chest in front of the turtle"")
    return
end

local enderChest = peripheral.wrap(""front"")
if enderChest == nil then
    print(""Failed to connect to ender chest"")
    return
end

enderChest.setColors(unpack(COLOR_CHANNELS[args[1]]))
print(""Ender chest is now tuned to : '"" .. args[1] .. ""'"")"
bebXL3x9,Cross Linked List Implementataion of Matrix Multiplication,LambdaExpr_,C,Tuesday 30th of April 2024 12:58:04 AM CDT,"#include <stdio.h>
#include <stdlib.h>

typedef struct MatrixNode
{               //  matrix head   row head    column head    matrix node
    int row;    //  row count     row number  -1             row number
    int column; //  column count  -1          column number  column number
    int value;  //  node count    node count  node count     node value
    struct MatrixNode *right;
    struct MatrixNode *down;
} MatrixNode;

MatrixNode *newNode(int value);
void deleteNode(MatrixNode *this);
MatrixNode *modifyNode(MatrixNode *this, int new_value);

typedef MatrixNode *SparseMatrix;

SparseMatrix newSparseMatrix(int row, int col);
void deleteSparseMatrix(SparseMatrix this);
void MatrixInsertAdd(SparseMatrix this, int row, int col, int val);
SparseMatrix multiply(SparseMatrix this, SparseMatrix that);
SparseMatrix inputMatrix();

int main()
{
    SparseMatrix mat1 = inputMatrix();
    SparseMatrix mat2 = inputMatrix();

    SparseMatrix product = multiply(mat1, mat2);

    for (MatrixNode *row_it = product->down; row_it != product; row_it = row_it->down)
    {
        // printf(""row %d %d %d\n"", row_it->row, row_it->column, row_it->value);
        for (MatrixNode *col_it = row_it->right; col_it != row_it; col_it = col_it->right)
        {
            // printf(""col %d %d %d\n"", col_it->row, col_it->column, col_it->value);
            printf(""%d %d %d\n"", col_it->row, col_it->column, col_it->value);
        }
    }

    deleteSparseMatrix(mat1);
    deleteSparseMatrix(mat2);
    deleteSparseMatrix(product);
    return 0;
}

MatrixNode *newNode(int value)
{
    MatrixNode *node = (MatrixNode *)malloc(sizeof(MatrixNode));
    node->down = node->right = NULL;
    node->value = value;
    node->column = node->row = 0;
    return node;
}

MatrixNode *initNode(int row, int col, int value)
{
    MatrixNode *node = (MatrixNode *)malloc(sizeof(MatrixNode));
    node->row = row;
    node->column = col;
    node->value = value;
    node->right = node;
    node->down = node;
    return node;
}

void deleteNode(MatrixNode *this)
{
    if (this == NULL)
    {
        return;
    }
    free(this);
    this = NULL;
}

MatrixNode *modifyNode(MatrixNode *this, int new_value)
{
    if (this == NULL)
    {
        return NULL;
    }
    this->value = new_value;
    return this;
}

SparseMatrix newSparseMatrix(int row, int col)
{
    SparseMatrix matrix = initNode(row, col, 0);
    matrix->down = matrix->right = matrix;

    MatrixNode *itrator = matrix;
    for (int i = 0; i < col; ++i)
    {
        MatrixNode *col_head = initNode(-1, i, 0);
        col_head->down = col_head;
        col_head->right = matrix;
        itrator->right = col_head;
        itrator = itrator->right;
    }
    itrator = itrator->right;
    for (int i = 0; i < row; ++i)
    {
        MatrixNode *row_head = initNode(i, -1, 0);
        row_head->right = row_head;
        row_head->down = matrix;
        itrator->down = row_head;
        itrator = itrator->down;
    }
    itrator = itrator->down;
    return matrix;
}

void deleteSparseMatrix(SparseMatrix this)
{
    if (this == NULL)
    {
        return;
    }
    for (MatrixNode *p_col = this->right; p_col != this; p_col = p_col->right)
    {
        for (MatrixNode *p = p_col->down; p != p_col; p = p->down)
        {
            deleteNode(p);
        }
    }
    for (MatrixNode *p = this->right; p != this;)
    {
        MatrixNode *next = p->right;
        deleteNode(p);
        p = next;
    }
    for (MatrixNode *p = this->down; p != this;)
    {
        MatrixNode *next = p->down;
        deleteNode(p);
        p = next;
    }
    deleteNode(this);
}

void MatrixInsertAdd(SparseMatrix this, int row, int col, int val)
{
    // printf(""mat insert add\n"");
    if (this == NULL || row >= this->row || col >= this->column)
    {
        // printf(""here!!!\n"");
        return;
    }

    MatrixNode *row_head = this->down;
    // printf(""row head %d %d %d\n"", row_head->row, row_head->column, row_head->value);
    while (row_head->row < row)
    {
        row_head = row_head->down;
        // printf(""row head %d %d %d\n"", row_head->row, row_head->column, row_head->value);
    }
    MatrixNode *prow = row_head;
    // printf(""prow %d %d %d\n"", prow->row, prow->column, prow->value);
    while (prow->right->column >= 0 && prow->right->column <= col)
    {
        prow = prow->right;
        // printf(""prow %d %d %d\n"", prow->row, prow->column, prow->value);
    }

    MatrixNode *col_head = this->right;
    // printf(""col head %d %d %d\n"", col_head->row, col_head->column, col_head->value);
    while (col_head->column < col)
    {
        col_head = col_head->right;
        // printf(""col head %d %d %d\n"", col_head->row, col_head->column, col_head->value);
    }
    MatrixNode *pcol = col_head;
    // printf(""pcol %d %d %d\n"", pcol->row, pcol->column, pcol->value);
    while (pcol->down->row >= 0 && pcol->down->row <= row)
    {
        pcol = pcol->down;
        // printf(""pcol %d %d %d\n"", pcol->row, pcol->column, pcol->value);
    }

    if (prow == pcol)
    {
        // printf(""add\n\n"");
        prow->value += val;
        return;
    }

    MatrixNode *new_node = initNode(row, col, val);
    new_node->down = pcol->down;
    new_node->right = prow->right;
    pcol->down = new_node;
    prow->right = new_node;

    ++row_head->value;
    ++col_head->value;
    ++this->value;
    // printf(""insert\n\n"");
}

SparseMatrix multiply(SparseMatrix this, SparseMatrix that)
{
    if (this->column != that->row)
    {
        return NULL;
    }

    SparseMatrix product = newSparseMatrix(this->row, that->column);
    for (MatrixNode *it_row = this->down; it_row != this; it_row = it_row->down)
    {
        // printf(""it row %d %d %d\n"", it_row->row, it_row->column, it_row->value);
        for (MatrixNode *it_col = that->right; it_col != that; it_col = it_col->right)
        {
            // printf(""it col %d %d %d\n"", it_col->row, it_col->column, it_col->value);
            MatrixNode *multiplier = it_row->right;
            MatrixNode *multiplicant = it_col->down;
            for (int target_index = 0; target_index < this->column; ++target_index)
            {
                while (multiplier->column >= 0 && multiplier->column < target_index)
                {
                    // printf(""multiplier %d %d %d\n"", multiplier->row, multiplier->column, multiplier->value);
                    multiplier = multiplier->right;
                }
                while (multiplicant->row >= 0 && multiplicant->row < target_index)
                {
                    // printf(""multiplicant %d %d %d\n"", multiplicant->row, multiplicant->column, multiplicant->value);
                    multiplicant = multiplicant->down;
                }

                if (multiplier->column == multiplicant->row && multiplier->column != -1)
                {
                    // printf(""product at %d %d %d\n"", it_row->row, it_col->column,
                        //    multiplier->value * multiplicant->value);
                    MatrixInsertAdd(product, it_row->row, it_col->column,
                                    multiplier->value * multiplicant->value);
                    multiplier = multiplier->right;
                    multiplicant = multiplicant->down;
                }
            }
        }
    }
    return product;
}

SparseMatrix inputMatrix()
{
    int max_row, max_col;
    scanf(""%d%d"", &max_row, &max_col);
    SparseMatrix result = newSparseMatrix(++max_row, ++max_col);

    int row, col, val;
    scanf(""%d%d%d"", &row, &col, &val);
    while (row || col || val)
    {
        MatrixInsertAdd(result, row, col, val);
        scanf(""%d%d%d"", &row, &col, &val);
    }
    return result;
}
"
KDLwNMeK,interface ContactServerCommunication,GeorgePashev_88,Java,Tuesday 30th of April 2024 12:53:21 AM CDT,"package com.example.kontakti;

import okhttp3.OkHttpClient;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public interface ContactServerCommunication {
    public interface ShowMessage{
        public void Message(String message);
    }
    public default void APICallInsert(ContactAPI.contacts contact, ShowMessage message){
        Thread t = new Thread(()->{
            try{
                OkHttpClient client = new OkHttpClient.Builder().build();
                Retrofit retrofit =
                        new Retrofit.Builder()
                                .baseUrl(""http://10.0.0.13:4041"")
                                .addConverterFactory(
                                        GsonConverterFactory.create()
                                )
                                .client(client)
                                .build();
                ContactAPI api = retrofit.create(ContactAPI.class);

                Call<ContactAPI.contacts> insertedUser = api.api_add_user(contact);
                Response<ContactAPI.contacts> r = insertedUser.execute();
                if(r.isSuccessful()){
                    ContactAPI.contacts resp =r.body();
                    message.Message(""INSERTED IN SERVER WITH ID = ""+resp.ID);
                }

            }catch (Exception e){
                message.Message(""ERROR FROM SERVER: ""+e.getLocalizedMessage());

            }

        });
        t.start();

    }


}
"
wN3HfuN6,clipboard_manager,Python253,Python,Tuesday 30th of April 2024 12:29:38 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: clipboard_manager.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script provides a simple clipboard manager for managing clipboard operations on Windows systems.

Requirements:
- Python 3.x
- pyperclip library (install via pip: pip install pyperclip)

Usage:
1. Run the script in a Python environment.
2. Follow the prompts to perform clipboard operations.

Functions:
1. get_clipboard(): Retrieves the content of the clipboard.
2. set_clipboard(content): Sets the content of the clipboard to the specified value.
3. clear_clipboard_history(): Clears the Windows clipboard history.
4. view_clipboard_history(): Simulates Win + V to open the clipboard history menu.
5. main(): Provides a command-line interface for interacting with the clipboard manager.

Additional Notes:
- This script is designed for Windows systems.
- Ensure that the pyperclip library is installed before running the script.
- The clipboard history feature relies on the Windows clipboard history functionality.
- Use this script to conveniently manage clipboard content without navigating through system menus.
""""""

import pyperclip
import subprocess
import os
import sys
import ctypes

def get_clipboard():
    """"""Retrieve the content of the clipboard.""""""
    return pyperclip.paste()

def set_clipboard(content):
    """"""Set the content of the clipboard to the specified value.""""""
    pyperclip.copy(content)

def clear_clipboard_history():
    """"""Clears the Windows clipboard history.""""""
    command = 'Restart-Service -Name ""cbdhsvc*"" -Force'
    try:
        subprocess.run(['powershell', '-Command', command], check=True)
        print(""\nClipboard history cleared successfully!\n"")
    except subprocess.CalledProcessError as e:
        print(f""\nError:\n{e}\n"")

def view_clipboard_history():
    """"""Simulates Win + V to open the clipboard history menu.""""""
    ctypes.windll.user32.keybd_event(0x5B, 0, 0, 0)  # Press Win key
    ctypes.windll.user32.keybd_event(0x56, 0, 0, 0)  # Press V key
    ctypes.windll.user32.keybd_event(0x56, 0, 2, 0)  # Release V key
    ctypes.windll.user32.keybd_event(0x5B, 0, 2, 0)  # Release Win key
    
def main():
    """"""
    Provides a command-line interface for interacting with the clipboard manager.
    
    Displays a menu of available actions and prompts the user to make a selection.
    The function executes the corresponding action based on the user's choice.
    
    Actions:
    - 1. Get clipboard content: Retrieves and displays the current content of the clipboard.
    - 2. Set clipboard content: Prompts the user to enter new content to set in the clipboard.
    - 3. View clipboard history: Simulates the Win + V keyboard shortcut to open the clipboard history menu.
    - 4. Clear clipboard history: Clears the Windows clipboard history using PowerShell.
    - 5. Exit the program: Exits the clipboard manager application.
    
    Note:
    - The user's input is validated to ensure it corresponds to one of the available options.
    - Invalid input prompts the user to select a valid option.
    - Upon selecting an action, the function executes the corresponding operation and provides feedback to the user.
    - The program terminates upon selecting the ""Exit"" option.
    """"""
    print(""\t:: Welcome to Clipboard Manager ::\n\n"")
    print(""Select an action:\n"")
    print(""\t1. Get clipboard content"")
    print(""\t2. Set clipboard content"")
    print(""\t3. View clipboard history"")
    print(""\t4. Clear clipboard history"")
    print(""\t5. Exit the program"")

    choice = input(""\n\tEnter your selection (1-5): "")

    if choice == '1':
        clipboard_content = get_clipboard()
        print(""\nClipboard content:\n"", clipboard_content)
    elif choice == '2':
        new_content = input(""\nEnter the new content for the clipboard: "")
        set_clipboard(new_content)
        print(""\nClipboard content set successfully!\n"")
    elif choice == '3':
        print(""\nSimulating Win + V to Open the clipboard history...\n"")
        view_clipboard_history()
    elif choice == '4':
        print(""\nClearing the clipboard history...\n"")
        clear_clipboard_history()
    elif choice == '5':
        print(""\nExiting the program...\tGoodbye!\n"")
        sys.exit()
    else:
        print(""\nInvalid choice!\nPlease select a valid option (1, 2, 3, 4 or 5)\n"")

if __name__ == ""__main__"":
    main()

"
DbCfk3v9,patch-mtk7630.patch,kosmik2001,C++,Tuesday 30th of April 2024 12:26:47 AM CDT,"diff -Naru build_ax23-v1-ap-a/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch build_ax23-v1-ap-b/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch
--- build_ax23-v1-ap-a/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch	1970-01-01 03:00:00.000000000 +0300
+++ build_ax23-v1-ap-b/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch	2024-04-30 08:01:42.514810164 +0300
@@ -0,0 +1,29 @@
+From 5f94d7358cceda721983b29245010a9d4ab0c808 Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Ar=C4=B1n=C3=A7=20=C3=9CNAL?= <arinc.unal@arinc9.com>
+Date: Sun, 28 Apr 2024 13:38:46 +0300
+Subject: [PATCH] net: dsa: mt7530: use switch MDIO bus for PHY muxing
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
+---
+ drivers/net/dsa/mt7530.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/drivers/net/dsa/mt7530.c b/drivers/net/dsa/mt7530.c
+index 7dc2f0ac8962..fa7a1ab292d2 100644
+--- a/drivers/net/dsa/mt7530.c
++++ b/drivers/net/dsa/mt7530.c
+@@ -2585,7 +2585,7 @@ mt7530_setup(struct dsa_switch *ds)
+ 			if (!phy_node)
+ 				continue;
+ 
+-			if (phy_node->parent == priv->dev->of_node->parent) {
++			if (phy_node->parent->parent == priv->dev->of_node) {
+ 				ret = of_get_phy_mode(mac_np, &interface);
+ 				if (ret && ret != -ENODEV) {
+ 					of_node_put(mac_np);
+-- 
+2.40.1
+
diff -Naru build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts
--- build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts	2024-02-24 01:30:57.232929535 +0300
+++ build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts	2024-04-30 08:08:54.398642666 +0300
@@ -145,27 +145,48 @@
 	nvmem-cell-names = ""mac-address"";
 };
 
-&mdio {
-	ethphy0: ethernet-phy@0 {
-		reg = <0>;
-	};
-};
-
 &switch0 {
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+		};
+
+		ethphy1: ethernet-phy@1 {
+			reg = <1>;
+			interrupts = <1>;
+		};
+
+		ethphy2: ethernet-phy@2 {
+			reg = <2>;
+			interrupts = <2>;
+		};
+
+		ethphy3: ethernet-phy@3 {
+			reg = <3>;
+			interrupts = <3>;
+		};
+    };
+
 	ports {
 		port@1 {
 			status = ""okay"";
 			label = ""lan1"";
+			phy-handle = <&ethphy1>;
 		};
 
 		port@2 {
 			status = ""okay"";
 			label = ""lan2"";
+			phy-handle = <&ethphy2>;
 		};
 
 		port@3 {
 			status = ""okay"";
 			label = ""lan3"";
+			phy-handle = <&ethphy3>;
 		};
 	};
 };
diff -Naru build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts
--- build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts	2024-02-24 01:30:57.240929468 +0300
+++ build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts	2024-04-30 08:13:31.371035141 +0300
@@ -189,27 +189,48 @@
 	nvmem-cell-names = ""mac-address"";
 };
 
-&mdio {
-	ethphy0: ethernet-phy@0 {
-		reg = <0>;
-	};
-};
-
 &switch0 {
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+		};
+
+		ethphy1: ethernet-phy@1 {
+			reg = <1>;
+			interrupts = <1>;
+		};
+
+		ethphy2: ethernet-phy@2 {
+			reg = <2>;
+			interrupts = <2>;
+		};
+
+		ethphy3: ethernet-phy@3 {
+			reg = <3>;
+			interrupts = <3>;
+		};
+    };
+
 	ports {
 		port@1 {
 			status = ""okay"";
 			label = ""lan3"";
+			phy-handle = <&ethphy1>;
 		};
 
 		port@2 {
 			status = ""okay"";
 			label = ""lan2"";
+			phy-handle = <&ethphy2>;
 		};
 
 		port@3 {
 			status = ""okay"";
 			label = ""lan1"";
+			phy-handle = <&ethphy3>;
 		};
 	};
 };"
GbFhCqu4,Sales Contracts,Kenjx,Python,Tuesday 30th of April 2024 12:13:46 AM CDT,"class SaleContracts(models.Model):
    _name = ""sales.contracts""
    _inherit = [""mail.thread"", ""mail.activity.mixin"", ""utm.mixin""]
    _order = ""id desc""

    @api.depends(""payments"")
    def get_payments_total(self):
        """"""Calculate total payments.""""""
        for rec in self:
            rec.payments_total = sum(line.amount for line in rec.payments)

    @api.depends(""payments"", ""amount"")
    def get_balance_total(self):
        """"""Calculate total balance.""""""
        for rec in self:
            rec.balance_total = rec.amount - rec.payments_total

            # Check status of the contract
            rec._check_contract_status()

    name = fields.Char(
        string=""Contract No."", readonly=True, required=True, copy=False, default=""New""
    )
    chassis_no = fields.Char(""Chassis No"")

    def create_im4_bill(self):
        """"""Create IM4 Bill.""""""
        for item in self:
            if not item.im4:
                continue

            return {
                ""view_id"": self.env.ref(""carbiz_client.vehicle_im7_clearance_form1"").id,
                ""view_mode"": ""form"",
                ""res_model"": ""carbiz.t1"",
                ""res_id"": item.im4.id,
                ""type"": ""ir.actions.act_window"",
                ""target"": ""new"",
                ""context"": self._context,
            }

    def add_im4(self):
        for item in self:
            # Skip if IM4 already exists
            if item.im4:
                _logger.info(""IM4 already exists, checking its state..."")
                if item.state_im4 == ""draft"":
                    _logger.info(""IM4 is in draft state..."")
                    context = dict(self._context or {})
                    return {
                        # 'view_type': 'form',
                        ""view_id"": self.env.ref(
                            ""carbiz_client.vehicle_im4_clearance_form1""
                        ).id,
                        ""view_mode"": ""form"",
                        ""res_model"": ""carbiz.t1"",
                        ""res_id"": item.im4.id,
                        ""type"": ""ir.actions.act_window"",
                        ""target"": ""new"",
                        ""context"": context,
                    }
                continue

            # Search for car_id
            car_id = self.env[""carbiz_erp.vehicle""].search(
                [(""product"", ""="", item.product_id.id)], limit=1
            )

            # Check for existing IM4
            existing_im4 = self.env[""carbiz.t1""].search(
                [(""car_id"", ""="", car_id.id), (""state_im7"", ""="", ""im4"")], limit=1
            )
            if existing_im4:
                item.im4 = existing_im4.id
                item.im4.add_im4()
                continue

            # If there's no existing IM4, check for IM7
            existing_im7 = self.env[""carbiz.t1""].search(
                [
                    (""car_id"", ""="", car_id.id),
                    (""state_im7"", ""not in"", (""expired"", ""im4"", ""cancel"")),
                ],
                limit=1,
            )
            if existing_im7:
                item.im4 = existing_im7.id
                return existing_im7.add_im4()

            # If there's no IM7 or IM4 record for this vehicle, raise an error
            raise UserError(
                _(""There's no IM7 or IM4 record for this vehicle!\n Something is wrong!"")
            )

    im4 = fields.Many2one(""carbiz.t1"", string=""IM4"")
    im4_bill = fields.Many2one(
        ""account.move"", string=""IM4 Bill"", related=""im4.im4_bill"", store=True
    )
    im4_bill_state = fields.Selection(
        related=""im4_bill.payment_state"", store=True, string=""IM4 Bill State""
    )

    state_im4 = fields.Selection(
        [
            (""draft"", ""Draft""),
            (""confirm"", ""Validated""),
            (""cancel"", ""Canceled""),
        ],
        string=""IM4 Status"",
        related=""im4.state_im4"",
        store=True,
    )

    model = fields.Many2one(""fleet.vehicle.model"", ""Model"")
    product_id = fields.Many2one(""product.product"", ""Vehicle"")
    reg_no = fields.Many2one(""fleet.vehicle"", ""Reg No"")
    sales_person = fields.Many2one(""res.users"", ""Salesperson"")
    reg_type = fields.Selection(
        [
            (""localuse"", ""Local Use""),
            (""reexport"", ""Re-export""),
            (""taxfree"", ""Tax Free""),
        ],
        default=""localuse"",
        string=""Registration Type"",
    )
    color = fields.Char(""Colour"")
    file_no = fields.Char(""Origin"")

    customer = fields.Many2one(""res.partner"", string=""Purchaser"")
    address = fields.Char(""City"")
    phone = fields.Char(""Phone"", related=""customer.phone"")
    po_box = fields.Char(""Street"", related=""customer.street"")
    country_id = fields.Many2one(""res.country"", string=""Country"")
    sales_order = fields.Many2one(""sale.order"", string=""Origin"")
    delivery_count = fields.Integer(related=""sales_order.delivery_count"", store=True)
    invoice_count = fields.Integer(related=""sales_order.invoice_count"", store=True)
    start_date =  fields.Date(""Installment Start Date"", default=fields.Date.today())

    def action_view_delivery(self):
        return self.sales_order.action_view_delivery()

    def action_view_invoice(self):
        return self.sales_order.action_view_invoice()

    @api.depends(""customer_bills"")
    def _compute_customer_bills_count(self):
        """"""Compute customer bills count.""""""
        account_move = self.env[""account.move""]
        for record in self:
            record.bills_count = account_move.search_count(
                [(""contract_id"", ""="", record.id), (""move_type"", ""="", ""out_invoice"")]
            )

    @api.depends(""payments"")
    def _compute_customer_payments_count(self):
        """"""Compute customer payments count.""""""
        account_payment = self.env[""account.payment""]
        for record in self:
            record.payments_count = account_payment.search_count(
                [(""contract_id"", ""="", record.id)]
            )

            record._compute_delivery_request()

    @api.depends(""down_payment"")
    def _compute_delivery_request(self):
        for rec in self:
            # Balance Before Delivery sum
            beforedelivery_payment_amounts = sum(
                line.amount
                for line in rec.payments.filtered(
                    lambda pay: pay.carbiz_payment_type == ""balbeforedelivery""
                )
            )
        
            # Down Payments
            down_payment_amounts = sum(
                line.amount
                for line in rec.payments.filtered(
                    lambda pay: pay.carbiz_payment_type == ""downpayment""
                )
            )
            rec.make_delivery = False
            
            # Check if the total amount lets to cause delivery
            if down_payment_amounts == rec.down_payment and  (rec.balance > 0 and beforedelivery_payment_amounts == rec.balance):
                rec.make_delivery = True            
            elif down_payment_amounts == rec.down_payment and not rec.balance:
                rec.make_delivery = True
                
                

            # Check the car status, if in bond or not
            picking = rec.product_id.stock_move_ids.filtered(
                lambda car: car.product_id == rec.product_id
                and car.state == ""done""
                and car.picking_code == ""outgoing""
            )

            if not len(picking) == 0:
                rec.make_delivery = False

    product_id = fields.Many2one(""product.product"", string=""Product"")
    amount = fields.Float(""Amount in Figures"")
    payments_total = fields.Float(""Amount Paid"", compute=get_payments_total, store=True)
    balance_total = fields.Float(
        ""Total Amount Outstanding"", compute=get_balance_total, store=True
    )
    amount_words = fields.Char(""Amount in Words"", tracking=True)
    down_payment = fields.Float(""Down Payment"")
    balance = fields.Float(""Amount Before Delivery"")
    days_balance = fields.Integer(""Days to clear balance"")
    balance_installment = fields.Float(""Installment Balance"")
    days_installment = fields.Integer(""Days to clear installments"")
    days = fields.Integer(""Days to clear installment"")
    date_delivery = fields.Date(""Final Day Delivery"")
    date_installment = fields.Date(""Final Day Installment"")
    no_install = fields.Integer(""No. of Installments"")
    installment_lines = fields.One2many(
        ""install.line"", ""contract_id"", string=""Installments""
    )
    customer_bills = fields.One2many(
        ""account.move"", ""contract_id"", string=""Customer Bills""
    )
    payment_lines = fields.One2many(
        ""contract.payment"", ""contract_id"", string=""Payments""
    )
    payments = fields.One2many(
        ""account.payment"",
        ""contract_id"",
        string=""Payments"",
        domain=[(""state"", ""="", ""posted"")],
    )
    payments_count = fields.Integer(compute=""_compute_customer_payments_count"")
    # bills_count = fields.Integer(compute=""_compute_customer_bills_count"")
    make_delivery = fields.Boolean(
        default=False, compute=""_compute_delivery_request"", store=True
    )
    assigned = fields.Boolean(default=False)
    is_other_existing_contract = fields.Boolean(default=False)

    state = fields.Selection(
        [
            (""draft"", ""Draft""),
            (""running"", ""Running""),
            (""completed"", ""Completed""),
            (""cancelled"", ""Cancelled""),
        ],
        default=""draft"",
        string=""State"",
    )

    def create_delivery(self):
        """"""Create a delivery on demand""""""
        for rec in self.sales_order.order_line:
            if rec.product_id == self.product_id:
                rec._action_launch_stock_rule()
                self.make_delivery = False

    @api.depends(""balance_total"")
    def _check_contract_status(self):
        for rec in self:
            if (
                rec.balance_total == 0
                and rec.payments_total == rec.amount
                and rec.state == ""running""
            ):
                rec.state = ""completed""

    # def create_customer_bills(self):
    #     for contract in self:
    #         invoice_line_vals = []
    #         invoice_line_vals.append((0, 0, {
    #             'product_id': contract.product_id.id,
    #             'price_unit': contract.amount,
    #             'tax_ids': False,
    #             # 'currency_id' : contract.billing_currency,
    #             'quantity': 1,
    #         }))

    #         invoice_vals = {
    #             'partner_id': contract.customer.id,
    #             'move_type': 'out_invoice',
    #             'invoice_date': date.today(),
    #             ""contract_id"": contract.id,
    #             'invoice_line_ids': invoice_line_vals
    #         }

    #         customer_bills = self.env['account.move'].create(invoice_vals)

    def show_bills(self):
        return {
            ""name"": ""Contracts"",
            ""domain"": [
                (""contract_id"", ""="", self.id),
                (""move_type"", ""="", ""out_invoice""),
            ],
            ""view_type"": ""form"",
            ""res_model"": ""account.move"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    def show_payments(self):
        return {
            ""name"": ""Payments"",
            ""domain"": [(""contract_id"", ""="", self.id)],
            ""view_type"": ""tree,form"",
            ""res_model"": ""account.payment"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    def show_deliveries(self):
        return {
            ""name"": ""Job Cards"",
            ""domain"": [(""contract_id"", ""="", self.id)],
            ""view_type"": ""form"",
            ""res_model"": ""rtt.jobcard"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    @api.model
    def create(self, vals):
        if vals.get(""name"", ""New"") == ""New"":
            vals[""name""] = (
                self.env[""ir.sequence""].next_by_code(""contract.sequence"") or ""New""
            )
        return super().create(vals)

    def receive_payment(self):
        pay_journals = self.env[""account.journal""].search(
            [(""type"", ""in"", (""bank"", ""cash""))], limit=1
        )
        for rec in self:
            context = dict(
                {
                    ""default_payment_type"": ""inbound"",
                    ""default_partner_type"": ""customer"",
                    ""default_ref"": rec.name,
                    ""default_date"": date.today(),
                    ""default_destination_account_id"": rec.customer.property_account_receivable_id.id,
                    ""default_journal_id"": pay_journals.id,
                    ""default_partner_id"": rec.customer.id,
                    ""default_currency_id"": rec.sales_order.currency_id.id,
                    ""default_carbiz_contract_payment"": True,
                    ""default_contract_id"": rec.id,
                }
            )

            return {
                ""name"": _(""Collect Payment""),
                ""view_id"": self.env.ref(""account.view_account_payment_form"").id,
                ""view_mode"": ""form"",
                ""res_model"": ""account.payment"",
                ""type"": ""ir.actions.act_window"",
                ""target"": ""new"",
                ""context"": context,
            }

    @api.onchange(""days_balance"", ""days_installment"")
    def update_dates(self):
        for rec in self:
            if rec.days_balance > 0:
                rec.date_delivery = date.today() + relativedelta(days=rec.days_balance)
            if rec.days_balance == 0:
                rec.date_delivery = date.today()
            if rec.days_installment:
                rec.date_installment = date.today() + relativedelta(
                    days=rec.days_installment
                )

    def start_contract(self):
        # fields_to_check = ['down_payment', 'days_installment', 'no_install', 'days_balance', 'balance']
        fields_to_check = [""balance"", ""days_balance""]

        for rec in self:
            # Car check in by contracts
            car_search_by_contract_ids = self.search(
                [
                    (""product_id"", ""="", rec.product_id.id),
                    (""id"", ""!="", self.id),
                    (""state"", ""="", ""running"")
                ]
            )

            if len(car_search_by_contract_ids) > 0:
                rec.is_other_existing_contract = True

            # Add chassis number
            # Search for car_id
            car_id = self.env[""carbiz_erp.vehicle""].search(
                [(""product"", ""="", rec.product_id.id)], limit=1
            )

            rec.chassis_no = car_id.name

            # For not-straightforward payment
            if not (rec.amount == rec.down_payment) and rec.balance_installment < 1:
                for field in fields_to_check:
                    if getattr(rec, field) < 1:
                        raise UserError(
                            _(
                                ""Provide the {} amount."".format(
                                    field.replace(""_"", "" "").capitalize()
                                )
                            )
                        )

            rec.state = ""running""
            if rec.balance_installment > 0:
                rec.compute_installments()
            rec._check_contract_status()  # Check if the contract is already fulfilled

    def cancel_contract(self):
        for rec in self:
            if rec.is_other_existing_contract:
                rec.is_other_existing_contract = False

            rec.state = ""cancelled""

    def reset_contract(self):
        for rec in self:
            rec.state = ""draft""

            # Clear payments information
            for payment in rec.payments:
                payment.action_draft()
                payment.action_cancel()
            rec.payments = [(6, 0, 0)]

    def auto_complete_contract(self):
        for rec in self:
            contract_records = self.env[""sales.contracts""].search([])
            for data in contract_records:
                if data.state == ""running"":
                    data.state = ""completed""

    @api.onchange(""amount"", ""down_payment"", ""balance"")
    def calc_balance(self):
        for rec in self:
            # if rec.down_payment != 0.0:
            rec.balance_installment = rec.amount - (rec.down_payment + rec.balance)

    def compute_installments(self):
        fields_to_check = [""days_installment"", ""no_install""]

        for rec in self:
            if not rec.start_date:
                raise UserError(""Please state the installment start date."") 
            
            # Validate first fields
            for field in fields_to_check:
                if getattr(rec, field) < 1:
                    raise UserError(
                        _(
                            ""Provide the {} amount."".format(
                                field.replace(""_"", "" "").capitalize()
                            )
                        )
                    )

            rec.installment_lines.unlink()

            interval = int(rec.days_installment / rec.no_install)
            amounts = rec.balance_installment / rec.no_install
            due_dates = [
                 rec.start_date + relativedelta(days=i * interval)
                for i in range(1, rec.no_install + 1)
            ]

            for due_date in due_dates:
                self.env[""install.line""].create(
                    {
                        ""name"": rec.product_id.name + ""-"" + str(due_date),
                        ""amount"": amounts,
                        ""balance"": amounts,
                        ""due_date"": due_date,
                        ""status"": ""pending"",
                        ""amount_paid"": 0.0,
                        ""contract_id"": rec.id,
                    }
                )
"
3HYmm2m1,Java Regex Validation Interface,GeorgePashev_88,Java,Monday 29th of April 2024 11:32:28 PM CDT,"package com.example.kontakti;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public interface Validation {
    public static boolean Validate(String text, String expression){
        final String regex = expression;//""[\\w_\\-]+@[\\w_\\.\\-]+\\.[\\w_\\-]{2,4}"";
        final String string = text;

        final Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);
        final Matcher matcher = pattern.matcher(string);

        while (matcher.find()) {
            return true;
        }
        return false;

    }

}
"
kDNxXepx,ContactAPI Retrofit Interface,GeorgePashev_88,Java,Monday 29th of April 2024 11:30:04 PM CDT,"package com.example.kontakti;

import java.util.List;

import retrofit2.Call;
import retrofit2.http.Body;
import retrofit2.http.GET;
import retrofit2.http.DELETE;
import retrofit2.http.POST;
import retrofit2.http.PUT;
import retrofit2.http.Path;

public interface ContactAPI {
    public class message{
        public String status;
        public message(message m){
            this.status = m.status;
        }
        public message(String _status){
            this.status = _status;
        }
    }
    public class  contacts{
        public int ID;
        public String name;
        public String address;
        public String phone;
        public String email;
        public contacts(contacts m){
            ID = m.ID;
            name = m.name;
            address = m.address;
            phone = m.phone;
            email = m.email;
        }
        public contacts(int _ID, String _name, String _address,
                        String _phone, String _email){
            ID = _ID;
            name = _name;
            address = _address;
            phone = _phone;
            email = _email;
        }
    }
    @GET(""/api/users"")
    public Call<List<contacts>> api_users();

    @GET(""/api/users/{id}"")
    public Call<contacts> api_get_user(@Path(""id"") int id);

    @POST(""/api/users/add"")
    public Call<contacts> api_add_user(@Body contacts c);

    @PUT(""/api/users/update"")
    public Call<contacts> api_update_user(@Body contacts c);

    @DELETE(""/api/users/delete/{id}"")
    public Call<message> api_delete_user(@Path(""id"") int id);


}
"
WvuxAvCT,TEMP-ALL-DELL.ahk,Najeebsk,Autohotkey,Monday 29th of April 2024 11:27:01 PM CDT,";clears all (temp) files in the listed directories, except the one's which are in use
;C:\Users\Najeeb\AppData\Local\Temp
dirs = %A_winDir%\Temp\*.*,%userprofile%\AppData\Local\Temp\*.*,C:\Temp\*.*,%userprofile%\Recent\*.*,%userprofile%\Cookies\*.txt,;%userprofile%\AppData\Local\Temporary Internet Files\*.*,C:\Windows\Prefetch\*.* ;all code above is on ONE line
Loop,parse,dirs,`,
{
   
IfExist,%A_LoopField%
   {
   Loop,%A_LoopField%,1,1
   FileRemoveDir,%A_LoopFileFullPath%,1
   FileDelete,%A_LoopField%
   }
}
FileRecycleEmpty"
BcMKHYs6,NAJEEB-WIN-X.reg,Najeebsk,REG,Monday 29th of April 2024 10:42:37 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\winxmenu]
""MUIVerb""=""Najeeb+X Menu""
""SubCommands""=""appwiz;network;power;event;sysdm;devmgr;diskmgmt;compmgmt;cmd;|;taskmgr;control;explorer;search;run;|;desktop""
""icon""=""imageres.dll,109""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\appwiz]
@=""Programs and Features""
""icon""=""appwiz.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\appwiz\command]
@=""control appwiz.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\network]
@=""Network Connections""
""icon""=""ncpa.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\network\command]
@=""control ncpa.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\power]
@=""Power Options""
""icon""=""powercfg.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\power\command]
@=""control powercfg.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event]
@=""Event Viewer""
""icon""=""eventvwr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,65,00,76,00,65,00,6e,00,74,00,76,00,77,\
  00,72,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\sysdm]
@=""System""
""icon""=""sysdm.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\sysdm\command]
@=""control sysdm.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr]
@=""Device Manager""
""Icon""=hex(2):64,00,65,00,76,00,6d,00,67,00,72,00,2e,00,64,00,6c,00,6c,00,00,\
  00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,65,00,76,00,6d,00,67,00,6d,00,74,\
  00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\diskmgmt]
@=""Disk Management""
""icon""=""devmgr.dll,4""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\diskmgmt\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,\
  25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,\
  00,63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,\
  73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,\
  00,74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,69,00,73,00,6b,00,6d,00,67,00,\
  6d,00,74,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\compmgmt]
@=""Computer Management""
""icon""=""CompMgmtLauncher.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\compmgmt\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,\
  25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,\
  00,63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,\
  73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,\
  00,74,00,65,00,6d,00,33,00,32,00,5c,00,63,00,6f,00,6d,00,70,00,6d,00,67,00,\
  6d,00,74,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd]
@=""Command Prompt""
""icon""=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd\command]
@=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr]
@=""Task Manager""
""icon""=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr\command]
@=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control]
@=""Control Panel""
""icon""=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control\command]
@=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\explorer]
@=""Windows Explorer""
""icon""=""explorer.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\explorer\command]
@=""explorer.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\search]
@=""Search""
""icon""=""shell32.dll,22""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Search\command]
@=""explorer shell:::{2559A1F0-21D7-11D4-BDAF-00C04F60B9F0}""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\run]
@=""Run""
""icon""=""shell32.dll,24""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\run\command]
@=""explorer shell:::{2559A1F3-21D7-11D4-BDAF-00C04F60B9F0}""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\desktop]
@=""Desktop""
""icon""=""shell32.dll,34""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\desktop\command]
@=""explorer shell:Desktop""
"
ZyrUaFce,NAJEEB-SYSTEM-APPS.reg,Najeebsk,REG,Monday 29th of April 2024 10:40:43 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\SystemTools]
""MUIVerb""=""System Tools""
""SubCommands""=""control;cleanmgr;devmgr;event;regedit;secctr;msconfig;taskmgr;taskschd;wu;tem""
""icon""=""imageres.dll,104""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control]
@=""Control Panel""
""icon""=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control\command]
@=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cleanmgr]
@=""Disk Cleanup""
""icon""=""cleanmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cleanmgr\command]
@=""cleanmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr]
@=""Device Manager""
""Icon""=hex(2):64,00,65,00,76,00,6d,00,67,00,72,00,2e,00,64,00,6c,00,6c,00,00,\
  00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,65,00,76,00,6d,00,67,00,6d,00,74,\
  00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event]
@=""Event Viewer""
""icon""=""eventvwr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,65,00,76,00,65,00,6e,00,74,00,76,00,77,\
  00,72,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\regedit]
@=""Registry Editor""
""icon""=""regedit.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\regedit\command]
@=""regedit.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\secctr]
@=""Security Center""
""icon""=""wscui.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\secctr\command]
@=""control wscui.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\msconfig]
@=""System Configuration""
""icon""=""msconfig.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\msconfig\command]
@=""msconfig.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr]
@=""Task Manager""
""icon""=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr\command]
@=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskschd]
@=""Task Scheduler""
""icon""=""miguiresource.dll,1""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskschd\command]
@=""Control schedtasks""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wu]
@=""Windows Update""
""icon""=""wucltux.dll""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wu\command]
@=""wuapp.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem]
@=""TEMP DELLETE""
""icon""=""SOF.dll,25""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\TEMP-ALL-DELL.ahk""     "
mQar8DN0,NAJEEB-APPS.reg,Najeebsk,REG,Monday 29th of April 2024 10:38:14 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan
[HKEY_CLASSES_ROOT\DesktopBackground\Shell\WindowsApps]
""MUIVerb""=""Najeeb Apps""
""SubCommands""=""cmder;books;cmd;wordpad;ff;tor;notepad;paint;ser;ren;yt;web;vid;vlc;iptv;iptvx""
""icon""=""SOF.dll,99""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmder]
@=""CMDER""
""icon""=""Cmder.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmder\command]
@=""cmd.exe /k start C:\\CMDER\\CMDER.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\books]
@=""BOOKS""
""icon""=""SOF.dll,145""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\books\command]
@=""cmd.exe /k start C:\\CMDER\\BOOKS.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd]
@=""Command Prompt""
""icon""=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd\command]
@=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wordpad]
@=""Wordpad""
""icon""=""write.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wordpad\command]
@=""wordpad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ff]
@=""FFMPEG""
""icon""=""SOF.dll,72""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ff\command]
@=""cmd.exe /k start C:\\CMDER\\FFMPEG.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tor]
@=""Tor Browser""
""icon""=""F:\\PORTABLE\\Tor Browser\\Browser\\firefox.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tor\command]
@=""F:\\PORTABLE\\Tor Browser\\Browser\\firefox.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\notepad]
@=""Notepad""
""icon""=""notepad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\notepad\command]
@=""notepad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\paint]
@=""Paint""
""icon""=""mspaint.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\paint\command]
@=""mspaint.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ser]
@=""ALL DRIVE SEARCH""
""icon""=""SOF.dll,18""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ser\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\ALL-SEARCH.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ren]
@=""RENAME""
""icon""=""SOF.dll,129""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ren\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\RENAME-EXT.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\yt]
@=""YOUTUBE SEARCH""
""icon""=""SOF.dll,61""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\yt\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\YOUTUBE-SEARCH-ALL.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\web]
@=""WEB-SCRAPING""
""icon""=""SOF.dll,81""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\web\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\WEB-SCRAPING-ALL-ELEMENTS.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid]
@=""VIDEOS-SERACH""
""icon""=""SOF.dll,110""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\VIDEOS-SEARCH-PLAY.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vlc]
@=""Vlc Media Player""
""icon""=""SOF.dll,58""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vlc\command]
@=""vlc.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptv]
@=""IPTV Search Player""
""icon""=""SOF.dll,60""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptv\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\IPTV-GITHUB-CATEGORIES.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptvx]
@=""IPTV X Player""
""icon""=""imageres.dll,84""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptvx\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\IPTV-PLAYER.pyw""


"
7aceNwGB,NAJEEB-FOLDER.reg,Najeebsk,REG,Monday 29th of April 2024 10:36:32 PM CDT,"Windows Registry Editor Version 5.00
;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\NajeebFolder]
""MUIVerb""=""Najeeb Folder""
""SubCommands""=""pic;vid;tem;pre;py;por;soft;tool;home""
""icon""=""SOF.dll,99""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pic]
@=""Pictures""
""icon""=""FOL.dll,83""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pic\command]
@=""explorer \""C:\\Users\\Najeeb\\Desktop\\FTP\\PICS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid]
@=""Videos""
""icon""=""FOL.dll,49""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid\command]
@=""explorer \""D:\\VIDEOS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem]
@=""TempFolder""
""icon""=""SOF.dll,26""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem\command]
@=""explorer \""C:\\Users\\Najeeb\\AppData\\Local\\Temp\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pre]
@=""Prefetch""
""icon""=""SOF.dll,35""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pre\command]
@=""explorer \""C:\\Windows\\Prefetch\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\py]
@=""Python""
""icon""=""SOF.dll,51""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\py\command]
@=""explorer \""D:\\PYTHON-SCRIPTS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\por]
@=""Portable""
""icon""=""SOF.dll,148""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\por\command]
@=""explorer \""F:\\PORTABLE\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\soft]
@=""SOFT-HOME(Spaec)""
""icon""=""SOF.dll,38""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\soft\command]
@=""cmd.exe /k start C:\\CMDER\\SOFT\\SOFT-HOME.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tool]
@=""TOOLS-HOME""
""icon""=""SOF.dll,39""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tool\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\TOOL.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\home]
@=""CMD-HOME(Spaec)""
""icon""=""SOF.dll,109""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\home\command]
@=""cmd.exe /k start C:\\CMDER\\HOME.ahk""


"
6gci4Jrg,Untitled,dereksir,Java,Monday 29th of April 2024 09:41:05 PM CDT,"package com.example;

// import the required classes
import java.io.IOException;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Main {
    // create a new OkHttpClient instance
    final OkHttpClient client = new OkHttpClient();

    String run(String url) throws IOException {
        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fwww.amazon.com%2FLumineux-Teeth-Whitening-Strips-Treatments-Enamel-Safe%2Fdp%2FB082TPDTM2%2F%3Fth%3D1&js_render=true&premium_proxy=true&autoparse=true"");
        System.out.println(response);
    }
}"
aZg8QpSR,Untitled,dereksir,Java,Monday 29th of April 2024 09:28:16 PM CDT,"package com.example;

// import the necessary classes
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import okhttp3.*;

public class Main {
		// define a proxy pool
       private static final List<ProxyInfo> proxyList = new ArrayList<>();
 
    static {
        proxyList.add(new ProxyInfo(""140.238.247.9"", 8100));
        proxyList.add(new ProxyInfo(""213.188.211.61"", 3128));
        proxyList.add(new ProxyInfo(""67.43.227.229"", 20195));
    }

	// create static proxyInfo class
    static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }

	String run(String url) throws IOException {
        // randomly select a proxy from the list
        Random random = new Random();
        int index = random.nextInt(proxyList.size());
        ProxyInfo proxyInfo = proxyList.get(index);

		// create a proxy object with the selected proxy details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));
		
		// create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://www.amazon.com/Lumineux-Teeth-Whitening-Strips-Treatments-Enamel-Safe/dp/B082TPDTM2/?th=1"");
        System.out.println(response);
    }

}"
ERZQEeEV,Untitled,dereksir,Bash,Monday 29th of April 2024 09:25:12 PM CDT,"{
  ""origin"": ""140.238.247.9:60163""
}

{
  ""origin"": ""213.188.211.61:51103""
}"
E0a26gEU,Untitled,dereksir,Java,Monday 29th of April 2024 09:19:53 PM CDT,"package com.example;

// import the necessary classes
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import okhttp3.*;

public class Main {
		// define a proxy pool
       private static final List<ProxyInfo> proxyList = new ArrayList<>();
 
    static {
        proxyList.add(new ProxyInfo(""140.238.247.9"", 8100));
        proxyList.add(new ProxyInfo(""213.188.211.61"", 3128));
        proxyList.add(new ProxyInfo(""67.43.227.229"", 20195));
    }

	// create static proxyInfo class
    static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }

	String run(String url) throws IOException {
        // randomly select a proxy from the list
        Random random = new Random();
        int index = random.nextInt(proxyList.size());
        ProxyInfo proxyInfo = proxyList.get(index);

		// create a proxy object with the selected proxy details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));
		
		// create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }

}"
017vxKRV,Untitled,dereksir,Java,Monday 29th of April 2024 09:03:48 PM CDT,"//...
String run(String url) throws IOException {
	// randomly select a proxy from the list
	ProxyInfo proxyInfo = getRandomProxy();

	// Create a proxy object with the selected proxy details
	Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));

}"
Avdqsn3Q,Untitled,dereksir,Java,Monday 29th of April 2024 08:59:21 PM CDT," static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }"
SSwAXP8F,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,Osvaldorino,GetText,Monday 29th of April 2024 08:55:06 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_340390.pdf

Working as of:
30 April 2024"
FLmVvtzm,Untitled,jabela,Python,Monday 29th of April 2024 08:51:46 PM CDT,"class Bird:
    def __init__(self, name, nativeTo, diet, conservation):
        self.name = name
        self.nativeTo = nativeTo
        self.diet = diet
        self.conservation = conservation

    def __str__(self):
        return (f""Name: {self.name}, ""
                f""Native To: {self.nativeTo}, ""
                f""Diet: {self.diet}, ""
                f""Conservation Status: {self.conservation}"")

# Sample bird
eagle = Bird(""Eagle"", ""North America"", ""Carnivore"", ""Least Concern"")
print(eagle)
"
K9TE8DNQ,Blight,branch_m,JavaScript,Monday 29th of April 2024 08:35:31 PM CDT,"var count=0;const tz=""Asia/Tokyo"";const ty=""2-digit"";
const s=c[""playerstats""][""stats""];
for(var i=0;i<s.length;i++){
    if(s[i].name==""DBD_Chapter17_Slasher_Stat1""){count = s[i].value;break;}};"
1ktG4rnw,Untitled,dereksir,Java,Monday 29th of April 2024 08:27:51 PM CDT,"package com.example;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;

import okhttp3.*;

public class Main {

    String run(String url) throws IOException {
        // define your proxy details
        String proxyHost = ""140.238.247.9"";
        int proxyPort = 8100;

        // create a proxy object and pass in the necessary details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));

        // create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .authenticator(new Authenticator() {
                @Override
                public Request authenticate(Route route, Response response) throws IOException {
                    // provide the credentials
                    String credential = Credentials.basic(""username"", ""password"");
                    return response.request().newBuilder()
                            .header(""Proxy-Authorization"", credential)
                            .build();
                }
            }) 
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }
}"
vAB8neP3,Untitled,dereksir,Java,Monday 29th of April 2024 08:25:59 PM CDT," @Override
// pass the route and response object in the authenticate method
public Request authenticate(Route route, Response response) throws IOException {

}"
EkSGuxhH,Untitled,dereksir,Java,Monday 29th of April 2024 08:24:29 PM CDT,"// create a OkHttpClient builder instance and configure it to use the proxy
OkHttpClient client = new OkHttpClient.Builder()
	.proxy(proxy)
	.authenticator(new Authenticator() {
 		@Override
 		public Request authenticate(Route route, Response response) throws IOException {
			// If the proxy requires authentication, provide the credentials
			String credential = Credentials.basic(proxyUsername, proxyPassword);
			return response.request().newBuilder()
				.header(""Proxy-Authorization"", credential)
				.build()
			}
		}) 
		.build();"
hXv5ssVp,Untitled,dereksir,Java,Monday 29th of April 2024 08:19:05 PM CDT,"// provide the credentials
String credential = Credentials.basic(""username"", ""password"");
return response.request().newBuilder()
		.header(""Proxy-Authorization"", credential)
		.build();"
iJxURCbt,Untitled,dereksir,Java,Monday 29th of April 2024 08:00:16 PM CDT,"	String run(String url) throws IOException {
		//...

        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
			// create instance of Authenticator interface. 
            .authenticator(new Authenticator() {

			}) 

	}"
