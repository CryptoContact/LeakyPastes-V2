id,title,username,language,date,content
MHaDgqE3,Untitled,a_chn,C++,Wednesday 17th of January 2024 11:43:41 PM CDT,"#include <algorithm>
#include <array>
#include <bitset>
#include <cassert>
#include <chrono>
#include <climits>
#include <cmath>
#include <complex>
#include <cstring>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <vector>
using namespace std;
 
#define ll long long
#define forn(i, s, n) for (int i = s; i < n; i++)
#define bforn(i, s) for (int i = s; i >= 0; i--)
// for pairs
#define s second
#define f first 
const int M = 2e5 + 1;
const char nl = '\n';
 
char g[1002][1002];
 
int newDir(int i, int j, int dir){
    if (g[i][j] == '/'){
        if (dir == 1) dir = 4;
        else if (dir == 2) dir = 3;
        else if (dir == 3) dir = 2;
        else dir = 1;
    }
    if (g[i][j] == '\\'){
        if (dir == 1) dir = 3;
        else if (dir == 2) dir = 4;
        else if (dir == 3) dir = 1;
        else dir = 2;
    }
    return dir;
}
void solve(){
    int n, m; cin >> n >> m;
    fill(g[0], g[0] + m + 1, '-');
    fill(g[n + 1], g[n + 1] + m + 1, '-');
    for (int i = 1; i <= n; i++){
        for (int j = 0; j <= m + 1; j++){
            if (j == 0 || j == m + 1){
                g[i][j] = '-';
                continue;
            }
            cin >> g[i][j];
        }
    }
    int dir = 2;
    int ans = 0;
    for (int col = 1; col <= n; col++){
        int i = col, j = 1;
        int r = 0;
        dir = 2;
        while (g[i][j] != '-'){
            dir = newDir(i, j, dir);
            if (dir == 1) j--;
            if (dir == 2) j++;
            if (dir == 3) i--;
            if (dir == 4) i++;
            r++;
            //cout << i << ' ' << j << nl;
        }
        //cout << nl;
        ans = max(ans, r);
    }
    //cout << ans << nl;
    for (int col = 1; col <= n; col++){
        int i = col, j = m;
        int r = 0;
        dir = 1;
        while (g[i][j] != '-'){
            dir = newDir(i, j, dir);
            if (dir == 1) j--;
            if (dir == 2) j++;
            if (dir == 3) i--;
            if (dir == 4) i++;
            r++;
        }
        ans = max(ans, r);
    }
    //cout << ans << nl;
    for (int row = 1; row <= m; row++){
        dir = 4;
        int i = 1, j = row;
        int r = 0;
        while (g[i][j] != '-'){
            dir = newDir(i, j, dir);
            if (dir == 1) j--;
            if (dir == 2) j++;
            if (dir == 3) i--;
            if (dir == 4) i++;
            r++;
        }
        ans = max(ans, r);
    }
    //cout << ans << nl;
    for (int row = 1; row <= m; row++){
        dir = 3;
        int i = n, j = row;
        int r = 0;
        while (g[i][j] != '-'){
            dir = newDir(i, j, dir);
            if (dir == 1) j--;
            if (dir == 2) j++;
            if (dir == 3) i--;
            if (dir == 4) i++;
            r++;
        }
        ans = max(ans, r);
    }
    cout << ans << nl;
}
// if you are unsure of how to do a problem by hand
// the solution is most likely somewhat brute force (i.e binsearch)
// if input is limited to 0-9 or a-z, usually you will loop through all combinations
// of letters or numbers
// constructive problems : start with 1 when constructing
// :%y+ to copy all lines
// rearrange math expressions
// difference array? (a[i] - b[i])
// debugging : reread the problem statement-every word is important!
// debugging : print important variables!
// think brute force sol first
int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    freopen(""mirror.in"", ""r"", stdin);
    freopen(""mirror.out"", ""w"", stdout);
    solve();
}
 "
Ad6dS1aM,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Wednesday 17th of January 2024 11:43:27 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

199334"
zG64350S,VB6 Hash,areyesram,VisualBasic,Wednesday 17th of January 2024 11:30:01 PM CDT,"Option Explicit

Private Const CALG_SHA_256 As Long = 0x0000800C
Private Const HP_HASHVAL As Long = 2
Private Const PROV_RSA_FULL As Long = 1

Private Declare Function CryptAcquireContext Lib ""advapi32.dll"" Alias ""CryptAcquireContextA"" _
    (ByRef phProv As Long, ByVal pszContainer As String, ByVal pszProvider As String, _
    ByVal dwProvType As Long, ByVal dwFlags As Long) As Long

Private Declare Function CryptCreateHash Lib ""advapi32.dll"" _
    (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, _
    ByRef phHash As Long) As Long

Private Declare Function CryptHashData Lib ""advapi32.dll"" _
    (ByVal hHash As Long, ByVal pbData As String, ByVal dwDataLen As Long, ByVal dwFlags As Long) As Long

Private Declare Function CryptGetHashParam Lib ""advapi32.dll"" _
    (ByVal hHash As Long, ByVal dwParam As Long, ByRef pbData As Any, ByRef pdwDataLen As Long, _
    ByVal dwFlags As Long) As Long

Private Declare Function CryptReleaseContext Lib ""advapi32.dll"" _
    (ByVal hProv As Long, ByVal dwFlags As Long) As Long

Public Function CalculateSHA256Hash(ByVal inputString As String) As String
    Dim hCryptProv As Long
    Dim hHash As Long
    Dim hashValue() As Byte
    Dim i As Long

    ' Acquire a cryptographic context
    If CryptAcquireContext(hCryptProv, vbNullString, vbNullString, PROV_RSA_FULL, 0) = 0 Then
        MsgBox ""Error acquiring cryptographic context.""
        Exit Function
    End If

    ' Create a hash object
    If CryptCreateHash(hCryptProv, CALG_SHA_256, 0, 0, hHash) = 0 Then
        MsgBox ""Error creating hash object.""
        CryptReleaseContext hCryptProv, 0
        Exit Function
    End If

    ' Hash the input data
    If CryptHashData(hHash, ByVal inputString, Len(inputString), 0) = 0 Then
        MsgBox ""Error hashing data.""
        CryptReleaseContext hCryptProv, 0
        CryptDestroyHash hHash
        Exit Function
    End If

    ' Get the hash value
    ReDim hashValue(31)
    If CryptGetHashParam(hHash, HP_HASHVAL, hashValue(0), 32, 0) = 0 Then
        MsgBox ""Error retrieving hash value.""
        CryptReleaseContext hCryptProv, 0
        CryptDestroyHash hHash
        Exit Function
    End If

    ' Release resources
    CryptDestroyHash hHash
    CryptReleaseContext hCryptProv, 0

    ' Convert the byte array to a hex string
    Dim hexHash As String
    For i = 0 To UBound(hashValue)
        hexHash = hexHash & Right(""0"" & Hex(hashValue(i)), 2)
    Next i

    CalculateSHA256Hash = hexHash
End Function

Private Sub Form_Load()
    ' Example usage
    MsgBox ""SHA-256 Hash: "" & CalculateSHA256Hash(""Hello, World!"")
End Sub
"
g6skBqYt,C#_3_work_by_specific_column_and_field,Legiomax,C#,Wednesday 17th of January 2024 11:20:13 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[,] twoSizeArray = new int[4, 4];
            int rowSum = 0;
            int rowMult = 1;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;
            int arraySecondRow = 1;
            int arraySecondColumn = 1;

            Random rand = new Random();

            for (int i = 0; i < twoSizeArray.GetLength(0); i++)
            {
                for (int j = 0; j < twoSizeArray.GetLength(1); j++)
                {
                    twoSizeArray[i, j] = rand.Next(lowRangeRandom, highRangeRandom);

                    if (i == arraySecondRow)
                    {
                        rowSum += twoSizeArray[i, j];
                    }
                    Console.Write(twoSizeArray[i, j] + "" "");
                }

                rowMult *= twoSizeArray[i, arraySecondColumn];
                Console.WriteLine();
            }

            Console.WriteLine($""Сумма чисел второй строки - {rowSum}"");
            Console.WriteLine($""Произведение чисел второго столбца - {rowMult}"");
            Console.ReadKey();
        }
    }
}
"
qtjzng1D,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Wednesday 17th of January 2024 11:06:16 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_219561.pdf
 
Working as of
18 January 2024"
CyffKjaW,All-AHK-Script.ahk,Najeebsk,Autohotkey,Wednesday 17th of January 2024 11:02:00 PM CDT,"My All Script Of AutoHotKey Link Click
https://cashifylink.com/2y3o"
bpHGpJdT,shuffleArray.js,c-mcbride,JavaScript,Wednesday 17th of January 2024 10:59:59 PM CDT,"//Time Complexity: O(n)
//Space Complexity: O(n)
const shuffle = (arr) => {
  let newArray = [];
  let usedIndex = [];
  let numberOfElements = arr.length;

  //We need to add n elements to the new array, we use numberOfElements to keep track of how many more n's we need
  while(numberOfElements > 0){
    let index = getRandomInt(0, arr.length); //Randomly generate an index to add

    //If the value at the generated index hasn't been added, add it to the new array and decrement the # we need to add
    if(!usedIndex.includes(index)){
      let valueToAdd = arr[index];
      newArray.push(valueToAdd);
      usedIndex.push(index);
      numberOfElements--;
    }
  }
  return newArray;
};

function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

const arr = [2, 5, 1, 3, 4, 7];
console.log(shuffle(arr))"
1Q1ziMbq,Untitled,random_zebra,XML,Wednesday 17th of January 2024 10:18:24 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<!-- GameData1 -->
<!-- Author: randomzebra -->
<!-- DateCreated: 1/17/2024 9:58:08 PM -->
<GameData>
	<Units>
		<Update>
			<Where UnitType=""UNIT_SETTLER"" />
			<Set BaseMoves=""4"" />
		</Update>
	</Units>
	<Adjacency_YieldChanges>
		<Row ID=""SeaStead_Wind_Yield"" Description=""Randomzebra's 1st mod!"" YieldType=""YIELD_GOLD"" YieldChange=""5"" TilesRequired=""1"" AdjacentImprovement=""IMPROVEMENT_MINE""/>
	</Adjacency_YieldChanges>
	<Improvement_Adjacencies>
		<Row ImprovementType=""IMPROVEMENT_SEASTEAD"" YieldType=""SeaStead_Wind_Yield""/>
	</Improvement_Adjacencies>>
</GameData>
"
QsnGGEz9,best bot #1 snowybot,coinwalk,JavaScript,Wednesday 17th of January 2024 10:04:00 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var james = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 5.9;
var downer = 11.9;
var adrian = false;
var fart = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    adrian = true;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(!adrian)){
    upper = 7.9;
    downer = 9.9;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(adrian)){
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*4))<=botplus)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
}
if ((botplus>=(oldestbal/100))&&(bellance!=fart)&&(bellance>james)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
JZVsCQ8v,邀您一起看：电视家TV v3.10.31去除广告破解版_电视直播APP_去盗版提示,xiaomianao666,JavaScript,Wednesday 17th of January 2024 09:59:53 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥电视家TV v3.10.31去除广告破解版_电视直播APP_去盗版提示@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5pyo6aOO6L2v5Lu256uZXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cHM6Ly93d3cubWZyanouY29tL3NvZnQvZGlhbnNoaWppYS5odG1sO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcIm1vdmllXzFcIixcImZpbmRfcnVsZVwiOlwianM6XFxudmFyIGQ9W107XFxudmFyIGh0bWw9Z2V0UmVzQ29kZSgpO1xcbnZhciB0YWJzPXBhcnNlRG9tRm9ySHRtbChodG1sLCdib2R5JiZhcnRpY2xlJiZIdG1sJyk7XFxuXFxuZC5wdXNoKHtcXG5cXHRcXHRcXHR0aXRsZTogdGFicyxcXG4gICAgZGVzYzonJyxcXG4gICAgcGljX3VybDonaW1nJiZzcmMnKyBcXFwiQFJlZmVyZXI9XFxcIixcXG4gICAgdXJsOicnLFxcblxcdFxcdGNvbF90eXBlOiAncmljaF90ZXh0J1xcbn0pO1xcblxcbnNldEhvbWVSZXN1bHQoe2RhdGE6ZH0pO1wiLFwiZ3JvdXBcIjpcIuW3peWFt1wiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiXCIsXCJwYWdlc1wiOlwiW11cIn0iLCJwaWNVcmwiOiJodHRwOi8vdHUueWVkaW1pZmVuZy5jb20vaW1hZ2VzLzIwMjIvMDgvMTIvMjdmNWIxY2U0ZDBiZmIzMWY1MmRjMDI3YTcxYjhlZDUuanBnIiwidGl0bGUiOiLnlLXop4blrrZUViB2My4xMC4zMeWOu+mZpOW5v+WRiuegtOino+eJiF/nlLXop4bnm7Tmkq1BUFBf5Y6755uX54mI5o+Q56S6In0=
UEe9MJa1,Base de datos - PROYECTO,Hatkat,MySQL,Wednesday 17th of January 2024 09:23:05 PM CDT,"create database circo;
use circo;

create table usuario(
    idUsuario smallint not null auto_increment,
    nombreUsuario varchar(50) not null,
    apellidoUsuario varchar(50) not null,
    cedulaUsuario varchar(10) not null,
    edadUsuario date not null,
    userUsuario varchar(50) not null,
    passwordUsuario varchar(50) not null,
    Primary key(idUsuario)
);

create table direccion(
    idDireccion smallint not null auto_increment,
    nombreDireccion varchar(50) not null,
    Primary key(idDireccion)
);
INSERT INTO direccion (nombreDireccion) VALUES
    ('Malecón Simón Bolívar'),
    ('Cdla. Kennedy'),
    ('Urdesa Central'),
    ('Sauces 8'),
    ('La Alborada'),
    ('Centro de Guayaquil'),
    ('Los Ceibos');


create table evento(
    idEvento smallint not null auto_increment,
    nombreEvento varchar(50) not null,
    fechaEvento date not null,
    horaInicioEvento time not null,
    cantidadPersonasEvento smallint not null,
    idDireccion smallint not null,
    Primary key(idEvento),
    foreign key(idDireccion) references direccion(idDireccion)
    on delete restrict
    on update cascade
);
INSERT INTO evento (nombreEvento, fechaEvento, horaInicioEvento, cantidadPersonasEvento, idDireccion) VALUES
    ('Malabarismo', '2024-02-05', '18:00:00', 500, 1),
    ('Payaso Show', '2024-02-08', '15:30:00', 300, 2),
    ('Acrobacias Estelar', '2024-03-12', '15:45:00', 700, 3),
    ('Magia Mística', '2024-03-15', '17:00:00', 200, 4),
    ('Un Show de Circo', '2024-03-18', '10:15:00', 300, 5),
    ('Circo Infantil Aventuras', '2024-01-22', '14:00:00', 200, 6),
    ('Trapecistas Show', '2024-03-25', '16:30:00', 300, 7),
    ('Circo Emoción', '2024-03-28', '15:00:00', 450, 1),
    ('Show Circo', '2024-03-29', '11:00:00', 180, 3),
    ('Circo Musical', '2024-04-26', '13:30:00', 200, 2);


create table localidad(
    idLocalidad smallint not null auto_increment,
    nombreLocalidad varchar(50) not null,
    precioLocalidad float not null,
    Primary key(idLocalidad)
);
INSERT INTO localidad (nombreLocalidad, precioLocalidad) VALUES
    ('Platea VIP', 30.50),
    ('Platea Preferencial', 25.00),
    ('Tribuna Central', 20.00),
    ('Tribuna Lateral', 15.50),
    ('Palco VIP', 40.00),
    ('Palco Lateral', 35.00),
    ('Gradas Frontales', 18.00),
    ('Gradas Laterales', 16.50),
    ('Gradas Superiores', 22.00),
    ('Gradas Inferiores', 12.00);

create table eventoLocalidad(
    idEventoLocalidad smallint not null auto_increment,
    idEvento smallint not null,
    idLocalidad smallint not null,
    cantidadPorEventoLocalidad smallint not null,
    Primary key(idEventoLocalidad),
    foreign key(idEvento) references evento(idEvento)
    on delete restrict
    on update cascade,
    foreign key(idLocalidad) references localidad(idLocalidad)
    on delete restrict
    on update cascade
);
INSERT INTO eventoLocalidad (idEvento, idLocalidad, cantidadPorEventoLocalidad) VALUES
    (1, 1, 200),
    (1, 2, 150),
    (1, 3, 150),
    (2, 4, 100),
    (2, 5, 200), 
    (3, 6, 250),
    (3, 7, 450), 
    (4, 8, 120),
    (4, 9, 80),  
    (5, 10, 300), 
    (6, 1, 150),
    (6, 2, 50),
    (7, 3, 180),
    (7, 4, 120),
    (8, 5, 250),
    (8, 6, 200), 
    (9, 7, 100),
    (9, 8, 80), 
    (10, 9, 120),
    (10, 10, 80);

create table descuento(
    idDescuento  smallint not null auto_increment,
    tipoDescuento varchar(100) not null,
    porcentajeDescuento smallint not null,
    Primary key(idDescuento)
);
INSERT INTO descuento (tipoDescuento, porcentajeDescuento)
VALUES ('Edad', 5);
INSERT INTO descuento (tipoDescuento, porcentajeDescuento)
VALUES ('Discapacidad', 10);

create table entrada(
    idEntrada smallint not null auto_increment,
    idEvento smallint not null,
    cantidadPersonasEntrada smallint not null,
    Primary key(idEntrada),
    foreign key(idEvento) references evento(idEvento)
    on delete restrict
    on update cascade
);

create table factura(
    idFactura smallint not null auto_increment,
    fechaFactura date not null,
    idUsuario smallint not null,
    idEntrada smallint not null,
    descripcionFactura text not null,
    totalFactura float not null,
    Primary key(idFactura),
    foreign key(idUsuario) references usuario(idUsuario)
    on delete restrict
    on update cascade,
    foreign key(idEntrada) references entrada(idEntrada)
    on delete restrict
    on update cascade
);"
WZUWN5pn,News Jan17 24,Newscaster_Ned,Email,Wednesday 17th of January 2024 09:14:42 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

N‎-‎-‎

M‎S‎N‎B‎C‎'‎s‎ ‎R‎e‎i‎d‎:‎ ‎T‎r‎u‎m‎p‎ ‎V‎o‎t‎e‎r‎s‎ ‎H‎a‎v‎e‎ ‎'‎R‎a‎c‎i‎a‎l‎ ‎A‎n‎x‎i‎e‎t‎y‎'‎ ‎-‎-‎ ‎T‎h‎e‎y‎ ‎'‎W‎a‎n‎t‎ ‎R‎e‎v‎e‎n‎g‎e‎'‎
G‎o‎l‎d‎m‎a‎n‎:‎ ‎S‎t‎e‎f‎a‎n‎i‎k‎ ‎H‎a‎s‎ ‎N‎o‎ ‎M‎o‎r‎a‎l‎s‎,‎ ‎N‎o‎ ‎I‎n‎t‎e‎g‎r‎i‎t‎y‎,‎ ‎S‎h‎e‎ ‎I‎s‎ ‎a‎ ‎T‎r‎u‎m‎p‎ ‎S‎y‎c‎o‎p‎h‎a‎n‎t‎
T‎r‎u‎m‎p‎ ‎T‎o‎r‎c‎h‎e‎s‎ ‎H‎a‎l‎e‎y‎ ‎i‎n‎ ‎N‎e‎w‎ ‎H‎a‎m‎p‎s‎h‎i‎r‎e‎ ‎A‎d‎d‎r‎e‎s‎s‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎S‎p‎e‎a‎k‎s‎ ‎i‎n‎ ‎P‎o‎r‎t‎s‎m‎o‎u‎t‎h‎,‎ ‎N‎e‎w‎ ‎H‎a‎m‎p‎s‎h‎i‎r‎e‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
D‎H‎S‎ ‎C‎h‎i‎e‎f‎ ‎A‎l‎e‎j‎a‎n‎d‎r‎o‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎A‎p‎p‎e‎a‎r‎ ‎B‎e‎f‎o‎r‎e‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎A‎l‎o‎n‎g‎s‎i‎d‎e‎ ‎A‎n‎g‎e‎l‎ ‎M‎o‎m‎s‎
E‎A‎G‎L‎E‎ ‎P‎A‎S‎S‎,‎ ‎T‎E‎X‎A‎S‎ ‎-‎ ‎J‎A‎N‎U‎A‎R‎Y‎ ‎0‎8‎:‎ ‎U‎.‎S‎.‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎o‎f‎ ‎H‎o‎m‎e‎l‎a‎n‎d‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎A‎l‎e‎j‎a‎n‎d‎r‎o‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎h‎o‎l‎d‎s‎ ‎a‎ ‎p‎r‎e‎s‎s‎ ‎c‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎a‎t‎ ‎a‎ ‎U‎.‎S‎.‎ ‎B‎o‎r‎d‎e‎r‎ ‎P‎a‎t‎r‎o‎l‎ ‎s‎t‎a‎t‎i‎o‎n‎ ‎o‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎0‎8‎,‎ ‎2‎0‎2‎4‎ ‎i‎n‎ ‎E‎a‎g‎l‎e‎ ‎P‎a‎s‎s‎,‎ ‎T‎e‎x‎a‎s‎.‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎v‎i‎s‎i‎t‎e‎d‎ ‎T‎e‎x‎a‎s‎ ‎b‎o‎r‎d‎e‎r‎ ‎a‎r‎e‎a‎s‎ ‎w‎h‎e‎r‎e‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎h‎a‎d‎ ‎b‎e‎e‎n‎ ‎c‎r‎o‎s‎s‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎R‎i‎o‎ ‎G‎r‎a‎n‎d‎e‎ ‎f‎r‎o‎m‎ ‎…‎
D‎H‎S‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎A‎l‎e‎j‎a‎n‎d‎r‎o‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎i‎s‎ ‎o‎n‎c‎e‎ ‎a‎g‎a‎i‎n‎ ‎r‎e‎f‎u‎s‎i‎n‎g‎ ‎t‎o‎ ‎a‎p‎p‎e‎a‎r‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎H‎o‎m‎e‎l‎a‎n‎d‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎.‎

T‎r‎u‎m‎p‎ ‎A‎c‎c‎u‎s‎e‎r‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎B‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎M‎e‎g‎a‎-‎D‎o‎n‎o‎r‎ ‎R‎e‎i‎d‎ ‎H‎o‎f‎f‎m‎a‎n‎
T‎r‎u‎m‎p‎ ‎A‎c‎c‎u‎s‎e‎r‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎B‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎M‎e‎g‎a‎-‎D‎o‎n‎o‎r‎ ‎R‎e‎i‎d‎ ‎H‎o‎f‎f‎m‎a‎n‎
7‎3‎2‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎:‎ ‎B‎i‎d‎e‎n‎ ‎S‎c‎r‎e‎w‎e‎d‎ ‎I‎t‎ ‎U‎p‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎:‎ ‎B‎i‎d‎e‎n‎ ‎S‎c‎r‎e‎w‎e‎d‎ ‎I‎t‎ ‎U‎p‎
4‎,‎1‎9‎9‎
B‎O‎R‎D‎E‎R‎ ‎S‎H‎O‎W‎D‎O‎W‎N‎:‎ ‎T‎e‎x‎a‎s‎ ‎t‎o‎ ‎D‎e‎f‎y‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎'‎s‎ ‎O‎r‎d‎e‎r‎ ‎f‎o‎r‎ ‎P‎a‎r‎k‎ ‎A‎c‎c‎e‎s‎s‎
B‎O‎R‎D‎E‎R‎ ‎S‎H‎O‎W‎D‎O‎W‎N‎:‎ ‎T‎e‎x‎a‎s‎ ‎t‎o‎ ‎D‎e‎f‎y‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎'‎s‎ ‎O‎r‎d‎e‎r‎ ‎f‎o‎r‎ ‎P‎a‎r‎k‎ ‎A‎c‎c‎e‎s‎s‎
1‎9‎4‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎J‎u‎d‎g‎e‎ ‎i‎n‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎T‎r‎i‎a‎l‎:‎ ‎I‎ ‎W‎o‎u‎l‎d‎ ‎'‎L‎o‎v‎e‎ ‎I‎t‎'‎ ‎i‎f‎ ‎Y‎o‎u‎ ‎T‎h‎r‎e‎w‎ ‎M‎e‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎J‎u‎d‎g‎e‎ ‎i‎n‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎T‎r‎i‎a‎l‎:‎ ‎I‎ ‎W‎o‎u‎l‎d‎ ‎'‎L‎o‎v‎e‎ ‎I‎t‎'‎ ‎i‎f‎ ‎Y‎o‎u‎ ‎T‎h‎r‎e‎w‎ ‎M‎e‎
8‎9‎6‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎s‎h‎a‎k‎e‎s‎ ‎h‎a‎n‎d‎s‎ ‎w‎i‎t‎h‎ ‎C‎h‎a‎i‎r‎m‎a‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎J‎o‎i‎n‎t‎ ‎C‎h‎i‎e‎f‎s‎ ‎o‎f‎ ‎S‎t‎a‎f‎f‎ ‎G‎e‎n‎.‎ ‎M‎a‎r‎k‎ ‎M‎i‎l‎l‎e‎y‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎b‎r‎i‎e‎f‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎s‎e‎n‎i‎o‎r‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎l‎e‎a‎d‎e‎r‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎C‎a‎b‎i‎n‎e‎t‎ ‎R‎o‎o‎m‎ ‎a‎t‎ ‎t‎h‎e‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎M‎o‎n‎d‎a‎y‎,‎ ‎O‎c‎t‎.‎ ‎7‎,‎ ‎2‎0‎1‎9‎.‎ ‎(‎A‎P‎ ‎P‎h‎o‎t‎o‎/‎C‎a‎r‎o‎l‎y‎n‎ ‎K‎a‎s‎t‎e‎r‎)‎
N‎e‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎e‎r‎ ‎C‎l‎a‎i‎m‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎W‎a‎n‎t‎s‎ ‎H‎i‎s‎ ‎O‎w‎n‎ ‎M‎e‎r‎c‎e‎n‎a‎r‎y‎ ‎F‎o‎r‎c‎e‎
7‎,‎7‎5‎6‎
V‎P‎ ‎H‎a‎r‎r‎i‎s‎:‎ ‎'‎W‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎A‎l‎l‎ ‎B‎e‎ ‎S‎c‎a‎r‎e‎d‎'‎ ‎I‎f‎ ‎T‎r‎u‎m‎p‎ ‎E‎l‎e‎c‎t‎e‎d‎ ‎F‎r‎e‎e‎d‎o‎m‎s‎ ‎a‎t‎ ‎S‎t‎a‎k‎e‎
V‎P‎ ‎H‎a‎r‎r‎i‎s‎:‎ ‎'‎W‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎A‎l‎l‎ ‎B‎e‎ ‎S‎c‎a‎r‎e‎d‎'‎ ‎I‎f‎ ‎T‎r‎u‎m‎p‎ ‎E‎l‎e‎c‎t‎e‎d‎ ‎F‎r‎e‎e‎d‎o‎m‎s‎ ‎a‎t‎ ‎S‎t‎a‎k‎e‎
8‎4‎1‎
C‎h‎i‎n‎a‎ ‎o‎n‎ ‎I‎o‎w‎a‎:‎ ‎'‎T‎h‎e‎ ‎W‎o‎r‎l‎d‎ ‎S‎h‎o‎u‎l‎d‎ ‎P‎r‎e‎p‎a‎r‎e‎'‎ ‎f‎o‎r‎ ‎R‎e‎t‎u‎r‎n‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎
C‎h‎i‎n‎a‎ ‎o‎n‎ ‎I‎o‎w‎a‎:‎ ‎'‎T‎h‎e‎ ‎W‎o‎r‎l‎d‎ ‎S‎h‎o‎u‎l‎d‎ ‎P‎r‎e‎p‎a‎r‎e‎'‎ ‎f‎o‎r‎ ‎R‎e‎t‎u‎r‎n‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎
6‎,‎4‎7‎1‎
A‎r‎g‎e‎n‎t‎i‎n‎a‎'‎s‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎W‎a‎r‎n‎s‎ ‎D‎a‎v‎o‎s‎ ‎t‎o‎ ‎A‎b‎a‎n‎d‎o‎n‎ ‎S‎o‎c‎i‎a‎l‎i‎s‎m‎
A‎r‎g‎e‎n‎t‎i‎n‎a‎'‎s‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎W‎a‎r‎n‎s‎ ‎D‎a‎v‎o‎s‎ ‎t‎o‎ ‎A‎b‎a‎n‎d‎o‎n‎ ‎S‎o‎c‎i‎a‎l‎i‎s‎m‎
3‎,‎0‎8‎5‎
S‎p‎e‎a‎k‎e‎r‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎D‎o‎u‎b‎l‎e‎s‎ ‎D‎o‎w‎n‎:‎ ‎N‎o‎ ‎D‎e‎a‎l‎ ‎o‎n‎ ‎B‎o‎r‎d‎e‎r‎
2‎,‎3‎8‎6‎
R‎e‎p‎o‎r‎t‎:‎ ‎O‎p‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎B‎i‎l‎l‎ ‎M‎a‎y‎ ‎B‎e‎ ‎V‎o‎t‎e‎d‎ ‎o‎n‎ ‎'‎N‎e‎x‎t‎ ‎W‎e‎e‎k‎'‎
R‎e‎p‎o‎r‎t‎:‎ ‎O‎p‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎B‎i‎l‎l‎ ‎M‎a‎y‎ ‎B‎e‎ ‎V‎o‎t‎e‎d‎ ‎o‎n‎ ‎'‎N‎e‎x‎t‎ ‎W‎e‎e‎k‎'‎

G‎u‎l‎f‎p‎o‎r‎t‎:‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎H‎o‎m‎o‎s‎e‎x‎u‎a‎l‎ ‎B‎r‎e‎a‎k‎s‎ ‎i‎n‎t‎o‎ ‎H‎o‎m‎e‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎9‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎.‎

W‎e‎l‎l‎.‎ ‎H‎e‎'‎s‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎4‎0‎ ‎y‎e‎a‎r‎s‎.‎


O‎r‎l‎e‎a‎n‎s‎ ‎P‎a‎r‎i‎s‎h‎ ‎H‎o‎m‎i‎n‎i‎d‎ ‎P‎l‎e‎a‎d‎s‎ ‎G‎u‎i‎l‎t‎y‎ ‎t‎o‎ ‎R‎a‎p‎i‎n‎g‎ ‎3‎ ‎Y‎o‎u‎n‎g‎ ‎G‎i‎r‎l‎s‎.‎


S‎u‎r‎v‎e‎i‎l‎l‎a‎n‎c‎e‎ ‎F‎o‎o‎t‎a‎g‎e‎ ‎S‎h‎o‎w‎s‎ ‎M‎o‎n‎k‎e‎y‎ ‎J‎e‎w‎e‎l‎ ‎H‎e‎i‎s‎t‎ ‎i‎n‎ ‎G‎u‎t‎h‎r‎i‎e‎.‎


 ‎M‎e‎l‎b‎o‎u‎r‎n‎e‎:‎ ‎P‎u‎b‎e‎h‎e‎a‎d‎ ‎S‎t‎e‎a‎l‎s‎ ‎T‎o‎i‎l‎e‎t‎ ‎P‎a‎p‎e‎r‎ ‎f‎r‎o‎m‎ ‎D‎i‎s‎c‎o‎u‎n‎t‎ ‎S‎t‎o‎r‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎M‎y‎ ‎c‎a‎t‎ ‎i‎s‎ ‎d‎y‎i‎n‎g‎.‎.‎.‎ ‎I‎ ‎w‎a‎n‎t‎ ‎y‎o‎u‎ ‎t‎o‎ ‎s‎e‎n‎d‎ ‎y‎o‎u‎r‎ ‎p‎r‎a‎y‎e‎r‎s‎ ‎p‎l‎e‎a‎s‎e‎.‎

H‎a‎r‎d‎ ‎F‎r‎e‎e‎z‎e‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎+‎1‎ ‎M‎o‎r‎e‎
T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
4‎5‎°‎
/‎3‎5‎°‎
1‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎7‎ ‎|‎ ‎D‎a‎y‎
4‎5‎°‎
1‎%‎
S‎
1‎2‎
 ‎
m‎p‎h‎
S‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎4‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
3‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎5‎4‎ ‎p‎m‎
W‎e‎d‎ ‎1‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎5‎°‎
8‎%‎
S‎S‎W‎
8‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎3‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎4‎4‎ ‎a‎m‎
F‎i‎r‎s‎t‎ ‎Q‎u‎a‎r‎t‎e‎r‎
M‎o‎o‎n‎s‎e‎t‎
-‎-‎
T‎h‎u‎ ‎1‎8‎
S‎u‎n‎n‎y‎
7‎0‎°‎
/‎3‎4‎°‎
7‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎9‎
S‎u‎n‎n‎y‎/‎W‎i‎n‎d‎
4‎5‎°‎
/‎2‎2‎°‎
1‎%‎
N‎N‎E‎ ‎2‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
4‎5‎°‎
/‎3‎3‎°‎
0‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎1‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
4‎8‎°‎
/‎4‎4‎°‎
5‎2‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎4‎°‎
/‎5‎4‎°‎
8‎4‎%‎
S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎5‎4‎°‎
7‎4‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎9‎°‎
/‎5‎0‎°‎
6‎1‎%‎
N‎N‎W‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
S‎h‎o‎w‎e‎r‎s‎
6‎9‎°‎
/‎4‎7‎°‎
4‎4‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎4‎°‎
4‎2‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎1‎°‎
/‎4‎2‎°‎
4‎5‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
S‎h‎o‎w‎e‎r‎s‎
5‎8‎°‎
/‎4‎0‎°‎
5‎3‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎1‎°‎
/‎4‎1‎°‎
2‎4‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎3‎°‎
/‎4‎1‎°‎
2‎4‎%‎
W‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎1‎°‎
5‎%‎
W‎N‎W‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎L‎e‎t‎ ‎i‎t‎ ‎g‎o‎!‎ ‎J‎u‎s‎t‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎l‎e‎t‎ ‎i‎t‎ ‎g‎o‎!‎ 🥶

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

M‎o‎d‎e‎r‎a‎t‎o‎r‎
I‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎o‎f‎ ‎I‎n‎t‎e‎r‎n‎e‎t‎ ‎f‎o‎r‎u‎m‎s‎ ‎a‎n‎d‎ ‎m‎e‎s‎s‎a‎g‎e‎b‎o‎a‎r‎d‎s‎,‎ ‎""‎m‎o‎d‎e‎r‎a‎t‎o‎r‎s‎""‎ ‎(‎o‎f‎t‎e‎n‎ ‎a‎b‎b‎r‎e‎v‎i‎a‎t‎e‎d‎ ‎t‎o‎ ‎""‎m‎o‎d‎s‎""‎)‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎o‎f‎ ‎p‎o‎l‎i‎c‎e‎m‎e‎n‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎c‎e‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎r‎e‎a‎l‎ ‎a‎u‎t‎h‎o‎r‎i‎t‎y‎ ‎e‎x‎c‎e‎p‎t‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎i‎r‎ ‎g‎a‎y‎ ‎a‎s‎s‎ ‎w‎e‎b‎ ‎s‎i‎t‎e‎s‎.‎ ‎R‎a‎n‎k‎i‎n‎g‎ ‎s‎o‎m‎e‎w‎h‎e‎r‎e‎ ‎b‎e‎l‎o‎w‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎o‎r‎s‎,‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎a‎s‎s‎i‎g‎n‎e‎d‎ ‎t‎h‎e‎ ‎t‎a‎s‎k‎ ‎o‎f‎ ‎e‎n‎s‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎r‎u‎l‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎f‎o‎r‎u‎m‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎""‎m‎o‎d‎e‎r‎a‎t‎e‎""‎ ‎a‎r‎e‎ ‎r‎i‎g‎i‎d‎l‎y‎ ‎a‎d‎h‎e‎r‎e‎d‎ ‎t‎o‎ ‎b‎y‎ ‎t‎h‎e‎ ‎r‎a‎n‎k‎-‎a‎n‎d‎-‎f‎i‎l‎e‎ ‎b‎o‎a‎r‎d‎ ‎m‎e‎m‎b‎e‎r‎s‎h‎i‎p‎ ‎w‎h‎i‎l‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎t‎i‎m‎e‎ ‎w‎i‎l‎l‎f‎u‎l‎l‎y‎ ‎i‎g‎n‎o‎r‎i‎n‎g‎ ‎t‎h‎e‎s‎e‎ ‎r‎u‎l‎e‎s‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎.‎ ‎G‎i‎v‎e‎n‎ ‎s‎p‎e‎c‎i‎a‎l‎ ‎p‎o‎w‎e‎r‎s‎ ‎b‎y‎ ‎t‎h‎e‎ ‎b‎o‎a‎r‎d‎'‎s‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎o‎r‎s‎ ‎t‎o‎ ‎a‎s‎s‎i‎s‎t‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎i‎s‎ ‎e‎n‎d‎e‎a‎v‎o‎r‎,‎ ‎i‎t‎ ‎i‎s‎ ‎c‎o‎m‎m‎o‎n‎ ‎f‎o‎r‎ ‎t‎h‎e‎s‎e‎ ‎p‎o‎w‎e‎r‎s‎ ‎t‎o‎ ‎b‎e‎ ‎a‎b‎u‎s‎e‎d‎ ‎a‎t‎ ‎a‎ ‎w‎h‎i‎m‎,‎ ‎a‎n‎d‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎i‎n‎e‎v‎i‎t‎a‎b‎l‎e‎ ‎h‎o‎w‎l‎s‎ ‎o‎f‎ ‎p‎r‎o‎t‎e‎s‎t‎ ‎f‎o‎l‎l‎o‎w‎,‎ ‎t‎o‎ ‎u‎s‎e‎ ‎t‎h‎e‎s‎e‎ ‎s‎a‎m‎e‎ ‎p‎o‎w‎e‎r‎s‎ ‎t‎o‎ ‎s‎i‎l‎e‎n‎c‎e‎ ‎d‎i‎s‎s‎e‎n‎t‎.‎ ‎I‎n‎ ‎a‎ ‎n‎u‎t‎s‎h‎e‎l‎l‎,‎ ‎m‎o‎d‎e‎r‎a‎t‎o‎r‎s‎ ‎p‎a‎r‎t‎a‎k‎e‎ ‎i‎n‎ ‎i‎n‎t‎e‎n‎s‎e‎ ‎f‎a‎g‎g‎o‎t‎r‎y‎.‎


(‎(‎ ‎T‎H‎E‎Y‎ ‎D‎O‎ ‎I‎T‎ ‎F‎O‎R‎ ‎F‎R‎E‎E‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎B‎a‎t‎t‎l‎e‎ ‎o‎f‎ ‎A‎n‎t‎i‎e‎t‎a‎m‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎B‎a‎t‎t‎l‎e‎ ‎o‎f‎ ‎S‎h‎a‎r‎p‎s‎b‎u‎r‎g‎,‎ ‎w‎a‎s‎ ‎a‎ ‎b‎a‎t‎t‎l‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎i‎v‎i‎l‎ ‎W‎a‎r‎ ‎f‎o‎u‎g‎h‎t‎ ‎o‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎1‎7‎,‎ ‎1‎8‎6‎2‎,‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎C‎o‎n‎f‎e‎d‎e‎r‎a‎t‎e‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎R‎o‎b‎e‎r‎t‎ ‎E‎.‎ ‎L‎e‎e‎'‎s‎ ‎A‎r‎m‎y‎ ‎o‎f‎ ‎N‎o‎r‎t‎h‎e‎r‎n‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎ ‎a‎n‎d‎ ‎U‎n‎i‎o‎n‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎G‎e‎o‎r‎g‎e‎ ‎B‎.‎ ‎M‎c‎C‎l‎e‎l‎l‎a‎n‎'‎s‎ ‎A‎r‎m‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎o‎t‎o‎m‎a‎c‎ ‎n‎e‎a‎r‎ ‎S‎h‎a‎r‎p‎s‎b‎u‎r‎g‎,‎ ‎M‎a‎r‎y‎l‎a‎n‎d‎,‎ ‎a‎n‎d‎ ‎A‎n‎t‎i‎e‎t‎a‎m‎ ‎C‎r‎e‎e‎k‎.‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎M‎a‎r‎y‎l‎a‎n‎d‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎,‎ ‎i‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎f‎i‎e‎l‎d‎ ‎a‎r‎m‎y‎–‎l‎e‎v‎e‎l‎ ‎e‎n‎g‎a‎g‎e‎m‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎t‎h‎e‎a‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎i‎v‎i‎l‎ ‎W‎a‎r‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎p‎l‎a‎c‎e‎ ‎o‎n‎ ‎U‎n‎i‎o‎n‎ ‎s‎o‎i‎l‎.‎ ‎I‎t‎ ‎r‎e‎m‎a‎i‎n‎s‎ ‎t‎h‎e‎ ‎b‎l‎o‎o‎d‎i‎e‎s‎t‎ ‎d‎a‎y‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎h‎i‎s‎t‎o‎r‎y‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎c‎o‎m‎b‎i‎n‎e‎d‎ ‎t‎a‎l‎l‎y‎ ‎o‎f‎ ‎2‎2‎,‎7‎2‎7‎ ‎d‎e‎a‎d‎,‎ ‎w‎o‎u‎n‎d‎e‎d‎,‎ ‎o‎r‎ ‎m‎i‎s‎s‎i‎n‎g‎.‎ ‎A‎l‎t‎h‎o‎u‎g‎h‎ ‎t‎h‎e‎ ‎U‎n‎i‎o‎n‎ ‎A‎r‎m‎y‎ ‎s‎u‎f‎f‎e‎r‎e‎d‎ ‎h‎e‎a‎v‎i‎e‎r‎ ‎c‎a‎s‎u‎a‎l‎t‎i‎e‎s‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎C‎o‎n‎f‎e‎d‎e‎r‎a‎t‎e‎s‎,‎ ‎t‎h‎e‎ ‎b‎a‎t‎t‎l‎e‎ ‎w‎a‎s‎ ‎a‎ ‎m‎a‎j‎o‎r‎ ‎t‎u‎r‎n‎i‎n‎g‎ ‎p‎o‎i‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎o‎n‎'‎s‎ ‎f‎a‎v‎o‎r‎.‎ ‎T‎h‎i‎s‎ ‎1‎8‎6‎2‎ ‎i‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎b‎y‎ ‎E‎d‎w‎i‎n‎ ‎F‎o‎r‎b‎e‎s‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎c‎h‎a‎r‎g‎e‎ ‎a‎c‎r‎o‎s‎s‎ ‎B‎u‎r‎n‎s‎i‎d‎e‎'‎s‎ ‎B‎r‎i‎d‎g‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎t‎o‎o‎k‎ ‎p‎l‎a‎c‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎B‎a‎t‎t‎l‎e‎ ‎o‎f‎ ‎A‎n‎t‎i‎e‎t‎a‎m‎.‎

I‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎E‎d‎w‎i‎n‎ ‎F‎o‎r‎b‎e‎s‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎.‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎s‎a‎n‎d‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎a‎r‎e‎ ‎a‎w‎e‎s‎o‎m‎e‎.‎ ‎I‎ ‎l‎o‎v‎e‎ ‎e‎a‎t‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎s‎h‎i‎t‎t‎y‎ ‎f‎o‎o‎d‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎o‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎o‎s‎e‎ ‎s‎a‎n‎d‎ ‎n‎i‎g‎g‎e‎r‎ ‎j‎o‎i‎n‎t‎s‎ ‎t‎o‎d‎a‎y‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎ ‎f‎a‎l‎a‎f‎e‎l‎s‎.‎ ‎G‎o‎d‎ ‎I‎ ‎l‎o‎v‎e‎ ‎s‎a‎n‎d‎ ‎n‎i‎g‎g‎e‎r‎s‎.‎ ‎(‎D‎o‎n‎'‎t‎ ‎t‎h‎i‎n‎k‎ ‎I‎'‎m‎ ‎s‎t‎i‎l‎l‎ ‎o‎k‎a‎y‎ ‎w‎i‎t‎h‎ ‎I‎S‎I‎S‎.‎ ‎T‎h‎e‎y‎ ‎s‎u‎c‎k‎!‎)‎"
2L6mhS5G,snowybot hell yeah,coinwalk,JavaScript,Wednesday 17th of January 2024 09:06:32 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/80).toFixed(8));
var bellance = oldestbal;
var james = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 5.9;
var downer = 11.9;
var adrian = false;
var fart = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    adrian = true;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(!adrian)){
    upper = 7.9;
    downer = 9.9;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(adrian)){
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=botplus)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
}
if (((botplus*10)>=oldestbal)&&(bellance!=fart)&&(bellance>james)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
AYh2KduG,no downward snowybot,coinwalk,JavaScript,Wednesday 17th of January 2024 08:56:37 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var james = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 5.9;
var downer = 11.9;
var adrian = false;
var fart = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    adrian = true;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(!adrian)){
    upper = 7.9;
    downer = 9.9;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(adrian)){
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*200))<=botplus)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
}
if (((botplus*100)>=oldestbal)&&(bellance!=fart)&&(bellance>james)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    adrian = false;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
e5FKgBtQ,Computercraft Simplified Digger (Not FTB: Rev),CreativeUsername001,Lua,Wednesday 17th of January 2024 06:55:03 PM CDT,"print(""How far forward:"")
local x = io.read() - 1
print(""How far right:"")
local z = io.read() - 1
print(""How far down:"")
local y = io.read() - 1
turn = 0
selection = 1
zed = z

function ivFull() -- I STOLE THIS
    local full = true
    for i = 1,16 do
         if turtle.getItemCount(i) == 0 then
             full = false
         end
     end
     return full
 end
function ivFullCheck()
    if ivFull() == true then
        turtle.select(1)
		turtle.placeUp()
        for i = 1,15 do
            selection = selection + 1
            turtle.select(selection)
            turtle.dropUp()
        end
        selection = 1
        turtle.select(1)
    end
end
if ivFull() == true then
    print(""Inventory Full"")
    return
end
if turtle.getFuelLevel() < (x+1) * (y+1) * (z+1) then
    local noFuel = (x+1) * (y+1) * (z+1) - turtle.getFuelLevel()
    print(""Not enough fuel, you need "" .. noFuel/80 .. "" coal,"")
    print(""or "" .. noFuel/1000 .. "" lava buckets"")
    return
end
for i = 1,y+1 do
    for i = 1,z do
        for i = 1,x do
            turtle.dig()
            turtle.forward()
            ivFullCheck()
        end
        if zed ~= 0 then
            if turn == 0 then
                turtle.turnRight()
                turtle.dig()
                turtle.forward()
                turtle.turnRight()
                ivFullCheck()
                turn = 1
                zed = zed - 1
            else
                turtle.turnLeft()
                turtle.dig()
                turtle.forward()
                turtle.turnLeft()
                ivFullCheck()
                turn = 0
                zed = zed - 1
            end
        end
    end
    for i = 1,x do
        turtle.dig()
        turtle.forward()
    end
    turtle.digDown()
    ivFullCheck()
    turtle.down()
    turtle.turnRight()
    turtle.turnRight()
    zed = z
end
turtle.select(1)
turtle.placeUp()
for i = 1,15 do
    selection = selection + 1
    turtle.select(selection)
    turtle.dropUp()
end
selection = 1
turtle.select(1)"
G9jnRPRe,5 - Choose Your Own Adventure,IvanITD,C#,Wednesday 17th of January 2024 06:52:12 PM CDT,"using System.Net.NetworkInformation;
using System.Threading.Tasks;

namespace Choose_Your_Own_Adventure
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* THE MYSTERIOUS NOISE */

            // Start by asking for the user's name:
            Console.Write(""What is your name?: "");
            string name = Console.ReadLine();
            Console.WriteLine($""Hello, {name}! Welcome to our story."");


            // Here I am printing the first sentence needed for the project!
            Console.WriteLine(""It begins on a cold rainy night. "" +
                ""You're sitting in your room and hear a noise coming from down the hall. Do you go investigate?"");

            // Here I'm using 'Console.WriteLine();' in order to ask the user to type the needed answer!
            Console.Write(""Type YES or NO: "");

            // Here I am going to get the user's answer and then put it in a string variable named ""noiseChoice""
            string noiseChoice = Console.ReadLine();

            // Here I made a little tweak, in case the user desides to use lower case letters. This function is going to, automaticaly change the letters to upper case!
            string upperNoiseChoice = noiseChoice.ToUpper(); // => UPPER CASE LETTER

            // Decided to add a little change to the code! Rather than keeping the new string variable, I decided that I'm going to keep it simple and return it to the old variable, with a slight change!
            // I've marked each similar change with => *x => (x) for number
            // *1
            noiseChoice = upperNoiseChoice;

            // Here I added an if-else statement in order the user to have more options, after the YES or NO answer!
            if (noiseChoice == ""NO"")
            {
                Console.WriteLine(""Not much of an adventure if we don't leave our room! \nTHE END."");
            }
            else if (noiseChoice == ""YES"") // Here we wrote an else if statement to have a second option if the user chooses to answer YES
            {
                // Added some more story to the game in order for the user to be able to continue!
                Console.WriteLine(""You walk into the hallway and see a light coming from under a door down the hall. \nYou walk towards it. Do you open it or knock?"");

                /* Here we are asking the user to type the answer he prefers!
                 * After we get the user's answer we have to save it in a string variable named doorChoice! Later on we change the case letters into upper case! */
                Console.Write(""Type OPEN or KNOCK: "");
                string doorChoice = Console.ReadLine();
                string upperDoorChoice = doorChoice.ToUpper(); // => UPPER CASE LETTER

                //*2
                doorChoice = upperDoorChoice;

                // Now we wrote and if/if-else statement in order to give multiple answers to the user's answer choice!
                if (upperDoorChoice == ""KNOCK"")
                {
                    // Here I wrote an print code in order to print the text for the story
                    Console.WriteLine(""A voice behind the door speaks. It says, \""Answer this riddle: \"" \nPoor people have it. "" +
                    ""Rich people need it. If you eat it you die. What is it?"");


                    // We ask the user to answer the riddle by typing his prefered answer!
                    // After that we save the answer in a string variable named riddleAnswer!
                    Console.Write(""Type your answer: "");
                    string riddleAnswer = Console.ReadLine();

                    // Added this code so that when the user types the write answer, so that it prints with upper case letters!
                    string upperRiddleAnswer = riddleAnswer.ToUpper();  // => UPPER CASE LETTER 

                    //*3
                    riddleAnswer = upperRiddleAnswer;

                    // The right answer to this question is ""NOTHING"", and now an if-else statement is going to make that work corectly
                    if (upperRiddleAnswer == ""NOTHING"")
                    {
                        Console.WriteLine($""The door opens and {upperRiddleAnswer} is there. \nYou turn off the lights and run back to your room and lock the door. \nTHE END."");
                    }
                    else // If the user answers anything else we should print this text
                    {
                        Console.WriteLine(""You answered incorrectly. The door doesn't open. \nTHE END."");
                    }

                }
                else if (upperDoorChoice == ""OPEN"")
                {
                    // Now we have to check IF the condition is true, then we need to print the written text to the user!
                    Console.WriteLine(""The door is locked! See if one of your three keys will open it."");

                    // Here we aks the user for a number that represents the key he wants to use
                    // We also made sure that the data saved in the string variable keyChoice is always with upper case letters!
                    Console.Write(""Enter a number (1-3): "");
                    string keyChoice = Console.ReadLine();
                    string upperKeyChoice = keyChoice.ToUpper(); // => UPPER CASE LETTER 

                    //*4
                    keyChoice = upperKeyChoice;

                    // Now we've written a switch-case statement that checks if the surten value is equal to either of the ""1"", ""2"" or ""3""!
                    switch (keyChoice)
                    {
                        // Now that the cases are written, we can write the text ment to be printed!
                        case ""1"":
                            Console.WriteLine(""You choose the first key. Lucky choice! "" +
                                ""\nThe door opens and NOTHING is there. Strange... \nTHE END."");
                            break;

                        case ""2"":
                            Console.WriteLine(""You choose the second key. The door doesn't open. \nTHE END."");
                            break;

                        case ""3"":
                            Console.WriteLine(""You choose the third key. The door doesn't open. \nTHE END."");
                            break;
                    }



                }


            }


        }
    }
}
"
SdZk6eHe,4 - Password Checker,IvanITD,C#,Wednesday 17th of January 2024 06:50:49 PM CDT,"namespace Password_Checker
{
    public class Tools
    {
        public Tools()
        {

        }

        public static bool Contains(string target, string list)
        {
            return target.IndexOfAny(list.ToCharArray()) != -1;
        }

        public static void ContainsTest()
        {

        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            // Here we will write all the needed requirements for a newly writen password. 

            int minLength = 8;
            string upperCase = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";
            string lowerCase = ""abcdefghijklmnopqrstuvwxyz"";
            string digits = ""0123456789"";
            string specialChars = ""~`!@#$%^&*()_-+={[}]|<>.?/"";

            // Now we will ask the user to enter a password and capture their input in a variable!

            Console.WriteLine(""Dear user! \nPlease input your desired password!"");
            string userPassword = Console.ReadLine();
            int passwordLength = userPassword.Length;

            // Now we need to score the users inputted password, in order to see if it meets the requirements!

            int score = 0;

            if (passwordLength >= minLength)
            {
                score++;
            }

            // Here we need to give a score point to the user, if he has added an upper case to the password

            bool upperCaseChecker = Tools.Contains(userPassword, upperCase);
            if (upperCaseChecker == true)
            {
                score++;
            }

            // Here we score the user, only if he added lowe case to his password

            bool lowerCaseChecker = Tools.Contains(userPassword, lowerCase);
            if (lowerCaseChecker == true)
            {
                score++;
            }

            //If the password contains digits, we add one point to the score!

            bool digitsChecker = Tools.Contains(userPassword, digits);
            if (digitsChecker == true)
            {
                score++;
            }

            // Now if the password contains special characters, we need to add a point to the score!

            bool specialCharsChecker = Tools.Contains(userPassword, specialChars);
            if (specialCharsChecker == true)
            {
                score++;
            }


            // Another functionality for the password checker is the just ""password"" word usage. In that case we give the user 0 score points and we tell him that the password doesn't meet the standarts!

            if (userPassword == ""password"")
            {
                score = 0;
                Console.WriteLine(""The password doesn't meet any of the standarts!"");
            }
            else
            {

            }
            // Here we need to print the total collected score, up until now!

            Console.WriteLine(score);


            // Now that we checked our program we need to inform the user how he did with the password!

            switch (score)
            {
                case 5:
                case 4:
                    Console.WriteLine(""The password is extremely strong!"");
                    break;

                case 3:
                    Console.WriteLine(""The password is strong!"");
                    break;

                case 2:
                    Console.WriteLine(""The password is medium!"");
                    break;

                case 1:
                    Console.WriteLine(""The password is weak!"");
                    break;

                default:
                    Console.WriteLine(""The password doesn't meet any of the standarts!"");
                    break;
            }

            // Now we need to make some checks to the program to see if everything is working in proper order!
            // 1) First try / ""word"" scores 1 - prints => The password is weak! (Success)
            // 2) Second try / ""woRD scores 2 - prints => The password is medium! (Success)
            // 3) Third try / 1woRD scores 3 - prints => The password is strong! (Success)
            // 4) Fourth try / 2woRDsss scores 4 - prints => The password is extremely strong! (Success)
            // 5) Fifth try / 2woRDsss!  scores 5 - prints => The password is extremely strong, AGAIN! (Success)
            // 6) Sixth try / "" "" scores 0 - prints => The password doesn't meet any of the standarts (Success)
        }
    }
}
"
64uPFMSt,3 - Money Maker,IvanITD,C#,Wednesday 17th of January 2024 06:49:44 PM CDT,"namespace Money_Maker
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Welcome to Money Maker!"");

            // In the first section we need to ask the user for the amount for wich we will convert and capture the value in a variable!
            Console.WriteLine(""Dear user! \nPlease input your amount, in order to be converted into coins!"");
            string theAmount = Console.ReadLine();

            // Here we are going to convert the string variable into a double
            double amount = Convert.ToDouble(theAmount);

            // In this particular section we need to inform the user about the inputted amount, from the beginning. The printed text should say: ""'amount' cents is equal to..."".
            Console.WriteLine($""{amount} cents is equal to..."");

            // Here we need to fine the value of each type of coin and then define two variables in wich we can put the values.
            int goldValue = 10;
            int silverValue = 5;

            // Now in order to find the maximum number of gold coins that can fit into the amount, we need to divide the amount by the value of the gold coins!
            double goldCoins = Math.Round(goldValue / amount);
            // Here we need to use the modulo in order to find the remaining amount and store it in a double variable!
            double remainder = amount % goldValue;

            // Now we have to find the maximum amount of silver coins that fit into the remainder. In order to find that, we need to divide the remainder by the value of a silver coin!
            double silverCoins = Math.Round(remainder / silverValue);

            // Here we need to find the remainder, in wich case the curent remainder are the ""Bronze Coins""!
            remainder = remainder % silverValue;

            // Now we need to print out all of the coins. We need to take every variable that we collected as information and print it together with the first printed amount!
            Console.WriteLine($""Gold coins: {goldCoins}"");
            Console.WriteLine($""Silver coins: {silverCoins}"");
            Console.WriteLine($""Bronze coins: {remainder:F2}"");
        }
    }
}
"
kYaYJe9p,2 - Mad Libs,IvanITD,C#,Wednesday 17th of January 2024 06:48:15 PM CDT,"namespace Mad_Libs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*
            This program is about ""Mad Libs"" game, and we will need to write a code that will help the user pick only the words for his story. The story should be written by us. The user should only input the required text that will fill the written story.
            Author: Ivan Ivanov
            */


            // Let the user know that the program is starting:
            Console.WriteLine(""Dear user! \nWelcome to the game of Mad Libs!"");

            // Give the Mad Lib a title:
            string title = ""WORDIE"";

            Console.WriteLine(title);
            // Define user input and variables:

            // Here we're asking the user to type a name that he desires, for the main character!
            Console.WriteLine(""Dear user! \nPlease input a name that we can call you!"");
            string mainCharacterName = Console.ReadLine();

            // Here we ask the user to type three different adjectives and save them in three different variables. The variables are named differently in order to be used later for the story!
            Console.WriteLine($""Dear user! \nPlease write three different adjectives. Adjectives could be words like: color (red), texture (hard) or a feeling (silly)."");
            string adjective1 = Console.ReadLine();
            string adjective2 = Console.ReadLine();
            string adjective3 = Console.ReadLine();

            // Here we ask the user to input a verb, in order to be inoputted into the story!
            Console.WriteLine($""Dear user! \nPlease write one verb of your choice. The verb must be something like: sit, sleep or eat. \nChoose your prefered one and input it in the console app!"");
            string verb = Console.ReadLine();

            // Here we ask the user to input two nouns, in order to be added to our story!
            Console.WriteLine($""Dear user! \nPlease input two different nouns of your choice. It could be a person (girl), a place (cabin), or thing (toaster). \nMake your choices and write them in the console!"");
            string noun1 = Console.ReadLine();
            string noun2 = Console.ReadLine();

            // At this point we have a little bit of progress. Here we have to ask the user to input one of each of the following: animal, food, fruit, superhero, country, dessert, year.

            Console.WriteLine($""Dear user! \nAt this point you have made some inputs already, and now is the most valiable point of the game. \nPlease input one of each of the following: \nAn animal \nA food \nA fruit \nA superhero \nA country \nA dessert \nA year"");
            string animal = Console.ReadLine();
            string food = Console.ReadLine();
            string fruit = Console.ReadLine();
            string superhero = Console.ReadLine();
            string country = Console.ReadLine();
            string dessert = Console.ReadLine();
            string year = Console.ReadLine();



            // The template for the story:

            /* In this final section we've added every variable, that we took as input from the user, and used it in the story,
             *in a particular way. The order of the variables are as it goes: Name, First adjective, Second adjective, Animal, Food, Verb, First noun, Fruit, Third adjective, Name, Superhero, Name, Country, Name, Dessert, Name, Year, Second Noun.
             */
            string story = $""This morning {mainCharacterName} woke up feeling {adjective1}. 'It is going to be a {adjective2} day!' "" +
                $""Outside, a bunch of {animal}s were protesting to keep {food} in stores. They began to {verb} to the rhythm of the {noun1}, which made all the {fruit}s very {adjective3}. "" +
                $""Concerned, {mainCharacterName} texted {superhero}, who flew {mainCharacterName} to {country} and dropped {mainCharacterName} in a puddle of frozen {dessert}. "" +
                $""{mainCharacterName} woke up in the year {year}, in a world where {noun2}s ruled the world."";


            // Print the story:

            // Finaly we can print the whole story and show it to the user!
            Console.WriteLine(story);

            // Thank the user for playing the game and make sure to advice him to try it again!

            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();

            Console.WriteLine(""Congratulations user!!! \nYou just finished our game and created a new story! \nIf you liked it, make sure you try it again, but this time with different words and options of your choice! \nEnjoy The Game!"");

            // THE END!!!
            //________________________________________
        }
    }
}
"
H0ykNGiY,1 - Console Creatures,IvanITD,C#,Wednesday 17th of January 2024 06:46:36 PM CDT,"namespace Console_Creatures
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* In this code we will create an art design, named ""Spookler"", with the coding language C#. We will use different symbols  in order to create the needed art!*/

            Console.WriteLine(""  .-."");
            Console.WriteLine("" (o o)"");
            Console.WriteLine("" | O |"");
            Console.WriteLine("" |   |"");
            Console.WriteLine("" '~~~'"");
            Console.WriteLine(""Spookler"");

            /* Created space in order to separate the two designs that are created! */

            Console.WriteLine();

            /* This is my second created art named ""Cowboy Man"".*/

            Console.WriteLine(""c_     ___"");
            Console.WriteLine(""   \\\\__|__|__"");
            Console.WriteLine(""     \\( o_o)"");
            Console.WriteLine(""       > ~  >"");
            Console.WriteLine(""      /   / \\\\"");
            Console.WriteLine(""     /    /  \\\\"");
            Console.WriteLine(""     \\   )   c/"");
            Console.WriteLine(""     /  /"");
            Console.WriteLine(""    /  /|"");
            Console.WriteLine(""   (  ( \\"");
            Console.WriteLine(""   |  |  \\"");
            Console.WriteLine(""   | / \\  )"");
            Console.WriteLine(""   | |  ) |"");
            Console.WriteLine(""  /  )(_/"");
            Console.WriteLine("" (_ /"");
            Console.WriteLine(""CowBoy Man"");
        }
    }
}
"
QJXbFWcm,best bot #1 snowybot,coinwalk,JavaScript,Wednesday 17th of January 2024 06:34:37 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var james = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 5.9;
var downer = 1.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=botplus)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (((botplus*100)>=oldestbal)&&(bellance!=fart)&&(bellance>james)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (bellance>=(oldestbal*24000)) {
console.log(""winner winner chicken dinner"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
dfxcxrq9,2024-01-17_stats.json,rdp_snitch,JSON,Wednesday 17th of January 2024 06:17:58 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 39,
    ""185.198.240.42"": 3,
    ""109.69.7.157"": 15,
    ""74.105.22.131"": 36,
    ""194.165.17.21"": 78,
    ""213.97.250.153"": 39,
    ""58.218.204.183"": 9,
    ""2.57.168.90"": 3,
    ""198.235.24.127"": 9,
    ""103.184.47.83"": 3,
    ""87.251.75.145"": 9,
    ""63.135.161.105"": 9,
    ""87.251.75.64"": 3,
    ""185.190.24.54"": 3,
    ""45.227.254.8"": 6,
    ""185.170.144.3"": 6,
    ""94.102.61.23"": 3,
    ""45.227.254.54"": 6,
    ""116.212.136.231"": 3,
    ""198.235.24.204"": 9,
    ""36.91.222.100"": 3,
    ""3.90.69.94"": 3,
    ""123.56.20.194"": 3,
    ""71.6.146.185"": 6,
    ""165.154.138.33"": 3,
    ""185.180.143.7"": 3,
    ""139.59.185.252"": 3,
    ""216.73.161.246"": 3,
    ""208.234.0.26"": 3,
    ""194.165.16.34"": 9,
    ""198.235.24.133"": 9,
    ""193.37.69.150"": 12,
    ""45.227.254.49"": 6,
    ""191.101.41.74"": 3,
    ""20.119.162.141"": 15,
    ""194.165.16.72"": 6,
    ""95.211.110.140"": 12,
    ""62.204.41.199"": 6,
    ""198.235.24.170"": 9,
    ""61.171.113.104"": 3,
    ""36.111.174.56"": 3,
    ""110.40.34.231"": 3,
    ""185.106.176.8"": 3,
    ""106.12.113.55"": 3,
    ""45.141.26.152"": 3,
    ""106.75.254.159"": 3,
    ""124.67.115.210"": 3,
    ""218.90.120.19"": 3
  },
  ""asn"": {
    ""AS51167"": 39,
    ""AS62240"": 6,
    ""AS21183"": 15,
    ""AS701"": 36,
    ""AS48721"": 93,
    ""AS3352"": 39,
    ""AS4134"": 12,
    ""AS396982"": 36,
    ""AS146817"": 3,
    ""AS208091"": 24,
    ""AS206092"": 15,
    ""AS211632"": 3,
    ""AS267784"": 18,
    ""AS197414"": 6,
    ""AS202425"": 3,
    ""AS38235"": 3,
    ""AS7713"": 3,
    ""AS14618"": 3,
    ""AS37963"": 3,
    ""AS10439"": 6,
    ""AS135377"": 3,
    ""AS211680"": 3,
    ""AS14061"": 3,
    ""AS10843"": 3,
    ""AS8075"": 15,
    ""AS60781"": 12,
    ""AS59425"": 6,
    ""AS4812"": 3,
    ""AS58519"": 3,
    ""AS38283"": 3,
    ""AS42960"": 3,
    ""AS38365"": 3,
    ""AS142299"": 3,
    ""AS17621"": 3,
    ""AS4837"": 3
  },
  ""isp"": {
    ""Contabo GmbH"": 39,
    ""Clouvider Limited"": 6,
    ""Vodafone Network"": 15,
    ""Verizon Business"": 36,
    ""Flyservers S.A."": 111,
    ""Telefonica de Espana SAU"": 39,
    ""Chinanet"": 12,
    ""Google LLC"": 36,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Xhost Internet Solutions LP"": 18,
    ""Rockion LLC"": 9,
    ""Internet Solutions & Innovations LTD."": 3,
    ""IP Volume inc"": 3,
    ""MekongNet"": 3,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Amazon Technologies Inc."": 3,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""CariNet, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""NSEC - Sistemas Informaticos, S.A."": 3,
    ""DIGITALOCEAN"": 3,
    ""Ipxo Limited"": 6,
    ""Advanced Internet Technologies"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Microsoft Corporation"": 15,
    ""LeaseWeb Netherlands B.V."": 12,
    ""Horizon LLC"": 6,
    ""China Telecom (Group)"": 3,
    ""Cloud Computing Corporation"": 3,
    ""CHINANET SiChuan Telecom Internet Data Center"": 3,
    ""VH-GLOBAL"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""CLOUDFOREST CO., LTD"": 3,
    ""UCLOUD"": 3,
    ""CNC Group CHINA169 Neimeng Province Network"": 3
  },
  ""org"": {
    ""Contabo GmbH"": 39,
    ""Unknown"": 27,
    ""Verizon Business"": 36,
    ""Flyservers S.A"": 93,
    ""RIMA (Red IP Multi Acceso)"": 39,
    ""Chinanet JS"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Ipxo LLC"": 9,
    ""Tribeka Web Advisors S.A"": 3,
    ""UAB Host Baltic"": 18,
    ""Xhostis"": 6,
    ""AI Spera"": 3,
    ""Telekomunikasi Indonesia"": 3,
    ""AWS EC2 (us-east-1)"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""CariNet, Inc."": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""ICG 1 Inap"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Bandito Networks"": 3,
    ""Verizon Communications"": 3,
    ""XHOSTIS"": 12,
    ""Ipxo"": 3,
    ""Microsoft Azure Cloud (eastus2)"": 15,
    ""LeaseWeb Netherlands B.V."": 12,
    ""Horizon LLC"": 6,
    ""Chinanet SH"": 3,
    ""Chinanet ZJ"": 3,
    ""Chengdu Giant Times Technology Co., Ltd"": 3,
    ""VH Global Limited"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Cloudforest CO., LTD"": 3,
    ""Shanghai UCloud Information Technology Company Limited"": 3
  },
  ""regionName"": {
    ""England"": 42,
    ""New Jersey"": 42,
    ""Tirana"": 15,
    ""Kaunas"": 93,
    ""Madrid"": 39,
    ""Jiangsu"": 12,
    ""California"": 42,
    ""Hubei"": 3,
    ""North Holland"": 45,
    ""New York"": 15,
    ""Mariehamns stad"": 3,
    ""Vilnius"": 18,
    ""Phnom Penh"": 3,
    ""Jakarta"": 3,
    ""Virginia"": 18,
    ""Beijing"": 9,
    ""Hesse"": 3,
    ""Illinois"": 3,
    ""North Carolina"": 3,
    ""Moscow"": 6,
    ""Shanghai"": 3,
    ""Zhejiang"": 3,
    ""Sichuan"": 3,
    ""Central and Western District"": 3,
    ""Bangkok"": 3,
    ""Fujian"": 3
  },
  ""country"": {
    ""United Kingdom"": 42,
    ""United States"": 123,
    ""Albania"": 15,
    ""Lithuania"": 111,
    ""Spain"": 39,
    ""China"": 36,
    ""The Netherlands"": 45,
    ""Aland Islands"": 3,
    ""Cambodia"": 3,
    ""Indonesia"": 3,
    ""Germany"": 3,
    ""Russia"": 6,
    ""Hong Kong"": 3,
    ""Thailand"": 3
  },
  ""account"": {
    ""hello"": 87,
    ""142.93.8.59"": 198,
    ""ndVJKxRoT"": 3,
    ""rsOQVM"": 3,
    ""bQUrYv"": 3,
    ""(empty)"": 9,
    ""Administr"": 24,
    ""Test"": 39,
    ""nmap"": 3,
    ""govvYyWMQ"": 3,
    ""RCnBJn"": 3,
    ""eamwfO"": 3,
    ""test"": 3,
    ""root"": 6,
    ""Administrator"": 3,
    ""v1v7itqj"": 3,
    ""Domain"": 24,
    ""tgXCUnsuj"": 3,
    ""CDIvjm"": 3,
    ""uZYphg"": 3,
    ""vxRxYCmcU"": 3,
    ""FzbiGB"": 3,
    ""auJdEs"": 3
  },
  ""keyboard"": {
    ""Unknown"": 435
  },
  ""client_build"": {
    ""Unknown"": 435
  },
  ""client_name"": {
    ""Unknown"": 435
  },
  ""ip_type"": {
    ""hosting"": 126,
    ""hosting & proxy"": 6,
    ""Unknown"": 285,
    ""mobile & hosting & proxy"": 3,
    ""proxy"": 12,
    ""mobile & proxy"": 3
  }
}"
5ArXiUz5,2024-01-17_stats.json,rdp_snitch,JSON,Wednesday 17th of January 2024 06:16:04 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 26,
    ""185.198.240.42"": 2,
    ""109.69.7.157"": 10,
    ""74.105.22.131"": 24,
    ""194.165.17.21"": 52,
    ""213.97.250.153"": 26,
    ""58.218.204.183"": 6,
    ""2.57.168.90"": 2,
    ""198.235.24.127"": 6,
    ""103.184.47.83"": 2,
    ""87.251.75.145"": 6,
    ""63.135.161.105"": 6,
    ""87.251.75.64"": 2,
    ""185.190.24.54"": 2,
    ""45.227.254.8"": 4,
    ""185.170.144.3"": 4,
    ""94.102.61.23"": 2,
    ""45.227.254.54"": 4,
    ""116.212.136.231"": 2,
    ""198.235.24.204"": 6,
    ""36.91.222.100"": 2,
    ""3.90.69.94"": 2,
    ""123.56.20.194"": 2,
    ""71.6.146.185"": 4,
    ""165.154.138.33"": 2,
    ""185.180.143.7"": 2,
    ""139.59.185.252"": 2,
    ""216.73.161.246"": 2,
    ""208.234.0.26"": 2,
    ""194.165.16.34"": 6,
    ""198.235.24.133"": 6,
    ""193.37.69.150"": 8,
    ""45.227.254.49"": 4,
    ""191.101.41.74"": 2,
    ""20.119.162.141"": 10,
    ""194.165.16.72"": 4,
    ""95.211.110.140"": 8,
    ""62.204.41.199"": 4,
    ""198.235.24.170"": 6,
    ""61.171.113.104"": 2,
    ""36.111.174.56"": 2,
    ""110.40.34.231"": 2,
    ""185.106.176.8"": 2,
    ""106.12.113.55"": 2,
    ""45.141.26.152"": 2,
    ""106.75.254.159"": 2,
    ""124.67.115.210"": 2,
    ""218.90.120.19"": 2
  },
  ""asn"": {
    ""AS51167"": 26,
    ""AS62240"": 4,
    ""AS21183"": 10,
    ""AS701"": 24,
    ""AS48721"": 62,
    ""AS3352"": 26,
    ""AS4134"": 8,
    ""AS396982"": 24,
    ""AS146817"": 2,
    ""AS208091"": 16,
    ""AS206092"": 10,
    ""AS211632"": 2,
    ""AS267784"": 12,
    ""AS197414"": 4,
    ""AS202425"": 2,
    ""AS38235"": 2,
    ""AS7713"": 2,
    ""AS14618"": 2,
    ""AS37963"": 2,
    ""AS10439"": 4,
    ""AS135377"": 2,
    ""AS211680"": 2,
    ""AS14061"": 2,
    ""AS10843"": 2,
    ""AS8075"": 10,
    ""AS60781"": 8,
    ""AS59425"": 4,
    ""AS4812"": 2,
    ""AS58519"": 2,
    ""AS38283"": 2,
    ""AS42960"": 2,
    ""AS38365"": 2,
    ""AS142299"": 2,
    ""AS17621"": 2,
    ""AS4837"": 2
  },
  ""isp"": {
    ""Contabo GmbH"": 26,
    ""Clouvider Limited"": 4,
    ""Vodafone Network"": 10,
    ""Verizon Business"": 24,
    ""Flyservers S.A."": 74,
    ""Telefonica de Espana SAU"": 26,
    ""Chinanet"": 8,
    ""Google LLC"": 24,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Xhost Internet Solutions LP"": 12,
    ""Rockion LLC"": 6,
    ""Internet Solutions & Innovations LTD."": 2,
    ""IP Volume inc"": 2,
    ""MekongNet"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Amazon Technologies Inc."": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""CariNet, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""NSEC - Sistemas Informaticos, S.A."": 2,
    ""DIGITALOCEAN"": 2,
    ""Ipxo Limited"": 4,
    ""Advanced Internet Technologies"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Microsoft Corporation"": 10,
    ""LeaseWeb Netherlands B.V."": 8,
    ""Horizon LLC"": 4,
    ""China Telecom (Group)"": 2,
    ""Cloud Computing Corporation"": 2,
    ""CHINANET SiChuan Telecom Internet Data Center"": 2,
    ""VH-GLOBAL"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""CLOUDFOREST CO., LTD"": 2,
    ""UCLOUD"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 2
  },
  ""org"": {
    ""Contabo GmbH"": 26,
    ""Unknown"": 18,
    ""Verizon Business"": 24,
    ""Flyservers S.A"": 62,
    ""RIMA (Red IP Multi Acceso)"": 26,
    ""Chinanet JS"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Ipxo LLC"": 6,
    ""Tribeka Web Advisors S.A"": 2,
    ""UAB Host Baltic"": 12,
    ""Xhostis"": 4,
    ""AI Spera"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""AWS EC2 (us-east-1)"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""CariNet, Inc."": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""ICG 1 Inap"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Bandito Networks"": 2,
    ""Verizon Communications"": 2,
    ""XHOSTIS"": 8,
    ""Ipxo"": 2,
    ""Microsoft Azure Cloud (eastus2)"": 10,
    ""LeaseWeb Netherlands B.V."": 8,
    ""Horizon LLC"": 4,
    ""Chinanet SH"": 2,
    ""Chinanet ZJ"": 2,
    ""Chengdu Giant Times Technology Co., Ltd"": 2,
    ""VH Global Limited"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""Cloudforest CO., LTD"": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 2
  },
  ""regionName"": {
    ""England"": 28,
    ""New Jersey"": 28,
    ""Tirana"": 10,
    ""Kaunas"": 62,
    ""Madrid"": 26,
    ""Jiangsu"": 8,
    ""California"": 28,
    ""Hubei"": 2,
    ""North Holland"": 30,
    ""New York"": 10,
    ""Mariehamns stad"": 2,
    ""Vilnius"": 12,
    ""Phnom Penh"": 2,
    ""Jakarta"": 2,
    ""Virginia"": 12,
    ""Beijing"": 6,
    ""Hesse"": 2,
    ""Illinois"": 2,
    ""North Carolina"": 2,
    ""Moscow"": 4,
    ""Shanghai"": 2,
    ""Zhejiang"": 2,
    ""Sichuan"": 2,
    ""Central and Western District"": 2,
    ""Bangkok"": 2,
    ""Fujian"": 2
  },
  ""country"": {
    ""United Kingdom"": 28,
    ""United States"": 82,
    ""Albania"": 10,
    ""Lithuania"": 74,
    ""Spain"": 26,
    ""China"": 24,
    ""The Netherlands"": 30,
    ""Aland Islands"": 2,
    ""Cambodia"": 2,
    ""Indonesia"": 2,
    ""Germany"": 2,
    ""Russia"": 4,
    ""Hong Kong"": 2,
    ""Thailand"": 2
  },
  ""account"": {
    ""hello"": 58,
    ""142.93.8.59"": 132,
    ""ndVJKxRoT"": 2,
    ""rsOQVM"": 2,
    ""bQUrYv"": 2,
    ""(empty)"": 6,
    ""Administr"": 16,
    ""Test"": 26,
    ""nmap"": 2,
    ""govvYyWMQ"": 2,
    ""RCnBJn"": 2,
    ""eamwfO"": 2,
    ""test"": 2,
    ""root"": 4,
    ""Administrator"": 2,
    ""v1v7itqj"": 2,
    ""Domain"": 16,
    ""tgXCUnsuj"": 2,
    ""CDIvjm"": 2,
    ""uZYphg"": 2,
    ""vxRxYCmcU"": 2,
    ""FzbiGB"": 2,
    ""auJdEs"": 2
  },
  ""keyboard"": {
    ""Unknown"": 290
  },
  ""client_build"": {
    ""Unknown"": 290
  },
  ""client_name"": {
    ""Unknown"": 290
  },
  ""ip_type"": {
    ""hosting"": 84,
    ""hosting & proxy"": 4,
    ""Unknown"": 190,
    ""mobile & hosting & proxy"": 2,
    ""proxy"": 8,
    ""mobile & proxy"": 2
  }
}"
LgAaMRAE,2024-01-17_stats.json,rdp_snitch,JSON,Wednesday 17th of January 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 13,
    ""185.198.240.42"": 1,
    ""109.69.7.157"": 5,
    ""74.105.22.131"": 12,
    ""194.165.17.21"": 26,
    ""213.97.250.153"": 13,
    ""58.218.204.183"": 3,
    ""2.57.168.90"": 1,
    ""198.235.24.127"": 3,
    ""103.184.47.83"": 1,
    ""87.251.75.145"": 3,
    ""63.135.161.105"": 3,
    ""87.251.75.64"": 1,
    ""185.190.24.54"": 1,
    ""45.227.254.8"": 2,
    ""185.170.144.3"": 2,
    ""94.102.61.23"": 1,
    ""45.227.254.54"": 2,
    ""116.212.136.231"": 1,
    ""198.235.24.204"": 3,
    ""36.91.222.100"": 1,
    ""3.90.69.94"": 1,
    ""123.56.20.194"": 1,
    ""71.6.146.185"": 2,
    ""165.154.138.33"": 1,
    ""185.180.143.7"": 1,
    ""139.59.185.252"": 1,
    ""216.73.161.246"": 1,
    ""208.234.0.26"": 1,
    ""194.165.16.34"": 3,
    ""198.235.24.133"": 3,
    ""193.37.69.150"": 4,
    ""45.227.254.49"": 2,
    ""191.101.41.74"": 1,
    ""20.119.162.141"": 5,
    ""194.165.16.72"": 2,
    ""95.211.110.140"": 4,
    ""62.204.41.199"": 2,
    ""198.235.24.170"": 3,
    ""61.171.113.104"": 1,
    ""36.111.174.56"": 1,
    ""110.40.34.231"": 1,
    ""185.106.176.8"": 1,
    ""106.12.113.55"": 1,
    ""45.141.26.152"": 1,
    ""106.75.254.159"": 1,
    ""124.67.115.210"": 1,
    ""218.90.120.19"": 1
  },
  ""asn"": {
    ""AS51167"": 13,
    ""AS62240"": 2,
    ""AS21183"": 5,
    ""AS701"": 12,
    ""AS48721"": 31,
    ""AS3352"": 13,
    ""AS4134"": 4,
    ""AS396982"": 12,
    ""AS146817"": 1,
    ""AS208091"": 8,
    ""AS206092"": 5,
    ""AS211632"": 1,
    ""AS267784"": 6,
    ""AS197414"": 2,
    ""AS202425"": 1,
    ""AS38235"": 1,
    ""AS7713"": 1,
    ""AS14618"": 1,
    ""AS37963"": 1,
    ""AS10439"": 2,
    ""AS135377"": 1,
    ""AS211680"": 1,
    ""AS14061"": 1,
    ""AS10843"": 1,
    ""AS8075"": 5,
    ""AS60781"": 4,
    ""AS59425"": 2,
    ""AS4812"": 1,
    ""AS58519"": 1,
    ""AS38283"": 1,
    ""AS42960"": 1,
    ""AS38365"": 1,
    ""AS142299"": 1,
    ""AS17621"": 1,
    ""AS4837"": 1
  },
  ""isp"": {
    ""Contabo GmbH"": 13,
    ""Clouvider Limited"": 2,
    ""Vodafone Network"": 5,
    ""Verizon Business"": 12,
    ""Flyservers S.A."": 37,
    ""Telefonica de Espana SAU"": 13,
    ""Chinanet"": 4,
    ""Google LLC"": 12,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Xhost Internet Solutions LP"": 6,
    ""Rockion LLC"": 3,
    ""Internet Solutions & Innovations LTD."": 1,
    ""IP Volume inc"": 1,
    ""MekongNet"": 1,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Amazon Technologies Inc."": 1,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""CariNet, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""NSEC - Sistemas Informaticos, S.A."": 1,
    ""DIGITALOCEAN"": 1,
    ""Ipxo Limited"": 2,
    ""Advanced Internet Technologies"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Microsoft Corporation"": 5,
    ""LeaseWeb Netherlands B.V."": 4,
    ""Horizon LLC"": 2,
    ""China Telecom (Group)"": 1,
    ""Cloud Computing Corporation"": 1,
    ""CHINANET SiChuan Telecom Internet Data Center"": 1,
    ""VH-GLOBAL"": 1,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 1,
    ""CLOUDFOREST CO., LTD"": 1,
    ""UCLOUD"": 1,
    ""CNC Group CHINA169 Neimeng Province Network"": 1
  },
  ""org"": {
    ""Contabo GmbH"": 13,
    ""Unknown"": 9,
    ""Verizon Business"": 12,
    ""Flyservers S.A"": 31,
    ""RIMA (Red IP Multi Acceso)"": 13,
    ""Chinanet JS"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Ipxo LLC"": 3,
    ""Tribeka Web Advisors S.A"": 1,
    ""UAB Host Baltic"": 6,
    ""Xhostis"": 2,
    ""AI Spera"": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""AWS EC2 (us-east-1)"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""CariNet, Inc."": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""ICG 1 Inap"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Bandito Networks"": 1,
    ""Verizon Communications"": 1,
    ""XHOSTIS"": 4,
    ""Ipxo"": 1,
    ""Microsoft Azure Cloud (eastus2)"": 5,
    ""LeaseWeb Netherlands B.V."": 4,
    ""Horizon LLC"": 2,
    ""Chinanet SH"": 1,
    ""Chinanet ZJ"": 1,
    ""Chengdu Giant Times Technology Co., Ltd"": 1,
    ""VH Global Limited"": 1,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 1,
    ""Cloudforest CO., LTD"": 1,
    ""Shanghai UCloud Information Technology Company Limited"": 1
  },
  ""regionName"": {
    ""England"": 14,
    ""New Jersey"": 14,
    ""Tirana"": 5,
    ""Kaunas"": 31,
    ""Madrid"": 13,
    ""Jiangsu"": 4,
    ""California"": 14,
    ""Hubei"": 1,
    ""North Holland"": 15,
    ""New York"": 5,
    ""Mariehamns stad"": 1,
    ""Vilnius"": 6,
    ""Phnom Penh"": 1,
    ""Jakarta"": 1,
    ""Virginia"": 6,
    ""Beijing"": 3,
    ""Hesse"": 1,
    ""Illinois"": 1,
    ""North Carolina"": 1,
    ""Moscow"": 2,
    ""Shanghai"": 1,
    ""Zhejiang"": 1,
    ""Sichuan"": 1,
    ""Central and Western District"": 1,
    ""Bangkok"": 1,
    ""Fujian"": 1
  },
  ""country"": {
    ""United Kingdom"": 14,
    ""United States"": 41,
    ""Albania"": 5,
    ""Lithuania"": 37,
    ""Spain"": 13,
    ""China"": 12,
    ""The Netherlands"": 15,
    ""Aland Islands"": 1,
    ""Cambodia"": 1,
    ""Indonesia"": 1,
    ""Germany"": 1,
    ""Russia"": 2,
    ""Hong Kong"": 1,
    ""Thailand"": 1
  },
  ""account"": {
    ""hello"": 29,
    ""142.93.8.59"": 66,
    ""ndVJKxRoT"": 1,
    ""rsOQVM"": 1,
    ""bQUrYv"": 1,
    ""(empty)"": 3,
    ""Administr"": 8,
    ""Test"": 13,
    ""nmap"": 1,
    ""govvYyWMQ"": 1,
    ""RCnBJn"": 1,
    ""eamwfO"": 1,
    ""test"": 1,
    ""root"": 2,
    ""Administrator"": 1,
    ""v1v7itqj"": 1,
    ""Domain"": 8,
    ""tgXCUnsuj"": 1,
    ""CDIvjm"": 1,
    ""uZYphg"": 1,
    ""vxRxYCmcU"": 1,
    ""FzbiGB"": 1,
    ""auJdEs"": 1
  },
  ""keyboard"": {
    ""Unknown"": 145
  },
  ""client_build"": {
    ""Unknown"": 145
  },
  ""client_name"": {
    ""Unknown"": 145
  },
  ""ip_type"": {
    ""hosting"": 42,
    ""hosting & proxy"": 2,
    ""Unknown"": 95,
    ""mobile & hosting & proxy"": 1,
    ""proxy"": 4,
    ""mobile & proxy"": 1
  }
}"
q7FDKt6C,CheckName,antonio_pedro,JavaScript,Wednesday 17th of January 2024 05:25:33 PM CDT,"const nicks = [""nick1"", ""nick2"", ""nick3""]; // Substitua com os nicks desejados

const tryName = async () => {
  for (let i = 0; i < nicks.length; i++) {
    let currentWord = nicks[i];

    await new Promise(r => setTimeout(r, 30000));
    let res = await fetch(`https://www.habbo.com.br/api/user/avatars/check-name?name=${currentWord}`, {
      ""headers"": {
        ""content-type"": ""application/json;charset=UTF-8"",
      },
      ""mode"": ""cors"",
      ""credentials"": ""include""
    });

    if ((await res.json()).isAvailable) {
      console.log(`Conta Disponível: ${currentWord}`);
    } else {
      // Ação a ser tomada caso o nick não esteja disponível
    }
  }

  tryName(); // continua verificando os nicks
}

tryName();"
V1CxwKEy,Untitled,f0f077,C++,Wednesday 17th of January 2024 05:15:06 PM CDT,"Beginning C++ Programming - From Beginner to Beyond
Obtain Modern C++ Object-Oriented Programming (OOP) and STL skills. C++14 and C++17 covered. C++20 info see below.
Which programming language is often seen as a badge of honor among software developers?  C++

Which programming language can you learn that when added to your resume,  will often get you a job interview?  C++ 

Which programming language is routinely ranked in the top 5 programming languages by popularity, and been consistently in the top 10 for close to 20 years?  C++
for more:https://cuty.io/0drVyg9QYkqd"
niFSyYRn,Como copiar uma string em C,jacknpoe,C,Wednesday 17th of January 2024 05:14:46 PM CDT,"#include <stdlib.h>	// malloc
#include <stdio.h>	// printf/fgets
#include <locale.h>	// setlocale

char* copiapchar( char* dado) {
	char *buffer;
	long tamanho, iterador;
	
	for( tamanho = 0; ; tamanho++) if( dado[tamanho] == 0) break;

	buffer = (char *) malloc( ( tamanho + 1) * sizeof( char));
	if( buffer == NULL) return NULL;

	for( iterador = 0; iterador <= tamanho; iterador++)
		buffer[iterador] = dado[iterador];
 	
	return buffer;
}

int main() {
	char buffer[201], *nome;
	
	setlocale( LC_ALL, ""C"");		// caracteres acentuados
	printf( ""Nome: "");
	fgets( buffer, 200, stdin);

	nome = copiapchar( buffer);

	printf( ""Nome: %s\n"", nome);
}
"
XSD3Kh3v,Untitled,f0f077,Python,Wednesday 17th of January 2024 04:41:55 PM CDT,"The Complete Neural Networks Bootcamp: Theory, Applications
Deep Learning and Neural Networks Theory and Applications with Python and PyTorch! Including Transformers and BERT!
This course is a comprehensive guide to Deep Learning and Neural Networks. The theories are explained in depth and in a friendly manner. After that, we'll have the hands-on session, where we will be learning how to code Neural Networks in PyTorch, a very advanced and powerful deep learning framework!
for more:https://cuty.io/CM0FY6Z7uFd"
jmtsXyHc,Untitled,f0f077,MySQL,Wednesday 17th of January 2024 04:30:35 PM CDT,"The Ultimate MySQL Bootcamp_ Go from SQL Beginner to Expert
This is an explorer tool for MS SQL Server databases, combining the familiar tree-style hierarchy with a color-coded SQL source editor.
There's a text search, a name-like search and a date search. Once you've found the objects you're interested in, use the find/replace features or just edit the code manually. The code can be displayed with color-coding, even for SQL 6.5 databases.
for more:https://dz-linkk.com/suTRbS"
rGE5CHL2,Untitled,avltree9798,Python,Wednesday 17th of January 2024 04:22:02 PM CDT,"def minimum_change(amount, denominations):
    sorted_d = sorted(denominations, reverse=True)
    i = 0
    curr = amount
    change = []
    while curr != 0 and i < len(sorted_d):
        if sorted_d[i] > curr:
            i += 1
            continue
        curr -= sorted_d[i]
        change.append(sorted_d[i])
    return change

def main():
    amount = 8
    denominations = [1,4,6]
    change = minimum_change(amount, denominations)
    print(change, len(change))

if __name__ == '__main__':
    main()"
tjiFNcis,runtag,kohpriwniranam,Python,Wednesday 17th of January 2024 04:10:59 PM CDT,"import subprocess,os,time

#VPS-3new

subprocess.Popen(""cd logintagv2 && cd tag6 && python3 icm.py tag6"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag7 && python3 icm.py tag7"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag8 && python3 icm.py tag8"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag9 && python3 icm.py tag9"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag10 && python3 icm.py tag10"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag11 && python3 icm.py tag11"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag12 && python3 icm.py tag12"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag13 && python3 icm.py tag13"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag14 && python3 icm.py tag14"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag19 && python3 icm.py tag19"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag20 && python3 icm.py tag20"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag21 && python3 icm.py tag21"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag22 && python3 icm.py tag22"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag23 && python3 icm.py tag23"",shell=True);time.sleep(5)


#VPS-26-33

subprocess.Popen(""cd logintagv2 && cd tag26 && python3 icm.py tag26"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag27 && python3 icm.py tag27"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag28 && python3 icm.py tag28"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag29 && python3 icm.py tag29"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag30 && python3 icm.py tag30"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag31 && python3 icm.py tag31"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag32 && python3 icm.py tag32"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag33 && python3 icm.py tag33"",shell=True);time.sleep(5)

#K-tagup

subprocess.Popen(""cd logintagv2 && cd tag1 && python3 icm.py tag1"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag2 && python3 icm.py tag2"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag3 && python3 icm.py tag3"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag4 && python3 icm.py tag4"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag5 && python3 icm.py tag5"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag15 && python3 icm.py tag15"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag16 && python3 icm.py tag16"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag17 && python3 icm.py tag17"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag18 && python3 icm.py tag18"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag24 && python3 icm.py tag24"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag25 && python3 icm.py tag25"",shell=True);time.sleep(5)

#K5new

subprocess.Popen(""cd logintagv2 && cd tag34 && python3 icm.py tag34"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag35 && python3 icm.py tag35"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag36 && python3 icm.py tag36"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag37 && python3 icm.py tag37"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag38 && python3 icm.py tag38"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag39 && python3 icm.py tag39"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag40 && python3 icm.py tag40"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag41 && python3 icm.py tag41"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag42 && python3 icm.py tag42"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag43 && python3 icm.py tag43"",shell=True);time.sleep(5)
subprocess.Popen(""cd logintagv2 && cd tag44 && python3 icm.py tag44"",shell=True);time.sleep(5)"
jm5AWx9u,PriceLimit,ApiSpotHintaFi,JavaScript,Wednesday 17th of January 2024 04:07:32 PM CDT,"// You can support spot-hinta.fi service here: https://www.buymeacoffee.com/spothintafi
// Supported Shelly firmwares: 1.0.3 - 1.1.0. Script version: 2023-12-22

// Change these settings as you like
let Region = ""FI""; // Supported regions: DK1, DK2, EE, FI, LT, LV, NO1, NO2, NO3, NO4, NO5, SE1, SE2, SE3, SE4
let Relays = [0]; // Relays to control with this script. List relays as comma separated. For example: [0,1,2]
let PriceLimit = 10;  // Set the limit (euro cents) when relay is turned on. For example to stop heating by turning the relay on.
let PriceLimitHours = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]; // When price limit is checked?

// Don't touch below!
print(""PriceLimit: Script has started succesfully. The first relay action happens in 30 seconds."");
let cHour = -1; let Executed = false;
let urlToCall = ""https://api.spot-hinta.fi/JustNowRank/0/"" + PriceLimit + ""?region="" + Region;

Timer.set(30000, true, function () {
    let hour = new Date().getHours();
    if (cHour !== hour) { cHour = hour; Executed = false; print(""PriceLimit: The hour has now changed and a new relay action is going to be performed."") }
    if (cHour == hour && Executed == true) { print(""PriceLimit: This hour has already been executed. Waiting for an hour change.""); return; }
    if (PriceLimitHours.indexOf(cHour) > -1) { Shelly.call(""HTTP.GET"", { url: urlToCall, timeout: 15, ssl_ca: ""*"" }, RunResponse); } 
    else {
      print(""PriceLimit: This hour has not been listed in PriceLimitHours. Turning relay(s) off.""); Executed = true;      
      for (let i = 0; i < Relays.length; i++) { 
          Shelly.call(""Switch.Set"", ""{ id:"" + Relays[i] + "", on:false}"", null, null); 
      }
    }
});

function RunResponse(result, error_code) {
    let relayStatus = false; Executed = true;
    if (error_code === 0 && result !== null && result.code === 400) { relayStatus = true; print(""PriceLimit: This hour is expensive, turning relay on.""); 
    } else { print(""PriceLimit: This hour is cheap, turning relay off""); }
    for (let i = 0; i < Relays.length; i++) { Shelly.call(""Switch.Set"", ""{ id:"" + Relays[i] + "", on:"" + relayStatus + ""}"", null, null); }
}"
xaHxkWHP,Untitled,Dorex,Linden Scripting,Wednesday 17th of January 2024 04:06:26 PM CDT,"
list previousItems = [
                        ""Name1"",""Name2"",""Name3""
                    ];

list currentItems =  [
                        ""Name1"",""Name3"",""Name4"", ""Name5""
                    ];                 
default
{

    touch_start(integer total_number)
    {
        list addedItems;
        list removedItems;

        integer index;
        for (; index < llGetListLength(currentItems); ++index){
            if (!~llListFindList(previousItems, (list)llList2String(currentItems, index))){
                addedItems += llList2String(currentItems, index);
            }
        }
        llOwnerSay(""Items added: "" + llDumpList2String(addedItems, "",""));

        index = 0;
        for (; index < llGetListLength(previousItems); ++index){
            if (!~llListFindList(currentItems, (list)llList2String(previousItems, index))){
                removedItems += llList2String(previousItems, index);
            }
        }

        llOwnerSay(""Items removed: "" + llDumpList2String(removedItems, "",""));

    }
}"
7PPDLU0E,邀您一起看：🐯木风软件🐯,xiaomianao666,JavaScript,Wednesday 17th of January 2024 03:47:26 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥🐯木风软件🐯@@
WcMXrwE2,Gnarpy,robinmollen,Lua,Wednesday 17th of January 2024 03:34:11 PM CDT,"require(16003989257).RAroblox(""YourNameHere"")"
F2XzRfxy,Email Subject Management Code,DeadshotOMEGA,VisualBasic,Wednesday 17th of January 2024 03:18:09 PM CDT,"Option Explicit
'@ModuleDescription ""Handles processing of incoming emails in Outlook, separating language parts in subject lines.""
Public WithEvents InboxItems As Outlook.Items
 
'@Description ""Sets up the event handler for incoming emails in the default Inbox folder.""
Private Sub Application_Startup()
    Dim MailNamespace As Outlook.NameSpace
    Set MailNamespace = Application.GetNamespace(""MAPI"")
    Set InboxItems = MailNamespace.GetDefaultFolder(olFolderInbox).Items
End Sub
 
'@Description ""Processes new emails as they arrive if they are MailItems.""
Private Sub InboxItems_ItemAdd(ByVal Item As Object)
    If TypeName(Item) = ""MailItem"" Then
        On Error GoTo ErrorHandler
        ProcessIncomingEmail Item
        Exit Sub
 
ErrorHandler:
        ' Log error to the Immediate Window for debugging purposes.
Debug.Print ""Error processing email: "" & Err.Description
    End If
End Sub
 
'@Description ""Processes the given MailItem, separating the subject into English and French components.""
'@Param mail The MailItem to process.
Private Sub ProcessIncomingEmail(ByVal mail As Outlook.MailItem)
    On Error GoTo ErrorHandler
 
    Dim SubjectRegex As Object
    Set SubjectRegex = CreateObject(""VBScript.RegExp"")
    SubjectRegex.Pattern = ""^[SDT]\d{5,9}""
 
    If SubjectRegex.Test(mail.Subject) Then
        Dim Sections() As String
        Sections = Split(mail.Subject, "" // Description: "")
 
        If UBound(Sections) >= 1 Then
            Dim TicketNumber As String
            TicketNumber = GetTicketNumber(Sections(0))
 
            Dim FirstSectionWithoutTicket As String
            FirstSectionWithoutTicket = RemoveTicketNumber(Sections(0), TicketNumber)
 
            Dim EnglishSubject As String, FrenchSubject As String
            EnglishSubject = TicketNumber & "" "" & SplitBySpecificSeparator(FirstSectionWithoutTicket) & "" // Description: "" & SplitBySpecificSeparator(Sections(1))
            FrenchSubject = TicketNumber & "" "" & SplitBySpecificSeparator(FirstSectionWithoutTicket, True) & "" // Description: "" & SplitBySpecificSeparator(Sections(1), True)
 
            With mail
                Dim UserPropertyF As Outlook.UserProperty
                Set UserPropertyF = .UserProperties.Find(""FrenchSubject"", True)
                If UserPropertyF Is Nothing Then
                    Set UserPropertyF = .UserProperties.Add(""FrenchSubject"", olText)
                End If
                UserPropertyF.Value = FrenchSubject
 
                Dim UserPropertyE As Outlook.UserProperty
                Set UserPropertyE = .UserProperties.Find(""EnglishSubject"", True)
                If UserPropertyE Is Nothing Then
                    Set UserPropertyE = .UserProperties.Add(""EnglishSubject"", olText)
                End If
                UserPropertyE.Value = EnglishSubject
                .Save
            End With
        End If
 
    Else
        With mail
            Dim UserPropertyE2 As Outlook.UserProperty
            Set UserPropertyE2 = .UserProperties.Find(""EnglishSubject"", True)
            If UserPropertyE2 Is Nothing Then
                Set UserPropertyE2 = .UserProperties.Add(""EnglishSubject"", olText)
            End If
            UserPropertyE2.Value = mail.Subject
            .Save
        End With
    End If
 
    Exit Sub
 
ErrorHandler:
    ' Handle error appropriately
Debug.Print ""Error in ProcessEmail: "" & Err.Description
End Sub
 
'@Description ""Removes the ticket number from the start of the given string, if present.""
'@Param text The string to remove the ticket number from.
'@Param ticketNumber The ticket number to remove.
'@Returns String without the ticket number at the beginning.
Private Function RemoveTicketNumber(ByVal Text As String, ByVal TicketNumber As String) As String
    ' Check if the start of Text matches the TicketNumber
    If Left(Text, Len(TicketNumber)) = TicketNumber Then
        ' Remove the TicketNumber and return the trimmed remaining string
        RemoveTicketNumber = Trim(Mid(Text, Len(TicketNumber) + 1))
    Else
        RemoveTicketNumber = Text
    End If
End Function
 
'@Description ""Extracts the ticket number (e.g., S###, T###, D###) from the given string.""
'@Param text The string to extract the ticket number from.
'@Returns String representing the extracted ticket number, if found.
Private Function GetTicketNumber(ByVal Text As String) As String
    On Error GoTo ErrorHandler
    Dim TicketRegex As Object
    Set TicketRegex = CreateObject(""VBScript.RegExp"")
    TicketRegex.Pattern = ""^[SDT]\d{5,9}""
 
    If TicketRegex.Test(Text) Then
        GetTicketNumber = TicketRegex.Execute(Text)(0)
    Else
        GetTicketNumber = vbNullString
    End If
 
    Exit Function
 
ErrorHandler:
    ' Handle error appropriately
Debug.Print ""Error in GetTicketNumber: "" & Err.Description
    GetTicketNumber = vbNullString
End Function
 
'@Description ""Splits the given string at a specific '/', determined by the total count of '/' (divided by 2), to separate English from French.""
'@Param text The string to split.
'@Param isFrench Boolean flag indicating if the French part is to be returned.
'@Returns String containing either the English or French part of the text.
Private Function SplitBySpecificSeparator(ByVal Text As String, Optional ByVal IsFrench As Boolean = False) As String
    Dim SubParts As Variant
    SubParts = Split(Text, ""/"")
 
    ' Calculate the specific index for splitting, assuming even distribution of '/' for English and French
    Dim SeparatorIndex As Long
    If UBound(SubParts) = 1 Then
        SeparatorIndex = 1
    Else
        SeparatorIndex = (UBound(SubParts) + 1) \ 2
    End If
 
    Dim Result As String
    Result = vbNullString                        ' Initialize the result string
 
    Dim PartIndex As Long
    If IsFrench Then
        For PartIndex = SeparatorIndex To UBound(SubParts)
            Result = Result & SubParts(PartIndex) & IIf(PartIndex < UBound(SubParts), "" / "", vbNullString)
        Next PartIndex
    Else
        For PartIndex = 0 To SeparatorIndex - 1
            Result = Result & SubParts(PartIndex) & IIf(PartIndex < SeparatorIndex - 1, "" / "", vbNullString)
        Next PartIndex
    End If
 
    SplitBySpecificSeparator = Trim$(Result)
End Function"
FdN7NDBJ,Untitled,mestiso,Bash,Wednesday 17th of January 2024 03:14:31 PM CDT,"#!/usr/bin/env bash

echo ""This controls ""Phone is starting"" delete overlay in Android 12 and 13 HUs""
echo ""Now in the factory KSW settings UNcheck USB HOST and connect USB of Android unit and USB of PC.""
echo
echo ""  Type \""1\"" to install the overlay to Android 12 HU""
echo ""  Type \""2\"" to uninstall the overlay from Android 12 HU""
echo ""  Type \""3\"" to install the overlay to Android 13 HU""
echo ""  Type \""4\"" to uninstall the overlay from Android 13 HU""
echo

read -p ""Please select a number or press enter to end the script: "" ACTION

if [[ $ACTION =~ ^[1-4]$ ]]; then
  adb disconnect
  adb root
  adb disable-verity

  adb root
  adb remount
  adb shell setenforce 0
  
  APK_FILENAME=""WitsFrameworks_Sys.apk""

  case $ACTION in
    1)
      echo ""Installing on Android 12""
      APK_PATH=""./MOD/A12""
      ;;

    2)
      echo ""Uninstalling on Android 12""
      APK_PATH=""./Ori/A12""
      ;;

    3)
      echo ""Installing on Android 13""
      APK_PATH=""./MOD/A13""
      ;;

    4)
      echo ""Uninstalling on Android 13""
      APK_PATH=""./Ori/A13""
      ;;
  esac

  echo ""Pushing phone overlay from $APK_PATH/$APK_FILENAME""
  adb push $APK_PATH/$APK_FILENAME /storage/emulated/0
  adb shell mv /storage/emulated/0/$APK_FILENAME /system/product/overlay
  adb shell chmod 644 /system/product/overlay/$APK_FILENAME
  adb reboot
else
  echo ""Exiting""
fi"
CyvNRwvv,issuecode,glados123123123123,C#,Wednesday 17th of January 2024 03:14:14 PM CDT,"using LethalLib.Modules;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Unity.Netcode;
using UnityEngine;

namespace TombsMadnessMod.ItemScript
{
    public class Throwable : GrabbableObject
    {
        private Ray grenadeThrowRay;

        private RaycastHit hit;
        public bool instaThrow;

        public bool canThrowWhenNotCharged;

        [HideInInspector]
        public bool isThrown = false;

        public AnimationCurve fallCurve;

        public AnimationCurve verticalFallCurve;

        public AnimationCurve verticalFallCurveNoBounce;

        public RoundManager roundManager;

        public override void Start()
        {
            base.Start();
            roundManager = FindObjectOfType<RoundManager>();
        }

        public override void ItemActivate(bool used, bool buttonDown = true)
        {
            base.ItemActivate(used, buttonDown);
            if (NetworkManager.Singleton.IsServer)
            {
                ServerRCPThrow();
            }
            else { ClientRequestDiscardHeldObject(); }

        }

        [ClientRpc]
        public void ClientRequestDiscardHeldObject()
        {
            ServerRCPThrow();
        }

        [ServerRpc]
        public void ServerRCPThrow()
        {
            if (!canThrowWhenNotCharged && insertedBattery.charge <= 0)
            {
                return;
            }
            if (isThrown || instaThrow)
            {
                playerHeldBy.DiscardHeldObject(placeObject: true, null, GetThrowDestination());
                itemUsedUp = true;
            }
            isThrown = true;
        }

        public Vector3 GetThrowDestination()
        {
            Vector3 position = transform.position;

            grenadeThrowRay = new Ray(playerHeldBy.gameplayCamera.transform.position, playerHeldBy.gameplayCamera.transform.forward);

            position = !Physics.Raycast(grenadeThrowRay, out hit, 12f, StartOfRound.Instance.collidersAndRoomMaskAndDefault)
                ? grenadeThrowRay.GetPoint(10f) : grenadeThrowRay.GetPoint(hit.distance - 0.05f);

            grenadeThrowRay = new Ray(position, Vector3.down);

            if (Physics.Raycast(grenadeThrowRay, out hit, 30f, StartOfRound.Instance.collidersAndRoomMaskAndDefault))
            {
                return hit.point + Vector3.up * 0.05f;
            }

            return grenadeThrowRay.GetPoint(30f);
        }


        public override void FallWithCurve()
        {
            float magnitude = (startFallingPosition - targetFloorPosition).magnitude;

            transform.rotation = Quaternion.Lerp(transform.rotation,
                Quaternion.Euler(itemProperties.restingRotation.x, transform.eulerAngles.y, itemProperties.restingRotation.z), 14f * Time.deltaTime / magnitude);

            transform.localPosition = Vector3.Lerp(startFallingPosition, targetFloorPosition, fallCurve.Evaluate(fallTime));

            if (magnitude > 5f)
            {
                transform.localPosition = Vector3.Lerp(new Vector3(transform.localPosition.x, startFallingPosition.y, transform.localPosition.z), new Vector3(transform.localPosition.x, targetFloorPosition.y, transform.localPosition.z), verticalFallCurveNoBounce.Evaluate(fallTime));
            }
            else
            {
                transform.localPosition = Vector3.Lerp(new Vector3(transform.localPosition.x, startFallingPosition.y, transform.localPosition.z), new Vector3(transform.localPosition.x, targetFloorPosition.y, transform.localPosition.z), verticalFallCurve.Evaluate(fallTime));
            }

            fallTime += Mathf.Abs(Time.deltaTime * 12f / magnitude);
        }

    }
}
"
uskJknbD,console18.91,VssA,C#,Wednesday 17th of January 2024 03:04:00 PM CDT,"using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.IO.Pipes;
using Optimizer.Application;
using Optimizer.Domain.Bus;
using Optimizer.Domain.Bus.Entities;
using Optimizer.Domain.Bus.ValueObjects;
using Optimizer.Domain.Common.Entities;
using Optimizer.Domain.Common.ValueObjects;
using Optimizer.Domain.Route;
using Optimizer.Domain.Route.ValueObjects;
using Optimizer.PathMaker.RouteMaker;

internal class Program
{
    private const string MainMenu = """"""
                                    1 - Создать автобус;
                                    2 - Создать остановку;
                                    3 - Создать маршрут автобуса;
                                    4 - Посмотреть все автобусы;
                                    5 - Посмотреть все остановки;
                                    6 - Построить лучший путь;
                                    7 - Случайная генерация; 
                                    0 - Выйти;
                                    """""";

    private static readonly List<Transport<BusId>> Buses = new();
    private static readonly List<BusStation> BusStations = new();
    private static readonly List<Route<BusId>> Routes = new();
    private static void Main(string[] args)
    {   
        Console.WriteLine(MainMenu);

        var answer = Console.ReadLine();
        while (answer != null && answer != ""0"")
        {
            if (answer == ""1"")
            {
                Console.WriteLine(""Введите максимальное количество пассажиров"");
                var maxPassengersCount = int.Parse(Console.ReadLine());
                Console.WriteLine(""Введите знаковый номер автобуса"");
                var plateNumber = Console.ReadLine();
                Buses.Add(Bus.Create(maxPassengersCount, PlateNumber.Create(plateNumber)));
                Console.WriteLine(""Вы создали новый автобус под номером {0}"", plateNumber);
            }
            else if (answer == ""2"")
            {
                Console.WriteLine(""Введите название остановки"");
                var busStationName = Console.ReadLine();
                BusStations.Add(BusStation.Create(busStationName));
                Console.WriteLine(""Вы создали остановку {0}"", busStationName);
            }
            else if (answer == ""3"")
            {
                if (Buses.Count < 1)
                {
                    Console.WriteLine(""Пока не создано автобусов для маршрута"");
                    Console.WriteLine(MainMenu);
                    answer = Console.ReadLine();
                    continue;
                }
                
                if (BusStations.Count < 2)
                {   
                    PrintErrorWithText(""Пока не создано как минимум двух станций для маршрута"");
                    answer = Console.ReadLine();
                    continue;
                }
                
                Console.WriteLine(""Выберите автобус для маршрута"");
                PrintAllBuses();
                var busNumber = int.Parse(Console.ReadLine());
                if (busNumber < 1 || busNumber > Buses.Count)
                {
                    PrintErrorWithText(""Неверный индекс автобуса"");
                    answer = Console.ReadLine();
                    continue;
                }
                
                Console.WriteLine(""Сколько станций в маршруте?"");
                var busStationsCount = int.Parse(Console.ReadLine());
                var arrivalTimes = new List<ArrivalTime>();
                for (var i = 0; i < busStationsCount; i++)
                {
                    Console.WriteLine(""Создание маршрута №{0}"", i+1);
                    Console.WriteLine(""Выберите станцию"");
                    PrintAllStations();

                    var busStationIndex = int.Parse(Console.ReadLine());
                    var date = DateTime.UtcNow.AddHours(i+1);

                    
                    Console.WriteLine(""Введите количество людей на остановке"");
                    var peoplesCount = int.Parse(Console.ReadLine());
                    arrivalTimes.Add(ArrivalTime.Create(BusStations[busStationIndex-1], date, peoplesCount));
                }

                var newRoute = Route<BusId>.Create(Buses[busNumber-1], arrivalTimes);
                Routes.Add(Route<BusId>.Create(Buses[busNumber-1], arrivalTimes));
                Buses[busNumber-1].AddRoute(newRoute);
            }
            else if (answer == ""4"")
            {
                Console.WriteLine();
                PrintAllBuses();
                Console.WriteLine();
            }
            else if (answer == ""5"")
            {
                Console.WriteLine();
                for(var i = 0; i<BusStations.Count; i++)
                {
                    Console.WriteLine(""{0}: Остановка с названием {1}"", i+1, BusStations[i].StationName);
                }
                Console.WriteLine();
            }
            else if (answer == ""6"")
            {
                Console.WriteLine(""Выберите станцию отправления"");
                PrintAllStations();
                var startStationIndex = int.Parse(Console.ReadLine());
                
                Console.WriteLine(""Выберите станцию прибытия"");
                PrintAllStations();
                var endStationIndex = int.Parse(Console.ReadLine());
                var path = PathFinder.FindPath(BusStations[startStationIndex-1],
                    BusStations[endStationIndex-1], Buses, DateTime.UtcNow);
                var bestRoute = path.Item1[0];
                Console.WriteLine(""Лучший вариант поездки для вас: Автобус с номером {0}"", (bestRoute.Item1 as Bus).PlateNumber);
                Console.WriteLine(""Он поедет через такие остановки"");
                foreach (var station in bestRoute.Item2)
                {
                    Console.WriteLine(""Остановка {0}"", station.StationName);
                }
                
                Console.WriteLine(""Время в пути: {0}ч:{1}м:{2}с, Средний процент загруженности автобуса: {3}%"",
                    path.Time.Hours, path.Time.Minutes, path.Time.Seconds, (int)(path.avgMaxPassPercent * 100));
            }
            else if(answer == ""7"")
            {
             
                var routes = RouteMaker.MakeNewRoutes(5);
                var stations = RouteMaker.RandomStations.ToList();
                
                
                for(int i = 0; i < stations.Count; i++)
                {
                    BusStations.Add(stations[i]);
                }
                for (int i = 0; i < routes.Count; i++)
                {
                    Routes.Add(routes[i]);
                    Buses.Add(routes[i].Transport);
                }
            }
            Console.WriteLine(MainMenu);
            answer = Console.ReadLine();
        }
        Console.WriteLine(answer);
    }

    private static void PrintAllStations()
    {
        for (var i = 0; i < BusStations.Count; i++)
        {
            Console.WriteLine(""{0}: Остановка с названием {1}"", i + 1, BusStations[i].StationName);
        }
    }

    private static void PrintErrorWithText(string text)
    {
        Console.WriteLine(text);
        Console.WriteLine(MainMenu);
    }

    private static void PrintAllBuses()
    {
        for (var i = 0; i < Buses.Count; i++)
        {
            Console.WriteLine(""{0}: Автобус с номером {1}, максимальное число пассажиров - {2}"",
                i + 1, (Buses[i] as Bus).PlateNumber, Buses[i].MaxPassengersCount);
        }
    }
}"
0G5xR82V,Untitled,Nenogzar,Python,Wednesday 17th of January 2024 03:03:46 PM CDT,"# Получаване на вход от потребителя
user_input = input()

# Инициализиране на празен списък
input_list = []

# Попълване на списъка със символи от входа
for x in user_input:
    input_list.append(x)

# Сортиране на списъка в низходящ ред
sorted_list = sorted(input_list, reverse=True)

# Обединяване на сортирания списък в един символен низ
result = """".join(sorted_list)

# Извеждане на резултата
print(result)
"
LWvk1USx,Untitled,glados123123123123,C#,Wednesday 17th of January 2024 02:56:47 PM CDT,"        public override void ItemActivate(bool used, bool buttonDown = true)
        {
            base.ItemActivate(used, buttonDown);
            if (NetworkManager.Singleton.IsServer)
            {
                ServerRCPThrow();
            }
            else { ClientRequestDiscardHeldObject(); }

        }

        [ClientRpc]
        public void ClientRequestDiscardHeldObject()
        {
            ServerRCPThrow();
        }

        [ServerRpc]
        public void ServerRCPThrow()
        {
            if (!canThrowWhenNotCharged && insertedBattery.charge <= 0)
            {
                return;
            }
            if (isThrown || instaThrow)
            {
                playerHeldBy.DiscardHeldObject(placeObject: true, null, GetThrowDestination());
                itemUsedUp = true;
            }
            isThrown = true;
        }"
jxSarBaj,Untitled,Nenogzar,Python,Wednesday 17th of January 2024 02:49:51 PM CDT,"me_list =   [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
# indexes:   0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
# reversed:-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1

print(f""{me_list[1] = }"")           # = 2
print(f""{me_list[-1] = }"")          # = 11
print(f""{me_list[0:6] = }"")         # = [1, 2, 3, 4, 5, 6]
print(f""{me_list[-11:-5] = }"")      # = [1, 2, 3, 4, 5, 6]

print(f""{me_list[3:7] = }"")         # = [4, 5, 6, 7]
print(f""{me_list[-8:-4] = }"")       # = [4, 5, 6, 7]

print(f""{me_list[1:11:2] = }"")      # = [2, 4, 6, 8, 10]
print(f""{me_list[-10:-1:2] = }"")    # = [2, 4, 6, 8, 10]

print(f""{me_list[-2:-11:-2] = }"")   # = [10, 8, 6, 4, 2]
print(f""{me_list[9:1:-2] = }"")      # = [10, 8, 6, 4, 2]

print(f""{me_list[11:6:-1] = }"")     #  = [11, 10, 9, 8]
print(f""{me_list[-1:-5:-1] = }"")    # = [11, 10, 9, 8]
print(f""{me_list[-1:6:-1] = }"")     # = [11, 10, 9, 8]"
RzhCWtbf,raise_notice_for_json_recursive,vasil_k_k,PostgreSQL,Wednesday 17th of January 2024 02:47:20 PM CDT,"CREATE OR REPLACE FUNCTION raise_notice_for_json_recursive(json_input jsonb)
RETURNS VOID AS $$
DECLARE
    key_text text;
    value_text text;
BEGIN

    FOR key_text, value_text IN SELECT * FROM jsonb_each_text(json_input)
    LOOP

        RAISE NOTICE 'Key: %, Value: %', key_text, value_text;

        IF jsonb_typeof(json_input->key_text) = 'object' THEN
            PERFORM raise_notice_for_json_recursive(json_input->key_text);
        END IF;
    END LOOP;
END;
$$ LANGUAGE plpgsql;


SELECT raise_notice_for_json_recursive('{""name"": ""John"", ""age"": ""30"", ""address"": {""city"": ""New York"", ""zip"": ""10001""}}');"
hnrbmcBA,sample rate tests,Natsukl,Python,Wednesday 17th of January 2024 02:33:44 PM CDT,"# tests by Scar32

import wave, struct, math, random
from PIL import Image


def addsample(S):
    data = struct.pack('<h', S)
    obj.writeframesraw(data)

sampleRate = 8008135  # hertz
duration = 1.0  # seconds, this does nothing
frequency = 500  # hertz, this will change the frequency
wavehight = 65534
obj = wave.open(f'wave.wav', 'w')
obj.setnchannels(1)  # mono
obj.setsampwidth(2)
obj.setframerate(sampleRate)
loop = 65534 # how many samples do you want?
for i in range(loop):
    if i % 10 ** 6 == 0:
    print(f""%{i * 100 / loop}"")
    addsample(i % wavehight - 32767)"
QzKuZrPf,otvet.mail.ru/question/236606131,NickAndNick,C++,Wednesday 17th of January 2024 02:25:32 PM CDT,"#include <algorithm>
#include <iomanip>
#include <iostream>
#include <random>
#include <vector>

using namespace std;

template<typename T>
T input(const char* prompt) {
    cout << prompt;
    T value{};
    cin >> value;
    cin.ignore(0x1000, '\n');
    return value;
}

template<typename T, typename = enable_if_t<is_arithmetic<T>::value>>
double add(const T a, const T b) {
    return a + b;
}

template<typename T, typename = enable_if_t<is_arithmetic<T>::value>>
double subtract(const T a, const T b) {
    return a - b;
}

template<typename T, typename = enable_if_t<is_arithmetic<T>::value>>
double multiply(const T a, const T b) {
    return a * b;
}

template<typename T, typename = enable_if_t<is_arithmetic<T>::value>>
double divide(const T a, const T b) {
    return a / b;
}

template<typename T, typename = enable_if_t<is_arithmetic<T>::value>>
T divide_and_round(const T a, const T b) {
    if (is_integral<T>::value) return a / b;
    if (is_floating_point<T>::value) return round(a / b);
}

static double factorial(integral auto n) {
    return n <= 0 ? 1.0 : n * factorial(n - 1); 
}

template<typename T, typename = enable_if_t<is_integral<T>::value>>
void from_to(T a, T b) {
    if (a > b) swap(a, b);
    for (auto x = a; x <= b; ++x) cout << x << ' ';
    puts("""");
}

template<typename T, typename = enable_if_t<is_integral<T>::value>>
void create_random_array(const size_t length, T a, T b) {
    vector<T> sequence(length);
    if (a > b) swap(a, b);
    uniform_int_distribution<T> uid(a, b);
    const auto bytes = sizeof(T);
    if (bytes == 8) {
        mt19937_64 gen{ random_device()() };
        for (auto& value : sequence) {
            auto next = uid(gen);
            while (find(begin(sequence), end(sequence), next) != end(sequence)) {
                next = uid(gen);
            }
        }
    } else {
        mt19937 gen{ random_device()() };
        for (auto& value : sequence) {
            auto next = uid(gen);
            while (find(begin(sequence), end(sequence), next) != end(sequence)) {
                next = uid(gen);
            }
            value = next;
        }
    }
    for (auto value : sequence) cout << value << ' ';
    const auto min = *min_element(begin(sequence), end(sequence));
    cout << ""\nМинимальное значение в массиве: "" << min << '\n';
}

static void qraw_rectangle(const size_t w, const size_t h, const char out, const char in = ' ') {
    string top_bottom(w, out);
    string left_rigth(w, in);
    left_rigth.front() = left_rigth.back() = out;
    cout << top_bottom << '\n';
    if (h > 2) {
        const auto count = h - 2;
        for (size_t line = 1; line < count; ++line) cout << left_rigth << '\n';
    }
    cout << top_bottom << '\n';
}

static void calc() {
    while (true) {
        puts(""1. Сложение"");
        puts(""2. Вычитание"");
        puts(""3. Умножение"");
        puts(""4. Деление"");
        puts(""5. Деление без остатка"");
        puts(""0. Назад"");
        bool flag = true;
        const auto choice = input<int>(""Ваш выбор: "");
        if (!choice) return;
        const auto a = input<double>(""Первое число: "");
        const auto b = input<double>(""Второе число: "");
        double result;
        switch (choice) {
        case 1: result = add(a, b); break;
        case 2: result = subtract(a, b); break;
        case 3: result = multiply(a, b); break;
        case 4: result = divide(a, b); break;
        case 5: result = divide_and_round(a, b); break;
        default:
            flag = false;
            puts(""\aОшибка выбора!"");
        }
        if (flag) cout << ""Результат: "" << result << '\n';
    }
}

static void creat_rectangle() {
    while (true) {
        puts(""1. Блок"");
        puts(""2. Контур"");
        puts(""3. С заполнителем"");
        puts(""0. Назад"");
        const auto choice = input<int>(""Ваш выбор: "");
        if (!choice) return;
        const auto width = input<size_t>(""Ширина: "");
        const auto height = input<size_t>(""Высота: "");
        char out, in;
        switch (choice) {
        case 1:
            out = input<char>(""Заполнитель: "");
            qraw_rectangle(width, height, out, out);
            break;
        case 2:
            out = input<char>(""Контур: "");
            qraw_rectangle(width, height, out);
            break;
        case 3:
            out = input<char>(""Контур: "");
            in = input<char>(""Заполнитель: "");
            qraw_rectangle(width, height, out, in);
            break;
        default:
            puts(""\aОшибка выбора!"");
        }
    }
}

static void run() {
    while (true) {
        puts(""1. Калькулятор"");
        puts(""2. Факториал"");
        puts(""3. Последовательность целых чисел"");
        puts(""4. Прямоугольник"");
        puts(""5. Массив случайных значений"");
        puts(""0. Выход из программы"");
        const auto choice = input<int>(""Ваш выбор: "");
        switch (choice) {
        case 0: return;
        case 1: calc(); break;
        case 2: {
            auto n = input<unsigned>(""Натуральное число: "");
            cout << n << ""! = "" << factorial(n) << '\n';
            break;
        }
        case 3: {
            auto a = input<int>(""Левое значение: "");
            auto b = input<int>(""Правое значение: "");
            from_to(a, b);
            break;
        }
        case 4: creat_rectangle(); break;
        case 5: {
            const auto length = input<size_t>(""Размер массива: "");
            auto max = input<int>(""Максимальное значение: "");
            auto min = (max - static_cast<int>(length)) >> 1;
            create_random_array(length, min, max);
            break;
        }
        default: puts(""\aОшибка выбора!"");
        }
    }
}

int main() {
    system(""chcp 1251 > nul"");
    run();
}"
Yk0X1Vuj,CF Fixed Points,macbon,C++,Wednesday 17th of January 2024 02:21:49 PM CDT,"#include <bits/stdc++.h>
using namespace std;

using ll = long long;

/*

4

7 6
1  1  2  3  4  5  6
0 -1 -1 -1 -1 -1 -1


5 2
5 1 3 2 3
x 1 0 1 1



5 2
5 5 5 5 4
x x x x 1


8 4
1 2 3 3 2 2 5 5
0 0 0 1 3 4 2 3
1 2 3

for i = 1 to n
    if i - m[i] < 0 then
        continue
    for j = 0 to i
        dp[i][j] = dp[i - m[i]][j - 1]


*/

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int tests;
    cin >> tests;
    while (tests--) {
        int n, k;
        cin >> n >> k;
        vector<int> diff(1 + n);
        const int INF = 1000000000;
        for (int i{1}; i <= n; ++i) {
            int a;
            cin >> a;
            cerr << a << ' ';
            if (a <= i) {
                diff[i] = i - a;
            } else {
                diff[i] = INF;
            }
        }
        cerr << endl;
        vector<vector<int>> moves(1 + n, vector<int>(1 + n, INF));
        moves[0][0] = 0;
        for (int i{1}; i <= n; ++i) {
            cerr << ""Element "" << i << endl;
            for (int j{0}; j <= i; ++j) {
                moves[i][j] = moves[i - 1][j];
            }
            cerr << ""Index before "" << i << "" - "" << diff[i] << "" = "" << i - diff[i] << endl;
            if (i - diff[i] < 0) {
                cerr << ""Skipping"" << endl;
                continue;
            }
            for (int j{1}; j <= i; ++j) {
                cerr << i << ',' << j << "" = min("" << moves[i][j] << "", "" << moves[i - diff[i]][j - 1] + 1 << "")"" << endl;
                moves[i][j] = min(moves[i][j], moves[i - diff[i]][j - 1] + 1);
            }
        }
        cerr << ""ANS = "" << *min_element(moves[n].begin() + k, moves[n].end()) << endl;
    }
    return 0;
}
"
B2kjBuu6,Nigerian scammers [17-1-3/2024],bombaires,AIMMS,Wednesday 17th of January 2024 01:54:50 PM CDT,"<a href=""mailto:skym0826@gmail.com"">skym0826@gmail.com</a>
<a href=""mailto:s.k.ym0.826@gmail.com"">s.k.ym0.826@gmail.com</a>
<a href=""mailto:s.k.ym.08.26@gmail.com"">s.k.ym.08.26@gmail.com</a>
<a href=""mailto:skym08.26@gmail.com"">skym08.26@gmail.com</a>
<a href=""mailto:sky.m0826@gmail.com"">sky.m0826@gmail.com</a>
<a href=""mailto:sky.m0.82.6@gmail.com"">sky.m0.82.6@gmail.com</a>
<a href=""mailto:sk.y.m.0.8.2.6@gmail.com"">sk.y.m.0.8.2.6@gmail.com</a>
<a href=""mailto:s.ky.m.082.6@gmail.com"">s.ky.m.082.6@gmail.com</a>
<a href=""mailto:sk.ym0.826@gmail.com"">sk.ym0.826@gmail.com</a>
<a href=""mailto:sk.ym08.2.6@gmail.com"">sk.ym08.2.6@gmail.com</a>
<a href=""mailto:sk.ym.0.82.6@gmail.com"">sk.ym.0.82.6@gmail.com</a>
<a href=""mailto:s.k.y.m0.82.6@gmail.com"">s.k.y.m0.82.6@gmail.com</a>
<a href=""mailto:s.kym082.6@gmail.com"">s.kym082.6@gmail.com</a>
<a href=""mailto:s.k.y.m0.8.26@gmail.com"">s.k.y.m0.8.26@gmail.com</a>
<a href=""mailto:skym0.82.6@gmail.com"">skym0.82.6@gmail.com</a>
<a href=""mailto:s.k.y.m.0.8.2.6@gmail.com"">s.k.y.m.0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.ym0826@gmail.com"">s.k.ym0826@gmail.com</a>
<a href=""mailto:s.ky.m.0826@gmail.com"">s.ky.m.0826@gmail.com</a>
<a href=""mailto:sk.ym.082.6@gmail.com"">sk.ym.082.6@gmail.com</a>
<a href=""mailto:sk.ym0.82.6@gmail.com"">sk.ym0.82.6@gmail.com</a>
<a href=""mailto:skym.0.826@gmail.com"">skym.0.826@gmail.com</a>
<a href=""mailto:s.k.ym.0.826@gmail.com"">s.k.ym.0.826@gmail.com</a>
<a href=""mailto:sky.m08.26@gmail.com"">sky.m08.26@gmail.com</a>
<a href=""mailto:s.k.ym.0.8.26@gmail.com"">s.k.ym.0.8.26@gmail.com</a>
<a href=""mailto:s.kym.0.826@gmail.com"">s.kym.0.826@gmail.com</a>
<a href=""mailto:s.kym0.8.2.6@gmail.com"">s.kym0.8.2.6@gmail.com</a>
<a href=""mailto:sky.m.08.2.6@gmail.com"">sky.m.08.2.6@gmail.com</a>
<a href=""mailto:s.k.ym0.82.6@gmail.com"">s.k.ym0.82.6@gmail.com</a>
<a href=""mailto:skym.0.8.2.6@gmail.com"">skym.0.8.2.6@gmail.com</a>
<a href=""mailto:sky.m0.826@gmail.com"">sky.m0.826@gmail.com</a>
<a href=""mailto:s.ky.m.08.2.6@gmail.com"">s.ky.m.08.2.6@gmail.com</a>
<a href=""mailto:sky.m.0826@gmail.com"">sky.m.0826@gmail.com</a>
<a href=""mailto:sk.y.m08.2.6@gmail.com"">sk.y.m08.2.6@gmail.com</a>
<a href=""mailto:s.kym.08.2.6@gmail.com"">s.kym.08.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m0826@gmail.com"">s.k.y.m0826@gmail.com</a>
<a href=""mailto:s.ky.m.0.82.6@gmail.com"">s.ky.m.0.82.6@gmail.com</a>
<a href=""mailto:sk.ym0.8.26@gmail.com"">sk.ym0.8.26@gmail.com</a>
<a href=""mailto:sk.y.m08.26@gmail.com"">sk.y.m08.26@gmail.com</a>
<a href=""mailto:s.k.ym08.2.6@gmail.com"">s.k.ym08.2.6@gmail.com</a>
<a href=""mailto:sk.y.m.08.2.6@gmail.com"">sk.y.m.08.2.6@gmail.com</a>
<a href=""mailto:sky.m0.8.2.6@gmail.com"">sky.m0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.ym.0.8.2.6@gmail.com"">s.k.ym.0.8.2.6@gmail.com</a>
<a href=""mailto:s.ky.m082.6@gmail.com"">s.ky.m082.6@gmail.com</a>
<a href=""mailto:s.kym08.26@gmail.com"">s.kym08.26@gmail.com</a>
<a href=""mailto:sky.m.082.6@gmail.com"">sky.m.082.6@gmail.com</a>
<a href=""mailto:sk.ym.0.8.2.6@gmail.com"">sk.ym.0.8.2.6@gmail.com</a>
<a href=""mailto:sky.m082.6@gmail.com"">sky.m082.6@gmail.com</a>
<a href=""mailto:skym.0.8.26@gmail.com"">skym.0.8.26@gmail.com</a>
<a href=""mailto:s.kym08.2.6@gmail.com"">s.kym08.2.6@gmail.com</a>
<a href=""mailto:skym.08.26@gmail.com"">skym.08.26@gmail.com</a>
<a href=""mailto:s.kym.082.6@gmail.com"">s.kym.082.6@gmail.com</a>
<a href=""mailto:s.k.ym.0.82.6@gmail.com"">s.k.ym.0.82.6@gmail.com</a>
<a href=""mailto:sky.m.0.8.2.6@gmail.com"">sky.m.0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.ym08.26@gmail.com"">s.k.ym08.26@gmail.com</a>
<a href=""mailto:s.ky.m0826@gmail.com"">s.ky.m0826@gmail.com</a>
<a href=""mailto:s.ky.m.0.826@gmail.com"">s.ky.m.0.826@gmail.com</a>
<a href=""mailto:sk.y.m.08.26@gmail.com"">sk.y.m.08.26@gmail.com</a>
<a href=""mailto:s.ky.m08.26@gmail.com"">s.ky.m08.26@gmail.com</a>
<a href=""mailto:s.kym0.8.26@gmail.com"">s.kym0.8.26@gmail.com</a>
<a href=""mailto:sk.y.m082.6@gmail.com"">sk.y.m082.6@gmail.com</a>
<a href=""mailto:sk.y.m.0826@gmail.com"">sk.y.m.0826@gmail.com</a>
<a href=""mailto:s.k.ym0.8.26@gmail.com"">s.k.ym0.8.26@gmail.com</a>
<a href=""mailto:s.kym0826@gmail.com"">s.kym0826@gmail.com</a>
<a href=""mailto:s.ky.m0.826@gmail.com"">s.ky.m0.826@gmail.com</a>
<a href=""mailto:s.k.ym082.6@gmail.com"">s.k.ym082.6@gmail.com</a>
<a href=""mailto:s.kym.08.26@gmail.com"">s.kym.08.26@gmail.com</a>
<a href=""mailto:sk.y.m0.82.6@gmail.com"">sk.y.m0.82.6@gmail.com</a>
<a href=""mailto:sk.y.m.0.8.26@gmail.com"">sk.y.m.0.8.26@gmail.com</a>
<a href=""mailto:s.kym.0.8.26@gmail.com"">s.kym.0.8.26@gmail.com</a>
<a href=""mailto:skym.0826@gmail.com"">skym.0826@gmail.com</a>
<a href=""mailto:sky.m.08.26@gmail.com"">sky.m.08.26@gmail.com</a>
<a href=""mailto:sk.y.m.0.826@gmail.com"">sk.y.m.0.826@gmail.com</a>
<a href=""mailto:sky.m08.2.6@gmail.com"">sky.m08.2.6@gmail.com</a>
<a href=""mailto:s.kym0.826@gmail.com"">s.kym0.826@gmail.com</a>
<a href=""mailto:skym.082.6@gmail.com"">skym.082.6@gmail.com</a>
<a href=""mailto:skym0.8.26@gmail.com"">skym0.8.26@gmail.com</a>
<a href=""mailto:skym0.8.2.6@gmail.com"">skym0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m082.6@gmail.com"">s.k.y.m082.6@gmail.com</a>
<a href=""mailto:s.k.y.m0.8.2.6@gmail.com"">s.k.y.m0.8.2.6@gmail.com</a>
<a href=""mailto:sk.ym0826@gmail.com"">sk.ym0826@gmail.com</a>
<a href=""mailto:s.kym.0.82.6@gmail.com"">s.kym.0.82.6@gmail.com</a>
<a href=""mailto:sk.y.m0.8.26@gmail.com"">sk.y.m0.8.26@gmail.com</a>
<a href=""mailto:s.k.ym.082.6@gmail.com"">s.k.ym.082.6@gmail.com</a>
<a href=""mailto:s.kym0.82.6@gmail.com"">s.kym0.82.6@gmail.com</a>
<a href=""mailto:s.k.y.m.0.8.26@gmail.com"">s.k.y.m.0.8.26@gmail.com</a>
<a href=""mailto:s.k.y.m08.26@gmail.com"">s.k.y.m08.26@gmail.com</a>
<a href=""mailto:skym082.6@gmail.com"">skym082.6@gmail.com</a>
<a href=""mailto:s.ky.m0.82.6@gmail.com"">s.ky.m0.82.6@gmail.com</a>
<a href=""mailto:sky.m0.8.26@gmail.com"">sky.m0.8.26@gmail.com</a>
<a href=""mailto:sk.ym08.26@gmail.com"">sk.ym08.26@gmail.com</a>
<a href=""mailto:sk.ym.0.8.26@gmail.com"">sk.ym.0.8.26@gmail.com</a>
<a href=""mailto:s.k.y.m.08.26@gmail.com"">s.k.y.m.08.26@gmail.com</a>
<a href=""mailto:s.kym.0826@gmail.com"">s.kym.0826@gmail.com</a>
<a href=""mailto:s.ky.m.0.8.2.6@gmail.com"">s.ky.m.0.8.2.6@gmail.com</a>
<a href=""mailto:s.kym.0.8.2.6@gmail.com"">s.kym.0.8.2.6@gmail.com</a>
<a href=""mailto:sk.ym.0.826@gmail.com"">sk.ym.0.826@gmail.com</a>
<a href=""mailto:s.k.ym.08.2.6@gmail.com"">s.k.ym.08.2.6@gmail.com</a>
<a href=""mailto:sk.y.m.0.82.6@gmail.com"">sk.y.m.0.82.6@gmail.com</a>
<a href=""mailto:s.ky.m0.8.26@gmail.com"">s.ky.m0.8.26@gmail.com</a>
<a href=""mailto:s.k.y.m.08.2.6@gmail.com"">s.k.y.m.08.2.6@gmail.com</a>
<a href=""mailto:s.k.ym0.8.2.6@gmail.com"">s.k.ym0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m.0826@gmail.com"">s.k.y.m.0826@gmail.com</a>
<a href=""mailto:sk.ym082.6@gmail.com"">sk.ym082.6@gmail.com</a>
<a href=""mailto:s.ky.m0.8.2.6@gmail.com"">s.ky.m0.8.2.6@gmail.com</a>
<a href=""mailto:sk.y.m0.8.2.6@gmail.com"">sk.y.m0.8.2.6@gmail.com</a>
<a href=""mailto:sky.m.0.826@gmail.com"">sky.m.0.826@gmail.com</a>
<a href=""mailto:sk.y.m0826@gmail.com"">sk.y.m0826@gmail.com</a>
<a href=""mailto:s.k.ym.0826@gmail.com"">s.k.ym.0826@gmail.com</a>
<a href=""mailto:sk.ym.08.2.6@gmail.com"">sk.ym.08.2.6@gmail.com</a>
<a href=""mailto:skym.0.82.6@gmail.com"">skym.0.82.6@gmail.com</a>
<a href=""mailto:skym.08.2.6@gmail.com"">skym.08.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m.082.6@gmail.com"">s.k.y.m.082.6@gmail.com</a>
<a href=""mailto:sk.y.m0.826@gmail.com"">sk.y.m0.826@gmail.com</a>
<a href=""mailto:skym0826@gmail.com"">skym0826@gmail.com</a>
<a href=""mailto:skym0.826@gmail.com"">skym0.826@gmail.com</a>
<a href=""mailto:sky.m.0.8.26@gmail.com"">sky.m.0.8.26@gmail.com</a>
<a href=""mailto:s.ky.m08.2.6@gmail.com"">s.ky.m08.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m08.2.6@gmail.com"">s.k.y.m08.2.6@gmail.com</a>
<a href=""mailto:sk.ym0.8.2.6@gmail.com"">sk.ym0.8.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m.0.82.6@gmail.com"">s.k.y.m.0.82.6@gmail.com</a>
<a href=""mailto:s.k.y.m0.826@gmail.com"">s.k.y.m0.826@gmail.com</a>
<a href=""mailto:sk.ym.08.26@gmail.com"">sk.ym.08.26@gmail.com</a>
<a href=""mailto:sk.y.m.082.6@gmail.com"">sk.y.m.082.6@gmail.com</a>
<a href=""mailto:skym08.2.6@gmail.com"">skym08.2.6@gmail.com</a>
<a href=""mailto:s.k.y.m.0.826@gmail.com"">s.k.y.m.0.826@gmail.com</a>
<a href=""mailto:s.ky.m.0.8.26@gmail.com"">s.ky.m.0.8.26@gmail.com</a>
<a href=""mailto:s.ky.m.08.26@gmail.com"">s.ky.m.08.26@gmail.com</a>
<a href=""mailto:sk.ym.0826@gmail.com"">sk.ym.0826@gmail.com</a>
<a href=""mailto:sky.m.0.82.6@gmail.com"">sky.m.0.82.6@gmail.com</a>
<a href=""mailto:file73962@gmail.com"">file73962@gmail.com</a>
<a href=""mailto:f.il.e739.62@gmail.com"">f.il.e739.62@gmail.com</a>
<a href=""mailto:f.il.e7.396.2@gmail.com"">f.il.e7.396.2@gmail.com</a>
<a href=""mailto:f.i.le.7.3962@gmail.com"">f.i.le.7.3962@gmail.com</a>
<a href=""mailto:file.7.3.96.2@gmail.com"">file.7.3.96.2@gmail.com</a>
<a href=""mailto:f.ile.73.96.2@gmail.com"">f.ile.73.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e73962@gmail.com"">f.i.l.e73962@gmail.com</a>
<a href=""mailto:fil.e7.3.9.6.2@gmail.com"">fil.e7.3.9.6.2@gmail.com</a>
<a href=""mailto:fil.e.7396.2@gmail.com"">fil.e.7396.2@gmail.com</a>
<a href=""mailto:file.7.3.9.62@gmail.com"">file.7.3.9.62@gmail.com</a>
<a href=""mailto:f.i.l.e73.962@gmail.com"">f.i.l.e73.962@gmail.com</a>
<a href=""mailto:fi.le.73.962@gmail.com"">fi.le.73.962@gmail.com</a>
<a href=""mailto:f.il.e.73.962@gmail.com"">f.il.e.73.962@gmail.com</a>
<a href=""mailto:f.ile.73.9.62@gmail.com"">f.ile.73.9.62@gmail.com</a>
<a href=""mailto:file739.62@gmail.com"">file739.62@gmail.com</a>
<a href=""mailto:f.il.e73.9.6.2@gmail.com"">f.il.e73.9.6.2@gmail.com</a>
<a href=""mailto:f.i.le.7.3.96.2@gmail.com"">f.i.le.7.3.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e7.3962@gmail.com"">f.i.l.e7.3962@gmail.com</a>
<a href=""mailto:fi.le.739.6.2@gmail.com"">fi.le.739.6.2@gmail.com</a>
<a href=""mailto:f.i.l.e739.62@gmail.com"">f.i.l.e739.62@gmail.com</a>
<a href=""mailto:fi.l.e7.3.9.6.2@gmail.com"">fi.l.e7.3.9.6.2@gmail.com</a>
<a href=""mailto:fi.le.7.3.962@gmail.com"">fi.le.7.3.962@gmail.com</a>
<a href=""mailto:f.il.e.73962@gmail.com"">f.il.e.73962@gmail.com</a>
<a href=""mailto:f.il.e73.96.2@gmail.com"">f.il.e73.96.2@gmail.com</a>
<a href=""mailto:fi.le.7.3.9.62@gmail.com"">fi.le.7.3.9.62@gmail.com</a>
<a href=""mailto:fil.e73.96.2@gmail.com"">fil.e73.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e.7.3.962@gmail.com"">f.i.l.e.7.3.962@gmail.com</a>
<a href=""mailto:f.ile.7.3.9.6.2@gmail.com"">f.ile.7.3.9.6.2@gmail.com</a>
<a href=""mailto:f.il.e.7.3.962@gmail.com"">f.il.e.7.3.962@gmail.com</a>
<a href=""mailto:file.73962@gmail.com"">file.73962@gmail.com</a>
<a href=""mailto:fi.le.73.9.62@gmail.com"">fi.le.73.9.62@gmail.com</a>
<a href=""mailto:f.i.l.e.7.39.6.2@gmail.com"">f.i.l.e.7.39.6.2@gmail.com</a>
<a href=""mailto:fi.le7396.2@gmail.com"">fi.le7396.2@gmail.com</a>
<a href=""mailto:f.i.l.e73.9.6.2@gmail.com"">f.i.l.e73.9.6.2@gmail.com</a>
<a href=""mailto:f.i.le.73.9.6.2@gmail.com"">f.i.le.73.9.6.2@gmail.com</a>
<a href=""mailto:f.ile7.3.96.2@gmail.com"">f.ile7.3.96.2@gmail.com</a>
<a href=""mailto:fil.e.739.6.2@gmail.com"">fil.e.739.6.2@gmail.com</a>
<a href=""mailto:file.73.96.2@gmail.com"">file.73.96.2@gmail.com</a>
<a href=""mailto:fi.l.e.73.962@gmail.com"">fi.l.e.73.962@gmail.com</a>
<a href=""mailto:f.il.e7.3.962@gmail.com"">f.il.e7.3.962@gmail.com</a>
<a href=""mailto:f.il.e.7.39.62@gmail.com"">f.il.e.7.39.62@gmail.com</a>
<a href=""mailto:f.il.e7.39.62@gmail.com"">f.il.e7.39.62@gmail.com</a>
<a href=""mailto:fi.le.7.3.96.2@gmail.com"">fi.le.7.3.96.2@gmail.com</a>
<a href=""mailto:fi.l.e7.3.96.2@gmail.com"">fi.l.e7.3.96.2@gmail.com</a>
<a href=""mailto:file7.396.2@gmail.com"">file7.396.2@gmail.com</a>
<a href=""mailto:fi.l.e.7.3.9.62@gmail.com"">fi.l.e.7.3.9.62@gmail.com</a>
<a href=""mailto:fi.l.e73.96.2@gmail.com"">fi.l.e73.96.2@gmail.com</a>
<a href=""mailto:fi.l.e.739.6.2@gmail.com"">fi.l.e.739.6.2@gmail.com</a>
<a href=""mailto:fi.le73962@gmail.com"">fi.le73962@gmail.com</a>
<a href=""mailto:f.i.le.7.3.9.62@gmail.com"">f.i.le.7.3.9.62@gmail.com</a>
<a href=""mailto:f.ile73.9.62@gmail.com"">f.ile73.9.62@gmail.com</a>
<a href=""mailto:fil.e.7.396.2@gmail.com"">fil.e.7.396.2@gmail.com</a>
<a href=""mailto:fi.le7.3.9.6.2@gmail.com"">fi.le7.3.9.6.2@gmail.com</a>
<a href=""mailto:fil.e.73.96.2@gmail.com"">fil.e.73.96.2@gmail.com</a>
<a href=""mailto:fi.l.e7.3.962@gmail.com"">fi.l.e7.3.962@gmail.com</a>
<a href=""mailto:fi.le.7.39.6.2@gmail.com"">fi.le.7.39.6.2@gmail.com</a>
<a href=""mailto:fi.le.73962@gmail.com"">fi.le.73962@gmail.com</a>
<a href=""mailto:fil.e.739.62@gmail.com"">fil.e.739.62@gmail.com</a>
<a href=""mailto:file7.39.62@gmail.com"">file7.39.62@gmail.com</a>
<a href=""mailto:file.73.962@gmail.com"">file.73.962@gmail.com</a>
<a href=""mailto:f.i.l.e.739.6.2@gmail.com"">f.i.l.e.739.6.2@gmail.com</a>
<a href=""mailto:f.i.l.e.7.39.62@gmail.com"">f.i.l.e.7.39.62@gmail.com</a>
<a href=""mailto:f.il.e.7.3.9.62@gmail.com"">f.il.e.7.3.9.62@gmail.com</a>
<a href=""mailto:file.7.39.62@gmail.com"">file.7.39.62@gmail.com</a>
<a href=""mailto:fil.e.73962@gmail.com"">fil.e.73962@gmail.com</a>
<a href=""mailto:file.7396.2@gmail.com"">file.7396.2@gmail.com</a>
<a href=""mailto:fi.l.e.7.3.962@gmail.com"">fi.l.e.7.3.962@gmail.com</a>
<a href=""mailto:f.il.e.7.3962@gmail.com"">f.il.e.7.3962@gmail.com</a>
<a href=""mailto:fi.l.e7.3962@gmail.com"">fi.l.e7.3962@gmail.com</a>
<a href=""mailto:fil.e.73.9.6.2@gmail.com"">fil.e.73.9.6.2@gmail.com</a>
<a href=""mailto:f.ile739.6.2@gmail.com"">f.ile739.6.2@gmail.com</a>
<a href=""mailto:file7396.2@gmail.com"">file7396.2@gmail.com</a>
<a href=""mailto:f.ile7.3962@gmail.com"">f.ile7.3962@gmail.com</a>
<a href=""mailto:f.i.le7.3.962@gmail.com"">f.i.le7.3.962@gmail.com</a>
<a href=""mailto:fil.e.7.39.6.2@gmail.com"">fil.e.7.39.6.2@gmail.com</a>
<a href=""mailto:f.i.le.73.962@gmail.com"">f.i.le.73.962@gmail.com</a>
<a href=""mailto:fi.le.7396.2@gmail.com"">fi.le.7396.2@gmail.com</a>
<a href=""mailto:f.ile73.96.2@gmail.com"">f.ile73.96.2@gmail.com</a>
<a href=""mailto:fi.l.e7.39.62@gmail.com"">fi.l.e7.39.62@gmail.com</a>
<a href=""mailto:fil.e73.9.6.2@gmail.com"">fil.e73.9.6.2@gmail.com</a>
<a href=""mailto:f.il.e.73.96.2@gmail.com"">f.il.e.73.96.2@gmail.com</a>
<a href=""mailto:f.i.le7.3.9.62@gmail.com"">f.i.le7.3.9.62@gmail.com</a>
<a href=""mailto:f.il.e.739.62@gmail.com"">f.il.e.739.62@gmail.com</a>
<a href=""mailto:f.il.e7396.2@gmail.com"">f.il.e7396.2@gmail.com</a>
<a href=""mailto:f.i.l.e7.39.6.2@gmail.com"">f.i.l.e7.39.6.2@gmail.com</a>
<a href=""mailto:f.i.le.73962@gmail.com"">f.i.le.73962@gmail.com</a>
<a href=""mailto:f.i.le.73.9.62@gmail.com"">f.i.le.73.9.62@gmail.com</a>
<a href=""mailto:f.i.l.e.73.9.6.2@gmail.com"">f.i.l.e.73.9.6.2@gmail.com</a>
<a href=""mailto:fil.e73.9.62@gmail.com"">fil.e73.9.62@gmail.com</a>
<a href=""mailto:fi.l.e7.396.2@gmail.com"">fi.l.e7.396.2@gmail.com</a>
<a href=""mailto:f.i.l.e7.3.9.6.2@gmail.com"">f.i.l.e7.3.9.6.2@gmail.com</a>
<a href=""mailto:f.il.e7.3.9.62@gmail.com"">f.il.e7.3.9.62@gmail.com</a>
<a href=""mailto:fi.l.e739.6.2@gmail.com"">fi.l.e739.6.2@gmail.com</a>
<a href=""mailto:f.i.l.e73.96.2@gmail.com"">f.i.l.e73.96.2@gmail.com</a>
<a href=""mailto:fi.l.e73962@gmail.com"">fi.l.e73962@gmail.com</a>
<a href=""mailto:f.ile.7.39.6.2@gmail.com"">f.ile.7.39.6.2@gmail.com</a>
<a href=""mailto:fi.l.e73.9.6.2@gmail.com"">fi.l.e73.9.6.2@gmail.com</a>
<a href=""mailto:f.il.e.73.9.62@gmail.com"">f.il.e.73.9.62@gmail.com</a>
<a href=""mailto:fil.e7.39.62@gmail.com"">fil.e7.39.62@gmail.com</a>
<a href=""mailto:f.i.le7396.2@gmail.com"">f.i.le7396.2@gmail.com</a>
<a href=""mailto:f.i.l.e739.6.2@gmail.com"">f.i.l.e739.6.2@gmail.com</a>
<a href=""mailto:fi.l.e73.9.62@gmail.com"">fi.l.e73.9.62@gmail.com</a>
<a href=""mailto:file.739.62@gmail.com"">file.739.62@gmail.com</a>
<a href=""mailto:file73.9.6.2@gmail.com"">file73.9.6.2@gmail.com</a>
<a href=""mailto:f.i.l.e.73.962@gmail.com"">f.i.l.e.73.962@gmail.com</a>
<a href=""mailto:f.il.e.7.39.6.2@gmail.com"">f.il.e.7.39.6.2@gmail.com</a>
<a href=""mailto:fi.l.e7.39.6.2@gmail.com"">fi.l.e7.39.6.2@gmail.com</a>
<a href=""mailto:f.i.le7.39.6.2@gmail.com"">f.i.le7.39.6.2@gmail.com</a>
<a href=""mailto:file.73.9.6.2@gmail.com"">file.73.9.6.2@gmail.com</a>
<a href=""mailto:f.i.le.7396.2@gmail.com"">f.i.le.7396.2@gmail.com</a>
<a href=""mailto:fi.l.e.73.9.6.2@gmail.com"">fi.l.e.73.9.6.2@gmail.com</a>
<a href=""mailto:f.il.e73.9.62@gmail.com"">f.il.e73.9.62@gmail.com</a>
<a href=""mailto:f.i.le73.96.2@gmail.com"">f.i.le73.96.2@gmail.com</a>
<a href=""mailto:fi.le73.9.6.2@gmail.com"">fi.le73.9.6.2@gmail.com</a>
<a href=""mailto:fi.l.e739.62@gmail.com"">fi.l.e739.62@gmail.com</a>
<a href=""mailto:fi.l.e.7.39.62@gmail.com"">fi.l.e.7.39.62@gmail.com</a>
<a href=""mailto:f.i.le73.962@gmail.com"">f.i.le73.962@gmail.com</a>
<a href=""mailto:file.7.3962@gmail.com"">file.7.3962@gmail.com</a>
<a href=""mailto:fil.e.73.962@gmail.com"">fil.e.73.962@gmail.com</a>
<a href=""mailto:file.7.396.2@gmail.com"">file.7.396.2@gmail.com</a>
<a href=""mailto:f.ile7.39.6.2@gmail.com"">f.ile7.39.6.2@gmail.com</a>
<a href=""mailto:f.i.l.e.7.3.9.6.2@gmail.com"">f.i.l.e.7.3.9.6.2@gmail.com</a>
<a href=""mailto:file73.9.62@gmail.com"">file73.9.62@gmail.com</a>
<a href=""mailto:f.il.e.7.3.96.2@gmail.com"">f.il.e.7.3.96.2@gmail.com</a>
<a href=""mailto:fil.e.7.3962@gmail.com"">fil.e.7.3962@gmail.com</a>
<a href=""mailto:f.i.le.7.396.2@gmail.com"">f.i.le.7.396.2@gmail.com</a>
<a href=""mailto:f.il.e73962@gmail.com"">f.il.e73962@gmail.com</a>
<a href=""mailto:f.ile.7.3.9.62@gmail.com"">f.ile.7.3.9.62@gmail.com</a>
<a href=""mailto:f.i.l.e.739.62@gmail.com"">f.i.l.e.739.62@gmail.com</a>
<a href=""mailto:file7.3962@gmail.com"">file7.3962@gmail.com</a>
<a href=""mailto:fil.e7.396.2@gmail.com"">fil.e7.396.2@gmail.com</a>
<a href=""mailto:f.ile7396.2@gmail.com"">f.ile7396.2@gmail.com</a>
<a href=""mailto:f.il.e7.3962@gmail.com"">f.il.e7.3962@gmail.com</a>
<a href=""mailto:f.i.l.e.73.9.62@gmail.com"">f.i.l.e.73.9.62@gmail.com</a>
<a href=""mailto:f.i.l.e73.9.62@gmail.com"">f.i.l.e73.9.62@gmail.com</a>
<a href=""mailto:f.ile.7.3.962@gmail.com"">f.ile.7.3.962@gmail.com</a>
<a href=""mailto:file73962@gmail.com"">file73962@gmail.com</a>
<a href=""mailto:f.i.l.e7.396.2@gmail.com"">f.i.l.e7.396.2@gmail.com</a>
<a href=""mailto:fil.e.7.3.96.2@gmail.com"">fil.e.7.3.96.2@gmail.com</a>
<a href=""mailto:fi.le.7.3.9.6.2@gmail.com"">fi.le.7.3.9.6.2@gmail.com</a>
<a href=""mailto:f.ile.7.3962@gmail.com"">f.ile.7.3962@gmail.com</a>
<a href=""mailto:f.i.l.e.7.3.9.62@gmail.com"">f.i.l.e.7.3.9.62@gmail.com</a>
<a href=""mailto:fil.e739.62@gmail.com"">fil.e739.62@gmail.com</a>
<a href=""mailto:f.ile.7.3.96.2@gmail.com"">f.ile.7.3.96.2@gmail.com</a>
<a href=""mailto:f.il.e.7.3.9.6.2@gmail.com"">f.il.e.7.3.9.6.2@gmail.com</a>
<a href=""mailto:f.ile73.962@gmail.com"">f.ile73.962@gmail.com</a>
<a href=""mailto:fi.l.e.73.96.2@gmail.com"">fi.l.e.73.96.2@gmail.com</a>
<a href=""mailto:fil.e7.3.962@gmail.com"">fil.e7.3.962@gmail.com</a>
<a href=""mailto:fi.le73.962@gmail.com"">fi.le73.962@gmail.com</a>
<a href=""mailto:f.i.le.7.39.62@gmail.com"">f.i.le.7.39.62@gmail.com</a>
<a href=""mailto:f.i.le.7.39.6.2@gmail.com"">f.i.le.7.39.6.2@gmail.com</a>
<a href=""mailto:f.ile73.9.6.2@gmail.com"">f.ile73.9.6.2@gmail.com</a>
<a href=""mailto:fi.le.73.96.2@gmail.com"">fi.le.73.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e7.3.96.2@gmail.com"">f.i.l.e7.3.96.2@gmail.com</a>
<a href=""mailto:fi.l.e.739.62@gmail.com"">fi.l.e.739.62@gmail.com</a>
<a href=""mailto:fi.le7.3.962@gmail.com"">fi.le7.3.962@gmail.com</a>
<a href=""mailto:fi.le73.9.62@gmail.com"">fi.le73.9.62@gmail.com</a>
<a href=""mailto:f.ile.739.62@gmail.com"">f.ile.739.62@gmail.com</a>
<a href=""mailto:fi.l.e.73.9.62@gmail.com"">fi.l.e.73.9.62@gmail.com</a>
<a href=""mailto:file73.96.2@gmail.com"">file73.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e.73962@gmail.com"">f.i.l.e.73962@gmail.com</a>
<a href=""mailto:f.i.l.e.7.3962@gmail.com"">f.i.l.e.7.3962@gmail.com</a>
<a href=""mailto:f.i.l.e7.39.62@gmail.com"">f.i.l.e7.39.62@gmail.com</a>
<a href=""mailto:fi.le7.39.62@gmail.com"">fi.le7.39.62@gmail.com</a>
<a href=""mailto:fi.l.e.7.3.96.2@gmail.com"">fi.l.e.7.3.96.2@gmail.com</a>
<a href=""mailto:f.i.l.e.7.396.2@gmail.com"">f.i.l.e.7.396.2@gmail.com</a>
<a href=""mailto:f.ile7.39.62@gmail.com"">f.ile7.39.62@gmail.com</a>
<a href=""mailto:fi.le739.62@gmail.com"">fi.le739.62@gmail.com</a>
<a href=""mailto:file.739.6.2@gmail.com"">file.739.6.2@gmail.com</a>
<a href=""mailto:fi.le739.6.2@gmail.com"">fi.le739.6.2@gmail.com</a>
<a href=""mailto:fi.l.e73.962@gmail.com"">fi.l.e73.962@gmail.com</a>
<a href=""mailto:fi.le7.3.96.2@gmail.com"">fi.le7.3.96.2@gmail.com</a>
<a href=""mailto:fil.e7.3.9.62@gmail.com"">fil.e7.3.9.62@gmail.com</a>
<a href=""mailto:file7.39.6.2@gmail.com"">file7.39.6.2@gmail.com</a>
<a href=""mailto:fil.e.7.3.9.6.2@gmail.com"">fil.e.7.3.9.6.2@gmail.com</a>
<a href=""mailto:file73.962@gmail.com"">file73.962@gmail.com</a>
<a href=""mailto:f.ile.73962@gmail.com"">f.ile.73962@gmail.com</a>
<a href=""mailto:fi.l.e7396.2@gmail.com"">fi.l.e7396.2@gmail.com</a>
<a href=""mailto:f.il.e.7396.2@gmail.com"">f.il.e.7396.2@gmail.com</a>
<a href=""mailto:file7.3.962@gmail.com"">file7.3.962@gmail.com</a>
<a href=""mailto:f.i.le7.3962@gmail.com"">f.i.le7.3962@gmail.com</a>
<a href=""mailto:fi.le.7.39.62@gmail.com"">fi.le.7.39.62@gmail.com</a>
<a href=""mailto:f.il.e.739.6.2@gmail.com"">f.il.e.739.6.2@gmail.com</a>
<a href=""mailto:fi.l.e.7.39.6.2@gmail.com"">fi.l.e.7.39.6.2@gmail.com</a>
<a href=""mailto:fil.e.7.3.962@gmail.com"">fil.e.7.3.962@gmail.com</a>
<a href=""mailto:file7.3.96.2@gmail.com"">file7.3.96.2@gmail.com</a>
<a href=""mailto:file.7.3.962@gmail.com"">file.7.3.962@gmail.com</a>
<a href=""mailto:file.73.9.62@gmail.com"">file.73.9.62@gmail.com</a>
<a href=""mailto:fil.e73.962@gmail.com"">fil.e73.962@gmail.com</a>
<a href=""mailto:f.i.le.73.96.2@gmail.com"">f.i.le.73.96.2@gmail.com</a>
<a href=""mailto:fi.le7.39.6.2@gmail.com"">fi.le7.39.6.2@gmail.com</a>
<a href=""mailto:fi.l.e.7.396.2@gmail.com"">fi.l.e.7.396.2@gmail.com</a>
<a href=""mailto:f.ile7.3.962@gmail.com"">f.ile7.3.962@gmail.com</a>
<a href=""mailto:f.i.le7.3.9.6.2@gmail.com"">f.i.le7.3.9.6.2@gmail.com</a>
<a href=""mailto:fi.le7.3.9.62@gmail.com"">fi.le7.3.9.62@gmail.com</a>
<a href=""mailto:f.i.le.739.62@gmail.com"">f.i.le.739.62@gmail.com</a>
<a href=""mailto:fi.le7.3962@gmail.com"">fi.le7.3962@gmail.com</a>
<a href=""mailto:fil.e7.3962@gmail.com"">fil.e7.3962@gmail.com</a>
<a href=""mailto:fil.e.7.39.62@gmail.com"">fil.e.7.39.62@gmail.com</a>
<a href=""mailto:f.il.e7.39.6.2@gmail.com"">f.il.e7.39.6.2@gmail.com</a>
<a href=""mailto:f.i.le739.62@gmail.com"">f.i.le739.62@gmail.com</a>"
G6uMnaPa,Lesinfos.ma - Scam - Spammeur,bombaires,HTML,Wednesday 17th of January 2024 01:54:16 PM CDT,"<div class=""mas"">lesinfos.ma</div>
<div class=""name""><strong>Real name - Vrai nom:</strong> Abir Aourarh</div>
<div class=""address""><strong>Physical address:</strong> 2ème Etage, Résidence Fadila - 17 Rue Saria Ibnou Zounaim - Casablanca 20250</div>
<div class=""phone""><strong>Phone:</strong> <a href=""tel:+212662720901"">+212 (0)6 62 72 09 01</a> (mobile)</div>
<br><a class=""email"" href=""mailto:contact@lesinfos.ma"">contact@lesinfos.ma</a>
<br><a class=""email"" href=""mailto:pub@lesinfos.ma"">pub@lesinfos.ma</a>
<br><a class=""email"" href=""mailto:nl@lesinfos.ma"">nl@lesinfos.ma</a>"
NJSs9tPZ,Simple placement,Script666,JavaScript,Wednesday 17th of January 2024 01:51:42 PM CDT,"// ==UserScript==
// @name           simple placement
// @author         ne#3214
// @version        -
// @description    hello world
// @match          *://sploop.io/*
// @grant          none
// @require        http://code.jquery.com/jquery-3.3.1.min.js
// @require        https://code.jquery.com/ui/1.12.0/jquery-ui.min.js
// @run-at         document-start
// @namespace      -
// ==/UserScript==

var keys = {};
var weaponKey = ""1""

class send {
            static newKeyEvent(type) {
            return function (eventObj) {
                const { key, code } = eventObj;
                window.KeyboardEvent = Object;
                window.getEvents(type)[type == ""keydown"" ? 1 : 0].listener({key: key, code: code, isTrusted: 1, target: document.body, preventDefault: () => null});
                window.KeyboardEvent = KeyBoardEvent;
            };
        }
        static key = {
            down: this.newKeyEvent(""keydown""),
            up: this.newKeyEvent(""keyup""),
            press(eventObj) {
                send.newKeyEvent(""keydown"")(eventObj);
                send.newKeyEvent(""keyup"")(eventObj);
            }
        };
}
window.addEventListener(""load"", ()=> (Object.keys(window.getEvents()).length === 0) && (window.onbeforeunload && (window.onbeforeunload = null), window.location.reload()));
let placementkeys = {
            spike: false,
            trap: false
        };
        setInterval(() => {
        if(placementkeys.spike) {
            send.key.press({code: ""KeyR""});
            send.key.press({code: ""Space""});
            send.key.press({key: weaponKey});
        }
        if(placementkeys.trap) {
            send.key.press({code: ""KeyF""});
            send.key.press({code: ""Space""});
            send.key.press({key: weaponKey});
        }
        }, 20);
        window.addEventListener(""keydown"", function(e) {
            if(e.code == ""KeyV"") {
                placementkeys.spike = true;
            }
            if(e.code == ""KeyF"") {
                placementkeys.trap = true;
            }
            if(e.key == ""1""){
             weaponKey = ""1""
            }
            if(e.key == ""2""){
             weaponKey = ""2""
            }
        })
document.addEventListener(""keyup"", (e) => {
            if(e.code == ""KeyV"") {
                placementkeys.spike = false;
            }
            if(e.code == ""KeyF"") {
                placementkeys.trap = false;
            }
        });

(function hookEvents() {
        _setTimeout = setTimeout; console._log = console.log; KeyBoardEvent = KeyboardEvent;
        EventTarget.prototype._addEventListener = EventTarget.prototype.addEventListener;
        EventTarget.prototype.addEventListener = function(event, handler, c) {
            if (c==undefined) c=false;
            this._addEventListener(event,handler,c);
            if (!this.eventListenerList) this.eventListenerList = {};
            if (!this.eventListenerList[event]) this.eventListenerList[event] = [];
            this.eventListenerList[event].push({listener:handler,options:c});
        };
        EventTarget.prototype.getEvents = function(event) {
            if (!this.eventListenerList) this.eventListenerList = {};
            if (event==undefined) return this.eventListenerList;
            return this.eventListenerList[event];
        };

        let array = [HTMLElement.prototype, window, document];
        for(let obj of array) {
            for(let prop in obj) {
                if(!prop.startsWith(""on"")) continue;
                Object.defineProperty(obj, prop, {
                    get() {
                        return this[""_"" + prop];
                    },
                    set(value) {
                        this[""_"" + prop] = value;
                        if(prop == ""onbeforeunload"") return value;
                        this.addEventListener(prop.split(""on"")[1], value);
                    }
                });
            }
        }
    })();"
U0VJdnHJ,best bot #1 snowybot,coinwalk,JavaScript,Wednesday 17th of January 2024 01:49:45 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 5.9;
var downer = 1.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*200))<=botplus)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
}
if (((botplus*100)>=oldestbal)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(oldestbal*24000)) {
console.log(""winner winner chicken dinner"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
