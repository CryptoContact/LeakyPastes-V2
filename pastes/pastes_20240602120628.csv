id,title,username,language,date,content
GWYvD2Hv,mart's player.lua patch 1,RedProGaming,Lua,Sunday 2nd of June 2024 06:59:53 AM CDT,"local link_pref = ""https://drive.google.com/uc?export=download&id=""
local root_dir_link = ""1YZL3NGT4lYIpOEqrCGLNhNb7LaP47NJJ""
local curr_path = {}
local directory = {}

local type_cols = {
    [""dir""] = colors.lightBlue,
    [""pwm""] = colors.lime,
}
local sys_cols = {
    default = colors.white,
    path = colors.blue,
    err = colors.red
}

local err

----------------

local function getDirInfo(link)
    handle, err = http.get(link_pref .. link)
    if handle == nil then error(err, 0) end
    
    local dir_table = {}
    local line = handle.readLine()
    while line ~= nil do
        local f = line:gmatch(""%S+"")
        local type = f()
        if type == ""$"" then
            dir_table.parent = f()
        else
            local entry = {}
            entry.type = type
            entry.name = f()
            entry.link = f()
            table.insert(dir_table, entry)
        end
        line = handle.readLine()
    end
    return dir_table
end

local function getPath()
    local path = ""/""
    for i=1, #curr_path do
        path = path .. curr_path[i] .. ""/""
    end
    return path
end

----------------

local function getSpeaker()
    local speakers = { peripheral.find(""speaker"") }
    if #speakers == 0 then err = ""No speaker connected!"" end
    return speakers[1]
end

local function playAudio(link)
    link = link_pref .. link
    local handle, err = http.get({url=link, binary=true})
    if handle == nil then error(err, 0) end
    
    local decoder = require(""cc.audio.dfpwm"").make_decoder()
    while true do
        local bytes = handle.read(16384)
        if bytes == nil then break end
        
        local data = decoder(bytes)
        while not getSpeaker().playAudio(data) do
            os.pullEvent(""speaker_audio_empty"")
        end

        os.queueEvent(""audio_played"")
        os.pullEvent(""audio_played"")
    end
end

----------------

local function ccall(func, text, color)
    if color ~= nil then term.setTextColor(color) end
    func(text)
    term.setTextColor(sys_cols.default)
end

local function printDir()
    local path = getPath()
    ccall(print, path, sys_cols.path)
    
    if directory.parent ~= nil then
        ccall(write, ""| "", sys_cols.path)
        ccall(print, "".."", type_cols.dir)
    end
    for i=1, #directory do
        local color = type_cols[directory[i].type]
        ccall(write, ""| "", sys_cols.path)
        ccall(print, directory[i].name, color)
    end 
end

local function putUI()
    term.clear()
    term.setCursorPos(0,0)
    ccall(print, getPath(), sys_cols.path)
    printDir()
    if err ~= nil then
        ccall(print, err, sys_cols.err)
        err = nil
    end
    write(""> "")
end

local function searchNames(key)
    local matches = {}
    for i=1, #directory do
        local curr = directory[i].name
        curr = string.sub(curr, 1, #key)
        if curr == key then table.insert(matches, i) end
    end
    return matches
end

local function getUserInput()
    local input = read()
    if input == ""."" or input == "".."" then
        return false, input
    end
    
    local matches = searchNames(input)
    if #matches == 0 then
        err = ""No matches found!"" 
        return false, nil
    elseif #matches > 1 then
        err = ""Querry too broad!""
        return false, nil
    end
    return true, directory[matches[1]]
end

local function openFile(data)
    if data.type == ""pwm"" then
        print(""Playing \"""" .. data.name .. ""\"""")
        playAudio(data.link)
    else
        err = ""Unknown file type \"""" .. data.type .. ""\""""
    end
end

----------------

directory = getDirInfo(root_dir_link)
while true do
    putUI()
    local flag, data = getUserInput()
    if flag == false then
        if data == ""."" then return end
        if data == "".."" then
            if directory.parent == nil then
                err = ""Already at root directory""
            else
                directory = getDirInfo(directory.parent)
                table.remove(curr_path)
            end
        end
    else
        if data.type == ""dir"" then
            table.insert(curr_path, data.name)
            directory = getDirInfo(data.link)
        else openFile(data) end
    end
end"
pC1Z00q6,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,vivek599,JavaScript,Sunday 2nd of June 2024 06:44:41 AM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
WRYMYwjq,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,ColtM4A2,JavaScript,Sunday 2nd of June 2024 06:19:38 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
eiLQwVns,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX üéÅ,ssss50w,GetText,Sunday 2nd of June 2024 06:18:58 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
02 June 2024"
p4mdzDQt,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Sunday 2nd of June 2024 06:07:04 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_595153.pdf

Working as of:
02 June 2024"
7TgmGbJB,data945,TestGuy1,JSON,Sunday 2nd of June 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8f2fa61f8f3497b1dae5aade86c6e8a007dbb753ae0bd463fe29dd59389e9a53456989247c000e84c528efd62ff4d3f440dac00eed09290e7f0d1dd8d01bdaf336cef956e6d39af1b1ef56df1634a8a6d41ad0a8164d4d302e2a04fc4022dd487f5fd928b7b4f245c14150030ac1940be3c3ef37594ba65595ef839e28cfc336',
  otherdata: [
    'f5cef284949b8c180b43c4aca2589dfe',
    '701edcb2b3105d4b6e5caf7ebb197d24',
    'c831476988d3b6f3643f883e830b1a64',
    '736f452b3f101977c07bc235da307413',
    '31a4d52060c71263589745a5c2ff3dfb',
    '1ed96ebe553f578ef32ef11d0ec3dea6',
    '7caf610f38d8b88421eaae98032418dc',
    '6795a5e0696b13200be4cce933984c7e'
  ]
}"
8pBXb4ta,–ª–∞–±–∞ –≥—Ä–∞—Ñ—ã,hpnq,C++,Sunday 2nd of June 2024 05:58:44 AM CDT,"#include ""bits/stdc++.h""

using namespace std;

const int MAXN = 50;
const double INF = 1e9;

int adj[MAXN][MAXN];

struct State {
    int pos[3];
    double time;
    State(int p1, int p2, int p3, double t) {
        pos[0] = p1;
        pos[1] = p2;
        pos[2] = p3;
        time = t;
    }
};

bool bfs(int n, int m, int startPos[], int speeds[]) {
    queue<State> q;
    q.push(State(startPos[0], startPos[1], (m == 3 ? startPos[2] : 0), 0));

    bool visited[MAXN][MAXN][MAXN] = {false};
    visited[startPos[0]][startPos[1]][(m == 3 ? startPos[2] : 0)] = true;

    while (!q.empty()) {
        State curr = q.front();
        q.pop();

        int pos[] = { curr.pos[0], curr.pos[1], curr.pos[2] };
        double t = curr.time;

        // Check for meeting at a node
        if (m == 2 && pos[0] == pos[1]) {
            cout << ""Minimum meeting time: "" << t << ""\n"";
            return true;
        }
        if (m == 3 && pos[0] == pos[1] && pos[1] == pos[2]) {
            cout << ""Minimum meeting time: "" << t << ""\n"";
            return true;
        }

        // Move to the next positions
        for (int i = 0; i < n; ++i) {
            if (adj[pos[0]][i]) {
                for (int j = 0; j < n; ++j) {
                    if (adj[pos[1]][j]) {
                        if (m == 3) {
                            for (int k = 0; k < n; ++k) {
                                if (adj[pos[2]][k]) {
                                    double nextTime = t + 1;
                                    if (!visited[i][j][k]) {
                                        visited[i][j][k] = true;
                                        q.push(State(i, j, k, nextTime));
                                    }
                                }
                            }
                        } else {
                            double nextTime = t + 1;
                            if (!visited[i][j][0]) {
                                visited[i][j][0] = true;
                                q.push(State(i, j, 0, nextTime));
                            }
                        }
                    }
                }
            }
        }

        // Check for meeting on the road
        if (m == 2) {
            if (adj[pos[0]][pos[1]]) {
                double travelTime = 1.0 / max(speeds[0], speeds[1]);
                double meetTime = t + travelTime;
                if (fabs(meetTime * speeds[0] - round(meetTime * speeds[0])) < 1e-9 &&
                    fabs(meetTime * speeds[1] - round(meetTime * speeds[1])) < 1e-9) {
                    cout << ""Minimum meeting time: "" << meetTime << ""\n"";
                    return true;
                }
            }
        } else if (m == 3) {
            for (int i = 0; i < 3; ++i) {
                int next1 = (i + 1) % 3;
                int next2 = (i + 2) % 3;
                if (adj[pos[i]][pos[next1]] && adj[pos[next1]][pos[next2]]) {
                    double travelTime = 1.0 / max({speeds[i], speeds[next1], speeds[next2]});
                    double meetTime = t + travelTime;
                    if (fabs(meetTime * speeds[i] - round(meetTime * speeds[i])) < 1e-9 &&
                        fabs(meetTime * speeds[next1] - round(meetTime * speeds[next1])) < 1e-9 &&
                        fabs(meetTime * speeds[next2] - round(meetTime * speeds[next2])) < 1e-9) {
                        cout << ""Minimum meeting time: "" << meetTime << ""\n"";
                        return true;
                    }
                }
            }
        }
    }

    return false; // No meeting point found
}

int main() {
    freopen(""text.txt"", ""r"", stdin);
    int n, m, k;
    cout << ""Enter number of points (N): "";
    cin >> n;
    cout << ""Enter number of robots (M): "";
    cin >> m;
    cout << ""Enter number of roads (K): "";
    cin >> k;

    cout << ""Enter roads in the format 'i j length':\n"";
    memset(adj, 0, sizeof(adj));
    for (int i = 0; i < k; ++i) {
        int from, to, length;
        cin >> from >> to >> length;
        adj[from][to] = length;
        adj[to][from] = length;
    }

    int startPos[m];
    int speeds[m];
    cout << ""Enter starting positions of robots:\n"";
    for (int i = 0; i < m; ++i) {
        cin >> startPos[i];
    }
    cout << ""Enter speeds of robots:\n"";
    for (int i = 0; i < m; ++i) {
        cin >> speeds[i];
    }

    if (!bfs(n, m, startPos, speeds)) {
        cout << ""Meeting is impossible\n"";
    }

    return 0;
}
"
yWPCEyF5,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Skarface-MKL,JavaScript,Sunday 2nd of June 2024 05:54:35 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2 2024"
NH6r1PWb,SMS Botter,Nil000,Email,Sunday 2nd of June 2024 05:36:20 AM CDT,https://github.com/TotalNil/SMS-via-Textbelt
TZScQdH3,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,thepplayz,JavaScript,Sunday 2nd of June 2024 05:29:33 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
2nd of June 2024"
uWVYHvGk,Create Amenities,athaena,Python,Sunday 2nd of June 2024 05:26:43 AM CDT,"#!/usr/bin/python3
"""""" Test link Many-To-Many Place <> Amenity
""""""
from models import *
from models import state

State = state.State
City = city.City
User = user.User
Place = place.Place
Amenity = amenity.Amenity

# creation of a State
# state = State(name=""California"")
# state.save()

# # creation of a City
# city = City(state_id=state.id, name=""San Francisco"")
# city.save()

# # creation of a User
# user = User(email=""john@snow.com"", password=""johnpwd"")
# user.save()

# # creation of 2 Places
# place_1 = Place(user_id=user.id, city_id=city.id, name=""House 1"")
# place_1.save()
# place_2 = Place(user_id=user.id, city_id=city.id, name=""House 2"")
# place_2.save()

# creation of 3 various Amenity
amenity_1 = Amenity(name=""Wifi"")
amenity_1.save()
amenity_2 = Amenity(name=""Cable"")
amenity_2.save()
amenity_3 = Amenity(name=""Oven"")
amenity_3.save()
amenity_3 = Amenity(name=""Washing machine"")
amenity_3.save()
amenity_3 = Amenity(name=""Dryer"")
amenity_3.save()
amenity_3 = Amenity(name=""Swimming pool"")
amenity_3.save()
amenity_3 = Amenity(name=""Smart Locks"")
amenity_3.save()

# # # link place_1 with 2 amenities
# # place_1.amenities.append(amenity_1)
# # place_1.amenities.append(amenity_2)

# # # link place_2 with 3 amenities
# # place_2.amenities.append(amenity_1)
# # place_2.amenities.append(amenity_2)
# # place_2.amenities.append(amenity_3)

storage.save()

print(""OK"")
"
v6uaS6iP,light.fish,mb6ockatf,Bash,Sunday 2nd of June 2024 05:06:07 AM CDT,"function light
	set -l file ""/sys/class/backlight/intel_backlight/brightness""
	test ! -f $file && \
		echo ""intel_backlight settings are not available"" && return 2
	set -l current $(cat ""$file"")
	set -l new ""$current""
	if test $argv[1] = ""-dec""
		set -l new $(math $current - $argv[2])
	else if test $argv[1] = ""-inc""
		set -l new $(math $current + $argv[2])
	else if test $argv[1] = ""night""
		set -l new 1
	end
	test $new -ge 0 || exit
	echo ""$new"" | sudo tee $file > /dev/null
	cat $file
end"
G1Bbaaci,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,sirmikey,JavaScript,Sunday 2nd of June 2024 05:04:31 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
CYmtAqNm,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,dustinction,JavaScript,Sunday 2nd of June 2024 04:39:27 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
HRN6cdnf,–î–ó: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –ø–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏—Ö –ø–æ–µ–∑–¥–æ–≤,TeT91,C#,Sunday 2nd of June 2024 04:17:23 AM CDT,"using System;
using System.Collections.Generic;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dispatcher dispatcher = new Dispatcher();

            dispatcher.Work();
        }
    }

    class Dispatcher
    {
        private List<Train> _trains = new List<Train>();
        private List<Direction> _directions = new List<Direction>();

        public void Work()
        {
            const string CommandCreateTrain = ""1"";
            const string CommandExit = ""exit"";

            bool isRunning = true;

            while (isRunning)
            {
                ShowTrainsInfo();

                Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:"");

                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandCreateTrain:
                        FormTrain();
                        break;

                    case CommandExit:
                        isRunning = false;
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        private void AddTrain()
        {
            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ç–æ—á–∫—É"");
            string startPoint = Console.ReadLine();

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É"");
            string endPoint = Console.ReadLine();

            _trains.Add(new Train(CreateDirection(startPoint, endPoint)));
        }

        private Direction CreateDirection(string startPoint, string endPoint)
        {
            Direction direction = new Direction(startPoint, endPoint, SellTickets());

            _directions.Add(direction);

            return new Direction(startPoint, endPoint, SellTickets());
        }

        private void ShowTrainsInfo()
        {
            if (_trains.Count > 0)
            {
                foreach (Train train in _trains)
                {
                    Console.WriteLine($""–ü–û–ï–ó–î, –ö–æ–ª-–≤–æ –≤–∞–≥–æ–Ω–æ–≤ {train.CarriagesCount}, –ö–æ–ª-–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ {train.Passengers}"");
                }
            }
            else
            {
                Console.WriteLine(""–ï—â–µ –Ω–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–≤"");
            }
        }

        private int SellTickets()
        {
            Random random = new Random();
            int minValue = 40;
            int maxValue = 300;

            int passengers = random.Next(minValue, maxValue);

            return passengers;
        }

        private void AddRequiredCarriages(Train train)
        {
            int passengers = train.Path.Passengers;
            Carriage carriage;

            while (passengers > 0)
            {
                carriage = new Carriage();
                int tempPassengers;

                if (passengers >= carriage.Capacity)
                {
                    tempPassengers = carriage.Capacity;
                }
                else
                {
                    tempPassengers = passengers;
                }

                passengers -= tempPassengers;

                train.AddCarriage(carriage);
                AddPassengersToCarriage(carriage, tempPassengers);
            }
        }

        private void AddPassengersToCarriage(Carriage cariage, int value)
        {
            cariage.AddPassenger(value);
        }

        private void FormTrain()
        {
            AddTrain();
            AddRequiredCarriages(_trains[_trains.Count - 1]);
        }
    }

    class Train
    {
        private List<Carriage> _carriages;

        public Train(Direction direction)
        {
            _carriages = new List<Carriage>();
            Path = direction;
        }

        public Direction Path { get; private set; }

        public int CarriagesCount { get { return _carriages.Count; } }

        public int Passengers { get; set; }

        public void AddCarriage(Carriage carriage)
        {
            _carriages.Add(carriage);
            Passengers = Path.Passengers;
        }
    }

    class Carriage
    {
        public int Capacity { get; private set; } = 50;
        public int Passengers { get; private set; } = 0;

        public void AddPassenger(int value)
        {
            Passengers += value;
        }
    }

    struct Direction
    {
        public string StartPoint { get; private set; }
        public string EndPoint { get; private set; }
        public int Passengers { get; private set; }

        public Direction(string startPoint, string endPoint, int passengers)
        {
            StartPoint = startPoint;
            EndPoint = endPoint;
            Passengers = passengers;
        }
    }
}
"
cCt5JATj,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,sayid83,JavaScript,Sunday 2nd of June 2024 04:14:25 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
j1DWfv7L,T O,_Pandora,CSS,Sunday 2nd of June 2024 04:08:14 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/zj84zsy5bdoet6xypm649/transoverlay.css?rlkey=ssx1xruuozmjszkxp9t10yd43&st=faw5kgmw&dl=0"" />"
GmFtLsHf,T B,_Pandora,CSS,Sunday 2nd of June 2024 04:06:34 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/flx9rc0hgdzo252kn1gb8/transborder.css?rlkey=x14dqvbcath4nnblv77plen4m&st=y2w6aia4&dl=0"" />"
Bi0X2Jgr,T BG,_Pandora,CSS,Sunday 2nd of June 2024 04:05:14 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/zh61wu3tzf0r8a3z4a2bs/transbackground.css?rlkey=rnyb5j7ez2m61pvdldmr4rclr&st=zqffqg0b&dl=0"" />"
vSYvyWJb,Rainbow Overlay,_Pandora,CSS,Sunday 2nd of June 2024 04:03:24 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/vnayc64dr2xaeq5zsb4mv/rainbowoverlay.css?rlkey=xhiwkfzkooz4m127jx8uw6fuw&st=473r8ykl&dl=0"" />"
bHvZEHeM,Runhide.js,jcunews,JavaScript,Sunday 2nd of June 2024 04:03:20 AM CDT,"//Run given command line as hidden. Non-intrusive. No window flashing.
//Note: hidden as a suggestion to the executed application. Applications always have the final decision on how to show their UI.
//This script is only for use with Windows Script Host.
//Usage e.g.:
//  wscript.exe Runhide.js ""d:\my apps\the app.exe"" param1 ""param 2"" etc.
a = [];
e = new Enumerator(WSH.arguments);
while (!e.atEnd()) {
  a.push(/\s/.test(s = e.item(^).replace(/''/g, '""')) ? '""'+s+'""' : s);
  e.moveNext()
}
if (a.length) new ActiveXObject(""wscript.shell"").run(a.join("" ""), 0)
"
BXiPLAUr,Pan Overlay,_Pandora,CSS,Sunday 2nd of June 2024 03:58:33 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/gp3xr7wdtqadz81gh554q/panoverlay.css?rlkey=jhbrdysgcfuwgn7xurlpexn89&st=upifcsiq&dl=0"" />"
mi0Eu8Wu,Pan Border,_Pandora,CSS,Sunday 2nd of June 2024 03:57:06 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/21s6tgwotv64n46ej3mll/panborder.css?rlkey=mf094gxdd0in2ngz2xzvhz44v&st=ml4a1474&dl=0"" />"
B42vaMMR,Pan BG,_Pandora,CSS,Sunday 2nd of June 2024 03:54:01 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/ud7t1jsz9jwvq4in42s52/panbackground.css?rlkey=2sv45w0o58afxfmte95snfmoc&st=v5mwfs36&dl=0"" />"
Rk0nmMKf,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,PetrikDev,JavaScript,Sunday 2nd of June 2024 03:49:22 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
2nd of June 2024"
6ZTfciE7,Bassball,robinmollen,Lua,Sunday 2nd of June 2024 03:30:56 AM CDT,"require(17666185226).RAroblox(""YourNameHere"")"
QEvfTEZb,memory skript (og),rrixh,Lua,Sunday 2nd of June 2024 03:26:50 AM CDT,"--// Services \\--
local Workspace = game:GetService(""Workspace"")
local Players = game:GetService(""Players"")
 
--// Variables \\--
local Player = Players.LocalPlayer
local Tiles = Workspace:WaitForChild(""Map""):WaitForChild(""Game""):WaitForChild(""Tiles"")
local Original = Color3.fromRGB(198, 237, 255)
 
--// Remember Broken Glass \\--
Tiles.DescendantAdded:Connect(function(A_1)
    if A_1.Name == ""GlassShatter"" then
        -- Set Color
        A_1.Parent.Color = Color3.new(67, 84, 147)
        -- Get Lane
        local Lane = A_1.Parent.Parent.Name
        if Lane == ""Right"" then
            Lane = ""Left""
        else
            Lane = ""Right""
        end
        -- Set Sibling Color
        local Number = A_1.Parent.Name:match(""%d+"")
        Tiles[Lane][""Tile"" .. Number].Color = Color3.new(0, 1, 0)
    end
end)
 
--// Remember Stepped Glass \\--
for _, A_1 in next, Tiles:GetDescendants() do
    if A_1:IsA(""TouchTransmitter"") then
        local Part = A_1.Parent
        Part.Touched:Connect(function(A_2)
            -- Check if already broken
            if A_2.Transparency == 1 then
                return
            end
            -- Timer
            local Timer = tick() + 0.5
            repeat
                task.wait()
            until tick() - Timer > 0 or Part.Transparency == 1
            -- Get Lane
            local Lane = A_1.Parent.Parent.Name
            if Lane == ""Right"" then
                Lane = ""Left""
            else
                Lane = ""Right""
            end
            -- Check if broke
            if Part.Transparency == 1 then
                -- Set Glass Color
                Part.Color = Color3.new(1, 0, 0)
                -- Set Sibling Color
                local Number = A_1.Parent.Name:match(""%d+"")
                Tiles[Lane][""Tile"" .. Number].Color = Color3.new(0, 1, 0)
            elseif A_2.Parent.Humanoid.Health == 100 then
                -- Set Glass Color
                Part.Color = Color3.new(0, 1, 0)
                -- Set Sibling Color
                local Number = A_1.Parent.Name:match(""%d+"")
                Tiles[Lane][""Tile"" .. Number].Color = Color3.new(1, 0, 0)
            end
        end)
    end
end
 
--// UI Library \\--
local Library = loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/Just-Egg-Salad/roblox-scripts/main/uwuware'))()
local Window = Library:CreateWindow(""Memory by Ezpi"")
Window:AddButton({
    text = ""Clear Colors"",
    callback = function()
        for _, A_1 in next, Tiles:GetDescendants() do
            if A_1:IsA(""BasePart"") then
                A_1.Color = Original
            end
        end
    end
})
Library:Init()"
uzgMbZy4,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,x3kiN,JavaScript,Sunday 2nd of June 2024 03:24:20 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
H58hh30r,Untitled,Handoyo22,HTML,Sunday 2nd of June 2024 03:02:53 AM CDT,"<div class=""banner"">
        <div class=""container-fluid"">
                    <div class=""card shadow mb-4"">
                        <div class=""card-header py-3"">
                            <h6 class=""m-0 font-weight-bold text-primary"">Leaderboard Table</h6>
                        </div>
                        <div class=""card-body"">
                            <div class=""table-responsive"">
                                <table class=""table table-bordered"" id=""dataTable"" width=""100%"" cellspacing=""0"">
                                    <thead>
                                        <tr>
                                            <th width=""20px"">No</th>
                                            <th>Username</th>
                                            <th width=""100px"">Point</th>
                                            <th width=""100px"">Detail</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <?php $no=1; foreach ($leaderboard as $row): ?>
                                        <tr>
                                            <td><?php echo $no++; ?></td>
                                            <td><?php echo $row['username']; ?></td>
                                            <td><?php echo $row['activity_count']; ?></td>
                                            <!-- <td><?php echo $row->point; ?></td> -->
                                        </tr>
                                        <?php endforeach; ?>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                  </div>
            
</div>"
GsneH9nK,Untitled,Handoyo22,HTML 5,Sunday 2nd of June 2024 02:59:56 AM CDT,"
<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
    <title>Convert | Export html Table to CSV & EXCEL File</title>
    <link rel=""stylesheet"" type=""text/css"" href=""style.css"">
</head>

<body>
    <main class=""table"" id=""customers_table"">
        <section class=""table__header"">
            <h1>Customer's Orders</h1>
            <div class=""input-group"">
                <input type=""search"" placeholder=""Search Data..."">
                <img src=""images/search.png"" alt="""">
            </div>
            <div class=""export__file"">
                <label for=""export-file"" class=""export__file-btn"" title=""Export File""></label>
                <input type=""checkbox"" id=""export-file"">
                <div class=""export__file-options"">
                    <label>Export As &nbsp; &#10140;</label>
                    <label for=""export-file"" id=""toPDF"">PDF <img src=""images/pdf.png"" alt=""""></label>
                    <label for=""export-file"" id=""toJSON"">JSON <img src=""images/json.png"" alt=""""></label>
                    <label for=""export-file"" id=""toCSV"">CSV <img src=""images/csv.png"" alt=""""></label>
                    <label for=""export-file"" id=""toEXCEL"">EXCEL <img src=""images/excel.png"" alt=""""></label>
                </div>
            </div>
        </section>
        <section class=""table__body"">
            <table>
                <thead>
                    <tr>
                        <th> Id <span class=""icon-arrow"">&UpArrow;</span></th>
                        <th> Customer <span class=""icon-arrow"">&UpArrow;</span></th>
                        <th> Location <span class=""icon-arrow"">&UpArrow;</span></th>
                        <th> Order Date <span class=""icon-arrow"">&UpArrow;</span></th>
                        <th> Status <span class=""icon-arrow"">&UpArrow;</span></th>
                        <th> Amount <span class=""icon-arrow"">&UpArrow;</span></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td> 1 </td>
                        <td> <img src=""images/Zinzu Chan Lee.jpg"" alt="""">Zinzu Chan Lee</td>
                        <td> Seoul </td>
                        <td> 17 Dec, 2022 </td>
                        <td>
                            <p class=""status delivered"">Delivered</p>
                        </td>
                        <td> <strong> $128.90 </strong></td>
                    </tr>
                    <tr>
                        <td> 2 </td>
                        <td><img src=""images/Jeet Saru.png"" alt=""""> Jeet Saru </td>
                        <td> Kathmandu </td>
                        <td> 27 Aug, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$5350.50</strong> </td>
                    </tr>
                    <tr>
                        <td> 3</td>
                        <td><img src=""images/Sonal Gharti.jpg"" alt=""""> Sonal Gharti </td>
                        <td> Tokyo </td>
                        <td> 14 Mar, 2023 </td>
                        <td>
                            <p class=""status shipped"">Shipped</p>
                        </td>
                        <td> <strong>$210.40</strong> </td>
                    </tr>
                    <tr>
                        <td> 4</td>
                        <td><img src=""images/Alson GC.jpg"" alt=""""> Alson GC </td>
                        <td> New Delhi </td>
                        <td> 25 May, 2023 </td>
                        <td>
                            <p class=""status delivered"">Delivered</p>
                        </td>
                        <td> <strong>$149.70</strong> </td>
                    </tr>
                    <tr>
                        <td> 5</td>
                        <td><img src=""images/Sarita Limbu.jpg"" alt=""""> Sarita Limbu </td>
                        <td> Paris </td>
                        <td> 23 Apr, 2023 </td>
                        <td>
                            <p class=""status pending"">Pending</p>
                        </td>
                        <td> <strong>$399.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 6</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alex Gonley </td>
                        <td> London </td>
                        <td> 23 Apr, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$399.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 7</td>
                        <td><img src=""images/Alson GC.jpg"" alt=""""> Jeet Saru </td>
                        <td> New York </td>
                        <td> 20 May, 2023 </td>
                        <td>
                            <p class=""status delivered"">Delivered</p>
                        </td>
                        <td> <strong>$399.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 8</td>
                        <td><img src=""images/Sarita Limbu.jpg"" alt=""""> Aayat Ali Khan </td>
                        <td> Islamabad </td>
                        <td> 30 Feb, 2023 </td>
                        <td>
                            <p class=""status pending"">Pending</p>
                        </td>
                        <td> <strong>$149.70</strong> </td>
                    </tr>
                    <tr>
                        <td> 9</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alson GC </td>
                        <td> Dhaka </td>
                        <td> 22 Dec, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$249.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 9</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alson GC </td>
                        <td> Dhaka </td>
                        <td> 22 Dec, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$249.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 9</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alson GC </td>
                        <td> Dhaka </td>
                        <td> 22 Dec, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$249.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 9</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alson GC </td>
                        <td> Dhaka </td>
                        <td> 22 Dec, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$249.99</strong> </td>
                    </tr>
                    <tr>
                        <td> 9</td>
                        <td><img src=""images/Alex Gonley.jpg"" alt=""""> Alson GC </td>
                        <td> Dhaka </td>
                        <td> 22 Dec, 2023 </td>
                        <td>
                            <p class=""status cancelled"">Cancelled</p>
                        </td>
                        <td> <strong>$249.99</strong> </td>
                    </tr>
                </tbody>
            </table>
        </section>
    </main>
    <script src=""script.js""></script>

</body>

</html>"
1T4TPedG,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,FeasModz514,JavaScript,Sunday 2nd of June 2024 02:59:16 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2 2024"
aG2rawZ3,Untitled,Handoyo22,CSS,Sunday 2nd of June 2024 02:59:05 AM CDT,"                    <!-- <div class=""col-12 Dicover_Parent"">
                        <a href=""#AboutMe"">
                            <div class=""Discover"">
                                <i class=""fa fa-angle-double-down text-white"" aria-hidden=""true""></i>
                            </div>
                        </a>
                    </div> -->"
xzmKWSVB,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,lookos13,JavaScript,Sunday 2nd of June 2024 02:34:22 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?408

Working as of:
2nd of June 2024"
2TUcycja,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,kjihu25,JavaScript,Sunday 2nd of June 2024 02:34:11 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2 2024"
6sFhwT2h,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Bufayez,JavaScript,Sunday 2nd of June 2024 02:09:09 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
Vd3xnKrF,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,buch,JavaScript,Sunday 2nd of June 2024 01:44:05 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
2nd of June 2024"
bSFuVVC8,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Alfonso1119,JavaScript,Sunday 2nd of June 2024 01:19:02 AM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
fkmjz4Mn,Nonbinary Overlay,_Pandora,CSS,Sunday 2nd of June 2024 01:15:41 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/b9cupiczl35bc3eithp5u/nonoverlay.css?rlkey=77d3hb3uypiglc6v77tkoakni&st=0s2lji69&dl=0"" />"
hiT7BD3M,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Garoam,JavaScript,Sunday 2nd of June 2024 12:54:00 AM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
zREZwrg4,Untitled,ZilchGnu,Bash,Sunday 2nd of June 2024 12:31:03 AM CDT,"env GST_MPP_VIDEODEC_DEFAULT_ARM_AFBC=1 \
    GST_VIDEO_CONVERT_USE_RGA=1 \
    GST_MPP_DEC_DEFAULT_FAST_MODE=1 \
    GST_DEBUG=3,*mpp*:5 \
gst-launch-1.0 \
    rtmpsrc location=rtmp://127.0.0.1/publish/live ! flvdemux name=demux \
    demux.video ! identity name=v_delay signal-handoffs=TRUE ! h264parse ! mppvideodec ! videorate ! video/x-raw,framerate=60/1,format=NV12 ! textoverlay text='' valignment=top halignment=right font-desc=""Monospace, 5"" name=overlay ! queue ! videomixer name=mix sink_1::xpos=1280 sink_1::ypos=0 ! queue ! mpph265enc zero-copy-pkt=1 qp-max=51 gop=120 name=venc_bps ! h265parse config-interval=-1 ! queue max-size-time=10000000000 max-size-buffers=1000 max-size-bytes=41943040 ! mux. \
    v4l2src device=/dev/usb_capture ! image/jpeg ! identity name=v_delay_usb signal-handoffs=TRUE ! mppjpegdec ! videorate ! video/x-raw,width=640,height=360,framerate=60/1 ! textoverlay text='' valignment=top halignment=right font-desc=""Monospace, 5"" name=overlay_usb ! queue ! mix.sink_1 \
    alsasrc device=hw:CARD=usbaudio ! identity name=a_delay signal-handoffs=TRUE ! volume volume=1.0 ! audioconvert ! voaacenc bitrate=128000 ! aacparse ! queue max-size-time=10000000000 max-size-buffers=1000 ! mux. \
    mpegtsmux name=mux ! appsink name=appsin"
AMGzGJ3u,ipp7_1_count_digrams,Python253,Python,Sunday 2nd of June 2024 12:29:04 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: ipp7_1_count_digrams.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script demonstrates ""Chapter 3: Practice Project #1: Finding Digrams: Count Digrams"" from the book ""Impractical Python Projects"" by Lee Vaughan.   
    - Generate letter pairs in Voldemort & find their frequency in a dictionary.
    - Requires dictionary.txt (English dictionary) file in the current working directory.

Requirements:
    - Python 3.x
    - The following modules:
        - sys
        - collections
    
Functions:
    - main():
        Main function to generate letter pairs from Voldemort and find their frequency in a dictionary.
    
Usage:
    - Run the script directly in a Python 3.x environment:
            
            $ python ipp7_1_count_digrams.py
    
Additional Notes:
    - This script uses a dictionary.txt file containing English words to find the frequency of letter pairs in the name 'Voldemort'.
    - It generates unique letter pairs from the name and then counts their occurrences in the dictionary file.
""""""

import sys
from collections import defaultdict

def load(file):
    """"""
    Open a text file & turn contents into a list of lowercase strings.
    
    Arguments:
        file (str): The name of the text file to open.
        
    Returns:
        list: A list of lowercase strings representing the contents of the file.
    """"""
    try:
        with open(file, encoding='utf-8') as in_file:
            loaded_txt = in_file.read().strip().split('\n')
            loaded_txt = [x.lower() for x in loaded_txt]
            return loaded_txt
    except IOError as e:
        print(""{}\nError opening {}. Terminating program."".format(e, file))
        sys.exit(1)

def main():
    """"""
    Main function to generate letter pairs from Voldemort and find their frequency in a dictionary.
    """"""
    # Load dictionary
    print(""Loading Dictionary...\n"")
    word_list = load('dictionary.txt')

    # Define name and convert to lowercase
    name = 'Voldemort'  # (tmvoordle)
    print(""Name:"", name, ""\n\nGathering Digrams...\n"")
    name = name.lower()

    # Generate unique letter pairs from name
    digrams = {''.join(pair) for pair in zip(name, name[1:])}
    print(*sorted(digrams), sep='\n')
    print(""\nNumber of Digrams = {}\n"".format(len(digrams)))

    # Use regular expressions to find repeating digrams in a word
    mapped: defaultdict[str, int] = defaultdict(int)
    for word in word_list:
        word = word.lower()
        for digram in digrams:
            mapped[digram] += word.count(digram)

    print(""Digram Frequency Count:\n"")
    for k in sorted(mapped):
        print(""{} {}"".format(k, mapped[k]))
    print("""")
    
    print(""_"" * 100)
    print(""\nThis concludes the demonstration of \""Chapter 3: Practice Project #1: Finding Digrams: Count Digrams\""\n\n\t\t\t   Thank you for your attention...   Goodbye!"")
    print(""_"" * 100)
    
if __name__ == '__main__':
    main()
"
YktbPS1z,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,atakan1983,JavaScript,Sunday 2nd of June 2024 12:28:57 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
GZHXzy0a,XtraMath cheat xpeppermintx2000 deobfuscation,BenSyt,JavaScript,Sunday 2nd of June 2024 12:28:18 AM CDT,"//DEOBFUSCATED CODE FROM XPEPPERMINTX2000 (i also added some stuff)
//DEOBFUSCATED MOSTLY BY HAND, SOME ASSISTANCE FROM REGEX AND STUFF
var loaded;
var buttonelem;
var currentAnswer;
function getAns() {
  var op1 = getNonEmpty(document.getElementsByClassName(""operand1""));
  var num1 = parseInt(op1);
  var op2 = getNonEmpty(document.getElementsByClassName(""operand2""));
  var num2 = parseInt(op2);
  var op = getNonEmpty(document.getElementsByClassName(""operator""));
  return solveEquation(num1, num2, op).toString();
}
function solveEquation(iY, iZ, j0) {
  if (j0 === ""+"") {
    return iY + iZ;
  } else if (j0 === ""-"") {
    return iY - iZ;
  } else if (j0 === ""*"" || j0 === ""√ó"") {
    return iY * iZ;
  } else if (j0 === ""/"" || j0 === ""√∑"") {
    return iY / iZ;
  }
}
function getNonEmpty(jO) {
  for (var i = 0; i < jO.length; i++) {
    if (jO[i].innerHTML !== """") {
      return jO[i].innerHTML;
    }
  }
}
function loadCheat() {
  if (loaded) {
    return;
  }
  loaded = true;
  typedIndex = 0;
  currentAnswer = getAns().toString();
  document.querySelectorAll(""div.key"").forEach(elem => {
    elem.setAttribute(""data-value"", currentAnswer.charAt(typedIndex));
  });
  document.querySelectorAll(""div.key"").forEach(elem => {
    elem.addEventListener(""click"", () => {
      currentAnswer = getAns().toString();
      document.querySelectorAll(""div.key"").forEach(elem => {
        elem.setAttribute(""data-value"", currentAnswer.charAt(typedIndex));
      });
      typedIndex++;
      if (typedIndex >= currentAnswer.length) {
        typedIndex = 0;
        currentAnswer = getAns().toString();
      }
    });
  });
  document.getElementById(""1weUFndUhy"").remove();
}
function startCheat() {
  var cheatDiv = document.createElement(""div"");
  cheatDiv.id = ""1weUFndUhy"";
  cheatDiv.style.position = ""fixed"";
  cheatDiv.style.height = ""auto"";
  cheatDiv.style.width = ""280px"";
  cheatDiv.style.marginLeft = ""-140px"";
  cheatDiv.style.top = ""0"";
  cheatDiv.style.left = ""50%"";
  cheatDiv.style.padding = ""5px 10px"";
  cheatDiv.style.zIndex = 2001;
  cheatDiv.style.fontSize = ""12px"";
  cheatDiv.style.color = ""#222"";
  cheatDiv.style.backgroundColor = ""#f99"";
  const inQuiz = (window.location.href.includes(""#/student/quiz""));
  cheatDiv.innerHTML = inQuiz?`<h4>xPepperMintx2000 Xtramath cheat v4.0 loaded!</h4>\n<p>Open the keypad and click the activate button below. Then click on any of the keypad buttons. It will enter the correct answer. Please be slow when clicking on the buttons the cheat takes time to run. Do not click the bookmark again. It will break the cheat.</p>\n<p>If the cheat doesn't work, <a href=""//xtramathcheat.gitlab.io/"" target=""_blank"">click here</a> to check for an update.</p>`:`<h4>You must be in a quiz to use this cheat!</h4>`;
  buttonelem = document.createElement(""button"");
  buttonelem.addEventListener(""click"", () => {
    loadCheat();
  });
  buttonelem.innerHTML = ""Activate!"";
  document.body.appendChild(cheatDiv);
  if(inQuiz){cheatDiv.appendChild(buttonelem);}
}
startCheat();"
MfuWaZJK,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,lookos13,JavaScript,Sunday 2nd of June 2024 12:03:55 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?981

Working as of:
June 2nd 2024"
PBxc3TwH,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,lookos13,JavaScript,Saturday 1st of June 2024 11:46:56 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?355

Working as of:
June 2 2024"
u05mnwrG,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,lookos13,JavaScript,Saturday 1st of June 2024 11:46:14 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?465

Working as of:
June 2nd 2024"
Lb6AG1QW,ipp7_0_voldemort_british,Python253,Python,Saturday 1st of June 2024 11:45:24 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: ipp7_0_voldemort_british.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script demonstrates ""Chapter 3: Practice Project #7: Finding Voldemort: The British Brute-Force"" from the book ""Impractical Python Projects"" by Lee Vaughan.
    - It aims to find possible names that can be formed from the letters in ""tmvoordle"" using various filters such as consonant-vowel patterns, trigrams, and letter pairs.
    - The script downloads a dictionary file containing English words from a URL and saves it alphabetically.
    - It also downloads a trigrams file and saves it for later use.
    
Requirements:
    - Python 3.x
    - The following modules
        - os
        - sys
        - requests
        - itertools (specifically the permutations function)
        - collections (specifically the counter function)

Functions:
    - main():
        - Executes the main functionality of the script.
    - download_dictionary(url, file_name):
        - Download a dictionary file from a URL and save it alphabetically.
    - load_dictionary(file):
        - Open a text file & turn contents into a set of lowercase strings.
    - download_trigrams_file(url, filename):
        - Download a trigrams file from a URL and save it.
    - prep_words(name, word_list_ini):
        - Filter words from the initial word list based on the length.
    - cv_map_words(word_list):
        - Map words from the word list to their consonant-vowel patterns.
    - cv_map_filter(name, filtered_cv_map):
        - Filter words based on consonant-vowel patterns.
    - trigram_filter(filter_1, trigrams_filtered):
        - Filter words based on trigrams.
    - letter_pair_filter(filter_2):
        - Filter words based on letter pairs.
    - view_by_letter(name, filter_3):
        - Display filtered words based on the starting letter provided by the user.
    
Usage:
    - Run the script directly in a Python 3.x environment:
            
            $ python ipp7_0_voldemort_british.py
    
Additional Notes:
    - The script uses various filtering techniques to narrow down the list of possible names that can be formed from the given set of letters.
    - It prompts the user to input a starting letter or press Enter to see all possible names.
""""""

import os
import sys
import requests

from itertools import permutations
from collections import Counter

def download_dictionary(url, file_name):
    """"""
    Download a dictionary file from a URL and save it alphabetically.
    
    Parameters:
        url (str): The URL from which to download the dictionary file.
        file_name (str): The name to save the downloaded file as.
    
    Raises:
        requests.RequestException: If an error occurs during the HTTP request.
    """"""
    print(""\nDownloading dictionary file from:\n"" + ""{}"".format(url))
    try:
        response = requests.get(url)
        response.raise_for_status()  # Check if the request was successful
        
        # Split the content by lines, strip whitespace, and sort alphabetically
        sorted_content = sorted(line.strip() for line in response.text.strip().split('\n'))
        
        # Save the sorted content to the file
        with open(file_name, 'w', encoding = 'UTF-8') as f:
            f.write('\n'.join(sorted_content))
        
    except requests.RequestException as e:
        print(""\nError downloading dictionary from {}: {}"".format(url, e))
        sys.exit(1)
    else:
        print(""\nDictionary file downloaded and saved alphabetically as: '{}'."".format(file_name))

def load_dictionary(file):
    """"""
    Open a text file & turn contents into a set of lowercase strings.
    
    Parameters:
        file (str): The name of the file to open.
    
    Returns:
        set: A set of lowercase strings containing the words from the file.
    """"""
    try:
        with open(file, encoding='utf-8') as in_file:
            loaded_txt = in_file.read().strip().split('\n')
            loaded_txt_set = {x.lower() for x in loaded_txt}  # Ensure loaded_txt is converted to a set
            return loaded_txt_set  # Return the set of lowercase strings
    except IOError as e:
        print(""\n{}\nError opening {}. Terminating program.\n"".format(e, file))
        sys.exit(1)

def download_trigrams_file(url, filename):
    """"""
    Download a trigrams file from a URL and save it.
    
    Parameters:
        url (str): The URL from which to download the trigrams file.
        filename (str): The name to save the downloaded file as.
    """"""
    print(""\nDownloading least-likely_trigrams.txt...\n"")
    response = requests.get(url)
    with open(filename, 'wb') as f:
        f.write(response.content)
    print(""\nDownload completed!\n"")

def main():
    """"""
    Main function to orchestrate the execution of the program.
    """"""
    # Print description of the script
    print(""_"" * 100)
    print(""\n\t  :: Chapter 3: Practice Project #7: Finding Voldemort: The British Brute-Force ::"")
    print(""_"" * 100)
    print(""\n- This script aims to find possible names that can be formed from the letters in 'tmvoordle'.\n""
          ""- It uses various filters such as consonant-vowel patterns, trigrams, and letter pairs.\n""
          ""- It downloads a dictionary file containing English words from a URL and saves it alphabetically.\n""
          ""- It also downloads a trigrams file and saves it for later use.\n"")
    print(""\nLoading dictionary file...\n"")
    name = 'tmvoordle'
    name = name.lower()
    
    # Define the URL and file name for the dictionary
    dictionary_url = ""https://raw.githubusercontent.com/dwyl/english-words/master/words_alpha.txt""
    dictionary_file = ""dictionary.txt""

    # Download and load the dictionary file
    if dictionary_file not in os.listdir():
        print(""\nLoading dictionary file...\n"")
        download_dictionary(dictionary_url, dictionary_file)
    word_list_ini = load_dictionary(dictionary_file)
    
    # Check if least_likely_trigrams.txt is in the cwd
    trigrams_filename = 'least_likely_trigrams.txt'
    if trigrams_filename not in os.listdir():
        trigrams_url = 'https://github.com/rlvaugh/Impractical_Python_Projects/raw/master/Chapter_3/least-likely_trigrams.txt'
        download_trigrams_file(trigrams_url, trigrams_filename)

    trigrams_filtered = load_dictionary(trigrams_filename)

    word_list = prep_words(name, word_list_ini)
    filtered_cv_map = cv_map_words(word_list)
    filter_1 = cv_map_filter(name, filtered_cv_map)
    filter_2 = trigram_filter(filter_1, trigrams_filtered)
    filter_3 = letter_pair_filter(filter_2)
    view_by_letter(name, filter_3)

def prep_words(name, word_list_ini):
    """"""
    Filter words from the initial word list based on the length.
    
    Parameters:
        name (str): The name to filter words for.
        word_list_ini (list): The initial list of words.
    
    Returns:
        list: A filtered list of words based on the length.
    """"""
    print(""- length initial word_list = {}"".format(len(word_list_ini)))
    len_name = len(name)
    word_list = [word.lower() for word in word_list_ini if len(word) == len_name]
    print(""- length of new word_list = {}"".format(len(word_list)))
    return word_list

def cv_map_words(word_list):
    """"""
    Map words from the word list to their consonant-vowel patterns.
    
    Parameters:
        word_list (list): The list of words to map.
    
    Returns:
        set: A set containing the consonant-vowel patterns.
    """"""
    vowels = 'aeiouy'
    cv_mapped_words = []
    for word in word_list:
        temp = ''
        for letter in word:
            if letter in vowels:
                temp += 'v'
            else:
                temp += 'c'
        cv_mapped_words.append(temp)

    total = len(set(cv_mapped_words))
    target = 0.05
    n = int(total * target)
    count_pruned = Counter(cv_mapped_words).most_common(total - n)
    filtered_cv_map = set()
    for pattern, _ in count_pruned:
        filtered_cv_map.add(pattern)
    print(""- length filtered_cv_map = {}"".format(len(filtered_cv_map)))
    return filtered_cv_map

def cv_map_filter(name, filtered_cv_map):
    """"""
    Filter words based on consonant-vowel patterns.
    
    Parameters:
        name (str): The name to filter words for.
        filtered_cv_map (set): The set of filtered consonant-vowel patterns.
    
    Returns:
        set: A set containing the filtered words.
    """"""
    perms = {''.join(i) for i in permutations(name)}
    print(""- length of initial permutations set = {}"".format(len(perms)))
    vowels = 'aeiouy'
    filter_1 = set()
    for candidate in perms:
        temp = ''
        for letter in candidate:
            if letter in vowels:
                temp += 'v'
            else:
                temp += 'c'
        if temp in filtered_cv_map:
            filter_1.add(candidate)
    print(""\n\t# choices after filter_1 = {}"".format(len(filter_1)))
    return filter_1

""""""DEFINING THE 3 FILTERS""""""

def trigram_filter(filter_1, trigrams_filtered):
    """"""
    Filter words based on trigrams.
    
    Parameters:
        filter_1 (set): The set of words after the first filter.
        trigrams_filtered (set): The set of filtered trigrams.
    
    Returns:
        set: A set containing the filtered words.
    """"""
    filtered = set()
    for candidate in filter_1:
        for triplet in trigrams_filtered:
            triplet = triplet.lower()
            if triplet in candidate:
                filtered.add(candidate)
    filter_2 = filter_1 - filtered
    print(""\t# of choices after filter_2 = {}"".format(len(filter_2)))
    return filter_2

def letter_pair_filter(filter_2):
    """"""
    Filter words based on letter pairs.
    
    Parameters:
        filter_2 (set): The set of words after the second filter.
    
    Returns:
        set: A set containing the filtered words.
    """"""
    filtered = set()
    rejects = ['dt', 'lr', 'md', 'ml', 'mr', 'mt', 'mv', 'td', 'tv', 'vd', 'vl', 'vm', 'vr', 'vt']
    first_pair_rejects = ['ld', 'lm', 'lt', 'lv', 'rd', 'rl', 'rm', 'rt', 'rv', 'tl', 'tm']
    for candidate in filter_2:
        for r in rejects:
            if r in candidate:
                filtered.add(candidate)
        for fp in first_pair_rejects:
            if candidate.startswith(fp):
                filtered.add(candidate)
    filter_3 = filter_2 - filtered
    print(""\t# of choices after filter_3 = {}"".format(len(filter_3)))
    if 'voldemort' in filter_3:
        print(""\nVoldemort found!"", file=sys.stderr)
    return filter_3

def view_by_letter(name, filter_3):
    """"""
    Display filtered words based on the starting letter provided by the user.
    
    Parameters:
        name (str): The name to display filtered words for.
        filter_3 (set): The set of filtered words.
    """"""
    print(""\nRemaining letters = {}"".format(name))
    first = input(""\nselect a starting letter or press Enter to see all: "")
    print()
    subset = []
    for candidate in filter_3:
        if candidate.startswith(first):
            subset.append(candidate)
    print(*sorted(subset), sep='\n')
    if first:
        print(""\nNumber of choices starting with [{}] = {}"".format(first, len(subset)))
    else:
        print(""\nNumber of choices starting with [ALL] = {}"".format(len(subset)))
    try_again = input(""\nPress [ENTER] to try again. (or... Press any other key to Exit):"")
    if try_again.lower() == '':
        view_by_letter(name, filter_3)
    else:
        print(""_"" * 100)
        print(""\nThis concludes the demonstration of Chapter 3: Practice Project #7: Finding Voldemort: The British Brute-Force\n\n\t\t\t   Thank you for your attention...   Goodbye!"")
        print(""_"" * 100)
    
if __name__ == '__main__':
    main()

"
NejNGF4R,log_in_place.lua,joey5729,Lua,Saturday 1st of June 2024 11:36:55 PM CDT,"print(""Face toward sapling/tree to start"")
print(""Exports to below inventory"")
print(""Draws saplings from behind inventory"")
while true do
	turtle.select(1)
	if turtle.getItemCount(1) <= 1 then
		turtle.turnLeft()
		turtle.turnLeft()
		turtle.suck(63)
		turtle.turnRight()
		turtle.turnRight()
	end

	if not turtle.compare() then
		turtle.dig()
		sleep(1)
		turtle.place()
	end		

	if turtle.getItemCount(2) then
		turtle.select(2)
		turtle.dropDown()
		turtle.select(1)
	end
end"
TwHDdStf,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,lookos13,JavaScript,Saturday 1st of June 2024 11:29:16 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?016

Working as of:
2nd of June 2024"
wijFHc3e,Algoverse_adesh_8,kucheasysa,Python,Saturday 1st of June 2024 10:52:00 PM CDT,"class Solution:
    def findWords(self, words: list[str]) -> list[str]:
        rows = (set(""qwertyuiop""), set(""asdfghjkl""), set(""zxcvbnm""))
        return [w for w in words if any(set(w.lower()).issubset(row) for row in rows)]"
