id,title,username,language,date,content
xuS5B2zz,# powerful_vars_tracking.py,here2share,Python,Wednesday 6th of September 2023 11:36:27 PM CDT,"# powerful_vars_tracking.py ZZZ still can be much improved I've just realized

import re
import sys
from functools import wraps
import inspect

all_vars = {}
'''
global_vars = globals()
local_vars = locals()
all_vars.update(global_vars)
all_vars.update(local_vars)
'''
for v in variables:
	all_vars[v] = 0
for k, v in all_vars.items():
	if not k.startswith('__'):
		print(k)
				
def track_all_changes(variables_to_track):
	def track_changes(func):
		@wraps(func)
		def wrapper(*args, **kwargs):
			frame = inspect.currentframe()
			locals_at_start = {k: v for k, v in frame.f_back.f_locals.items() if k in variables_to_track}
			globals_at_start = {k: v for k, v in frame.f_back.f_globals.items() if k in variables_to_track}
			result = func(*args, **kwargs)
			locals_at_end = frame.f_back.f_locals
			globals_at_end = frame.f_back.f_globals
			for k, v in locals_at_end.items():
				if not k.startswith('__') and re.sub(r'<[^>]*>', '', str(v)):
					print(f""Local {k}: {v}"")
			for k, v in globals_at_end.items():
				if not k.startswith('__') and re.sub(r'<[^>]*>', '', str(v)):
					print(f""{func.__name__}() Global {k}: {v}"")
			return result
		return wrapper

	module = sys.modules[__name__]
	for name, obj in inspect.getmembers(module):
		if inspect.isfunction(obj):
			setattr(module, name, track_changes(obj))

track_all_changes(variables)"
R01Gr0N9,Hua Cheng,HelenaBatteryCity,HTML,Wednesday 6th of September 2023 11:19:37 PM CDT,"<!-- SI USAS LA TABLA, DEBEN USAR EL MISMO COLOR EN TODO EL TEMA, TODOS LOS PARTICIPANTES, SI ERES EL PRIMERO, ASEGURATE DE DECIRLE A TUS COMPIS -->

<!-- TRAMA -->

<link rel=""stylesheet"" href=""https://dl.dropbox.com/scl/fi/6id81uxcbf935cnunwg0h/huacheng.css?rlkey=lwx941bkfyssq59rsd1flqj2e""> <style>:root{--color:#750809;--colorrgba:rgba(117,8,9,0.7)<!-- LOS COLORES SE CAMBIAN AQUI, ES EL MISMO, SOLO CONVIERTE TU HEXADECIMAL A RGB Y NO CAMBIES EL 0.7 -->}</style><div id = ""huacheng""><div class = ""img"" style = ""background-image:url('AQUI LINK DE LA IMAGEN DE ENCABEZADO')""></div><div class = ""encabezado""><div class = ""avatar"" style = ""background-image:url('AQUI LINK DE LA IMAGEN MINI')""></div><div class = ""text""><div class = ""titulo"">TITULO</div><div class = ""subtitulo"">CITA O SUBTITULO</div></div></div><div class = ""dat"">DATO ♥ DATO ♥ DATO</div><div class = ""txt"">RESUMEN AQUI</div><center><div class = ""pj""><div class = ""avatar personaje"" style = ""background-image:url('AVATAR DEL PERSONAJE 1')""></div><div class = ""nombre"">NOMBRE PERSONAJE 1</div><div class = ""datos"">DATO ♥ DATO</div></div><div class = ""pj""><div class = ""avatar personaje"" style = ""background-image:url('AVATAR PERSONAJE DOS')""></div><div class = ""nombre"">Xie Lian</div><div class = ""datos"">god ♥ user</div></div><!-- INSERTA MAS PERSONAJES ANTES DE ESTE COMENTARIO --></center><div class = ""cred"" style = ""background-image:url('PON AQUI EL MISMO LINK DE LA IMAGEN DEL ENCABEZADO')""><a href = ""https://batterycitycodes.tumblr.com/"">Helena</a></div></div>

<!-- CODIGO PARA AGREGAR MAS PERSONAJES -->

<div class = ""pj""><div class = ""avatar personaje"" style = ""background-image:url('AVATAR DEL PERSONAJE 1')""></div><div class = ""nombre"">NOMBRE PERSONAJE 1</div><div class = ""datos"">DATO ♥ DATO</div></div>

<!-- POST DE ROL -->

<link rel=""stylesheet"" href=""https://dl.dropbox.com/scl/fi/6id81uxcbf935cnunwg0h/huacheng.css?rlkey=lwx941bkfyssq59rsd1flqj2e""> <style>:root{--color:#750809;--colorrgba:rgba(117,8,9,0.7)<!-- LOS COLORES SE CAMBIAN AQUI, ES EL MISMO, SOLO CONVIERTE TU HEXADECIMAL A RGB Y NO CAMBIES EL 0.7 -->}</style><div id = ""huacheng""><div class = ""img"" style = ""background-image:url('LINK IMAGEN DE ENCABEZADO')""></div><div class = ""encabezado""><div class = ""avatar"" style = ""background-image:url('LINK AVATAR')""></div><div class = ""text""><div class = ""titulo"">TITULO</div><div class = ""subtitulo"">SUBTITULO</div></div></div><div class = ""dat"">DATO ♥ DATO ♥ DATO</div><div class = ""txt"">ESCRIBE AQUI TU ROL</div><div class = ""cred"" style = ""background-image:url('https://i.imgur.com/t3yas91.gif')""><a href = ""https://batterycitycodes.tumblr.com/"">Helena</a></div></div>"
TQJyHUK8,Log ISO BJB 07/09/2023 09:07,Abikayusri19,Bash,Wednesday 6th of September 2023 09:18:45 PM CDT,"09:07:38.724 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.CensorCommonsRequestLoggingFilter - REQUEST DATA : POST /trx]
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.BjbTrxServiceImpl - Original bitmap: {32=110, 33=000110, 2=622011020020638074, 3=000000, 35=622011020020638074D2802221, 4=5500, 7=0907020738, 41=70040001, 42=70040001, 43=Menara BCA Lt 39      KABUPATEN TOLIJBID, 12=090738, 13=0907, 14=2802, 49=360, 18=6012, 52=1A4511A158792E93, 22=051, 55=820274009F360201889F2608E73AD5632E1C99259F2701809F34030200009F101C0101A000800000DB3E253600000000000000000000000000000000009F3303E0F8C89F350114950508800480009F37044B7B5E299F02060000005500005A096220110200206380745F3401009F1A0203605F2A0203609A032309079C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000344, 25=00}
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ===========================request begin================================================
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - URI         : http://bjb-hsm/bjb/hsm/pin
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Headers     : [Accept:""application/json, application/*+json"", Content-Type:""application/json"", Content-Length:""88""]
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Request body: {""terminalId"":""70040001"",""pinUnderTpk"":""1A4511A158792E93"",""cardNo"":""622011020020638074""}
09:07:38.725 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ==========================request end================================================
09:07:38.746 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - ============================response begin==========================================
09:07:38.746 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Status code  : 200 OK
09:07:38.746 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Status text  : 
09:07:38.747 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - Response body: {""pinBlock"":""EA4D68596769A339""}
09:07:38.747 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.c.BjbHtcHsmConfig - =======================response end=================================================
09:07:38.749 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.e.b.p.s.BjbTrxServiceImpl - Updated bitmap: {32=110, 33=000110, 2=622011020020638074, 3=000000, 35=622011020020638074D2802221, 4=5500, 37=000000208705, 7=0907020738, 41=70040001, 42=70040001, 43=Menara BCA Lt 39      KABUPATEN TOLIJBID, 11=208705, 12=090738, 13=0907, 14=2802, 49=360, 18=6012, 52=EA4D68596769A339, 22=051, 55=820274009F360201889F2608E73AD5632E1C99259F2701809F34030200009F101C0101A000800000DB3E253600000000000000000000000000000000009F3303E0F8C89F350114950508800480009F37044B7B5E299F02060000005500005A096220110200206380745F3401009F1A0203605F2A0203609A032309079C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000344, 25=00, 90=020020870509070207380000000011000000000110}
09:07:38.752 [http-nio-9872-exec-5] DEBUG i.b.n.c.c.c.s.RedisBackedCacheService - puts key: /j8583_000000208705, object: {""dataB64"":""MDIwMEYyM0M0NDgxQThFMDkyMDAwMDAwMDA0MDAwMDAwMDIwMTg2MjIwMTEwMjAwMjA2MzgwNzQwMDAwMDAwMDAwMDAwMDU1MDAwOTA3MDIwNzM4MjA4NzA1MDkwNzM4MDkwNzI4MDI2MDEyMDUxMDAwMzExMDA2MDAwMTEwMjY2MjIwMTEwMjAwMjA2MzgwNzREMjgwMjIyMTAwMDAwMDIwODcwNTcwMDQwMDAxNzAwNDAwMDEgICAgICAgTWVuYXJhIEJDQSBMdCAzOSAgICAgIEtBQlVQQVRFTiBUT0xJSkJJRDM2MEVBNEQ2ODU5Njc2OUEzMzkxNjiCAnQAnzYCAYifJgjnOtVjLhyZJZ8nAYCfNAMCAACfEBwBAaAAgAAA2z4lNgAAAAAAAAAAAAAAAAAAAAAAnzMD4PjInzUBFJUFCIAEgACfNwRLe14pnwIGAAAAVQAAWgliIBECACBjgHRfNAEAnxoCA2BfKgIDYJoDIwkHnAEAnwkCAACfHggwMDAwMDkwNU8HoAAABgIQEIQHoAAABgIQEJ9BBAAAA0QwMjAwMjA4NzA1MDkwNzAyMDczODAwMDAwMDAwMTEwMDAwMDAwMDAxMTAwMjAwMDAwMjA4NzA1MDAwMDIwODcwNQ=="",""binaryHeader"":false,""isoHeader"":null,""binaryHeaderB64"":null}, timeout: 10, timeunit: MINUTES
09:07:38.754 [nioEventLoopGroup-5-6] DEBUG i.b.n.e.i.c.CustomIsoLoggingHandler - [id: 0x823f04f0, L:/10.19.52.7:41912 - R:/10.44.224.145:10608] WRITE: Message: 0200F23C4481A8E09200000000400000002018622011020020638074000000000000005500090702073820870509073809072802601205100031100600011026622011020020638074D28022210000002087057004000170040001       Menara BCA Lt 39      KABUPATEN TOLIJBID360EA4D68596769A339336820274009F360201889F2608E73AD5632E1C99259F2701809F34030200009F101C0101A000800000DB3E253600000000000000000000000000000000009F3303E0F8C89F350114950508800480009F37044B7B5E299F02060000005500005A096220110200206380745F3401009F1A0203605F2A0203609A032309079C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F41040000034402002087050907020738000000001100000000011002000002087050000208705
MTI: 0x0200
  2: [LLVAR(18)] = '622011020020638074'
  3: [NUMERIC(6)] = '000000'
  4: [NUMERIC(12)] = '000000005500'
  7: [NUMERIC(10)] = '0907020738'
  11: [NUMERIC(6)] = '208705'
  12: [NUMERIC(6)] = '090738'
  13: [DATE4(4)] = '0907'
  14: [NUMERIC(4)] = '2802'
  18: [NUMERIC(4)] = '6012'
  22: [NUMERIC(3)] = '051'
  25: [NUMERIC(2)] = '00'
  32: [LLVAR(3)] = '110'
  33: [LLVAR(6)] = '000110'
  35: [LLBCDBIN(26)] = '622011020020638074D2802221'
  37: [NUMERIC(12)] = '000000208705'
  41: [ALPHA(8)] = '70040001'
  42: [ALPHA(15)] = '70040001       '
  43: [ALPHA(40)] = 'Menara BCA Lt 39      KABUPATEN TOLIJBID'
  49: [NUMERIC(3)] = '360'
  52: [BINARY(8)] = 'EA4D68596769A339'
  55: [LLLBIN(168)] = '820274009F360201889F2608E73AD5632E1C99259F2701809F34030200009F101C0101A000800000DB3E253600000000000000000000000000000000009F3303E0F8C89F350114950508800480009F37044B7B5E299F02060000005500005A096220110200206380745F3401009F1A0203605F2A0203609A032309079C01009F090200009F1E0830303030303930354F07A00000060210108407A00000060210109F410400000344'
  90: [NUMERIC(42)] = '020020870509070207380000000011000000000110'
  123: [LLLVAR(20)] = '00002087050000208705'
09:07:38.754 [nioEventLoopGroup-5-6] DEBUG i.b.n.e.i.c.CustomIsoLoggingHandler - [id: 0x823f04f0, L:/10.19.52.7:41912 - R:/10.44.224.145:10608] FLUSH
09:07:53.999 [http-nio-9872-exec-4] DEBUG i.b.n.e.i.CensorCommonsRequestLoggingFilter - After request [POST /trx, payload={""dataMap"":{""32"":""110"",""33"":""000110"",""2"":""622011020020638074"",""3"":""000000"",""35"":""622011******638074D2802221"",""4"":""5500"",""7"":""0907020638"",""41"":""70040001"",""42"":""70040001"",""43"":""Menara BCA Lt 39      KABUPATEN TOLIJBID"",""12"":""090638"",""13"":""0907"",""14"":""2802"",""49"":""360"",""18"":""6012"",""52"":""1A4511A158792E93"",""22"":""051"",""55"":""622011"",""25"":""00""},""rc"":null,""rrn"":null,""tracenum"":null,""mti"":512}]
09:08:53.761 [http-nio-9872-exec-5] DEBUG i.b.n.e.i.CensorCommonsRequestLoggingFilter - After request [POST /trx, payload={""dataMap"":{""32"":""110"",""33"":""000110"",""2"":""622011020020638074"",""3"":""000000"",""35"":""622011******638074D2802221"",""4"":""5500"",""7"":""0907020738"",""41"":""70040001"",""42"":""70040001"",""43"":""Menara BCA Lt 39      KABUPATEN TOLIJBID"",""12"":""090738"",""13"":""0907"",""14"":""2802"",""49"":""360"",""18"":""6012"",""52"":""1A4511A158792E93"",""22"":""051"",""55"":""622011"",""25"":""00""},""rc"":null,""rrn"":null,""tracenum"":null,""mti"":512}]"
G2ryxMtB,Pairwise swap elements of a linked list,jayati,C++,Wednesday 6th of September 2023 09:13:58 PM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};


// } Driver Code Ends
/*
  Pairwise swap a linked list
  The input list will have at least one element
  node is defined as

struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

}*head;
*/
class Solution
{
    public:
    Node* pairWiseSwap(struct Node* head) 
    {
       if (head == nullptr || head->next == nullptr) {
        return head;
    }
    Node* prev = nullptr;
    Node* curr = head;
    Node* forward = nullptr;
    while (curr != nullptr && curr->next != nullptr) {
        forward = curr->next;
        if (prev == nullptr) {
            head = forward;
        } else {
            prev->next = forward;
        }
        curr->next = forward->next;
        forward->next = curr;
        prev = curr;
        curr = curr->next ;
    }
    
    return head;
      
    }
};

//{ Driver Code Starts.

void printList(Node* node) 
{ 
	while (node != NULL) { 
		cout << node->data <<"" ""; 
		node = node->next; 
	}  
	cout<<""\n"";
}

int main() 
{ 
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;

		int data;
		cin>>data;
		struct Node *head = new Node(data);
		struct Node *tail = head;
		map<Node*, int> mp;
		mp[head] = head->data;
		for (int i = 0; i<n-1; ++i)
		{
			cin>>data;
			tail->next = new Node(data);
			tail = tail->next;
			mp[tail] = tail->data;
		}
		struct Node *failure = new Node(-1);
		Solution ob;
		head = ob.pairWiseSwap(head);
		int flag = 0;
		struct Node *temp = head;
		while(temp){
		    if(mp[temp] != temp->data){
		        flag = 1;
		        break;
		    }
		    temp = temp->next;
		}
		if(flag)
		    printList(failure);
		else
		    printList(head);
	}
	return 0; 
}

// } Driver Code Ends
// https://practice.geeksforgeeks.org/problems/pairwise-swap-elements-of-a-linked-list-by-swapping-data/"
EJN62hMK,Merge two sorted linked lists,jayati,C++,Wednesday 6th of September 2023 08:54:31 PM CDT,"//{ Driver Code Starts
#include<iostream>
using namespace std;

/* Link list Node */
struct Node
{
    int data;
    struct Node *next;
    
    Node(int x)
    {
        data = x;
        next = NULL;
    }
};

Node* sortedMerge(struct Node* a, struct Node* b);

/* Function to print Nodes in a given linked list */
void printList(struct Node *n)
{
    while (n!=NULL)
    {
        cout << n->data << "" "";
        n = n->next;
    }
    cout << endl;
}

/* Driver program to test above function*/
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;

        int data;
        cin>>data;
        struct Node *head1 = new Node(data);
        struct Node *tail1 = head1;
        for (int i = 1; i < n; ++i)
        {
            cin>>data;
            tail1->next = new Node(data);
            tail1 = tail1->next;
        }

        cin>>data;
        struct Node *head2 = new Node(data);
        struct Node *tail2 = head2;
        for(int i=1; i<m; i++)
        {
            cin>>data;
            tail2->next = new Node(data);
            tail2 = tail2->next;
        }

        Node *head = sortedMerge(head1, head2);
        printList(head);
    }
    return 0;
}

// } Driver Code Ends


 

/* Link list Node
struct Node {
  int data;
  struct Node *next;
  
  Node(int x) {
    data = x;
    next = NULL;
  }
};
*/
//Function to merge two sorted linked list.
Node* reverseList(Node* head)
{
    if (head->next == NULL)
        return head;
    Node* rest = reverseList(head->next);
    head->next->next = head;
    head->next = NULL;
    return rest;
}
 
// Given two non-empty linked lists 'a' and 'b'
Node* sortedMerge(Node* a, Node* b)
{
    // Reverse Linked List 'a'
    a = reverseList(a);
    // Reverse Linked List 'b'
    b = reverseList(b);
    // Initialize head of resultant list
    Node* head = NULL;
    Node* temp;
    // Traverse both lists while both of them
    // have nodes.
    while (a != NULL && b != NULL) {
        // If a's current value is greater than or equal to
        // b's current value.
        if (a->data >= b->data) {
            // Store next of current Node in first list
            temp = a->next;
            // Add 'a' at the front of resultant list
            a->next = head;
            // Make 'a' - head of the result list
            head = a;
            // Move ahead in first list
            a = temp;
        }
 
        // If b's value is greater. Below steps are similar
        // to above (Only 'a' is replaced with 'b')
        else {
            temp = b->next;
            b->next = head;
            head = b;
            b = temp;
        }
    }
 
    // If second list reached end, but first list has
    // nodes. Add remaining nodes of first list at the
    // beginning of result list
    while (a != NULL) {
        temp = a->next;
        a->next = head;
        head = a;
        a = temp;
    }
 
    // If first list reached end, but second list has
    // nodes. Add remaining nodes of second list at the
    // beginning of result list
    while (b != NULL) {
        temp = b->next;
        b->next = head;
        head = b;
        b = temp;
    }
    // Return the head of the result list
    return head;
}
 // https://practice.geeksforgeeks.org/problems/merge-two-sorted-linked-lists/"
1WRRSJ3Z,Mediascythe LTD,bombaires,HTML,Wednesday 6th of September 2023 08:52:13 PM CDT,"<a href=""mailto:support@mediascythe.com"">support@mediascythe.com</a>
<a href=""mailto:support@thelocalsingles.com"">support@thelocalsingles.com</a>
<a href=""mailto:privacy@flirtycupid.com"">privacy@flirtycupid.com</a>
<a href=""mailto:support@flirtycupid.com"">support@flirtycupid.com</a>
<a href=""mailto:support@spdate.com"">support@spdate.com</a>"
fxguehvv,2023-09-06_stats.json,rdp_snitch,JSON,Wednesday 6th of September 2023 07:18:20 PM CDT,"{
  ""ip"": {
    ""141.98.11.128"": 12,
    ""80.94.95.238"": 6,
    ""167.94.146.59"": 3,
    ""128.1.248.42"": 12,
    ""210.209.92.76"": 6,
    ""198.235.24.152"": 9,
    ""141.98.81.34"": 9,
    ""141.98.9.33"": 9,
    ""141.98.81.32"": 9,
    ""141.98.9.32"": 9,
    ""141.98.9.31"": 9,
    ""38.54.25.36"": 3,
    ""128.14.237.9"": 3,
    ""58.218.204.183"": 18,
    ""194.165.16.76"": 6,
    ""43.134.190.130"": 30,
    ""45.143.201.62"": 15,
    ""87.251.75.145"": 6,
    ""178.128.82.76"": 3,
    ""42.117.230.231"": 3,
    ""164.88.184.242"": 27,
    ""143.42.70.40"": 9,
    ""112.5.87.34"": 3,
    ""185.170.144.3"": 6,
    ""178.62.202.96"": 6,
    ""106.116.169.71"": 3,
    ""205.210.31.81"": 9,
    ""45.129.14.96"": 18,
    ""87.251.75.120"": 3,
    ""45.227.254.54"": 6,
    ""51.75.160.42"": 12,
    ""120.195.72.206"": 3,
    ""185.73.124.50"": 9,
    ""152.32.243.98"": 3,
    ""134.209.15.45"": 12,
    ""205.210.31.223"": 9,
    ""45.227.254.55"": 12,
    ""87.251.75.64"": 3,
    ""185.170.144.113"": 6,
    ""69.30.221.170"": 3,
    ""192.99.28.87"": 3,
    ""169.197.141.193"": 3,
    ""192.53.127.144"": 3,
    ""205.210.31.46"": 9,
    ""128.14.227.37"": 3
  },
  ""asn"": {
    ""AS209605"": 12,
    ""AS204428"": 6,
    ""AS398705"": 3,
    ""AS21859"": 12,
    ""AS10103"": 6,
    ""AS396982"": 36,
    ""AS209588"": 45,
    ""AS138915"": 3,
    ""AS135377"": 9,
    ""AS4134"": 21,
    ""AS48721"": 6,
    ""AS132203"": 30,
    ""AS210950"": 15,
    ""AS208091"": 21,
    ""AS14061"": 21,
    ""AS18403"": 3,
    ""AS137951"": 27,
    ""AS63949"": 12,
    ""AS9808"": 3,
    ""AS197414"": 12,
    ""AS198465"": 18,
    ""AS267784"": 18,
    ""AS16276"": 15,
    ""AS56046"": 3,
    ""AS32097"": 3,
    ""AS63023"": 3
  },
  ""isp"": {
    ""UAB Host Baltic"": 12,
    ""SS-Net"": 6,
    ""Censys, Inc."": 3,
    ""Zenlayer Inc"": 18,
    ""NWT"": 6,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 69,
    ""Kaopu Cloud HK Limited"": 3,
    ""Chinanet"": 21,
    ""Aceville Pte.ltd"": 30,
    ""TOV E-RISHENNYA"": 15,
    ""Xhost Internet Solutions LP"": 33,
    ""DigitalOcean, LLC"": 21,
    ""FPT Telecom Company"": 3,
    ""Clayer Limited"": 27,
    ""Akamai Technologies, Inc."": 12,
    ""China Mobile"": 3,
    ""BtHoster LTD"": 18,
    ""OVH SAS"": 12,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""WholeSale Internet"": 3,
    ""OVH Hosting"": 3,
    ""GLOBALTELEHOST Corp."": 3
  },
  ""org"": {
    ""Unknown"": 51,
    ""Internet-Transit LTD"": 24,
    ""Censys, Inc."": 3,
    ""ZENLA-1"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 24,
    ""Alviva Holding Limited"": 27,
    ""KaopuCloud-US"": 3,
    ""UCLOUD"": 6,
    ""Chinanet JS"": 18,
    ""TOV VAIZ PARTNER"": 15,
    ""Xhost Internet Solutions"": 12,
    ""Digitalocean"": 3,
    ""Vietnam Internet Network Information Center"": 3,
    ""Network and Information Technology Limited"": 27,
    ""Linode"": 9,
    ""China Mobile Communications Corporation"": 3,
    ""Xhostis"": 21,
    ""Digital Ocean"": 6,
    ""Chinanet HE"": 3,
    ""UAB Host Baltic"": 18,
    ""OVH Ltd"": 12,
    ""China Mobile"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""DigitalOcean, LLC"": 12,
    ""Transfinite"": 3,
    ""GLOBALTELEHOST Corp"": 3,
    ""Linode, LLC"": 3
  },
  ""regionName"": {
    ""Kaunas"": 18,
    ""Sofia-Capital"": 6,
    ""Hesse"": 3,
    ""California"": 66,
    ""Tsuen Wan District"": 6,
    ""Drenthe"": 18,
    ""North Holland"": 54,
    ""Taiwan"": 3,
    ""Jiangsu"": 21,
    ""North West"": 39,
    ""Kyiv City"": 15,
    ""England"": 27,
    ""South West"": 3,
    ""Tinh GJong Nai"": 3,
    ""North Carolina"": 27,
    ""Fujian"": 3,
    ""Hebei"": 3,
    ""Chi\u0219in\u0103u Municipality"": 18,
    ""Vilnius"": 18,
    ""Seoul"": 3,
    ""Missouri"": 3,
    ""New York"": 3,
    ""Taipei City"": 3
  },
  ""country"": {
    ""Lithuania"": 36,
    ""Bulgaria"": 6,
    ""Germany"": 3,
    ""United States"": 99,
    ""Hong Kong"": 6,
    ""Netherlands"": 72,
    ""Taiwan"": 6,
    ""China"": 27,
    ""Singapore"": 42,
    ""Ukraine"": 15,
    ""United Kingdom"": 27,
    ""Vietnam"": 3,
    ""Moldova"": 18,
    ""South Korea"": 3
  },
  ""account"": {
    ""Administr"": 99,
    ""(empty)"": 12,
    ""gbix7dcx"": 12,
    ""hello"": 117,
    ""RgiEZHrNV"": 3,
    ""HfaySN"": 3,
    ""zUuDbR"": 3,
    ""Administrator"": 9,
    ""Test"": 36,
    ""LsaJvSvXn"": 3,
    ""eqhwdJ"": 3,
    ""gIzYlh"": 3,
    ""Domain"": 30,
    ""az102hoy"": 12,
    ""ulnfqZzDn"": 3,
    ""nfFhXY"": 3,
    ""OrDpHf"": 3,
    ""EWAyBCXmi"": 3,
    ""mDWaFc"": 3,
    ""NpMLQO"": 3
  },
  ""keyboard"": {
    ""Unknown"": 363
  },
  ""client_build"": {
    ""Unknown"": 363
  },
  ""client_name"": {
    ""Unknown"": 363
  },
  ""ip_type"": {
    ""Unknown"": 198,
    ""hosting"": 138,
    ""proxy"": 18,
    ""mobile"": 6,
    ""mobile & hosting"": 3
  }
}"
qTv6M8Gv,2023-09-06_stats.json,rdp_snitch,JSON,Wednesday 6th of September 2023 07:16:18 PM CDT,"{
  ""ip"": {
    ""141.98.11.128"": 8,
    ""80.94.95.238"": 4,
    ""167.94.146.59"": 2,
    ""128.1.248.42"": 8,
    ""210.209.92.76"": 4,
    ""198.235.24.152"": 6,
    ""141.98.81.34"": 6,
    ""141.98.9.33"": 6,
    ""141.98.81.32"": 6,
    ""141.98.9.32"": 6,
    ""141.98.9.31"": 6,
    ""38.54.25.36"": 2,
    ""128.14.237.9"": 2,
    ""58.218.204.183"": 12,
    ""194.165.16.76"": 4,
    ""43.134.190.130"": 20,
    ""45.143.201.62"": 10,
    ""87.251.75.145"": 4,
    ""178.128.82.76"": 2,
    ""42.117.230.231"": 2,
    ""164.88.184.242"": 18,
    ""143.42.70.40"": 6,
    ""112.5.87.34"": 2,
    ""185.170.144.3"": 4,
    ""178.62.202.96"": 4,
    ""106.116.169.71"": 2,
    ""205.210.31.81"": 6,
    ""45.129.14.96"": 12,
    ""87.251.75.120"": 2,
    ""45.227.254.54"": 4,
    ""51.75.160.42"": 8,
    ""120.195.72.206"": 2,
    ""185.73.124.50"": 6,
    ""152.32.243.98"": 2,
    ""134.209.15.45"": 8,
    ""205.210.31.223"": 6,
    ""45.227.254.55"": 8,
    ""87.251.75.64"": 2,
    ""185.170.144.113"": 4,
    ""69.30.221.170"": 2,
    ""192.99.28.87"": 2,
    ""169.197.141.193"": 2,
    ""192.53.127.144"": 2,
    ""205.210.31.46"": 6,
    ""128.14.227.37"": 2
  },
  ""asn"": {
    ""AS209605"": 8,
    ""AS204428"": 4,
    ""AS398705"": 2,
    ""AS21859"": 8,
    ""AS10103"": 4,
    ""AS396982"": 24,
    ""AS209588"": 30,
    ""AS138915"": 2,
    ""AS135377"": 6,
    ""AS4134"": 14,
    ""AS48721"": 4,
    ""AS132203"": 20,
    ""AS210950"": 10,
    ""AS208091"": 14,
    ""AS14061"": 14,
    ""AS18403"": 2,
    ""AS137951"": 18,
    ""AS63949"": 8,
    ""AS9808"": 2,
    ""AS197414"": 8,
    ""AS198465"": 12,
    ""AS267784"": 12,
    ""AS16276"": 10,
    ""AS56046"": 2,
    ""AS32097"": 2,
    ""AS63023"": 2
  },
  ""isp"": {
    ""UAB Host Baltic"": 8,
    ""SS-Net"": 4,
    ""Censys, Inc."": 2,
    ""Zenlayer Inc"": 12,
    ""NWT"": 4,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 46,
    ""Kaopu Cloud HK Limited"": 2,
    ""Chinanet"": 14,
    ""Aceville Pte.ltd"": 20,
    ""TOV E-RISHENNYA"": 10,
    ""Xhost Internet Solutions LP"": 22,
    ""DigitalOcean, LLC"": 14,
    ""FPT Telecom Company"": 2,
    ""Clayer Limited"": 18,
    ""Akamai Technologies, Inc."": 8,
    ""China Mobile"": 2,
    ""BtHoster LTD"": 12,
    ""OVH SAS"": 8,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""WholeSale Internet"": 2,
    ""OVH Hosting"": 2,
    ""GLOBALTELEHOST Corp."": 2
  },
  ""org"": {
    ""Unknown"": 34,
    ""Internet-Transit LTD"": 16,
    ""Censys, Inc."": 2,
    ""ZENLA-1"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 16,
    ""Alviva Holding Limited"": 18,
    ""KaopuCloud-US"": 2,
    ""UCLOUD"": 4,
    ""Chinanet JS"": 12,
    ""TOV VAIZ PARTNER"": 10,
    ""Xhost Internet Solutions"": 8,
    ""Digitalocean"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""Network and Information Technology Limited"": 18,
    ""Linode"": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Xhostis"": 14,
    ""Digital Ocean"": 4,
    ""Chinanet HE"": 2,
    ""UAB Host Baltic"": 12,
    ""OVH Ltd"": 8,
    ""China Mobile"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Transfinite"": 2,
    ""GLOBALTELEHOST Corp"": 2,
    ""Linode, LLC"": 2
  },
  ""regionName"": {
    ""Kaunas"": 12,
    ""Sofia-Capital"": 4,
    ""Hesse"": 2,
    ""California"": 44,
    ""Tsuen Wan District"": 4,
    ""Drenthe"": 12,
    ""North Holland"": 36,
    ""Taiwan"": 2,
    ""Jiangsu"": 14,
    ""North West"": 26,
    ""Kyiv City"": 10,
    ""England"": 18,
    ""South West"": 2,
    ""Tinh GJong Nai"": 2,
    ""North Carolina"": 18,
    ""Fujian"": 2,
    ""Hebei"": 2,
    ""Chi\u0219in\u0103u Municipality"": 12,
    ""Vilnius"": 12,
    ""Seoul"": 2,
    ""Missouri"": 2,
    ""New York"": 2,
    ""Taipei City"": 2
  },
  ""country"": {
    ""Lithuania"": 24,
    ""Bulgaria"": 4,
    ""Germany"": 2,
    ""United States"": 66,
    ""Hong Kong"": 4,
    ""Netherlands"": 48,
    ""Taiwan"": 4,
    ""China"": 18,
    ""Singapore"": 28,
    ""Ukraine"": 10,
    ""United Kingdom"": 18,
    ""Vietnam"": 2,
    ""Moldova"": 12,
    ""South Korea"": 2
  },
  ""account"": {
    ""Administr"": 66,
    ""(empty)"": 8,
    ""gbix7dcx"": 8,
    ""hello"": 78,
    ""RgiEZHrNV"": 2,
    ""HfaySN"": 2,
    ""zUuDbR"": 2,
    ""Administrator"": 6,
    ""Test"": 24,
    ""LsaJvSvXn"": 2,
    ""eqhwdJ"": 2,
    ""gIzYlh"": 2,
    ""Domain"": 20,
    ""az102hoy"": 8,
    ""ulnfqZzDn"": 2,
    ""nfFhXY"": 2,
    ""OrDpHf"": 2,
    ""EWAyBCXmi"": 2,
    ""mDWaFc"": 2,
    ""NpMLQO"": 2
  },
  ""keyboard"": {
    ""Unknown"": 242
  },
  ""client_build"": {
    ""Unknown"": 242
  },
  ""client_name"": {
    ""Unknown"": 242
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""hosting"": 92,
    ""proxy"": 12,
    ""mobile"": 4,
    ""mobile & hosting"": 2
  }
}"
PgurX1VF,2023-09-06_stats.json,rdp_snitch,JSON,Wednesday 6th of September 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""141.98.11.128"": 4,
    ""80.94.95.238"": 2,
    ""167.94.146.59"": 1,
    ""128.1.248.42"": 4,
    ""210.209.92.76"": 2,
    ""198.235.24.152"": 3,
    ""141.98.81.34"": 3,
    ""141.98.9.33"": 3,
    ""141.98.81.32"": 3,
    ""141.98.9.32"": 3,
    ""141.98.9.31"": 3,
    ""38.54.25.36"": 1,
    ""128.14.237.9"": 1,
    ""58.218.204.183"": 6,
    ""194.165.16.76"": 2,
    ""43.134.190.130"": 10,
    ""45.143.201.62"": 5,
    ""87.251.75.145"": 2,
    ""178.128.82.76"": 1,
    ""42.117.230.231"": 1,
    ""164.88.184.242"": 9,
    ""143.42.70.40"": 3,
    ""112.5.87.34"": 1,
    ""185.170.144.3"": 2,
    ""178.62.202.96"": 2,
    ""106.116.169.71"": 1,
    ""205.210.31.81"": 3,
    ""45.129.14.96"": 6,
    ""87.251.75.120"": 1,
    ""45.227.254.54"": 2,
    ""51.75.160.42"": 4,
    ""120.195.72.206"": 1,
    ""185.73.124.50"": 3,
    ""152.32.243.98"": 1,
    ""134.209.15.45"": 4,
    ""205.210.31.223"": 3,
    ""45.227.254.55"": 4,
    ""87.251.75.64"": 1,
    ""185.170.144.113"": 2,
    ""69.30.221.170"": 1,
    ""192.99.28.87"": 1,
    ""169.197.141.193"": 1,
    ""192.53.127.144"": 1,
    ""205.210.31.46"": 3,
    ""128.14.227.37"": 1
  },
  ""asn"": {
    ""AS209605"": 4,
    ""AS204428"": 2,
    ""AS398705"": 1,
    ""AS21859"": 4,
    ""AS10103"": 2,
    ""AS396982"": 12,
    ""AS209588"": 15,
    ""AS138915"": 1,
    ""AS135377"": 3,
    ""AS4134"": 7,
    ""AS48721"": 2,
    ""AS132203"": 10,
    ""AS210950"": 5,
    ""AS208091"": 7,
    ""AS14061"": 7,
    ""AS18403"": 1,
    ""AS137951"": 9,
    ""AS63949"": 4,
    ""AS9808"": 1,
    ""AS197414"": 4,
    ""AS198465"": 6,
    ""AS267784"": 6,
    ""AS16276"": 5,
    ""AS56046"": 1,
    ""AS32097"": 1,
    ""AS63023"": 1
  },
  ""isp"": {
    ""UAB Host Baltic"": 4,
    ""SS-Net"": 2,
    ""Censys, Inc."": 1,
    ""Zenlayer Inc"": 6,
    ""NWT"": 2,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 23,
    ""Kaopu Cloud HK Limited"": 1,
    ""Chinanet"": 7,
    ""Aceville Pte.ltd"": 10,
    ""TOV E-RISHENNYA"": 5,
    ""Xhost Internet Solutions LP"": 11,
    ""DigitalOcean, LLC"": 7,
    ""FPT Telecom Company"": 1,
    ""Clayer Limited"": 9,
    ""Akamai Technologies, Inc."": 4,
    ""China Mobile"": 1,
    ""BtHoster LTD"": 6,
    ""OVH SAS"": 4,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""WholeSale Internet"": 1,
    ""OVH Hosting"": 1,
    ""GLOBALTELEHOST Corp."": 1
  },
  ""org"": {
    ""Unknown"": 17,
    ""Internet-Transit LTD"": 8,
    ""Censys, Inc."": 1,
    ""ZENLA-1"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 8,
    ""Alviva Holding Limited"": 9,
    ""KaopuCloud-US"": 1,
    ""UCLOUD"": 2,
    ""Chinanet JS"": 6,
    ""TOV VAIZ PARTNER"": 5,
    ""Xhost Internet Solutions"": 4,
    ""Digitalocean"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""Network and Information Technology Limited"": 9,
    ""Linode"": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Xhostis"": 7,
    ""Digital Ocean"": 2,
    ""Chinanet HE"": 1,
    ""UAB Host Baltic"": 6,
    ""OVH Ltd"": 4,
    ""China Mobile"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Transfinite"": 1,
    ""GLOBALTELEHOST Corp"": 1,
    ""Linode, LLC"": 1
  },
  ""regionName"": {
    ""Kaunas"": 6,
    ""Sofia-Capital"": 2,
    ""Hesse"": 1,
    ""California"": 22,
    ""Tsuen Wan District"": 2,
    ""Drenthe"": 6,
    ""North Holland"": 18,
    ""Taiwan"": 1,
    ""Jiangsu"": 7,
    ""North West"": 13,
    ""Kyiv City"": 5,
    ""England"": 9,
    ""South West"": 1,
    ""Tinh GJong Nai"": 1,
    ""North Carolina"": 9,
    ""Fujian"": 1,
    ""Hebei"": 1,
    ""Chi\u0219in\u0103u Municipality"": 6,
    ""Vilnius"": 6,
    ""Seoul"": 1,
    ""Missouri"": 1,
    ""New York"": 1,
    ""Taipei City"": 1
  },
  ""country"": {
    ""Lithuania"": 12,
    ""Bulgaria"": 2,
    ""Germany"": 1,
    ""United States"": 33,
    ""Hong Kong"": 2,
    ""Netherlands"": 24,
    ""Taiwan"": 2,
    ""China"": 9,
    ""Singapore"": 14,
    ""Ukraine"": 5,
    ""United Kingdom"": 9,
    ""Vietnam"": 1,
    ""Moldova"": 6,
    ""South Korea"": 1
  },
  ""account"": {
    ""Administr"": 33,
    ""(empty)"": 4,
    ""gbix7dcx"": 4,
    ""hello"": 39,
    ""RgiEZHrNV"": 1,
    ""HfaySN"": 1,
    ""zUuDbR"": 1,
    ""Administrator"": 3,
    ""Test"": 12,
    ""LsaJvSvXn"": 1,
    ""eqhwdJ"": 1,
    ""gIzYlh"": 1,
    ""Domain"": 10,
    ""az102hoy"": 4,
    ""ulnfqZzDn"": 1,
    ""nfFhXY"": 1,
    ""OrDpHf"": 1,
    ""EWAyBCXmi"": 1,
    ""mDWaFc"": 1,
    ""NpMLQO"": 1
  },
  ""keyboard"": {
    ""Unknown"": 121
  },
  ""client_build"": {
    ""Unknown"": 121
  },
  ""client_name"": {
    ""Unknown"": 121
  },
  ""ip_type"": {
    ""Unknown"": 66,
    ""hosting"": 46,
    ""proxy"": 6,
    ""mobile"": 2,
    ""mobile & hosting"": 1
  }
}"
i6vix8AU,sql injection,teslariu,Python,Wednesday 6th of September 2023 07:09:01 PM CDT,"#usr/bin/env python
# -*- coding: utf-8 -*-
#

# ejemplo de sql injection
# >> Ingrese un nombre: Leticia',55);DELETE FROM personas;--
# >> Ingrese una edad:55

# Como queda la consulta cursor.execute(f""INSERT INTO personas VALUES(?,?)"",(nombre,edad))
# ""INSERT INTO personas VALUES('Leticia',55);DELETE FROM personas;--,55)""
#
# Descompongo la consulta
#   INSERT INTO personas VALUES('Leticia',55);
#   DELETE FROM personas;
#   --,55)

import sqlite3

conn = sqlite3.connect(""mibase.sqlite"")
cursor = conn.cursor()


nombre = input(""Ingrese un nombre: "")
edad = int(input(""Ingrese una edad: ""))

cursor.executescript(f""INSERT INTO personas VALUES('{nombre}',{edad})"")
	
conn.commit()

cursor.execute(""SELECT * FROM personas"")
datos = cursor.fetchall()
print(datos)

# cerrar la base
conn.close()









"
EWmSNUqY,GML asset_get_list_array,plonp,Game Maker,Wednesday 6th of September 2023 07:04:42 PM CDT,"// Compile the names (string), of the asset type, in array
// REF: https://manual.yoyogames.com/GameMaker_Language/GML_Reference/Asset_Management/Assets_And_Tags/asset_add_tags.htm

function asset_get_list_array(type, _prefix = """") {
	var _arr = [], i = 0;

	switch (type) {
		default: return undefined;
		case asset_sprite:
			while sprite_exists(i) {
				var name = sprite_get_name(i);
				if string_copy(name, 1, string_length(_prefix)) == _prefix {_arr[i] = name;}
				i++;
			}
			break;
		case asset_object:
			while instance_exists(i) {
				var name = object_get_name(i);
				if string_copy(name, 1, string_length(_prefix)) == _prefix {_arr[i] = name;}
				i++;
			}
			break;
	}

	return _arr;
}"
n5cZGBbr,Fire prompt using ID,_Goofy,Lua,Wednesday 6th of September 2023 06:42:17 PM CDT,"local id  = 14631334907 -- Put the id item here

-- this script below will fire all remotes in the game with the id as an argument
for i,v in pairs(game:GetDescendants()) do
if v:IsA(""RemoteEvent"") then
v:FireServer(id)
if v:IsA(""BindableEvent"") then
v:Fire(id)
if v:IsA(""RemoteFunction"") then
v:InvokeServer(id)
end
end
end
end"
d38YTrMU,Mr Python Wiz Chatbot,here2share,Python,Wednesday 6th of September 2023 06:37:20 PM CDT,"Mr Python Wiz Chatbot

Act like you are a genius Python programmer named of Mr Wiz always determined to write complete code, even to add more to it... and will always attempt to find a solution to what might seem impossible when asked to do so. You will keep listing 10 or more different solutions of what you think are the best solutions sorted by most recommended to the least recommended, especially if the user enters only a ""///"", and that list must be numbered whereas all the user has to do is type that number for it to be implemented... and if there is a ""?"" beside that number, that means to further elaborate on that option. You will never try to implement Numpy, Pandas, Tensorflow... or any other import that requires sis. 

c/ - means continue
d/ - delete your most recent reply from your memory"
HTFaT7ji,pymysql,teslariu,Python,Wednesday 6th of September 2023 06:33:29 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Script que se conecta a una base MySQL
# instalar previamente pymysql: pip install pymysql

import pymysql

conn = pymysql.connect(
		host = ""localhost"",
		user = ""root"",
		port = 3306,
		passwd = """",
		db = ""comercioit""
		)
		
cursor = conn.cursor()


cursor.execute(""SELECT * FROM productos"")
datos = cursor.fetchall()
print(datos)

# cerrar la base
conn.close()









"
7eCnkSNq,ejercicio sqlite,teslariu,Python,Wednesday 6th of September 2023 06:23:08 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
import sqlite3

conn = sqlite3.connect(""productos.sqlite"")
cursor = conn.cursor()

cursor.execute(""CREATE TABLE IF NOT EXISTS productos(id NUMERIC, nombre TEXT, precio NUMERIC)"")

conn.commit()


productos = (
		(1,'Teclado',25),
		(2,""Mouse"", 18),
		(3,'Monitor',300),
		(4,'Parlantes',100)
)

for cod,nombre,precio in productos:
	cursor.execute(f""INSERT INTO productos VALUES(?,?,?)"",(cod,nombre,precio))
	
conn.commit()

cursor.execute(""SELECT * FROM productos"")
datos = cursor.fetchall()
print(datos)

# cerrar la base
conn.close()









"
WSZgRVeE,ComputerCraft mining script 1.6.4,UnicorNora,Lua,Wednesday 6th of September 2023 06:12:51 PM CDT,"--[[
Version
  0.07 1/2/2015 1:41 PM
Changelog
  0.01 - Starting Of Rewriting
  0.02 - More Writing
  0.03 - Adding Fuel Code
  0.04 - Small but many program error fixed
  0.05 - Fully Test
  0.06 - Fixing Minor Bug when add 3 to deep because firstdig had no 3 add to deepcount
  0.07 - Fixing High Error
--]]

-- Local Variables
-- Starting
local wide = 0
local wideCount = 0
local long = 0
local longCount = 0
local deep = 0
local deepCount = 0
local totalBlocks = 0
local coalNeeded = 0
local corrent = n
-- Inventory This Will Check At Start Code
local chest = 0
local fuelCount = 0
local fuelCount1 = 0
local noFuelNeed = 0 -- if Config has fuel no need on
local error = 0 -- Error Code
local reCheck = 0 -- Recheck Code
-- Others
local totalBlocks = 0
local totalBlockDone = 0 -- How many Block Mined
local LSorWS = 0 -- Go Left or Go Right This is for Wide Code
local ALorAR = 0 -- align left Or align Right
local processRaw = 0
local process = 0
local enderChest = 0 -- TODO
local blockUp = 0 -- Fixing to Chest Probleem and moving probleem
local processRaw = 0
local process = 0

-- Checking
local function check()
    if noFuelNeed == 0 then
        if fuelCount == 0 then
            print(""Turtle has no fuel"")
            print(""Put fuel in Second and Thrid slot"")
            error = 1
        else
            print(""Turtle has Fuel"")
        end
        if fuelCount1 == 0 then
            print(""Turtle has no extra fuel but if is short job it okey"")
        end
    end
    if chest == 0 then
        print(""No chest in Turtle"")
        print(""Put chest in 1 slot"")
        error = 1
    else
        print(""Turtle has chest"")
    end
    if error == 1 then
        print(""Items are missing please try again"")
        print(""Turtle will recheck in 8 sec"")
    end
end

-- Recheck if user forget something turtle will check after 6 sec
local function reCheck()
    chest = turtle.getItemCount(1)
    fuelCount = turtle.getItemCount(2)
    fuelCount1 = turtle.getItemCount(3)
    error = 0
end

local function chestDump()
    if turtle.getItemCount(16)> 0 then -- If slot 16 in turtle has item slot 4 to 16 will go to chest
    repeat -- The Fix to Gravel Chest Bug. It check if gravel above then it dig till it gone
        turtle.digUp()
        sleep(0.6)
        if turtle.detectUp() then
            turtle.digUp()
            blockUp = 1
        else
            blockUp = 0
        end
    until blockUp == 0
    turtle.select(1)
    turtle.placeUp()
    chest = chest - 1
    for slot = 4, 16 do
        turtle.select(slot)
        sleep(0.6) -- Small fix for slow pc because i had people problem with this
        turtle.dropUp()
    end
    turtle.select(1)
	turtle.digUp()
    turtle.select(4)
    if Chest == 0 then
        print(""Out Of Chest"")
        os.shutdown()
    end
    end
end

-- Refuel
local function refuel()
    if noFuelNeed == 0 then
        repeat
            if turtle.getFuelLevel() < 160 then
                if fuelCount > 0 then
                    turtle.select(2)
                    turtle.refuel(1)
                    fuelCount = fuelCount - 1
                elseif fuelCount1 > 0 then
                    turtle.select(3)
                    turtle.refuel(1)
                    fuelCount1 = fuelCount1 - 1
                else
                    print(""out of fuel"")
                    os.shutdown()
                end
            end
        until turtle.getFuelLevel() >= 160
    end
end

local function mineLong()
    if turtle.detect() then
        turtle.dig()
    end
    if turtle.forward() then
        longCount = longCount + 1
    else
        repeat
            turtle.dig()
            sleep(0.6)
            if turtle.forward() then
                blockUp = 0
            else
                blockUp = 1
            end
        until blockUp == 0
        longCount = longCount + 1
        print(totalBlocks - totalBlockDone)
    end
    if turtle.detectUp() then
        turtle.digUp()
    end
    if turtle.detectDown() then
        turtle.digDown()
    end
    totalBlockDone = totalBlockDone + 3
end

local function wideMineLeft() -- TODO
    turtle.turnLeft()
    if turtle.detect() then
        turtle.dig()
        sleep(0.6) -- Minor bug fix if there is gravel
    end
    if turtle.forward() then
        --notting
    else
        repeat
            turtle.dig()
            sleep(0.6)
            if turtle.forward() then
                blockUp = 0
            else
                blockUp = 1
            end
        until blockUp == 0
    end
    if turtle.detectUp() then
        turtle.digUp()
    end
    if turtle.detectDown() then
        turtle.digDown()
    end
    turtle.turnLeft()
    LSorWS = 0
    longCount = 0
    wideCount = wideCount + 1
    totalBlockDone = totalBlockDone + 3
    end

local function wideMineRight() -- TODO
    turtle.turnRight()
    if turtle.detect() then
        turtle.dig()
        sleep(0.6)
    end
    if turtle.forward() then
        --Notting
    else
        repeat
            turtle.dig()
            sleep(0.6)
            if turtle.forward() then
                blockUp = 0
            else
                blockUp = 1
            end
        until blockUp == 0
    end
    if turtle.detectUp() then
        turtle.digUp()
    end
    if turtle.detectDown() then
        turtle.digDown()
    end
    turtle.turnRight()
    LSorWS = 1
    longCount = 0
    wideCount = wideCount + 1
    totalBlockDone = totalBlockDone + 3
end

local function deepMine()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.turnRight()
    turtle.turnRight()
    wideCount = 0
    longCount = 0
    deepCount = deepCount + 3
    totalBlockDone = totalBlockDone + 3
end

local function main()
    repeat --Repeat for each level
        mineLong()
        refuel()
        chestDump()
        if longCount == long then
            if wideCount ~= wide then
                process = totalBlockDone / totalBlocks * 100
                processRaw = totalBlocks - totalBlockDone
                print(""How Much Is Done: "" .. math.floor(process+0.5) .. "" %"")
                print(""TotalBlocks Still Need To Dig Is "" .. processRaw)
                if LSorWS == 0 then
                    wideMineRight()
                else
                    wideMineLeft()
                end
            elseif wideCount >= wide then
                    deepMine()
            end
        end
    until deepCount >= deep
    print(""turtle is Done"")
end

local function firstDig()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    wideCount = 0
    longCount = 0
    totalBlockDone = totalBlockDone + 3
end

local function start()
    print(""Welcome To Excavation Turtle Program"")
    print(""Slot 1: Chest, Slot 2: Fuel, Slot 3: Fuel"")
    print(""Note: If now put item in then it say error just wait it fix it self"")
    print(""How long(Lenght) you want"")
    input = io.read()
    long = tonumber(input)
    long = long - 1
    print(""How wide(Width) you want"")
    input2 = io.read()
    wide = tonumber(input2)
    wide = wide - 1
    print(""How Deep(Depth) You Want"")
    input3 = io.read()
    deep = tonumber(input3)
    print(""Is This Corrent Lenght "" .. ""Lenght = "" .. (long + 1) .. "" Width = "" .. (wide + 1) .. "" Depth = "" .. (deep))
    print(""Type y Or Y if it is correct and if not then n or N"")
    corrent = io.read()
    if corrent == n or N then
        os.reboot()
    end
    print(""Okey Program Will Do Calculations"")
    totalBlocks = (wide + 1) * (long + 1) * deep -- 1 is add because above it removed for wide and long code
    print(""Total amount for block to mine is "" .. totalBlocks)
    coalNeeded = totalBlocks / 3 / 80
    print(""Total amount for Coal needed is "" .. math.floor(coalNeeded+0.5))
    if turtle.getFuelLevel() == ""unlimited"" then
        print(""Your turtle config does need fuel"")
        noFuelNeed = 1
    elseif turtle.getFuelLevel() < 160 then
        turtle.select(2)
        turtle.refuel(2)
    end
    reCheck()
    check()
    if error == 1 then
        repeat
            sleep(6)
            reCheck()
            check()
        until error == 0
    end
    print(""Turtle will now start!"")
    firstDig()
    main()
end

start()"
92AqbAv9,sqlite,teslariu,Python,Wednesday 6th of September 2023 05:36:02 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
""""""
Motores de bases de datos:
SQLite: el único incorporado a la biblioteca std: import sqlite3

MySQL (y MariaDB): mysql-connector-python, PyMySQL, MYSQLdb
PostgreSQL: psycopg, pg8000

SQL Server: pymssql, pyodbc
Oracle: cx_Oracle
""""""
import sqlite3

# Me conecto a una base de datos. Si la base no existe, la crea.
conn = sqlite3.connect(""mibase.sqlite"")

# creo el cursor para hacer consultas SQL
cursor = conn.cursor()

# Creo la primer consulta: crear una tabla
cursor.execute(""CREATE TABLE IF NOT EXISTS personas(nombre TEXT, edad NUMERIC)"")

# como acabo de modificar la estructura de la base de datos creando una 
# tabla, debo hacer un commit
conn.commit()

# agrego datos a la tabla personas
personas = (
		('Pablo',22),
		(""Ana"", 34),
		('Luisa',28),
		('Carlos',45)
)

for nombre,edad in personas:
	cursor.execute(f""INSERT INTO personas VALUES(?,?)"",(nombre,edad))
	
conn.commit()

# voy a pedir los datos y los imprimo por consola
cursor.execute(""SELECT * FROM personas"")
datos = cursor.fetchall()
print(datos)

# cierro la base de datos
conn.close()








"
qwrx3ss5,esk,paulandzen,Python,Wednesday 6th of September 2023 05:35:25 PM CDT,"person|lookup:'Skin Condition' = 'Rosacea' or person|lookup:'Skin Type' = 'Rosacea' or person|lookup:'Rosacea' = 'Yes' or person|lookup:'Rosacea' = 'yes' or person|lookup:'Rosacea' = 1

""Pregnancy"" in person|lookup:'Skin Type'

""I would like to have less"" in person|lookup:""Pigmentation"" or ""Primary concern"" in person|lookup:""Pigmentation"" or ""Primary Concern"" in person|lookup:""Pigmentation""

""I would like to have less"" in person|lookup:""Finelines"" or ""Primary concern"" in person|lookup:""Finelines"" or ""Primary Concern"" in person|lookup:""Finelines""

""I would like to have fewer"" in person|lookup:""Acne"" or ""I would like to have less"" in person|lookup:""Acne"" or ""Primary concern"" in person|lookup:""Acne"" or ""Primary Concern"" in person|lookup:""Acne""


person|lookup:'Skin Condition' = 'Rosacea' or person|lookup:'Skin Type' = 'Rosacea' or person|lookup:'Rosacea' = 'Yes' or person|lookup:'Rosacea' = 'yes' or person|lookup:'Rosacea' = 1 or ""I would like to have less"" in person|lookup:""Pigmentation"" or ""Primary concern"" in person|lookup:""Pigmentation"" or ""Primary Concern"" in person|lookup:""Pigmentation"" or ""I would like to have less"" in person|lookup:""Finelines"" or ""Primary concern"" in person|lookup:""Finelines"" or ""Primary Concern"" in person|lookup:""Finelines"" or ""I would like to have less"" in person|lookup:""Acne"" or ""Primary concern"" in person|lookup:""Acne"" or ""Primary Concern"" in person|lookup:""Acne""


person|lookup:'Submitted Quiz - marketing approved' != 'Yes' or not person|lookup:'Submitted Quiz - marketing approved'
"
cmDErV8t,Untitled,Nenogzar,Python,Wednesday 6th of September 2023 05:24:37 PM CDT,"flower_type = input()
flower_count = int(input())
budget = int(input())

# Изчисляване на крайната цена
if flower_type == ""Roses"":
    price_per_flower = 5.00
    if flower_count > 80:
        price_per_flower *= 0.90  # 10% отстъпка
elif flower_type == ""Dahlias"":
    price_per_flower = 3.80
    if flower_count > 90:
        price_per_flower *= 0.85  # 15% отстъпка
elif flower_type == ""Tulips"":
    price_per_flower = 2.80
    if flower_count > 80:
        price_per_flower *= 0.85  # 15% отстъпка
elif flower_type == ""Narcissus"":
    price_per_flower = 3.00
    if flower_count < 120:
        price_per_flower *= 1.15  # 15% наценка
elif flower_type == ""Gladiolus"":
    price_per_flower = 2.50
    if flower_count < 80:
        price_per_flower *= 1.20  # 20% наценка

total_price = flower_count * price_per_flower

# Проверка дали бюджетът е достатъчен
if budget >= total_price:
    remaining_budget = budget - total_price
    print(f""Hey, you have a great garden with {flower_count} {flower_type} and {remaining_budget:.2f} leva left."")
else:
    needed_budget = total_price - budget
    print(f""Not enough money, you need {needed_budget:.2f} leva more."")"
dk9GKZJ5,Untitled,Nenogzar,Python,Wednesday 6th of September 2023 05:06:01 PM CDT,"# Входни данни
flower_type = input()
flower_count = int(input())
budget = int(input())
 
# Инициализация на цените на цветята
flower_prices = {
    ""Roses"": 5.00,
    ""Dahlias"": 3.80,
    ""Tulips"": 2.80,
    ""Narcissus"": 3.00,
    ""Gladiolus"": 2.50
}
 
# Инициализация на отстъпките и наценките
discounts = {
    ""Roses"": 0.10,
    ""Dahlias"": 0.15,
    ""Tulips"": 0.15,
}
 
markup = {
    ""Narcissus"": 0.15,
    ""Gladiolus"": 0.20
}
 
# Изчисляване на крайната цена
price_per_flower = flower_prices[flower_type]
 
if flower_type in discounts and flower_count > 80:
    price_per_flower -= price_per_flower * discounts[flower_type]
 
if flower_type in markup and flower_count < 120:
    price_per_flower += price_per_flower * markup[flower_type]
 
total_price = flower_count * price_per_flower
 
# Проверка дали бюджетът е достатъчен
if budget >= total_price:
    remaining_budget = budget - total_price
    print(f""Hey, you have a great garden with {flower_count} {flower_type} and {remaining_budget:.2f} leva left."")
else:
    needed_budget = total_price - budget
    print(f""Not enough money, you need {needed_budget:.2f} leva more."")"
4pCBHaVV,Untitled,Nenogzar,Python,Wednesday 6th of September 2023 04:57:11 PM CDT,"# Въвеждане на вид цветя, брой цветя и бюджет от потребителя
flower_type = input()
flower_count = int(input())
budget = int(input())

# Инициализация на цените на цветята
flower_prices = {
    ""Roses"": 5.00,
    ""Dahlias"": 3.80,
    ""Tulips"": 2.80,
    ""Narcissus"": 3.00,
    ""Gladiolus"": 2.50
}

# Инициализация на отстъпките и наценките
discounts = {
    ""Roses"": 0.10,
    ""Dahlias"": 0.15,
    ""Tulips"": 0.15,
}

markup = {
    ""Narcissus"": 0.15,
    ""Gladiolus"": 0.20
}

# Изчисляване на крайната цена
price_per_flower = flower_prices[flower_type]

if flower_type in discounts and flower_count > 80:
    price_per_flower -= price_per_flower * discounts[flower_type]

if flower_type in markup and flower_count < 120:
    price_per_flower += price_per_flower * markup[flower_type]

total_price = flower_count * price_per_flower

# Проверка дали бюджетът е достатъчен
if budget >= total_price:
    remaining_budget = budget - total_price
    print(f""Hey, you have a great garden with {flower_count} {flower_type} and {remaining_budget:.2f} leva left."")
else:
    needed_budget = total_price - budget
    print(f""Not enough money, you need {needed_budget:.2f} leva more."")
"
Z9Y4HXti,10. Odd Even Sum,Spocoman,C++,Wednesday 6th of September 2023 04:30:05 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int num;
    cin >> num;

    int number;

    int oddSum = 0;
    int evenSum = 0;

    for (int i = 1; i <= num; i++) {
        cin >> number;

        if (i % 2 == 1) {
            oddSum += number;
        }
        else {
            evenSum += number;
        }
    }

    if (oddSum == evenSum) {
        cout << ""Yes"" << endl;
        cout << ""Sum = "" << oddSum << endl;
    }
    else {
        cout << ""No"" << endl;
        cout << ""Diff = "" << abs(oddSum - evenSum) << endl;
    }

    return 0;
}"
Nn6enf9b,Better Excavate,CristianMotaSG,Lua,Wednesday 6th of September 2023 04:24:32 PM CDT,"local args = { ... }
local turn_right = true
local largura = assert(tonumber(args[1]), ""Use: escavar <Largura> <Profundidade> <Comprimento>"")
local comprimento = assert(tonumber(args[3]) - 1, ""Use: escavar <Largura> <Profundidade> <Comprimento>"")
local profundidade = assert(tonumber(args[2]), ""Use: escavar <Largura> <Profundidade> <Comprimento>"")
 
 
local function rotate_right()
    turtle.turnRight()
    turtle.turnRight()
end

 
local function torch_placement_check(x, z)
    if (x % 8) == 0 and (z % 8) == 0 then
        local slot = 0
        local success, data = turtle.inspectDown()
        if success == false then return end
        for i = 1, 16, 1 do
            data = turtle.getItemDetail(i)
            if data ~= nil and data.name == ""minecraft:torch"" then
                slot = i
            end
        end
        if slot > 0 then
            turtle.select(slot)  
            rotate_right()
            turtle.place()
            rotate_right()
        end
    end
end
 
 
local function forward()
    while not turtle.forward() do
        turtle.dig()
        turtle.attack()
        sleep()
    end
end
 
 
local function turn_around()
    if turn_right then
        turtle.turnRight()
        turtle.dig()
        forward()
        turtle.turnRight()
        turn_right = false
    else    
        turtle.turnLeft()
        turtle.dig()
        forward()
        turtle.turnLeft()
        turn_right = true      
    end
end
 
 
local function reset()
    turtle.turnRight()
    if turn_right then
        turtle.turnRight()
        for z = 1, comprimento, 1 do
            forward()
        end
        turtle.turnRight()
    end
    for x = 1, largura - 1, 1 do
        forward()
    end
    turtle.turnRight()
    turtle.digDown()
    turtle.down()
end
 

print(""Escavação 3000"")
print(""------------------------------------"")
print(""Escavação iniciada. Monitore periodicamente."")
for y = 1, profundidade do
    turtle.select(1)
    turtle.refuel()
    turn_right = true
    for x = 1, largura, 1 do
        for z = 1, comprimento, 1 do
            turtle.dig()
            forward()
            torch_placement_check(x, z)          
        end
        if x < largura then
            turn_around()
        else
            reset()
        end
    end
    print(""Camada concluída, "" .. profundidade - y .."" restantes..."")
end



for y = 1, profundidade do
    turtle.up()
end
turn_around()

print(""Escavação concluída! Divirta-se :)"")"
3ZL2qMqM,ChatGPT shared page Markdown export,nuxdie,JavaScript,Wednesday 6th of September 2023 03:49:15 PM CDT,"const { title, linear_conversation = [] } = JSON.parse(document.getElementById('__NEXT_DATA__').textContent)
    .props?.pageProps?.serverResponse?.data || {};

const MESSAGE_FIELD_BY_TYPE = {
    code: 'text',
    execution_output: 'text',
    text: 'parts',
};

const joinLines = (...args) => args.join('\n');

const isObject = (data) => typeof data === 'object';
const isCodeType = (type) => ['code', 'execution_output'].includes(type);

const formatContent = (data, type) => {
    const content = isObject(data) ? joinLines(...data) : data;
    return isCodeType(type) ? joinLines('```', content, '```') : content;
};

const parseAndFormatMessages = ({message}) => {
    if (!message || !message.content || !message.author) return null;

    const contentField = MESSAGE_FIELD_BY_TYPE[message.content.content_type];
    if (!contentField || !message.content[contentField]) return null;

    const content = formatContent(message.content[contentField], message.content.content_type);
    return `**${message.author.role.toUpperCase()}**: ${content}\n\n`;  // Bold the role and add a space after each message
};

const chunks = linear_conversation.map(parseAndFormatMessages).filter(Boolean);

// Create a button-like link to https://rentry.co/
const buttonLink = document.createElement('a');
buttonLink.href = 'https://rentry.co/';
buttonLink.textContent = 'Paste on Rentry.co';
buttonLink.target = '_blank';  // Open the link in a new tab
buttonLink.style.display = 'inline-block';  // Display as block for better spacing
buttonLink.style.marginBottom = '10px'; // Add some space below the button
buttonLink.style.padding = '10px 20px';
buttonLink.style.backgroundColor = '#007BFF';
buttonLink.style.color = 'white';
buttonLink.style.borderRadius = '5px';
buttonLink.style.textDecoration = 'none';
buttonLink.style.cursor = 'pointer';
buttonLink.onmouseover = () => { buttonLink.style.backgroundColor = '#0056b3'; }
buttonLink.onmouseout = () => { buttonLink.style.backgroundColor = '#007BFF'; }

document.body.appendChild(buttonLink);

// Create a textarea to display the result
const outputTextArea = document.createElement('textarea');
outputTextArea.style.width = '100%';
outputTextArea.style.height = '300px';
outputTextArea.value = joinLines(`# ${title}`, ...chunks);  // Make the title a top-level heading
document.body.appendChild(outputTextArea);
"
1kcZv6nW,Untitled,Darkolius,Python,Wednesday 6th of September 2023 03:21:21 PM CDT,"
PATH=/home/darek/PycharmProjects/dokument_parafii/dokument_parafii/bin:/home/darek/PycharmProjects/dokument_parafii/testy:/usr/local/sbin:/usr/local/bin:/usr/sbin>
* * * * * python3.10 /home/darek/PycharmProjects/dokument_parafii/testy/monitoring_cron.py > temp.txt"
DL0wuExH,darknet patch to use GPU,alejandrotecnimaq,Diff,Wednesday 6th of September 2023 03:17:05 PM CDT,"diff --git a/Makefile b/Makefile
index 63e15e6..3955f12 100644
--- a/Makefile
+++ b/Makefile
@@ -1,14 +1,17 @@
-GPU=0
-CUDNN=0
-OPENCV=0
-OPENMP=0
+GPU=1
+CUDNN=1
+OPENCV=1
+OPENMP=1
 DEBUG=0
 
-ARCH= -gencode arch=compute_30,code=sm_30 \
-      -gencode arch=compute_35,code=sm_35 \
-      -gencode arch=compute_50,code=[sm_50,compute_50] \
-      -gencode arch=compute_52,code=[sm_52,compute_52]
-#      -gencode arch=compute_20,code=[sm_20,sm_21] \ This one is deprecated?
+ARCH= -gencode=arch=compute_60,code=sm_60 \
+      -gencode=arch=compute_61,code=sm_61 \
+      -gencode=arch=compute_70,code=sm_70 \
+      -gencode=arch=compute_75,code=sm_75 \
+      -gencode=arch=compute_80,code=sm_80 \
+      -gencode=arch=compute_86,code=sm_86 \
+      -gencode=arch=compute_89,code=sm_89 \
+      -gencode=arch=compute_89,code=compute_89
 
 # This is what I use, uncomment if you know your arch and want to specify
 # ARCH= -gencode arch=compute_52,code=compute_52
@@ -42,8 +45,8 @@ CFLAGS+=$(OPTS)
 ifeq ($(OPENCV), 1) 
 COMMON+= -DOPENCV
 CFLAGS+= -DOPENCV
-LDFLAGS+= `pkg-config --libs opencv` -lstdc++
-COMMON+= `pkg-config --cflags opencv` 
+LDFLAGS+= `pkg-config --libs opencv4` -lstdc++
+COMMON+= `pkg-config --cflags opencv4` 
 endif
 
 ifeq ($(GPU), 1) 
diff --git a/src/image_opencv.cpp b/src/image_opencv.cpp
index 7511280..04103a8 100644
--- a/src/image_opencv.cpp
+++ b/src/image_opencv.cpp
@@ -9,31 +9,35 @@ using namespace cv;
 
 extern ""C"" {
 
-IplImage *image_to_ipl(image im)
-{
+Mat image_to_mat(image im)
+ {
+    assert(im.c == 3 || im.c == 1);
     int x,y,c;
-    IplImage *disp = cvCreateImage(cvSize(im.w,im.h), IPL_DEPTH_8U, im.c);
-    int step = disp->widthStep;
-    for(y = 0; y < im.h; ++y){
-        for(x = 0; x < im.w; ++x){
-            for(c= 0; c < im.c; ++c){
-                float val = im.data[c*im.h*im.w + y*im.w + x];
-                disp->imageData[y*step + x*im.c + c] = (unsigned char)(val*255);
-            }
-        }
-    }
-    return disp;
-}
+    image copy = copy_image(im);
+    constrain_image(copy);
+    if(im.c == 3) rgbgr_image(copy);
+    Mat m(im.h, im.w, CV_MAKETYPE(CV_8U, im.c));
+     for(y = 0; y < im.h; ++y){
+         for(x = 0; x < im.w; ++x){
+             for(c= 0; c < im.c; ++c){
+                float val = copy.data[c*im.h*im.w + y*im.w + x];
+                m.data[y*im.w*im.c + x*im.c + c] = (unsigned char)(val*255);
+             }
+         }
+     }
+    free_image(copy);
+    return m;
+ }
 
-image ipl_to_image(IplImage* src)
-{
-    int h = src->height;
-    int w = src->width;
-    int c = src->nChannels;
-    image im = make_image(w, h, c);
-    unsigned char *data = (unsigned char *)src->imageData;
-    int step = src->widthStep;
-    int i, j, k;
+image mat_to_image(Mat m)
+ {
+    int h = m.rows;
+    int w = m.cols;
+    int c = m.channels();
+     image im = make_image(w, h, c);
+    unsigned char *data = (unsigned char*)m.data;
+    int step = m.step;
+     int i, j, k;
 
     for(i = 0; i < h; ++i){
         for(k= 0; k < c; ++k){
@@ -42,26 +46,7 @@ image ipl_to_image(IplImage* src)
             }
         }
     }
-    return im;
-}
-
-Mat image_to_mat(image im)
-{
-    image copy = copy_image(im);
-    constrain_image(copy);
-    if(im.c == 3) rgbgr_image(copy);
 
-    IplImage *ipl = image_to_ipl(copy);
-    Mat m = cvarrToMat(ipl, true);
-    cvReleaseImage(&ipl);
-    free_image(copy);
-    return m;
-}
-
-image mat_to_image(Mat m)
-{
-    IplImage ipl = m;
-    image im = ipl_to_image(&ipl);
     rgbgr_image(im);
     return im;
 }
@@ -72,9 +57,9 @@ void *open_video_stream(const char *f, int c, int w, int h, int fps)
     if(f) cap = new VideoCapture(f);
     else cap = new VideoCapture(c);
     if(!cap->isOpened()) return 0;
-    if(w) cap->set(CV_CAP_PROP_FRAME_WIDTH, w);
-    if(h) cap->set(CV_CAP_PROP_FRAME_HEIGHT, w);
-    if(fps) cap->set(CV_CAP_PROP_FPS, w);
+    if(w) cap->set(CAP_PROP_FRAME_WIDTH, w);
+    if(h) cap->set(CAP_PROP_FRAME_HEIGHT, w);
+    if(fps) cap->set(CAP_PROP_FPS, w);
     return (void *) cap;
 }
 
@@ -123,7 +108,7 @@ void make_window(char *name, int w, int h, int fullscreen)
 {
     namedWindow(name, WINDOW_NORMAL); 
     if (fullscreen) {
-        setWindowProperty(name, CV_WND_PROP_FULLSCREEN, CV_WINDOW_FULLSCREEN);
+        setWindowProperty(name, WND_PROP_FULLSCREEN, WINDOW_FULLSCREEN);
     } else {
         resizeWindow(name, w, h);
         if(strcmp(name, ""Demo"") == 0) moveWindow(name, 0, 0);
"
JzA0PYv4,turtle_dig,aharries,Lua,Wednesday 6th of September 2023 03:09:12 PM CDT,"-- Initialize variables
local width, height, depth

-- Ask user for dimensions
write(""\nEnter the width: "")
width = tonumber(read())
write(""\nEnter the height: "")
height = tonumber(read())
write(""\nEnter the depth: "")
depth = tonumber(read())

-- Check if user entered valid dimensions
if width <= 0 or height <= 0 or depth <= 0 then
    print(""Invalid dimensions. Exiting."")
    return
end

-- Move back to starting position
local function ReturnHome()
    for i = 1, depth do
        turtle.up()
    end
end

-- Drop off items in chest
local function DropOff() 
    turtle.turnRight()
    turtle.turnRight()

    for i = 1, 16 do
        turtle.select(i)
        turtle.drop()
    end

    turtle.turnRight()
    turtle.turnRight()
end

-- Outline area to dig
for i = 1, 2 do
    for i = 2, height do
        turtle.forward()
    end
    
    turtle.turnRight()
    
    for i = 2, width do
        turtle.forward()
    end
    
    turtle.turnRight()
end

-- Begin digging
for current_depth = 1, depth do
    turtle.digDown()
    turtle.down()

    -- Dig in rows and columns to match the height and width
    for i = 1, width do
        for i = 2, height do
            turtle.dig()
            turtle.forward()
        end

        -- Exit the loop if it's the last column
        if i == width then
            break
        end
    
        -- Alternate between turning right and left to dig the next column
        if i % 2 ~= 0 then
            turtle.turnRight()
            turtle.dig()
            turtle.forward()
            turtle.turnRight()
        end
        if i % 2 == 0 then
            turtle.turnLeft()
            turtle.dig()
            turtle.forward()
            turtle.turnLeft()
        end
    end

    -- Move back to the starting position for the next layer
    turtle.turnLeft()
    for i = 2, width do
        turtle.forward()
    end
    turtle.turnLeft()
    for i = 2, height do
        turtle.forward()
    end
    turtle.turnLeft()
    turtle.turnLeft()

    -- Check if inventory is full
    for i = 1, 16 do
        local count = turtle.getItemCount(i)
        if count == 64 then
            ReturnHome()
            DropOff()
            
            -- return to mining spot
            for i = 0, current_depth do
                turtle.down()
            end
        end
    end
end

ReturnHome()
DropOff()"
n38ifw60,Untitled,tbblake,Python,Wednesday 6th of September 2023 02:58:56 PM CDT,"#!/usr/bin/env python3

import os
import getopt
import requests
import json
import sys

def main():
        apiURL='http://myzabbix.com/zabbix/api_jsonrpc.php'
        authID=""XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX""

        itemIDs=[]
        apiReq=[]
        reqNum=1
        pretty=True

        try:
                opts, args = getopt.getopt(sys.argv[1:], ""ni:"")
        except getopt.GetoptError as err:
                usage(errorText=err)
        for opt, arg in opts:
                if opt == ""-n"":
                        pretty=False
                if opt == ""-i"":
                        itemIDs.append(arg)

        if len(itemIDs) == 0:
                usage(errorText='we need at least one item ID')

        params=[]
        for itemID in itemIDs:
                params.append({""type"": ""6"",""request"": {""itemid"":itemID}})
        apiReq= { ""jsonrpc"": ""2.0"",
                ""method"": ""task.create"",
                ""params"": params,
                ""auth"": authID,
                ""id"": 1
        }

        headers = {
                'Content-type': 'application/json'
        }

        print(""Sending:"")
        if pretty:
                print(json.dumps(apiReq, indent=4, sort_keys=True))
        else:
                print(json.dumps(apiReq))
        r=requests.post(apiURL,data=json.dumps(apiReq),headers=headers)
        if r.ok:
                print(""\nReceived:"")
                if pretty:
                        print(json.dumps(json.loads(r.text), indent=4, sort_keys=True))
                else:
                        print(r.text)
        else:
                usage(errorText=f'HTTP ERROR: {r.status_code} - {r.text}')

def usage(*,errorText=None):
        print('Usage: '+os.path.basename(__file__)+' -n -i itemID\n')
        print('\t-n disable pretty printing the request and result')
        print('\t-i item ID to check, at least one is required')

        if errorText:
                print()
                print('ERROR: '+str(errorText).strip().replace('\n',' '))
        sys.exit()

if __name__ == '__main__':
        main()
"
0vfLaj3m,[site-reviews] set the assigned_posts value from an URL parameter,geminilabs,PHP,Wednesday 6th of September 2023 02:55:18 PM CDT,"/**
 * Set the assigned_posts value from an URL parameter (?assigned_post=)
 * Example: https://domain.com?assigned_post=4
 * @param array $fields
 * @return array
 */
add_filter('site-reviews/review-form/fields/hidden', function ($fields) {
    if (!isset($fields['assigned_posts']) || !isset($fields['assigned_posts']->field)) {
        return $fields;
    }
	if ($postId = intval(filter_input(INPUT_GET, 'assigned_post'))) {
        $fields['assigned_posts']->field['value'] = $postId;
    }
    return $fields;
});"
bcCDne3W,Prueba tensorflow GPU,alejandrotecnimaq,Python,Wednesday 6th of September 2023 02:35:14 PM CDT,"import tensorflow as tf

# Verifica si TensorFlow fue construido con soporte para CUDA (GPU)
print(""¿TensorFlow construido con CUDA?:"", tf.test.is_built_with_cuda())

# Verifica si TensorFlow puede acceder a una GPU
print(""¿TensorFlow puede acceder a una GPU?:"", tf.test.is_gpu_available())

# Lista las GPUs disponibles y sus capacidades
gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
    print(""GPUs disponibles:"")
    for gpu in gpus:
        print(gpu)
else:
    print(""No se encontraron GPUs disponibles."")

# Verifica la versión de CUDA y cuDNN si están disponibles
if tf.test.is_built_with_cuda():
    print(""Versión de CUDA:"", tf.sysconfig.get_build_info()['cuda_version'])
    print(""Versión de cuDNN:"", tf.sysconfig.get_build_info()['cudnn_version'])

# Crea un modelo simple con una capa convolucional
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    tf.keras.layers.MaxPooling2D((2, 2)),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(10, activation='softmax')
])

# Compila el modelo
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy')

# Crea datos de entrada y salida falsos
import numpy as np
x = np.random.random((100, 28, 28, 1))
y = np.random.randint(0, 10, size=(100,))

# Entrena el modelo
model.fit(x, y, epochs=1)

"
7t0Udr7r,Untitled,wertex15,PowerShell,Wednesday 6th of September 2023 02:22:44 PM CDT,"Коннектимся
Connect-ExchangeOnline -UserPrincipalName ***

Вытаскиваем ящики
Get-EXOMailbox  -ResultSize 10 | select Alias | Export-CSV ""C:\6.txt"" -Encoding utf8 -UseQuotes Never -Delimiter "";""

Получаем:
000881
001223
22619756
23726485
0110906
0121172
0130316
0140640
0140747
0181436

Собираем размер ящика и дату
Get-Content C:\6.txt | where {($_.Trim()).length -gt 0} | foreach {Get-EXOMailboxStatistics -Identity $_.Trim() -PropertySets all | select DisplayName,TotalItemSize,LastUserActionTime} | Export-CSV ""C:\61.txt"" -Encoding utf8 -UseQuotes Never -Delimiter "";""

Получаем
Коротаев Иван Игоревич;23.4 MB (24,534,402 bytes);28.03.2020 13:44:14
Мария Николаевна Федорова;9.304 MB (9,755,864 bytes);01.12.2020 16:30:13
Юлдашев Шерзод Фархадович;653.8 KB (669,469 bytes);16.11.2022 12:56:46


Сцепляем ящики и фио + размер + даты"
YdYkXTKZ,Untitled,pedrolizamorim,C#,Wednesday 6th of September 2023 02:06:13 PM CDT,"public static void InsertUser(int workflowTaskHandle, int workflowUserHandle, int responsavel, int superior, DataAcess dataAccess)
{
    if (workflowTaskHandle <= 0)
        throw new ArgumentNullException(""workflowTaskHandle"");
    if (workflowUserHandle <= 0)
        throw new ArgumentNullException(""workflowUserHandle"");
    if (dataAccess == null)
        throw new ArgumentNullException(""dataAccess"");

    var prms = new Param[5];
    prms[0] = new Param(""HANDLE"", dataAccess.NewHandle(AssigneeTableName), ParamType.Integer);
    prms[1] = new Param(""TAREFA"", workflowTaskHandle, ParamType.Integer);
    prms[2] = new Param(""USUARIO"", workflowUserHandle, ParamType.Integer);
    prms[3] = new Param(""RESPONSAVEL"", DBNull.Value, ParamType.Integer);
    prms[4] = new Param(""SUPERIOR"", DBNull.Value, ParamType.Integer);
    if (responsavel > 0)
        prms[3].Value = responsavel;
    if (superior > 0)
        prms[4].Value = superior;

    var sql = ""INSERT INTO Z_WFTAREFAPARTICIPANTES(HANDLE, TAREFA, USUARIO, RESPONSAVEL, SUPERIOR) VALUES(:HANDLE, :TAREFA, :USUARIO, :RESPONSAVEL, :SUPERIOR)"";

    try
    {
        dataAccess.ExecuteNonQuery(sql, prms);
    }
    catch (Exception e)
    {
        var parameters = new StringBuilder();
        foreach (var param in prms)
            parameters.AppendLine(string.Format(""{0}: {1}"", param.Name, param.Value));

        throw new Exception(string.Format(""Erro ao cadastrar participante: {0}\n{1}"", sql, parameters.ToString()));
    }
}"
5rau3jQ3,Untitled,ScoutMaester,Lua,Wednesday 6th of September 2023 01:52:23 PM CDT,"length = 0
width = 0
height = 0

print ""Length?""
length = tonumber(read())
print ""Height?""
height = tonumber(read())
print ""Width?""
width = tonumber(read())


function DigHeight()
    for i = length,2,-1 do
        turtle.digUp()
        turtle.dig()
        turtle.up()
    end
    turtle.dig()
    for i = height,2,-1 do
        turtle.down()
    end
end

function DigWidth()
    for i = width,2,-1 do
        turtle.turnRight()
        turtle.dig()
        turtle.forward()
        turtle.turnLeft()
        DigHeight()
    end
end

for i = length,1,-1 do
    DigHeight()
    DigWidth()
    turtle.turnLeft()
    for i = width,2,-1 do
        turtle.forward()
    end
    turtle.turnRight()
    turtle.forward()
end
for i = length,2,-1 do
    turtle.back()
end"
Gu4UzFJv,lesson14_321,Petro_zzz,C++,Wednesday 6th of September 2023 01:30:43 PM CDT,"#include <iostream>
#include <conio.h>
using namespace std;

void task1() {
	int a = 55;
	int b = 43;
	int c, d;
	c = a++;
	d = ++b;
	cout << c << "" "" << d << endl;
}

void dowhile_task0() {
	int k = 0, n = 0;
	do {
		n = 0;
		do {
			cout << ""* "";
			n++;
		} while (n <= k);
		cout << endl;
		k++;
	} while (k < 5);
}

void while_task0() {
	int k = 0, n = 0;
	while (k <= 5) {
		n = 0;
		while (n < k) {
			cout << ""*"";
			n++;
		}
		cout << endl;
		k++;
	}
}

void for_task0() {
	for (int k = 0; k <= 5; k++) {
		for (int n = 0; n < k; n++) {
			cout << ""*"";
		}
		cout << endl;
	}
}

void task3() {

	for (int n = 1; n <= 500; n++) {
		if (n % 3 == 0)
			continue;
		if (n % 7 == 0)
			continue;
		if (n % 27 == 0)
			continue;
		if (n % 29 == 0)
			continue;
		//cout << n << ((n != 500)? "", "" : """");
		cout << n;
		if (n != 500)
			cout << "", "";
	}
	cout << endl;
}

void fibbo() {
	int f_old = 1;     // F1
	int f_old_old = 0; // F0
	int f = 0;
	cout << f_old_old << "" "";
	cout << f_old << "" "";
	for (int n = 0; n <= 20; n++) {
		f = f_old + f_old_old;
		cout << f << "" "";
		f_old_old = f_old;
		f_old = f;
	}
	cout << endl;
}

void lucky_ticket() {
	int a1, a2, a3, a4, a5, a6;
	int val, num_lucky = 0;

	for (int n = 1; n < 1000000; n++) {
		val = n;

		a6 = val % 10;
		val = val / 10;

		a5 = val % 10;
		val = val / 10;

		a4 = val % 10;
		val = val / 10;

		a3 = val % 10;
		val = val / 10;

		a2 = val % 10;
		val = val / 10;

		a1 = val % 10;

		if (a1 + a2 + a3 == a4 + a5 + a6) {
			cout << a1 << a2 << a3 << "" "" << a4 << a5 << a6 << endl;
			num_lucky++;
			continue;
		} 
		if ((a1 + a2 == a3 + a4 + a5 + a6) ||
			(a3 + a4 == a1 + a2 + a5 + a6) ||
			(a5 + a6 == a1 + a2 + a3 + a4)) {
			//cout << a1 << a2 << a3 << "" "" << a4 << a5 << a6 << endl;
			//num_lucky++;
			continue;
		}
		if (((a1 - a2) == 1) && ((a1 - a3) == 2) &&
			((a1 - a4) == 3) && ((a1 - a5) == 4) &&
			((a1 - a6) == 5)) {
			//cout << a1 << a2 << a3 << "" "" << a4 << a5 << a6 << endl;
			//num_lucky++;
			continue;
		}
	}
	cout << endl << num_lucky << endl;
}

int main() {
	//task1();
	//task1();
	//fibbo();
	lucky_ticket();
	return 0;
	
}"
BfunZgKU,6174,bartekltg,C++,Wednesday 6th of September 2023 01:16:01 PM CDT,"#include <iostream>
#include <cstdint>
#include <cstdint>

#include <algorithm>

using namespace std;

int K( int n){
    array<uint8_t, 4> digits;
    for (int i=0; i<4;i++){
        digits[i]=n%10;
        n/=10;
    }
    sort(begin(digits),end(digits));
    return 999*(digits[3]-digits[0]) + 90*(digits[2]-digits[1]);
}

vector<int> Distance;

void fix_distance(int i){
    if (Distance[i]!=-1)
        return; //I did nothing and my job is done
    int Next = K(i);
    fix_distance(Next);
    Distance[i]=Distance[Next]+1;
}


int main()
{
    Distance = vector<int> (10000,-1);
    Distance [ 6174] =0;
    Distance [ 0] =0;
    for (int i=0; i<size(Distance); i++){
        fix_distance(i);
    };
    cout<<""Number distance next_number\n"";
    for (int i=0; i<size(Distance); i++){
        if (K(i)!=0)
            cout<<i<<"" ""<<Distance[i]<<"" ""<<K(i)<<'\n';
    };
    return 0;
}"
Bz0GJ3Kf,01. OOP Basics,193030,C++,Wednesday 6th of September 2023 01:14:59 PM CDT,"#include <iostream>
#include <string>

class Person {
 public:
  std::string first;
  std::string last;

  void printFullName() { std::cout << first << "" "" << last << std::endl; }
};

int main() {
  Person p;
  p.first = ""Caleb"";
  p.last = ""Curry"";
  std::string first = ""Caleb"";
  std::string last = ""Curry"";

  p.printFullName();
  return 0;

  // class - describes the structure
  // object - an instance of the structure
  // instance - other name of an object
  // instantiaining
  // data members - variables
  // methods - functions
}"
2YLaPyKN,09. Left and Right Sum,Spocoman,C++,Wednesday 6th of September 2023 12:58:50 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int num;
    cin >> num;

    int number;

    int  leftSum = 0;
    int rightSum = 0;

    for (int i = 0; i < num; i++)
    {
        cin >> number;
        leftSum += number;
    }

    for (int i = 0; i < num; i++)
    {
        cin >> number;
        rightSum += number;
    }
        
    if (leftSum == rightSum) {
        cout << ""Yes, sum = "" << leftSum << endl;
    }
    else {
        cout << ""No, diff = "" << abs(leftSum - rightSum) << endl;
    }

    return 0;
}"
BvEWTuk6,08. Number sequence,Spocoman,C++,Wednesday 6th of September 2023 12:57:42 PM CDT,"#include <iostream>
#include <climits>

using namespace std;

int main() {
    int numberCount;
    cin >> numberCount;

    int number;

    int maxNumber = INT_MIN;
    int minNumber = INT_MAX;

    for (int i = 0; i < numberCount; i++)
    {
        cin >> number;

        if (number < minNumber) {
            minNumber = number;
        }
        if (number > maxNumber) {
            maxNumber = number;
        }
    }

    cout << ""Max number: "" << maxNumber << endl;
    cout << ""Min number: "" << minNumber << endl;

    return 0;
}"
0AQda6F2,plot_feature_importance,Urchien,Python,Wednesday 6th of September 2023 12:57:18 PM CDT,"def plot_feature_importance(best_model):
    """"""
    Функция для расчета и визуализации важности признаков.

    Параметры:
    - best_model: Модель, содержащаяся в конвейере

    """"""

    # Получение модели из конвейера
    model = best_model.named_steps['model']

    # Проверка, поддерживает ли модель расчет важности признаков
    if hasattr(model, 'feature_importances_'):
        importances = model.feature_importances_
        importances_df = pd.DataFrame(importances, index=features_test.columns, columns=['Важность признака'])
        importances_df = importances_df.sort_values(by='Важность признака', ascending=False)
        
        # Изменение названия столбца индекса
        importances_df.index.name = 'Признак'
        
        # Построение графика важности признаков
        plt.figure(figsize=(15, 5))
        plt.title('Исследование важности признаков', fontsize=14)
        plt.bar(importances_df.index, importances_df['Важность признака'])
        plt.xticks(rotation=90)
        plt.xlabel('Признаки')
        plt.ylabel('Важность признака')
        plt.show()
        
        display(importances_df)
    else:
        print(""Модель не поддерживает расчет важности признаков."")"
Scp2xKhz,07. Sum Numbers,Spocoman,C++,Wednesday 6th of September 2023 12:56:09 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int numberCount;
    cin >> numberCount;
    
    int number;

    int sum = 0;

    for (int i = 0; i < numberCount; i++) {
        cin >> number;
        sum += number;
    }

    cout << sum << endl;

    return 0;
}"
jswuLg81,06. Vowels Sum,Spocoman,C++,Wednesday 6th of September 2023 12:54:50 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string str;
    getline(cin,str);

    int sum = 0;

    for (int i = 0; i < str.length(); i++) {
        if (str[i] == 'a') {
            sum += 1;
        }
        else if (str[i] == 'e') {
            sum += 2;
        }
        else if (str[i] == 'i') {
            sum += 3;
        }
        else if (str[i] == 'o') {
            sum += 4;
        }
        else if (str[i] == 'u') {
            sum += 5;
        }
    }

    cout << sum << endl;

    return 0;
}

Решение с тернарен оператор:

#include <iostream>
#include <string>

using namespace std;

int main() {
    string str;
    getline(cin,str);

    int sum = 0;

    for (int i = 0; i < str.length(); i++) {
       
        sum +=
            str[i] == 'a' ? 1 :
            str[i] == 'e' ? 2 :
            str[i] == 'i' ? 3 :
            str[i] == 'o' ? 4 :
            str[i] == 'u' ? 5 : 0;
    }

    cout << sum << endl;

    return 0;
}"
2Dwr10Sd,05. Character Sequence,Spocoman,C++,Wednesday 6th of September 2023 12:51:10 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string str;
    getline(cin,str);

    for (int i = 0; i < str.length(); i++) {
        cout << str[i] << endl;
    }

    return 0;
}"
vUnSh1Xf,04. Even Powers of 2,Spocoman,C++,Wednesday 6th of September 2023 12:49:58 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int number;
    cin >> number;

    for (int i = 0; i <= number; i += 2) {
        cout << pow(2, i) << endl;
    }

    return 0;
}"
eNFsYRQy,03. Numbers 1...N with Step 3,Spocoman,C++,Wednesday 6th of September 2023 12:48:35 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int number;
    cin >> number;

    for (int i = 1; i <= number; i += 3) {
        cout << i << endl;
    }

    return 0;
}"
h0m1rQj8,02. Numbers N...1,Spocoman,C++,Wednesday 6th of September 2023 12:47:26 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int number;
    cin >> number;

    for (int i = number; i >= 1; i--) {
        cout << i << endl;
    }

    return 0;
}"
HhQ3Vx7E,01. Numbers from 1 to 100,Spocoman,C++,Wednesday 6th of September 2023 12:45:48 PM CDT,"#include <iostream>

using namespace std;

int main() {
    for (int i = 1; i <= 100; i++) {
        cout << i << endl;
    }

    return 0;
}"
byUTj16U,10. Multiply by 2,Spocoman,C++,Wednesday 6th of September 2023 12:42:50 PM CDT,"#include <iostream>
#include<iomanip>

using namespace std;

int main() {
	double number;

	while (true) {
		cin >> number;

		if (number >= 0) {
			cout << ""Result: "" << fixed << setprecision(2) << number * 2 << endl;
		}
		else {
			cout << ""Negative number!"";
			break;
		}
	}

    return 0;
}"
QFPhFsZj,09. Numbers from 1 to 10,Spocoman,C++,Wednesday 6th of September 2023 12:41:19 PM CDT,"Решение с for:

#include <iostream>

using namespace std;

int main() {
	for (int i = 1; i < 11; i++) {
		cout << i << endl;
	}

    return 0;
}

Решение с while:

#include <iostream>

using namespace std;

int main() {
    int num = 1;

    while (num < 11) {
        cout << num << endl;
        num++;
    }

    return 0;
}

Решение с do/while:

#include <iostream>

using namespace std;

int main() {
    int num = 1;

    do {
        cout << num << endl;
        num++;
    } while (num < 11);

    return 0;
}"
iLA45jfq,Testing LaTeX alignment,ptkrisada,Latex,Wednesday 6th of September 2023 12:38:49 PM CDT,"% For testing LaTeX alignment
\begin{align*}
&first   &second    &=third   &&=forth   &&fifth\\
&1L      &2R        &=3L      &&=4L      &&5L\\
&\,      &\text{x}  &=\rlap{\text{This line is a long wrap text.}}
\end{align*}"
pbSZLFSz,Single left-click an app icon in the taskbar to open last when multiple windows of it are active,Lorenzo501,Autohotkey,Wednesday 6th of September 2023 12:25:32 PM CDT,"#Requires AutoHotkey 2.0.7
#NoTrayIcon

; The only argument that's usually given is WinTitle but can add 3 other optional string arguments seperated with a comma
;MouseIsOver(params_WinTitle_WinText_ExcludeTitle_ExcludeText*) => (MouseGetPos(,, &winId), winId = WinExist(params_WinTitle_WinText_ExcludeTitle_ExcludeText*))

; This makes dragging icons in the taskbar stop working (the other solution does not)
;#HotIf MouseIsOver(""ahk_class Shell_TrayWnd"")
;$LButton::Send(""{Blind}^{LButton}"")

/* For double click use this instead
#HotIf MouseIsOver(""ahk_class Shell_TrayWnd"")
~$LButton::
{
    Try if (A_TimeSincePriorHotkey < 250 && A_PriorHotkey = ThisHotkey)
        Send(""{Blind}^{LButton}"")
}*/

MouseIsOverCtrl(winTitle, classNN?)
{
    win := 0
    CoordMode(""Mouse"")
    try MouseGetPos(,, &win, &ctrl)
    return WinExist(winTitle "" ahk_id"" win) && ctrl ~= classNN
}

; ClassNN argument consists of three classes seperated by the | (OR) symbol, the first two for W11 and the third one for W10 (can be seen by using WinSpy++ on the app section in taskbar)
#HotIf MouseIsOverCtrl(""ahk_class Shell_TrayWnd"", ""iS)\QWindows.UI.Composition.DesktopWindowContentBridge1\E|MSTaskSwWClass1|MSTaskListWClass"")
*LButton::
{
    SetKeyDelay(-1)
    SendEvent(""{Blind}^{Click L D}"")
    KeyWait(""LButton"")
    SendEvent(""{Blind}^{Click L U}"")
}"
