id,title,username,language,date,content
fLv1ZHLP,Untitled,uwuplayer,Python,Monday 20th of November 2023 12:01:01 PM CDT,"dicc = {""Alejandro"": 22, ""Maria"":28,""Juán"":26,""Luís"":23}

for i,j in dicc.items():
    print(f""Nombre: {i} edad: {j}"")"
0en0m7jS,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 20th of November 2023 11:24:39 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT839084"
VVmGAYEf,Untitled,vpeter,Bash,Monday 20th of November 2023 11:22:32 AM CDT,"Nov 20 17:21:04 CoreELEC systemd[1]: Starting remote-config.service...
Nov 20 17:21:04 CoreELEC remote-config[767]: using meson-remote, conf from /storage/.config
Nov 20 17:21:04 CoreELEC kernel: meson-ir ff808040.meson-remote: meson_ir_get_custom_tables:can't find match custom
Nov 20 17:21:04 CoreELEC kernel: ir_keypad as /devices/platform/ff808040.meson-remote/input/input4
Nov 20 17:21:04 CoreELEC remote-config[767]: configuring remote with /storage/.config/remote.conf
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:factory_code  7f800000
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:work_mode  00000000
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_enable  00000001
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_delay  00000078
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_peroid  00000021
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:release_delay  00000079
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:debug_enable  00000001
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:fn_key_scancode  00000052
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:left_key_scancode  00000025
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:right_key_scancode  00000027
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:up_key_scancode  00000026
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:down_key_scancode  00000028
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:ok_key_scancode  0000000d
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x51, keycode = 116
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x52, keycode = 90
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x53, keycode = 172
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x26, keycode = 103
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x25, keycode = 105
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0xd, keycode = 28
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x27, keycode = 106
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x28, keycode = 108
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x1b, keycode = 1
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x49, keycode = 46
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x41, keycode = 104
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x4e, keycode = 115
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x42, keycode = 109
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x56, keycode = 114
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x44, keycode = 14
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x4d, keycode = 113
Nov 20 17:21:04 CoreELEC kernel: meson-ir ff808040.meson-remote: add custom_code 0x00007F80 to ir map table
Nov 20 17:21:04 CoreELEC systemd[1]: remote-config.service: Deactivated successfully.
Nov 20 17:21:04 CoreELEC systemd[1]: Finished remote-config.service.
"
tCrA7zkZ,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 20th of November 2023 11:19:46 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
laleyfm2p:EbNHTq on 212.224.93.130
You can connect via SSH.
Regards"
73FUZfWC,Untitled,Chudovische,JavaScript,Monday 20th of November 2023 11:19:28 AM CDT,"const {OpenAI} = require(""openai"");
const openai = new OpenAI({apiKey: OpenAiAPIKey});"
WE78QkSE,RLS Example,Larnu,T-SQL,Monday 20th of November 2023 11:15:35 AM CDT,"USE Sandbox;
Go
/* This Script assumes it is being run as a sysadmin, or at least a db_owner */

CREATE USER Jane WITHOUT LOGIN;
CREATE USER John WITHOUT LOGIN;
CREATE USER Sarah WITHOUT LOGIN;
GO

CREATE TABLE dbo.SomeTable (SomeID int IDENTITY(1,1),
                            SomeUser sysname NOT NULL,
                            SomeOtherUser sysname NULL,
                            SomeString varchar(3) NULL,
                            SomeDate date);
GO
GRANT SELECT ON dbo.SomeTable TO Jane;
GRANT SELECT ON dbo.SomeTable TO John;
GRANT SELECT ON dbo.SomeTable TO Sarah;
GO
CREATE FUNCTION dbo.tvf_SomeTable_SecPred (@SomeUser sysname, @SomeOtherUser sysname)
RETURNS TABLE
WITH SCHEMABINDING 
AS
    RETURN SELECT 1 AS SecPred
    WHERE USER_NAME() IN (@SomeUser,@SomeOtherUser)
       OR USER_NAME() = 'Jane'
       OR USER_NAME() = 'dbo';
GO

CREATE SECURITY POLICY SomeFilter
ADD FILTER PREDICATE dbo.tvf_SomeTable_SecPred(SomeUser,SomeOtherUser)
ON dbo.SomeTable
WITH (STATE = ON);
GO

INSERT INTO dbo.SomeTable (SomeUser,SomeOtherUser,SomeString,SomeDate)
VALUES('John','Sarah','abc',GETDATE()),
      ('Jim','Sarah','def',GETDATE()),
      ('Jane',NULL,'xyz',GETDATE()),
      ('Sarah','Jane',NULL,GETDATE());
GO

SELECT *
FROM dbo.SomeTable;
GO

CREATE PROC dbo.SomeProc @SomeUser sysname, @SomeOtherUser sysname = NULL AS
BEGIN
    SELECT SomeID,
           SomeUser,
           SomeOtherUser,
           SomeString,
           SomeDate
    FROM dbo.SomeTable
    WHERE SomeUser = @SomeUser
       OR SomeOtherUser = @SomeOtherUser;
END;
GO
GRANT EXECUTE ON dbo.SomeProc TO Jane;
GRANT EXECUTE ON dbo.SomeProc TO John;
GRANT EXECUTE ON dbo.SomeProc TO Sarah;
GO
SELECT * FROM dbo.SomeTable; --Returns all the rows, dbo is always allowed
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, dbo is allowed
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 3 rows, dbo is allowed
GO

--Try as Jane;
EXECUTE AS USER = 'Jane';
GO
SELECT * FROM dbo.SomeTable; --Returns all the rows, Jane is always allowed
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, Jane always allowed
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 3 rows, Jane always allowed
GO
REVERT;
GO
--Try as John
EXECUTE AS USER = 'John';
GO
SELECT * FROM dbo.SomeTable; --Returns only rows where John is SomeUser (1 row) (no rows where they are SomeOtherUser)
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns no rows, John isn't Jim or Sarah (values of columns on the row)
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 1 row, where John is SomeUser
GO
REVERT;
GO

--Try as Sarah
EXECUTE AS USER = 'Sarah';
GO
SELECT * FROM dbo.SomeTable; --Returns only rows where Sarah is SomeUser (1 row) or SomeOtherUser (2 rows)
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, Sarah is the OtherUser
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 2 rows, Sarah is the User
GO
REVERT;


GO
DROP PROC dbo.SomeProc;
DROP SECURITY POLICY SomeFilter;
DROP TABLE dbo.SomeTable;
DROP FUNCTION dbo.tvf_SomeTable_SecPred;
DROP USER Jane;
DROP USER John;
DROP USER Sarah;"
2HF6s5Vy,SIM7600 GPS,uzielmaker,C++,Monday 20th of November 2023 11:08:20 AM CDT,"#include ""Waveshare_SIM7600.h""

// Pin definition
int POWERKEY = 2;

void setup() {
  Serial.begin(9600);
  sim7600.PowerOn(POWERKEY);
  // sim7600.GPSPositioning();
}

void loop() {
  sim7600.GPSPositioning();
  delay(10000);
}"
LKWV9Kes,Untitled,Tomcatchriss,Java,Monday 20th of November 2023 11:00:42 AM CDT,"<<<<<<<<1b3db31258e4be17575239c5ef0a3cd24623b50d<<<<
Mon, 20 Nov 2023 14:30:16 +0000
Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 2308376/134217728
======
Error Class: wcf\system\exception\ErrorException
Error Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
Error Code: 0
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/WCF.class.php (368)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""handleError"",""class"":""wcf\\system\\WCF"",""type"":""::"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""require"",""class"":"""",""type"":"""",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCFACP.class.php"",""line"":59,""function"":""runBootstrappers"",""class"":""wcf\\system\\WCF"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php"",""line"":23,""function"":""__construct"",""class"":""wcf\\system\\WCFACP"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":9,""args"":[""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php""],""function"":""require_once"",""class"":"""",""type"":""""}]
<<<<

<<<<<<<<dfc4b7b049067d9de3d5c631dfcbbd13116b5528<<<<
Mon, 20 Nov 2023 14:30:38 +0000
Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 2299912/134217728
======
Error Class: wcf\system\exception\ErrorException
Error Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
Error Code: 0
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/WCF.class.php (368)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""handleError"",""class"":""wcf\\system\\WCF"",""type"":""::"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""require"",""class"":"""",""type"":"""",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCFACP.class.php"",""line"":59,""function"":""runBootstrappers"",""class"":""wcf\\system\\WCF"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php"",""line"":23,""function"":""__construct"",""class"":""wcf\\system\\WCFACP"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":9,""args"":[""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php""],""function"":""require_once"",""class"":"""",""type"":""""}]
<<<<

<<<<<<<<c4c5089e2393d8e2149488f130736a213fa1738c<<<<
Mon, 20 Nov 2023 14:30:46 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3053240/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<36f4af77458f4acf85cbcbd6b4deafc07ee0b365<<<<
Mon, 20 Nov 2023 14:31:32 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3335488/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<f66c3cd38122fd1fce6aa2e16c3e6f9c02d6c4f1<<<<
Mon, 20 Nov 2023 14:39:53 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3338960/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<3a975e62be473f848335e5b869d92ed10c1eba18<<<<
Mon, 20 Nov 2023 16:19:18 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3445528/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<32c091d5bb9f8876988ffefbd1d0607c6a7ff7c5<<<<
Mon, 20 Nov 2023 16:51:23 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3532536/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

"
VrdrxF5s,ejercicio01,fgallego,C++,Monday 20th of November 2023 10:52:38 AM CDT,"#include <cstdint>
#include <utility>

// Tipo Matriz
   // Construir
   // Acceder a los elementos
struct Matrix{};

Matrix train(Matrix X, Matrix Y, std::size_t const maxiter) {
   // Vector w
   // Input = Matriz X (x1, x2... xN)
   // Output = Matriz Y (vector Y)

   // Repetir hasta maxiter iteraciones
      // Multiplicar (p.s.) todas las entradas por w (vector de pesos)
      // Comparar errores y contabilizarlos (h(X) == y)
         // Si 0 errores he terminado. Devuelvo w
         // Si hay errores, eliWo uno aleatorio y corrijo
            // w' <- w + yx
            // Si w' es mejor que wbest -> wbest = w'

   // Devolver wbest
}

std::pair<Matrix, Matrix> readFromCSV() {
   // Rellenar y devolver una matriz de prueba
}

int main() {
   auto [X, Y] = readFromCSV();
   // Entrenar
   // Mostrar el resultado

   return 0;
}"
UMT6S2Fw,acc char,StormDev2,C#,Monday 20th of November 2023 10:21:29 AM CDT,"void OnFirstLogin(Player* player)
    {
        if (player && !player->GetSession()->IsPremiumAccount())
        {
            bool hasCharacters = check_characters_count(player);

            if (!hasCharacters)
            {
                player->GetSession()->SetAccountPremium(1209600);
            }
        }
    }

    bool check_characters_count(Player* player)
    {
        QueryResult result = CharacterDatabase.PQuery(""SELECT COUNT(guid) FROM characters WHERE account = %u"", player->GetSession()->GetAccountId());

        if (result)
        {
            Field* fields = result->Fetch();
            uint32 characters_count = fields[0].GetUInt32();

            if (characters_count < 1)
                return true;
        }

        return false;
    }"
xy3ZZd4q,shazam_aiogram_bug,FanaticExplorer,Python,Monday 20th of November 2023 10:15:05 AM CDT,"(venv) PS D:\Python\SongRecognizeBot> pip install aiogram
Collecting aiogram
  Using cached aiogram-3.1.1-py3-none-any.whl.metadata (7.1 kB)
Collecting aiofiles~=23.1.0 (from aiogram)
  Using cached aiofiles-23.1.0-py3-none-any.whl (14 kB)
Collecting aiohttp~=3.8.5 (from aiogram)
  Using cached aiohttp-3.8.6-cp311-cp311-win_amd64.whl.metadata (7.9 kB)
Collecting certifi>=2023.7.22 (from aiogram)
  Using cached certifi-2023.11.17-py3-none-any.whl.metadata (2.2 kB)
Collecting magic-filter~=1.0.11 (from aiogram)
  Using cached magic_filter-1.0.12-py3-none-any.whl.metadata (1.5 kB)
Collecting pydantic<2.4,>=2.1.1 (from aiogram)
  Using cached pydantic-2.3.0-py3-none-any.whl.metadata (148 kB)
Collecting typing-extensions~=4.7.1 (from aiogram)
  Using cached typing_extensions-4.7.1-py3-none-any.whl.metadata (3.1 kB)
Collecting attrs>=17.3.0 (from aiohttp~=3.8.5->aiogram)
  Using cached attrs-23.1.0-py3-none-any.whl (61 kB)
Collecting charset-normalizer<4.0,>=2.0 (from aiohttp~=3.8.5->aiogram)
  Using cached charset_normalizer-3.3.2-cp311-cp311-win_amd64.whl.metadata (34 kB)
Collecting multidict<7.0,>=4.5 (from aiohttp~=3.8.5->aiogram)
  Using cached multidict-6.0.4-cp311-cp311-win_amd64.whl (28 kB)
Collecting async-timeout<5.0,>=4.0.0a3 (from aiohttp~=3.8.5->aiogram)
  Using cached async_timeout-4.0.3-py3-none-any.whl.metadata (4.2 kB)
Collecting yarl<2.0,>=1.0 (from aiohttp~=3.8.5->aiogram)
  Using cached yarl-1.9.2-cp311-cp311-win_amd64.whl (60 kB)
Collecting frozenlist>=1.1.1 (from aiohttp~=3.8.5->aiogram)
  Using cached frozenlist-1.4.0-cp311-cp311-win_amd64.whl.metadata (5.3 kB)
Collecting aiosignal>=1.1.2 (from aiohttp~=3.8.5->aiogram)
  Using cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB)
Collecting annotated-types>=0.4.0 (from pydantic<2.4,>=2.1.1->aiogram)
  Using cached annotated_types-0.6.0-py3-none-any.whl.metadata (12 kB)
Collecting pydantic-core==2.6.3 (from pydantic<2.4,>=2.1.1->aiogram)
  Using cached pydantic_core-2.6.3-cp311-none-win_amd64.whl.metadata (6.6 kB)
Collecting idna>=2.0 (from yarl<2.0,>=1.0->aiohttp~=3.8.5->aiogram)
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Using cached aiogram-3.1.1-py3-none-any.whl (462 kB)
Using cached aiohttp-3.8.6-cp311-cp311-win_amd64.whl (322 kB)
Using cached certifi-2023.11.17-py3-none-any.whl (162 kB)
Using cached magic_filter-1.0.12-py3-none-any.whl (11 kB)
Using cached pydantic-2.3.0-py3-none-any.whl (374 kB)
Using cached pydantic_core-2.6.3-cp311-none-win_amd64.whl (1.7 MB)
Using cached annotated_types-0.6.0-py3-none-any.whl (12 kB)
Using cached async_timeout-4.0.3-py3-none-any.whl (5.7 kB)
Using cached charset_normalizer-3.3.2-cp311-cp311-win_amd64.whl (99 kB)
Using cached frozenlist-1.4.0-cp311-cp311-win_amd64.whl (44 kB)
Installing collected packages: typing-extensions, multidict, magic-filter, idna, frozenlist, charset-normalizer, certifi, attrs, async-timeout, annotated-types, 
aiofiles, yarl, pydantic-core, aiosignal, pydantic, aiohttp, aiogram
Successfully installed aiofiles-23.1.0 aiogram-3.1.1 aiohttp-3.8.6 aiosignal-1.3.1 annotated-types-0.6.0 async-timeout-4.0.3 attrs-23.1.0 certifi-2023.11.17 char
set-normalizer-3.3.2 frozenlist-1.4.0 idna-3.4 magic-filter-1.0.12 multidict-6.0.4 pydantic-2.3.0 pydantic-core-2.6.3 typing-extensions-4.7.1 yarl-1.9.2
(venv) PS D:\Python\SongRecognizeBot> pip install shazamio
Collecting shazamio
  Using cached shazamio-0.4.0.1-py3-none-any.whl (32 kB)
Collecting aiofiles<23.0.0,>=22.1.0 (from shazamio)
  Using cached aiofiles-22.1.0-py3-none-any.whl (14 kB)
Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in d:\python\songrecognizebot\venv\lib\site-packages (from shazamio) (3.8.6)
Collecting anyio<4.0.0,>=3.6.2 (from shazamio)
  Using cached anyio-3.7.1-py3-none-any.whl.metadata (4.7 kB)
Collecting dataclass-factory==2.16 (from shazamio)
  Using cached dataclass_factory-2.16-py3-none-any.whl (29 kB)
Collecting numpy<2.0.0,>=1.24.0 (from shazamio)
  Using cached numpy-1.26.2-cp311-cp311-win_amd64.whl.metadata (61 kB)
Collecting pydantic<2.0.0,>=1.10.2 (from shazamio)
  Using cached pydantic-1.10.13-cp311-cp311-win_amd64.whl.metadata (150 kB)
Collecting pydub<0.26.0,>=0.25.1 (from shazamio)
  Using cached pydub-0.25.1-py2.py3-none-any.whl (32 kB)
Collecting pytest<8.0.0,>=7.2.0 (from shazamio)
  Using cached pytest-7.4.3-py3-none-any.whl.metadata (7.9 kB)
Collecting pytest-asyncio<0.21.0,>=0.20.3 (from shazamio)
  Using cached pytest_asyncio-0.20.3-py3-none-any.whl (12 kB)
Requirement already satisfied: attrs>=17.3.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (23.1.0)
Requirement already satisfied: charset-normalizer<4.0,>=2.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (3.3.2)  
Requirement already satisfied: multidict<7.0,>=4.5 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (6.0.4)
Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (4.0.3)   
Requirement already satisfied: yarl<2.0,>=1.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.9.2)
Requirement already satisfied: frozenlist>=1.1.1 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.4.0)
Requirement already satisfied: aiosignal>=1.1.2 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.3.1)
Requirement already satisfied: idna>=2.8 in d:\python\songrecognizebot\venv\lib\site-packages (from anyio<4.0.0,>=3.6.2->shazamio) (3.4)
Collecting sniffio>=1.1 (from anyio<4.0.0,>=3.6.2->shazamio)
  Using cached sniffio-1.3.0-py3-none-any.whl (10 kB)
Requirement already satisfied: typing-extensions>=4.2.0 in d:\python\songrecognizebot\venv\lib\site-packages (from pydantic<2.0.0,>=1.10.2->shazamio) (4.7.1)
Collecting iniconfig (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
Collecting packaging (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached packaging-23.2-py3-none-any.whl.metadata (3.2 kB)
Collecting pluggy<2.0,>=0.12 (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached pluggy-1.3.0-py3-none-any.whl.metadata (4.3 kB)
Collecting colorama (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached colorama-0.4.6-py2.py3-none-any.whl (25 kB)
Using cached anyio-3.7.1-py3-none-any.whl (80 kB)
Using cached numpy-1.26.2-cp311-cp311-win_amd64.whl (15.8 MB)
Using cached pydantic-1.10.13-cp311-cp311-win_amd64.whl (2.1 MB)
Using cached pytest-7.4.3-py3-none-any.whl (325 kB)
Using cached pluggy-1.3.0-py3-none-any.whl (18 kB)
Using cached packaging-23.2-py3-none-any.whl (53 kB)
Installing collected packages: pydub, sniffio, pydantic, pluggy, packaging, numpy, iniconfig, dataclass-factory, colorama, aiofiles, pytest, anyio, pytest-asynci
o, shazamio
  Attempting uninstall: pydantic
    Found existing installation: pydantic 2.3.0
    Uninstalling pydantic-2.3.0:
      Successfully uninstalled pydantic-2.3.0
  Attempting uninstall: aiofiles
    Found existing installation: aiofiles 23.1.0
    Uninstalling aiofiles-23.1.0:
      Successfully uninstalled aiofiles-23.1.0
ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependen
cy conflicts.
aiogram 3.1.1 requires aiofiles~=23.1.0, but you have aiofiles 22.1.0 which is incompatible.
aiogram 3.1.1 requires pydantic<2.4,>=2.1.1, but you have pydantic 1.10.13 which is incompatible.
Successfully installed aiofiles-22.1.0 anyio-3.7.1 colorama-0.4.6 dataclass-factory-2.16 iniconfig-2.0.0 numpy-1.26.2 packaging-23.2 pluggy-1.3.0 pydantic-1.10.1
3 pydub-0.25.1 pytest-7.4.3 pytest-asyncio-0.20.3 shazamio-0.4.0.1 sniffio-1.3.0
"
Lw28a94P,Untitled,Alex-KS02,Java,Monday 20th of November 2023 10:12:06 AM CDT,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class GoogleLoginExample {

    // Замените эти значения на свои данные
    private static final String CLIENT_ID = ""YOUR_CLIENT_ID"";
    private static final String CLIENT_SECRET = ""YOUR_CLIENT_SECRET"";
    private static final String REDIRECT_URI = ""YOUR_REDIRECT_URI"";
    private static final String AUTH_URL = ""https://accounts.google.com/o/oauth2/auth"";
    private static final String TOKEN_URL = ""https://accounts.google.com/o/oauth2/token"";

    public static void main(String[] args) throws IOException {
        // Шаг 1: Получение URL для аутентификации
        String authUrl = getAuthorizationUrl();
        System.out.println(""Пожалуйста, перейдите по следующей ссылке для входа:"");
        System.out.println(authUrl);

        // Шаг 2: Получение кода авторизации от пользователя
        System.out.print(""Введите код авторизации: "");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String authorizationCode = br.readLine().trim();

        // Шаг 3: Получение токена доступа
        String accessToken = getAccessToken(authorizationCode);
        System.out.println(""Токен доступа: "" + accessToken);
    }

    private static String getAuthorizationUrl() {
        Map<String, String> params = new HashMap<>();
        params.put(""response_type"", ""code"");
        params.put(""client_id"", CLIENT_ID);
        params.put(""redirect_uri"", REDIRECT_URI);
        params.put(""scope"", ""https://www.googleapis.com/auth/userinfo.profile"");

        StringBuilder urlBuilder = new StringBuilder(AUTH_URL);
        urlBuilder.append(""?"");
        for (Map.Entry<String, String> entry : params.entrySet()) {
            urlBuilder.append(entry.getKey()).append(""="").append(entry.getValue()).append(""&"");
        }
        return urlBuilder.toString();
    }

    private static String getAccessToken(String authorizationCode) throws IOException {
        Map<String, String> params = new HashMap<>();
        params.put(""code"", authorizationCode);
        params.put(""client_id"", CLIENT_ID);
        params.put(""client_secret"", CLIENT_SECRET);
        params.put(""redirect_uri"", REDIRECT_URI);
        params.put(""grant_type"", ""authorization_code"");

        StringBuilder postData = new StringBuilder();
        for (Map.Entry<String, String> param : params.entrySet()) {
            if (postData.length() != 0) postData.append('&');
            postData.append(param.getKey()).append('=').append(param.getValue());
        }

        URL tokenUrl = new URL(TOKEN_URL);
        String response = HttpUtils.post(tokenUrl, postData.toString());

        // Разбор ответа и извлечение токена доступа
        // Примечание: В реальном приложении необходимо использовать библиотеки для работы с JSON, например, Jackson или Gson.
        String accessToken = response.substring(response.indexOf(""\""access_token\"":\"""") + 15);
        accessToken = accessToken.substring(0, accessToken.indexOf(""\""""));

        return accessToken;
    }
}"
uqkyVXe2,Threaded Binary Tree(3 sem),anticlown,Java,Monday 20th of November 2023 10:01:57 AM CDT,"/*
                                            #########################################
                                            |       	Node class start		    |
                                            #########################################
*/
public class Node {
    int key;
    int height;
    Node left;
    Node right;
    boolean rightThread; // Ложь, если правый указатель указывает на преемника
                        // Истина, если правый указатель указывает на обычного потомка
    boolean isOutputed;

    @Override
    public String toString() {
        return """" + key;
    }
}
/*
                                            #########################################
                                            |       	Node class end			    |
                                            #########################################

                                            #########################################
                                            |       	Tree class start		    |
                                            #########################################
*/
class Tree {
    public Node rootNode;

    /*      balance methods start     */
    private static void updateHeight(final Node currentNode) {
        currentNode.height = 1 + Math.max(getHeight(currentNode.left), getHeight(currentNode.right));
    }

    private static int getHeight(final Node currentNode) {
        return currentNode == null ? -1 : currentNode.height;
    }

    private static int getBalance(final Node currentNode) {
        return (currentNode == null) ? 0 : getHeight(currentNode.right) - getHeight(currentNode.left);
    }

    public static Node rotateRight(final Node parentNode) {
        Node tempNode = parentNode.left;
        Node tempNodeRightChild = tempNode.right;
        tempNode.right = parentNode;
        parentNode.left = tempNodeRightChild;
        updateHeight(parentNode);
        updateHeight(tempNode);
        return tempNode;
    }

    public static Node rotateLeft(final Node parentNode) {
        Node tempNode = parentNode.right;
        Node tempNodeLeftChild = tempNode.left;
        tempNode.left = parentNode;
        parentNode.right = tempNodeLeftChild;
        updateHeight(parentNode);
        updateHeight(tempNode);
        return tempNode;
    }

    public Node balanceTree(Node root) {
        updateHeight(root);
        int balance = getBalance(root);
        if (balance > 1) {
            if (getHeight(root.right.right) <= getHeight(root.right.left)) {
                root.right = rotateRight(root.right);
            }
            root = rotateLeft(root);
        } else if (balance < -1) {
            if (!(getHeight(root.left.left) > getHeight(root.left.right))) {
                root.left = rotateLeft(root.left);
            }
            root = rotateRight(root);
        }
        return root;
    }
    /*      balance methods end     */

    /*      insert func start     */
    public Node insertNode(Node parentNode, final int key) {
        if (parentNode == null) {
            Node temp = new Node();
            temp.key = key;
            return temp;
        } else if (parentNode.key > key) {
            parentNode.left = insertNode(parentNode.left, key);
        } else if (parentNode.key < key) {
            parentNode.right = insertNode(parentNode.right, key);
        } else {
            System.err.println(""Некорректный ввод! Элемент с таким значением уже существует."");
        }
        return balanceTree(parentNode);
    }
    /*      insert func end     */

    /*      delete func start     */
    public static Node mostLeftChild(final Node parentNode) {
        Node temp = parentNode;
        while (temp.left != null)
            temp = temp.left;
        return temp;
    }

    public Node deleteNode(Node root, final int key) {
        if (root == null) {
            System.err.println(""Элемента с таким значением нет в дереве!"");
            return null;
        } else if (root.key > key) {
            root.left = deleteNode(root.left, key);
        } else if (root.key < key) {
            root.right = deleteNode(root.right, key);
        } else {
            if (root.left == null || root.right == null) {
                root = (root.left == null) ? root.right : root.left;
            } else {
                Node mostLeftChild = mostLeftChild(root.right);
                root.key = mostLeftChild.key;
                root.right = deleteNode(root.right, root.key);
            }
        }
        if (root != null) {
            root = balanceTree(root);
        }
        return root;
    }
    /*      delete func end     */

    /*      find func start     */
    public Node findNodeByValue(final int value) {
        Node currentNode = rootNode;
        while (currentNode.key != value) {
            if (value < currentNode.key) {
                currentNode = currentNode.left;
            } else {
                currentNode = currentNode.right;
            }
            if (currentNode == null) {
                System.out.println(""Элемента с таким значением нет в дереве."");
                return null;
            }
        }
        return currentNode;
    }
    /*      find func end     */

    /*      thread func start     */
    public static Node sewTree(Node root) {
        if (root == null) {
            return null;
        }

        if (root.right == null && root.left == null) { return root; }

        if (root.left != null) {
            Node left = sewTree(root.left);
            left.right = root;
            left.rightThread = true;
        }

        if(root.right == null) { return root; }

        return sewTree(root.right);
    }
    /*      thread func end     */

    /*      print methods start     */
    public static final String ANSI_RESET = ""\u001B[0m"";
    public static final String ANSI_BLUE = ""\u001B[34m"";
    public static final String ANSI_RED = ""\u001B[31m"";

    //print methods for default BST(can't work with already threaded tree)
    void printInorder(Node parentNode) {
        if (parentNode == null)
            return;

        printInorder(parentNode.left);
        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        printInorder(parentNode.right);
    }

    void printPreorder(Node parentNode) {
        if (parentNode == null)
            return;

        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        printPreorder(parentNode.left);
        printPreorder(parentNode.right);
    }

    void printPostorder(Node parentNode) {
        if (parentNode == null)
            return;

        printPostorder(parentNode.left);
        printPostorder(parentNode.right);
        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        }


    static public void printSewTree(Node currNode) {
        if (currNode != null) {
            String color = (currNode.right != null && currNode.right.isOutputed) ? ANSI_RED : ANSI_BLUE; //useless at the moment
            System.out.print(color + currNode.key + "" "" + ANSI_RESET);
            if (!currNode.isOutputed) {
                currNode.isOutputed = true;
                printSewTree(currNode.left);
                printSewTree(currNode.right);
            }
        }
    }

    public void printNode(final Node currentNode) {
        System.out.println(""Выбранный узел имеет значение: "" + currentNode.key);
        if (currentNode.left == null && currentNode.right == null)
            System.out.println(""У данного элемента нет потомков."");
        else {
            String ansRightChild = (currentNode.right != null) ? ""Значение правого потомка: "" + currentNode.right.key : ""У данного элемента нет правого потомка."";
            System.out.println(ansRightChild);
            String ansLeftChild = (currentNode.left != null) ? ""Значение левого потомка: "" + currentNode.left.key : ""У данного элемента нет левого потомка."";
            System.out.println(ansLeftChild);
        }
    }
    /*      print methods end     */
}
/*
                                            #########################################
                                            |       	Tree class end			    |
                                            #########################################

                                            #########################################
                                            |         TreePrinter class start		|
                                            #########################################
*/
import java.util.ArrayList;
import java.util.List;

public class TreePrinter
{
    public static void printTree(Node root)
    {
        List<List<String>> lines = new ArrayList<List<String>>();

        List<Node> level = new ArrayList<Node>();
        List<Node> next = new ArrayList<Node>();

        level.add(root);
        int newNode = 1;

        int widest = 0;

        while (newNode != 0) {
            List<String> line = new ArrayList<String>();

            newNode = 0;

            for (Node currNode : level) {
                if (currNode == null) {
                    line.add(null);

                    next.add(null);
                    next.add(null);
                } else {
                    String stringOfNode = currNode.toString();
                    line.add(stringOfNode);
                    if (stringOfNode.length() > widest) widest = stringOfNode.length();

                    next.add(currNode.left);
                    next.add(currNode.right);

                    if (currNode.left != null) newNode++;
                    if (currNode.right != null) newNode++;
                }
            }

            if (widest % 2 == 1) widest++;

            lines.add(line);

            List<Node> tmp = level;
            level = next;
            next = tmp;
            next.clear();
        }

        int perPiece = lines.get(lines.size() - 1).size() * (widest + 4);
        for (int i = 0; i < lines.size(); i++) {
            List<String> line = lines.get(i);
            int hpw = (int) Math.floor(perPiece / 2f) - 1;

            if (i > 0) {
                for (int j = 0; j < line.size(); j++) {

                    char tempChar = ' ';
                    if (j % 2 == 1) {
                        if (line.get(j - 1) != null) {
                            tempChar = (line.get(j) != null) ? '┴' : '┘';
                        } else {
                            if (line.get(j) != null) tempChar = '└';
                        }
                    }
                    System.out.print(tempChar);

                    if (line.get(j) == null) {
                        for (int k = 0; k < perPiece - 1; k++) {
                            System.out.print("" "");
                        }
                    } else {
                        for (int k = 0; k < hpw; k++) {
                            System.out.print(j % 2 == 0 ? "" "" : ""─"");
                        }
                        System.out.print(j % 2 == 0 ? ""┌"" : ""┐"");
                        for (int k = 0; k < hpw; k++) {
                            System.out.print(j % 2 == 0 ? ""─"" : "" "");
                        }
                    }
                }
                System.out.println();
            }

            for (String lineStr : line) {

                if (lineStr == null) lineStr = """";
                float tmp = perPiece / 2f - lineStr.length() / 2f;
                int gap1 = (int) Math.ceil(tmp);
                int gap2 = (int) Math.floor(tmp);

                for (int k = 0; k < gap1; k++) {
                    System.out.print("" "");
                }
                System.out.print(lineStr);
                for (int k = 0; k < gap2; k++) {
                    System.out.print("" "");
                }
            }
            System.out.println();

            perPiece /= 2;
        }
    }
}
/*
                                            #########################################
                                            |         TreePrinter class start		|
                                            #########################################

                                            #########################################
                                            |       	Main class start		    |
                                            #########################################
*/
import java.util.Scanner;

public class Main {

    public static void printTaskInfo() {
        System.out.println(""\tДанная программа позволяет сформировать, изменить, вывести и прошить бинарное дерево поиска."");
        System.out.println(""\t\tДля работы в программе используйте команды меню."");
    }

    public static void printMenuOptions() {
        System.out.println(""\t\t\t\t\t Меню"");
        System.out.println(""\t\t\t\t1.Добавить узел"");
        System.out.println(""\t\t\t\t2.Удалить узел"");
        System.out.println(""\t\t\t\t3.Поиск узла"");
        System.out.println(""\t\t\t\t4.Вывести дерево"");
        System.out.println(""\t\t\t\t5.Прошить дерево и вывести прошивку"");
        System.out.println(""\t\t\t\t6.Вывести обходы дерева всеми способами."");
        System.out.println(""\t\t\t\t7.Выйти из программы"");
    }

    public static void main(String[] args) {
        Tree tree = new Tree();
        Scanner scan = new Scanner(System.in);
        int choice = 0;

        printTaskInfo();
        printMenuOptions();

        do {
            System.out.print(""\n\nВведите команду для выполнения: "");
            try {
                choice = Integer.parseInt(scan.nextLine());
            } catch (Exception e) {
                choice = -1;
            }
            switch (choice) {
                case 1: {
                    System.out.println(""Вы выбрали: добавить узел"");
                    int elemToAdd;
                    System.out.print(""Введите значение элемента для добавления: "");
                    elemToAdd = Integer.parseInt(scan.nextLine());
                    tree.rootNode = tree.insertNode(tree.rootNode, elemToAdd);
                    break;
                }

                case 2: {
                    System.out.println(""Вы выбрали: удалить узел"");
                    int elemToDelete;
                    System.out.print(""Введите значение элемента для удаления: "");
                    elemToDelete = Integer.parseInt(scan.nextLine());
                    tree.rootNode = tree.deleteNode(tree.rootNode, elemToDelete); //? ""Элемент успешно удален!"" : ""Элемента с таким значением нет в дереве!"";
                    break;
                }
                case 3: {
                    System.out.println(""Вы выбрали: поиск узла"");
                    int elemToFind;
                    System.out.print(""Введите значение элемента для поиска: "");
                    elemToFind = Integer.parseInt(scan.nextLine());
                    Node foundNode = tree.findNodeByValue(elemToFind);
                    if (foundNode != null)
                        tree.printNode(foundNode);
                    break;
                }
                case 4: {
                    System.out.println(""Вы выбрали: вывести дерево"");
                    System.out.println(""Вывод дерева: "");
                    TreePrinter.printTree(tree.rootNode);
                    break;
                }
                case 5: {
                    System.out.println(""Вы выбрали: прошить дерево и вывести прошивку.\nКрасным цветом обозначены узлы, имеющие прошивку"");
                    Tree.sewTree(tree.rootNode);
                    Tree.printSewTree(tree.rootNode);
                    break;
                }
                case 6: {
                    System.out.println(""Вы выбрали: показать обход дерева всеми способами."");
                    System.out.println(""Прямой обход: "");
                    tree.printPreorder(tree.rootNode);
                    System.out.println();
                    System.out.println(""Симметричный обход: "");
                    tree.printInorder(tree.rootNode);
                    System.out.println();
                    System.out.println(""Обратный обход:"");
                    tree.printPostorder(tree.rootNode);
                    break;
                }
                case 7: {
                    System.out.println(""Вы выбрали: выйти из программы"");
                    break;
                }
                default:
                    System.err.println(""Некорректный ввод! Выберите один из пунктов меню!"");
                    break;
            }
        } while (choice != 5 && choice != 7);
    }
}
/*
                                            #########################################
                                            |       	Main class end		  		|
                                            #########################################
*/"
bedgE0Px,llama converter hack,tastypear,Python,Monday 20th of November 2023 09:34:42 AM CDT,"#!/usr/bin/env python3
from __future__ import annotations

import argparse
import concurrent.futures
import copy
import enum
import faulthandler
import functools
import io
import itertools
import json
import math
import mmap
import pickle
import re
import signal
import struct
import sys
import time
import zipfile
from abc import ABCMeta, abstractmethod
from concurrent.futures import ProcessPoolExecutor, ThreadPoolExecutor
from dataclasses import dataclass
from pathlib import Path
from typing import IO, TYPE_CHECKING, Any, Callable, Generator, Iterable, Literal, Sequence, TypeVar

import numpy as np
from sentencepiece import SentencePieceProcessor  # type: ignore[import]

import os
if 'NO_LOCAL_GGUF' not in os.environ:
    sys.path.insert(1, str(Path(__file__).parent / 'gguf-py' / 'gguf'))
import gguf

if TYPE_CHECKING:
    from typing import TypeAlias

if hasattr(faulthandler, 'register') and hasattr(signal, 'SIGUSR1'):
    faulthandler.register(signal.SIGUSR1)

NDArray: TypeAlias = 'np.ndarray[Any, Any]'

ARCH = gguf.MODEL_ARCH.LLAMA

DEFAULT_CONCURRENCY = 8
#
# data types
#

@dataclass(frozen=True)
class DataType:
    name: str
    dtype: np.dtype[Any]
    valid_conversions: list[str]

    def elements_to_bytes(self, n_elements: int) -> int:
        return n_elements * self.dtype.itemsize

@dataclass(frozen=True)
class UnquantizedDataType(DataType):
    pass

DT_F16  = UnquantizedDataType('F16', dtype = np.dtype(np.float16), valid_conversions = ['F32', 'Q8_0'])
DT_F32  = UnquantizedDataType('F32', dtype = np.dtype(np.float32), valid_conversions = ['F16', 'Q8_0'])
DT_I32  = UnquantizedDataType('I32', dtype = np.dtype(np.int16), valid_conversions = [])
DT_BF16 = UnquantizedDataType('BF16', dtype = np.dtype(np.uint16), valid_conversions = ['F32', 'F16', 'Q8_0'])

@dataclass(frozen=True)
class QuantizedDataType(DataType):
    block_size: int
    quantized_dtype: np.dtype[Any]
    ggml_type: gguf.GGMLQuantizationType

    def quantize(self, arr: NDArray) -> NDArray:
        raise NotImplementedError(f'Quantization for {self.name} not implemented')

    def elements_to_bytes(self, n_elements: int) -> int:
        assert n_elements % self.block_size == 0, f'Invalid number of elements {n_elements} for {self.name} with block size {self.block_size}'
        return self.quantized_dtype.itemsize * (n_elements // self.block_size)

@dataclass(frozen=True)
class Q8_0QuantizedDataType(QuantizedDataType):
    # Mini Q8_0 quantization in Python!
    def quantize(self, arr: NDArray) -> NDArray:
        assert arr.size % self.block_size == 0 and arr.size != 0, f'Bad array size {arr.size}'
        assert arr.dtype == np.float32, f'Bad array type {arr.dtype}'
        n_blocks = arr.size // self.block_size
        blocks = arr.reshape((n_blocks, self.block_size))
        # Much faster implementation of block quantization contributed by @Cebtenzzre
        def quantize_blocks_q8_0(blocks: NDArray) -> Iterable[tuple[Any, Any]]:
            d = abs(blocks).max(axis = 1) / np.float32(127)
            with np.errstate(divide = 'ignore'):
                qs = (blocks / d[:, None]).round()
            qs[d == 0] = 0
            yield from zip(d, qs)
        return np.fromiter(quantize_blocks_q8_0(blocks), count = n_blocks, dtype = self.quantized_dtype)

DT_Q8_0 = Q8_0QuantizedDataType('Q8_0',
    dtype = np.dtype(np.float32), valid_conversions = [],
    ggml_type = gguf.GGMLQuantizationType.Q8_0, block_size = 32,
    quantized_dtype = np.dtype([('d', '<f2'), ('qs', 'i1', (32,))]))

# Quantized types skipped here because they may also map to np.float32
NUMPY_TYPE_TO_DATA_TYPE: dict[np.dtype[Any], DataType] = {}
for dt in (DT_BF16, DT_F16, DT_F32, DT_I32):
    if dt.dtype in NUMPY_TYPE_TO_DATA_TYPE:
        raise ValueError(f'Invalid duplicate data type {dt}')
    NUMPY_TYPE_TO_DATA_TYPE[dt.dtype] = dt

SAFETENSORS_DATA_TYPES: dict[str, DataType] = {
    'BF16': DT_BF16,
    'F16': DT_F16,
    'F32': DT_F32,
    'I32': DT_I32,
}

# TODO: match this with `llama_ftype`
# TODO: rename to LLAMAFileType
# TODO: move to `gguf.py`
class GGMLFileType(enum.IntEnum):
    AllF32     = 0
    MostlyF16  = 1  # except 1d tensors
    MostlyQ8_0 = 7  # except 1d tensors

    def type_for_tensor(self, name: str, tensor: LazyTensor) -> DataType:
        dt = GGML_FILE_TYPE_TO_DATA_TYPE.get(self)
        if dt is None:
            raise ValueError(self)
        # 1D tensors are always F32.
        return dt if len(tensor.shape) > 1 else DT_F32

GGML_FILE_TYPE_TO_DATA_TYPE: dict[GGMLFileType, DataType] = {
    GGMLFileType.AllF32    : DT_F32,
    GGMLFileType.MostlyF16 : DT_F16,
    GGMLFileType.MostlyQ8_0: DT_Q8_0,
}

#
# hparams loading
#

@dataclass
class Params:
    n_vocab:    int
    n_embd:     int
    n_layer:    int
    n_ctx:      int
    n_ff:       int
    n_head:     int
    n_head_kv:  int
    f_norm_eps: float

    rope_scaling_type: gguf.RopeScalingType | None = None
    f_rope_freq_base: float | None = None
    f_rope_scale: float | None = None
    n_orig_ctx: int | None = None
    rope_finetuned: bool | None = None

    ftype: GGMLFileType | None = None

    # path to the directory containing the model files
    path_model: Path | None = None

    @staticmethod
    def guessed(model: LazyModel) -> Params:
        # try transformer naming first
        n_vocab, n_embd = model[""model.embed_tokens.weight""].shape if ""model.embed_tokens.weight"" in model else model[""tok_embeddings.weight""].shape

        # try transformer naming first
        if ""model.layers.0.self_attn.q_proj.weight"" in model:
            n_layer=next(i for i in itertools.count() if f""model.layers.{i}.self_attn.q_proj.weight"" not in model)
        elif ""model.layers.0.self_attn.W_pack.weight"" in model:   # next: try baichuan naming
            n_layer=next(i for i in itertools.count() if f""model.layers.{i}.self_attn.W_pack.weight"" not in model)
        else:
            n_layer=next(i for i in itertools.count() if f""layers.{i}.attention.wq.weight"" not in model)

        if n_layer < 1:
            raise Exception(""failed to guess 'n_layer'. This model is unknown or unsupported.\n""
                            ""Suggestion: provide 'config.json' of the model in the same directory containing model files."")

        n_head = n_embd // 128 # guessed
        n_mult = 256           # guessed

        # TODO: verify this
        n_ff = int(2 * (4 * n_embd) / 3)
        n_ff = n_mult * ((n_ff + n_mult - 1) // n_mult)

        return Params(
            n_vocab    = n_vocab,
            n_embd     = n_embd,
            n_layer    = n_layer,
            n_ctx      = -1,
            n_ff       = n_ff,
            n_head     = n_head,
            n_head_kv  = n_head,
            f_norm_eps = 1e-5,
        )

    @staticmethod
    def loadHFTransformerJson(model: LazyModel, config_path: Path) -> Params:
        config = json.load(open(config_path))

        rope_scaling_type = f_rope_scale = n_orig_ctx = rope_finetuned = None
        rope_scaling = config.get(""rope_scaling"")

        if rope_scaling is not None and (typ := rope_scaling.get(""type"")):
            rope_factor = rope_scaling.get(""factor"")
            f_rope_scale = rope_factor
            if typ == ""linear"":
                rope_scaling_type = gguf.RopeScalingType.LINEAR
            elif typ == ""yarn"":
                rope_scaling_type = gguf.RopeScalingType.YARN
                n_orig_ctx = rope_scaling['original_max_position_embeddings']
                rope_finetuned = rope_scaling['finetuned']
            else:
                raise NotImplementedError(f'Unknown rope scaling type: {typ}')

        if ""max_sequence_length"" in config:
            n_ctx = config[""max_sequence_length""]
        elif ""max_position_embeddings"" in config:
            n_ctx = config[""max_position_embeddings""]
        else:
            raise Exception(""failed to guess 'n_ctx'. This model is unknown or unsupported.\n""
                            ""Suggestion: provide 'config.json' of the model in the same directory containing model files."")

        return Params(
            n_vocab           = config[""vocab_size""],
            n_embd            = config[""hidden_size""],
            n_layer           = config[""num_hidden_layers""],
            n_ctx             = n_ctx,
            n_ff              = config[""intermediate_size""],
            n_head            = (n_head := config[""num_attention_heads""]),
            n_head_kv         = config.get(""num_key_value_heads"", n_head),
            f_norm_eps        = config[""rms_norm_eps""],
            f_rope_freq_base  = config.get(""rope_theta""),
            rope_scaling_type = rope_scaling_type,
            f_rope_scale      = f_rope_scale,
            n_orig_ctx        = n_orig_ctx,
            rope_finetuned    = rope_finetuned,
        )

    # LLaMA v2 70B params.json
    # {""dim"": 8192, ""multiple_of"": 4096, ""ffn_dim_multiplier"": 1.3, ""n_heads"": 64, ""n_kv_heads"": 8, ""n_layers"": 80, ""norm_eps"": 1e-05, ""vocab_size"": -1}
    @staticmethod
    def loadOriginalParamsJson(model: LazyModel, config_path: Path) -> Params:
        config = json.load(open(config_path))

        # hack to determine LLaMA v1 vs v2 vs CodeLlama
        if config.get(""rope_theta"") == 1000000:
            # CodeLlama
            n_ctx = 16384
        elif config[""norm_eps""] == 1e-05:
            # LLaMA v2
            n_ctx = 4096
        else:
            # LLaMA v1
            n_ctx = 2048

        return Params(
            n_vocab          = config.get(""vocab_size"", model[""tok_embeddings.weight""].shape[0]),
            n_embd           = config[""dim""],
            n_layer          = config[""n_layers""],
            n_ctx            = n_ctx,
            n_ff             = model[""layers.0.feed_forward.w1.weight""].shape[0],
            n_head           = (n_head := config[""n_heads""]),
            n_head_kv        = config.get(""n_kv_heads"", n_head),
            f_norm_eps       = config[""norm_eps""],
            f_rope_freq_base = config.get(""rope_theta""),
        )

    @staticmethod
    def load(model_plus: ModelPlus) -> Params:
        hf_config_path   = model_plus.paths[0].parent / ""config.json""
        orig_config_path = model_plus.paths[0].parent / ""params.json""

        if hf_config_path.exists():
            params = Params.loadHFTransformerJson(model_plus.model, hf_config_path)
        elif orig_config_path.exists():
            params = Params.loadOriginalParamsJson(model_plus.model, orig_config_path)
        elif model_plus.format != 'none':
            params = Params.guessed(model_plus.model)
        else:
            raise ValueError('Cannot guess params when model format is none')

        params.path_model = model_plus.paths[0].parent

        return params


#
# vocab
#

class BpeVocab:
    def __init__(self, fname_tokenizer: Path, fname_added_tokens: Path | None) -> None:
        self.bpe_tokenizer = json.loads(open(str(fname_tokenizer), encoding=""utf-8"").read())
        added_tokens: dict[str, int]
        if fname_added_tokens is not None:
            # FIXME: Verify that added tokens here _cannot_ overlap with the main vocab.
            added_tokens = json.load(open(fname_added_tokens, encoding=""utf-8""))
        else:
            # Fall back to trying to find the added tokens in tokenizer.json
            tokenizer_json_file = fname_tokenizer.parent / 'tokenizer.json'
            if not tokenizer_json_file.is_file():
                added_tokens = {}
            else:
                tokenizer_json = json.load(open(tokenizer_json_file, encoding=""utf-8""))
                added_tokens = dict(
                    (item['content'], item['id'])
                    for item in tokenizer_json.get('added_tokens', [])
                    # Added tokens here can be duplicates of the main vocabulary.
                    if item['content'] not in self.bpe_tokenizer )

        vocab_size: int = len(self.bpe_tokenizer)
        expected_ids    = list(range(vocab_size, vocab_size + len(added_tokens)))
        actual_ids      = sorted(added_tokens.values())
        if expected_ids != actual_ids:
            expected_end_id = vocab_size + len(actual_ids) - 1
            raise Exception(f""Expected the {len(actual_ids)} added token ID(s) to be sequential in the range {vocab_size} - {expected_end_id}; got {actual_ids}"")

        items = sorted(added_tokens.items(), key=lambda text_idx: text_idx[1])
        self.added_tokens_list    = [text for (text, idx) in items]
        self.vocab_size_base: int = vocab_size
        self.vocab_size: int      = self.vocab_size_base + len(self.added_tokens_list)
        self.fname_tokenizer      = fname_tokenizer
        self.fname_added_tokens   = fname_added_tokens

    def bpe_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        tokenizer = self.bpe_tokenizer
        from transformers.models.gpt2 import tokenization_gpt2  # type: ignore[import]
        reverse_vocab = {id: encoded_tok for encoded_tok, id in tokenizer.items()}

        for i, _ in enumerate(tokenizer):
            yield reverse_vocab[i], 0.0, gguf.TokenType.NORMAL

    def added_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        for text in self.added_tokens_list:
            score = -1000.0
            yield text.encode(""utf-8""), score, gguf.TokenType.CONTROL

    def all_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        yield from self.bpe_tokens()
        yield from self.added_tokens()

    def __repr__(self) -> str:
        return f""<BpeVocab with {self.vocab_size_base} base tokens and {len(self.added_tokens_list)} added tokens>""


class SentencePieceVocab:
    def __init__(self, fname_tokenizer: Path, fname_added_tokens: Path | None) -> None:
        self.sentencepiece_tokenizer = SentencePieceProcessor(str(fname_tokenizer))
        added_tokens: dict[str, int]
        if fname_added_tokens is not None:
            added_tokens = json.load(open(fname_added_tokens, encoding=""utf-8""))
        else:
            added_tokens = {}

        vocab_size: int = self.sentencepiece_tokenizer.vocab_size()

        new_tokens       = {id: piece for piece, id in added_tokens.items() if id >= vocab_size}
        expected_new_ids = list(range(vocab_size, vocab_size + len(new_tokens)))
        actual_new_ids   = sorted(new_tokens.keys())

        if expected_new_ids != actual_new_ids:
            raise ValueError(f""Expected new token IDs {expected_new_ids} to be sequential; got {actual_new_ids}"")

        # Token pieces that were added to the base vocabulary.
        self.added_tokens_list  = [new_tokens[id] for id in actual_new_ids]
        self.vocab_size_base    = vocab_size
        self.vocab_size         = self.vocab_size_base + len(self.added_tokens_list)
        self.fname_tokenizer    = fname_tokenizer
        self.fname_added_tokens = fname_added_tokens

    def sentencepiece_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        tokenizer = self.sentencepiece_tokenizer
        for i in range(tokenizer.vocab_size()):
            piece = tokenizer.id_to_piece(i)
            text: bytes = piece.encode(""utf-8"")
            score: float = tokenizer.get_score(i)

            toktype = gguf.TokenType.NORMAL
            if tokenizer.is_unknown(i):
                toktype = gguf.TokenType.UNKNOWN
            if tokenizer.is_control(i):
                toktype = gguf.TokenType.CONTROL

            # NOTE: I think added_tokens are user defined.
            # ref: https://github.com/google/sentencepiece/blob/master/src/sentencepiece_model.proto
            # if tokenizer.is_user_defined(i): toktype = gguf.TokenType.USER_DEFINED

            if tokenizer.is_unused(i):
                toktype = gguf.TokenType.UNUSED
            if tokenizer.is_byte(i):
                toktype = gguf.TokenType.BYTE

            yield text, score, toktype

    def added_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        for text in self.added_tokens_list:
            score = -1000.0
            yield text.encode(""utf-8""), score, gguf.TokenType.USER_DEFINED

    def all_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        yield from self.sentencepiece_tokens()
        yield from self.added_tokens()

    def __repr__(self) -> str:
        return f""<SentencePieceVocab with {self.vocab_size_base} base tokens and {len(self.added_tokens_list)} added tokens>""

Vocab: TypeAlias = 'BpeVocab | SentencePieceVocab'

#
# data loading
# TODO: reuse (probably move to gguf.py?)
#

def permute(weights: NDArray, n_head: int, n_head_kv: int) -> NDArray:
    #print( ""permute debug "" + str(weights.shape[0]) + "" x "" + str(weights.shape[1]) + "" nhead "" + str(n_head) + "" nheadkv "" + str(n_kv_head) )
    if n_head_kv is not None and n_head != n_head_kv:
        n_head = n_head_kv
    return (weights.reshape(n_head, 2, weights.shape[0] // n_head // 2, *weights.shape[1:])
                .swapaxes(1, 2)
                .reshape(weights.shape))


class Tensor(metaclass=ABCMeta):
    data_type: DataType

    @abstractmethod
    def astype(self, data_type: DataType) -> Tensor: ...
    @abstractmethod
    def permute(self, n_head: int, n_head_kv: int) -> Tensor: ...
    @abstractmethod
    def permute_part(self, n_part: int, n_head: int, n_head_kv: int) -> UnquantizedTensor: ...
    @abstractmethod
    def part(self, n_part: int) -> UnquantizedTensor: ...
    @abstractmethod
    def to_ggml(self) -> GGMLCompatibleTensor: ...


def bf16_to_fp32(bf16_arr: np.ndarray[Any, np.dtype[np.uint16]]) -> NDArray:
    assert bf16_arr.dtype == np.uint16, f""Input array should be of dtype uint16, but got {bf16_arr.dtype}""
    fp32_arr = bf16_arr.astype(np.uint32) << 16
    return fp32_arr.view(np.float32)


class UnquantizedTensor(Tensor):
    def __init__(self, ndarray: NDArray) -> None:
        assert isinstance(ndarray, np.ndarray)
        self.ndarray = ndarray
        self.data_type = NUMPY_TYPE_TO_DATA_TYPE[ndarray.dtype]

    def astype(self, data_type: DataType) -> Tensor:
        dtype = data_type.dtype
        if self.data_type == DT_BF16:
            self.ndarray = bf16_to_fp32(self.ndarray)
        return UnquantizedTensor(self.ndarray.astype(dtype))

    def to_ggml(self) -> UnquantizedTensor:
        return self

    def permute_part(self, n_part: int, n_head: int, n_head_kv: int) -> UnquantizedTensor:
        r = self.ndarray.shape[0] // 3
        return UnquantizedTensor(permute(self.ndarray[r * n_part : r * n_part + r, ...], n_head, n_head_kv))

    def part(self, n_part: int) -> UnquantizedTensor:
        r = self.ndarray.shape[0] // 3
        return UnquantizedTensor(self.ndarray[r * n_part : r * n_part + r, ...])

    def permute(self, n_head: int, n_head_kv: int) -> UnquantizedTensor:
        return UnquantizedTensor(permute(self.ndarray, n_head, n_head_kv))


def load_unquantized(lazy_tensor: LazyTensor, expected_dtype: Any = None, convert: bool = False) -> NDArray:
    tensor = lazy_tensor.load()
    assert isinstance(tensor, UnquantizedTensor)

    # double-check:
    actual_shape = list(tensor.ndarray.shape)
    assert actual_shape == lazy_tensor.shape, (actual_shape, lazy_tensor.shape)
    if expected_dtype is not None and expected_dtype != tensor.ndarray.dtype:
        if convert:
            tensor.ndarray = tensor.ndarray.astype(expected_dtype)
        else:
            raise ValueError(f'expected this tensor to have dtype {expected_dtype}, got {tensor.ndarray.dtype}')

    return tensor.ndarray


GGMLCompatibleTensor = UnquantizedTensor


@dataclass
class LazyTensor:
    _load: Callable[[], Tensor]
    shape: list[int]
    data_type: DataType
    description: str

    def load(self) -> Tensor:
        ret = self._load()
        # Should be okay if it maps to the same numpy type?
        assert ret.data_type == self.data_type or (self.data_type.dtype == ret.data_type.dtype), \
                (self.data_type, ret.data_type, self.description)
        return ret

    def astype(self, data_type: DataType) -> LazyTensor:
        self.validate_conversion_to(data_type)

        def load() -> Tensor:
            return self.load().astype(data_type)
        return LazyTensor(load, self.shape, data_type, f'convert({data_type}) {self.description}')

    def validate_conversion_to(self, data_type: DataType) -> None:
        if data_type != self.data_type and data_type.name not in self.data_type.valid_conversions:
            raise ValueError(f'Cannot validate conversion from {self.data_type} to {data_type}.')


LazyModel: TypeAlias = 'dict[str, LazyTensor]'


@dataclass
class ModelPlus:
    model: LazyModel
    paths: list[Path]  # Where this was read from.
    format: Literal['ggml', 'torch', 'safetensors', 'none']
    vocab: Vocab | None  # For GGML models (which have vocab built in), the vocab.


def merge_sharded(models: list[LazyModel]) -> LazyModel:
    # Original LLaMA models have each file contain one part of each tensor.
    # Use a dict instead of a set to preserve order.
    names = {name: None for model in models for name in model}

    def convert(name: str) -> LazyTensor:
        lazy_tensors: list[LazyTensor] = [model[name] for model in models]
        if len(lazy_tensors) == 1:
            # only one file; don't go through this procedure since there might
            # be quantized tensors
            return lazy_tensors[0]
        if len(lazy_tensors[0].shape) == 1:
            # the tensor is just duplicated in every file
            return lazy_tensors[0]
        if name.startswith('tok_embeddings.') or \
           name.endswith('.attention.wo.weight') or \
           name.endswith('.feed_forward.w2.weight'):
            # split by columns
            axis = 1
        else:
            # split by rows
            axis = 0
        concatenated_shape = list(lazy_tensors[0].shape)
        concatenated_shape[axis] = sum(tensor.shape[axis] for tensor in lazy_tensors)

        def load() -> UnquantizedTensor:
            ndarrays = [load_unquantized(tensor) for tensor in lazy_tensors]
            concatenated: NDArray = np.concatenate(ndarrays, axis=axis)
            return UnquantizedTensor(concatenated)
        description = 'concatenated[[' + '] | ['.join(lt.description for lt in lazy_tensors) + ']]'
        return LazyTensor(load, concatenated_shape, lazy_tensors[0].data_type, description)
    return {name: convert(name) for name in names}


def merge_multifile_models(models_plus: list[ModelPlus]) -> ModelPlus:
    formats = set(mp.format for mp in models_plus)
    assert len(formats) == 1, ""different formats?""
    format = formats.pop()
    paths = [path for mp in models_plus for path in mp.paths]
    # Use the first non-None vocab, if any.
    try:
        vocab = next(mp.vocab for mp in models_plus if mp.vocab is not None)
    except StopIteration:
        vocab = None

    if any(""model.embed_tokens.weight"" in mp.model for mp in models_plus):
        # Transformers models put different tensors in different files, but
        # don't split indivdual tensors between files.
        model: LazyModel = {}
        for mp in models_plus:
            model.update(mp.model)
    else:
        model = merge_sharded([mp.model for mp in models_plus])

    return ModelPlus(model, paths, format, vocab)


def permute_lazy(lazy_tensor: LazyTensor, n_head: int, n_head_kv: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().permute(n_head, n_head_kv)
    return LazyTensor(load, lazy_tensor.shape, lazy_tensor.data_type, f'permute({n_head}, {n_head_kv}) ' + lazy_tensor.description)

def permute_part_lazy(lazy_tensor: LazyTensor, n_part: int, n_head: int, n_head_kv: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().permute_part(n_part, n_head, n_head_kv)
    s = lazy_tensor.shape.copy()
    s[0] = s[0] // 3
    return LazyTensor(load, s, lazy_tensor.data_type, f'permute({n_head}, {n_head_kv}) ' + lazy_tensor.description)

def part_lazy(lazy_tensor: LazyTensor, n_part: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().part(n_part)
    s = lazy_tensor.shape.copy()
    s[0] = s[0] // 3
    return LazyTensor(load, s, lazy_tensor.data_type, 'part ' + lazy_tensor.description)


# Functionality that simulates `torch.load` but where individual tensors are
# only loaded into memory on demand, not all at once.
# PyTorch can't do this natively as of time of writing:
# - https://github.com/pytorch/pytorch/issues/64327
# This allows us to de-shard without multiplying RAM usage, and also
# conveniently drops the PyTorch dependency (though we still need numpy).


@dataclass
class LazyStorageKind:
    data_type: DataType


@dataclass
class LazyStorage:
    load: Callable[[int, int], NDArray]
    kind: LazyStorageKind
    description: str


class LazyUnpickler(pickle.Unpickler):
    def __init__(self, fp: IO[bytes], data_base_path: str, zip_file: zipfile.ZipFile):
        super().__init__(fp)
        self.data_base_path = data_base_path
        self.zip_file = zip_file

    def persistent_load(self, pid: Any) -> Any:
        assert pid[0] == 'storage'
        assert isinstance(pid[1], LazyStorageKind)
        data_type = pid[1].data_type
        filename_stem = pid[2]
        filename = f'{self.data_base_path}/{filename_stem}'
        info = self.zip_file.getinfo(filename)

        def load(offset: int, elm_count: int) -> NDArray:
            dtype = data_type.dtype
            fp = self.zip_file.open(info)
            fp.seek(offset * dtype.itemsize)
            size = elm_count * dtype.itemsize
            data = fp.read(size)
            assert len(data) == size
            return np.frombuffer(data, dtype)
        description = f'storage data_type={data_type} path-in-zip={filename} path={self.zip_file.filename}'
        return LazyStorage(load=load, kind=pid[1], description=description)

    @staticmethod
    def lazy_rebuild_tensor_v2(storage: Any, storage_offset: Any, size: Any, stride: Any,
                               requires_grad: Any, backward_hooks: Any, metadata: Any = None) -> LazyTensor:
        assert isinstance(storage, LazyStorage)

        def load() -> UnquantizedTensor:
            elm_count = stride[0] * size[0]
            return UnquantizedTensor(storage.load(storage_offset, elm_count).reshape(size))
        description = f'pickled storage_offset={storage_offset} in {storage.description}'
        return LazyTensor(load, list(size), storage.kind.data_type, description)

    @staticmethod
    def rebuild_from_type_v2(func, new_type, args, state):
        return func(*args)

    CLASSES: dict[tuple[str, str], Any] = {
        # getattr used here as a workaround for mypy not being smart enough to detrmine
        # the staticmethods have a __func__ attribute.
        ('torch._tensor', '_rebuild_from_type_v2'): getattr(rebuild_from_type_v2, '__func__'),
        ('torch._utils', '_rebuild_tensor_v2'): getattr(lazy_rebuild_tensor_v2, '__func__'),
        ('torch', 'BFloat16Storage'): LazyStorageKind(DT_BF16),
        ('torch', 'HalfStorage'): LazyStorageKind(DT_F16),
        ('torch', 'FloatStorage'): LazyStorageKind(DT_F32),
        ('torch', 'IntStorage'): LazyStorageKind(DT_I32),
        ('torch', 'Tensor'): LazyTensor,
    }

    def find_class(self, module: str, name: str) -> Any:
        if not module.startswith('torch'):
            return super().find_class(module, name)
        return self.CLASSES[(module, name)]


def lazy_load_torch_file(outer_fp: IO[bytes], path: Path) -> ModelPlus:
    zf = zipfile.ZipFile(outer_fp)
    pickle_paths = [name for name in zf.namelist() if name.endswith('.pkl')]
    assert len(pickle_paths) == 1, pickle_paths
    pickle_fp = zf.open(pickle_paths[0], 'r')
    unpickler = LazyUnpickler(pickle_fp,
                              data_base_path=pickle_paths[0][:-4],
                              zip_file=zf)
    model = unpickler.load()
    as_dict = dict(model.items())
    return ModelPlus(model=as_dict, paths=[path], format='torch', vocab=None)


def lazy_load_safetensors_file(fp: IO[bytes], path: Path) -> ModelPlus:
    header_size, = struct.unpack('<Q', fp.read(8))
    header: dict[str, dict[str, Any]] = json.loads(fp.read(header_size))
    # Use mmap for the actual data to avoid race conditions with the file offset.
    mapped = memoryview(mmap.mmap(fp.fileno(), 0, access=mmap.ACCESS_READ))
    byte_buf = mapped[8 + header_size:]

    def convert(info: dict[str, Any]) -> LazyTensor:
        data_type = SAFETENSORS_DATA_TYPES[info['dtype']]
        numpy_dtype = data_type.dtype
        shape: list[int] = info['shape']
        begin, end = info['data_offsets']
        assert 0 <= begin <= end <= len(byte_buf)
        assert end - begin == math.prod(shape) * numpy_dtype.itemsize
        buf = byte_buf[begin:end]

        def load() -> UnquantizedTensor:
            return UnquantizedTensor(np.frombuffer(buf, dtype=numpy_dtype).reshape(shape))
        description = f'safetensors begin={begin} end={end} type={data_type} path={path}'
        return LazyTensor(load, shape, data_type, description)
    model = {name: convert(info) for (name, info) in header.items() if name != '__metadata__'}
    return ModelPlus(model=model, paths=[path], format='safetensors', vocab=None)


def must_read(fp: IO[bytes], length: int) -> bytes:
    ret = fp.read(length)
    if len(ret) < length:
        raise Exception(""unexpectedly reached end of file"")
    return ret


@functools.lru_cache(maxsize=None)
def lazy_load_file(path: Path) -> ModelPlus:
    fp = open(path, 'rb')
    first8 = fp.read(8)
    fp.seek(0)
    if first8[:2] == b'PK':
        # A zip file, i.e. PyTorch format
        return lazy_load_torch_file(fp, path)
    elif struct.unpack('<Q', first8)[0] < 16 * 1024 * 1024:
        # Probably safetensors
        return lazy_load_safetensors_file(fp, path)
    else:
        raise ValueError(f""unknown format: {path}"")


In = TypeVar('In')
Out = TypeVar('Out')

def bounded_parallel_map(func: Callable[[In], Out], iterable: Iterable[In], concurrency: int, max_workers: int | None = None, use_processpool_executor: bool = False) -> Iterable[Out]:
    '''Parallel map, but with backpressure.  If the caller doesn't call `next`
    fast enough, this will stop calling `func` at some point rather than
    letting results pile up in memory.  Specifically, there is a max of one
    output value buffered per thread.'''
    if concurrency < 2:
        yield from map(func, iterable)
        # Not reached.
    iterable = iter(iterable)
    executor_class: type[ThreadPoolExecutor] | type[ProcessPoolExecutor]
    if use_processpool_executor:
        executor_class = ProcessPoolExecutor
    else:
        executor_class = ThreadPoolExecutor
    with executor_class(max_workers = max_workers) as executor:
        futures: list[concurrent.futures.Future[Out]] = []
        done = False
        for _ in range(concurrency):
            try:
                futures.append(executor.submit(func, next(iterable)))
            except StopIteration:
                done = True
                break

        while futures:
            result = futures.pop(0).result()
            while not done and len(futures) < concurrency:
                try:
                    futures.append(executor.submit(func, next(iterable)))
                except StopIteration:
                    done = True
                    break
            yield result

def check_vocab_size(params: Params, vocab: Vocab, pad_vocab: bool = False) -> None:
    if params.n_vocab != vocab.vocab_size:
        assert isinstance(vocab, BpeVocab) or isinstance(vocab, SentencePieceVocab)
        if params.n_vocab == vocab.vocab_size_base:
            print(""Ignoring added_tokens.json since model matches vocab size without it."")
            vocab.added_tokens_list = []
            vocab.vocab_size = vocab.vocab_size_base
            return
        if pad_vocab and params.n_vocab > vocab.vocab_size:
            pad_count = params.n_vocab - vocab.vocab_size
            print(f'Padding vocab with {pad_count} token(s) - <dummy00001> through <dummy{pad_count:05}>')
            for i in range(1, (params.n_vocab - vocab.vocab_size) + 1):
                vocab.added_tokens_list.append(f'<dummy{i:05}>')
            vocab.vocab_size = params.n_vocab
            return
        msg = f""Vocab size mismatch (model has {params.n_vocab}, but {vocab.fname_tokenizer}""
        if vocab.fname_added_tokens is not None:
            msg += f"" combined with {vocab.fname_added_tokens}""
        msg += f"" has {vocab.vocab_size}).""
        if vocab.vocab_size < params.n_vocab < vocab.vocab_size + 20 and vocab.fname_added_tokens is None:
            msg += f""  Most likely you are missing added_tokens.json (should be in {vocab.fname_tokenizer.parent}).""
        if vocab.vocab_size < params.n_vocab:
            msg += "" Possibly try using the --padvocab option.""
        raise Exception(msg)


class OutputFile:
    def __init__(self, fname_out: Path, endianess:gguf.GGUFEndian=gguf.GGUFEndian.LITTLE) -> None:
        self.gguf = gguf.GGUFWriter(fname_out, gguf.MODEL_ARCH_NAMES[ARCH], endianess=endianess)

    def add_meta_arch(self, params: Params) -> None:
        name = ""LLaMA""

        # TODO: better logic to determine model name
        if params.n_ctx == 4096:
            name = ""LLaMA v2""
        elif params.path_model is not None:
            name = str(params.path_model.parent).split('/')[-1]

        self.gguf.add_name                (name)
        self.gguf.add_context_length      (params.n_ctx)
        self.gguf.add_embedding_length    (params.n_embd)
        self.gguf.add_block_count         (params.n_layer)
        self.gguf.add_feed_forward_length (params.n_ff)
        self.gguf.add_rope_dimension_count(params.n_embd // params.n_head)
        self.gguf.add_head_count          (params.n_head)
        self.gguf.add_head_count_kv       (params.n_head_kv)
        self.gguf.add_layer_norm_rms_eps  (params.f_norm_eps)

        if params.f_rope_freq_base is not None:
            self.gguf.add_rope_freq_base(params.f_rope_freq_base)

        if params.rope_scaling_type:
            assert params.f_rope_scale is not None
            self.gguf.add_rope_scaling_type(params.rope_scaling_type)
            self.gguf.add_rope_scaling_factor(params.f_rope_scale)

        if params.n_orig_ctx is not None:
            self.gguf.add_rope_scaling_orig_ctx_len(params.n_orig_ctx)

        if params.rope_finetuned is not None:
            self.gguf.add_rope_scaling_finetuned(params.rope_finetuned)

        if params.ftype is not None:
            self.gguf.add_file_type(params.ftype)

    def add_meta_vocab(self, vocab: Vocab) -> None:
        tokens = []
        scores = []
        toktypes = []
        # NOTE: `all_tokens` returns the base vocabulary and added tokens
        for text, score, toktype in vocab.all_tokens():
            tokens.append(text)
            scores.append(score)
            toktypes.append(toktype)

        if isinstance(vocab, SentencePieceVocab):
            self.gguf.add_tokenizer_model(""llama"")
        elif isinstance(vocab, BpeVocab):
            self.gguf.add_tokenizer_model(""gpt2"")
        else:
            raise ValueError(f'Unknown vocab type: Not BpeVocab or SentencePieceVocab')
        self.gguf.add_token_list(tokens)
        self.gguf.add_token_scores(scores)
        self.gguf.add_token_types(toktypes)

    def add_meta_special_vocab(self, svocab: gguf.SpecialVocab) -> None:
        svocab.add_to_gguf(self.gguf)

    def add_tensor_info(self, name: str, tensor: LazyTensor) -> None:
        n_elements = int(np.prod(tensor.shape))
        raw_dtype = getattr(tensor.data_type, 'ggml_type', None)
        data_type = getattr(tensor.data_type, 'quantized_type', None) or tensor.data_type.dtype
        data_nbytes = tensor.data_type.elements_to_bytes(n_elements)
        self.gguf.add_tensor_info(name, tensor.shape, data_type, data_nbytes, raw_dtype = raw_dtype)

    def write_meta(self) -> None:
        self.gguf.write_header_to_file()
        self.gguf.write_kv_data_to_file()

    def write_tensor_info(self) -> None:
        self.gguf.write_ti_data_to_file()

    def close(self) -> None:
        self.gguf.close()

    @staticmethod
    def write_vocab_only(
        fname_out: Path, params: Params, vocab: Vocab, svocab: gguf.SpecialVocab,
        endianess: gguf.GGUFEndian = gguf.GGUFEndian.LITTLE,
        pad_vocab: bool            = False,
        ) -> None:
        check_vocab_size(params, vocab, pad_vocab = pad_vocab)

        of = OutputFile(fname_out, endianess=endianess)

        # meta data
        of.add_meta_arch(params)
        of.add_meta_vocab(vocab)
        of.add_meta_special_vocab(svocab)

        of.write_meta()

        of.close()

    @staticmethod
    def do_item(item: tuple[str, LazyTensor]) -> tuple[DataType, NDArray]:
        name, lazy_tensor = item
        tensor = lazy_tensor.load().to_ggml()
        return (lazy_tensor.data_type, tensor.ndarray)

    @staticmethod
    def maybe_do_quantize(item: tuple[DataType, NDArray]) -> NDArray:
        dt, arr = item
        if not isinstance(dt, QuantizedDataType):
            return arr
        return dt.quantize(arr)

    @staticmethod
    def write_all(
        fname_out  : Path, ftype: GGMLFileType, params: Params,
        model      : LazyModel, vocab: Vocab, svocab: gguf.SpecialVocab,
        concurrency: int             = DEFAULT_CONCURRENCY,
        endianess  : gguf.GGUFEndian = gguf.GGUFEndian.LITTLE,
        pad_vocab  : bool            = False,
        ) -> None:
        check_vocab_size(params, vocab, pad_vocab = pad_vocab)

        of = OutputFile(fname_out, endianess=endianess)

        # meta data
        of.add_meta_arch(params)
        of.add_meta_vocab(vocab)
        of.add_meta_special_vocab(svocab)

        # tensor info
        for name, lazy_tensor in model.items():
            of.add_tensor_info(name, lazy_tensor)

        of.write_meta()
        of.write_tensor_info()

        # tensor data
        ndarrays_inner = bounded_parallel_map(OutputFile.do_item, model.items(), concurrency = concurrency)
        if ftype == GGMLFileType.MostlyQ8_0:
            ndarrays = bounded_parallel_map(OutputFile.maybe_do_quantize, ndarrays_inner, concurrency = concurrency, max_workers = concurrency, use_processpool_executor = True)
        else:
            ndarrays = map(OutputFile.maybe_do_quantize, ndarrays_inner)

        start = time.time()
        for i, ((name, lazy_tensor), ndarray) in enumerate(zip(model.items(), ndarrays)):
            elapsed = time.time() - start
            size = ' x '.join(f""{dim:6d}"" for dim in lazy_tensor.shape)
            padi = len(str(len(model)))
            print(f""[{i+1:{padi}d}/{len(model)}] Writing tensor {name:38s} | size {size:16} | type {lazy_tensor.data_type.name:4} | T+{int(elapsed):4}"")
            of.gguf.write_tensor_data(ndarray)

        of.close()

def pick_output_type(model: LazyModel, output_type_str: str | None) -> GGMLFileType:
    wq_type = model[gguf.TENSOR_NAMES[gguf.MODEL_TENSOR.ATTN_Q].format(bid=0)+"".weight""].data_type

    if output_type_str == ""f32"" or (output_type_str is None and wq_type == DT_F32):
        return GGMLFileType.AllF32
    if output_type_str == ""f16"" or (output_type_str is None and wq_type in (DT_F16, DT_BF16)):
        return GGMLFileType.MostlyF16
    if output_type_str == ""q8_0"":
        return GGMLFileType.MostlyQ8_0

    name_to_type = {name: lazy_tensor.data_type for (name, lazy_tensor) in model.items()}

    raise Exception(f""Unexpected combination of types: {name_to_type}"")

def convert_to_output_type(model: LazyModel, output_type: GGMLFileType) -> LazyModel:
    return {name: tensor.astype(output_type.type_for_tensor(name, tensor))
            for (name, tensor) in model.items()}

def convert_model_names(model: LazyModel, params: Params) -> LazyModel:
    tmap = gguf.TensorNameMap(ARCH, params.n_layer)
    should_skip: set[gguf.MODEL_TENSOR] = set(gguf.MODEL_TENSOR_SKIP.get(ARCH, []))

    tmp = model

    # HF models permut or pack some of the tensors, so we need to undo that
    for i in itertools.count():
        if f""model.layers.{i}.self_attn.q_proj.weight"" in model:
            print(f""Permuting layer {i}"")
            tmp[f""model.layers.{i}.self_attn.q_proj.weight""] = permute_lazy(model[f""model.layers.{i}.self_attn.q_proj.weight""], params.n_head, params.n_head)
            tmp[f""model.layers.{i}.self_attn.k_proj.weight""] = permute_lazy(model[f""model.layers.{i}.self_attn.k_proj.weight""], params.n_head, params.n_head_kv)
           #tmp[f""model.layers.{i}.self_attn.v_proj.weight""] =              model[f""model.layers.{i}.self_attn.v_proj.weight""]
        elif f""model.layers.{i}.self_attn.W_pack.weight"" in model:
            print(f""Unpacking and permuting layer {i}"")
            tmp[f""model.layers.{i}.self_attn.q_proj.weight""] = permute_part_lazy(model[f""model.layers.{i}.self_attn.W_pack.weight""], 0, params.n_head, params.n_head)
            tmp[f""model.layers.{i}.self_attn.k_proj.weight""] = permute_part_lazy(model[f""model.layers.{i}.self_attn.W_pack.weight""], 1, params.n_head, params.n_head_kv)
            tmp[f""model.layers.{i}.self_attn.v_proj.weight""] = part_lazy        (model[f""model.layers.{i}.self_attn.W_pack.weight""], 2)
            del tmp[f""model.layers.{i}.self_attn.W_pack.weight""]
        else:
            break

    out: LazyModel = {}
    for name, lazy_tensor in model.items():
        tensor_type, name_new = tmap.get_type_and_name(name, try_suffixes = ("".weight"", "".bias"")) or (None, None)

        if name.startswith(""model.embed_layer_norm.""):
            # name_new = ""token_embd_norm."" + name.split('.')[-1]
            name_new = ""embeddings.LayerNorm."" + name.split('.')[-1]

        if name_new is None:
            raise Exception(f""Unexpected tensor name: {name}"")

        if tensor_type in should_skip:
            print(f""skipping tensor {name_new}"")
            continue

        try:
            print(f""{name:48s} -> {name_new:40s} | {lazy_tensor.data_type.name:6s} | {lazy_tensor.shape}"")
        except Exception as e:
            pass
        out[name_new] = lazy_tensor

    return out

def nth_multifile_path(path: Path, n: int) -> Path | None:
    '''Given any path belonging to a multi-file model (e.g. foo.bin.1), return
    the nth path in the model.
    '''
    # Support the following patterns:
    patterns: list[tuple[str, str]] = [
        # - x.00.pth, x.01.pth, etc.
        (r'\.[0-9]{2}\.pth$', f'.{n:02}.pth'),
        # - x-00001-of-00002.bin, x-00002-of-00002.bin, etc.
        (r'-[0-9]{5}-of-(.*)$', fr'-{n:05}-of-\1'),
        # x.bin, x.bin.1, etc.
        (r'(\.[0-9]+)?$', r'\1' if n == 0 else fr'\1.{n}')
    ]
    for regex, replacement in patterns:
        if re.search(regex, path.name):
            new_path = path.with_name(re.sub(regex, replacement, path.name))
            if new_path.exists():
                return new_path
    return None


def find_multifile_paths(path: Path) -> list[Path]:
    '''Given any path belonging to a multi-file model (e.g. foo.bin.1), return
    the whole list of paths in the model.
    '''
    ret: list[Path] = []
    for i in itertools.count():
        nth_path = nth_multifile_path(path, i)
        if nth_path is None:
            break
        ret.append(nth_path)
    if not ret:
        # No matches.  This should only happen if the file was named, e.g.,
        # foo.0, and there was no file named foo.  Oh well, try to process it
        # as a single file.
        return [path]
    return ret


def load_some_model(path: Path) -> ModelPlus:
    '''Load a model of any supported format.'''
    # Be extra-friendly and accept either a file or a directory:
    if path.is_dir():
        # Check if it's a set of safetensors files first
        files = list(path.glob(""model-00001-of-*.safetensors""))
        if not files:
            # Try the PyTorch patterns too, with lower priority
            globs = [""consolidated.00.pth"", ""pytorch_model-00001-of-*.bin"", ""*.pt"", ""pytorch_model.bin""]
            files = [file for glob in globs for file in path.glob(glob)]
        if not files:
            raise Exception(f""Can't find model in directory {path}"")
        if len(files) > 1:
            raise Exception(f""Found multiple models in {path}, not sure which to pick: {files}"")
        path = files[0]

    paths = find_multifile_paths(path)
    models_plus: list[ModelPlus] = []
    for path in paths:
        print(f""Loading model file {path}"")
        models_plus.append(lazy_load_file(path))

    model_plus = merge_multifile_models(models_plus)
    return model_plus


def load_vocab(path: Path, vocabtype: str | None) -> Vocab:
    # Be extra-friendly and accept either a file or a directory.  Also, if it's
    # a directory, it might be the model directory, and tokenizer.model might
    # be in the parent of that.
    if path.is_dir():
        vocab_file = ""tokenizer.model""
        if vocabtype == 'bpe':
            vocab_file = ""vocab.json""
        path2 = path / vocab_file
        # Use `.parent` instead of /.. to handle the symlink case better.
        path3 = path.parent / vocab_file
        if path2.exists():
            path = path2
        elif path3.exists():
            path = path3
        else:
            raise FileNotFoundError(
                f""Could not find {vocab_file} in {path} or its parent; ""
                ""if it's in another directory, pass the directory as --vocab-dir"")

    print(f""Loading vocab file '{path}', type '{vocabtype}'"")

    added_tokens_path = path.parent / ""added_tokens.json""
    if vocabtype == ""bpe"":
        return BpeVocab(path, added_tokens_path if added_tokens_path.exists() else None)
    elif vocabtype == ""spm"":
        return SentencePieceVocab(path, added_tokens_path if added_tokens_path.exists() else None)
    else:
        raise ValueError(f""Unsupported vocabulary type {vocabtype}"")


def default_outfile(model_paths: list[Path], file_type: GGMLFileType) -> Path:
    namestr = {
        GGMLFileType.AllF32:    ""f32"",
        GGMLFileType.MostlyF16: ""f16"",
        GGMLFileType.MostlyQ8_0:""q8_0"",
    }[file_type]
    ret = model_paths[0].parent / f""ggml-model-{namestr}.gguf""
    if ret in model_paths:
        sys.stderr.write(
            f""Error: Default output path ({ret}) would overwrite the input. ""
            ""Please explicitly specify a path using --outfile.\n"")
        sys.exit(1)
    return ret


def do_dump_model(model_plus: ModelPlus) -> None:
    print(f""model_plus.paths = {model_plus.paths!r}"")
    print(f""model_plus.format = {model_plus.format!r}"")
    print(f""model_plus.vocab = {model_plus.vocab!r}"")
    for name, lazy_tensor in model_plus.model.items():
        print(f""{name}: shape={lazy_tensor.shape} type={lazy_tensor.data_type}; {lazy_tensor.description}"")


def main(args_in: list[str] | None = None) -> None:
    parser = argparse.ArgumentParser(description=""Convert a LLaMa model to a GGML compatible file"")
    parser.add_argument(""--dump"",        action=""store_true"",    help=""don't convert, just show what's in the model"")
    parser.add_argument(""--dump-single"", action=""store_true"",    help=""don't convert, just show what's in a single model file"")
    parser.add_argument(""--vocab-only"",  action=""store_true"",    help=""extract only the vocab"")
    parser.add_argument(""--outtype"",     choices=[""f32"", ""f16"", ""q8_0""], help=""output format - note: q8_0 may be very slow (default: f16 or f32 based on input)"")
    parser.add_argument(""--vocab-dir"",   type=Path,              help=""directory containing tokenizer.model, if separate from model file"")
    parser.add_argument(""--outfile"",     type=Path,              help=""path to write to; default: based on input"")
    parser.add_argument(""model"",         type=Path,              help=""directory containing model file, or model file itself (*.pth, *.pt, *.bin)"")
    parser.add_argument(""--vocabtype"",   choices=[""spm"", ""bpe""], help=""vocab format (default: spm)"", default=""spm"")
    parser.add_argument(""--ctx"",         type=int,               help=""model training context (default: based on input)"")
    parser.add_argument(""--concurrency"", type=int,               help=f""concurrency used for conversion (default: {DEFAULT_CONCURRENCY})"", default = DEFAULT_CONCURRENCY)
    parser.add_argument(""--bigendian"",   action=""store_true"",    help=""model is executed on big endian machine"")
    parser.add_argument(""--padvocab"",    action=""store_true"",    help=""add pad tokens when model vocab expects more than tokenizer metadata provides"")

    args = parser.parse_args(args_in)
    if args.dump_single:
        model_plus = lazy_load_file(args.model)
        do_dump_model(model_plus)
        return

    if not args.vocab_only:
        model_plus = load_some_model(args.model)
    else:
        model_plus = ModelPlus(model = {}, paths = [args.model / 'dummy'], format = 'none', vocab = None)

    if args.dump:
        do_dump_model(model_plus)
        return
    endianess = gguf.GGUFEndian.LITTLE
    if args.bigendian:
        endianess = gguf.GGUFEndian.BIG

    params = Params.load(model_plus)
    if params.n_ctx == -1:
        if args.ctx is None:
            raise Exception(""The model doesn't have a context size, and you didn't specify one with --ctx\n""
                            ""Please specify one with --ctx:\n""
                            "" - LLaMA v1: --ctx 2048\n""
                            "" - LLaMA v2: --ctx 4096\n"")
        params.n_ctx = args.ctx

    if args.outtype:
        params.ftype = {
            ""f32"": GGMLFileType.AllF32,
            ""f16"": GGMLFileType.MostlyF16,
            ""q8_0"": GGMLFileType.MostlyQ8_0,
        }[args.outtype]

    print(f""params = {params}"")

    vocab: Vocab
    if args.vocab_only:
        if not args.outfile:
            raise ValueError(""need --outfile if using --vocab-only"")
        # FIXME: Try to respect vocab_dir somehow?
        vocab = load_vocab(args.vocab_dir or args.model, args.vocabtype)
        special_vocab = gguf.SpecialVocab(model_plus.paths[0].parent,
            load_merges = args.vocabtype == 'bpe',
            n_vocab = vocab.vocab_size)
        outfile = args.outfile
        OutputFile.write_vocab_only(outfile, params, vocab, special_vocab,
            endianess = endianess, pad_vocab = args.padvocab)
        print(f""Wrote {outfile}"")
        return

    if model_plus.vocab is not None and args.vocab_dir is None:
        vocab = model_plus.vocab
    else:
        vocab_dir = args.vocab_dir if args.vocab_dir else model_plus.paths[0].parent
        vocab = load_vocab(vocab_dir, args.vocabtype)
    # FIXME: Try to respect vocab_dir somehow?
    special_vocab = gguf.SpecialVocab(model_plus.paths[0].parent,
        load_merges = args.vocabtype == 'bpe',
        n_vocab = vocab.vocab_size)

    model   = model_plus.model
    model   = convert_model_names(model, params)
    ftype   = pick_output_type(model, args.outtype)
    model   = convert_to_output_type(model, ftype)
    outfile = args.outfile or default_outfile(model_plus.paths, ftype)

    params.ftype = ftype
    print(f""Writing {outfile}, format {ftype}"")

    OutputFile.write_all(outfile, ftype, params, model, vocab, special_vocab,
        concurrency = args.concurrency, endianess = endianess, pad_vocab = args.padvocab)
    print(f""Wrote {outfile}"")


if __name__ == '__main__':
    main()"
7g7qdumG,Untitled,grishindn,Java,Monday 20th of November 2023 09:21:21 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Circus {
    String showName;
    String city;
    String premiereDate;
    String period;
    double ticketPrice;
    String author;
    String genre;
    int numberOfActors;

    // Конструктор класса
    public Circus(String showName, String city, String premiereDate, String period,
                  double ticketPrice, String author, String genre, int numberOfActors) {
        this.showName = showName;
        this.city = city;
        this.premiereDate = premiereDate;
        this.period = period;
        this.ticketPrice = ticketPrice;
        this.author = author;
        this.genre = genre;
        this.numberOfActors = numberOfActors;
    }

    // Геттеры и сеттеры
}

class AcrobaticShow extends Circus {
    String acrobaticsType;
    int numberOfActors;
    String equipment;

    // Конструктор класса
    public AcrobaticShow(String showName, String city, String premiereDate, String period,
                         double ticketPrice, String author, String genre, int numberOfActors,
                         String acrobaticsType, int numberOfAcrobats, String equipment) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfAcrobats);
        this.acrobaticsType = acrobaticsType;
        this.numberOfActors = numberOfAcrobats;
        this.equipment = equipment;
    }

    // Геттеры и сеттеры
}

class AnimalTraining extends Circus {
    String trainingType;
    int numberOfAnimals;
    int numberOfActors;

    // Конструктор класса
    public AnimalTraining(String showName, String city, String premiereDate, String period,
                          double ticketPrice, String author, String genre, int numberOfActors,
                          String trainingType, int numberOfAnimals) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfActors);
        this.trainingType = trainingType;
        this.numberOfAnimals = numberOfAnimals;
    }

    // Геттеры и сеттеры
}

class MagicShow extends Circus {
    String magicType;
    int numberOfActors;
    String equipment;

    // Конструктор класса
    public MagicShow(String showName, String city, String premiereDate, String period,
                     double ticketPrice, String author, String genre, int numberOfActors,
                     String magicType, String equipment) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfActors);
        this.magicType = magicType;
        this.numberOfActors = numberOfActors;
        this.equipment = equipment;
    }

    // Геттеры и сеттеры
}

class ShowsList {
    List<Circus> showsList = new ArrayList<>();

    // Метод для добавления представления
    public void addShow(Circus show) {
        showsList.add(show);
    }

    // Метод для печати списка представлений
    public void printShowsList() {
        System.out.println(""Список представлений:"");
        for (Circus show : showsList) {
            System.out.println(""Название: "" + show.showName);
            System.out.println(""Город: "" + show.city);
            System.out.println(""Дата премьеры: "" + show.premiereDate);
            System.out.println(""Период проведения: "" + show.period);
            System.out.println(""Цена билета: "" + show.ticketPrice);
            System.out.println(""Автор: "" + show.author);
            System.out.println(""Жанр: "" + show.genre);
            System.out.println(""Количество актеров: "" + show.numberOfActors);

            if (show instanceof AcrobaticShow) {
                AcrobaticShow acrobaticShow = (AcrobaticShow) show;
                System.out.println(""Тип акробатики: "" + acrobaticShow.acrobaticsType);
                System.out.println(""Количество актеров (акробаты): "" + acrobaticShow.numberOfActors);
                System.out.println(""Инвентарь: "" + acrobaticShow.equipment);
            } else if (show instanceof AnimalTraining) {
                AnimalTraining animalTraining = (AnimalTraining) show;
                System.out.println(""Вид дрессировки: "" + animalTraining.trainingType);
                System.out.println(""Количество животных: "" + animalTraining.numberOfAnimals);
            } else if (show instanceof MagicShow) {
                MagicShow magicShow = (MagicShow) show;
                System.out.println(""Вид фокусов: "" + magicShow.magicType);
                System.out.println(""Количество актеров (фокусники): "" + magicShow.numberOfActors);
                System.out.println(""Инвентарь: "" + magicShow.equipment);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        AcrobaticShow acrobaticShow = new AcrobaticShow(""ЦиркУдивлений"", ""Город1"", ""01.01.2023"", ""Неделя"", 100.0, ""Иванов"", ""Акробатика"", 10, ""Парная силовая"", 5, ""Трапеция"");
        AnimalTraining animalTraining = new AnimalTraining(""ЦиркРадуга"", ""Город2"", ""05.02.2023"", ""Две недели"", 80.0, ""Петров"", ""Дрессировка"", 8, ""Мелкие животные"", 15);
        MagicShow magicShow = new MagicShow(""ЦиркМагии"", ""Город3"", ""10.03.2023"", ""Месяц"", 120.0, ""Сидоров"", ""Иллюзии"", 6, ""Иллюзия"", ""Шляпа, палочка"");

        // Создаем объект класса ShowsList
        ShowsList showsList = new ShowsList();

        // Добавляем представления в список
        showsList.addShow(acrobaticShow);
        showsList.addShow(animalTraining);
        showsList.addShow(magicShow);

        // Печатаем список представлений
        showsList.printShowsList();
    }
}
"
ft4aW0af,Untitled,grishindn,Java,Monday 20th of November 2023 09:18:47 AM CDT,"import java.util.ArrayList;
import java.util.List;

class OnlineStore {
    String storeName;
    String productName;
    String countryOfManufacture;
    String paymentMethod;
    double purchaseAmount;
    String saleDate;
    String buyerFullName;

    // Конструктор класса
    public OnlineStore(String storeName, String productName, String countryOfManufacture,
                       String paymentMethod, double purchaseAmount, String saleDate, String buyerFullName) {
        this.storeName = storeName;
        this.productName = productName;
        this.countryOfManufacture = countryOfManufacture;
        this.paymentMethod = paymentMethod;
        this.purchaseAmount = purchaseAmount;
        this.saleDate = saleDate;
        this.buyerFullName = buyerFullName;
    }

    // Геттеры и сеттеры
}

class LivingRoomFurniture extends OnlineStore {
    String furnitureType;
    String manufacturer;

    // Конструктор класса
    public LivingRoomFurniture(String storeName, String productName, String countryOfManufacture,
                               String paymentMethod, double purchaseAmount, String saleDate,
                               String buyerFullName, String furnitureType, String manufacturer) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
        this.furnitureType = furnitureType;
        this.manufacturer = manufacturer;
    }

    // Геттеры и сеттеры
}

class KitchenFurniture extends OnlineStore {
    double length;
    double height;
    double width;
    String material;

    // Конструктор класса
    public KitchenFurniture(String storeName, String productName, String countryOfManufacture,
                            String paymentMethod, double purchaseAmount, String saleDate,
                            String buyerFullName, double length, double height, double width, String material) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
        this.length = length;
        this.height = height;
        this.width = width;
        this.material = material;
    }

    // Геттеры и сеттеры
}

class BathroomFurniture extends OnlineStore {
    // Конструктор класса
    public BathroomFurniture(String storeName, String productName, String countryOfManufacture,
                             String paymentMethod, double purchaseAmount, String saleDate,
                             String buyerFullName) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
    }

    // Геттеры и сеттеры
}

class ProductsList {
    List<OnlineStore> productsList = new ArrayList<>();

    // Метод для добавления товара
    public void addProduct(OnlineStore product) {
        productsList.add(product);
    }

    // Метод для печати списка товаров
    public void printProductsList() {
        System.out.println(""Список товаров:"");
        for (OnlineStore product : productsList) {
            System.out.println(""Название магазина: "" + product.storeName);
            System.out.println(""Название товара: "" + product.productName);
            System.out.println(""Страна производитель: "" + product.countryOfManufacture);
            System.out.println(""Вид оплаты: "" + product.paymentMethod);
            System.out.println(""Сумма покупки: "" + product.purchaseAmount);
            System.out.println(""Дата продажи: "" + product.saleDate);
            System.out.println(""ФИО покупателя: "" + product.buyerFullName);

            if (product instanceof LivingRoomFurniture) {
                LivingRoomFurniture livingRoomFurniture = (LivingRoomFurniture) product;
                System.out.println(""Тип мебели: "" + livingRoomFurniture.furnitureType);
                System.out.println(""Производитель: "" + livingRoomFurniture.manufacturer);
            } else if (product instanceof KitchenFurniture) {
                KitchenFurniture kitchenFurniture = (KitchenFurniture) product;
                System.out.println(""Длина: "" + kitchenFurniture.length);
                System.out.println(""Высота: "" + kitchenFurniture.height);
                System.out.println(""Ширина: "" + kitchenFurniture.width);
                System.out.println(""Материал: "" + kitchenFurniture.material);
            } else if (product instanceof BathroomFurniture) {
                // Дополнительных параметров для ванной мебели не добавлено, но можно добавить по аналогии
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        LivingRoomFurniture livingRoomFurniture = new LivingRoomFurniture(""МебельМаг"", ""Диван"", ""Страна1"", ""Карта"", 500.0, ""01.01.2023"", ""Иванов Иван Иванович"", ""Диван"", ""Производитель1"");
        KitchenFurniture kitchenFurniture = new KitchenFurniture(""МебельМаг"", ""Стол"", ""Страна2"", ""Наличные"", 300.0, ""05.02.2023"", ""Петров Петр Петрович"", 1.5, 0.8, 1.0, ""Дерево"");
        BathroomFurniture bathroomFurniture = new BathroomFurniture(""МебельМаг"", ""Шкаф"", ""Страна3"", ""Карта"", 200.0, ""10.03.2023"", ""Сидоров Сидор Сидорович"");

        // Создаем объект класса ProductsList
        ProductsList productsList = new ProductsList();

        // Добавляем товары в список
        productsList.addProduct(livingRoomFurniture);
        productsList.addProduct(kitchenFurniture);
        productsList.addProduct(bathroomFurniture);

        // Печатаем список товаров
        productsList.printProductsList();
    }
}
"
QxZGiQWS,JQuery - Get Json from URL,PuriDevelopers,jQuery,Monday 20th of November 2023 09:18:15 AM CDT,"$.getJSON(url, function(data) {
    console.log(data)
});"
QnWKB3fv,Untitled,wheresTheAnyKey,Bash,Monday 20th of November 2023 09:07:24 AM CDT,5107-4578-0576-9075 test
4dFzBe44,Untitled,grishindn,Java,Monday 20th of November 2023 09:06:20 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Student {
    int studentId;
    String lastName;
    String firstName;
    String group;
    String department;
    String subject;
    int grade;
    String teacherLastName;

    // Конструктор класса
    public Student(int studentId, String lastName, String firstName, String group, String department,
                   String subject, int grade, String teacherLastName) {
        this.studentId = studentId;
        this.lastName = lastName;
        this.firstName = firstName;
        this.group = group;
        this.department = department;
        this.subject = subject;
        this.grade = grade;
        this.teacherLastName = teacherLastName;
    }

    // Геттеры и сеттеры
}

class FullTimeStudent extends Student {
    double egeScore;
    double averageAttestationScore;

    // Конструктор класса
    public FullTimeStudent(int studentId, String lastName, String firstName, String group, String department,
                           String subject, int grade, String teacherLastName, double egeScore, double averageAttestationScore) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.egeScore = egeScore;
        this.averageAttestationScore = averageAttestationScore;
    }

    // Геттеры и сеттеры
}

class CorrespondenceStudent extends Student {
    String workplace;
    String position;
    double tuitionFee;

    // Конструктор класса
    public CorrespondenceStudent(int studentId, String lastName, String firstName, String group, String department,
                                 String subject, int grade, String teacherLastName, String workplace, String position, double tuitionFee) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.workplace = workplace;
        this.position = position;
        this.tuitionFee = tuitionFee;
    }

    // Геттеры и сеттеры
}

class TargetedTrainingStudent extends Student {
    String enterpriseName;
    double tuitionFee;

    // Конструктор класса
    public TargetedTrainingStudent(int studentId, String lastName, String firstName, String group, String department,
                                   String subject, int grade, String teacherLastName, String enterpriseName, double tuitionFee) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.enterpriseName = enterpriseName;
        this.tuitionFee = tuitionFee;
    }

    // Геттеры и сеттеры
}

class UniversityRecord {
    List<Student> studentsList = new ArrayList<>();

    // Метод для добавления нового студента
    public void addStudent(Student student) {
        studentsList.add(student);
    }

    // Метод для печати списка студентов
    public void printStudentsList() {
        System.out.println(""Список студентов:"");
        for (Student student : studentsList) {
            System.out.println(""Номер зачетной книжки: "" + student.studentId);
            System.out.println(""Фамилия: "" + student.lastName);
            System.out.println(""Имя: "" + student.firstName);
            System.out.println(""Группа: "" + student.group);
            System.out.println(""Кафедра: "" + student.department);
            System.out.println(""Дисциплина: "" + student.subject);
            System.out.println(""Оценка: "" + student.grade);
            System.out.println(""Фамилия преподавателя: "" + student.teacherLastName);

            if (student instanceof FullTimeStudent) {
                FullTimeStudent fullTimeStudent = (FullTimeStudent) student;
                System.out.println(""Баллы по ЕГЭ: "" + fullTimeStudent.egeScore);
                System.out.println(""Средний балл аттестата: "" + fullTimeStudent.averageAttestationScore);
            } else if (student instanceof CorrespondenceStudent) {
                CorrespondenceStudent correspondenceStudent = (CorrespondenceStudent) student;
                System.out.println(""Место работы: "" + correspondenceStudent.workplace);
                System.out.println(""Должность: "" + correspondenceStudent.position);
                System.out.println(""Сумма обучения: "" + correspondenceStudent.tuitionFee);
            } else if (student instanceof TargetedTrainingStudent) {
                TargetedTrainingStudent targetedTrainingStudent = (TargetedTrainingStudent) student;
                System.out.println(""Название целевого предприятия: "" + targetedTrainingStudent.enterpriseName);
                System.out.println(""Сумма обучения: "" + targetedTrainingStudent.tuitionFee);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        FullTimeStudent fullTimeStudent = new FullTimeStudent(1, ""Иванов"", ""Иван"", ""Группа-1"", ""Кафедра-1"", ""Математика"", 4, ""Преподаватель-1"", 90.5, 85.0);
        CorrespondenceStudent correspondenceStudent = new CorrespondenceStudent(2, ""Петров"", ""Петр"", ""Группа-2"", ""Кафедра-2"", ""Физика"", 5, ""Преподаватель-2"", ""Компания-1"", ""Инженер"", 1500.0);
        TargetedTrainingStudent targetedTrainingStudent = new TargetedTrainingStudent(3, ""Сидоров"", ""Сидор"", ""Группа-3"", ""Кафедра-3"", ""Химия"", 4, ""Преподаватель-3"", ""Предприятие-2"", 1200.0);

        // Создаем объект класса UniversityRecord
        UniversityRecord universityRecord = new UniversityRecord();

        // Добавляем студентов в список
        universityRecord.addStudent(fullTimeStudent);
        universityRecord.addStudent(correspondenceStudent);
        universityRecord.addStudent(targetedTrainingStudent);

        // Печатаем список студентов
        universityRecord.printStudentsList();
    }
}
"
DBvfNGuj,Untitled,grishindn,Java,Monday 20th of November 2023 08:59:32 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Event {
    String date;
    String time;

    // Конструктор класса
    public Event(String date, String time) {
        this.date = date;
        this.time = time;
    }

    // Геттеры и сеттеры
}

class Birthday extends Event {
    String celebrant;
    String celebrationPlace;
    int age;

    // Конструктор класса
    public Birthday(String date, String time, String celebrant, String celebrationPlace, int age) {
        super(date, time);
        this.celebrant = celebrant;
        this.celebrationPlace = celebrationPlace;
        this.age = age;
    }

    // Геттеры и сеттеры
}

class Meeting extends Event {
    String person;
    String meetingPlace;

    // Конструктор класса
    public Meeting(String date, String time, String person, String meetingPlace) {
        super(date, time);
        this.person = person;
        this.meetingPlace = meetingPlace;
    }

    // Геттеры и сеттеры
}

class OtherEvent extends Event {
    String description;

    // Конструктор класса
    public OtherEvent(String date, String time, String description) {
        super(date, time);
        this.description = description;
    }

    // Геттеры и сеттеры
}

class Notebook {
    List<Event> eventsList = new ArrayList<>();

    // Метод для добавления события
    public void addEvent(Event event) {
        eventsList.add(event);
    }

    // Метод для печати списка событий
    public void printEventsList() {
        System.out.println(""Список событий:"");
        for (Event event : eventsList) {
            System.out.println(""Дата: "" + event.date);
            System.out.println(""Время: "" + event.time);

            if (event instanceof Birthday) {
                Birthday birthday = (Birthday) event;
                System.out.println(""Именинник: "" + birthday.celebrant);
                System.out.println(""Место проведения праздника: "" + birthday.celebrationPlace);
                System.out.println(""Возраст: "" + birthday.age);
            } else if (event instanceof Meeting) {
                Meeting meeting = (Meeting) event;
                System.out.println(""Человек с которым назначена встреча: "" + meeting.person);
                System.out.println(""Место встречи: "" + meeting.meetingPlace);
            } else if (event instanceof OtherEvent) {
                OtherEvent otherEvent = (OtherEvent) event;
                System.out.println(""Описание: "" + otherEvent.description);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        Birthday birthdayEvent = new Birthday(""01.01.2000"", ""12:00"", ""Иван"", ""Дом"", 30);
        Meeting meetingEvent = new Meeting(""02.01.2000"", ""15:00"", ""Петр"", ""Кафе"");
        OtherEvent otherEvent = new OtherEvent(""03.01.2000"", ""18:00"", ""Описание важного события"");

        // Создаем объект класса Notebook
        Notebook notebook = new Notebook();

        // Добавляем события в список
        notebook.addEvent(birthdayEvent);
        notebook.addEvent(meetingEvent);
        notebook.addEvent(otherEvent);

        // Печатаем список событий
        notebook.printEventsList();
    }
}
"
vHriGGXm,Untitled,grishindn,Java,Monday 20th of November 2023 08:56:01 AM CDT,"import java.util.ArrayList;
import java.util.List;

class MilitaryPersonnel {
    String lastName;
    String platoon;
    String rank;
    String birthDate;
    String enlistmentDate;
    String unit;

    // Конструктор класса
    public MilitaryPersonnel(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit) {
        this.lastName = lastName;
        this.platoon = platoon;
        this.rank = rank;
        this.birthDate = birthDate;
        this.enlistmentDate = enlistmentDate;
        this.unit = unit;
    }

    // Геттеры и сеттеры
}

class MilitaryManagement extends MilitaryPersonnel {
    String districtName;
    String position;
    int yearsOfService;
    double bonusAmount;

    // Конструктор класса
    public MilitaryManagement(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                              String districtName, String position, int yearsOfService, double bonusAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.districtName = districtName;
        this.position = position;
        this.yearsOfService = yearsOfService;
        this.bonusAmount = bonusAmount;
    }

    // Геттеры и сеттеры
}

class MilitaryContractService extends MilitaryPersonnel {
    String contractPeriod;
    String contractDate;
    String protocolNumber;
    double salaryAmount;

    // Конструктор класса
    public MilitaryContractService(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                                   String contractPeriod, String contractDate, String protocolNumber, double salaryAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.contractPeriod = contractPeriod;
        this.contractDate = contractDate;
        this.protocolNumber = protocolNumber;
        this.salaryAmount = salaryAmount;
    }

    // Геттеры и сеттеры
}

class DecoratedMilitary extends MilitaryPersonnel {
    String awardName;
    double bonus;
    double bonusAmount;

    // Конструктор класса
    public DecoratedMilitary(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                             String awardName, double bonus, double bonusAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.awardName = awardName;
        this.bonus = bonus;
        this.bonusAmount = bonusAmount;
    }

    // Геттеры и сеттеры
}

class MilitaryRegistry {
    List<MilitaryPersonnel> personnelList = new ArrayList<>();

    // Метод для добавления нового военного
    public void addPersonnel(MilitaryPersonnel personnel) {
        personnelList.add(personnel);
    }

    // Метод для печати списка военных
    public void printPersonnelList() {
        System.out.println(""Военный состав:"");
        for (MilitaryPersonnel personnel : personnelList) {
            System.out.println(""Фамилия: "" + personnel.lastName);
            System.out.println(""Рота: "" + personnel.platoon);
            System.out.println(""Звание: "" + personnel.rank);
            System.out.println(""Дата рождения: "" + personnel.birthDate);
            System.out.println(""Дата поступления на службу: "" + personnel.enlistmentDate);
            System.out.println(""Часть: "" + personnel.unit);

            if (personnel instanceof MilitaryManagement) {
                MilitaryManagement management = (MilitaryManagement) personnel;
                System.out.println(""Название округа: "" + management.districtName);
                System.out.println(""Должность: "" + management.position);
                System.out.println(""Выслуга лет: "" + management.yearsOfService);
                System.out.println(""Сумма надбавки: "" + management.bonusAmount);
            } else if (personnel instanceof MilitaryContractService) {
                MilitaryContractService contractService = (MilitaryContractService) personnel;
                System.out.println(""Период договора: "" + contractService.contractPeriod);
                System.out.println(""Дата договора: "" + contractService.contractDate);
                System.out.println(""Номер протокола: "" + contractService.protocolNumber);
                System.out.println(""Сумма зарплаты: "" + contractService.salaryAmount);
            } else if (personnel instanceof DecoratedMilitary) {
                DecoratedMilitary decoratedMilitary = (DecoratedMilitary) personnel;
                System.out.println(""Название награды: "" + decoratedMilitary.awardName);
                System.out.println(""Премия: "" + decoratedMilitary.bonus);
                System.out.println(""Сумма надбавки: "" + decoratedMilitary.bonusAmount);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        MilitaryManagement militaryManagement = new MilitaryManagement(""Иванов"", ""1-я"", ""Капитан"", ""01.01.1980"", ""01.01.2000"", ""101-я"",
                ""Западный"", ""Командир"", 20, 500.0);

        MilitaryContractService contractService = new MilitaryContractService(""Петров"", ""2-я"", ""Майор"", ""01.02.1985"", ""01.01.2010"", ""202-я"",
                ""5 лет"", ""01.01.2010"", ""12345"", 700.0);

        DecoratedMilitary decoratedMilitary = new DecoratedMilitary(""Сидоров"", ""3-я"", ""Прапорщик"", ""15.03.1990"", ""01.02.2015"", ""303-я"",
                ""Медаль за отвагу"", 100.0, 200.0);

        // Создаем объект класса MilitaryRegistry
        MilitaryRegistry militaryRegistry = new MilitaryRegistry();

        // Добавляем военных в список
        militaryRegistry.addPersonnel(militaryManagement);
        militaryRegistry.addPersonnel(contractService);
        militaryRegistry.addPersonnel(decoratedMilitary);

        // Печатаем список военных
        militaryRegistry.printPersonnelList();
    }
}
"
8NWGSCbN,sched with coroutines and timezone aware datetime,DeaD_EyE,Python,Monday 20th of November 2023 08:48:40 AM CDT,"import time
import asyncio

from datetime import datetime as DateTime
from datetime import timedelta as TimeDelta
from datetime import timezone as TimeZone
from zoneinfo import ZoneInfo
from sched import scheduler

UTC = TimeZone.utc


def timefunc():
    return DateTime.now(ZoneInfo(""Europe/Berlin""))


def delayfunc(delay):
    if isinstance(delay, TimeDelta):
        delay = delay.total_seconds()
    time.sleep(delay)


def wrap_sync(func, *args1, **kwargs):
    async def run(*args, **kwargs):
        return func(*args, **kwargs)

    def wrapped(*args2):
        asyncio.create_task(run(*args1, *args2, **kwargs))

    return wrapped


async def main():
    task_runner = scheduler(timefunc, delayfunc)
    for delay in range(5, 31, 5):
        abs_time = DateTime.now(ZoneInfo(""Europe/Berlin"")) + TimeDelta(seconds=delay)
        task_runner.enterabs(abs_time, 0, wrap_sync(print, delay, abs_time))

    while task_runner.queue:
        task_runner.run(False)
        await asyncio.sleep(0)


if __name__ == ""__main__"":
    asyncio.run(main())
"
TPKaxGcR,fin test,wheresTheAnyKey,Bash,Monday 20th of November 2023 08:44:06 AM CDT,this is a test 378282263861047 of a number
jF4nFVKW,Untitled,grishindn,Java,Monday 20th of November 2023 08:36:31 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Library {
    String name;
    String address;
    String city;
    String directorName;

    // Конструктор класса
    public Library(String name, String address, String city, String directorName) {
        this.name = name;
        this.address = address;
        this.city = city;
        this.directorName = directorName;
    }

    // Геттеры и сеттеры (их можно сгенерировать автоматически средой разработки)

    public String getName() {
        return name;
    }

    public String getAddress() {
        return address;
    }

    public String getCity() {
        return city;
    }

    public String getDirectorName() {
        return directorName;
    }
}

class ReadingRoom extends Library {
    String roomName;
    int literatureSources;
    int floor;
    int roomNumber;

    // Конструктор класса
    public ReadingRoom(String name, String address, String city, String directorName,
                       String roomName, int literatureSources, int floor, int roomNumber) {
        super(name, address, city, directorName);
        this.roomName = roomName;
        this.literatureSources = literatureSources;
        this.floor = floor;
        this.roomNumber = roomNumber;
    }

    // Геттеры и сеттеры
}

class Reader extends Library {
    String lastName;
    String firstName;
    String middleName;
    String workplace;
    int age;
    String gender;

    // Конструктор класса
    public Reader(String name, String address, String city, String directorName,
                  String lastName, String firstName, String middleName, String workplace, int age, String gender) {
        super(name, address, city, directorName);
        this.lastName = lastName;
        this.firstName = firstName;
        this.middleName = middleName;
        this.workplace = workplace;
        this.age = age;
        this.gender = gender;
    }

    // Геттеры и сеттеры
}

class BookIssue extends Library {
    String readingRoomName;
    String readerLastName;
    String literatureName;
    String issueDate;
    String returnDate;
    double depositAmount;

    // Конструктор класса
    public BookIssue(String name, String address, String city, String directorName,
                     String readingRoomName, String readerLastName, String literatureName,
                     String issueDate, String returnDate, double depositAmount) {
        super(name, address, city, directorName);
        this.readingRoomName = readingRoomName;
        this.readerLastName = readerLastName;
        this.literatureName = literatureName;
        this.issueDate = issueDate;
        this.returnDate = returnDate;
        this.depositAmount = depositAmount;
    }

    // Геттеры и сеттеры
}

class LibraryCatalog {
    List<BookIssue> literatureList = new ArrayList<>();

    // Метод для добавления литературы в список
    public void addLiterature(BookIssue literature) {
        literatureList.add(literature);
    }

    // Метод для печати списка литературы
    public void printLiteratureList() {
        System.out.println(""Список выданной литературы:"");
        for (BookIssue literature : literatureList) {
            System.out.println(""Читательский зал: "" + literature.readingRoomName);
            System.out.println(""Фамилия читателя: "" + literature.readerLastName);
            System.out.println(""Название литературы: "" + literature.literatureName);
            System.out.println(""Дата выдачи: "" + literature.issueDate);
            System.out.println(""Срок выдачи: "" + literature.returnDate);
            System.out.println(""Сумма залога: "" + literature.depositAmount);
            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        ReadingRoom readingRoom = new ReadingRoom(""Библиотека города"", ""Улица, дом"", ""Город"", ""Иванов Иван Иванович"",
                ""Читательский зал 1"", 100, 2, 203);

        Reader reader = new Reader(""Библиотека города"", ""Улица, дом"", ""Город"", ""Иванов Иван Иванович"",
                ""Иванов"", ""Иван"", ""Иванович"", ""Компания"", 25, ""М"");

        BookIssue bookIssue = new BookIssue(""Библиотека города"", ""Улица, дом"", ""Город"", ""Иванов Иван Иванович"",
                ""Читательский зал 1"", ""Иванов"", ""Книга 1"", ""01.01.2023"", ""15.01.2023"", 50.0);

        // Создаем объект класса LibraryCatalog
        LibraryCatalog libraryCatalog = new LibraryCatalog();

        // Добавляем литературу в список
        libraryCatalog.addLiterature(bookIssue);

        // Печатаем список литературы
        libraryCatalog.printLiteratureList();
    }
}
"
1tmJ4EQg,Untitled,Diaxon,HTML,Monday 20th of November 2023 08:35:15 AM CDT,"<html>
<head>
    <meta charset=""UTF-8"">


</head>
<body>
<!--Utwórz formularz do wprowadzania danych tekstowych. Za pomocą formularza wprowadzamy IMIE, NAZWISKO i-->
<!--MIEJSCOWOSC. Dane są wyświetlane w postaci (bez różnicy jakiej wielkości litery wpiszemy do formularza:-->
<div>
    <input type=""text"" name=""imie"" placeholder=""Imię"">
    <input type=""text"" name=""nazwisko"" placeholder=""Nazwisko"">
    <input type=""text"" name=""miejscowosc"" placeholder=""Miejscowość"">
    <input type=""submit"" value=""Wyślij"" onclick=""ex1()"">
</div>
<div>
    <input type=""number"" placeholder=""podaj ilość metrów"">
    <button onclick=""ex2()"">Wyślij</button>
    <p id=""malowanie""></p>
    <p id=""ukladaniePlytek""></p>
    <p id=""gipsowanieScian""></p>
</div>
<p id=""ex1""></p>

<div>
    <input type=""text"" id=""email"">
    <button onclick=""ex3()"">Wyślij</button>
    <p id=""ex3""></p>
</div>

<div>
    <input type=""text"" id=""pesel"">
    <button onclick=""ex4()"">Wyślij</button>
    <p id=""ex4""></p>
</div>

<div>
    <input type=""range"" id=""powierchnia"" min=""0"" max=""100"">
    <input type=""range"" id=""cena"" min=""0"" max=""100"">

    <div>
        <button onclick=""ex5(2)"">Pasywny</button>
        <button onclick=""ex5(1)"">Energooszczedy+</button>
        <button onclick=""ex5(3)"">Energooszczedy</button>
    </div>

    <p id=""ex5""></p>
</div>

<script>
    const ex1 = () => {
        const imie = document.querySelector('input[name=""imie""]').value;
        const nazwisko = document.querySelector('input[name=""nazwisko""]').value;
        const miejscowosc = document.querySelector('input[name=""miejscowosc""]').value;
        const element = document.getElementById('ex1');
        element.innerHTML = imie + ' ' + nazwisko + ' ' + miejscowosc;
    }

    const ex2 = () => {
        // Utwórz skrypt, który policzy koszt usługi. Z formularza rozwijanego wybierasz rodzaj usługi i wpisujesz liczbę m2 (metrów
        // kwadratowych). Skrypt powinien wyliczyć cenę.
        //     Malowanie = 500zł/m2
        // Układanie płytek = 600zł/m2
        // Gipsowanie ścian = 300zł/m2
        const number = document.querySelector('input[type=""number""]').value;

        const malowanie = document.getElementById('malowanie');
        const ukladaniePlytek = document.getElementById('ukladaniePlytek');
        const gipsowanieScian = document.getElementById('gipsowanieScian');

        malowanie.innerHTML = number * 500;
        ukladaniePlytek.innerHTML = number * 600;
        gipsowanieScian.innerHTML = number * 300;

    }

    const ex3 = () => {
        // Zabezpiecz formularz, który sprawdzi czy został wprowadzony prawidłowo adres email. Jeżeli został wpisany prawidłowy
        // adres – wyświetla się on na stronie. W przeciwnym wypadku stosowny komunikat. (sprawdzamy czy w ciągu znaków
        // istnieje „@”).
        const email = document.getElementById('email').value;
        const element = document.getElementById('ex1');

        if (email.includes('@')) {
            element.innerHTML = email;
        } else {
            element.innerHTML = 'Nieprawidłowy adres email';
        }

    }
    const ex4 = () => {
        // Dodaj formularz do wpisywania numeru PESEL. Skrypt powinien pobrać pesel i wyświetlić datę urodzenia np. 98012215611
        // - wynik = 98-01-22. Formularz posiada, także zabezpieczenie jeżeli wpiszemy PESEL o mniejszej długości niż 11 znaków to
        // wyświetla się komunikat błędny PESEL.
        const pesel = document.getElementById('pesel').value;
        const element = document.getElementById('ex4');

        if (pesel.length === 11) {
            const year = pesel.substring(0, 2);
            const month = pesel.substring(2, 4);
            const day = pesel.substring(4, 6);
            element.innerHTML = year + '-' + month + '-' + day;
        } else {
            element.innerHTML = 'Błędny PESEL';
        }

    }

    const ex5 = (klasa) => {
        // W zadania podstawiamy własne dane. Wynik to pomnożone wartości:
        //     Powierzchnia użytkowa domu*Cena prądu*klasa energetyczna budynku(przyciski). Projekt nie musi być identyczny jak na
        // przykładzie.
        const powierzchnia = document.getElementById('powierchnia').value;
        const cena = document.getElementById('cena').value;
        const element = document.getElementById('ex5');
        const result = powierzchnia * cena * klasa;
        element.innerHTML = result;
    }

</script>

</body>
</html>"
VtqVUNN5,snowybot terminatrix,coinwalk,JavaScript,Monday 20th of November 2023 08:34:33 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/8000).toFixed(8);
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
var bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
eMw7AZgZ,Untitled,grishindn,Java,Monday 20th of November 2023 08:34:06 AM CDT,"import java.util.Arrays;
import java.util.Scanner;

class Customer {
    int id;
    String lastName;
    String firstName;
    String middleName;
    String address;
    long creditCardNumber;
    long bankAccountNumber;

    // Конструктор класса
    public Customer(int id, String lastName, String firstName, String middleName, String address,
                    long creditCardNumber, long bankAccountNumber) {
        this.id = id;
        this.lastName = lastName;
        this.firstName = firstName;
        this.middleName = middleName;
        this.address = address;
        this.creditCardNumber = creditCardNumber;
        this.bankAccountNumber = bankAccountNumber;
    }

    // Метод для вывода информации о покупателе
    public void displayInfo() {
        System.out.println(""ID: "" + id);
        System.out.println(""Фамилия: "" + lastName);
        System.out.println(""Имя: "" + firstName);
        System.out.println(""Отчество: "" + middleName);
        System.out.println(""Адрес: "" + address);
        System.out.println(""Номер кредитной карточки: "" + creditCardNumber);
        System.out.println(""Номер банковского счета: "" + bankAccountNumber);
        System.out.println(""---------------------------"");
    }
}

public class Main{
    public static void main(String[] args) {
        // Создаем массив объектов Customer
        Customer[] customers = {
                new Customer(1, ""Иванов"", ""Иван"", ""Иванович"", ""Москва"", 1234567890123456L, 9876543210L),
                new Customer(2, ""Петров"", ""Петр"", ""Петрович"", ""Санкт-Петербург"", 2345678901234567L, 8765432109L),
                new Customer(3, ""Сидоров"", ""Сидор"", ""Сидорович"", ""Новосибирск"", 3456789012345678L, 7654321098L)
        };

        // a) Список покупателей в алфавитном порядке
        Arrays.sort(customers, (customer1, customer2) -> customer1.lastName.compareTo(customer2.lastName));
        System.out.println(""Список покупателей в алфавитном порядке:"");
        displayCustomerArray(customers);

        // b) Список покупателей, у которых номер кредитной карточки находится в заданном интервале
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Введите начало интервала номеров кредитных карт: "");
        long startCreditCardNumber = scanner.nextLong();
        System.out.print(""Введите конец интервала номеров кредитных карт: "");
        long endCreditCardNumber = scanner.nextLong();
        System.out.println(""Список покупателей с номерами кредитных карт в заданном интервале:"");
        displayCustomersInCreditCardInterval(customers, startCreditCardNumber, endCreditCardNumber);
    }

    // Метод для вывода массива объектов Customer
    private static void displayCustomerArray(Customer[] customers) {
        for (Customer customer : customers) {
            customer.displayInfo();
        }
    }

    // Метод для вывода покупателей с номерами кредитных карт в заданном интервале
    private static void displayCustomersInCreditCardInterval(Customer[] customers, long start, long end) {
        for (Customer customer : customers) {
            if (customer.creditCardNumber >= start && customer.creditCardNumber <= end) {
                customer.displayInfo();
            }
        }
    }
}
"
nhCe9cQz,News Nov20 23,Newscaster_Ned,Email,Monday 20th of November 2023 08:32:39 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

W‎A‎T‎C‎H‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎r‎e‎s‎ ‎L‎i‎t‎t‎l‎e‎ ‎G‎i‎r‎l‎'‎s‎ ‎E‎a‎r‎s‎,‎ ‎A‎s‎k‎s‎ ‎I‎f‎ ‎S‎h‎e‎'‎s‎ ‎1‎7‎
F‎o‎r‎m‎e‎r‎ ‎P‎o‎r‎n‎ ‎S‎t‎a‎r‎ ‎R‎o‎n‎ ‎J‎e‎r‎e‎m‎y‎ ‎t‎o‎ ‎b‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎t‎o‎ ‎'‎P‎r‎i‎v‎a‎t‎e‎ ‎R‎e‎s‎i‎d‎e‎n‎c‎e‎'‎
'‎G‎o‎o‎d‎f‎e‎l‎l‎a‎s‎,‎'‎ ‎'‎S‎o‎p‎r‎a‎n‎o‎s‎'‎ ‎S‎t‎a‎r‎ ‎S‎u‎z‎a‎n‎n‎e‎ ‎S‎h‎e‎p‎h‎e‎r‎d‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎9‎
C‎a‎r‎d‎i‎ ‎B‎ ‎T‎o‎r‎c‎h‎e‎s‎ ‎B‎i‎d‎e‎n‎:‎ ‎O‎u‎r‎ ‎C‎o‎u‎n‎t‎r‎y‎ ‎I‎s‎ ‎'‎R‎e‎a‎l‎l‎y‎ ‎F‎*‎*‎k‎e‎d‎'‎
M‎i‎s‎s‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎ ‎W‎e‎a‎r‎s‎ ‎B‎u‎r‎k‎i‎n‎i‎ ‎D‎u‎r‎i‎n‎g‎ ‎S‎w‎i‎m‎s‎u‎i‎t‎ ‎P‎o‎r‎t‎i‎o‎n‎ ‎o‎f‎ ‎M‎i‎s‎s‎ ‎U‎n‎i‎v‎e‎r‎s‎e‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
P‎o‎p‎u‎l‎i‎s‎t‎ ‎L‎i‎b‎e‎r‎t‎a‎r‎i‎a‎n‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎W‎i‎n‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎ ‎o‎f‎ ‎A‎r‎g‎e‎n‎t‎i‎n‎a‎ ‎i‎n‎ ‎L‎a‎n‎d‎s‎l‎i‎d‎e‎

S‎o‎c‎i‎a‎l‎i‎s‎t‎s‎ ‎S‎h‎o‎c‎k‎e‎d‎:‎ ‎‘‎T‎h‎e‎ ‎R‎e‎s‎u‎l‎t‎s‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎W‎h‎a‎t‎ ‎W‎e‎ ‎E‎x‎p‎e‎c‎t‎e‎d‎’‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎L‎i‎b‎e‎r‎t‎y‎ ‎A‎d‎v‎a‎n‎c‎e‎s‎ ‎c‎o‎a‎l‎i‎t‎i‎o‎n‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎g‎r‎e‎e‎t‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎r‎s‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎h‎i‎s‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎h‎e‎a‎d‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎a‎f‎t‎e‎r‎ ‎w‎i‎n‎n‎i‎n‎g‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎r‎u‎n‎o‎f‎f‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎B‎u‎e‎n‎o‎s‎ ‎A‎i‎r‎e‎s‎,‎ ‎A‎r‎g‎e‎n‎t‎i‎n‎a‎,‎ ‎S‎u‎n‎d‎a‎y‎,‎ ‎N‎o‎v‎.‎ ‎1‎9‎,‎ ‎2‎0‎2‎3‎.‎ ‎(‎A‎P‎ ‎P‎h‎o‎t‎o‎/‎N‎a‎t‎a‎c‎h‎a‎ ‎P‎i‎s‎a‎r‎e‎n‎k‎o‎
E‎c‎o‎n‎o‎m‎i‎s‎t‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎,‎ ‎a‎ ‎c‎a‎b‎l‎e‎ ‎n‎e‎w‎s‎ ‎f‎i‎x‎t‎u‎r‎e‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎e‎l‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎A‎r‎g‎e‎n‎t‎i‎n‎e‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎r‎i‎d‎i‎n‎g‎ ‎a‎ ‎w‎a‎v‎e‎ ‎o‎f‎ ‎a‎n‎t‎i‎-‎s‎o‎c‎i‎a‎l‎i‎s‎t‎ ‎s‎e‎n‎t‎i‎m‎e‎n‎t‎ ‎i‎n‎ ‎2‎0‎2‎1‎,‎ ‎w‎a‎s‎ ‎e‎l‎e‎c‎t‎e‎d‎ ‎t‎h‎e‎ ‎n‎a‎t‎i‎o‎n‎’‎s‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎n‎ ‎S‎u‎n‎d‎a‎y‎.‎

R‎i‎c‎h‎e‎s‎t‎ ‎1‎%‎ ‎o‎f‎ ‎G‎l‎o‎b‎a‎l‎ ‎E‎l‎i‎t‎e‎s‎ ‎S‎p‎e‎w‎ ‎a‎s‎ ‎M‎u‎c‎h‎ ‎C‎a‎r‎b‎o‎n‎ ‎a‎s‎ ‎B‎o‎t‎t‎o‎m‎ ‎T‎w‎o‎-‎T‎h‎i‎r‎d‎s‎
R‎i‎c‎h‎e‎s‎t‎ ‎1‎%‎ ‎o‎f‎ ‎G‎l‎o‎b‎a‎l‎ ‎E‎l‎i‎t‎e‎s‎ ‎S‎p‎e‎w‎ ‎a‎s‎ ‎M‎u‎c‎h‎ ‎C‎a‎r‎b‎o‎n‎ ‎a‎s‎ ‎B‎o‎t‎t‎o‎m‎ ‎T‎w‎o‎-‎T‎h‎i‎r‎d‎s‎
8‎7‎
T‎h‎e‎ ‎P‎a‎r‎i‎s‎ ‎d‎e‎a‎l‎ ‎o‎n‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎h‎a‎n‎g‎e‎ ‎c‎o‎m‎m‎i‎t‎s‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎t‎o‎ ‎l‎i‎m‎i‎t‎i‎n‎g‎ ‎g‎l‎o‎b‎a‎l‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎ ‎r‎i‎s‎e‎s‎ ‎t‎o‎ ‎""‎w‎e‎l‎l‎ ‎b‎e‎l‎o‎w‎""‎ ‎2‎ ‎d‎e‎g‎r‎e‎e‎s‎ ‎C‎e‎l‎s‎i‎u‎s‎ ‎o‎v‎e‎r‎ ‎p‎r‎e‎-‎i‎n‎d‎u‎s‎t‎r‎i‎a‎l‎ ‎l‎e‎v‎e‎l‎s‎ ‎a‎n‎d‎ ‎p‎u‎r‎s‎u‎e‎ ‎e‎f‎f‎o‎r‎t‎s‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎s‎ ‎t‎o‎ ‎1‎.‎5‎ ‎d‎e‎g‎r‎e‎e‎s‎ ‎C‎e‎l‎s‎i‎u‎s‎ ‎(‎A‎F‎P‎/‎F‎i‎l‎e‎ ‎L‎i‎o‎n‎e‎l‎ ‎B‎o‎n‎a‎v‎e‎n‎t‎u‎r‎e‎)‎
W‎o‎k‎e‎ ‎L‎a‎n‎c‎e‎t‎ ‎W‎a‎r‎n‎s‎:‎ ‎‘‎H‎i‎g‎h‎e‎s‎t‎ ‎G‎l‎o‎b‎a‎l‎ ‎T‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎s‎ ‎i‎n‎ ‎o‎v‎e‎r‎ ‎1‎0‎0‎,‎0‎0‎0‎ ‎Y‎e‎a‎r‎s‎’‎
1‎9‎1‎
T‎e‎x‎a‎s‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎f‎o‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
T‎e‎x‎a‎s‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎f‎o‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
2‎,‎4‎7‎9‎

F‎o‎r‎m‎e‎r‎ ‎F‎i‎r‎s‎t‎ ‎L‎a‎d‎y‎ ‎R‎o‎s‎a‎l‎y‎n‎n‎ ‎C‎a‎r‎t‎e‎r‎ ‎D‎e‎a‎d‎ ‎a‎t‎ ‎9‎6‎
1‎,‎4‎7‎2‎
M‎a‎n‎h‎u‎n‎t‎ ‎a‎s‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎S‎n‎e‎a‎k‎ ‎i‎n‎t‎o‎ ‎U‎K‎ ‎o‎n‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎B‎o‎a‎t‎s‎
M‎a‎n‎h‎u‎n‎t‎ ‎a‎s‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎S‎n‎e‎a‎k‎ ‎i‎n‎t‎o‎ ‎U‎K‎ ‎o‎n‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎B‎o‎a‎t‎s‎
9‎2‎
W‎a‎P‎o‎:‎ ‎'‎T‎e‎n‎t‎a‎t‎i‎v‎e‎'‎ ‎D‎e‎a‎l‎:‎ ‎5‎-‎D‎a‎y‎ ‎G‎a‎z‎a‎ ‎P‎a‎u‎s‎e‎,‎ ‎5‎0‎+‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎ ‎(‎N‎o‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎,‎ ‎M‎e‎n‎)‎
W‎a‎P‎o‎:‎ ‎'‎T‎e‎n‎t‎a‎t‎i‎v‎e‎'‎ ‎D‎e‎a‎l‎:‎ ‎5‎-‎D‎a‎y‎ ‎G‎a‎z‎a‎ ‎P‎a‎u‎s‎e‎,‎ ‎5‎0‎+‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎ ‎(‎N‎o‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎,‎ ‎M‎e‎n‎)‎
4‎,‎9‎6‎7‎
P‎o‎l‎l‎:‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎E‎x‎p‎r‎e‎s‎s‎ ‎S‎t‎r‎o‎n‎g‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎M‎a‎s‎s‎a‎c‎r‎e‎,‎ ‎H‎a‎m‎a‎s‎
P‎o‎l‎l‎:‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎E‎x‎p‎r‎e‎s‎s‎ ‎S‎t‎r‎o‎n‎g‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎M‎a‎s‎s‎a‎c‎r‎e‎,‎ ‎H‎a‎m‎a‎s‎
5‎1‎3‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎L‎i‎b‎e‎r‎t‎y‎ ‎A‎d‎v‎a‎n‎c‎e‎s‎ ‎c‎o‎a‎l‎i‎t‎i‎o‎n‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎g‎r‎e‎e‎t‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎r‎s‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎h‎i‎s‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎h‎e‎a‎d‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎a‎f‎t‎e‎r‎ ‎w‎i‎n‎n‎i‎n‎g‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎r‎u‎n‎o‎f‎f‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎B‎u‎e‎n‎o‎s‎ ‎A‎i‎r‎e‎s‎,‎ ‎A‎r‎g‎e‎n‎t‎i‎n‎a‎,‎ ‎S‎u‎n‎d‎a‎y‎,‎ ‎N‎o‎v‎.‎ ‎1‎9‎,‎ ‎2‎0‎2‎3‎.‎ ‎(‎A‎P‎ ‎P‎h‎o‎t‎o‎/‎N‎a‎t‎a‎c‎h‎a‎ ‎P‎i‎s‎a‎r‎e‎n‎k‎o‎
P‎o‎p‎u‎l‎i‎s‎t‎ ‎L‎i‎b‎e‎r‎t‎a‎r‎i‎a‎n‎ ‎J‎a‎v‎i‎e‎r‎ ‎M‎i‎l‎e‎i‎ ‎W‎i‎n‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎ ‎o‎f‎ ‎A‎r‎g‎e‎n‎t‎i‎n‎a‎ ‎i‎n‎ ‎L‎a‎n‎d‎s‎l‎i‎d‎e‎
3‎,‎6‎0‎4‎
K‎a‎n‎y‎e‎ ‎W‎e‎s‎t‎ ‎A‎s‎k‎s‎:‎ ‎'‎H‎o‎w‎ ‎I‎’‎m‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎?‎ ‎I‎ ‎J‎u‎s‎t‎ ‎F‎*‎*‎e‎d‎ ‎a‎ ‎J‎e‎w‎i‎s‎h‎ ‎B‎*‎*‎c‎h‎'‎
K‎a‎n‎y‎e‎ ‎W‎e‎s‎t‎ ‎A‎s‎k‎s‎:‎ ‎'‎H‎o‎w‎ ‎I‎’‎m‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎?‎ ‎I‎ ‎J‎u‎s‎t‎ ‎F‎*‎*‎e‎d‎ ‎a‎ ‎J‎e‎w‎i‎s‎h‎ ‎B‎*‎*‎c‎h‎'‎
7‎5‎3‎
E‎l‎o‎n‎ ‎M‎u‎s‎k‎ ‎B‎l‎a‎s‎t‎s‎ ‎M‎a‎j‎o‎r‎ ‎C‎o‎r‎p‎o‎r‎a‎t‎i‎o‎n‎s‎:‎ ‎'‎O‎p‎p‎r‎e‎s‎s‎o‎r‎s‎ ‎o‎f‎ ‎R‎i‎g‎h‎t‎ ‎t‎o‎ ‎F‎r‎e‎e‎ ‎S‎p‎e‎e‎c‎h‎'‎
E‎l‎o‎n‎ ‎M‎u‎s‎k‎ ‎B‎l‎a‎s‎t‎s‎ ‎M‎a‎j‎o‎r‎ ‎C‎o‎r‎p‎o‎r‎a‎t‎i‎o‎n‎s‎:‎ ‎'‎O‎p‎p‎r‎e‎s‎s‎o‎r‎s‎ ‎o‎f‎ ‎R‎i‎g‎h‎t‎ ‎t‎o‎ ‎F‎r‎e‎e‎ ‎S‎p‎e‎e‎c‎h‎'‎

P‎i‎z‎z‎a‎ ‎D‎e‎l‎i‎v‎e‎r‎y‎ ‎D‎r‎i‎v‎e‎r‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎1‎ ‎o‎f‎ ‎2‎ ‎M‎o‎n‎k‎m‎e‎n‎ ‎W‎h‎o‎ ‎R‎o‎b‎b‎e‎d‎ ‎H‎i‎m‎.‎

N‎e‎x‎t‎ ‎t‎i‎m‎e‎ ‎o‎r‎d‎e‎r‎ ‎f‎r‎i‎e‎d‎ ‎c‎h‎i‎c‎k‎e‎n‎ ‎t‎o‎p‎p‎i‎n‎g‎s‎.‎


H‎a‎r‎r‎i‎s‎b‎u‎r‎g‎ ‎H‎o‎m‎i‎n‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎.‎


N‎e‎g‎r‎e‎s‎s‎ ‎R‎e‎p‎.‎ ‎C‎o‎r‎r‎i‎n‎e‎ ‎B‎r‎o‎w‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎L‎y‎i‎n‎g‎ ‎a‎n‎d‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎.‎


T‎u‎s‎c‎a‎l‎o‎o‎s‎a‎ ‎G‎o‎r‎i‎l‎l‎a‎ ‎R‎a‎p‎e‎s‎ ‎2‎ ‎U‎n‎d‎e‎r‎a‎g‎e‎ ‎G‎i‎r‎l‎s‎.‎


M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎D‎r‎e‎s‎s‎e‎s‎ ‎u‎p‎ ‎a‎s‎ ‎O‎l‎d‎ ‎L‎a‎d‎y‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎s‎ ‎E‎x‎-‎G‎f‎ ‎a‎s‎ ‎S‎h‎e‎ ‎W‎a‎s‎ ‎U‎n‎l‎o‎a‎d‎i‎n‎g‎ ‎G‎r‎o‎c‎e‎r‎i‎e‎s‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎P‎i‎c‎k‎a‎n‎i‎n‎n‎i‎e‎s‎ ‎S‎p‎e‎e‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎C‎o‎n‎c‎o‎r‎d‎ ‎C‎h‎i‎n‎k‎ ‎N‎a‎i‎l‎ ‎S‎a‎l‎o‎n‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎P‎a‎y‎i‎n‎g‎.‎


N‎e‎g‎r‎o‎ ‎w‎i‎t‎h‎ ‎B‎r‎e‎a‎s‎t‎ ‎C‎a‎n‎c‎e‎r‎ ‎R‎i‎b‎b‎o‎n‎ ‎C‎h‎o‎k‎e‎s‎ ‎a‎n‎d‎ ‎R‎o‎b‎s‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎o‎m‎a‎n‎ ‎o‎n‎ ‎B‎r‎o‎n‎x‎ ‎S‎i‎d‎e‎w‎a‎l‎k‎.‎


N‎e‎g‎r‎o‎ ‎N‎B‎A‎ ‎P‎l‎a‎y‎e‎r‎ ‎K‎e‎r‎m‎i‎t‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎C‎h‎a‎r‎i‎t‎y‎ ‎F‎r‎a‎u‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎1‎°‎
/‎5‎2‎°‎
1‎6‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎0‎ ‎|‎ ‎D‎a‎y‎
8‎1‎°‎
1‎6‎%‎
W‎
1‎2‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎8‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎2‎ ‎p‎m‎
M‎o‎n‎ ‎2‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎2‎°‎
2‎%‎
N‎N‎W‎
1‎6‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎t‎o‎ ‎m‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎5‎2‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎3‎2‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
-‎-‎
T‎u‎e‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎/‎W‎i‎n‎d‎
6‎2‎°‎
/‎4‎2‎°‎
1‎%‎
N‎ ‎2‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎4‎0‎°‎
2‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎8‎°‎
/‎4‎0‎°‎
2‎3‎%‎
S‎S‎W‎ ‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎5‎°‎
6‎%‎
S‎E‎ ‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎8‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎6‎
S‎h‎o‎w‎e‎r‎s‎
5‎8‎°‎
/‎4‎4‎°‎
4‎1‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎7‎
C‎l‎o‎u‎d‎y‎
5‎5‎°‎
/‎4‎3‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎8‎°‎
/‎4‎5‎°‎
2‎4‎%‎
N‎N‎E‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎9‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎4‎5‎°‎
4‎0‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎0‎°‎
/‎4‎5‎°‎
1‎3‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎1‎°‎
/‎4‎9‎°‎
2‎4‎%‎
E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎5‎1‎°‎
4‎0‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
S‎h‎o‎w‎e‎r‎s‎
6‎1‎°‎
/‎5‎1‎°‎
4‎4‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
S‎h‎o‎w‎e‎r‎s‎
6‎1‎°‎
/‎5‎0‎°‎
3‎6‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎w‎o‎o‎d‎ ‎c‎h‎o‎p‎p‎i‎n‎g‎ ‎n‎e‎g‎r‎o‎.‎ 🪓👨🏿‍🦲

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎i‎g‎g‎e‎r‎ ‎(‎D‎o‎g‎)‎
A‎l‎t‎h‎o‎u‎g‎h‎ ‎i‎t‎ ‎m‎a‎y‎ ‎s‎e‎e‎m‎ ‎u‎n‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎a‎l‎ ‎a‎n‎d‎ ‎s‎h‎o‎c‎k‎i‎n‎g‎ ‎b‎y‎ ‎m‎o‎d‎e‎r‎n‎ ‎s‎t‎a‎n‎d‎a‎r‎d‎s‎,‎ ‎N‎i‎g‎g‎e‎r‎ ‎w‎a‎s‎ ‎o‎c‎c‎a‎s‎i‎o‎n‎a‎l‎l‎y‎ ‎u‎s‎e‎d‎ ‎a‎s‎ ‎a‎ ‎n‎a‎m‎e‎ ‎f‎o‎r‎ ‎d‎o‎g‎s‎ ‎a‎s‎ ‎i‎t‎ ‎o‎r‎i‎g‎i‎n‎a‎t‎e‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎L‎a‎t‎i‎n‎ ‎w‎o‎r‎d‎ ‎N‎i‎g‎e‎r‎ ‎s‎i‎m‎p‎l‎y‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎b‎l‎a‎c‎k‎.‎ ‎A‎ ‎d‎o‎g‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎t‎o‎ ‎s‎n‎i‎f‎f‎ ‎f‎o‎r‎ ‎e‎x‎p‎l‎o‎s‎i‎v‎e‎s‎ ‎w‎a‎s‎ ‎g‎i‎v‎e‎n‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎t‎i‎m‎e‎ ‎p‎e‎r‎i‎o‎d‎.‎ ‎T‎o‎d‎a‎y‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎c‎r‎u‎e‎l‎t‎y‎ ‎t‎o‎ ‎a‎n‎i‎m‎a‎l‎s‎,‎ ‎s‎o‎ ‎t‎h‎e‎ ‎A‎r‎m‎y‎ ‎h‎a‎s‎ ‎r‎e‎s‎o‎r‎t‎e‎d‎ ‎t‎o‎ ‎u‎s‎i‎n‎g‎ ‎r‎e‎a‎l‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎t‎o‎ ‎l‎o‎o‎k‎ ‎f‎o‎r‎ ‎e‎x‎p‎l‎o‎s‎i‎v‎e‎s‎ ‎i‎n‎s‎t‎e‎a‎d‎,‎ ‎o‎r‎ ‎o‎n‎ ‎o‎c‎c‎a‎s‎i‎o‎n‎ ‎e‎x‎p‎e‎n‎s‎i‎v‎e‎ ‎d‎r‎o‎n‎e‎ ‎r‎o‎b‎o‎t‎s‎ ‎i‎f‎ ‎t‎h‎e‎y‎ ‎r‎u‎n‎ ‎o‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎m‎.‎ ‎A‎ ‎d‎o‎g‎ ‎n‎a‎m‎e‎d‎ ‎N‎i‎g‎g‎e‎r‎ ‎a‎l‎s‎o‎ ‎l‎e‎a‎d‎ ‎a‎ ‎s‎l‎e‎d‎g‎e‎ ‎d‎o‎g‎ ‎t‎e‎a‎m‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎T‎e‎r‎r‎a‎ ‎N‎o‎v‎a‎ ‎E‎x‎p‎e‎d‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎a‎n‎t‎a‎r‎c‎t‎i‎c‎ ‎d‎u‎r‎i‎n‎g‎ ‎1‎9‎1‎0‎-‎1‎9‎1‎2‎.‎ ‎A‎ ‎d‎o‎g‎ ‎b‎y‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎ ‎o‎f‎ ‎N‎i‎g‎g‎e‎r‎ ‎w‎a‎s‎ ‎a‎l‎s‎o‎ ‎t‎h‎e‎ ‎m‎a‎s‎c‎o‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎k‎e‎r‎s‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎H‎o‎o‎v‎e‎r‎ ‎D‎a‎m‎.‎


(‎(‎ ‎H‎e‎l‎l‎o‎ ‎N‎i‎g‎g‎e‎r‎ ‎o‎l‎'‎ ‎b‎o‎y‎.‎ ‎H‎o‎w‎ ‎y‎o‎u‎ ‎d‎o‎i‎n‎g‎?‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎n‎ ‎a‎r‎c‎h‎a‎e‎o‎l‎o‎g‎y‎,‎ ‎t‎h‎e‎ ‎B‎a‎c‎t‎r‎i‎a‎–‎M‎a‎r‎g‎i‎a‎n‎a‎ ‎A‎r‎c‎h‎a‎e‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎C‎o‎m‎p‎l‎e‎x‎ ‎(‎B‎M‎A‎C‎)‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎O‎x‎u‎s‎ ‎C‎i‎v‎i‎l‎i‎z‎a‎t‎i‎o‎n‎,‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎a‎ ‎M‎i‎d‎d‎l‎e‎ ‎B‎r‎o‎n‎z‎e‎ ‎A‎g‎e‎ ‎c‎i‎v‎i‎l‎i‎z‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎A‎s‎i‎a‎,‎ ‎e‎x‎i‎s‎t‎i‎n‎g‎ ‎i‎n‎ ‎i‎t‎s‎ ‎u‎r‎b‎a‎n‎ ‎p‎h‎a‎s‎e‎ ‎f‎r‎o‎m‎ ‎c‎i‎r‎c‎a‎ ‎2‎4‎0‎0‎ ‎t‎o‎ ‎1‎9‎5‎0‎ ‎B‎C‎.‎ ‎M‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎B‎M‎A‎C‎'‎s‎ ‎u‎r‎b‎a‎n‎ ‎s‎i‎t‎e‎s‎ ‎a‎r‎e‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎M‎a‎r‎g‎i‎a‎n‎a‎ ‎(‎m‎o‎d‎e‎r‎n‎ ‎T‎u‎r‎k‎m‎e‎n‎i‎s‎t‎a‎n‎)‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎a‎r‎g‎h‎a‎b‎ ‎R‎i‎v‎e‎r‎ ‎d‎e‎l‎t‎a‎,‎ ‎a‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎K‎o‎p‎e‎t‎ ‎D‎a‎g‎ ‎m‎o‎u‎n‎t‎a‎i‎n‎s‎.‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎f‎e‎w‎ ‎l‎a‎t‎e‎r‎ ‎s‎i‎t‎e‎s‎ ‎i‎n‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎B‎a‎c‎t‎r‎i‎a‎,‎ ‎i‎n‎ ‎w‎h‎a‎t‎ ‎i‎s‎ ‎n‎o‎w‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎U‎z‎b‎e‎k‎i‎s‎t‎a‎n‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎s‎e‎ ‎a‎r‎e‎ ‎m‎o‎s‎t‎l‎y‎ ‎g‎r‎a‎v‎e‎y‎a‎r‎d‎s‎ ‎b‎e‎l‎o‎n‎g‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎B‎M‎A‎C‎-‎r‎e‎l‎a‎t‎e‎d‎ ‎S‎a‎p‎a‎l‎l‎i‎ ‎c‎u‎l‎t‎u‎r‎e‎.‎ ‎A‎ ‎s‎i‎n‎g‎l‎e‎ ‎B‎M‎A‎C‎ ‎s‎i‎t‎e‎ ‎l‎i‎e‎s‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎B‎a‎c‎t‎r‎i‎a‎,‎ ‎i‎n‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎ ‎o‎f‎ ‎m‎o‎d‎e‎r‎n‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎.‎ ‎S‎i‎t‎e‎s‎ ‎f‎o‎u‎n‎d‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎e‎a‎s‎t‎,‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎w‎e‎s‎t‎e‎r‎n‎ ‎T‎a‎j‎i‎k‎i‎s‎t‎a‎n‎,‎ ‎t‎h‎o‎u‎g‎h‎ ‎c‎o‎n‎t‎e‎m‎p‎o‎r‎a‎r‎y‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎B‎M‎A‎C‎ ‎s‎i‎t‎e‎s‎ ‎i‎n‎ ‎M‎a‎r‎g‎i‎a‎n‎a‎,‎ ‎a‎r‎e‎ ‎o‎n‎l‎y‎ ‎g‎r‎a‎v‎e‎y‎a‎r‎d‎s‎,‎ ‎w‎i‎t‎h‎ ‎n‎o‎ ‎u‎r‎b‎a‎n‎ ‎d‎e‎v‎e‎l‎o‎p‎m‎e‎n‎t‎s‎ ‎a‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎m‎.‎ ‎T‎h‎i‎s‎ ‎B‎M‎A‎C‎ ‎s‎t‎a‎t‎u‎e‎t‎t‎e‎ ‎o‎f‎ ‎a‎ ‎s‎e‎a‎t‎e‎d‎ ‎f‎e‎m‎a‎l‎e‎ ‎i‎s‎ ‎a‎n‎ ‎e‎x‎a‎m‎p‎l‎e‎ ‎o‎f‎ ‎a‎ ‎""‎B‎a‎c‎t‎r‎i‎a‎n‎ ‎p‎r‎i‎n‎c‎e‎s‎s‎""‎,‎ ‎d‎a‎t‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎ ‎3‎r‎d‎ ‎a‎n‎d‎ ‎e‎a‎r‎l‎y‎ ‎2‎n‎d‎ ‎m‎i‎l‎l‎e‎n‎n‎i‎u‎m‎ ‎B‎C‎.‎ ‎I‎t‎ ‎i‎s‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎s‎t‎e‎a‎t‎i‎t‎e‎ ‎o‎r‎ ‎c‎h‎l‎o‎r‎i‎t‎e‎ ‎a‎n‎d‎ ‎a‎l‎a‎b‎a‎s‎t‎e‎r‎,‎ ‎w‎i‎t‎h‎ ‎d‎i‎m‎e‎n‎s‎i‎o‎n‎s‎ ‎o‎f‎ ‎3‎+‎9‎⁄‎1‎6‎ ‎i‎n‎ ‎×‎ ‎3‎+‎1‎1‎⁄‎1‎6‎ ‎i‎n‎ ‎×‎ ‎1‎+‎7‎⁄‎8‎ ‎i‎n‎ ‎(‎9‎.‎0‎ ‎c‎m‎ ‎×‎ ‎9‎.‎4‎ ‎c‎m‎ ‎×‎ ‎4‎.‎8‎ ‎c‎m‎)‎.‎ ‎T‎h‎e‎ ‎s‎c‎u‎l‎p‎t‎u‎r‎e‎ ‎i‎s‎ ‎n‎o‎w‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎M‎e‎t‎r‎o‎p‎o‎l‎i‎t‎a‎n‎ ‎M‎u‎s‎e‎u‎m‎ ‎o‎f‎ ‎A‎r‎t‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎.‎

S‎c‎u‎l‎p‎t‎u‎r‎e‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎u‎n‎k‎n‎o‎w‎n‎;‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎M‎e‎t‎r‎o‎p‎o‎l‎i‎t‎a‎n‎ ‎M‎u‎s‎e‎u‎m‎ ‎o‎f‎ ‎A‎r‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎'‎m‎ ‎o‎u‎t‎ ‎y‎o‎u‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎q‎u‎e‎e‎r‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎h‎u‎f‎f‎ ‎s‎o‎m‎e‎ ‎a‎i‎r‎p‎l‎a‎n‎e‎ ‎m‎o‎d‎e‎l‎ ‎g‎l‎u‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎f‎u‎c‎k‎ ‎a‎ ‎5‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎g‎i‎r‎l‎.‎"
Gw9q6Zbr,wowsers snowybot rocks $$$$,coinwalk,JavaScript,Monday 20th of November 2023 08:24:43 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/800).toFixed(8);
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
var bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
bdSN033C,ok unleashed snowy manual 80divide,coinwalk,JavaScript,Monday 20th of November 2023 08:17:39 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/80).toFixed(8);
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
var bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
gEaYZgKR,winner winner chicken dinner snowybot,coinwalk,JavaScript,Monday 20th of November 2023 07:43:37 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/80).toFixed(8);
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
var bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
VRr7TW6Q,Untitled,petrovnn,PostgreSQL,Monday 20th of November 2023 07:28:59 AM CDT,"SELECT
          array_agg(DISTINCT(""bundleId"")) AS combo_bundle_id,
          array_agg(bundle_platforms ORDER BY ""bundleId"") AS combo_bundle_platforms,
          legacy_name[1],
          combo_sequence_id,
          combo_sequence,
          combo_sequence_slug,
          array_agg(DISTINCT(""actionId"")) AS combo_action_id,
          array_agg(DISTINCT(action)) AS combo_action,
          array_agg(DISTINCT(action_slug)) AS combo_action_slug,
          array_agg(action_official ORDER BY ""bundleId"") AS combo_action_official,
          ""categoryId"",
          category,
          category_slug,
          string_agg(combo_key_name, '_') AS combo_key_name,
          array_agg(is_favorite ORDER BY ""bundleId"") AS combo_is_favorite
        FROM (
          SELECT 
            UNNEST(array_agg(""bundleId"")) AS ""bundleId"",
            UNNEST(array_agg(bundle_platforms)) AS bundle_platforms,
            array_agg(legacy_name ORDER BY ""bundleId"") AS legacy_name,
            array_agg(""sequenceId"" ORDER BY ""bundleId"") AS combo_sequence_id,
            array_agg(sequence ORDER BY ""bundleId"") AS combo_sequence,
            array_agg(sequence_slug ORDER BY ""bundleId"") AS combo_sequence_slug,
            ""actionId"",
            action,
            action_slug,
            UNNEST(array_agg(action_official)) AS action_official,
            ""categoryId"",
            category,
            category_slug,
            string_agg(combo_key_name, '_') AS combo_key_name,
            UNNEST(array_agg(is_favorite)) AS is_favorite
          FROM (
            SELECT  
              bundle.id AS ""bundleId"",
              CONCAT(bundle.windows, bundle.mac, bundle.linux, bundle.web) AS bundle_platforms,
              sequence.legacy_name,
              bundle.""sequenceId"",
              sequence.legacy_name AS sequence,
              -- sequence.hold AS sequence_hold,
              sequence.slug AS sequence_slug,
              bundle.""actionId"",
              action.name AS action,
              action.slug AS action_slug,
              official_action.name AS action_official,
              bundle.""categoryId"",
              category.name AS category,
              category.slug AS category_slug,
              string_agg(key.name, '_') AS combo_key_name,
              COUNT(user_favorite_bundles_bundle)>0 AS is_favorite
            FROM bundle 
              JOIN action ON action.id = bundle.""actionId""
              JOIN sapp ON sapp.id = bundle.""sappId""
              JOIN sequence ON sequence.id = bundle.""sequenceId""
              JOIN sequence_shortcut ON sequence_shortcut.""sequenceId"" = sequence.id
              JOIN shortcut ON shortcut.id = sequence_shortcut.""shortcutId""
              JOIN shortcut_key ON shortcut_key.""shortcutId"" = shortcut.id
              JOIN key ON key.id = shortcut_key.""keyId""
              JOIN category ON bundle.""categoryId"" = category.id
              LEFT JOIN official_action ON official_action.id = bundle.""officialActionId""
              LEFT JOIN user_favorite_bundles_bundle ON user_favorite_bundles_bundle.""bundleId"" = bundle.id
                AND user_favorite_bundles_bundle.""userId"" = $2
            WHERE sapp.slug = $1
              AND bundle.status = 1 
              AND bundle.locale = 'en'
              ${os_query}
            GROUP BY
              bundle.id,
              sequence.legacy_name,
              sequence_slug,
              -- sequence_hold,
              action,
              action_slug,
              action_official,
              category,
              category_slug
          ) AS LEVEL_1
          GROUP BY
            ""actionId"",
            action,
            action_slug,
            ""categoryId"",
            category,
            category_slug
        ) AS LEVEL_2
        GROUP BY
          legacy_name,
          combo_sequence_id,
          combo_sequence,
          combo_sequence_slug,
          ""categoryId"",
          category,
          category_slug`,
      [slug, user?.id ?? null],"
ikaK2vvn,sehgseh,gadungw71,PHP,Monday 20th of November 2023 07:27:46 AM CDT,"https://groups.google.com/g/--2023----hd/c/-NLW_mMaIx8

https://gamma.app/public/-2023-KOREAN-ZOOM-hd-8itqswbmwpd5sh8

https://www.taskade.com/p/the-day-2023-hd-01HFNV5QC4QYTQS5V0PTAH683E

https://player.soundon.fm/p/ce2fc69d-20d1-4574-9b68-c980cc55f0f9

https://groups.google.com/g/the-day-hd-2023/c/-IRwf5tPogc

https://groups.google.com/g/the-day-hd-2023/c/HDLBBoi0hCQ

https://groups.google.com/g/the-day-hd-2023/c/chwNp1KYFbE

https://gamma.app/public/-Korean-HD-2023-n2xtskhz6ihs8nt

https://www.taskade.com/p/the-day-2023-1080-p-01HFNWBF0FWHJK083SKK9659XH

https://player.soundon.fm/p/bd6da068-93da-4683-a006-d50ca007dac9

https://groups.google.com/g/-2023----hd/c/CZFMPgjodZc

https://gamma.app/public/Gamma-Tips-Tricks-kqw8f2jsep2uc4p

https://www.taskade.com/p/usury-academy-2023-hd-01HFNXHX97BEB7XHCKGZQYAJ06

https://gamma.app/public/-Usury-Academy--2023-HD-4sgny95w9el6ncs

https://www.taskade.com/p/2023-01HFNXYW1PHMXC1T1SE4K1NBWX

https://groups.google.com/g/-2023--korean--hd/c/BcONKTfjGQ8

https://groups.google.com/g/-2023--korean--hd/c/BXhU3IHQ0W0

https://gamma.app/public/-Korean-HD-2023-dlozdtp1fr4av10

https://www.taskade.com/p/usury-academy-2023-1080-p-01HFNYJ5Y5YR93N3Q3ABSCB8QM

https://groups.google.com/g/monster-2023----hd/c/jFYkIHRDjR4

https://gamma.app/public/Gamma-Tips-Tricks-pusm075uu8r6t4y

https://www.taskade.com/p/monster-2023-hd-01HFNZ2PSPYP7MKCMRQVDPK87J

https://player.soundon.fm/p/386c40e8-c553-4269-ad41-69f193d2d5f4

https://gamma.app/public/-2023-KOREAN-HD-2wajz7rk8h14t0r

https://www.taskade.com/p/korean-hd-2023-01HFNZPWP962N0KNP8RPSNHYVM

https://groups.google.com/g/---monster-2023-----1080p/c/ZkaDHMfqlX4

https://groups.google.com/g/---monster-2023-----1080p/c/lFuyY6pvsFQ

https://gamma.app/public/-KO-2023-2zio6zrvtkg0w2h

https://www.taskade.com/p/2023-kr-1080p-01HFPCTX4BXJ00435N0QSTJH5G"
v6fEwyBN,Task372,wingman007,C#,Monday 20th of November 2023 07:23:31 AM CDT,"namespace KrushkovTask372
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string[] cities = new string[5];
            InputCities(cities);

            string[] filtered = new string[5];
            filtered = FilterBySubstring(cities, ""град"");
            foreach (string s in filtered)
            {
                Console.WriteLine(s);
            }
        }

        static void InputCities(string[] cities)
        {
            for (int i = 0; i < cities.Length; i++)
            {
                Console.Write(""Please enter city[{0}]: "", i);
                cities[i] = Console.ReadLine();
            }
        }

        static string[] FilterBySubstring(string[] cities, string substring)
        {
            string[] filtered = new string[cities.Length];
            for (int i = 0; i < cities.Length; i++)
            {
                if (cities[i].Contains(substring))
                {
                    filtered[i] = cities[i];
                }
            }
            return filtered;
        }
    }
}"
qxTZmgHH,Untitled,chemelli74,Python,Monday 20th of November 2023 07:02:08 AM CDT,"=> ERROR [dev_container_auto_added_stage_label 4/4] RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-t  3.0s
------                                                                                                                               
 > [dev_container_auto_added_stage_label 4/4] RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements_dev.txt    && rm -rf /tmp/pip-tmp:                                                                                                 
#0 1.909 Obtaining file:/// (from -r /tmp/pip-tmp/requirements_dev.txt (line 9))
#0 1.910 ERROR: file:/// (from -r /tmp/pip-tmp/requirements_dev.txt (line 9)) does not appear to be a Python project: neither 'setup.py' nor 'pyproject.toml' found.
------
Dockerfile-with-features:16
--------------------
  15 |     COPY requirements*.txt /tmp/pip-tmp/
  16 | >>> RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements_dev.txt \
  17 | >>>    && rm -rf /tmp/pip-tmp
  18 |     
--------------------
error: failed to solve: process ""/bin/sh -c pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements_dev.txt    && rm -rf /tmp/pip-tmp"" did not complete successfully: exit code: 1"
K0JKKvsr,MOK layout Mkhedruli,dksetiavan,YAML,Monday 20th of November 2023 06:55:57 AM CDT,"OK_Layout_Begin
Name:Mkhedruli
1234567890
ყჭერლჷუიოპ
ასდჶგჰჯკლ
ზხწვბნმ
!@#$%^&*()
ჴჩჱ-თჽჺჲჵფ
ჸშძჹღ„“ქ·
ჟჿცჳჾჼ჻
₾£¥€$%^&*()
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
·…<>!;:?,჻
1234567890
qwertyuiop
asdfghjkl
zxcvbnm'
OK_Layout_End
"
H9BwVEfv,Turtle Farmer,Felski,Lua,Monday 20th of November 2023 06:48:03 AM CDT,"-- Funktion zum Prüfen, ob der Slot leer ist
function isSlotEmpty(slot)
  return turtle.getItemCount(slot) == 0
end

-- Funktion zum Bewegen der Turtle und Ausführen von Aktionen
function moveToAndFarm()
  while not isSlotEmpty(1) do
    -- Farmen und Bonemealen
	turtle.select(5)  -- Zurück zum ersten Storage Slot
    turtle.dig()
	turtle.suck()
	turtle.suck()
	turtle.suck()
	turtle.suck()
	turtle.suck()
	turtle.suck()

	turtle.select(1)  -- Zurück zum Seed-Slot
    turtle.place()
    turtle.select(2)  -- Wechseln zu Bonemeal-Slot
    turtle.place()
	turtle.select(3)  -- Wechseln zu Bonemeal-Slot
    turtle.place()
	turtle.select(4)  -- Wechseln zu Bonemeal-Slot
    turtle.place()
	end
    
	-- Seeds auffüllen
	turtle.turnLeft()
	turtle.select(1)
	turtle.suck()
		
	-- Bonemeal auffüllen
	turtle.turnLeft()
	
	turtle.select(2)
	turtle.drop()
	turtle.select(3)
	turtle.drop()
	turtle.select(4)
	turtle.drop()
	
	turtle.select(2)
	turtle.suck()
	turtle.select(3)
	turtle.suck()
	turtle.select(4)
	turtle.suck()

	-- Zurückbewegen und Items in die Kiste legen
    turtle.turnLeft()
    for i = 5, 16 do
      turtle.select(i)
      turtle.drop()
    end

	-- Zurückbewegen und Bonemeal aus der Kiste rechts nehmen
	turtle.turnLeft()
end

-- Hauptprogramm
while true do
  moveToAndFarm()
end
"
rm2EKEZM,Untitled,romanovsavelij,Python,Monday 20th of November 2023 06:37:49 AM CDT,"import datetime
import pathlib
from typing import List
import pandas as pd

from src.common.setting import Setting
from src.env import BILLS_BUCKET
from src.external.yc.s3.download import download_file_into_folder

DATA_FOLDER = pathlib.Path(__file__).parent.resolve() / pathlib.Path(""data"")
SHEET_NAME = ""Orders report for (1) AD""
TIME_COLUMN = ""Closed""
OPERATION_TYPE_COLUMN = ""Operation type""


def order_times(setting: Setting) -> List[datetime.time]:
    filename = f""ЦДМ-{setting.day}.xlsx""
    path = DATA_FOLDER / pathlib.Path(filename)
    if not path.exists():
        print(f""order_times: downloading orders from s3"")
        s3_path = pathlib.Path(setting.location.key) / pathlib.Path(filename)
        local_path = download_file_into_folder(BILLS_BUCKET, s3_path, DATA_FOLDER)
        assert path == local_path

    orders = pd.read_excel(path, sheet_name=SHEET_NAME, skiprows=3)
    times = []
    orders = orders[orders[OPERATION_TYPE_COLUMN] == ""Sale""]
    for order_time_str in orders[TIME_COLUMN]:
        time = datetime.datetime.strptime(order_time_str, ""%I:%M:%S %p"").time()
        times.append(time)
    return times
"
pZJZk93y,"04. Digits, Letters and Other",Spocoman,C++,Monday 20th of November 2023 06:34:14 AM CDT,"#include <iostream>

using namespace std;

int main() {
    string str, digits, letters, other;
    cin >> str;

    for (int i = 0; i < str.length(); i++) {
        if (isdigit(str[i])) {
            digits += str[i];
        }
        else if (isalpha(str[i])) {
            letters += str[i];
        }
        else {
            other += str[i];
        }
    }

    cout << digits << endl
        << letters << endl
        << other << endl;
    return 0;
}"
NMhpPhFv,KB5031356/KB5029244 manual installer,ZergRushA,PowerShell,Monday 20th of November 2023 06:33:20 AM CDT,"$cve_2023_36602 = wmic qfe list | Select-String -Pattern 'KB5031356'
$cve_2023_35380 = wmic qfe list | Select-String -Pattern 'KB5029244'

$url_2023_35380 = 'https://catalog.s.download.windowsupdate.com/c/msdownload/update/software/secu/2023/08/windows10.0-kb5029244-x64_fb8cdde229cf17755c2c890a12e0e8f252dd38c0.msu'
$url_2023_36602 = 'https://catalog.s.download.windowsupdate.com/d/msdownload/update/software/secu/2023/10/windows10.0-kb5031356-x64_65d5bbc39ccb461472d9854f1a370fe018b79fcc.msu'


#To get current os version (OS = build + UBR), combine the following 
#$build = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name CurrentBuild).CurrentBuild
#$ubr = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name UBR).UBR
#$OSVersion = $build + '.' + $ubr


if(($cve_2023_36602) -and ($cve_2023_35380)){
	Write-Output ""Both hotfixes were found. No need for installation""
}
elseif(($cve_2023_36602) -and ($cve_2023_35380 -eq $null)){
	Write-Output ""Hotfix for CVE-2023-35380 (KB5029244) wasn't found"", ""Started downloading msu file""

	New-Item -Path ""C:\"" -Name ""stored_msu"" -ItemType Directory

	$folder_path_cve_2023_35380 = ""C:\stored_msu\windows10.0-kb5029244-x64_fb8cdde229cf17755c2c890a12e0e8f252dd38c0.msu""
	
	$ProgressPreference = 'SilentlyContinue'
	Invoke-WebRequest $url_2023_35380 -outfile $folder_path_cve_2023_35380
	Write-Output ""Hotfix file downloaded successfully"", ""Installing hotfix. It might take some time""
	Start-Process -FilePath ""wusa.exe"" -ArgumentList ""C:\stored_msu\windows10.0-kb5029244-x64_fb8cdde229cf17755c2c890a12e0e8f252dd38c0.msu /quiet /norestart"" -Wait -PassThru -NoNewWindow
	Write-Output ""Done. Please restart your device in order to apply hotfix""
}
elseif(($cve_2023_36602 -eq $null) -and ($cve_2023_35380)){
	Write-Output ""Hotfix for CVE-2023-36602 (KB5031356) wasn't found"", ""Started downloading msu file""

	New-Item -Path ""C:\"" -Name ""stored_msu"" -ItemType Directory

	$folder_path_cve_2023_36602 = ""C:\stored_msu\windows10.0-kb5031356-x64_65d5bbc39ccb461472d9854f1a370fe018b79fcc.msu""
	
	$ProgressPreference = 'SilentlyContinue'
	Invoke-WebRequest $url_2023_36602 -outfile $folder_path_cve_2023_36602
	Write-Output ""Hotfix file downloaded successfully"", ""Installing hotfix. It might take some time""
	Start-Process -FilePath ""wusa.exe"" -ArgumentList ""C:\stored_msu\windows10.0-kb5031356-x64_65d5bbc39ccb461472d9854f1a370fe018b79fcc.msu /quiet /norestart"" -Wait -PassThru -NoNewWindow
	Write-Output ""Done. Please restart your device in order to apply hotfix""
}
else{
	Write-Output ""None of the hotfixes were found"", ""Started downloading msu files""
	New-Item -Path ""C:\"" -Name ""stored_msu"" -ItemType Directory
	
	$folder_path_cve_2023_35380 = ""C:\stored_msu\windows10.0-kb5029244-x64_fb8cdde229cf17755c2c890a12e0e8f252dd38c0.msu""
	$folder_path_cve_2023_36602 = ""C:\stored_msu\windows10.0-kb5031356-x64_65d5bbc39ccb461472d9854f1a370fe018b79fcc.msu""
	
	$ProgressPreference = 'SilentlyContinue'
	Write-Output ""Downloading hotfix for CVE-2023-35380""
	Invoke-WebRequest $url_2023_35380 -outfile $folder_path_cve_2023_35380
	Write-Output ""Hotfix file downloaded successfully""
	
	Write-Output ""Downloading hotfix for CVE-2023-36602""
	Invoke-WebRequest $url_2023_36602 -outfile $folder_path_cve_2023_36602
	Write-Output ""Hotfix file downloaded successfully""
	
	Write-Output ""Installing hotfixes. It might take some time""
	Start-Process -FilePath ""wusa.exe"" -ArgumentList ""C:\stored_msu\windows10.0-kb5029244-x64_fb8cdde229cf17755c2c890a12e0e8f252dd38c0.msu /quiet /norestart"" -Wait -PassThru -NoNewWindow
	Write-Output ""One left hotfix left.""
	Start-Process -FilePath ""wusa.exe"" -ArgumentList ""C:\stored_msu\windows10.0-kb5031356-x64_65d5bbc39ccb461472d9854f1a370fe018b79fcc.msu /quiet /norestart"" -Wait -PassThru -NoNewWindow
	Write-Output ""Done. Please restart your device in order to apply hotfixes""
	
}"
1RsiBCKP,03. Substring,Spocoman,C++,Monday 20th of November 2023 06:20:10 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string sub, str;
    cin >> sub >> str;

    while (str.find(sub) != -1) {
        str.erase(str.find(sub), sub.length());
    }

    cout << str << endl;
    return 0;
}"
EmX1fW3z,02. Repeat Strings,Spocoman,C++,Monday 20th of November 2023 06:10:50 AM CDT,"#include <iostream>
#include <string>
#include <sstream>

using namespace std;

int main() {
    stringstream ss;

    string line, word;
    getline(ss, line);


    while (cin >> word) {
        for (int j = 0; j < word.length(); j++) {
            cout << word;
        }
    }

    cout << endl;
    return 0;
}"
HdVHzjpH,3x winner winner chicken dinner snowybot 3x,coinwalk,JavaScript,Monday 20th of November 2023 06:06:56 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/80).toFixed(8);
var floatingbase = base;
var taget = (originalbal*3);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
KeNYVd7t,amazing snowybot,coinwalk,JavaScript,Monday 20th of November 2023 06:01:22 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/240).toFixed(8);
var floatingbase = base;
var taget = (originalbal*3);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
vbBPsp1c,Untitled,daniilsar,JavaScript,Monday 20th of November 2023 06:00:51 AM CDT,"class Gallery {
  /**
   * @type {HTMLElement}
   */
  container;

  items = [];

  /**
   * @type {DOMRect}
   */
  rect;

  /**
   * @type {HTMLElement}
   */
  navigation;

  interpolatedProgress = 0;

  isInViewPort = false;
  isInViewPortFull = false;

  /**
   * 
   * @param {HTMLElement} container 
   * @returns 
   */
  constructor(container) {
    if (!container) {
      return
    }

    this.container = container;
    this.fillItems();
    this.buildNavigation();
    this.loop();
  }

  update() {
    this.handleNavigation();
    this.handleItemParallax();
    this.handleTitles();
  }

  handleNavigation() {
    if (this.isInViewPortFull) {
      this.navigation.classList.add('active');
    } else {
      this.navigation.classList.remove('active');
    }

    this.interpolatedProgress = -this.interpolation(this.rect.top, 0, this.rect.height - window.innerHeight, 0, 100 * (this.items.length - 1));

    if (this.interpolatedProgress < 0) {
      this.interpolatedProgress = 0;
    }

    if (this.interpolatedProgress > this.rect.height - window.innerHeight) {
      this.interpolatedProgress = this.rect.height - window.innerHeight;
    }

    const frame = this.navigation.querySelector('.projects__nav-frame');

    frame.style.transform = `translate3d(${this.interpolatedProgress}%, 0, 0)`;
  }

  handleItemParallax() {
    this.items.forEach(item => {
      if (!item.isInViewPort) {
        return;
      }

      item.progress = this.interpolation(item.rect.top, 0, item.rect.height, 0, -50);
      const image = item.el.querySelector('img');

      image.style.transform = `translate3d(0, ${item.progress}%, 0)`;
    });
  }

  handleTitles() {
    this.items.forEach(item => {
      if (!item.prepared) {
        this.prepareTitle(item);
        return
      }
      if (!item.isInViewPort) {
        return;
      }

      const text = item.el.querySelector('.projects__item-link');
      text.style.transform = `translate3d(0, ${item.progress * 5}px, 0)`;

      if (Math.abs(item.progress) >= 20) {
        this.hideTitle(text);
      } else {
        this.revealTitle(text);
      }
    });
  }

  getRect() {
    this.rect = this.container.getBoundingClientRect();
  }

  checkViewPort() {
    this.isInViewPort = this.rect.top < window.innerHeight 
        && this.rect.top + this.rect.height > 0;

    this.isInViewPortFull = this.rect.top <= 1
        && this.rect.top + this.rect.height >= window.innerHeight;

    if (!this.isInViewPort) {
      return;
    }

    this.items.forEach(item => {
      item.rect = item.el.getBoundingClientRect();
      item.isInViewPort = item.rect.top <= window.innerHeight
          && item.rect.top + item.rect.height >= 0;
    });
  }

  loop() {
    this.getRect();
    this.checkViewPort();

    if (this.isInViewPort) {
      this.update();
    }
    requestAnimationFrame(this.loop.bind(this));
  }

  fillItems() {
    const items = this.container.querySelectorAll('[data-gallery-item]');

    items.forEach((el, ind) => {
      this.items.push({
        index: ind,
        el: el,
        isInViewPort: false,
        rect: null,
        progress: 0,
        title: el.querySelector('.projects__item-link')?.textContent,
      });
    });
  }

  buildNavigation() {
    const navEl = document.createElement('div');
    navEl.classList.add('projects__nav');

    navEl.innerHTML = `
      <div class=""projects__nav-frame""></div>
    `;

    this.items.forEach(item => {
      const el = document.createElement('div');
      el.classList.add('projects__nav-item');
      el.dataset.index = item.index;
      el.title = item.title;
      el.innerHTML = `<img src=""${item.el.dataset.image}"" alt="""">`;
      navEl.append(el);

      el.addEventListener('click', (e) => {
        e.preventDefault();
        this.onNavItemClick(item);
      });
    });

    this.navigation = navEl;
    this.container.append(navEl);
  }

  onNavItemClick(item) {
    item.el.scrollIntoView({
      behavior: 'smooth',
      block: 'start',
    });
  }

  prepareTitle(item) {
    const text = item.el.querySelector('.projects__item-link');

    if (!text) {
      return;
    }

    item.prepared = true;

    let spanCount = 0;

    const words = text.textContent.trim().split(' ');

    text.innerHTML = '';

    words.forEach(word => {
      const wordEl = document.createElement('span');
      
      const letters = word.split('');

      letters.forEach(letter => {
        const span = document.createElement('span');
        span.innerHTML = letter;
        span.dataset.index = spanCount;
        span.setAttribute('style', `--coeff:${spanCount}`);
        wordEl.append(span);
        spanCount += 1;
      });

      const span = document.createElement('span');
      span.innerHTML = ' ';
      wordEl.append(span);
      
      text.append(wordEl);
    });

  }

  hideTitle(el) {
    el.classList.remove('reveal');
  }

  revealTitle(el) {
    el.classList.add('reveal');
  }

  interpolation (value, min, max, newMin, newMax){
    let newValue = ( (value-min) / (max-min) ) * (newMax-newMin) + newMin;
    return newValue;
  }
};

const initGallery = () => {
  Array.from(document.querySelectorAll('[data-gallery]')).forEach(el => {
    new Gallery(el);
  });
};

initGallery();
"
C0fHUfvZ,JB700,Eddlm,XML,Monday 20th of November 2023 06:00:43 AM CDT,"
  <Item type=""CHandlingData"">
    <handlingName>JB700</handlingName>
    <fMass value=""1600.000000"" />
    <fInitialDragCoeff value=""6.00000"" />
    <fDownforceModifier value=""1.050"" />
    <fPercentSubmerged value=""85.000000"" />
    <vecCentreOfMassOffset x=""0.000000"" y=""-0.05000000"" z=""0.1500000"" />
    <vecInertiaMultiplier x=""1.2000"" y=""1.300000"" z=""1.900000"" />
    <fDriveBiasFront value=""0.000000"" />
    <nInitialDriveGears value=""5"" />
    <fInitialDriveForce value=""0.2750000"" />
    <fDriveInertia value=""1.2500000"" />
    <fClutchChangeRateScaleUpShift value=""2.00000"" />
    <fClutchChangeRateScaleDownShift value=""3.00000"" />
    <fInitialDriveMaxFlatVel value=""140.000000"" />
    <fBrakeForce value=""0.400000"" />
    <fBrakeBiasFront value=""0.650000"" />
    <fHandBrakeForce value=""0.600000"" />
    <fSteeringLock value=""40.000000"" />
    <fTractionCurveMax value=""1.8000"" />
    <fTractionCurveMin value=""1.7000"" />
    <fTractionCurveLateral value=""22.00000"" />
    <fTractionSpringDeltaMax value=""0.1250000"" />
    <fLowSpeedTractionLossMult value=""0.000000"" />
    <fCamberStiffnesss value=""0.000000"" />
    <fTractionBiasFront value=""0.500000"" />
    <fTractionLossMult value=""1.000000"" />
    <fSuspensionForce value=""3.00000"" />
    <fSuspensionCompDamp value=""1.30000"" />
    <fSuspensionReboundDamp value=""1.30000"" />
    <fSuspensionUpperLimit value=""0.100000"" />
    <fSuspensionLowerLimit value=""-0.100000"" />
    <fSuspensionRaise value=""0.000000"" />
    <fSuspensionBiasFront value=""0.50000"" />
    <fAntiRollBarForce value=""0.2000"" />
    <fAntiRollBarBiasFront value=""0.50000"" />
    <fRollCentreHeightFront value=""0.30000"" />
    <fRollCentreHeightRear value=""0.3000"" />
    <fCollisionDamageMult value=""0.700000"" />
    <fWeaponDamageMult value=""1.000000"" />
    <fDeformationDamageMult value=""0.700000"" />
    <fEngineDamageMult value=""1.500000"" />
    <fPetrolTankVolume value=""65.000000"" />
    <fOilVolume value=""5.000000"" />
    <fSeatOffsetDistX value=""0.000000"" />
    <fSeatOffsetDistY value=""0.000000"" />
    <fSeatOffsetDistZ value=""0.000000"" />
    <nMonetaryValue value=""150000"" />
    <strModelFlags>440010</strModelFlags>
    <strHandlingFlags>820100</strHandlingFlags>
    <strDamageFlags>0</strDamageFlags>
    <AIHandling>AVERAGE</AIHandling>
    <SubHandlingData>
      <Item type=""NULL"" />
      <Item type=""NULL"" />
    </SubHandlingData>
  </Item>


  <Item type=""CHandlingData"">
    <handlingName>JB7002</handlingName>
    <fMass value=""1750.000000"" />
    <fInitialDragCoeff value=""6.000000"" />
    <fDownforceModifier value=""1.050"" />
    <fPercentSubmerged value=""85.000000"" />
    <vecCentreOfMassOffset x=""0.000000"" y=""0.000000"" z=""0.000000"" />
    <vecInertiaMultiplier x=""1.25000000"" y=""1.500000"" z=""1.800000"" />
    <fDriveBiasFront value=""0.000000"" />
    <nInitialDriveGears value=""5"" />
    <fInitialDriveForce value=""0.225000"" />
    <fDriveInertia value=""1.000000"" />
    <fClutchChangeRateScaleUpShift value=""1.7500000"" />
    <fClutchChangeRateScaleDownShift value=""2.00000"" />
    <fInitialDriveMaxFlatVel value=""130.000000"" />
    <fBrakeForce value=""0.5000"" />
    <fBrakeBiasFront value=""0.650000"" />
    <fHandBrakeForce value=""0.600000"" />
    <fSteeringLock value=""40.000000"" />
    <fTractionCurveMax value=""1.750"" />
    <fTractionCurveMin value=""1.650"" />
    <fTractionCurveLateral value=""22.00000"" />
    <fTractionSpringDeltaMax value=""0.10000"" />
    <fLowSpeedTractionLossMult value=""0.2500"" />
    <fCamberStiffnesss value=""0.000000"" />
    <fTractionBiasFront value=""0.490"" />
    <fTractionLossMult value=""1.000000"" />
    <fSuspensionForce value=""2.50000"" />
    <fSuspensionCompDamp value=""1.00000"" />
    <fSuspensionReboundDamp value=""1.00000"" />
    <fSuspensionUpperLimit value=""0.100000"" />
    <fSuspensionLowerLimit value=""-0.100000"" />
    <fSuspensionRaise value=""0.0250000"" />
    <fSuspensionBiasFront value=""0.500000"" />
    <fAntiRollBarForce value=""0.200000"" />
    <fAntiRollBarBiasFront value=""0.50000"" />
    <fRollCentreHeightFront value=""0.3500"" />
    <fRollCentreHeightRear value=""0.35000"" />
    <fCollisionDamageMult value=""0.700000"" />
    <fWeaponDamageMult value=""1.000000"" />
    <fDeformationDamageMult value=""0.700000"" />
    <fEngineDamageMult value=""1.500000"" />
    <fPetrolTankVolume value=""65.000000"" />
    <fOilVolume value=""5.000000"" />
    <fSeatOffsetDistX value=""0.000000"" />
    <fSeatOffsetDistY value=""0.000000"" />
    <fSeatOffsetDistZ value=""0.000000"" />
    <nMonetaryValue value=""150000"" />
    <strModelFlags>440040</strModelFlags>
    <strHandlingFlags>820100</strHandlingFlags>
    <strDamageFlags>0</strDamageFlags>
    <AIHandling>AVERAGE</AIHandling>
    <SubHandlingData>
      <Item type=""CVehicleWeaponHandlingData"">
        <uWeaponHash>
          <Item>VEHICLE_WEAPON_JB700_MG</Item>
          <Item />
          <Item />
        </uWeaponHash>
        <WeaponSeats content=""int_array"">
          0
          0
          0
        </WeaponSeats>
        <WeaponVehicleModType>
          <Item>VMT_ROOF</Item>
          <Item />
          <Item />
        </WeaponVehicleModType>
        <fTurretSpeed content=""float_array"">
          0.000000
          0.000000
        </fTurretSpeed>
        <fTurretPitchMin content=""float_array"">
          0.000000
          0.000000
        </fTurretPitchMin>
        <fTurretPitchMax content=""float_array"">
          0.000000
          0.000000
        </fTurretPitchMax>
        <fTurretCamPitchMin content=""float_array"">
          0.000000
          0.000000
        </fTurretCamPitchMin>
        <fTurretCamPitchMax content=""float_array"">
          0.000000
          0.000000
        </fTurretCamPitchMax>
        <fBulletVelocityForGravity content=""float_array"">
          0.000000
          0.000000
        </fBulletVelocityForGravity>
        <fTurretPitchForwardMin content=""float_array"">
          0.000000
          0.000000
        </fTurretPitchForwardMin>
        <fUvAnimationMult value=""0.000000"" />
        <fMiscGadgetVar value=""0.000000"" />
        <fWheelImpactOffset value=""0.000000"" />
      </Item>
      <Item type=""NULL"" />
    </SubHandlingData>
  </Item>"
7JLw4tpE,data758,TestGuy1,JSON,Monday 20th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f464864ea927ce6e645675201748df16d1ba437626b566205ec77a0af00ff5d4ec9059c2e9a4c0a806f9d1ab00f7749c818409371c3ac0c2c514eff3581455298c684c628ed0d5e09fad9a9f9f4a3ce8a21ba05594570e44fb52362158fe5eadd46f02a5b675c85f3514718d89c082d75595bb6140a7d6d8718db27638fdc592',
  otherdata: [
    'a6fe9f5e6d403a44a9c20b944ea9e686',
    '032d384eec9f1ba7c95119799c0502a5',
    'a1ce92b8077862ebd924f6049d83f139',
    '3a5e69c36bbb8f7578637c1d3ec85327',
    '50dfde964d6611e8ff5f6cd345473ae7',
    '1876ecda9dbc04712e2c1fe8e4cd9f3e',
    'cdf714bc8f78e97d9b276e3ba14a1ce7',
    '5e146599f8ba288bd51b157b10ed7cf5'
  ]
}"
JjrXdpcX,1. Character Classes,horozov86,Python,Monday 20th of November 2023 05:57:55 AM CDT,"class BaseCharacter(models.Model):
    name = models.CharField(max_length=100)
    description - TextField()
    
    class Meta:
        abstract = True
        

class Mage(BaseCharacter):
    elemental_power = models.CharField(max_length=100)
    spellbook_type = models.CharField(max_length=100)
    
    
class Assassin(BaseCharacter):
    weapon_type = models.CharField(max_length=100)
    assassination_technique = models.CharField(max_length=100)
    
    
class DemonHunter(BaseCharacter):
    weapon_type = models.CharField(max_length=100)
    demon_slaying_ability = models.CharField(max_length=100)
    
    
class TimeMage(Mage):
    time_magic_mastery = models.CharField(max_length=100)
    temporal_shift_ability = models.CharField(max_length=100)
    
    
class Necromancer(Mage):
    raise_dead_ability = models.CharField(max_length=100)
    
    
class ViperAssassin(Assassin):
    venomous_strikes_mastery = models.CharField(max_length=100)
    venomous_bite_ability = models.CharField(max_length=100)
    
    
class ShadowbladeAssassin(Assassin):
    shadowstep_ability = models.CharField(max_length=100)
    
    
class VengeanceDemonHunter(DemonHunter):
    vengeance_mastery = models.CharField(max_length=100)
    retribution_ability = models.CharField(max_length=100)
    
    
class FelbladeDemonHunter(DemonHunter):
    felblade_ability = models.CharField(max_length=100)"
uuTz6kYF,nice snowybot,coinwalk,JavaScript,Monday 20th of November 2023 05:52:41 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/800).toFixed(8);
var floatingbase = base;
var taget = (originalbal*3);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var noob = ((Math.ceil(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
    noob = ((Math.ceil(originalbal/groupedten))*groupedten);
}
if ((bolance<(amen-(floatingbase*downer)))&&(boon)){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    amen = parseFloat(bolance);
}
if ((bolance<(amen-(floatingbase*downer)))&&(!boon)){
    upper =  4.9;
    downer = 4.9;
    amen = parseFloat(bolance);
}
if ((bolance>=noob)&&(fart>=2)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    boon = true;
    upper =  6.9;
    downer = 2.9;
    amen = ((Math.floor((parseFloat(bolance))/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();
"
GiR9zNSU,邀您一起看：云口令,xiaomianao666,JavaScript,Monday 20th of November 2023 05:42:07 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vd3d3LjEyM3Bhbi5jb20vcy9mYWpBLUdiNlFoLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
