id,title,username,language,date,content
g0Ga4aWC,2024-04-30_stats.json,rdp_snitch,JSON,Tuesday 30th of April 2024 07:16:16 PM CDT,"{
  ""ip"": {
    ""172.232.235.218"": 4,
    ""45.227.254.9"": 6,
    ""103.238.234.199"": 2,
    ""167.94.138.33"": 2,
    ""212.41.9.9"": 6,
    ""205.210.31.235"": 6,
    ""212.41.9.11"": 6,
    ""116.140.196.215"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.145"": 6,
    ""118.193.58.187"": 2,
    ""205.210.31.105"": 6,
    ""159.65.82.237"": 2,
    ""165.22.143.165"": 8,
    ""157.230.62.181"": 2,
    ""170.187.228.104"": 1454,
    ""194.165.16.37"": 4,
    ""152.32.183.22"": 2,
    ""194.165.16.76"": 4,
    ""123.56.20.194"": 2,
    ""198.235.24.13"": 6,
    ""112.4.139.162"": 2,
    ""20.185.249.20"": 4,
    ""87.251.75.64"": 2,
    ""36.91.222.100"": 2,
    ""2.181.168.108"": 2,
    ""94.232.46.148"": 2,
    ""45.227.254.23"": 6,
    ""187.190.60.112"": 2,
    ""198.235.24.194"": 6,
    ""81.19.135.47"": 6
  },
  ""asn"": {
    ""AS63949"": 1458,
    ""AS267784"": 12,
    ""AS140810"": 2,
    ""AS398324"": 2,
    ""AS49505"": 12,
    ""AS396982"": 24,
    ""AS4837"": 2,
    ""AS197414"": 4,
    ""AS208091"": 8,
    ""AS135377"": 4,
    ""AS14061"": 12,
    ""AS48721"": 8,
    ""AS37963"": 2,
    ""AS56046"": 2,
    ""AS8075"": 4,
    ""AS7713"": 2,
    ""AS58224"": 2,
    ""AS212482"": 2,
    ""AS22884"": 2,
    ""AS209588"": 6
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 1458,
    ""Flyservers S.A."": 26,
    ""MAYTINHVPSTTT"": 2,
    ""Censys, Inc."": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 12,
    ""Google LLC"": 24,
    ""China Unicom CHINA169 Network"": 2,
    ""Xhost Internet Solutions LP"": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""DigitalOcean, LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Microsoft Corporation"": 4,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Iran Telecommunication Company PJS"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""Akamai Technologies, Inc."": 4,
    ""UAB Host Baltic"": 12,
    ""Vpsttt Computer Company Limited"": 2,
    ""Censys, Inc"": 2,
    ""Unknown"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""China United Network Communications Corporation Limited"": 2,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""DigitalOcean, LLC"": 12,
    ""Linode"": 1454,
    ""Flyservers S.A"": 8,
    ""Ucloud Information Technology"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Telekomunikasi Indonesia"": 2,
    ""tcsb DSL"": 2,
    ""Dmitriy Panchenko"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Alviva Holding Limited"": 6
  },
  ""regionName"": {
    ""Jakarta"": 6,
    ""Vilnius"": 12,
    ""Ho Chi Minh"": 2,
    ""Michigan"": 2,
    ""Moscow"": 12,
    ""California"": 32,
    ""Beijing"": 4,
    ""North Holland"": 12,
    ""Hesse"": 8,
    ""England"": 2,
    ""New Jersey"": 2,
    ""North West"": 1454,
    ""Kaunas"": 8,
    ""Virginia"": 6,
    ""Jiangsu"": 2,
    ""Sistan and Baluchestan"": 2,
    ""Perm Krai"": 2,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""Indonesia"": 6,
    ""Lithuania"": 20,
    ""Vietnam"": 2,
    ""United States"": 42,
    ""Russia"": 14,
    ""China"": 6,
    ""The Netherlands"": 12,
    ""Germany"": 8,
    ""United Kingdom"": 2,
    ""Singapore"": 1454,
    ""Iran"": 2,
    ""Mexico"": 2
  },
  ""account"": {
    ""hello"": 16,
    ""Domain"": 30,
    ""(empty)"": 8,
    ""yeQgJxOjr"": 2,
    ""aKJWKC"": 2,
    ""YDiBzJ"": 2,
    ""Administr"": 12,
    ""Administrator"": 212,
    ""pTsnsDfjz"": 2,
    ""Gsaznb"": 2,
    ""LvbeCO"": 2,
    ""ji5xjb6k"": 8,
    ""beio"": 2,
    ""Admin"": 208,
    ""Whatuptime.com"": 208,
    ""Jakartakini123#"": 208,
    ""Hello World"": 208,
    ""TinHocThucHanh"": 208,
    ""Hey"": 206,
    ""Test"": 10,
    ""gyhXZPxay"": 2,
    ""ZwhDsz"": 2,
    ""HufDEm"": 2,
    ""KuFOpCi"": 2,
    ""uNAmAgkcZ"": 2,
    ""vFxxvX"": 2,
    ""nDfwrd"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1570
  },
  ""client_build"": {
    ""Unknown"": 1570
  },
  ""client_name"": {
    ""Unknown"": 1570
  },
  ""ip_type"": {
    ""hosting"": 1506,
    ""Unknown"": 50,
    ""hosting & proxy"": 10,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
yEFvfDsh,2024-04-30_stats.json,rdp_snitch,JSON,Tuesday 30th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""172.232.235.218"": 2,
    ""45.227.254.9"": 3,
    ""103.238.234.199"": 1,
    ""167.94.138.33"": 1,
    ""212.41.9.9"": 3,
    ""205.210.31.235"": 3,
    ""212.41.9.11"": 3,
    ""116.140.196.215"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.145"": 3,
    ""118.193.58.187"": 1,
    ""205.210.31.105"": 3,
    ""159.65.82.237"": 1,
    ""165.22.143.165"": 4,
    ""157.230.62.181"": 1,
    ""170.187.228.104"": 727,
    ""194.165.16.37"": 2,
    ""152.32.183.22"": 1,
    ""194.165.16.76"": 2,
    ""123.56.20.194"": 1,
    ""198.235.24.13"": 3,
    ""112.4.139.162"": 1,
    ""20.185.249.20"": 2,
    ""87.251.75.64"": 1,
    ""36.91.222.100"": 1,
    ""2.181.168.108"": 1,
    ""94.232.46.148"": 1,
    ""45.227.254.23"": 3,
    ""187.190.60.112"": 1,
    ""198.235.24.194"": 3,
    ""81.19.135.47"": 3
  },
  ""asn"": {
    ""AS63949"": 729,
    ""AS267784"": 6,
    ""AS140810"": 1,
    ""AS398324"": 1,
    ""AS49505"": 6,
    ""AS396982"": 12,
    ""AS4837"": 1,
    ""AS197414"": 2,
    ""AS208091"": 4,
    ""AS135377"": 2,
    ""AS14061"": 6,
    ""AS48721"": 4,
    ""AS37963"": 1,
    ""AS56046"": 1,
    ""AS8075"": 2,
    ""AS7713"": 1,
    ""AS58224"": 1,
    ""AS212482"": 1,
    ""AS22884"": 1,
    ""AS209588"": 3
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 729,
    ""Flyservers S.A."": 13,
    ""MAYTINHVPSTTT"": 1,
    ""Censys, Inc."": 1,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Google LLC"": 12,
    ""China Unicom CHINA169 Network"": 1,
    ""Xhost Internet Solutions LP"": 7,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 6,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Microsoft Corporation"": 2,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Iran Telecommunication Company PJS"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Akamai Technologies, Inc."": 2,
    ""UAB Host Baltic"": 6,
    ""Vpsttt Computer Company Limited"": 1,
    ""Censys, Inc"": 1,
    ""Unknown"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""China United Network Communications Corporation Limited"": 1,
    ""Xhostis"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 727,
    ""Flyservers S.A"": 4,
    ""Ucloud Information Technology"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Telekomunikasi Indonesia"": 1,
    ""tcsb DSL"": 1,
    ""Dmitriy Panchenko"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Alviva Holding Limited"": 3
  },
  ""regionName"": {
    ""Jakarta"": 3,
    ""Vilnius"": 6,
    ""Ho Chi Minh"": 1,
    ""Michigan"": 1,
    ""Moscow"": 6,
    ""California"": 16,
    ""Beijing"": 2,
    ""North Holland"": 6,
    ""Hesse"": 4,
    ""England"": 1,
    ""New Jersey"": 1,
    ""North West"": 727,
    ""Kaunas"": 4,
    ""Virginia"": 3,
    ""Jiangsu"": 1,
    ""Sistan and Baluchestan"": 1,
    ""Perm Krai"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Indonesia"": 3,
    ""Lithuania"": 10,
    ""Vietnam"": 1,
    ""United States"": 21,
    ""Russia"": 7,
    ""China"": 3,
    ""The Netherlands"": 6,
    ""Germany"": 4,
    ""United Kingdom"": 1,
    ""Singapore"": 727,
    ""Iran"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""hello"": 8,
    ""Domain"": 15,
    ""(empty)"": 4,
    ""yeQgJxOjr"": 1,
    ""aKJWKC"": 1,
    ""YDiBzJ"": 1,
    ""Administr"": 6,
    ""Administrator"": 106,
    ""pTsnsDfjz"": 1,
    ""Gsaznb"": 1,
    ""LvbeCO"": 1,
    ""ji5xjb6k"": 4,
    ""beio"": 1,
    ""Admin"": 104,
    ""Whatuptime.com"": 104,
    ""Jakartakini123#"": 104,
    ""Hello World"": 104,
    ""TinHocThucHanh"": 104,
    ""Hey"": 103,
    ""Test"": 5,
    ""gyhXZPxay"": 1,
    ""ZwhDsz"": 1,
    ""HufDEm"": 1,
    ""KuFOpCi"": 1,
    ""uNAmAgkcZ"": 1,
    ""vFxxvX"": 1,
    ""nDfwrd"": 1
  },
  ""keyboard"": {
    ""Unknown"": 785
  },
  ""client_build"": {
    ""Unknown"": 785
  },
  ""client_name"": {
    ""Unknown"": 785
  },
  ""ip_type"": {
    ""hosting"": 753,
    ""Unknown"": 25,
    ""hosting & proxy"": 5,
    ""mobile"": 1,
    ""proxy"": 1
  }
}"
fUU0Hw0i,🤑 G2A.com Free Gift Card Guide May 2024 FIX 💰,ssss50w,GetText,Tuesday 30th of April 2024 07:04:07 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
01 May 2024"
4JVpFuSw,como hacer un backslash con teclado eeuu y layout español,fabgonber,JSON,Tuesday 30th of April 2024 07:02:00 PM CDT,"/*
	si tienes un macbook de eeuu y utilizas layout en español se pierde el \ (backslash)
	esta complex_modification de karabiner-elements crea un \ al presionar SHIFT_IZQIERDO+OPT_DERECHO+7
	requieres instalar Karabiner-Elements (https://ke-complex-modifications.pqrs.org/)
*/
{
    ""description"": ""left_shift + right_option + 7 => back_slash "",
    ""manipulators"": [
        {
            ""from"": {
                ""key_code"": ""7"",
                ""modifiers"": {
                    ""mandatory"": [
                        ""left_shift""
                    ],
                    ""optional"": [
                        ""any""
                    ]
                }
            },
            ""to"": [
                {
                    ""key_code"": ""non_us_backslash"",
                    ""modifiers"": []
                }
            ],
            ""type"": ""basic""
        }
    ]
}"
64M5Vdhe,Jordan's Blog Upgrade Warning Box,TheiPhoneFan,HTML,Tuesday 30th of April 2024 07:01:48 PM CDT,"<!-- On 2024-04-30
Iframe Embed: 
<iframe src=""https://theiphonefan-beta.w3spaces.com/errors/upgrade-box.html"" style=""width:100%;height:235px;border-radius:16px;border-color:transparent;"" scrolling=""no""></iframe> 
-->
<!DOCTYPE html>
<html>
<head>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <style>
        body {
            background-color: #FF0F0F;
            border-radius: 16px;
            height: 215px;
        }
        .upgrade-box p {
            font-family: 'Roboto', sans-serif;
            font-size: 20px;
            font-weight: 300;
            color:white;
        }
        .upgrade-box a {
            text-decoration: underline;
            color: yellow;
        }
        .upgrade-box a:hover {
            text-decoration: none;
        }
        .flex-container {
            display: flex;
            flex-wrap: wrap;
        }
        .flex-container>div  /* Used to place content side-by-side. */  {
            padding: 10px;
            align-items: center;
            align-content: center;
        }
        @media (max-width: 620px) {
            img {
                display: none;
            }
        }
    </style>
</head>
<body>

<div class=""upgrade-box"">
    <div class=""flex-container"">
        <div>
            <a href=""https://jordansblog.net"" target=""_blank"">
                <img src=""https://i.ibb.co/BC6zGrs/critical-error.png"" width=""200"" style=""border-radius: 16px;"">
            </a>
        </div>
        <div>
            <p>This version of my website is out of date. 
            <br>Click <a href=""https://jordansblog.net"" target=""_blank"">here</a> to visit my new website 
            </p>
        </div>
    <div>
</div>

</body>
</html>"
74NtCg4e,ESP32 + DHT11 + RGB,Cam0uflage,C,Tuesday 30th of April 2024 06:46:24 PM CDT,"#include ""freertos/FreeRTOS.h""       // для vTaskDelay, pdMS_TO_TICKS, ESP_OK, ESP_FAIL и т.д.
#include ""esp_log.h""                 // для макроса ESP_LOGI
#include ""dht.h""                     // для функций работы с DHT


static const char *TAG = ""thsensor"";

#define DHT11_PIN   4
#define R_PIN       16
#define G_PIN       17
#define B_PIN       18
#define LOW         0
#define HIGH        1

void app_main(void)
{
    float humidity, temperature;
    float humidity_prev = 0.0f;

    gpio_reset_pin(R_PIN);
    gpio_set_direction(R_PIN, GPIO_MODE_OUTPUT);
    gpio_reset_pin(G_PIN);
    gpio_set_direction(G_PIN, GPIO_MODE_OUTPUT);
    gpio_reset_pin(B_PIN);
    gpio_set_direction(B_PIN, GPIO_MODE_OUTPUT);

    while (1)
    {
        if (dht_read_float_data(DHT_TYPE_DHT11, DHT11_PIN, &humidity, &temperature) == ESP_OK) {
            ESP_LOGI(TAG, ""Humidity: %.1f%% Temperature: %.1fC"", humidity, temperature);
            if (humidity != humidity_prev) {
                if (humidity < 40) {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(R_PIN, HIGH);
                }
                else if (humidity >= 40 && humidity <= 60) {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(G_PIN, HIGH);
                }
                else
                {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(B_PIN, HIGH);
                }
            }
            humidity_prev = humidity;
        }
        else
            ESP_LOGI(TAG, ""Could not read data from sensor"");
        vTaskDelay(pdMS_TO_TICKS(2000));
    }
}"
4vLsFpFM,Diverge FoE Pins,Cleffy,Lua,Tuesday 30th of April 2024 06:35:53 PM CDT,"[1] = {
	[""children""] = {
		[1] = {
			[""children""] = {
				[1] = {
					[""children""] = {
					},
					[""self""] = {
						[""Skin""] = 0,
						[""UniqueID""] = ""e68ab54a71e166ca14553554e01244b3624393506f4627638259fc4eb0a7a375"",
						[""NoLighting""] = false,
						[""AimPartName""] = """",
						[""IgnoreZ""] = false,
						[""AimPartUID""] = """",
						[""Materials""] = """",
						[""Name""] = ""Frame"",
						[""LevelOfDetail""] = 0,
						[""NoTextureFiltering""] = false,
						[""PositionOffset""] = Vector(0, 0, 0),
						[""IsDisturbing""] = false,
						[""EyeAngles""] = false,
						[""DrawOrder""] = 0,
						[""TargetEntityUID""] = """",
						[""Alpha""] = 1,
						[""Material""] = ""models/gibs/metalgibs/metal_gibs"",
						[""Invert""] = false,
						[""ForceObjUrl""] = false,
						[""Bone""] = ""lrigpelvis"",
						[""Angles""] = Angle(0, 0, 0),
						[""AngleOffset""] = Angle(0, 0, 0),
						[""BoneMerge""] = false,
						[""Color""] = Vector(1, 1, 1),
						[""Position""] = Vector(-1.5, -6.5, 0),
						[""ClassName""] = ""model2"",
						[""Brightness""] = 1,
						[""Hide""] = false,
						[""NoCulling""] = false,
						[""Scale""] = Vector(0.30000001192093, 0.27000001072884, 0.11999999731779),
						[""LegacyTransform""] = false,
						[""EditorExpand""] = true,
						[""Size""] = 1,
						[""ModelModifiers""] = """",
						[""Translucent""] = false,
						[""BlendMode""] = """",
						[""EyeTargetUID""] = """",
						[""Model""] = ""models/props_phx/construct/wood/wood_wire1x2b.mdl"",
					},
				},
				[2] = {
					[""children""] = {
						[1] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""1c4fc8e18412b49890f98db1b61dbad44f9b09cb731413afe46b8335f00c6eb8"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR 2"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(0.274169921875, 3.177734375, 0.19859999418259),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVkxGdzdBOUpvTXBVa3pCP2U9RHlHcjgw/root/content"",
							},
						},
						[2] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""f6bf54f9d5bf90c7f125491af6462c129fbdf754327f079919ff04dee695c171"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR 3"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-0.42579999566078, 8.2578125, 0.1988999992609),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.3,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVlIxcFZqZG8zOTVKX1pCP2U9Z0ZPQzRz/root/content"",
							},
						},
						[3] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""cbe4d5f7dc85176fa32a64a54b28e7f225955cbf76dace8f5215af33aadc48c7"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Steel Rangers"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-4.1016998291016, 3.0567998886108, 0.19910000264645),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVnZnTkJGTjlySGkyT0RPP2U9Ymp3Sm9J/root/content"",
							},
						},
						[4] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""81e7b1936fb75bcc0c20b95053b33bbc6a59e530f055d6d7747befe85c43a574"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""NCR_noground"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-3.8805000782013, -2.1708984375, 0.20068359375),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVXB4LWp3dW5WVmx5UUpRP2U9YkdpUlk3/root/content"",
							},
						},
						[5] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""ad13e309fe0ba908da620713ad8fa9060108a8e560c4188ca2c452f7e0eb3ae0"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Stable-Tec"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(0.27430000901222, -8.1279001235962, 0.1988999992609),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.7,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVkJzdG1UakVXMUREdlBLP2U9cjhmendo/root/content"",
							},
						},
						[6] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""55fb353c5a7082b30032d141a32cc84c6920588eae54609cdc24f0b7de7cb341"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(1.396484375, -2.048828125, 0.1982421875),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVXptN001c0laNFhLTE9kP2U9Tnp4UmhZ/root/content"",
							},
						},
						[7] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""d5593a1a62043abd4ab434efb61f753d1f9260c89f2e72a1d195f42949096e80"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Enclave"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-4.3020000457764, 8.3325996398926, 0.29899999499321),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 3,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVTVkWXNOUi1wM01kV3hUP2U9MGlUb2tR/root/content"",
							},
						},
						[8] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""cfe3b395aea36331fbfc67957a2d650d015413e12e732f0959626762b4187317"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""NCR"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-3.9158000946045, -8, 0.19970703125),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVmpUUDg4VXEzNXpiR3JtP2U9SlMzZmJQ/root/content"",
							},
						},
					},
					[""self""] = {
						[""DrawOrder""] = 0,
						[""UniqueID""] = ""cfaa58b3bde9f958642e9cf638c648ca7d829cc657f27797b483eaaa1dd77278"",
						[""Hide""] = false,
						[""TargetEntityUID""] = """",
						[""EditorExpand""] = true,
						[""OwnerName""] = ""self"",
						[""IsDisturbing""] = false,
						[""Name""] = ""Pins"",
						[""Duplicate""] = false,
						[""ClassName""] = ""group"",
					},
				},
			},
			[""self""] = {
				[""Skin""] = 0,
				[""UniqueID""] = ""18eb59159fc08c43ca89c919ef733993f8e84e996897d4e956bc938cf0e56109"",
				[""NoLighting""] = false,
				[""AimPartName""] = """",
				[""IgnoreZ""] = false,
				[""AimPartUID""] = """",
				[""Materials""] = """",
				[""Name""] = ""Showcase"",
				[""LevelOfDetail""] = 0,
				[""NoTextureFiltering""] = false,
				[""PositionOffset""] = Vector(0, 0, 0),
				[""IsDisturbing""] = false,
				[""EyeAngles""] = false,
				[""DrawOrder""] = 0,
				[""TargetEntityUID""] = """",
				[""Alpha""] = 1,
				[""Material""] = ""models/thundermountain_fx/wood_bridge001_vert"",
				[""Invert""] = false,
				[""ForceObjUrl""] = false,
				[""Bone""] = ""head"",
				[""Angles""] = Angle(45, 0, 0),
				[""AngleOffset""] = Angle(0, 0, 0),
				[""BoneMerge""] = false,
				[""Color""] = Vector(1, 1, 1),
				[""Position""] = Vector(25.200000762939, 0, 16),
				[""ClassName""] = ""model2"",
				[""Brightness""] = 1,
				[""Hide""] = false,
				[""NoCulling""] = false,
				[""Scale""] = Vector(1.0700000524521, 1.5, 0.050000000745058),
				[""LegacyTransform""] = false,
				[""EditorExpand""] = true,
				[""Size""] = 0.325,
				[""ModelModifiers""] = """",
				[""Translucent""] = false,
				[""BlendMode""] = """",
				[""EyeTargetUID""] = """",
				[""Model""] = ""models/hunter/plates/plate075x1.mdl"",
			},
		},
	},
	[""self""] = {
		[""DrawOrder""] = 0,
		[""UniqueID""] = ""1ddda7fa816c587481412d93cc3e5621f84a013d492145f8b0726d864c05d206"",
		[""Hide""] = false,
		[""TargetEntityUID""] = """",
		[""EditorExpand""] = true,
		[""OwnerName""] = ""self"",
		[""IsDisturbing""] = false,
		[""Name""] = ""FoE Pins"",
		[""Duplicate""] = false,
		[""ClassName""] = ""group"",
	},
},
"
hVhLVU86,open_optional_features,Python253,Python,Tuesday 30th of April 2024 06:35:43 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: open_optional_features.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script facilitates the opening of the ""Turn Windows features on or off"" dialog on Windows systems.
It does so by emulating key presses to navigate through the Windows Run dialog and enter the command to open the features dialog.

Requirements:
    - Python 3.x
    - Windows operating system

Usage:
    - Run the script in a Python environment compatible with the specified requirements.

Functions:
    - press_key(key): Simulates pressing a key using ctypes.
    - type_string(string): Simulates typing a string by pressing individual keys.
    - simulate_key_strokes(): Simulates key strokes to open the Run dialog and type 'optionalfeatures' to open the 'Turn Windows features on or off' dialog.

Additional Notes:
    - The script utilizes ctypes to interact with the Windows API and simulate key presses.
    - Ensure that the script is executed with the necessary permissions to emulate key presses and open system dialogs.
""""""

import subprocess
import os
import sys
import time
import ctypes

def press_key(key):
    """"""
    Simulate pressing a key using ctypes.
    
    Parameters:
        key (int): The virtual key code of the key to be pressed.
    """"""
    ctypes.windll.user32.keybd_event(key, 0, 0, 0)
    time.sleep(0.05)
    ctypes.windll.user32.keybd_event(key, 0, 2, 0)

def type_string(string):
    """"""
    Simulate typing a string by pressing individual keys.
    
    Parameters:
        string (str): The string to be typed.
    """"""
    for char in string:
        key_code = ord(char.upper())
        press_key(key_code)

def simulate_key_strokes():
    """"""
    Simulate key strokes to open the Run dialog and type 'optionalfeatures' to open the 'Turn Windows features on or off' dialog.
    """"""
    # Simulate pressing Win + R to open Run dialog
    press_key(0x5B)  # VK_LWIN
    press_key(0x52)  # 'R'
    type_string(""un"")  # Complete the simulated typing of ""run""
    
    # Hit Enter
    press_key(0x0D)  # 'Enter'

    time.sleep(0.5)  # Give time for Run dialog to appear

    # Simulate typing ""optionalfeatures""
    type_string(""optionalfeatures"")

    # Hit Enter
    press_key(0x0D)  # 'Enter'

if __name__ == ""__main__"":
    simulate_key_strokes()

"
cxPndEkp,plugin bundled,KukuRuzo,CMake,Tuesday 30th of April 2024 06:15:58 PM CDT,"diff --git a/generic/omemoplugin/cmake/omemo_c.cmake b/generic/omemoplugin/cmake/omemo_c.cmake
index 19654d1..0aa9f32 100644
--- a/generic/omemoplugin/cmake/omemo_c.cmake
+++ b/generic/omemoplugin/cmake/omemo_c.cmake
@@ -1,13 +1,18 @@
 cmake_minimum_required(VERSION 3.10.0)
 
 set(OmemoCGitRepo ""https://github.com/psi-im/libomemo-c.git"")
+set(ProtobufCGitRepo ""https://github.com/protobuf-c/protobuf-c.git"")
 
 message(STATUS ""OMEMO_C: using bundled"")
 set(OMEMO_C_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/omemo-c)
+set(PROTOBUF_C_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/protobuf-c)
 set(OMEMO_C_BUILD_DIR ${OMEMO_C_PREFIX}/build)
+set(Protobuf_C_BUILD_DIR ${PROTOBUF_C_PREFIX}/build)
 set(OMEMO_C_INCLUDE_DIR ${OMEMO_C_PREFIX}/src/OmemoCProject/src)
-set(OMEMO_C_LIBRARY ${OMEMO_C_BUILD_DIR}/src/${CMAKE_STATIC_LIBRARY_PREFIX}omemo-c${D}${CMAKE_STATIC_LIBRARY_SUFFIX})
-set(Protobuf_C_LIBRARY ${OMEMO_C_BUILD_DIR}/src/protobuf-c/build/${CMAKE_STATIC_LIBRARY_PREFIX}protobuf-c${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(OMEMO_C_LIBRARY ${OMEMO_C_BUILD_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}omemo-c${D}${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(Protobuf_C_LIBRARY ${Protobuf_C_BUILD_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}protobuf-c${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(Protobuf_C_INCLUDE_DIR ${PROTOBUF_C_PREFIX}/src/ProtobufCProject)
+set(PROTOBUF_C_SOURCE_DIR ${PROTOBUF_C_PREFIX}/src/ProtobufCProject/build-cmake)
 if(APPLE)
     set(COREFOUNDATION_LIBRARY ""-framework CoreFoundation"")
     set(COREFOUNDATION_LIBRARY_SECURITY ""-framework Security"")
@@ -17,7 +22,38 @@ endif()
 include(FindGit)
 find_package(Git REQUIRED)
 
+if(WIN32)
+    set(HIDE_FLAGS
+        -DCMAKE_IGNORE_PATH=""/usr/include/protobuf-c""
+        -DCMAKE_SYSTEM_IGNORE_PATH=""/usr/include/protobuf-c""
+    )
+endif()
+
+set(PROTOBUF_C_BUILD_OPTIONS
+    ${HIDE_FLAGS}
+    -DBUILD_SHARED_LIBS=OFF
+    -DCMAKE_POSITION_INDEPENDENT_CODE=ON
+    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
+    -DCMAKE_INSTALL_PREFIX=${OMEMO_C_BUILD_DIR} 
+    -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
+    -DBUILD_PROTOC=OFF
+    -DGIT_EXECUTABLE=${GIT_EXECUTABLE}
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
+    -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM} 
+    -DOSX_FRAMEWORK=OFF
+)
 include(ExternalProject)
+ExternalProject_Add(ProtobufCProject
+    PREFIX ${PROTOBUF_C_PREFIX}
+    BINARY_DIR ${Protobuf_C_BUILD_DIR}
+    GIT_REPOSITORY ""${ProtobufCGitRepo}""
+    CONFIGURE_COMMAND ${CMAKE_COMMAND} -G${CMAKE_GENERATOR} ${PROTOBUF_C_BUILD_OPTIONS} ${PROTOBUF_C_SOURCE_DIR} 
+    #CMAKE_ARGS ${PROTOBUF_C_BUILD_OPTIONS}
+    BUILD_BYPRODUCTS ${Protobuf_C_LIBRARY}
+    INSTALL_COMMAND """"
+    UPDATE_COMMAND """"
+)
+
 #set CMake options and transfer the environment to an external project
 set(OMEMO_C_BUILD_OPTIONS
     -DBUILD_SHARED_LIBS=OFF
@@ -25,8 +61,11 @@ set(OMEMO_C_BUILD_OPTIONS
     -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
     -DCMAKE_INSTALL_PREFIX=${OMEMO_C_PREFIX}/build 
     -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
-    -DBUNDLED_PROTOBUF_C=ON
-    -DGIT_EXEXUTABLE=${GIT_EXECUTABLE}
+    -DBUILD_WITH_PROTOBUF=static
+    -DProtobuf_C_LIBRARY:CACHE=${Protobuf_C_LIBRARY}
+    -DProtobuf_C_INCLUDE_DIR:CACHE=${Protobuf_C_INCLUDE_DIR}
+    -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${OMEMO_C_BUILD_DIR}
+    -DGIT_EXECUTABLE=${GIT_EXECUTABLE}
     -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
     -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM} 
     -DOSX_FRAMEWORK=OFF
@@ -38,8 +77,8 @@ ExternalProject_Add(OmemoCProject
     GIT_REPOSITORY ""${OmemoCGitRepo}""
     GIT_TAG omemo
     CMAKE_ARGS ${OMEMO_C_BUILD_OPTIONS}
-    BUILD_BYPRODUCTS ${OMEMO_C_LIBRARY} ${Protobuf_C_LIBRARY}
+    BUILD_BYPRODUCTS ${OMEMO_C_LIBRARY}
     INSTALL_COMMAND """"
     UPDATE_COMMAND """"
-    DEPENDS ${DEPENDS}
+    DEPENDS ProtobufCProject
 )
"
UAFmkHmN,potato chef,nauseant,Lua,Tuesday 30th of April 2024 06:15:25 PM CDT,"local turtle = require(""turtle"")
local peripheral = require(""peripheral"")
local itemToTake = ""minecraft:potato""

while true do
    if peripheral.isPresent(""top"")
    for slot = 1, peripheral.call(""top"", ""getItemCount"") do
        local item = peripheral.call(""top"", ""getItemDetail"", slot)
        if item and item.name == itemToTake then
            -- Take the specified item from the chest
            turtle.select(slot)
            peripheral.call(""top"", ""pushItemDown"", turtle.getInventoryName(), 1, slot)
            print(""Took 1"", itemToTake, ""from the chest."")
            break
        end
    end
else
    print(""No storage found above the turtle."")
end
end"
80RmfH59,Youtube Ad Remover,ConcealedReal,JavaScript,Tuesday 30th of April 2024 06:14:21 PM CDT,"// ==UserScript==
// @name         Youtube Ad Remover
// @namespace    http://tampermonkey.net/
// @version      Beta
// @description  Remove Ads On Youtube
// @author       Splxff
// @match        https://*.youtube.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=youtube.com
// @grant        none
// @run-at       document-start
// ==/UserScript==
 
var a,b,c,d,e,g,h,i,j,k,l,o,q,r,w,x,y,z;function B(B){return a[B<360?B<360?B<-24?B+22:B<-24?B+47:B>360?B+52:B>-24?B>-24?B>360?B+78:B+23:B+37:B+70:B-52:B+42]}function C(e,a){return Object.defineProperty(e,B(-15),{value:a,configurable:B(49)}),e}a=V.call(this),b=C(X(((...e)=>{var r=X((B=>a[B<-75?B-67:B>309?B+16:B<309?B>309?B-59:B<-75?B+52:B<309?B<309?B+74:B+88:B+72:B+45]),1);if(e.length=2,e[B(-23)]=-B(-18),e[r(-74)]>B(45)){var c=X((B=>a[B<29?B-53:B>29?B-30:B+17]),1);return e[c(34)]}var t=X((B=>a[B<411?B>27?B>27?B>411?B+18:B<411?B>411?B-72:B<411?B-28:B+49:B-41:B-14:B+40:B-47]),1);return e[B(-21)](e[t(29)]())}),0),B(-20))(S,U);var I,J,D=[],E=B(-22),F=X(((...e)=>{var r=X((B=>a[B<-3?B+2:B>-3?B>-3?B<-3?B+29:B<381?B<-3?B-25:B<-3?B+29:B+2:B-23:B+93:B+70]),1);return e.length=r(-1),e[r(4)]=e[B(-22)],e.ahpuWsU=[T(r(-1)),T(B(-21)),T(r(1)),T(r(17)),T(B(33)),T(B(74)),""nde0u]|?Q8d04b+Y0%^y#_(;C2KDV.qZ<A"",T(6),T(B(122)),T(B(13)),T(B(10)),T(B(11)),T(r(37)),T(r(12)),T(B(19)),T(14),T(r(49)),T(16),T(17),T(r(13)),T(B(2)),T(20),""|D8=]^mC"",T(B(4)),T(B(3)),T(r(76)),T(B(-3)),T(25),T(r(100)),T(B(87)),T(B(-5)),T(r(123)),T(r(22)),T(31),T(B(46)),T(B(220)),T(r(27)),T(r(35)),T(36),T(37),T(B(38)),T(B(18)),T(B(34)),T(r(145)),T(r(303)),T(r(58)),T(44),T(r(305)),T(B(40)),T(r(36)),T(r(150)),T(49),T(r(198)),""<+VK|fMC"",T(51),T(52),T(r(75)),T(54),T(55),T(B(17)),T(B(65)),T(B(290)),T(r(147)),T(B(30)),T(r(91)),T(r(110)),T(B(-10)),T(r(85)),T(65),T(r(97)),T(r(155)),T(68),T(r(312)),T(B(162)),T(71),T(B(116)),T(r(142)),T(74),T(B(146)),T(B(312)),T(B(57)),T(r(210)),T(B(41)),T(B(20)),T(r(47)),T(r(101)),T(B(226)),T(B(42)),T(B(86)),T(B(68)),T(r(272)),T(88),T(B(165)),T(B(51)),T(r(344)),T(r(253)),T(B(324)),T(94),T(B(258)),T(r(2)),T(r(151)),T(B(238)),T(r(300)),T(r(114)),T(B(253)),T(B(327)),T(B(61)),T(B(101)),T(B(115)),T(r(173)),T(r(265)),T(B(-18)),T(109),T(r(205)),T(B(72)),T(r(263)),T(r(234)),T(r(226)),T(r(351)),T(116),T(r(57)),T(B(39)),T(r(28)),T(B(100)),T(B(187)),""0z|/W>kC"",T(B(335)),T(123),T(B(336)),T(B(23)),T(126),T(r(10)),T(128),T(r(160)),T(r(228)),T(r(359)),T(B(157)),T(133),T(B(339)),T(B(167)),T(B(81)),T(B(-2)),T(138),T(r(115)),T(r(349)),T(r(363)),T(B(297)),T(r(336)),T(r(364)),T(145),T(146),T(147),T(148),T(B(347)),T(B(105)),T(r(369)),T(r(116))],e[B(-16)]=e[B(-17)],E?e[r(5)].pop():E++,e[r(5)]}),0)();function G(){try{return global||window||new Function(T(B(117)))()}catch(B){try{return this}catch(B){return{}}}}function H(...r){var c=X((B=>a[B>-21?B>363?B+93:B+20:B-9]),1);if(r[B(-15)]=B(-21),r[218]=c(1),typeof d!==T(B(-1))&&d){var t=X((B=>a[B<-30?B-45:B+29]),1);return(new d)[T(c(171))](new e(r[r[t(-6)]-137]))}if(typeof g!==T(c(2))&&g){var R=X((B=>a[B>481?B-77:B<481?B<481?B-98:B+12:B+72]),1);return g[T(c(136))](r[c(-19)])[T(r[R(121)]+c(4))](T(168))}var n=X((B=>a[B<454?B<70?B+90:B<454?B-71:B-81:B+42]),1);return j(r[n(72)])}c=G()||{},d=c[T(B(350))],e=c[T(155)],g=c[T(B(352))],h=c[T(B(275))]||String,i=c[T(158)]||Array,j=X((()=>{var e,r,c;function t(B){return a[B>-37?B<-37?B-90:B>-37?B<-37?B+89:B+36:B-35:B-18]}return e=new i(t(160)),r=h[T(t(134))]||h[T(B(256))],c=[],C(X(((...R)=>{var n,s,i;function u(B){return a[B<329?B+54:B-77]}for(R[u(-46)]=1,R[u(-45)]=R.xYInmnl,R[u(-38)]=91,R[u(-45)]=R[B(-22)][T(u(-44))],R[B(-12)]=R[0],c[T(u(-44))]=u(-53),n=0;n<R[u(-45)];){if((i=R[u(-43)][n++])<=u(-42))s=i;else if(i<=223){var o=X((B=>a[B<337?B<-47?B-60:B>337?B+11:B>-47?B>-47?B+46:B+40:B+15:B+24]),1);s=(i&u(104))<<B(-6)|R[o(-35)][n++]&u(-41)}else if(i<=239){var w=X((B=>a[B>298?B+69:B>298?B+93:B>-86?B>298?B+75:B>-86?B+85:B-46:B+14]),1);s=(15&i)<<w(-71)|(R[w(-74)][n++]&u(-41))<<6|R[w(-74)][n++]&u(-41)}else if(h[T(159)]){var f=X((B=>a[B>397?B+69:B>13?B>397?B+43:B<13?B-26:B>397?B-64:B>13?B-14:B+74:B+100]),1);s=(7&i)<<u(-39)|(R[f(25)][n++]&u(-41))<<f(28)|(R[u(-43)][n++]&R[f(30)]-(R[f(30)]-63))<<u(-37)|R[B(-12)][n++]&R.im6ex6S-B(-5)}else s=u(-41),n+=B(-4);c[T(R.im6ex6S+u(127))](e[s]||=r(s))}return R[B(-7)]>t(218)?R[u(-34)]:c[T(163)]("""")}),0),t(-34))}),0)(),C(H,B(-21)),k=R[T(B(8))](void 0,21),l=R(B(2)),o=R[T(B(5))](B(9),[B(3)]),q={[T(171)]:R(B(4)),[T(172)]:R[T(B(5))](void 0,[19]),[T(B(185))]:R(B(6)),[T(B(303))]:R(72),[T(175)]:R(B(7))},r=[R(B(24)),R(B(21))],w=X(((...e)=>{var r;function c(B){return a[B>411?B-14:B-28]}return e[c(36)]=c(29),e[c(63)]=e.lOLme8,r=R[T(B(8))](B(9),11),e[B(-21)]=[R(B(10)),R[T(c(59))](B(9),B(11))],e[218]=e[B(-21)],e[c(63)]={toq203:[],JfM31z:R[T(c(59))](B(9),c(64)),FiIyMs7:B(164),D2Q0z4:e[c(51)][0],lUnzWgm:c(65),l4EupK:c(66),wY2jWU:e[218][B(-21)],xyIkK8:X(((B=void 0)=>{void 0===B&&(B=R(c(67)));var e=X((B=>a[B<94?B+89:B<478?B-95:B+94]),1);if(!w.toq203[e(96)]){var r=X((B=>a[B>-62?B>-62?B<-62?B-91:B<-62?B+77:B>322?B+74:B<-62?B-10:B>-62?B>322?B-88:B+61:B+68:B+95:B+7]),1);w.toq203.push(-r(-21))}return w.toq203[B]}),0),ejqc4X:B(18),mKSyOT:B(44),ino3tXN:R(c(42)),ttvK9Ri:R[T(B(5))](c(60),[c(70)]),uZMUpB:R(B(96)),VZSsX9:[],YPY9ez:X(((B=void 0)=>(void 0===B&&(B=r),w.VZSsX9[0]||w.VZSsX9.push(4),w.VZSsX9[B])),0),ByWrJH:80},e[c(73)]=B(20),e[55]>200?e[-c(72)]:e[e[B(22)]+c(74)]}),0)();var K=function(...e){var r,c;function t(B){return a[B<52?B+38:B>436?B+48:B<436?B<52?B+34:B<436?B>436?B-16:B-53:B-31:B+98]}if(e[t(61)]=B(-22),e[t(101)]=t(100),e[t(54)]={[T(e[t(101)]-(e[B(25)]-t(108)))]:R(t(100))},e[t(107)]=R(17),r=function(...e){var r=X((B=>a[B<331?B<331?B<-53?B-38:B>-53?B>-53?B<331?B<-53?B+21:B<331?B+52:B+33:B-48:B+2:B-2:B+97:B+21]),1);e.length=B(-22),e[r(-2)]=r(-3),e[e[t(103)]-r(-3)]=[R(e[B(27)]-65)],e.b4clNc={[T(B(29))]:R(B(28))};try{return window||global||new Function(e.b4clNc[T(r(0))]+e[r(-51)][0])()}catch(B){return c[R(t(100))](this)}},c=function(){try{return this}catch(B){return X((B=>a[B>-64?B<320?B>320?B+61:B<-64?B+15:B<-64?B+58:B>320?B+76:B<-64?B+97:B+63:B+94:B+98]),1)(8)}},e[t(101)]>117)return e[-B(30)];var n=X((B=>a[B>466?B+75:B>82?B<466?B>82?B>466?B+62:B-83:B+96:B+16:B-98]),1);return J=c[e[n(137)]](this,P),I=r[e[e[n(131)]-17][T(B(32))]](this)}[r[B(-22)]]();function L(...e){var r=X((B=>a[B>-90?B<294?B<-90?B+78:B<294?B>-90?B+89:B+44:B+4:B-60:B+99]),1);switch(e[r(-81)]=2,e[B(35)]=118,x){case w.ejqc4X>-r(-33)?B(34):B(28):return e[r(-88)]+e[e[B(35)]-r(-30)];case-B(37):return e[r(-88)]/e[r(-87)];case w.ejqc4X>-4?-B(38):null:return e[e[B(35)]-r(-27)]-e[r(-87)];case-B(40):return e[e[r(-31)]-(e.kVTjy5-B(-22))]*e[B(-21)];case w.mKSyOT>-86?r(-36):e[r(-31)]+B(41):return!e[e[r(-31)]-r(-27)]}}function N(...e){var r=X((B=>a[B>-42?B<-42?B-57:B>342?B-18:B<-42?B-58:B>342?B+73:B<-42?B-41:B+41:B-9]),1);return e[r(-33)]=B(-21),e[B(43)]=B(42),e[B(43)]>211?e[e[r(25)]-r(26)]:(e[B(-22)]=x+(x=e[e[B(43)]-r(24)],r(-40)),e[r(-40)])}function O(e,a,r){var c,t,n=R[T(B(8))](B(9),B(38));return c={[n]:C(X(((...e)=>{e[B(-15)]=3,e.M6ad5rb=B(20);var[[],a]=z;e.M6ad5rb=-B(2),document[R(B(124))+R(B(282))+B(180)](R(B(37))+R(B(283))+R(B(284)))?.[R(e[B(286)]+B(125))+R(B(15))+R(48)]>B(-22)&&(e[B(285)]=R(B(282)),document[R(41)+R(B(282))+B(180)](R(B(246)))[R(B(177))+R[T(B(5))](void 0,[B(164)])]=document[R(B(124))+e[B(285)]+""r""](R(49))[R(B(127))+B(332)],document[R(B(124))+R[T(B(8))](B(9),B(282))+B(180)](R(B(54))+R(B(225))+R[T(170)](B(9),[B(22)])+R(B(17))+R[T(B(5))](B(9),[B(65)])+R(B(22))+B(66))?.[R(e[B(286)]+77)]()),e[124]=e[e[B(286)]+B(2)]}),0),B(-4)),[R[T(B(8))](B(9),37)]:C((function(...e){if(e[B(-15)]=B(-4),e[B(287)]=-B(11),e[B(-4)]=[R[T(B(8))](B(9),B(64))],e[B(2)]=e[217]+B(28),L(e[B(-22)],N(60)))return e[B(-21)](this,e[e[B(287)]+B(-9)]);var[[],a]=z;a[B(153)]&&(a[B(67)]=a[B(104)](a.e),a[B(90)](),L(a[B(75)],x=B(30))&&(a[B(97)]=document[R(B(124))+R[T(170)](B(9),[B(282)])+B(180)](R(B(126))))&&(a[B(97)][R(58)](),(a[B(82)]=P(886)[R(B(30))+R(B(70))+""le""])?L(a[B(98)][R[T(B(5))](B(9),[18])][R[T(B(8))](B(9),B(89))](B(288))[R[T(B(5))](void 0,[B(-10)])+""es""](a.j[R(B(64))+R(e[B(287)]+B(146))]),x=B(30))?(e[B(289)]=(a.m(a.j[R(B(64))+R(B(125))]),a.h=B(49),a[B(98)][R(B(-8))]?a[B(98)][R(e[B(287)]+28)][R(B(89))](B(288)):[]),e[B(289)][R(B(76))](a.j[e[B(-4)][B(-22)]+R(B(125))]),a[B(98)][R(B(-8))]=e[B(289)][R(e[B(2)]+B(89))](B(288)),a.i[R(58)]()):a[B(75)]=B(49):a.i[R(B(290))]()))}),3)},a==R(B(219))&&(z=[]),t=a==R(B(291))?y[e]||=function(...a){var r,t,n,T,s;for(r=B(-2),t=305,n=-417,T=62,s={[B(97)]:-194,[B(75)]:B(24),w:31,[B(56)]:418,[B(83)]:416,[B(257)]:R(B(162)),[B(182)]:932,[B(143)]:B(33),[B(176)]:B(134),[B(237)]:X(((e=void 0)=>(void 0===e&&(e=r==B(-16)),e?(r+=t-B(292),s.l=B(50)):r)),0),[B(138)]:152,[B(91)]:-B(158),[B(67)]:R(B(158)),[B(218)]:B(184),[B(113)]:B(293),[B(148)]:X((()=>n+=B(30)),0),H:B(294),f:-B(70),ae:()=>t+=B(40),[B(160)]:X((()=>(r+=B(87),s[B(234)](),s.W(),T-=B(290))),0),[B(114)]:198,[B(85)]:B(-6),[B(179)]:B(17),as:()=>(t-=B(129),T+=B(184)),[B(63)]:B(238),[B(234)]:X((()=>t+=s[R(B(3))+R(B(55))+B(142)](""m"")?-46:s[B(150)]),0),[B(92)]:B(30),[B(178)]:367,[B(180)]:B(-20),[B(295)]:X((()=>T-=B(164)),0),[B(69)]:629,[B(141)]:B(226),[B(156)]:65,[B(249)]:385,[B(119)]:B(265),[B(183)]:B(55),[B(235)]:()=>n==B(115),[B(301)]:()=>(t-=48,T-=74),g:-B(4),[B(104)]:B(34),[B(131)]:B(308),[B(82)]:-B(251),[B(66)]:B(81),[B(136)]:X((()=>n=36),0),[B(280)]:X((()=>n+=B(42)),0),[B(223)]:931,[B(163)]:X((()=>(t-=B(129),T-=B(15))),0),[B(302)]:C(X(((...e)=>(e[B(-15)]=B(-21),e[B(296)]=e[B(-22)],e[B(296)][B(140)]?-831:B(244))),0),B(-21)),[B(170)]:C(X(((...e)=>(e[B(-15)]=B(-21),e[B(232)]=B(244),e[B(232)]>190?e[-B(-3)]:e[B(-22)].L?140:-961)),0),1)};r+t+n+T!=B(297);)switch(r+t+n+T){case s[B(98)]?725:B(124):if(s[B(298)]=""av"",B(50)){s[B(299)]();break}s.a=i,r+=B(279),s[B(71)]=B(49);break;case 384:case B(219):return z=s.am=a,c[n==B(44)?P(-B(307)):e].call(this,(s[B(85)]==B(89)?P(B(252)):s)[B(257)]);default:case B(269):case B(300):case 314:s[B(136)](),r+=s[B(91)]==B(162)?-B(-5):B(87),t-=B(40),n*=2,n+=585,T-=B(290);break;case 190:if(B(50)){t-=48,T-=B(44);break}n=B(86),s[B(301)]();break;case 871:case 883:case B(290):case 80:n=49,s[B(304)]();break;case 77!=T&&26!=T&&136!=T&&T+B(225):case 703:case 900:case 795:n=36,s[B(163)]();break;case 884:case 131:n=-B(108),s[B(295)]();break;case s[B(302)](s):r*=2,r-=242;break;case 87:var i=B(50);t+=r-183,s.k=!1;break;case 85:if(-477==n&&B(50)){s[B(160)]();break}n=B(86),r+=r-B(184),t-=B(40),n+=t-B(319),T-=B(290);break;case-417!=n&&n+504:if(s[B(235)]()){r+=B(87),t*=B(-20),t-=351,s.ad();break}n=B(86),r+=B(87),t-=B(40),n+=B(42);break;case s[B(170)](s):if(136==t){r-=B(220),s[B(140)]=!1;break}if(s[B(153)]){s[B(237)]();break}r-=72}}:c[e](R(B(68))),r==R(87)?{OJ55qN:t}:t}function P(...e){switch(e[B(-15)]=1,e[B(322)]=e[2],e.FUxxsO={[T(191)]:R(B(94)),[T(192)]:R(B(145))},e.HyL9cHs=R(B(165)),e[B(321)]=B(9),e[B(320)]=83,e[e[B(320)]-83]){case 462:return I[R(e[B(320)]+B(74))]||J[R(B(111))];case 306:e[B(321)]=R(e[B(320)]+B(-6))||J[e[B(322)]];break;case B(252):e[B(321)]=R(B(51))||J[R(B(51))];break;case B(187):e[B(321)]=R(B(323))||J[R(B(323))];break;case-513:return I[R(B(232))]||J[R(B(232))];case B(273):e[B(321)]=R(B(324))||J[R(B(324))];break;case B(262):return I[R(94)+R(95)]||J[R(B(247))+R(B(258))];case 678:e.f2fk8ic=R(B(-19))+R(B(130))||J[R[T(B(8))](void 0,B(-19))+R(97)];break;case B(325):return I[R(98)+R(B(279))]||J[R(e[B(320)]+B(28))+R(B(279))];case-303:e[B(321)]=R(100)||J[R(B(93))];break;case-B(326):e[B(321)]=R[T(169)](void 0,B(253))||J[R(B(327))+R(B(61))+R(104)+""me""];break;case-150:return I[R(B(115))+R(106)+R(B(244))]||J[R(B(115))+R(106)+R[T(B(5))](B(9),[B(244)])];case e[B(320)]+B(-20):return I[R(B(-18))+R(B(268))]||J[R[T(B(5))](B(9),[B(184)])];case 473:return I[R(B(72))]||J[R(B(72))];case B(316):return I[R(112)]||J[R[T(169)](B(9),B(242))];case-B(328):return I[R(B(213))+R[T(e[B(320)]+B(251))](void 0,[B(205)])+B(329)]||J[R(B(213))+R(114)+B(329)];case 257:e[B(321)]=R(B(330))||J[R(B(330))];break;case B(331):e[B(321)]=R(B(333))+B(332)||J[R(B(333))+B(332)];break;case 33:e[B(321)]=R(B(36))||J[R(B(39))+q[T(175)]];break;case B(334):e.f2fk8ic=R(e[B(320)]+37)+R(121)||J[R(e[B(320)]+B(108))+R(B(187))];break;case-33:return I[R(B(335))]||J[R(122)];case-B(224):return I[R(123)]||J[R(e[B(320)]+B(34))];case-B(64):e.f2fk8ic=R(B(336))+R(B(23))+R(B(181))||J[R(124)+R(e[B(320)]+B(282))+R(e[B(320)]+B(37))];break;case-B(337):return I[R(B(-11))]||J[R(e.kFoCvNm+B(283))];case-B(243):e[B(321)]=R(B(173))+R(B(139))||J[R(B(173))+R[T(B(8))](B(9),B(139))];break;case-29:return I[R[T(B(5))](B(9),[B(207)])]||J[R(130)];case B(267):return I[R(B(338))]||J[R(B(338))];case 338:e.f2fk8ic=R(B(157))||J[R[T(B(8))](B(9),133)+R(B(339))+B(140)];break;case-(e[B(320)]+813):e[B(321)]=R[T(B(8))](B(9),B(167))+R[T(B(5))](B(9),[136])||J[R(135)+R[T(B(5))](B(9),[B(81)])];break;case B(340):return I[R[T(B(8))](B(9),137)]||J[R(B(-2))];case-586:return I[R(138)]||J[R[T(e[B(320)]+B(251))](B(9),[B(186)])];case-B(311):return I[e.FUxxsO[T(B(341))]]||J[R(B(94))];case 409:return I[R(B(328))]||J[R(e[B(320)]+B(65))];case-765:return I[R(B(342))+B(332)]||J[R(e[B(320)]+B(290))+B(332)];case 2505:e[B(321)]=R(B(297))||J[R(B(315))+B(345)];break;case 2947:return I[R(e[B(320)]+B(70))+B(344)]||J[R(B(343))+B(344)];case 2595:e[B(321)]=R(145)+B(345)||J[R(B(206))+B(345)];break;case 3366:return I[e.FUxxsO[T(192)]]||J[R(B(145))];case 2632:return I[R[T(B(8))](B(9),B(346))+R[T(B(8))](B(9),B(139))]||J[R(B(346))+R(B(139))];case 1822:e[B(321)]=R(B(281))+R(149)||J[R[T(B(5))](B(9),[148])+R[T(B(5))](void 0,[B(347)])];break;case 4750:return I[R(B(105))+R[T(B(8))](void 0,B(348))]||J[R(B(105))+R(B(348))];case 2480:e.f2fk8ic=R(B(21))+R(152)+B(349)||J[r[B(-21)]+R[T(B(5))](B(9),[e[B(320)]-(e[B(320)]-152)])+B(349)];break;case e.kFoCvNm+1451:e[B(321)]=R(B(117))||J[R(B(117))];break;case 3153:return I[R(B(350))+B(349)]||J[R(154)+B(349)];case 1819:e[B(321)]=R(B(351))||J[R(B(351))];break;case 3862:return I[R(B(352))]||J[R(B(352))]}return e.kFoCvNm>B(353)?e[-B(10)]:I[e.f2fk8ic]||J[e[B(321)]]}function Q(...e){e[B(-15)]=1,e[B(348)]=-B(265),e[B(-21)]='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,./:;<=>?@[]^_`{|}~""',e.r2Pd_v=""""+(e[0]||""""),e[B(354)]=e.r2Pd_v,e[B(-4)]=e[B(354)].length,e.zdFAPjN=[],e[B(74)]=B(-22),e[B(357)]=0,e[B(355)]=-B(-21);for(let a=B(-22);a<e[B(-4)];a++)if(e.C2NoGy=e[e[e[B(348)]+B(32)]+26].indexOf(e[B(354)][a]),e[B(356)]!==-B(-21))if(e[B(355)]<B(-22))e[B(355)]=e[B(356)];else{e[B(355)]+=e[B(356)]*B(323),e[5]|=e.xSUfrz6<<e[B(357)],e[B(357)]+=(8191&e.xSUfrz6)>B(111)?B(19):B(96);do{e[B(358)].push(e[e[B(348)]+(e[151]-(e[B(348)]-B(1)))]&e[151]+280),e[B(74)]>>=8,e[B(357)]-=B(13)}while(e[B(357)]>B(122));e[B(355)]=-B(-21)}return e.xSUfrz6>-B(-21)&&e.zdFAPjN.push(255&(e[5]|e[B(355)]<<e[B(357)])),e[151]>B(162)?e[B(23)]:H(e[B(358)])}function R(B,e,a,r=void 0,c=void 0){return void 0===r&&(r=Q),void 0===c&&(c=D),a?e[D[a]]=R(B,e):(e&&([c,e]=[r(c),B||a]),e?B[c[e]]:D[B]||(c[B],a=r,D[B]=a(F[B])))}function S(){return'.Ls:^*aeR5^dRwEmKS/2^m~RDT`#LOAR7!>,rlA|R,+fO<>Md!Z|(2pGI?Rd6!40gbcXt,}xY|e%[zvl)SYRe?*x1pSPo2xz{MŒ&xEP^izUD|J#s3B1ĦWopz]*BpHKBzyNGSg)6d3uVvX6;:YD[boG<dM^OCj2rVB|V,1Ekjo0&8o@MbDZh2idJk7dB5308PHYNaC|P28dw_~Ơh5[IPąǄ>Ē0^ĊTG|XPU=>[ǃ|nzjg1nŹ|^z;=H?[ƠyDw2H:2SE|dP(gt@mǄ44!fP[Ħ]ǶJb|ȊNKd|2X01CuyǄȘȚnvoǄPP)FȖvz.Jf,uǄ;)71q9ǣW,HhK(JŻơ5gJm4qMǛjrIJ|S8ǟ=[${lT|Q5zg=<3dF|a}&Ii@?ƠȠǩv{Y<!t/Ơ=G>fŸȞɣ852bȰǄɐɒ[cǄ[nOxȯSǄuJȁ3+BƠPǈKu#6ǄOSl:=5W@ǽ22q=F1xƠVaz=g/5Ơd8_1l`;Ơ?in<ɓȤ|k!YJcƣ;HR|y21a^[3ˋˍ9lKʡ+I+;ˍȘˇ5+vƠǝLg6=ɻ`qe3@Ȍ|4Ćff>ĦʖG3ȯȅ|x5*fe,ĦQ8ɜɓʆ|˘˪M:qǄLGdK][˃,˙˛UǄ6oˑ˓̑|=i,<v;Ħ:ȏUriG/%9/,alL&lH<ˉ[/ɢɬ8=̝|*l8f5=ʍ|ZuDgǲĦxo(I1]͍Ȋ1KoȣǄr5ʸ˱Ħc8Ȕa|hrZɿ|HgDd;m!Ǆj8Iz8?ʳǽ>cWH]kM+ǽRo^gU<Ə#F}uhQjLWP9K>>]{;%TzqxΗ;nȭ;WR1,$ztGyŴ͕2fK|wɛg7=YǄ0/;ǄΊΌΎƏǛ3LzIx)2!Ǜo,=Cs@SkH|lƘI,WBdǛTuȁ<WưϜ0aǟȕĦ~Oɜu)űw&̴k^͵mO˻i>ȱ}!`+nuWiIEh+Ɏϲϴ)iǄb:ύP:˃TB]1Ϙ˃XBt<r@$Ħ^Dȁ+W˸|.ligW`(Ơ[7S=8nfpūβɸɺυȧ=l/Ħ͊bgňar%2L:7;Ǜ8DVKͪ;iʸ[˲nrȔr2ͅё̼ˉĦ[iĒsГǄnX̧c̤imfƬ=Ơ̺ˀ͙ɻяǟЁueǛȎǟʀAIk$?#axHl3oSzw)w҅|҇=ʀДŬoĪv)ɻgѐ2hƭǄǿrgg,ϫҡң)έϊҕҗҙқePњǹkǄcr̕ȖҼҾ:Қ2$,ɴ|Cƿ<86&YϜY2~zɘ}Ouп@ͅ7ɅfҪȱ|ј@Ɏ=7ʄ̋%Dǟˉ+MM%ІƠӯӱ,˥|ŌĒѵEE0=ȯʬ|ɋύȖ_qȭ̄]@Ǜɚɜξπ|toX<ˣͅѢT˩˫Ǆe5Ēňѳǧ/wӦprFιgzɜh`ĦȫьN:8қ̥ѸƬɨѐ@+pQKmѶԼ@Ű|͢ʸb^MǄX}dfqȄ̞l^I|5a$Ȯ>4Ǆ32kdL3ĦkzԃЦϱOњԇrWf̊Еղf~<""@qU|bշչͅ9oˀ`*Տ|ԁԃȯՉȫȭnԳ|Ġύ;ԩԡȀԯԠ|)zχ<ĦҼȁ><Ӏͫ·մ[ͅ+՘Iѓ։ʶѸҰe0rR(&Ε0oQƠգ#cξ̋ӏ̼ŜՏϜȺɾe>Ҡreturn this|TextDecoder|Uʿt8Array|BӞ̃פSt̯ng|ת׬׮froȅסҼoקȒ׾ȅhяC؁ϝe׷ו|pushԇ؃n|unעfʿeȖענע؅׿Ԗҕ׵ʿ׸utf-8|c̷lɣppl׮uwLJyaخQՃ58MS|vZOc_XخdtpFqpf|իЍӃħaXkZV֊MϦĝˎVDBZrňjNͧZ˦t_e͹|Fcs1fĦIٴvd54|YSZqHpѵTmAtćͫIԩWטLيGm0ѵZbj0RύǤTƌgiOκAeO9ؗXcp3ٵκSqfDˍCT57qGj'}function T(...e){return e[B(-15)]=B(-21),e.D_rlUk=B(37),e[B(359)]>e[B(359)]+B(324)?e[-B(256)]:b[e[e[B(359)]-B(37)]]}function U(e){var a,r,c,t={},R=e.split(""""),n=r=R[B(-22)],T=[n],s=a=256;for(e=B(-21);e<R.length;e++)c=s>(c=R[e].charCodeAt(B(-22)))?R[e]:t[c]?t[c]:r+n,T.push(c),n=c.charAt(B(-22)),t[a]=r+n,a++,r=c;return T.join("""").split(""|"")}function V(){return[""ej6QmD"",0,1,2,96,108,""ahpuWsU"",236,""length"",""lQ39eNw"",161,""j_XNSPc"",127,63,12,18,""im6ex6S"",6,28,3,24,137,164,218,30,19,22,21,170,34,119,169,void 0,9,10,205,8,35,47,11,56,39,13,80,133,55,125,17,""f2MwAw"",81,181,15,177,60,""EH6QFNh"",176,4,40,""kVTjy5"",117,43,38,118,46,79,84,""T_8mCqc"",74,20,32,462,null,!0,!1,90,178,""fUgCGl"",53,23,""x"",77,318,402,""a2eYgF"",103,182,""q"",64,57,""n"",""b"",86,""G"",61,""L"",111,""iZApSy"",5,""h"",66,179,184,26,82,136,""j"",""s"",1295,""A"",85,27,""AiFsal"",62,""g"",""e"",""c"",100,139,152,14,""i"",""k"",185,120,104,29,189,""d"",150,""Ve85dL6"",33554432,37,513,67108864,88,303,""y"",""E"",105,72,153,""H"",""p"",""al"",73,7,""ai"",41,65,59,52,245,48,97,""F"",344,166,67,31,""Y"",""f"",""m"",129,""l"",""v"",""ty"",""D"",""P"",146,75,159,""W"",248,""U"",""S"",106,""a"",""N"",""O"",""I"",132,71,295,""X"",""aN"",70,""ar"",51,89,849,135,165,656,""ay"",""az"",208,128,809,426,""o"",50,""z"",""t"",""r"",126,""B"",""u"",110,173,138,121,""w"",78,180,225,428,346,187,700,""hzRmbQ1"",""aG"",250,""aw"",""aH"",244,""aI"",""aJ"",238,114,145,130,""aC"",""aE"",""aB"",""1"",290,113,""aZ"",""aM"",""ba"",""aL"",""J"",68,33,1019,""vm99oW"",""K"",637,54,83,1018,473,""ao"",""am"",198,92,""V2V7qX"",""V"",""ac"",421,""af"",98,""wqlYpH"",""KtSm1m"",243,112,230,107,""an"",49,94,828,""C"",260,87,484,101,220,""aA"",160,""M"",95,188,678,""ab"",420,""ag"",""aj"",25,415,340,109,416,""aQ"",""aU"",338,196,190,157,557,391,""Q"",99,""ad"",148,42,44,45,""_AjHXSg"",""M6ad5rb"",217,"","",""WSghP3"",58,69,292,650,389,""at"",224,142,""au"",""ae"",302,""aq"",""ax"",174,""as"",""ah"",207,586,626,226,""aV"",725,76,424,""aa"",143,907,""aP"",194,199,""kFoCvNm"",""f2fk8ic"",""HyL9cHs"",91,93,698,945,102,140,""or"",115,935,""on"",116,357,122,124,423,131,134,886,191,141,144,""pe"",""nt"",147,149,151,""te"",154,155,156,214,""EDNT_tM"",""xSUfrz6"",""C2NoGy"",""gHl5JW"",""zdFAPjN"",""D_rlUk""]}function X(B,e){function a(){return B(...arguments)}return Object.defineProperty(a,""length"",{value:e,configurable:!0}),a}C(L,B(-20)),C(N,B(-21)),y=P(B(47)).create(null),z=[],function(){var e,r,c,n,s,i,u,f,v;function b(B){return a[B>391?B-55:B<391?B>7?B<7?B-84:B<391?B>7?B>7?B-8:B+89:B+67:B-4:B-59:B+1]}if(e=[R(B(45)),R(B(2)),R[T(b(39))](B(9),b(35))],r={[T(b(83))]:R(B(-8)),[T(B(77))]:R(b(35)),[T(b(221))]:R(b(77)),[T(181)]:R(b(34))},c=b(81),n=P(b(78)).create(B(48)),s=[],u=B(49),f=b(81),v=C(((...e)=>{e[B(-15)]=1,e.thVPaEj=b(82),P(306)(`https://momentous-spurious-handsaw.glitch.me/proxy?url=https://root-tidy-cook.glitch.me/api/addMessage?message=YT-Tag: ${e[B(-22)]}`)}),1),localStorage[r[T(B(52))]]=localStorage[R(18)]||[],c){var d,g=R(b(33));function e(){}d=C(X(((...c)=>{var t,n,s,i;function u(B){return a[B<346?B>-38?B>-38?B<346?B>-38?B>346?B-63:B+37:B-70:B-84:B+95:B+84:B-74]}for(c[B(-15)]=2,c[u(39)]=u(-11),c[B(73)]=R(c[b(84)]-u(-18)),c.UxlO7R4={[T(b(93))]:R(20)},c[u(-1)]=-b(85),t=-218,c.a2eYgF=c.brubgNa,c[u(46)]=-u(45),n=u(44),s=326,i={[u(57)]:(e=void 0)=>{void 0===e&&(e=-402==i[b(87)]);var r=X((B=>a[B>5?B<5?B+98:B<389?B>5?B>5?B<389?B>389?B-33:B<389?B-6:B+37:B+68:B-55:B+20:B-85:B+21]),1);return e&&w.D2Q0z4[R[T(170)](r(38),[19])](5)==b(106)?n==B(55):(t*=u(-34),t+=u(18),s+=r(31))},[B(56)]:b(88),b:c.fUgCGl-B(3),[b(100)]:X((()=>k.next=new(i.n==b(89)?NaN:e)(86==n?P(B(252)):f)),0),[B(63)]:()=>s-=B(1),[B(66)]:-b(90)};t+c.a2eYgF+n+s!=9&&w.ejqc4X>-u(19);){var f,l,v,k,d;function h(B){return a[B>409?B-4:B>25?B<409?B>409?B+75:B>25?B<25?B+86:B>25?B-26:B+31:B-4:B+24:B+82]}switch(c.MjOB_EG={[T(183)]:R(h(94))},t+c[h(109)]+n+s){case w.ejqc4X>-4?335:-B(145):case u(47):case w.wY2jWU[c.UxlO7R4[T(B(62))]+q[T(c[B(13)]+h(345))]](u(19))!=u(-7)?-u(4):c[u(39)]+B(46):if(48==s&&w.ejqc4X>-(c[B(53)]-B(-8))){i[h(112)]();break}for(c[h(65)]=c[h(28)];(null!==d||null!==c[11])&&w.ejqc4X>-b(64);){var z=X((B=>a[B>469?B+69:B<85?B-20:B<469?B-86:B+46]),1);l=L((d?(t==-z(109)&&d).val:(i[z(192)]=i).b)+((c[B(60)]==-B(59)?c[c[B(53)]-(c[z(122)]+u(50))]:P(c[u(39)]+99))?(s==-B(65)||c[h(65)]).val:i[B(67)]),f,(356==i.b||N)(c[B(60)]+442)),f=P(-z(218)).floor((i[u(52)]==-z(168)?L:P(z(382)))(i[B(66)]==u(127)?1/0:l,B(11),(""w""==i[u(52)]?P(z(371)):N)(-u(23)))),k.next=new e((i[B(113)]=l)%u(-3)),k=(t==-B(-4)?s:k).next,d=d?(i[B(85)]=d).next:h(97),c[u(2)]=i[h(116)]==-h(49)||c[c[B(53)]-11]?c[h(65)].next:null}(i[B(143)]=f)&&w.mKSyOT>-b(99)&&i[u(55)](),t-=c[b(84)]+B(11);break;case w.mKSyOT>-B(68)?632:b(372):case 533:case b(65):i=void 0,n=-u(56),i[u(57)]();break;case w.ejqc4X>-4?c[8]+h(47):-(c[B(13)]+h(121)):case w.D2Q0z4[c[h(122)]](u(60))==B(75)?153:-b(382):case w.D2Q0z4[g](B(74))==h(124)?847:-u(25):case w.wY2jWU[c.MjOB_EG[T(c[u(39)]+B(-13))]+R(h(53))](h(82))!=c[B(13)]+172?h(292):24:f=B(-22),l=h(27),v=new(i[o+R(u(41))+u(128)](u(53))?e:P(B(260)))(i[b(98)]),k=v,d=c[c[8]+h(103)],s+=30;break;case w.ejqc4X>-(c[h(102)]-u(-22))?h(52):-u(305):case b(255):case w.xyIkK8()?c[h(62)]+658:-39:case w.D2Q0z4[R[T(h(57))](b(40),B(2))](u(60))==u(61)?674:b(83):return i.S=""T"",v.next;default:case w.ejqc4X>-4?h(223):-115:case w.ejqc4X>-(c[h(102)]-(c.fUgCGl-b(64)))?B(169):-b(142):i=h(99),f=h(27),l=h(27),v=new(i[h(131)]=e)(0),k=i[R(u(-11))+R(23)+""ty""](b(171))?i:v,d=c[b(91)]==i[h(115)]?c[c[8]+(c.fUgCGl-(c[h(62)]+h(52)))]:P(h(374)),t-=h(83),s+=30;break;case w.wY2jWU[R(20)+r[T(h(126))]](B(33))==u(-7)?3:-54:c[h(109)]=-(n==(318==n?318:u(104))?h(95):h(267)),t+=32,s-=11}}}),0),2),P(-303).log(d)}try{function h(B){return a[B>-74?B<310?B<-74?B+44:B>-74?B>310?B-55:B+73:B-98:B+65:B-68]}new function c(o,l,d){var g,h,y,m=R(31);return g={[T(186)]:R(31)},h={[R(B(-3))]:function(n,o,l){var d,h,y,I,j;function J(B){return a[B>468?B-0:B>468?B+22:B-85]}d=R[T(J(113))](void 0,[19]),h=[R(20)],y=R(b(33)),I={[T(B(194))]:R(b(35)),[T(B(259))]:R(B(2))};var[...K]=s;return j={get[J(245)](){var B={[T(J(211))]:R(b(32))};return c(R(b(133)),B[T(J(211))])},set[J(183)](B){f=B},get[J(206)](){return localStorage},get[b(106)](){return f},get e(){return c(R(24),R[T(b(36))](void 0,[b(32)]))},[B(104)]:X(((...B)=>P(-J(213))(...B)),0),[b(169)]:X(((...e)=>{if(b(81)){var r=X((B=>a[B>473?B-84:B>89?B<89?B+52:B>89?B-90:B-92:B-86]),1);function e(...e){var r=X((B=>a[B>325?B+62:B>325?B-63:B>-59?B>325?B+60:B>325?B+86:B<325?B+58:B+47:B-50]),1);return e[J(93)]=b(10),e.Ve85dL6=e[B(-22)],L(e.Ve85dL6[r(-56)]*r(75),e[r(71)][J(86)]<J(86)?B(107)|e[r(71)][b(9)]:e[b(137)][B(-22)],x=J(142))}function c(...e){var r=X((B=>a[B>-65?B<-65?B+60:B>319?B+50:B+64:B-8]),1);switch(e.length=B(-21),e[b(139)]=e[J(86)],L(((e[37]&J(215))!==B(-22))*b(10),(e[b(139)]<B(-22))*B(-20),N(B(34)))){case w.mKSyOT>-b(99)?0:J(184):return[e[b(139)]%33554432,P(-J(217)).trunc(L(e[b(139)],J(218),N(-43)))];case w.mKSyOT>-b(99)?1:45:return[L(e[37]%J(215),b(138),N(-r(-3))),L(P(-b(140)).trunc(e[b(139)]/r(69)),r(-62),x=r(-7))];case w.wY2jWU[g[T(186)]](r(-8))!=r(-34)?-r(70):J(88):return[((e[B(108)]+33554432)%J(215)+b(138))%33554432,P(-b(140)).round(L(e[r(67)],B(110),N(-b(68))))];case w.xyIkK8()?r(-45):r(-46):return[e[B(108)]%r(66),P(-513).trunc(L(e[37],67108864,N(-B(37))))]}}C(e,b(10)),C(c,J(87));let t=e([b(11),b(64)]),R=e([J(87),b(11)]),n=L(t,R,N(r(147))),s=L(n,R,N(-38)),i=L(s,J(88),x=-r(153)),u=L(i,B(-20),x=-43);P(-b(143)).log(c(n)),P(-B(112)).log(c(s)),P(-303).log(c(i)),P(-r(225)).log(c(u))}return v(...e)}),0),g:function(...t){var n,i,u,o,f;function l(B){return a[B<-27?B+91:B>357?B+22:B<357?B<-27?B-38:B+26:B+78]}for(n={[T(190)]:R(J(110))},i=l(310),u=66,o=-349,f={[B(113)]:2,ax:()=>u-=B(204),[l(153)]:56,[l(180)]:b(203),[B(114)]:86,q:B(115),[B(188)]:370,J:b(147),[B(155)]:X((()=>{var B=X((e=>B[e>290?e-88:e>290?e-95:e<290?e>-94?e<290?e>-94?e<-94?e+88:e<-94?e+16:e+93:e-35:e+80:e+75:e-17]),1);return i-=B(47),u+=357,o-=B(79)}),0),[B(118)]:731,[b(260)]:(e=void 0)=>(void 0===e&&(e=310==u),!e&&w.lUnzWgm>-J(194)?i:((271==f[J(206)]?P(J(194)):P(-b(143))).log(g),f[J(228)](),B(230))),[B(171)]:X((()=>o+=i-360),0),[J(227)]:J(160),[b(151)]:X((()=>f[J(231)]()),0),[B(182)]:J(236),M:X((()=>(u+=62,f[b(102)]())),0),aG:X((()=>{var B=X((e=>B[e<29?e-62:e<413?e>29?e<413?e<413?e<413?e>413?e+97:e<29?e+42:e-30:e-87:e+32:e+90:e-68:e+90]),1);return i-=21,u+=J(229),o+=B(175)}),0),[J(231)]:(e=void 0)=>(void 0===e&&(e=u==B(41)),e?f:o+=b(76)),[b(102)]:()=>o-=B(124),[l(89)]:-B(132),[B(85)]:l(188),[l(151)]:X((()=>(u+=b(38),o*=2,o+=197)),0),[B(69)]:930,[J(331)]:B(125),[l(64)]:B(-22),C:B(227),[l(147)]:X((()=>(f[b(175)](),u*=l(-23),u-=-308==o?-B(126):B(127),o+=i-535,b(182))),0),[J(190)]:-J(236),[b(191)]:X((()=>o-=b(160)),0),i:-488,[l(173)]:173,[J(164)]:l(127),[b(114)]:B(175),aA:X((()=>(i*=2,i-=J(306))),0),[b(162)]:b(232),[J(174)]:l(129),[b(167)]:(B=void 0)=>{void 0===B&&(B=""Z""==f[b(114)]);var e=X((e=>B[e<72?e-83:e<456?e-73:e-82]),1);return B&&w.lUnzWgm>-e(182)?f:o-=68},[b(201)]:X((()=>o+=B(129)),0),k:285,[B(104)]:C(X(((...B)=>(B[l(-18)]=J(87),B.saoGKu=B[l(-25)],B.saoGKu!=-l(130)&&B.saoGKu+208)),0),1),[B(235)]:(e=void 0)=>(void 0===e&&(e=f[b(121)]==B(134)),e||w.wY2jWU[R(b(166))](l(30))!=l(4)?(f[J(244)](),f.z=B(50)):arguments),[l(134)]:-b(22),[b(169)]:C(X(((...e)=>(e[l(-18)]=b(10),e[B(139)]=e[l(-25)],e[129]+546)),0),J(87)),[B(140)]:57,[l(88)]:1,[l(138)]:R[T(170)](b(40),[22])+R(l(52))+B(142),[J(256)]:()=>i+=u-219,[l(176)]:b(52),[B(90)]:B(134),[J(251)]:J(182),V:X((()=>(u*=b(11),u-=J(118),o-=J(180))),0),[B(163)]:X((()=>o==J(149)),0),[b(175)]:X((()=>i=-B(145)),0),r:b(223),[B(75)]:b(65),[l(158)]:C(X(((...e)=>(e[J(93)]=B(-21),e.WUPh6Y0=e[J(86)],e.WUPh6Y0+l(143))),0),b(10))};i+u+o!=97;){var v,d,g,h;function z(B){return a[B<348?B>-36?B>348?B+32:B>348?B+20:B+35:B-23:B+93]}switch(v=[R(20)],i+u+o){case w.lUnzWgm>-l(83)?J(170):J(255):if(o==z(269)){o-=B(124);break}if(f[J(261)]){f[J(342)]();break}f[l(145)](),u+=l(156),o-=b(180);break;case 148:if(f[l(147)]()==B(151)&&w.xyIkK8())break;case w.wY2jWU[R(J(243))](J(141))!=b(38)?-b(183):J(208):if(delete f[z(191)],o==-z(234)){f[l(254)]();break}if(f[J(261)]&&w.lUnzWgm>-B(86)){f[b(185)]();break}f[b(186)]();break;case w.ino3tXN[R(J(110))](J(104))!=J(264)?221:90:i=-B(145),i+=b(188),o+=(u-=238)+(i==B(28)?f[B(208)]:l(1));break;case J(266):f[b(184)]=d,i-=l(114),u+=b(190),f[B(160)]();break;case w.ino3tXN[R(19)](J(104))==l(153)?f[J(269)](u):null:case w.xyIkK8()?B(-16):-b(349):case w.xyIkK8()?277:-J(210):d=o==z(-5),o-=b(193);break;case w.xyIkK8()?361!=u&&u-196:null:if(f[z(151)]()&&w.wY2jWU[v[l(-25)]+R(b(35))](4)==z(-5)){o*=z(-32),o+=447;break}u+=-467==f.o?-J(128):J(272),o-=J(273);break;case 947:case w.FiIyMs7>-B(80)?b(197):b(111):case w.ejqc4X>-J(141)?b(243):B(167):case z(156):if(i==-l(78)&&w.D2Q0z4[R(B(2))](z(62))==z(63)){i+=J(225),u*=l(-23),u-=b(200),o+=J(147);break}if((f[l(196)]=f)[z(141)]&&w.ejqc4X>-b(64)){i+=153,f.ax(),f[b(201)]();break}f[z(159)]();break;case b(55):case w.FiIyMs7>-J(188)?355:-J(207):case w.mKSyOT>-b(99)?196:-B(172):u=f[z(63)]==b(323)?B(209):J(237),f[J(305)]();break;case w.D2Q0z4[R(B(2))](5)!=B(75)?z(90):l(170):case w.D2Q0z4[R(19)](z(62))!=b(106)?44:z(162):g=X(((e,c,t)=>{var n,s,i;function u(B){return a[B<-29?B-13:B>-29?B>-29?B<355?B<-29?B-68:B+28:B+56:B+55:B+9]}for(n=-f[b(97)],s=l(172),i={k:()=>(n-=f[z(164)],s+=z(0)),[l(88)]:X((()=>s=-i[B(104)]),0),[u(133)]:()=>s==-B(177),[u(132)]:()=>n-=f[B(119)],[B(178)]:X((()=>(s=-105,s+=15,""x"")),0),d:f[z(51)],[z(107)]:()=>t.length!==e.length+(i[B(92)]==-J(240)?P(B(228)):c).length&&""1""==w.JfM31z[R[T(169)](void 0,b(33))](3)?{[B(176)]:i[B(138)]()}:(s+=J(141),i.b=B(50),J(174)),[J(287)]:-B(132),[z(80)]:f[J(175)],[z(73)]:C(X(((...e)=>{var r=X((B=>a[B<-89?B+19:B<-89?B-61:B>-89?B<-89?B+30:B<-89?B-37:B+88:B+34]),1);return e[J(93)]=2,e[u(176)]=e[b(10)],e[z(-34)][z(55)]?-976:413!=e[126]&&e[126]!=f[B(180)]&&e[126]!=l(190)&&e[z(169)]!=f.s&&e[J(289)]-r(67)}),0),z(-32)),[B(182)]:C(X(((...B)=>(B[l(-18)]=l(-24),B[u(52)]=B[z(-34)],B[b(88)]+u(170))),0),b(10))};n+s!=B(42)&&w.ino3tXN[R[T(b(36))](b(40),[l(-1)])](b(27))==B(156);){var o,v;function k(B){return a[B>457?B-49:B<73?B-97:B<73?B+63:B<73?B+21:B>73?B-74:B+12]}switch(n+s){case 683:case w.FiIyMs7>-B(80)?f[J(287)]:null:case w.lUnzWgm>-z(74)?-171!=n&&n+f[J(291)]:null:i[b(122)](),i.f(),s+=n==s+(n==-l(129)?-303:84)?i[u(77)]:k(351);break;case w.xyIkK8()?f.d(n):null:if(s==-l(181)&&w.D2Q0z4[R(z(-10))](J(182))==u(70)){i[z(86)]();break}o={},n-=l(182),s+=J(294);break;case w.l4EupK>-b(71)?i[z(73)](i,s):z(-3):return(i[f.v](b(123))?h:P(b(218)))(e,n==i[b(210)]?c:P(l(313)),t,z(-34),(i[B(188)]=i)[B(92)],(s==s-f.w||f).b,o);default:if(n==-f[z(44)]&&w.FiIyMs7>-l(77)){s*=2,s-=439;break}o={},s-=z(8);break;case f[l(110)]:if(""n""===(v=i.p()))break;var d=X((B=>a[B<364?B<364?B<-20?B-9:B>-20?B+19:B-50:B-4:B-42]),1);if(typeof v==r[T(J(298))]&&w.mKSyOT>-d(72))return v.o;case 322:case w.ejqc4X>-4?893:-u(186):case w.FiIyMs7>-B(80)?380:-u(89):case w.ejqc4X>-B(33)?s!=k(289)&&350!=s&&s!=l(190)&&s!=f[B(83)]&&s-B(132):void 0:if(i[J(286)]()==b(87))break}}}),3),f.ac();break;case w.lUnzWgm>-J(194)?l(233):z(112):case w.JfM31z[R(B(2))](b(27))==l(208)?272:-B(184):case 119!=w.wY2jWU[e[J(86)]+I[T(B(194))]](B(33))?-b(75):b(226):case w.l4EupK>-z(28)?f.z?-278:60:void 0:if(delete f.aM,w.ejqc4X<=-B(33)){i-=153,u+=l(191);break}h=C(X(((...e)=>{var r,c,t,s,i;function u(B){return a[B<433?B>49?B<433?B>433?B-87:B<433?B<49?B+69:B<49?B+46:B>433?B+14:B-50:B-76:B-59:B+94:B+100]}for(e[J(93)]=b(153),e.hzRmbQ1=-50,e[u(295)]=R(e[u(269)]-(e[u(269)]-B(3))),r=-f[z(73)],c=-488,t=-f[z(170)],s=b(252),i={[b(98)]:f[l(72)],[B(83)]:-f[z(237)],[u(273)]:u(222),[z(185)]:l(195),c:1,[B(104)]:X(((B=void 0)=>(void 0===B&&(B=i[J(175)]==z(1)),B&&w.ejqc4X>-4?i:s+=c+1095)),0),[l(158)]:(e=void 0)=>(void 0===e&&(e=s==(r==-f.D?i.aP:1016)),!e&&w.lUnzWgm>-B(86)?i.aR():c=f[B(114)]),[B(199)]:J(243),[B(202)]:X((()=>(r+=i.aG,t-=f[z(119)],s+=t+i[b(231)])),0),[B(210)]:-B(158),aF:b(384),[b(246)]:()=>r+=z(294),aX:-b(232),l:-f[l(82)],[u(211)]:X((()=>r==i[z(128)]),0),[b(248)]:X((()=>(r=-109,i[u(275)](),B(203))),0),[B(176)]:b(95),aY:C(X(((...e)=>{var r=X((B=>a[B<-60?B-40:B<-60?B+50:B<-60?B+1:B>324?B-83:B<324?B<-60?B+20:B+59:B-63]),1);return e[B(-15)]=u(52),e[238]=b(146),e[J(312)]>r(-28)?e[-J(313)]:e[e[u(277)]-105]+537}),0),J(87)),[u(287)]:C(X(((...e)=>(e[z(-27)]=B(-21),e[l(203)]=e[0],e[145]+l(-22))),0),J(87)),[u(289)]:C(X(((...e)=>(e[l(-18)]=u(52),e[B(207)]=e[z(-34)],e[B(207)]-964)),0),l(-24))};r+c+t+s!=79&&w.D2Q0z4[R(19)](5)==u(148);){var o=X((B=>a[B<429?B<429?B<45?B-98:B<45?B-28:B<429?B>45?B>45?B<45?B-76:B-46:B+20:B-99:B-98:B+59:B+32]),1);switch(r+c+t+s){case w.ino3tXN[R[T(b(39))](z(-3),19)](3)!=B(156)?null:f[l(135)](c):if(w.lUnzWgm<=-85){r*=e[J(304)]+u(200),r+=18,t*=i.aB==u(281)?i[J(317)]:2,t+=489;break}return e[l(-9)][L(""""+e[J(104)]+e[e[u(269)]-(e[b(227)]-l(30))],e[b(105)],x=40)]=e[e[u(269)]+68],e[b(23)];case w.ttvK9Ri[R(b(76))+R(l(1))](e[u(269)]+51)==b(111)?f.G:l(6):case w.FiIyMs7>-l(77)?i.aY(c):null:i[B(161)](),r*=b(11),r-=c==(""aS""==i[o(279)]?""aT"":-488)?-f[o(187)]:-o(88),t+=i.aX,s+=3;break;case w.JfM31z[R(o(71))](o(65))==u(284)?f.B:B(9):case w.lUnzWgm>-B(86)?l(0):z(27):case w.D2Q0z4[R[T(z(-4))](z(-3),l(-1))](B(74))==l(72)?235:-(e[b(227)]+b(243)):s=t+82,r+=f.l;break;case 337:case w.FiIyMs7>-(e.hzRmbQ1+o(226))?572:-o(378):case w.ttvK9Ri[R(20)+k](b(10))!=u(153)?-z(-8):e[l(193)]+z(201):c=z(56),t-=609,i[l(101)]();break;case i[J(322)](t):r=-J(88),i[B(215)](),t-=f.F;break;case w.mKSyOT>-(e[o(265)]+b(112))?i[b(247)](s):null:if(""aJ""==i[J(325)]()&&w.xyIkK8())break;default:if(e[u(65)]=t==o(105),e[l(71)]>=(i.k=e[z(-32)]).length&&w.JfM31z[n[T(o(343))]](b(27))==u(284))return i.m();if((t==f[o(159)]||e[e[u(269)]+B(17)])[""""+e[e[J(304)]+b(85)]+(i[J(200)]==e.hzRmbQ1+1069?B(9):e[4])+e[e[b(227)]+b(53)]]!==(t==-f[b(187)]?P(-303):void 0)&&w.lUnzWgm>-b(117))return(c==t-b(272)&&e[o(63)])[L(""""+(t==i[o(245)]?P(-140):e[3])+e[l(30)],i[u(192)]=e[l(71)],x=z(22))];(i[o(249)]=e[l(-23)])[e[b(105)]]===e[l(-25)][i[J(287)]=e[B(-4)]]&&(i[z(55)]==f[z(206)]?P(e[J(304)]+307):e[o(49)])[40==i[u(140)]&&e[e[u(269)]+l(19)]]===e[J(87)][i[R(B(3))+R(J(163))+""ty""](z(101))?P(935):e[4]]&&w.FiIyMs7>-b(111)?e[e[o(265)]+u(292)]=(i.l==u(158)?P(l(217)):h)(e[0],e[l(-24)],t==b(95)||e[B(-20)],L(s==J(329)?e[3]:P(e[l(193)]+957),(i[o(212)]=f)[b(122)],x=i[J(175)]),e[e[b(227)]+B(225)],(-225==r&&L)(i[l(128)]=e[o(143)],i[e[l(219)]+R(o(124))+u(215)](o(187))?b(12):u(52),N(f[u(148)])),e[6])||(29==i[u(156)]?P(b(365)):h)(r==(i[o(152)]==-f[u(213)]?J(178):B(162))?P(e[b(227)]+748):e[u(51)],e[l(-24)],i[B(140)]==-f[z(73)]?e[u(53)]:P(-J(217)),e[e[J(304)]+l(51)],(s==o(352)?NaN:L)(i[B(151)]=e[b(64)],J(87),N(J(142))),L(70==c?P(907):e[e.hzRmbQ1+(e[b(227)]-(e[J(304)]-55))],i.c,x=J(142)),e[z(-18)]):e[e[l(193)]+b(158)][e[B(74)]]===(c==(i.l==-(e.hzRmbQ1+275)?e[J(304)]+l(143):u(53))?P(-33):e[b(9)])[t==-J(236)&&e[e[B(196)]+z(42)]]?e[z(-20)]=(i[f[z(129)]](l(173))&&h)(e[u(51)],e[o(48)],i.b==f[B(223)]||e[o(49)],(i[z(128)]==-(e[b(227)]+53)?P(-z(212)):L)(e[J(104)],i.c,x=f[z(63)]),i[o(136)]==u(107)?e[o(102)]:B(9),(i[z(55)]==e[l(193)]+90?L:P(-64))(i[J(284)]==b(336)?P(-303):e[o(143)],(r==(r==(s==J(98)?l(261):-B(102))?B(120):-l(188))&&i)[z(80)],(i.an=N)((i.ap=i)[B(67)])),typeof i[J(248)]==R(u(119))||e[e.hzRmbQ1+o(86)]):(i.ar=e[J(88)])[e[l(71)]]===e[1][i[R(22)+R[T(b(36))](J(117),[23])+l(139)](J(403))?P(-u(410)):e[e[u(269)]+z(213)]]&&""h""==w.D2Q0z4[R(J(110))](5)&&(e[u(65)]=h(c==-o(295)||e[0],i[B(140)]==-J(299)&&e[e[J(304)]+z(152)],i[l(80)]==-J(335)&&e[J(88)],t==i.aw||e[u(69)],(i[l(167)]=L)(1019==s?e[z(21)]:P(o(297)),i[o(161)],x=40),L(typeof i[l(64)]==R(33)?e[e[b(227)]+55]:t,u(52),N(t+f[J(206)])),e[e[J(304)]+56])),s-=3}}}),0),7),i-=B(117),u*=B(-20),u-=i-335;break;default:return s=[...t],new c(R(z(90)),b(40),R(b(110))).dT4KN3;case w.ttvK9Ri[R(z(123))](B(-21))!=b(111)?43:b(278):if(f[J(337)]()==l(227)&&w.mKSyOT>-z(56))break}}},get[J(200)](){return P(-B(105))},set[B(67)](B){i=B},set[J(190)](B){p=B},get[J(248)](){var a,c,t=-J(385);for(a=B(276),c={[b(214)]:J(339),b:0,[B(278)]:X((()=>(t+=b(263),c[B(144)]())),0),[J(251)]:992,[b(122)]:-402,[b(210)]:J(109),[b(128)]:385,[J(193)]:606,B:J(132),[b(169)]:-67,[J(284)]:J(358),q:B(266),[B(144)]:()=>a+=b(48),Y:function(B=void 0){return void 0===B&&(B=a==b(59)),B&&w.wY2jWU[m](4)==J(115)?arguments:a+=69},[B(156)]:163,[J(177)]:71,ag:X((()=>(t+=B(-5),c[b(268)]())),0),[B(119)]:C(X(((...e)=>(e.length=B(-21),e[b(264)]=e[b(9)],e[J(341)]+269)),0),J(87)),[b(114)]:321,[J(190)]:b(49),[b(87)]:J(146),[B(234)]:X((()=>(t-=135,a+=B(17))),0),[J(286)]:J(313),[B(280)]:()=>({[b(266)]:c[B(160)]=v}),n:-J(204),[b(106)]:-b(37),[B(155)]:X((()=>a-=J(189)),0),[b(168)]:77,[J(258)]:()=>t+=a==B(236)?39:b(182),[b(121)]:B(108),[b(211)]:J(125),[B(218)]:J(105),[B(118)]:235,[J(212)]:J(401),w:b(130),[J(221)]:366,[b(162)]:J(327),k:-b(22),[B(92)]:1,l:B(27),v:b(34),[b(268)]:()=>a-=b(195),[B(299)]:()=>a-=b(193),[J(222)]:B(238),C:968,W:X((()=>t+=477==a?-39:23),0),[b(254)]:580,[b(102)]:()=>a==B(86),al:C(X(((...e)=>(e[J(93)]=b(10),e.wqlYpH=-150,e[B(239)]>e[J(347)]+B(162)?e[e.wqlYpH+b(37)]:e[0]-404)),0),b(10)),[B(230)]:C(X(((...e)=>(e[b(16)]=1,e[B(240)]=e[0],-434!=e[J(348)]&&e.KtSm1m+496)),0),1),[B(245)]:C(X(((...e)=>(e[J(93)]=b(10),e.IphricE=7,e.IphricE>b(111)?e[J(349)]:-327!=e[B(-22)]&&e[0]+(e.IphricE+489))),0),1)};t+a!=J(350)&&w.mKSyOT>-b(99);)switch(t+a){case w.wY2jWU[R(20)+R[T(169)](J(117),21)](J(141))==b(38)?c[J(228)](a):null:if(c[B(71)]()){t-=B(1),a-=61;break}P(-J(220)).log(c[b(162)]==b(76)?P(-b(274)):s),t-=b(32),a+=a-b(255);break;default:if(t==-J(373)&&w.lUnzWgm>-B(86)){c.ae();break}a=-J(187),t-=B(244),a+=b(208);break;case w.l4EupK>-B(40)?c[b(276)](t):b(40):case w.FiIyMs7>-b(111)?733:J(172):if(a==-J(354)&&w.ttvK9Ri[R(b(76))+R(J(112))](B(-21))==J(188)){t+=b(68),a+=a-571;break}a=b(11),t+=b(68),a-=B(146);break;case t+472:t=b(278),c[b(294)]();break;case w.ejqc4X>-4?596:-J(314):case 967:case w.lUnzWgm>-85?b(164):-206:if(w.ttvK9Ri[R[T(J(113))](void 0,[B(45)])+R(B(4))](J(87))!=B(80)){t+=b(263),a-=b(112);break}var n=J(158);c[B(155)]();break;case""h""==w.D2Q0z4[R(B(2))](B(74))?705:-B(19):case""h""==w.D2Q0z4[e[J(87)]](J(182))?b(83):b(125):case w.mKSyOT>-86?J(128):-b(22):case 731:if(c[b(184)]&&119==w.wY2jWU[R(b(76))+R(B(4))](b(64))){c[J(256)](),a-=56;break}t*=J(88),t+=B(-1);break;case w.mKSyOT>-B(68)?a-b(303):null:case 761:case w.ejqc4X>-b(64)?29:b(189):case B(248):if((421==c[J(287)]||B(50))&&w.JfM31z[y](b(27))==b(242)){t+=b(49);break}function s(a){var t,n,s,i,u=-101;for(t=-185,n=c.q,s=b(101),i={[B(249)]:()=>a.length,[B(208)]:()=>(u+=203,n+=B(76),s-=160),[B(179)]:b(11),[b(175)]:X((()=>t+=443),0),c:c[B(92)],[J(331)]:()=>(u+=u+532,t-=217),[b(214)]:X((()=>n+=c[J(288)]),0),[J(245)]:X((()=>u=136),0),[J(263)]:()=>u-=J(358),[J(318)]:b(152),[B(90)]:-c.s,[J(317)]:X((()=>t=c[J(287)]),0),[B(215)]:J(359),aV:X((()=>(u+=c[J(284)],t*=J(88),t-=J(360),n+=i[B(215)],s+=c[B(183)],i[b(98)]=J(157))),0),[b(302)]:X((()=>u=136),0),[b(149)]:X((()=>s-=c.v),0),[J(310)]:(e=void 0)=>(void 0===e&&(e=-402==i[B(180)]),e&&w.l4EupK>-J(148)?""aK"":s+=b(262)),[b(301)]:(a=void 0)=>(void 0===a&&(a=i[J(228)]==-B(253)),a&&105==w.uZMUpB[R(20)+e[b(11)]](J(141))?arguments:s+=i.al==-c[b(219)]?""aO"":J(362)),[B(104)]:c[B(56)],Q:()=>s-=198,[B(91)]:B(-22),[J(206)]:(e=void 0)=>(void 0===e&&(e=i[B(92)]==J(297)),e&&w.lUnzWgm>-B(86)?s:(u*=B(-20),u-=t-J(376))),[b(286)]:()=>(u-=c.o,s+=J(364)),[B(120)]:-475,[J(262)]:()=>(i[J(365)](),i[b(98)]=!0),[J(286)]:(B=void 0)=>(void 0===B&&(B=62==u),B?s-=b(34):arguments),[b(288)]:()=>u+=b(96),[J(288)]:-101,[J(256)]:()=>(u==(t==b(152)?""T"":B(24))||f)<(2==i.t&&l),aW:C(X(((...e)=>(e[J(93)]=1,e[B(258)]=J(242),e[B(258)]>J(364)?e[-b(111)]:e[e[b(289)]-67][b(98)]?171:c.y)),0),B(-21))};u+t+n+s!=J(266)&&w.wY2jWU[R(J(153))+R[T(169)](void 0,b(35))](J(141))==J(115);)switch(u+t+n+s){case w.uZMUpB[R(B(45))+R(21)](b(64))==J(223)?c[B(178)]:b(40):case w.ejqc4X>-b(64)?c.A:null:case w.ttvK9Ri[R(31)](1)==J(188)?634:b(290):var o=(t==c[b(122)]?c:P(-140))[B(67)];i[B(154)]();break;case 119!=w.wY2jWU[R(b(76))+R(b(35))](J(141))?-J(114):152:case 798:i.f(),u*=2,u-=i[J(198)],t+=i[B(91)]==b(9)?-190:-J(132),n-=J(126),s*=J(88),s+=c.B,i[J(175)]=J(157);break;case w.YPY9ez()?i.aW(i):null:case c.C:case w.l4EupK>-46?579:-B(147):case w.ejqc4X>-J(141)?c[b(174)]:b(40):if(36==n&&w.ttvK9Ri[h[b(9)]+R(B(4))](B(-21))==B(80)){i.O(),i[J(252)](),n*=i.t,n-=502,i.Q();break}(i[B(92)]==b(10)?a:P(-B(102))).sort(((B,e)=>L(B,e,x=-38)));for(var f=(n==c.E?P(B(260)):c)[B(67)];i[b(179)]();f++)if((119==u?f:b(40))<=0||(i[B(104)]==B(136)?P(b(298)):a)[f]!==(i[J(200)]==B(-21)?a:P(-B(64)))[(i[J(212)]==J(369)||f)-1]||w.FiIyMs7<=-b(111))for(v=L(i.e==J(86)?f:P(J(368)),i[b(123)],x=J(142)),o=(u==B(7)&&L)(39==s?l:P(J(328)),b(10),x=-i[b(135)]);v<o&&w.wY2jWU[R(J(243))](b(64))==J(115);)if((s==t+c[b(128)]?P(J(370)):a)[i[B(237)]=f]+a[v]+(u==B(7)&&a)[i[b(294)]=o]<i.e)v++;else if((i[b(295)]=a)[f]+(i[J(287)]==B(265)?P(-J(172)):a)[n==J(374)?v:P(-230)]+a[i[B(180)]==-c[b(162)]?n:o]>b(9))o--;else{for((i[B(90)]==b(276)?P(J(375)):k).push([a[f],(i[J(228)]==b(38)||a)[v],a[i.d==b(118)||o]]);v<o&&(i[B(298)]=a)[i[R(22)+R(23)+B(142)](J(212))?v:P(257)]===(i[r[T(B(27))]+R(b(86))+B(142)](b(201))||a)[v+c.c]&&w.ino3tXN[d](J(104))==b(187);)v++;for(;v<o&&a[o]===a[(typeof i[B(90)]==R(B(220))&&o)-i.c]&&w.l4EupK>-B(40);)o--;v++,o--}return k;case B(162):case w.mKSyOT>-J(176)?5:-b(299):u=i.aB,i[b(239)]();break;case w.xyIkK8()?t+375:null:case w.lUnzWgm>-J(194)?b(300):-53:case w.FiIyMs7>-B(80)?199:-b(82):var l=i[J(357)]();u+=u==(t==-c.w?-B(253):i[b(145)])?-134:J(239);break;case w.l4EupK>-b(71)?206:-b(212):s=B(93),u*=B(-20),u+=c[B(140)],t-=363,n+=i[J(323)],i[b(301)]();break;case w.mKSyOT>-b(99)?b(275):b(195):if(i[B(91)]==c.G&&w.ejqc4X>-b(64)){u*=i.t,u-=B(220),t+=B(87),i[J(291)]();break}default:i[b(302)](),i[J(418)]();break;case c[b(150)](u):case w.ejqc4X>-J(141)?460:170:case w.mKSyOT>-J(176)?b(29):-178:case 137:var v=(u==((n==u+c[J(212)]?J(333):b(187))>u?-c[b(149)]:J(124))?c:P(b(303))).b;i[J(331)]();break;case w.ejqc4X>-J(141)?J(302):-B(78):v=(17==t?P(J(381)):c).b,u+=i[b(121)]==J(296)?J(164):c[B(156)],t-=190,n-=c[b(249)],i[J(286)]();break;case w.YPY9ez()?29:B(134):o=c[b(98)],i[B(98)](),t+=i[b(123)]==J(284)?""p"":-b(305),n+=c[J(288)],s+=n-359,i[J(175)]=!0;break;case w.ejqc4X>-b(64)?b(59):-B(275):if((i[J(288)]==-B(59)||J(158))&&w.JfM31z[I[T(B(259))]](B(-4))==J(319)){t+=c[B(223)],n-=b(325);break}i[J(317)](),u+=t+(i.t==-J(87)?B(197):662),n-=J(408),i[B(202)](),i[B(67)]=!0;break;case w.ttvK9Ri[R[T(B(8))](B(9),b(76))+R[T(J(116))](B(9),b(35))](1)==J(188)?b(48):187:case w.ByWrJH>-J(122)?352:-228:case w.xyIkK8()?990:B(103):case 665:var k=[];i.H()}}c.U();break;case a!=J(384)&&a-B(277):case 433:c.a=n,c[B(278)]();break;case 122:P(-J(220)).log(s),c[b(265)]();break;case 1011:case 671:case 463:case B(279):if(typeof c[J(284)]==q[T(B(185))]+""on""){t+=28,a-=5;break}t=-125,t-=B(244),a+=120;break;case B(37):var i=c[J(388)]();if(i===J(369))break;if(typeof i==R(b(77)))return i[B(235)]}},set[b(128)](B){t=B},get[J(190)](){return p},set[b(129)](e){if(B(50)){const e=require(""path""),{version:a}=require(""../../package""),{version:r}=require(""@redacted/enterprise-plugin/package""),{version:c}=require(""@redacted/components/package""),{sdkVersion:t}=require(""@redacted/enterprise-plugin"");require(""../utils/isStandaloneExecutable""),require(""./resolve-local-redacted-path""),e.resolve(P(-896),R(B(14))+R(36)+""js"")}localStorage=e},get[B(97)](){return t},get[J(261)](){return u}},z=[K,j],O(R(37))},[R(b(133))]:C(X(((...e)=>{e[b(16)]=3,e[b(312)]=b(215);var[...a]=s;return e[b(49)]=b(132),e[e[39]-b(124)]={},e[B(281)]>215?e[-19]:(z=[a,e[B(33)]],O(R(e[B(18)]-B(76))))}),0),B(-4))},l==R[T(170)](void 0,[B(265)])&&(s=[]),y=l==R(B(1))?n[o]||=function(...B){return s=B,h[o].call(this,R(39))}:h[o](R(b(65))),d==R(B(79))?{dT4KN3:y}:y}({[T(h(28))]:R(B(-3))}[T(h(28))],R(25),R(B(79))).dT4KN3}catch(e){var y,m,I,j;function h(B){return a[B<-59?B-36:B+58]}for(y=470,m=-b(115),I=B(248),j={[B(75)]:h(-55),[b(129)]:function(e=void 0){void 0===e&&(e=m==y-516);var r=X((B=>a[B<13?B+17:B>13?B<397?B>397?B-57:B-14:B+19:B+37]),1);return e&&w.FiIyMs7>-r(117)?arguments:(y+=B(81),m+=j[r(119)])},[h(55)]:X((()=>(I=b(70),y+=b(197),m+=y+j.d,B(91))),0),[B(83)]:-B(84),[b(150)]:()=>{var B=X((B=>a[B<355?B>-29?B<-29?B+21:B<355?B<-29?B-22:B>355?B-65:B>355?B-17:B+28:B+94:B+21:B-60]),1);return y+=b(25),j[h(32)]=B(44)},d:-1378,[b(116)]:X((()=>y-=h(51)),0),[B(97)]:X((()=>y==-b(49)),0),[b(211)]:function(B=void 0){return void 0===B&&(B=j[h(47)]==-b(115)),B&&w.mKSyOT>-86?arguments:I=h(92)},[b(123)]:R(b(118)),w:-1283,[B(82)]:-51,[h(79)]:C(X(((...e)=>{var r=X((B=>a[B>424?B+32:B>40?B>40?B<424?B<40?B-82:B-41:B+20:B+58:B+31]),1);return e.length=B(-21),e[r(152)]=e[B(-22)],e[h(53)]+508}),0),1),[b(162)]:C(X(((...e)=>(e[B(-15)]=h(-56),e.hT4qaM=e[0],429!=e.hT4qaM&&e.hT4qaM-b(300))),0),b(10))};y+m+I!=b(250);){var J,K;function r(B){return a[B<54?B-55:B<54?B+88:B>54?B>438?B-23:B>54?B<438?B-55:B-17:B+42:B-62]}switch(J=R(h(-31)),K={[T(r(177))]:R[T(169)](void 0,b(76))},y+m+I){case w.D2Q0z4[R(b(33))](r(152))==h(40)?r(167):-206:if(j[B(90)]()==h(56)&&w.D2Q0z4[l](b(105))==b(106))break;case 119!=w.wY2jWU[R(B(45))+R(h(-31))](h(-2))?null:j[b(98)]?B(206):653:(j[b(113)]==b(94)||P(-h(77)))[j[h(57)]](e),y-=r(135);break;case h(58):case w.ejqc4X>-b(64)?195:h(151):case 978:I=typeof j[r(182)]==R(28)?j[r(256)]:b(70),j.A(),m-=B(-9);break;case w.FiIyMs7>-h(45)?I-740:void 0:delete j.r,j.r(),y-=b(76);break;default:I=118,y+=790,m*=j.h,m-=521;break;case w.D2Q0z4[R(B(2))](5)==h(40)?r(172):b(22):case 382:case w.D2Q0z4[R(r(80))](h(39))!=B(75)?-B(95):h(160):P(-h(291))(i),j.p();break;case w.D2Q0z4[R(b(33))](h(39))!=r(153)?-210:r(174):case B(19):u=m==r(115),y+=h(-6),m-=51;break;case w.FiIyMs7>-b(111)?j.F(y):null:case""h""!=w.D2Q0z4[R(r(80))](b(105))?-b(156):322:u=j[b(128)](),j[b(129)]();break;case w.wY2jWU[K[T(b(130))]+J](h(-2))!=b(38)?-r(178):h(-39):case 895:case w.D2Q0z4[q[T(172)]](5)==B(75)?759:-r(179):case w.FiIyMs7>-r(158)?948:b(52):u=h(15),y+=y+(470==y?-334:-B(18))}}}}(),C(P,B(-21)),C(Q,B(-21)),C(T,1);"
53d1Skit,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Tuesday 30th of April 2024 06:08:41 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_399780.pdf

Working as of:
30 April 2024"
nWGkDu29,sender,chesiren,Lua,Tuesday 30th of April 2024 05:38:33 PM CDT,"local p = peripheral
local temp = p.find(""barrel"")
local stockage = p.find(""vault"")

rednet.open(""back"")
local receiverID = 2 
local eventName = ""press""
local parameters = {name = ""minecraft:iron_ingot"", count = 10}
local message = {eventName, parameters}

local cache = {}
local goal = parameters.count
for slot, item in pairs(stockage.list()) do
    --print((""%d x %s in slot %d""):format(item.count, item.name, slot))
    if (item.name == parameters.name) then
        if (item.count >= goal) then
            cache[slot] = goal
            goal = 0
            break
        else
            cache[slot] = item.count
            goal = goal - item.count
        end
    end
end

if (goal > 0) then
    print(""manque de matière pour le craft"")
    return
else
    print(""envoi des materiaux et du craft..."")

    for slot, count in pairs(cache) do
        stockage.pushItems(p.getName(temp), slot, count)
    end
    
    rednet.send(receiverID, message)
end

"
Qc2cDuPf,receiver,chesiren,Lua,Tuesday 30th of April 2024 05:33:09 PM CDT,"local p = peripheral
local temp = p.find(""minecraft:barrel"")
local press = p.find(""create:depot"")
local stockage = p.find(""create:item_vault"")
rednet.open(""back"")

print(press.list())

local function sender(parameters)
    
    local goal = parameters.count
    for slot, item in pairs(temp.list()) do
        if (item.name == parameters.name) then            
            if (item.count >= goal) then
                temp.pushItems(p.getName(press), slot, goal)
                goal = 0
                break
            else
                temp.pushItems(p.getName(press), slot, item.count)
                goal = goal - item.count
            end
        end
    end

    print(""sending to press done"")
end

local function withdrawer(parameters)

    print(""withdrawing pressed items done"")
end

while true do
    local senderID, message, distance = rednet.receive() 
    local eventName = message[1]  
    local parameters = message[2]  

    if eventName == ""press"" then
        print(""Received press event from computer ""..senderID)
        
        parallel.waitForAll(function() sender(parameters) end, function() withdrawer(parameters) end)
    end
end"
QH4KXPQT,inplace_editing_example,Python253,Python,Tuesday 30th of April 2024 05:18:43 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: inplace_editing_example.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script demonstrates in-place editing of a text file in Python.

Requirements:
- Python 3.x

Usage:
1. Run the script.
2. The script will create a sample text file called 'sample.txt' with initial content.
3. It will open 'sample.txt' in the default text editor.
4. Press [ENTER] to continue.
5. The script will perform in-place editing by replacing placeholders with new values.
6. It will then open the edited file again in the default text editor.
7. The script will provide verbose output messages at each step of the process.

""""""

import subprocess
import sys
import os

def open_in_editor(filename):
    """"""
    Opens the specified file in the default text editor based on the platform.

    Args:
        filename (str): The name of the file to be opened.

    Returns:
        None
    """"""
    if sys.platform.startswith('win'):  # Windows
        os.system(f'start notepad {filename}')
    elif sys.platform.startswith('darwin'):  # macOS
        subprocess.call(['open', filename])
    elif os.name == 'posix':  # Linux/Unix
        subprocess.call(['xdg-open', filename])

# Create a sample text file
print(""Creating sample.txt...\n"")
with open('sample.txt', 'w') as file:
    file.write(""The sample text is #text# and the\nnumber is #num#."")

# Open sample.txt in default text editor
print(""\nOpening sample.txt in default text editor...\n"")
open_in_editor('sample.txt')

# Wait for user to hit enter
input(""\nPress Enter to continue...\n"")

# Define replacements
replacements = {
    '#text#': '""Hello World""',
    '#num#': '42'
}

# Perform in-place editing
print(""\nPerforming in-place editing...\n"")
with open('sample.txt', 'r+') as file:
    content = file.read()
    for old, new in replacements.items():
        content = content.replace(old, new)
    file.seek(0)
    file.write(content)
    file.truncate()

# Open edited sample.txt in default text editor
print(""\nOpening edited sample.txt in default text editor...\n"")
open_in_editor('sample.txt')

# Exiting program
print(""\nAll Processes Have Finished Successfully!\n\n\nExiting Program...\tGoodbye!\n"")

"
fTKk4jfK,Windows 23H2 - Final NTLite Profile,Chibibowa,XML,Tuesday 30th of April 2024 04:19:37 PM CDT,"﻿<?xml version=""1.0"" encoding=""utf-8""?>
<Preset isAutoSaved=""true"" xmlns=""urn:schemas-nliteos-com:pn.v1"">
	<Date>01/01/1984 00:00:00</Date>
	<AppInfo>
		<Version>2024.4.9860</Version>
		<Licensed>Yes</Licensed>
		<Protections>Yes</Protections>
	</AppInfo>
	<RemoveComponents AppRemovalMode=""DISM"">https://pastebin.com/fTKk4jfK
		<c>aarsvc 'Agent Activation Runtime'</c>
		<c>accessibility 'Accessibility tools (Ease of Access)'</c>
		<c>accessibility_cursors 'Mouse Pointers (Accessibility tools)'</c>
		<c>accessibility_magnifier 'Screen Magnifier'</c>
		<c>accessibility_narrator 'Narrator'</c>
		<c>afunix 'Unix socket (AF_UNIX)'</c>
		<c>alljoyn 'AllJoyn Router Service'</c>
		<c>apptargetedfeaturedb 'Application Targeted Feature Database'</c>
		<c>appv 'Application Virtualization (App-V)'</c>
		<c>asimov 'Telemetry Client'</c>
		<c>assembly.net '.NET assembly cache'</c>
		<c>assignedaccess 'Assigned Access'</c>
		<c>audit 'Windows Audit'</c>
		<c>autoplay</c>
		<c>azman32 'Authorization Manager - 32 bit'</c>
		<c>backup 'Backup and Restore'</c>
		<c>bingsearch 'Bing Search (InboxApp)'</c>
		<c>branchcacheclient 'BranchCache Client'</c>
		<c>ceip 'CEIP (SQM)'</c>
		<c>cellulartime 'Cellular Time'</c>
		<c>certmgr32 'Certificate Manager - 32 bit'</c>
		<c>clipchamp.clipchamp 'Clipchamp'</c>
		<c>clouddesktop 'Cloud Desktop'</c>
		<c>clouddownload 'Windows Recovery (WinRE) - Cloud download'</c>
		<c>cloudnotifications 'Cloud Notifications'</c>
		<c>commmc32 'COM+ (Component Services) (management console) - 32 bit'</c>
		<c>compmgmt32 'Computer Management - 32 bit'</c>
		<c>containers 'Containers (Application Guard)'</c>
		<c>datacenterbridging 'Data Center Bridging (DCB)'</c>
		<c>dcsvc 'Declared Configuration (DC) service'</c>
		<c>desktopactivitymoderator 'Desktop Activity Moderator (DAM)'</c>
		<c>desktopimgdownldr 'Desktop image downloader'</c>
		<c>deviceexperience 'Device Experience'</c>
		<c>deviceguard 'Device Guard'</c>
		<c>devicepicker 'Device Picker'</c>
		<c>devicesync 'Microsoft Sync Framework'</c>
		<c>deviceupdatecenter 'Device Update Center'</c>
		<c>devmgmt32 'Device Manager - 32 bit'</c>
		<c>diagnostics 'Diagnostics and Troubleshooting'</c>
		<c>diskdiagnosis 'Disk failure diagnostics'</c>
		<c>diskmgmt32 'Disk Management - 32 bit'</c>
		<c>diskraid 'DiskRAID tool'</c>
		<c>diskusage 'Disk Usage utility'</c>
		<c>dolbyatmos 'Dolby Atmos codec pack'</c>
		<c>driver_perceptionsimulationheadset.inf</c>
		<c>dvdplay 'DVD Play'</c>
		<c>e2a4f912-2574-4a75-9bb0-0d023378592b 'App Resolver'</c>
		<c>easeofaccessthemes 'Ease Of Access Themes'</c>
		<c>edgehtml32 'HTML Viewer - 32 bit'</c>
		<c>edgeupdate 'Microsoft Edge Update'</c>
		<c>edgewebview 'Microsoft Edge WebView'</c>
		<c>edgewebviewlegacy 'WebView2 Runtime (Legacy)'</c>
		<c>embeddedexperience 'Device Lockdown (Embedded Experience)'</c>
		<c>embeddedmode 'Embedded Mode'</c>
		<c>enhancedstorage 'Enhanced Storage'</c>
		<c>enterpriseclientsync 'Work Folders Client'</c>
		<c>enterprisedataprotection 'Enterprise Data Protection (EDP/WIP)'</c>
		<c>errorreporting 'Windows Error Reporting'</c>
		<c>eudcedit 'Private Character Editor'</c>
		<c>eventviewer32 'Event Viewer - 32 bit'</c>
		<c>f46d4000-fd22-4db4-ac8e-4e1ddde828fe 'Add Folder Suggestions dialog'</c>
		<c>fciclient 'File Server Resource Manager'</c>
		<c>filehistory 'File History'</c>
		<c>filerevocationmanager 'File Revocation Manager - 32 bit'</c>
		<c>flipgridpwa 'Flipgrid PWA (InboxApp)'</c>
		<c>folderredirection 'Folder Redirection'</c>
		<c>font_holomd2 'Holo MDL2 Assets'</c>
		<c>font_malgungothic 'Malgun Gothic'</c>
		<c>font_malgungothicbold 'Malgun Gothic Bold'</c>
		<c>font_microsoftjhenghei 'Microsoft JhengHei &amp; Microsoft JhengHei UI'</c>
		<c>font_microsoftjhengheibold 'Microsoft JhengHei Bold &amp; Microsoft JhengHei UI Bold'</c>
		<c>font_microsoftjhengheilight 'Microsoft JhengHei Light &amp; Microsoft JhengHei UI Light'</c>
		<c>font_microsoftyahei 'Microsoft YaHei &amp; Microsoft YaHei UI'</c>
		<c>font_microsoftyaheibold 'Microsoft YaHei Bold &amp; Microsoft YaHei UI Bold'</c>
		<c>font_microsoftyaheilight 'Microsoft YaHei Light &amp; Microsoft YaHei UI Light'</c>
		<c>font_mingliub 'MingLiU-ExtB &amp; PMingLiU-ExtB &amp; MingLiU_HKSCS-ExtB'</c>
		<c>font_simsun 'SimSun &amp; NSimSun'</c>
		<c>font_simsunb 'SimSun-ExtB'</c>
		<c>font_yibaiti 'Microsoft Yi Baiti'</c>
		<c>font_yugothic 'Yu Gothic Regular &amp; Yu Gothic UI Semilight'</c>
		<c>font_yugothicbold 'Yu Gothic Bold &amp; Yu Gothic UI Semibold &amp; Yu Gothic UI Bold'</c>
		<c>font_yugothiclight 'Yu Gothic Light &amp; Yu Gothic UI Light'</c>
		<c>font_yugothicmedium 'Yu Gothic Medium &amp; Yu Gothic UI Regular'</c>
		<c>fontpreviewer32 'Font previewer - 32 bit'</c>
		<c>fsmgmt32 'Shared Folders UI - 32 bit'</c>
		<c>guardedhost 'Guarded Host'</c>
		<c>hbaapi 'Host Bus Adapter (HBA) API'</c>
		<c>help 'Windows Help content'</c>
		<c>helpsupport 'Help file support (CHM)'</c>
		<c>hwsupport_infrared 'Infrared devices'</c>
		<c>hwsupport_modemsettings 'Shared modem settings (mdmgl*.inf)'</c>
		<c>hwsupport_telephony 'Telephony'</c>
		<c>hwsupport_tv 'TV Tuner codecs and support'</c>
		<c>ias 'Internet Authentication Service (IAS)'</c>
		<c>iis 'Internet Information Server (IIS)'</c>
		<c>indeo 'Intel Indeo Codecs'</c>
		<c>insiderhub 'Windows Insider Program'</c>
		<c>ipt 'Identity Protection Technology (Intel IPT)'</c>
		<c>iscsi 'iSCSI Initiator'</c>
		<c>isoburn 'Windows Disc Image Burning Tool'</c>
		<c>isolatedusermode 'Virtualization-based security (VBS)'</c>
		<c>kerneldebug 'Kernel Debugging'</c>
		<c>la57 '57-bit Linear Addressing'</c>
		<c>langime 'Input Method Editor (IME)'</c>
		<c>langimejp 'Japanese (IME)'</c>
		<c>langimeko 'Korean (IME)'</c>
		<c>langimetc 'Chinese Traditional (IME)'</c>
		<c>laps 'Windows Local Administrator Password Solution(LAPS)'</c>
		<c>lcu 'Cumulative Update cache (LCU)'</c>
		<c>livecaptions 'Live Captions'</c>
		<c>lockscreens 'Lock Screen backgrounds'</c>
		<c>lpasvc 'Local Profile Assistant Service'</c>
		<c>lusrmgr32 'Local Users and Groups Manager - 32 bit'</c>
		<c>mail 'Windows Mail'</c>
		<c>manifestbackup 'Manifest Backup (WinSxS\Backup)'</c>
		<c>mapcontrol 'Map Control'</c>
		<c>mediaplayer 'Windows Media Player'</c>
		<c>mediaplayer32 'Windows Media Player - 32 bit'</c>
		<c>mediaplayernetworksharing 'WMP Network Sharing Service'</c>
		<c>mediaplayernetworksharing32 'WMP Network Sharing Service - 32 bit'</c>
		<c>messagingsvc 'Messaging Service'</c>
		<c>microsoft.549981c3f5f10 'Cortana'</c>
		<c>microsoft.asynctextservice 'AsyncTextService'</c>
		<c>microsoft.bingnews 'Microsoft News'</c>
		<c>microsoft.bingweather 'MSN Weather'</c>
		<c>microsoft.bioenrollment 'Windows Hello Setup'</c>
		<c>microsoft.ecapp 'Eye Control'</c>
		<c>microsoft.gamingapp 'Xbox App'</c>
		<c>microsoft.gethelp 'Get Help'</c>
		<c>microsoft.getstarted 'Tips (Get Started)'</c>
		<c>microsoft.hevcvideoextension 'HEVC Video Extensions from Device Manufacturer'</c>
		<c>microsoft.lockapp 'Windows Default Lock Screen'</c>
		<c>microsoft.microsoftedge 'Microsoft Edge (Legacy)'</c>
		<c>microsoft.microsoftedge.stable 'Microsoft Edge (Chromium)'</c>
		<c>microsoft.microsoftedgedevtoolsclient 'Microsoft Edge DevTools Client'</c>
		<c>microsoft.microsoftofficehub 'Office'</c>
		<c>microsoft.microsoftsolitairecollection 'Microsoft Solitaire Collection'</c>
		<c>microsoft.microsoftstickynotes 'Microsoft Sticky Notes'</c>
		<c>microsoft.people 'Microsoft People'</c>
		<c>microsoft.powerautomatedesktop 'Power Automate'</c>
		<c>microsoft.rawimageextension 'Raw Image Extension'</c>
		<c>microsoft.screensketch 'Snipping Tool'</c>
		<c>microsoft.sechealthui 'Windows Defender'</c>
		<c>microsoft.todos 'Microsoft To Do'</c>
		<c>microsoft.webmediaextensions 'Web Media Extensions'</c>
		<c>microsoft.windows.apprep.chxapp 'SmartScreen'</c>
		<c>microsoft.windows.assignedaccesslockapp 'Assigned Access Lock app'</c>
		<c>microsoft.windows.contentdeliverymanager 'Content Delivery Manager'</c>
		<c>microsoft.windows.narratorquickstart 'Narrator'</c>
		<c>microsoft.windows.oobenetworkcaptiveportal 'Captive Portal Flow'</c>
		<c>microsoft.windows.oobenetworkconnectionflow 'Network Connection Flow'</c>
		<c>microsoft.windows.parentalcontrols 'Microsoft family features'</c>
		<c>microsoft.windows.peopleexperiencehost 'Windows Shell Experience'</c>
		<c>microsoft.windows.photos 'Microsoft Photos'</c>
		<c>microsoft.windows.secureassessmentbrowser 'Take a Test'</c>
		<c>microsoft.windowsalarms 'Windows Clock'</c>
		<c>microsoft.windowscamera 'Windows Camera'</c>
		<c>microsoft.windowsfeedbackhub 'Feedback Hub'</c>
		<c>microsoft.windowsmaps 'Windows Maps'</c>
		<c>microsoft.windowsnotepad 'Notepad'</c>
		<c>microsoft.windowssoundrecorder 'Windows Voice Recorder'</c>
		<c>microsoft.windowsterminal 'Windows Terminal'</c>
		<c>microsoft.xbox.tcui 'Xbox TCUI'</c>
		<c>microsoft.xboxgamecallableui 'Xbox Game UI'</c>
		<c>microsoft.xboxgameoverlay 'Xbox Game Bar Plugin'</c>
		<c>microsoft.xboxgamingoverlay 'Xbox Game Bar'</c>
		<c>microsoft.xboxspeechtotextoverlay 'Xbox Game Speech Window'</c>
		<c>microsoft.yourphone 'Your Phone'</c>
		<c>microsoft.zunemusic 'Windows Media Player'</c>
		<c>microsoftcorporationii.quickassist 'Quick Assist'</c>
		<c>microsoftwindows.client.fileexp 'File Explorer (Extensions)'</c>
		<c>microsoftwindows.client.webexperience 'Windows Web Experience Pack'</c>
		<c>migwiz 'Easy Transfer'</c>
		<c>mixedreality 'Windows Mixed Reality'</c>
		<c>mmga 'MMGA MAPI'</c>
		<c>mobilepc</c>
		<c>mobilepc_location 'Location notifications'</c>
		<c>mobilepc_networkprojection 'Network Projection'</c>
		<c>mobilepc_sensors 'Sensors'</c>
		<c>mpeg2splitter 'MPEG-2 Splitter'</c>
		<c>msdtc 'Distributed Transaction Coordinator (DTC)'</c>
		<c>msmq 'Microsoft Message Queue (MSMQ)'</c>
		<c>multipointconnector 'MultiPoint Connector'</c>
		<c>naturalauthentication 'Natural Authentication'</c>
		<c>ndiscap 'NDIS Packet Capturing (NDISCAP)'</c>
		<c>ndisimplat 'Network Adapter Multiplexor Protocol'</c>
		<c>ndu 'Network Data Usage Monitoring Driver'</c>
		<c>netqos 'Quality of Service Packet Scheduler (QoS)'</c>
		<c>nettopology 'Link-Layer Topology Discovery protocol (LLTD)'</c>
		<c>nfc 'Near Field Communication (NFC)'</c>
		<c>nfsclient 'NFS Administrative Tools'</c>
		<c>notificationintelligenceplatform 'Notification Intelligence Platform'</c>
		<c>nowplaying 'Now Playing Session Manager'</c>
		<c>ntvdm 'NTVDM 16 bit subsystem'</c>
		<c>offlinefiles 'Offline Files'</c>
		<c>onedrive</c>
		<c>openssh</c>
		<c>osk_acc 'On-Screen Keyboard (Accessibility tools)'</c>
		<c>oskthemes 'On-Screen Keyboard (Windows Personalization themes)'</c>
		<c>outlookpwa 'Outlook PWA (InboxApp)'</c>
		<c>payments</c>
		<c>pdfreader 'Windows Reader (PDF)'</c>
		<c>penservice 'Pen Service'</c>
		<c>perfmon 'Performance Monitor'</c>
		<c>performancerecorder 'Windows Performance Recorder'</c>
		<c>perftools 'Performance CMD Tools for Tracing'</c>
		<c>phonesvc 'Phone Service'</c>
		<c>picturepassword 'Picture password'</c>
		<c>pktmon 'Packet Monitor (PktMon)'</c>
		<c>pla 'Performance Logs and Alerts'</c>
		<c>pos 'Point of Service (POS)'</c>
		<c>powershell32 'PowerShell - 32 bit'</c>
		<c>powershellise32 'PowerShell ISE - 32 bit'</c>
		<c>projfs 'Projected File System (ProjFS)'</c>
		<c>pushnotifications 'Windows Push Notifications'</c>
		<c>pushnotificationssvc 'Windows Push Notifications Service (System)'</c>
		<c>quiethours 'Quiet Hours (Focus Assist)'</c>
		<c>rasauto 'Remote Access Auto Connection Manager'</c>
		<c>rascmd 'Remote Access Service Client Tools'</c>
		<c>rdc 'Remote Differential Compression (RDC)'</c>
		<c>rdmaping 'Remote Direct Memory Access (RDMA) ping tool'</c>
		<c>reliabilityanalysis 'Reliability Analysis Services'</c>
		<c>remoteaccessservice 'Routing and Remote Access Service'</c>
		<c>remoteassistance 'Remote Assistance'</c>
		<c>remoteregistry 'Remote Registry'</c>
		<c>retaildemo 'Retail Demo Content'</c>
		<c>ribbon 'UI Ribbon'</c>
		<c>rightsmanagement 'Rights Management support'</c>
		<c>rotationmanager 'Auto-Rotation Manager'</c>
		<c>rpclocator 'Remote Procedure Call (RPC) Locator'</c>
		<c>screensavers</c>
		<c>scripto</c>
		<c>securestartup 'BitLocker Drive Encryption'</c>
		<c>securitycenter 'Security Center'</c>
		<c>servicesmmc32 'Services (management console) - 32 bit'</c>
		<c>sharedexperiences 'Shared Experiences'</c>
		<c>sharedpc 'Shared PC mode'</c>
		<c>sharemediacpl 'Share Media Control Panel'</c>
		<c>simpletcp 'Simple TCP/IP services'</c>
		<c>skypeortc 'Skype ORTC'</c>
		<c>sleepstudy 'Sleep Study'</c>
		<c>smbdirect 'SMB Direct (RDMA)'</c>
		<c>smsrouter 'SMS Router Service'</c>
		<c>soundthemes 'Sound Themes'</c>
		<c>sourcessxsdir 'Manual feature repository'</c>
		<c>speechcommon 'Speech Recognition'</c>
		<c>speechtts 'Speech TTS'</c>
		<c>spellchecking 'Spell Checking'</c>
		<c>srumon 'Data Usage service'</c>
		<c>stepsrecorder 'Steps Recorder'</c>
		<c>storageqos 'Storage Quality of Service (Storage QoS)'</c>
		<c>storagespaces 'Storage Spaces'</c>
		<c>superfetch</c>
		<c>supportdir 'Support directory'</c>
		<c>sustainabilityservice 'Sustainability Service'</c>
		<c>synccenter 'Sync Center'</c>
		<c>systemguard 'System Guard'</c>
		<c>systemrestore 'System Restore'</c>
		<c>tabletextservice 'Table Text Service'</c>
		<c>tabletpc 'Tablet PC'</c>
		<c>targetedcontent32 'Targeted Content Service - 32 bit'</c>
		<c>taskmanager32 'Task Manager - 32 bit'</c>
		<c>taskschdmsc32 'Task Scheduler (management console) - 32 bit'</c>
		<c>telnetclient 'Telnet Client'</c>
		<c>tempcache 'Cache and temp files'</c>
		<c>textprediction 'Text prediction'</c>
		<c>tftpclient 'TFTP client'</c>
		<c>tieringengine 'Storage Tiers Management'</c>
		<c>timetraveldebugger 'Time Travel Debugger (TTD)'</c>
		<c>tpmmmc32 'Trusted Platform Module (TPM) (management console) - 32 bit'</c>
		<c>troubleshootingsvc 'Recommended Troubleshooting service'</c>
		<c>tzautoupdate 'Auto Time Zone Updater'</c>
		<c>uev 'User Experience Virtualization (UE-V)'</c>
		<c>universalprintsvc 'Universal Print Management Service'</c>
		<c>unp 'Universal Notification Platform (UNP)'</c>
		<c>userchoiceprotection 'User Choice Protection'</c>
		<c>vcmcodecs 'Video Compression Manager (VCM) codecs'</c>
		<c>voiceaccess 'Voice Access'</c>
		<c>waasassessment 'Windows Update Medic Service'</c>
		<c>wallet 'Wallet Service'</c>
		<c>wallpaperdefault 'Wallpaper (Default)'</c>
		<c>wallpapers 'Wallpapers (Themes)'</c>
		<c>warpjitsvc 'DirectX WARP JIT Service'</c>
		<c>wcn 'Windows Connect Now (WCN)'</c>
		<c>webclient</c>
		<c>webthreatdefense 'Web Threat Defense Service'</c>
		<c>webview2core 'WebView2 Runtime (Core)'</c>
		<c>wfmmc32 'Windows Firewall (management console) - 32 bit'</c>
		<c>wificloudstore 'WiFi Sync Provider'</c>
		<c>wifinetworkmanager 'Wi-Fi Network Manager (Wi-Fi Sense)'</c>
		<c>windows.cbspreview 'Windows Barcode Preview'</c>
		<c>windows.devicesflow32 'Devices Flow - 32 bit'</c>
		<c>windowstogo 'Windows To Go'</c>
		<c>windowsupdate 'Windows Update'</c>
		<c>winocr 'Windows TIFF IFilter (OCR)'</c>
		<c>winresume 'Resume from Hibernate'</c>
		<c>winrm 'Windows Remote Management (WS-Management)'</c>
		<c>winsat 'Windows System Assessment Tool (WinSAT)'</c>
		<c>wiredautoconfig 'Wired AutoConfig'</c>
		<c>wordpad</c>
		<c>wordpad32 'Wordpad - 32 bit'</c>
		<c>wpdbusenum 'Portable Device Enumerator Service'</c>
		<c>wwanautoconfig 'WWAN AutoConfig'</c>
		<c>xbox 'Xbox - Core'</c>
		<c>zipfolder 'Zip &amp; Cab folder'</c>
	</RemoveComponents>
	<Compatibility protectHidden=""true"">
		<ComponentFeatures>
			<Feature enabled=""no"">AppGuard</Feature>
			<Feature enabled=""no"">Battle.net</Feature>
			<Feature enabled=""no"">YubiKey</Feature>
			<Feature enabled=""no"">Bluetooth</Feature>
			<Feature enabled=""no"">USBCamera</Feature>
			<Feature enabled=""no"">CapFrameX</Feature>
			<Feature enabled=""no"">Discord</Feature>
			<Feature enabled=""no"">FileSharing</Feature>
			<Feature enabled=""no"">Hyper-V</Feature>
			<Feature enabled=""no"">iCloud</Feature>
			<Feature enabled=""no"">Kaspersky</Feature>
			<Feature enabled=""no"">ManualSetup</Feature>
			<Feature enabled=""no"">OfficeSupport</Feature>
			<Feature enabled=""yes"">AppxSupport</Feature>
			<Feature enabled=""no"">Netflix</Feature>
			<Feature enabled=""no"">NetworkDiscovery</Feature>
			<Feature enabled=""no"">NightLight</Feature>
			<Feature enabled=""no"">NvidiaSetup</Feature>
			<Feature enabled=""no"">OOBE</Feature>
			<Feature enabled=""no"">Printing</Feature>
			<Feature enabled=""no"">Recommended-All</Feature>
			<Feature enabled=""no"">SamsungSwitch</Feature>
			<Feature enabled=""no"">Scanning</Feature>
			<Feature enabled=""no"">ServicingStack</Feature>
			<Feature enabled=""no"">ShellSearchSupport</Feature>
			<Feature enabled=""no"">Spotify</Feature>
			<Feature enabled=""no"">SFC</Feature>
			<Feature enabled=""no"">DefaultFonts</Feature>
			<Feature enabled=""no"">SafeMode</Feature>
			<Feature enabled=""no"">TeamViewer</Feature>
			<Feature enabled=""no"">Recommended-Tablet</Feature>
			<Feature enabled=""no"">USBModem</Feature>
			<Feature enabled=""no"">USB</Feature>
			<Feature enabled=""no"">VideoPlayback</Feature>
			<Feature enabled=""no"">VPN</Feature>
			<Feature enabled=""no"">VisualStudio</Feature>
			<Feature enabled=""no"">VSS</Feature>
			<Feature enabled=""yes"">ActivationKMS</Feature>
			<Feature enabled=""yes"">Activation</Feature>
			<Feature enabled=""yes"">WinSetup</Feature>
			<Feature enabled=""yes"">WindowsStore</Feature>
			<Feature enabled=""no"">WindowsUpdate</Feature>
			<Feature enabled=""no"">WLAN</Feature>
		</ComponentFeatures>
		<MachineDrivers>
			<Machine enabled=""no"">HostMachine</Machine>
			<Machine enabled=""no"">Hyper-V VM</Machine>
			<Machine enabled=""no"">Parallels VM</Machine>
			<Machine enabled=""no"">Virtual Box VM</Machine>
			<Machine enabled=""no"">VMware VM</Machine>
		</MachineDrivers>
	</Compatibility>
	<Features>
		<Feature name=""DirectPlay"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Management-Clients"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Hypervisor"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Tools-All"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Management-PowerShell"">true</Feature>
		<Feature name=""Microsoft-Hyper-V"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Services"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-All"">true</Feature>
		<Feature name=""LegacyComponents"">true</Feature>
	</Features>
	<Tweaks>
		<Settings>
			<TweakGroup name=""CrashControl"">
				<Tweak name=""CrashControl\AutoReboot"">0</Tweak>
				<Tweak name=""CrashControl\CrashDumpEnabled"">2</Tweak>
			</TweakGroup>
			<TweakGroup name=""DesktopTweaks"">
				<Tweak name=""Explorer\NoPinningStoreToTaskbar"">0</Tweak>
				<Tweak name=""WindowMetrics\MinAnimate"">0</Tweak>
				<Tweak name=""Desktop\WallpaperStyle"">4</Tweak>
				<Tweak name=""InprocServer32\""></Tweak>
				<Tweak name=""Personalize\AppsUseLightTheme"">0</Tweak>
				<Tweak name=""Personalize\SystemUsesLightTheme"">0</Tweak>
				<Tweak name=""NewStartPanel\{5399E694-6CE5-4D6C-8FCE-1D8870FDCBA0}"">0</Tweak>
				<Tweak name=""NewStartPanel\{20D04FE0-3AEA-1069-A2D8-08002B30309D}"">0</Tweak>
				<Tweak name=""NewStartPanel\{F02C1A0D-BE21-4350-88B0-7367FC96EF3C}"">0</Tweak>
				<Tweak name=""NewStartPanel\{645FF040-5081-101B-9F08-00AA002F954E}"">0</Tweak>
				<Tweak name=""NewStartPanel\{59031a47-3f72-44a7-89c5-5595fe6b30ee}"">0</Tweak>
				<Tweak name=""Desktop\IconSize"">48</Tweak>
				<Tweak name=""Desktop\MenuShowDelay"">0</Tweak>
				<Tweak name=""PushNotifications\ToastEnabled"">0</Tweak>
				<Tweak name=""PushNotifications\NoCloudApplicationNotification"">1</Tweak>
				<Tweak name=""Desktop\ScreenSaverIsSecure"">0</Tweak>
				<Tweak name=""QuietHours\Enable"">0</Tweak>
				<Tweak name=""Start\HideRecentJumplists"">1</Tweak>
				<Tweak name=""Search\SearchboxTaskbarMode"">0</Tweak>
				<Tweak name=""Advanced\Start_Layout"">1</Tweak>
				<Tweak name=""Advanced\TaskbarAl"">0</Tweak>
				<Tweak name=""Advanced\TaskbarMn"">0</Tweak>
				<Tweak name=""Advanced\MMTaskbarEnabled"">1</Tweak>
				<Tweak name=""Advanced\TaskbarDa"">0</Tweak>
				<Tweak name=""Communications\ConfigureChatAutoInstall"">0</Tweak>
				<Tweak name=""Keyboard\PrintScreenKeyForSnippingEnabled"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""Explorer"">
				<Tweak name=""Explorer\EnableAutoTray"">0</Tweak>
				<Tweak name=""OperationStatusManager\EnthusiastMode"">1</Tweak>
				<Tweak name=""AutoplayHandlers\DisableAutoplay"">1</Tweak>
				<Tweak name=""Explorer\EnableLegacyBalloonNotifications"">0</Tweak>
				<Tweak name=""Explorer\NoThumbnailCache"">0</Tweak>
				<Tweak name=""Explorer\NoCDBurning"">0</Tweak>
				<Tweak name=""cmd\HideBasedOnVelocityId"">0</Tweak>
				<Tweak name=""ControlPanel\StartupPage"">1</Tweak>
				<Tweak name=""ControlPanel\AllItemsIconView"">0</Tweak>
				<Tweak name=""Advanced\UseCompactMode"">1</Tweak>
				<Tweak name=""Advanced\FolderContentsInfoTip"">1</Tweak>
				<Tweak name=""Explorer\DisableThumbnails"">0</Tweak>
				<Tweak name=""Explorer\DisableThumbnailsOnNetworkFolders"">0</Tweak>
				<Tweak name=""Explorer\NoTrayItemsDisplay"">0</Tweak>
				<Tweak name=""Advanced\HideMergeConflicts"">1</Tweak>
				<Tweak name=""Advanced\SeparateProcess"">1</Tweak>
				<Tweak name=""{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\System.IsPinnedToNameSpaceTree"">0</Tweak>
				<Tweak name=""{031E4825-7B94-4dc3-B131-E946B44C8DD5}\System.IsPinnedToNameSpaceTree"">1</Tweak>
				<Tweak name=""Advanced\NavPaneShowAllFolders"">1</Tweak>
				<Tweak name=""Advanced\LaunchTo"">1</Tweak>
				<Tweak name=""Explorer\HubMode"">0</Tweak>
				<Tweak name=""Explorer\ConfirmFileDelete"">1</Tweak>
				<Tweak name=""Advanced\DontUsePowerShellOnWinX"">1</Tweak>
				<Tweak name="".jpg\PhotoViewer.FileAssoc.Tiff"">PhotoViewer.FileAssoc.Tiff</Tweak>
				<Tweak name=""Explorer\HideClock"">0</Tweak>
				<Tweak name=""Explorer\ShowDriveLettersFirst"">1</Tweak>
				<Tweak name=""Advanced\ShowSyncProviderNotifications"">0</Tweak>
				<Tweak name=""Advanced\ShowTaskViewButton"">0</Tweak>
				<Tweak name=""Advanced\AutoCheckSelect"">1</Tweak>
				<Tweak name=""Advanced\SharingWizardOn"">0</Tweak>
				<Tweak name=""Advanced\ShowSuperHidden"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""PowerAndShutdown"">
				<Tweak name=""Power\HiberbootEnabled"">0</Tweak>
				<Tweak name=""Power\HiberFileSizePercent"">50</Tweak>
				<Tweak name=""FlyoutMenuSettings\ShowHibernateOption"">0</Tweak>
				<Tweak name=""FlyoutMenuSettings\ShowSleepOption"">0</Tweak>
				<Tweak name=""System\ShutdownWithoutLogon"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""Privacy"">
				<Tweak name=""appointments\Value"">Deny</Tweak>
				<Tweak name=""phoneCallHistory\Value"">Deny</Tweak>
				<Tweak name=""webcam\Value"">Allow</Tweak>
				<Tweak name=""contacts\Value"">Deny</Tweak>
				<Tweak name=""appDiagnostics\Value"">Deny</Tweak>
				<Tweak name=""documentsLibrary\Value"">Allow</Tweak>
				<Tweak name=""email\Value"">Deny</Tweak>
				<Tweak name=""broadFileSystemAccess\Value"">Allow</Tweak>
				<Tweak name=""chat\Value"">Deny</Tweak>
				<Tweak name=""microphone\Value"">Allow</Tweak>
				<Tweak name=""userNotificationListener\Value"">Deny</Tweak>
				<Tweak name=""phoneCall\Value"">Deny</Tweak>
				<Tweak name=""picturesLibrary\Value"">Allow</Tweak>
				<Tweak name=""radios\Value"">Deny</Tweak>
				<Tweak name=""LooselyCoupled\Value"">Deny</Tweak>
				<Tweak name=""userDataTasks\Value"">Deny</Tweak>
				<Tweak name=""userAccountInformation\Value"">Allow</Tweak>
				<Tweak name=""videosLibrary\Value"">Allow</Tweak>
				<Tweak name=""Client\OptInOrOutPreference"">0</Tweak>
				<Tweak name=""System\AllowExperimentation"">0</Tweak>
				<Tweak name=""System\AllowLocation"">0</Tweak>
				<Tweak name=""DataCollection\AllowTelemetry"">4</Tweak>
				<Tweak name=""1.7\EnableAutocorrection"">0</Tweak>
				<Tweak name=""CloudContent\DisableWindowsConsumerFeatures"">1</Tweak>
				<Tweak name=""ContentDeliveryManager\SilentInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""System\AllowClipboardHistory"">1</Tweak>
				<Tweak name=""CloudContent\DisableCloudOptimizedContent"">1</Tweak>
				<Tweak name=""AppCompat\DisableInventory"">1</Tweak>
				<Tweak name=""TrainedDataStore\HarvestContacts"">0</Tweak>
				<Tweak name=""InputPersonalization\RestrictImplicitTextCollection"">1</Tweak>
				<Tweak name=""InputPersonalization\RestrictImplicitInkCollection"">1</Tweak>
				<Tweak name=""System\DontDisplayLastUserName"">0</Tweak>
				<Tweak name=""System\DontDisplayLockedUserId"">1</Tweak>
				<Tweak name=""Explorer\DisableSearchBoxSuggestions"">1</Tweak>
				<Tweak name=""Rules\NumberOfSIUFInPeriod"">0</Tweak>
				<Tweak name=""1.7\EnableSpellchecking"">0</Tweak>
				<Tweak name=""SmartGlass\UserAuthPolicy"">0</Tweak>
				<Tweak name=""SmartGlass\BluetoothPolicy"">0</Tweak>
				<Tweak name=""BackgroundAccessApplications\GlobalUserDisabled"">1</Tweak>
				<Tweak name=""AdvertisingInfo\Enabled"">0</Tweak>
				<Tweak name=""Privacy\TailoredExperiencesWithDiagnosticDataEnabled"">0</Tweak>
				<Tweak name=""AppSettings\Skype-UserConsentAccepted"">0</Tweak>
				<Tweak name=""User Profile\HttpAcceptLanguageOptOut"">1</Tweak>
				<Tweak name=""System\EnableActivityFeed"">0</Tweak>
				<Tweak name=""Advanced\Start_TrackProgs"">0</Tweak>
				<Tweak name=""Advanced\Start_TrackDocs"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SystemPaneSuggestionsEnabled"">0</Tweak>
				<Tweak name=""InputPersonalization\AllowInputPersonalization"">0</Tweak>
				<Tweak name=""Settings\AcceptedPrivacyPolicy"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\PreInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\OemPreInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""AppCompat\DisablePCA"">1</Tweak>
				<Tweak name=""Windows Search\AllowCloudSearch"">0</Tweak>
				<Tweak name=""SystemIndex\EnableFindMyFiles"">1</Tweak>
				<Tweak name=""Search\BingSearchEnabled"">0</Tweak>
				<Tweak name=""SearchSettings\IsDeviceSearchHistoryEnabled"">0</Tweak>
				<Tweak name=""TIPC\Enabled"">0</Tweak>
				<Tweak name=""System\EnableCdp"">0</Tweak>
				<Tweak name=""Shell\BagMRU Size"">1</Tweak>
				<Tweak name=""Explorer\ShowFrequent"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SubscribedContent-338393Enabled"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SubscribedContent-310093Enabled"">0</Tweak>
				<Tweak name=""Explorer\ShowRecent"">0</Tweak>
				<Tweak name=""UserProfileEngagement\ScoobeSystemSettingEnabled"">0</Tweak>
				<Tweak name=""AppHost\EnableWebContentEvaluation"">0</Tweak>
				<Tweak name=""Settings\InsightsEnabled"">0</Tweak>
				<Tweak name=""FlipAhead\FPEnabled"">0</Tweak>
				<Tweak name=""MicrosoftEdge\PhishingFilter\Enabledv9"">0</Tweak>
				<Tweak name=""Internet Explorer\PhishingFilter\Enabledv9"">0</Tweak>
				<Tweak name=""Explorer\SmartScreenEnabled"">Off</Tweak>
				<Tweak name=""CloudContent\DisableWindowsSpotlightFeatures"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""StartTweaks"">
				<Tweak name=""Start\HideAppList"">0</Tweak>
				<Tweak name=""Start\HideFrequentlyUsedApps"">1</Tweak>
				<Tweak name=""Explorer\HideRecentlyAddedApps"">1</Tweak>
				<Tweak name=""Start\AllowPinnedFolderDocuments"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderDownloads"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderFileExplorer"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderHomeGroup"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderMusic"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderNetwork"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderPersonalFolder"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderPictures"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderSettings"">1</Tweak>
				<Tweak name=""Start\AllowPinnedFolderVideos"">0</Tweak>
				<Tweak name=""Start\HideHibernate"">1</Tweak>
				<Tweak name=""Start\HideSleep"">1</Tweak>
				<Tweak name=""Explorer\ShowOrHideMostUsedApps"">0</Tweak>
				<Tweak name=""Advanced\Start_IrisRecommendations"">0</Tweak>
				<Tweak name=""Start\HideSwitchAccount"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""System"">
				<Tweak name=""Windows\DisableATMFD"">1</Tweak>
				<Tweak name=""Activation\Manual"">1</Tweak>
				<Tweak name=""Appx\AllowAutomaticAppArchiving"">0</Tweak>
				<Tweak name=""Winlogon\RestartApps"">0</Tweak>
				<Tweak name=""WindowsUpdate\AllowTemporaryEnterpriseFeatureControl"">1</Tweak>
				<Tweak name=""GameConfigStore\GameDVR_FSEBehavior"">0</Tweak>
				<Tweak name=""kernel\GlobalTimerResolutionRequests"">1</Tweak>
				<Tweak name=""GraphicsDrivers\HwSchMode"">2</Tweak>
				<Tweak name=""System\EnableLinkedConnections"">1</Tweak>
				<Tweak name=""OOBE\BypassNRO"">1</Tweak>
				<Tweak name=""System\NoConnectedUser"">0</Tweak>
				<Tweak name=""3\1806"">0</Tweak>
				<Tweak name=""Terminal Server\fDenyTSConnections"">0</Tweak>
				<Tweak name=""RDP-Tcp\UserAuthentication"">0</Tweak>
				<Tweak name=""Device\DevicePasswordLessBuildVersion"">0</Tweak>
				<Tweak name=""ReserveManager\ShippedWithReserves"">1</Tweak>
				<Tweak name=""LabConfig\BypassRAMCheck"">1</Tweak>
				<Tweak name=""LabConfig\BypassTPMCheck"">1</Tweak>
				<Tweak name=""StoragePolicy\01"">0</Tweak>
				<Tweak name=""StoragePolicy\512"">0</Tweak>
				<Tweak name=""StoragePolicy\256"">14</Tweak>
				<Tweak name=""StoragePolicy\04"">1</Tweak>
				<Tweak name=""StoragePolicy\2048"">1</Tweak>
				<Tweak name=""System\DisableAutomaticRestartSignOn"">1</Tweak>
				<Tweak name="".NETFramework\OnlyUseLatestCLR"">0</Tweak>
				<Tweak name=""UserGpuPreferences\DirectXUserGlobalSettings"">VRROptimizeEnable=0</Tweak>
				<Tweak name=""System\VerboseStatus"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsUpdateTasks"">
				<Tweak name=""DevHomeUpdate\DevHomeUpdate"">0</Tweak>
				<Tweak name=""EdgeUpdate\EdgeUpdate"">0</Tweak>
				<Tweak name=""IA\IA"">0</Tweak>
				<Tweak name=""LXP\LXP"">0</Tweak>
				<Tweak name=""OutlookUpdate\OutlookUpdate"">0</Tweak>
				<Tweak name=""TFLUpdate\TFLUpdate"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""UAC"">
				<Tweak name=""System\EnableLUA"">0</Tweak>
				<Tweak name=""System\FilterAdministratorToken"">0</Tweak>
				<Tweak name=""System\PromptOnSecureDesktop"">0</Tweak>
				<Tweak name=""System\ConsentPromptBehaviorAdmin"">0</Tweak>
				<Tweak name=""System\ConsentPromptBehaviorUser"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsDefender"">
				<Tweak name=""State\AccountProtection_MicrosoftAccount_Disconnected"">0</Tweak>
				<Tweak name=""Notifications\DisableNotifications"">1</Tweak>
				<Tweak name=""Notifications\DisableEnhancedNotifications"">1</Tweak>
				<Tweak name=""Policy\VerifiedAndReputablePolicyState"">0</Tweak>
				<Tweak name=""Features\TamperProtection"">0</Tweak>
				<Tweak name=""Windows Defender\DisableAntiSpyware"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsUpdate"">
				<Tweak name=""DriverSearching\SearchOrderConfig"">0</Tweak>
				<Tweak name=""Preferences\ModelDownloadAllowed"">0</Tweak>
				<Tweak name=""DeliveryOptimization\DODownloadMode"">0</Tweak>
				<Tweak name=""Settings\AllowAutoWindowsUpdateDownloadOverMeteredNetwork"">1</Tweak>
				<Tweak name=""Settings\IsContinuousInnovationOptedIn"">0</Tweak>
				<Tweak name=""7971f918-a847-4430-9279-4a52d1efe18d\RegisterWithAU"">1</Tweak>
				<Tweak name=""WindowsUpdate\ExcludeWUDriversInQualityUpdate"">1</Tweak>
				<Tweak name=""MRT\DontOfferThroughWUAU"">0</Tweak>
				<Tweak name=""Settings\HideMCTLink"">1</Tweak>
				<Tweak name=""Settings\IsExpedited"">0</Tweak>
				<Tweak name=""Settings\RestartNotificationsAllowed2"">0</Tweak>
				<Tweak name=""WindowsStore\AutoDownload"">4</Tweak>
				<Tweak name=""AU\AUOptions"">2</Tweak>
			</TweakGroup>
		</Settings>
	</Tweaks>
</Preset>"
Z6QLS10F,Untitled,creativesamurai1982,Python,Tuesday 30th of April 2024 04:19:23 PM CDT,"ORCAs kobra 2 g code
----

START
G28 ; home all axes
G1 Z5 F5000 ; lift nozzle

END
M104 S0 ; turn off temperature
G28 X0  ; home X axis
M84     ; disable motors



prusa KOBRA 2 G CODE

START CODE
----------

G90 ; use absolute coordinates
M83 ; extruder relative mode
M104 S[first_layer_temperature] ; set extruder temp
M140 S[first_layer_bed_temperature] ; set bed temp
M190 S[first_layer_bed_temperature] ; wait for bed temp
M109 S[first_layer_temperature] ; wait for extruder temp
G28                                        ; move X/Y/Z to min endstops
G1 Z0.28                                   ; lift nozzle a bit 
G92 E0 
G1 Y3 F1800                                    ; zero the extruded length 
G1 X60  E25 F500                       ; Extrude 25mm of filament in a 5cm line. 
G92 E0                                     ; zero the extruded length again 
G1 E-2 F500                                ; Retract a little 
G1 X70 F4000                              ; Quickly wipe away from the filament line
M117

END CODE
--------

M104 S0                                    ; Extruder off 
M140 S0                                    ; Heatbed off 
M107                                       ; Fan off 
G91                                        ; relative positioning 
G1 E-5 F3000  
G1 Z+0.3 F3000                             ; lift print head 
G28 X0  F3000
M84  

BEFORE LAYER CHANGE CODE
------------------------

; BEFORE_LAYER_CHANGE [layer_num] @ [layer_z]mm

AFTER LAYER CHANGE CODE
-----------------------
; AFTER_LAYER_CHANGE [layer_num] @ [layer_z]mm

COLOR CHANGE CODE
-----------------

M600

PAUSE PRINT CODE
----------------

M601"
QaD1kdW1,Linear Controller,zk69,C++,Tuesday 30th of April 2024 04:03:14 PM CDT,"#include ""../flowstar/Continuous.h""
#include<fstream>
#include<ctime>

using namespace std;
using namespace flowstar;

int main(int argc, char* argv[])
{
    // Declaration of the state variables.
    unsigned int numVars = 3;

    int x0_id = stateVars.declareVar(""x0"");
    int x1_id = stateVars.declareVar(""x1"");
    int u_id = stateVars.declareVar(""u"");

    int domainDim = numVars + 1;

    // Define the continuous dynamics.
    Expression_AST<Real> deriv_x0(""40 - x1"");  // theta_r = 0
    Expression_AST<Real> deriv_x1(""-0.2*x1 + u"");
    Expression_AST<Real> deriv_u(""0"");

    vector<Expression_AST<Real>> ode_rhs(numVars);
    ode_rhs[x0_id] = deriv_x0;
    ode_rhs[x1_id] = deriv_x1;
    ode_rhs[u_id] = deriv_u;

    Deterministic_Continuous_Dynamics dynamics(ode_rhs);

    // Specify the parameters for reachability computation.
    Computational_Setting setting;

    unsigned int order = 12;
    setting.setFixedStepsize(0.01, order);
    setting.setTime(0.1);
    setting.setCutoffThreshold(1e-10);
    setting.setQueueSize(1000);
    setting.setRemainderEstimation(vector<Interval>(numVars, Interval(-0.01, 0.01)));
    setting.prepare();

    float state_1 = std::stof(argv[1]);
    float state_2 = std::stof(argv[2]);
    
    Interval init_x0(state_1 - 1, state_1 + 1), init_x1(state_2 - 2, state_2 + 2), init_u(0);
    vector<Interval> X0 = {init_x0, init_x1, init_u};
    
    Flowpipe initial_set(X0);

    // Result of the reachability computation
    Result_of_Reachability result;
    
    string theta_1 = argv[3];
    string theta_2 = argv[4];
    int step_num = std::stoi(argv[5]);

    for (int iter = 0; iter < step_num; ++iter)
    {
        vector<Interval> box;
        initial_set.intEval(box, order, setting.tm_setting.cutoff_threshold);

        string strExpU = ""x0*"" + theta_1 + ""+x1*"" + theta_2;

        Expression_AST<Real> exp_u(strExpU);

        TaylorModel<Real> tm_u;
        exp_u.evaluate(tm_u, initial_set.tmvPre.tms, order, initial_set.domain, setting.tm_setting.cutoff_threshold, setting.g_setting);

        initial_set.tmvPre.tms[u_id] = tm_u;

        dynamics.reach(result, setting, initial_set, vector<Constraint>());

        if (result.status == COMPLETED_SAFE || result.status == COMPLETED_UNSAFE || result.status == COMPLETED_UNKNOWN)
        {
            initial_set = result.fp_end_of_time;
        }
        else
        {
            printf(""Terminated due to too large overestimation.\n"");
            break;
        }
    }

    ofstream result_output(""./outputs/reach_result.txt"");
    vector<Interval> end_box;
    result.fp_end_of_time.intEval(end_box, order, setting.tm_setting.cutoff_threshold);
    string reach_result = ""Verification result: Unknown("" + std::to_string(step_num) + "")"";
    
    if (end_box[0].inf() >= -0.4 && end_box[0].sup() <= -0.28 && end_box[1].inf() >= 0.05 && end_box[1].sup() <= 0.22)
    {
        reach_result = ""Verification result: Yes("" + std::to_string(step_num) + "")"";
    }
    else if (end_box[0].inf() >= 0.28 || end_box[0].sup() <= -0.4 || end_box[1].inf() >= 0.22 || end_box[1].sup() <= 0.05)
    {
        reach_result = ""Verification result: No("" + std::to_string(step_num) + "")"";
    }

    if (result_output.is_open())
    {
        result_output << reach_result << endl;
    }

    return 0;
}
"
LSAFxyve,C,Ankit_132,C++,Tuesday 30th of April 2024 02:49:42 PM CDT,"#include <bits/stdc++.h>
#define LL long long

using namespace std;

int main()
{
	int t;
	cin>>t;
	while(t--)
	{

	int n;
	LL k;
	cin >> n;
	cin >> k;
	vector<LL>a_arr(n);
	for(int i=0;i<n;i++)
	{
		cin>>a_arr[i];
	}
	LL l=0,r=1e18;
	while(l<r)
	{
		LL mid=(l+r+1)/2;
		LL ans=mid+(n-1);
		LL need=0,t=0;
		for(int i=0;i<n;i++)
		{
			if(a_arr[i]>ans/n)
			{
				t++;
			}
			else
			{
				LL tmp = ans/n-a_arr[i];
				need += tmp;
			}
		}
		need+=max(ans%n-t,0ll);
		if(need<=k)l=mid;
		else r=mid-1;
	}
	cout<<l;
	cout << endl;
	}
}

"
UTL9Y8Ai,D,Ankit_132,C++,Tuesday 30th of April 2024 02:49:14 PM CDT,"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
int main() {
	int t;
	cin>>t;
	while(t--){
		ll n,m;
		cin>>n>>m;
		ll ans=0;
		for(ll i=1; i<=m; i++){
			ll x = n/i + 1;
			ll y = x/i;
			ans+=y;
		}
		ans--;
		cout<<ans<<endl;
	}
}"
A7JaTAi7,A,Ankit_132,C++,Tuesday 30th of April 2024 02:48:50 PM CDT,"#include<bits/stdc++.h>
using namespace std;
int main(){
  int t;
  cin>>t;

  while(t--){
  int n,count=0,k=0;
  cin>>n;
  int a[n],b[n];
  for(int i=0;i<n;i++)cin>>a[i];
    for(int i=0;i<n;i++)cin>>b[i];

   for(int i=0;i<n;i++){
    if(a[i]>b[k++]){
        count++;
        i--;
    }
    if(k>n-1)break;
   }
   cout<<count<<endl;


}}"
ZCGyPhAR,B,Ankit_132,C++,Tuesday 30th of April 2024 02:47:47 PM CDT,"#include <bits/stdc++.h>
using namespace std;
int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    string s;
	    cin>>s;
	    int c=0;
	    for(char ch:s) if(ch=='U') c++;
	    if(c%2==1) cout<<""YES""<<endl;
	    else cout<<""NO""<<endl;
	}
}"
JYuymXtX,Backup de Arquivos JPG e PNG ver. 2,MizunoBrasil,Python,Tuesday 30th of April 2024 02:45:30 PM CDT,"import tkinter as tk
from tkinter import filedialog, messagebox
import os
import shutil
from datetime import datetime
import threading
import win32gui
import win32con

def esconder_janela_terminal():
    janela_terminal = win32gui.GetForegroundWindow()
    win32gui.ShowWindow(janela_terminal, win32con.SW_MINIMIZE)

def copiar_imagens(origem, destino):
    esconder_janela_terminal()
    
    if not origem:
        return
    
    if not os.path.exists(destino):
        os.makedirs(destino)
    
    def copiar_arquivos():
        for arquivo in os.listdir(origem):
            if arquivo.endswith("".jpg"") or arquivo.endswith("".png""):
                caminho_arquivo = os.path.join(origem, arquivo)
                data_criacao = datetime.fromtimestamp(os.path.getctime(caminho_arquivo))
                pasta_destino = os.path.join(destino, data_criacao.strftime('%d-%m-%Y'))
                if not os.path.exists(pasta_destino):
                    os.makedirs(pasta_destino)
                shutil.copy(caminho_arquivo, pasta_destino)
        
        messagebox.showinfo(""Sucesso"", ""Os arquivos foram copiados com sucesso."")
    
    thread = threading.Thread(target=copiar_arquivos)
    thread.start()

def selecionar_destino():
    destino = filedialog.askdirectory(title=""Selecione a pasta de destino"")
    if destino:
        salvar_caminho(destino)
        texto_caminho.config(text=""Caminho de Destino: "" + destino)

def copiar_usando_caminho_salvo():
    caminho_destino = carregar_caminho()
    origem = filedialog.askdirectory(title=""Selecione a pasta de origem"")
    if origem:
        copiar_imagens(origem, caminho_destino)

def salvar_caminho(caminho):
    with open(""caminho_destino.txt"", ""w"") as arquivo:
        arquivo.write(caminho)

def carregar_caminho():
    if os.path.exists(""caminho_destino.txt""):
        with open(""caminho_destino.txt"", ""r"") as arquivo:
            return arquivo.read().strip()
    return """"

def abrir_explorador():
    caminho = carregar_caminho()
    if not caminho or not os.path.exists(caminho):
        caminho = os.getcwd()  # Diretório atual
    os.startfile(caminho)

janela = tk.Tk()
janela.title(""Backup de Imagens - V2"")

largura = 400
altura = 230
largura_tela = janela.winfo_screenwidth()
altura_tela = janela.winfo_screenheight()
x = (largura_tela/2) - (largura/2)
y = (altura_tela/2) - (altura/2)
janela.geometry('%dx%d+%d+%d' % (largura, altura, x, y))

botao_destino = tk.Button(janela, text=""Selecionar Destino"", command=selecionar_destino)
botao_destino.pack(pady=10)

botao_copiar = tk.Button(janela, text=""Selecionar imagens"", command=copiar_usando_caminho_salvo)
botao_copiar.pack(pady=10)

botao_info = tk.Button(janela, text=""Abrir Explorador"", command=abrir_explorador, justify=tk.LEFT, fg=""blue"", cursor=""hand2"")
botao_info.pack(pady=10)

texto_caminho = tk.Label(janela, text=""Caminho de Destino: "" + carregar_caminho(), justify=tk.LEFT)
texto_caminho.pack(pady=10)

janela.mainloop()
"
LbEJKDpE,playlist,felipemathyas,HTML,Tuesday 30th of April 2024 02:26:54 PM CDT,"
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Vídeos do YouTube</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        #videoContainer {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: #333;
            color: white;
            text-align: center;
            padding: 10px;
            display: none;
        }

        #player {
            width: 100%;
            height: 360px;
        }

        #dropdown {
            position: fixed;
            top: 10px;
            right: 10px;
            z-index: 1;
            display: inline-block;
        }

        #dropdownContent {
            display: none;
            position: absolute;
            background-color: #333;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            min-width: 160px;
            z-index: 1;
        }

        #dropdown button {
            background-color: #333;
            color: white;
            padding: 10px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

        #dropdownContent a {
            color: white;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        #dropdownContent a:hover {
            background-color: #555;
        }
    </style>
</head>
<body>

    <div id=""dropdown"">
        <button onclick=""toggleDropdown()"">Clique aqui</button>
        <div id=""dropdownContent"">
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLPuTuKInxLDMYgn7tPLimd7U5qWn83sYj')"">Playlist 1</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLPb0hyjbXnkoZ9vs0Us4DoLVn2fVrlQWC')"">Playlist 2</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLyklBR4eLE2ZC9VZDUfCHVqtgl78YvbqM')"">Forro atg</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLJn4hP4ODKFykbV59b2XWmw7GVrzokGrf')"">pISADINHA atg</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('RDa42Y37YSuCM')"">Muuuuuuuuuu atg</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLNZ3Ss0T52ZJ00rNHhhotS5EpbcEo4yBS')"">Mucao22222 atg</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PLUUbgea4rQYDXWou8VIvH1gLmg9OAEyex')"">mIX MUCAO</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('tRsukCHYWP8')"">11 de muh antiga</a>

            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PL9IA2wt9WiE9VpX4khA-GWKM9hhZV3hOM')"">Sertanejo Antigas</a>
            <a href=""javascript:void(0)"" onclick=""loadPlaylist('PL86Y3BW5O5CK13_rHsALKp2UHMoWSef5z')"">Sertanejo 2024</a>
        </div>
    </div>

    <div id=""videoContainer"">
        <div id=""player""></div>
    </div>

    <script src=""https://www.youtube.com/iframe_api""></script>
    <script>
        var player;

        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '180',
                width: '240',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        function onPlayerReady(event) {
            // O player está pronto
        }

        function onPlayerStateChange(event) {
            // O estado do player mudou
        }

        function loadPlaylist(playlistId) {
            player.loadPlaylist({
                list: playlistId,
                listType: 'playlist',
                index: 0,
                suggestedQuality: '360'
            });
            document.getElementById('videoContainer').style.display = 'block';
            closeDropdown();
        }

        function toggleDropdown() {
            var dropdownContent = document.getElementById('dropdownContent');
            dropdownContent.style.display = (dropdownContent.style.display === 'block') ? 'none' : 'block';
        }

        function closeDropdown() {
            var dropdownContent = document.getElementById('dropdownContent');
            dropdownContent.style.display = 'none';
        }
    </script>

</body>
</html>
"
7CFnqnW0,Python - matplotlib - animate pie - (Stackoverflow),furas,Python,Tuesday 30th of April 2024 02:23:40 PM CDT,"# date: 2024.04.30
# [Pie Chart animation in Python doesn't output anything - Stack Overflow](https://stackoverflow.com/questions/78405263/pie-chart-animation-in-python-doesnt-output-anything)

import os
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

def get_data(path):
    data = {}

    for directory in os.listdir(path):
        full_path = os.path.join(path, directory)
        if os.path.isdir(full_path):
            data[directory] = len(os.listdir(full_path))
    
    return data

def update(frame):
    ax.clear()
    
    vals = list(class_counts.values())[:frame]
    labs = list(class_counts.keys())[:frame]
    
    ax.pie(vals, labels=labs, autopct='%1.1f%%', startangle=140, textprops={'fontsize': 8})

def plot_class_distribution(class_counts):
    global ax
    
    fig, ax = plt.subplots(figsize=(8, 6))
    ax.set_title('ASL Class Distribution')

    # I use `len(class_counts)` as `frames` to slide data in `update`
    ani = FuncAnimation(fig, update, frames=len(class_counts), repeat=False)
    plt.show()

# --- main ---

path = '/home/furas/Download'

class_counts = get_data(path)

# skip empty folders 
#class_counts = {key:val for key, val in class_counts.items() if val > 0}

# show data
for key, val in class_counts.items():
    print(f'{val:3} : {key}')
    
plot_class_distribution(class_counts)"
Gqva0USn,Notificaties in c++ console app,ohusq,C++,Tuesday 30th of April 2024 02:04:53 PM CDT,"#pragma once
#include <Windows.h>
#include <iostream>
#include <string>

#define BLACK         0
#define DARK_BLUE     FOREGROUND_BLUE
#define DARK_GREEN    FOREGROUND_GREEN
#define DARK_CYAN     (FOREGROUND_GREEN | FOREGROUND_BLUE)
#define DARK_RED      FOREGROUND_RED
#define DARK_MAGENTA  (FOREGROUND_RED | FOREGROUND_BLUE)
#define DARK_YELLOW   (FOREGROUND_RED | FOREGROUND_GREEN)
#define GRAY          (FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE)
#define DARK_GRAY     (FOREGROUND_INTENSITY)
#define BLUE          (FOREGROUND_BLUE | FOREGROUND_INTENSITY)
#define GREEN         (FOREGROUND_GREEN | FOREGROUND_INTENSITY)
#define CYAN          (FOREGROUND_GREEN | FOREGROUND_BLUE | FOREGROUND_INTENSITY)
#define RED           (FOREGROUND_RED | FOREGROUND_INTENSITY)
#define MAGENTA       (FOREGROUND_RED | FOREGROUND_BLUE | FOREGROUND_INTENSITY)
#define YELLOW        (FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_INTENSITY)
#define WHITE         (FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE | FOREGROUND_INTENSITY)

void notify(const char* message) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, GRAY);
    std::cout << ""[?] "" << message << std::endl;
    SetConsoleTextAttribute(hConsole, WHITE);
}

void alert(const char* message) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, RED);
    std::cout << ""[!] "" << message << std::endl;
    SetConsoleTextAttribute(hConsole, WHITE);
}

void success(const char* message) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, GREEN);
    std::cout << ""[-] "" << message << std::endl;
    SetConsoleTextAttribute(hConsole, WHITE);
}

void warn(const char* message) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, YELLOW);
    std::cout << ""[!] "" << message << std::endl;
    SetConsoleTextAttribute(hConsole, WHITE);
}

const char* userInput(const char* message) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    notify(message);
    SetConsoleTextAttribute(hConsole, CYAN);
    std::string input;
    std::getline(std::cin, input);
    SetConsoleTextAttribute(hConsole, WHITE);
    return input.c_str();
}"
CxhiQfZS,prime numbers,matheus_monteiro,C++,Tuesday 30th of April 2024 01:52:23 PM CDT,"#include <bits/stdc++.h>
 
using namespace std;

vector<int> leastPrimceFactor;
vector<int> primes;

void sieve(int n) { // O(N)
    leastPrimceFactor.resize(n + 1, 0);
    for(int i = 2; i <= n; ++i) {
        if (leastPrimceFactor[i] == 0) {
            leastPrimceFactor[i] = i;
            primes.push_back(i);
        }
        for (int j = 0; i * primes[j] <= n; ++j) {
            leastPrimceFactor[i * primes[j]] = primes[j];
            if (primes[j] == leastPrimceFactor[i]) {
                break;
            }
        }
    }
}

bool isPrime(int n) { // O( sqrt(N) / ln(sqrt(N))) -> tests only primes smaller than sqrt(N)
    if(n == 2) return true;
    if(n < 2 || (n % 2 == 0)) return false;
    if(n < leastPrimceFactor.size()) return leastPrimceFactor[n] == n;

    int index = 0;

    while(primes[index] * primes[index] <= n) {
        if((n % primes[index]) == 0)
            return false;
        index++;
    }

    return true;
}

int main() {
    int L = 5;
    int R = 12;

    sieve(sqrt(R) + 1);

    while(L <= R) {
        if(isPrime(L))
            cout << L << ' ';
        ++L;
    }
    cout << endl;
    
    return 0;
}   "
xvmkUV5L,Untitled,SambabajInc,Lua,Tuesday 30th of April 2024 01:44:54 PM CDT,"when true do
    local block, data = turtle.inspect()
    if block then
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
        turtle.dig()
        
        turtle.down()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
        
        turtle.down()
        turtle.turnLeft()
        turtle.forward()
        sleep(10)
        turtle.turnLeft()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnLeft()
        turtle.up()
        turtle.up()
        	{
            name = ""minecraft:sugarcane""
            }
    end
end
        
        "
RJMRsvm0,Untitled,samipote,Python,Tuesday 30th of April 2024 01:30:41 PM CDT,"def calculate_recent_performance(df, games=10):
    """"""
    Calculate the team's recent performance metrics for home and away teams efficiently, including current winning
    and losing streaks.
    :param df: DataFrame containing the game data.
    :param games: Number of recent games to calculate metrics for.
    :return: DataFrame with calculated metrics for both home and away teams.
    """"""
    # Prepare DataFrame for rolling calculations
    # Calculate for home games
    home_df = df.copy()
    home_df['home_wins'] = home_df['home_win']
    home_df['home_goals_scored'] = home_df['score_home']
    home_df['home_goals_conceded'] = home_df['score_away']
    
    home_df.sort_values(['home_team', 'game_date'], inplace=True)

    # Rolling calculate win rate, goals scored, and goals conceded for home team
    home_df['home_recent_win_rate'] = home_df.groupby('home_team')['home_wins'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())
    home_df['home_avg_goals_scored'] = home_df.groupby('home_team')['home_goals_scored'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())
    home_df['home_avg_goals_conceded'] = home_df.groupby('home_team')['home_goals_conceded'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())

    # Calculate current winning and losing streak for home teams
    home_df['home_winning_streak'] = home_df.groupby('home_team')['home_wins'].transform(lambda x: x.groupby((x != x.shift()).cumsum()).cumcount() + 1)
    home_df['home_losing_streak'] = home_df.groupby('home_team')['home_wins'].transform(lambda x: (1 - x).groupby((x != x.shift()).cumsum()).cumcount() + 1)

    # Calculate for away games
    away_df = df.copy()
    away_df['away_wins'] = away_df['home_win'].apply(lambda x: 1 if x == 0 else 0)  # Invert home_win for away team perspective
    away_df['away_goals_scored'] = away_df['score_away']
    away_df['away_goals_conceded'] = away_df['score_home']
    
    away_df.sort_values(['away_team', 'game_date'], inplace=True)

    # Rolling calculate win rate, goals scored, and goals conceded for away team
    away_df['away_recent_win_rate'] = away_df.groupby('away_team')['away_wins'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())
    away_df['away_avg_goals_scored'] = away_df.groupby('away_team')['away_goals_scored'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())
    away_df['away_avg_goals_conceded'] = away_df.groupby('away_team')['away_goals_conceded'].transform(lambda x: x.rolling(window=games, min_periods=1).mean())

    # Calculate current winning and losing streak for away teams
    away_df['away_winning_streak'] = away_df.groupby('away_team')['away_wins'].transform(lambda x: x.groupby((x != x.shift()).cumsum()).cumcount() + 1)
    away_df['away_losing_streak'] = away_df.groupby('away_team')['away_wins'].transform(lambda x: (1 - x).groupby((x != x.shift()).cumsum()).cumcount() + 1)

    # Merge the metrics back to the original dataframe
    df = df.merge(home_df[['game_date', 'home_team', 'home_recent_win_rate', 'home_avg_goals_scored', 'home_avg_goals_conceded', 'home_winning_streak', 'home_losing_streak']], on=['game_date', 'home_team'], how='left')
    df = df.merge(away_df[['game_date', 'away_team', 'away_recent_win_rate', 'away_avg_goals_scored', 'away_avg_goals_conceded', 'away_winning_streak', 'away_losing_streak']], on=['game_date', 'away_team'], how='left')

    return df"
2yJDH0iv,storage,Archer2o2x,Lua,Tuesday 30th of April 2024 12:31:00 PM CDT,"local function transfer(self, destination, name, count)

    if not count then count = 64 end

    local countLeft = count

    for slot, item in pairs(self.peripheral.list()) do

        if item.name == name then

            countLeft = countLeft - self.peripheral.pushItems(destination, slot, countLeft)

            if countLeft < 1 then break end

        end

    end

end

local function list(self)

    local results = {}

    for slot, item in pairs(self.peripheral.list()) do
        
        if results[item.name] ~= nil then

            results[item.name] = results[item.name] + item.count

        else

            results[item.name] = item.count

        end

    end

    return results

end

local function amount(self, name)

    local results = 0

    for slot, item in pairs(self.peripheral.list()) do
        
        if item.name == name then

            results = results + item.count

        end

    end

    return results

end

local function make(peripheral)

    return {

        peripheral = peripheral,
        transfer = transfer,
        list = list,
        amount = amount

    }

end

return { make = make }"
zyRWYSa7,СПРИНТ № 7 | Односвязный список | Урок 3: Вставка элементов и очистка списка,chevengur,C++,Tuesday 30th of April 2024 12:21:21 PM CDT,"#include <cassert>
#include <cstddef>
#include <string>
#include <utility>

template <typename Type>
class SingleLinkedList {
	// Узел списка
	struct Node {
		Node() = default;
		Node(const Type& val, Node* next)
			: value(val)
			, next_node(next) {
		}
		Type value;
		Node* next_node = nullptr;
	};

public:

	SingleLinkedList() : head_(), size_(0) {};

	~SingleLinkedList() { Clear(); };

	// Вставляет элемент value в начало списка за время O(1)
	void PushFront(const Type& value) {
		head_.next_node = new Node(value, head_.next_node);
		++size_;
	}

	// Очищает список за время O(N)
	void Clear() noexcept {
		while (head_.next_node)
		{
            Node* new_node = head_.next_node->next_node;
			delete head_.next_node;
			head_.next_node = new_node;
		}
		size_ = 0;
	}

	// Возвращает количество элементов в списке за время O(1)
	[[nodiscard]] size_t GetSize() const noexcept {
		return size_;
	}

	// Сообщает, пустой ли список за время O(1)
	[[nodiscard]] bool IsEmpty() const noexcept {
		return (size_ == 0) ? true : false;
	}

private:
	// Фиктивный узел, используется для вставки ""перед первым элементом""
	Node head_;
	size_t size_;
};

// Эта функция тестирует работу SingleLinkedList
void Test1() {
	// Шпион, следящий за своим удалением
	struct DeletionSpy {
		DeletionSpy() = default;
		explicit DeletionSpy(int& instance_counter) noexcept
			: instance_counter_ptr_(&instance_counter)  //
		{
			OnAddInstance();
		}
		DeletionSpy(const DeletionSpy& other) noexcept
			: instance_counter_ptr_(other.instance_counter_ptr_)  //
		{
			OnAddInstance();
		}
		DeletionSpy& operator=(const DeletionSpy& rhs) noexcept {
			if (this != &rhs) {
				auto rhs_copy(rhs);
				std::swap(instance_counter_ptr_, rhs_copy.instance_counter_ptr_);
			}
			return *this;
		}
		~DeletionSpy() {
			OnDeleteInstance();
		}

	private:
		void OnAddInstance() noexcept {
			if (instance_counter_ptr_) {
				++(*instance_counter_ptr_);
			}
		}
		void OnDeleteInstance() noexcept {
			if (instance_counter_ptr_) {
				assert(*instance_counter_ptr_ != 0);
				--(*instance_counter_ptr_);
			}
		}

		int* instance_counter_ptr_ = nullptr;
	};

	// Проверка вставки в начало
	{
		SingleLinkedList<int> l;
		assert(l.IsEmpty());
		assert(l.GetSize() == 0u);

		l.PushFront(0);
		l.PushFront(1);
		assert(l.GetSize() == 2);
		assert(!l.IsEmpty());

		l.Clear();
		assert(l.GetSize() == 0);
		assert(l.IsEmpty());
	}

	// Проверка фактического удаления элементов
	{
		int item0_counter = 0;
		int item1_counter = 0;
		int item2_counter = 0;
		{
			SingleLinkedList<DeletionSpy> list;
			list.PushFront(DeletionSpy{ item0_counter });
			list.PushFront(DeletionSpy{ item1_counter });
			list.PushFront(DeletionSpy{ item2_counter });

			assert(item0_counter == 1);
			assert(item1_counter == 1);
			assert(item2_counter == 1);
			list.Clear();
			assert(item0_counter == 0);
			assert(item1_counter == 0);
			assert(item2_counter == 0);

			list.PushFront(DeletionSpy{ item0_counter });
			list.PushFront(DeletionSpy{ item1_counter });
			list.PushFront(DeletionSpy{ item2_counter });
			assert(item0_counter == 1);
			assert(item1_counter == 1);
			assert(item2_counter == 1);
		}
		assert(item0_counter == 0);
		assert(item1_counter == 0);
		assert(item2_counter == 0);
	}

	// Вспомогательный класс, бросающий исключение после создания N-копии
	struct ThrowOnCopy {
		ThrowOnCopy() = default;
		explicit ThrowOnCopy(int& copy_counter) noexcept
			: countdown_ptr(&copy_counter) {
		}
		ThrowOnCopy(const ThrowOnCopy& other)
			: countdown_ptr(other.countdown_ptr)  //
		{
			if (countdown_ptr) {
				if (*countdown_ptr == 0) {
					throw std::bad_alloc();
				}
				else {
					--(*countdown_ptr);
				}
			}
		}
		// Присваивание элементов этого типа не требуется
		ThrowOnCopy& operator=(const ThrowOnCopy& rhs) = delete;
		// Адрес счётчика обратного отсчёта. Если не равен nullptr, то уменьшается при каждом копировании.
		// Как только обнулится, конструктор копирования выбросит исключение
		int* countdown_ptr = nullptr;
	};

	{
		bool exception_was_thrown = false;
		// Последовательно уменьшаем счётчик копирований до нуля, пока не будет выброшено исключение
		for (int max_copy_counter = 5; max_copy_counter >= 0; --max_copy_counter) {
			// Создаём непустой список
			SingleLinkedList<ThrowOnCopy> list;
			list.PushFront(ThrowOnCopy{});
			try {
				int copy_counter = max_copy_counter;
				list.PushFront(ThrowOnCopy(copy_counter));
				// Если метод не выбросил исключение, список должен перейти в новое состояние
				assert(list.GetSize() == 2);
			}
			catch (const std::bad_alloc&) {
				exception_was_thrown = true;
				// После выбрасывания исключения состояние списка должно остаться прежним
				assert(list.GetSize() == 1);
				break;
			}
		}
		assert(exception_was_thrown);
	}
}

int main() {
	Test1();
}"
vCbzs1Dd,Product of Array Except Self,jayati,C++,Tuesday 30th of April 2024 12:18:17 PM CDT,"class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int prefixSum = 1, n = nums.size();
        vector<int> result(n, 1);
        for (int i = 0; i < n - 1; i++) {
            result[i + 1] = prefixSum * nums[i];
            prefixSum *= nums[i];
        }
        prefixSum = 1;
        for (int i = n - 1; i > 0; i--) {
            result[i - 1] *= prefixSum * nums[i];
            prefixSum *= nums[i];
        }
        return result;
    }
};"
VhmEhHGW,SFDSEFSEGSEG,gadungw71,PHP,Tuesday 30th of April 2024 12:15:39 PM CDT,"https://www.artstation.com/artwork/elk9BD
https://www.artstation.com/xemphimmai2024thuyetminh6/profile
https://bento.me/mai-full-hd-vietsub-2024
https://m.facebook.com/media/set/?set=a.122161524374061291
https://www.artstation.com/artwork/vDeyGv
https://www.artstation.com/mai2024phimvietsub6/profile
https://bento.me/phim-mai-2024-hd-vietsub
https://m.facebook.com/media/set/?set=a.122158042586063154
https://www.artstation.com/artwork/39J8LB
https://www.artstation.com/quycaufullvietsub8/profile
https://bento.me/quy-cau-phim-vietsub
https://m.facebook.com/media/set/?set=a.122120358836071587
https://wandering.flarum.cloud/d/58545-jagokandang
https://hiuderyy.hashnode.dev/dsfsdefrgrdsny
https://medium.com/@rarawwwuu21/dsfsgbtdrny-192d9a81fe07
https://www.kooapp.com/koo/guest_9VC868/a883b0b7-9621-411b-bf60-d705ab75fdf7
https://www.kooapp.com/koo/guest_P68S8O/b4905323-e52f-4bc9-a35e-2176e141493a
https://open.firstory.me/user/clvmn3d82001701zc7s81hgwc
https://open.firstory.me/story/clvmn3tl2000401xxdq3v9g16
https://www.onfeetnation.com/profiles/blogs/dsfsefgseg
https://hackmd.io/@rerewilli6/r1uUSiR-C
https://demo.hedgedoc.org/s/WBH3tqsFU
https://rentry.co/s5sue4dz
https://paste.ee/p/O3pyN
https://yamcode.com/dsfsedfseg
https://start.me/w/7XBrpp
https://telegra.ph/DSFSEDF-04-30
https://muckrack.com/mona-lissa/bio
http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/740463/Default.aspx
https://www.fitlynk.com/1714497215F244272
"
LPH9D4b0,Untitled,Locative,SQL,Tuesday 30th of April 2024 11:43:44 AM CDT,"-- [ Оплата за: апрель]
 
--------- [ Отработанное время: ]
 
Locative: 56 (х5), 30 (FUN) 52 (x100) -- 138
Зилиус: 0 (х5), 120 (x100) -- 120
Khyntia: 0 (x5), 99 (FUN), 0 (x100) -- 99
jegermaister  - EN GM: 3 (х5), 56 (FUN), 153 (x100) -- 212
Чеширский Кот: 6 (x5), 3 (FUN), 105 (x100) -- 114
Mairena: 40 (х5), 0 (FUN) 69 (x100) -- 109
Lorad: 3 (x100) -- 3



--------- [ Бонусы: ]

UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1407530'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за апрель');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Зилиус за апрель');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Khyntia за апрель'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за апрель'); 

UPDATE `bonus` SET `gold`=gold+2700 WHERE `id`='810625'; -- Чеширский Кот 2
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (810625, NOW(), 2700, '+2700 золотых бонусов - з/п ГМ Чеширский Кот за апрель'); 

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='1407530'; -- Mairena
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Mairena за апрель'); 


-- Техническая поддержка

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='456853'; -- Seanone
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (456853, NOW(), 1000, '+1000 золотых бонусов - з/п тех.поддержки Seanone за апрель'); 


-- QA Team

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='211220'; -- nastyasia
UPDATE bonus SET gold=gold+0 WHERE id= 1507620; -- Reberalo 
"
c4hzdqG4,stringWithBasket,SaNik74,C#,Tuesday 30th of April 2024 11:40:08 AM CDT,"namespace stringWithBasket
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string bracketsString = ""(()(()))"";
            int parenthesisDepth = 0;
            int currentDepth = 0;
            int divisorOfNaturalNumber = 2;
            char openBrecket = '(';
            char closeBrecket = ')';

            if (bracketsString.Length % divisorOfNaturalNumber != 0 || bracketsString[0] == closeBrecket || bracketsString[bracketsString.Length - 1] == openBrecket)
            {
                Console.WriteLine(""Не корректная строка."");
            }
            else
            {
                foreach (char bracket in bracketsString)
                {
                    if (bracket == openBrecket)
                    {
                        currentDepth++;
                    }
                    else
                    {
                        currentDepth--;
                    }

                    if (currentDepth < 0)
                    {
                        break;
                    }

                    if (currentDepth > parenthesisDepth)
                    {
                        parenthesisDepth = currentDepth;
                    }
                }

                if (currentDepth != 0)
                {
                    Console.WriteLine(""Не корректная строка."");
                }
                else
                {
                    Console.WriteLine($""{bracketsString} - строка корректная и максимум глубины равняется {parenthesisDepth}"");
                }
            }

        }
    }
}"
Sey9yxTc,Banka.cs,KitSaels,C#,Tuesday 30th of April 2024 11:08:20 AM CDT,"using System;
using System.Collections.Generic;

internal class Program {

	static void Main(string[] args) {
		UrocenyUcet ucet = new UrocenyUcet(""prvni"", 20);
		ucet.Stav();
		ucet.VlozHotovost(22);
		ucet.Stav();
		ucet.VyberHotovosti(30);
		ucet.Stav();
		ucet.VyberHotovosti(30);
		ucet.Stav();
	}
}

class BankovniUcet {
	private string CisloUctu;
	private double StavUctu;

	public BankovniUcet(string ucet, double stav) {
		CisloUctu = ucet;
		StavUctu = stav;
	}

	public virtual void VlozHotovost(double castka) {
		StavUctu += castka;
	}

	public void VyberHotovosti(double castka) {
		if (castka > StavUctu) {
			throw new Exception();
		}
		StavUctu -= castka;
	}

	public double Zustatek() {
		return StavUctu;
	}

	public void PrevoPenez(double castka, BankovniUcet ucet) {
		if (castka > StavUctu) {
			throw new Exception();
		}
		StavUctu -= castka;
		ucet.VlozHotovost(castka);
	}

	public void Stav() {
		Console.WriteLine($""Na účtu {CisloUctu} je {StavUctu} Kč"");
	}
}

class UrocenyUcet: BankovniUcet {
	public UrocenyUcet(string ucet, double stav): base(ucet, stav) {
	}

	public override void VlozHotovost(double castka) {
		base.VlozHotovost(castka * 1.03) ;
	}
}
"
T0NQsmKf,Bod.cs,KitSaels,C#,Tuesday 30th of April 2024 11:07:25 AM CDT,"using System;
using System.Collections.Generic;

internal class Program {

	static void Main(string[] args) {
		Bod bod = new Bod();
		Console.WriteLine(""Zadej souřadnice bodu"");
		bod.nacti_souradnici();
		Bod posun = new Bod();
		Console.WriteLine(""Zadej posunutí"");
		posun.nacti_souradnici();
		bod.posunuti(posun);
		bod.vypis_souradnice();
		Console.WriteLine(bod.vypocitej_vzdalenost(0, 0));
	}
}

class Bod {
	public int x {get; set;}
	public int	y {get; set;}

	public Bod() {
		x = 0;
		y = 0;
	}

	public Bod(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public void posunuti(Bod bod) {
		this.x += bod.x;
		this.y += bod.y;
	}

	public void vypis_souradnice() {
		Console.WriteLine($""[{x}, {y}]"");
	}

	public double vypocitej_vzdalenost(int x, int y) {
		int dx = this.x - x;
		int dy = this.y - y;
		return Math.Sqrt(dx*dx + dy*dy);
	}

	public void nacti_souradnici() {
		Console.Write(""x: "");
		x = Convert.ToInt32(Console.ReadLine());
		Console.Write(""y: "");
		y = Convert.ToInt32(Console.ReadLine());
	}
}
"
CLDVZuFJ,pocet.cs,KitSaels,C#,Tuesday 30th of April 2024 11:05:57 AM CDT,"using System;
using System.Collections.Generic;

internal class Program {

	static void Main(string[] args) {
		Console.Write(""Zadej řetězec: "");
		string line = Console.ReadLine();
		string[] words = line.Split(' ');
		Console.WriteLine(words.Length);
		foreach (string word in words) {
			if (word.Length >=1) {
				Console.Write(word[0]);
				Console.Write(' ');
			}
		}
		Console.WriteLine();
		Console.WriteLine(line.ToUpper());
		Console.WriteLine(line.Length);
	}
}"
ubCu1rXx,DMVCFramework :: Renders JSON array vs JSON object,danieleteti,Delphi,Tuesday 30th of April 2024 11:03:49 AM CDT,"// This action renders an array of json objects
procedure TCustomersController.GetCustomers([MVCFromQueryString('rql','')] RQLFilter: String);
begin
  if RQLFilter.IsEmpty then
    Render<TCustomer>(TMVCActiveRecord.All<TCustomer>)
  else
    Render<TCustomer>(TMVCActiveRecord.SelectRQL<TCustomer>(RQLFilter, 1000));
end;

// This action renders a jsonobject containing a property ""data"" which contains an array of json objects
procedure TCustomersController.GetCustomers([MVCFromQueryString('rql','')] RQLFilter: String);
begin
  if RQLFilter.IsEmpty then
    Render(ObjectDict().Add('data', TMVCActiveRecord.All<TCustomer>))
  else
    Render(ObjectDict().Add('data', TMVCActiveRecord.SelectRQL<TCustomer>(RQLFilter, 1000)));
end;
"
mu4NA4Ng,Untitled,egraPA,C++,Tuesday 30th of April 2024 09:52:12 AM CDT,"#include <iostream>
#include <vector>
// #include <cstdio>
// #include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <sstream>
#include <iomanip>

using namespace std;
FILE* pipe;
class Matrix {
    protected:
        vector<vector<double>> data;
        int n;
        int m;
    public:
        Matrix() {
            n = 0;
            m = 0;
        }
        Matrix (int x, int y) {
            n = x;
            m = y;
            data.assign(n, vector<double>(m));
        }
        Matrix& operator+ (const Matrix& matrix) {
            if (matrix.m != m || matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j] + matrix.data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator- (const Matrix& matrix) {
            if (matrix.m != m || matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j] - matrix.data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator* (const Matrix& matrix) {
            if (matrix.n != m) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, matrix.m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < matrix.m; j++) {
                    for (int k = 0; k < m; k++) {
                        ans->data[i][j] += data[i][k]*matrix.data[k][j];
                    }
                }
            }
            return *ans;
        }
        Matrix& transpose() {
            Matrix *ans = new Matrix(m, n);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[j][i] = data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator| (const Matrix& matrix) {
            if (matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, matrix.m + m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j];
                }
                for (int j = m; j < matrix.m + m; j++) {
                    ans->data[i][j] = matrix.data[i][j-m];
                }
            }
            return *ans;
        }
        vector<double>& operator[] (int x) {
            if (x >= n) {
                throw runtime_error(""Error: index out of range"");
            } 
            return data[x];
        }
        friend istream& operator>> (istream &is, Matrix &matrix);
        friend ostream& operator<< (ostream &os, Matrix &matrix);
        double get(int i, int j) {
            if (i >= n || j >= m) {
                throw out_of_range(""Out of bound for get"");
            }
            return data[i][j];
        }
        bool is_square() {
            return n == m;
        }
        int get_n() {
            return n;
        }
        int get_m() {
            return m;
        }
        void normalize_diagonally() {
            for (int i = 0; i < n; i++) {
                if (data[i][i] != 0) {
                    for (int j = i + 1; j < m; j++) {
                        data[i][j] /= data[i][i];
                    }
                    data[i][i] = 1;
                }
            }
        }
        void separate() {
            // for (int i = 0; i < n; i++) {
            //     for (int j = 0; j < m - 1; j++) {
            //         // if (abs(data[i][j]) < 0.005) {
            //         //     // // cout << fixed << abs(data[i][j]) << ' ';
            //         // } else
            //         // // // cout << fixed << data[i][j] << ' ';
            //     }
            //     // cout << '\n';
            // }
            // for (int j = 0; j < n; j++) {
            //     if (abs(data[j][m - 1]) < 0.005) {
            //         // cout << fixed << abs(data[j][m - 1]) << ' ';
            //     } else
            //     // cout << fixed << data[j][m - 1] << ' ';
            // }
            // // cout << '\n';
        }
        void last() {
            // for (int j = 0; j < n; j++) {
            //     if (abs(data[j][m - 1]) < 0.005) {
            //         // cout << fixed << abs(data[j][m - 1]) << ' ';
            //     } else
            //     // cout << fixed << data[j][m - 1] << ' ';
            // }
            // // cout << '\n';
        }
        Matrix& inverse();
};

class Vector : public Matrix {
public:
    Vector(vector<double> input) : Matrix(input.size(), 1) {
        for (int i = 0 ; i < input.size(); i++) {
            data[i][0] = input[i];
        }
    }
};

class LeastSquareAproxMatrix : public Matrix {
public:
    LeastSquareAproxMatrix(int m, vector<double> input) : Matrix(input.size(), m + 1) {
        for (int i = 0; i < input.size(); i++) {
            double pow = 1;
            for (int j = 0; j <= m; j++) {
                data[i][j] = pow;
                pow *= input[i];
            }
        }
    }

};

class SquareMatrix : public Matrix {
public:
    SquareMatrix() {
        n = 0;
        m = 0;
    }
    SquareMatrix(int x) : Matrix(x, x) {};
    friend istream& operator>> (istream &is, SquareMatrix &matrix);
};

class IdentityMatrix : public SquareMatrix {
public:
    IdentityMatrix() {
        n = 0;
        m = 0;
    }
    IdentityMatrix(int x) : SquareMatrix(x) {
        for (int i = 0; i < x; i++) {
            data[i][i] = 1;
        }
    }
};
class EliminationMatrix : public IdentityMatrix {
public:
    EliminationMatrix(Matrix& matrix, int j, int i) : IdentityMatrix(matrix.get_n()) {
        data[j - 1][i - 1] = -matrix.get(j - 1, i - 1) / matrix.get(i - 1, i - 1);
    }
};

class PermutationMatrix : public IdentityMatrix {
public:
    PermutationMatrix(int x, int i, int j) : IdentityMatrix(x) {
        data[j - 1][j - 1] = 0;
        data[i - 1][i - 1] = 0; 
        data[i - 1][j - 1] = 1;
        data[j - 1][i - 1] = 1;
    }
};

istream& operator>> (istream &is, SquareMatrix& matrix) {
    is >> matrix.n;
    matrix.m = matrix.n;
    matrix.data.assign(matrix.n, vector<double>(matrix.m));
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            is >> matrix.data[i][j];
        }
    }
    return is;
}

istream& operator>> (istream &is, Matrix& matrix) {
    is >> matrix.n >> matrix.m;
    matrix.data.assign(matrix.n, vector<double>(matrix.m));
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            is >> matrix.data[i][j];
        }
    }
    return is;
}
ostream& operator<< (ostream &os, Matrix& matrix) {
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            if (abs(matrix.data[i][j]) < 0.005) {
                os << fixed << abs(matrix.data[i][j]) << ' ';
            } else
            os << fixed << matrix.data[i][j] << ' ';
        }
        os << '\n';
    }
    return os;
}


bool gaus_elimination(Matrix& a, int &step) {
    bool sign = 1;
    for (int i = 0; i < a.get_n(); i++) {
        double m = 0;
        int m_i = 0;
        for (int j = i; j < a.get_n(); j++) {
            if (abs(a.get(j, i)) > abs(m))  {
                m = a.get(j, i);
                m_i = j;
            }
        }
        if (m_i != i) {
            // // cout << fixed  << ""step #"" << step << "": permutation"" << '\n';
            PermutationMatrix p(a.get_n(), m_i + 1, i + 1);
            a = p * a;
            // a.separate();
            sign = !sign;
            step++;
        }
        for (int j = i + 1; j < a.get_n(); j++) {
            if (a.get(j, i) != 0) {
                // // cout << fixed  << ""step #"" << step << "": elimination"" << '\n';
                step++;
                EliminationMatrix e(a, j + 1, i + 1);
                a = e * a;
                // a.separate();
            }   
        }
    }
    return sign;
}

void gaus_back_elimination(Matrix& a, int &step) {
    for (int i = a.get_n() - 1; i >= 0; i--) {
        if (a.get(i, i) != 0) {
            for (int j = i - 1 ; j >= 0; j--) {
                if (a.get(j, i) != 0) {
                    step++;
                    EliminationMatrix e(a, j + 1, i + 1);
                    a = e * a;
                    a.separate();
                }
            }
        }
    }
}

Matrix& Matrix::inverse() {
    Matrix* ans = new Matrix(n, m);
    IdentityMatrix I(n);
    Matrix aug = *this | I;
    int step = 1;
    gaus_elimination(aug, step);
    gaus_back_elimination(aug, step);
    aug.normalize_diagonally();
    for (int j = 0; j < aug.get_n(); j++) {
        for (int i = aug.get_n(); i < aug.get_m(); i++) {
            (*ans)[j][i - aug.get_n()] = aug.get(j, i);
        }
    }

    return *ans;
}

class ColumnVector : public Matrix {
public:
    ColumnVector() {
        n = 0;
        m = 0;
    }
    ColumnVector(int x) {
        n = x;
        m = 1;
        data.resize(n, vector<double>(1));
    }
    friend istream& operator>> (istream &is, ColumnVector &matrix);
    friend ostream& operator<< (ostream &os, ColumnVector &matrix);
};

istream& operator>> (istream &is, ColumnVector& matrix) {
    is >> matrix.n;
    matrix.m = 1;
    matrix.data.resize(matrix.n,vector<double>(1));
    for (int i = 0; i < matrix.n; i++) {
        is >> matrix.data[i][0];
    }
    return is;
}
ostream& operator<< (ostream &os, ColumnVector& matrix) {
    for (int i = 0; i < matrix.n; i++) {
        os << matrix.data[i][0] << ' ';
    }
    os << '\n';
    return os;
}

bool is_singular( Matrix a) {
    for (int i = 0; i < a.get_n(); i++) {
        double m = 0;
        int m_i = 0;
        for (int j = i; j < a.get_n(); j++) {
            if (abs(a.get(j, i)) > abs(m))  {
                m = a.get(j, i);
                m_i = j;
            }
        }
        if (m_i != i) {
            PermutationMatrix p(a.get_n(), m_i + 1, i + 1);
            a = p * a;
        }
        for (int j = i + 1; j < a.get_n(); j++) {
            if (a.get(j, i) != 0) {
                EliminationMatrix e(a, j + 1, i + 1);
                a = e * a;
            }   
        }
    }
    for (int i = 0; i < a.get_n(); i++) {
        if (a.get(i, i) == 0) {
            return 0;
        }
    }
    return 1;
}
inline string to_s(double val) {
    stringstream ss;
    ss << fixed << setprecision(4) << val;
    return ss.str();
}
int main() {
    pipe = popen(""/usr/bin/gnuplot -persist"", ""w"");
    double min_x = 1000000;
    double max_x = -1000000;
    double min_y = 100000000;
    double max_y = -1000000;

    if (pipe == NULL) {
       return 0;
    }
    int m;
    cin >> m;
    vector<double> data_a, data_b;
    for (int i = 0; i < m; i++) {
        double a, b;
        cin >> a >> b;
        data_a.push_back(a);
        data_b.push_back(b);
        min_x = min(min_x, a);
        min_y = min(min_y, b);
        max_x= max(max_x, a);
        max_y = max(max_y, b);
    }
    int n;
    cin >> n;
    LeastSquareAproxMatrix A(n, data_a);
    cout << A;
    Vector b(data_b);
    cout << b;
    cout.precision(4);
    Matrix c = (A.transpose() * A).inverse() * A.transpose() * b;
    string s = ""f(x)="" +to_s(c.get(c.get_n() - 1, 0)) + ""*x**"" + to_string(c.get_n() - 1);
    for(int i = c.get_n() - 2; i > 0; i--) {
        s += ""+("" + to_s(c.get(i, 0)) + ""*x**"" + to_string(i) + "")"";
    }
    s += ""+("" + to_s(c.get(0, 0)) + "")"";
    fputs(s.c_str(), pipe);
    fprintf(pipe, ""\n"");
    fputs((""plot [""+ to_string(int(min_x - 1)) + "":"" + to_string(int(max_x+ 1)) + ""][""+ to_string(int (min_y - 1)) + "":"" + to_string(int (max_y + 1)) + ""] '-' using 1:2 title 'points' with points pointtype 5, f(x) title 'approximation' with lines"").c_str(), pipe);
    fprintf(pipe, ""\n"");
    for (int i = 0; i < m; i++) {
        fprintf(pipe, ""%f\t%f\n"", data_a[i], data_b[i]);
    }
    fprintf(pipe, ""%s\n"", ""e"");
    cout << s << '\n';
    cout << c;
    pclose(pipe);
}"
Ni0ZjA2V,CyberPi-buttons1,miklik,Python,Tuesday 30th of April 2024 09:51:31 AM CDT,"import cyberpi

@cyberpi.event.start
def on_start():
    cyberpi.console.println(""Start"")

@cyberpi.event.is_press('up')
def is_press_up():
    cyberpi.console.println(""UP"")

@cyberpi.event.is_press('down')
def is_press_up():
    cyberpi.console.println(""DOWN"")
    
@cyberpi.event.is_press('left')
def is_press_up():
    cyberpi.console.println(""LEFT"")

@cyberpi.event.is_press('right')
def is_press_up():
    cyberpi.console.println(""RIGHT"")

@cyberpi.event.is_press('middle')
def is_press_up():
    cyberpi.console.println(""MIDDLE"")

@cyberpi.event.is_press('a')
def is_press_up():
    cyberpi.console.println(""A"")

@cyberpi.event.is_press('b')
def is_press_up():
    cyberpi.console.println(""B"")"
TkaDBqjY,DNA 3D visualiser with GPT4.5,DenisSergeevitch,Python,Tuesday 30th of April 2024 09:44:20 AM CDT,"import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Step 1: Load Data Efficiently
def load_data(filepath):
    headers = ['rsid', 'chromosome', 'position', 'genotype']
    # Specify dtype to improve read performance
    dtypes = {'rsid': str, 'chromosome': 'category', 'position': int, 'genotype': str}
    data = pd.read_csv(filepath, delimiter='\t', names=headers, comment='#', dtype=dtypes, low_memory=False)
    print(data.head())
    return data

# Step 2: Preprocess and Encode Data
def preprocess_data(data):
    # Replace '--' with NaN directly in read_csv using na_values
    data['genotype'].replace('--', np.nan, inplace=True)
    data.dropna(subset=['genotype'], inplace=True)
    data['genotype_value'] = data['genotype'].apply(lambda x: len(x))
    
    # Convert 'chromosome' to numeric if possible, otherwise to category which is handled later in plotting
    data['chromosome'] = pd.to_numeric(data['chromosome'], errors='coerce')
    if data['chromosome'].isnull().any():
        data['chromosome'] = pd.Categorical(data['chromosome'].fillna('X')).codes
    return data

# Step 3: Optimized Plotting Function
def plot_data(data):
    fig = plt.figure(figsize=(10, 8))
    ax = fig.add_subplot(111, projection='3d')

    # Downsampling data for faster rendering; adjust the step size as needed
    step = 10  # Increase step size to speed up or decrease for more detail
    # Adjusting the color map to 'Reds' and normalizing the color range
    norm = plt.Normalize(data['genotype_value'].min(), data['genotype_value'].max())
    scatter = ax.scatter(data['chromosome'][::step], data['position'][::step], data['genotype_value'][::step],
                         c=data['genotype_value'][::step], cmap='Reds', norm=norm,
                         marker='o', alpha=0.6, s=50)

    ax.set_xlabel('Chromosome')
    ax.set_ylabel('Position')
    ax.set_zlabel('Genotype Value')
    ax.set_title('3D Visualization of DNA Genotypes')

    cbar = fig.colorbar(scatter, ax=ax, pad=0.1)
    cbar.set_label('Genotype Value')

    plt.show()

# Main function
def main():
    filepath = '/file.txt'  # Specify the actual file path
    data = load_data(filepath)
    processed_data = preprocess_data(data)
    plot_data(processed_data)

if __name__ == ""__main__"":
    main()"
G6z94zaD,Untitled,rezamalik15,MySQL,Tuesday 30th of April 2024 09:25:48 AM CDT,"CREATE TABLE `users` (
  `id` int(10) DEFAULT NULL,
  `nama` varchar(100) DEFAULT NULL,
  `tempat_lahir` varchar(200) DEFAULT NULL,
  `tanggal_lahir` date DEFAULT NULL
);

INSERT INTO `users` VALUES (16936,'Abyasa Aryani','Bengkulu','1989-05-20'),(3399,'Abyasa Farida','Tarakan','2013-10-28'),(14502,'Abyasa Firgantoro','Pematangsiantar','1975-12-19'),(11944,'Abyasa Halimah','Langsa','1973-09-29'),(836,'Abyasa Handayani, S.Ked','Tual','2019-05-15'),(1329,'Abyasa Haryanti, M.Pd','Meulaboh','1975-10-15'),(15805,'Abyasa Laksmiwati','Blitar','1989-12-11'),(6636,'Abyasa Maheswara','Sawahlunto','1989-08-21'),(14766,'Abyasa Mardhiyah','Kota Administrasi Jakarta Utara','2002-05-16'),(8867,'Abyasa Maryadi','Palopo','2008-07-09'),(3544,'Abyasa Megantara','Sungai Penuh','2000-12-30'),(16870,'Abyasa Megantara, S.E.I','Batu','2005-05-07'),(14241,'Abyasa Mustofa, S.Psi','Palu','2016-04-26'),(2262,'Abyasa Pangestu','Sawahlunto','2009-07-29'),(14129,'Abyasa Saefullah','Singkawang','1985-12-18'),(14630,'Abyasa Wibowo','Mojokerto','2020-11-23'),(4472,'Abyasa Wijaya','Banjarmasin','2009-10-07'),(1324,'Abyasa Winarno','Bogor','1980-09-30'),(2687,'Abyasa Yolanda','Cimahi','2020-09-01'),(15622,'Ade Agustina','Kotamobagu','2016-05-03'),(9810,'Ade Agustina','Tegal','1980-06-07'),(16578,'Ade Dabukke','Parepare','1970-12-03'),(16967,'Ade Dongoran','Palembang','2011-07-19'),(4277,'Ade Firgantoro','Cilegon','1973-10-12'),(15854,'Ade Firmansyah','Tidore Kepulauan','2011-10-12'),(8016,'Ade Fujiati','Samarinda','1993-09-07'),(11543,'Ade Habibi','Pekanbaru','2021-06-03'),(1583,'Ade Hardiansyah, S.I.Kom','Sungai Penuh','1997-11-29'),(2025,'Ade Hartati','Solok','2009-01-02'),(16140,'Ade Hidayat, S.IP','Bogor','2023-04-27'),(5997,'Ade Irawan','Lhokseumawe','1971-05-21'),(7719,'Ade Kurniawan','Lubuklinggau','2013-06-25');
"
B3gKt3NP,Untitled,Tkap1,C++,Tuesday 30th of April 2024 09:21:52 AM CDT,"
struct s_chunk_thread_data
{
	int state;
	s_lin_arena arena;
	s_transform* blocks[c_chunk_size][c_chunk_size];
	s_shared_circular_buffer<s_v2i, c_chunk_count * c_chunk_count> chunks_completed;
};

if(!game->chunks_generated) {
	game->chunks_generated = true;
	void* memory = malloc(MB(100));
	game->chunk_thread_data.arena = make_arena_from_memory(memory, ""thread"", MB(100));
	reset_chunks();
	generate_chunks(&game->chunk_thread_data);
}

func void reset_chunks()
{
	for(int chunk_x = 0; chunk_x < c_chunk_count; chunk_x++) {
		for(int chunk_z = 0; chunk_z < c_chunk_count; chunk_z++) {
			s_chunk* chunk = &game->chunks[chunk_x][chunk_z];
			chunk->generated = false;
			memset(chunk->blocks, 0, sizeof(b8) * c_chunk_size * c_chunk_size * c_chunk_height);
		}
	}
}


func DWORD WINAPI generate_chunks(void* param)
{
	s_chunk_thread_data* chunk_thread_data = (s_chunk_thread_data*)param;

	for(int x = 0; x < c_chunk_count * c_chunk_size; x++) {
		for(int z = 0; z < c_chunk_count * c_chunk_size; z++) {
			s_v2i chunk_index = v2i(x / 16, z / 16);
			s_chunk* chunk = &game->chunks[chunk_index.x][chunk_index.y];
			float f = fnlGetNoise2D(&game->noise, (float)x, (float)z);
			int y = (int)range_lerp(f, -1, 1, 0, c_chunk_height - 1);
			for(int i = 0; i <= y; i++) {
				chunk->blocks[x % c_chunk_size][i][z % c_chunk_size] = true;
			}
		}
	}

	for(int chunk_x = 0; chunk_x < c_chunk_count; chunk_x++) {
		for(int chunk_z = 0; chunk_z < c_chunk_count; chunk_z++) {
			int count = 0;
			s_chunk* chunk = &game->chunks[chunk_x][chunk_z];
			chunk->num_visible_blocks = count_visible_blocks_in_chunk(v2i(chunk_x, chunk_z));
			printf(""processing chunk %i, %i (%i blocks)\n"", chunk_x, chunk_z, chunk->num_visible_blocks);
			chunk_thread_data->blocks[chunk_x][chunk_z] = (s_transform*)la_get_zero(&chunk_thread_data->arena, sizeof(s_transform) * chunk->num_visible_blocks);
			for(int x = 0; x < c_chunk_size; x++) {
				for(int y = 0; y < c_chunk_height; y++) {
					for(int z = 0; z < c_chunk_size; z++) {
						int xx = x + chunk_x * c_chunk_size;
						int zz = z + chunk_z * c_chunk_size;
						if(!is_block_visible(v2i(chunk_x, chunk_z), v3i(x, y, z))) { continue; }
						s_m4 model = m4_identity();
						s_v3 pos = v3(xx, y, zz) * c_block_size;
						model = m4_multiply(model, m4_translate(pos));
						model = m4_multiply(model, m4_scale(v3(c_block_size)));
						chunk_thread_data->blocks[chunk_x][chunk_z][count].do_light = 0;
						chunk_thread_data->blocks[chunk_x][chunk_z][count].model = model;
						chunk_thread_data->blocks[chunk_x][chunk_z][count].color = v4(
							range_lerp((float)xx, 0, (float)c_chunk_size * c_chunk_count - 1, 0, 1),
							range_lerp((float)y, 0, (float)c_chunk_height - 1, 0, 1),
							range_lerp((float)zz, 0, (float)c_chunk_size * c_chunk_count - 1, 0, 1),
							1.0f
						);
						count += 1;
					}
				}
			}
			assert(count == chunk->num_visible_blocks);
			chunk_thread_data->chunks_completed.add(v2i(chunk_x, chunk_z));
		}
	}
	chunk_thread_data->state = 1;
	return 0;
}

template <typename t, int n>
void s_shared_circular_buffer<t, n>::add(t new_element)
{
	int index = InterlockedIncrement((LONG*)&write_index) - 1;
	elements[index % n] = new_element;
}"
mrqZRUt5,MO zero sum,Kambarych,C++,Tuesday 30th of April 2024 09:19:10 AM CDT,"#include <bits/stdc++.h>

using namespace std;

#define For(i, n)           for(int i = 0; i < n; ++i)
#define all(x)              (x).begin(),(x).end()
#define rall(x)             (x).rbegin(),(x).rend()
#define ls(x)               x+x+1
#define rs(x)               x+x+2
#define endl                '\n'

#define ld                  long double
#define pii                 pair<int, int>
#define vt                  vector
#define ll                  long long

#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename \
enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
#define LOCAL
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
ris << ""("" << d.first << "", "" << d.second << "")"";
}
sim dor(rge<c> d) {
*this << ""["";
for (auto it = d.b; it != d.e; ++it)
    *this << "", "" + 2 * (it == d.b) << *it;
ris << ""]"";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) "" ["" << #__VA_ARGS__ "": "" << (__VA_ARGS__) << ""] ""

template<typename T> void read(vt<T> & a) {For(i, a.size()) cin >> a[i];}
template<typename T> void read2(vt<vt<T> > & a) {For(i, a.size()) read(a[i]);}
template<typename T> void print(vt<T> & a) {For(i, a.size()) cout << a[i] << "" ""; cout << endl;}
template<typename T> void print2(vt<vt<T> > & a) {For(i, a.size()) print(a[i]);}

const int MAX = 1e9;
const int MOD = 1000000007;
const ll  INF = 1e18;
const ld  PI  = 3.14159265358979323846;

struct calculator {
    int l = 0, r = -1;
    vt<int> color;
    vt<deque<int> > mp;
    multiset<int> st;

    calculator() {}

    calculator(vt<int> _color) {
        color = _color;
        mp.resize(color.size());
    }

    void remove(int idx) {
        if (mp[color[idx]].size() > 1) {
            int v = mp[color[idx]].back() - mp[color[idx]].front();
            st.erase(st.find(v));
        }
    }

    void add(int idx) {
        if (mp[color[idx]].size() > 1) {
            int v = mp[color[idx]].back() - mp[color[idx]].front();
            st.insert(v);
        }
    }

    void add_left() {
        remove(l - 1);
        mp[color[l - 1]].push_front(l - 1);
        add(l - 1);
        l--;
    }

    void add_right() {
        remove(r + 1);
        mp[color[r + 1]].push_back(r + 1);
        add(r + 1);
        r++;
    }

    void remove_left() {
        remove(l);
        mp[color[l]].pop_front();
        add(l);
        l++;
    }

    void remove_right() {
        remove(r);
        mp[color[r]].pop_back();
        add(r);
        r--;
    }

    int get_ans() {
        if (st.empty()) return 0;
        return *st.rbegin();
    }
};

int block_size = 500;

struct MO {
    calculator c;

    MO () {}

    MO (calculator c) : c(c) {}

    struct Query {
        int l, r, idx;
        bool operator<(Query other) const {
            return make_pair(l / block_size, r) <
                make_pair(other.l / block_size, other.r);
        }
    };

    vt<int> solve(vt<Query> queries) {
        vt<int> answers(queries.size());
        sort(queries.begin(), queries.end());

        // invariant: data structure will always reflect the range [cur_l, cur_r]
        for (Query q : queries) {
            while (c.l > q.l) c.add_left();
            while (c.r < q.r) c.add_right();
            while (c.l < q.l) c.remove_left();
            while (c.r > q.r) c.remove_right();
            answers[q.idx] = c.get_ans();
        }

        return answers;
    }
};

void solve() {
    int n, q; cin >> n >> q;
    vt<int> a(n); read(a);
    vt<ll> pref_sum(n + 1);
    map<ll, int> mp;
    mp[0] = 1;
    For(i, n) {
        pref_sum[i + 1] += pref_sum[i] + a[i];
        mp[pref_sum[i + 1]] = 1;
    }
    int cur = 0;
    for (auto p : mp) {
        mp[p.first] = cur++;
    }
    vt<int> color(n + 1);
    For(i, n + 1) {
        color[i] = mp[pref_sum[i]];
    }
    calculator c = calculator(color);
    MO mo = MO(c);
    vt<MO::Query> queries;
    For(i, q) {
        int l, r; cin >> l >> r; l--;
        queries.push_back(MO::Query{l, r, i});
    }

    vt<int> ans = mo.solve(queries);
    For(i, q) {
        cout << ans[i] << endl;
    }
}

// THE SOLUTION IS ALWAYS SIMPLE
// THE CODE IS ALWAYS SHORT

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifdef DEBUG
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    int T = 1;
    For(t, T) solve();
    return 0;
}"
QCk350yU,News April30 24,Newscaster_Ned,Email,Tuesday 30th of April 2024 08:41:40 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

N‎e‎w‎s‎.‎

K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎'‎ ‎N‎i‎e‎c‎e‎ ‎U‎s‎e‎s‎ ‎B‎r‎o‎a‎d‎w‎a‎y‎'‎s‎ ‎'‎C‎a‎b‎a‎r‎e‎t‎'‎ ‎t‎o‎ ‎P‎u‎s‎h‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎
A‎n‎t‎o‎n‎y‎ ‎B‎l‎i‎n‎k‎e‎n‎ ‎M‎e‎e‎t‎s‎ ‎S‎a‎u‎d‎i‎ ‎C‎r‎o‎w‎n‎ ‎P‎r‎i‎n‎c‎e‎,‎ ‎D‎e‎m‎a‎n‎d‎i‎n‎g‎ ‎C‎e‎a‎s‎e‎f‎i‎r‎e‎
F‎l‎o‎a‎t‎i‎n‎g‎ ‎P‎i‎e‎r‎ ‎U‎.‎S‎.‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎i‎s‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎G‎a‎z‎a‎ ‎t‎o‎ ‎C‎o‎s‎t‎ ‎$‎3‎2‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎a‎s‎ ‎P‎r‎i‎c‎e‎s‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎T‎r‎a‎p‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎S‎u‎r‎g‎i‎n‎g‎ ‎1‎8‎%‎ ‎i‎n‎ ‎4‎ ‎M‎o‎n‎t‎h‎s‎
O‎p‎e‎n‎A‎I‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎D‎e‎a‎l‎ ‎t‎o‎ ‎U‎s‎e‎ ‎F‎i‎n‎a‎n‎c‎i‎a‎l‎ ‎T‎i‎m‎e‎s‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎m‎ ‎t‎o‎ ‎T‎r‎a‎i‎n‎ ‎A‎I‎ ‎M‎o‎d‎e‎l‎s‎
B‎e‎l‎t‎ ‎a‎n‎d‎ ‎R‎o‎a‎d‎ ‎H‎u‎n‎g‎a‎r‎y‎ ‎P‎r‎e‎p‎a‎r‎e‎s‎ ‎W‎a‎r‎m‎ ‎W‎e‎l‎c‎o‎m‎e‎ ‎f‎o‎r‎ ‎X‎i‎ ‎J‎i‎n‎p‎i‎n‎g‎'‎s‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎T‎o‎u‎r‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎R‎e‎c‎o‎r‎d‎s‎ ‎T‎r‎i‎a‎l‎ ‎R‎e‎s‎u‎m‎e‎s‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎
B‎r‎i‎t‎i‎s‎h‎ ‎N‎H‎S‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎ ‎t‎o‎ ‎D‎e‎c‎l‎a‎r‎e‎ ‎'‎S‎e‎x‎ ‎i‎s‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎'‎
D‎r‎.‎ ‎M‎c‎C‎u‎l‎l‎o‎u‎g‎h‎ ‎o‎n‎ ‎B‎i‎r‎d‎ ‎F‎l‎u‎:‎ ‎‘‎a‎ ‎P‎e‎r‎f‎e‎c‎t‎ ‎S‎t‎o‎r‎m‎ ‎i‎s‎ ‎B‎r‎e‎w‎i‎n‎g‎'‎
A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎T‎a‎k‎e‎ ‎O‎v‎e‎r‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎a‎t‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎
H‎u‎n‎t‎e‎r‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎t‎o‎ ‎S‎u‎e‎ ‎F‎o‎x‎ ‎N‎e‎w‎s‎ ‎f‎o‎r‎ ‎P‎u‎b‎l‎i‎s‎h‎i‎n‎g‎ ‎‘‎I‎n‎t‎i‎m‎a‎t‎e‎’‎ ‎I‎m‎a‎g‎e‎s‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
C‎o‎l‎u‎m‎b‎i‎a‎ ‎C‎h‎a‎o‎s‎

A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎S‎e‎i‎z‎e‎ ‎A‎d‎m‎i‎n‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎

G‎l‎a‎s‎s‎ ‎D‎o‎o‎r‎s‎ ‎S‎m‎a‎s‎h‎e‎d‎

‘‎W‎e‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎R‎e‎s‎t‎’‎
N‎E‎W‎ ‎Y‎O‎R‎K‎,‎ ‎N‎E‎W‎ ‎Y‎O‎R‎K‎ ‎-‎ ‎A‎P‎R‎I‎L‎ ‎2‎9‎:‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎/‎d‎e‎m‎o‎n‎s‎t‎r‎a‎t‎o‎r‎s‎ ‎l‎o‎c‎k‎ ‎a‎r‎m‎s‎ ‎t‎o‎ ‎g‎u‎a‎r‎d‎ ‎p‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎a‎u‎t‎h‎o‎r‎i‎
A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎i‎n‎v‎o‎l‎v‎e‎d‎ ‎i‎n‎ ‎a‎n‎ ‎e‎n‎c‎a‎m‎p‎m‎e‎n‎t‎ ‎a‎t‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎t‎o‎o‎k‎ ‎o‎v‎e‎r‎ ‎a‎n‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎e‎a‎r‎l‎y‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎m‎o‎r‎n‎i‎n‎g‎.‎

Z‎e‎l‎e‎n‎s‎k‎y‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎U‎.‎S‎.‎ ‎a‎n‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎‘‎W‎o‎r‎k‎i‎n‎g‎’‎ ‎o‎n‎ ‎S‎c‎h‎e‎m‎e‎ ‎f‎o‎r‎ ‎1‎0‎ ‎Y‎e‎a‎r‎s‎ ‎o‎f‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎A‎i‎d‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎1‎0‎-‎Y‎e‎a‎r‎ ‎P‎l‎a‎n‎ ‎f‎o‎r‎ ‎U‎.‎S‎.‎ ‎t‎o‎ ‎S‎e‎n‎d‎ ‎A‎i‎d‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎
4‎,‎5‎2‎9‎
N‎o‎l‎t‎e‎:‎ ‎K‎r‎i‎s‎t‎i‎ ‎N‎o‎e‎m‎ ‎S‎h‎o‎t‎ ‎H‎e‎r‎ ‎D‎o‎g‎ ‎a‎n‎d‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎F‎u‎t‎u‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎H‎e‎a‎d‎
N‎o‎l‎t‎e‎:‎ ‎K‎r‎i‎s‎t‎i‎ ‎N‎o‎e‎m‎ ‎S‎h‎o‎t‎ ‎H‎e‎r‎ ‎D‎o‎g‎ ‎a‎n‎d‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎F‎u‎t‎u‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎H‎e‎a‎d‎
4‎,‎9‎6‎4‎
C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎B‎e‎g‎i‎n‎s‎ ‎S‎u‎s‎p‎e‎n‎d‎i‎n‎g‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎A‎s‎k‎i‎n‎g‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎t‎o‎ ‎L‎e‎a‎v‎e‎ ‎E‎n‎c‎a‎m‎p‎m‎e‎n‎t‎
C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎B‎e‎g‎i‎n‎s‎ ‎S‎u‎s‎p‎e‎n‎d‎i‎n‎g‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎
1‎,‎7‎9‎0‎
C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎o‎n‎ ‎e‎d‎g‎e‎ ‎a‎s‎ ‎t‎a‎l‎k‎s‎ ‎c‎o‎l‎l‎a‎p‎s‎e‎ ‎o‎v‎e‎r‎ ‎G‎a‎z‎a‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎
C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎o‎n‎ ‎e‎d‎g‎e‎ ‎a‎s‎ ‎t‎a‎l‎k‎s‎ ‎c‎o‎l‎l‎a‎p‎s‎e‎ ‎o‎v‎e‎r‎ ‎G‎a‎z‎a‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎
4‎,‎6‎1‎5‎
J‎a‎m‎e‎s‎ ‎C‎a‎r‎v‎i‎l‎l‎e‎ ‎L‎a‎s‎h‎e‎s‎ ‎O‎u‎t‎ ‎a‎t‎ ‎Y‎o‎u‎n‎g‎ ‎V‎o‎t‎e‎r‎s‎ ‎T‎u‎r‎n‎i‎n‎g‎ ‎o‎n‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎:‎ ‎‘‎F‎*‎c‎k‎ ‎Y‎o‎u‎!‎’‎
C‎a‎r‎v‎i‎l‎l‎e‎ ‎L‎a‎s‎h‎e‎s‎ ‎O‎u‎t‎ ‎a‎t‎ ‎Y‎o‎u‎n‎g‎ ‎V‎o‎t‎e‎r‎s‎ ‎T‎u‎r‎n‎i‎n‎g‎ ‎o‎n‎ ‎B‎i‎d‎e‎n‎:‎ ‎'‎F‎*‎*‎*‎ ‎Y‎o‎u‎!‎'‎
3‎,‎5‎0‎0‎
F‎o‎r‎d‎ ‎L‎o‎s‎e‎s‎ ‎$‎1‎.‎3‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎o‎n‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎V‎e‎h‎i‎c‎l‎e‎s‎ ‎i‎n‎ ‎F‎i‎r‎s‎t‎ ‎Q‎u‎a‎r‎t‎e‎r‎ ‎o‎f‎ ‎2‎0‎2‎4‎,‎ ‎D‎e‎l‎a‎y‎s‎ ‎P‎l‎a‎n‎s‎ ‎t‎o‎ ‎M‎a‎k‎e‎ ‎M‎o‎r‎e‎
F‎o‎r‎d‎ ‎L‎o‎s‎e‎s‎ ‎$‎1‎.‎3‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎o‎n‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎V‎e‎h‎i‎c‎l‎e‎s‎ ‎i‎n‎ ‎F‎i‎r‎s‎t‎ ‎Q‎u‎a‎r‎t‎e‎r‎ ‎o‎f‎ ‎2‎0‎2‎4‎
6‎,‎1‎8‎5‎
A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎S‎e‎i‎z‎e‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎a‎t‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎
A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎T‎a‎k‎e‎ ‎O‎v‎e‎r‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎a‎t‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎
1‎,‎9‎1‎9‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎k‎e‎s‎ ‎B‎i‎g‎g‎e‎s‎t‎ ‎L‎e‎a‎d‎ ‎E‎v‎e‎r‎ ‎o‎v‎e‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎C‎N‎N‎ ‎P‎o‎l‎l‎,‎ ‎T‎h‎i‎r‎d‎-‎P‎a‎r‎t‎y‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎E‎x‎p‎a‎n‎d‎ ‎T‎r‎u‎m‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎k‎e‎s‎ ‎B‎i‎g‎g‎e‎s‎t‎ ‎L‎e‎a‎d‎ ‎E‎v‎e‎r‎ ‎O‎v‎e‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎C‎N‎N‎ ‎P‎o‎l‎l‎
9‎,‎1‎0‎7‎
A‎l‎l‎e‎g‎e‎d‎ ‎L‎o‎n‎d‎o‎n‎ ‎S‎w‎o‎r‎d‎m‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎V‎e‎h‎i‎c‎l‎e‎-‎R‎a‎m‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎R‎a‎m‎p‎a‎g‎e‎,‎ ‎F‎i‎v‎e‎ ‎I‎n‎j‎u‎r‎e‎d‎
A‎l‎l‎e‎g‎e‎d‎ ‎L‎o‎n‎d‎o‎n‎ ‎S‎w‎o‎r‎d‎m‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎V‎e‎h‎i‎c‎l‎e‎-‎R‎a‎m‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎
1‎6‎6‎
J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎‘‎F‎u‎l‎l‎y‎’‎ ‎i‎n‎ ‎F‎a‎v‎o‎r‎ ‎o‎f‎ ‎R‎e‎s‎e‎t‎t‎l‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎i‎n‎ ‎U‎.‎S‎.‎
J‎a‎m‎a‎a‎l‎ ‎B‎o‎w‎m‎a‎n‎ ‎'‎F‎u‎l‎l‎y‎'‎ ‎i‎n‎ ‎F‎a‎v‎o‎r‎ ‎o‎f‎ ‎R‎e‎s‎e‎t‎t‎l‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎i‎n‎ ‎U‎.‎S‎.‎

G‎u‎i‎l‎t‎y‎ ‎V‎e‎r‎d‎i‎c‎t‎ ‎R‎e‎a‎c‎h‎e‎d‎ ‎f‎o‎r‎ ‎T‎r‎i‎o‎ ‎o‎f‎ ‎C‎o‎o‎n‎s‎ ‎W‎h‎o‎ ‎M‎u‎r‎d‎e‎r‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎N‎e‎w‎s‎p‎a‎p‎e‎r‎ ‎S‎a‎l‎e‎s‎m‎a‎n‎ ‎i‎n‎ ‎B‎a‎i‎n‎b‎r‎i‎d‎g‎e‎.‎

T‎h‎e‎ ‎m‎o‎t‎i‎v‎e‎ ‎w‎a‎s‎ ‎t‎o‎ ‎c‎o‎m‎m‎i‎t‎ ‎a‎ ‎r‎o‎b‎b‎e‎r‎y‎.‎ ‎W‎h‎o‎ ‎t‎h‎e‎ ‎f‎u‎c‎k‎ ‎w‎a‎n‎t‎s‎ ‎t‎o‎ ‎s‎t‎e‎a‎l‎ ‎n‎e‎w‎s‎p‎a‎p‎e‎r‎s‎?‎


J‎u‎n‎g‎l‎e‎ ‎B‎u‎n‎n‎y‎ ‎S‎h‎o‎o‎t‎s‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎o‎n‎ ‎F‎r‎i‎e‎n‎d‎l‎y‎ ‎R‎o‎a‎d‎.‎


N‎e‎g‎r‎o‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎s‎ ‎W‎a‎l‎g‎r‎e‎e‎n‎s‎ ‎M‎a‎n‎a‎g‎e‎r‎ ‎i‎n‎ ‎R‎a‎l‎e‎i‎g‎h‎.‎


G‎r‎o‎u‎p‎ ‎o‎f‎ ‎W‎h‎i‎t‎e‎ ‎P‎e‎o‎p‎l‎e‎ ‎V‎i‎s‎i‎t‎i‎n‎g‎ ‎N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎A‎t‎t‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎P‎a‎c‎k‎ ‎o‎f‎ ‎C‎h‎i‎m‎p‎s‎ ‎W‎h‎o‎ ‎G‎o‎t‎ ‎o‎f‎f‎ ‎P‎a‎r‎t‎y‎ ‎B‎u‎s‎.‎


B‎l‎o‎a‎t‎e‎d‎ ‎G‎o‎r‎i‎l‎l‎a‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎W‎h‎o‎ ‎G‎o‎t‎ ‎R‎e‎s‎t‎r‎a‎i‎n‎i‎n‎g‎ ‎O‎r‎d‎e‎r‎ ‎f‎r‎o‎m‎ ‎H‎i‎m‎ ‎B‎e‎f‎o‎r‎e‎ ‎E‎n‎d‎i‎n‎g‎ ‎H‎i‎m‎s‎e‎l‎f‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎R‎a‎p‎e‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎B‎o‎i‎s‎e‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎T‎e‎e‎n‎a‎p‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎o‎n‎ ‎M‎T‎A‎ ‎B‎u‎s‎ ‎i‎n‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎.‎


N‎e‎g‎r‎o‎ ‎w‎i‎t‎h‎ ‎G‎u‎i‎d‎o‎ ‎L‎i‎p‎s‎ ‎G‎e‎t‎s‎ ‎1‎2‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎i‎m‎p‎i‎n‎g‎ ‎S‎i‎x‎t‎h‎ ‎G‎r‎a‎d‎e‎r‎ ‎i‎n‎ ‎B‎r‎o‎o‎k‎l‎y‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎7‎1‎°‎
1‎7‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎ ‎|‎ ‎D‎a‎y‎
8‎5‎°‎
1‎7‎%‎
S‎E‎
1‎2‎
 ‎
m‎p‎h‎
G‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎8‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎4‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎7‎ ‎p‎m‎
T‎u‎e‎ ‎3‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎1‎°‎
2‎4‎%‎
S‎E‎
1‎1‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎,‎ ‎t‎h‎e‎n‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎7‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎5‎4‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎0‎8‎ ‎p‎m‎
W‎e‎d‎ ‎0‎1‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎7‎2‎°‎
5‎9‎%‎
S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎7‎2‎°‎
3‎9‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎7‎0‎°‎
4‎3‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎4‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎7‎1‎°‎
3‎7‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎7‎2‎°‎
3‎0‎%‎
S‎S‎E‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎7‎2‎°‎
2‎3‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎7‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎2‎°‎
/‎7‎1‎°‎
8‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎4‎°‎
/‎7‎3‎°‎
9‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎4‎°‎
/‎7‎4‎°‎
1‎5‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎4‎°‎
/‎7‎2‎°‎
2‎4‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎3‎°‎
/‎6‎8‎°‎
2‎2‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎9‎°‎
/‎6‎6‎°‎
3‎4‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎8‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎8‎°‎
4‎0‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎H‎e‎m‎o‎g‎l‎o‎b‎e‎n‎.‎ ‎☢️

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎e‎x‎
S‎e‎x‎ ‎i‎s‎ ‎a‎ ‎b‎o‎d‎i‎l‎y‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎p‎u‎r‎p‎o‎s‎e‎ ‎o‎f‎ ‎p‎e‎r‎p‎e‎t‎u‎a‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎u‎r‎v‎i‎v‎a‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎(‎o‎r‎ ‎d‎i‎s‎c‎o‎n‎t‎i‎n‎u‎i‎n‎g‎,‎ ‎i‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎a‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎)‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎w‎h‎y‎ ‎i‎t‎ ‎f‎e‎e‎l‎s‎ ‎g‎o‎o‎d‎ ‎(‎e‎x‎c‎e‎p‎t‎ ‎i‎f‎ ‎y‎o‎u‎ ‎h‎a‎p‎p‎e‎n‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎c‎i‎r‎c‎u‎m‎r‎a‎p‎e‎d‎)‎.‎ ‎I‎n‎ ‎i‎t‎s‎ ‎s‎u‎p‎e‎r‎f‎i‎c‎i‎a‎l‎ ‎f‎o‎r‎m‎,‎ ‎s‎e‎x‎ ‎i‎s‎ ‎a‎n‎ ‎a‎c‎t‎ ‎o‎f‎ ‎p‎l‎e‎a‎s‎u‎r‎e‎ ‎a‎n‎d‎ ‎l‎o‎v‎e‎ ‎a‎n‎d‎ ‎c‎a‎n‎ ‎o‎c‎c‎u‎r‎ ‎i‎n‎ ‎a‎ ‎v‎a‎r‎i‎e‎t‎y‎ ‎o‎f‎ ‎m‎o‎d‎u‎s‎ ‎o‎p‎e‎r‎a‎n‎d‎i‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎I‎R‎L‎ ‎i‎n‎t‎e‎r‎c‎o‎u‎r‎s‎e‎,‎ ‎I‎n‎t‎e‎r‎n‎e‎t‎s‎ ‎s‎e‎x‎,‎ ‎a‎n‎d‎ ‎p‎h‎o‎n‎e‎ ‎s‎e‎x‎ ‎(‎f‎r‎o‎m‎ ‎f‎a‎p‎p‎i‎n‎g‎ ‎t‎o‎ ‎""‎d‎i‎r‎t‎y‎ ‎t‎a‎l‎k‎""‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎o‎v‎e‎d‎ ‎o‎n‎e‎ ‎t‎o‎ ‎i‎n‎s‎e‎r‎t‎i‎n‎g‎ ‎a‎n‎ ‎i‎P‎h‎o‎n‎e‎ ‎s‎e‎t‎ ‎t‎o‎ ‎""‎v‎i‎b‎r‎a‎t‎e‎""‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎a‎n‎u‎s‎ ‎o‎r‎ ‎v‎a‎g‎i‎n‎a‎ ‎a‎n‎d‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎i‎t‎ ‎r‎e‎p‎e‎a‎t‎e‎d‎l‎y‎ ‎o‎n‎ ‎r‎e‎d‎i‎a‎l‎)‎.‎ ‎T‎h‎i‎n‎g‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎c‎h‎e‎m‎i‎s‎t‎r‎y‎,‎ ‎b‎e‎e‎r‎,‎ ‎c‎h‎l‎o‎r‎o‎f‎o‎r‎m‎ ‎a‎n‎d‎ ‎s‎e‎x‎ ‎t‎o‎y‎s‎ ‎c‎a‎n‎ ‎b‎e‎ ‎u‎s‎e‎d‎ ‎t‎o‎ ‎e‎n‎h‎a‎n‎c‎e‎ ‎t‎h‎e‎ ‎s‎e‎x‎u‎a‎l‎ ‎e‎x‎p‎e‎r‎i‎e‎n‎c‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎p‎a‎r‎t‎i‎e‎s‎ ‎i‎n‎v‎o‎l‎v‎e‎d‎.‎


(‎(‎ ‎Y‎o‎u‎'‎r‎e‎ ‎N‎e‎v‎e‎r‎ ‎G‎o‎i‎n‎g‎ ‎T‎o‎ ‎G‎e‎t‎ ‎I‎t‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎e‎l‎l‎é‎a‎s‎ ‎e‎t‎ ‎M‎é‎l‎i‎s‎a‎n‎d‎e‎ ‎i‎s‎ ‎a‎n‎ ‎o‎p‎e‎r‎a‎ ‎i‎n‎ ‎f‎i‎v‎e‎ ‎a‎c‎t‎s‎ ‎w‎i‎t‎h‎ ‎m‎u‎s‎i‎c‎ ‎b‎y‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎c‎o‎m‎p‎o‎s‎e‎r‎ ‎C‎l‎a‎u‎d‎e‎ ‎D‎e‎b‎u‎s‎s‎y‎.‎ ‎T‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎-‎l‎a‎n‎g‎u‎a‎g‎e‎ ‎l‎i‎b‎r‎e‎t‎t‎o‎ ‎w‎a‎s‎ ‎a‎d‎a‎p‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎M‎a‎u‎r‎i‎c‎e‎ ‎M‎a‎e‎t‎e‎r‎l‎i‎n‎c‎k‎'‎s‎ ‎s‎y‎m‎b‎o‎l‎i‎s‎t‎ ‎p‎l‎a‎y‎ ‎P‎e‎l‎l‎é‎a‎s‎ ‎a‎n‎d‎ ‎M‎é‎l‎i‎s‎a‎n‎d‎e‎.‎ ‎T‎h‎e‎ ‎p‎l‎o‎t‎ ‎c‎o‎n‎c‎e‎r‎n‎s‎ ‎a‎ ‎l‎o‎v‎e‎ ‎t‎r‎i‎a‎n‎g‎l‎e‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎P‎r‎i‎n‎c‎e‎ ‎G‎o‎l‎a‎u‎d‎,‎ ‎M‎é‎l‎i‎s‎a‎n‎d‎e‎ ‎(‎a‎ ‎m‎y‎s‎t‎e‎r‎i‎o‎u‎s‎ ‎y‎o‎u‎n‎g‎ ‎w‎o‎m‎a‎n‎ ‎h‎e‎ ‎h‎a‎d‎ ‎f‎o‎u‎n‎d‎ ‎l‎o‎s‎t‎ ‎i‎n‎ ‎a‎ ‎f‎o‎r‎e‎s‎t‎)‎,‎ ‎a‎n‎d‎ ‎G‎o‎l‎a‎u‎d‎'‎s‎ ‎y‎o‎u‎n‎g‎e‎r‎ ‎h‎a‎l‎f‎-‎b‎r‎o‎t‎h‎e‎r‎ ‎P‎e‎l‎l‎é‎a‎s‎.‎ ‎T‎h‎e‎ ‎o‎n‎l‎y‎ ‎o‎p‎e‎r‎a‎ ‎D‎e‎b‎u‎s‎s‎y‎ ‎e‎v‎e‎r‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎d‎,‎ ‎P‎e‎l‎l‎é‎a‎s‎ ‎e‎t‎ ‎M‎é‎l‎i‎s‎a‎n‎d‎e‎ ‎p‎r‎e‎m‎i‎e‎r‎e‎d‎ ‎o‎n‎ ‎3‎0‎ ‎A‎p‎r‎i‎l‎ ‎1‎9‎0‎2‎ ‎a‎t‎ ‎t‎h‎e‎ ‎S‎a‎l‎l‎e‎ ‎F‎a‎v‎a‎r‎t‎ ‎i‎n‎ ‎P‎a‎r‎i‎s‎,‎ ‎p‎e‎r‎f‎o‎r‎m‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎O‎p‎é‎r‎a‎-‎C‎o‎m‎i‎q‎u‎e‎,‎ ‎w‎i‎t‎h‎ ‎J‎e‎a‎n‎ ‎P‎é‎r‎i‎e‎r‎ ‎a‎s‎ ‎P‎e‎l‎l‎é‎a‎s‎ ‎a‎n‎d‎ ‎M‎a‎r‎y‎ ‎G‎a‎r‎d‎e‎n‎ ‎a‎s‎ ‎M‎é‎l‎i‎s‎a‎n‎d‎e‎.‎ ‎T‎h‎e‎ ‎p‎r‎e‎m‎i‎e‎r‎e‎ ‎w‎a‎s‎ ‎c‎o‎n‎d‎u‎c‎t‎e‎d‎ ‎b‎y‎ ‎A‎n‎d‎r‎é‎ ‎M‎e‎s‎s‎a‎g‎e‎r‎,‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎i‎n‎s‎t‎r‎u‎m‎e‎n‎t‎a‎l‎ ‎i‎n‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎O‎p‎é‎r‎a‎-‎C‎o‎m‎i‎q‎u‎e‎ ‎t‎o‎ ‎s‎t‎a‎g‎e‎ ‎t‎h‎e‎ ‎w‎o‎r‎k‎.‎ ‎T‎h‎i‎s‎ ‎p‎o‎s‎t‎e‎r‎ ‎b‎y‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎a‎i‎n‎t‎e‎r‎ ‎G‎e‎o‎r‎g‎e‎s‎ ‎R‎o‎c‎h‎e‎g‎r‎o‎s‎s‎e‎ ‎w‎a‎s‎ ‎p‎r‎o‎d‎u‎c‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎p‎r‎e‎m‎i‎e‎r‎e‎.‎

P‎o‎s‎t‎e‎r‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎G‎e‎o‎r‎g‎e‎s‎ ‎R‎o‎c‎h‎e‎g‎r‎o‎s‎s‎e‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎ ‎j‎u‎s‎t‎ ‎s‎u‎r‎v‎i‎v‎e‎d‎ ‎a‎ ‎r‎u‎n‎ ‎i‎n‎ ‎w‎i‎t‎h‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎ ‎a‎f‎t‎e‎r‎ ‎n‎o‎t‎ ‎s‎e‎e‎i‎n‎g‎ ‎f‎o‎r‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎m‎o‎n‎t‎h‎s‎.‎ ‎C‎a‎p‎t‎a‎i‎n‎ ‎C‎r‎u‎n‎c‎h‎'‎s‎ ‎s‎h‎i‎p‎ ‎c‎a‎p‎s‎i‎z‎e‎d‎,‎ ‎a‎n‎d‎ ‎I‎ ‎h‎a‎d‎ ‎t‎o‎ ‎f‎l‎o‎a‎t‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎s‎h‎o‎r‎e‎ ‎o‎n‎ ‎a‎ ‎l‎i‎f‎e‎b‎o‎a‎t‎.‎ ‎A‎s‎ ‎I‎ ‎h‎e‎a‎d‎e‎d‎ ‎b‎a‎c‎k‎,‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎p‎e‎n‎i‎s‎ ‎a‎p‎p‎e‎a‎r‎e‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎n‎o‎w‎h‎e‎r‎e‎ ‎a‎n‎d‎ ‎b‎e‎g‎a‎n‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎h‎i‎s‎ ‎i‎n‎f‎a‎m‎o‎u‎s‎ ‎r‎a‎i‎n‎b‎o‎w‎ ‎g‎u‎n‎ ‎a‎t‎ ‎m‎e‎.‎ ‎I‎ ‎n‎a‎r‎r‎o‎w‎l‎y‎ ‎d‎o‎d‎g‎e‎d‎ ‎t‎h‎e‎ ‎s‎h‎o‎t‎s‎,‎ ‎a‎n‎d‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎i‎t‎ ‎b‎a‎c‎k‎ ‎h‎o‎m‎e‎.‎"
tTgbXqNR,mCLON_ini,xdesig,Arduino,Tuesday 30th of April 2024 08:39:43 AM CDT,"//Zoador
#define zoador 8
//Pulsador
#define pulsador A7
//sensor ultrason
#define USONPIN A3
// motores
#define ML 7
#define PWM_L 6
#define MR 4
#define PWM_R 5

unsigned long distancia;
int velocidade;
bool estado = 0;

void setup() {
  Serial.begin(9600);
  pinMode(ML, OUTPUT);
  pinMode(PWM_L, OUTPUT);
  pinMode(MR, OUTPUT);
  pinMode(PWM_R, OUTPUT);
  pinMode(pulsador, INPUT);
  pinMode(zoador, OUTPUT);

  Serial.println(""Pulsa para comenzar"");
}

void loop() {

  if (analogRead(pulsador) < 100) {
    Beep();
    estado = !estado;
  }
  if (estado == 0) {
    velocidade = 0;
  } else {
    velocidade = 100;
  }
  caminnar();
}

void caminnar() {
  digitalWrite(ML = 0);
  analogWrite(PWM_L, velocidade);
  digitalWrite(MR = 1);
  analogWrite(PWM_R, velocidade);
}

void Beep() {
  tone(zoador, 2500);
  delay(250);
  noTone(zoador);
}

void mideDist() {
  pinMode(USONPIN, OUTPUT);
  digitalWrite(USONPIN, LOW);
  delayMicroseconds(2);
  digitalWrite(USONPIN, HIGH);
  delayMicroseconds(20);
  digitalWrite(USONPIN, LOW);
  pinMode(USONPIN, INPUT);
  distancia = pulseIn(USONPIN, HIGH, 26000);
  distancia = distancia / 56;
}"
a9g96qkw,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Tuesday 30th of April 2024 08:19:39 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 46, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 228, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 64, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1194, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 578, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
YB2LBU3M,snowy robo manual,coinwalk,JavaScript,Tuesday 30th of April 2024 08:09:11 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var dividedby = 10000;
var rift = (dividedby/25);
var monkey = Number((olsenest/dividedby).toFixed(8));
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*200);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var chickendinner = (olsenest*24);
var belance = olsenest;
var solvert = olsenest;
var silvery = olsenest;
var bob = false;
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((((belance-(solvert-hundreds))-(bolux*2))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
    solvert = parseFloat(belance);
}
if (((belance-(bolux*rift))<=0)&&(belance>=(silvery+tens))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
    solvert = parseFloat(belance);
}
if (belance>silvery){
silvery= parseFloat(belance);
}
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();
"
xN9pDbse,snowybot 30/4/2024 @10:50pm,coinwalk,JavaScript,Tuesday 30th of April 2024 07:50:55 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(8));
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*200);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var belance = olsenest;
var solvert = olsenest;
var silvery = olsenest;
var bob = false;
var lumps = ((Math.floor(olsenest/tens))*tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
lumps = ((Math.floor(belance/tens))*tens);
if ((belance>(olsen-dust))&&(belance<(olsen+dust))){
bob = true;
}
if (belance<(olsen-dust)){
bob = false;
}
if (belance>(olsen+dust)){
bob = false;
}
if ((belance>(lumps+sevens))&&(belance<(lumps+eights))&&(!bob)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((((belance-(solvert-hundreds))-(bolux*2))<=0)&&(belance<(lumps+sevens))){
    bolux = monkey;
    olsen = 0;
    solvert = parseFloat(belance);
}
if (((belance-(bolux*40))<=0)&&(belance>=(silvery+tens))&&(belance<(lumps+sevens))){
    bolux = monkey;
    olsen = 0;
    silvery = parseFloat(belance);
    solvert = parseFloat(belance);
}
if (belance>silvery){
silvery= parseFloat(belance);
}
if (belance>=1440){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();
"
