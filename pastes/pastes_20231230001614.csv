id,title,username,language,date,content
ivwBYTA2,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Friday 29th of December 2023 05:50:17 PM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_449879.pdf
 
Working as of
29 December 2023

584994"
ppjKY43i,prototyp.ps1,SuperSilverainox,PowerShell,Friday 29th of December 2023 05:35:41 PM CDT,"Add-Type -AssemblyName PresentationFramework

function Show-Notification {
    param (
        [string]$Title,
        [string]$Message
    )

    [System.Windows.MessageBox]::Show($Message, $Title)
}

# Mo≈ºesz dostosowaƒá tytu≈Ç i wiadomo≈õƒá powiadomienia
$notificationTitle = ""Informacja""
$notificationMessage = ""Witamy w systemie. Pamiƒôtaj o przestrzeganiu zasad bezpiecze≈Ñstwa.""

Show-Notification -Title $notificationTitle -Message $notificationMessage
"
3BjzkMDK,donbass,Zvezdochkin,HTML,Friday 29th of December 2023 05:25:08 PM CDT,"<align=""center"">
<size=42><color=#fcff03>Kyle's project</color> <b>/</b> <color=#c262ff>–î–æ–Ω–±–∞—Å—Å</color></size>
<b><size=16><color=#FB9800>–ù–æ–Ω–†–ü</color> —Å–µ—Ä–≤–µ—Ä —Å –Ω–µ–±–æ–ª—å—à–∏–º —Å–≤–æ–¥–æ–º –ø—Ä–∞–≤–∏–ª –∏ –Ω–∞–ª–∏—á–∏–µ–º –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScFw-V2QxXXvjjhXeuwf7it-IAJTaBIiAKq_s-9yHELJE-Wrg/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>

<align=""left"">
<color=#FF4500><b>–°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤:</b></color>
 ‚Ä¢ –°—Ç–∞—Ä–∞—è –æ–∑–≤—É—á–∫–∞ <color=#2297E6><b>CASSIE</b></color>
 ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ó–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
 ‚Ä¢ –í—Ç–æ—Ä–∞—è –ó–æ–Ω–∞ –ø–æ–±–µ–≥–∞
 ‚Ä¢ –ü–æ–¥–∫–ª–∞—Å—Å—ã <color=#FFA500><b>Class-D</b></color> <size=10><color=#D3D3D3>(Class-C, Class-E)</color></size>
 ‚Ä¢ –ü–æ–¥–∫–ª–∞—Å—Å—ã <color=#FFFF00><b>–£—á—ë–Ω—ã—Ö</b></color> <size=10><color=#D3D3D3>(Major Scientist, Zone Manager, Reserch Supervisor)</color></size>
 ‚Ä¢ –ì–æ–≤–æ—Ä—è—â–∏–µ <color=#FF0000><b>SCP</b></color>
 ‚Ä¢ –ò–≥—Ä–æ–≤–æ–π –∫–ª–∞—Å—Å <color=#FF0000><b>SCP-457</b></color>
 ‚Ä¢ –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–ª–∞—Å—Å–æ–≤
 ‚Ä¢ –°—á—ë—Ç—á–∏–∫ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –≤ <color=#2297E6><b>HUD</b></color>
 ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–∫–æ–º–µ
 ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ë–µ—Å–∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ò–∑–º–µ–Ω—ë–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ª–∏—Ñ—Ç–æ–≤
 ‚Ä¢ –ê–≤—Ç–æ–±–æ–µ–≥–æ–ª–æ–≤–∫–∞ –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π –∏–≥—Ä—ã
 ‚Ä¢ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∑–∞—Ä—è–¥ —Ä–∞—Ü–∏–∏
 ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ö–∞—Ä–º–∞–Ω–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ
</align>
"
NXWc7vQb,vietnam,Zvezdochkin,HTML,Friday 29th of December 2023 05:24:48 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#13c634>–í—å–µ—Ç–Ω–∞–º</color></size>
<b><size=16><color=#FB9800>–ù–æ–Ω–†–ü</color> —Å–µ—Ä–≤–µ—Ä —Å –Ω–µ–±–æ–ª—å—à–∏–º —Å–≤–æ–¥–æ–º –ø—Ä–∞–≤–∏–ª –∏ –Ω–∞–ª–∏—á–∏–µ–º –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScFw-V2QxXXvjjhXeuwf7it-IAJTaBIiAKq_s-9yHELJE-Wrg/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>

<align=""left"">
<color=#FF4500><b>–°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤:</b></color>
 ‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –û–∫–∫—É–ª—å—Ç–Ω–∞—è –ö–æ–∞–ª–∏—Ü–∏—è
 ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ó–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
 ‚Ä¢ –í—Ç–æ—Ä–∞—è –ó–æ–Ω–∞ –ø–æ–±–µ–≥–∞
 ‚Ä¢ –ì–æ–≤–æ—Ä—è—â–∏–µ <color=#FF0000><b>SCP</b></color>
 ‚Ä¢ –ò–≥—Ä–æ–≤–æ–π –∫–ª–∞—Å—Å <color=#FF0000><b>SCP-457</b></color>
 ‚Ä¢ –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–ª–∞—Å—Å–æ–≤
 ‚Ä¢ –°—á—ë—Ç—á–∏–∫ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –≤ <color=#2297E6><b>HUD</b></color>
 ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–∫–æ–º–µ
 ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ë–µ—Å–∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ª–∏—Ñ—Ç–æ–≤
 ‚Ä¢ –ê–≤—Ç–æ–±–æ–µ–≥–æ–ª–æ–≤–∫–∞ –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π –∏–≥—Ä—ã
 ‚Ä¢ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∑–∞—Ä—è–¥ —Ä–∞—Ü–∏–∏
 ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ö–∞—Ä–º–∞–Ω–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ
</align>
"
uP7yk2bL,mediumrp1,Zvezdochkin,HTML,Friday 29th of December 2023 05:24:27 PM CDT,"<align=""center"">
<size=34><color=#fcff03>Kyle's Project</color> <b>/</b> <color=#fd6f5a>MediumRP</color></size>
<b><size=18><color=#FB9800>–†–ü</color> —Å–µ—Ä–≤–µ—Ä —Å–æ —Å—Ä–µ–¥–Ω–∏–º —É—Ä–æ–≤–Ω–µ–º –æ—Ç—ã–≥—Ä–æ–≤–∫–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1c3mQcidlg-ZfVxGwr8FWLK6du5q198qsGcx8Sp16Qyk""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>

<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>

<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScGaVBVJzTjANzRltI96IOXE1Qg8vibOBeK1tUbBe3Wl3QU_w/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>

<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>

<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE/edit#heading=h.u1s6ffc8bslo""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>

<align=""left"">
<color=#FF4500><b>–°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤:</b></color>
 ‚Ä¢ –°—Ç–∞—Ä–∞—è –æ–∑–≤—É—á–∫–∞ <color=#2297E6><b>CASSIE</b></color>
 ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ó–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
 ‚Ä¢ –í—Ç–æ—Ä–∞—è –ó–æ–Ω–∞ –ø–æ–±–µ–≥–∞
 ‚Ä¢ –ì–æ–≤–æ—Ä—è—â–∏–π <color=#FF0000><b>SCP-049</b></color>
 ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å <color=#FFA500><b>¬´–ì–ª–∞–≤–Ω—ã–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫¬ª</b></color>
 ‚Ä¢ –°–ª–µ–≥–∫–∞ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
 ‚Ä¢ –ü–µ—Ä–µ–¥–µ–ª–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –•–ü –∏–≥—Ä–æ–≤—ã—Ö SCP
 ‚Ä¢ <b>SCP-173</b> –∏ <b>SCP-096</b> –Ω–µ –º–æ–≥—É—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –≤–º–µ—Å—Ç–µ
 ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–∫–æ–º–µ
 ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ê–≤—Ç–æ–±–æ–µ–≥–æ–ª–æ–≤–∫–∞ –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π –∏–≥—Ä—ã
 ‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –∑–∞—Ä—è–¥ —Ä–∞—Ü–∏–∏
 ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ö–∞—Ä–º–∞–Ω–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ
 ‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Å—Ç–∞–º–∏–Ω–∞
</align>
"
UzzGMVwG,slivarp,Zvezdochkin,HTML,Friday 29th of December 2023 05:23:56 PM CDT,"<align=""center"">
<size=42><color=#fcff03>Kyle's project</color> <b>/</b> <color=#3c72aa>SlivaRP</color></size>
<b><size=18><color=#FB9800>–†–ü</color> —Å–µ—Ä–≤–µ—Ä —Å –ª—ë–≥–∫–∏–º —É—Ä–æ–≤–Ω–µ–º –æ—Ç—ã–≥—Ä–æ–≤–∫–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/16aD2O2prfuo1tO9G62Q8DvS9_zntzdN9qpI-rHWiv-A""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLSc5cqtVOEb-d5PDFZSQfVdHQqR3AEN8EQvorXHBQ3F_iCc5VQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE/edit#heading=h.u1s6ffc8bslo""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>

<align=""left"">
<color=#FF4500><b>–°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤:</b></color>
 ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ó–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
 ‚Ä¢ –í—Ç–æ—Ä–∞—è –ó–æ–Ω–∞ –ø–æ–±–µ–≥–∞
 ‚Ä¢ –ì–æ–≤–æ—Ä—è—â–∏–π <color=#FF0000><b>SCP-049</b></color>
 ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –≤ –∏–Ω—Ç–µ—Ä–∫–æ–º–µ
 ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–µ—Ä–µ–π
 ‚Ä¢ –ê–≤—Ç–æ–±–æ–µ–≥–æ–ª–æ–≤–∫–∞ –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π –∏–≥—Ä—ã
 ‚Ä¢ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∑–∞—Ä—è–¥ —Ä–∞—Ü–∏–∏
 ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ö–∞—Ä–º–∞–Ω–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ
 ‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Å—Ç–∞–º–∏–Ω–∞
</align>"
AWcUv7Gc,classic5,Zvezdochkin,HTML,Friday 29th of December 2023 05:23:13 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#e4c5e2>Classic #5</color></size>
<b><size=16><color=#FB9800>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</color> —Å–µ—Ä–≤–µ—Ä c–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>
 
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1el0utWs_HRbKY_GzdcCRnNxSeF1U3SlT3bm-QsR69dA""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScVBwr7aeuOPD_olkjw_dqH-o2yftto8g9EjFvx4gVaAGsdYQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>
 
<size=0>.</size>"
r4gWjB9s,classic4,Zvezdochkin,HTML,Friday 29th of December 2023 05:22:56 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#e4c5e2>Classic #4</color></size>
<b><size=16><color=#FB9800>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</color> —Å–µ—Ä–≤–µ—Ä c–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>
 
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1el0utWs_HRbKY_GzdcCRnNxSeF1U3SlT3bm-QsR69dA""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScVBwr7aeuOPD_olkjw_dqH-o2yftto8g9EjFvx4gVaAGsdYQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>
 
<size=0>.</size>"
2QenJcb6,classic3,Zvezdochkin,HTML,Friday 29th of December 2023 05:22:40 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#e4c5e2>Classic #3</color></size>
<b><size=16><color=#FB9800>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</color> —Å–µ—Ä–≤–µ—Ä c–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>
 
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1el0utWs_HRbKY_GzdcCRnNxSeF1U3SlT3bm-QsR69dA""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScVBwr7aeuOPD_olkjw_dqH-o2yftto8g9EjFvx4gVaAGsdYQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>
 
<size=0>.</size>"
w6nVrfSj,classic2,Zvezdochkin,HTML,Friday 29th of December 2023 05:22:19 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#e4c5e2>Classic #2</color></size>
<b><size=16><color=#FB9800>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</color> —Å–µ—Ä–≤–µ—Ä c–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>
 
 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1el0utWs_HRbKY_GzdcCRnNxSeF1U3SlT3bm-QsR69dA""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScVBwr7aeuOPD_olkjw_dqH-o2yftto8g9EjFvx4gVaAGsdYQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>
 
<size=0>.</size>"
3kaWfESn,classic1,Zvezdochkin,HTML,Friday 29th of December 2023 05:19:29 PM CDT,"<align=""center"">
<size=40><color=#fcff03>Kyle's project</color> <b>/</b> <color=#e4c5e2>Classic #1</color></size>
<b><size=16><color=#FB9800>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</color> —Å–µ—Ä–≤–µ—Ä c–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</size>\n<color=#C0C0C0>[CIS ONLY]</color></b>
</align>

<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1cW8t4Wy8s0ezmSLt3gnc7Tx7WDvEvpphXUHwtAgCXKU/edit?usp=sharing""><mark=#fc5ac9><size=13>|üéôÔ∏è|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ì–æ–ª–æ—Å–æ–≤—ã–µ –†–µ–ø–ª–∏–∫–∏|<space=5.65em>|</mark></link></size>

 
<align=""left"">
<size=17><link=""https://docs.google.com/document/d/1el0utWs_HRbKY_GzdcCRnNxSeF1U3SlT3bm-QsR69dA""><mark=#fd6f5a><size=13>|üìï|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–µ—Ä–∞|<space=5.65em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1C3bFwA8Wo18ZTuckRfkZcv3wthr6YB7SsGrX919SzRE""><mark=#E31C1C><size=13>|üìñ|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –û–±—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞|<space=6.35em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/forms/d/e/1FAIpQLScVBwr7aeuOPD_olkjw_dqH-o2yftto8g9EjFvx4gVaAGsdYQ/viewform""><mark=#FF8C00><size=13>|üìã|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –ó–∞—è–≤–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞|<space=0.85em>|</mark></link></size>
 
<size=17><link=""https://discord.gg/uxfhSG2""><mark=#32CD32><size=13>|üí¨|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä|<space=6.2em>|</mark></link></size>
 
<size=17><link=""https://kyles.ru/""><mark=#2297E6><size=13>|üåê|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –°–∞–π—Ç|<space=11.6em>|</mark></link></size>
 
<size=17><link=""https://docs.google.com/document/d/1yKABCtmIdKt78jm_rkbfQoxhAKLVRRltagroYD_rldE""><mark=#4c00ff><size=13>|üíé|</size></mark><mark=#595959>||</mark><mark=#4F4F4F> –î–æ–Ω–∞—Ç-–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏|<space=5.1em>|</mark></link></size>
</align>
 
<size=0>.</size>
"
zgniiwVU,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 29th of December 2023 04:48:17 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-547662"
bKf3MzVb,Card batterie,fabrizio97726,YAML,Friday 29th of December 2023 04:32:13 PM CDT,"type: custom:mushroom-template-card
icon: mdi:battery-high
primary: null
icon_color: green
secondary: >-
  {{ states('sensor.iphone_13_battery_level') | round(0) }}% iPhone  | {{
  states('sensor.ipad_490_battery_level') | round(0) }}% iPad
layout: vertical
tap_action:
  action: navigate
  navigation_path: /lovelace-casa2/iphone-13
double_tap_action:
  action: navigate
  navigation_path: /lovelace-casa2/andrea
card_mod:
  style:
    mushroom-shape-icon$: |
      .shape {
        background: radial-gradient(var(--card-background-color) 60%, transparent 0%), conic-gradient(rgb(var(--rgb-{{ config.icon_color }})) {{ states('sensor.iphone_13_battery_level') }}% 0%, var(--card-background-color) 0% 100%);
      }
      .shape:before {
        content: """";
        background: radial-gradient(var(--card-background-color) 60%, transparent 0%), conic-gradient(rgb(var(--rgb-teal)) {{ states('sensor.ipad_490_battery_level') }}% 0%, var(--card-background-color) 0% 100%);
        position: absolute;
        border-radius: var(--icon-border-radius);
        width: 81%;
        height: 81%;
      }
      .shape:after {
        content: """";
        height: 100%;
        width: 100%;"
SefSQnNK,updated transaction,aacoimbra,Python,Friday 29th of December 2023 03:45:30 PM CDT,"const fcl = require(""@onflow/fcl"");
const misc = require('./utils/misc');
const templates = require('./utils/flow_templates');
const t = require(""@onflow/types"");

import { promises as fsPromises } from 'fs';

misc.configFcl('emulator');

export default async function main() {

    const accounts = JSON.parse(
		await fsPromises.readFile('accounts.json', 'utf8'),
	);

    await fcl.config().put('system.contracts.BBCollectables', accounts.admin.address)	


    const admin = {
		address: accounts.admin.address,
		publicKey: accounts.admin.keys.public,
		privateKey: accounts.admin.keys.private,
		keyIndex: 0,
	};

    const user = {
		address: accounts.userAccount1.address,
		publicKey: accounts.userAccount1.keys.public,
		privateKey: accounts.userAccount1.keys.private,
		keyIndex: 0,
	};

	const args: any = [
		fcl.arg(""1"", t.UInt32),
		fcl.arg(""1"", t.UInt32),
	];

    const txId = await templates.simpleTransactionBuilder(admin, [admin, user], admin, 'mint_card', args);

    const viralatTransaction = await fcl.tx(txId).onceExecuted();

    // console.log(viralatTransaction)
};

main()
	.then((text) => console.log(text))
	.catch((error) => console.log(error));
"
PggnzANz,Untitled,woxd,JavaScript,Friday 29th of December 2023 03:38:44 PM CDT,"const mainButton = document.getElementById(""mainButton"");
const daysInput = document.getElementById(""daysInput"");
const resetButton = document.getElementById(""resetButton"");

// mainButton.addEventListener(""click"",runProject);
// resetButton.addEventListener(""click"",resetFields);

function runProject(){

};

function resetFields(){
    
};

async function getData(){
    try{
    const response = await fetch(""https://api.npoint.io/a2d5073c8fd9159e043d"");
    const responseObj = await response.json();
    if (responseObj.status >= 400 && responseObj.status < 600) {
        throw new Error(""Bad response from server"");
      }
      return responseObj;
    }
    catch(error){
        console.log(error)
    }
}

async function filterOutErrors(){
    let dataKeys = 1;
    let data;
    let counter = 0;
    while (dataKeys == 1 && counter < 5) {
        counter++;
        data = await getData();
        dataKeys = Object.keys(data).length;
        console.log(data);
        console.log(dataKeys);
        console.log(data.scriptType);
        console.log(counter)
    }

    if (counter == 5) {
        throw new Error(""Number of errors exceeded limit"");
    }
    return data;
}

async function filterByType(){
    let dataType;
    let cleanData;
    while (dataType != ""basic""){
        cleanData = await filterOutErrors();
        dataType = cleanData.scriptType;
    }
    return cleanData;
}

async function getDataPerAccount(){
    // let numberOfVideos = daysInput.value * 3;
    let numberOfVideos = 3;
    const dataPerAccount = [];
    for (let i = 0; i < numberOfVideos; i++) {
        dataPerAccount.push(await filterByType());
    }
    console.log(dataPerAccount);
}

// filterOutErrors();
// filterByType();
getDataPerAccount();"
u466vW40,The Script,ThatBoiAlan,Lua,Friday 29th of December 2023 03:34:02 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/lannysteel/PetSim99/main/PetSimScript""))()"
pVkigq3j,full contract,aacoimbra,Python,Friday 29th of December 2023 03:23:23 PM CDT,"// import NonFungibleToken from 0x631e88ae7f1d7c20
// import MetadataViews from 0x631e88ae7f1d7c20
// import FungibleToken from 0x9a0766d93b6608b7
// import PRNG from 0x2bf5575475144be3

import ""NonFungibleToken""
import ""MetadataViews""
import ""FungibleToken""
// import ""PRNG""

pub contract BBCollectables: NonFungibleToken {

    // pub let network: String

    pub event ContractInitialized()

    pub event CardCreated(cardID: UInt32, metadata: {String:String})
    pub event PackCreated(packID: UInt32)

    pub event CardAddedToPack(packID: UInt32, cardID: UInt32)
    pub event CardRetiredFromPack(packID: UInt32, cardID: UInt32, numCards: UInt32)
    pub event CardUnretiredFromPack(packID: UInt32, cardID: UInt32, numCards: UInt32)

    pub event PackLocked(packID: UInt32)
    pub event PackUnlocked(packID: UInt32)

    pub event BlockPackMint(packID: UInt32)

   
    pub event TicketMinted(packID: UInt32, serialNumber: UInt32) 
    pub event TicketSpent(id: UInt64, packID: UInt32, serialNumber: UInt32, content: [UInt32])
    pub event TicketDestroyed(id: UInt64)

    pub event BBNftMinted(BBNftID: UInt64, cardID: UInt32, packID: UInt32, serialNumber: UInt32)
    pub event BBNftDestroyed(id: UInt64)


    pub event Withdraw(id: UInt64, from: Address?)

    pub event Deposit(id: UInt64, to: Address?)

    pub let NftCollectionStoragePath: StoragePath
    pub let NftCollectionPublicPath: PublicPath
    pub let AdminStoragePath: StoragePath

    pub var cardDatas: {UInt32: Card}
    access(self) var packDatas: {UInt32: PackData}
    pub var packs: @{UInt32: Pack}

    pub var nextCardID: UInt32
    pub var nextPackID: UInt32

    pub var totalSupply: UInt64


    pub struct Card {

        pub let cardID: UInt32

        // pub let categories: [String]

        pub let metadata: {String: String}

        init(metadata: {String: String}) {
            pre {
                metadata.length != 0: ""New Card metadata cannot be empty""
            }
            self.cardID = BBCollectables.nextCardID
            // self.categories = categories
            self.metadata = metadata
        }
    }

    pub struct PackData {

        pub let packID: UInt32

        pub let name: String

        pub let rarityDistribution: {String: UInt256}

        init(name: String, rarityDistribution: {String: UInt256}) {
            pre {
                name.length > 0: ""New Pack name cannot be empty""
            }
            self.packID = BBCollectables.nextPackID
            self.name = name
            self.rarityDistribution = rarityDistribution
        }
    }

    pub resource Pack {

        pub let name: String

        pub let packID: UInt32

        access(contract) var rarityDistribution: {String: UInt256}

        access(contract) var cards: [UInt32]

        access(contract) var retired: {UInt32: Bool}

        pub var locked: Bool

        access(contract) var ticketsMinted: UInt32

        access(contract) var ticketsSpent: UInt32

        access(contract) var ticketsDestroyed: UInt32

        access(contract) var mintCapPerCard: {UInt32: UInt32}

        access(contract) var numberMintedPerCard: {UInt32: UInt32}

        access(contract) var numberDestroyedPerCard: {UInt32: UInt32}

        pub var cardsAvailableByRarity: {String: [UInt32]}

        init(name: String, rarityDistribution: {String: UInt256}) {
            self.name = name
            self.packID = BBCollectables.nextPackID
            self.rarityDistribution = rarityDistribution
            self.cards = []
            self.retired = {}
            self.locked = false
            self.ticketsMinted = 0
            self.ticketsSpent = 0
            self.ticketsDestroyed = 0
            self.mintCapPerCard = {}
            self.numberMintedPerCard = {}
            self.numberDestroyedPerCard = {}
            self.cardsAvailableByRarity = {}

            for rarity in rarityDistribution.keys {
                self.cardsAvailableByRarity[rarity] = []
            }

            BBCollectables.packDatas[self.packID] = PackData(name: name, rarityDistribution: rarityDistribution)
        }

        pub fun addCard(cardID: UInt32, mintCap: UInt32) {

            pre {
                BBCollectables.cardDatas[cardID] != nil: ""Cannot add the Card to Pack: Card doesn't exist.""
                !self.locked: ""Cannot add the Card to the Pack after the Pack has been locked.""
                self.numberMintedPerCard[cardID] == nil: ""The Card has already beed added to the Pack.""
                self.rarityDistribution[BBCollectables.getCardMetaDataByField(cardID: cardID, field: ""rarity"")!] != nil: ""The Card rarity not included in pack.""
                mintCap >= 0: ""'maxCount' parameter must be 0 or higher.""
            }


            self.cards.append(cardID)

            self.retired[cardID] = false

            self.mintCapPerCard[cardID] = mintCap

            self.numberMintedPerCard[cardID] = 0

            self.numberDestroyedPerCard[cardID] = 0
            
            self.cardsAvailableByRarity[BBCollectables.getCardMetaDataByField(cardID: cardID, field: ""rarity"")!]!.append(cardID)

            emit CardAddedToPack(packID: self.packID, cardID: cardID)
        }

        pub fun addCards(cardIDs: [UInt32], mintCaps: [UInt32]) {
            
            var i = 0
            while i < cardIDs.length {
                self.addCard(cardID: cardIDs[i], mintCap: mintCaps[i])
                i = i + 1
            }
                
        }
        

        pub fun retireCard(cardID: UInt32) {
            pre {
                self.retired[cardID] != nil: ""Cannot retire the Card: Card doesn't exist in this Pack!""
                self.retired[cardID] == false: ""Cannot retire the Card: Card already retired!""
                !self.locked: ""Cannot retire card: This Pack is locked.""
            }

            let cardRarity = BBCollectables.getCardMetaDataByField(cardID: cardID, field: ""rarity"")!

            var index: UInt16 = 0
            for value in self.cardsAvailableByRarity[cardRarity]! {
                if value == cardID {
                self.cardsAvailableByRarity[cardRarity]!.remove(at: index)
                }
                index = index + 1
            }
            

            if !self.retired[cardID]! {
                self.retired[cardID] = true

                emit CardRetiredFromPack(packID: self.packID, cardID: cardID, numCards: self.numberMintedPerCard[cardID]!)
            }
        }

        pub fun unretireCard(cardID: UInt32) {
            pre {
                self.retired[cardID] != nil: ""Cannot unretire the Card: Card doesn't exist in this Pack!""
                self.retired[cardID] == true: ""Cannot unretire the Card: Card must be retired!""
                self.numberMintedPerCard[cardID]! < self.mintCapPerCard[cardID]! || self.mintCapPerCard[cardID]! == 0: ""Cannot unretire the Card: Card has reached it's maximum mint cap!""
                !self.locked: ""Cannot retire card: This Pack is locked.""
            }

            let cardRarity = BBCollectables.getCardMetaDataByField(cardID: cardID, field: ""rarity"")!

            self.cardsAvailableByRarity[cardRarity]!.insert(at: self.cardsAvailableByRarity[cardRarity]!.length - 1, cardID)

            if self.retired[cardID]! {
                self.retired[cardID] = false

                emit CardUnretiredFromPack(packID: self.packID, cardID: cardID, numCards: self.numberMintedPerCard[cardID]!)
            }
        }

        pub fun retireAll() {
            for card in self.cards {
                self.retireCard(cardID: card)
            }
        }

        pub fun lock() {
            if !self.locked {
                self.locked = true
                emit PackLocked(packID: self.packID)
            }
        }

        pub fun unlock() {
            if self.locked {
                self.locked = false
                emit PackUnlocked(packID: self.packID)
            }
        }

        pub fun spentTicketCount() {
            self.ticketsSpent = self.ticketsSpent +1
        }

        pub fun destroyedTicketCount() {
            self.ticketsDestroyed = self.ticketsDestroyed +1
        }


        pub fun mintBBNft(cardID: UInt32): @NFT {
            pre {
                self.retired[cardID] != nil: ""Cannot mint the Card: This Card doesn't exist.""
                !self.retired[cardID]!: ""Cannot mint the Card from this Pack: This Card has been retired.""
                self.numberMintedPerCard[cardID]! < self.mintCapPerCard[cardID]! || self.mintCapPerCard[cardID]! == 0: ""Card has reached the maximum mint cap.""
            }

            let numInCard = self.numberMintedPerCard[cardID]!

            let newBBNft: @NFT <- create NFT(cardID: cardID,
                                              packID: self.packID,
                                              timestamp: getCurrentBlock().timestamp,
                                              packIndex: UInt32(self.cards.firstIndex(of: cardID)!),
                                              serialNumber: numInCard +1
                                              )
            
            self.numberMintedPerCard[cardID] = numInCard +1

            if self.numberMintedPerCard[cardID]! >= self.mintCapPerCard[cardID]! && self.mintCapPerCard[cardID]! > 0 {
                self.retireCard(cardID: cardID)
            }

            return <-newBBNft
        }

        pub fun destroyBBNft(cardID: UInt32) {
            self.numberDestroyedPerCard[cardID] = self.numberDestroyedPerCard[cardID]! +1
        }

        pub fun batchMintBBNft(cardID: UInt32, quantity: UInt64): @Collection {
            let newCollection <- create Collection()

            var i: UInt64 = 0
            while i < quantity {
                newCollection.deposit(token: <-self.mintBBNft(cardID: cardID))
                i = i +1
            }

            return <-newCollection
        }

        pub fun getRarityDistribution(): {String: UInt256} {
            return self.rarityDistribution
        }

        pub fun getCards(): [UInt32] {
            return self.cards
        }

        pub fun getRetired(): {UInt32: Bool} {
            return self.retired
        }

        pub fun getNumMintedPerCard(): {UInt32: UInt32} {
            return self.numberMintedPerCard
        }
    }

    pub struct QueryPackData {
        pub let packID: UInt32
        pub let name: String
        pub var locked: Bool
        access(self) var rarityDistribution: {String: UInt256}
        access(self) var cards: [UInt32]
        access(self) var retired: {UInt32: Bool}
        access(self) var cardsAvailableByRarity: {String: [UInt32]}
        access(contract) var ticketsMinted: UInt32
        access(contract) var ticketsSpent: UInt32
        access(contract) var ticketsDestroyed: UInt32
        access(self) var mintCapPerCard: {UInt32: UInt32}
        access(self) var numberMintedPerCard: {UInt32: UInt32}
        access(self) var numberDestroyedPerCard: {UInt32: UInt32}
        

        init(packID: UInt32) {
            pre {
                BBCollectables.packs[packID] != nil: ""The Pack with the provided ID does not exist""
            }

            let pack= (&BBCollectables.packs[packID] as &Pack?)!
            let packData = BBCollectables.packDatas[packID]!

            self.packID = packID
            self.name = packData.name
            self.locked = pack.locked
            self.rarityDistribution = pack.rarityDistribution
            self.cards = pack.cards
            self.retired = pack.retired
            self.cardsAvailableByRarity = pack.cardsAvailableByRarity
            self.ticketsMinted = pack.ticketsMinted
            self.ticketsSpent = pack.ticketsSpent
            self.ticketsDestroyed = pack.ticketsDestroyed
            self.mintCapPerCard = pack.mintCapPerCard
            self.numberMintedPerCard = pack.numberMintedPerCard
            self.numberDestroyedPerCard = pack.numberDestroyedPerCard
        }

        pub fun getRarityDistribution(): {String: UInt256} {
            return self.rarityDistribution
        }

        pub fun getCards(): [UInt32] {
            return self.cards
        }

        pub fun getRetired(): {UInt32: Bool} {
            return self.retired
        }

        pub fun getcardsAvailableByRarity(): {String: [UInt32]} {
            return self.cardsAvailableByRarity
        }

        pub fun getTicketsMinted(): UInt32 {
            return self.ticketsMinted
        }

        pub fun getTicketsSpent(): UInt32 {
            return self.ticketsSpent
        }

        pub fun getNumberMintedPerCard(): {UInt32: UInt32} {
            return self.numberMintedPerCard
        }

        pub fun getNumberDestroyedPerCard(): {UInt32: UInt32} {
            return self.numberDestroyedPerCard
        }
    }

    pub struct BBNftData {

        pub let cardID: UInt32

        pub let packID: UInt32

        pub let timestamp: UFix64

        pub let packIndex: UInt32

        pub let serialNumber: UInt32


        init(cardID: UInt32, packID: UInt32, timestamp: UFix64, packIndex:UInt32, serialNumber: UInt32) {
            self.cardID = cardID
            self.packID = packID
            self.timestamp = timestamp
            self.packIndex = packIndex
            self.serialNumber = serialNumber
        }

    }

    pub struct BBNftMetadataView {

        pub let name : String?
        pub let description: String?
        pub let rarity: String?
        pub let media: String?

        pub let cardID: UInt32?
        pub let packID: UInt32?
        pub let timestamp: UFix64?
        pub let packIndex: UInt32?
        pub let serialNumber: UInt32?

        init(
            name: String?,
            description: String?,
            rarity: String?,
            media: String?,

            cardID: UInt32?,
            packID: UInt32?,
            timestamp: UFix64?,
            packIndex: UInt32?,
            serialNumber: UInt32?,
            
        ) {
            self.name = name
            self.description = description
            self.rarity = rarity
            self.media = media

            self.cardID = cardID
            self.packID = packID
            self.timestamp = timestamp
            self.packIndex = packIndex
            self.serialNumber = serialNumber
        }
    }

    pub resource NFT: NonFungibleToken.INFT, MetadataViews.Resolver {

        pub let id: UInt64
        pub let data: BBNftData

        init(cardID: UInt32, packID: UInt32, timestamp: UFix64, packIndex: UInt32, serialNumber: UInt32) {

            BBCollectables.totalSupply = BBCollectables.totalSupply +1

            self.id = BBCollectables.totalSupply

            self.data = BBNftData(cardID: cardID, packID: packID, timestamp: timestamp, packIndex: packIndex, serialNumber: serialNumber)

            emit BBNftMinted(BBNftID: self.id, cardID: cardID, packID: self.data.packID, serialNumber: self.data.serialNumber)
        }

        destroy() {
            BBCollectables.packs[self.data.packID]?.destroyBBNft(cardID: self.data.cardID)
            emit BBNftDestroyed(id: self.id)
        }

        pub fun name(): String {
            let cardName: String = BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""name"") ?? """"
            return cardName
        }

        pub fun description(): String {
            let packName: String = BBCollectables.getPackName(packID: self.data.packID) ?? """"
            let serialNumber: String = self.data.serialNumber.toString()
            return ""A series ""
                .concat(packName)
                .concat("" BBNft with serial number "")
                .concat(serialNumber)
        }

        pub fun getCardURL(): String {
 
            return ""https://media.BBCollectables.bite.blue/"".concat(""testnet"").concat(""/cards/"").concat(BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""media"")!).concat(""/carta.png"")
            
            // return BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""media"")!
        }

        pub fun mapCardData(dict: {String: AnyStruct}) : {String: AnyStruct} {      
            let cardMetadata = BBCollectables.getCardMetaData(cardID: self.data.cardID) ?? {}
            for name in cardMetadata.keys {
                let value = cardMetadata[name] ?? """"
                if value != """" {
                    dict.insert(key: name, value)
                }
            }
            return dict
        }

        pub fun getViews(): [Type] {
            return [
                Type<MetadataViews.Display>(),
                Type<BBNftMetadataView>(),
                Type<MetadataViews.ExternalURL>(),
                Type<MetadataViews.NFTCollectionData>(),
                Type<MetadataViews.NFTCollectionDisplay>(),
                Type<MetadataViews.Serial>(),
                Type<MetadataViews.Traits>(),
                Type<MetadataViews.Medias>()
            ]
        }

        pub fun resolveView(_ view: Type): AnyStruct? {
            switch view {
                case Type<MetadataViews.Display>():
                    return MetadataViews.Display(
                        name: self.name(),
                        description: self.description(),
                        thumbnail: MetadataViews.HTTPFile(url: self.getCardURL())
                    )
                case Type<BBNftMetadataView>():
                    return BBNftMetadataView(
                        name: BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""name""),
                        description: BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""cardDescription""),
                        rarity: BBCollectables.getCardMetaDataByField(cardID: self.data.cardID, field: ""rarity""),
                        media: self.getCardURL(),
                        
                        cardID: self.data.cardID,
                        packID: self.data.packID,
                        timestamp: self.data.timestamp,
                        packIndex: self.data.packIndex,
                        serialNumber: self.data.serialNumber,
                    )
                    
                case Type<MetadataViews.ExternalURL>():
                    return MetadataViews.ExternalURL(self.getCardURL())

                case Type<MetadataViews.NFTCollectionData>():
                    return MetadataViews.NFTCollectionData(
                        storagePath: /storage/BBNFTCollection,
                        publicPath: /public/BBNFTCollection,
                        providerPath: /private/BBNFTCollection,
                        publicCollection: Type<&BBCollectables.Collection{NonFungibleToken.CollectionPublic}>(),
                        publicLinkedType: Type<&BBCollectables.Collection{NonFungibleToken.Receiver,NonFungibleToken.CollectionPublic,MetadataViews.ResolverCollection}>(),
                        providerLinkedType: Type<&BBCollectables.Collection{NonFungibleToken.Provider,NonFungibleToken.Receiver,NonFungibleToken.CollectionPublic,MetadataViews.ResolverCollection}>(),
                        createEmptyCollectionFunction: (fun (): @NonFungibleToken.Collection {
                            return <-BBCollectables.createEmptyCollection()
                        })
                    )

                case Type<MetadataViews.NFTCollectionDisplay>():
                    let bannerImage = MetadataViews.Media(
                        file: MetadataViews.HTTPFile(
                            url: ""https://media.BBCollectables.bite.blue/testnet/branding/BB-banner.svg""
                        ),
                        mediaType: ""image/svg""
                    )
                    let squareImage = MetadataViews.Media(
                        file: MetadataViews.HTTPFile(
                            url: ""https://media.BBCollectables.bite.blue/testnet/branding/BB-logopack-04.svg""
                        ),
                        mediaType: ""image/svg""
                    )

                    return MetadataViews.NFTCollectionDisplay(
                        name: ""Organiser Collectables Collection"",
                        description: ""Uma experi√™ncia de outro planeta. ü™ê"",
                        externalURL: MetadataViews.ExternalURL(""https://www.bluebite.tech/""),
                        squareImage: squareImage,
                        bannerImage: bannerImage,
                        socials: {
                            ""instagram"": MetadataViews.ExternalURL(""https://www.instagram.com/richmond_fc/"")
                        }
                    )

                case Type<MetadataViews.Serial>():
                    return MetadataViews.Serial(
                        UInt64(self.data.serialNumber)
                    )

                case Type<MetadataViews.Traits>():
                    // sports radar team id
                    let excludedNames: [String] = [""timestamp""]
                    // non play specific traits
                    let traitDictionary: {String: AnyStruct} = {
                        ""packName"": BBCollectables.getPackName(packID: self.data.packID)
                    }
                    // add play specific data
                    let fullDictionary = self.mapCardData(dict: traitDictionary)
                    return MetadataViews.dictToTraits(dict: fullDictionary, excludedNames: excludedNames)

                case Type<MetadataViews.Medias>():
                    return MetadataViews.Medias(
                        items: [
                            MetadataViews.Media(
                                file: MetadataViews.HTTPFile(
                                    url: self.getCardURL()
                                ),
                                mediaType: ""image/png""
                            )
                        ]
                    )
            }

            return nil
        }
 
        
    }

    // pub struct PackTicketData{

    //     pub let packID: UInt32

    //     pub let serialNumber: UInt32

    //     init(packID: UInt32, serialNumber: UInt32) {
    //         self.packID = packID
    //         self.serialNumber = serialNumber
    //     }
    // }

    pub resource Admin {

        pub fun createCard( metadata: {String: String}): UInt32 {

            pre {
                metadata.containsKey(""rarity"") == true: ""Metadata missing rarity field""
                metadata.containsKey(""name"") == true: ""Metadata missing name field""
                metadata.containsKey(""description"") == true: ""Metadata missing description field""
                metadata.containsKey(""date"") == true: ""Metadata missing date field""
            }

            for value in BBCollectables.cardDatas.values {
                if value.metadata[""name""] == metadata[""name""] {
                    return 0
                }
            }

            var newCard = Card( metadata: metadata)

            let newID = newCard.cardID

            BBCollectables.nextCardID = BBCollectables.nextCardID +1

            emit CardCreated(cardID: newCard.cardID, metadata: newCard.metadata)

            BBCollectables.cardDatas[newID] = newCard

            return newID
        }

        pub fun createPack(name: String, rarityDistribution: {String: UInt256}): UInt32 {

            var newPack <- create Pack(name: name, rarityDistribution: rarityDistribution)

            BBCollectables.nextPackID = BBCollectables.nextPackID +1

            let newID = newPack.packID

            emit PackCreated(packID: newPack.packID)

            BBCollectables.packs[newID] <-! newPack

            return newID
        }

        pub fun borrowPack(packID: UInt32): &Pack {
            pre {
                BBCollectables.packs[packID] != nil: ""Cannot borrow Pack: The Pack doesn't exist""
            }
            
            return (&BBCollectables.packs[packID] as &Pack?)!
        }

        pub fun createNewAdmin(): @Admin {
            return <-create Admin()
        }
    }

    pub resource Collection: NonFungibleToken.Provider, NonFungibleToken.Receiver, NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection { 

        pub var ownedNFTs: @{UInt64: NonFungibleToken.NFT}

        init() {
            self.ownedNFTs <- {}
        }

        pub fun withdraw(withdrawID: UInt64): @NonFungibleToken.NFT {

            let token <- self.ownedNFTs.remove(key: withdrawID) 
                ?? panic(""Cannot withdraw: Card does not exist in the collection"")

            emit Withdraw(id: token.id, from: self.owner?.address)
            
            return <-token
        }

        pub fun batchWithdraw(ids: [UInt64]): @NonFungibleToken.Collection {
            var batchCollection <- create Collection()
            
            for id in ids {
                batchCollection.deposit(token: <-self.withdraw(withdrawID: id))
            }
            
            return <-batchCollection
        }
        pub fun deposit(token: @NonFungibleToken.NFT) {
            

            let token <- token as! @BBCollectables.NFT

            let id = token.id

            let oldToken <- self.ownedNFTs[id] <- token

            if self.owner?.address != nil {
                emit Deposit(id: id, to: self.owner?.address)
            }

            destroy oldToken
        }

        pub fun batchDeposit(tokens: @NonFungibleToken.Collection) {

            let keys = tokens.getIDs()

            for key in keys {
                self.deposit(token: <-tokens.withdraw(withdrawID: key))
            }

            destroy tokens
        }

        pub fun getIDs(): [UInt64] {
            return self.ownedNFTs.keys
        }

        pub fun borrowNFT(id: UInt64): &NonFungibleToken.NFT {
            return (&self.ownedNFTs[id] as &NonFungibleToken.NFT?)!
        }

        pub fun borrowBBNft(id: UInt64): &BBCollectables.NFT? {
            if self.ownedNFTs[id] != nil {
                let ref = (&self.ownedNFTs[id] as auth &NonFungibleToken.NFT?)!
                return ref as! &BBCollectables.NFT
            } else {
                return nil
            }
        }

        pub fun borrowViewResolver(id: UInt64): &AnyResource{MetadataViews.Resolver} {
            let nft = (&self.ownedNFTs[id] as auth &NonFungibleToken.NFT?)!
            let BBNFT = nft as! &BBCollectables.NFT
            return BBNFT as &AnyResource{MetadataViews.Resolver}
        }

        destroy() {
            destroy self.ownedNFTs
        }
    }

    pub fun createEmptyCollection(): @NonFungibleToken.Collection {
        return <-create BBCollectables.Collection()
    }


    pub fun getAllCards(): {UInt32: BBCollectables.Card} {
        return BBCollectables.cardDatas
    }

    pub fun getCardMetaData(cardID: UInt32): {String: String}? {
        return self.cardDatas[cardID]?.metadata
    }

    pub fun getCardMetaDataByField(cardID: UInt32, field: String): String? {
        if let card = BBCollectables.cardDatas[cardID] {
            return card.metadata[field]
        } else {
            return nil
        }
    }

    pub fun getPackData(packID: UInt32): QueryPackData? {
        if BBCollectables.packs[packID] == nil {
            return nil
        } else {
            return QueryPackData(packID: packID)
        }
    }

    pub fun getPackName(packID: UInt32): String? {
        return BBCollectables.packDatas[packID]?.name
    }

    pub fun getPackIDsByName(packName: String): [UInt32]? {
        var packIDs: [UInt32] = []

        for packData in BBCollectables.packDatas.values {
            if packName == packData.name {

                packIDs.append(packData.packID)
            }
        }

        if packIDs.length == 0 {
            return nil
        } else {
            return packIDs
        }
    }

    pub fun getCardsInPack(packID: UInt32): [UInt32]? {

        return BBCollectables.packs[packID]?.cards
    }

    pub fun getRarityDistributionOfPack(packID: UInt32): {String: UInt256}? {

        return BBCollectables.packs[packID]?.rarityDistribution
    }

    pub fun isPackLocked(packID: UInt32): Bool? {
        return BBCollectables.packs[packID]?.locked
    }


    init() {

        // self.network = ""testnet""

        self.cardDatas = {}
        self.packDatas = {}
        self.packs <- {}
        self.nextCardID = 1
        self.nextPackID = 1
        self.totalSupply = 0

        self.NftCollectionStoragePath = /storage/BBNFTCollection
        self.NftCollectionPublicPath = /public/BBNFTCollection
        self.AdminStoragePath = /storage/BBAdmin

        self.account.save<@Collection>(<- create Collection(), to: self.NftCollectionStoragePath)

        self.account.link<&BBCollectables.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(self.NftCollectionPublicPath, target: self.NftCollectionStoragePath)

        let adminResource: @BBCollectables.Admin <- create Admin()

        adminResource.createPack(name: ""Cole√ß√£o 2024"", rarityDistribution: { ""comum"": 50, ""raro"": 30,""√©pico"":16, ""lend√°rio"": 4})

        self.account.save<@Admin>(<- adminResource, to: self.AdminStoragePath)

        emit ContractInitialized()

        
    }
}
 "
zqQ2SQf8,Transaction,aacoimbra,Python,Friday 29th of December 2023 03:15:44 PM CDT,"import ""Collectables""
import ""NonFungibleToken""
import ""MetadataViews""

transaction(packID: UInt32, cardID: UInt32) {
    // local variable for the admin reference
    let adminRef: &Collectables.Admin
    let receiverRef: &AnyResource{NonFungibleToken.CollectionPublic}

    prepare(admin: AuthAccount, user: AuthAccount) {
        // borrow a reference to the Admin resource in storage
        self.adminRef = admin.borrow<&Collectables.Admin>(from: Collectables.AdminStoragePath)!

        if user.borrow<&Collectables.Collection>(from: Collectables.NftCollectionStoragePath) == nil {
            
            let collection  <- Collectables.createEmptyCollection()

            user.save(<- collection, to: Collectables.NftCollectionStoragePath)

            user.link<&{NonFungibleToken.Receiver, NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(Collectables.NftCollectionPublicPath, target: Collectables.NftCollectionStoragePath)
        }

        self.receiverRef = user.getCapability(Collectables.NftCollectionPublicPath).borrow<&{NonFungibleToken.CollectionPublic}>()!
    }

    execute {

        let packRef: &Collectables.Pack = self.adminRef.borrowPack(packID: packID)

        let mintedCard: @NonFungibleToken.NFT <-! packRef.mintNft(cardID: cardID) as! @NonFungibleToken.NFT

        self.receiverRef.deposit(token: <- mintedCard )
    }
}"
RDcDEtm8,Untitled,sissou123,HTML,Friday 29th of December 2023 03:02:15 PM CDT,"Learn To Build Beautiful HTML5 And CSS3 Websites In 1 Month
The fastest way to learn HTML5/CSS3 & how to build websites that wow. Great for designers, entrepreneurs, & beginners! 
for more:https://dz-linkk.com/m67OHE
"
9S3LFQq5,Untitled,sissou123,PHP,Friday 29th of December 2023 02:56:01 PM CDT,"Learn PHP Programming From Scratch
Over 50 hours of PHP programming goodness. 
for more:https://cuty.io/7fxP5
"
LP3TsquL,TRENDLINE_RVI_DeMarker_ADX_ACMA_AO_SYSTEM,Trip_dp,C++,Friday 29th of December 2023 02:52:39 PM CDT,"//+------------------------------------------------------------------+
//| TRENDLINE_RVI_DeMarker_ADX_ACMA_AO_SYSTEM.mq5 |
//| Copyright 2022, MetaQuotes Ltd. |
//| https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright ""Copyright 2022, MetaQuotes Ltd.""
#property link ""https://www.mql5.com""
#property version ""1.00""
//+------------------------------------------------------------------+
//| Expert initialization function |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- create timer
   EventSetTimer(60);
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//--- destroy timer EventKillTimer();
  }
//+------------------------------------------------------------------+
//| Expert tick function |
//+------------------------------------------------------------------+
void OnTick()
  {
////////////////////////Trend Lines////////////////////////////////////
   long candlesUp = ChartGetInteger(0, CHART_FIRST_VISIBLE_BAR, 0);
   double pLow[];
   ArraySetAsSeries(pLow, true);
   CopyLow(_Symbol, _Period, 0, candlesUp, pLow);
   long candleLow = ArrayMinimum(pLow, 0, candlesUp);
   MqlRates pArrayUp[];
   ArraySetAsSeries(pArrayUp, true);
   long DataUp = CopyRates(_Symbol, _Period, 0, candlesUp, pArrayUp);
   ObjectDelete(_Symbol,""UpwardTrendline"");
   ObjectCreate(_Symbol, ""UpwardTrendline"", OBJ_TREND, 0, pArrayUp[candleLow].time, pArrayUp[candleLow].low, pArrayUp[0].time, pArrayUp[0].low);
   ObjectSetInteger(0, ""UpwardTrendline"", OBJPROP_COLOR, Blue);
   ObjectSetInteger(0, ""UpwardTrendline"", OBJPROP_STYLE, STYLE_SOLID);
   ObjectSetInteger(0, ""UpwardTrendline"", OBJPROP_WIDTH, 1);
   ObjectSetInteger(0, ""UpwardTrendline"", OBJPROP_RAY_RIGHT, true);
   long candlesDown = ChartGetInteger(0, CHART_FIRST_VISIBLE_BAR, 0);
   double pHighDown[];
   ArraySetAsSeries(pHighDown, true);
   CopyHigh(_Symbol, _Period, 0, candlesDown, pHighDown);
   long candleHighDown = ArrayMaximum(pHighDown, 0, candlesDown);
   MqlRates pArrayDown[];
   ArraySetAsSeries(pArrayDown, true);
   int DataDown = CopyRates(_Symbol, _Period, 0, candlesDown, pArrayDown);
   ObjectDelete(_Symbol, ""DownwardTrendline"");
   ObjectCreate(_Symbol, ""DownwardTrendline"", OBJ_TREND, 0, pArrayDown[candleHighDown].time, pArrayDown[candleHighDown].high, pArrayDown[0].time, pArrayDown[0].high);
   ObjectSetInteger(0, ""DownwardTrendline"", OBJPROP_COLOR, Blue);
   ObjectSetInteger(0, ""DownwardTrendline"", OBJPROP_STYLE, STYLE_SOLID);
   ObjectSetInteger(0, ""DownwardTrendline"", OBJPROP_WIDTH, 1);
   ObjectSetInteger(0, ""DownwardTrendline"", OBJPROP_RAY_RIGHT, true);
   long candlesSupport = ChartGetInteger(0, CHART_FIRST_VISIBLE_BAR, 0);
   double pLowSupport[];
   ArraySetAsSeries(pLowSupport, true);
   CopyLow(_Symbol, _Period, 0, candlesSupport, pLowSupport);
   long candleLowSupport = ArrayMinimum(pLowSupport, 0, candlesSupport);
   MqlRates pArraySupport[];
   ArraySetAsSeries(pArraySupport, true);
   int DataSupport = CopyRates(_Symbol, _Period, 0, candlesSupport, pArraySupport);
   ObjectDelete(_Symbol, ""supportLine"");
   ObjectCreate(_Symbol, ""supportLine"", OBJ_HLINE, 0, pArraySupport[candleLowSupport].time, pArraySupport[candleLowSupport].low, pArraySupport[0].time, pArraySupport[0].low);
   ObjectSetInteger(0, ""supportLine"", OBJPROP_COLOR, Green);
   ObjectSetInteger(0, ""supportLine"", OBJPROP_STYLE, STYLE_SOLID);
   ObjectSetInteger(0, ""supportLine"", OBJPROP_WIDTH, 3);
   ObjectSetInteger(0, ""supportLine"", OBJPROP_RAY, true);
   long candlesResistance = ChartGetInteger(0, CHART_FIRST_VISIBLE_BAR, 0);
   double pHighResistance[];
   ArraySetAsSeries(pHighResistance, true);
   CopyHigh(_Symbol, _Period, 0, candlesResistance, pHighResistance);
   long candleHighResistance = ArrayMaximum(pHighResistance, 0, candlesResistance);
   MqlRates pArrayResistance[];
   ArraySetAsSeries(pArrayResistance, true);
   long DataResistance = CopyRates(_Symbol, _Period, 0, candlesResistance, pArrayResistance);
   ObjectDelete(_Symbol, ""resistanceLine"");
   ObjectCreate(_Symbol, ""resistanceLine"", OBJ_HLINE, 0, pArrayResistance[candleHighResistance].time, pArrayResistance[candleHighResistance].high, pArrayResistance[0].time, pArrayResistance[0].high);
   ObjectSetInteger(0, ""resistanceLine"", OBJPROP_COLOR, Red);
   ObjectSetInteger(0, ""resistanceLine"", OBJPROP_STYLE, STYLE_SOLID);
   ObjectSetInteger(0, ""resistanceLine"", OBJPROP_WIDTH, 3);
   ObjectSetInteger(0, ""resistanceLine"", OBJPROP_RAY_RIGHT, true);

/////////////////////////////////////VIDYA/////////////////////////////////////////////
   MqlRates priceArrayVIDYA[];
   double vidyaArray[];
   double vidyaArray1[];
   int DataVIDYA = CopyRates(_Symbol, _Period, 0, 3, priceArrayVIDYA);
   ArraySetAsSeries(vidyaArray, true);
   ArraySetAsSeries(vidyaArray1, true);
   int vidyaDef = iVIDyA(_Symbol, _Period, 9, 12, 0, PRICE_CLOSE);
   int vidyaDef1 = iVIDyA(_Symbol, _Period, 20, 50, 0, PRICE_CLOSE);
   CopyBuffer(vidyaDef, 0, 0, 3, vidyaArray);
   CopyBuffer(vidyaDef1, 0, 0, 3, vidyaArray1);
   double currentCloseVIDYA = NormalizeDouble(priceArrayVIDYA[2].close, 6);
   double vidyaVal = NormalizeDouble(vidyaArray[0], 6);
   double vidyaVal1 = NormalizeDouble(vidyaArray1[0], 6);

///////////////////RVI Moving Average/////////////////////////////////////////////////
   MqlRates pArrayRVI_MA[];
   double maArrayRVI_MA[];
   double rviArray[];
   double rviSignalArray[];
   int DataRVI_MA = CopyRates(_Symbol, _Period, 0, 1, pArrayRVI_MA);
   ArraySetAsSeries(maArrayRVI_MA, true);
   ArraySetAsSeries(rviArray, true);
   ArraySetAsSeries(rviSignalArray, true);
   int rviDef = iRVI(_Symbol, _Period, 10);
   int maDefRVI_MA = iMA(_Symbol, _Period, 100, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(rviDef, 0, 0, 3, rviArray);
   CopyBuffer(rviDef, 1, 0, 3, rviSignalArray);
   CopyBuffer(maDefRVI_MA, 0, 0, 3, maArrayRVI_MA);
   double rviValue = NormalizeDouble(rviArray[0], 3);
   double rviSignalValue = NormalizeDouble(rviSignalArray[0], 3);
   double maValueRVI_MA = NormalizeDouble(maArrayRVI_MA[0], 3);
////////////////////ACELERATOR_OSCILLATOR//////////////////////////////////////
   MqlRates pArrayACMA[];
   double acArray[];
   double maArrayACMA[];
   int DataACMA = CopyRates(_Symbol,_Period, 0, 1, pArrayACMA);
   ArraySetAsSeries(acArray, true);
   ArraySetAsSeries(maArrayACMA, true);
   int acDefACMA = iAC(_Symbol, _Period);
   int maDefACMA = iMA(_Symbol, _Period, 50, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(acDefACMA, 0, 0, 3, acArray);
   CopyBuffer(maDefACMA,0, 0, 3, maArrayACMA);
   int acMaxArray = ArrayMaximum(acArray, 1, WHOLE_ARRAY);
   int acMinArray = ArrayMinimum(acArray, 1, WHOLE_ARRAY);
   double closingPriceACMA = pArrayACMA[0].close;
   double acValue = NormalizeDouble(acArray[0], 7);
   double acMaxValue = NormalizeDouble(acArray[acMaxArray], 7);
   double acMinValue = NormalizeDouble(acArray[acMinArray], 7);
   double maValueACMA = NormalizeDouble(maArrayACMA[0], 7);

///////////////////////AWESOME_OSCILLATOR///////////////////////////////////////////
   MqlRates pArrayAO[];
   double aoArray[];
   double maArrayAO[];
   int DataAO = CopyRates(_Symbol, _Period, 0, 1, pArrayAO);
   ArraySetAsSeries(aoArray, true);
   ArraySetAsSeries(maArrayAO, true);
   int aoDef = iAO(_Symbol, _Period);
   int maDefAO = iMA(_Symbol, _Period, 50, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(aoDef, 0, 0, 3, aoArray);
   CopyBuffer(maDefAO, 0, 0,3, maArrayAO);
   double closingPriceAO = pArrayAO[0].close;
   double aoValue = NormalizeDouble(aoArray[0], 7);
   double maValueAO = NormalizeDouble(maArrayAO[0], 7);

///////////////////////////DeMARKER_DIVERGENCE//////////////////////////////////////////
   double deMarkerArray[];
   MqlRates pArrayDeMarker[];
   ArraySetAsSeries(deMarkerArray, true);
   ArraySetAsSeries(pArrayDeMarker, true);
   int deMarkerDef = iDeMarker(_Symbol, _Period, 14);
   int pDataDeMarker = CopyRates(_Symbol, _Period, 0, 14, pArrayDeMarker);
   CopyBuffer(deMarkerDef, 0, 0, 14, deMarkerArray);
   double deMarkerVal = NormalizeDouble(deMarkerArray[0], 4);
   double deMarkerPrevVal = NormalizeDouble(deMarkerArray[1], 4);
   double currentHighDeMarker = NormalizeDouble(pArrayDeMarker[0].high, 6);
   double currentLowDeMarker = NormalizeDouble(pArrayDeMarker[0].low, 6);
   double prevHighDeMarker = NormalizeDouble(pArrayDeMarker[1].high, 6);
   double prevLowDeMarker = NormalizeDouble(pArrayDeMarker[1].low, 6);

/////////////////////////////////////ADX//////////////////////////////////////
//creating a variable for signal
//Create arrays for current ADX value, previous ADX value, +DI value and -DI value
   double ADXArray0[];
   double ADXArray1[];
   double PDIArray[];
   double NDIArray[];

//Identifying the ADX, positive DI, negative DI.
   int ADXDef = iADX(_Symbol, _Period, 14);

//Sort price arrays from current data
   ArraySetAsSeries(ADXArray0,true);
   ArraySetAsSeries(ADXArray1,true);
   ArraySetAsSeries(PDIArray,true);
   ArraySetAsSeries(NDIArray,true);

//Filling data according to created ADX
   CopyBuffer(ADXDef,0,0,3,ADXArray0);
   CopyBuffer(ADXDef,0,0,2,ADXArray1);
   CopyBuffer(ADXDef,1,0,3,PDIArray);
   CopyBuffer(ADXDef,2,0,3,NDIArray);

//Getting values of the current data
   double ADXValue=NormalizeDouble(ADXArray0[0], 2);
   double ADXValueLast=NormalizeDouble(ADXArray1[1], 2);
   double PDIValue=NormalizeDouble(PDIArray[0], 2);
   double NDIValue=NormalizeDouble(NDIArray[0], 2);

//////////////////////////CONDITIONS////////////////////////////////////////////
//DEFINE BUY CONDITIONS
   bool BUY_CONDITION_1 = (vidyaVal > vidyaVal1);
   bool BUY_CONDITION_2 = (acValue > acMaxValue) && (closingPriceACMA > maValueACMA);
   bool BUY_CONDITION_3 = (aoValue > 0) && (closingPriceAO > maValueAO);
   bool BUY_CONDITION_4 = (pArrayRVI_MA[0].close > maValueRVI_MA) && (rviValue > rviSignalValue);
   bool BUY_CONDITION_5 = (ADXValue > 25) && (ADXValue > ADXValueLast);
   bool BUY_CONDITION_6 = (PDIValue > NDIValue);
   bool BUY_CONDITION_7 = (currentHighDeMarker > prevHighDeMarker) && (deMarkerVal < deMarkerPrevVal);

//DEFINE SELL CONDITIONS
   bool SELL_CONDITION_1 = (vidyaVal < vidyaVal1);
   bool SELL_CONDITION_2 = (acValue < acMinValue) && (closingPriceACMA < maValueACMA);
   bool SELL_CONDITION_3 = (aoValue < 0) && (closingPriceAO < maValueAO);
   bool SELL_CONDITION_4 = (pArrayRVI_MA[0].close < maValueRVI_MA) && (rviValue < rviSignalValue);
   bool SELL_CONDITION_5 = (ADXValue > 25) && (ADXValue > ADXValueLast);
   bool SELL_CONDITION_6 = (PDIValue < NDIValue);
   bool SELL_CONDITION_7 = (currentLowDeMarker < prevLowDeMarker) && (deMarkerVal > deMarkerPrevVal);

//BUY SIGNAL

//if(BUY_CONDITION_1 == 1)
//Comment(""Current Close Value is "",currentCloseVIDYA,""\n"",
//   ""Current VIDYA (9,12) Value is ""
//   ,vidyaVal,""\n"",
//   ""Current VIDYA (20,50) Value is "",vidyaVal1);

   if(BUY_CONDITION_2)
     {
      if(BUY_CONDITION_3)
        {
         if(BUY_CONDITION_4)
           {
            if(BUY_CONDITION_5)
              {
               if(BUY_CONDITION_6)
                 {
                  if(BUY_CONDITION_7)
                    {
                     Comment(""BUY"", ""\n"",
                             ""AC Closing Price Is"", closingPriceACMA, ""\n"",
                             ""AC Value Is "", acValue, ""\n"",
                             ""AC Max Value Is "", acMaxValue, ""\n"",
                             ""AC Min Value Is "", acMinValue, ""\n"",
                             ""AC MA Value Is "", maValueACMA, ""\n"",
                             ""AO Closing Price is "", closingPriceAO, ""\n"",
                             ""AO Value Is "", aoValue, ""\n"",
                             ""AO MA Value Is "", maValueAO, ""\n"",
                             ""RVI Closing price is "", pArrayRVI_MA[0].close, ""\n"",
                             ""RVI MA Value is "", maValueRVI_MA, ""\n"",
                             ""Relative Vigor Index Is "", rviValue, ""\n"",
                             ""RVI Signal Value Is "", rviSignalValue, ""\n"",
                             ""ADX Value is "", ADXValue, ""\n"",
                             ""ADX Value Last is "", ADXValueLast, ""\n"",
                             ""+DI Value is "", PDIValue, ""\n"",
                             ""-DI Value is "", NDIValue, ""\n"",
                             ""Current High Is "", currentHighDeMarker, ""\n"",
                             ""Prev. High Value Is "", prevHighDeMarker, ""\n"",
                             ""Current DeMarker Value Is "", deMarkerVal, ""\n"",
                             ""Prev. DeMarker Value Is "", deMarkerPrevVal);
                    }
                 }
              }
           }
        }
     }
//SELL SIGNAL

//if(SELL_CONDITION_1)
//Comment(""Current Close Value is "",currentCloseVIDYA,""\n"",
//      ""Current VIDYA (9,12) Value is "",vidyaVal,""\n"",""Current VIDYA (20,50) Value is "",vidyaVal1, ""\n"");

   if(SELL_CONDITION_2)
     {
      if(SELL_CONDITION_3)
        {
         if(SELL_CONDITION_4)
           {
            if(SELL_CONDITION_5)
              {
               if(SELL_CONDITION_6)
                 {
                  if(SELL_CONDITION_7)
                    {
                     Comment(""SELL"", ""\n"",
                             ""AC Closing Price Is "", closingPriceACMA, ""\n"",
                             ""AC Value Is "", acValue, ""\n"",
                             ""AC Max Value Is "", acMaxValue, ""\n"",
                             ""AC Min Value Is "", acMinValue, ""\n"",
                             ""AC MA Value is "", maValueACMA, ""\n"",
                             ""AO Closing Price Is "", closingPriceAO, ""\n"",
                             ""AO Value Is "", aoValue, ""\n"",
                             ""AO MA Value Is "", maValueAO, ""\n"",
                             ""RVI Closing Price Is "", pArrayRVI_MA[0].close, ""\n"",
                             ""RVI MA Value Is "", maValueRVI_MA, ""\n"",
                             ""Relative Vigor Index Is "", rviValue, ""\n"",
                             ""RVI Signal Value Is "", rviSignalValue, ""\n"",
                             ""ADX Value is "", ADXValue, ""\n"",
                             ""ADX Value Last is "", ADXValueLast, ""\n"",
                             ""+DI Value is "", PDIValue, ""\n"",
                             ""-DI Value is "", NDIValue, ""\n"",
                             ""Current Low Is "", currentLowDeMarker, ""\n"",
                             ""Prev. Low Is "", prevLowDeMarker, ""\n"",
                             ""Current DeMarker Value Is "", deMarkerVal, ""\n"",
                             ""Prev. DeMarker Value Is "", deMarkerPrevVal);
                    }
                 }
              }
           }
        }
     }
  }
//+------------------------------------------------------------------+
"
5qVSzpuz,Untitled,woxd,JSON,Friday 29th of December 2023 02:49:29 PM CDT,"{""error"":""1001""}"
2NUaTzqA,zulrah fisher,LFCxx,Java,Friday 29th of December 2023 02:32:59 PM CDT,"package PowerFisher;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import net.runelite.api.ChatMessageType;
import simple.hooks.filters.SimpleSkills.Skills;
import simple.hooks.queries.SimpleItemQuery;
import simple.hooks.scripts.Category;
import simple.hooks.scripts.ScriptManifest;
import simple.hooks.simplebot.ChatMessage;
import simple.hooks.wrappers.SimpleItem;
import simple.hooks.wrappers.SimpleNpc;
import simple.robot.script.Script;

@ScriptManifest(author = ""Satan666"", name = ""Sacred Eel Fisher & Cutter"", category = Category.FISHING, description = ""Will fish and cut sacred eel's for its zulrah scales"", version = ""0.1"", servers = {""OldschoolRSPS""}, discord = ""kavinsky_crowley"")
public class Main extends Script implements MouseListener {
    private int fishingSpotId = 6488;
    private long lastFishingAttemptTime = 0;
    private final long FISHING_ATTEMPT_COOLDOWN = 20000;
    private int fishCaught = 0;
    private long startTime;
    private int startFishingXp;

    @Override
    public void onExecute() {
        this.startTime = System.currentTimeMillis();
        this.startFishingXp = this.ctx.skills.experience(Skills.FISHING);
        this.ctx.updateStatus(""Starting Sacred Eel Fisher & Cutter"");
    }

    @Override
    public void onProcess() {
        // Check for bait in inventory
        if (this.ctx.inventory.populate().filter(313).isEmpty()) {
            this.ctx.updateStatus(""Out of bait, stopping script."");
            this.ctx.stopScript();
            return;
        }

        // Main fishing logic
        if (this.ctx.inventory.populate().population() == 28) {
            manageInventory();
        } else if (System.currentTimeMillis() - lastFishingAttemptTime > FISHING_ATTEMPT_COOLDOWN) {
            fish();
        }
    }

    private void manageInventory() {
        SimpleItemQuery<SimpleItem> itemsToDrop = this.ctx.inventory.populate().filter(i -> i.getId() != 946 && i.getId() != 12934 && i.getId() != 313 && i.getId() != 307 && i.getId() != 13339);
        for (SimpleItem item : itemsToDrop) {
            item.click(""Drop"");
            this.ctx.sleep(100);
        }

        // Note: Have not added cutting method
    }

    private void fish() {
        SimpleNpc fishingSpot = (SimpleNpc) this.ctx.npcs.populate().filter(fishingSpotId).nearest().next();
        if (fishingSpot != null && fishingSpot.validateInteractable() && System.currentTimeMillis() - lastFishingAttemptTime > FISHING_ATTEMPT_COOLDOWN) {
            fishingSpot.click(""Bait"");
            lastFishingAttemptTime = System.currentTimeMillis();
            this.ctx.sleep(1000); // Adjust the sleep time as needed
        }
    }
    @Override
    public void onChatMessage(ChatMessage chatMessage) {
        if (chatMessage.getType() == ChatMessageType.SPAM) {
            String message = chatMessage.getMessage().toLowerCase();
            if (message.contains(""you catch a sacred eel"")) {
                fishCaught++;
            }
        }
    }

    @Override
    public void paint(Graphics graphics) {
        graphics.setColor(Color.BLACK);
        graphics.drawString(""Time Running: "" + formatTime(System.currentTimeMillis() - startTime), 20, 20);
        graphics.drawString(""Fish Caught: "" + fishCaught, 20, 35);
        graphics.drawString(""XP Gained: "" + (this.ctx.skills.experience(Skills.FISHING) - startFishingXp), 20, 50);
    }

    private String formatTime(long ms) {
        int seconds = (int) (ms / 1000) % 60;
        int minutes = (int) ((ms / (1000 * 60)) % 60);
        int hours = (int) ((ms / (1000 * 60 * 60)) % 24);
        return String.format(""%02d:%02d:%02d"", hours, minutes, seconds);
    }

    // MouseListener methods
    @Override
    public void mouseClicked(MouseEvent e) {}

    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {}

    @Override
    public void mouseExited(MouseEvent e) {}

    @Override
    public void onTerminate() {
        this.ctx.updateStatus(""Stopping Sacred Eel Fisher"");
    }
    }
"
NFMGP5Cy,Immich Portainer Stack File,gadgeteerza,YAML,Friday 29th of December 2023 01:41:54 PM CDT,"version: ""3.8""

#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# Note the variables are left as-is, you need to enter that info in the stcks.env file
# which is then pulled in when the stack is created

services:
  immich-server:
    container_name: immich_server
    hostname: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: [ ""start.sh"", ""immich"" ]
    networks:
      - mysql-net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/volumes/piwigogallery/_data/upload:/mnt/media/piwigo:ro
    env_file:
      - stack.env
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: ""true""

  immich-microservices:
    container_name: immich_microservices
    hostname: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.yml
    #   service: hwaccel
    command: [ ""start.sh"", ""microservices"" ]
    networks:
      - mysql-net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/volumes/piwigogallery/_data/upload:/mnt/media/piwigo:ro
    env_file:
      - stack.env
    depends_on:
      - redis
      - database
    restart: always
    labels:
      # Enable Watchtower to notify about updated image
      com.centurylinklabs.watchtower.enable: ""true""

  immich-machine-learning:
    container_name: immich_machine_learning
    hostname: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    networks:
      - mysql-net
    volumes:
      - model-cache:/cache
    env_file:
      - stack.env
    restart: always
    labels:
      # Enables Watchtower to notify about updated image
      com.centurylinklabs.watchtower.enable: ""true""

  redis:
    container_name: immich_redis
    hostname: immich_redis
    image: redis:6.2-alpine@sha256:b6124ab2e45cc332e16398022a411d7e37181f21ff7874835e0180f56a09e82a
    networks:
      - mysql-net
    restart: always
    labels:
      # Enables Watchtower to notify about updated image
      com.centurylinklabs.watchtower.enable: ""true""

  database:
    container_name: immich_postgres
    hostname: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.11@sha256:0335a1a22f8c5dd1b697f14f079934f5152eaaa216c09b61e293be285491f8ee
    env_file:
      - stack.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    networks:
      - mysql-net
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    labels:
      # Enables Watchtower to notify about updated image
      com.centurylinklabs.watchtower.enable: ""true""

volumes:
  pgdata:
  model-cache:

networks:
  mysql-net:
    # Joins existing network of this name
    external: true
    # Specify name so that it does not append stack name
    name: mysql-net
"
Bi3JCDtS,Driving Empire Script 2024,Artani,Lua,Friday 29th of December 2023 01:31:19 PM CDT,"*NEW* KEYLESS WORKING DRIVING EMPIRE AUTO FARM SCRIPT HACK PASTEBIN 2024

https://artanisrbx.com/driving-empire-working-auto-farm-script-pastebin-2024-no-key/
COPY LINK INTO BROWSER FOR SCRIPT!
TUTORIAL
https://www.youtube.com/watch?v=Nt1XKaWZh1w"
p1uBqtd0,skrypt.vbs,SuperSilverainox,VBScript,Friday 29th of December 2023 01:25:22 PM CDT,"' Specify the source and target paths and the file format
Dim sourcePath, targetPath, fileFormat
sourcePath = ""C:\source\path""
targetPath = ""D:\target\path""
fileFormat = ""*.png""

' Create FileSystemObject
Dim fso
Set fso = CreateObject(""Scripting.FileSystemObject"")

' Ensure target directory exists
If Not fso.FolderExists(targetPath) Then
    fso.CreateFolder(targetPath)
End If

' Function to recursively search and process files
Sub ProcessFolder(folder)
    Dim subFolder
    For Each subFolder In folder.SubFolders
        ProcessFolder subFolder
    Next

    Dim file, fileName, targetFile
    For Each file In folder.Files
        If LCase(fso.GetExtensionName(file.Name)) = ""png"" Then
            counter = counter + 1
            fileName = counter & "".png""
            targetFile = fso.BuildPath(targetPath, fileName)
            file.Move targetFile
        End If
    Next
End Sub

' Counter for file renaming
Dim counter
counter = 0

' Start processing
Dim rootFolder
Set rootFolder = fso.GetFolder(sourcePath)
ProcessFolder rootFolder

WScript.Echo ""Files transferred and renamed.""
"
UZJ4JtA2,Untitled,sissou123,C++,Friday 29th of December 2023 01:12:55 PM CDT,"C++: From Beginner to Expert
Designed for people who don't have any knowledge about the programming and want to program in C++
for more:https://cuty.io/VQWIdHIFo"
BhVTfbaq,Untitled,sissou123,JavaScript,Friday 29th of December 2023 01:04:41 PM CDT,"The Modern Javascript Bootcamp Course
The most up-to-date JS resource online! Master Javascript by building a beautiful portfolio of projects!
for more:https://cuty.io/x3ahWL5"
tHZ4wfcf,Untitled,sissou123,JavaScript,Friday 29th of December 2023 12:58:53 PM CDT,"JavaScript - The Complete Guide 2023 (Beginner + Advanced)
Modern JavaScript from the beginning - all the way up to JS expert level! THE must-have JavaScript resource in 2023.
for more:https://cuty.io/igGUlp"
0PFYBYHe,Untitled,sissou123,PHP,Friday 29th of December 2023 12:50:02 PM CDT,"The Complete 2023 PHP Full Stack Web Developer Bootcamp
Learn to build websites with HTML , CSS , JAVASCRIPT , Bootstrap , PHP , MySQL , WordPress , OOP & more! 
for more:https://cuty.io/Pv3t0Dtry
"
zgzpmeuh,Untitled,lucks232,Python,Friday 29th of December 2023 12:32:45 PM CDT,"# creaci√≥n de la clase polinomio
class Polinomio:
    def __init__(self, coeficientes):
        self.coeficientes = coeficientes

    # constructor del polinomio
    def __str__(self):
        # podr√≠amos haber definido el polinomio como una cadena vac√≠a tambi√©n
        terminos = []

        # al usar enumerate podemos asignar 2 variables al bucle for (i -> posici√≥n), (coef -> el coeficiente) en lugar de usar una variable auxiliar de contador
        for i, coef in enumerate(self.coeficientes):
            if coef == 0:
                # al contrario de break, continue, nos hace saltar directamente a la siguiente iteraci√≥n del for
                continue
            potencia = (len(self.coeficientes)-1) - i 
            # condiciones
            if potencia == 0:
                terminos.append(f""{coef}"")
            elif potencia == 1:
                if coef == 1:
                    terminos.append(""x"")
                elif coef == -1:
                    terminos.append(""-x"")
                else:
                    terminos.append(f""{coef}x"")
            else:
                if coef == 1:
                    terminos.append(f""x^{potencia}"")
                elif coef == -1:
                    terminos.append(f""-x^{potencia}"")
                else:
                    terminos.append(f""{coef}x^{potencia}"")
        #unimos terminos de la lista con + y reemplazamos ""+ -"" por ""- "" en caso de que los coeficientes sean negativos
        polinomio = ' + '.join(terminos).replace(""+ -"",""- "")

        if not terminos:
            return ""0""
        
        return polinomio
    
    def evaluar(self, x):
        coeficientes = self.coeficientes  # se obtienen los coeficientes del polinomio
        imagen = 0

        # se recorre la lista de coeficientes para calcular el valor del polinomio
        for i, coef in enumerate(coeficientes):
            # se calcula el t√©rmino correspondiente y se suma a la imagen
            if (len(coeficientes)-1-i) != 0:
                imagen += pow(x, len(coeficientes)-1-i) * coef
            else:
                # cuando es el t√©rmino independiente (potencia 0), se suma directamente el coeficiente
                imagen += coef
        return imagen
    
    def mul_real(self, x):
        coeficientes_copia = []
        # copiamos el polinomio original a una copia para no modificarlo
        for coef in self.coeficientes:
            coeficientes_copia.append(coef)

        # se multiplica cada coeficiente por el n√∫mero real 'x'
        for i, coef in enumerate(coeficientes_copia):
            coeficientes_copia[i] = coef*x  # actualiza el coeficiente multiplic√°ndolo por x
        
        return Polinomio(coeficientes_copia)
        
    def pol_opuesto(self):
        coeficientes_copia = []
        # hacemos la copia
        for coef in self.coeficientes:
            coeficientes_copia.append(coef)

        # se cambia el signo de cada coeficiente para obtener el polinomio opuesto
        for i, coef in enumerate(coeficientes_copia):
            coeficientes_copia[i] = coef*(-1)  # cambia el signo del coeficiente
        
        return Polinomio(coeficientes_copia)  # devuelve el polinomio opuesto
        
    def derivada(self):
        # crear una copia de la lista de coeficientes para manipularla
        coeficientes_copia = []
        for coef in self.coeficientes:
            coeficientes_copia.append(coef)
        
        # eliminar el t√©rmino constante ya que su derivada es 0
        coeficientes_copia.pop()
        
        # lista para almacenar los coeficientes derivados
        coeficientes_derivados = []

        # calcular la derivada de cada t√©rmino del polinomio
        for i, coef in enumerate(coeficientes_copia):
            grado = len(coeficientes_copia)-i  # determinar el grado del t√©rmino
            coef = coef*grado
            coeficientes_derivados.append(coef)
        
        # devolver un nuevo polinomio con los coeficientes derivados
        return Polinomio(coeficientes_derivados)
    
    def suma_pol(self, other):
        # invertir las listas de coeficientes para trabajar de menor a mayor grado
        polinomio1 = list(reversed(self.coeficientes))
        polinomio2 = list(reversed(other.coeficientes))

        max_longitud = max(len(polinomio1), len(polinomio2))
        polinomio1_l = polinomio1 + (max_longitud - len(polinomio1))*[0]
        polinomio2_l = polinomio2 + (max_longitud - len(polinomio2))*[0]

        # sumar los coeficientes correspondientes de los dos polinomios
        coeficientes_suma = []
        for i in range(max_longitud):
            coeficientes_suma.append(polinomio1_l[i] + polinomio2_l[i])

        # invertir de nuevo para obtener el orden correcto de coeficientes
        coeficientes_suma = list(reversed(coeficientes_suma))
        
        return Polinomio(coeficientes_suma)

    def resta_pol(self, other):
        polinomio1 = list(reversed(self.coeficientes))
        polinomio2 = list(reversed(other.coeficientes))

        max_longitud = max(len(polinomio1), len(polinomio2))
        polinomio1_l = polinomio1 + (max_longitud - len(polinomio1))*[0]
        polinomio2_l = polinomio2 + (max_longitud - len(polinomio2))*[0]

        # restar los coeficientes correspondientes
        coeficientes_resta = []
        for i in range(max_longitud):
            coeficientes_resta.append(polinomio1_l[i] - polinomio2_l[i])

        coeficientes_resta = list(reversed(coeficientes_resta))
        
        return Polinomio(coeficientes_resta)
    
    def mul_pol(self, other):
        polinomio1 = list(reversed(self.coeficientes))
        polinomio2 = list(reversed(other.coeficientes))

        # se inicializa el resultado con ceros para almacenar los coeficientes resultantes
        resultado = [0] * (len(polinomio1) + len(polinomio2) - 1)
        for i, coef1 in enumerate(polinomio1):
            for j, coef2 in enumerate(polinomio2):
                resultado[i+j] += coef1 * coef2
        
        # eliminar ceros al final que no representan t√©rminos
        while len(resultado) > 1 and resultado[-1] == 0:
            resultado.pop()
        
        # devolver nuevo polinomio con coeficientes invertidos a su orden original
        return Polinomio(list(reversed(resultado)))

    def div_pol(self, other):
        polinomio1 = list(reversed(self.coeficientes))
        polinomio2 = list(reversed(other.coeficientes))

        # determinar grados de los polinomios para guiar la divisi√≥n
        grado_dividendo = len(polinomio1) - 1
        grado_divisor = len(polinomio2) - 1

        # inicializar cociente con ceros
        cociente = [0] * max(1, grado_dividendo - grado_divisor + 1)
        while grado_dividendo >= grado_divisor and grado_dividendo >= 0:
            # calcular factor del t√©rmino actual del cociente
            factor = polinomio1[grado_dividendo] / polinomio2[grado_divisor]
            cociente[grado_dividendo - grado_divisor] = factor

            # restar el m√∫ltiplo del divisor del dividendo
            for i in range(len(polinomio2)):
                if grado_dividendo - i < 0:
                    break
                polinomio1[grado_dividendo - i] -= polinomio2[grado_divisor - i] * factor

            # ajustar grado del dividendo despu√©s de la substracci√≥n
            while grado_dividendo >= 0 and (grado_dividendo >= len(polinomio1) or polinomio1[grado_dividendo] == 0):
                grado_dividendo -= 1

        # recolectar y ajustar los t√©rminos restantes como el resto
        resto = list(reversed(polinomio1[:max(0, grado_dividendo + 1)]))

        # convertimos los coeficientes a enteros si son enteros exactos para limpieza de n.0
        for i, coef in enumerate(resto):
            if resto[i] % 1 == 0:
                resto[i] = int(resto[i])
        
        for i, coef in enumerate(cociente):
            if coef % 1 == 0:
                cociente[i] = int(cociente[i])

        # se eliminan ceros innecesarios del cociente
        while len(cociente) > 1 and cociente[-1] == 0:
            cociente.pop()

        return Polinomio(list(reversed(cociente))), Polinomio(resto)

    # Los m√©todo de aqu√≠ en adelante han sido estructurados para ser usados dentro del m√©todo factorizar()
    # El razonamiento que se ha hecho para poder por lo menos factorizar polinomios con soluciones racionales ha sido
    # 1) MCD -> Simplificamos -> Ruffini -> Iteramos
    def mcd(self):
        # definici√≥n de la funci√≥n euclides para calcular el mcd de dos n√∫meros
        def euclides(a, b):
            # bucle mientras b sea diferente de cero
            while b != 0:
                # actualizamos los valores de a y b usando el algoritmo de euclides
                a, b = b, a % b
            return a
        
        # inicializamos mcd con el primer coeficiente del polinomio
        mcd = self.coeficientes[0]
        # iteramos sobre los coeficientes del polinomio
        for coef in self.coeficientes[1:]:
            # actualizamos el mcd con el mcd del coeficiente actual y el mcd acumulado
            mcd = euclides(mcd, coef)
        return mcd
    
    def simplificar(self):
        # obtenemos el mcd de los coeficientes del polinomio
        mcd = self.mcd()

        # solo simplificamos si el mcd es diferente de 1
        if mcd != 1:
            nuevos_coeficientes = [] # lista para almacenar los nuevos coeficientes
            # dividimos cada coeficiente por el mcd y lo a√±adimos a la lista de nuevos coeficientes
            for coef in self.coeficientes:
                nuevos_coeficientes.append(coef // mcd)
            # actualizamos los coeficientes del polinomio con los nuevos coeficientes simplificados
            self.coeficientes = nuevos_coeficientes
        
    def raices_racionales(self):
        # inicializaci√≥n de la lista para almacenar posibles numeradores
        numerador = []
        # bucle para encontrar todos los enteros entre el negativo y positivo del √∫ltimo coeficiente
        for i in range(-abs(self.coeficientes[-1]), abs(self.coeficientes[-1]) + 1):
            if i != 0:  # excluimos el cero ya que no es un candidato v√°lido para el numerador
                numerador.append(i)
        
        # inicializaci√≥n de la lista para almacenar posibles denominadores
        denominador = []
        # bucle para encontrar todos los divisores del primer coeficiente
        for i in range(1, abs(self.coeficientes[0]) + 1):
            if self.coeficientes[0] % i == 0:  # si i es un divisor de coeficientes[0]
                denominador.append(i)
        
        # utilizamos un conjunto para evitar repetir candidatos
        candidatos = set()
        # doble bucle para dividir todos los numeradores posibles entre los denominadores
        for numerador_valor in numerador:
            for denominador_valor in denominador:
                candidato = numerador_valor // denominador_valor
                candidatos.add(candidato)  # a√±adimos el candidato al conjunto de candidatos
        
        # devolvemos el conjunto de candidatos posibles
        return candidatos
    
    def ruffini(self, raiz):
        # inicializaci√≥n de la lista para almacenar los coeficientes resultantes
        resultado = []
        # el primer coeficiente siempre es parte del resultado
        resultado.append(self.coeficientes[0])
        # aplicamos la regla de ruffini para encontrar el resto de coeficientes
        for coef in self.coeficientes[1:]:
            # multiplicamos el √∫ltimo elemento de resultado por la ra√≠z y sumamos el coeficiente actual
            resultado.append(resultado[-1] * raiz + coef)
        
        # devolvemos dos cosas: el polinomio resultante y el residuo
        # el polinomio resultante es todos menos el √∫ltimo t√©rmino de resultado
        # el √∫ltimo t√©rmino de resultado es el residuo
        return Polinomio(resultado[:-1]), resultado[-1]
    
    def factorizar(self):
        # copia de los coeficientes para evitar modificar el polinomio original
        coeficientes_copia = []
        for coef in self.coeficientes:
            coeficientes_copia.append(coef)

        # creaci√≥n de una nueva variable de clase Polinomio con la copia de los coeficientes
        coeficientes_copia = Polinomio(coeficientes_copia)

        # simplificaci√≥n del polinomio si es necesario
        coeficientes_copia.simplificar()

        # inicializamos la lista para almacenar los factores del polinomio
        factores = []
        # bucle para encontrar todos los factores
        while len(coeficientes_copia.coeficientes) > 1:
            # b√∫squeda de ra√≠ces racionales del polinomio
            raices = coeficientes_copia.raices_racionales()
            raiz_encontrada = None
            # iteramos a trav√©s de las ra√≠ces potenciales
            for r in raices:
                # uso del m√©todo de ruffini para reducir el polinomio por una ra√≠z potencial
                polinomio_reducido, resto = coeficientes_copia.ruffini(r)
                if resto == 0:  # si el resto es 0, r es una ra√≠z del polinomio
                    raiz_encontrada = r
                    # actualizamos los coeficientes del polinomio para reflejar la divisi√≥n
                    coeficientes_copia.coeficientes = polinomio_reducido.coeficientes
                    # registro del factor encontrado
                    factores.append(f""x - {r}"")
                    break  # salimos del bucle ya que encontramos una ra√≠z v√°lida
            if raiz_encontrada is None:
                break  # si no se encuentran m√°s ra√≠ces racionales, terminamos el bucle

        # devoluci√≥n de la lista de factores encontrados
        return factores"
hJ0hY6dP,Untitled,lucks232,Python,Friday 29th of December 2023 12:32:11 PM CDT,"from polinomio_clase import Polinomio

def crear_polinomio():
    coeficientes = []  # se inicia una lista vac√≠a para almacenar los coeficientes
    grado = int(input(""¬øCu√°l es el grado del polinomio?: ""))

    # se recorre el rango de grados del polinomio de forma descendente
    for i in reversed(range(grado+1)):
        if i != 0:  # si el t√©rmino no es el constante
            coef = int(input(f""Escriba el coeficiente del t√©rmino de x con exponente {i}: ""))
            coeficientes.append(coef)  # se agrega el coeficiente a la lista
        else:  # si es el t√©rmino constante
            coef = int(input(f""Escriba el coeficiente del t√©rmino constante (sin x): ""))
            coeficientes.append(coef)  # se agrega el t√©rmino constante a la lista

    polinomio = Polinomio(coeficientes)  # se crea una instancia del polinomio

    print(f""\nPolinomio creado:\n\n{polinomio}\n"")
    return polinomio

def listar_polinomios():
    polinomios = array_de_polinomios()

    print(""            Lista de polinomios:"")
    print(""‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"")
    
    for i, pol in enumerate(polinomios):
        print(f""{i+1}) {pol}"")

def eliminar_polinomio():
    polinomios = array_de_polinomios()

    print(""¬øQu√© polinomio quieres eliminar de la lista? (1,2,3,4...)"")
    pol_eliminar = int(input())

    polinomios.pop(pol_eliminar-1)
    with open('polinomios.txt', 'w', encoding='utf-8') as file:
        for pols in polinomios:
            for coef in pols.coeficientes:
                file.write(f""{coef} "")
            file.write(""\n"")

def array_de_polinomios():
    polinomios = []
    
    with open('polinomios.txt', 'r', encoding='utf-8') as file: # leemos el archivo
        for linea in file:
            coeficientes = []
            for num in linea.split():
                coeficientes.append(int(num))
            polinomios.append(Polinomio(coeficientes))
                
    return polinomios
    
# menu
def menu_principal():
    while True:
        print(""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"")
        print(""‚ïë                                 ‚ïë"")
        print(""‚ïë      1. Crear un polinomio      ‚ïë"")
        print(""‚ïë      2. Listar polinomios       ‚ïë"")
        print(""‚ïë      3. Eliminar un polinomio   ‚ïë"")
        print(""‚ïë      4. Operar con polinomios   ‚ïë"")
        print(""‚ïë      5. Salir                   ‚ïë"")
        print(""‚ïë                                 ‚ïë"")
        print(""‚ïë             Hecho por L. Garc√≠a ‚ïë"")
        print(""‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"")

        opcion = int(input(""Escoge una opci√≥n: ""))

        if opcion == 1:
            polinomio = crear_polinomio()
            while True: #bucle infinito para a√±adir robustez en caso de mal input
                respuesta = input(""¬øQuieres guardar este polinomio? (y/n): "")
                if respuesta.lower() == 'y' or respuesta.lower() == 'yes': 
                    with open('polinomios.txt', 'a', encoding='utf-8') as file:
                        for i, coef in enumerate(polinomio.coeficientes):
                            file.write(f""{coef} "")
                        file.write(""\n"")
                        break

                elif respuesta.lower() == 'n' or respuesta.lower() == 'no':
                    break
                else:
                    print(""Respuesta inv√°lida"")

        elif opcion == 2:
            print('\n')
            listar_polinomios()
            print(""\nEsta es la lista de polinomios hasta ahora."")
            while True: # bucle infinito para a√±adir robustez en el input
                print(""m: volver al men√∫ principal         x: salir"")
                respuesta = input()
                if respuesta.lower() == 'm':
                    menu_principal()
                else:
                    break
                break
            break                
        
        elif opcion == 3:
            print('\n')

            listar_polinomios()
            eliminar_polinomio()

            print(""\nPolinomios eliminado de la lista exitosamente."")

            while True:
                print(""\nm: volver al men√∫ principal         x: salir"")
                respuesta = input()
                if respuesta.lower() == 'm':
                    menu_principal()
                else:
                    break
                break
            break

        elif opcion == 4:
            print(""\n               Lista de operaciones:"")
            print(""‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"")
            print(""1) Evaluar un polinomio en un punto dado"")
            print(""2) Multiplicar un polinomio por un n√∫mero real"")
            print(""3) Obtenci√≥n del polinomio opuesto"")
            print(""4) Calcular la derivada de un polinomio"")
            print(""5) Sumar polinomios"")
            print(""6) Restar polinomios"")
            print(""7) Multiplicar polinomios"")
            print(""8) Dividir polinomios"")
            print(""9) Factorizar un polinomio\n"")
            
            print(""¬øQu√© operaci√≥n quieres realizar? (1,2,3...):"")
            respuesta_op = int(input())

            if respuesta_op == 1: # evaluar polinomio
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\n¬øQu√© polinomio deseas evaluar de la lista? (1,2,3...): "")
                input_pol = int(input())

                print(""\nEscoja un valor de x sobre el cual quiere evaluar el polinomio seleccionado:"")
                input_valor = float(input())
                
                if input_valor % 1 == 0:
                    input_valor = int(input_valor)

                pol = polinomios[input_pol-1]
                valor = pol.evaluar(input_valor)
                
                print(f""\n{pol} evaluado en {input_valor} es {valor}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break
            
            if respuesta_op == 2: # multiplicar polinomio por n√∫mero real
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\n¬øCon qu√© polinomio deseas operar de la lista? (1,2,3...): "")
                input_pol = int(input())

                print(""\nEscoja un valor real por el cual quiere multiplicar el polinomio seleccionado:"")
                input_valor = float(input())

                pol = polinomios[input_pol-1]

                if input_valor % 1 == 0:
                    input_valor = int(input_valor)

                mul = pol.mul_real(input_valor)

                print(f""\nEl polinomio resultante de multiplicar {pol} por {input_valor} es {mul}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break
            
            if respuesta_op == 3: # obtener el polinomio opuesto
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\n¬øDe qu√© polinomio deseas obtener su opuesto en la lista? (1,2,3...): "")
                input_pol = int(input())

                pol = polinomios[input_pol-1]
                pol_opuesto = pol.pol_opuesto()

                print(f""\nEl polinomio opuesto a {pol} es {pol_opuesto}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break

            if respuesta_op == 4: # calcular la derivada de un polinomio
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\n¬øQu√© polinomio deseas derivar de la lista? (1,2,3...): "")
                input_pol = int(input())

                polinomio = polinomios[input_pol-1]
            
                pol_derivada = polinomio.derivada()

                print(f""\nLa derivada de {polinomio} es {pol_derivada}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break

            if respuesta_op == 5: # sumar polinomios
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\nElige el primer sumando (1,2,3...):"")
                input_pol1 = int(input())
                print(""Elige el segundo sumando (1,2,3...):"")
                input_pol2 = int(input())

                polinomio1 = polinomios[input_pol1-1]
                polinomio2 = polinomios[input_pol2-1]

                value = polinomio1.suma_pol(polinomio2)

                print(f""\nLa suma entre ambos polinomios es {value}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break

            if respuesta_op == 6: # restar polinomios
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\nElige el primer t√©rmino de la resta (1,2,3...):"")
                input_pol1 = int(input())
                print(""Elige el segundo t√©rmino de la resta (1,2,3...):"")
                input_pol2 = int(input())

                polinomio1 = polinomios[input_pol1-1]
                polinomio2 = polinomios[input_pol2-1]

                value = polinomio1.resta_pol(polinomio2)

                print(f""\nLa resta entre ambos polinomios es {value}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break
            
            if respuesta_op == 7: # multiplicar polinomios
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\nElige el primer t√©rmino de la multiplicaci√≥n (1,2,3...):"")
                input_pol1 = int(input())
                print(""Elige el segundo t√©rmino de la multiplicaci√≥n (1,2,3...):"")
                input_pol2 = int(input())

                polinomio1 = polinomios[input_pol1-1]
                polinomio2 = polinomios[input_pol2-1]

                value = polinomio1.mul_pol(polinomio2)

                print(f""\nLa multiplicaci√≥n entre ambos polinomios es {value}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break
            
            if respuesta_op == 8: # dividir polinomios
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\nElige el dividendo de la divisi√≥n (1,2,3...):"")
                input_pol1 = int(input())
                print(""Elige el divisor de la divisi√≥n (1,2,3...):"")
                input_pol2 = int(input())

                polinomio1 = polinomios[input_pol1-1]
                polinomio2 = polinomios[input_pol2-1]

                value = polinomio1.div_pol(polinomio2)

                print(f""\nLa divisi√≥n entre ambos polinomios da como cociente {value[0]} y como resto {value[1]}"")

                while True: # bucle infinito para a√±adir robustez en el input
                    print(""\nm: volver al men√∫ principal         x: salir"")
                    respuesta = input()
                    if respuesta.lower() == 'm':
                        menu_principal()
                    else:
                        break                    
                break
            
            if respuesta_op == 9: # factorizar polinomios
                polinomios = array_de_polinomios()

                listar_polinomios()

                print(""\n¬øQu√© polinomio deseas factorizar de la lista? (1,2,3...):"")
                input_pol = int(input())

                polinomio = polinomios[input_pol-1]

                value = polinomio.factorizar()

                print(f""\nAl factorizar {polinomio} obtenemos como raices {value}"")


        elif opcion == 5:
            break


menu_principal()"
LZ341WUF,Untitled,Josif_tepe,C++,Friday 29th of December 2023 12:00:03 PM CDT,"#include <iostream>
using namespace std;
int main() {
    int a, b, k;
    cin >> a >> b >> k;
    
    int zbir = 0;
    for(int n = a; n <= b; n += 1) {
        int broj_na_deliteli_na_n = 0;
        for(int i = 1; i <= n; i += 1) {
            if(n % i == 0) {
                broj_na_deliteli_na_n += 1;
            }
        }
        int ok = 1;
        for(int i = n - 1; i >= n - k; i -= 1) {
            if(i >= 1) {
                int deliteli_na_i = 0;
                for(int j = 1; j <= i; j += 1) {
                    if(i % j == 0) {
                        deliteli_na_i += 1;
                    }
                }
                if(broj_na_deliteli_na_n <= deliteli_na_i) {
                    ok = 0;
                }
            }
            if(ok == 1) {
                zbir += n;
            }
        }
        
    }
    cout << zbir << endl;
    return 0;
}
"
hX1MbaYk,Untitled,Josif_tepe,C++,Friday 29th of December 2023 11:49:43 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n = 28;
    int k = 4;
    int broj_na_deliteli_na_n = 0;
    for(int i = 1; i <= n; i += 1) {
        if(n % i == 0) {
            broj_na_deliteli_na_n += 1;
        }
    }
    int ok = 1;
    for(int i = n - 1; i >= n - k; i -= 1) {
        
        int deliteli_na_i = 0;
        for(int j = 1; j <= i; j += 1) {
            if(i % j == 0) {
                deliteli_na_i += 1;
            }
        }
        if(broj_na_deliteli_na_n <= deliteli_na_i) {
            ok = 0;
        }
    }
    if(ok == 1) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    return 0;
}
"
VJGDDgGw,Untitled,sissou123,Python,Friday 29th of December 2023 11:41:13 AM CDT,"Python Application Developer
Build web applications using the Python programming language and the Django framework.
for more:https://dz-linkk.com/ZSoHs"
jiX2pCjc,Untitled,ahmedzero11,HTML,Friday 29th of December 2023 11:37:52 AM CDT,"<head>
	<style>
		#target_website {
			position:relative;
			width:128px;
			height:128px;
			opacity:0.00001;
			z-index:2;
			}
		#decoy_website {
			position:absolute;
			width:300px;
			height:400px;
			z-index:1;
			}
	</style>
</head>
...
<body>
	<div id=""decoy_website"">
	...decoy web content here...
	</div>
	<iframe id=""target_website"" src=""https://fk3ulag6srkz4sstwu5nmnak0b62uxim.oastify.com"">
	</iframe>
</body>"
xfjks86m,Untitled,Josif_tepe,C++,Friday 29th of December 2023 11:34:14 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    
    for(int i = 1; i <= n; i++) {
        if(n % i == 0) {
            cout << i << "" "";
        }
    }
    return 0;
}
"
jgnEWic7,Untitled,sissou123,PHP,Friday 29th of December 2023 11:33:24 AM CDT,"Complete Modern PHP Developer Course in 2023
The modern PHP course with a project, challenges and theory. Includes SQL and MVC Framework. Get started with PHP 8!
for more:https://cuty.io/Ydlyn9y2e "
fqc4wZAb,davigale,erehh,C++,Friday 29th of December 2023 11:27:43 AM CDT,"// RedBlackTreeNode.h

#ifndef RED_BLACK_TREE_NODE_H
#define RED_BLACK_TREE_NODE_H

#include <iostream>

enum ColorType { RED, BLACK };

class RedBlackTreeNode {
    friend class RedBlackTree;

private:
    int value;
    ColorType color;
    RedBlackTreeNode* parent;
    RedBlackTreeNode* left;
    RedBlackTreeNode* right;

public:
    // Constructor
    RedBlackTreeNode() : value(0), color(RED), left(nullptr), right(nullptr), parent(nullptr) {}

    // Explicit Value Constructor
    RedBlackTreeNode(int inValue, ColorType inColor, RedBlackTreeNode* inLeft = nullptr, RedBlackTreeNode* inRight = nullptr, RedBlackTreeNode* inParent = nullptr)
        : value(inValue), left(inLeft), right(inRight), parent(inParent), color(inColor) {}

    // Getter Functions
    inline int getValue() const { return value; }
    inline ColorType getColor() const { return color; }

    // Setter Functions
    inline void setValue(int newVal) { value = newVal; }
    inline void setColor(ColorType inColor) { color = inColor; }
};

#endif // RED_BLACK_TREE_NODE_H

// RedBlackTree.h

#ifndef RED_BLACK_TREE_H
#define RED_BLACK_TREE_H

#include ""RedBlackTreeNode.h""

class RedBlackTree {
private:
    RedBlackTreeNode* root;

    // Private utility functions
    void leftRotate(RedBlackTreeNode* x);
    void rightRotate(RedBlackTreeNode* x);
    void insertFixup(RedBlackTreeNode* z);
    void transplant(RedBlackTreeNode* u, RedBlackTreeNode* v);
    void deleteFixup(RedBlackTreeNode* x);
    void treeDelete(RedBlackTreeNode* z);

    // Other utility functions (placeholders)
    void clearTree(RedBlackTreeNode* node);
    RedBlackTreeNode* cloneTree(RedBlackTreeNode* originalNode, RedBlackTreeNode* parent);
    RedBlackTreeNode* minimum(RedBlackTreeNode* node);
    void treeInsert(RedBlackTreeNode* newNode);
    RedBlackTreeNode* treeSearch(RedBlackTreeNode* node, int value);
    void preorderTraversal(RedBlackTreeNode* node);
    void inorderTraversal(RedBlackTreeNode* node);
    void postorderTraversal(RedBlackTreeNode* node);
    void displayPreorderTraversal(RedBlackTreeNode* node);

public:
    // Public member functions
    RedBlackTree() : root(nullptr) {}
    ~RedBlackTree();
    RedBlackTree(const RedBlackTree& other);
    RedBlackTree& operator=(const RedBlackTree& other);

    void insert(int value);
    void remove(int value);
    RedBlackTreeNode* search(int value);
    void preorder();
    void inorder();
    void postorder();
    void displayPreorder();
};

#endif // RED_BLACK_TREE_H

// RedBlackTree.cpp

#include ""RedBlackTree.h""
#include <iostream>

using namespace std;

// Private utility functions

// Rotate left at node x
void RedBlackTree::leftRotate(RedBlackTreeNode* x) {
    RedBlackTreeNode* y = x->right;
    x->right = y->left;
    if (y->left != nullptr) {
        y->left->parent = x;
    }
    y->parent = x->parent;
    if (x->parent == nullptr) {
        root = y;
    }
    else if (x == x->parent->left) {
        x->parent->left = y;
    }
    else {
        x->parent->right = y;
    }
    y->left = x;
    x->parent = y;
}

// Rotate right at node x
void RedBlackTree::rightRotate(RedBlackTreeNode* x) {
    RedBlackTreeNode* y = x->left;
    x->left = y->right;
    if (y->right != nullptr) {
        y->right->parent = x;
    }
    y->parent = x->parent;
    if (x->parent == nullptr) {
        root = y;
    }
    else if (x == x->parent->right) {
        x->parent->right = y;
    }
    else {
        x->parent->left = y;
    }
    y->right = x;
    x->parent = y;
}

// Fix the Red-Black Tree properties after insert
void RedBlackTree::insertFixup(RedBlackTreeNode* z) {
    while (z->parent != nullptr && z->parent->getColor() == RED) {
        if (z->parent == z->parent->parent->left) {
            RedBlackTreeNode* y = z->parent->parent->right; // uncle

            // Case 1: Uncle is RED
            if (y != nullptr && y->getColor() == RED) {
                z->parent->setColor(BLACK);
                y->setColor(BLACK);
                z->parent->parent->setColor(RED);
                z = z->parent->parent;
            }
            else {
                // Case 2: Uncle is BLACK and z is a right child
                if (z == z->parent->right) {
                    z = z->parent;
                    leftRotate(z);
                }

                // Case 3: Uncle is BLACK and z is a left child
                z->parent->setColor(BLACK);
                z->parent->parent->setColor(RED);
                rightRotate(z->parent->parent);
            }
        }
        else {
            // Symmetric case for right child
            // Similar to the above, but left and right are swapped
            RedBlackTreeNode* y = z->parent->parent->left; // uncle

            // Case 1: Uncle is RED
            if (y != nullptr && y->getColor() == RED) {
                z->parent->setColor(BLACK);
                y->setColor(BLACK);
                z->parent->parent->setColor(RED);
                z = z->parent->parent;
            }
            else {
                // Case 2: Uncle is BLACK and z is a left child
                if (z == z->parent->left) {
                    z = z->parent;
                    rightRotate(z);
                }

                // Case 3: Uncle is BLACK and z is a right child
                z->parent->setColor(BLACK);
                z->parent->parent->setColor(RED);
                leftRotate(z->parent->parent);
            }
        }
    }

    root->setColor(BLACK); // Ensure the root is always black
}

// Transplant subtree rooted at node u with subtree rooted at node v
void RedBlackTree::transplant(RedBlackTreeNode* u, RedBlackTreeNode* v) {
    if (u->parent == nullptr) {
        root = v;
    }
    else if (u == u->parent->left) {
        u->parent->left = v;
    }
    else {
        u->parent->right = v;
    }

    if (v != nullptr) {
        v->parent = u->parent;
    }
}

// Fix the Red-Black Tree properties after delete
void RedBlackTree::deleteFixup(RedBlackTreeNode* x) {
    while (x != root && (x == nullptr || x->getColor() == BLACK)) {
        if (x == x->parent->left) {
            RedBlackTreeNode* w = x->parent->right;

            // Case 1: Sibling w is red
            if (w != nullptr && w->getColor() == RED) {
                w->setColor(BLACK);
                x->parent->setColor(RED);
                leftRotate(x->parent);
                w = x->parent->right;
            }

            // Case 2: Both children of w are black
            if ((w->left == nullptr || w->left->getColor() == BLACK) &&
                (w->right == nullptr || w->right->getColor() == BLACK)) {
                w->setColor(RED);
                x = x->parent;
            }
            else {
                // Case 3: Right child of w is black
                if (w->right == nullptr || w->right->getColor() == BLACK) {
                    w->left->setColor(BLACK);
                    w->setColor(RED);
                    rightRotate(w);
                    w = x->parent->right;
                }

                // Case 4: Right child of w is red
                w->setColor(x->parent->getColor());
                x->parent->setColor(BLACK);
                if (w->right != nullptr) {
                    w->right->setColor(BLACK);
                }
                leftRotate(x->parent);
                x = root;
            }
        }
        else {
            // Symmetric case for right child
            RedBlackTreeNode* w = x->parent->left;

            // Case 1: Sibling w is red
            if (w != nullptr && w->getColor() == RED) {
                w->setColor(BLACK);
                x->parent->setColor(RED);
                rightRotate(x->parent);
                w = x->parent->left;
            }

            // Case 2: Both children of w are black
            if ((w->right == nullptr || w->right->getColor() == BLACK) &&
                (w->left == nullptr || w->left->getColor() == BLACK)) {
                w->setColor(RED);
                x = x->parent;
            }
            else {
                // Case 3: Left child of w is black
                if (w->left == nullptr || w->left->getColor() == BLACK) {
                    w->right->setColor(BLACK);
                    w->setColor(RED);
                    leftRotate(w);
                    w = x->parent->left;
                }

                // Case 4: Left child of w is red
                w->setColor(x->parent->getColor());
                x->parent->setColor(BLACK);
                if (w->left != nullptr) {
                    w->left->setColor(BLACK);
                }
                rightRotate(x->parent);
                x = root;
            }
        }
    }

    if (x != nullptr) {
        x->setColor(BLACK);
    }
}

// Delete a node from the Red-Black Tree
void RedBlackTree::treeDelete(RedBlackTreeNode* z) {
    RedBlackTreeNode* y = z;
    RedBlackTreeNode* x;
    ColorType yOriginalColor = y->getColor();

    if (z->left == nullptr) {
        x = z->right;
        transplant(z, z->right);
    }
    else if (z->right == nullptr) {
        x = z->left;
        transplant(z, z->left);
    }
    else {
        y = minimum(z->right);
        yOriginalColor = y->getColor();
        x = y->right;
        if (y->parent == z) {
            if (x != nullptr) {
                x->parent = y;
            }
        }
        else {
            transplant(y, y->right);
            y->right = z->right;
            if (y->right != nullptr) {
                y->right->parent = y;
            }
        }
        transplant(z, y);
        y->left = z->left;
        y->left->parent = y;
        y->setColor(z->getColor());
    }

    if (yOriginalColor == BLACK) {
        deleteFixup(x);
    }
}

// Clear the tree recursively starting from the given node
void RedBlackTree::clearTree(RedBlackTreeNode* node) {
    if (node != nullptr) {
        clearTree(node->left);
        clearTree(node->right);
        delete node;
    }
}

// Clone the tree starting from the originalNode
RedBlackTreeNode* RedBlackTree::cloneTree(RedBlackTreeNode* originalNode, RedBlackTreeNode* parent) {
    if (originalNode == nullptr) {
        return nullptr;
    }

    RedBlackTreeNode* newNode = new RedBlackTreeNode(originalNode->getValue(), originalNode->getColor(), nullptr, nullptr, parent);
    newNode->left = cloneTree(originalNode->left, newNode);
    newNode->right = cloneTree(originalNode->right, newNode);

    return newNode;
}

// Find the node with the minimum value in the subtree rooted at node
RedBlackTreeNode* RedBlackTree::minimum(RedBlackTreeNode* node) {
    while (node != nullptr && node->left != nullptr) {
        node = node->left;
    }
    return node;
}

// Insert a node into the Red-Black Tree
void RedBlackTree::treeInsert(RedBlackTreeNode* newNode) {
    RedBlackTreeNode* y = nullptr;
    RedBlackTreeNode* x = root;

    while (x != nullptr) {
        y = x;
        if (newNode->getValue() < x->getValue()) {
            x = x->left;
        }
        else {
            x = x->right;
        }
    }

    newNode->parent = y;

    if (y == nullptr) {
        root = newNode; // Tree was empty
    }
    else if (newNode->getValue() < y->getValue()) {
        y->left = newNode;
    }
    else {
        y->right = newNode;
    }
}

// Search for a node with a given value in the subtree rooted at node
RedBlackTreeNode* RedBlackTree::treeSearch(RedBlackTreeNode* node, int value) {
    while (node != nullptr && value != node->getValue()) {
        if (value < node->getValue()) {
            node = node->left;
        }
        else {
            node = node->right;
        }
    }
    return node;
}

// Traverse the tree in preorder and perform an action for each node
void RedBlackTree::preorderTraversal(RedBlackTreeNode* node) {
    if (node != nullptr) {
        cout << node->getValue() << "" "";
        preorderTraversal(node->left);
        preorderTraversal(node->right);
    }
}

// Traverse the tree in inorder and perform an action for each node
void RedBlackTree::inorderTraversal(RedBlackTreeNode* node) {
    if (node != nullptr) {
        inorderTraversal(node->left);
        cout << node->getValue() << "" "";
        inorderTraversal(node->right);
    }
}

//

//Driver.cpp

#include ""RedBlackTree.h""
#include <iostream>

using namespace std;

int main() {
    RedBlackTree rbTree;

    // Add nodes to the Red-Black Tree
    rbTree.insert(10);
    rbTree.insert(20);
    rbTree.insert(5);
    rbTree.insert(15);
    rbTree.insert(25);
    rbTree.insert(12);

    // Display the tree using different traversal methods
    cout << ""Preorder traversal: "";
    rbTree.preorder();
    cout << endl;

    cout << ""Inorder traversal: "";
    rbTree.inorder();
    cout << endl;

    cout << ""Postorder traversal: "";
    rbTree.postorder();
    cout << endl;

    // Search for a node in the tree
    int searchValue = 15;
    RedBlackTreeNode* foundNode = rbTree.search(searchValue);
    if (foundNode != nullptr) {
        cout << ""Node with value "" << searchValue << "" found in the tree."" << endl;
    }
    else {
        cout << ""Node with value "" << searchValue << "" not found in the tree."" << endl;
    }

    // Remove a node from the tree
    int removeValue = 5;
    cout << ""Updated tree after removing node with value "" << removeValue << "":"" << endl;
    rbTree.remove(removeValue);
    rbTree.inorder(); // Displaying the tree after removal

    // Copy constructor
    RedBlackTree copiedTree(rbTree);
    cout << ""Copied tree using copy constructor - Inorder traversal: "";
    copiedTree.inorder();
    cout << endl;

    // Assignment operator
    RedBlackTree assignedTree = rbTree;
    cout << ""Assigned tree using assignment operator - Postorder traversal: "";
    assignedTree.postorder();
    cout << endl;

    return 0;
}
"
8MAsh3Fc,Untitled,dllbridge,C,Friday 29th of December 2023 11:05:11 AM CDT,"


#include  <iostream>
#include    <string>
using namespace std;

template<class T, class U>
//////////////////////////////////////////////////////
class MyClass 
{
	
		
    T        value_;
    U anotherValue_;	
	
  public:
    MyClass(T t, U u) : value_(t), anotherValue_(u) {}

    T getValue() //const 
	{ 
		return value_; 
	}
	
	
    U getAnotherValue() const { return anotherValue_; }

  private:

};



///////////////////////////////////////////////////////
int main()                                           //
{
  MyClass<int, string> myObject(42, ""Hello, world!"");

  cout << myObject.getValue() << endl;
  cout << myObject.getAnotherValue() << endl;  
  
  MyClass<float, int> Dima(3.14, 777);
  cout << Dima.getValue()        << endl;
  cout << Dima.getAnotherValue() << endl;  
  
  
  return 0;
}








/*
//  Help

template <typename T>
class Person 


*/

/*

#include  <iostream> 
using namespace std;
  
  
  
  
  
template <typename T>
///////////////////////////////////////////////////////
class Person 
{
	
   private:      T    id;
            string  name;	
	
   public:
	
 	
   Person()
   {
		
		
   }		
		
   Person(T T_id, string str)  // : id{id}, name{name}
   {
	   	
	   	id   = T_id;	   	
	   	name = str;		
   }		
	
   void set_name(string str)
   {
		
		name = str;			
   }	
   		
   void set_id(T T_id);
 //{
		
 //		id   = T_id;				
 //}


    void print() const 
    {
        cout << ""Id: "" << id << ""\tName: "" << name << endl;
    }
};









////////////////////////////////////////////////////////
int main()                                            // 
{
	
    Person <int>tom(123456, ""Tom"");                   // T - —á–∏—Å–ª–æ        
    tom.print();                                      // Id: 123456      Name: Tom
    
    
    Person <float>Dima;
    
    Dima.set_name(""Dmitry"");
    Dima.set_id  (0.47);
    
    Dima.print(); 
    
    Person <string>bob(""tvi4xhcfhr"", ""Bob"");          // T - —Å—Ç—Ä–æ–∫–∞
    bob.print();                                      // Id: tvi4xhcfhr  Name: Bob
}















template <typename T>
////////////////////////////////////////////////////////
void Person<T>::set_id(T T_id)                        //
{
		
	 id   = T_id;				
}

*/

"
TH2PnVYS,Untitled,Josif_tepe,C++,Friday 29th of December 2023 10:37:31 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int a, b, k;
    cin >> a >> b >> k;
    int zbir = 0;
    
    for(int n = a; n <= b; n += 1) {
        int broj_na_deliteli_na_n = 0;
        for(int i = 1; i <= n; i += 1) {
            if(n % i == 0) {
                broj_na_deliteli_na_n += 1;
            }
        }
        int ok = 1;
        for(int i = n - 1; i >= n - k; i -= 1) {
            int broj_na_deliteli = 0;
            
            for(int j = 1; j <= i; j += 1) {
                if(i % j == 0) {
                    broj_na_deliteli += 1;
                }
            }
            
            if(broj_na_deliteli_na_n <= broj_na_deliteli) {
                ok = 0;
            }
            
        }
        if(ok == 1) {
            zbir += n;
        }
    }
    cout << zbir << endl;
    return 0;
}
"
EaSWPmCX,fixed loop,aalh,Python,Friday 29th of December 2023 10:22:54 AM CDT,"class Pressure_State(Time_State):
    """"""This state records a pressure log """"""

    def __init__(self):
        super().__init__()

    @property
    def name(self):
        return 'pressurel'

    def tick(self, now):
        # Once the job is done, go back to the main screen
        change_to_state('time')

    def enter(self):
        global low_light, LOG_MODE
        low_light = False
        plog_path = ""/sd/""
        pyportal.set_backlight(1.00)
        pyportal.set_background(mugsy_background)
        try:
            board.DISPLAY.refresh(target_frames_per_second=60)
        except AttributeError:
            board.DISPLAY.refresh_soon()
            board.DISPLAY.wait_for_frame()
        gps.update()
        t_stamp = time.mktime(gps.timestamp_utc)
        PLOG_FILE = f""{t_stamp}pressure.txt""
        start = (time.monotonic_ns() / 1e9)
        with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
            print(t_stamp, gps.latitude, gps.longitude, gps.altitude_m, file=pressfile)
            curr_time = 0
        # with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
            while curr_time < 60:
                curr_time = ((time.monotonic_ns() / 1e9) - start)
                print(curr_time, lps.pressure, file=pressfile)
"
rHK7U3CD,Untitled,dllbridge,C,Friday 29th of December 2023 10:07:02 AM CDT,"

#include  <stdlib.h>
#include  <iostream>
using namespace std;


void             oplata();                        //              —Å–∏–º—É–ª–∏—Ü–∏—è –æ–ø–ª–∞—Ç—ã(x)
void      print_catalog();                        //               –ø–µ—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∞(x)
void               cart();                        //                          –∫–æ—Ä–∑–∏–Ω–∞
void               menu();                        //  –º–µ–Ω—é(–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞) –≤—ã–±–æ—Ä–∞
void print_product_list();                        //  –ø–µ—á–∞—Ç—å —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ 
void        add_product();                        //  –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä(x)
	
	
	
	
int chose           = 0;
int full_cart_price = 0;                          //  —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
int full_cart_count = 0;                          //  –æ–±—â–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ

////////////////////////////////////////////////////
int main()                                        // 
{
	
	setlocale(LC_ALL, ""rus"");
	menu();
}



 
////////////////////////////////////////////////////
struct product                                    //    —Ç–æ–≤–∞—Ä
{
	
  private:
	int price;                                    //     —Ü–µ–Ω–∞
	int count;                                    //   –∫–æ–ª-–≤–æ
  public:
};



////////////////////////////////////////////////////
void menu()                                       //  –ø–µ—á–∞—Ç—å –º–µ–Ω—é
{
	
	cout << ""|–∫–∞—Ç–∞–ª–æ–≥(1)|–∫–æ—Ä–∑–∏–Ω–∞(2)|846-27-2|–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä(3)"" << endl;
	cin  >> chose;
	
	switch (chose)
	{
  	   case  1:	print_catalog();                  //  –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ 		
		        break;
	   case  2: cart();                           //  –ø–æ–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã		
		        break;
	   case  3: add_product();                    //  –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
		   	    break;
	
	   default:
		        break;
	}
}


////////////////////////////////////////////////////
void print_catalog()                              //   –∫–∞—Ç–∞–ª–æ–≥
{ 
	
}



////////////////////////////////////////////////////
void cart()                                       //  –∫–æ—Ä–∑–∏–Ω–∞
{
	
	system(""cls"");
	cout << ""–ö–û–†–ó–ò–ù–ê"" << endl;
	cout << ""–≤ –∫–æ—Ä–∑–∏–Ω–µ –≤—Å–µ–≥–æ "" << full_cart_count << "" —Ç–æ–≤–∞—Ä(–æ–≤) "" << ""–Ω–∞ —Å—É–º–º—É "" << full_cart_price << endl;
	cout << ""–∫—É–ø–∏—Ç—å(1)"" << ""–ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤(2)"" << ""–æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É(3)"" << endl;
	
	cin >> chose;

	switch (chose)
	{
	case 1:
		oplata();
	case 2:
		print_product_list();
	default:
		break;
	}

	menu();
}


////////////////////////////////////////////////////
void print_product_list()                         //  –ø–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ 
{
	
	system(""cls"");
	cout << ""–°–ü–ò–°–û–ö"" << endl;
	
	if (full_cart_count == 0)//–µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ 0
	{
		cout << ""—Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç!"" << endl;
	}
	
	else                                          //  –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
	{
		for (int i = 0; i < full_cart_count; i++)
		{
			cout << i << ""."" << ""—Ü–µ–Ω–∞: "" << endl;
		}

		cout << ""–æ–±–∞—â–∞—è —Ü–µ–Ω–∞: "" << full_cart_price << endl;
	}
	

	menu();
}



////////////////////////////////////////////////////
void add_product()                                //  –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
{
	
}


////////////////////////////////////////////////////
void oplata()                                     //  —Å–∏–º—É–ª—è—Ü–∏—è –æ–ø–ª–∞—Ç—ã
{

}




"
MhCmfkGY,Untitled,blistovmhz,YAML,Friday 29th of December 2023 10:03:15 AM CDT,"table_name: ""RentalContract""

# Columns
members:
  [
    {
      columns:
        {
          name: { type: ""string"", not_nullable: true },
          Job:
            {
              type: ""foreign"",
              foreign: { table: ""Job"", type: ""integer"", key: ""id"" },
              not_nullable: true,
            },
          Supplier:
            {
              type: ""foreign"",
              foreign: { table: ""Supplier"", type: ""integer"", key: ""id"" },
              not_nullable: true,
            },
          RentalEquipmentType:
            {
              type: ""foreign"",
              foreign:
                { table: ""RentalEquipmentType"", type: ""integer"", key: ""id"" },
              not_nullable: true,
            },
          RentalEquipment:
            {
              type: ""foreign"",
              foreign:
                { table: ""RentalEquipment"", type: ""integer"", key: ""id"" },
              not_nullable: false,
            },            
          total_cost: { type: ""float"", meta_data: { decimal: true } },
          tax_included: { type: ""boolean"" },
          start_date: { type: ""date"" },
          end_date: { type: ""date"" },
          serial: { type: ""string"" },
          notes: { type: ""string"" },
          attachment:

            {
              type: ""link"",
              link:
                { table: ""attachamizer_attachment"", type: ""integer"", key: ""id"" },
            },
        },
    },
  ]
"
UcCHFecb,Nigerian scammers [9-12-1/2023],bombaires,AIMMS,Friday 29th of December 2023 09:50:06 AM CDT,"<a href=""mailto:keystoneb.jeffwilkinson@googlemail.com"">keystoneb.jeffwilkinson@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22260@googlemail.com"">keystoneb.jeffwilkinson+22260@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11299@googlemail.com"">keystoneb.jeffwilkinson+11299@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9706@googlemail.com"">keystoneb.jeffwilkinson+9706@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4743@googlemail.com"">keystoneb.jeffwilkinson+4743@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13854@googlemail.com"">keystoneb.jeffwilkinson+13854@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19109@googlemail.com"">keystoneb.jeffwilkinson+19109@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28356@googlemail.com"">keystoneb.jeffwilkinson+28356@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14737@googlemail.com"">keystoneb.jeffwilkinson+14737@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4702@googlemail.com"">keystoneb.jeffwilkinson+4702@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7907@googlemail.com"">keystoneb.jeffwilkinson+7907@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6072@googlemail.com"">keystoneb.jeffwilkinson+6072@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7621@googlemail.com"">keystoneb.jeffwilkinson+7621@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3893@googlemail.com"">keystoneb.jeffwilkinson+3893@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17021@googlemail.com"">keystoneb.jeffwilkinson+17021@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25453@googlemail.com"">keystoneb.jeffwilkinson+25453@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27508@googlemail.com"">keystoneb.jeffwilkinson+27508@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25012@googlemail.com"">keystoneb.jeffwilkinson+25012@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21254@googlemail.com"">keystoneb.jeffwilkinson+21254@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31741@googlemail.com"">keystoneb.jeffwilkinson+31741@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19285@googlemail.com"">keystoneb.jeffwilkinson+19285@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28130@googlemail.com"">keystoneb.jeffwilkinson+28130@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4794@googlemail.com"">keystoneb.jeffwilkinson+4794@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16654@googlemail.com"">keystoneb.jeffwilkinson+16654@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4789@googlemail.com"">keystoneb.jeffwilkinson+4789@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1132@googlemail.com"">keystoneb.jeffwilkinson+1132@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24392@googlemail.com"">keystoneb.jeffwilkinson+24392@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1749@googlemail.com"">keystoneb.jeffwilkinson+1749@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3556@googlemail.com"">keystoneb.jeffwilkinson+3556@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14332@googlemail.com"">keystoneb.jeffwilkinson+14332@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7290@googlemail.com"">keystoneb.jeffwilkinson+7290@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29988@googlemail.com"">keystoneb.jeffwilkinson+29988@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5319@googlemail.com"">keystoneb.jeffwilkinson+5319@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+399@googlemail.com"">keystoneb.jeffwilkinson+399@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27942@googlemail.com"">keystoneb.jeffwilkinson+27942@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32425@googlemail.com"">keystoneb.jeffwilkinson+32425@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30371@googlemail.com"">keystoneb.jeffwilkinson+30371@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21018@googlemail.com"">keystoneb.jeffwilkinson+21018@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22540@googlemail.com"">keystoneb.jeffwilkinson+22540@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+633@googlemail.com"">keystoneb.jeffwilkinson+633@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15272@googlemail.com"">keystoneb.jeffwilkinson+15272@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16826@googlemail.com"">keystoneb.jeffwilkinson+16826@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5540@googlemail.com"">keystoneb.jeffwilkinson+5540@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10151@googlemail.com"">keystoneb.jeffwilkinson+10151@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27726@googlemail.com"">keystoneb.jeffwilkinson+27726@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23538@googlemail.com"">keystoneb.jeffwilkinson+23538@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27741@googlemail.com"">keystoneb.jeffwilkinson+27741@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27145@googlemail.com"">keystoneb.jeffwilkinson+27145@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15788@googlemail.com"">keystoneb.jeffwilkinson+15788@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24261@googlemail.com"">keystoneb.jeffwilkinson+24261@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11178@googlemail.com"">keystoneb.jeffwilkinson+11178@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2906@googlemail.com"">keystoneb.jeffwilkinson+2906@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29571@googlemail.com"">keystoneb.jeffwilkinson+29571@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7715@googlemail.com"">keystoneb.jeffwilkinson+7715@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19624@googlemail.com"">keystoneb.jeffwilkinson+19624@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30639@googlemail.com"">keystoneb.jeffwilkinson+30639@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15750@googlemail.com"">keystoneb.jeffwilkinson+15750@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12825@googlemail.com"">keystoneb.jeffwilkinson+12825@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26029@googlemail.com"">keystoneb.jeffwilkinson+26029@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14054@googlemail.com"">keystoneb.jeffwilkinson+14054@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20244@googlemail.com"">keystoneb.jeffwilkinson+20244@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22797@googlemail.com"">keystoneb.jeffwilkinson+22797@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29899@googlemail.com"">keystoneb.jeffwilkinson+29899@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21979@googlemail.com"">keystoneb.jeffwilkinson+21979@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16814@googlemail.com"">keystoneb.jeffwilkinson+16814@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14078@googlemail.com"">keystoneb.jeffwilkinson+14078@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25116@googlemail.com"">keystoneb.jeffwilkinson+25116@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18430@googlemail.com"">keystoneb.jeffwilkinson+18430@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3668@googlemail.com"">keystoneb.jeffwilkinson+3668@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3826@googlemail.com"">keystoneb.jeffwilkinson+3826@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16911@googlemail.com"">keystoneb.jeffwilkinson+16911@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20572@googlemail.com"">keystoneb.jeffwilkinson+20572@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7988@googlemail.com"">keystoneb.jeffwilkinson+7988@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21706@googlemail.com"">keystoneb.jeffwilkinson+21706@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31145@googlemail.com"">keystoneb.jeffwilkinson+31145@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13736@googlemail.com"">keystoneb.jeffwilkinson+13736@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32275@googlemail.com"">keystoneb.jeffwilkinson+32275@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14275@googlemail.com"">keystoneb.jeffwilkinson+14275@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10829@googlemail.com"">keystoneb.jeffwilkinson+10829@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7236@googlemail.com"">keystoneb.jeffwilkinson+7236@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19358@googlemail.com"">keystoneb.jeffwilkinson+19358@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20183@googlemail.com"">keystoneb.jeffwilkinson+20183@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+777@googlemail.com"">keystoneb.jeffwilkinson+777@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19212@googlemail.com"">keystoneb.jeffwilkinson+19212@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28212@googlemail.com"">keystoneb.jeffwilkinson+28212@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15741@googlemail.com"">keystoneb.jeffwilkinson+15741@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6311@googlemail.com"">keystoneb.jeffwilkinson+6311@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27649@googlemail.com"">keystoneb.jeffwilkinson+27649@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11964@googlemail.com"">keystoneb.jeffwilkinson+11964@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26805@googlemail.com"">keystoneb.jeffwilkinson+26805@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31898@googlemail.com"">keystoneb.jeffwilkinson+31898@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9208@googlemail.com"">keystoneb.jeffwilkinson+9208@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20958@googlemail.com"">keystoneb.jeffwilkinson+20958@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31341@googlemail.com"">keystoneb.jeffwilkinson+31341@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19916@googlemail.com"">keystoneb.jeffwilkinson+19916@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17153@googlemail.com"">keystoneb.jeffwilkinson+17153@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16383@googlemail.com"">keystoneb.jeffwilkinson+16383@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13438@googlemail.com"">keystoneb.jeffwilkinson+13438@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21966@googlemail.com"">keystoneb.jeffwilkinson+21966@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30439@googlemail.com"">keystoneb.jeffwilkinson+30439@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10923@googlemail.com"">keystoneb.jeffwilkinson+10923@googlemail.com</a>
<a href=""mailto:dhldeliverycompany10148@yahoo.com"">dhldeliverycompany10148@yahoo.com</a>
<a href=""mailto:federalreservebank893@googlemail.com"">federalreservebank893@googlemail.com</a>
<a href=""mailto:federalreservebank893+4853@googlemail.com"">federalreservebank893+4853@googlemail.com</a>
<a href=""mailto:federalreservebank893+17688@googlemail.com"">federalreservebank893+17688@googlemail.com</a>
<a href=""mailto:federalreservebank893+17988@googlemail.com"">federalreservebank893+17988@googlemail.com</a>
<a href=""mailto:federalreservebank893+27543@googlemail.com"">federalreservebank893+27543@googlemail.com</a>
<a href=""mailto:federalreservebank893+4286@googlemail.com"">federalreservebank893+4286@googlemail.com</a>
<a href=""mailto:federalreservebank893+15628@googlemail.com"">federalreservebank893+15628@googlemail.com</a>
<a href=""mailto:federalreservebank893+23466@googlemail.com"">federalreservebank893+23466@googlemail.com</a>
<a href=""mailto:federalreservebank893+10492@googlemail.com"">federalreservebank893+10492@googlemail.com</a>
<a href=""mailto:federalreservebank893+14313@googlemail.com"">federalreservebank893+14313@googlemail.com</a>
<a href=""mailto:federalreservebank893+28315@googlemail.com"">federalreservebank893+28315@googlemail.com</a>
<a href=""mailto:federalreservebank893+8323@googlemail.com"">federalreservebank893+8323@googlemail.com</a>
<a href=""mailto:federalreservebank893+22798@googlemail.com"">federalreservebank893+22798@googlemail.com</a>
<a href=""mailto:federalreservebank893+18728@googlemail.com"">federalreservebank893+18728@googlemail.com</a>
<a href=""mailto:federalreservebank893+12261@googlemail.com"">federalreservebank893+12261@googlemail.com</a>
<a href=""mailto:federalreservebank893+25046@googlemail.com"">federalreservebank893+25046@googlemail.com</a>
<a href=""mailto:federalreservebank893+19818@googlemail.com"">federalreservebank893+19818@googlemail.com</a>
<a href=""mailto:federalreservebank893+3217@googlemail.com"">federalreservebank893+3217@googlemail.com</a>
<a href=""mailto:federalreservebank893+24815@googlemail.com"">federalreservebank893+24815@googlemail.com</a>
<a href=""mailto:federalreservebank893+9036@googlemail.com"">federalreservebank893+9036@googlemail.com</a>
<a href=""mailto:federalreservebank893+12451@googlemail.com"">federalreservebank893+12451@googlemail.com</a>
<a href=""mailto:federalreservebank893+2239@googlemail.com"">federalreservebank893+2239@googlemail.com</a>
<a href=""mailto:federalreservebank893+3761@googlemail.com"">federalreservebank893+3761@googlemail.com</a>
<a href=""mailto:federalreservebank893+6873@googlemail.com"">federalreservebank893+6873@googlemail.com</a>
<a href=""mailto:federalreservebank893+24788@googlemail.com"">federalreservebank893+24788@googlemail.com</a>
<a href=""mailto:federalreservebank893+25665@googlemail.com"">federalreservebank893+25665@googlemail.com</a>
<a href=""mailto:federalreservebank893+32673@googlemail.com"">federalreservebank893+32673@googlemail.com</a>
<a href=""mailto:federalreservebank893+20121@googlemail.com"">federalreservebank893+20121@googlemail.com</a>
<a href=""mailto:federalreservebank893+20822@googlemail.com"">federalreservebank893+20822@googlemail.com</a>
<a href=""mailto:federalreservebank893+28890@googlemail.com"">federalreservebank893+28890@googlemail.com</a>
<a href=""mailto:federalreservebank893+15892@googlemail.com"">federalreservebank893+15892@googlemail.com</a>
<a href=""mailto:federalreservebank893+26458@googlemail.com"">federalreservebank893+26458@googlemail.com</a>
<a href=""mailto:federalreservebank893+8035@googlemail.com"">federalreservebank893+8035@googlemail.com</a>
<a href=""mailto:federalreservebank893+22294@googlemail.com"">federalreservebank893+22294@googlemail.com</a>
<a href=""mailto:federalreservebank893+3445@googlemail.com"">federalreservebank893+3445@googlemail.com</a>
<a href=""mailto:federalreservebank893+22812@googlemail.com"">federalreservebank893+22812@googlemail.com</a>
<a href=""mailto:federalreservebank893+13451@googlemail.com"">federalreservebank893+13451@googlemail.com</a>
<a href=""mailto:federalreservebank893+17052@googlemail.com"">federalreservebank893+17052@googlemail.com</a>
<a href=""mailto:federalreservebank893+16350@googlemail.com"">federalreservebank893+16350@googlemail.com</a>
<a href=""mailto:federalreservebank893+23781@googlemail.com"">federalreservebank893+23781@googlemail.com</a>
<a href=""mailto:federalreservebank893+30779@googlemail.com"">federalreservebank893+30779@googlemail.com</a>
<a href=""mailto:federalreservebank893+25225@googlemail.com"">federalreservebank893+25225@googlemail.com</a>
<a href=""mailto:federalreservebank893+9414@googlemail.com"">federalreservebank893+9414@googlemail.com</a>
<a href=""mailto:federalreservebank893+895@googlemail.com"">federalreservebank893+895@googlemail.com</a>
<a href=""mailto:federalreservebank893+1957@googlemail.com"">federalreservebank893+1957@googlemail.com</a>
<a href=""mailto:federalreservebank893+26178@googlemail.com"">federalreservebank893+26178@googlemail.com</a>
<a href=""mailto:federalreservebank893+32366@googlemail.com"">federalreservebank893+32366@googlemail.com</a>
<a href=""mailto:federalreservebank893+17581@googlemail.com"">federalreservebank893+17581@googlemail.com</a>
<a href=""mailto:federalreservebank893+584@googlemail.com"">federalreservebank893+584@googlemail.com</a>
<a href=""mailto:federalreservebank893+24592@googlemail.com"">federalreservebank893+24592@googlemail.com</a>
<a href=""mailto:federalreservebank893+32471@googlemail.com"">federalreservebank893+32471@googlemail.com</a>
<a href=""mailto:federalreservebank893+10859@googlemail.com"">federalreservebank893+10859@googlemail.com</a>
<a href=""mailto:federalreservebank893+31796@googlemail.com"">federalreservebank893+31796@googlemail.com</a>
<a href=""mailto:federalreservebank893+14066@googlemail.com"">federalreservebank893+14066@googlemail.com</a>
<a href=""mailto:federalreservebank893+7836@googlemail.com"">federalreservebank893+7836@googlemail.com</a>
<a href=""mailto:federalreservebank893+7480@googlemail.com"">federalreservebank893+7480@googlemail.com</a>
<a href=""mailto:federalreservebank893+13992@googlemail.com"">federalreservebank893+13992@googlemail.com</a>
<a href=""mailto:federalreservebank893+13117@googlemail.com"">federalreservebank893+13117@googlemail.com</a>
<a href=""mailto:federalreservebank893+4387@googlemail.com"">federalreservebank893+4387@googlemail.com</a>
<a href=""mailto:federalreservebank893+18583@googlemail.com"">federalreservebank893+18583@googlemail.com</a>
<a href=""mailto:federalreservebank893+19089@googlemail.com"">federalreservebank893+19089@googlemail.com</a>
<a href=""mailto:federalreservebank893+13529@googlemail.com"">federalreservebank893+13529@googlemail.com</a>
<a href=""mailto:federalreservebank893+18110@googlemail.com"">federalreservebank893+18110@googlemail.com</a>
<a href=""mailto:federalreservebank893+2221@googlemail.com"">federalreservebank893+2221@googlemail.com</a>
<a href=""mailto:federalreservebank893+24441@googlemail.com"">federalreservebank893+24441@googlemail.com</a>
<a href=""mailto:federalreservebank893+394@googlemail.com"">federalreservebank893+394@googlemail.com</a>
<a href=""mailto:federalreservebank893+2550@googlemail.com"">federalreservebank893+2550@googlemail.com</a>
<a href=""mailto:federalreservebank893+17526@googlemail.com"">federalreservebank893+17526@googlemail.com</a>
<a href=""mailto:federalreservebank893+23944@googlemail.com"">federalreservebank893+23944@googlemail.com</a>
<a href=""mailto:federalreservebank893+3738@googlemail.com"">federalreservebank893+3738@googlemail.com</a>
<a href=""mailto:federalreservebank893+13126@googlemail.com"">federalreservebank893+13126@googlemail.com</a>
<a href=""mailto:federalreservebank893+26413@googlemail.com"">federalreservebank893+26413@googlemail.com</a>
<a href=""mailto:federalreservebank893+11360@googlemail.com"">federalreservebank893+11360@googlemail.com</a>
<a href=""mailto:federalreservebank893+14029@googlemail.com"">federalreservebank893+14029@googlemail.com</a>
<a href=""mailto:federalreservebank893+15445@googlemail.com"">federalreservebank893+15445@googlemail.com</a>
<a href=""mailto:federalreservebank893+5301@googlemail.com"">federalreservebank893+5301@googlemail.com</a>
<a href=""mailto:federalreservebank893+359@googlemail.com"">federalreservebank893+359@googlemail.com</a>
<a href=""mailto:federalreservebank893+24406@googlemail.com"">federalreservebank893+24406@googlemail.com</a>
<a href=""mailto:federalreservebank893+22893@googlemail.com"">federalreservebank893+22893@googlemail.com</a>
<a href=""mailto:federalreservebank893+18429@googlemail.com"">federalreservebank893+18429@googlemail.com</a>
<a href=""mailto:federalreservebank893+10688@googlemail.com"">federalreservebank893+10688@googlemail.com</a>
<a href=""mailto:federalreservebank893+25762@googlemail.com"">federalreservebank893+25762@googlemail.com</a>
<a href=""mailto:federalreservebank893+3094@googlemail.com"">federalreservebank893+3094@googlemail.com</a>
<a href=""mailto:federalreservebank893+16635@googlemail.com"">federalreservebank893+16635@googlemail.com</a>
<a href=""mailto:federalreservebank893+16335@googlemail.com"">federalreservebank893+16335@googlemail.com</a>
<a href=""mailto:federalreservebank893+28689@googlemail.com"">federalreservebank893+28689@googlemail.com</a>
<a href=""mailto:federalreservebank893+3087@googlemail.com"">federalreservebank893+3087@googlemail.com</a>
<a href=""mailto:federalreservebank893+10734@googlemail.com"">federalreservebank893+10734@googlemail.com</a>
<a href=""mailto:federalreservebank893+12542@googlemail.com"">federalreservebank893+12542@googlemail.com</a>
<a href=""mailto:federalreservebank893+22002@googlemail.com"">federalreservebank893+22002@googlemail.com</a>
<a href=""mailto:federalreservebank893+20202@googlemail.com"">federalreservebank893+20202@googlemail.com</a>
<a href=""mailto:federalreservebank893+24640@googlemail.com"">federalreservebank893+24640@googlemail.com</a>
<a href=""mailto:federalreservebank893+3871@googlemail.com"">federalreservebank893+3871@googlemail.com</a>
<a href=""mailto:federalreservebank893+11678@googlemail.com"">federalreservebank893+11678@googlemail.com</a>
<a href=""mailto:federalreservebank893+11076@googlemail.com"">federalreservebank893+11076@googlemail.com</a>
<a href=""mailto:federalreservebank893+25940@googlemail.com"">federalreservebank893+25940@googlemail.com</a>
<a href=""mailto:federalreservebank893+1425@googlemail.com"">federalreservebank893+1425@googlemail.com</a>
<a href=""mailto:federalreservebank893+11140@googlemail.com"">federalreservebank893+11140@googlemail.com</a>
<a href=""mailto:federalreservebank893+25685@googlemail.com"">federalreservebank893+25685@googlemail.com</a>
<a href=""mailto:federalreservebank893+1908@googlemail.com"">federalreservebank893+1908@googlemail.com</a>
<a href=""mailto:federalreservebank893+419@googlemail.com"">federalreservebank893+419@googlemail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+24844@googlemail.com"">agentvictorokle+24844@googlemail.com</a>
<a href=""mailto:agentvictorokle+31380@googlemail.com"">agentvictorokle+31380@googlemail.com</a>
<a href=""mailto:agentvictorokle+351@googlemail.com"">agentvictorokle+351@googlemail.com</a>
<a href=""mailto:agentvictorokle+18000@googlemail.com"">agentvictorokle+18000@googlemail.com</a>
<a href=""mailto:agentvictorokle+17198@googlemail.com"">agentvictorokle+17198@googlemail.com</a>
<a href=""mailto:agentvictorokle+30830@googlemail.com"">agentvictorokle+30830@googlemail.com</a>
<a href=""mailto:agentvictorokle+24160@googlemail.com"">agentvictorokle+24160@googlemail.com</a>
<a href=""mailto:agentvictorokle+808@googlemail.com"">agentvictorokle+808@googlemail.com</a>
<a href=""mailto:agentvictorokle+10227@googlemail.com"">agentvictorokle+10227@googlemail.com</a>
<a href=""mailto:agentvictorokle+808@googlemail.com"">agentvictorokle+808@googlemail.com</a>
<a href=""mailto:agentvictorokle+2506@googlemail.com"">agentvictorokle+2506@googlemail.com</a>
<a href=""mailto:agentvictorokle+8499@googlemail.com"">agentvictorokle+8499@googlemail.com</a>
<a href=""mailto:agentvictorokle+23655@googlemail.com"">agentvictorokle+23655@googlemail.com</a>
<a href=""mailto:agentvictorokle+29789@googlemail.com"">agentvictorokle+29789@googlemail.com</a>
<a href=""mailto:agentvictorokle+27642@googlemail.com"">agentvictorokle+27642@googlemail.com</a>
<a href=""mailto:agentvictorokle+15167@googlemail.com"">agentvictorokle+15167@googlemail.com</a>
<a href=""mailto:agentvictorokle+21897@googlemail.com"">agentvictorokle+21897@googlemail.com</a>
<a href=""mailto:agentvictorokle+7213@googlemail.com"">agentvictorokle+7213@googlemail.com</a>
<a href=""mailto:agentvictorokle+25094@googlemail.com"">agentvictorokle+25094@googlemail.com</a>
<a href=""mailto:agentvictorokle+30875@googlemail.com"">agentvictorokle+30875@googlemail.com</a>
<a href=""mailto:agentvictorokle+26120@googlemail.com"">agentvictorokle+26120@googlemail.com</a>
<a href=""mailto:agentvictorokle+5510@googlemail.com"">agentvictorokle+5510@googlemail.com</a>
<a href=""mailto:agentvictorokle+20353@googlemail.com"">agentvictorokle+20353@googlemail.com</a>
<a href=""mailto:agentvictorokle+3245@googlemail.com"">agentvictorokle+3245@googlemail.com</a>
<a href=""mailto:agentvictorokle+10782@googlemail.com"">agentvictorokle+10782@googlemail.com</a>
<a href=""mailto:agentvictorokle+23112@googlemail.com"">agentvictorokle+23112@googlemail.com</a>
<a href=""mailto:agentvictorokle+2029@googlemail.com"">agentvictorokle+2029@googlemail.com</a>
<a href=""mailto:agentvictorokle+8800@googlemail.com"">agentvictorokle+8800@googlemail.com</a>
<a href=""mailto:agentvictorokle+23710@googlemail.com"">agentvictorokle+23710@googlemail.com</a>
<a href=""mailto:agentvictorokle+246@googlemail.com"">agentvictorokle+246@googlemail.com</a>
<a href=""mailto:agentvictorokle+18313@googlemail.com"">agentvictorokle+18313@googlemail.com</a>
<a href=""mailto:agentvictorokle+19892@googlemail.com"">agentvictorokle+19892@googlemail.com</a>
<a href=""mailto:agentvictorokle+32165@googlemail.com"">agentvictorokle+32165@googlemail.com</a>
<a href=""mailto:agentvictorokle+11606@googlemail.com"">agentvictorokle+11606@googlemail.com</a>
<a href=""mailto:agentvictorokle+8832@googlemail.com"">agentvictorokle+8832@googlemail.com</a>
<a href=""mailto:agentvictorokle+7359@googlemail.com"">agentvictorokle+7359@googlemail.com</a>
<a href=""mailto:agentvictorokle+11393@googlemail.com"">agentvictorokle+11393@googlemail.com</a>
<a href=""mailto:agentvictorokle+392@googlemail.com"">agentvictorokle+392@googlemail.com</a>
<a href=""mailto:agentvictorokle+876@googlemail.com"">agentvictorokle+876@googlemail.com</a>
<a href=""mailto:agentvictorokle+27740@googlemail.com"">agentvictorokle+27740@googlemail.com</a>
<a href=""mailto:agentvictorokle+32690@googlemail.com"">agentvictorokle+32690@googlemail.com</a>
<a href=""mailto:agentvictorokle+12454@googlemail.com"">agentvictorokle+12454@googlemail.com</a>
<a href=""mailto:agentvictorokle+3267@googlemail.com"">agentvictorokle+3267@googlemail.com</a>
<a href=""mailto:agentvictorokle+14562@googlemail.com"">agentvictorokle+14562@googlemail.com</a>
<a href=""mailto:agentvictorokle+26460@googlemail.com"">agentvictorokle+26460@googlemail.com</a>
<a href=""mailto:agentvictorokle+21026@googlemail.com"">agentvictorokle+21026@googlemail.com</a>
<a href=""mailto:agentvictorokle+31289@googlemail.com"">agentvictorokle+31289@googlemail.com</a>
<a href=""mailto:agentvictorokle+644@googlemail.com"">agentvictorokle+644@googlemail.com</a>
<a href=""mailto:agentvictorokle+3988@googlemail.com"">agentvictorokle+3988@googlemail.com</a>
<a href=""mailto:agentvictorokle+581@googlemail.com"">agentvictorokle+581@googlemail.com</a>
<a href=""mailto:agentvictorokle+1246@googlemail.com"">agentvictorokle+1246@googlemail.com</a>
<a href=""mailto:agentvictorokle+29669@googlemail.com"">agentvictorokle+29669@googlemail.com</a>
<a href=""mailto:agentvictorokle+29274@googlemail.com"">agentvictorokle+29274@googlemail.com</a>
<a href=""mailto:agentvictorokle+9728@googlemail.com"">agentvictorokle+9728@googlemail.com</a>
<a href=""mailto:agentvictorokle+27218@googlemail.com"">agentvictorokle+27218@googlemail.com</a>
<a href=""mailto:agentvictorokle+22669@googlemail.com"">agentvictorokle+22669@googlemail.com</a>
<a href=""mailto:agentvictorokle+15254@googlemail.com"">agentvictorokle+15254@googlemail.com</a>
<a href=""mailto:agentvictorokle+24827@googlemail.com"">agentvictorokle+24827@googlemail.com</a>
<a href=""mailto:agentvictorokle+12107@googlemail.com"">agentvictorokle+12107@googlemail.com</a>
<a href=""mailto:agentvictorokle+7056@googlemail.com"">agentvictorokle+7056@googlemail.com</a>
<a href=""mailto:agentvictorokle+19671@googlemail.com"">agentvictorokle+19671@googlemail.com</a>
<a href=""mailto:agentvictorokle+20798@googlemail.com"">agentvictorokle+20798@googlemail.com</a>
<a href=""mailto:agentvictorokle+27206@googlemail.com"">agentvictorokle+27206@googlemail.com</a>
<a href=""mailto:agentvictorokle+29944@googlemail.com"">agentvictorokle+29944@googlemail.com</a>
<a href=""mailto:agentvictorokle+28546@googlemail.com"">agentvictorokle+28546@googlemail.com</a>
<a href=""mailto:agentvictorokle+1752@googlemail.com"">agentvictorokle+1752@googlemail.com</a>
<a href=""mailto:agentvictorokle+11414@googlemail.com"">agentvictorokle+11414@googlemail.com</a>
<a href=""mailto:agentvictorokle+27567@googlemail.com"">agentvictorokle+27567@googlemail.com</a>
<a href=""mailto:agentvictorokle+3124@googlemail.com"">agentvictorokle+3124@googlemail.com</a>
<a href=""mailto:agentvictorokle+3643@googlemail.com"">agentvictorokle+3643@googlemail.com</a>
<a href=""mailto:agentvictorokle+16692@googlemail.com"">agentvictorokle+16692@googlemail.com</a>
<a href=""mailto:agentvictorokle+6728@googlemail.com"">agentvictorokle+6728@googlemail.com</a>
<a href=""mailto:agentvictorokle+16785@googlemail.com"">agentvictorokle+16785@googlemail.com</a>
<a href=""mailto:agentvictorokle+19544@googlemail.com"">agentvictorokle+19544@googlemail.com</a>
<a href=""mailto:agentvictorokle+4035@googlemail.com"">agentvictorokle+4035@googlemail.com</a>
<a href=""mailto:agentvictorokle+11126@googlemail.com"">agentvictorokle+11126@googlemail.com</a>
<a href=""mailto:agentvictorokle+7120@googlemail.com"">agentvictorokle+7120@googlemail.com</a>
<a href=""mailto:agentvictorokle+25995@googlemail.com"">agentvictorokle+25995@googlemail.com</a>
<a href=""mailto:agentvictorokle+31837@googlemail.com"">agentvictorokle+31837@googlemail.com</a>
<a href=""mailto:agentvictorokle+2883@googlemail.com"">agentvictorokle+2883@googlemail.com</a>
<a href=""mailto:agentvictorokle+29308@googlemail.com"">agentvictorokle+29308@googlemail.com</a>
<a href=""mailto:agentvictorokle+30652@googlemail.com"">agentvictorokle+30652@googlemail.com</a>
<a href=""mailto:agentvictorokle+18322@googlemail.com"">agentvictorokle+18322@googlemail.com</a>
<a href=""mailto:agentvictorokle+12410@googlemail.com"">agentvictorokle+12410@googlemail.com</a>
<a href=""mailto:agentvictorokle+469@googlemail.com"">agentvictorokle+469@googlemail.com</a>
<a href=""mailto:agentvictorokle+30273@googlemail.com"">agentvictorokle+30273@googlemail.com</a>
<a href=""mailto:agentvictorokle+25628@googlemail.com"">agentvictorokle+25628@googlemail.com</a>
<a href=""mailto:agentvictorokle+23061@googlemail.com"">agentvictorokle+23061@googlemail.com</a>
<a href=""mailto:agentvictorokle+11537@googlemail.com"">agentvictorokle+11537@googlemail.com</a>
<a href=""mailto:agentvictorokle+25240@googlemail.com"">agentvictorokle+25240@googlemail.com</a>
<a href=""mailto:agentvictorokle+562@googlemail.com"">agentvictorokle+562@googlemail.com</a>
<a href=""mailto:agentvictorokle+32383@googlemail.com"">agentvictorokle+32383@googlemail.com</a>
<a href=""mailto:agentvictorokle+20526@googlemail.com"">agentvictorokle+20526@googlemail.com</a>
<a href=""mailto:agentvictorokle+8558@googlemail.com"">agentvictorokle+8558@googlemail.com</a>
<a href=""mailto:agentvictorokle+13290@googlemail.com"">agentvictorokle+13290@googlemail.com</a>
<a href=""mailto:agentvictorokle+14639@googlemail.com"">agentvictorokle+14639@googlemail.com</a>
<a href=""mailto:agentvictorokle+7543@googlemail.com"">agentvictorokle+7543@googlemail.com</a>
<a href=""mailto:agentvictorokle+22760@googlemail.com"">agentvictorokle+22760@googlemail.com</a>
<a href=""mailto:agentvictorokle+8601@googlemail.com"">agentvictorokle+8601@googlemail.com</a>
<a href=""mailto:agentvictorokle+19521@googlemail.com"">agentvictorokle+19521@googlemail.com</a>"
0yGVVWab,Untitled,Josif_tepe,C++,Friday 29th of December 2023 09:48:06 AM CDT,"#include <iostream>


using namespace std;

int main() {
    int n = 24;
    int k = 7;
    for(int i = n - 1; i >= n - k; i -= 1) {
        cout << i << endl;
    }
    return 0;
}
"
Y5NNfDSV,Code of encrypter.,MangoBros,Python,Friday 29th of December 2023 09:18:45 AM CDT,"def encrypt(word, cipher):
    encrypted_word = """"
    for char in word:
        if char.isalpha():
            encrypted_word += cipher.get(char, char)
        else:
            encrypted_word += char
    return encrypted_word

def main():
    word = input(""Enter a word: "")
    
    cipher = {'a': '?', 'b': '??', 'c': '???', 'd': '????', 'e': '?????', 'f': '!', 'g': '!!',
              'h': '!!!', 'i': '!!!!', 'j': '!!!!!', 'k': '?!', 'l': '??!', 'm': '???!', 'n': '????!',
              'o': '?????!', 'p': '!?', 'q': '!!?', 'r': '!!!?', 's': '!!!!?', 't': '!!!!!?', 'u': '?!!',
              'v': '??!!', 'w': '???!!', 'x': '????!!', 'y': '?????!!', 'z': '!??', '(': '!!??', ')': '!!!???'}
    
    encrypted_word = encrypt(word, cipher)

    print(""Original word:"", word)
    print(""Encrypted word:"", encrypted_word)

if __name__ == ""__main__"":
    main()
"
PZnjFh2f,platprog_mc,andrelisboa1,Lua,Friday 29th of December 2023 09:10:36 AM CDT,"function refuel()
    if turtle.getFuelLevel() == 0 then
        turtle.select(1)
        turtle.refuel(1)
        if turtle.getFuelLevel() == 0 then
            error(""Out of fuel."")
        end
    end
end

function selectFirstFullSlot()
    for i = 2, 16 do
        if turtle.getItemCount(i) > 0 then
            turtle.select(i)
            return
        end
    end
end

function placeFirstAvailableBlock()
    selectFirstFullSlot()
    refuel()
    turtle.placeDown()
end

-- Program that builds a platform of size w by h
-- and then returns to the starting position.

print(""Enter width and height:"")
local w = 10
local h = 10

-- Read the width and height.
w = tonumber(io.read())
h = tonumber(io.read())

-- Build the platform.
for i = 1, w do
    for j = 1, h do
        placeFirstAvailableBlock()
        turtle.forward()
    end
    for j = 1, h do
        turtle.back()
    end
    if i < w then
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
    end
end

-- Return to the starting position.
turtle.turnLeft()
for i = 1, w do
    turtle.forward()
end
turtle.turnLeft()
"
yZvBmcrh,Operational Security Protocol System,xGHOSTSECx,Bash,Friday 29th of December 2023 09:02:13 AM CDT,"#!/bin/bash

# Advanced Network Management Tool

function display_basic_info() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
  echo ""Hostname: $(hostname)""
  echo ""Kernel version: $(uname -r)""
  echo ""----------""
  echo ""Network interfaces:""
  ifconfig -a
  echo ""----------""
  echo ""Routing table:""
  route -n
  echo ""----------""
  echo ""DNS servers:""
  cat /etc/resolv.conf
  echo ""----------""
  echo ""Listening ports:""
  netstat -tulpn
  echo -e ""\nPress enter to return to the main menu.""
  read -r
}

function configure_network_interface() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
  echo ""Enter the name of the network interface to configure:""
  read interface_name

  if [[ -z ""$interface_name"" ]]; then
    echo ""Interface name cannot be empty.""
    read -r
    return
  fi

  PS3=""Choose an action for $interface_name: ""
  actions=(""Set IP address and subnet mask"" ""Set gateway"" ""Restart network interface"" ""Enable/Disable interface"" ""View interface details"" ""Cancel"")
  select action in ""${actions[@]}""; do
    case $action in
      ""Set IP address and subnet mask"")
        echo ""Enter new IP address and subnet mask (e.g., 192.168.1.2/24):""
        read ip_address
        if [[ -n ""$ip_address"" ]]; then
          ifconfig $interface_name $ip_address
        else
          echo ""IP address cannot be empty.""
        fi
        ;;
      ""Set gateway"")
        echo ""Enter new gateway IP address:""
        read gateway
        if [[ -n ""$gateway"" ]]; then
          route add default gw $gateway $interface_name
        else
          echo ""Gateway IP address cannot be empty.""
        fi
        ;;
      ""Restart network interface"")
        echo ""Restarting network interface $interface_name...""
        ifdown $interface_name && ifup $interface_name
        ;;
      ""Enable/Disable interface"")
        PS3=""Choose action for interface $interface_name: ""
        enable_actions=(""Enable"" ""Disable"" ""Cancel"")
        select enable_choice in ""${enable_actions[@]}""; do
          case $enable_choice in
            ""Enable"")
              ifconfig $interface_name up
              ;;
            ""Disable"")
              ifconfig $interface_name down
              ;;
            ""Cancel"")
              break
              ;;
            *)
              echo ""Invalid choice.""
              ;;
          esac
          break
        done
        ;;
      ""View interface details"")
        echo ""Details for interface $interface_name:""
        ifconfig $interface_name
        ;;
      ""Cancel"")
        break
        ;;
      *)
        echo ""Invalid choice.""
        ;;
    esac
    break
  done
  read -r
}

function create_captive_portal() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
  echo ""Enter the network interface for the captive portal:""
  read portal_interface

  if [[ -z ""$portal_interface"" ]]; then
    echo ""Interface name cannot be empty.""
    read -r
    return
  fi

  echo ""Enter the URL to redirect users (e.g., http://captive-portal.com):""
  read portal_url

  if [[ -z ""$portal_url"" ]]; then
    echo ""Portal URL cannot be empty.""
    read -r
    return
  fi

  echo ""Creating captive portal on $portal_interface...""
  iptables -t nat -A PREROUTING -i $portal_interface -p tcp --dport 80 -j DNAT --to-destination $portal_url:80
  iptables -t nat -A POSTROUTING -j MASQUERADE
  echo -e ""\nCaptive portal created successfully.\nPress enter to return to the main menu.""
  read -r
}

function utilize_loopback_localhost() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
  PS3=""Choose an action for loopback and localhost: ""
  loopback_actions=(""Share internet connection with loopback"" ""Simulate printer for HTTP traffic masking"" ""Cancel"")
  select loopback_choice in ""${loopback_actions[@]}""; do
    case $loopback_choice in
      ""Share internet connection with loopback"")
        echo ""Sharing internet connection with loopback...""
        iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
        ;;
      ""Simulate printer for HTTP traffic masking"")
        echo ""Simulating printer for HTTP traffic masking...""
        iptables -t nat -A OUTPUT -p tcp --dport 80 -j REDIRECT --to-port 8080
        ;;
      ""Cancel"")
        break
        ;;
      *)
        echo ""Invalid choice.""
        ;;
    esac
    break
  done
  read -r
}

function configure_microsegmentation() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
  echo ""Enter the subnet for microsegmentation (e.g., 192.168.2.0/24):""
  read subnet

  if [[ -z ""$subnet"" ]]; then
    echo ""Subnet cannot be empty.""
    read -r
    return
  fi

  echo ""Enter the network interface for microsegmentation:""
  read microsegment_interface

  if [[ -z ""$microsegment_interface"" ]]; then
    echo ""Interface name cannot be empty.""
    read -r
    return
  fi

  echo ""Configuring microsegmentation on $microsegment_interface for $subnet...""
  iptables -A FORWARD -i $microsegment_interface -s $subnet -j ACCEPT
  iptables -A FORWARD -o $microsegment_interface -d $subnet -j ACCEPT
  echo -e ""\nMicrosegmentation configured successfully.\nPress enter to return to the main menu.""
  read -r
}

function display_help() {
  clear
  echo -e ""\e[1;34mAdvanced Network Management Tool - Help Menu\e[0m\n""
  echo ""1. Display basic network information: Displays information about the host, kernel, network interfaces, routing table, DNS servers, and listening ports.""
  echo ""2. Configure network interface: Allows configuration of a network interface, including setting IP address, gateway, restarting, enabling/disabling, and viewing details.""
  echo ""3. Create captive portal: Sets up a captive portal on a specified network interface, redirecting users to a provided URL.""
  echo ""4. Utilize loopback and localhost: Provides options to share the internet connection with loopback or simulate a printer for HTTP traffic masking.""
  echo ""5. Configure microsegmentation: Enables microsegmentation for a specified subnet on a network interface.""
  echo ""6. Exit: Exits the tool.""

  echo -e ""\nExamples:""
  echo ""  To display basic network information: Choose option 1 from the main menu.""
  echo ""  To configure a network interface: Choose option 2 and follow the prompts.""
  echo ""  To create a captive portal: Choose option 3 and provide the required information.""
  echo ""  To utilize loopback and localhost: Choose option 4 and select the desired action.""
  echo ""  To configure microsegmentation: Choose option 5 and provide the subnet and interface details.""
  echo -e ""  To exit: Choose option 6 from the main menu.\nPress enter to return to the main menu.""
  read -r
}

function main_menu() {
  while true; do
    clear
    echo -e ""\e[1;34mAdvanced Network Management Tool\e[0m\n""
    PS3=""Select an option: ""
    main_actions=(""Display basic network information"" ""Configure network interface"" ""Create captive portal"" ""Utilize loopback and localhost"" ""Configure microsegmentation"" ""Help"" ""Exit"")
    select main_choice in ""${main_actions[@]}""; do
      case $main_choice in
        ""Display basic network information"")
          display_basic_info
          ;;
        ""Configure network interface"")
          configure_network_interface
          ;;
        ""Create captive portal"")
          create_captive_portal
          ;;
        ""Utilize loopback and localhost"")
          utilize_loopback_localhost
          ;;
        ""Configure microsegmentation"")
          configure_microsegmentation
          ;;
        ""Help"")
          display_help
          ;;
        ""Exit"")
          echo ""Exiting...""
          exit 0
          ;;
        *)
          echo ""Invalid choice.""
          ;;
      esac
    done
  done
}

main_menu
"
xZRQ1jfY,Fundamentals Of Java,xGHOSTSECx,Java,Friday 29th of December 2023 08:33:03 AM CDT,"# JavaScript Fundamentals: Your Comprehensive Guide

## Introduction

Welcome to the world of JavaScript, where you'll unlock the power of web development and programming. In this comprehensive tutorial, we'll explore the fundamental concepts of JavaScript in a user-friendly manner. Imagine this as a ""JavaScript Tutorial of a JavaScript Tutorial,"" where we'll guide you through JavaScript while explaining the process itself.

## Table of Contents

1. **Understanding JavaScript**

    - **What is JavaScript?**
    
      JavaScript is a versatile, high-level, and dynamically typed programming language that enables interactive web development. It allows you to add behavior and interactivity to web pages.

    - **Why Learn JavaScript?**
    
      Learning JavaScript is crucial for web development. It allows you to create dynamic web applications, handle user interactions, and manipulate webpage content.

    - **JavaScript in Web Development**
    
      JavaScript is a core technology in web development. It complements HTML and CSS, making websites more interactive and engaging.

2. **Setting Up Your Environment**

    - **Text Editors and IDEs**
    
      Choose a text editor or integrated development environment (IDE) like Visual Studio Code, Sublime Text, or Atom to write and edit your JavaScript code.

    - **Browser Developer Tools**
    
      Most web browsers offer developer tools that include JavaScript consoles, allowing you to test and debug your code directly in the browser.

3. **Writing Your First JavaScript Code**

    - **The `<script>` Tag**
    
      To include JavaScript in an HTML document, use the `<script>` tag. Place it within the `<head>` or `<body>` of your HTML file.

      ```html
      <script>
          // Your JavaScript code goes here
      </script>
      ```

    - **Output with `console.log()`**
    
      `console.log()` is a method used for debugging and displaying information in the browser console. It's an essential tool for beginners.

      ```javascript
      console.log(""Hello, World!"");
      ```

4. **Variables and Data Types**

    - **Declaring Variables (`let`, `const`, `var`)**
    
      JavaScript variables are containers for storing data. You can declare them using `let`, `const`, or `var`.

      ```javascript
      let userName = ""John"";
      const userAge = 30;
      var userEmail = ""john@example.com"";
      ```

    - **Data Types (Strings, Numbers, Booleans)**
    
      JavaScript supports various data types:
      
      - **Strings:** Used for text, like `""Hello, World!""`.
      - **Numbers:** Used for numeric values, like `42` or `3.14`.
      - **Booleans:** Used for true or false values, like `true` or `false`.

      ```javascript
      let greeting = ""Hello, World!"";
      let itemCount = 10;
      let isLogged = false;
      ```

5. **Operators and Expressions**

    - **Arithmetic Operators (+, -, *, /, %)**
    
      Arithmetic operators allow you to perform mathematical calculations.

      ```javascript
      let sum = 5 + 3; // 8
      let product = 4 * 6; // 24
      ```

    - **Comparison Operators (==, ===, !=, !==, >, <)**
    
      Comparison operators are used to compare values.

      ```javascript
      let isEqual = 5 === ""5""; // false
      let isGreater = 10 > 5; // true
      ```

    - **Logical Operators (&&, ||, !)**
    
      Logical operators are used to combine or negate conditions.

      ```javascript
      let isLoggedIn = true;
      let isAdmin = false;
      let canEdit = isLoggedIn && isAdmin; // false
      ```

6. **Conditional Statements**

    - **`if` Statements**
    
      `if` statements allow you to execute code conditionally.

      ```javascript
      if (userAge >= 18) {
          console.log(""You are an adult."");
      } else {
          console.log(""You are a minor."");
      }
      ```

    - **`else` and `else if`**
    
      Use `else` and `else if` to handle multiple conditions.

      ```javascript
      if (score >= 90) {
          console.log(""A Grade"");
      } else if (score >= 80) {
          console.log(""B Grade"");
      } else {
          console.log(""C Grade or below"");
      }
      ```

    - **Ternary Operator**
    
      The ternary operator provides a concise way to write conditional expressions.

      ```javascript
      let isMember = (age >= 18) ? ""Yes"" : ""No"";
      ```

7. **Loops**

    - **`for` Loop**
    
      A `for` loop allows you to execute code repeatedly.

      ```javascript
      for (let i = 0; i < 5; i++) {
          console.log(""Iteration "" + i);
      }
      ```

    - **`while` Loop**
    
      The `while` loop repeats code while a condition is true.

      ```javascript
      let counter = 0;
      while (counter < 3) {
          console.log(""Count: "" + counter);
          counter++;
      }
      ```

    - **`do...while` Loop**
    
      The `do...while` loop ensures that code is executed at least once.

      ```javascript
      let x = 0;
      do {
          console.log(""Value of x: "" + x);
          x++;
      } while (x < 3);
      ```

8. **Functions**

    - **Declaring Functions**
    
      Functions are reusable blocks of code.

      ```javascript
      function greet(name) {
          console.log(""Hello, "" + name + ""!"");
      }
      ```

    - **Function Parameters and Return Values**
    
      Functions can take parameters and return values.

      ```javascript
      function add(a, b) {
          return a + b;
      }
      ```

    - **Arrow Functions**
    
      Arrow functions provide a concise syntax for defining functions.

      ```javascript
      const multiply = (a, b) => a * b;
      ```

9. **Arrays**

    - **Creating and Accessing Arrays**
    
      Arrays are used to store collections of data.

      ```javascript
      let colors = [""red"", ""green"", ""blue""];
      console.log(colors[0]); // ""red""
      ```

    - **Array Methods (push, pop, shift, unshift)**
    
      Array methods allow you to manipulate arrays.

      ```javascript
      colors.push(""yellow""); // Add an element to the end
      colors.pop(); // Remove the last element
      colors.shift(); // Remove the first element
      colors.unshift(""purple""); // Add an element to the beginning
      ```

10. **Objects**

    - **Object Literals**
    
      Objects are used to store key-value pairs.

      ```javascript
      let person = {
          name: ""John"",
          age: 30,
          email: ""john@example.com""
      };
      ```

    - **Accessing Object Properties**
    
      Access object properties using dot notation.

      ```javascript
      console.log(person.name); // ""John""
      ```

    - **Object Methods**
    
      Objects can contain functions, known as methods.

      ```javascript
      let calculator = {
          add: function (a, b) {
              return a + b;
          }
      };
      ```

11. **DOM Manipulation**

    - **Introduction to the Document Object Model**
    
      The DOM represents the structure of an HTML document.

    - **Selecting HTML Elements**
    
      You can select and manipulate HTML elements using JavaScript.

      ```javascript
      let heading = document.querySelector(""h1"");
      ```

    - **Modifying Element Content**
    
      Change element content using JavaScript.

      ```javascript
      heading.textContent = ""New Heading"";
      ```

12. **Events and Event Handling**

    - **Adding Event Listeners**
    
      Event listeners allow you to respond to user interactions.

      ```javascript
      button.addEventListener(""click"", function () {
          alert(""Button clicked!"");
      });
      ```

    - **Common Event Types (click, submit, keyup)**
    
      Common event types include click, submit, and keyup.

      ```javascript
      form.addEventListener(""submit"", function (event) {
          event.preventDefault();
          // Handle form submission
      });
      ```

13. **Asynchronous JavaScript**

    - **Understanding Callbacks**
    
      Callbacks are functions passed as arguments to other functions. They're essential for handling asynchronous operations.

    - **Promises and `async/await`**
    
      Promises provide a way to handle asynchronous code more elegantly. `async/await` simplifies working with promises.

14. **Working with APIs**

    - **Making API Requests with `fetch()`**
    
      The `fetch()` function is used to make HTTP requests to APIs.

      ```javascript
      fetch(""https://api.example.com/data"")
          .then(response => response.json())
          .then(data => {
              console.log(data);
          })
          .catch(error => {
              console.error(error);
          });
      ```

    - **Handling API Responses**
    
      Process API responses and use the data in your application.

15. **JavaScript Libraries and Frameworks**

    - **Introduction to Libraries like jQuery**
    
      Libraries like jQuery simplify common JavaScript tasks.

      ```javascript
      $("".element"").hide();
      ```

    - **Overview of Frameworks like React and Angular**
    
      Frameworks like React and Angular provide structured approaches to building web applications.

16. **Debugging and Error Handling**

    - **Using Browser Developer Tools**
    
      Browser developer tools help you debug JavaScript code.

    - **Handling Errors with `try...catch`**
    
      Use `try...catch` to gracefully handle errors.

17. **Best Practices and Code Structure**

    - **Clean Code Guidelines**
    
      Follow clean code principles to write maintainable and readable code.

    - **Modularization**
    
      Organize your code into modules for better structure and reusability.

18. **Putting It All Together: Building a Mini Project**

    - **Example: Creating a To-Do List App**
    
      Apply what you've learned to build a simple web application, like a to-do list.

19. **Resources and Further Learning**

    - **Books, Courses, and Online Communities**
    
      Explore additional learning resources to enhance your JavaScript skills.

    - **Practice Coding Challenges**
    
      Solve coding challenges to reinforce your knowledge.

20. **Conclusion and Next Steps**

    - **Celebrate Your JavaScript Journey**
    
      You've completed a comprehensive JavaScript tutorial‚Äîcongratulations!

    - **Future Learning Paths**
    
      Consider exploring advanced JavaScript topics and other programming languages.

## Conclusion

By the end of this tutorial, you'll have a solid understanding of JavaScript fundamentals. You'll be able to create interactive web applications, work with data, and even build your projects. JavaScript is a powerful tool in web development, and with practice and creativity, the possibilities are endless. Happy coding!"
