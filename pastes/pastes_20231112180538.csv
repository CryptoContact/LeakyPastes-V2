id,title,username,language,date,content
QuAbWyDz,03. Man O War,Spocoman,Python,Sunday 12th of November 2023 12:03:55 PM CDT,"pirate_ship = list(map(int, input().split('>')))
war_ship = list(map(int, input().split('>')))
max_section_health = int(input())

while True:
    command = input()
    if command == ""Retire"":
        break
    elif command == ""Status"":
        count = len([x for x in pirate_ship if x < max_section_health / 5])
        print(f""{count} sections need repair."")
        continue
    command = command.split(' ')
    index = int(command[1])
    if command[0] == ""Fire"":
        damage = int(command[2])
        if 0 <= index < len(war_ship):
            war_ship[index] -= damage
            if war_ship[index] <= 0:
                print(""You won! The enemy ship has sunken."")
                war_ship.clear()
                break
    elif command[0] == ""Defend"":
        final_index = int(command[2])
        damage = int(command[3])
        if 0 <= index < len(pirate_ship) and 0 <= final_index < len(pirate_ship):
            for i in range(index, final_index + 1):
                pirate_ship[i] -= damage
                if pirate_ship[i] <= 0:
                    print(""You lost! The pirate ship has sunken."")
                    pirate_ship.clear()
                    exit(0)
    elif command[0] == ""Repair"":
        health = int(command[2])
        if 0 <= index < len(pirate_ship):
            pirate_ship[index] += health
            if pirate_ship[index] > max_section_health:
                pirate_ship[index] = max_section_health

if len(pirate_ship) > 0 and len(war_ship) > 0:
    print(f""Pirate ship status: {sum(pirate_ship)}\nWarship status: {sum(war_ship)}"")
"
0puuPSZW,BTC Wallet Credentials have been reset,castlclass_20,GetText,Sunday 12th of November 2023 11:23:24 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
cranborneblogt9:gtQtms on 212.224.93.130
You can connect via SSH.
Regards"
2JFiFbBJ,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 12th of November 2023 11:20:30 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT255925"
AqfxSVEz,Untitled,xPucTu4,Python,Sunday 12th of November 2023 11:18:43 AM CDT,"import math

days = int(input())

last_day_run = float(input())
total_run = last_day_run

for day in range(0, days):
    percent_increase = float(input()) / 100 + 1
    run_today = last_day_run * percent_increase
    total_run += run_today
    last_day_run = run_today

if total_run >= 1000:
    km_more = math.ceil(total_run - 1000)
    print(f""You've done a great job running {km_more} more kilometers!"")
else:
    km_less = math.ceil(1000 - total_run)
    print(f""Sorry Mrs. Ivanova, you need to run {km_less} more kilometers"")"
Qcxj4gbn,Nigerian scammers [12-11-2/2023],bombaires,AIMMS,Sunday 12th of November 2023 11:14:34 AM CDT,"<a href=""mailto:akad4685@gmail.com"">akad4685@gmail.com</a>
<a href=""mailto:akad4685+15769@gmail.com"">akad4685+15769@gmail.com</a>
<a href=""mailto:akad4685+11288@gmail.com"">akad4685+11288@gmail.com</a>
<a href=""mailto:akad4685+16391@gmail.com"">akad4685+16391@gmail.com</a>
<a href=""mailto:akad4685+27479@gmail.com"">akad4685+27479@gmail.com</a>
<a href=""mailto:akad4685+3936@gmail.com"">akad4685+3936@gmail.com</a>
<a href=""mailto:akad4685+12620@gmail.com"">akad4685+12620@gmail.com</a>
<a href=""mailto:akad4685+23471@gmail.com"">akad4685+23471@gmail.com</a>
<a href=""mailto:akad4685+26315@gmail.com"">akad4685+26315@gmail.com</a>
<a href=""mailto:akad4685+21775@gmail.com"">akad4685+21775@gmail.com</a>
<a href=""mailto:akad4685+26876@gmail.com"">akad4685+26876@gmail.com</a>
<a href=""mailto:akad4685+17457@gmail.com"">akad4685+17457@gmail.com</a>
<a href=""mailto:akad4685+17542@gmail.com"">akad4685+17542@gmail.com</a>
<a href=""mailto:akad4685+32130@gmail.com"">akad4685+32130@gmail.com</a>
<a href=""mailto:akad4685+26197@gmail.com"">akad4685+26197@gmail.com</a>
<a href=""mailto:akad4685+25086@gmail.com"">akad4685+25086@gmail.com</a>
<a href=""mailto:akad4685+17873@gmail.com"">akad4685+17873@gmail.com</a>
<a href=""mailto:akad4685+30929@gmail.com"">akad4685+30929@gmail.com</a>
<a href=""mailto:akad4685+7908@gmail.com"">akad4685+7908@gmail.com</a>
<a href=""mailto:akad4685+13379@gmail.com"">akad4685+13379@gmail.com</a>
<a href=""mailto:akad4685+17441@gmail.com"">akad4685+17441@gmail.com</a>
<a href=""mailto:akad4685+16934@gmail.com"">akad4685+16934@gmail.com</a>
<a href=""mailto:akad4685+15707@gmail.com"">akad4685+15707@gmail.com</a>
<a href=""mailto:akad4685+27719@gmail.com"">akad4685+27719@gmail.com</a>
<a href=""mailto:akad4685+29301@gmail.com"">akad4685+29301@gmail.com</a>
<a href=""mailto:akad4685+23508@gmail.com"">akad4685+23508@gmail.com</a>
<a href=""mailto:akad4685+17185@gmail.com"">akad4685+17185@gmail.com</a>
<a href=""mailto:akad4685+10576@gmail.com"">akad4685+10576@gmail.com</a>
<a href=""mailto:akad4685+30857@gmail.com"">akad4685+30857@gmail.com</a>
<a href=""mailto:akad4685+16380@gmail.com"">akad4685+16380@gmail.com</a>
<a href=""mailto:akad4685+32346@gmail.com"">akad4685+32346@gmail.com</a>
<a href=""mailto:akad4685+28445@gmail.com"">akad4685+28445@gmail.com</a>
<a href=""mailto:akad4685+1010@gmail.com"">akad4685+1010@gmail.com</a>
<a href=""mailto:akad4685+14870@gmail.com"">akad4685+14870@gmail.com</a>
<a href=""mailto:akad4685+5969@gmail.com"">akad4685+5969@gmail.com</a>
<a href=""mailto:akad4685+19186@gmail.com"">akad4685+19186@gmail.com</a>
<a href=""mailto:akad4685+17609@gmail.com"">akad4685+17609@gmail.com</a>
<a href=""mailto:akad4685+12993@gmail.com"">akad4685+12993@gmail.com</a>
<a href=""mailto:akad4685+1436@gmail.com"">akad4685+1436@gmail.com</a>
<a href=""mailto:akad4685+18395@gmail.com"">akad4685+18395@gmail.com</a>
<a href=""mailto:akad4685+3505@gmail.com"">akad4685+3505@gmail.com</a>
<a href=""mailto:akad4685+10499@gmail.com"">akad4685+10499@gmail.com</a>
<a href=""mailto:akad4685+29886@gmail.com"">akad4685+29886@gmail.com</a>
<a href=""mailto:akad4685+22889@gmail.com"">akad4685+22889@gmail.com</a>
<a href=""mailto:akad4685+17589@gmail.com"">akad4685+17589@gmail.com</a>
<a href=""mailto:akad4685+30165@gmail.com"">akad4685+30165@gmail.com</a>
<a href=""mailto:akad4685+28218@gmail.com"">akad4685+28218@gmail.com</a>
<a href=""mailto:akad4685+582@gmail.com"">akad4685+582@gmail.com</a>
<a href=""mailto:akad4685+26718@gmail.com"">akad4685+26718@gmail.com</a>
<a href=""mailto:akad4685+2240@gmail.com"">akad4685+2240@gmail.com</a>
<a href=""mailto:akad4685+4930@gmail.com"">akad4685+4930@gmail.com</a>
<a href=""mailto:akad4685+2816@gmail.com"">akad4685+2816@gmail.com</a>
<a href=""mailto:akad4685+22325@gmail.com"">akad4685+22325@gmail.com</a>
<a href=""mailto:akad4685+1625@gmail.com"">akad4685+1625@gmail.com</a>
<a href=""mailto:akad4685+27787@gmail.com"">akad4685+27787@gmail.com</a>
<a href=""mailto:akad4685+23238@gmail.com"">akad4685+23238@gmail.com</a>
<a href=""mailto:akad4685+11428@gmail.com"">akad4685+11428@gmail.com</a>
<a href=""mailto:akad4685+7813@gmail.com"">akad4685+7813@gmail.com</a>
<a href=""mailto:akad4685+10764@gmail.com"">akad4685+10764@gmail.com</a>
<a href=""mailto:akad4685+31351@gmail.com"">akad4685+31351@gmail.com</a>
<a href=""mailto:akad4685+9021@gmail.com"">akad4685+9021@gmail.com</a>
<a href=""mailto:akad4685+11296@gmail.com"">akad4685+11296@gmail.com</a>
<a href=""mailto:akad4685+2536@gmail.com"">akad4685+2536@gmail.com</a>
<a href=""mailto:akad4685+32445@gmail.com"">akad4685+32445@gmail.com</a>
<a href=""mailto:akad4685+29893@gmail.com"">akad4685+29893@gmail.com</a>
<a href=""mailto:akad4685+14489@gmail.com"">akad4685+14489@gmail.com</a>
<a href=""mailto:akad4685+2118@gmail.com"">akad4685+2118@gmail.com</a>
<a href=""mailto:akad4685+2661@gmail.com"">akad4685+2661@gmail.com</a>
<a href=""mailto:akad4685+22591@gmail.com"">akad4685+22591@gmail.com</a>
<a href=""mailto:akad4685+6141@gmail.com"">akad4685+6141@gmail.com</a>
<a href=""mailto:akad4685+25050@gmail.com"">akad4685+25050@gmail.com</a>
<a href=""mailto:akad4685+454@gmail.com"">akad4685+454@gmail.com</a>
<a href=""mailto:akad4685+14319@gmail.com"">akad4685+14319@gmail.com</a>
<a href=""mailto:akad4685+8381@gmail.com"">akad4685+8381@gmail.com</a>
<a href=""mailto:akad4685+22018@gmail.com"">akad4685+22018@gmail.com</a>
<a href=""mailto:akad4685+8354@gmail.com"">akad4685+8354@gmail.com</a>
<a href=""mailto:akad4685+16819@gmail.com"">akad4685+16819@gmail.com</a>
<a href=""mailto:akad4685+6908@gmail.com"">akad4685+6908@gmail.com</a>
<a href=""mailto:akad4685+21667@gmail.com"">akad4685+21667@gmail.com</a>
<a href=""mailto:akad4685+1027@gmail.com"">akad4685+1027@gmail.com</a>
<a href=""mailto:akad4685+18900@gmail.com"">akad4685+18900@gmail.com</a>
<a href=""mailto:akad4685+29249@gmail.com"">akad4685+29249@gmail.com</a>
<a href=""mailto:akad4685+25679@gmail.com"">akad4685+25679@gmail.com</a>
<a href=""mailto:akad4685+12528@gmail.com"">akad4685+12528@gmail.com</a>
<a href=""mailto:akad4685+9917@gmail.com"">akad4685+9917@gmail.com</a>
<a href=""mailto:akad4685+30449@gmail.com"">akad4685+30449@gmail.com</a>
<a href=""mailto:akad4685+596@gmail.com"">akad4685+596@gmail.com</a>
<a href=""mailto:akad4685+15385@gmail.com"">akad4685+15385@gmail.com</a>
<a href=""mailto:akad4685+24592@gmail.com"">akad4685+24592@gmail.com</a>
<a href=""mailto:akad4685+21916@gmail.com"">akad4685+21916@gmail.com</a>
<a href=""mailto:akad4685+24387@gmail.com"">akad4685+24387@gmail.com</a>
<a href=""mailto:akad4685+3529@gmail.com"">akad4685+3529@gmail.com</a>
<a href=""mailto:akad4685+14523@gmail.com"">akad4685+14523@gmail.com</a>
<a href=""mailto:akad4685+19445@gmail.com"">akad4685+19445@gmail.com</a>
<a href=""mailto:akad4685+22468@gmail.com"">akad4685+22468@gmail.com</a>
<a href=""mailto:akad4685+3957@gmail.com"">akad4685+3957@gmail.com</a>
<a href=""mailto:akad4685+11482@gmail.com"">akad4685+11482@gmail.com</a>
<a href=""mailto:akad4685+30982@gmail.com"">akad4685+30982@gmail.com</a>
<a href=""mailto:akad4685+4163@gmail.com"">akad4685+4163@gmail.com</a>
<a href=""mailto:akad4685+28707@gmail.com"">akad4685+28707@gmail.com</a>
<a href=""mailto:akad4685+27490@gmail.com"">akad4685+27490@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa@gmail.com"">mawsehabibumusitafa@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+27527@gmail.com"">mawsehabibumusitafa+27527@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+11856@gmail.com"">mawsehabibumusitafa+11856@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+12498@gmail.com"">mawsehabibumusitafa+12498@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+22477@gmail.com"">mawsehabibumusitafa+22477@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+23158@gmail.com"">mawsehabibumusitafa+23158@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+7639@gmail.com"">mawsehabibumusitafa+7639@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+23867@gmail.com"">mawsehabibumusitafa+23867@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+9122@gmail.com"">mawsehabibumusitafa+9122@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+7430@gmail.com"">mawsehabibumusitafa+7430@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+533@gmail.com"">mawsehabibumusitafa+533@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+20895@gmail.com"">mawsehabibumusitafa+20895@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+23434@gmail.com"">mawsehabibumusitafa+23434@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+8763@gmail.com"">mawsehabibumusitafa+8763@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5000@gmail.com"">mawsehabibumusitafa+5000@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+11334@gmail.com"">mawsehabibumusitafa+11334@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+17202@gmail.com"">mawsehabibumusitafa+17202@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+24367@gmail.com"">mawsehabibumusitafa+24367@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+18973@gmail.com"">mawsehabibumusitafa+18973@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5641@gmail.com"">mawsehabibumusitafa+5641@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+8180@gmail.com"">mawsehabibumusitafa+8180@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29299@gmail.com"">mawsehabibumusitafa+29299@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+32339@gmail.com"">mawsehabibumusitafa+32339@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+20769@gmail.com"">mawsehabibumusitafa+20769@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+2417@gmail.com"">mawsehabibumusitafa+2417@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15149@gmail.com"">mawsehabibumusitafa+15149@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+14654@gmail.com"">mawsehabibumusitafa+14654@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15196@gmail.com"">mawsehabibumusitafa+15196@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+16602@gmail.com"">mawsehabibumusitafa+16602@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+4285@gmail.com"">mawsehabibumusitafa+4285@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5442@gmail.com"">mawsehabibumusitafa+5442@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+24411@gmail.com"">mawsehabibumusitafa+24411@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+28965@gmail.com"">mawsehabibumusitafa+28965@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15298@gmail.com"">mawsehabibumusitafa+15298@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+20307@gmail.com"">mawsehabibumusitafa+20307@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29318@gmail.com"">mawsehabibumusitafa+29318@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+31909@gmail.com"">mawsehabibumusitafa+31909@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+18074@gmail.com"">mawsehabibumusitafa+18074@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+20144@gmail.com"">mawsehabibumusitafa+20144@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+6493@gmail.com"">mawsehabibumusitafa+6493@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+9632@gmail.com"">mawsehabibumusitafa+9632@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+26181@gmail.com"">mawsehabibumusitafa+26181@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5796@gmail.com"">mawsehabibumusitafa+5796@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+17206@gmail.com"">mawsehabibumusitafa+17206@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+26924@gmail.com"">mawsehabibumusitafa+26924@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+31657@gmail.com"">mawsehabibumusitafa+31657@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+19203@gmail.com"">mawsehabibumusitafa+19203@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+6586@gmail.com"">mawsehabibumusitafa+6586@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+4442@gmail.com"">mawsehabibumusitafa+4442@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+27965@gmail.com"">mawsehabibumusitafa+27965@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+30809@gmail.com"">mawsehabibumusitafa+30809@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+8833@gmail.com"">mawsehabibumusitafa+8833@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+14764@gmail.com"">mawsehabibumusitafa+14764@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+25741@gmail.com"">mawsehabibumusitafa+25741@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+22691@gmail.com"">mawsehabibumusitafa+22691@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+22547@gmail.com"">mawsehabibumusitafa+22547@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+10217@gmail.com"">mawsehabibumusitafa+10217@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29025@gmail.com"">mawsehabibumusitafa+29025@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+26306@gmail.com"">mawsehabibumusitafa+26306@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15855@gmail.com"">mawsehabibumusitafa+15855@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+13123@gmail.com"">mawsehabibumusitafa+13123@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+3546@gmail.com"">mawsehabibumusitafa+3546@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+17824@gmail.com"">mawsehabibumusitafa+17824@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+12604@gmail.com"">mawsehabibumusitafa+12604@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+6025@gmail.com"">mawsehabibumusitafa+6025@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29457@gmail.com"">mawsehabibumusitafa+29457@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+18654@gmail.com"">mawsehabibumusitafa+18654@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+30269@gmail.com"">mawsehabibumusitafa+30269@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+11246@gmail.com"">mawsehabibumusitafa+11246@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5155@gmail.com"">mawsehabibumusitafa+5155@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+28580@gmail.com"">mawsehabibumusitafa+28580@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+1957@gmail.com"">mawsehabibumusitafa+1957@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5871@gmail.com"">mawsehabibumusitafa+5871@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+1757@gmail.com"">mawsehabibumusitafa+1757@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+31738@gmail.com"">mawsehabibumusitafa+31738@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+4408@gmail.com"">mawsehabibumusitafa+4408@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+19287@gmail.com"">mawsehabibumusitafa+19287@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15501@gmail.com"">mawsehabibumusitafa+15501@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15274@gmail.com"">mawsehabibumusitafa+15274@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+24804@gmail.com"">mawsehabibumusitafa+24804@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+24425@gmail.com"">mawsehabibumusitafa+24425@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29821@gmail.com"">mawsehabibumusitafa+29821@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+26602@gmail.com"">mawsehabibumusitafa+26602@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+15088@gmail.com"">mawsehabibumusitafa+15088@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+22108@gmail.com"">mawsehabibumusitafa+22108@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+214@gmail.com"">mawsehabibumusitafa+214@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+26971@gmail.com"">mawsehabibumusitafa+26971@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+19412@gmail.com"">mawsehabibumusitafa+19412@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+24431@gmail.com"">mawsehabibumusitafa+24431@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+19848@gmail.com"">mawsehabibumusitafa+19848@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+14436@gmail.com"">mawsehabibumusitafa+14436@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+27820@gmail.com"">mawsehabibumusitafa+27820@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+8160@gmail.com"">mawsehabibumusitafa+8160@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+12851@gmail.com"">mawsehabibumusitafa+12851@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+25924@gmail.com"">mawsehabibumusitafa+25924@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+5674@gmail.com"">mawsehabibumusitafa+5674@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29338@gmail.com"">mawsehabibumusitafa+29338@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+17511@gmail.com"">mawsehabibumusitafa+17511@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+6777@gmail.com"">mawsehabibumusitafa+6777@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+1646@gmail.com"">mawsehabibumusitafa+1646@gmail.com</a>
<a href=""mailto:mawsehabibumusitafa+29588@gmail.com"">mawsehabibumusitafa+29588@gmail.com</a>"
zP5Ej6vk,refind.conf arch pc,AleksiReede,Bash,Sunday 12th of November 2023 11:07:02 AM CDT,"hideui singleuser,hints,arrows,label,badges
icons_dir themes/rEFInd-minimal/icons
banner themes/rEFInd-minimal/background.png
banner_scale fillscreen
small_icon_size 64
big_icon_size 256
selection_big   themes/rEFInd-minimal/selection_big.png
selection_small themes/rEFInd-minimal/selection_small.png
use_graphics_for osx,linux,elilo,grub,windows
showtools shutdown,firmware,hidden_tags,memtest
timeout 0
#log_level 1
use_nvram false
resolution max
enable_mouse
mouse_speed 2
extra_kernel_version_strings linux-lts,linux-zen,linux

menuentry ""Arch Linux"" {
    icon     /EFI/refind/themes/rEFInd-minimal/icons/os_arch.png
    ostype   Linux
    volume   fb532819-3fcc-411d-ba7a-9f97e572a171
    loader   /vmlinuz-linux-zen
    initrd   /amd-ucode.img
    initrd   /initramfs-linux-zen.img
    options  ""root=PARTUUID=750479b0-3c95-4e15-925e-aea5237a70e4 rw add_efi_memmap rootflags=subvol=@ rootfstype=btrfs quiet splash xhci_hcd.quirks=270336""
    submenuentry ""Boot using fallback initramfs"" {
        initrd /initramfs-linux-fallback.img
    }
    submenuentry ""Boot to terminal"" {
        add_options ""systemd.unit=multi-user.target""
    }
    submenuentry ""Boot to single user"" { 
        add_options ""single""
    }
}"
SzDARUir,Enable USB debugging from shell on Android,metalx1000,Bash,Sunday 12th of November 2023 11:05:53 AM CDT,"#this can be done from termux with root

#enable developer mode
settings put global development_settings_enabled 1

#enable usb debugging
settings put global adb_enabled 1

"
fUKUxLR6,MSSQLQuery,_br0uh_,PostgreSQL,Sunday 12th of November 2023 10:52:25 AM CDT,"SELECT
    P.ProductName,
    ISNULL(C.CategoryName, 'Без категории') AS CategoryName
FROM
    Products P
LEFT JOIN
    ProductCategory PC ON P.ProductID = PC.ProductID
LEFT JOIN
    Categories C ON PC.CategoryID = C.CategoryID;"
pVkrGKjh,Untitled,BC99168,C,Sunday 12th of November 2023 10:49:03 AM CDT,"#include <iostream>
using namespace std;

typedef struct node{
	int value;
	struct node *left;
	struct node *right;
	struct node *parent;
}node;

class BST{
	public:
	node *root;
	BST(){
		root = nullptr;
	}
	void add_node(int n){
		node *new_node = new node;
		new_node->value = n;
		new_node->left = nullptr;
		new_node->right = nullptr;
		if(root == nullptr){
			root = new_node;
			root->parent = nullptr;
			return; 
		}
		node *current = root;
		node *pre = root;
		while(current != nullptr){
			pre = current;
			if(current->value >= n)
				current = current->left;
			else
				current = current->right;
		}
		if(n < pre->value)
			pre->left = new_node;
		else
			pre->right = new_node;
		new_node->parent = pre;
	}
	
	void delete_node(int n){
		node *current = root;
		while(current->value != n){
			if(current->value > n)
				current = current->left;
			else
				current = current->right;
		}
		if(current->right == nullptr && current->left == nullptr){
			if(current == root){
				root = nullptr;
				return;
			}
			if(current->parent->right == current)
				current->parent->right = nullptr;
			else
				current->parent->left = nullptr;
			delete current;
		}
		else if(current->left == nullptr){
			if(current == root){
				root = current->right;
				delete current;
				return;
			}
			current->right->parent = current->parent;
			if(current->parent->right == current)
				current->parent->right = current->right;
			else
				current->parent->left = current->right;
			delete current;
		}
		else if(current->right == nullptr){
			if(current == root){
				root = current->left;
				delete current;
				return;
			}
			current->left->parent = current->parent;
			if(current->parent->right == current)
				current->parent->right = current->left;
			else
				current->parent->left = current->left;
			delete current;
		}
		else{
			node* moving_node = current->left;
			while(moving_node->right != nullptr)
				moving_node = moving_node->right;
			if(moving_node->left != nullptr)
				moving_node->left->parent = moving_node->parent;
			if(moving_node->parent->left == moving_node)
				moving_node->parent->left = moving_node->left;
			else
				moving_node->parent->right = moving_node->left;		
			if(current == root){
				root = moving_node;
				moving_node->left = current->left;
				moving_node->right = current->right;
				moving_node->parent = current->parent;
				delete current;
				return;
			}
			moving_node->left = current->left;
			moving_node->right = current->right;
			moving_node->parent = current->parent;
			if(moving_node->parent->left == current)
				moving_node->parent->left = moving_node;
			else
				moving_node->parent->right = moving_node;
			if(moving_node->left != nullptr)
				moving_node->left->parent = moving_node;
			if(moving_node->right != nullptr)
				moving_node->right->parent = moving_node;
			delete current;
			return;
		}
	}
	
	void traverse(node* tmp){
		if(tmp == nullptr)
			return;
		traverse(tmp->left);
		cout << tmp->value << "" "";
		traverse(tmp->right);
	}
	void traverse_left(node* tmp){
		if(tmp == nullptr)
			return;
		traverse_left(tmp->left);
		if(tmp->left != nullptr)
			cout << tmp->left->value << "" "";
		else
			cout << ""0 "";
		traverse_left(tmp->right);
	}
	void traverse_right(node* tmp){
		if(tmp == nullptr)
			return;
		traverse_right(tmp->left);
		if(tmp->right != nullptr)
			cout << tmp->right->value << "" "";
		else
			cout << ""0 "";
		traverse_right(tmp->right);
	}
	int find(int n){
		node *tmp = root;
		while(tmp != nullptr){
			if(n == tmp->value)
				return 1;
			if(n < tmp->value)
				tmp = tmp->left;
			else
				tmp = tmp->right;
		}
		return 0;
	}
};

int main() {
	int n, flag = 0;
	while(cin >> n){
		if(flag == 1)
			cout << ""\n"";
		if(flag == 0)
			flag = 1;
		BST T = BST();
		while(1){
			if(n == -1)
				break;
			if(T.find(n) == 0)
				T.add_node(n);
			else
				T.delete_node(n);
		  	cin >> n;
	  	}
	  	cout << ""node: "";
	  	T.traverse(T.root);
		cout<<""\nleft: "";
		T.traverse_left(T.root);
		cout<<""\nright: "";
		T.traverse_right(T.root);
		cout<<""\n"";
  	}
}"
thJ5wrxm,anmp pythlon error,G0nz0uk,Python,Sunday 12th of November 2023 10:20:02 AM CDT," python3 snmpv2.py
Traceback (most recent call last):
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/asyncore/dispatch.py"", line 46, in runDispatcher
    use_poll=True, map=self.__sockMap, count=1)
  File ""/usr/lib64/python3.6/asyncore.py"", line 207, in loop
    poll_fun(timeout, map)
  File ""/usr/lib64/python3.6/asyncore.py"", line 188, in poll2
    readwrite(obj, flags)
  File ""/usr/lib64/python3.6/asyncore.py"", line 123, in readwrite
    obj.handle_error()
  File ""/usr/lib64/python3.6/asyncore.py"", line 108, in readwrite
    obj.handle_read_event()
  File ""/usr/lib64/python3.6/asyncore.py"", line 423, in handle_read_event
    self.handle_read()
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/asyncore/dgram/base.py"", line 170, in handle_read
    self._cbFun(self, transportAddress, incomingMessage)
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/base.py"", line 85, in _cbFun
    self, transportDomain, transportAddress, incomingMessage
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/entity/engine.py"", line 152, in __receiveMessageCbFun
    self, transportDomain, transportAddress, wholeMsg
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/proto/rfc3412.py"", line 291, in receiveMessage
    msgVersion = verdec.decodeMessageVersion(wholeMsg)
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/proto/api/verdec.py"", line 17, in decodeMessageVersion
    recursiveFlag=False, substrateFun=lambda a, b, c: (a, b[:c])
  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 2003, in __call__
    for asn1Object in streamingDecoder:
  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 1919, in __iter__
    self._substrate, self._asn1Spec, **self._options):
  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 1781, in __call__
    self, substrateFun, **options):
  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 654, in valueDecoder
    for chunk in substrateFun(asn1Object, substrate, length, options):
TypeError: <lambda>() takes 3 positional arguments but 4 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""snmpv2.py"", line 33, in <module>
    snmp_walk(remote_ip, oid='.1.3.6.1.2.1')
  File ""snmpv2.py"", line 16, in snmp_walk
    lookupMib=False)
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/hlapi/asyncore/sync/cmdgen.py"", line 567, in bulkCmd
    snmpEngine.transportDispatcher.runDispatcher()
  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/asyncore/dispatch.py"", line 50, in runDispatcher
    raise PySnmpError('poll error: %s' % ';'.join(format_exception(*exc_info())))
pysnmp.error.PySnmpError: poll error: Traceback (most recent call last):
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/asyncore/dispatch.py"", line 46, in runDispatcher
    use_poll=True, map=self.__sockMap, count=1)
;  File ""/usr/lib64/python3.6/asyncore.py"", line 207, in loop
    poll_fun(timeout, map)
;  File ""/usr/lib64/python3.6/asyncore.py"", line 188, in poll2
    readwrite(obj, flags)
;  File ""/usr/lib64/python3.6/asyncore.py"", line 123, in readwrite
    obj.handle_error()
;  File ""/usr/lib64/python3.6/asyncore.py"", line 108, in readwrite
    obj.handle_read_event()
;  File ""/usr/lib64/python3.6/asyncore.py"", line 423, in handle_read_event
    self.handle_read()
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/asyncore/dgram/base.py"", line 170, in handle_read
    self._cbFun(self, transportAddress, incomingMessage)
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/carrier/base.py"", line 85, in _cbFun
    self, transportDomain, transportAddress, incomingMessage
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/entity/engine.py"", line 152, in __receiveMessageCbFun
    self, transportDomain, transportAddress, wholeMsg
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/proto/rfc3412.py"", line 291, in receiveMessage
    msgVersion = verdec.decodeMessageVersion(wholeMsg)
;  File ""/usr/local/lib/python3.6/site-packages/pysnmp/proto/api/verdec.py"", line 17, in decodeMessageVersion
    recursiveFlag=False, substrateFun=lambda a, b, c: (a, b[:c])
;  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 2003, in __call__
    for asn1Object in streamingDecoder:
;  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 1919, in __iter__
    self._substrate, self._asn1Spec, **self._options):
;  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 1781, in __call__
    self, substrateFun, **options):
;  File ""/usr/local/lib/python3.6/site-packages/pyasn1/codec/ber/decoder.py"", line 654, in valueDecoder
    for chunk in substrateFun(asn1Object, substrate, length, options):
;TypeError: <lambda>() takes 3 positional arguments but 4 were given
caused by <class 'TypeError'>: <lambda>() takes 3 positional arguments but 4 were given
"
A7xm2z8U,03. Man O War,Spocoman,JavaScript,Sunday 12th of November 2023 10:19:19 AM CDT,"function manOWar(input) {
    let isIndexValid = (i, ship) => i >= 0 && i < ship.length,
        pirateShip = input.shift().split('>').map(Number),
        warShip = input.shift().split('>').map(Number),
        maxSectionHealth = Number(input.shift()),
        tokens, command, index, finalIndex, damage, health, count = 0;

    while (input[0] !== ""Retire"") {
        tokens = input.shift().split(' ');
        command = tokens[0];
        index = Number(tokens[1]);

        if (command === ""Fire"" && isIndexValid(index, warShip)) {
            damage = Number(tokens[2]);
            warShip[index] -= damage;
            if (warShip[index] <= 0) {
                console.log(""You won! The enemy ship has sunken."");
                warShip = [];
                break;
            }
        } else if (command === ""Defend"") {
            finalIndex = Number(tokens[2]);
            if (isIndexValid(index, pirateShip) && isIndexValid(finalIndex, pirateShip)) {
                damage = Number(tokens[3]);
                for (let i = index; i <= finalIndex; i++) {
                    pirateShip[i] -= damage;
                    if (pirateShip[i] <= 0) {
                        console.log(""You lost! The pirate ship has sunken."");
                        pirateShip = [];
                        return;
                    }
                }
            }
        } else if (command === ""Repair"" && isIndexValid(index, pirateShip)) {
            health = Number(tokens[2]);
            pirateShip[index] += health;
            if (pirateShip[index] > maxSectionHealth) {
                pirateShip[index] = maxSectionHealth;
            }
        } else if (command === ""Status"") {
            count = pirateShip.filter(x => x < maxSectionHealth / 5).length;
            console.log(`${count} sections need repair.`);
        }
    }

    if (pirateShip.length > 0 && warShip.length > 0) {
        let sum = (ship) => ship.reduce((a, b) => a + b, 0);
        console.log(`Pirate ship status: ${sum(pirateShip)}`);
        console.log(`Warship status: ${sum(warShip)}`);
    }
    return;
}"
hkF30sBa,nyantones,j0h,Arduino,Sunday 12th of November 2023 10:16:32 AM CDT,"//Sacrifices were made
#include ""sp.h"" ///same as pitches.h
#include <toneAC.h>  
// notes in the melody:
int melody[] = {

 //NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_DS7,   NOTE_CS7, NOTE_AS6, NOTE_B6,  NOTE_FS6, NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_AS6,   NOTE_B6,  NOTE_CS7, NOTE_E7,  NOTE_DS7, NOTE_E7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_FS6,   NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_CS7, NOTE_B7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,   NOTE_CS7, NOTE_B7,  NOTE_CS7, NOTE_B7,  NOTE_FS1,   NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_FS1,   NOTE_E6,  NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_FS1,   NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_AS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_E6,  NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B7,  NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_FS1, NOTE_E6,  NOTE_DS6,   NOTE_CS6, NOTE_B0,  NOTE_FS1, NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_FS1, NOTE_GS1,   NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,  NOTE_FS1,   NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_CS7,  NOTE_DS3, NOTE_E3
 NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_DS7,   NOTE_CS7, NOTE_AS6, NOTE_B6,  NOTE_FS6, NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_AS6,   NOTE_B6,  NOTE_CS7, NOTE_E7,  NOTE_DS7, NOTE_E7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_FS6,   NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_CS7, NOTE_B7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0//,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,   NOTE_CS7, NOTE_B7,  NOTE_CS7, NOTE_B7,  NOTE_FS1,   NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_FS1,   NOTE_E6,  NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_FS1,   NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_AS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_E6,  NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B7,  NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_FS1, NOTE_E6,  NOTE_DS6,   NOTE_CS6, NOTE_B0,  NOTE_FS1, NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_FS1, NOTE_GS1,   NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,  NOTE_FS1,   NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_CS7,  NOTE_DS3, NOTE_E3
 //NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_DS7,   NOTE_CS7, NOTE_AS6, NOTE_B6,  NOTE_FS6, NOTE_DS6,   NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_AS6,   NOTE_B6,  NOTE_CS7, NOTE_E7,  NOTE_DS7, NOTE_E7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_FS6,   NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_CS7, NOTE_B7,   NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0,   NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6,   NOTE_D6,  NOTE_CS6, NOTE_B0//,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6,   NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6,   NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0,   NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6,   NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,   NOTE_CS7, NOTE_B7,  NOTE_CS7, NOTE_B7,  NOTE_FS1,   NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_FS1,   NOTE_E6,  NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_FS1,   NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_AS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0,   NOTE_E6,  NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B7,  NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_FS1, NOTE_E6,  NOTE_DS6,   NOTE_CS6, NOTE_B0,  NOTE_FS1, NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,   NOTE_FS1, NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_B0,   NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_FS1, NOTE_GS1,   NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,  NOTE_FS1,   NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6,   NOTE_FS6, NOTE_B7,  NOTE_CS7,  NOTE_DS3, NOTE_E3

};
void comments(){
  Serial.println(""Comments in code lol"");
  //sharp frq formula: NS=N+(i*2)+(i-1)+1  (i=itteration starting at 1) its close, but not quiet right.
//58=55+(1*2)+(1-1)+1  == 58 //cool it works lol 
//117=110+(2*2)+(2-1)+1 ==116 !=117 hmmm
//233=220+(3*2)+(3-1)+1 ==229 !=233 

//durration Note (itteration?)  Number pause (looks like)
//ok I typoed  transcribing set NOTE_Note0==NOTE_Note1 where not otherwise defined
//now to underp the array see line abouve
  
//  char _NYANLIB_RTTTL_SONG_NYAN[] =""nyan cat:d=4,o=4,b=120:
//  NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_DS6, 
//  NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_DS7, 
//  NOTE_CS7, NOTE_AS6, NOTE_B6,  NOTE_FS6, NOTE_DS6, 
//  NOTE_E6,  NOTE_FS6, NOTE_B6,  NOTE_CS7, NOTE_AS6, 
//  NOTE_B6,  NOTE_CS7, NOTE_E7,  NOTE_DS7, NOTE_E7, 
//  NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0, 
//  NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6, 
//  NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6, 
//  NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, 
//  NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6, 
//  NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0, 
//  NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0, 
//  NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_FS6, 
//  NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_CS7, NOTE_B7, 

//  NOTE_CS7, NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_DS6,0,NOTE_B0, 
//  NOTE_D6,  NOTE_CS6, NOTE_B0,0,NOTE_B7,  NOTE_CS7, NOTE_D6, 
//  NOTE_D6,  NOTE_CS6, NOTE_B0,  NOTE_CS6, NOTE_DS6, 
//  NOTE_FS6, NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, 
//  NOTE_DS6, NOTE_B0,  NOTE_CS6, NOTE_B0,  NOTE_DS6, NOTE_FS6, 
//  NOTE_GS6, NOTE_DS6, NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_B0, 
//  NOTE_D6,  NOTE_DS6, NOTE_D6,  NOTE_CS6, NOTE_B0, 
//  NOTE_CS6, NOTE_D6,  NOTE_B0,  NOTE_CS6, NOTE_DS6, 
//  NOTE_FS6, NOTE_CS6, NOTE_DS6, NOTE_CS6, NOTE_B0, 

//  NOTE_CS7, NOTE_B7,  NOTE_CS7, NOTE_B7,  NOTE_FS1, 
//  NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, 
//  NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6, 
//  NOTE_FS6, NOTE_B7,  NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_FS1, 
//  NOTE_E6,  NOTE_DS6, NOTE_CS6, NOTE_B0,  NOTE_FS1, 
//  NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7, 
//  NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0, 
//  NOTE_FS1, NOTE_GS1, NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0, 
//  NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6, 
//  NOTE_FS6, NOTE_B7,  NOTE_AS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B7, 
//  NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_CS6, NOTE_DS6, NOTE_B0, 
//  NOTE_E6,  NOTE_DS6, NOTE_E6,  NOTE_FS6, NOTE_B7,  NOTE_B7, 
//  NOTE_FS1, NOTE_GS1, NOTE_B0,  NOTE_FS1, NOTE_E6,  NOTE_DS6, 
//  NOTE_CS6, NOTE_B0,  NOTE_FS1, NOTE_DS1, NOTE_E0,  NOTE_FS1, NOTE_B7, 
//  NOTE_FS1, NOTE_GS1, NOTE_B7,  NOTE_FS1, NOTE_GS1, NOTE_B0, NOTE_B0, 
//  NOTE_CS6, NOTE_DS6, NOTE_B0,  NOTE_FS1, NOTE_GS1, 
//  NOTE_FS1, NOTE_B7,  NOTE_B0,  NOTE_AS1, NOTE_B0,  NOTE_FS1, 
//  NOTE_GS1, NOTE_B0,  NOTE_E6,  NOTE_DS6, NOTE_E6, 
//  NOTE_FS6, NOTE_B7,  NOTE_CS7, NOTE_DS3, NOTE_E3
}


// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
//needs work
  4, 8, 8, 4, 4, 4, 4, 4
  // 2, 10, 10, 5, 3, 5, 3, 7
};


void nyanclear(){
     Serial.write(12); //ascii form feed a line breaking character doesnt do what I want it to in the arduino terminal, but it may in the linux term
 }
 
void nyan(){
  for (int thisNote = 0; thisNote < 8; thisNote++) {

    // to calculate the note duration, take one second divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.

    int noteDuration = 1000*.6 / noteDurations[thisNote];
    tone(8, melody[thisNote], noteDuration);

    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:

    int pauseBetweenNotes = noteDuration * 1.40;
    delay(pauseBetweenNotes);

    // stop the tone playing:
    noTone(8);

  }
 
  
  }



void setup() {
Serial.begin(9600);
 // nyanyan(); // :( exceeds memory... 3 frames and all the notes FFS
 //maybe put the lines in an array
 String nyanString= ""   o    *              o        +"";
      nyanString += ""+             o     +       *     \n"";
      nyanString += ""       +                          \n"";
      nyanString += ""o  +           +        +         \n"";
      nyanString += ""     o     o       *        O     \n"";
      nyanString += "".~~~.___.~~~ ,-------.   o        \n"";
      nyanString += ""~~.___.~~~.__|    /\\_/\\           \n"";
      nyanString += "".~~~.___.~~~ |___( ^ .^) +     +  \n"";
      nyanString += ""~~.___.~~~.___/ /  / /`           o\n"";
      nyanString += ""   o         o   +       o        \n"";
      nyanString += ""+         *                       \n"";
      nyanString += ""     o         o      o     +     \n"";
      nyanString += ""o           +                     \n"";
      nyanString += ""   +      0        o      *       o\n"";
Serial.println(nyanString);

}

void loop() {

  nyan();

  
}"
Wnq8Wk0B,Untitled,ExsistingExtension,Lua,Sunday 12th of November 2023 10:16:18 AM CDT,"-- Constants
local FUEL_SLOT = 1
local SEED_SLOT = 16
local SEEDS_TO_KEEP = 64
local SIZE = 9

-- Function to check fuel
function checkFuel()
    if turtle.getFuelLevel() < SIZE * SIZE then
        turtle.select(FUEL_SLOT)
        turtle.refuel(1)
    end
end

-- Function to deposit items
function depositItems()
    for i = 2, 15 do
        turtle.select(i)
        turtle.dropUp()
    end
end

-- Function to check if the crop is fully grown
-- This function needs to be adjusted based on your modpack's way of representing crop growth
function isCropFullyGrown()
    local success, data = turtle.inspectDown()
    if success then
        -- Example condition, this needs to be tailored to your modpack
        return data.metadata == 3 -- Assuming metadata 7 is the fully grown stage
    end
    return false
end

-- Function to harvest and replant
function harvestAndReplant()
    for i = 1, SIZE do
        for j = 1, SIZE do
            if isCropFullyGrown() then
                turtle.digDown()  -- Harvest the crop
                turtle.suckDown() -- Collect the items
                turtle.select(SEED_SLOT)
                turtle.placeDown() -- Replant
            end
            if j < SIZE then
                turtle.forward()
            end
        end
        if i < SIZE then
            if i % 2 == 0 then
                turtle.turnLeft()
                turtle.forward()
                turtle.turnLeft()
            else
                turtle.turnRight()
                turtle.forward()
                turtle.turnRight()
            end
        end
    end
end

-- Main function
function main()
    while true do
        checkFuel()
        harvestAndReplant()
        depositItems()
        -- Keeping a stack of seeds
        turtle.select(SEED_SLOT)
        while turtle.getItemCount(SEED_SLOT) < SEEDS_TO_KEEP do
            turtle.suckUp()
        end
        -- Return to start position
        turtle.turnRight()
        turtle.turnRight()
        for i = 1, SIZE - 1 do
            turtle.forward()
        end
        turtle.turnRight()
        for i = 1, SIZE - 1 do
            turtle.forward()
        end
        turtle.turnRight()
        sleep(300) -- Wait for 5 minutes before next cycle
    end
end

main()
"
6PCZNeFe,Untitled,davlefou,Python,Sunday 12th of November 2023 10:09:41 AM CDT,"Voici mes modéles:
class FicheReservation(models.Model):
    indexfiche = models.AutoField(primary_key=True, verbose_name=""cle de table"")
    cloture = models.BooleanField(default=False, verbose_name=""cloture"")
    creation = models.DateTimeField(auto_now_add=True, verbose_name=""Date de creation"")
    prenom = models.CharField(max_length=80, default='', verbose_name=""Prenom"")
    nom = models.CharField(max_length=80, default='', verbose_name=""Nom"")
    portable = models.CharField(max_length=80, default='', verbose_name=""Portable"")
    courriel = models.EmailField(max_length=75, verbose_name=""Courriel"")
    adresse = models.CharField(max_length=250, default='', verbose_name=""Adresse"")
    codepostale = models.CharField(max_length=10, default='', verbose_name=""Code postal"")
    ville = models.CharField(max_length=80, default='', verbose_name=""Ville"")
    tente = models.BooleanField(default=False, verbose_name=""Tente"")
    caravane = models.BooleanField(default=False, verbose_name=""Caravane"")
    campingcar = models.BooleanField(default=False, verbose_name=""Camping-car"")
    deuxroues = models.BooleanField(default=False, verbose_name=""piéton ou deux roues"")
    electricite = models.BooleanField(default=False, verbose_name=""+5€ pour l'élétricité"")
    Nbadulte = models.PositiveSmallIntegerField(default=0, verbose_name=""Nombre d'adulte"")
    Nbmineur = models.PositiveSmallIntegerField(default=0, verbose_name=""Nombre de mineur de +7"")
    Nbenfant = models.PositiveSmallIntegerField(default=0, verbose_name=""Nombre d'enfant"")
    uuid = models.UUIDField(primary_key=False, default=uuid.uuid4, unique=True, editable=False)


    def __unicode__(self):
        return ""{0} {1}"".format(self.prenom, self.nom)

    def __str__(self):
        return self.__unicode__()

class campeur(models.Model):
    indexfiche = models.AutoField(primary_key=True, verbose_name=""cle de table"")
    prenom = models.CharField(max_length=80, blank=True, null=True, verbose_name=""Prenom"")
    nom = models.CharField(max_length=80, blank=True, null=True, verbose_name=""Nom"")
    age = models.DateTimeField(auto_now_add=False, blank=True, null=True, verbose_name=""Age"")
    reservation = models.ForeignKey(FicheReservation, on_delete=models.CASCADE, null=True, verbose_name=""Fiche Reservation"")

    def __unicode__(self):
        return ""{0} {1}"".format(self.prenom, self.nom)

    def __str__(self):
        return self.__unicode__()

class vehicule(models.Model):
    indexfiche = models.AutoField(primary_key=True, verbose_name=""cle de table"")
    immatriculation = models.CharField(max_length=80, blank=True, null=True, verbose_name=""imaatriculation"")
    reservation = models.ForeignKey(FicheReservation, on_delete=models.CASCADE, null=True, verbose_name=""Fiche Reservation"")

    def __unicode__(self):
        return ""{0}"".format(self.immatriculation)

    def __str__(self):
        return self.__unicode__()

et pour la création des fomes d'affichage:
        form = FormReservation()
        form.traduction(page_langue)
        form_list = list()
        for i in range(4):
            form_list.append(FormCampeur())
        for i in range(4):
            form_list.append(FormVehicule())

        for ef in form_list:
            ef.traduction(page_langue)

et j'obtiens mes formulaires mais django leur donne les mêmes id. Comment traiter le retour?
"
FjzMyVZc,03. Man O War,Spocoman,C++,Sunday 12th of November 2023 10:05:14 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

vector<int> vectorFiller(string s, char sep) {
    vector<int> v;
    string n = """";

    for (int i = 0; i < s.size(); i++) {
        if (s[i] == sep) {
            v.push_back(stoi(n));
            n = """";
        }
        else {
            n += s[i];
        }
    }
    v.push_back(stoi(n));
    return v;
}

bool isIndexValid(int i, vector<int> v) {
    return i >= 0 && i < v.size();
}

int sum(vector<int> v) {
    int result = 0;
    for (auto& n : v) {
        result += n;
    }
    return result;
}

int main() {
    string line, command;

    getline(cin, line);
    auto pirateShip = vectorFiller(line, '>');

    getline(cin, line);
    auto warShip = vectorFiller(line, '>');

    int maxSectionHealth, index, finalIndex, damage, health, count = 0;
    cin >> maxSectionHealth;
    cin.ignore();

    while (true) {
        getline(cin, line);
        if (line == ""Retire"") {
            break;
        }
        else if (line == ""Status"") {
            for (int i = 0; i < pirateShip.size(); i++) {
                if (pirateShip[i] < maxSectionHealth / 5) {
                    count++;
                }
            }
            cout << count << "" sections need repair.\n"";
            continue;
        }

        command = line.substr(0, line.find(' '));
        line.erase(0, command.size() + 1);
        auto tokens = vectorFiller(line, ' ');
        index = tokens[0];

        if (command == ""Fire"") {
            damage = tokens[1];
            if (isIndexValid(index, warShip) == 1) {
                warShip[index] -= damage;
                if (warShip[index] <= 0) {
                    cout << ""You won! The enemy ship has sunken.\n"";
                    warShip.clear();
                    break;
                }
            }
        }
        else if (command == ""Defend"") {
            finalIndex = tokens[1];
            damage = tokens[2];
            if (isIndexValid(index, pirateShip) == 1 && isIndexValid(finalIndex, pirateShip) == 1) {
                for (int i = index; i <= finalIndex; i++) {
                    pirateShip[i] -= damage;
                    if (pirateShip[i] <= 0) {
                        cout << ""You lost! The pirate ship has sunken.\n"";
                        pirateShip.clear();
                        return(0);
                    }
                }
            }
        }
        else if (command == ""Repair"") {
            health = tokens[1];
            if (isIndexValid(index, pirateShip) == 1) {
                pirateShip[index] += health;
                if (pirateShip[index] > maxSectionHealth) {
                    pirateShip[index] = maxSectionHealth;
                }
            }
        }
    }

    if (pirateShip.size() > 0 && warShip.size() > 0) {
        cout << ""Pirate ship status: "" << sum(pirateShip) << ""\nWarship status: "" << sum(warShip) << endl;
    }
    return 0;
}"
JBL8z0wE,ProjectRed auto upgrade auto hotkey,bobmarley12345,Autohotkey,Sunday 12th of November 2023 09:56:33 AM CDT,"#Requires Autohotkey v2.0
F6::
{
    ; Use full screen game, and have the utility tool GUI open, all 4 items 
    ; in the top left corner of your GUI left to right
    ; 150ms is the rough packet round trip time. Too fast can glitch your inv until you reconnect
    ; add items to UI
    Send(""{Shift Down}"")
    Sleep(150)
    Click(750, 490)
    Sleep(150)
    Click(800, 490)
    Sleep(150)
    Click(850, 490)
    Sleep(150)
    Click(900, 490)
    Sleep(150)

    ; click install
    Click(950, 400)
    Sleep(150)
    
    ; click the item back into inv
    Click(960, 350)
    Sleep(150)
    Send(""{Shift Up}"")
    return
}"
RvAy3VN8,Untitled,sissou123,Python,Sunday 12th of November 2023 09:54:00 AM CDT,">>> from pysnmp.hlapi import *
>>>
>>> SnmpEngine()
SnmpEngine(snmpEngineID=OctetString(hexValue='80004fb80567'))
iterator = getCmd(SnmpEngine(),
                  CommunityData('public'),
                  UdpTransportTarget(('192.168.149.29', 161)),
                  ContextData(),
                  ObjectType(ObjectIdentity(""1.3.6.1.2.1.1.3"")))
https://tii.la/r2Qf"
aSG9ZSLF,Untitled,xPucTu4,Python,Sunday 12th of November 2023 09:35:26 AM CDT,"# hairy solution
goal_for_the_day = int(input())
total_earned = 0

while total_earned < goal_for_the_day:
    command = input()
    if command == ""closed"":
        break
    elif command == ""haircut"":
        type_of_haircut = input()
        if type_of_haircut == ""mens"":
            total_earned += 15
        elif type_of_haircut == ""ladies"":
            total_earned += 20
        elif type_of_haircut == ""kids"":
            total_earned += 10
    elif command == ""color"":
        type_of_color = input()
        if type_of_color == ""touch up"":
            total_earned += 20
        elif type_of_color == ""full color"":
            total_earned += 30

if total_earned >= goal_for_the_day:
    print(""You have reached your target for the day!"")
else:
    print(f""Target not reached! You need {goal_for_the_day - total_earned}lv. more."")
print(f""Earned money: {total_earned}lv."")
"
u8QvT4kH,Item-Bank_PC Subtrahieren,MagmaLP,Lua,Sunday 12th of November 2023 09:30:12 AM CDT,"os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""top"")
s = sen.getTargets()
 
file = fs.open(""local-name"", ""r"")             --read user
name = file.readLine()
file.close()

function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    term.setBackgroundColor(calc_color(groundb))
    term.setCursorPos(gap,line)
    term.setTextColor(calc_color(color))
    text = term.write(text)
end 

-- Funktion zum Lesen der Datei und Extrahieren der Informationen
function ladeItems()
  local datei = fs.open(""Users/"" .. name, ""r"")  -- Datei im Lesemodus öffnen
 
  if not datei then
    print(""Fehler: Datei konnte nicht geöffnet werden."")
    return
  end
 
  -- Tabelle zum Speichern der Iteminformationen
  local items = {}
    
  -- Schleife durch jede Zeile der Datei
  repeat
    local zeile = datei.readLine()  -- Eine Zeile aus der Datei lesen
    if zeile then
      -- Trenne den Itemnamen und die Menge anhand des Gleichheitszeichens
      local itemName, menge = zeile:match(""([^=]+)%s*=%s*(%d+)"")
      if itemName and menge then
        items[itemName] = tonumber(menge)
      else
        print(""Fehlerhafte Zeile in der Datei: "" .. zeile)
      end
    end
  until not zeile
 
  datei.close()  -- Datei schließen
 
  return items
end
 
-- Beispielaufruf der Funktion
local itemTabelle = ladeItems()
 
-- Beispiel: Verwendung der abgerufenen Informationen
if itemTabelle then
    AEs_Amount = itemTabelle[""Adjustable Emitter""]
    Shiny_Amount = itemTabelle[""Shiny Ingot""]
    Tungsten_Amount = itemTabelle[""Tungsten Ore""]
    
    clear()
    msg(01,01,02,16,"" Account: ""..name)                             --überschrift
    msg(01,02,08,16,""---------------------------------------------------"")
    msg(14,04,06,16,""$$$                   $$$"")
    msg(18,04,05,16,""Trading-City Bank"")
    msg(18,05,01,16,""~~~~~~~~~~~~~~~~~"")

    msg(02,08,01,16,""Your Items:"")
    msg(02,09,01,16,""~~~~~~~~~~~"")
    msg(19,08,09,16,"" "" .. AEs_Amount .. ""x"")
    msg(19,09,09,16,"" "" .. Shiny_Amount .. ""x"")
    msg(19,10,09,16,"" "" .. Tungsten_Amount .. ""x"")

    msg(01,18,08,16,""---------------------------------------------------"")
    msg(47,19,16,01,"" back"")
	
    
    i = math.max(AEs_Amount, Shiny_Amount, Tungsten_Amount)
    x = 26
	for _, pair in ipairs{{99999, 31}, {9999, 30}, {999, 29}, {99, 28}, {9, 27}} do
    	if i > pair[1] then x = pair[2] break end
	end
    msg(x,08,09,16,""Adjustable Emitters"")
	msg(x,09,09,16,""Shiny Ingot"")
	msg(x,10,09,16,""Tungste Ore"")
    
    msg(02,12,01,16,""Select Your Output:"")
    msg(02,13,01,16,""~~~~~~~~~~~~~~~~~~~"")
    
    b = x - 11
    c = x - 6
    for a = 14,16 do                     -- +16für zeile 11-13
        msg(2,a,01,15,"" +16 "")   
    end
    for a = 14,16 do                     -- +1für zeile 11-13
        msg(8,a,01,15,"" +1 "")   
    end
    for a = 14,16 do                     -- Leerzeichen
        msg(13,a,04,16,""     "")
    end
    for a = 14,16 do                     -- 0für zeile 11-13
        msg(13,a,04,16,""0"")
    end
    for a = 14,16 do                     -- -1für zeile 11-13
        msg(b,a,01,15,"" -1 "")
    end  
    for a = 14,16 do                     -- -16für zeile 11-13
        msg(c,a,01,15,"" -16 "")
    end
    
    msg(x,14,09,16,""Adjustable Emitters"")
	msg(x,15,09,16,""Shiny Ingot"")
	msg(x,16,09,16,""Tungste Ore"")
    sleep(5)
end"
68b2nZ40,Untitled,xPucTu4,Python,Sunday 12th of November 2023 09:28:51 AM CDT,"k = int(input())
l = int(input())
m = int(input())
n = int(input())

substitute_count = 0

for first_digit_k in range(k, 9):
    for second_digit_l in range(9, l - 1, -1):
        for first_digit_m in range(m, 9):
            for second_digit_n in range(9, n - 1, -1):
                if first_digit_k % 2 == 0 and second_digit_l % 2 != 0 and first_digit_m % 2 == 0 and second_digit_n % 2 != 0:
                    if first_digit_k != first_digit_m or second_digit_l != second_digit_n:
                        print(f""{first_digit_k}{second_digit_l} - {first_digit_m}{second_digit_n}"")
                        substitute_count += 1
                        if substitute_count == 6:
                            break
                    else:
                        print(""Cannot change the same player."")
            if substitute_count == 6:
                break
        if substitute_count == 6:
            break
    if substitute_count == 6:
        break
"
aLgPwNQi,Untitled,xPucTu4,Python,Sunday 12th of November 2023 09:22:49 AM CDT,"n = int(input())

found = False

for a in range(1, 10):
    for b in range(9, a - 1, -1):
        for c in range(0, 10):
            for d in range(9, c - 1, -1):
                if a + b + c + d == a * b * c * d and n % 10 == 5:
                    print(f'{a}{b}{c}{d}')
                    found = True
                    break
                if (a * b * c * d) != 0 and (a * b * c * d) // (a + b + c + d) == 3 and n % 3 == 0:
                    print(f'{d}{c}{b}{a}')
                    found = True
                    break
            if found:
                break
        if found:
            break
    if found:
        break

if not found:
    print('Nothing found')
"
tu3EUxb3,Untitled,xPucTu4,Python,Sunday 12th of November 2023 09:18:38 AM CDT,"num_students = int(input())
top_students = 0
students_4_to_499 = 0
students_3_to_399 = 0
fail_students = 0
total_score = 0
for _ in range(num_students):
    grade = float(input())
    total_score += grade

    if grade >= 5.0:
        top_students += 1
    elif 4.0 <= grade < 5.0:
        students_4_to_499 += 1
    elif 3.0 <= grade < 4.0:
        students_3_to_399 += 1
    else:
        fail_students += 1
percent_top_students = (top_students / num_students) * 100
percent_students_4_to_499 = (students_4_to_499 / num_students) * 100
percent_students_3_to_399 = (students_3_to_399 / num_students) * 100
percent_fail_students = (fail_students / num_students) * 100
average_score = total_score / num_students
print(f""Top students: {percent_top_students:.2f}%"")
print(f""Between 4.00 and 4.99: {percent_students_4_to_499:.2f}%"")
print(f""Between 3.00 and 3.99: {percent_students_3_to_399:.2f}%"")
print(f""Fail: {percent_fail_students:.2f}%"")
print(f""Average: {average_score:.2f}"")

"
tpFexAYe,Untitled,xPucTu4,Python,Sunday 12th of November 2023 09:14:45 AM CDT,"""""""
Задача 5. Разпродажба на екскурзии
Туристическа фирма разпродава финални екскурзионни пакети за края на годината
 Напишете програма, която да изчислява, печалбата от разпродажбата и дали са продадени всички пакети или не,
 като знаете първоначалния брой екскурзии и техните цени. Фирмата предлага два вида екскурзии – море (""sea"") на цена
 680 лева и планина (""mountain"") на цена 499 лева. При избор на даден пакет, към общата сума се добавя съответната цена.
 При избор на пакет, който вече не е наличен (броят му е равен на 0), не трябва да се добавя към общата цена.
Вход:
От конзолата първоначално се четат 2 реда:
1.	Брой екскурзии за море – цяло число в интервала [1… 500]
2.	Брой екскурзии за планина – цяло число в интервала [1… 500]
След това се чете по един ред до получаване на команда ""Stop"" или докато фирмата не продаде всички пакети:
•	Име на пакет – текст с възможности ""sea"" или ""mountain""
Изход:
На конзолата се отпечатват 1 или  2 реда, според случая:
•	Ако фирмата е успяла да продаде всички пакети:
"" Good job! Everything is sold.""
Винаги се отпечатва:
""Profit: {печалба от продажбите} leva.""
""""""

available_sea_trips = int(input())
available_mountain_trips = int(input())

sold_sea_trips = 0
sold_mountain_trips = 0

while True:
    command = input()
    if command == ""Stop"":
        break
    if command == ""sea"" and available_sea_trips > 0:
        available_sea_trips -= 1
        sold_sea_trips += 1
    elif command == ""mountain"" and available_mountain_trips > 0:
        available_mountain_trips -= 1
        sold_mountain_trips += 1
    # Break if there are no more trips available
    if available_sea_trips == 0 and available_mountain_trips == 0:
        break

total_profit = sold_sea_trips * 680 + sold_mountain_trips * 499
print(f""Profit: {total_profit} leva."")
if available_sea_trips == 0 and available_mountain_trips == 0:
    print(""Good job! Everything is sold."")"
dy3H6W9G,snmpv2,G0nz0uk,Python,Sunday 12th of November 2023 09:14:02 AM CDT,"frompysnmp.hlapi import*
importtime
t = time.time()
iterator = getCmd(SnmpEngine(),
                  CommunityData('public'),
                  UdpTransportTarget(('192.168.149.29', 161)),
                  ContextData(),
                  ObjectType(ObjectIdentity(""1.3.6.1.2.1.1.3"")))
errorIndication, errorStatus, errorIndex, varBinds = next(iterator)
iferrorIndication:  # SNMP engine errorsprint(errorIndication)
else:
    iferrorStatus:  # SNMP agent errorsprint('%s at %s'% (
            errorStatus.prettyPrint(),
            varBinds[int(errorIndex)-1] iferrorIndex else'?'))
    else:
        forvarBind invarBinds:  # SNMP response contentsprint(' = '.join([x.prettyPrint() forx invarBind]))
print(time.time() - t, 's') "
wk0A1FMr,Letters Change Numbers,Pijomir,JavaScript,Sunday 12th of November 2023 09:11:56 AM CDT,"function makeCalculations(input) {
    let alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
    let strings = input.split(' ');
    let sum = 0;
    strings.forEach(string => {
        if (string.length > 0) {
            let params = string.split('');
            let firstLetter = params.shift();
            let firsLetterPosition = alphabet.indexOf(firstLetter.toLowerCase()) + 1;
            let lastLetter = params.pop();
            let lastLetterPosition = alphabet.indexOf(lastLetter.toLowerCase()) + 1;
            let theNumber = Number(params.join(''));
            firstLetter.toUpperCase() === firstLetter ? theNumber /= firsLetterPosition : theNumber *= firsLetterPosition;
            lastLetter.toUpperCase() === lastLetter ? theNumber -= lastLetterPosition : theNumber += lastLetterPosition;
            sum += theNumber;
        }
    });
    console.log(sum.toFixed(2));
}"
TCeEnbxC,Find and Manage all Windows Services,Harze2k,PowerShell,Sunday 12th of November 2023 09:10:38 AM CDT,"#Made by .Najf
function Get-ServiceInfo {
    param (
        [switch]$Enabled,
        [switch]$Disabled,
        [switch]$Auto,
        [switch]$Running,
        [switch]$Stopped,
        [switch]$All
    )
    $services = Get-Service -ErrorAction SilentlyContinue | ForEach-Object {
        $service = $_
        $startType = (Get-CimInstance -ClassName Win32_Service -Filter ""Name='$($service.Name)'"" -ErrorAction SilentlyContinue).StartMode
        $serviceObj = [PSCustomObject]@{
            DisplayName = $service.DisplayName
            Status      = $service.Status
            StartType   = $startType
        }
        if ($All) {
            return $serviceObj
        }
        $include = $false
        if ($Enabled -and $startType -ne 'Disabled') { $include = $true }
        if ($Disabled -and $startType -eq 'Disabled') { $include = $true }
        if ($Auto -and $startType -eq 'Auto') { $include = $true }
        if ($Running -and $service.Status -eq 'Running') { $include = $true }
        if ($Stopped -and $service.Status -eq 'Stopped') { $include = $true }
        if ($include) { return $serviceObj }
    }
    return $services
}
function Manage-Services {
    param (
        [string[]]$ServiceNames,
        [switch]$Stop,
        [switch]$Disable,
        [switch]$Show
    )
    foreach ($serviceName in $ServiceNames) {
        $service = Get-Service -Name $serviceName -ErrorAction SilentlyContinue
        if ($null -eq $service) {
            if ($Show) {
                Write-Host ""=========================================""
                Write-Host ""Service '$serviceName' not found."" -ForegroundColor Red
                Write-Host ""=========================================""
            }
            continue
        }
        if ($Show) {
            Write-Host ""=========================================""
            Write-Host ""Service: $($service.DisplayName)"" -ForegroundColor Yellow
            # Handling status display
            $status = $($service.Status)
            switch ($status) {
                'Running' { Write-Host ""Status: $status"" -ForegroundColor Green }
                'Stopped' { Write-Host ""Status: $status"" -ForegroundColor Red }
                Default { Write-Host ""Status: $status"" -ForegroundColor DarkGray }
            }
            # Handling StartMode
            $startType = (Get-CimInstance -ClassName Win32_Service -Filter ""Name='$($service.Name)'"").StartMode
            if ($null -eq $startType) {
                Write-Host ""Start Type: Unknown"" -ForegroundColor DarkGray
            }
            else {
                switch ($startType) {
                    'Auto' { Write-Host ""Start Type: $startType"" -ForegroundColor Green }
                    'Manual' { Write-Host ""Start Type: $startType"" -ForegroundColor Yellow }
                    'Disabled' { Write-Host ""Start Type: $startType"" -ForegroundColor Red }
                    Default { Write-Host ""Start Type: $startType"" -ForegroundColor Gray }
                }
            }
            Write-Host ""=========================================""
        }
        if ($Stop -and $service.Status -eq 'Running') {
            try {
                Stop-Service -Name $service.Name -Force
                Write-Host ""=========================================""
                Write-Host ""Service '$($service.Name)' stopped."" -ForegroundColor Green
                Write-Host ""=========================================""
            }
            catch {
                Write-Warning ""Failed to stop service '$($service.Name)'.""
            }
        }
        if ($Disable) {
            try {
                Set-Service -Name $service.Name -StartupType Disabled -Force
                Write-Host ""=========================================""
                Write-Host ""Service '$($service.Name)' set to disabled."" -ForegroundColor Green
                Write-Host ""=========================================""
            }
            catch {
                Write-Warning ""Failed to disable service '$($service.Name)'.""
            }
        }
    }
}
$servicesToDisable = @(
    'AllJoyn Router Service',
    'BitLocker Drive Encryption Service',
    'Bluetooth Audio Gateway Service',
    'Bluetooth Support Service',
    'Bluetooth User Support Service',
    'Connected User Experiences and Telemetry',
    'Downloaded Maps Manager',
    'Fax',
    'GameDVR and Broadcast User Service',
    'Geolocation Service',
    'HV Host Service',
    'Hyper-V Data Exchange Service',
    'Hyper-V Guest Service Interface',
    'Hyper-V Guest Shutdown Service',
    'Hyper-V Heartbeat Service',
    'Hyper-V PowerShell Direct Service',
    'Hyper-V Remote Desktop Virtualization Service',
    'Hyper-V Time Synchronization Service',
    'Hyper-V Volume Shadow Copy Requestor',
    'IP Helper',
    'Netlogon',
    'Parental Controls',
    'Phone service',
    'Printer Extensions and Notifications',
    'Remote Registry',
    'Retail Demo Service',
    'Secondary Logon',
    'TCP/IP NetBIOS Helper',
    'Telephony',
    'Touch Keyboard and Handwriting Panel Service',
    'Windows Error Reporting Service',
    'Windows Image Acquisition',
    'Windows Camera Frame Server',
    'Windows Insider Service',
    'Windows Mixed Reality OpenXR Service',
    'Xbox Accessory Management Service',
    'Xbox Live Auth Manager',
    'Xbox Live Networking Service'
)
##################################
# Usage Examples Get-ServiceInfo #
##################################

# Get all services
$allServices = Get-ServiceInfo -All
# Get all enabled services
$enabledServices = Get-ServiceInfo -Enabled
# Get all disabled services
$disabledServices = Get-ServiceInfo -Disabled
# Get all services set to auto start
$autoServices = Get-ServiceInfo -Auto
# Get all running services + StartType Auto
$runningServices = Get-ServiceInfo -Running -Auto
# Get all stopped services
$stoppedServices = Get-ServiceInfo -Stopped

#################################
# Usage Example Manage-Services #
#################################

# To just show status of services:
Manage-Services -ServiceNames $servicesToDisable -Show
# To stop and disable services:
Manage-Services -ServiceNames $servicesToDisable -Stop -Disable

"
VR3MJp8q,estaciones / html,maryskins,HTML,Sunday 12th of November 2023 09:00:30 AM CDT,"<script src=""https://kit.fontawesome.com/04c456a8d1.js"" crossorigin=""anonymous""></script>
<link href=""https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,500;0,600;0,700;0,900;1,400&display=swap"" rel=""stylesheet"">

<div id=""estaciones"">
  
<div id=""bloqde"">
<div class=""headbloq"">
<b>Nombre de la ciudad / Foro</b>
2023
</div>
  
<div class=""txtbloq"">
Textito sobre la ambientación, o explicación de las temperaturas generales.
</div>
  
<div class=""listevent"">
<li><b>07</b> Nombre del evento</li>
<li><b>25</b> Navidad</li>
<li><b>31</b> Fin de año</li>
</div></div>
  
<div id=""calendarbox"">
<div class=""calhead"">
<b>Invierno</b>
<span>Texto sobre la estación, eventos próximos, temperaturas, etc.</span>
<i class=""fa-regular fa-snowflake""></i>
</div>

<ul>
<li> </li>
<li> </li>
<li>1</li>
<li>2</li>
<li>3</li>
<li class=""fest"">4</li>
<li class=""fest"">5</li>
<li>6</li>

<li class=""ev"" title=""Evento""><b>7</b>
<i class=""fa-solid fa-trophy""></i>
</li>

<li>8</li>
<li>9</li>
<li>10</li>
<li class=""fest"">11</li>
<li class=""fest"">12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li class=""fest"">18</li>
<li class=""fest"">19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>

<li class=""ev"" title=""Navidad""><b>25</b>
<i class=""fa-solid fa-gift""></i>
</li>

<li class=""fest"">26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
<li class=""ev"" title=""Fin de año""><b>31</b>
<i class=""fa-solid fa-champagne-glasses""></i>
</li>

<li> </li>
<li> </li>
</ul>

</div>
<div id=""eventbox"">
<div class=""infevent"">
<a href=""enlace al tema"">Evento activo</a>
<span>Texto sobre el evento</span></div>
<img src=""https://via.placeholder.com/370x120"">
<i class=""fa-solid fa-trophy""></i>
</div></div>"
Xqmh8dKf,fusionReactor.lua,IceGeo,Lua,Sunday 12th of November 2023 08:58:05 AM CDT,"local state, data, reactor, turbine, info_window, rules_window, stats_window
 
local STATES = {
    READY = 1, -- Reactor is off and can be started with the lever
    RUNNING = 2, -- Reactor is running and all rules are met
    ESTOP = 3, -- Reactor is stopped due to rule(s) being violated
    UNKNOWN = 4, -- Reactor or turbine peripherals are missing
}
 
------------------------------------------------

function draw_line(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end
 
function progress_bar(x, y, length, minVal, maxVal, bar_color, bg_color)
	draw_line(x, y, length, bg_color) --backgoround bar
	local barSize = math.floor((minVal/maxVal) * length)
	draw_line(x, y, barSize, bar_color)     --progress so far
end

function draw_text(x, y, text, text_color, bg_color)
    term.setBackgroundColor(bg_color)
    term.setTextColor(text_color)
    term.setCursorPos(x,y)
    term.write(text)
end
 
local rules = {}
 
local function add_rule(name, fn)
    table.insert(rules, function()
        local ok, rule_met, value = pcall(fn)
        if ok then
            return rule_met, string.format(""%s (%s)"", name, value)
        else
            return false, name
        end
    end)
end

add_rule(""REACTOR DEUTERIUM LEVEL >=  95%"", function()
    local value = string.format(""%3d%%"", math.floor(data.reactor_deuterium * 100))
    return data.reactor_deuterium >= 0.95, value
end)
 
add_rule(""REACTOR TRITIUM LEVEL   >=  95%"", function()
    local value = string.format(""%3d%%"", math.ceil(data.reactor_tritium * 100))
    return data.reactor_tritium >= 0.95, value
end)
 
--[[add_rule(""TURBINE ENERGY LEVEL  <=  95%"", function()
    local value = string.format(""%3d%%"", math.ceil(data.turbine_energy * 100))
    return data.turbine_energy <= 0.95, value
end)]]--
 
local function all_rules_met()
    for i, rule in ipairs(rules) do
        if not rule() then
            return false
        end
    end
    -- Allow manual emergency stop with SCRAM button
    return state ~= STATES.RUNNING or data.reactor_on
end
 
------------------------------------------------
 
local function update_data()
    data = {
        lever_on = redstone.getInput(""right""),
 
        reactor_on = reactor.isFormed(),
        reactor_injection_rate = reactor.getInjectionRate(),
        reactor_min_burn_rate = reactor.getMinInjectionRate(true),
        reactor_temp_plasma = reactor.getPlasmaTemperature(),
  		reactor_temp_casing = reactor.getCaseTemperature(),
        reactor_dtfuel = reactor.getDTFuelFilledPercentage(),
        reactor_deuterium = reactor.getDeuteriumFilledPercentage(),
        reactor_tritium = reactor.getTritiumFilledPercentage(),
        reactor_prod_max = reactor.getPassiveGeneration(false),
        reactor_prod = reactor.getProductionRate()
 
        --turbine_energy = turbine.getEnergyFilledPercentage(),
    }
end
 
------------------------------------------------
 
local function colored(text, fg, bg)
    term.setTextColor(fg or colors.white)
    term.setBackgroundColor(bg or colors.black)
    term.write(text)
end
 
local function make_section(name, x, y, w, h)
    for row = 1, h do
        term.setCursorPos(x, y + row - 1)
        local char = (row == 1 or row == h) and ""\127"" or "" ""
        colored(""\127"" .. string.rep(char, w-2) .. ""\127"", colors.gray)
    end
 
    term.setCursorPos(x + 2, y)
    colored("" "" .. name .. "" "")
 
    return window.create(term.current(), x + 2, y + 2, w - 4, h - 4)
end
 
local function update_info()
    local prev_term = term.redirect(info_window)
 
    term.clear()
    term.setCursorPos(1, 1)
 
    if state == STATES.UNKNOWN then
        colored(""ERROR RETRIEVING DATA"", colors.red)
        return
    end
 
    colored(""REACTOR: "")
    colored(data.reactor_on and ""ON "" or ""OFF"", data.reactor_on and colors.green or colors.red)
    colored(""  LEVER: "")
    colored(data.lever_on and ""ON "" or ""OFF"", data.lever_on and colors.green or colors.red)
    colored(""  INJECT. RATE: "")
    colored(string.format(""%4.1f"", data.reactor_injection_rate), colors.blue)
 
    term.setCursorPos(1, 3)
 
    colored(""STATUS: "")
    if state == STATES.READY then
        colored(""READY, flip lever to start"", colors.blue)
    elseif state == STATES.RUNNING then
        colored(""RUNNING, flip lever to stop"", colors.green)
    elseif state == STATES.ESTOP and not all_rules_met() then
        colored(""EMERGENCY STOP, safety rules violated"", colors.red)
    elseif state == STATES.ESTOP then
        colored(""EMERGENCY STOP, toggle lever to reset"", colors.red)
    end -- STATES.UNKNOWN cases handled above
 
    term.redirect(prev_term)
end
 
local estop_reasons = {}
 
local function update_rules()
    local prev_term = term.redirect(rules_window)
 
    term.clear()
 
    if state ~= STATES.ESTOP then
        estop_reasons = {}
    end
 
    for i, rule in ipairs(rules) do
        local ok, text = rule()
        term.setCursorPos(1, i)
        if ok and not estop_reasons[i] then
            colored(""[  OK  ] "", colors.green)
            colored(text, colors.lightGray)
        else
            colored(""[ FAIL ] "", colors.red)
            colored(text, colors.red)
            estop_reasons[i] = true
        end
    end
 
    term.redirect(prev_term)
end


local function update_stats()
    local prev_term = term.redirect(stats_window)
    term.clear()
    term.setCursorPos(1, 1)
 	draw_text(1, 1, ""Engery Producing RF/T: "", colors.yellow, colors.black)
    draw_text(10, 1, math.floor(tonumber(data.reactor_prod) / 2.5) .. "" RF/T"", colors.white, colors.black)
    	-----------Casing Heat---------------------
	draw_text(1, 3, ""Casing Heat: "", colors.yellow, colors.black)
	local maxVal = 5000000000
	local minVal = math.floor(tonumber(data.reactor_temp_casing))
	draw_text(19, 3, minVal.."" C"", colors.white, colors.black)
 
	if minVal < 100000 then
	progress_bar(2, 4, displayW-2, minVal, maxVal, colors.lightBlue, colors.gray)
	elseif minVal < math.floor((1000000000 / 2)/2) then
	progress_bar(2, 4, displayW-2, minVal, maxVal, colors.lime, colors.gray)
	elseif minVal < math.floor(1000000000 / 2) then
	progress_bar(2, 4, displayW-2, minVal, maxVal, colors.yellow, colors.gray)
	elseif minVal >= math.floor(1000000000 / 2) then
	progress_bar(2, 4, displayW-2, minVal, maxVal, colors.red, colors.gray)
	end
	term.setBackgroundColour((colours.black))
    term.redirect(prev_term)
end


------------------------------------------------
 
local function main_loop()
    -- Search for peripherals again if one or both are missing
    if not state or state == STATES.UNKNOWN then
        reactor = peripheral.wrap(""fusionReactorLogicAdapter_0"")
        --turbine = peripheral.find(""turbineValve"")
    end
 
    if not pcall(update_data) then
        -- Error getting data (either reactor or turbine is nil?)
        data = {}
        state = STATES.UNKNOWN
    elseif data.reactor_on == nil then
        -- Reactor is not connected
        state = STATES.UNKNOWN
    --elseif data.turbine_energy == nil then
        -- Turbine is not connected
        --state = STATES.UNKNOWN
    elseif not state then
        -- Program just started, get current state from lever
        state = data.lever_on and STATES.RUNNING or STATES.READY
    elseif state == STATES.READY and data.lever_on then
        -- READY -> RUNNING
        state = STATES.RUNNING
        -- Activate reactor
        pcall(reactor.activate)
        data.reactor_on = true
    elseif state == STATES.RUNNING and not data.lever_on then
        -- RUNNING -> READY
        state = STATES.READY
    elseif state == STATES.ESTOP and not data.lever_on then
        -- ESTOP -> READY
        state = STATES.READY
    elseif state == STATES.UNKNOWN then
        -- UNKNOWN -> ESTOP
        state = data.lever_on and STATES.ESTOP or STATES.READY
        estop_reasons = {}
    end
 
    -- Always enter ESTOP if safety rules are not met
    if state ~= STATES.UNKNOWN and not all_rules_met() then
        state = STATES.ESTOP
    end
 
    -- SCRAM reactor if not running
    --[[if state ~= STATES.RUNNING and reactor then
        pcall(reactor.setInjectionRate(0))
    end]]
 
    -- Update info and rules windows
    pcall(update_info)
    pcall(update_rules)
    pcall(update_stats)
 
    sleep() -- Other calls should already yield, this is just in case
    return main_loop()
end
 
term.setPaletteColor(colors.black, 0x000000)
term.setPaletteColor(colors.gray, 0x343434)
term.setPaletteColor(colors.lightGray, 0xababab)
term.setPaletteColor(colors.red, 0xdb2d20)
term.setPaletteColor(colors.green, 0x01a252)
term.setPaletteColor(colors.blue, 0x01a0e4)
 
term.clear()
local width = term.getSize()
info_window = make_section(""INFORMATION"", 1, 1, width, 7)
rules_window = make_section(""SAFETY RULES"", 1, 9, width, 6)
stats_window = make_section(""STATS"", 1, 16, width, 9)
 
parallel.waitForAny(main_loop, function()
    os.pullEventRaw(""terminate"")
end)
 
os.reboot()"
8ZDzwwqN,estaciones / css,maryskins,CSS,Sunday 12th of November 2023 08:56:41 AM CDT,"/* CALENDARIO ESTACIONES X MARY */

/*VARIABLES PARA EDITAR*/
#estaciones{
--fondod: #E6E6E6;
--fondom: #EEEEEE;
--fondol: #F6F6F6;
--borde:#CCCCCC;
  
--acento:#467285;
--acentol:#D7E0E3;
--cmarcador:#AD4848;
  
--txtc:#4D4D4D;
--subtxtc:#B3B3B3;
  
--familytxt:'Poppins';
--sizetxt:12px;
  
}

/*CSS*/
#estaciones {
  background: var(--fondod);
  width: 100%; /*ANCHO TOTAL*/
  height: 725px; /*ALTO TOTAL*/
  margin: 70px auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;
  overflow: hidden;
  align-content: flex-start;
  font-family:var(--familytxt);
  font-size:var(--sizetxt);
  color:var(--txtc);
}

#estaciones #bloqde {
  background: var(--fondom);
  width: 26%;
  height: 725px;
  border-right: 1px solid var(--borde);
  display: flex;
  flex-direction: column;
  align-items: center;
}

#estaciones #bloqde .headbloq {
  border-bottom: 1px solid var(--borde);
  padding: 5%;
  padding-bottom:6%;
  display: flex;
  flex-direction: column;
  font-size: 1.5em;
  color: var(--subtxtc);
  width: 90%;
}

#estaciones #bloqde .headbloq b{
  font-weight:700;
  font-size:2em;
  margin-bottom:-15px;
  color:var(--txtc);
}

#estaciones #bloqde .txtbloq {
  background: var(--fondol);
  border: 1px solid var(--borde);
  padding: 10px;
  width: 80%;
  height: 250px;
  overflow: auto;
  border-radius: 10px;
  margin: 20px;
  text-align: justify;
}

#estaciones #bloqde .listevent{
  width: 85%;
  margin: 0px 20px 20px 20px;

}

#estaciones #bloqde .listevent li {
  list-style: none;
  display: flex;
  align-content: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--borde);
  margin-bottom: 20px;
  font-weight:600;
}

#estaciones #bloqde .listevent li b{
color: var(--cmarcador);
}

#estaciones #calendarbox {
  background: var(--fondom);
  width: 70%;
  margin: 2%;
  border: 1px solid var(--borde);
  height: 500px;
  overflow: hidden;
  border-radius: 10px 10px 0px 0px;
}

#estaciones #calendarbox .calhead {
  position: relative;
  background: var(--fondol);
  border-bottom: 1px solid var(--borde);
  height: 60px;
  display: flex;
  align-items: center;
  overflow: hidden;
  width:100%;
}

#estaciones #calendarbox .calhead b {
  background: var(--fondol);
  color: var(--acento);
  z-index: 2;
  height: 60px;
  display: flex;
  align-items: center;
  padding: 0px 0px 0px 24px;
  width: 250px;
  font-size:2.5em;
  border-right:1px solid var(--borde);
}

#estaciones #calendarbox .calhead span {
  z-index: 2;
  margin-left: 20px;
  margin-right: 10px;
}

#estaciones #calendarbox .calhead i {
  position: absolute;
  z-index: 1;
  right: -10px;
  bottom: -20px;
  font-size: 6em;
  color: var(--acentol);
}

#estaciones #calendarbox ul {
  width: 96%;
  margin: 0px;
  list-style: none;
  padding: 2%;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}

#estaciones #calendarbox ul li {
  background: var(--fondol);
  border: 1px solid var(--borde);
  width: 14%;
  height: 79px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  font-size: 1.5em;
  margin-right:-1px;
  margin-bottom:-1px;
  position:relative;
  overflow:hidden;
}

#estaciones #calendarbox ul .fest{
  color: var(--subtxtc);
}

#estaciones #calendarbox ul .ev{
  cursor:pointer;
  color: var(--cmarcador);
}

#estaciones #calendarbox ul .ev i{
  position:absolute;
 color: var(--subtxtc);
  bottom:-100px;
  left:-10px;
  font-size:2.5em;
  z-index:1;
  opacity:0.5;
  transition:1s;
}

#estaciones #calendarbox ul .ev:hover i{
bottom:-5px;
  transition:1s;
}
#estaciones #calendarbox li b::after {
  content: "" "";
  width: 60px;
  height: 30px;
  display: block;
  position: absolute;
  border-radius: 100%;
  border: 4px solid var(--cmarcador);
  transform: skew(10deg, 10deg);
top: 28%;
  right: 27%;
   z-index:2;
}


#estaciones #eventbox {
  background: var(--fondom);
  width: 70%;
  margin: 0% 2% 2% 2%;
  border: 1px solid var(--borde);
  height: 120px;
  display: flex;
  flex-direction: row;
  align-content: flex-start;
  justify-content: flex-start;
  overflow:hidden;
  position:relative;
}

#estaciones #eventbox .infevent {
  width: 65%;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  flex-wrap: nowrap;
  justify-content: center;
  align-content: flex-end;
  margin: 2%;
  z-index: 2;
}

#estaciones #eventbox .infevent a {
  font-size: 1.5em;
  color: var(--acento);
  font-weight:700;
  text-decoration:none;
  transition:1s;
}

#estaciones #eventbox .infevent a:hover{
  transition:1s;
}

#estaciones #eventbox .infevent  a:before {
    font-weight:700;
  color:transparent;
  margin-right:5px;
    content: ""←"";
  transition:1s;
}

#estaciones #eventbox .infevent  a:hover:before {
  margin-right:30px;
    content: ""←"";
  transition:1s;
  color: var(--acento);
}

#estaciones #eventbox .infevent span {
  overflow: auto;
  width: 90%;
  height: 100px;
  text-align: right;
}

#estaciones #eventbox img {
  width: 370px;
  height: 120px;
  background-position: center;
  background-size: cover;
  border-left: 1px solid var(--borde);
}

#estaciones #eventbox i {
  position: absolute;
  color: var(--acentol);
  font-size: 8em;
  bottom: -15px;
  left: -10px;
  z-index: 1;
}"
YSkVC5ZT,Color de grupo en post de lanzada de dados,NecromancerCoding,jQuery,Sunday 12th of November 2023 08:52:12 AM CDT,"var posts = '#posts';
var post = '.post';
var name = '.phname';
var postBody = '.postbody>.content>div' /*Incluye todos los parents directos del post en cuestión para que el JS no coja lo que no es*/
var diceToss = 'Lanzada de dados' /*En caso de tener el foro en otro idioma, tendrás que modificar esto por el equivalente en tu idioma*/

$(postBody+'>strong:contains(""'+diceToss+'"")').each(function(){
var parent = $(this).parents(post);
var nombre = $(this).prev('strong').text();
var original = $(this).parents(posts).find(name+':contains(""'+nombre+'"")');
if ($(original).find('span[style]').length){
var color = $(original).find('span[style]').attr('style').split(':')[1].split(';')[0];
$(parent).attr('style', '--group:'+color+';');
}
});"
FZ19inYr,CRUD PRODUCTS,jevonrama,PHP,Sunday 12th of November 2023 08:32:24 AM CDT,"<-- templates/products/add -->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Product $product
 * @var \Cake\Collection\CollectionInterface|string[] $categories
 * @var \Cake\Collection\CollectionInterface|string[] $sellers
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('List Products'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""products form content"">
            <?= $this->Form->create($product) ?>
            <fieldset>
                <legend><?= __('Add Product') ?></legend>
                <?php
                    echo $this->Form->control('name');
                    echo $this->Form->control('size');
                    echo $this->Form->control('price');
                    echo $this->Form->control('brand');
                    echo $this->Form->control('description');
                    echo $this->Form->control('status');
                    echo $this->Form->control('photo');
                    echo $this->Form->control('category_id', ['options' => $categories]);
                    echo $this->Form->control('seller_id', ['options' => $sellers]);
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>


<-- templates/products/index -->    
<?php
/**
 * @var \App\View\AppView $this
 * @var iterable<\App\Model\Entity\Product> $products
 */
?>
<div class=""products index content"">
    <?= $this->Html->link(__('New Product'), ['action' => 'add'], ['class' => 'button float-right']) ?>
    <h3><?= __('Products') ?></h3>
    <div class=""table-responsive"">
        <table>
            <thead>
                <tr>
                    <th><?= $this->Paginator->sort('id') ?></th>
                    <th><?= $this->Paginator->sort('name') ?></th>
                    <th><?= $this->Paginator->sort('size') ?></th>
                    <th><?= $this->Paginator->sort('price') ?></th>
                    <th><?= $this->Paginator->sort('status') ?></th>
                    <th><?= $this->Paginator->sort('category_id') ?></th>
                    <th><?= $this->Paginator->sort('seller_id') ?></th>
                    <th class=""actions""><?= __('Actions') ?></th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($products as $product): ?>
                <tr>
                    <td><?= $this->Number->format($product->id) ?></td>
                    <td><?= h($product->name) ?></td>
                    <td><?= h($product->size) ?></td>
                    <td><?= h($product->price) ?></td>
                    <td><?= h($product->status) ?></td>
                    <td><?= $product->has('category') ? $this->Html->link($product->category->name, ['controller' => 'Categories', 'action' => 'view', $product->category->id]) : '' ?></td>
                    <td><?= $product->has('seller') ? $this->Html->link($product->seller->name, ['controller' => 'Sellers', 'action' => 'view', $product->seller->id]) : '' ?></td>
                    <td class=""actions"">
                        <?= $this->Html->link(__('View'), ['action' => 'view', $product->id]) ?>
                        <?= $this->Html->link(__('Edit'), ['action' => 'edit', $product->id]) ?>
                        <?= $this->Form->postLink(__('Delete'), ['action' => 'delete', $product->id], ['confirm' => __('Are you sure you want to delete # {0}?', $product->id)]) ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>
    <div class=""paginator"">
        <ul class=""pagination"">
            <?= $this->Paginator->first('<< ' . __('first')) ?>
            <?= $this->Paginator->prev('< ' . __('previous')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('next') . ' >') ?>
            <?= $this->Paginator->last(__('last') . ' >>') ?>
        </ul>
        <p><?= $this->Paginator->counter(__('Page {{page}} of {{pages}}, showing {{current}} record(s) out of {{count}} total')) ?></p>
    </div>
</div>

<-- templates/products/edit --> 
|<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Product $product
 * @var string[]|\Cake\Collection\CollectionInterface $categories
 * @var string[]|\Cake\Collection\CollectionInterface $sellers
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Form->postLink(
                __('Delete'),
                ['action' => 'delete', $product->id],
                ['confirm' => __('Are you sure you want to delete # {0}?', $product->id), 'class' => 'side-nav-item']
            ) ?>
            <?= $this->Html->link(__('List Products'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""products form content"">
            <?= $this->Form->create($product) ?>
            <fieldset>
                <legend><?= __('Edit Product') ?></legend>
                <?php
                    echo $this->Form->control('name');
                    echo $this->Form->control('size');
                    echo $this->Form->control('price');
                    echo $this->Form->control('brand');
                    echo $this->Form->control('description');
                    echo $this->Form->control('status');
                    echo $this->Form->control('photo');
                    echo $this->Form->control('category_id', ['options' => $categories]);
                    echo $this->Form->control('seller_id', ['options' => $sellers]);
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>
    
    
<-- templates/products/view -->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Product $product
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('Edit Product'), ['action' => 'edit', $product->id], ['class' => 'side-nav-item']) ?>
            <?= $this->Form->postLink(__('Delete Product'), ['action' => 'delete', $product->id], ['confirm' => __('Are you sure you want to delete # {0}?', $product->id), 'class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('List Products'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('New Product'), ['action' => 'add'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""products view content"">
            <h3><?= h($product->name) ?></h3>
            <table>
                <tr>
                    <th><?= __('Name') ?></th>
                    <td><?= h($product->name) ?></td>
                </tr>
                <tr>
                    <th><?= __('Size') ?></th>
                    <td><?= h($product->size) ?></td>
                </tr>
                <tr>
                    <th><?= __('Price') ?></th>
                    <td><?= h($product->price) ?></td>
                </tr>
                <tr>
                    <th><?= __('Status') ?></th>
                    <td><?= h($product->status) ?></td>
                </tr>
                <tr>
                    <th><?= __('Category') ?></th>
                    <td><?= $product->has('category') ? $this->Html->link($product->category->name, ['controller' => 'Categories', 'action' => 'view', $product->category->id]) : '' ?></td>
                </tr>
                <tr>
                    <th><?= __('Seller') ?></th>
                    <td><?= $product->has('seller') ? $this->Html->link($product->seller->name, ['controller' => 'Sellers', 'action' => 'view', $product->seller->id]) : '' ?></td>
                </tr>
                <tr>
                    <th><?= __('Id') ?></th>
                    <td><?= $this->Number->format($product->id) ?></td>
                </tr>
            </table>
            <div class=""text"">
                <strong><?= __('Brand') ?></strong>
                <blockquote>
                    <?= $this->Text->autoParagraph(h($product->brand)); ?>
                </blockquote>
            </div>
            <div class=""text"">
                <strong><?= __('Description') ?></strong>
                <blockquote>
                    <?= $this->Text->autoParagraph(h($product->description)); ?>
                </blockquote>
            </div>
            <div class=""text"">
                <strong><?= __('Photo') ?></strong>
                <blockquote>
                    <?= $this->Text->autoParagraph(h($product->photo)); ?>
                </blockquote>
            </div>
            <div class=""related"">
                <h4><?= __('Related Transactions') ?></h4>
                <?php if (!empty($product->transactions)) : ?>
                <div class=""table-responsive"">
                    <table>
                        <tr>
                            <th><?= __('Id') ?></th>
                            <th><?= __('Date Transaction') ?></th>
                            <th><?= __('Amount Order') ?></th>
                            <th><?= __('Amount Price') ?></th>
                            <th><?= __('User Id') ?></th>
                            <th><?= __('Product Id') ?></th>
                            <th class=""actions""><?= __('Actions') ?></th>
                        </tr>
                        <?php foreach ($product->transactions as $transactions) : ?>
                        <tr>
                            <td><?= h($transactions->id) ?></td>
                            <td><?= h($transactions->date_transaction) ?></td>
                            <td><?= h($transactions->amount_order) ?></td>
                            <td><?= h($transactions->amount_price) ?></td>
                            <td><?= h($transactions->user_id) ?></td>
                            <td><?= h($transactions->product_id) ?></td>
                            <td class=""actions"">
                                <?= $this->Html->link(__('View'), ['controller' => 'Transactions', 'action' => 'view', $transactions->id]) ?>
                                <?= $this->Html->link(__('Edit'), ['controller' => 'Transactions', 'action' => 'edit', $transactions->id]) ?>
                                <?= $this->Form->postLink(__('Delete'), ['controller' => 'Transactions', 'action' => 'delete', $transactions->id], ['confirm' => __('Are you sure you want to delete # {0}?', $transactions->id)]) ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </table>
                </div>
                <?php endif; ?>
            </div>
        </div>
    </div>
</div>
"
n2sQt2h7,News Nov12 23,Newscaster_Ned,Email,Sunday 12th of November 2023 08:26:53 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

M‎o‎r‎n‎i‎n‎ ‎y‎'‎a‎l‎l‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

E‎n‎t‎e‎r‎ ‎N‎o‎w‎!‎ ‎$‎1‎,‎5‎0‎0‎.‎0‎0‎ ‎W‎e‎a‎t‎h‎e‎r‎T‎e‎c‎h‎ ‎G‎i‎f‎t‎ ‎C‎a‎r‎d‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎D‎o‎n‎ ‎J‎r‎.‎,‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎,‎ ‎K‎i‎d‎ ‎R‎o‎c‎k‎,‎ ‎D‎a‎n‎a‎ ‎W‎h‎i‎t‎e‎ ‎G‎e‎t‎ ‎H‎e‎r‎o‎e‎s‎’‎ ‎W‎e‎l‎c‎o‎m‎e‎ ‎a‎t‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎S‎q‎u‎a‎r‎e‎ ‎G‎a‎r‎d‎e‎n‎ ‎f‎o‎r‎ ‎U‎F‎C‎ ‎F‎i‎g‎h‎t‎
N‎E‎W‎ ‎Y‎O‎R‎K‎,‎ ‎N‎E‎W‎ ‎Y‎O‎R‎K‎ ‎-‎ ‎N‎O‎V‎E‎M‎B‎E‎R‎ ‎1‎1‎:‎ ‎F‎o‎r‎m‎e‎r‎ ‎U‎.‎S‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎i‎s‎ ‎s‎e‎e‎n‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎U‎F‎C‎ ‎2‎9‎5‎ ‎e‎v‎e‎n‎t‎ ‎a‎t‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎S‎q‎u‎a‎r‎e‎ ‎G‎a‎r‎d‎e‎n‎ ‎o‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎1‎1‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎C‎h‎r‎i‎s‎ ‎U‎n‎g‎e‎r‎/‎Z‎u‎f‎f‎a‎ ‎L‎L‎C‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
F‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎t‎h‎e‎ ‎l‎e‎a‎d‎i‎n‎g‎ ‎G‎O‎P‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎f‎o‎r‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎i‎n‎ ‎2‎0‎2‎4‎,‎ ‎g‎o‎t‎ ‎a‎ ‎h‎e‎r‎o‎’‎s‎ ‎w‎e‎l‎c‎o‎m‎e‎ ‎a‎l‎o‎n‎g‎s‎i‎d‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎J‎r‎.‎,‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎,‎ ‎K‎i‎d‎ ‎R‎o‎c‎k‎,‎ ‎a‎n‎d‎ ‎D‎a‎n‎a‎ ‎W‎h‎i‎t‎e‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎w‎a‎l‎k‎e‎d‎ ‎i‎n‎t‎o‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎S‎q‎u‎a‎r‎e‎ ‎G‎a‎r‎d‎e‎n‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎ ‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎b‎i‎g‎ ‎U‎F‎C‎ ‎f‎i‎g‎h‎t‎.‎

B‎i‎l‎l‎ ‎G‎a‎t‎e‎s‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎s‎ ‎R‎e‎a‎c‎h‎ ‎C‎o‎m‎b‎i‎n‎e‎d‎ ‎$‎3‎6‎5‎M‎ ‎S‎e‎t‎t‎l‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎E‎p‎s‎t‎e‎i‎n‎ ‎V‎i‎c‎t‎i‎m‎s‎
B‎i‎l‎l‎ ‎G‎a‎t‎e‎s‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎s‎ ‎R‎e‎a‎c‎h‎ ‎C‎o‎m‎b‎i‎n‎e‎d‎ ‎$‎3‎6‎5‎M‎ ‎S‎e‎t‎t‎l‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎E‎p‎s‎t‎e‎i‎n‎ ‎V‎i‎c‎t‎i‎m‎s‎
2‎,‎5‎2‎0‎
R‎a‎m‎a‎s‎w‎a‎m‎y‎ ‎S‎a‎y‎s‎ ‎H‎a‎l‎e‎y‎ ‎'‎W‎a‎s‎ ‎a‎ ‎C‎h‎i‎n‎a‎ ‎S‎t‎o‎o‎g‎e‎,‎'‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎'‎N‎o‎t‎ ‎T‎h‎a‎t‎ ‎D‎i‎f‎f‎e‎r‎e‎n‎t‎
R‎a‎m‎a‎s‎w‎a‎m‎y‎ ‎S‎a‎y‎s‎ ‎H‎a‎l‎e‎y‎ ‎'‎W‎a‎s‎ ‎a‎ ‎C‎h‎i‎n‎a‎ ‎S‎t‎o‎o‎g‎e‎,‎'‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎'‎N‎o‎t‎ ‎T‎h‎a‎t‎ ‎D‎i‎f‎f‎e‎r‎e‎n‎t‎
2‎,‎0‎3‎2‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎A‎l‎i‎n‎a‎ ‎H‎a‎b‎b‎a‎ ‎S‎l‎a‎m‎s‎ ‎N‎Y‎ ‎A‎G‎ ‎f‎o‎r‎ ‎F‎o‎c‎u‎s‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎l‎e‎ ‎N‎Y‎C‎ ‎F‎a‎l‎l‎s‎ ‎A‎p‎a‎r‎t‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎A‎l‎i‎n‎a‎ ‎H‎a‎b‎b‎a‎ ‎S‎l‎a‎m‎s‎ ‎N‎Y‎ ‎A‎G‎ ‎f‎o‎r‎ ‎F‎o‎c‎u‎s‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎l‎e‎ ‎N‎Y‎C‎ ‎F‎a‎l‎l‎s‎ ‎A‎p‎a‎r‎t‎
7‎7‎5‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎D‎e‎m‎o‎n‎s‎t‎r‎a‎t‎o‎r‎s‎ ‎S‎m‎a‎s‎h‎ ‎D‎o‎o‎r‎ ‎a‎t‎ ‎N‎Y‎C‎'‎s‎ ‎G‎r‎a‎n‎d‎ ‎C‎e‎n‎t‎r‎a‎l‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎D‎e‎m‎o‎n‎s‎t‎r‎a‎t‎o‎r‎s‎ ‎S‎m‎a‎s‎h‎ ‎D‎o‎o‎r‎ ‎a‎t‎ ‎N‎Y‎C‎'‎s‎ ‎G‎r‎a‎n‎d‎ ‎C‎e‎n‎t‎r‎a‎l‎
3‎,‎2‎0‎8‎
M‎u‎s‎l‎i‎m‎ ‎D‎e‎m‎s‎ ‎'‎H‎o‎r‎r‎i‎f‎i‎e‎d‎'‎ ‎b‎y‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎H‎a‎l‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎U‎.‎S‎.‎
M‎u‎s‎l‎i‎m‎ ‎D‎e‎m‎s‎ ‎'‎H‎o‎r‎r‎i‎f‎i‎e‎d‎'‎ ‎b‎y‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎H‎a‎l‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎U‎.‎S‎.‎
6‎,‎4‎7‎1‎
A‎F‎P‎
R‎e‎p‎o‎r‎t‎:‎ ‎F‎B‎I‎ ‎A‎g‎e‎n‎t‎s‎ ‎S‎e‎i‎z‎e‎d‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎M‎a‎y‎o‎r‎’‎s‎ ‎C‎e‎l‎l‎ ‎P‎h‎o‎n‎e‎s‎
2‎,‎3‎6‎1‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎P‎u‎s‎h‎e‎s‎ ‎B‎a‎c‎k‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎G‎l‎o‎b‎a‎l‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎:‎ ‎'‎O‎u‎r‎ ‎W‎a‎r‎ ‎I‎s‎ ‎Y‎o‎u‎r‎ ‎W‎a‎r‎'‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎P‎u‎s‎h‎e‎s‎ ‎B‎a‎c‎k‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎G‎l‎o‎b‎a‎l‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎:‎ ‎'‎O‎u‎r‎ ‎W‎a‎r‎ ‎I‎s‎ ‎Y‎o‎u‎r‎ ‎W‎a‎r‎'‎
6‎3‎7‎
B‎i‎d‎e‎n‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎C‎o‎n‎f‎u‎s‎e‎d‎ ‎D‎u‎r‎i‎n‎g‎ ‎V‎e‎t‎e‎r‎a‎n‎s‎ ‎D‎a‎y‎ ‎C‎e‎r‎e‎m‎o‎n‎y‎
1‎,‎9‎7‎7‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎ ‎G‎e‎t‎ ‎H‎e‎r‎o‎’‎s‎ ‎W‎e‎l‎c‎o‎m‎e‎ ‎a‎t‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎S‎q‎u‎a‎r‎e‎ ‎G‎a‎r‎d‎e‎n‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎ ‎G‎e‎t‎ ‎H‎e‎r‎o‎’‎s‎ ‎W‎e‎l‎c‎o‎m‎e‎ ‎a‎t‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎S‎q‎u‎a‎r‎e‎ ‎G‎a‎r‎d‎e‎n‎
3‎,‎4‎3‎8‎
J‎e‎w‎i‎s‎h‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎'‎T‎a‎r‎g‎e‎t‎e‎d‎'‎ ‎b‎y‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎M‎o‎b‎ ‎W‎h‎i‎l‎e‎ ‎L‎e‎a‎v‎i‎n‎g‎ ‎S‎y‎n‎a‎g‎o‎g‎u‎e‎
J‎e‎w‎i‎s‎h‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎'‎T‎a‎r‎g‎e‎t‎e‎d‎'‎ ‎b‎y‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎M‎o‎b‎ ‎W‎h‎i‎l‎e‎ ‎L‎e‎a‎v‎i‎n‎g‎ ‎S‎y‎n‎a‎g‎o‎g‎u‎e‎

G‎r‎o‎i‎d‎f‎o‎r‎m‎e‎ ‎D‎o‎e‎s‎ ‎F‎a‎k‎e‎ ‎F‎a‎c‎e‎b‎o‎o‎k‎ ‎P‎o‎s‎t‎,‎ ‎S‎a‎y‎i‎n‎g‎ ‎S‎o‎m‎e‎o‎n‎e‎ ‎S‎p‎r‎a‎y‎ ‎P‎a‎i‎n‎t‎e‎d‎ ‎""‎R‎a‎c‎i‎a‎l‎ ‎S‎l‎u‎r‎s‎""‎ ‎A‎b‎o‎a‎r‎d‎ ‎N‎a‎v‎y‎ ‎S‎h‎i‎p‎.‎

W‎e‎l‎l‎ ‎h‎e‎ ‎w‎a‎s‎ ‎o‎n‎ ‎a‎ ‎s‎h‎i‎p‎,‎ ‎l‎e‎t‎'‎s‎ ‎j‎u‎s‎t‎ ‎h‎o‎p‎e‎ ‎i‎t‎ ‎t‎u‎r‎n‎s‎ ‎a‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎g‎o‎e‎s‎ ‎t‎o‎ ‎A‎f‎r‎i‎c‎a‎.‎


3‎ ‎S‎h‎e‎b‎o‎o‎n‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎w‎i‎t‎h‎ ‎M‎u‎r‎d‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎B‎o‎d‎y‎ ‎o‎f‎ ‎W‎h‎i‎t‎e‎ ‎B‎i‎t‎c‎h‎ ‎i‎s‎ ‎F‎o‎u‎n‎d‎ ‎i‎n‎ ‎V‎a‎n‎.‎


M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎K‎i‎l‎l‎s‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎ ‎a‎n‎d‎ ‎I‎n‎j‎u‎r‎e‎s‎ ‎H‎e‎r‎ ‎B‎o‎y‎f‎r‎i‎e‎n‎d‎,‎ ‎T‎h‎e‎n‎ ‎R‎u‎n‎s‎ ‎A‎w‎a‎y‎.‎


G‎r‎o‎i‎d‎l‎i‎p‎s‎ ‎K‎i‎l‎l‎s‎ ‎9‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎i‎n‎ ‎L‎a‎m‎b‎e‎r‎t‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎m‎a‎k‎e‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎a‎t‎ ‎b‎l‎a‎c‎k‎s‎ ‎t‎o‎ ‎c‎h‎e‎e‎r‎ ‎m‎e‎ ‎u‎p‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎1‎°‎
/‎5‎5‎°‎
5‎4‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎ ‎|‎ ‎D‎a‎y‎
6‎1‎°‎
5‎4‎%‎
N‎N‎E‎
1‎0‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎w‎i‎t‎h‎ ‎o‎c‎c‎a‎s‎i‎o‎n‎a‎l‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎6‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎2‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎6‎ ‎p‎m‎
S‎u‎n‎ ‎1‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎5‎°‎
9‎5‎%‎
N‎N‎E‎
1‎1‎
 ‎
m‎p‎h‎
P‎e‎r‎i‎o‎d‎s‎ ‎o‎f‎ ‎r‎a‎i‎n‎.‎ ‎L‎o‎w‎ ‎a‎r‎o‎u‎n‎d‎ ‎5‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎1‎0‎0‎%‎.‎ ‎R‎a‎i‎n‎f‎a‎l‎l‎ ‎n‎e‎a‎r‎ ‎a‎ ‎h‎a‎l‎f‎ ‎a‎n‎ ‎i‎n‎c‎h‎.‎ ‎L‎o‎c‎a‎l‎l‎y‎ ‎h‎e‎a‎v‎y‎ ‎r‎a‎i‎n‎f‎a‎l‎l‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
6‎:‎0‎8‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
5‎:‎0‎7‎ ‎p‎m‎
M‎o‎n‎ ‎1‎3‎
R‎a‎i‎n‎
6‎0‎°‎
/‎5‎4‎°‎
7‎1‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎2‎°‎
1‎8‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎0‎°‎
/‎5‎0‎°‎
8‎%‎
N‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎5‎°‎
8‎%‎
N‎ ‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎7‎°‎
8‎%‎
S‎S‎W‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎8‎°‎
8‎%‎
E‎S‎E‎ ‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎6‎3‎°‎
2‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎3‎°‎
/‎5‎3‎°‎
5‎0‎%‎
W‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎5‎4‎°‎
1‎5‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎4‎°‎
2‎4‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎1‎°‎
2‎4‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎5‎1‎°‎
1‎7‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎5‎
S‎h‎o‎w‎e‎r‎s‎
6‎1‎°‎
/‎4‎9‎°‎
3‎6‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎1‎°‎
/‎4‎8‎°‎
2‎1‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎p‎i‎c‎s‎.‎ ‎👲🏾

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎i‎c‎k‎ ‎F‎u‎e‎n‎t‎e‎s‎
N‎i‎c‎h‎o‎l‎a‎s‎ ‎""‎N‎i‎c‎o‎l‎á‎s‎""‎ ‎J‎o‎s‎e‎p‎h‎ ‎F‎u‎e‎n‎t‎e‎s‎ ‎i‎s‎ ‎a‎n‎ ‎M‎e‎x‎i‎c‎a‎n‎-‎d‎e‎s‎c‎e‎n‎d‎e‎d‎ ‎""‎A‎f‎r‎o‎-‎L‎a‎t‎i‎n‎o‎""‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎ ‎""‎C‎h‎r‎i‎s‎t‎i‎a‎n‎""‎ ‎a‎c‎t‎i‎v‎i‎s‎t‎ ‎w‎h‎o‎ ‎i‎s‎ ‎b‎e‎s‎t‎ ‎k‎n‎o‎w‎n‎ ‎f‎o‎r‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎e‎ ‎h‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎F‎i‎r‎s‎t‎ ‎p‎o‎d‎c‎a‎s‎t‎.‎ ‎H‎e‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎f‎o‎r‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎a‎n‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎s‎h‎o‎w‎,‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎e‎i‎t‎h‎e‎r‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎G‎r‎o‎y‎p‎e‎r‎s‎ ‎o‎r‎ ‎N‎i‎c‎k‎e‎r‎s‎,‎ ‎a‎s‎ ‎h‎i‎s‎ ‎o‎w‎n‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎ ‎a‎r‎m‎y‎,‎ ‎w‎h‎o‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎I‎R‎L‎ ‎b‎r‎i‎g‎a‎d‎e‎ ‎a‎n‎y‎b‎o‎d‎y‎ ‎t‎h‎e‎y‎ ‎d‎i‎s‎a‎g‎r‎e‎e‎ ‎w‎i‎t‎h‎ ‎(‎o‎r‎ ‎m‎o‎r‎e‎ ‎s‎p‎e‎c‎i‎f‎i‎c‎a‎l‎l‎y‎,‎ ‎a‎n‎y‎o‎n‎e‎ ‎N‎i‎c‎k‎ ‎d‎i‎s‎a‎g‎r‎e‎e‎s‎ ‎w‎i‎t‎h‎)‎.‎

H‎e‎ ‎h‎a‎s‎ ‎o‎f‎t‎e‎n‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎s‎u‎b‎j‎e‎c‎t‎ ‎o‎f‎ ‎c‎o‎n‎t‎r‎o‎v‎e‎r‎s‎y‎ ‎a‎m‎o‎n‎g‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎r‎i‎g‎h‎t‎-‎w‎i‎n‎g‎ ‎c‎i‎r‎c‎l‎e‎s‎ ‎d‎u‎e‎ ‎t‎o‎ ‎h‎i‎m‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎l‎y‎ ‎(‎i‎r‎o‎n‎i‎c‎a‎l‎l‎y‎)‎ ‎h‎i‎n‎t‎i‎n‎g‎ ‎a‎t‎ ‎t‎h‎e‎ ‎i‎d‎e‎a‎ ‎o‎f‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎,‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎(‎i‎r‎o‎n‎i‎c‎a‎l‎l‎y‎)‎ ‎l‎i‎k‎i‎n‎g‎ ‎f‎e‎m‎b‎o‎y‎ ‎t‎h‎i‎g‎h‎ ‎p‎i‎c‎s‎ ‎o‎n‎ ‎T‎w‎i‎t‎t‎e‎r‎,‎ ‎(‎i‎r‎o‎n‎i‎c‎a‎l‎l‎y‎)‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎a‎ ‎d‎a‎t‎e‎ ‎w‎i‎t‎h‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎w‎h‎o‎ ‎i‎s‎ ‎k‎n‎o‎w‎n‎ ‎t‎o‎ ‎d‎a‎t‎e‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎,‎ ‎a‎n‎d‎ ‎(‎i‎r‎o‎n‎i‎c‎a‎l‎l‎y‎)‎ ‎h‎a‎v‎i‎n‎g‎ ‎a‎ ‎c‎a‎t‎b‎o‎y‎ ‎c‎h‎a‎t‎ ‎i‎n‎ ‎h‎i‎s‎ ‎n‎o‎w‎-‎d‎e‎l‎e‎t‎e‎d‎ ‎d‎i‎s‎c‎o‎r‎d‎ ‎s‎e‎r‎v‎e‎r‎ ‎(‎d‎i‎d‎ ‎w‎e‎ ‎m‎e‎n‎t‎i‎o‎n‎ ‎i‎t‎ ‎w‎a‎s‎ ‎i‎r‎o‎n‎i‎c‎?‎)‎

D‎u‎r‎i‎n‎g‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎o‎f‎ ‎2‎0‎1‎9‎,‎ ‎F‎u‎e‎n‎t‎e‎s‎ ‎t‎r‎i‎e‎d‎ ‎(‎a‎n‎d‎ ‎f‎a‎i‎l‎e‎d‎)‎ ‎t‎o‎ ‎o‎r‎g‎a‎n‎i‎z‎e‎ ‎h‎i‎s‎ ‎r‎a‎l‎l‎i‎e‎s‎ ‎o‎f‎ ‎a‎u‎t‎i‎s‎t‎s‎ ‎i‎n‎t‎o‎ ‎w‎h‎a‎t‎ ‎h‎e‎ ‎c‎a‎l‎l‎e‎d‎ ‎""‎t‎h‎e‎ ‎g‎r‎o‎y‎p‎e‎r‎ ‎w‎a‎r‎s‎""‎,‎ ‎w‎h‎i‎c‎h‎ ‎j‎u‎s‎t‎ ‎c‎o‎n‎s‎i‎s‎t‎e‎d‎ ‎o‎f‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎h‎i‎s‎ ‎f‎o‎l‎l‎o‎w‎e‎r‎s‎ ‎t‎o‎ ‎s‎h‎i‎t‎ ‎u‎p‎ ‎c‎o‎m‎m‎e‎n‎t‎ ‎s‎e‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎v‎i‎d‎e‎o‎s‎ ‎a‎b‎o‎u‎t‎ ‎(‎(‎(‎C‎h‎a‎r‎l‎i‎e‎ ‎K‎i‎r‎k‎)‎)‎)‎ ‎a‎n‎d‎ ‎(‎(‎(‎B‎e‎n‎ ‎S‎h‎a‎p‎i‎r‎o‎)‎)‎)‎.‎ ‎A‎c‎t‎i‎v‎i‎s‎m‎,‎ ‎a‎m‎i‎r‎i‎t‎e‎?‎ ‎H‎e‎ ‎a‎l‎s‎o‎ ‎g‎o‎t‎ ‎B‎e‎n‎ ‎t‎o‎ ‎r‎e‎a‎d‎ ‎o‎u‎t‎ ‎t‎h‎a‎t‎ ‎o‎n‎e‎ ‎i‎n‎n‎o‎c‎e‎n‎t‎ ‎c‎o‎o‎k‎i‎e‎-‎r‎e‎l‎a‎t‎e‎d‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎ ‎a‎s‎ ‎a‎ ‎v‎e‎r‎y‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎a‎n‎d‎ ‎f‎u‎n‎n‎y‎ ‎j‎o‎k‎e‎.‎


(‎(‎ ‎T‎H‎E‎ ‎G‎R‎O‎Y‎P‎E‎R‎ ‎K‎I‎N‎G‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎W‎i‎l‎l‎i‎a‎m‎ ‎C‎r‎o‎o‎k‎s‎ ‎i‎s‎ ‎a‎ ‎4‎-‎4‎-‎0‎ ‎s‎t‎e‎a‎m‎ ‎l‎o‎c‎o‎m‎o‎t‎i‎v‎e‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎l‎o‎c‎o‎m‎o‎t‎i‎v‎e‎ ‎t‎o‎ ‎o‎p‎e‎r‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎s‎t‎a‎t‎e‎ ‎o‎f‎ ‎M‎i‎n‎n‎e‎s‎o‎t‎a‎,‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎i‎n‎ ‎1‎8‎6‎1‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎n‎a‎m‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎W‎i‎l‎l‎i‎a‎m‎ ‎C‎r‎o‎o‎k‎s‎,‎ ‎t‎h‎e‎ ‎c‎h‎i‎e‎f‎ ‎m‎e‎c‎h‎a‎n‎i‎c‎a‎l‎ ‎e‎n‎g‎i‎n‎e‎e‎r‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎S‎t‎.‎ ‎P‎a‎u‎l‎ ‎a‎n‎d‎ ‎P‎a‎c‎i‎f‎i‎c‎ ‎R‎a‎i‎l‎r‎o‎a‎d‎,‎ ‎w‎h‎o‎ ‎e‎a‎r‎l‎i‎e‎r‎ ‎s‎e‎r‎v‎e‎d‎ ‎a‎s‎ ‎a‎ ‎c‎o‎l‎o‎n‎e‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎6‎t‎h‎ ‎M‎i‎n‎n‎e‎s‎o‎t‎a‎ ‎V‎o‎l‎u‎n‎t‎e‎e‎r‎ ‎I‎n‎f‎a‎n‎t‎r‎y‎ ‎R‎e‎g‎i‎m‎e‎n‎t‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎i‎v‎i‎l‎ ‎W‎a‎r‎.‎ ‎C‎r‎o‎o‎k‎s‎ ‎l‎a‎i‎d‎ ‎o‎u‎t‎ ‎t‎h‎e‎ ‎i‎n‎i‎t‎i‎a‎l‎ ‎t‎e‎n‎-‎m‎i‎l‎e‎ ‎t‎r‎a‎c‎k‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎M‎i‎n‎n‎e‎a‎p‎o‎l‎i‎s‎ ‎a‎n‎d‎ ‎S‎t‎.‎ ‎P‎a‎u‎l‎ ‎o‎n‎ ‎w‎h‎i‎c‎h‎ ‎t‎h‎e‎ ‎l‎o‎c‎o‎m‎o‎t‎i‎v‎e‎ ‎o‎p‎e‎r‎a‎t‎e‎d‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎r‎e‎t‎i‎r‎e‎d‎ ‎f‎r‎o‎m‎ ‎r‎e‎g‎u‎l‎a‎r‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎i‎n‎ ‎1‎8‎9‎7‎,‎ ‎b‎u‎t‎ ‎o‎p‎e‎r‎a‎t‎e‎d‎ ‎s‎p‎e‎c‎i‎a‎l‎ ‎s‎e‎r‎v‎i‎c‎e‎s‎ ‎f‎o‎r‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎d‎e‎c‎a‎d‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎n‎o‎w‎ ‎i‎n‎ ‎t‎h‎e‎ ‎L‎a‎k‎e‎ ‎S‎u‎p‎e‎r‎i‎o‎r‎ ‎R‎a‎i‎l‎r‎o‎a‎d‎ ‎M‎u‎s‎e‎u‎m‎ ‎i‎n‎ ‎D‎u‎l‎u‎t‎h‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎:‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎h‎o‎t‎o‎ ‎C‎o‎m‎p‎a‎n‎y‎,‎ ‎R‎e‎s‎t‎o‎r‎a‎t‎i‎o‎n‎:‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎o‎y‎,‎ ‎g‎o‎y‎s‎.‎ ‎O‎y‎m‎ ‎g‎a‎n‎n‎a‎ ‎t‎r‎o‎y‎ ‎t‎o‎ ‎p‎r‎e‎t‎i‎n‎d‎ ‎o‎y‎'‎m‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎n‎,‎ ‎m‎i‎t‎e‎!‎"
nvB8pqP1,expressionToTree.c,NikolayChukanov,C,Sunday 12th of November 2023 08:25:57 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include ""expressionToTree.h""

Node* expressionToTree(const char* expression, int* index) {
    char token = expression[*index];

    if (token == '(') {
        (*index)++; // Пропускаем '('
        token = expression[*index];

        Node* root = createNode(token);
        (*index)++; // Переходим к следующему токену

        root->left = expressionToTree(expression, index);

        (*index)++; // Пропускаем символ операции
        token = expression[*index];

        root->right = expressionToTree(expression, index);

        (*index)++; // Пропускаем ')'
        return root;
    } else {
        return createNode(token);
    }
}
"
iKT2R2Tn,expressionToTree.h,NikolayChukanov,C,Sunday 12th of November 2023 08:22:38 AM CDT,"#ifndef EXPRESSIONTOTREE_H
#define EXPRESSIONTOTREE_H

#include ""main.h""

Node* expressionToTree(const char* expression, int* index);

#endif
"
PMvJEdKr,Write a C++ program to implement a recursive function to calculate the power of a number.,BojidarDosev,C++,Sunday 12th of November 2023 08:07:19 AM CDT,"#include <iostream>
using namespace std;

int pow(int x, int b) 
{
	if (b == 1 ) 
	{
		return x;
	}
	else if(x == 0 && b == 0)
	{
		return 0;
	}
	else if(b == 0)
	{
		return 1;
	}
	else 
	{
		return x * pow(x, b - 1);
	}
}

int main() {
  
	int x;
	int b;
	cin >> x; cin >> b;
	cout << pow(x,b);
    
}"
jwYvY9qu,"insert a number abc, receive output a+b+c; ( recursion)",BojidarDosev,C++,Sunday 12th of November 2023 08:00:08 AM CDT,"#include <iostream>
using namespace std;

int sum(int x) 
{
	if (x==0)
	{
		return 0;
	}
	else
	{
		return x%10 + sum(x/10);
	}
}

int main() {
  
	int x;
	cin >> x;
	cout << sum(x);
    
}"
eXyNxgdr,rshdrjdrj,gadungw71,PHP,Sunday 12th of November 2023 07:42:00 AM CDT,"https://github.com/apps/assistir-filme-jogos-vorazes
https://github.com/apps/assistir-jogos-vorazes-online
https://github.com/apps/the-hunger-games-assistir-hd
https://github.com/apps/assistir-the-hunger-games-online
https://github.com/apps/2023-the-hunger-games-4k
https://github.com/apps/1080-2023
https://github.com/apps/the-hunger-games-1080p
https://github.com/apps/tw-2023-4k-1080p
https://github.com/apps/the-hunger-games-2023-hd-thai
https://github.com/apps/the-hunger-games-2023-hd-1080p
https://gamma.app/public/SUB-THAI-2023--x8m2vp32lfj6nuu
https://gamma.app/public/-The-Hunger-Games-The-Ballad-of-Songbirds-Snakes-2023-1080-HD-THA-2vudgojay1he78r
https://github.com/apps/th-2023-the-hunger-games-m-thai-hd
https://colab.research.google.com/drive/13ycfNuTKnK7IT1foRKz-2RGz4bzyTqo6
https://groups.google.com/g/the-hunger-games-2023-hd1080/c/5PZquHK0Hdg
https://gamma.app/public/-2023-HD--1080THAI-4omqep0ali6vwyy
https://vk.com/@twblurrayhd-be-my-family2023hd-twhk
https://vk.com/@movphdchinemark-2023-hd1080p
https://groups.google.com/g/tw---2023--4k-1080p/c/KBY3Qp03zbQ
https://colab.research.google.com/drive/1BdbQraPHULIUKtwrJcW4X7h4TNcAfK9I
https://baskadia.com/post/mf4q
https://es.surveymonkey.com/r/3FLHQRW
https://gamma.app/public/1080TW-2023----378qlsjb9hm3e60
https://github.com/apps/2023-hd-hk
https://github.com/apps/2023-1080-uhd
https://es.surveymonkey.com/r/3FQV5JP
https://es.surveymonkey.com/r/D9FXW5T
https://groups.google.com/g/film-fullversion-1080p/c/UdWAs35m0Ls
https://colab.research.google.com/drive/1A8Tgr6xrW_ZswK3Si3F44Xh4Gdu8cwvq
https://baskadia.com/post/mfqh
https://lookerstudio.google.com/reporting/0e1ad497-dfa3-45c7-ade7-3888f8009b45"
U8Egza20,Untitled,DooD13Z,Python,Sunday 12th of November 2023 07:23:32 AM CDT,"import json
import logging
from datetime import timedelta
from datetime import datetime

from django.conf import settings
from django.db.models import Q
from django.utils import timezone
from ticketsmgmt.core.utils import split_list_to_chunks_by_500
from ticketsmgmt.event_scraper.scrapers.ticketmaster.models import (
    TicketMasterScrapeSettings,
)
from ticketsmgmt.event.models import Event
from ticketsmgmt.event.tasks import schedule_spider
# tm_event_paused_
logger = logging.getLogger(""ticketsmgmt.event.tasks"")
every = ""24""
period = ""hours""
now = timezone.now()
events = Event.objects.filter(
    periodic_interval__every=every,
    periodic_interval__period=period,
    is_archived=False,
)
events = events.filter(
    Q(event_date_time__isnull=True) | Q(event_date_time__gte=now)
)
events = events.filter(Q(paused_until__isnull=True) | Q(paused_until__lte=now))
logger.info(f""Starting periodic events scraping for period {every} {period}."")

print(f""EVENTS COUNT BEFORE START: {events.count()}"")

# def save_initial_data(events, filename='initial_data.json'):
#     initial_data = {
#         f'{event.id}': event.last_scrape_history.date_time if event.last_scrape_history else None for event in events
#     }
#     with open(filename, 'w') as file:
#         json.dump(initial_data, file, default=str)


def compare_data_after_run(events):
    start = datetime.now()
    print(f""Before check: {events.count()}"")
    cnt = 0
    failed_event_ids = []
    for event in events:
        try:
            if event.last_scrape_history and event.last_scrape_history.date_time > event.last_scrape_scheduled:
                cnt += 1
            else:
                failed_event_ids.append(event.id)
        except:
            print(f""Error: {event.id}"")

    print(datetime.now() - start)
    print(""DONE"")
    return failed_event_ids


def run_scrapy(events, force_event_details_update=False, is_tasks4=False):
    scheduling_data = []
    scheduling_data_tm = []
    scheduled_events_ids = []
    allowed = []
    n_all = 0
    for event in events:
        if not event.is_scrape_allowed():
            n_all += 1
            continue

        if event.event_scraper.name == ""TicketMaster"":
            allowed.append(event.id)
            scheduling_data_tm.append(
                {
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                    ""discovery_id"": event.tm_discovery_id,
                    ""force_event_details_update"": force_event_details_update,
                }
            )
            if len(allowed) == 1000:
                break
        else:
            scheduling_data.append(
                {
                    ""spider_name"": event.event_scraper.name,
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                }
            )
        scheduled_events_ids.append(event.id)
    print(f""NOT ALLOWED: {n_all}"")
    schedule_chunks = split_list_to_chunks_by_500(scheduling_data_tm, chunk_size=50)
    tm_scrape_settings = TicketMasterScrapeSettings.objects.first()
    events_allowed = Event.objects.filter(id__in=allowed)
    # save_initial_data(events_allowed)
    # Event.objects.filter(id__in=events_allowed).update(
    #     last_scrape_scheduled=timezone.now()
    # )
    events_allowed.update(
        last_scrape_scheduled=timezone.now()
    )
    print(""UPDATED"")
    for chunk in schedule_chunks:
        if chunk:
            scrapyd_server = ""http://192.168.50.38:6800""
            try:

                schedule_spider(
                    scrapyd_server,
                    settings.SCRAPYD_PROJECT,
                    ""TicketMaster"",
                    events=json.dumps(chunk),
                    filter_out_offers_by_name=tm_scrape_settings.filter_out_offers_by_name,
                )
                logger.debug(
                    ""Scheduled bulk of %s TM events, server - %s."",
                    len(chunk),
                    scrapyd_server,
                )
            except Exception as e:
                logger.error(
                    f""Could not schedule TM spider chunk on the server {scrapyd_server}"",
                    exc_info=True,
                )
    return events_allowed

# events_to_check_scrapes = run_scrapy(events)


from django.conf import settings
import redis
redis_client = redis.Redis(host=settings.REDIS_HOST, port=settings.REDIS_PORT)
from pprint import pprint
def check_keys():
    keys = redis_client.keys(""bp_*"")
    dct = {}
    for i in sorted(keys):
        part1, _, part2 = str(i).rpartition('_')
        if part1 in dct:
            dct[part1].append(part2)
        else:
            dct[part1] = []
    # print(dct)
    res = {}
    for i, j in dct.items():
        res[i] = len(set(j))
    pprint(res)



for i in redis_client.keys(""bp_*""):
    redis_client.delete(i)
check_keys()
events_to_check_scrapes = run_scrapy(events)


def recheck_failed_attempts(*args, **kwargs):
    """"""
    Sometimes hourly events (e.g 24hr) fail, therefore are not scraped for a long time.
    Periodically make sure that doesn't happen.
    """"""
    events_to_recheck = []
    for idx, event in enumerate(
        Event.objects.filter(periodic_interval__period=""hours"")
    ):
        # if not event.is_scrape_allowed():
        #     EventScrapeEngine().update_scraper_stop_flag(event)
        #     continue

        if not event.last_scrape_history:
            events_to_recheck.append(event)
            if event.id == 93097:
                print(""DONE"")
                break
        elif event.last_scrape_history.date_time < (
            timezone.now() - timedelta(hours=event.periodic_interval.every + 1)
        ):
            if event.id == 93097:
                print(""DONE"")
                break
            events_to_recheck.append(event)
        # elif (
        #     event.last_scrape_history
        #     and event.last_scrape_history.date_time > event.last_scrape_scheduled
        # ):
        #     events_to_recheck.append(event)
    return events_to_recheck

    run_scrapy(events_to_recheck)"
vcna5h43,Untitled,7wins,Java,Sunday 12th of November 2023 06:58:04 AM CDT,"import javax.swing.*;

import java.util.ArrayList;
import java.util.Arrays;  
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.math.RoundingMode;
import java.text.DecimalFormat;

class Data {
	String Composer;
	String Director;
}
class MovieData extends Data{
	String title;
	String year;
	String genre;
	String rating;
	
}

class MovieCatalog {
	public static void main(String[] args) {
		//array lists
		ArrayList<String[]> scifis = new ArrayList<>();
		ArrayList<String[]> adventures = new ArrayList<>();
		ArrayList<String[]> dramas = new ArrayList<>();
		ArrayList<String[]> wars = new ArrayList<>();
		ArrayList<String[]> romances = new ArrayList<>();
		ArrayList<String[]> thrillers = new ArrayList<>();
		ArrayList<String[]> fantasies = new ArrayList<>();
		
		try {
			File file = new File(""C:\\Users\\Daniel\\Downloads\\MovieListing.txt""); //File
			Scanner sc = new Scanner(file);
			Data data = new Data();
			data.Director = sc.nextLine();
			data.Composer = sc.nextLine();
			int scifiCount = 0;
			int adventureCount = 0;
			int dramaCount = 0;
			int warCount = 0;
			int romanceCount = 0;
			int thrillerCount = 0;
			int fantasyCount = 0;
	        while (sc.hasNextLine()) {
	        	String line = sc.nextLine();
	        	String[] movieinfo = line.split("","");
	        	MovieData movie = new MovieData();
	        	movie.title = movieinfo[0];
	        	movie.year = movieinfo[1];
	        	movie.genre = movieinfo[2];
	        	movie.rating = movieinfo[3];
	        	
	        	switch(movie.genre) {
	        	case ""Sci Fi"":
	        		scifis.add(movieinfo);
	        		
	        		scifiCount++;
	        		break;
	        	case ""Adventure"":
	        		adventures.add(movieinfo);
	        		adventureCount++;
	        		break;
	        	case ""Drama"":
	        		dramas.add(movieinfo);
	        		dramaCount++;
	        		break;
	        	case ""War"":
	        		wars.add(movieinfo);
	        		warCount++;
	        		break;
	        	case ""Romance"":
	        		romances.add(movieinfo);
	        		romanceCount++;
	        		break;
	        	case ""Thriller"":
	        		thrillers.add(movieinfo);
	        		thrillerCount++;
	        		break;
	        	case ""Fantasy"":
	        		fantasies.add(movieinfo);
	        		fantasyCount++;
	        		break;
	        	}
	        	System.out.println(scifis);
	        	
	        }
	        sc.close();
	        String genre = JOptionPane.showInputDialog(null,""Please select the type of genre you would like to display\n(Use the single numerical value beside the genre to select it)\n\n1. Sci-Fi\n2. Adventure\n3. Drama\n4. War\n 5. Romance\n6. Thriller\n7. Fantasy\n0. Exit program"");
			String finalMsg = ""Director: "" + data.Director + ""\nComposer: "" + data.Composer;
	        if(Integer.parseInt(genre) == 1) {
	        	finalMsg = finalMsg + ""\n\nGenre: Sci-Fi"" + ""\n\nMovie Title    Year Released    Rating"";
	        	for(int i = 0; i<scifiCount; i++) {
	        		System.out.println(scifis.get(i));
	        		finalMsg = finalMsg + scifis.get(i)[0];
		         }
				JOptionPane.showMessageDialog(null, finalMsg);
			} else if(Integer.parseInt(genre) == 2) {
				
			} else if(Integer.parseInt(genre) == 3) {
				
			} else if(Integer.parseInt(genre) == 4) {
				
			} else if(Integer.parseInt(genre) == 5) {
				
			} else if(Integer.parseInt(genre) == 6) {
				
			} else if(Integer.parseInt(genre) == 7) {
				
			} else if(Integer.parseInt(genre) == 0) {
				System.exit(0);
			}
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	}"
avjiNp4U,Announcement System Button!,The_Samuelson_Studio,Lua,Sunday 12th of November 2023 06:56:22 AM CDT,"--[CHECK THE NEW VIDEO!]--
-- https://www.youtube.com/shorts/5i4rim9rM5U --

-- TextLabel Text --

<font color=""rgb(90,161,127)""> Open </font> Announcement Panel



-- Local Script --

local button = script.Parent
local frame = script.Parent.Parent:WaitForChild(""MainFrame"")

button.MouseButton1Click:Connect(function()
	if frame.Visible == true then
		frame.Visible = false
		button.Text = [[<font color=""rgb(90,161,127)""> Open </font> Announcement Panel]]
	else
		frame.Visible = true
		button.Text = [[<font color=""rgb(234,67,67)""> Close </font> Announcement Panel]]
	end
end)
"
qdJc7X7P,"""Maximize Your Linux Efficiency: Disk Usage Monitoring Bash Script""",ChrisHaSaar,Bash,Sunday 12th of November 2023 06:55:30 AM CDT,"#!/bin/bash

# Überprüft den Speicherplatz aller montierten Laufwerke
# Gibt eine Warnung aus, wenn die Auslastung 90% überschreitet

# Checks the disk space of all mounted drives
# Issues a warning if the utilization exceeds 90%

for partition in $(df -h | awk '{print $5 "" "" $6}' | grep -v Use% | sed 's/%//g')
do
    usage=$(echo $partition | awk '{print $1}')
    mount_point=$(echo $partition | awk '{print $2}')

    if [ $usage -ge 90 ]; then
        echo ""Warnung: Die Partition '$mount_point' ist zu $usage% voll.""
    fi
done
"
NzmrfTBL,Untitled,hsiuyee,Python,Sunday 12th of November 2023 06:06:54 AM CDT,"#!/usr/bin/env python
""""""@package topo

Network topology creation.

@author Brandon Heller (brandonh@stanford.edu)

This package includes code to represent network topologies.

A Topo object can be a topology database for NOX, can represent a physical
setup for testing, and can even be emulated with the Mininet package.
""""""

from mininet.util import irange, natural, naturalSeq

# pylint: disable=too-many-arguments


class MultiGraph( object ):
    ""Utility class to track nodes and edges - replaces networkx.MultiGraph""

    def __init__( self ):
        self.node = {}
        self.edge = {}

    def add_node( self, node, attr_dict=None, **attrs):
        """"""Add node to graph
           attr_dict: attribute dict (optional)
           attrs: more attributes (optional)
           warning: updates attr_dict with attrs""""""
        attr_dict = {} if attr_dict is None else attr_dict
        attr_dict.update( attrs )
        self.node[ node ] = attr_dict

    def add_edge( self, src, dst, key=None, attr_dict=None, **attrs ):
        """"""Add edge to graph
           key: optional key
           attr_dict: optional attribute dict
           attrs: more attributes
           warning: updates attr_dict with attrs""""""
        attr_dict = {} if attr_dict is None else attr_dict
        attr_dict.update( attrs )
        self.node.setdefault( src, {} )
        self.node.setdefault( dst, {} )
        self.edge.setdefault( src, {} )
        self.edge.setdefault( dst, {} )
        self.edge[ src ].setdefault( dst, {} )
        entry = self.edge[ dst ][ src ] = self.edge[ src ][ dst ]
        # If no key, pick next ordinal number
        if key is None:
            keys = [ k for k in entry.keys() if isinstance( k, int ) ]
            key = max( [ 0 ] + keys ) + 1
        entry[ key ] = attr_dict
        return key

    def nodes( self, data=False):
        """"""Return list of graph nodes
           data: return list of ( node, attrs)""""""
        return self.node.items() if data else self.node.keys()

    def edges_iter( self, data=False, keys=False ):
        ""Iterator: return graph edges, optionally with data and keys""
        for src, entry in self.edge.items():
            for dst, entrykeys in entry.items():
                if src > dst:
                    # Skip duplicate edges
                    continue
                for k, attrs in entrykeys.items():
                    if data:
                        if keys:
                            yield( src, dst, k, attrs )
                        else:
                            yield( src, dst, attrs )
                    else:
                        if keys:
                            yield( src, dst, k )
                        else:
                            yield( src, dst )

    def edges( self, data=False, keys=False ):
        ""Return list of graph edges""
        return list( self.edges_iter( data=data, keys=keys ) )

    def __getitem__( self, node ):
        ""Return link dict for given src node""
        return self.edge[ node ]

    def __len__( self ):
        ""Return the number of nodes""
        return len( self.node )

    def convertTo( self, cls, data=False, keys=False ):
        """"""Convert to a new object of networkx.MultiGraph-like class cls
           data: include node and edge data
           keys: include edge keys as well as edge data""""""
        g = cls()
        g.add_nodes_from( self.nodes( data=data ) )
        g.add_edges_from( self.edges( data=( data or keys ), keys=keys ) )
        return g


class Topo( object ):
    ""Data center network representation for structured multi-trees.""

    def __init__( self, *args, **params ):
        """"""Topo object.
           Optional named parameters:
           hinfo: default host options
           sopts: default switch options
           lopts: default link options
           calls build()""""""
        self.g = MultiGraph()
        self.hopts = params.pop( 'hopts', {} )
        self.sopts = params.pop( 'sopts', {} )
        self.lopts = params.pop( 'lopts', {} )
        # ports[src][dst][sport] is port on dst that connects to src
        self.ports = {}
        self.build( *args, **params )

    def build( self, *args, **params ):
        ""Override this method to build your topology.""
        # Add hosts
        h1 = self.addHost('h1')
        h2 = self.addHost('h2')
        h3 = self.addHost('h3')
        h4 = self.addHost('h4')

        # Add switches
        s1 = self.addSwitch('s1')
        s2 = self.addSwitch('s2')
        s3 = self.addSwitch('s3')
        s4 = self.addSwitch('s4')

        # Connect hosts to switches
        self.addLink(h1, s1)
        self.addLink(h2, s1)
        self.addLink(h3, s2)
        self.addLink(h4, s3)

        # Connect switches
        self.addLink(s1, s2)
        self.addLink(s1, s3)
        self.addLink(s2, s4)
        pass

    def addNode( self, name, **opts ):
        """"""Add Node to graph.
           name: name
           opts: node options
           returns: node name""""""
        self.g.add_node( name, **opts )
        return name

    def addHost( self, name, **opts ):
        """"""Convenience method: Add host to graph.
           name: host name
           opts: host options
           returns: host name""""""
        if not opts and self.hopts:
            opts = self.hopts
        return self.addNode( name, **opts )

    def addSwitch( self, name, **opts ):
        """"""Convenience method: Add switch to graph.
           name: switch name
           opts: switch options
           returns: switch name""""""
        if not opts and self.sopts:
            opts = self.sopts
        result = self.addNode( name, isSwitch=True, **opts )
        return result

    def addLink( self, node1, node2, port1=None, port2=None,
                 key=None, **opts ):
        """"""node1, node2: nodes to link together
           port1, port2: ports (optional)
           opts: link options (optional)
           returns: link info key""""""
        if not opts and self.lopts:
            opts = self.lopts
        port1, port2 = self.addPort( node1, node2, port1, port2 )
        opts = dict( opts )
        opts.update( node1=node1, node2=node2, port1=port1, port2=port2 )
        return self.g.add_edge(node1, node2, key, opts )

    def nodes( self, sort=True ):
        ""Return nodes in graph""
        if sort:
            return self.sorted( self.g.nodes() )
        else:
            return self.g.nodes()

    def isSwitch( self, n ):
        ""Returns true if node is a switch.""
        return self.g.node[ n ].get( 'isSwitch', False )

    def switches( self, sort=True ):
        """"""Return switches.
           sort: sort switches alphabetically
           returns: dpids list of dpids""""""
        return [ n for n in self.nodes( sort ) if self.isSwitch( n ) ]

    def hosts( self, sort=True ):
        """"""Return hosts.
           sort: sort hosts alphabetically
           returns: list of hosts""""""
        return [ n for n in self.nodes( sort ) if not self.isSwitch( n ) ]

    def iterLinks( self, withKeys=False, withInfo=False ):
        """"""Return links (iterator)
           withKeys: return link keys
           withInfo: return link info
           returns: list of ( src, dst [,key, info ] )""""""
        for _src, _dst, key, info in self.g.edges_iter( data=True, keys=True ):
            node1, node2 = info[ 'node1' ], info[ 'node2' ]
            if withKeys:
                if withInfo:
                    yield( node1, node2, key, info )
                else:
                    yield( node1, node2, key )
            else:
                if withInfo:
                    yield( node1, node2, info )
                else:
                    yield( node1, node2 )

    def links( self, sort=False, withKeys=False, withInfo=False ):
        """"""Return links
           sort: sort links alphabetically, preserving (src, dst) order
           withKeys: return link keys
           withInfo: return link info
           returns: list of ( src, dst [,key, info ] )""""""
        links = list( self.iterLinks( withKeys, withInfo ) )
        if not sort:
            return links
        # Ignore info when sorting
        tupleSize = 3 if withKeys else 2
        return sorted( links, key=( lambda l: naturalSeq( l[ :tupleSize ] ) ) )

    # This legacy port management mechanism is clunky and will probably
    # be removed at some point.

    def addPort( self, src, dst, sport=None, dport=None ):
        """"""Generate port mapping for new edge.
            src: source switch name
            dst: destination switch name""""""
        # Initialize if necessary
        ports = self.ports
        ports.setdefault( src, {} )
        ports.setdefault( dst, {} )
        # New port: number of outlinks + base
        if sport is None:
            src_base = 1 if self.isSwitch( src ) else 0
            sport = len( ports[ src ] ) + src_base
        if dport is None:
            dst_base = 1 if self.isSwitch( dst ) else 0
            dport = len( ports[ dst ] ) + dst_base
        ports[ src ][ sport ] = ( dst, dport )
        ports[ dst ][ dport ] = ( src, sport )
        return sport, dport

    def port( self, src, dst ):
        """"""Get port numbers.
            src: source switch name
            dst: destination switch name
            sport: optional source port (otherwise use lowest src port)
            returns: tuple (sport, dport), where
                sport = port on source switch leading to the destination switch
                dport = port on destination switch leading to the source switch
            Note that you can also look up ports using linkInfo()""""""
        # A bit ugly and slow vs. single-link implementation ;-(
        ports = [ ( sport, entry[ 1 ] )
                  for sport, entry in self.ports[ src ].items()
                  if entry[ 0 ] == dst ]
        return ports if len( ports ) != 1 else ports[ 0 ]

    def _linkEntry( self, src, dst, key=None ):
        ""Helper function: return link entry and key""
        entry = self.g[ src ][ dst ]
        if key is None:
            key = min( entry )
        return entry, key

    def linkInfo( self, src, dst, key=None ):
        ""Return link metadata dict""
        entry, key = self._linkEntry( src, dst, key )
        return entry[ key ]

    def setlinkInfo( self, src, dst, info, key=None ):
        ""Set link metadata dict""
        entry, key = self._linkEntry( src, dst, key )
        entry[ key ] = info

    def nodeInfo( self, name ):
        ""Return metadata (dict) for node""
        return self.g.node[ name ]

    def setNodeInfo( self, name, info ):
        ""Set metadata (dict) for node""
        self.g.node[ name ] = info

    def convertTo( self, cls, data=True, keys=True ):
        """"""Convert to a new object of networkx.MultiGraph-like class cls
           data: include node and edge data (default True)
           keys: include edge keys as well as edge data (default True)""""""
        return self.g.convertTo( cls, data=data, keys=keys )

    @staticmethod
    def sorted( items ):
        ""Items sorted in natural (i.e. alphabetical) order""
        return sorted( items, key=natural )


# Our idiom defines additional parameters in build(param...)
# pylint: disable=arguments-differ

class SingleSwitchTopo( Topo ):
    ""Single switch connected to k hosts.""

    def build( self, k=2, **_opts ):
        ""k: number of hosts""
        self.k = k
        switch = self.addSwitch( 's1' )
        for h in irange( 1, k ):
            host = self.addHost( 'h%s' % h )
            self.addLink( host, switch )


class SingleSwitchReversedTopo( Topo ):
    """"""Single switch connected to k hosts, with reversed ports.
       The lowest-numbered host is connected to the highest-numbered port.
       Useful to verify that Mininet properly handles custom port
       numberings.""""""

    def build( self, k=2 ):
        ""k: number of hosts""
        self.k = k
        switch = self.addSwitch( 's1' )
        for h in irange( 1, k ):
            host = self.addHost( 'h%s' % h )
            self.addLink( host, switch,
                          port1=0, port2=( k - h + 1 ) )


class MinimalTopo( SingleSwitchTopo ):
    ""Minimal topology with two hosts and one switch""
    def build( self ):
        return SingleSwitchTopo.build( self, k=2 )

class LinearTopo( Topo ):
    ""Linear topology of k switches, with n hosts per switch.""

    def build( self, k=2, n=1, **_opts):
        """"""k: number of switches
           n: number of hosts per switch""""""
        self.k = k
        self.n = n

        if n == 1:
            def genHostName( i, _j ):
                return 'h%s' % i
        else:
            def genHostName( i, j ):
                return 'h%ss%d' % ( j, i )

        lastSwitch = None
        for i in irange( 1, k ):
            # Add switch
            switch = self.addSwitch( 's%s' % i )
            # Add hosts to switch
            for j in irange( 1, n ):
                host = self.addHost( genHostName( i, j ) )
                self.addLink( host, switch )
            # Connect switch to previous
            if lastSwitch:
                self.addLink( switch, lastSwitch )
            lastSwitch = switch
            
'''
# pylint: enable=arguments-differ
##### iperf #####
print(""hello world"")
h1 = net.get(""h1"")
h2 = net.get(""h2"")

# Use tcpdump to record packet in background
print(""start to record trace in h2"")
h2.cmd(""tcpdump -w ../oyt/h2_output.pcap &"")

# Create flow via iperf
print(""create flow via iperf"")

# TCP flow
h2.cmd(""iperf -s -i 1 -t 5 -p 7777 ? ../out/reslut_s.txt &"")
h1.cmd(""iperf -c "" + str(h2.IP()) + "" -i 1 -t 5 -p 7777 ? ../out/reslut_c.txt &"")
'''


"
86HBbZdT,Data Quality service,boolit,Python,Sunday 12th of November 2023 06:06:00 AM CDT,"from itertools import combinations
import warnings

from more_itertools import consecutive_groups
import pandas as pd
import numpy as np

warnings.simplefilter(action='ignore', category=FutureWarning)


class DataQualityAssessmentService():
    def __init__(self, well_log_file_path: str, num_point_to_be_short: int = 100, norm_step: float = 0.1, allowable_constant_points: int = 50, corr_mnems_coef: float = 1):
        """""" read dictionary of mnemonics """"""
        with open(""dict_mnemonics_units_v2_lith_wl_strata_full.txt"", ""r"") as fp:
            self.dict_mnemonics_units = json.load(fp)
    
        """""" read list of strange nan """"""
        with open(""strange_nans.json"", ""r"") as fp:
            self.strange_nans = json.load(fp)
            
        """"""  read dict of value ranges for each mnem """""" 
        with open(""mnemonic_min_max_value_range.json"", ""r"", encoding = 'utf-8') as fp:#_lith_wl_strata_full
            self.dict_value_ranges = json.load(fp)  
        
        self.constant_mnemonics = []
        for mnemonic in self.dict_mnemonics_units.keys():
            if self.dict_mnemonics_units[mnemonic]['constant_mnemonic']:
                self.constant_mnemonics += self.dict_mnemonics_units[mnemonic]['possible_mnemonics']
        
        """""" read las file """"""
        self.las  = lasio.read(well_log_file_path)
        mnemonics = [i.lower() for i in self.las.keys()]
        df_logs = pd.DataFrame(self.las.data, columns = mnemonics)
        self.df = df_logs
        
        """""" Criterion name """"""
        self.accept = ''
        self.reject = 'не пройден'
        
        """""" set params for criteria """"""
        self.num_point_to_be_short = num_point_to_be_short #(~10 м при шаге 0.1)
        self.norm_step = norm_step
        self.allowable_constant_points = allowable_constant_points
        self.corr_mnems_coef = corr_mnems_coef
         
    def get_strange_nans(self) -> str:
        nan_in_df_list = [nan for nan in self.strange_nans['Nans'] if nan in self.df.values]
        
        df_without_lith_strata = self.df[[i for i in self.df.columns if i not in ['lith', 'strata']]]
        details = ''
        if len(nan_in_df_list) > 0:
            good_nans = sum([df_without_lith_strata[i].isna().sum() for i in df_without_lith_strata.columns])
            strange_nans_found = sum([np.sum(df_without_lith_strata.values == x) for x in nan_in_df_list])

            # Percent of norm nan among all nans
            share_of_strange_values = strange_nans_found / (good_nans + strange_nans_found)
            if strange_nans_found > 0:
                details = 'Найдено ' + str(strange_nans_found) + ' измерен. со значениями из списка: ' + str(nan_in_df_list)
            if share_of_strange_values > 0:
                return self.reject, details
        return self.accept, details

    # Replace strange values
    def replace_strange_nans(self) -> pd.DataFrame:
        nan_in_df_list = [nan for nan in self.strange_nans if nan in self.df.values]

        # If nan values not in dataframe do nothing
        if len(nan_in_df_list) == 0:
            df_return = self.df
        # If nan values in dataframe replace it to nan
        else:
            for tr_ind in nan_in_df_list:
                self.df = self.df.replace(tr_ind, np.nan)
            df_return = self.df.astype('float64')
        return df_return

    # Find empty columns
    def get_empty_columns(self) -> str:
        # Replace strange nan
        df = self.replace_strange_nans()
        # Quality checking
        initial_cols = len(df.columns)
        non_empty_cols = len(df.dropna(how='all', axis=1).columns)
        
        empty_col_mnemonics = [col for col in df.columns if col not in df.dropna(how='all', axis=1).columns]
        details = ''
        if initial_cols != non_empty_cols:
            share_of_empty_cols = (initial_cols - non_empty_cols) / initial_cols
            if share_of_empty_cols > 0:
                details = 'Найдены пустые колонки в списке мнемоник ' + str(empty_col_mnemonics)
                return self.reject
        return self.accept, details

    def get_cols_and_dept_mnem(self) -> tuple:
        cols = list(self.df.columns)
        lower_df_keys = [i.lower() for i in cols]
        dept_mnem = [
            value for value in lower_df_keys
            if value in self.dict_mnemonics_units['DEPT']['possible_mnemonics']
        ][0]
        dept_mnem = self.df.columns[lower_df_keys.index(dept_mnem)]
        return cols, dept_mnem

    # Find gaps in depth in logs (in number of measurements)
    def get_event_data_loss(self) -> str:
        cols, dept_mnem = self.get_cols_and_dept_mnem()
        cols.remove(dept_mnem)

        gaps_point = 0
        point_in_intervals_filled_should_be = 0
        
        dict_details = {}
        for col_name in cols:
            not_null_col_subdf = self.df[self.df[col_name].notnull()]
            last_top_nan_ind = not_null_col_subdf.index[0]
            first_bottom_nan_ind = not_null_col_subdf.index[-1] + 1
            sub_df = self.df[last_top_nan_ind:first_bottom_nan_ind]
            nan_gap_values = len(sub_df[sub_df[col_name].isna()])
            if nan_gap_values > 0:
                dict_details[col_name] = nan_gap_values
            gaps_point += nan_gap_values
            point_in_intervals_filled_should_be += len(sub_df)

        share_of_gap_values = gaps_point / point_in_intervals_filled_should_be
        details = ''
        if share_of_gap_values > 0:
            details = 'Пропущено измерений ' + str(list(dict_details.values())) + ' в списке мнемоник ' + str(list(dict_details.keys())) + ' соответственно'
            return self.reject, details
        return self.accept, details

    # Values are out of ranges, for example, negative values or greater than the maximum, less than the minimum
#     def get_values_out_of_range(self):
#         for col in selfdf.columns:
            
#         self.dict_value_ranges
#         raise NotImplementedError

    # Spikes or sudden changes which are implausible for the domain. (Recognize through gradients and max deviations)
#     def get_value_spikes(self):
#         raise NotImplementedError

    # Non-regular depth step, step more than 10 cm (set this value)
    def get_wrong_depth_step(self) -> str:
        
#         """""" check if there is str in some cols """"""
#         target_col = []
#         for col in self.df.columns:
#             try:
#                 self.df[col].astype(float)
#             except:
#                 target_col.append(col)
                
#         if len(target_col) > 0:

        cols, dept_mnem = self.get_cols_and_dept_mnem()
        error = ''
        try:
            depth_diff = np.diff(list(self.df[dept_mnem]))
        except:
            error = 'Файл содержит строковые значения'
            return 'ошибка', error
        
        greater_steps_list = [i for i in depth_diff if round(i, 2) > self.norm_step]
        percent = round(len(greater_steps_list)/len(self.df[dept_mnem])*100, 3)
        diff_greater_than_step = len(greater_steps_list)
        details = ''
        if diff_greater_than_step > 0:
            details = 'Шаг записи превышает ' + str(self.norm_step) + ' м в ' + str(round(percent, 3)) + ' % измерений и варьируется от ' + str(round(min(greater_steps_list),3)) + ' до ' + str(round(max(greater_steps_list),3)) + ' м'
            return self.reject, details
        return self.accept, details

    # The value is not to the optimal level of detail
#     def get_rounded_measurement_value(self):
#         raise NotImplementedError

    # Small changes which are not in the process but result
    # From inaccurate measurements. (Recognize with low pass filter)
#     def get_signal_noise(self):
#         raise NotImplementedError

    # Func used in data_not_updated personally
#     def get_const_subsequent_in_log_found(self, col: str) -> str:
#         log = np.array(self.df[col])
#         ind_of_const_subsequent_values = list(np.where(log[1:] == log[:-1])[0])
#         iterable = ind_of_const_subsequent_values
#         const_subsequent_values_groups = [list(group) for group in consecutive_groups(iterable)]

#         found_const_intervals = [
#             i for i in const_subsequent_values_groups
#             if len(i) > self.allowable_constant_points
#         ]
#         if len(found_const_intervals) > 0:
#             return 'found'  # , col
#         else:
#             return 'not found'  # , col

    # Find value spikes
    def get_data_not_updated(self):
#         allowable_constant_points = 50  # 5 M
        columns_ = [col for col in self.df.columns if col not in self.constant_mnemonics]
        target_cols = []
        dict_details = []
        for col in columns_:
            log = np.array(self.df[col])
            ind_of_const_subsequent_values = list(np.where(log[1:] == log[:-1])[0])
            iterable = ind_of_const_subsequent_values
            const_subsequent_values_groups = [list(group) for group in consecutive_groups(iterable)]

            found_const_intervals = [
                i for i in const_subsequent_values_groups
                if len(i) > self.allowable_constant_points
            ]
            if len(found_const_intervals) > 0:
                target_cols.append(col)
                dict_details.append([[log[found_const_intervals[i][0]] for i in range(0, len(found_const_intervals))], [len(found_const_intervals[i]) for i in range(0, len(found_const_intervals))]])

        details = ''
        if len(target_cols) > 0:
            details = ''.join(['В ' + str(target_cols[i]) + ' непрерывные постоянные значения из списка ' + str(dict_details[i][0]) + ' с кол-ом измерений из списка ' + str(dict_details[i][1]) + ' соответственно. ' for i in range(0,len(target_cols))])
            return self.reject, details
        return self.accept, details

    # Values which are normally correlated behave unexpectedly
#     def get_divergent_despite_correlation(self):
#         raise NotImplementedError

    # Units of measurement are presented
    def get_presence_of_units(self) -> str:
        cols_with_empty_units = [curve.mnemonic.lower() for curve in self.las.curves if curve.unit in ['', ' ']]
        details = ''
        if len(cols_with_empty_units) > 0:
            details = 'Мнемоники без ед.измерения: ' + ', '.join(cols_with_empty_units)
            return self.reject, details
        return self.accept, details

    # Different data formats, e.g. float vs. string etc.
    def get_data_formats(self) -> str:    
        target_col = []
        for col in self.df.columns:
            try:
                self.df[col].astype(float)
            except:
                target_col.append(col)

        details = ''
        if len(target_col) > 0:
            print('reject')
            details = 'В мнемониках из списка ' + str(target_col) + ' присутствуют не числовые (строковые) значения'
            return self.reject, details
        return self.accept, details

    # Duplicated values in columns
    def get_repeated_columns(self) -> str:
        letters = self.df.columns
        pair_of_cols = list(combinations(letters, 2))
        try:
            coffel_list = [np.corrcoef(self.df[list(i)].dropna().values.T)[0][1] for i in pair_of_cols]
            mnems_pairs_correlated = '; '.join(['(' + ', '.join(pair_of_cols[i]) + ')' for i in range(0, len(coffel_list)) if coffel_list[i] >= self.corr_mnems_coef])
            coef_correlated = ', '.join([str(round(i, 2)) for i in coffel_list if i >= self.corr_mnems_coef])
        except:
            error = 'Файл содержит строковые значения'
            return 'ошибка', error

        share_of_pair_with_1_correlation = len([x for x in coffel_list if x >= self.corr_mnems_coef]) / len(coffel_list)

        details = ''
        if share_of_pair_with_1_correlation > 0:
            details = 'Коэф. корреляции пар мнемоник ' + mnems_pairs_correlated + ' превышают или равны значению ' + str(self.corr_mnems_coef) + ' и равны ' + coef_correlated + ' соответственно'
            return self.reject, details
        else:
            return self.accept, details

    # Duplicated mnemonic names
    def get_repeated_mnemonics(self) -> str:
        details = ''
        if len(list(set(self.df.columns))) < len(self.df.columns):
            details = 'Мнемоники из списка ' + ', '.join(set(self.df.columns[np.where(self.df.columns.duplicated())[0]])) + ' повторяются в файле'
            return self.reject, details
        return self.accept, details
    
    # Find value spikes
    def get_short_data_history(self) -> str:  
        cols, dept_mnem = self.get_cols_and_dept_mnem()
        cols.remove(dept_mnem)
        
        colum_with_short_story = []
        for col_name in cols:
            if len(self.df[self.df[col_name].notnull()]) < self.num_point_to_be_short:
                colum_with_short_story.append(col_name)

        details = ''
        if len(colum_with_short_story) > 0:
            details = 'Мнемоники из списка ' + str(colum_with_short_story) + ' имеют короткую историю записи данных, < ' + str(num_point_to_be_short) + ' последовательных измерен.'
            return self.reject, details
        return self.accept, details
    
    def get_lithology_number(self) -> str:  
        details = ''
        lith_mnem_in_df = [i for i in self.df.columns if i in self.dict_mnemonics_units['LITH']['possible_mnemonics']]
        if len(lith_mnem_in_df) > 0:
            if False in list(set(self.df[lith_mnem_in_df[0]].dropna() % 1  == 0)):
                details = 'Код литологии не целочисленный для мнемоники ' + str(lith_mnem_in_df[0])
                return self.reject, details
        return self.accept, details
            
#         if self.df['lith']
#         cols, dept_mnem = self.get_cols_and_dept_mnem()
#         cols.remove(dept_mnem)
        
#         colum_with_short_story = []
#         for col_name in cols:
#             if len(self.df[self.df[col_name].notnull()]) < self.num_point_to_be_short:
#                 colum_with_short_story.append(col_name)

#         details = ''
#         if len(colum_with_short_story) > 0:
#             details = 'Мнемоники из списка ' + str(colum_with_short_story) + ' имеют короткую историю записи данных, < ' + str(num_point_to_be_short) + ' последовательных измерен.'
#             return self.reject, details
#         return self.accept, details

    # The level of noise changes over time/depth
#     def get_inconsistent_noise_level(self):
#         raise NotImplementedError

    # There are subpopulations that have different variabilities from others. (Detect via Goldfeld-Quandt test)
#     def get_heteroscedasticity(self):
#         raise NotImplementedError

#     def get_extremum_depths(self) -> tuple:
#         _, dept_mnem = self.get_cols_and_dept_mnem()
#         df = self.df.dropna(how='all')
#         min_depth, max_depth = min(df[dept_mnem]), max(df[dept_mnem])
#         return min_depth, max_depth

    def estimate_data_quality(self):
#         in_development = 'in_development'
        answer_get_strange_nans, details_get_strange_nans = self.get_strange_nans()
        answer_get_empty_columns, details_get_empty_columns = self.get_empty_columns()
        answer_event_data_loss, details_event_data_loss = self.get_event_data_loss()
        answer_wrong_depth_step, details_wrong_depth_step = self.get_wrong_depth_step()
        answer_data_not_updated, details_data_not_updated = self.get_data_not_updated()
        answer_presence_of_units, details_presence_of_units = self.get_presence_of_units()
        answer_data_formats, details_data_formats = self.get_data_formats()
        answer_repeated_columns, details_repeated_columns = self.get_repeated_columns()
        answer_repeated_mnemonics, details_repeated_mnemonics = self.get_repeated_mnemonics()
        answer_short_data_history, details_short_data_history = self.get_short_data_history()
        answer_lithology_number, details_lithology_number = self.get_lithology_number()
        return {
            'data_formats': [
                answer_data_formats, 
                'Data Formats',
                'Данные в численном формате',
                'Different data formats, e.g. float vs. string etc.',
                'Наличие неприемлемых форматов данных, например, строк',
                details_data_formats,
            ],
            'strange_nans': [
                answer_get_strange_nans,
                'Strange NaNs',
                'Странные пустые значения',
                ""For example, '9999', ' - 999.25', ..."",
                ""Например, '9999', '-999.25', ..."",
                details_get_strange_nans,
            ],
            'empty_columns': [
                answer_get_empty_columns,
                'Empty Columns',
                'Пустые колонки',
                'There are empty columns',
                'Наличие хотя бы одной пустой колонки в файле ГИС',
                details_get_empty_columns, 
            ],
            'event_data_loss': [
                answer_event_data_loss,
                'Event Data Loss',
                'Пропуски в данных ',
                'There  are  gaps in  the  event data/depths',
                'Наличие пропусков в данных по глубине',
                details_event_data_loss,
            ],
#             'values_out_of_range': [
#                 in_development,
#                 'Values out of Range',
#                 'Значения вне физ. диапазона',
#                 'Values   are out of ranges, for example, negative values '
#                 'or greater than the maximum, less than the minimum',
#                 'Значения выходят за пределы диапазона, например, отрицательные '
#                 'значения или больше макс., меньше мин. допустимого значения',
#             ],
#             'value_spikes': [
#                 in_development,
#                 'Value Spikes',
#                 'Всплеск значений',
#                 'Spikes or  sudden changes which are implausible for '
#                 'the domain (recognize  through  gradients and max deviations)',
#                 'Всплески или внезапные изменения, неправдоподобные для записей '
#                 'ГИС (распознавание по градиентам и максимальным отклонениям)',
#             ],
            'wrong_depth_step': [
                answer_wrong_depth_step,
                'Wrong Depth Step',
                'Нарушение шага глубины',
                'Non regular depth step, step more than ' + str(self.norm_step) + ' м (set this value)',
                'Неравномерный шаг глубины, шаг более ' + str(self.norm_step) + ' м (задайте это значение)',
                details_wrong_depth_step,
            ],
#             'rounded_measurement_value': [
#                 in_development,
#                 'Rounded Measurement Value',
#                 'Округленное значение ',
#                 'The  value is not to  the  optimal  level of detail',
#                 'Значение не соответствует оптимальному уровню детализации',
#             ],
#             'signal_noise': [
#                 in_development,
#                 'Signal Noise',
#                 'Шумное локальное измерение',
#                 'Small  changes  which are not in the process but result '
#                 'from inaccurate  measurements (recognize  with low pass filter)',
#                 'Небольшие изменения, которые не происходят в процессе, но являются '
#                 'результатом неточные измерения. (Распознать с помощью фильтра нижних частот)',
#             ],
            'data_not_updated': [
                answer_data_not_updated,
                'Data Not Updated',
                'Отсутствие обновления данных',
                'Data  is  not  up-to-date (sensors  might still  display  old  values)',
                'Данные не обновляются (датчики могут отображать старые/предыдущие значения)',
                details_data_not_updated,
            ],
#             'divergent_despite_correlation': [
#                 in_development,
#                 'Divergent Despite Correlation',
#                 'Расходящиеся, несмотря на корреляцию',
#                 'Values  which  are  normally  correlated  behave  unexpectedly',
#                 'Значения, которые обычно коррелированы, ведут себя подозрительно',
#             ],
            'presence_of_units': [
                answer_presence_of_units, 
                'Presence of Units',
                'Наличие всех единиц измерений',
                'Units of measurement are presented',
                'Представлены все единицы измерения для мнемоник',
                details_presence_of_units,
            ],
            'repeated_columns': [
                answer_repeated_columns,
                'Repeated Columns',
                'Повторяющиеся столбцы',
                'Duplicated values in columns',
                'Повторяющиеся значения в столбцах',
                 details_repeated_columns,
            ],
            'repeated_mnemonics': [
                answer_repeated_mnemonics,
                'Repeated Mnemonics',
                'Повторяющиеся мнемоники',
                'Duplicated mnemonic names',
                'Повторяющиеся названия мнемоник',
                details_repeated_mnemonics,
            ],
            'short_data_history': [
                answer_short_data_history, 
                'Short Data History',
                'Короткая запись данных',
                'The history of recorded data  is too short for a good  analysis',
                'История записи данных слишком коротка для качественного анализа',
                details_short_data_history,
            ],
             'float_lithology_id': [
                answer_lithology_number, 
                'Non-integer values of lithology indices',
                'Не целочисленные значения индексов литологии',
                'Non-integer values of lithology indices',
                'Не целочисленные значения индексов литологии',
                details_lithology_number,
            ],
#             'inconsistent_noise_level': [
#                 in_development,
#                 'Inconsistent Noise Level',
#                 'Непостоянный уровень шума',
#                 'The level of noise changes over time/depth',
#                 'Уровень шума меняется со временем/глубиной',
#             ],
#             'heteroscedasticity': [
#                 in_development,
#                 'Heteroscedasticity',
#                 'Гетероскедастичность',
#                 'There are subpopulations that have different variabilities '
#                 'from others (detect via Goldfeld-Quandt test)',
#                 'Наличие субпопуляции, отличающейся изменчивостью '
#                 'от другие (тест Гольдфельда-Квандта)',
#             ],
        }


pd.set_option('display.max_colwidth', -1)
first_well = list(las_interpret_staratigraph_pathes['Месторождение 1']['без куста'].keys())[0]
las_path = las_interpret_staratigraph_pathes['Месторождение 1']['без куста'][first_well][0]
data_quality = DataQualityAssessmentService(las_path, num_point_to_be_short = 100, norm_step = 0.1, corr_mnems_coef = 1)
d_q_dict = data_quality.estimate_data_quality()
criteria_name = [d_q_dict[i][2] for i in  d_q_dict.keys()]  
criteria_name_details = []
for ind, i in enumerate(criteria_name):
    criteria_name_details.append(str(ind) + '. ' + i)
    criteria_name_details.append(str(ind) + '. ' + 'Детали')

criteria_well_results = pd.DataFrame([], columns = ['Скважина'] + ['Качество данных, %'] + criteria_name_details)

well_names = las_interpret_staratigraph_pathes['Месторождение 1']['без куста'].keys()
for well in tqdm(well_names):
    las_path = las_interpret_staratigraph_pathes['Месторождение 1']['без куста'][well][0]
    data_quality = DataQualityAssessmentService(las_path, num_point_to_be_short = 100, norm_step = 0.1, corr_mnems_coef = 1)
    d_q_dict = data_quality.estimate_data_quality()
#     print(well, d_q_dict['data_not_updated'])
    criteria_answer = [d_q_dict[i][0] for i in  d_q_dict.keys()]  
    criteria_details = [d_q_dict[i][-1] for i in  d_q_dict.keys()]
#     print('======== ', criteria_details)
    val = []
    for i in range(0, len(criteria_name)):
        val.append(criteria_answer[i])
        val.append(criteria_details[i])

    dict_criteria_well = {}
    for i in range(0, len(val)):
        dict_criteria_well[criteria_name_details[i]] = val[i]
    
#     dict_criteria_well = {criteria_name[i]: criteria_answer[i] for i in range(len(criteria_name))}
    dict_criteria_well['Качество данных, %'] = round(len([i for i in dict_criteria_well.values() if i == ''])/len(dict_criteria_well)*100, 2)
    dict_criteria_well['Скважина'] = well
#     print(well)
#     print(dict_criteria_well)
    criteria_well_results = criteria_well_results.append(dict_criteria_well, ignore_index = True)"
8YQQuTaN,data750,TestGuy1,JSON,Sunday 12th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f78bc886d7726c64fe06740fac6b031a6fa95d7dadd8b216098f9db96205cea64eaa9fcffc9dd7e665120c3c9a6d1ade7c102d2659669abf1dc1f1aa3b91701ce347834a587df63597112b28137c71b76109f1de7f72e79b628655eaac3f165ec244378aea34f8c1c48cc4ce5ab7bab83d4acbfe911ea74ad130f16426890a4c',
  otherdata: [
    '404f29f55bb5307cbc51ddb1f4d6d283',
    'cf215483a7e4e56a002cd3ef4100d76d',
    '42ca5566a0d891d3d559cf97258bbec6',
    'a84d47a1e5c079fab2ce04070131c063',
    '8b0526faefd4037565312e548c5781da',
    '26f4009b39ee2077e6c75029dd062582',
    '63064900d7e690f832cdbca615d14cc3',
    'ed17c5de6dd85f6813be3dc42887610c'
  ]
}"
n9htAsZv,"insert a number abc, receive output a+b+c;",BojidarDosev,C++,Sunday 12th of November 2023 05:39:35 AM CDT,"// funtions.cpp.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
int sum(int num) 
{
    int sum = 0;
    int num2 = 0;
    while (num > 0) 
    {
        for (int i = 0; i < num; i++)
        {
            num2 = num % 10;
            sum = sum + num2;
            num = num / 10;
        }
    }
    return sum;
}

int main()
{
    int num;
    cout << ""Enter a number: \n"";
    cin>>num;
    cout<<sum(num);
}

"
vMbwaUPA,Lekcja 9,Akaitori,C#,Sunday 12th of November 2023 04:39:12 AM CDT,"//zadanie rozgrzewkowe
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Rozgrzewka
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnOblicz_Click(object sender, EventArgs e)
        {
            string dzialanie = cbDzialanie.Text;
            float pierwsza = float.Parse(txt1.Text);
            float druga = float.Parse(txt2.Text);
            float wynik = 0;
            switch(dzialanie)
            {
                case ""Dodawanie"":
                    wynik = pierwsza + druga; 
                    break;
                case ""Odejmowanie"":
                    wynik = pierwsza - druga;
                    break;
                case ""Mnożenie"":
                    wynik = pierwsza * druga;
                    break;
                case ""Dzielenie"":
                    wynik = pierwsza / druga;
                    break;
            }
            txtWynik.Text = wynik.ToString();

        }
    }
}


//PĘTLE FOR
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace For
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* przykład składni pętli FOR
             * for (int i = 0; i <= 30; i++)
            {
                Console.WriteLine($""to już {i} metr"");
            }*/

            /*zadanie 1 wersja 1
            Console.WriteLine(""Program wyświetla wszystkie liczby podzielne"" +
                ""przez 17 i mniejsze od 5000"");
            for (int i = 0; i < 5000; i++)
            {
                if (i%17 == 0)
                {
                    Console.WriteLine($""Liczba {i} jest podzielna przez 17."");
                }
            }*/
            /*zadanie 1 wersja 2
            Console.WriteLine(""Program wyświetla wszystkie liczby podzielne"" +
               ""przez 17 i mniejsze od 5000"");
            for (int i = 0; i < 5000; i+=17)
            {
                Console.WriteLine($""Liczba {i} jest podzielna przez 17."");
            }*/
            /*zadanie 2
            Console.WriteLine(""Podaj dodatni wykładnik"");
            int wykladnik = int.Parse(Console.ReadLine());
            if (wykladnik > 0)
            {
                int potega = 1;
                for (int i = 1; i <= wykladnik; i++)
                {
                    potega *= 2;
                    Console.WriteLine($""2 do {i} = {potega}"");
                }
            }*/
            /*pętla zagnieżdżona
            for (int i = 1; i<=5; i++)
            {
                for (int j = 1; j<=5; j++)
                {
                    Console.WriteLine($""i = {i}, j = {j}"");
                }
            }*/
            //zadanie 3
            for (int i = 0; i<=10; i++) 
            {
                Console.Write(i + ""\t"");
                for (int j = 1; j <= 10 ; j++)
                {
                    if (i > 0)
                    {
                        Console.Write(i*j + ""\t"");
                    }
                    else
                    {
                        Console.Write(j + ""\t"");
                    }
                }
                Console.Write(""\n"");
            }
            Console.ReadLine();
        }
    }
}

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Palindrom
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnSprawdz_Click(object sender, EventArgs e)
        {
            // żeby nasz program był niewrażliwy na wielkość znaków (bo k to nie zawsze to samo co K)
            // wszystkie znaki w pobranym słowie zamieniamy na małe litery
            string slowo = txtSlowo.Text.ToLower();
            // zaczynamy od pierwszego znaku o indeksie 0, dlatego int i = 0;
            // pobieramy długość wyrazu i wiedząc, że jeśli np. wyraz ma 5 znaków,
            // ostatni ma indeks 4 i na nim chcemy skończyć, dlatego i < slowo.Length
            for (int i = 0; i < slowo.Length; i++)
            {
                // pobieramy po kolei pierwszy i ostatni znak (itd.)
                // i dla każdej pary sprawdzamy czy to ten sam znak
                // jeśli nie -> wyświetlamy komunikat i przerywamy pętle
                if (slowo[i] != slowo[slowo.Length - 1 - i])
                {
                    lblWynik.Text = $""{slowo} nie jest palindromem"";
                    break;
                }
                // jeśli doszliśmy do ostatniego znaku i pętla nie została przerwana
                // znaczy, że mamy palindrom i wyświetlamy odpowiedni komunikat
                if (i == slowo.Length - 1)
                {
                    lblWynik.Text = $""{slowo} jest palindromem"";
                }
            }
        }
    }
}"
RENxcYXy,Удалялка забаненных юзеров из чата,x7f,JavaScript,Sunday 12th of November 2023 04:02:14 AM CDT,"// Скрипт для браузера под страницу vk.com!

/**
 * 1. Заходим в чат
 * 2. Открываем средства разработчика:
 *   (Ctrl + Shift + I) - Для windows
 *   (Alt + Command + i) - Для Mac
 * 3. Переходим на вкладку Консоль/Console
 * 4. Проверяем, что мы всё ещё находимся в чате
 * 5. Вставляем этот код в открывшуюся вкладку
 * 6. Нажимаем Enter
 * 7. Ждём сообщение ""Закончил""
 * 8. Готово, все собачки удалены
 */

const chat_id = +window.location.search.match(/\d+$/)[0]; // Получаем ID текущего чата из строки браузера
let user_ids = (await vkApi.api(""messages.getConversationMembers"",{peer_id: 2000000000+chat_id,extended:true,fields:[""deactivated""]})).profiles.filter(e=>e.deactivated).map(e=>e.id); // Извлекаем удалённых и забаненных

while (user_ids.length) { // Проходимся по удалённым / забаненным
  vkApi.api(""execute"",{code:
    `var ids = ${JSON.stringify(user_ids.splice(0,25))};
    var chat_id = ${chat_id};
    var i = 0;
    var ix = ids.length;
    while(i<ix){
        API.messages.removeChatUser({user_id:ids[i],chat_id:chat_id});
        i=i+1;
    }
    return ids;`
  }) // Извлекаем по 25 человек из списка и удаляем их из чата
}

console.log(""Закончил"")"
PhuH5QNN,Classic UL TaleOfWoe (by Toshi),Toshiroo,CSS,Sunday 12th of November 2023 04:01:46 AM CDT,"<style>
body {
	background: #FFFFFF;
}
td, #jl {
	font-size: 10px !important;
}
#main {
	background: none;
	margin: 0px !important;
}
#header {
	background: url(""https://i.imgur.com/KYVXUtC.png"");
	background-repeat: no-repeat;
	width: 930px;
	height: 1080px;
}
#header a {
	color: #FDF905 !important;
}
a {
	color: #0000FF !important;
}
.user {
	color: #FFFFFF;
	left: 550px;
	top: 12px;
}
#content {
	width: 760px;
	top: 120px;
	left: 140px;
}
#nst {
	width: 107px;
	left: 11px;
	top: 500px;
}
#css {
	width: 50px;
	left: -100px;
	top: 490px;
}
#css a {
	color: #000000 !important;
}
#advert {
	width: 114px;
	left: -134px;
	top: 414px;
}
#nst, #advert, #css {
	border: 1px solid black !important;
}
#links, #jl {
	top: -79px;
	left: -145px;
}
#userneopets img {
	width: 135px;
	height: 135px;
	border-radius: 25px;
	background: url(""https://i.imgur.com/dmvHLOE.gif"");
	margin: 0px auto -20px;
}
.bx-viewport {
	overflow: visible !important;
}
#bxlist {
	width: 700px !important;
}
#bxlist li {
	margin: 0 -10px 15px 0 !important;
}
#usertrophies {
	width: 720px;
	overflow: hidden;
	margin: auto;
}
#usertrophies table table table table td {
	display: inline-block;
	overflow: hidden;
	width: 78px;
	height: 78px;
}
#usertrophies .medText {
	text-align: center;
}
</style>

<div id=""css""><a href=""/~Toshiroo"">CSS</a> </div>
<div id=""links""> 
<a style=""height:45px"" href=""/reg/page4.phtml""></a>
<a style=""height:50px"" href=""/petcentral.phtml""></a>
<a style=""height:33px"" href=""/explore.phtml""></a>
<a style=""height:35px"" href=""/games.phtml""></a>
<a style=""height:29px"" href=""/neomessages.phtml""></a>
<a style=""height:31px"" href=""/objects.phtml""></a>
<a style=""height:35px"" href=""/neoboards/index.phtml""></a>
<a style=""height:34px"" href=""/nf.phtml""></a>
<a style=""height:36px"" href=""/stuff.phtml""></a>
<a style=""height:33px"" href=""/help.phtml""></a>
<a style=""height:28px"" href=""/login/""></a>
<a style=""height:29px"" href=""/index.phtml""></a>
</div>
<img src=""https://i.imgur.com/bXp1rFE.gif"" id=""advert"">

<style>
#links a {
	width: 130px;
	display: block;
}
#nst, #css {
	line-height: 20px;
	background: #F5F767;
	color: #000000 !important;
}
.contentModuleHeader, .contentModuleHeaderAlt, #template_nav, #ban, #jl, #footer, #userneohome, #ncmall, .eventIcon, #header a img, #userneopets hr, .bx-controls, .bx-clone  {
	display: none !important;
}
.contentModule, .contentModuleTable {
	background: none;
	border: 0px;
}
#main, #header, .user, #content, #nst, #advert, #links, #css{
	position: absolute;
	border: 0px;
}
</style>"
VYc5duqS,Classic UL LostDesert (by Toshi),Toshiroo,CSS,Sunday 12th of November 2023 04:01:24 AM CDT,"<style>
body {
	background: #FFFFFF;
}
td, #jl {
	font-size: 10px !important;
}
#main {
	background: none;
	margin: 0px !important;
}
#header {
	background: url(""https://i.imgur.com/1QQQvHS.png"");
	background-repeat: no-repeat;
	width: 930px;
	height: 1080px;
}
#header a {
	color: #FFFFFF !important;
}
a {
	color: #0000FF !important;
}
.user {
	color: #281919;
	left: 550px;
	top: 13px;
}
#content {
	width: 760px;
	top: 120px;
	left: 140px;
}
#nst {
	width: 107px;
	left: 10px;
	top: 550px;
}
#css {
	width: 50px;
	left: -100px;
	top: 540px;
}
#css a {
	color: #000000 !important;
}
#advert {
	width: 114px;
	left: -134px;
	top: 464px;
}
#nst, #advert, #css {
	border: 1px solid black !important;
}
#links, #jl {
	top: -79px;
	left: -145px;
}
#userneopets img {
	width: 135px;
	height: 135px;
	border-radius: 25px;
	background: url(""https://i.imgur.com/dmvHLOE.gif"");
	margin: 0px auto -20px;
}
.bx-viewport {
	overflow: visible !important;
}
#bxlist {
	width: 700px !important;
}
#bxlist li {
	margin: 0 -10px 15px 0 !important;
}
#usertrophies {
	width: 720px;
	overflow: hidden;
	margin: auto;
}
#usertrophies table table table table td {
	display: inline-block;
	overflow: hidden;
	width: 78px;
	height: 78px;
}
#usertrophies .medText {
	text-align: center;
}
</style>

<div id=""css""><a href=""/~Toshiroo"">CSS</a> </div>
<div id=""links""> 
<a style=""height:45px"" href=""/reg/page4.phtml""></a>
<a style=""height:50px"" href=""/petcentral.phtml""></a>
<a style=""height:33px"" href=""/explore.phtml""></a>
<a style=""height:35px"" href=""/games.phtml""></a>
<a style=""height:29px"" href=""/neomessages.phtml""></a>
<a style=""height:31px"" href=""/objects.phtml""></a>
<a style=""height:35px"" href=""/neoboards/index.phtml""></a>
<a style=""height:34px"" href=""/nf.phtml""></a>
<a style=""height:36px"" href=""/stuff.phtml""></a>
<a style=""height:33px"" href=""/help.phtml""></a>
<a style=""height:28px"" href=""/login/""></a>
<a style=""height:29px"" href=""/index.phtml""></a>
</div>
<img src=""https://i.imgur.com/1Y9zsuC.gif"" id=""advert"">

<style>
#links a {
	width: 130px;
	display: block;
}
#nst, #css {
	line-height: 20px;
	background: #BCA266;
	color: #000000 !important;
}
.contentModuleHeader, .contentModuleHeaderAlt, #template_nav, #ban, #jl, #footer, #userneohome, #ncmall, .eventIcon, #header a img, #userneopets hr, .bx-controls, .bx-clone  {
	display: none !important;
}
.contentModule, .contentModuleTable {
	background: none;
	border: 0px;
}
#main, #header, .user, #content, #nst, #advert, #links, #css{
	position: absolute;
	border: 0px;
}
</style>"
ENA370SC,Classic UL CyodrakesGaze (by Toshi),Toshiroo,CSS,Sunday 12th of November 2023 04:01:01 AM CDT,"<style>
body {
	background: #FFFFFF;
}
td, #jl {
	font-size: 10px !important;
}
#main {
	background: none;
	margin: 0px !important;
}
#header {
	background: url(""https://i.imgur.com/gsyrlMJ.png"");
	background-repeat: no-repeat;
	width: 930px;
	height: 1080px;
}
#header a {
	color: #FFFFFF !important;
}
a {
	color: #0000FF !important;
}
.user {
	color: #281919;
	left: 550px;
	top: 13px;
}
#content {
	width: 760px;
	top: 120px;
	left: 140px;
}
#nst {
	width: 107px;
	left: 10px;
	top: 500px;
}
#css {
	width: 50px;
	left: -100px;
	top: 490px;
}
#css a {
	color: #000000 !important;
}
#advert {
	width: 114px;
	left: -134px;
	top: 414px;
}
#nst, #advert, #css {
	border: 1px solid black !important;
}
#links, #jl {
	top: -79px;
	left: -145px;
}
#userneopets img {
	width: 135px;
	height: 135px;
	border-radius: 25px;
	background: url(""https://i.imgur.com/dmvHLOE.gif"");
	margin: 0px auto -20px;
}
.bx-viewport {
	overflow: visible !important;
}
#bxlist {
	width: 700px !important;
}
#bxlist li {
	margin: 0 -10px 15px 0 !important;
}
#usertrophies {
	width: 720px;
	overflow: hidden;
	margin: auto;
}
#usertrophies table table table table td {
	display: inline-block;
	overflow: hidden;
	width: 78px;
	height: 78px;
}
#usertrophies .medText {
	text-align: center;
}
</style>

<div id=""css""><a href=""/~Toshiroo"">CSS</a> </div>
<div id=""links""> 
<a style=""height:45px"" href=""/reg/page4.phtml""></a>
<a style=""height:50px"" href=""/petcentral.phtml""></a>
<a style=""height:33px"" href=""/explore.phtml""></a>
<a style=""height:35px"" href=""/games.phtml""></a>
<a style=""height:29px"" href=""/neomessages.phtml""></a>
<a style=""height:31px"" href=""/objects.phtml""></a>
<a style=""height:35px"" href=""/neoboards/index.phtml""></a>
<a style=""height:34px"" href=""/nf.phtml""></a>
<a style=""height:36px"" href=""/stuff.phtml""></a>
<a style=""height:33px"" href=""/help.phtml""></a>
<a style=""height:28px"" href=""/login/""></a>
<a style=""height:29px"" href=""/index.phtml""></a>
</div>
<img src=""https://i.imgur.com/bXp1rFE.gif"" id=""advert"">

<style>
#links a {
	width: 130px;
	display: block;
}
#nst, #css {
	line-height: 20px;
	background: #F5F767;
	color: #000000 !important;
}
.contentModuleHeader, .contentModuleHeaderAlt, #template_nav, #ban, #jl, #footer, #userneohome, #ncmall, .eventIcon, #header a img, #userneopets hr, .bx-controls, .bx-clone  {
	display: none !important;
}
.contentModule, .contentModuleTable {
	background: none;
	border: 0px;
}
#main, #header, .user, #content, #nst, #advert, #links, #css{
	position: absolute;
	border: 0px;
}
</style>"
