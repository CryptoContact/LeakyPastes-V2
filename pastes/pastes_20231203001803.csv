id,title,username,language,date,content
mTWuJCvz,2023-12-02_stats.json,rdp_snitch,JSON,Saturday 2nd of December 2023 06:16:05 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 34,
    ""152.32.156.136"": 2,
    ""62.204.61.207"": 2,
    ""81.19.135.47"": 6,
    ""87.251.75.145"": 6,
    ""62.122.184.188"": 6,
    ""198.235.24.36"": 6,
    ""62.204.41.132"": 8,
    ""212.70.149.146"": 2,
    ""87.251.75.64"": 2,
    ""91.92.245.90"": 4,
    ""167.248.133.37"": 2,
    ""212.102.40.36"": 2,
    ""185.170.144.3"": 4,
    ""198.235.24.126"": 6,
    ""95.217.37.212"": 2,
    ""65.109.118.216"": 8,
    ""89.58.60.250"": 4,
    ""45.131.183.49"": 2,
    ""128.14.227.37"": 2,
    ""46.219.77.107"": 4,
    ""179.60.147.5"": 4,
    ""67.217.59.233"": 2,
    ""58.218.204.183"": 6,
    ""36.133.154.221"": 2,
    ""205.210.31.207"": 6,
    ""49.14.144.6"": 2,
    ""45.227.254.9"": 6,
    ""198.235.24.228"": 6,
    ""2.57.149.92"": 2
  },
  ""asn"": {
    ""AS48721"": 34,
    ""AS135377"": 4,
    ""AS34412"": 2,
    ""AS209588"": 10,
    ""AS208091"": 8,
    ""AS57523"": 6,
    ""AS396982"": 24,
    ""AS59425"": 8,
    ""AS204428"": 2,
    ""AS394711"": 4,
    ""AS398324"": 2,
    ""AS60068"": 2,
    ""AS197414"": 4,
    ""AS24940"": 10,
    ""AS197540"": 4,
    ""AS210895"": 2,
    ""AS31148"": 4,
    ""AS19318"": 2,
    ""AS4134"": 6,
    ""AS9808"": 2,
    ""AS45271"": 2,
    ""AS267784"": 6,
    ""AS208312"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 50,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""Xhost Internet Solutions LP"": 12,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Google LLC"": 24,
    ""Horizon LLC"": 8,
    ""SS-Net"": 2,
    ""Limenet"": 4,
    ""Censys, Inc."": 2,
    ""Datacamp Limited"": 2,
    ""Hetzner Online GmbH"": 10,
    ""netcup GmbH"": 4,
    ""Podaon SIA"": 2,
    ""Zenlayer Inc"": 2,
    ""o3 core"": 4,
    ""Interserver, Inc"": 2,
    ""Chinanet"": 6,
    ""China Mobile"": 2,
    ""Idea Cellular Ltd"": 2,
    ""Red Byte LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 34,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Saba Abr Mizban LLC"": 2,
    ""Alviva Holding Limited"": 6,
    ""Xhost Internet Solutions"": 8,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 8,
    ""4Media Ltd"": 2,
    ""Limenet LLC"": 4,
    ""Censys, Inc."": 2,
    ""Cdn77 DAL"": 2,
    ""Xhostis"": 4,
    ""HETZNER-DC"": 2,
    ""Hetzner Online GmbH"": 8,
    ""Netcup Kvm At"": 4,
    ""Unknown"": 6,
    ""UCLOUD"": 2,
    ""Cloud Solutions S.A"": 4,
    ""Host Department NJ, LLC"": 2,
    ""Chinanet JS"": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Idea Cellular Limited"": 2,
    ""UAB Host Baltic"": 6
  },
  ""regionName"": {
    ""Kaunas"": 34,
    ""Maharashtra"": 2,
    ""Tehran"": 2,
    ""Sverdlovsk Oblast"": 6,
    ""North Holland"": 16,
    ""Moscow"": 14,
    ""California"": 24,
    ""Plovdiv"": 2,
    ""Michigan"": 2,
    ""Texas"": 2,
    ""Uusimaa"": 10,
    ""Vienna"": 4,
    ""Mazovia"": 2,
    ""Taipei City"": 2,
    ""Zhytomyr"": 4,
    ""Distrito Federal"": 4,
    ""New Jersey"": 2,
    ""Jiangsu"": 6,
    ""Guangdong"": 2,
    ""Gujarat"": 2,
    ""Vilnius"": 6,
    ""Lesser Poland"": 2
  },
  ""country"": {
    ""Lithuania"": 40,
    ""India"": 4,
    ""Iran"": 2,
    ""Russia"": 20,
    ""The Netherlands"": 16,
    ""United States"": 30,
    ""Bulgaria"": 2,
    ""Finland"": 10,
    ""Austria"": 4,
    ""Poland"": 4,
    ""Taiwan"": 2,
    ""Ukraine"": 4,
    ""Venezuela"": 4,
    ""China"": 8
  },
  ""account"": {
    ""hello"": 60,
    ""Administrator"": 4,
    ""(empty)"": 10,
    ""Domain"": 16,
    ""Administr"": 28,
    ""OozvpzGpq"": 2,
    ""Zvlkyh"": 2,
    ""ucONxj"": 2,
    ""Test"": 8,
    ""YqHRdHXGQ"": 2,
    ""bzhxTi"": 2,
    ""thOeVv"": 2,
    ""nMEJKlIUC"": 2,
    ""lfjERd"": 2,
    ""IkQcZL"": 2,
    ""nUrhKvSlH"": 2,
    ""yUkYiM"": 2,
    ""iRYEEM"": 2
  },
  ""keyboard"": {
    ""Unknown"": 150
  },
  ""client_build"": {
    ""Unknown"": 150
  },
  ""client_name"": {
    ""Unknown"": 150
  },
  ""ip_type"": {
    ""Unknown"": 92,
    ""hosting"": 44,
    ""proxy"": 8,
    ""hosting & proxy"": 2,
    ""mobile"": 4
  }
}"
30Vqbg6M,2023-12-02_stats.json,rdp_snitch,JSON,Saturday 2nd of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 17,
    ""152.32.156.136"": 1,
    ""62.204.61.207"": 1,
    ""81.19.135.47"": 3,
    ""87.251.75.145"": 3,
    ""62.122.184.188"": 3,
    ""198.235.24.36"": 3,
    ""62.204.41.132"": 4,
    ""212.70.149.146"": 1,
    ""87.251.75.64"": 1,
    ""91.92.245.90"": 2,
    ""167.248.133.37"": 1,
    ""212.102.40.36"": 1,
    ""185.170.144.3"": 2,
    ""198.235.24.126"": 3,
    ""95.217.37.212"": 1,
    ""65.109.118.216"": 4,
    ""89.58.60.250"": 2,
    ""45.131.183.49"": 1,
    ""128.14.227.37"": 1,
    ""46.219.77.107"": 2,
    ""179.60.147.5"": 2,
    ""67.217.59.233"": 1,
    ""58.218.204.183"": 3,
    ""36.133.154.221"": 1,
    ""205.210.31.207"": 3,
    ""49.14.144.6"": 1,
    ""45.227.254.9"": 3,
    ""198.235.24.228"": 3,
    ""2.57.149.92"": 1
  },
  ""asn"": {
    ""AS48721"": 17,
    ""AS135377"": 2,
    ""AS34412"": 1,
    ""AS209588"": 5,
    ""AS208091"": 4,
    ""AS57523"": 3,
    ""AS396982"": 12,
    ""AS59425"": 4,
    ""AS204428"": 1,
    ""AS394711"": 2,
    ""AS398324"": 1,
    ""AS60068"": 1,
    ""AS197414"": 2,
    ""AS24940"": 5,
    ""AS197540"": 2,
    ""AS210895"": 1,
    ""AS31148"": 2,
    ""AS19318"": 1,
    ""AS4134"": 3,
    ""AS9808"": 1,
    ""AS45271"": 1,
    ""AS267784"": 3,
    ""AS208312"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 25,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1,
    ""Xhost Internet Solutions LP"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Google LLC"": 12,
    ""Horizon LLC"": 4,
    ""SS-Net"": 1,
    ""Limenet"": 2,
    ""Censys, Inc."": 1,
    ""Datacamp Limited"": 1,
    ""Hetzner Online GmbH"": 5,
    ""netcup GmbH"": 2,
    ""Podaon SIA"": 1,
    ""Zenlayer Inc"": 1,
    ""o3 core"": 2,
    ""Interserver, Inc"": 1,
    ""Chinanet"": 3,
    ""China Mobile"": 1,
    ""Idea Cellular Ltd"": 1,
    ""Red Byte LLC"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 17,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Saba Abr Mizban LLC"": 1,
    ""Alviva Holding Limited"": 3,
    ""Xhost Internet Solutions"": 4,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 4,
    ""4Media Ltd"": 1,
    ""Limenet LLC"": 2,
    ""Censys, Inc."": 1,
    ""Cdn77 DAL"": 1,
    ""Xhostis"": 2,
    ""HETZNER-DC"": 1,
    ""Hetzner Online GmbH"": 4,
    ""Netcup Kvm At"": 2,
    ""Unknown"": 3,
    ""UCLOUD"": 1,
    ""Cloud Solutions S.A"": 2,
    ""Host Department NJ, LLC"": 1,
    ""Chinanet JS"": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Idea Cellular Limited"": 1,
    ""UAB Host Baltic"": 3
  },
  ""regionName"": {
    ""Kaunas"": 17,
    ""Maharashtra"": 1,
    ""Tehran"": 1,
    ""Sverdlovsk Oblast"": 3,
    ""North Holland"": 8,
    ""Moscow"": 7,
    ""California"": 12,
    ""Plovdiv"": 1,
    ""Michigan"": 1,
    ""Texas"": 1,
    ""Uusimaa"": 5,
    ""Vienna"": 2,
    ""Mazovia"": 1,
    ""Taipei City"": 1,
    ""Zhytomyr"": 2,
    ""Distrito Federal"": 2,
    ""New Jersey"": 1,
    ""Jiangsu"": 3,
    ""Guangdong"": 1,
    ""Gujarat"": 1,
    ""Vilnius"": 3,
    ""Lesser Poland"": 1
  },
  ""country"": {
    ""Lithuania"": 20,
    ""India"": 2,
    ""Iran"": 1,
    ""Russia"": 10,
    ""The Netherlands"": 8,
    ""United States"": 15,
    ""Bulgaria"": 1,
    ""Finland"": 5,
    ""Austria"": 2,
    ""Poland"": 2,
    ""Taiwan"": 1,
    ""Ukraine"": 2,
    ""Venezuela"": 2,
    ""China"": 4
  },
  ""account"": {
    ""hello"": 30,
    ""Administrator"": 2,
    ""(empty)"": 5,
    ""Domain"": 8,
    ""Administr"": 14,
    ""OozvpzGpq"": 1,
    ""Zvlkyh"": 1,
    ""ucONxj"": 1,
    ""Test"": 4,
    ""YqHRdHXGQ"": 1,
    ""bzhxTi"": 1,
    ""thOeVv"": 1,
    ""nMEJKlIUC"": 1,
    ""lfjERd"": 1,
    ""IkQcZL"": 1,
    ""nUrhKvSlH"": 1,
    ""yUkYiM"": 1,
    ""iRYEEM"": 1
  },
  ""keyboard"": {
    ""Unknown"": 75
  },
  ""client_build"": {
    ""Unknown"": 75
  },
  ""client_name"": {
    ""Unknown"": 75
  },
  ""ip_type"": {
    ""Unknown"": 46,
    ""hosting"": 22,
    ""proxy"": 4,
    ""hosting & proxy"": 1,
    ""mobile"": 2
  }
}"
3mxhEFdt,My New SaveData STORY GAME (Lobby),Sungmingamerpro13,CSS,Saturday 2nd of December 2023 06:02:49 PM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local AddRoundsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddRounds"")
local AddWinsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddWins"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveExtraLives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")

local VIPGamepassId = 64418164

game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency:GetAsync(player.UserId) or 0
		
		local AddRounds = Instance.new(""NumberValue"", player)
		AddRounds.Name = ""AddRounds""
		AddRounds.Value = AddRoundsDataStore:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency2:GetAsync(player.UserId) or 0
		
		local AddWins = Instance.new(""NumberValue"", player)
		AddWins.Name = ""AddWins""
		AddWins.Value = AddWinsDataStore:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		local previousData2 = SaveExtraLives:GetAsync(player.UserId)
		local Lives

		if previousData2 ~= nil then
			Lives = previousData2
		else
			Lives = 0
			SaveExtraLives:SetAsync(player.UserId, 0)
		end

		local ExtraLivesValue = Instance.new(""NumberValue"", player)
		ExtraLivesValue.Name = ""Lives""
		ExtraLivesValue.Value = Lives

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end
		
		player.Lives.Value = 5
		
        if player.AddRounds.Value >= 1 then
			player.leaderstats.Rounds.Value = player.leaderstats.Rounds.Value + 1
		end
		
		if player.AddWins.Value >= 1 then
			player.leaderstats.Wins.Value = player.leaderstats.Wins.Value + 1
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
		AddRoundsDataStore:SetAsync(player.UserId, player.AddRounds.Value)
		AddWinsDataStore:SetAsync(player.UserId, player.AddWins.Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveExtraLives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Lives.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveExtraLives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local teleportData = TeleportService:GetLocalPlayerTeleportData()

if teleportData then
	local Player = game.Players:GetPlayerByUserId(teleportData.PlayerName)
	Player:WaitForChild(""leaderstats""):WaitForChild(""Wins"").Value = Player.leaderstats.Wins.Value + 1
end
"
0zXLen5G,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 2nd of December 2023 05:48:45 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Playcledypec8:XsRPjR on 212.224.93.130
You can connect via SSH.
Regards"
h7cz8tbx,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 2nd of December 2023 05:20:51 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-342484"
jLYFLwg5,Untitled,fritolito,Winbatch,Saturday 2nd of December 2023 05:03:40 PM CDT,"# Batch windows script to download models from Hugging Face using aria2c (FASTER! than GIT or wget ... supports RESUME! )

This is a batch script that can download files from Hugging Face models using the aria2c command-line tool. It takes a URL which you get by copying the download link of the model as an argument and the script extracts the file name from the URL automatically. It then uses the aria2c tool to download the file to a specified directory with the extracted file name. It also checks the exit code of the aria2c tool and displays a message indicating the success or failure of the download.

## How to use the script

- Download and install the aria2c tool from the [official website] or use the [web search results] I found for you.
- Save the script as a .bat file in the same directory as the aria2c.exe file or modify the script to specify the aria2c executable path.
- Run the script from the command prompt and provide the URL of the file you want to download from Hugging Face models as an argument. 
-without target directory given it will download to the current scripts dir.
For example:

```batch
mydownloader.bat https://huggingface.co/h94/IP-Adapter/resolve/main/sdxl_models/ip-adapter-plus_sdxl_vit-h.safetensors?download g:\models
```
The script will download the file to the download directory and save it with the extracted file name. For example:
D:\ML_MODELS\ip-adapter-plus_sdxl_vit-h.safetensors


CODE to go in the cmd or bat file:
@echo off
rem This script takes a URL as an argument and downloads the file using aria2c
rem Usage: mydownloader.bat https://huggingface.co/h94/IP-Adapter/resolve/main/sdxl_models/ip-adapter-plus_sdxl_vit-h.safetensors?download

rem This will get the last parameter in %last%
for %%a in (%*) do set last=%%a

rem Check if the argument is provided
if ""%1""=="""" (
    echo No URL provided. Please provide a valid URL as an argument.
    exit /b 1
)

rem Extract the file name from the URL
for /f ""tokens=7 delims=/"" %%a in (""%1"") do (
    set file_name=%%a
)
for /f ""tokens=1 delims=?"" %%a in (""%file_name%"") do (
    set file_name=%%a
)

rem Check if the last string contains \
echo %last%|findstr ""\\"" >nul
if errorlevel 1 (
    rem No \ found, set download path as current directory
    set download_dir=%cd%
    echo !
    echo %file_name% will be downloaded to the current directory
) else (
    rem \ found, set download path as last string
    set download_dir=%last%
    echo !
    echo %file_name% will be downloaded to %last%
)


rem Set the aria2c executable path
set aria2c_path=aria2c.exe

rem Download the file using aria2c
%aria2c_path% -c -V -x 10 -d ""%download_dir%"" -o ""%file_name%"" ""%1""

rem Check the exit code of aria2c
if %errorlevel% equ 0 (
    echo Download completed successfully.
) else (
    echo Download failed with error code %errorlevel%.
)
"
kZiT1hvs,Assembler_lab2_sub,VladimirKostovsky,MIX Assembler,Saturday 2nd of December 2023 04:45:24 PM CDT,".386
.MODEL  FLAT, STDCALL
EXTERN  GetStdHandle@4    :	PROC ; Получение дескриптора.
EXTERN  WriteConsoleA@20  :	PROC ; Вывод в консоль.
EXTERN  CharToOemA@8      :	PROC ; Строку в OEM кодировку.
EXTERN  ReadConsoleA@20   :	PROC ; Ввод с консоли.
EXTERN  ExitProcess@4     :	PROC ; Функция выхода из программы.
EXTERN  lstrlenA@4        :   PROC ; Функция определения длины строки.

.DATA	
	STR1 DB ""Введите первое число, а затем второе в шестнадцатеричной системе: "", 10, 0		
	STR2 DB ""Результат разности в десятичной системе: "", 0
	STR_ERR DB ""Ошибка. Нужно не менее 3-х знаков и не слишком большие числа."", 0	
	STR3 DQ "" ""

	DIN		DD ?		      ; Дескриптор ввода, 4 байта.
	DOUT	DD ?		         ; Дескриптор вывода, 4 байта.
	BUF		DB 200 dup (?) ; Буфер для строк длиной 200 байт.
	LENS	DD ?		         ; Для количества выведенных символов.
	FIRST	DD 0
	SECOND	DD 0
	S_16	DD 16
	F_SIGN	DB 0
	S_SIGN	DB 0 

.CODE 
	START proc

	; Перекодировка STR1.
	MOV EAX, OFFSET STR1
	PUSH EAX						
	PUSH EAX
	CALL CharToOemA@8 ;

	; Перекодировка STR2.
	MOV EAX, OFFSET STR2
	PUSH EAX
	PUSH EAX
	CALL CharToOemA@8

	; Перекодировка STR_ERR.
	MOV EAX, OFFSET STR_ERR
	PUSH EAX
	PUSH EAX
	CALL CharToOemA@8

	; Помещаем декриптор ввода в DIN.
	PUSH -10						
	CALL GetStdHandle@4 
	MOV DIN, EAX

	; Помещаем декриптор вывода в DOUT.
	PUSH -11
	CALL GetStdHandle@4
	MOV DOUT, EAX

	; Выводим приглашение для ввода на экран консоли.
	PUSH OFFSET STR1
	CALL lstrlenA@4			; Помещаем в EAX количество символов в строке STR1.
	PUSH 0					; Резервный параметр 
	PUSH OFFSET LENS		; Берет адрес строки для вывода действительно выведенных символов (для длины) 
	PUSH EAX				; Объявление временного буфера (сколько символов)
	PUSH OFFSET STR1		; Берет адрес строки 
	PUSH DOUT				; Указывает на стандартную библиотеку вывода 
	CALL WriteConsoleA@20   ; Вызов функции

	; Ввод первого числа.
	PUSH 0					; Помещаем 5-й аргумент в стек (резерв).
	PUSH OFFSET LENS		; Помещаем 4-й аргумент в стек (адрес переменной для количества символов). 
	PUSH 200				   ; Помещаем 3-й аргумент в стек (максимальное количество символов).
	PUSH OFFSET BUF			; Помещаем 2-й аргумент в стек (адрес начала строки для ввода).
	PUSH DIN				; Помещаем 1-й аргумент в стек (дескриптор ввода).
	CALL ReadConsoleA@20			

	; Перевод из строки в первое число, а также проверка.
	SUB LENS, 2  ; Определяем длину строки без управляющих символов.
    CMP LENS, 3 ; Число должно содержать не меньше 3 знаков.
	JB ERROR
	CMP LENS, 8  ; Число должно содержать не больше 8 знаков.
	JA ERROR
	MOV ECX, LENS 
	MOV ESI, OFFSET BUF
	XOR EBX, EBX
	XOR EAX, EAX

	; Проверяем, отрицательно ли первое число.
	MOV BL, [ESI]						
	CMP BL, '-'
	JNE CONVERT_FIRST	 ; Если не минус, то переход сразу к конвертированию.
	SUB LENS, 1		    ; Если минус, то уменьшить длину строки на 1.
	MOV ECX, LENS 
	MOV F_SIGN, 1	    ; Установить флаг отрицательности на 1 (true).
	INC ESI				 ; Переход на следующий символ строки (цифру).

	CONVERT_FIRST:
		MOV BL, [ESI]
		SUB BL, '0'  ; 0 в ASCII коде = 48 
		CMP BL, 10   ; 
		JA CHECK_16_1	; Если цифра больше 9, нужно проверить на принадлежность [A , ... , E]
		SHL EAX, 4			
		ADD EAX, EBX
		INC ESI
		JMP CONTINUE_1

		CHECK_16_1:
			SUB BL, 7
			CMP BL, 16  ; если цифра больше 15 (больше F).
			JAE ERROR
			CMP BL, 10  ; если цифра меньше 10 (служебные символы).
			JB ERROR
			SHL EAX, 4
			ADD EAX, EBX
			INC ESI

		CONTINUE_1:
	LOOP CONVERT_FIRST

	ADD FIRST, EAX
	JC ERROR

	CMP F_SIGN, 1 ; Если изначально число отрицательное,
	JNE SIGN_NEG_1						
	NEG FIRST	  ; то умножаем его на -1.
	
	SIGN_NEG_1:

	; Ввод второго числа.
	PUSH 0			
	PUSH OFFSET LENS				
	PUSH 200						
	PUSH OFFSET BUF					
	PUSH DIN						
	CALL ReadConsoleA@20		

	; Перевод из строки второго числа и проверки.
	SUB LENS, 2						
	CMP LENS, 3
	JB ERROR
	CMP LENS, 8
	JA ERROR
	MOV ECX, LENS 
	MOV ESI, OFFSET BUF
	XOR EBX, EBX
	XOR EAX, EAX

	; Проверяем отрицательно ли второе число.
	MOV BL, [ESI]						
	CMP BL, '-'
	JNE CONVERT_SECOND ; Если не минус, то переход к конвертации.
	SUB LENS, 1		   ; Если минус, то уменьшить длину строки на 1.
	MOV ECX, LENS 
	MOV S_SIGN, 1	   ; Установить флаг отрицательности на 1 (true).
	INC ESI			   ; Переход на следующий символ строки (цифру).

	CONVERT_SECOND:
		MOV BL, [ESI]
		SUB BL, '0'
		CMP BL, 10
		JA CHECK_16_2	 ; Если цифра больше 9, нужно проверить на принадлежность [A , ... , E]
		SHL EAX, 4
		ADD EAX, EBX
		INC ESI
		JMP CONTINUE_2

		CHECK_16_2:
			SUB BL, 7
			CMP BL, 16   ; Если цифра больше 15 (больше F).
			JAE ERROR
			CMP BL, 10   ; Если цифра меньше 10 (служебный символ).
			JB ERROR
			SHL EAX, 4
			ADD EAX, EBX
			INC ESI

		CONTINUE_2:
	LOOP CONVERT_SECOND

	ADD SECOND, EAX
	JC ERROR

	; Проверяем необходимость смены знака.
	CMP S_SIGN, 1						
	JNE SIGN_NEG_2 
	NEG SECOND

	SIGN_NEG_2:

	
; Вычитание чисел
	MOV S_SIGN, 0	 ; Предположение, что число положительное.
	MOV EAX, SECOND
	SUB FIRST, EAX  ; Вычитание.
	CMP FIRST, 0	 ; Сверка с нулем.
	JGE SUM_0
	MOV S_SIGN, 1   ; Если отрицательное, поменять знак.
	NEG FIRST

	SUM_0:
	; Перевод десятичного числа в строку.
	XOR EBX, EBX
	XOR EAX, EAX
	MOV ESI, OFFSET STR3

	CMP S_SIGN, 0			; Если результат отрицательный, 
	JE SIGN_POS				; то добавить в строку знак '-'.
	MOV AX, 45				; 45 - код знака '-'.
	MOV [ESI], AX
	INC ESI

	SIGN_POS:
		XOR CX,CX			; Количество символов, обнуляется.
		MOV EBX, 10			; Делитель в 16битовый регистр.
		MOV EAX, FIRST		; EDX:EAX <- FIRST.
		XOR EDX, EDX

 
	JMP TO_STRING

	; Выводим результат.
	OUTPUT:
		PUSH OFFSET STR2	
		CALL lstrlenA@4		  
		PUSH 0				  
		PUSH OFFSET LENS	  
		PUSH EAX			  
		PUSH OFFSET STR2	  
		PUSH DOUT			  
		CALL WriteConsoleA@20

		PUSH OFFSET STR3	
		CALL lstrlenA@4
		PUSH 0
		PUSH OFFSET LENS
		PUSH EAX  
		PUSH OFFSET STR3
		PUSH DOUT
		CALL WriteConsoleA@20

		PUSH 0
		CALL ExitProcess@4 ; Выход

	; В случае ошибки.
	ERROR:
		PUSH OFFSET STR_ERR
		CALL lstrlenA@4
		PUSH 0
		PUSH OFFSET LENS
		PUSH EAX
		PUSH OFFSET STR_ERR
		PUSH DOUT
		CALL WriteConsoleA@20

		PUSH 0
		CALL ExitProcess@4 ; выход

	START ENDP
	END START
"
dJyewU8Q,Untitled,KallazZ,Java,Saturday 2nd of December 2023 04:18:01 PM CDT,"// My file

package eu.jpereira.trainings.designpatterns.structural.adapter.thirdparty;

import eu.jpereira.trainings.designpatterns.structural.adapter.exceptions.CodeMismatchException;
import eu.jpereira.trainings.designpatterns.structural.adapter.exceptions.IncorrectDoorCodeException;
import eu.jpereira.trainings.designpatterns.structural.adapter.model.Door;
import eu.jpereira.trainings.designpatterns.structural.adapter.thirdparty.exceptions.CannotChangeCodeForUnlockedDoor;
import eu.jpereira.trainings.designpatterns.structural.adapter.thirdparty.exceptions.CannotUnlockDoorException;

public class ThirdPartyDoorAdapter extends ThirdPartyDoor implements Door {
    @Override
    public void open(String code) throws IncorrectDoorCodeException {
        try {
            unlock(code);
        } catch (CannotUnlockDoorException ex) {
            throw new IncorrectDoorCodeException();
        }
    }

    @Override
    public void close() {
        lock();
    }

    @Override
    public boolean isOpen() {
        final LockStatus currentLockStatus = getLockStatus();
        if (currentLockStatus == LockStatus.UNLOCKED) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public void changeCode(String oldCode, String newCode, String newCodeConfirmation)
			throws IncorrectDoorCodeException, CodeMismatchException {
        if (newCode != newCodeConfirmation) {
            throw new CodeMismatchException();
        }

        try {
            unlock(oldCode);
            setNewLockCode(newCode);
        } catch (CannotUnlockDoorException | CannotChangeCodeForUnlockedDoor ex) {
            throw new IncorrectDoorCodeException();
        }
    }

    @Override
    public boolean testCode(String code) {
        final LockStatus initialLockStatus = getLockStatus();
        try {
            unlock(code);
            if (getLockStatus() != initialLockStatus) {
                lock();
            }
        } catch (CannotUnlockDoorException ex) {
            return false;
        }

        return true;
    }
}
"
aadA66rY,AoC 2023 dag 1,rolfvanoven,Python,Saturday 2nd of December 2023 04:08:35 PM CDT,"# bestanden lezen en in stukjes hakken:
bestand = open('input.txt', 'r')
alles = bestand.readlines()
for x in range(len(alles)):
  alles[x] = alles[x].replace('\n', '')


def eerste(stringetje):
  eerste = 23
  y = 0
  while eerste == 23:
    volgende = stringetje[y]
    if volgende.isnumeric():
      eerste = volgende
    y += 1
  return(eerste)

def laatste(stringetje):
  laatste = 23
  y = len(stringetje) -1
  while laatste == 23:
    volgende = stringetje[y]
    if volgende.isnumeric():
      laatste = volgende
    y -= 1
  return(laatste)

def getallen(stringetje):
  cijfers = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
  for x in range(10):
    stringetje = stringetje.replace(cijfers[x], cijfers[x][0]+str(x)+cijfers[x][-1])
  return(stringetje)

#omzetten voor deel 2 (comment dit weg voor antwoord deel 1):
for x in range(len(alles)):
  alles[x] = getallen(alles[x])



#antwoord uitrekenen:

antwoord = 0

for x in range(len(alles)):
#  print(eerste(alles[x])+laatste(alles[x]))
  antwoord += int(eerste(alles[x])+laatste(alles[x]))

print(antwoord)
"
3Lbdfuyz,Untitled,um1up,JSON,Saturday 2nd of December 2023 04:06:10 PM CDT,"{
	""base_discount_amount"": 0,
	""base_grand_total"": 228.24,
	""base_shipping_amount"": 0,
	""base_shipping_tax_amount"": 0,
	""base_subtotal"": 228.24,
	""base_subtotal_with_discount"": 228.24,
	""discount_amount"": 0,
	""extension_attributes"": {
		""base_reward_currency_amount"": 0,
		""can_use_checkout"": true,
		""customer"": {
			""points_lovers"": 0,
			""professional_code"": ""2374"",
			""professional_label"": ""Cirurgião-Dentista"",
			""type_person_code"": ""1061"",
			""type_person_label"": ""Pessoa Física""
		},
		""gift_select"": false,
		""hsrule_discount_breakdown"": [],
		""message_cart"": ""Reiteramos que nossa venda é exclusiva para profissionais, estudantes ou empresas da área de odontologia maiores de 18 anos, devidamente habilitados ao exercício da profissão ou comprovando vínculo na instituição de ensino. Caso tenha alguma dúvida, entre em contato pelo 0800-727-7565."",
		""messages"": [
			[null]
		],
		""points_lovers"": 0,
		""points_lovers_receive"": 2,
		""quote_free_sale"": false,
		""removed_unique_opportunity"": false,
		""reward_currency_amount"": 0,
		""reward_points_balance"": 0,
		""show_lovers"": true,
		""skus_qty"": 3,
		""unique_opportunity"": false,
		""without_shipping"": false
	},
	""grand_total"": 228.24,
	""items"": [{
		""base_discount_amount"": 0,
		""base_price"": 0,
		""base_row_total"": 0,
		""base_row_total_incl_tax"": 0,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858830,
		""name"": ""BRINDE -  Creme Dental Sensitive Pro-Alívio Imediato 30g - Colgate"",
		""options"": ""[]"",
		""price"": 0,
		""qty"": 8,
		""row_total"": 0,
		""row_total_incl_tax"": 0,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}, {
		""base_discount_amount"": 0,
		""base_price"": 11.44,
		""base_row_total"": 45.76,
		""base_row_total_incl_tax"": 45.76,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858832,
		""name"": ""Escova Dental Colgate Orthogard - COLGATE"",
		""options"": ""[]"",
		""price"": 11.44,
		""qty"": 4,
		""row_total"": 45.76,
		""row_total_incl_tax"": 45.76,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}, {
		""base_discount_amount"": 0,
		""base_price"": 91.24,
		""base_row_total"": 182.48,
		""base_row_total_incl_tax"": 182.48,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858835,
		""name"": ""Enxaguante Bucal Periogard sem Álcool 2L - COLGATE"",
		""options"": ""[]"",
		""price"": 91.24,
		""qty"": 2,
		""row_total"": 182.48,
		""row_total_incl_tax"": 182.48,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}],
	""items_qty"": 14,
	""quote_currency_code"": ""BRL"",
	""shipping_amount"": 0,
	""shipping_discount_amount"": 0,
	""subtotal"": 228.24,
	""subtotal_with_discount"": 228.24,
	""total_segments"": [{
		""code"": ""subtotal"",
		""title"": ""Sub-total"",
		""value"": 228.24
	}, {
		""code"": ""shipping"",
		""title"": ""Envio e Manuseio"",
		""value"": 0
	}, {
		""area"": ""footer"",
		""code"": ""grand_total"",
		""title"": ""Total geral"",
		""value"": 228.24
	}, {
		""code"": ""gift_card"",
		""title"": ""Carteira"",
		""value"": 0
	}],
	""weee_tax_applied_amount"": null
}"
0LCerwfN,Untitled,um1up,CSS,Saturday 2nd of December 2023 03:08:53 PM CDT,"{
	""base_discount_amount"": 0,
	""base_grand_total"": 36.53,
	""base_shipping_amount"": 0,
	""base_shipping_tax_amount"": 0,
	""base_subtotal"": 36.53,
	""base_subtotal_with_discount"": 36.53,
	""discount_amount"": 0,
	""extension_attributes"": {
		""base_reward_currency_amount"": 0,
		""can_use_checkout"": true,
		""customer"": {
			""points_lovers"": 0,
			""professional_code"": ""2374"",
			""professional_label"": ""Cirurgião-Dentista"",
			""type_person_code"": ""1061"",
			""type_person_label"": ""Pessoa Física""
		},
		""gift_select"": false,
		""hsrule_discount_breakdown"": [],
		""message_cart"": ""Reiteramos que nossa venda é exclusiva para profissionais, estudantes ou empresas da área de odontologia maiores de 18 anos, devidamente habilitados ao exercício da profissão ou comprovando vínculo na instituição de ensino. Caso tenha alguma dúvida, entre em contato pelo 0800-727-7565."",
		""messages"": [
			[null]
		],
		""points_lovers"": 0,
		""points_lovers_receive"": 0,
		""quote_free_sale"": false,
		""removed_unique_opportunity"": false,
		""reward_currency_amount"": 0,
		""reward_points_balance"": 0,
		""show_lovers"": true,
		""skus_qty"": 3,
		""unique_opportunity"": false,
		""without_shipping"": false
	},
	""grand_total"": 36.53,
	""items"": [{
		""base_discount_amount"": 0,
		""base_price"": 0,
		""base_row_total"": 0,
		""base_row_total_incl_tax"": 0,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858776,
		""name"": ""BRINDE -  Creme Dental Sensitive Pro-Alívio Imediato 30g - Colgate"",
		""options"": ""[]"",
		""price"": 0,
		""qty"": 2,
		""row_total"": 0,
		""row_total_incl_tax"": 0,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}, {
		""base_discount_amount"": 0,
		""base_price"": 11.44,
		""base_row_total"": 11.44,
		""base_row_total_incl_tax"": 11.44,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858775,
		""name"": ""Escova Dental Colgate Orthogard - COLGATE"",
		""options"": ""[]"",
		""price"": 11.44,
		""qty"": 1,
		""row_total"": 11.44,
		""row_total_incl_tax"": 11.44,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}, {
		""base_discount_amount"": 0,
		""base_price"": 25.09,
		""base_row_total"": 25.09,
		""base_row_total_incl_tax"": 25.09,
		""discount_amount"": 0,
		""discount_percent"": 0,
		""extension_attributes"": [null],
		""item_id"": 216858777,
		""name"": ""Creme Dental elmex Sensitive 110g - ELMEX"",
		""options"": ""[]"",
		""price"": 25.09,
		""qty"": 1,
		""row_total"": 25.09,
		""row_total_incl_tax"": 25.09,
		""row_total_with_discount"": 0,
		""weee_tax_applied"": null,
		""weee_tax_applied_amount"": null
	}],
	""items_qty"": 4,
	""quote_currency_code"": ""BRL"",
	""shipping_amount"": 0,
	""shipping_discount_amount"": 0,
	""subtotal"": 36.53,
	""subtotal_with_discount"": 36.53,
	""total_segments"": [{
		""code"": ""subtotal"",
		""title"": ""Sub-total"",
		""value"": 36.53
	}, {
		""code"": ""shipping"",
		""title"": ""Envio e Manuseio"",
		""value"": 0
	}, {
		""area"": ""footer"",
		""code"": ""grand_total"",
		""title"": ""Total geral"",
		""value"": 36.53
	}, {
		""code"": ""gift_card"",
		""title"": ""Carteira"",
		""value"": 0
	}],
	""weee_tax_applied_amount"": null
}"
nfjv3Ceh,Untitled,Era37,JavaScript,Saturday 2nd of December 2023 03:01:21 PM CDT,"const fs = require(""fs"");

function part1() {
  const bag = { red: 12, green: 13, blue: 14 };
  const isValid = (colour) => {
    let flag = true;
    Object.keys(bag).forEach((key) => {
      if (colour.endsWith(key) && Number(colour.replace(key, """")) > bag[key])
        flag = false;
    });
    return flag;
  };
  let total = 0;
  fs.readFileSync(""./input.txt"")
    .toString()
    .split(""\n"")
    .forEach((line) => {
      line = line.replaceAll(/\s+/g, """").slice(4).split("":"");
      let id = Number(line[0]);
      let validFlag = true;
      line[1].split("";"").forEach((game) => {
        game.split("","").forEach((colour) => {
          if (!isValid(colour)) {
            validFlag = false;
            return;
          }
        });
        if (!validFlag) return;
      });
      total += validFlag ? id : 0;
    });
  console.log(`Part 1: ${total}`);
}

function part2() {
  let sum = 0;
  fs.readFileSync(""./input.txt"")
    .toString()
    .split(""\n"")
    .forEach((line) => {
      const minColours = { red: 0, green: 0, blue: 0 };
      line
        .replaceAll(/\s+/g, """")
        .split("":"")[1]
        .split("";"")
        .forEach((game) => {
          game.split("","").forEach((colour) => {
            const [colourMatched, amount] = [
              colour.match(/[a-z]+/g)[0],
              Number(colour.match(/[0-9]+/g)[0]),
            ];
            if (minColours[colourMatched] < amount)
              minColours[colourMatched] = amount;
          });
        });
      sum += Object.values(minColours).reduce((acc, curr) => acc * curr);
    });
  console.log(`Part 2: ${sum}`);
}

part1();
part2();
"
kW05n4Qm,LaserTest,drpepper240,Lua,Saturday 2nd of December 2023 02:57:02 PM CDT,"local sides = peripheral.getNames()
print(""Found "" .. tostring(table.getn(sides)) .. "" peripherals"")
local mainLaser = nil
local lasers = {}
for _, side in pairs(sides) do
	if peripheral.getType(side) == ""warpdriveLaser"" then
        local laser = peripheral.wrap(side)
		local lx, ly, lz = laser.getLocalPosition()
		if (lx == 2784) then
			mainLaser = peripheral.wrap(side)
			mainLaser[""lx""], mainLaser[""ly""], mainLaser[""lz""] = mainLaser.getLocalPosition()
			mainLaser.beamFrequency(30000)
		elseif (lx == 2786 or lx == 2787) then
			local newIndex = #lasers+1
			lasers[newIndex] = peripheral.wrap(side)
			lasers[newIndex][""lx""], lasers[newIndex][""ly""], lasers[newIndex][""lz""] = lasers[newIndex].getLocalPosition()
			lasers[newIndex].beamFrequency(30000)
			if (lasers[newIndex].getEnergyStatus() < 1000000) then
				print(""Laser at "" .. lasers[newIndex].lx .. ""; "" .. lasers[newIndex].ly .. ""; "" .. lasers[newIndex].lz.. ""; has insufficient energy, aborting..."")
				return
			end
		end
    end
end
if (mainLaser == nil) then
    print(""Laser not found"")
end

print(""Firing in 20 seconds"")
sleep(20)


for _,l in ipairs(lasers) do
	--l.emitBeam(mainLaser.lx - l.lx, mainLaser.ly - l.ly, mainLaser.lz - l.lz)
	
	--to 2784; 29; -6592
	l.emitBeam(2784 - l.lx, 29 - l.ly, -6592 - l.lz)
end
sleep(0.1) -- min 0.05 max 0.25

mainLaser.emitBeam(0, 0, -50)

"
RHDwWdWF,Untitled,MrQuanTrial,JSON,Saturday 2nd of December 2023 02:51:32 PM CDT,"[""Moye Moye"", ""Khao Maa Khsam"", ""Apni Aukat Dikha Di"", ""Ma Amma Behen Pe Aa Jaunga"", ""Bhupendra Jogi"", ""Bhai Kya Kar Raha Tu"", ""Aayein"", ""Sudhar Jao Sun Lo Meri Baat"", ""Humpe To Hai Hi no""]"
BFvGvPAf,Lab_7_2(search byte sequence in files in directory with threads),anticlown,C,Saturday 2nd of December 2023 02:51:15 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <dirent.h>
#include <sys/stat.h>
#include <pthread.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdbool.h>
#include <sys/wait.h>
#include <errno.h>
#include <limits.h>

typedef struct dirent DIRENT;
typedef struct stat STAT;
typedef struct
{
    const char *path;
    const char *name;
    const char *searchingString;
    FILE *outputFilePointer;

    mode_t mode;
} ThreadArgs;

void *threadFindStr(void *args)
{
    ThreadArgs *threadArgs = (ThreadArgs *)args;
    const char *fullPath = threadArgs->path;
    const char *name = threadArgs->name;
    const char *searchStr = threadArgs->searchingString;

    mode_t mode = threadArgs->mode;

    fprintf(stdout, ""ID потока: %ld, Путь: %s, Имя файла: %s\n"", pthread_self(), fullPath, name);

    FILE *fileForCheckPointer;
    if ((fileForCheckPointer = fopen(fullPath, ""rb"")) == NULL) // файл не открылся для побитового чтения
    {
        fprintf(stdout, ""Не удалось прочитать данные в файле %s.\n"", name);
    }
    else
    {
        char tempChar;
        int byteCounter = 0;
        bool isFound = false;

        while (!feof(fileForCheckPointer))
        {
            byteCounter++;
            tempChar = getc(fileForCheckPointer);
            if (tempChar == searchStr[0]) // если текущий выбранный символ в файле совпал с первым символом проверочной строки
            {
                int i = 1;
                isFound = true;
                while (searchStr[i] != '\0' && isFound)
                { // пока строка не кончается и сравниваемые символы равны
                    isFound = searchStr[i] == getc(fileForCheckPointer);
                    i++;
                }
            }
        }

        if (isFound)
        {
            fprintf(stdout, ""\tФайл %s содержит строку %s. До нахождения было просмотрено %d байт.\n"", name, searchStr, byteCounter);
            fprintf(threadArgs->outputFilePointer, ""\tФайл %s содержит строку %s. До нахождения было просмотрено %d байт.\n"", name, searchStr, byteCounter);
        }
        else
        {
            fprintf(stdout, ""\tФайл %s НЕ содержит строку %s. Было просмотрено %d байт.\n"", name, searchStr, byteCounter);
            fprintf(threadArgs->outputFilePointer, ""\tФайл %s НЕ содержит строку %s. Было просмотрено %d байт.\n"", name, searchStr, byteCounter);
        }
        fclose(fileForCheckPointer);
    }

    free(args);
    return NULL;
}

/*      search func start       */
void searchFiles(const char *searchingString, const char *catalogPath, FILE *outputFilePointer, int maxThreads, pthread_t *threadIDs, int *threadCount)
{
    const int PATH_LENGTH = 255;
    DIR *dir;
    dir = opendir(catalogPath);
    if (!dir) // каталог не открылся
    {
        fprintf(stderr, ""\t\t\tОшибка при открытии %s!\n"", catalogPath);
        return;
    };

    struct dirent *entry;
    while ((entry = readdir(dir)) != NULL) // пока не кончатся файлы в каталоге
    {
        char fullPath[PATH_LENGTH];
        snprintf(fullPath, PATH_LENGTH, ""%s/%s"", catalogPath, entry->d_name);

        STAT buffer;
        stat(fullPath, &buffer);

        if (S_ISREG(buffer.st_mode)) // если текущий файл(при просмотре в каталоге) является регулярным
        {
            ThreadArgs *threadArgs = (ThreadArgs *)malloc(sizeof(ThreadArgs));
            threadArgs->path = strdup(fullPath);
            threadArgs->name = entry->d_name;
            threadArgs->mode = buffer.st_mode;
            threadArgs->searchingString = searchingString;
            threadArgs->outputFilePointer = outputFilePointer;

            pthread_create(&threadIDs[*threadCount], NULL, threadFindStr, (void *)threadArgs);
            (*threadCount)++;

            if (*threadCount >= maxThreads)
            {
                for (int i = 0; i < maxThreads; i++)
                {
                    pthread_join(threadIDs[i], NULL);
                }
                *threadCount = 0;
            }
        }
    }

    closedir(dir);
}
/*      search func end       */

/*      print procedures start      */
void printTaskInfo()
{
    fprintf(stdout, ""\tДанная программа ищет в заданном каталоге все файлы,\n\t\t которые содержат заданную строку.\n\tРезультаты выводятся на консоль и в указанный файл.\n\n"");
}
/*      print procedures end        */

int main(int argc, char *argv[], char *envp[])
{
    const int NUM_OF_ARGS = 5;

    printTaskInfo();
    if (argc != NUM_OF_ARGS)
    {
        fprintf(stderr, ""Неверный ввод!\nФормат ввода: %s <заданный каталог> <строка для поиска> <файл вывода> <кол-во процессов>\n"", argv[0]);
        fprintf(stdout, ""Повторите запуск программы!\n"");
        return 1;
    }

    const char *catalogPath = argv[1];
    const char *stringForSearch = argv[2];
    const char *outputFilePath = argv[3];
    int maxNumOfThreads = atoi(argv[4]);
    pthread_t threadIDs[maxNumOfThreads];
    int threadCount = 0;

    FILE *outputFilePointer = fopen(outputFilePath, ""w"");

    if (outputFilePointer)
    {
        fprintf(stdout, ""\n\t\tВывод списка найденных файлов в консоль:\n\n"");
        searchFiles(stringForSearch, catalogPath, outputFilePointer, maxNumOfThreads, threadIDs, &threadCount);
        fclose(outputFilePointer);
        fprintf(stdout, ""\n\t\tЗапись в файл успешно завершена!\n"");
    }
    else
    {
        fprintf(stdout, ""\nНе удалось открыть файл для записи! Повторите запуск программы\n"");
    }

    return 0;
}
"
96yHYZJu,reactJS,shinhosuck1973,JavaScript,Saturday 2nd of December 2023 02:46:51 PM CDT,"import {
    createBrowserRouter,
    createRoutesFromElements,
    Route,
    Link,
    Outlet,
    useLoaderData,
    RouterProvider,
    useParams
} from 'react-router-dom'

import React from 'react'

import jobsLoader from 'data/jobLoader'

function RootLayout() {
    return (
        <React.Fragment>
            <header></header>
            <main>
                <Outlet />
            </main>
            <footer></footer>
        </React.Fragment>
    )
}

function JobsLayout() {
    return (
        <div className=""container"">
            <h1 className=""header"">Job List</h1>
            <Outlet />
        </div>
    )
}

function Jobs() {
    const { jobs } = useLoaderData() //get the data from 'jobsLoader' function
    return (
        <div className=""jobs"">
            {jobs.map((job) => {
                const {id, title, salary } = job
                return (
                    <Link to={`${id}/detail`} key={id} className=""job"">
                        <h3>{title}</h3>
                        <p>{salary}</p>
                    </Link>
                )
            })}
        </div>
    )
}

function Job() {
    const { id } = useParams() // graps the id from jobDetail Route

    return (
        <div className=""job-detail"">
            <h2>Job detail for {id}</h2>
        </div>
    )
}

const jobDetailLoader = async({params}) => {
    const { id } = params
    return id
}

const router = createBrowserRouter(
    createRoutesFromElements(
        <Route path=""/"" element={<RootLayout />}>
            <Route path='jobs' element={<JobsLayout />}>
                <Route index loader={jobsLoader} element={<Jobs />} /> {/* jobsLoader function is passed*/}
                <Route path="":id/detail"" element={<Job />}/>
            </Route>
        </Route>
    )
)

function App() {
    return (
        <RouterProvider router={router}/>
    )
}

export default App"
waw1dz3W,Code MixtPost,dzmaktaba,PHP,Saturday 2nd of December 2023 02:38:35 PM CDT,"<?php

namespace App\Http\Middleware;

use App\Providers\RouteServiceProvider;
use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class RedirectIfAuthenticated
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next, string ...$guards): Response
    {
        $guards = empty($guards) ? [null] : $guards;

        foreach ($guards as $guard) {
            if (Auth::guard($guard)->check()) {
                return redirect(RouteServiceProvider::HOME);
            }
        }

        return $next($request);
    }
}
"
725Z6r7c,alltheforge10_client_wheat,CodeSalat,Lua,Saturday 2nd of December 2023 02:10:41 PM CDT,"rednet.open(""top"")
rednet.host(""energy"", ""wheat"")
local cube = peripheral.wrap(""right"")

while true do
    local sender, message, distance = rednet.receive(""energy"")
    if message == ""energyUpdate"" then
        rednet.send(sender, cube.getEnergyFilledPercentage()*10, ""energy"")
    end
end"
9939f66g,Lab_7_1(search byte sequence in files in directory with processes),anticlown,C,Saturday 2nd of December 2023 01:55:45 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <dirent.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdbool.h>
#include <sys/wait.h>
#include <errno.h>
#include <limits.h>

typedef struct dirent DIRENT;
typedef struct stat STAT;

/*      search func start       */
void searchFiles(const char *searchingString, const char *catalogPath, FILE *outputFilePointer, const int maxNumOfProcesses, int *currNumOfProcesses)
{
    const int PATH_LENGTH = 255;
    DIR *dir;
    dir = opendir(catalogPath);
    if (!dir) // каталог не открылся
    {
        fprintf(stderr, ""\t\t\tОшибка при открытии %s!\n"", catalogPath);
        return;
    };

    struct dirent *entry;
    while ((entry = readdir(dir)) != NULL) // пока не кончатся файлы в каталоге
    {
        char fullPath[PATH_LENGTH];
        snprintf(fullPath, PATH_LENGTH, ""%s/%s"", catalogPath, entry->d_name);

        STAT buffer;
        stat(fullPath, &buffer);

        if (S_ISREG(buffer.st_mode)) // если текущий файл(при просмотре в каталоге) является регулярным
        {

            pid_t childPid = fork();
            if (childPid == -1) // не удалось создать процесс
            {
                fprintf(stderr, ""Ошибка при создании дочернего процесса!\n"");
                return;
            }

            if (childPid == 0) // процесс является дочерним
            {
                fprintf(stdout, ""\tPID: %d, PPID: %d, Путь: %s, Название: %s\n"", getpid(), getppid(), fullPath, entry->d_name);
                fprintf(outputFilePointer, ""\tPID: %d, PPID: %d, Путь: %s, Название: %s\n"", getpid(), getppid(), fullPath, entry->d_name);

                FILE *fileForCheckPointer;
                if ((fileForCheckPointer = fopen(fullPath, ""rb"")) == NULL) // файл не открылся для побитового чтения
                {
                    fprintf(stdout, ""Не удалось прочитать данные в файле %s.\n"", entry->d_name);
                }
                else
                {
                    char tempChar;
                    int byteCounter = 0;
                    bool isFound = false;

                    while (!feof(fileForCheckPointer))
                    {
                        byteCounter++;
                        tempChar = getc(fileForCheckPointer);
                        if (tempChar == searchingString[0]) // если текущий выбранный символ в файле совпал с первым символом проверочной строки
                        {
                            int i = 1;
                            isFound = true;
                            while (searchingString[i] != '\0' && isFound) { //пока строка не кончается и сравниваемые символы равны
                                isFound = searchingString[i] == getc(fileForCheckPointer);
                                i++;
                            }
                        }
                    }

                    if (isFound)
                    {
                        fprintf(stdout, ""\t\tФайл %s содержит строку %s. До нахождения было просмотрено %d байт.\n"", entry->d_name, searchingString, byteCounter);
                        fprintf(outputFilePointer, ""\t\tФайл %s содержит строку %s. До нахождения было просмотрено %d байт.\n"", entry->d_name, searchingString, byteCounter);
                    }
                    else
                    {
                        fprintf(stdout, ""\t\tФайл %s НЕ содержит строку %s. Было просмотрено %d байт.\n"", entry->d_name, searchingString, byteCounter);
                        fprintf(outputFilePointer, ""\t\tФайл %s НЕ содержит строку %s. Было просмотрено %d байт.\n"", entry->d_name, searchingString, byteCounter);
                    }
                    fclose(fileForCheckPointer);
                }

                exit(0);
            }
            else // процесс является родительским
            {
                (*currNumOfProcesses)++;
                fprintf(stdout, ""Родительский процесс: %d. Его дочерний - %d, а родительский - %d\n"", getpid(), childPid, getppid());
                fprintf(outputFilePointer, ""Родительский процесс: %d. Его дочерний - %d, а родительский - %d\n"", getpid(), childPid, getppid());

                if ((*currNumOfProcesses) >= maxNumOfProcesses) // кол-во текущих процессов больше либо равно максимальному
                {
                    waitpid(-1, NULL, 0);
                    (*currNumOfProcesses)--;
                }
            }
        }
    }

    closedir(dir);
    while ((*currNumOfProcesses) > 0)
    {
        waitpid(-1, NULL, 0);
        (*currNumOfProcesses)--;
    }
}
/*      search func end       */

/*      print procedures start      */
void printTaskInfo()
{
    fprintf(stdout, ""\tДанная программа ищет в заданном каталоге все файлы,\n\t\t которые содержат заданную строку.\n\tРезультаты выводятся на консоль и в указанный файл.\n\n"");
}
/*      print procedures end        */

int main(int argc, char *argv[], char *envp[])
{
    const int NUM_OF_ARGS = 5;

    printTaskInfo();
    if (argc != NUM_OF_ARGS)
    {
        fprintf(stderr, ""Неверный ввод!\nФормат ввода: %s <заданный каталог> <строка для поиска> <файл вывода> <кол-во процессов>\n"", argv[0]);
        fprintf(stdout, ""Повторите запуск программы!\n"");
        return 1;
    }

    const char *catalogPath = argv[1];
    const char *stringForSearch = argv[2];
    const char *outputFilePath = argv[3];
    int maxNumOfProcesses = atoi(argv[4]);

    int currNumOfProcesses = 0;
    FILE *outputFilePointer = fopen(outputFilePath, ""w"");

    if (outputFilePointer)
    {
        fprintf(stdout, ""\n\t\tВывод списка найденных файлов в консоль:\n\n"");
        searchFiles(stringForSearch, catalogPath, outputFilePointer, maxNumOfProcesses, &currNumOfProcesses);
        fclose(outputFilePointer);
        fprintf(stdout, ""\n\t\tЗапись в файл успешно завершена!\n"");
    }
    else
    {
        fprintf(stdout, ""\nНе удалось открыть файл для записи! Повторите запуск программы\n"");
    }

    return 0;
}
"
95m5AD8f,ConvertFrom-WingetStdout,Thrawn777,PowerShell,Saturday 2nd of December 2023 01:40:32 PM CDT,"# this is one of Stéphane BARIZIEN's public domain scripts
# the most recent version can be found at:
# https://gist.github.com/sba923/7924b726fd44af91d18453ee595e6548



# This crude script converts the output of the winget.exe executable into an array of PowerShell objects
# usage: winget <args> | ConvertFrom-WingetStdout.ps1
#
# examples of application:
#
# 1. Upgrade everything except some apps (e.g. managed by your employer's IT, 
#    or you know winget doesn't handle them properly yet)
#
#    winget upgrade | ConvertFrom-WingetStdout.ps1 | ? { $_.Id -notin ('VideoLAN.VLC', 'Microsoft.Office', 'Kitware.CMake') } | % { winget upgrade --id $_.Id }
#
#
# If this code doesn't work, I dunno who wrote it.
#
# Stéphane BARIZIEN <github.nospam4sba@xoxy.net>
#

param([string] $DebugCmd = 'upgrade')

# winget now outputs UTF-8 e.g. for '…' in the 'Available' column, we need to account for this
[Console]::InputEncoding = [Console]::OutputEncoding = $InputEncoding = $OutputEncoding = [System.Text.Utf8Encoding]::new()
# get rid of PSSA warning
$null = $InputEncoding

$index = 0
$fieldnames = @()
$fieldoffsets = @()
$offset = 0
$re = """"
$objcount = 0

# regex for matching progress information such as
# ██████████████████▒▒▒▒▒▒▒▒▒▒▒▒  2.00 MB / 3.20 MB
# ████████████████████████████▒▒  3.00 MB / 3.20 MB
# ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒  0%
# ΓûêΓûêΓûêΓûêΓûêΓûêΓûêΓûêΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆΓûÆ  1024 KB / 3.49 MB
# add U+2589..U+258F to account for https://github.com/microsoft/winget-cli/pull/2046
# 
# first part of $progress_re within first () is 
# U+00d4 U+00fb U+00ea U+007c 
# U+00d4 U+00fb U+00c6 U+007c 
# U+0393 U+00fb U+00ea U+007c 
# U+0393 U+00fb U+00c6 U+007c 
# U+005b U+2588 U+2589 U+258a U+258b U+258c U+258d U+258e U+258f U+2592 U+005d
$progress_re = '(Ôûê|ÔûÆ|Γûê|ΓûÆ|[█▉▊▋▌▍▎▏▒])+\s+([\d\.]+\s+.B\s+/\s+[\d\.]+\s+.B|[\d\.]+%)'

# logfile for debugging
$logfile = Join-Path -Path $env:TEMP -ChildPath ($MyInvocation.MyCommand.Name -replace '\.ps1', '.log')

# for debugging within VScode
if ($Host.Name -eq 'Visual Studio Code Host')
{
    Write-Debug (""Debugging with output from 'winget {0}'"" -f $DebugCmd)
    $data = & winget $DebugCmd
}
else
{
    $data = $input
}

function DumpString([string] $string)
{
    $result = ""hex: ""
    for ($index = 0; $index -lt $string.Length; $index++)
    {
        $result += (""{0:x2} "" -f [int]$string[$index])
    }
    return ($result -replace '\s+$', '')
}

foreach ($line in $data)
{
    Write-Debug(""index={0}, fieldcount={1}, fieldnames={3}, re='{2}'"" -f `
            $index, `
            $fieldnames.Count, `
            $re, `
        ($fieldnames -join ':') `
    )
    Write-Debug (""line='{0}'"" -f ($line -replace '[\x01-\x1F]', '.'))
    # skip lines before the column headers
    if ($line -notmatch '^\s+\x08' -and $line -notmatch $progress_re -and $line -notmatch '^\s*$')
    {
        # build regex from line with field names
        if ($index -eq 0)
        {
            $line0 = $line
            while ($line -ne '')
            {
                if ($line -match '^(\S+)(\s+)(.*)')
                {
                    $fieldnames += $Matches[1]
                    $fieldoffsets += $offset
                    $offset += $Matches[1].Length + $Matches[2].Length
                    $line = $Matches[3]
                }
                else
                {
                    $fieldnames += $line
                    $fieldoffsets += $offset
                    $line = ''
                }
            }

            $re = '^'
            for ($fieldindex = 0; $fieldindex -lt ($fieldnames.Count - 1); $fieldindex++)
            {
                $re += ('(.{{{0},{0}}})' -f ($fieldoffsets[$fieldindex + 1] - $fieldoffsets[$fieldindex]))
            }
            $re += '(.*)'
        }
        # skip separator line
        elseif ($index -eq 1)
        {
            if ($line -notmatch '^-+$')
            {
                if ($line -match $progress_re -or $line0 -match $progress_re) # progress info, skip and reset index
                {
                    $msg = (""Skipping:`n{0}`n{1}"" -f $line0, $line)
                    $msg | Out-File -Encoding utf8BOM -Append -LiteralPath $logfile
                    $index = -1
                }
                else
                {
                    $msg = (""Unexpected input:`n{0}`n{1}"" -f $line0, $line)
                    Write-Host -ForegroundColor Red $msg
                    $msg | Out-File -Encoding utf8BOM -Append -LiteralPath $logfile
                    Exit(1)
                }
            }
        }
        else
        {
            # if line matches regex, turn into object and output said object to pipeline
            if ($line -match $re)
            {
                $obj = New-Object -TypeName PSObject
                for ($fieldindex = 0; $fieldindex -lt ($Matches.Count - 1); $fieldindex++)
                {
                    Add-Member -InputObject $obj -MemberType NoteProperty -Name $fieldnames[$fieldindex] -Value ($Matches[$fieldindex + 1] -replace '\s+$', '')
                }
                $obj
                $objcount++
            }
            else
            {
                Write-Debug (""Cannot match input based on field names: '{0}' 're='{1}')"" -f $line, $re)
            }
        }

        $index++
    }
    else
    {
        # skip
        Write-Debug (""Skipped '{0}' ({1})"" -f ($line -replace '[\x01-\x1F]', '.'), (DumpString -string $line))
    }
}

Write-Debug(""Output {0} object(s)"" -f $objcount)"
aPQ2ybHD,bite,Fun_roger,JavaScript,Saturday 2nd of December 2023 01:14:01 PM CDT,"s1=['покусал','искусал','впился зубами в','закусал','завампирил','хватанул','загрыз','порвал зубами'];
s2=['сделал кусь','укусил','цапнул','тяпнул','куснул','клюнул','куснул','ужалил'];
s3=['за жопку','в шею','за пипку','в пипку','за задницу','за ухо'];

if(Math.random()>0.5)s=s1[Math.floor(Math.random()*s1.length)];
else s=s2[Math.floor(Math.random()*s2.length)]+' '+s3[Math.floor(Math.random()*s3.length)];
s"
7a2xCAx2,Untitled,rustavy,Bash,Saturday 2nd of December 2023 01:09:28 PM CDT,"root@altim-postgre-kafka:~# iptables -nvL --line-numbers
Chain INPUT (policy DROP 42811 packets, 2250K bytes)
num   pkts bytes target     prot opt in     out     source               destination
1    1824K  223M ACCEPT     all  --  *      *       10.128.0.28          0.0.0.0/0
2        0     0 ACCEPT     all  --  *      *       10.128.0.25          0.0.0.0/0
3     241K   34M ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0
4     5102  262K incoming_ssh  tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22
5     228K   14M net_home   tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:10050

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination

Chain OUTPUT (policy ACCEPT 3081K packets, 392M bytes)
num   pkts bytes target     prot opt in     out     source               destination

Chain incoming_ssh (1 references)
num   pkts bytes target     prot opt in     out     source               destination
1     5102  262K net_home   all  --  *      *       0.0.0.0/0            0.0.0.0/0
2      938 78696 net_vendor  all  --  *      *       0.0.0.0/0            0.0.0.0/0

Chain net_home (2 references)
num   pkts bytes target     prot opt in     out     source               destination
1     232K   14M ACCEPT     all  --  *      *       212.192.229.0/24     0.0.0.0/0
2        0     0 ACCEPT     all  --  *      *       185.108.163.192/27   0.0.0.0/0

Chain net_vendor (1 references)
num   pkts bytes target     prot opt in     out     source               destination
1      511 54544 ACCEPT     all  --  *      *       83.149.192.6         0.0.0.0/0
2        0     0 ACCEPT     all  --  *      *       83.149.192.13        0.0.0.0/0"
rdcEVn2Z,löschen später,MagmaLP,Lua,Saturday 2nd of December 2023 01:05:24 PM CDT,"os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""top"")
 
term.setCursorPos(1,1)
term.clear()
print(""Neustart: System - Einrichtung"")
print("" "")
print(""Welche Seite wird erstellt: "")
print(""1-9 sind möglich"")
term.setTextColor(colors.red)
Page = tonumber(read())
term.setTextColor(colors.lightBlue)
 
--------------------------------------------------
function RequestItems()
    -- CONSTANTS
    local PIPE_SIDE = ""right""
 
    -- IMPLEMENTATION
    function convertNBT(nbt)
        local conv = {}
        if (nbt == nil) then
            return nil
        elseif (nbt[""type""] == ""NBTTagCompound"") or (nbt[""type""] == ""NBTTagList"") then
            for key, value in pairs(nbt[""value""]) do
                conv[key] = convertNBT(value)
            end
        else
            conv = nbt[""value""]
        end
        return conv
    end
 
    function getItems(pipe)
        pipe.getAvailableItems()
        local event, result = os.pullEvent(""available_items_return"")
        return result
    end
 
    function inList(item)
        local id = item.id
        local dmg = item.dmg
        local idKey = tostring(id)
        local exists, requestAmount = false, 0
 
        if REQUEST_IDS[id] then
            if type(REQUEST_IDS[id]) == ""table"" then
                local variantKey = idKey .. "":"" .. tostring(dmg)
                if REQUEST_IDS[id][variantKey] then
                    exists = true
                    requestAmount = REQUEST_IDS[id][variantKey]
                end
            else
                exists = true
                requestAmount = REQUEST_IDS[id]
            end
        end
 
        return exists, requestAmount
    end
 
    -- MAIN
    local pipe = peripheral.wrap(PIPE_SIDE)
    for i, result in pairs(getItems(pipe)) do
        local iid, amount = unpack(result)
        local item = {
            id = pipe.getItemID(iid),
            dmg = pipe.getItemDamage(iid),
            nbt = convertNBT(pipe.getNBTTagCompound(iid))
        }
        local exists, requestAmount = inList(item)
        if exists then
            pipe.makeRequest(iid, requestAmount)
            sleep(0.5)
        end
    end
end
--------------------------------------------------
function gespeichert()
    term.setTextColor(colors.lime)
    print(""gespeichert"")
    term.setTextColor(colors.lightBlue)    
end
 
if fs.exists(""ItemsInPage1"") == false then
    local file = fs.open(""ItemsInPage1"", ""w"")
    file.close()
    gespeichert()
else
    print(""Es wurden bereits Items für Seite 1 festgelegt!"")
    print(""Bestätige mit 'ja' um fortzufahren"")
    Eingabe = io.read()
    if Eingabe == ""Ja"" or Eingabe == ""ja"" then
        local file = fs.open(""ItemsInPage1"", ""w"")
        file.close() 
        gespeichert()
    else
        shell.run(""1"")
    end
end
    
 
s = sen.getTargets()
function getS()
    for v, k in pairs(s) do
        if k.Name == ""ME Wireless Access Point"" then   
            target = v
        end
    end
    return target
end
 
f = getS()
s1 = sen.getTargetDetails(target)
MaxItems = 0

REQUEST_IDS = {
    [20] = {     [""20:0""] = 32       },
    }
RequestItems()"
vHwMRPLG,Untitled,Oliinyk,YAML,Saturday 2nd of December 2023 01:02:25 PM CDT,"# Simple Voice Chat server config v2.4.25

# The port of the voice chat server
# Setting this to ""-1"" sets the port to the Minecraft servers port (Not recommended)
port= [ censored :) ]
# The IP address to bind the voice chat server on
# Leave empty to use 'server-ip' of server.properties
# To bind to the wildcard address, use '*'
bind_address=
# The distance to where the voice can be heard
max_voice_distance=64.0
# The multiplier the voice distance will be reduced by when sneaking
crouch_distance_multiplier=1.0
# The multiplier the voice distance will be reduced by when whispering
whisper_distance_multiplier=0.5
# The opus codec
codec=VOIP
# The maximum size in bytes in a voice packet
# Set this to a lower value if your voice packets don't arrive
mtu_size=1024
# The frequency in which keep alive packets are sent
# Setting this to a higher value may result in timeouts
keep_alive=1000
# If group chats are allowed
enable_groups=true
# The host name that clients should use to connect to the voice chat
# This may also include a port, e.g. 'example.com:24454'
# Don't change this value if you don't know what you are doing
voice_host=
# If players are allowed to record the voice chat
allow_recording=true
# If spectators are allowed to talk to other players
spectator_interaction=false
# If spectators can talk to players they are spectating
spectator_player_possession=false
# If players without the mod should get kicked from the server
force_voice_chat=false
# The amount of milliseconds, the server should wait to check if the player has the mod installed
# Only active when force_voice_chat is set to true
login_timeout=10000
# The range where the voice chat should broadcast audio to
# A value <0 means 'max_voice_distance'
broadcast_range=-1.0
"
tMJB16MW,Código JS funcionalidad Flickity.js - OV Timeline,oscarviedma,HTML 5,Saturday 2nd of December 2023 12:39:06 PM CDT,"<link rel=""stylesheet"" href=""https://unpkg.com/flickity@2/dist/flickity.min.css"">
<script src=""https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js""></script>

<script>
  jQuery(function($){
    var $timelineProgress = $('.timeline-progress');
    var $timelineContainer = $('.timeline-container');

    // Inicializa Flickity
    var flkty = new Flickity('.ov-timeline-horizontal', {
      cellAlign: 'left',
      pageDots: true,
    	freeScroll: true,
    	contain: true,
    	wrapAround: true,
    	groupCells: true
    });

    // Mueve el div con la clase ""timeline-container"" al principio de ""flickity-viewport""
    var timelineContainer = document.querySelector('.timeline-container');
    var flickityViewport = document.querySelector('.flickity-viewport');
    
    flickityViewport.insertBefore(timelineContainer, flickityViewport.firstChild);

    // Evento de desplazamiento del carrusel
    $('.ov-timeline-horizontal').on('scroll.flickity', function(event, progress) {
      var timelineWidth = $timelineContainer.width() * progress;
      $timelineProgress.width(timelineWidth);
    });
  });
</script>"
Y7RPc68x,Código HTML para la barra de progreso - OV Timeline,oscarviedma,HTML,Saturday 2nd of December 2023 12:37:38 PM CDT,"<div class=""timeline-container"">
  <div class=""timeline-progress"" style=""width: 0;""></div>
</div>"
5NBhrDep,AOC 2023 Day 2,nairby,Rust,Saturday 2nd of December 2023 12:33:44 PM CDT,"use std::env;
use std::io::{self, prelude::*, BufReader};
use std::fs::File;

extern crate regex;
use regex::Regex;

const MAX_RED: usize = 12;
const MAX_GREEN: usize = 13;
const MAX_BLUE: usize = 14;

struct Game {
    id: usize,
    hands: Vec<Hand>,
}
impl From<&String> for Game {
    fn from(s: &String) -> Self {
        let re = Regex::new(r""Game (\d+): (.+)$"").unwrap();
        let matches = re.captures(&s).unwrap();
        let hands = matches[2]
            .split("";"")
            .map(Hand::from)
            .collect::<Vec<_>>();
        Game {
            id: matches[1].parse().unwrap(),
            hands: hands,
        }
    }
}
impl Game {
    pub fn is_possible(&self) -> bool {
        self.hands.len() == self.hands.iter().filter(|h| h.is_valid()).count()
    }
    pub fn power(&self) -> usize {
        self.hands.iter().map(|x| x.red  ).max().unwrap() *
        self.hands.iter().map(|x| x.green).max().unwrap() *
        self.hands.iter().map(|x| x.blue ).max().unwrap()
    }
}

struct Hand {
    red: usize,
    green: usize,
    blue: usize,
}
impl Hand {
    pub fn is_valid(&self) -> bool {
        self.red <= MAX_RED && self.green <= MAX_GREEN && self.blue <= MAX_BLUE
    }
}
impl From<&str> for Hand {
    fn from(s: &str) -> Self {
        Hand {
            red:   cubes_for_color(""red"",  &s),
            green: cubes_for_color(""green"",&s),
            blue:  cubes_for_color(""blue"", &s),
        }
    }
}

fn cubes_for_color(color: &str, hand: &str) -> usize {
    let re = format!(r""(\d+) {color}"");
    let re_color = Regex::new(&re).unwrap();
    if let Some(matches) = re_color.captures(hand) {
        return matches[1].parse().unwrap();
    }
    0
}

fn solve(input: &str) -> io::Result<()> {
    let file = File::open(input).expect(""Input file not found."");
    let reader = BufReader::new(file);

    // Input
    let input: Vec<String> = match reader.lines().collect() {
        Err(err) => panic!(""Unknown error reading input: {}"", err),
        Ok(result) => result,
    };

    let games: Vec<_> = input.iter().map(Game::from).collect();
    let part1: usize = games.iter().filter(|x| x.is_possible()).map(|g| g.id).sum();

    println!(""Part 1: {part1}""); // 2369

    let part2: usize = games.iter().map(|g| g.power()).sum();
    println!(""Part 2: {part2}""); // 66363

    Ok(())
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let filename = &args[1];
    solve(&filename).unwrap();
}
"
0k6gPUSu,Untitled,monkeypaste,Java,Saturday 2nd of December 2023 12:12:30 PM CDT,"class Day1B {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner sc = new Scanner(new File(path));
        int sum = 0;
        while(sc.hasNextLine()) sum += solve(sc.nextLine());
        System.out.println(sum);
    }
    static int solve(String str){
        int first = -1, last = -1;
        String[] set = {""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine""};
        for(int i = 0; i < str.length(); i++){
            char c = str.charAt(i);
            if(Character.isDigit(c)){
                if(first == -1) first = c - '0';
                last = c - '0';
            }
            else
                for(int s = 0; s < set.length; s++)
                    if(str.indexOf(set[s], i) == i){
                        if(first == -1) first = s + 1;
                        last = s + 1;
                        break;
                    }
        }
        return first * 10 + last;
    }
}"
cW2dTxZ7,Untitled,Maliuga,Python,Saturday 2nd of December 2023 12:01:58 PM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    return process


def start_pref(pid):
    #pref_proc = subprocess.Popen(shlex.split('sudo perf record -g -p ' + pid + ' -o perf.data'))
    #pref_proc = subprocess.Popen(shlex.split('sudo perf record -p ' + pid + ' -o perf.data'))
    pref_proc = subprocess.Popen(shlex.split('sudo perf record -o perf.data -p ' + pid))
    return pref_proc


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


server =  run(start_server())
#time.sleep(1)
pref_proc = start_pref(str(server.pid))
make_shots()
stop(server)
stop(pref_proc)
make_svg()
time.sleep(1)
print('Job done')
"
Mhrrcda5,main.cf fragment: relay to smart host,DragonHawk,SSH Config,Saturday 2nd of December 2023 11:34:58 AM CDT,"######################################################################
# identification of this mail system

myorigin = server42.corp.contoso.com 
mydomain = corp.contoso.com

######################################################################
# relay control

# Controls are relaxed for members of $mynetworks (can relay mail, no rate
# limits, can use some exploitable SMTP features, etc.).
mynetworks =
	127.0.0.0/8
	[::1]/128
	10.0.0.0/8
	192.168.0.0/16

# Clients/remotes/scenarios to relay mail *for*.
smtpd_relay_restrictions =
	permit_mynetworks
	reject_unauth_destination

######################################################################
# smart host - outgoing mail

# Send all outbound mail to this mail server (smart host)
# Use ""mail submission"" protocol (TCP port 587)
relayhost = [smtp.office365.com]:submission

# When talking to our smart host, use this name to identify ourselves.
# Some mail hosts want a valid DNS name.
#smtp_helo_name = outgoing.contoso.com

# We have to authenticate ourselves to our smart host using SASL
smtp_sasl_auth_enable = yes
smtp_sasl_type = cyrus

# Don't allow plaintext passwords if connection lacks SSL/TLS/encryption
# If connection is encrypted, allow plain text passwords.
# ""noanonymous"" is equiv to Sendmail ""y"" mailer flag.
smtp_sasl_security_options     = noanonymous noplaintext
smtp_sasl_tls_security_options = noanonymous

# Credentials to use for outgoing SMTP connections (when Postfix is
# acting as an SMTP client).
smtp_sasl_password_maps = cdb:/etc/postfix/outgoing_passwd

# Force SSL/TLS outbound, since we should only be talking to our smart host.
# Further, require that the server's certificate verify against the CA root.
smtp_tls_security_level  = verify

# END
"
bvcXGvR2,Untitled,Maliuga,Python,Saturday 2nd of December 2023 11:16:39 AM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    
    # cmd = 'sudo perf record -g ' + command + ' -o perf.data'
    # #process = subprocess.Popen([shlex.split('sudo perf record -g -p '), shlex.split(command), shlex.split(' -o perf.data')], stdout=output, stderr=subprocess.DEVNULL)
    # process = subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    #cmd = 'sudo perf record -g -p' + process.pid + ' -o perf.data'
    #cmd = 'sudo perf record -g -p' + str(process.pid) + ' sleep 1 -o perf.data'
    
    time.sleep(1)

    #cmd = 'sudo perf record -ag -o perf.data -p ' + str(process.pid) + ' sleep 3' 
    cmd = 'sudo perf record -p ' + str(process.pid) + ' sleep 3 -o perf.data ' 

    #cmd = 'sudo perf record -g -o perf.data -p ' + str(subprocess.check_output([""pidof"",'game_server']))
    #cmd = 'sudo perf record -p ' + str(subprocess.check_output([""pidof"",'game_server'])) + ' -g -o perf.data'
    #subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    
    #subprocess.run(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    #perf_worker = subprocess.run(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    #process = subprocess.Popen(shlex.split('sudo perf record -g -o perf.data -p -- ' + command), stdout=output, stderr=subprocess.DEVNULL)
    return process


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


#server = run(start_server())
#server = run(start_server())
server =  run(start_server())

#pref = start_pref(server.pid)
#start_pref(server.pid)

make_shots()
stop(server)

#perf_worker.wait()

#stop(pref)

make_svg()

time.sleep(1)
#subprocess.Popen('sudo perf script | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg')
print('Job done')
"
QEa6weQ7,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:50:44 AM CDT,"def F(x, A):
    return (x & A != 0) or ((x & 52 == 0) and (x & 14 == 0))
Min = 10**10
for A in range(1, 1000):
    if all(F(x, A) == 1 for x in range(0, 1000)):
        Min = min(Min, A)
print(Min)"
pJMuezwZ,BWR - Changelog 02/12/23,SSilver,Diff,Saturday 2nd of December 2023 10:48:01 AM CDT,"The Amputator
+ Increased healing radius on hit duration to 3s (was 1s)
The healing effect was barely enough reward for the risk of going for a weak melee strike. It was increased in duration to give the medic more tangible support with it.

Buffalo Steak Sandvich
~ Speed cap reworked: speed bonuses from item attributes and conditions are halved while under steak effects
The previous version simply increasing the speed cap with specific effects was unsatisfactory. This version instead properly stacks alterations to speed but reducing them to half as they would be too strong at full strength.

Phlogistinator
- Removed faster taunt speed
With the increased frequency of charges, this aspect was seen as overtuned and gave enemies less of a window to anticipate the pyro with the effect.

Warrior's Spirit
+ Reduced deploy penalty to 35% slower (was 50% slower)
- Removed +50% increased melee range
Weapon seemed especially overtuned especially with the steak, particularly with the extra range and speed granted making it difficult to actually escape. It's range was reverted while reducing it's deploy penalty slightly to make it require less commitment.

Third Degree
+ On hit: links attack to all enemies nearby (256 HU)
+ Added +35% damage bonus to burning targets
+ Reduced damage penalty to -25% (was -33%)
- Removed link with healing beams
- Removed healing on hit
- Added 20% slower firing speed
Its usage was reworked, changed from being based on healing specifically but instead to work based on proximity. The weapon instead provides a form of crowd control vs groups in close range, dealing max damage by chaining hits and using afterburn."
41Q5B9gQ,snowybot,coinwalk,JavaScript,Saturday 2nd of December 2023 10:45:08 AM CDT,"var sturn = parseFloat(document.getElementById('pct_balance').value);
var kill = (sturn/140).toFixed(8);
var freakish = kill;
var taget = (sturn*24);
var dozer = (kill*10);
var soven = (kill*6.9);
var ovenbake = (kill*7.9);
var superior = (kill*14);;
var tobetnext = ((freakish*1).toFixed(8));
var goodly = sturn;
var james = 0;
var mate = 0;
var nobby = parseFloat(document.getElementById('pct_balance').value);
var fran = ((Math.ceil(sturn/dozer))*dozer);
var klock = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var chime = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var baboon = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get() {
console.clear(); 
goodly = parseFloat(document.getElementById('pct_balance').value);klock = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText);
baboon = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((klock<49.5000)&&(baboon>chime)){
nobby = nobby+freakish;
chime = parseFloat(baboon);
}
if ((klock>=49.5000)&&(baboon>chime)){
nobby = nobby-freakish;
chime = parseFloat(baboon);
}
if (baboon<chime){
console.log(""betting old bets stopping"");
return;
}
if ((nobby-kill)>goodly){
console.log(""greens not pay stopping"");
return;
}
if (goodly<(nobby-(kill*3))){
console.log(""hacked"");
return;
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+soven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate<=0)){
    freakish = Number((freakish*2).toFixed(8));
    james = parseFloat(goodly);
	mate = mate+1
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+soven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate>0)){
    freakish = Number((freakish*2).toFixed(8));
	mate = mate+1;
    james = parseFloat(goodly);
}
if ((goodly>=fran)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+soven))){
    freakish = kill;
    james = 0;
	mate = 0;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (((Math.floor(goodly/dozer))*dozer)<=(fran*0.7)){
    fran = ((Math.ceil(goodly/dozer))*dozer);
	}
if ((((Math.floor(goodly/dozer))*dozer)<=(fran*0.7))&&((((Math.floor(goodly/dozer))*dozer)+(freakish*2))>=goodly)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+soven))){
    freakish = kill;
    james = 0;;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (goodly<=freakish){
    freakish = kill;
    james = 0;;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (goodly >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (freakish*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((goodly-sturn).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1000);
}
get();


"
8BtqQpFK,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:44:29 AM CDT,"def f(n):
    s = """"
    while n > 0:
        s += str(n % 17)
        n //= 17
    s = s[::-1]
    return s
x = 5 * 3**1917 + 6 * 2**1878 + 7 * 3**1870 - 1991
x = f(x)
A = [0] * 10
for i in range(len(x)):
    A[int(x[i])] += 1
print(A)"
gYAmzi3q,alltheforge10_client_iron,CodeSalat,Lua,Saturday 2nd of December 2023 10:38:46 AM CDT,"rednet.open(""top"")
rednet.host(""energy"", ""iron"")
local cube = peripheral.wrap(""right"")

while true do
    local sender, message, distance = rednet.receive(""energy"")
    if message == ""energyUpdate"" then
        rednet.send(sender, cube.getEnergyFilledPercentage()*10, ""energy"")
    end
end"
xuSP1dAD,Untitled,Maliuga,Python,Saturday 2nd of December 2023 10:32:35 AM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    
    cmd = 'sudo perf record -g -o perf.data -p' + str(process.pid) 
    subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    return process


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


server = run(start_server())
make_shots()
stop(server)
make_svg()
time.sleep(1)
print('Job done')
"
CZ977Jf2,sehgsehseh,gadungw71,PHP,Saturday 2nd of December 2023 10:22:00 AM CDT,"https://bio.link/1212thedayhdkorea
https://bio.link/film1212theday2023
https://bio.link/fertygya
https://bio.link/theundertakerfullhd
https://bio.link/rettuugd
https://bio.link/aedrlead
https://bio.link/4kings2fullhdthai4k
https://groups.google.com/g/comp.arch.fpga/c/jCghFUPje6w
https://groups.google.com/g/comp.arch.fpga/c/laEmsktk-XU
https://groups.google.com/g/comp.text.tex/c/2kJYTMQZZJw
https://groups.google.com/g/comp.text.tex/c/wIfzxVlTtjs
https://groups.google.com/g/comp.arch.fpga/c/Xa4JSTk1UEc
https://groups.google.com/g/comp.arch.fpga/c/kMV5HxVeLEE
https://groups.google.com/g/comp.os.vms/c/x-bwjsS75TA
https://groups.google.com/g/comp.text.tex/c/b7is7Xu_K1o
https://hackmd.io/@rerewilli6/ByyPI0_Hp
https://rentry.co/xgccf
https://pastelink.net/u1lwhqgk
https://snippet.host/owdtgo
https://glot.io/snippets/gr55orvnxq
https://etextpad.com/fpjpoyhzpt
https://homment.com/rWlaPY0SyxTRuZnBovDX
https://justpaste.me/9Se9
https://jsbin.com/ruqebogiho/edit?html,output
https://ide.geeksforgeeks.org/online-php-compiler/89b6fa3c-6217-4878-bd42-2f2f7a270bf8
https://jsfiddle.net/putradani/3r4j82um/
https://pasteio.com/x41T0gWP6Vw4
"
3c5MRKqK,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:18:58 AM CDT,"def f(n):
    s = """"
    while n > 0:
        s += str(n % 17)
        n //= 17
    s = s[::-1]
    return s
count = 0
for n in range(17**6, 17**7):
    n = f(n)
    if '2' not in n and '3' not in n and '5' not in n and '7' not in n and len(n) == len(set(n)) and int(n[:1]) % 2 == 1:
        count += 1
print(count)"
Y4naRCEz,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:05:14 AM CDT,"def f(n):
    s = ''
    while n > 0:
        s += str(n % 3)
        n //= 3
    s = s[::-1]
    return s
for n in range(1, 100000):
    n = f(n)
    if int(n) % 4 == 0:
        n = n + n[-3:]
    else:
        n = n + f((int(n) % 4) * 4)
    R = int(n, 3)
    if R < 127:
        print(R)"
FL0kWmFg,bash execute latest version,plirof2,JavaScript,Saturday 2nd of December 2023 10:03:52 AM CDT,"#!/bin/bash

folder_path=""/tmp/Internet/""
prefix=""ungoogled-chromium_""
extension="".AppImage""

# Navigate to the specified folder
cd ""$folder_path"" || exit

# Find files with the specified prefix and extension
files=($(find . -type f -name ""$prefix*$extension""))

# If no matching files are found, exit
if [ ${#files[@]} -eq 0 ]; then
  echo ""No matching files found.""
  exit
fi

# Extract version numbers and find the file with the highest version
latest_version=""""
latest_file=""""
for file in ""${files[@]}""; do
  version=$(echo ""$file"" | grep -oP ""(?<=${prefix})[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"" | head -n 1)
  if [ -n ""$version"" ]; then
    echo ""Detected version number: $version""
    IFS='.' read -ra version_parts <<< ""$version""
    if [ -z ""$latest_version"" ] || [ ""${version_parts[0]}"" -gt ""${latest_version_parts[0]}"" ] || [ ""${version_parts[1]}"" -gt ""${latest_version_parts[1]}"" ] || [ ""${version_parts[2]}"" -gt ""${latest_version_parts[2]}"" ] || [ ""${version_parts[3]}"" -gt ""${latest_version_parts[3]}"" ]; then
      latest_version=""$version""
      latest_version_parts=(""${version_parts[@]}"")
      latest_file=""$file""
    fi
  fi
done


# Execute the file with the latest version
#echo ""Executing the latest version: $latest_file""
echo $latest_file
echo $latest_version


# Execute the file with the latest version
if [ -n ""$latest_file"" ]; then
  echo ""Executing the latest version: $latest_file""
  chmod +x ""$latest_file""
  ./""$latest_file""
else
  echo ""No valid version number detected in any file.""
fi
"
rbP61LKT,fetch latest version,plirof2,Bash,Saturday 2nd of December 2023 10:03:11 AM CDT,"===========bash ============================
#!/bin/bash

# GitHub repository owner and name
OWNER=""ivan-hc""
REPO=""Chromium-Web-Browser-appimage""

# Fetch the latest release information using the GitHub API
API_URL=""https://api.github.com/repos/$OWNER/$REPO/releases/latest""
RELEASE_INFO=$(curl -s ""$API_URL"")

# Check if the request was successful
if [[ $RELEASE_INFO == *""Not Found""* ]]; then
    echo ""Error: Repository or release not found. Please check the repository owner and name.""
    exit 1
fi

# Extract the latest release version and asset download URL without jq
LATEST_VERSION=$(grep -oP '""tag_name"": ""\K[^""]+' <<< ""$RELEASE_INFO"")
DOWNLOAD_URL=$(grep -oP '""browser_download_url"": ""\K[^""]+' <<< ""$RELEASE_INFO"")

# Download the latest version
wget ""$DOWNLOAD_URL"" -O ""Chromium_Web_Browser-$LATEST_VERSION.AppImage""

echo ""Downloaded Chromium Web Browser version $LATEST_VERSION to Chromium_Web_Browser-$LATEST_VERSION.AppImage""


=================PHP=======================
#!/bin/bash

# GitHub repository owner and name
OWNER=""ivan-hc""
REPO=""Chromium-Web-Browser-appimage""

# Fetch the latest release information using the GitHub API
API_URL=""https://api.github.com/repos/$OWNER/$REPO/releases/latest""
RELEASE_INFO=$(curl -s ""$API_URL"")

# Check if the request was successful
if [[ $RELEASE_INFO == *""Not Found""* ]]; then
    echo ""Error: Repository or release not found. Please check the repository owner and name.""
    exit 1
fi

# Extract the latest release version and asset download URL using php
LATEST_VERSION=$(php -r 'echo json_decode(file_get_contents(""php://stdin""))->tag_name;' <<< ""$RELEASE_INFO"")
DOWNLOAD_URL=$(php -r 'echo json_decode(file_get_contents(""php://stdin""))->assets[0]->browser_download_url;' <<< ""$RELEASE_INFO"")

# Download the latest version
wget ""$DOWNLOAD_URL"" -O ""Chromium_Web_Browser-$LATEST_VERSION.AppImage""

echo ""Downloaded Chromium Web Browser version $LATEST_VERSION to Chromium_Web_Browser-$LATEST_VERSION.AppImage""
"
sbTY4uyd,Railroader-backup.ps1,kerbo_,PowerShell,Saturday 2nd of December 2023 09:54:56 AM CDT,"# A simple PowerShell script to backup Railroader saves
# Twitter: @Kerbo_
#
$ErrorActionPreference = 'SilentlyContinue'
$railroaderDir = $env:APPDATA + ""\..\LocalLow\Giraffe Lab LLC\Railroader\Saves""
$dateString = $(get-date -f yyy-MM-dd_HH-mm)
Push-Location $railroaderDir

If(!(test-path -PathType container ""backups""))
{
      New-Item -ItemType Directory -Path ""backups"" | Out-Null
}

$saves = Get-ChildItem -Filter *.shortsave

foreach($save in $saves) {
    $savename = $save.Name
    $basename = $save.BaseName
    
    if($savename -Like ""*_auto*"") { continue }
    
    $save_hash = Get-FileHash $save
    $backup = gci ""backups\$basename-*"" | select -last 1
    $backup_hash = Get-FileHash $backup -EV Err -EA SilentlyContinue
    if ( $backup_hash.Hash -eq $save_hash.Hash ) {
        Write-Host ""$savename matches latest backup, no backup needed"" -ForegroundColor green
    } else {
        cp $savename ""backups\$basename-$dateString.shortsave""
        $RET=$?
        if ($RET) {
            Write-Host ""Copied $basename.shortsave to backups\$basename-$dateString.shortsave"" -ForegroundColor yellow
        } else {
            Write-Host ""Error! cp returned $RET for $basename.shortsave"" -ForegroundColor red
        }
    }
}
Pop-Location
# Sleep to show screen output before exiting
Start-Sleep -Seconds 5"
TbvzJck1,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 09:05:52 AM CDT,"file = open('15A.txt')
A = list(map(int, file.readlines()))
Max = -10**9
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if abs(A[i] - A[j]) % 80 == 0:
            Max = max(Max, A[i] - A[j])
print(Max)

file = open('15B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(80)]
for i in range(len(A)):
    ost = A[i] % 80
    a[ost] += [A[i]]
b = []
for i in range(80):
    a[i].sort()
    b += a[i][-1:]
    b += a[i][:1]
ans = []
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        if abs(b[i] - b[j]) % 80 == 0:
            ans  += [b[i] - b[j]]
print(max(ans))"
aLbcQV4E,ShapeMiner,LexieSama,Lua,Saturday 2nd of December 2023 09:01:28 AM CDT,"local Height, Size
local currWidth = 0
local currLength = 0
local currHeight = 0
local currSize = 0
local middleReached = false
local goingFront = true

local function permaDig()
    while turtle.detect() do
        turtle.dig()
    end
end

local function permaDigUp()
    while turtle.detectUp() do
        turtle.digUp()
    end
end

local function turnAround()
    turtle.turnLeft()
    turtle.turnLeft()
end

print(""Type in the Size:"")
Size = tonumber(io.read())
print(""Type in the Height:"")
Height = tonumber(io.read())

print(""starting procedure"")

while currHeight <= Height do
    while currLength <= Size do
        if currSize == 0 then
            permaDig()
            turtle.forward()
            currSize = currSize + 1
        else
            turtle.turnRight()
            while currWidth <= currSize do
                permaDig()
                turtle.forward()
                currWidth = currWidth + 1
            end
            turnAround()
            while currWidth >= -currSize do
                permaDig()
                turtle.forward()
                currWidth = currWidth - 1
            end
            turnAround()
            while currWidth < 0 do
                turtle.forward()
                currWidth = currWidth + 1
            end
            turtle.turnLeft()
            currSize = currSize + 1
        end
        if (middleReached) then
            if (currSize > 0) then
                permaDig()
                turtle.forward()
            end
        else
            if currSize > 0 then
                permaDig()
                turtle.forward()
            end
        end

        if (currSize == Size / 2) then
            middleReached = true
        end
        currLength = currLength + 1
    end

    if not (currHeight == Height) then
        currLength = 0
        permaDigUp()
        turtle.up()
        turnAround()
        currHeight = currHeight + 1
        goingFront = not goingFront
    end
end

while currHeight > 0 do
    turtle.down()
    currHeight = currHeight - 1
end

if not goingFront then
    while currLength < Size do
        turtle.forward()
        currLength = currLength + 1
    end
end"
MPmJVKgr,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 08:56:11 AM CDT,"#include <iostream>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
const ll INF = 1e18;
int n, k;
vector<pair<int, int> > graph[maxn];
bool pay_toll[maxn];

pair<ll, ll> dfs(int node, int parent) {
    ll res = 0, sum = 0, max_edge = 0;
    for(int i = 0; i < (int) graph[node].size(); i++) {
        int neighbour = graph[node][i].first;
        if(neighbour != parent) {
            ll weight = graph[node][i].second;
            pair<ll, ll> p = dfs(neighbour, node);
            res += p.first;
            sum += min(weight, p.second);
            max_edge = max(max_edge, min(weight, p.second));
        }
    }
    if(pay_toll[node]) {
        res += sum;
        max_edge = INF;
    }
    else {
        res += sum - max_edge;
    }
    return make_pair(res, max_edge);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    
    for(int i = 1; i < n; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    for(int i = 0; i < maxn; i++) {
        pay_toll[i] = false;
    }
    
    for(int i = 0; i < k; i++) {
        int x;
        cin >> x;
        pay_toll[x] = true;
    }
    cout << dfs(0, -1).first << endl;
    return 0;
}
"
GFXsv6du,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:53:51 AM CDT,"file = open('14A.txt')
A = list(map(int, file.readlines()))
Max = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            for p in range(k + 1, len(A)):
                if (A[i] + A[j] + A[k] + A[p]) % 12 == 0:
                    Max = max(Max, A[i] + A[j] + A[k] + A[p])
print(Max)

file = open('14B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(12)]
for i in range(len(A)):
    ost = A[i] % 12
    a[ost] += [A[i]]
b = []
for i in range(12):
    a[i].sort()
    b += a[i][-4:]
ans = []
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        for k in range(j + 1, len(b)):
            for p in range(k + 1, len(b)):
                if (b[i] + b[j] + b[k] + b[p]) % 12 == 0:
                    ans += [b[i] + b[j] + b[k] + b[p]]
print(max(ans))"
jMdUXBFE,BDOT LR5,MARSHAL327,Scala,Saturday 2nd of December 2023 08:46:02 AM CDT,"package sevsu.spark

import java.nio.file.Paths
import org.apache.spark.{RangePartitioner, SparkConf, SparkContext}
import org.apache.spark.rdd.RDD
import sevsu.spark.Application.time

object Application {
    private val conf: SparkConf = new SparkConf()
        .setMaster(""local[*]"")
        .setAppName(""spark_example"")
        .set(""spark.ui.showConsoleProgress"", ""false"")

    private val sc: SparkContext = getSparkContext(conf)

    private val resourcesRoot: String = this.getClass.getResource(""/"").toString
    private val personPath: String = resourcesRoot + ""person.csv""
    private val apartmentPath: String = resourcesRoot + ""apartment.csv""

    case class Person(id: Int, name: String)

    case class Apartment(id_apartment: Int, id_human: Int, num_rooms: Int, address: String)

    def time[R](block: => R): R = {
        val t0 = System.nanoTime()
        val result = block // call-by-name
        val t1 = System.nanoTime()
        val resultTime = BigDecimal((t1 - t0) / Math.pow(10, 9))
            .setScale(4, BigDecimal.RoundingMode.HALF_UP)
        println(""Время: "" + resultTime + "" сек."")
        result
    }

    def lab4(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""========== lab4 =========="")
        // ====== Task 1 ======
        val personCounter: RDD[(Int, Int)] = apartments.map(item => (item.id_human, 1))
        val numPersonApartments =
            personCounter
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments.map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))
        val joined = personPairRDD join numPersonApartments
        val numPersonNameApartments = joined.map(item => item._2)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )
        val personNameAddressWithId = personApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.map(item => item._2)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def lab5(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""\n========== lab5 =========="")

        // ====== Task 1 ======
        val pairApartments = apartments.map(apartment => (apartment.id_human, 1))

        val partitioner = new RangePartitioner(4, pairApartments)
        val partitionedPairApartments = pairApartments.partitionBy(partitioner).persist()

        val numPersonApartments =
            partitionedPairApartments
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments.map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))

        val partitionerPersonPairRDD = new RangePartitioner(4, personPairRDD)
        val partitionedPersonPairRDD = personPairRDD.partitionBy(partitionerPersonPairRDD).persist()

        val joined: RDD[(Int, (String, Int))] = partitionedPersonPairRDD join numPersonApartments
        val numPersonNameApartments = joined.mapValues(item => item._1)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )

        val partitionerPersonApartmentsAddress = new RangePartitioner(4, personApartmentsAddress)
        val partitionedPersonApartmentsAddress = personApartmentsAddress.partitionBy(partitionerPersonApartmentsAddress).persist()

        val personNameAddressWithId = partitionedPersonApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.mapValues(item => item._1)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def main(args: Array[String]): Unit = {
        val rawPersonRdd: RDD[String] = sc.textFile(personPath)
        val rawApartmentRdd: RDD[String] = sc.textFile(apartmentPath)
        val persons: RDD[Person] = rawPersonRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id, name) => Person(id.toInt, name)
            }
        })
        val apartments: RDD[Apartment] = rawApartmentRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id_apartment, id_human, num_rooms, address) => Apartment(id_apartment.toInt, id_human.toInt, num_rooms.toInt, address)
            }
        })
        
        time(lab4(apartments, persons, printResults = false))
        time(lab5(apartments, persons, printResults = false))

        sc.stop()
    }

    private def getSparkContext(conf: SparkConf): SparkContext = {
        if (System.getProperty(""os.name"").toLowerCase.contains(""windows"")) {
            System.setProperty(
                ""hadoop.home.dir"",
                Paths.get(this.getClass.getResource(""/winutils/hadoop-2.7.1/"").toURI).toString
            )
        }

        new SparkContext(conf)
    }
}
"
iiesFhhz,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:40:16 AM CDT,"file = open('13A.txt')
A = list(map(int, file.readlines()))
Min = 10**10
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            if (A[i] + A[j] + A[k]) % 11 == 0:
                Min = min(Min, A[i] + A[j] + A[k])
print(Min)

ans = []
file = open('13B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(11)]
for i in range(len(A)):
    ost = A[i] % 11
    a[ost] += [A[i]]
b = []
for i in range(11):
    a[i].sort()
    b += a[i][:3]
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        for k in range(j + 1, len(b)):
            if (b[i] + b[j] + b[k]) % 11 == 0:
                ans += [b[i] + b[j] + b[k]]
print(min(ans))"
YvduvsGT,get_date.cpp,ripred,C++,Saturday 2nd of December 2023 08:34:56 AM CDT,"#include <iostream>
#include <stdint.h>
using namespace std;

char compileDate[16] = __DATE__;

uint16_t const monPattern[12] = {
//ascii added together
    281,    // J+a+n = 74+97+110
    269,    // F+e+b = 70+101+98
    288,    // M+a+r = 77+97+114
    291,    // A+p+r = 65+112+114
    295,    // M+a+y = 77+97+121
    301,    // J+u+n = 74+117+110
    299,    // J+u+l = 74+117+108
    285,    // A+u+g = 65+117+103
    296,    // S+e+p = 83+101+112
    294,    // O+c+t = 79+99+116
    307,    // N+o+v = 78+111+118
    268,    // D+e+c = 68+101+99
};

//name of months
const char* months[12] {
    ""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""
};

//get compile month in integers
int decideMonth(){
    //get monPattern by adding ascii
    int add = 0;
    for(int i=0; i<3;i++){
        add += compileDate[i];
    }

    //what month?
    int mon = 0;
    for(int j=0; j<12; j++){
        if(add==monPattern[j]){
            mon = j+1;
        }
    }
    return mon;
}
int month = decideMonth();

//get compile date in integers
int decideDate(){
    //get date, converting from ascii to decimal
    int dt=0;
    for (int i=4; i<6; i++){
        if (compileDate[i] != ' '){
            dt = dt*10 + (compileDate[i]-48);
        }
    }
    return dt;
}
int date = decideDate();

//get compile year in integers
int decideYear(){
    //get year, converting from ascii to decimal
    int yr = 0;
    for (int i=7; i<11; i++){
        yr = yr*10 + (compileDate[i]-48);
    }
    return yr;
}
int year = decideYear();

// number of days in a month
int get_maxDays(int mon){
    //30 day months
    if (mon==4 || mon==6 || mon==9 || mon==11){
        return 30;
    }

    //special case on Feb
    else if (mon==2){
        if (year%4==0){
            return 29;
        }
        else {
            return 28;
        }
    }

    //31 day months
    else {
        return 31;
    }
}
int maxDays = get_maxDays(month);
const int maxMonth = 12;

//next month
void checkMonth(){
    if (date > maxDays){
        date -= maxDays;                //1st new month
        month++;                        //new month
        maxDays = get_maxDays(month);   //new month's maxDays
    }
}

//next year
void checkYear(){
    if (month > maxMonth){
        month -= maxMonth;  //Jan new year
        year++;             //new year
    }
}

//when hit 00:00 next day, date++
//checkMonth() and checkYear() every date++

//today (idk how to do this)
string today(){
    return string(months[month-1]) + "" "" + to_string(date) + "" "" + to_string(year);
}

int main(){
    cout << compileDate << endl;
    cout << months[month-1] << ' ' << date << ' ' << year << endl; //i want the today function to output this thing
    cout << today() << endl;
    return 0;
}"
