id,title,username,language,date,content
nqv4ZTjq,AoC/2023/Day04Pt1.kt,jdcook3,Kotlin,Thursday 1st of February 2024 11:55:33 PM CDT,"fun main() {

    val reg = Regex(""[\\d]+"")
    fun getNumberOfWins(input: String): Int {
        val (winning, held) = input.split("": "")[1].split("" | "")

        val winningSet = reg.findAll(winning).map { it.groupValues[0] }.toList();
        val heldSet = reg.findAll(held).map { it.groupValues[0] }.toList();

        return winningSet.intersect(heldSet).size
    }

	// Using val because I think the alternative makes solution harder to read.
    val zeroAsDouble = 0.toDouble()

    fun part1(input: List<String>): Int {
        val output = input.map { getNumberOfWins(it) } // get match count for each card
            .map { n ->
                if (n > 0) 2.toDouble().pow(n - 1) // score the card if any matches
                else zeroAsDouble // 0 if none
            }
            .sum() // sum

        return output.toInt();
    }

    val input = Path(""src/Day04.txt"").readLines()
    part1(input).println()
}"
tTefj3Jp,PetLookup Template by Toshi (2024),Toshiroo,CSS,Thursday 1st of February 2024 11:38:57 PM CDT,"<div id=""bg"" style=""position: fixed;"">
<img src=""BACKGROUND_URL.jpg"">
</div>

<style>
a, b, span, div, .contentModuleContent.medText img {
     color: #2E00FF !important;
}
p, font, td, .jl, body, #pet_desc, #creditos {
     color: #000000 !important;
}
</style>


<div id=""pet_desc"">

<img class=""pet_pic"" src=""https://pets.neopets.com/cpn/PET_NAME/1/6.png"" >

<p>Lorem ipsum dolor sit amet. Aut culpa iste <strong>Aut libero non provident laboriosam non dolorem enim eos quasi soluta</strong>. Ut sint cunque <em>Aut eligendi et suscipit rerum ea quia blanditiis ea quos perferendis</em>. </p><p>Sed laborum veniam ut quas blanditiis <a href=""home/index.phtml"">Id quas qui odit laborum</a>. Sed harum reprehenderit ut autem tempore <em>Et quas non aliquam sint ut quidem dicta</em>. Rem nostrum vero <strong>Aut tempore aut dignissimos ipsum non ducimus laboriosam</strong> et quidem harum eum nemo impedit qui maiores earum. </p><ul><li>Ut delectus fugiat vel aspernatur illum aut nisi quia. </li><li>Sed dolore error qui aliquam quas? </li><li>Ad molestiae quos ea ipsa suscipit qui fuga aliquam non assumenda consequuntur. </li></ul>

<img src=""https://images.neopets.com/items/nostalgic_royalgirl_shoyru.gif"">
<img src=""https://images.neopets.com/items/nostalgic_royalboy_shoyru.gif"">
<img src=""https://images.neopets.com/items/nostalgic_faerie_shoyru.gif"">
<br>

</div>

<br>

<div id=""creditos"" style=""width: 250px"">
✨ Template coded by <a href=""userlookup.phtml?user=toshiroo""> <b>Toshiro</b> </a> ✨
</div>


<style>
#content {border: 3px solid;width: 660px;background: url(""https://i.imgur.com/kZuSOtd.png"") repeat;margin: 20px auto 0 !important;}#main {border: 0;background: none;margin: 20px auto;}td, .jl, .contentModuleTable, .contentModule, #CustomNeopetView img{border: none !important;}td {margin: 10px 20px 0 !important;}.contentModuleTable, .contentModule {background: none;width: 605px !important;}.contentModuleContent, table {border: 0 !important;background: none;width: 580px !important;text-align: center;margin-top: 10px;}td.content div{font-family: Stencil !important;font-size: 28px !important;}#WornItemsPopup p{text-align: center;}a, b, p, font, td, .jl, body, #pet_desc, #creditos {font-size: 13px !important;font-family: verdana !important;line-height: 12pt !important;}p, #pet_desc, #pet_desc a, #pet_desc b {font-size: 11px !important;}p, ul {text-align: justify;}a:hover {text-decoration: underline;}.jl {text-align: center;margin-top: -7px !important;width:100%;}#bg {top: 0;left: -50%;width: 200%;height: 200%;z-index:-1;}#bg img {width: 50%;min-height: 50%;}.content td {display: block;}.content table td td {display: table-cell;}.content table {margin-top: -5px !important;margin-bottom: -10px !important;}.contentModuleContent.medText img {border: 2px solid;}img[src*=""trophies""] {width: 70px !important;height: 70px !important;border: 2px solid;margin: 10px 10px 0px 10px;}#pet_desc, #creditos{width: 560px;background: url(""https://i.imgur.com/kZuSOtd.png"") repeat;border: 1px solid;padding: 5px 20px;margin: auto;}.pet_pic {width: 80px;height:80px;border: 1px solid #585858;padding: 2px;float:left;margin: 10px 15px 0px 0px;}#navpopupshade__2020, img[src*=""question_mark""], #ban, #header, .moreLink, .sidebar, .contentModuleContent table img, #footer, hr, #superfooter, .contentModuleHeader, .contentModuleHeaderAlt, #jl, #pet_rating, #pet_rating img, img[src*=""zapped""] {display: none !important;}
</style>"
Zp1chXuh,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Thursday 1st of February 2024 11:34:13 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_307300.pdf
 
Working as of
02 February 2024"
4Mkb47et,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Thursday 1st of February 2024 11:05:04 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://claim-netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://claim-netdrop.netlify.app/

799725"
vvfttjsm,CombatClient,JesterRLI,Lua,Thursday 1st of February 2024 09:37:54 PM CDT,"function Module.LightAttack()
	if Attacking then
		return			
	end
	
	local TimeElapsed = Globals.Cooldowns.LightAttack and tick() - Globals.Cooldowns.LightAttack 	
	
	if not TimeElapsed then
		Globals.Cooldowns.LightAttack = math.huge
		TimeElapsed = Globals.Cooldowns.LightAttack
	end
	
	if TimeElapsed >= Globals.WeaponData.Cooldowns.Reset then
		Combo = 1
	elseif Combo < Globals.WeaponData.ComboLimit and TimeElapsed >= Globals.WeaponData.Cooldowns.Light then
		Combo += 1
	else
		return
	end	
	
	Attacking = true
	
	if MarkerSignal and MarkerSignal.Connected then
		MarkerSignal:Disconnect()
		MarkerSignal = nil
	end
	
	if Heartbeat and Heartbeat.Connected then
		Heartbeat:Disconnect()
		Heartbeat = nil
	end
	
	local Track = AnimationHandler.PlayAnimation({
		Target = Globals.Character,
		Animation = game.ReplicatedStorage.Shared.WeaponData.Animations[`LMB{Combo}`]
	})
	
	Globals.Character:SetAttribute(""State"", ""Attacking"")
	
	MarkerSignal = Track:GetMarkerReachedSignal(""ScanHit""):Once(function()
		local Hitbox = Assets.Hitbox:Clone()				
		Hitbox:PivotTo(Globals.Character.HumanoidRootPart.CFrame * Globals.WeaponData.Offset)				
		Hitbox.Parent = Globals.Character
		
		local TimeElapsed = 0
		local Enemies = {}
		
		Heartbeat = RunService.Heartbeat:Connect(function(dt)
			TimeElapsed += dt
			
			if TimeElapsed >= Globals.WeaponData.Lifetime then
				Cleanup(Hitbox)
			end
			
			if Globals.Character:GetAttribute(""State"") ~= ""Attacking"" then
				Cleanup(Hitbox)
				return
			end 
			
			Hitbox:PivotTo(Globals.Character.HumanoidRootPart.CFrame * Globals.WeaponData.Offset)
			
			-- Update this incase there was a new addition to the live folder
			Params.FilterDescendantsInstances = {workspace.Entities.Live}						
			local QueryResult = workspace:GetPartBoundsInBox(Hitbox.CFrame, Hitbox.Size, Params)
			
			for _, Enemy in QueryResult do
				Enemy = Enemy:FindFirstAncestorOfClass(""Model"")
				local EntityID = Enemy:GetAttribute(""EntityID"")
				
				if not Enemy then
					continue
				elseif not EntityID then
					continue
				elseif Enemies[EntityID] then
					continue
				elseif Enemy.Name == Globals.Character.Name then
					continue
				end
				
				Enemies[EntityID] = true
				HitFX(Enemy)
				--Remotes.SendEnemies:FireServer(Enemy)
			end						
		end)
				
		Remotes.InitiateAttack:FireServer(Combo, workspace:GetServerTimeNow())		
		
		ReconcileSignal = Remotes.Reconcile.OnClientEvent:Once(function(ActualEnemies)
			Reconcile(Enemies, ActualEnemies)
		end)
		
		DeclineSignal = Remotes.DeclineAttack.OnClientEvent:Once(function()
			Cleanup(Hitbox)
			Combo -= 1			
		end)
	end)
end"
vAwMX410,Complete Document Checklist for Parent Visa Application in 2024,ONEderland,HTML,Thursday 1st of February 2024 08:03:25 PM CDT,https://onederland.com.au/complete-document-checklist-for-parent-visa/
GYsPJsCd,Untitled,jabela,Python,Thursday 1st of February 2024 08:03:18 PM CDT,"# Declare the arrays
Days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]
Readings = [[0.0 for j in range(24)] for i in range(7)]  # Initialize Readings with zeros
AverageTemp = [0.0 for i in range(7)]
"
vB8Zk5vA,888 Visa Australia Update,ONEderland,HTML,Thursday 1st of February 2024 08:01:32 PM CDT,https://onederland.com.au/888-visa-australia-update/
1ctJicDE,Onshore Parent Visa Australia Options,ONEderland,HTML,Thursday 1st of February 2024 07:59:15 PM CDT,https://onederland.com.au/onshore-parent-visa-options/
7Aq16CWN,suporte-jdev-marcio-mentoria-loja-virtual,tadeuespindola,PostgreSQL,Thursday 1st of February 2024 07:50:29 PM CDT,"INSERT INTO public.acesso(
id, descricao)
VALUES (1, 'ROLE_ADMIN');
	
INSERT INTO public.pessoa_juridica(
id, email, nome, telefone, tipo_pessoa, empresa_id, categoria, cnpj, insc_estadual, insc_municipal, nome_fantasia, razao_social)
VALUES (1, 'cobradev.cursos@gmail.com', 'CobraDev', '61986473913', 'JURÍDICA', null, 'cursos', '98736576000156', '765876', '8765432', 'CobraDev', 'CobraDev Cursos');
	
INSERT INTO public.pessoa_fisica(
id, email, nome, telefone, tipo_pessoa, empresa_id, cpf, data_nascimento)
VALUES (2, 'tadeupalermoti@gmail.com', 'Tadeu E. P.','61986473913', 'FÍSICA', 1, '76548765432', '1985-09-16');

INSERT INTO public.usuario(
id, data_atual_senha, login, senha, empresa_id, pessoa_id)
VALUES (1, '2024-02-01', 'tadeupalermoti@gmail.com', '$2a$10$2uDOKzgJylvfTm4sZ1URGei86K364RJLNWoryWPsSfJhcGBQCJavW', 1, 2);

INSERT INTO public.usuarios_acesso(
usuario_id, acesso_id)
VALUES (1, 1);"
TAyLgzEq,TunePlay 1.0 for ComputerCraft,FreekBes,Lua,Thursday 1st of February 2024 07:10:32 PM CDT,"-- (C) 2023 Freekeh99, All Rights Reserved.

-- Memory
local nowplaying = nil
local nostalgiamode = false

-- Text functions
local function centerText(text, y)
  local x = (term.getSize() - string.len(text)) / 2
  term.setCursorPos(x, y)
  term.write(text)
  -- Reset cursor position
  term.setCursorPos(1, 1)
end

local function optionsText(key, text, y)
  local x = 3
  term.setCursorPos(x, y)
  term.write(""["" .. key .. ""] "" .. text)
end

-- Number key convertion to number
local function numberKey(key)
  if key == keys.one then
    return 1
  elseif key == keys.two then
    return 2
  elseif key == keys.three then
    return 3
  elseif key == keys.four then
    return 4
  elseif key == keys.five then
    return 5
  elseif key == keys.six then
    return 6
  elseif key == keys.seven then
    return 7
  elseif key == keys.eight then
    return 8
  elseif key == keys.nine then
    return 9
  elseif key == keys.zero then
    return 0
  end
  return nil
end

-- Draw the main menu.
-- It displays the program name and waits for the user to press Enter.
local function drawMenu()
  term.clear()
  term.setCursorPos(1, 1)
  centerText(""Welcome to TunePlay v1.0"", 1)
  centerText(""Press Enter to view options"", 3)
  if nowplaying ~= nil then
    centerText(""Now playing:"", 5)
    centerText(song_titles[nowplaying], 6)
  end
end

-- Draw the options menu on Enter press.
local function drawOptionsMenu()
  term.clear()
  term.setCursorPos(1, 1)
  centerText(""TunePlay Options"", 1)
  if nowplaying ~= nil then
    optionsText(""P"", ""Choose another song"", 3)
  else
    optionsText(""P"", ""Choose a song"", 3)
  end
  if nostalgiamode then
    optionsText(""N"", ""Disable nostalgia mode"", 4)
  else
    optionsText(""N"", ""Enable nostalgia mode"", 4)
  end
  optionsText(""B"", ""Back to main menu"", 5)
  optionsText(""Q"", ""Exit"", 6)
end

-- Array of all the songs available.
songs = {
    ""music.creative"",
    ""music.credits"",
    ""music.dragon"",
    ""music.end"",
    ""music.game"",
    ""music.menu"",
    ""music.nether.basalt_deltas"",
    ""music.nether.crimson_forest"",
    ""music.nether.nether_wastes"",
    ""music.nether.soul_sand_valley"",
    ""music.nether.warped_forest"",
    ""music.overworld.deep_dark"",
    ""music.overworld.dripstone_caves"",
    ""music.overworld.frozen_peaks"",
    ""music.overworld.grove"",
    ""music.overworld.jagged_peaks"",
    ""music.overworld.lush_caves"",
    ""music.overworld.meadow"",
    ""music.overworld.old_growth_taiga"",
    ""music.overworld.snowy_slopes"",
    ""music.overworld.stony_peaks"",
    ""music.overworld.swamp"",
    ""music.under_water"",
    ""music_disc.11"",
    ""music_disc.13"",
    ""music_disc.5"",
    ""music_disc.blocks"",
    ""music_disc.cat"",
    ""music_disc.chirp"",
    ""music_disc.far"",
    ""music_disc.mall"",
    ""music_disc.mellohi"",
    ""music_disc.otherside"",
    ""music_disc.pigstep"",
    ""music_disc.stal"",
    ""music_disc.strad"",
    ""music_disc.wait"",
    ""music_disc.ward""
}

song_titles = {
    ""Shuffle creative music"",
    ""C418 - Alpha"",
    ""C418 - Dragon Fight"",
    ""C418 - The End"",
    ""Shuffle survival music"",
    ""Shuffle menu music"",
    ""Shuffle Nether Basalt Deltas music"",
    ""Shuffle Nether Crimson Forest music"",
    ""Shuffle Nether Nether Wastes music"",
    ""Shuffle Nether Soul Sand Valley music"",
    ""Shuffle Nether Warped Forest music"",
    ""Shuffle Deep Dark music"",
    ""Shuffle Dripstone Caves music"",
    ""Shuffle Frozen Peaks music"",
    ""Shuffle Grove music"",
    ""Shuffle Jagged Peaks music"",
    ""Shuffle Lush Caves music"",
    ""Shuffle Meadow music"",
    ""Shuffle Old Growth Taiga music"",
    ""Shuffle Snowy Slopes music"",
    ""Shuffle Stony Peaks music"",
    ""Shuffle Swamp music"",
    ""Shuffle underwater music"",
    ""C418 - 11"",
    ""C418 - 13"",
    ""Samuel Aberg - 5"",
    ""C418 - Blocks"",
    ""C418 - Cat"",
    ""C418 - Chirp"",
    ""C418 - Far"",
    ""C418 - Mall"",
    ""C418 - Mellohi"",
    ""Lena Raine - Otherside"",
    ""Lena Raine - Pigstep"",
    ""C418 - Stal"",
    ""C418 - Strad"",
    ""C418 - Wait"",
    ""C418 - Ward""
}

-- Draw music list, paginated
local function drawMusicList(page)
  term.clear()
  term.setCursorPos(1, 1)
  centerText(""Choose a song"", 1)
  local i = 1
  local y = 3
  local max = 10
  local start = (page - 1) * max + 1
  local stop = page * max
  local j = 0
  for i = start, stop do
    if i > #songs then
      break
    end
    optionsText(j, song_titles[i], y)
    y = y + 1
    j = j + 1
  end
  y = y + 1
  if page > 1 then
    optionsText(""P"", ""Previous page"", y)
    y = y + 1
  end
  if stop < #songs then
    optionsText(""N"", ""Next page"", y)
  end
  optionsText(""B"", ""Back to main menu"", y + 1)
end

-- Play a song
local function playSong(song)
  local speakers = {peripheral.find ""speaker""}
  for _, speaker in ipairs(speakers) do
    if nostalgiamode then
      speaker.playSound(songs[song], 1.1, 0.84)
    else
      speaker.playSound(songs[song], 1.0, 1.0)
    end
  end
  nowplaying = song
end

-- Main loop
local function main()
  drawMenu()
  while true do
    local event, key = os.pullEvent(""key"")
    if key == keys.enter then
      drawOptionsMenu()
      while true do
        local event, key = os.pullEvent(""key"")
        if key == keys.p then
          local page = 1
          while true do
            drawMusicList(page)
            local event, key = os.pullEvent(""key"")
            if key == keys.p then
              if page > 1 then
                page = page - 1
              end
            elseif key == keys.n then
              if page < math.ceil(#songs / 10) then
                page = page + 1
              end
            elseif key == keys.b then
              drawMenu()
              break
            else
              -- Check if the key is a number
              local num = numberKey(key)
              if num ~= nil then
                local song = (page - 1) * 10 + num + 1
                playSong(song)
                -- Back to main menu
                drawMenu()
                break
              end
            end
          end
          break
        elseif key == keys.b then
          drawMenu()
          break
        elseif key == keys.n then
          nostalgiamode = not nostalgiamode
          drawOptionsMenu()
        elseif key == keys.q then
          -- Clear the screen and exit
          term.clear()
          return
        end
      end
    end
  end
end

main()
"
qpyserN3,splitHalfArray.js,c-mcbride,JavaScript,Thursday 1st of February 2024 06:57:08 PM CDT,"//Write a function splitHalfArray(array) that takes in an array as an argument and returns two halves of that array split in the middle. If the array has an odd number of elements, then the middle element should be excluded.
function splitHalfArray(array) {
    let middleIndex = Math.floor(array.length / 2);
    let leftHalf = array.slice(0, middleIndex);
    let rightHalf;

    if(array.length % 2 === 0) {
        rightHalf = array.slice(middleIndex);
    } else {
        rightHalf = array.slice(middleIndex + 1);
    }

    return [leftHalf, rightHalf];
}
console.log(splitHalfArray([1, 2, 3, 4, 5])) // => [ [ 1, 2 ], [ 4, 5 ] ]"
uTvHs69v,Low HP BGM,FiaPlay,Ruby,Thursday 1st of February 2024 06:51:55 PM CDT,"# Script creado por FiaPlay para Pokémon Essentials 16.3. Créditos si se usa.
#Para usar, simplemente pega todo esto en un nuevo script encima de Main.

PITCH_MUSIC=""Boss Battle 2"" #BGM de Low HP

class PokeBattle_Battler
  
  def hp=(v)
    @hp=v
    if 25>(100*@hp/@totalhp)&& (100*@hp/@totalhp)!=0 &&@battle.pbBelongsToPlayer?(@index)
      pbBGMPlay(PITCH_MUSIC)
    end
  end

  alias  pbInitPokemon_fp pbInitPokemon
  def pbInitPokemon(*args)
    pbInitPokemon_fp(*args)
    if 25>(100*@hp/@totalhp)&& (100*@hp/@totalhp)!=0 &&@battle.pbBelongsToPlayer?(@index)
      pbBGMPlay(PITCH_MUSIC)
    end
  end

end"
LWDU120e,preproc2,prizrak567890,C++,Thursday 1st of February 2024 06:43:44 PM CDT,"#include <cassert>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <regex>
#include <sstream>
#include <string>
#include <vector>
using namespace std;
using filesystem::path;

path operator""""_p(const char* data, std::size_t sz) {
    return path(data, data + sz);
}


string obpath(path in_file) {

    string obspath = in_file.string();

    for (int i = obspath.size() - 1; i > 0 - 1; i--) {
        if (obspath[i] != '\\' && obspath[i] != '/') {
            obspath.resize(i);
        }
        else {
            break;
        }
    }
    return obspath;
}

// напишите эту функцию
bool Preprocess(const path& in_file, const path& out_file, const vector<path>& include_directories) {

    ifstream input(in_file);
    if (!input.is_open()) {
        return false;
    }
    
    ofstream out(out_file);
    smatch coincidences;
    regex local_reg(R""/(\s*#\s*include\s*""([^""]*)""\s*)/"");
    regex remote_reg(R""/(\s*#\s*include\s*<([^>]*)>\s*)/"");

    string line;
    int number_line = 0;
    while (getline(input, line)) {
        number_line += 1;
        if (regex_match(line, coincidences, local_reg)) {
            if (coincidences.size() > 1) {
                string obspath = obpath(in_file);
                obspath += coincidences[1];
                string p2 = ""sources\\include2\\"";
                p2 += coincidences[1];
                if (filesystem::exists(obspath) || filesystem::exists(p2)) {
                    //когда нашли файл
                    Preprocess(obspath, out_file, include_directories);

                }
                else {
                    cout << ""unknown include file ""<< coincidences[1] << "" at file ""<< in_file.string() << "" at line "" << number_line << endl;
                    return false;
                }
            }
        }
        else if (regex_match(line, coincidences, remote_reg)) {
            if (coincidences.size() > 1) {
                string p = ""sources\\include1\\"";
                p += coincidences[1];
                if (filesystem::exists(p)) {
                    //когда нашли файл
                    Preprocess(p, out_file, include_directories);
                }
                else {
                    cout << ""unknown include file "" << coincidences[1] << "" at file "" << in_file.string() << "" at line "" << number_line << endl;
                    return false;
                }
            }
        }
        else {
            cout << line << endl;
        }
    }
    return true;
    
}




string GetFileContents(string file) {
    ifstream stream(file);

    // конструируем string по двум итераторам
    return { (istreambuf_iterator<char>(stream)), istreambuf_iterator<char>() };
}

void Test() {
    error_code err;
    filesystem::remove_all(""sources""_p, err);
    filesystem::create_directories(""sources""_p / ""include2""_p / ""lib""_p, err);
    filesystem::create_directories(""sources""_p / ""include1""_p, err);
    filesystem::create_directories(""sources""_p / ""dir1""_p / ""subdir""_p, err);

    {
        ofstream file(""sources/a.cpp"");
        file << ""// this comment before include\n""
            ""#include \""dir1/b.h\""\n""
            ""// text between b.h and c.h\n""
            ""#include \""dir1/d.h\""\n""
            ""\n""
            ""int SayHello() {\n""
            ""    cout << \""hello, world!\"" << endl;\n""
            ""#   include<dummy.txt>\n""
            ""}\n""s;
    }
    {
        ofstream file(""sources/dir1/b.h"");
        file << ""// text from b.h before include\n""
            ""#include \""subdir/c.h\""\n""
            ""// text from b.h after include""s;
    }
    {
        ofstream file(""sources/dir1/subdir/c.h"");
        file << ""// text from c.h before include\n""
            ""#include <std1.h>\n""
            ""// text from c.h after include\n""s;
    }
    {
        ofstream file(""sources/dir1/d.h"");
        file << ""// text from d.h before include\n""
            ""#include \""lib/std2.h\""\n""
            ""// text from d.h after include\n""s;
    }
    {
        ofstream file(""sources/include1/std1.h"");
        file << ""// std1\n""s;
    }
    {
        ofstream file(""sources/include2/lib/std2.h"");
        file << ""// std2\n""s;
    }

    assert((!Preprocess(""sources""_p / ""a.cpp""_p, ""sources""_p / ""a.in""_p,
        { ""sources""_p / ""include1""_p,""sources""_p / ""include2""_p })));

    ostringstream test_out;
    test_out << ""// this comment before include\n""
        ""// text from b.h before include\n""
        ""// text from c.h before include\n""
        ""// std1\n""
        ""// text from c.h after include\n""
        ""// text from b.h after include\n""
        ""// text between b.h and c.h\n""
        ""// text from d.h before include\n""
        ""// std2\n""
        ""// text from d.h after include\n""
        ""\n""
        ""int SayHello() {\n""
        ""    cout << \""hello, world!\"" << endl;\n""s;

    assert(GetFileContents(""sources/a.in""s) == test_out.str());
}

int main() {
    Test();
}"
deXPZBxq,Untitled,Rofyda_Elghadban1,C++,Thursday 1st of February 2024 06:41:31 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */

 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  ll n,k;
  cin>>n>>k;
  vector<ll>v(n),ans;
  cin(v);
  ll l=0,r=n,num=0,cost=0;
  while(l<=r){
    ll mid=l+(r-l)/2,sum=0;
    for(ll i=0;i<n;i++){
      ans.push_back(v[i]+mid*(i+1));
    }
    sort(all(ans));
    for(ll i=0;i<mid;i++){
      sum+=ans[i];
    }
    if(sum<=k){
      num=mid;
      cost=sum;
      l=mid+1;
    }else{
      r=mid-1;
    }
    ans.clear();
  }
  cout<<num<<"" ""<<cost<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }"
3cpvfqc7,2024-02-01_stats.json,rdp_snitch,JSON,Thursday 1st of February 2024 06:18:18 PM CDT,"{
  ""ip"": {
    ""94.232.45.94"": 3,
    ""187.190.60.112"": 3,
    ""43.245.205.25"": 6,
    ""167.94.138.35"": 3,
    ""106.116.169.71"": 6,
    ""87.251.75.145"": 9,
    ""198.235.24.92"": 9,
    ""62.204.41.195"": 24,
    ""139.59.185.252"": 3,
    ""167.248.133.33"": 3,
    ""45.227.254.8"": 6,
    ""23.95.128.167"": 3,
    ""194.26.29.48"": 3,
    ""185.170.144.3"": 6,
    ""173.239.214.228"": 3,
    ""194.165.16.78"": 6,
    ""216.24.210.50"": 3,
    ""196.190.117.7"": 6,
    ""198.235.24.218"": 9,
    ""20.127.129.84"": 3,
    ""47.97.250.171"": 3,
    ""167.94.146.53"": 3,
    ""217.119.20.150"": 6,
    ""39.98.127.243"": 12,
    ""141.98.11.156"": 3,
    ""167.94.138.50"": 3,
    ""152.32.180.98"": 3,
    ""45.227.254.49"": 6,
    ""157.230.143.145"": 12,
    ""68.183.175.171"": 3,
    ""45.227.254.54"": 6,
    ""205.210.31.139"": 9,
    ""113.200.79.70"": 3,
    ""147.135.91.23"": 6,
    ""45.93.20.204"": 9,
    ""185.73.125.22"": 6,
    ""94.102.61.23"": 3,
    ""103.161.173.176"": 18,
    ""103.161.173.169"": 9,
    ""43.128.12.208"": 3,
    ""205.210.31.204"": 9,
    ""134.209.48.237"": 3
  },
  ""asn"": {
    ""AS212482"": 3,
    ""AS22884"": 3,
    ""AS9260"": 6,
    ""AS398324"": 9,
    ""AS4134"": 6,
    ""AS208091"": 15,
    ""AS396982"": 36,
    ""AS59425"": 24,
    ""AS14061"": 21,
    ""AS267784"": 18,
    ""AS36352"": 3,
    ""AS206728"": 3,
    ""AS197414"": 6,
    ""AS62240"": 6,
    ""AS48721"": 6,
    ""AS24757"": 6,
    ""AS8075"": 3,
    ""AS37963"": 15,
    ""AS398705"": 3,
    ""AS31376"": 6,
    ""AS209605"": 3,
    ""AS135377"": 3,
    ""AS4837"": 3,
    ""AS16276"": 6,
    ""AS57523"": 9,
    ""AS202425"": 3,
    ""AS135951"": 27,
    ""AS132203"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 24,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Multinet 43-205/24"": 6,
    ""Censys, Inc."": 12,
    ""Chinanet"": 6,
    ""Google LLC"": 36,
    ""Horizon LLC"": 24,
    ""DIGITALOCEAN"": 3,
    ""Flyservers S.A."": 24,
    ""HostPapa"": 3,
    ""Media Land LLC"": 3,
    ""LogicWeb Inc."": 3,
    ""Clouvider Limited"": 3,
    ""Ethiotelecom"": 6,
    ""Microsoft Corporation"": 3,
    ""Hangzhou Alibaba Advertising Co"": 15,
    ""Smart Telecom Company"": 6,
    ""UAB Host Baltic"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""DigitalOcean, LLC"": 18,
    ""CNC Group CHINA169 Shannxi Province Network"": 3,
    ""OVH SAS"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IP Volume inc"": 3,
    ""MINHHIEN"": 27,
    ""Aceville Pte.ltd"": 3
  },
  ""org"": {
    ""Dmitriy Panchenko"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Unknown"": 21,
    ""Censys, Inc"": 6,
    ""Chinanet HE"": 6,
    ""Xhost Internet Solutions"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 24,
    ""DigitalOcean, LLC"": 21,
    ""Censys, Inc."": 6,
    ""UAB Host Baltic"": 18,
    ""ColoCrossing"": 3,
    ""Media Land LLC"": 3,
    ""Xhostis"": 12,
    ""NSQ-VENTURE"": 3,
    ""Flyservers S.A"": 6,
    ""IPXO"": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Aliyun Computing Co., LTD"": 15,
    ""Smart Telecom Company"": 6,
    ""UCloud (HK) Holdings Group Limited"": 3,
    ""OVH US LLC"": 6,
    ""Starcrecium Limited"": 9,
    ""AI Spera"": 3,
    ""Minh Hien Solutions Company Limited"": 27
  },
  ""regionName"": {
    ""Perm Krai"": 3,
    ""Hidalgo"": 3,
    ""Sindh"": 6,
    ""Michigan"": 9,
    ""Hebei"": 6,
    ""North Holland"": 18,
    ""California"": 57,
    ""Moscow"": 33,
    ""England"": 9,
    ""Vilnius"": 18,
    ""New York"": 3,
    ""St.-Petersburg"": 9,
    ""New Jersey"": 3,
    ""Kaunas"": 9,
    ""Addis Ababa"": 6,
    ""Virginia"": 9,
    ""Zhejiang"": 3,
    ""Hesse"": 3,
    ""Beijing"": 12,
    ""Dubai"": 3,
    ""Shaanxi"": 3,
    ""Ho Chi Minh"": 27,
    ""Central and Western District"": 3
  },
  ""country"": {
    ""Russia"": 45,
    ""Mexico"": 3,
    ""Pakistan"": 6,
    ""United States"": 81,
    ""China"": 24,
    ""The Netherlands"": 18,
    ""United Kingdom"": 9,
    ""Lithuania"": 27,
    ""Ethiopia"": 6,
    ""Germany"": 3,
    ""United Arab Emirates"": 3,
    ""Vietnam"": 27,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""Administr"": 30,
    ""rqvlSIy"": 3,
    ""(empty)"": 39,
    ""gGFxFyMdS"": 3,
    ""cvlWIg"": 3,
    ""XMqLMC"": 3,
    ""Test"": 42,
    ""hello"": 54,
    ""zEZfLVevY"": 3,
    ""khaVBy"": 3,
    ""AWMbsi"": 3,
    ""Domain"": 27,
    ""Administrator"": 3,
    ""ro51ujpl"": 12,
    ""beio"": 6,
    ""jgPzsAPSo"": 3,
    ""scuLHb"": 3,
    ""LCLeOa"": 3,
    ""nmap"": 3,
    ""iZDdtXMyc"": 3,
    ""vFvHms"": 3,
    ""GbLyHQ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 255
  },
  ""client_build"": {
    ""Unknown"": 255
  },
  ""client_name"": {
    ""Unknown"": 255
  },
  ""ip_type"": {
    ""proxy"": 12,
    ""Unknown"": 147,
    ""hosting"": 69,
    ""hosting & proxy"": 24,
    ""mobile & hosting & proxy"": 3
  }
}"
QrYvpEGH,preproc,prizrak567890,C++,Thursday 1st of February 2024 06:16:31 PM CDT,"#include <cassert>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <regex>
#include <sstream>
#include <string>
#include <vector>
using namespace std;
using filesystem::path;

path operator""""_p(const char* data, std::size_t sz) {
    return path(data, data + sz);
}


// напишите эту функцию
bool Preprocess(const path& in_file, const path& out_file, const vector<path>& include_directories) {

    ifstream input(in_file);
    if (!input.is_open()) {
        return false;
    }
    
    string obspath = in_file.string();
    
    for (int i = obspath.size()-1; i > 0 - 1;i--) {
        if (obspath[i] != '\\' && obspath[i] != '/') {
            obspath.resize(i);
        }
        else {
            break;
        }
    }
    

    smatch coincidences;
    regex local_reg(R""/(\s*#\s*include\s*""([^""]*)""\s*)/"");
    regex remote_reg(R""/(\s*#\s*include\s*<([^>]*)>\s*)/"");

    string line;
    int number_line = 0;
    while (getline(input, line)) {
        number_line += 1;
        if (regex_match(line, coincidences, local_reg)) {
            if (coincidences.size() > 1) {
                obspath += coincidences[1];
                
                if (filesystem::exists(obspath)) {
                    //когда нашли файл
                    Preprocess(obspath, out_file, include_directories);

                }
                else {
                    cout << ""unknown include file ""<< coincidences[1] << "" at file ""<< in_file.string() << "" at line "" << number_line << endl;
                    //return false;
                }
            }
        }
        else if (regex_match(line, coincidences, remote_reg)) {
            if (coincidences.size() > 1) {
                obspath += coincidences[1];
                if (filesystem::exists(obspath)) {
                    //когда нашли файл
                    Preprocess(obspath, out_file, include_directories);
                }
                else {
                    cout << ""unknown include file "" << coincidences[1] << "" at file "" << in_file.string() << "" at line "" << number_line << endl;
                    //return false;
                }
            }
        }
        else {
            cout << line << endl;
        }
    }
    return true;
    
}




string GetFileContents(string file) {
    ifstream stream(file);

    // конструируем string по двум итераторам
    return { (istreambuf_iterator<char>(stream)), istreambuf_iterator<char>() };
}

void Test() {
    error_code err;
    filesystem::remove_all(""sources""_p, err);
    filesystem::create_directories(""sources""_p / ""include2""_p / ""lib""_p, err);
    filesystem::create_directories(""sources""_p / ""include1""_p, err);
    filesystem::create_directories(""sources""_p / ""dir1""_p / ""subdir""_p, err);

    {
        ofstream file(""sources/a.cpp"");
        file << ""// this comment before include\n""
            ""#include \""dir1/b.h\""\n""
            ""// text between b.h and c.h\n""
            ""#include \""dir1/d.h\""\n""
            ""\n""
            ""int SayHello() {\n""
            ""    cout << \""hello, world!\"" << endl;\n""
            ""#   include<dummy.txt>\n""
            ""}\n""s;
    }
    {
        ofstream file(""sources/dir1/b.h"");
        file << ""// text from b.h before include\n""
            ""#include \""subdir/c.h\""\n""
            ""// text from b.h after include""s;
    }
    {
        ofstream file(""sources/dir1/subdir/c.h"");
        file << ""// text from c.h before include\n""
            ""#include <std1.h>\n""
            ""// text from c.h after include\n""s;
    }
    {
        ofstream file(""sources/dir1/d.h"");
        file << ""// text from d.h before include\n""
            ""#include \""lib/std2.h\""\n""
            ""// text from d.h after include\n""s;
    }
    {
        ofstream file(""sources/include1/std1.h"");
        file << ""// std1\n""s;
    }
    {
        ofstream file(""sources/include2/lib/std2.h"");
        file << ""// std2\n""s;
    }

    assert((!Preprocess(""sources""_p / ""a.cpp""_p, ""sources""_p / ""a.in""_p,
        { ""sources""_p / ""include1""_p,""sources""_p / ""include2""_p })));

    ostringstream test_out;
    test_out << ""// this comment before include\n""
        ""// text from b.h before include\n""
        ""// text from c.h before include\n""
        ""// std1\n""
        ""// text from c.h after include\n""
        ""// text from b.h after include\n""
        ""// text between b.h and c.h\n""
        ""// text from d.h before include\n""
        ""// std2\n""
        ""// text from d.h after include\n""
        ""\n""
        ""int SayHello() {\n""
        ""    cout << \""hello, world!\"" << endl;\n""s;

    assert(GetFileContents(""sources/a.in""s) == test_out.str());
}

int main() {
    Test();
}"
Md4vyUNX,2024-02-01_stats.json,rdp_snitch,JSON,Thursday 1st of February 2024 06:16:15 PM CDT,"{
  ""ip"": {
    ""94.232.45.94"": 2,
    ""187.190.60.112"": 2,
    ""43.245.205.25"": 4,
    ""167.94.138.35"": 2,
    ""106.116.169.71"": 4,
    ""87.251.75.145"": 6,
    ""198.235.24.92"": 6,
    ""62.204.41.195"": 16,
    ""139.59.185.252"": 2,
    ""167.248.133.33"": 2,
    ""45.227.254.8"": 4,
    ""23.95.128.167"": 2,
    ""194.26.29.48"": 2,
    ""185.170.144.3"": 4,
    ""173.239.214.228"": 2,
    ""194.165.16.78"": 4,
    ""216.24.210.50"": 2,
    ""196.190.117.7"": 4,
    ""198.235.24.218"": 6,
    ""20.127.129.84"": 2,
    ""47.97.250.171"": 2,
    ""167.94.146.53"": 2,
    ""217.119.20.150"": 4,
    ""39.98.127.243"": 8,
    ""141.98.11.156"": 2,
    ""167.94.138.50"": 2,
    ""152.32.180.98"": 2,
    ""45.227.254.49"": 4,
    ""157.230.143.145"": 8,
    ""68.183.175.171"": 2,
    ""45.227.254.54"": 4,
    ""205.210.31.139"": 6,
    ""113.200.79.70"": 2,
    ""147.135.91.23"": 4,
    ""45.93.20.204"": 6,
    ""185.73.125.22"": 4,
    ""94.102.61.23"": 2,
    ""103.161.173.176"": 12,
    ""103.161.173.169"": 6,
    ""43.128.12.208"": 2,
    ""205.210.31.204"": 6,
    ""134.209.48.237"": 2
  },
  ""asn"": {
    ""AS212482"": 2,
    ""AS22884"": 2,
    ""AS9260"": 4,
    ""AS398324"": 6,
    ""AS4134"": 4,
    ""AS208091"": 10,
    ""AS396982"": 24,
    ""AS59425"": 16,
    ""AS14061"": 14,
    ""AS267784"": 12,
    ""AS36352"": 2,
    ""AS206728"": 2,
    ""AS197414"": 4,
    ""AS62240"": 4,
    ""AS48721"": 4,
    ""AS24757"": 4,
    ""AS8075"": 2,
    ""AS37963"": 10,
    ""AS398705"": 2,
    ""AS31376"": 4,
    ""AS209605"": 2,
    ""AS135377"": 2,
    ""AS4837"": 2,
    ""AS16276"": 4,
    ""AS57523"": 6,
    ""AS202425"": 2,
    ""AS135951"": 18,
    ""AS132203"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 16,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Multinet 43-205/24"": 4,
    ""Censys, Inc."": 8,
    ""Chinanet"": 4,
    ""Google LLC"": 24,
    ""Horizon LLC"": 16,
    ""DIGITALOCEAN"": 2,
    ""Flyservers S.A."": 16,
    ""HostPapa"": 2,
    ""Media Land LLC"": 2,
    ""LogicWeb Inc."": 2,
    ""Clouvider Limited"": 2,
    ""Ethiotelecom"": 4,
    ""Microsoft Corporation"": 2,
    ""Hangzhou Alibaba Advertising Co"": 10,
    ""Smart Telecom Company"": 4,
    ""UAB Host Baltic"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 12,
    ""CNC Group CHINA169 Shannxi Province Network"": 2,
    ""OVH SAS"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""IP Volume inc"": 2,
    ""MINHHIEN"": 18,
    ""Aceville Pte.ltd"": 2
  },
  ""org"": {
    ""Dmitriy Panchenko"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Unknown"": 14,
    ""Censys, Inc"": 4,
    ""Chinanet HE"": 4,
    ""Xhost Internet Solutions"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 16,
    ""DigitalOcean, LLC"": 14,
    ""Censys, Inc."": 4,
    ""UAB Host Baltic"": 12,
    ""ColoCrossing"": 2,
    ""Media Land LLC"": 2,
    ""Xhostis"": 8,
    ""NSQ-VENTURE"": 2,
    ""Flyservers S.A"": 4,
    ""IPXO"": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Aliyun Computing Co., LTD"": 10,
    ""Smart Telecom Company"": 4,
    ""UCloud (HK) Holdings Group Limited"": 2,
    ""OVH US LLC"": 4,
    ""Starcrecium Limited"": 6,
    ""AI Spera"": 2,
    ""Minh Hien Solutions Company Limited"": 18
  },
  ""regionName"": {
    ""Perm Krai"": 2,
    ""Hidalgo"": 2,
    ""Sindh"": 4,
    ""Michigan"": 6,
    ""Hebei"": 4,
    ""North Holland"": 12,
    ""California"": 38,
    ""Moscow"": 22,
    ""England"": 6,
    ""Vilnius"": 12,
    ""New York"": 2,
    ""St.-Petersburg"": 6,
    ""New Jersey"": 2,
    ""Kaunas"": 6,
    ""Addis Ababa"": 4,
    ""Virginia"": 6,
    ""Zhejiang"": 2,
    ""Hesse"": 2,
    ""Beijing"": 8,
    ""Dubai"": 2,
    ""Shaanxi"": 2,
    ""Ho Chi Minh"": 18,
    ""Central and Western District"": 2
  },
  ""country"": {
    ""Russia"": 30,
    ""Mexico"": 2,
    ""Pakistan"": 4,
    ""United States"": 54,
    ""China"": 16,
    ""The Netherlands"": 12,
    ""United Kingdom"": 6,
    ""Lithuania"": 18,
    ""Ethiopia"": 4,
    ""Germany"": 2,
    ""United Arab Emirates"": 2,
    ""Vietnam"": 18,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""Administr"": 20,
    ""rqvlSIy"": 2,
    ""(empty)"": 26,
    ""gGFxFyMdS"": 2,
    ""cvlWIg"": 2,
    ""XMqLMC"": 2,
    ""Test"": 28,
    ""hello"": 36,
    ""zEZfLVevY"": 2,
    ""khaVBy"": 2,
    ""AWMbsi"": 2,
    ""Domain"": 18,
    ""Administrator"": 2,
    ""ro51ujpl"": 8,
    ""beio"": 4,
    ""jgPzsAPSo"": 2,
    ""scuLHb"": 2,
    ""LCLeOa"": 2,
    ""nmap"": 2,
    ""iZDdtXMyc"": 2,
    ""vFvHms"": 2,
    ""GbLyHQ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 170
  },
  ""client_build"": {
    ""Unknown"": 170
  },
  ""client_name"": {
    ""Unknown"": 170
  },
  ""ip_type"": {
    ""proxy"": 8,
    ""Unknown"": 98,
    ""hosting"": 46,
    ""hosting & proxy"": 16,
    ""mobile & hosting & proxy"": 2
  }
}"
6fBA2QBm,2024-02-01_stats.json,rdp_snitch,JSON,Thursday 1st of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""94.232.45.94"": 1,
    ""187.190.60.112"": 1,
    ""43.245.205.25"": 2,
    ""167.94.138.35"": 1,
    ""106.116.169.71"": 2,
    ""87.251.75.145"": 3,
    ""198.235.24.92"": 3,
    ""62.204.41.195"": 8,
    ""139.59.185.252"": 1,
    ""167.248.133.33"": 1,
    ""45.227.254.8"": 2,
    ""23.95.128.167"": 1,
    ""194.26.29.48"": 1,
    ""185.170.144.3"": 2,
    ""173.239.214.228"": 1,
    ""194.165.16.78"": 2,
    ""216.24.210.50"": 1,
    ""196.190.117.7"": 2,
    ""198.235.24.218"": 3,
    ""20.127.129.84"": 1,
    ""47.97.250.171"": 1,
    ""167.94.146.53"": 1,
    ""217.119.20.150"": 2,
    ""39.98.127.243"": 4,
    ""141.98.11.156"": 1,
    ""167.94.138.50"": 1,
    ""152.32.180.98"": 1,
    ""45.227.254.49"": 2,
    ""157.230.143.145"": 4,
    ""68.183.175.171"": 1,
    ""45.227.254.54"": 2,
    ""205.210.31.139"": 3,
    ""113.200.79.70"": 1,
    ""147.135.91.23"": 2,
    ""45.93.20.204"": 3,
    ""185.73.125.22"": 2,
    ""94.102.61.23"": 1,
    ""103.161.173.176"": 6,
    ""103.161.173.169"": 3,
    ""43.128.12.208"": 1,
    ""205.210.31.204"": 3,
    ""134.209.48.237"": 1
  },
  ""asn"": {
    ""AS212482"": 1,
    ""AS22884"": 1,
    ""AS9260"": 2,
    ""AS398324"": 3,
    ""AS4134"": 2,
    ""AS208091"": 5,
    ""AS396982"": 12,
    ""AS59425"": 8,
    ""AS14061"": 7,
    ""AS267784"": 6,
    ""AS36352"": 1,
    ""AS206728"": 1,
    ""AS197414"": 2,
    ""AS62240"": 2,
    ""AS48721"": 2,
    ""AS24757"": 2,
    ""AS8075"": 1,
    ""AS37963"": 5,
    ""AS398705"": 1,
    ""AS31376"": 2,
    ""AS209605"": 1,
    ""AS135377"": 1,
    ""AS4837"": 1,
    ""AS16276"": 2,
    ""AS57523"": 3,
    ""AS202425"": 1,
    ""AS135951"": 9,
    ""AS132203"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Multinet 43-205/24"": 2,
    ""Censys, Inc."": 4,
    ""Chinanet"": 2,
    ""Google LLC"": 12,
    ""Horizon LLC"": 8,
    ""DIGITALOCEAN"": 1,
    ""Flyservers S.A."": 8,
    ""HostPapa"": 1,
    ""Media Land LLC"": 1,
    ""LogicWeb Inc."": 1,
    ""Clouvider Limited"": 1,
    ""Ethiotelecom"": 2,
    ""Microsoft Corporation"": 1,
    ""Hangzhou Alibaba Advertising Co"": 5,
    ""Smart Telecom Company"": 2,
    ""UAB Host Baltic"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""DigitalOcean, LLC"": 6,
    ""CNC Group CHINA169 Shannxi Province Network"": 1,
    ""OVH SAS"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""IP Volume inc"": 1,
    ""MINHHIEN"": 9,
    ""Aceville Pte.ltd"": 1
  },
  ""org"": {
    ""Dmitriy Panchenko"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Unknown"": 7,
    ""Censys, Inc"": 2,
    ""Chinanet HE"": 2,
    ""Xhost Internet Solutions"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 8,
    ""DigitalOcean, LLC"": 7,
    ""Censys, Inc."": 2,
    ""UAB Host Baltic"": 6,
    ""ColoCrossing"": 1,
    ""Media Land LLC"": 1,
    ""Xhostis"": 4,
    ""NSQ-VENTURE"": 1,
    ""Flyservers S.A"": 2,
    ""IPXO"": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Aliyun Computing Co., LTD"": 5,
    ""Smart Telecom Company"": 2,
    ""UCloud (HK) Holdings Group Limited"": 1,
    ""OVH US LLC"": 2,
    ""Starcrecium Limited"": 3,
    ""AI Spera"": 1,
    ""Minh Hien Solutions Company Limited"": 9
  },
  ""regionName"": {
    ""Perm Krai"": 1,
    ""Hidalgo"": 1,
    ""Sindh"": 2,
    ""Michigan"": 3,
    ""Hebei"": 2,
    ""North Holland"": 6,
    ""California"": 19,
    ""Moscow"": 11,
    ""England"": 3,
    ""Vilnius"": 6,
    ""New York"": 1,
    ""St.-Petersburg"": 3,
    ""New Jersey"": 1,
    ""Kaunas"": 3,
    ""Addis Ababa"": 2,
    ""Virginia"": 3,
    ""Zhejiang"": 1,
    ""Hesse"": 1,
    ""Beijing"": 4,
    ""Dubai"": 1,
    ""Shaanxi"": 1,
    ""Ho Chi Minh"": 9,
    ""Central and Western District"": 1
  },
  ""country"": {
    ""Russia"": 15,
    ""Mexico"": 1,
    ""Pakistan"": 2,
    ""United States"": 27,
    ""China"": 8,
    ""The Netherlands"": 6,
    ""United Kingdom"": 3,
    ""Lithuania"": 9,
    ""Ethiopia"": 2,
    ""Germany"": 1,
    ""United Arab Emirates"": 1,
    ""Vietnam"": 9,
    ""Hong Kong"": 1
  },
  ""account"": {
    ""Administr"": 10,
    ""rqvlSIy"": 1,
    ""(empty)"": 13,
    ""gGFxFyMdS"": 1,
    ""cvlWIg"": 1,
    ""XMqLMC"": 1,
    ""Test"": 14,
    ""hello"": 18,
    ""zEZfLVevY"": 1,
    ""khaVBy"": 1,
    ""AWMbsi"": 1,
    ""Domain"": 9,
    ""Administrator"": 1,
    ""ro51ujpl"": 4,
    ""beio"": 2,
    ""jgPzsAPSo"": 1,
    ""scuLHb"": 1,
    ""LCLeOa"": 1,
    ""nmap"": 1,
    ""iZDdtXMyc"": 1,
    ""vFvHms"": 1,
    ""GbLyHQ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 85
  },
  ""client_build"": {
    ""Unknown"": 85
  },
  ""client_name"": {
    ""Unknown"": 85
  },
  ""ip_type"": {
    ""proxy"": 4,
    ""Unknown"": 49,
    ""hosting"": 23,
    ""hosting & proxy"": 8,
    ""mobile & hosting & proxy"": 1
  }
}"
PVPeBbYa,Geopoint,Zgragselus,C++,Thursday 1st of February 2024 06:00:46 PM CDT,"/// Geopoint class
///
/// Used for working with latitude/longitude and angles/distances. One instance
/// represents single geographic location.
class GeoPoint
{
public:
	double latitude;		/// Latitude on the spherical surface
	double longitude;		/// Longitude on the spherical surface

	/// Empty constructor
	GeoPoint()
	{
	}

	/// Constructor from latitude and longitude
	GeoPoint(double _lat, double _long)
	{
		latitude = (_lat * 3.14159265f / 180.0f);
		longitude = (_long * 3.14159265f / 180.0f);
	}

	/// Calculates distance between two geographic location, uses spherical geometry
	friend double distance(const GeoPoint& a, const GeoPoint& b)
	{
		double d = 2.0 * 6372795.477598 * asin(sqrt(pow(sin((b.latitude - a.latitude) / 2.0), 2.0) +
			cos(a.latitude) * cos(b.latitude) * pow(sin((b.longitude - a.longitude) / 2.0), 2.0)));
		return d;
	}

	/// Calculates angle from a to b related to equator
	friend double angle(const GeoPoint& a, const GeoPoint& b)
	{
		double z = log(tan(b.latitude / 2.0 + 3.14159265 / 4.0) / tan(a.latitude / 2.0 + 3.14159265 / 4.0));
		double x = a.longitude - b.longitude;
		if (x < 0.0)
		{
			x = -x;
		}
		return atan2(z, x);
	}

	/// Calculates direction from a to b (z being north-south, x being east-west)
	friend float4 direction(const GeoPoint& a, const GeoPoint& b)
	{
		float4 result = float4(0.0f);
		result.z = (float)log(tan(b.latitude / 2.0 + (double)M_PI / 4.0) / tan(a.latitude / 2.0 + (double)M_PI / 4.0));
		result.x = (float)(a.longitude - b.longitude);
		return result;
	}

	/// Calculates angle from a to b related to north
	friend double bearing(const GeoPoint& a, const GeoPoint& b)
	{
		double longitudeDiffRad = b.longitude - a.longitude;

		double y = sin(longitudeDiffRad) * cos(b.latitude);
		double x = cos(a.latitude)*sin(b.latitude) -
			sin(a.latitude)*cos(b.latitude)*cos(longitudeDiffRad);
		return atan2(y, x);
	}
};
"
y9AZTBZM,# tk_funky_rgb.py,here2share,Python,Thursday 1st of February 2024 05:48:40 PM CDT,"# tk_funky_rgb.py

import tkinter as tk
from PIL import Image, ImageTk, ImageFilter, ImageDraw

ww = 400
hh = 400
cx, cy = ww // 2, hh // 2

root = tk.Tk()
root.title(""tk_funky_rgb"")
root.geometry(""%dx%d+%d+%d"" % (ww, hh, 10, 10))
canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()
 
colors = []
t = [z for z in range(0, 256, 9)]
for r in t:
    for g in t:
        for b in t:
            colors += [(r, g, b, 255)]
Lc = len(colors)

def plot():
    photo = ImageTk.PhotoImage(buffer)
    canvas.create_image(cx, cy, anchor=tk.CENTER, image=photo)
    canvas.image = photo
    root.update()

def crop_center(crop=15):
	return img.crop((crop, crop, ww-crop, hh-crop))

p = 60
def generate_new_image():
	global idx
	size = 8
	for blur in '.'*4:
		img = Image.new(""RGB"", (size, size))
		pixels = img.load()
		for y in range(size):
			for x in range(size):
				color = colors.pop(idx**3)
				idx = (idx + 1) % 16
				pixels[x, y] = color
				colors.append(color)
		img = img.resize((ww+p, hh+p))
		size *= 2
	img = img.resize((ww, hh))
	return img

img = Image.new(""RGB"", (ww, hh), (128, 128, 128))
idx = 0
while 1:
	img = crop_center()
	img = img.resize((ww, hh), Image.BICUBIC)
	img = Image.blend(img, generate_new_image(), 0.05)
	buffer = img.filter(ImageFilter.GaussianBlur(5.0))
	buffer = buffer.point(lambda x: x // 25 * 40)
	plot()
	idx += 1"
CdQ9X1RP,Untitled,SizilStank,C#,Thursday 1st of February 2024 05:39:25 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cinemachine;
using UnityEditor;

public class vCmasSwitchingOnCollision : MonoBehaviour
{
    [SerializeField] private CinemachineVirtualCameraBase[] _vCams;
    [SerializeField] private int _vCamsIndex = 0;
    [SerializeField] private GameObject _player;

    private CinemachineVirtualCameraBase _cam;

    // Start is called before the first frame update
    void Start()
    {
        _cam = GetComponent<CinemachineVirtualCameraBase>();

        EventManager.CollisionEvent01 += SwitchVcam;
    }

    private void SwitchVcam()
    {
        _vCams[0].gameObject.SetActive(true);
    }

    //How can we Subcribe this event like we did EventManager.CollisionEvent01 += SwitchVcam;
    private void OnTriggerEnter(Collider other)
    {
        if (other.gameObject.CompareTag(""Player""))
        {
            Debug.Log(""!!!!"" + other.gameObject.name);
        }
    }
}
"
EnDK0x4r,Untitled,SizilStank,C#,Thursday 1st of February 2024 05:38:54 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cinemachine;

public class EventManager : MonoBehaviour
{
    
    public static event Action CollisionEvent01;

    public CinemachineVirtualCameraBase[] _vCams;
    public int _vCamsIndex = 0;


    //using this to text that the evet works
    private void Update()
    {
        if (Input.GetKeyDown(KeyCode.E))
        {
            CollisionEvent01();
        }
    }


    public static event Action CollisionEvent02;


}
"
2xmZpa0H,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Thursday 1st of February 2024 05:22:19 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 45, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 227, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 63, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1187, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/client.py"", line 574, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
FH1HnQXW,Untitled,Petar_Matev,JavaScript,Thursday 1st of February 2024 05:09:10 PM CDT,"function exam (input) {
  let hourOfExam = parseInt(input[0]);
  let minuteOfExam = parseInt(input[1]);
  let hourOfArrival = parseInt(input[2]);
  let minuteOfArrival = parseInt(input[3]);

  let ExamTime = (hourOfExam * 60) + minuteOfExam;
  let ArrivalTime = (hourOfArrival * 60) + minuteOfArrival;

  let diff = ExamTime - ArrivalTime;

  // Case 1: Where student is on time for this exam
  
  if (diff >= 0) {
    if (diff <= 30) {
      console.log(""On Time"")
      if (diff <= 30 && diff != 0) {
        console.log(`${diff} minutes before the start`)
      }
    } else if (diff > 30) {

      // Case 2: Where student is early for this exam

      console.log(""Early"")
      if (diff < 60) {
        console.log(`${diff} minutes before the start`)
      } else {
        let hour = Math.floor(diff / 60);
        let minutes = diff % 60;
        if (minutes <= 9) {
          console.log(`${hour}:0${minutes} hours before the start`)
        } else {
          console.log(`${hour}:${minutes} hours before the start`)
        }
        }
      }
    } else {

      // Case 3: Where student is late for this exam

      console.log(""Late"")
      let positiveDiff = diff * -1
      if (positiveDiff <= 59) {
        console.log(`${positiveDiff} minutes after the start`)
      } else {
        let hour = Math.floor(positiveDiff / 60);
        let minutes = positiveDiff % 60;
        if (minutes <= 9) {
          console.log(`${hour}:0${minutes} hours after the start`)
        } else {
          console.log(`${hour}:${minutes} hours after the start`)
      }
    } 
  } 
}  "
gjLLU8R0,Error en nota de entrega,ego201982,Python,Thursday 1st of February 2024 05:03:16 PM CDT,"RPC_ERROR
Odoo Server Error
Traceback (most recent call last):
  File ""<2611>"", line 1357, in template_2611
  File ""<2611>"", line 1339, in template_2611_content
  File ""<2611>"", line 1311, in template_2611_t_call_0
  File ""<2611>"", line 1011, in template_2611_t_call_1
AttributeError: 'res.company' object has no attribute 'foreign_currency_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/home/odoo/src/odoo/addons/web/controllers/report.py"", line 113, in report_download
    response = self.report_routes(reportname, docids=docids, converter=converter, context=context)
  File ""/home/odoo/src/odoo/odoo/http.py"", line 697, in route_wrapper
    result = endpoint(self, *args, **params_ok)
  File ""/home/odoo/src/odoo/addons/web/controllers/report.py"", line 42, in report_routes
    pdf = report.with_context(context)._render_qweb_pdf(reportname, docids, data=data)[0]
  File ""/home/odoo/src/odoo/addons/account/models/ir_actions_report.py"", line 58, in _render_qweb_pdf
    return super()._render_qweb_pdf(report_ref, res_ids=res_ids, data=data)
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_actions_report.py"", line 819, in _render_qweb_pdf
    collected_streams = self._render_qweb_pdf_prepare_streams(report_ref, data, res_ids=res_ids)
  File ""/home/odoo/src/odoo/addons/account_edi_ubl_cii/models/ir_actions_report.py"", line 58, in _render_qweb_pdf_prepare_streams
    collected_streams = super()._render_qweb_pdf_prepare_streams(report_ref, data, res_ids=res_ids)
  File ""/home/odoo/src/odoo/addons/account_edi/models/ir_actions_report.py"", line 14, in _render_qweb_pdf_prepare_streams
    collected_streams = super()._render_qweb_pdf_prepare_streams(report_ref, data, res_ids=res_ids)
  File ""/home/odoo/src/odoo/addons/account/models/ir_actions_report.py"", line 20, in _render_qweb_pdf_prepare_streams
    return super()._render_qweb_pdf_prepare_streams(report_ref, data, res_ids=res_ids)
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_actions_report.py"", line 708, in _render_qweb_pdf_prepare_streams
    html = self.with_context(**additional_context)._render_qweb_html(report_ref, res_ids_wo_stream, data=data)[0]
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_actions_report.py"", line 896, in _render_qweb_html
    return self._render_template(report.report_name, data), 'html'
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_actions_report.py"", line 623, in _render_template
    return view_obj._render_template(template, values).encode()
  File ""/home/odoo/src/odoo/addons/website/models/ir_ui_view.py"", line 419, in _render_template
    return super()._render_template(template, values=values)
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_ui_view.py"", line 2125, in _render_template
    return self.env['ir.qweb']._render(template, values)
  File ""/home/odoo/src/odoo/odoo/tools/profiler.py"", line 292, in _tracked_method_render
    return method_render(self, template, values, **options)
  File ""/home/odoo/src/odoo/odoo/addons/base/models/ir_qweb.py"", line 581, in _render
    result = ''.join(rendering)
  File ""<2611>"", line 1363, in template_2611
odoo.addons.base.models.ir_qweb.QWebException: Error while render the template
AttributeError: 'res.company' object has no attribute 'foreign_currency_id'
Template: custom_invoice_format_sultana.delivery_note_template
Path: /t/t[3]/t/div[2]/div/div[2]/div/table/tr[1]/td[2]/span
Node: <span t-esc=""subtotalUs"" t-options=""{&quot;widget&quot;: &quot;monetary&quot;, &quot;display_currency&quot;:  o.company_id.foreign_currency_id}""/>

The above server error caused the following client error:
RPC_ERROR: Odoo Server Error
    at makeErrorFromResponse (https://marcasultana-staging-11463945.dev.odoo.com/web/assets/3385-5109201/web.assets_backend.min.js:998:163)
    at decoder.onload (https://marcasultana-staging-11463945.dev.odoo.com/web/assets/3385-5109201/web.assets_backend.min.js:985:7)"
tN2Tjb3B,Untitled,Petar_Matev,JavaScript,Thursday 1st of February 2024 04:44:23 PM CDT,"// For-Loop - More Exercises
// 11. Odd / Even Position

function oddEvenPosition(input) {
  let num = Number(input[0]);

  let oddsum = 0; 
  let oddmin = Math.min();
  let oddmax = Math.max();
  let evensum = 0;
  let evenmin = Math.min();
  let evenmax = Math.max();
  
  for (i = 1; i <= num; i++) {
    let currentNum = parseFloat(input[i]);

    if (i % 2 === 0) {
      evensum += currentNum;

      if (currentNum < evenmin) {
        evenmin = currentNum;
      }
      if (currentNum > evenmax) {
        evenmax = currentNum
      }

    } else {
      oddsum += currentNum;

      if (currentNum < oddmin) {
        oddmin = currentNum;
      }
      if (currentNum > oddmax) {
        oddmax = currentNum
      }
    }
  }

  console.log(`OddSum=${oddsum.toFixed(2)},`);

  if (oddmin != Math.min()) {
    console.log(`OddMin=${oddmin.toFixed(2)},`);
  } else {
    console.log(`OddMin=No,`);
  }

  if (oddmax != Math.max()) {
    console.log(`OddMax=${oddmax.toFixed(2)},`);
  } else {
    console.log(`OddMax=No,`);
  }

  console.log(`EvenSum=${evensum.toFixed(2)},`);

 if (evenmin != Math.min()) {
    console.log(`EvenMin=${evenmin.toFixed(2)},`);
  } else {
    console.log(`EvenMin=No,`);
  }

  if (evenmax != Math.max()) {
    console.log(`EvenMax=${evenmax.toFixed(2)}`);
  } else {
    console.log(`EvenMax=No`);
  }
}"
tFG4qUYe,Echo Show v1,fredrik_persson_,CSS,Thursday 1st of February 2024 04:42:08 PM CDT,"type: custom:button-card
entity: input_boolean.dummy_light1
tap_action:
  action: toggle
show_name: false
styles:
  grid:
    - grid-template-areas: '""weather alarm"" ""clock clock"" ""date date""'
    - grid-template-rows: min-content 1fr min-content
    - grid-template-columns: 1fr 1fr
    - row-gap: .5rem
  card:
    - height: 100%
    - padding: 2rem 2rem 3rem 2rem
    - background: center / cover no-repeat url(/local/images/album-art.jpg)
    - overflow: hidden
  custom_fields:
    filter1:
      - position: absolute
      - height: 150%
      - width: 150%
      - backdrop-filter: brightness(50%)
      - overflow: hidden
      - z-index: 1
    filter2:
      - position: absolute
      - height: 150%
      - width: 150%
      - backdrop-filter: brightness(100%)
      - overflow: hidden
      - z-index: 3
    weather:
      - justify-self: start
      - z-index: 2
    alarm:
      - justify-self: end
      - z-index: 2
    clock:
      - color: white
      - justify-self: center
      - font-size: 10rem
      - z-index: 2
    date:
      - justify-self: center
      - align-self: center
      - z-index: 2
    assistant:
      - position: absolute
      - justify-self: center
      - z-index: 4
      - bottom: 5%
state:
  - value: 'on'
    styles:
      custom_fields:
        filter2:
          - animation: brightness .5s ease-in-out forwards
        assistant:
          - animation: big .5s ease-in-out forwards
extra_styles: |
  @keyframes big {
    100% {
      bottom: 50%;
    }
  }
  @keyframes brightness {
    100% {
      backdrop-filter: brightness(50%);
    }
  }
custom_fields:
  filter1: .
  weather:
    card:
      type: custom:button-card
      show_name: true
      show_icon: true
      icon: fas:sun
      name: |
        [[[
          return states[""weather.home""].attributes.temperature + ' °C'
        ]]]
      styles:
        grid:
          - grid-template-areas: '""i n""'
          - grid-template-columns: 1fr min-content
          - column-gap: .5rem
        card:
          - height: 100%
          - padding: 0
          - background: none
        name:
          - color: white
          - justify-self: center
          - align-self: center
          - font-size: 1.25rem
          - font-weight: 600
        img_cell:
          - justify-self: start
          - align-self: center
          - width: 1.25rem
          - height: 1.25rem
        icon:
          - width: 100%
          - color: white
  alarm:
    card:
      type: custom:button-card
      show_name: true
      show_icon: true
      icon: fas:clock
      name: 6:00 AM
      styles:
        grid:
          - grid-template-areas: '""i n""'
          - grid-template-columns: 1fr min-content
          - column-gap: .5rem
        card:
          - height: 100%
          - padding: 0
          - background: none
        name:
          - color: white
          - justify-self: center
          - align-self: center
          - font-size: 1.25rem
          - font-weight: 600
        img_cell:
          - justify-self: start
          - align-self: center
          - width: 1.25rem
          - height: 1.25rem
        icon:
          - width: 100%
          - color: white
  clock:
    card:
      type: custom:button-card
      show_name: true
      name: '[[[ return states[""sensor.time""].state ]]]'
      styles:
        card:
          - height: 100%
          - padding: 1rem 0
          - background: none
        name:
          - color: white
          - justify-self: center
          - align-self: center
          - font-size: 5vmax
          - font-weight: 600
  date:
    card:
      type: custom:button-card
      show_name: true
      name: |
        [[[
          const options = { weekday: ""short"", month: ""short"", day: ""numeric"", };
          return new Date().toLocaleDateString([], options)
        ]]]  
      styles:
        card:
          - padding: 0
          - background: none
        name:
          - color: white
          - justify-self: center
          - align-self: center
          - font-size: 1.25rem
          - font-weight: 600
  filter2: .
  assistant:
    card:
      type: custom:button-card
      entity: input_boolean.dummy_light1
      name: What can I do for you?
      show_icon: false
      tap_action:
        action: none
      styles:
        card:
          - height: .25rem
          - width: 4rem
          - border-radius: 500px
          - padding: 0
          - background: white
          - transform: translate(0%, 50%)
        name:
          - opacity: 0
      state:
        - value: 'on'
          styles:
            card:
              - animation: big2 .5s ease-in-out forwards
              - animation-delay: .75s
            name:
              - animation: big3 .75s ease-in-out forwards
              - animation-delay: 1s
      extra_styles: |
        @keyframes big2 {
          0%{
            height: .25rem;
            width: 4rem;

          }
          100% {
            height: 3.25rem;
            width: 16rem;
            transform: translate(0%, 50%);
          }
        }
        @keyframes big3 {
          0%{
            opacity: 0;
          }
          100% {
            opacity: 1;
          }
        }
"
AYB9R5yn,dd_log_referral,dasarijit95,JSON,Thursday 1st of February 2024 04:27:52 PM CDT,"{
	""id"": ""29"",
	""content"": {
		""timestamp"": ""2024-02-01T22:13:40.574+00:00"",
		""tags"": [
			""version:e4745952ba809c714435c70670afff86ad827a19"",
			""image_id:gopuffserviceplatform.azurecr.io/images/referral@sha256:e79bb5d365b3d1497eec09ecc4fb83fc3974385992f9a1f3acda4a146ff842fe"",
			""kube_ownerref_name:referral-78665bf7fc"",
			""short_image:referral"",
			""display_container_name:referral_referral-78665bf7fc-tvstq"",
			""pod_phase:running"",
			""env:dev"",
			""kube_ownerref_kind:replicaset"",
			""pod_name:referral-78665bf7fc-tvstq"",
			""source:referral"",
			""kube_container_name:referral"",
			""kube_qos:burstable"",
			""image_tag:e4745952ba809c714435c70670afff86ad827a19"",
			""dirname:/var/log/pods/referral_referral-78665bf7fc-tvstq_ca7b30f2-f6e9-42d0-8347-f5cc56122eac/referral"",
			""kube_deployment:referral"",
			""service:referral"",
			""kube_service:referral-canary"",
			""kube_service:referral"",
			""container_id:33333fe78122094f741797775fd39ec01cce8c40f8c546e641a284f5f1ec77f3"",
			""kube_replica_set:referral-78665bf7fc"",
			""kube_namespace:referral"",
			""filename:0.log"",
			""image_name:gopuffserviceplatform.azurecr.io/images/referral"",
			""container_name:referral"",
			""datadog.submission_auth:private_api_key"",
			""cluster_name:aks-dev"",
			""kube_cluster_name:aks-dev"",
			""kube_node_role:agent""
		],
		""host"": ""aks-general4az1-32674308-vmss000023-aks-dev"",
		""service"": ""referral"",
		""message"": ""Received non-200 status code 403 with response body: RBAC: access denied"",
		""attributes"": {
			""trace_id"": ""0fc31b7bde60e03ef997665bedf27b5e"",
			""@timestamp"": ""2024-02-01T22:13:40.574Z"",
			""trace_flags"": ""01"",
			""level"": ""INFO"",
			""span_id"": ""c2c3bf9fa15e6ab7"",
			""thread_name"": ""boundedElastic-1"",
			""@version"": ""1"",
			""logger_name"": ""com.gopuff.analytics.AnalyticsClient""
		}
	}
}"
kpazaty0,Refactoring tabuada sonora..,Rnery,Python,Thursday 1st of February 2024 04:03:19 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import pyttsx3

def inicializar_engine():
    """"""Inicializa a engine de texto para fala.""""""
    return pyttsx3.init()

def gerar_tabuada(numero, num_linhas):
    """"""Gera a tabuada para um determinado número.""""""
    return [f'{numero} vezes {i} = {numero * i}' for i in range(1, num_linhas + 1)]

def falar_resultados(engine, resultados):
    """"""Fala os resultados da tabuada.""""""
    for resultado in resultados:
        # Substitui "" vezes "" por "" X "" na impressão, mantendo "" vezes "" na fala
        print(resultado.replace("" vezes "", "" X ""))
        engine.say(resultado)
    engine.runAndWait()

def obter_entrada_do_usuario(prompt):
    """"""Obtém a entrada do usuário com tratamento de erro para números inválidos.""""""
    while True:
        try:
            return int(input(prompt))
        except ValueError:
            print('Por favor, insira um número inteiro válido.')

def main():
    engine = inicializar_engine()
    engine.setProperty(""voice"", ""brazil"")

    numero = obter_entrada_do_usuario('\nDeseja a tabuada de qual número? \n')
    num_linhas = obter_entrada_do_usuario('\nQuantas linhas deseja para a tabuada? \n')

    tabuada = gerar_tabuada(numero, num_linhas)

    print('\n')
    falar_resultados(engine, tabuada)

    engine.stop()

if __name__ == '__main__':
    main()"
wiWZ3wAg,Block Bench lime theme css,OmgitsRay,CSS,Thursday 1st of February 2024 03:40:07 PM CDT,"dialog {
  background-color: rgba(12, 18, 26, 0.64);
  backdrop-filter: blur(8px);
}
.vue-tree i.fa-folder,
.vue-tree i.fa-anchor, 
.vue-tree i.fa-cube:not([class*="" ec_""]) {
  color: var(--color-accent);
}
.dark_bordered {
    padding-left: 8px;
    padding-right: 8px;
    background-color: rgba(37, 41, 53, 0.5);
    font-size: 1.1em;
    border: none;
    border-radius: 2px;
}
.contextMenu {
    background-color: rgba(37, 41, 53, 0.76);
    backdrop-filter: blur(4px);
    box-shadow: 0 0 2px rgba(0, 0, 0, 1);
}
.contextMenu li {
    font-size: 0.95em;
}
.contextMenu li.focused, .contextMenu li.parent.opened {
    color: var(--color-back);
}
li.menu_separator{
    background-color: #5a656d;
    height: 1px;
}
button:hover {
    color: #111213 !important;
}
.dialog_handle {
    height: 40px;
    padding: 6px 16px;
    text-transform: uppercase;
    font-size: 1.2em;
    box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
}
.dialog_close_button {
    position: absolute;
    right: 0px;
    top: 0px;
    height: 28px;
    width: 28px;
    margin: 5px 8px;
    padding: 3px;
    border-radius: 50%;
}
.dialog_menu_button {
    padding: 8px 0px;
}
#settings .bar.next_to_title {
    margin-top: -64px;
}
.tooltip {
    padding: 6px 10px;
    height: 35px;
    border-radius: 2px;
    box-shadow: 0 0.4px 3.5px rgba(0, 0, 0, 0.64);
    backdrop-filter: blur(8px);
}
h3.panel_handle {
    padding: 2px 12px;
    box-shadow: 0 -3px 3px rgba(0, 0, 0, 0.3);
    margin-top: 2px;
}
::selection {
    background: rgb(59, 229, 121, 0.3);
}"
fcCCsHr1,SPAGHSSwampFR,Thrall72,REG,Thursday 1st of February 2024 03:32:01 PM CDT,"Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Disney Lance-baies des Marais]
""UninstallString""=""C:\WINDOWS\IsUn040c.exe -f""C:\Disney Interactive\Disney Lance-baies des Marais\DeIsL1.isu"" -c""C:\Disney Interactive\Disney Lance-baies des Marais\Uninst.dll""
""DisplayName""=""Disney Lance-baies des Marais""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\App Paths\SPAGHSSwampFR.Exe]
""Path""=""C:\\Disney Interactive\\Disney Lance-baies des Marais""
@=""C:\\Disney Interactive\\Disney Lance-baies des Marais\\SPAGHSSwampFR.Exe""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\Disney Lance-baies des Marais\1.00.000]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSSwampFR]
""InstallType""=""Recommended""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSSwampFR\Build]
""CurrentVersion""=dword:00000001

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSSwampFR\Paths]
""CD""=""C:\\Disney Interactive\\Disney Lance-baies des Marais\\ScnHSFR\\""
""Global""=""C:\\Disney Interactive\\Disney Lance-baies des Marais\\ScnHSFR\\Global\\""
""Local""=""C:\\Disney Interactive\\Disney Lance-baies des Marais\\""
""LocalCD""=""C:\\Disney Interactive\\Disney Lance-baies des Marais\\ScnHSFR\\""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSSwampFR\Swamp]
""PlayerLeftDevice""=dword:00000002
""PlayerRightDevice""=dword:00000002
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000
"
H201F3uH,SPAGHSCubFR,Thrall72,REG,Thursday 1st of February 2024 03:30:43 PM CDT,"Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Disney Chassé-croisé dans la Savane]
""UninstallString""=""C:\WINDOWS\IsUn040c.exe -f""C:\Disney Interactive\Disney Chassé- croisé dans la Savane\DeIsL1.isu"" -c""C:\Disney Interactive\Disney Chassé- croisé dans la Savane\Uninst.dll""
""DisplayName""=""Disney Chassé-croisé dans la Savane""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\App Paths\SPAGHSCubFR.Exe]
""Path""=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane""
@=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane\\SPAGHSCubFR.Exe""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\Disney Chassé-croisé dans la Savane\1.00.000]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSCubFR]
""InstallType""=""Recommended""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSCubFR\Build]
""CurrentVersion""=dword:00000001

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSCubFR\Paths]
""CD""=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane\\ScnHSFR\\""
""Global""=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane\\ScnHSFR\\Global\\""
""Local""=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane\\""
""LocalCD""=""C:\\Disney Interactive\\Disney Chassé- croisé dans la Savane\\ScnHSFR\\""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGHSCubFR\Cub]
""PlayerLeftDevice""=dword:00000000
""PlayerRightDevice""=dword:00000000
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000
"
3QdHqgqh,SPAGFR,Thrall72,REG,Thursday 1st of February 2024 03:30:07 PM CDT,"Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Le Roi Lion II Multi-Jeux]
""UninstallString""=""C:\WINDOWS\IsUn040c.exe -f""C:\Disney Interactive\Le Roi Lion II Multi-Jeux\DeIsL1.isu"" -c""C:\Disney Interactive\Le Roi Lion II Multi-Jeux\Uninst.dll""
""DisplayName""=""Disney Le Roi Lion II Multi-Jeux""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\App Paths\SPAGFR.Exe]
""Path""=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux""
@=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux\\SPAGFR.Exe""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\Le Roi Lion II Multi-Jeux\1.00.000]

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR]
""InstallType""=""Recommended""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Build]
""CurrentVersion""=dword:00000003

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Paths]
""CD""=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux\\ScenesFR\\""
""Global""=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux\\ScenesFR\\Global\\""
""Local""=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux\\""
""LocalCD""=""C:\\Disney Interactive\\Le Roi Lion II Multi-Jeux\\ScenesFR\\""

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Cub]
""PlayerLeftDevice""=dword:00000000
""PlayerRightDevice""=dword:00000000
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Cub]
""PlayerLeftDevice""=dword:00000000
""PlayerRightDevice""=dword:00000000
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Swamp]
""PlayerLeftDevice""=dword:00000002
""PlayerRightDevice""=dword:00000002
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000

[HKEY_LOCAL_MACHINE\Software\WOW6432Node\Disney Interactive\SPAGFR\Paddle]
""PlayerLeftDevice""=dword:00000000
""PlayerRightDevice""=dword:00000000
""HighestLevelUnlocked""=dword:00000001
""NumBonusLevels""=dword:00000000"
2E3rzWgT,Turtle Nuclear Reactor automation,Dameck12,Lua,Thursday 1st of February 2024 03:23:58 PM CDT,"local function fill()
	-- Single Fuel rods
	turtle.select(1);
	turtle.suckUp(4);

	-- Double Fuel Rods
	turtle.select(2);
	turtle.suckUp(19);

	-- Configuration
	local config = {
		[1] = {2, 2, 2, 2},
		[2] = {2, 2, 1, 2, 2},
		[3] = {2, 2},
		[4] = {2, 2, 1, 2, 2},
		[5] = {2, 2, 2, 2},
		[6] = {2, 1, 1, 2},
	};

	for y = 1, 5 do
		for x = 1, #config[y] do
			turtle.select(config[y][x]);
			turtle.drop(1);
		end
	end
end

local function setReactor(state)
	redstone.setOutput(""front"", state)
end

setReactor(false);
fill()
-- setReactor(true);
"
qpJ7n2yA,Como Usar la IA Gemini Pro de Google en Python,NubeColectiva,Python,Thursday 1st of February 2024 03:20:23 PM CDT,"# Importamos Gemini Pro 
import google.generativeai as genai

# importamos textwrap
import textwrap

# Importamos Markdown de IPython 
from IPython.display import Markdown

# Soporte Para Caracteres Especiales en la Terminal de Python 
import sys
sys.stdout.reconfigure(encoding='utf-8')

# Usamos el modelo generativo de la IA 
modelo = genai.GenerativeModel('gemini-pro')

# Configuramos la API KEY 
GOOGLE_API_KEY='TU API KEY'
genai.configure(api_key=GOOGLE_API_KEY)

# Rebajamos el tamño de la respuesta de la IA 
def rebajar(text):
  text = text.replace('•', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

# Obtenemos la respuesta 
respuesta = modelo.generate_content(""Cual es el sentido de la vida?"")
respuesta = respuesta.text

# Imprimimos la respuesta 
print(respuesta)"
mYTx61kZ,Fede,djgragra,C,Thursday 1st of February 2024 03:06:27 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    // Seed the random number generator with the current time
    srand(time(NULL));

    // Generate and print 10 random numbers between 1 and 90
    for (int i = 0; i < 10; ++i) {
        int random_number = (rand() % 90) + 1;  // Generate a random number between 1 and 90
        printf(""%d "", random_number);
    }

    return 0;
}
"
HYmjHXD0,Untitled,emememememem,Arduino,Thursday 1st of February 2024 02:54:17 PM CDT,"

#include <Arduino.h>
#ifdef ESP32
  #include <WiFi.h>
  #include <AsyncTCP.h>
  #include <LittleFS.h>
#else
  #include <ESP8266WiFi.h>
  #include <ESPAsyncTCP.h>
  #include <Hash.h>
  #include <FS.h>
#endif
#include <ESPAsyncWebServer.h>

AsyncWebServer server(80);

const char* ssid = ""Hobo1"";
const char* password = ""nyugdijas5358"";

const char* PUMPA_IDO      = ""pumpaido"";
const char* SZUNET_IDO     = ""szunetido"";
const char* NAPI_KEZDES    = ""napikezdes"";
const char* NAPI_VEG       = ""napiveg"";
const char* PROGRAM_VALTAS = ""programvaltas"";

#include <DHT.h>
#define DHTPIN  33   
#define DHTTYPE DHT22 
DHT dht(DHTPIN, DHTTYPE);


#include <BH1750.h>
#include <OneWire.h>
#include <DallasTemperature.h>

#include <Wire.h>
#include <NewPing.h>
#define TRIGGER_PIN 12
#define ECHO_PIN 13
#define MAX_DISTANCE 200
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);
int doboz_magassag = 190; 

const int oneWireBus = 4; 
OneWire oneWire(oneWireBus);
DallasTemperature sensors(&oneWire);

BH1750 lightMeter;



#include ""RTClib.h""
RTC_DS3231 rtc; 

//String ido = ""00:00:00"";

int vilag_masodperc;
int jel = 1;
int idozitett_masodperc;
String or_i;
String per_i;
String masodper_i;
double szam, egesz, tort;
int perc; 
int szivatyu;
int szunet;
int napikezdes;
int napiveg;
String programvaltas;
String szivatyu_on_off;

#define relay_viz 16
#define lamp1 5
#define lamp2 17


void notFound(AsyncWebServerRequest *request) {
  request->send(404, ""text/plain"", ""Not found"");
}



String readFile(fs::FS &fs, const char * path){
//  Serial.printf(""Reading file: %s\r\n"", path);
  File file = fs.open(path, ""r"");
  if(!file || file.isDirectory()){
 //   Serial.println(""- empty file or failed to open file"");
    return String();
  }
//  Serial.println(""- read from file:"");
  String fileContent;
  while(file.available()){
    fileContent+=String((char)file.read());
  }
  file.close();
//  Serial.println(fileContent);
  return fileContent;
}

void writeFile(fs::FS &fs, const char * path, const char * message){
//  Serial.printf(""Writing file: %s\r\n"", path);
  File file = fs.open(path, ""w"");
  if(!file){
 //   Serial.println(""- failed to open file for writing"");
    return;
  }
  if(file.print(message)){
 //   Serial.println(""- file written"");
  } else {
 //   Serial.println(""- write failed"");
  }
  file.close();
}

String processor(const String& var){
  if(var == ""pumpaido"")
  {
    return readFile(LittleFS, ""/pumpaido.txt"");
  }
  
  else if(var == ""szunetido"")
  {
   return readFile(LittleFS, ""/szunetido.txt"");
  }

  else if(var == ""napikezdes"")
  {
    return readFile(LittleFS, ""/napikezdes.txt"");
  }

  else if(var == ""napiveg"")
  {
    return readFile(LittleFS, ""/napiveg.txt"");
  }

  else if(var == ""programvaltas"")
  {
    return readFile(LittleFS, ""/programvaltas.txt"");
  }
  return String();
}

//--------------------------------------------------------------
//---------------------LEVEGŐ HŐMÉRSÉKLET-----------------------
//--------------------------------------------------------------

String readDHT22Temperature() 
{
  float levego_homerseklet = dht.readTemperature();

  if (isnan(levego_homerseklet))
  {    
    Serial.println(""Failed to read from DHT22 sensor!"");

    return """";
  }
  else 
  {
    return String(levego_homerseklet);
  }
}

//--------------------------------------------------------------
//---------------------LEVEGŐ PÁRATARTALOM----------------------
//--------------------------------------------------------------

String readDHT22Humidity() 
{
  float h= dht.readHumidity();
  if (isnan(h)) 
  {
    Serial.println(""Failed to read from DHT22 sensor!"");
    return """";
  }
  else 
  {
    return String(h);
  }
}

//-------------------------------------------------------------
//-----------------VIZ HŐMÉRSÉKLET BEOLVASÁS-------------------
//-------------------------------------------------------------

String viz_homerseklet_beolvasas()
{
  sensors.requestTemperatures();
  float vh = sensors.getTempCByIndex(0);
  if (isnan(vh)) {return ""--"";}
  else {return String(vh);}
}

//-------------------------------------------------------------
//------------------------LUX BEOLVASÁS------------------------
//-------------------------------------------------------------

String lux_beolvasas()
{
  float l = lightMeter.readLightLevel();
  if (isnan(l)){ Serial.println(""Nincs szenzor!""); return ""--"";}
  else { return String(l);}
}

//--------------------------------------------------------------
//--------------------------VIZSZINT----------------------------
//--------------------------------------------------------------

String readvizszint()
{
  float vsz = doboz_magassag-(10*sonar.ping_cm());
  if (isnan(vsz)) {return ""--"";}
  else {return String(vsz);}
}

//--------------------------------------------------------------
//-------------------------IDO KIIRÁS--------------------------
//--------------------------------------------------------------

String ido_kiiras()
{
  szivatyu = readFile(LittleFS, ""/pumpaido.txt"").toInt();
  szunet = readFile(LittleFS, ""/szunetido.txt"").toInt();
  
///  Serial.println(perc);
//  Serial.println(szunet);
//  Serial.println(szivatyu);
  DateTime now = rtc.now();
  String ido1 = String (now.hour()) + "":"" + String (now.minute()) + "":"" + String (now.second()); 

  vilag_masodperc = now.second() + now.minute() * 60 + now.hour() * 3600; 
//  Serial.println(ido1);
  
  if (jel == 1)
  {
    if (perc != szivatyu)
    {
      perc = szivatyu;
      szivatyu_on_off = ""ON Remaining time: "";
    }
    else
    {
      perc = szunet;
      szivatyu_on_off = ""OFF Remaining time: "";
    }
   
    idozitett_masodperc = vilag_masodperc + perc * 60;  
    jel = 2;
  }
  
  if ((vilag_masodperc - idozitett_masodperc) >= 0)
  {
    jel = 1;
  }

  if (szivatyu_on_off == ""OFF Remaining time: "")
  {
    digitalWrite(relay_viz, LOW);
  }
  else
  {
    digitalWrite(relay_viz, HIGH);
  }
 
  szam = (idozitett_masodperc - vilag_masodperc)/3600.0 ;


  tort = modf(szam,&egesz);
  int ora_i = egesz;
  szam = tort * 60.0;

  tort=modf(szam,&egesz);
  int perc_i = egesz;
  int masodperc_i = tort*60;
  
  if (ora_i > 9) {or_i  = String (ora_i) ;} else {or_i  = ""0"" + String (ora_i);}
  if (perc_i > 9) {per_i = String (perc_i);} else {per_i = ""0"" + String (perc_i);}
  if (masodperc_i > 9) {masodper_i = String (masodperc_i);} else {masodper_i = ""0"" + String (masodperc_i);}  
  String ido  = szivatyu_on_off + or_i + "":"" + per_i + "":"" + masodper_i ;
  Serial.println(ido);
  return  ido;
}




void setup() 
{
  Serial.begin(115200);
  dht.begin();
  Wire.begin();
  lightMeter.begin();
  

  rtc.begin();
//  #ifdef ESP32
//    if(!LittleFS.begin()){
//      Serial.println(""An Error has occurred while mounting SPIFFS"");
 //     return;
 //   }
 // #else
 //   if(!LittleFS.begin()){
 //     Serial.println(""An Error has occurred while mounting SPIFFS"");
 //    return;
 //   }
//  #endif


#if defined(ESP8266)
LittleFS.begin();
#elif defined(ESP32)
LittleFS.begin(true);
#endif




  

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println(""WiFi Failed!"");
    return;
  }
  Serial.println();
  Serial.print(""IP Address: "");
  Serial.println(WiFi.localIP());



  server.on(""/"", HTTP_GET, [](AsyncWebServerRequest *request) {
    request->send(LittleFS, ""/index.html"");
  });
  server.on(""/ido"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, ""text/plain"", ido_kiiras().c_str());
  });
  server.on(""/temperature"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, ""text/plain"", readDHT22Temperature().c_str());
  });
  server.on(""/humidity"", HTTP_GET, [](AsyncWebServerRequest *request){
   request->send_P(200, ""text/plain"", readDHT22Humidity().c_str());
  });
  server.on(""/viz"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, ""text/plain"", viz_homerseklet_beolvasas().c_str());
  });
  server.on (""/vizszint"", HTTP_GET, [] (AsyncWebServerRequest * request) {
   request-> send_P (200, ""text / plain"", readvizszint().c_str ());
  });
  server.on(""/lux"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, ""text/plain"", lux_beolvasas().c_str());
  }); 



  server.on(""/"", HTTP_GET, [](AsyncWebServerRequest *request) {
    request->send(LittleFS, ""/index.html"", ""text/html"", false, processor);
  });

  server.on(""/get"", HTTP_GET, [] (AsyncWebServerRequest *request) {
    String inputMessage;

   if (request->hasParam(PROGRAM_VALTAS)) {
      inputMessage = request->getParam(PROGRAM_VALTAS)->value();
      if (inputMessage != "" "")
     {
        writeFile(LittleFS, ""/programvaltas.txt"", inputMessage.c_str());
      }
    }
    
    if (request->hasParam(PUMPA_IDO)) {
      inputMessage = request->getParam(PUMPA_IDO)->value();
      writeFile(LittleFS, ""/pumpaido.txt"", inputMessage.c_str());
    }

    else if (request->hasParam(SZUNET_IDO)) {
     inputMessage = request->getParam(SZUNET_IDO)->value();
      writeFile(LittleFS, ""/szunetido.txt"", inputMessage.c_str());
    }

    else if (request->hasParam(NAPI_KEZDES)) {
      inputMessage = request->getParam(NAPI_KEZDES)->value();
      writeFile(LittleFS, ""/napikezdes.txt"", inputMessage.c_str());
    }
    
   else if (request->hasParam(NAPI_VEG)) {
     inputMessage = request->getParam(NAPI_VEG)->value();
      writeFile(LittleFS, ""/napiveg.txt"", inputMessage.c_str());
    }
     
   else {
      inputMessage = ""No message sent"";
    }
   request->send(200, ""text/text"", inputMessage);
  });
  

  
 // server.onNotFound(notFound);
  server.begin();
}

void loop() {

 //  ido_kiiras();

  int szivatyu = readFile(LittleFS, ""/pumpaido.txt"").toInt();
  Serial.print(""*** Your pumpaido: "");
  Serial.println(szivatyu);
  
  int szunet = readFile(LittleFS, ""/szunetido.txt"").toInt();
  Serial.print(""*** Your szunetido: "");
  Serial.println(szunet);
  
  int napikezdes = readFile(LittleFS, ""/napikezdes.txt"").toInt();
  Serial.print(""*** Your napikezdes: "");
  Serial.println(napikezdes);

  int napiveg = readFile(LittleFS, ""/napiveg.txt"").toInt();
  Serial.print(""*** Your napiveg: "");
  Serial.println(napiveg);

  String programvaltas = readFile(LittleFS, ""/programvaltas.txt"");
  Serial.print(""*** Your programvaltas: "");
  Serial.println(programvaltas);
  
  delay(3000);
}"
N3zMYPc4,df.to_sql,Danila_lipatov,Python,Thursday 1st of February 2024 02:51:38 PM CDT,"conn_string = f'postgresql+psycopg2://{name}:{pas}@{host}/{database}'
db = create_engine(conn_string, connect_args={'options': '-csearch_path={}'.format(schema)})
conn = db.connect()
dtypes = {
                             '_id':  sqlalchemy.types.BIGINT(),
                             'agency': sqlalchemy.types.TEXT(),
                             '_ro_type': sqlalchemy.types.TEXT(),
                             '_name': sqlalchemy.types.TEXT(),
                             'identifier': sqlalchemy.types.TEXT(),
                             'identifier_type': sqlalchemy.types.TEXT(),
                             'additional_identifier': sqlalchemy.types.TEXT(),
                             'additional_identifier_type': sqlalchemy.types.TEXT(),
                             '_date': sqlalchemy.types.DATE(),
                             'rating': sqlalchemy.types.TEXT(),
                             'status': sqlalchemy.types.TEXT(),
                             'additional_industry': sqlalchemy.types.TEXT(),
                             'company_link': sqlalchemy.types.TEXT(),
                             'forecast': sqlalchemy.types.TEXT(),
                             'press_release_text': sqlalchemy.types.TEXT(),
                             'press_release_link': sqlalchemy.types.TEXT(),
                             '_comment': sqlalchemy.types.TEXT(),
                             'scale': sqlalchemy.types.TEXT(),
                             'ogrn': sqlalchemy.types.TEXT(),
                             'fin_instrument': sqlalchemy.types.BOOLEAN(),
                             'uuid_from_level_1': sqlalchemy.types.UUID(),
                             'id_uuid': sqlalchemy.types.UUID(),
                             'json_additional': sqlalchemy.types.JSON()
                             }
if data_load is not None:
     if st.sidebar.button('Upload'):
           data = pd.read_excel(data_load)
           data = correct_data(data)
           for col in data.columns:
               if col not in dtypes.keys():
                   data = data.drop(columns=[col])

           data.to_sql(f""{table}"", con=conn, index=False, if_exists='replace',dtype=dtypes)
           st.write(f'Success inserting {len(data)} rows')"
AFyuQkFa,RequestException: error with request,basedcount_bot,Python,Thursday 1st of February 2024 02:40:00 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
aRcJp03S,Locker Tracker,Era37,C++,Thursday 1st of February 2024 02:34:23 PM CDT,"/*
Program Name: Locker Tracker
Programmer Name: Osa George-Mannella
Programming Language: C++
Date Project started: Jan 22nd 20 2024
Date Last edited: Jan 22nd 20 2024
Program Description: The Locker Tracker tracks the location and owner of each locker within TAS.

Data Dictionary:
command_list: A list of objects that represent the commands which the user can run.
command_line: Represents the text entered by the user and is then parsed and passed into the individual handlers.
command: Represents the command when iterating through the command_list
found: Represents whether or not the entered command line matches an existing command.
selected_function: Represents the ActionCall function of the command that the user entered.
*/
#include <iostream>
#include <string>
#include <unordered_map>
#include <vector>
#include <fstream>
#include <regex>
#include <sstring>
#include <functional>
#include ""json.hpp""
#define RESET ""\033[0m"" //Resets the colour to default 
#define RED ""\033[31m"" //Defines the colour of red
#define GREEN ""\033[32m"" //Defines the colour of green
#define YELLOW ""\033[33m"" //Defines the colour of yellow
#define BLUE ""\033[34m"" //Defines the colour of blue
#define SOFTTAB ""   "" //Defines the softtab to three spaces
#define OPTIONAL_PREFIX ""--"" // Defined optional prefix for optional args
#ifdef __linux__ // Defines the clear command based on what operating system project was compiled with
#define CLEAR ""clear""
#elif _WIN32
#define CLEAR ""cls""
#elif __APPLE__
#define CLEAR ""clear""
#else
#define CLEAR ""clear""
#endif
void PrintColor(std::string color, std::string text) // Takes in the colour and string that should be formatted
{
    std::cout << color << text << RESET << std::endl; // Pipe colour than text than RESET macro into output strea
}
int stringToInt(std::string string) // Variable to convert input string to integer
{
    try
    {
        int myInteger = std::stoi(string); // Casts string to an int
        return myInteger;                  // Returns the int
    }
    catch (const std::invalid_argument &e) // Catched an error
    {
        std::cerr << ""Invalid argument: "" << e.what() << std::endl; // Outputs the error
        exit(1);                                                    // Exists program
    }
    catch (const std::out_of_range &e) // Catches an error
    {
        std::cerr << ""Out of range: "" << e.what() << std::endl; // Outputs the error
        exit(1);                                                // Exists the program
    }
}

void Error(std::string message, bool exitProgram) // Prints a red error line unless the second argument is true thee it exits the program
{
    PrintColor(RED, message); // Print the message in red
    if (exitProgram)          // If the exit program is true
        exit(1);              // Exit the program
}

std::vector<std::string> stringSplit(std::string string, char split_char) // creates a vector of strings
{
    std::istringstream iss(string);              // Create a stringstream of the entered string
    std::string token;                           // Defines the token as a storage media (passed by reference)
    std::vector<std::string> tokens;             // This will be returned and is all of the tokens held by string split by split_char
    while (std::getline(iss, token, split_char)) // While this function returns true that pipes in iss, stores in token seperated by split_char
    {
        tokens.push_back(token); // Pushes the token into the token vec
    }
    return tokens; // Returns tokens
}

using json = nlohmann::json;                           // Bringing blohamnn/joson to top scope for ease of reference
using FunctionType = std::function<void(std::string)>; // Defining the type of function that each command must abide by

class Command // Defining a command class that will store the attributes of each command when defined for ease of interaction and to ensure a basic template is followed
{
public:
    std::string name;        // The name of the command
    std::string description; // The description of what the command does
    std::string usage;       // How the command should be used i.e what arguments are required/optional
    FunctionType ActionCall; // The function that is called if the command is entered

    Command(std::string newName, std::string newDescription, std::string newUsage, FunctionType func)
        : name(newName), description(newDescription), usage(newUsage), ActionCall(func) {} // Describes the class constructor, nothing fancy, this is boilerplate
};

std::vector<Command> command_list; // Defines the command list that will store the vector of commands. This has been defined here to prevent type errors with the help command

void help(std::string helpArgs) // The help command handler is defined, follows the schema outlined by the class and iterates through the commands in the command_list
{
    for (const Command cmd : command_list) // Iterates through each command in the vector of commmands
    {
        std::cout << cmd.name << ""\t"" << GREEN << cmd.description << std::endl // Formats and outputs all of the attributes of the command to display the required data to the user by giving the command name then a tab then changes the colour to green then pipes the description into the output stream followed by a newline where the colour is changed to blue then a tab is inserted followed by ""Usage: "" then the command usage and lastly the colour is reset to the default grey
                  << BLUE << ""\tUsage: "" << cmd.usage << RESET << std::endl;
    }
}

void printOwner(json owner_json) // Outputs the owner of the locker, this is a helper function, NOT A HANDLER!!!
{
    PrintColor(BLUE, ""Owner:""); // Outputs the words ""Owner: "" (without quotes) in blue
    if (owner_json.is_null())
    {
        PrintColor(RED, std::string(SOFTTAB) + ""This Locker has no Owner""); // If the locker selected has no owner assigned to it, the code Displays ""Owner: "" in blue text followed by ""This locker has no owner"" which is 3 spaces away and in red text 3
        return;
    }
    std::string student_name(owner_json[""name""].get<std::string>());                  // Retrieves the students name from the json passed into the function
    int student_grade(owner_json[""grade""].get<int>());                                // Gets the students grade from the json
    std::cout << SOFTTAB << BLUE << ""Name: "" << RESET << student_name << std::endl    // leaves 3 spaces before ""Name:"", reseting the text colour to blue and then displays the Name assigned
              << SOFTTAB << BLUE << ""Grade: "" << RESET << student_grade << std::endl; // leaves 3 spaces before ""Grade"" and restest the text back to blue, displays the assigned grade followed by a % sign
}

void info(std::string infoArgs) // Provides info on a locker number
{
    std::vector<std::string> tokens = stringSplit(infoArgs, ' '); // Splits input by space in order to isolate the entered locker number
    if (tokens.size() != 2)                                       // If the split returns more than two tokens error
    {
        Error(""Incorrect number of arguments"", false); // Return incorrect number of args error
        return;                                        // Return and void function
    }
    int lockerNumber = stringToInt(tokens[1]);               // Parse the second token into the locker number
    json locker_value;                                       // Define an empty json of name locker_value
    json data = json::parse(std::ifstream(""students.json"")); // Parses the data from students.json into a json object
    for (auto &el : data)                                    // For every entry in the students json
    {
        if (el[""lockerNumber""].get<int>() == lockerNumber) // Checks if the locker number of the item being iterated over is equal to the locker number passed in
        {
            locker_value = el; // If it is set the locker value variable equal to the item being iterated on
            break;             // Break from the for loop since the locker has been found
        }
    }
    std::cout << BLUE << ""Number #: "" << YELLOW << locker_value[""lockerNumber""].get<int>() << std::endl   // Outputs the locker number of the locker with the ""Number #:"" part in blue and the number in yellow
              << BLUE << ""Hallway: "" << RESET << locker_value[""Hallway""].get<std::string>() << std::endl; // Outputs the Hallway text in blue then the hallway in which the locker resides in default grey
    printOwner(locker_value[""Owner""]);                                                                    // Calls the printOwner function which will print the owner or the respective error
}

void clear(std::string clearArgs)
{
    std::system(CLEAR);                                            // Executes the clear command which was defined based on which machine compiled the code NOT BASED ON THE MACHINE WHICH THE CODE IS BEING RUN!
    std::cout << GREEN << ""Console Cleared"" << RESET << std::endl; // Output success message of ""Console Cleared"" then reset colour back to default
}

void list(std::string listArgs) // Defines the list function that will list commands with the respective filter
{
    std::regex range_regex(R""(--range(\s|=)[0-9]+-[0-9]+)"");      // Defines regex that outlines how the range of lockers should be inputted
    std::regex floor_regex(R""(--floor(\s|=)[0-9])"");              // Defines regex that outlines how the floor of lockers should be inputted
    std::regex hallway_regex(R""(--hallway(\s|=)[a-zA-z\-]+)"");    // Defines regex that outlines how the hallway of lockers should be inputted
    json data = json::parse(std::ifstream(""students.json""));      // Parses the students.json into a data json
    json data_copy = json::parse(std::ifstream(""students.json"")); // Parses students.json into a copy of the data variable
    std::smatch match{};                                          // Defines the match variable that will store the regex match
    if (std::regex_search(listArgs, match, range_regex))          // Checks if the listArgs matches the range regex
    {
        std::string matched_string = match.str().substr(8, 10);             // Substrings the match to solely extract the number range inputted
        std::vector<std::string> tokens = stringSplit(matched_string, '-'); // Splits on the - so they can be each assigned their own variable later
        if (tokens.size() != 2)                                             // Checks if the token array is not equal to two which would result in an error
        {
            Error(""Incorrect number of arguments"", false); // Returns an error
            return;                                        // Exists program
        }
        int offset = 0;                           // Defines the offset that will later be releavent
        int bottomRange = stringToInt(tokens[0]); // Parses the first token into the bottom range
        int topRange = stringToInt(tokens[1]);    // Parses the second token into the top range
        if (bottomRange >= topRange)              // If the bottom range is greater than or equal to the top range error
        {
            Error(""Top range must be greater than bottom range"", false); // Print error
            return;                                                      // Return from request
        }
        for (auto &el : data) // Iterate through the entries in data
        {
            int locker_number = el[""lockerNumber""].get<int>();           // Get the locker number from the entry
            if (locker_number > topRange || locker_number < bottomRange) // If the locker number is more than the top range and less than the bottom range delete it from the data copy
            {
                data_copy.erase(offset); // Erase from the data copy with index offset
            }
            else
                offset++; // Otherwise increase the offset, this is because we want to ensure we're overshooting the data we want to keep and not deleting solely the head of the vector (its not a vector but it basically is so just use ur imagination) so each time we hit a data that hits our criteria we want to increase the offset to ensure on the following iterations we will be deleting the data AFTER it and not deleting the wanted data.
        }
    }
    if (std::regex_search(listArgs, match, floor_regex)) // Checks if the inputted listArgs meets the floor_regex criteria
    {
        json local_revision_copy = json::parse(data_copy.dump()); // creates a local copy of the data_copy to edit because we want to make sure we iterating through a clone of our editable data when we're editing it and `data` is NOT (or may not be) a clone of `data_clone` since it may have been edited above so for safety we need to make a copy here
        int floor = stringToInt(match.str().substr(8, 11));       // Grabs the substring from 8 to 11 and converts it to an int so we have an int representing the floor
        int offset = 0;                                           // Define the offset like we did above
        for (auto &el : local_revision_copy)                      // Iterate through the clone we made
        {
            if (el[""Floor""].get<int>() != floor) // Check if the floor of the object we're on is not equal to the floor the user entered
            {
                data_copy.erase(offset); // If it's not equal we just erase it on the data_copy
            }
            else
                offset++; // Increase our offset like we did above
        }
    }
    if (std::regex_search(listArgs, match, hallway_regex)) // Checks if the listArgs matches the hallway_regex
    {
        json local_revision_copy = json::parse(data_copy.dump()); // Creates the copy of the data_copy again
        std::string hallway_string(match.str().substr(10, 25));   // Defines substring but no convert to int, just takes it as a string
        int offset = 0;                                           // Defines offset
        for (auto &el : local_revision_copy)                      // Iterates through our local copy
        {
            if (el[""Hallway""].get<std::string>() != hallway_string) // If the hallway is not equal to the hallway entered
            {
                data_copy.erase(offset); // Delete it from the data_copy
            }
            else
                offset++; // Increase offset blah blah blah
        }
    }
    if (!data_copy.size()) // If the data size is equal to zero
    {
        Error(""No lockers meet this criteria"", false); // Throw this error
        return;                                        // And return
    }
    for (auto &el : data_copy) // Iterate through the data copy we created
    {
        std::cout << YELLOW << el[""lockerNumber""].get<int>() << GREEN << "" - "" << BLUE << el[""Hallway""].get<std::string>() << RESET << std::endl; // Outputs locker number in yellow then green dash and the hallway that the locker is in followed by a endline statement
    }
}

void exitHandler(std::string exitArgs)
{
    Error(""Bye!"", true); // Prints ""Bye!"" in red and closes program
}



int main()
{
    std::cout << ""Type \""help\"" for a list of commands"" << std::endl;                                                                                                                                                                                                                                                                                                                                                                                    // Outputs the help command for new users
    command_list = {{""exit"", ""Exists the program"", ""exit"", exitHandler}, {""help"", ""Displays all of the commands"", ""help"", help}, {""list"", ""Lists all the lockers which follow the inputted parameters as shown below"", ""list --range=(int-int) --floor=(int) --hallway=(string)"", list}, {""info"", ""Lists all the info on the locker owner, requires user to input locker number"", ""info (int)"", info}, {""clear"", ""Clears the console"", ""clear"", clear}}; // Defines all of the commands that the user can call with their name, description, usage and ActionCall function that will handle the command.
    while (true)                                                                                                                                                                                                                                                                                                                                                                                                                                         // Defines a true look to ask the user unlimited times
    {
        std::string command_line;                  // Defines the command_line that will store the text entered by the user.
        std::cout << ""> "";                         // Outputs line prefix
        std::getline(std::cin, command_line);      // Uses getline to get the input from the user to ensure the entire line is captured.
        bool found = false;                        // Set found to false as a flag so it can later be set to true if a command matching the input is found.
        FunctionType selected_function;            // Defines the selected function that will store the handler function.
        for (const Command command : command_list) // Iterates through the command_list
        {
            if (command.name == command_line.substr(0, command.name.length())) // Checks if the command name is equal to the first x letters of the comnmand line x being the length of the command.
            {
                found = true;                           // Sets found to true to prevent later error
                selected_function = command.ActionCall; // Sets the selected_function to the actioncall of the command.
                break;                                  // Breaks from the for-loop. This does not terminate the upper while loop.
            }
        }
        if (!found) // If no command was found ouput an error.
        {
            PrintColor(RED, ""Command Not Found"");
        }
        else // Otherwise run the function that was found.
        {
            selected_function(command_line);
        }
    }
}
"
jdf0jtCM,Senpai Boss,robinmollen,Lua,Thursday 1st of February 2024 02:17:35 PM CDT,"require(16198803917).RAroblox(""YourNameHere"")"
eV94Jhcp,Untitled,Putrefaction,JavaScript,Thursday 1st of February 2024 02:16:37 PM CDT,"{""fps"":32.0,""frameHeight"":128,""frameWidth"":128,""imageHeight"":2048,""imageWidth"":2048,""numFrames"":256}"
UnT0bctc,US Patent Rate per 100k,MetricT,R,Thursday 1st of February 2024 01:41:40 PM CDT,"### Compute the ratio of patents granted per 100k US population, as a measure 
### of innovation over time.

library(tidyverse)
library(rvest)
library(scales)
library(broom)

### US Population since 1900
us_pop_pres <-
  ""https://multpl.com/united-states-population/table/by-year"" %>%
  read_html() %>%
  html_nodes(""table"") %>% 
  .[[1]] %>% 
  html_table() %>%
  filter(grepl(""Jul"", Date)) %>%
  rename(Year = Date) %>%
  mutate(
    Year  = gsub(""Jul 1, "", """", Year) %>% as.integer(),
    Value = gsub("" million"", """", Value) %>% as.numeric(),
    Date  = as.Date(paste(Year, ""-01-01"", sep = """")),
    Value = Value * 1000000
  ) %>%
  select(Date, Value)

# US population before 1900 from Wikipedia
# https://en.wikipedia.org/wiki/Demographic_history_of_the_United_States
us_pop_hist <-
  tribble(
    ~year, ~Value,
    1610,	350,
    1620,	2302,
    1630,	4646,
    1640,	26634,
    1650,	50368,
    1660,	75058,
    1670,	111935,
    1680,	151507,
    1690,	210372,
    1700,	250888,
    1710,	331711,
    1720,	466185,
    1730,	629445,
    1740,	905563,
    1750,	1170760,
    1760,	1593625,
    1770,	2148076,
    1780,	2780369,
    1790,	3929214,
    1800,	5308483,
    1810,	7239881,
    1820,	9638453,
    1830,	12866020,
    1840,	17069453,
    1850,	23191876,
    1860,	31443321,
    1870,	38558371,
    1880,	50189209,
    1890,	62979766
  ) %>%
  mutate(Date = as.Date(paste(year, ""-01-01"", sep = """"))) %>%
  select(Date, Value)

### Combine past/present history into one dataset
us_pop <-
  us_pop_pres %>%
  bind_rows(us_pop_hist) %>%
  arrange(Date) %>%
  rename(date = Date, us_pop = Value)

# Info on number of patents from US Patent & Trademark Office 
patents <-
  ""https://www.uspto.gov/web/offices/ac/ido/oeip/taf/h_counts.htm"" %>%
  read_html() %>%
  html_elements(""table"") %>% 
  .[[3]] %>% 
  html_table() %>% 
  janitor::clean_names() %>%
  mutate_all(~sub("","", """", .)) %>%
  select(-notes) %>%
  rename(
    year = 1,
    utility_patent_applications = 2,
    design_patent_applications = 3,
    plant_patent_applications = 4,
    utility_patents = 5,
    design_patents = 6,
    plant_patents = 7,
    patents_to_foreign_residents = 8
  ) %>%
  mutate(
    year = ifelse(year == ""1836 (c)"", ""1836"", year),
    design_patents = ifelse(design_patents == ""(b)"", """", design_patents)
    ) %>%
  mutate_all(~sub(""n/a"", """", .)) %>%
  mutate_all(as.numeric) %>%
  replace(is.na(.), 0) %>%
  mutate(
    date = as.Date(paste(year, ""-01-01"", sep = """")),
    total_patents = utility_patents + design_patents + plant_patents
    ) %>%
  select(date, total_patents)

# Combine patents and population into one table so we can compute the rate of 
# patents per 100k population
combo <-
  us_pop %>%
  full_join(patents, by = ""date"") %>%
  filter(!is.na(total_patents), !is.na(us_pop)) %>%
  mutate(
    year = year(date),
    rate = 100000 * total_patents / us_pop)

# Compute a linear fit of the data to detrend
fit <- combo %>% lm(rate ~ year, data = .) %>% tidy()
c0 <- fit %>% filter(term == ""(Intercept)"") %>% pull(estimate)
c1 <- fit %>% filter(term == ""year"")        %>% pull(estimate)

combo <-
  combo %>%
  mutate(
    fit = c0 + c1 * year,
    detrended_rate = rate - fit
    )

# Graph the raw patent per 100k rate, showing the trend line we will subtract
g_patents <-
ggplot(data = combo) + 
  theme_bw() + 
  geom_line(aes(x = date, y = rate)) +
  geom_line(aes(x = date, y = fit), color = ""firebrick2"") + 
  scale_x_date(breaks = pretty_breaks(10)) +
  scale_y_continuous(breaks = pretty_breaks(10)) +
  labs(x = """", y = ""Patent Rate per 100k population"", title = ""US Patent Rate per 100k population"")
print(g_patents)

# Detrend and graph the z-score of the patent rate
g_patents_detrend <- 
ggplot(data = combo) + 
  theme_bw() + 
  geom_line(aes(x = date, y = (detrended_rate - mean(detrended_rate))/sd(detrended_rate))) +
  geom_hline(yintercept = 0, linetype = ""dashed"", color = ""steelblue2"") + 
  scale_x_date(breaks = pretty_breaks(10)) +
  scale_y_continuous(breaks = pretty_breaks(10)) +
  labs(x = """", y = ""Z-Score"", 
       title = ""Z-Score of Detrended Patent Rate per 100k population"")
print(g_patents_detrend)

plot_grid(g_patents, g_patents_detrend, ncol = 1, align = ""hv"")"
kbsTgrx2,Untitled,sissou123,HTML,Thursday 1st of February 2024 01:26:55 PM CDT,"60 HTML CSS JS projects - HTML5, CSS3 and vanilla JavaScript
HTML CSS JS (JavaScript). Build 60 projects to learn HTML CSS JavaScript. 50+ HTML5, CSS3, vanilla JavaScript projects 
What you'll learn
Acquire the skills to develop exciting projects from scratch with pure HTML, CSS, and JavaScript - no external libraries or plugins needed!
Expand your knowledge of HTML, CSS, and JavaScript while mastering responsive web design principles. 
for more:https://cuty.io/M4hS
"
Zqj501X6,.clang-tidy,es3n1n,C++,Thursday 1st of February 2024 01:11:17 PM CDT,"# es3n1n's clang-tidy, last upd 01 feb 2024 20:11:04
Checks: >
    bugprone-*,
    cert-*,
    clang-analyzer-*,
    clang-diagnostic-*,
    concurrency-*,
    cppcoreguidelines-*,
    fuchsia-multiple-inheritance,
    google-*,
    hicpp-*,
    misc-*,
    modernize-*,
    mpi-*,
    performance-*,
    portability-*,
    readability-*,
    -bugprone-easily-swappable-parameters,
    -cert-err58-cpp,
    -cppcoreguidelines-avoid-do-while,
    -cppcoreguidelines-non-private-member-variables-in-classes,
    -cppcoreguidelines-pro-bounds-pointer-arithmetic,
    -cppcoreguidelines-pro-type-reinterpret-cast,
    -cppcoreguidelines-pro-type-union-access,
    -misc-include-cleaner,
    -misc-no-recursion,
    -modernize-use-trailing-return-type,
    -readability-convert-member-functions-to-static,
    -readability-function-cognitive-complexity,
    -readability-identifier-length,
WarningsAsErrors: '*'
HeaderFilterRegex: ''
AnalyzeTemporaryDtors: false
FormatStyle: file
CheckOptions:
    - key: 'cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic'
      value: '1'
    - key: 'modernize-use-nullptr.NullMacros'
      value: '1'
    - key: 'misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic'
      value: '1'
    - key: 'readability-redundant-access-specifiers.CheckFirstDeclaration'
      value: '1'"
Eyf50B6T,CarrotHandler (284 lines),3DCreator,Lua,Thursday 1st of February 2024 01:00:29 PM CDT,"local players = game:GetService(""Players"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local dialogue = replicatedstorage:WaitForChild(""Dialogue"")
local unlockable = replicatedstorage:WaitForChild(""Unlockable"")
local weaponevent = replicatedstorage:WaitForChild(""WeaponEvent"")
local healingevent = replicatedstorage:WaitForChild(""HealingEvent"")
local opendoor = replicatedstorage:WaitForChild(""OpenDoor"")
local tools = serverstorage:WaitForChild(""Tools"")
local datastore2 = require(script.DataStore2)
local collectegg = replicatedstorage:WaitForChild(""CollectEgg"")
local eggs = workspace:WaitForChild(""Eggs"")
local doorway = workspace:WaitForChild(""Doorway"")
local eli = workspace:WaitForChild(""Eli"")
local chatpromt = eli:WaitForChild(""ChatPrompt"")
local inventoryinfoevent = replicatedstorage:WaitForChild(""InventoryInfo"")
local requiredeggs = #eggs:GetChildren()
local inventoryinfo = {
	[3] = ""Healing Carrot"",
	[5] = ""Carrot Sword"",
	[10] = ""Egg Staff"",
}
local weapons = {
	""Bat"",
	""Carrot Sword"",
	""Egg Staff""
}
local healing = {
	""Healing Carrot""
}
local inventories = {}
local collecteggs = {}

function checkitem(player, name)
	for i, v in pairs(inventories[player]) do
		if v.Name == name then
			return true
		end
	end
	return false
end

function fetcheggtable()
	local eggtable = {}
	for _, egg in pairs(workspace.Eggs:GetChildren()) do
		table.insert(eggtable, egg.Name)
	end
	return eggtable
end

function getequippeditem(player)
	for i, v in pairs(inventories[player]) do
		if v.Equipped then
			return v.Name
		end
	end
end

function setproximity(object)
	local prompt = Instance.new(""ProximityPrompt"", object)
	prompt.ActionText = 15
	prompt.ObjectText = object.Name
	prompt.ActionText = ""Collect""
	prompt.HoldDuration = 1
	return prompt
end

for _, egg in pairs(eggs:GetChildren()) do
	local prompt = setproximity(egg)
	prompt.Triggered:Connect(function(player)
		local leaderstats = player:WaitForChild(""leaderstats"")
		local eggs_ =  leaderstats:WaitForChild(""E-Eggs🥚"")
		eggs_.Value += 1
		collectegg:FireClient(player, egg)
		collecteggs[player][egg.Name] = true
	end)
end

players.PlayerAdded:Connect(function(player)
	player.CharacterAdded:Wait()
	local inventory = datastore2(""Inventory2"", player)
	local eggsdata = datastore2(""Eggs"", player)
	local collectedeggs = datastore2(""CollectedEggs"", player):Get()
	local data = inventory:Get()
	local startergear = player:WaitForChild(""StarterGear"")
	local backpack = player:WaitForChild(""Backpack"")
	local leaderstats = Instance.new(""Folder"", player)
	local eggs_ = Instance.new(""IntValue"", leaderstats)
	leaderstats.Name = ""leaderstats""
	eggs_.Name = ""E-Eggs🥚""
	eggs_.Value = eggsdata:Get() or 0
	if collectedeggs then
		collecteggs[player] = collectedeggs
		for eggname, value in pairs(collectedeggs) do
			if value then
				collectegg:FireClient(player, eggs:FindFirstChild(eggname))
			end
		end
	else
		local thetable = {}
		for _, v in pairs(fetcheggtable()) do
			thetable[v] = false
		end
		collecteggs[player] = thetable
	end
	if data == {} or not data then
		data = {
			{
				[""Name""] = ""Bat"",
				[""Equipped""] = true,
			},
		}
	end
	
	if eggs_.Value >= 10 then
		opendoor:FireClient(player)
	end
	
	inventories[player] = data
	weaponevent:FireClient(player, inventories[player])
	healingevent:FireClient(player, inventories[player])
	for _, tool in pairs(inventories[player]) do
		if not tool.Equipped then continue end
		local tool = tools:FindFirstChild(tool.Name)
		if not tool then continue end
		local clone = tool:Clone()
		clone.Parent = startergear
		tool:Clone().Parent = backpack
	end
end)

players.PlayerRemoving:Connect(function(player)
	local inventory = datastore2(""Inventory2"", player)
	local collectedeggs = datastore2(""CollectedEggs"", player)
	local eggsdata = datastore2(""Eggs"", player)
	local leaderstats = player:WaitForChild(""leaderstats"")
	local eggs = leaderstats:WaitForChild(""E-Eggs🥚"")
	inventory:Set(inventories[player])
	eggsdata:Set(eggs.Value)
	collectedeggs:Set(collecteggs[player])
end)

unlockable.OnServerInvoke = function(player, item)
	local leaderstats = player:WaitForChild(""leaderstats"")
	local eggs = leaderstats:WaitForChild(""E-Eggs🥚"")
	local inventory = datastore2(""Inventory2"", player)
	for price, name in pairs(inventoryinfo) do
		if item == name and eggs.Value >= tonumber(price) and not checkitem(player, item) then
			table.insert(inventories[player], {[""Name""] = item, [""Equipped""] = false})
			inventory:Set(inventories[player])
			weaponevent:FireClient(player, inventories[player])
			healingevent:FireClient(player, inventories[player])
			return true
		end
	end
	return false
end

weaponevent.OnServerEvent:Connect(function(player, toolname, status)
	if checkitem(player, toolname) and table.find(weapons, toolname) then
		local StarterGear = player:WaitForChild(""StarterGear"")
		local backpack = player:WaitForChild(""Backpack"")
		if status == ""Unequip"" then
			for _, v in pairs(inventories[player]) do
				if not table.find(weapons, v.Name) then continue end
				v.Equipped = false
				if v.Name == ""Bat"" then
					v.Equipped = true
				end
 			end
			for _, v in pairs(StarterGear:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(backpack:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(player.Character:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			local carrotsword = tools[""Bat""]
			carrotsword:Clone().Parent = StarterGear
			carrotsword:Clone().Parent = backpack
		else
			for _, v in pairs(inventories[player]) do
				if not table.find(weapons, v.Name) then continue end
				v.Equipped = false
				if v.Name == toolname then
					v.Equipped = true
				end
			end
			for _, v in pairs(StarterGear:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(backpack:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(player.Character:GetChildren()) do
				if table.find(weapons, v.Name) then
					v:Destroy()
				end
			end
			local carrotsword = tools[toolname]
			carrotsword:Clone().Parent = StarterGear
			carrotsword:Clone().Parent = backpack
		end
	end
	weaponevent:FireClient(player, inventories[player])
end)

healingevent.OnServerEvent:Connect(function(player, toolname, status)
	if checkitem(player, toolname) and table.find(healing, toolname) then
		local StarterGear = player:WaitForChild(""StarterGear"")
		local backpack = player:WaitForChild(""Backpack"")
		if status == ""Unequip"" then
			for _, v in pairs(inventories[player]) do
				if not table.find(healing, v.Name) then continue end
				v.Equipped = false
			end
			for _, v in pairs(StarterGear:GetChildren()) do
				if table.find(healing, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(backpack:GetChildren()) do
				if table.find(healing, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(player.Character:GetChildren()) do
				if table.find(healing, v.Name) then
					v:Destroy()
				end
			end
		else
			for _, v in pairs(inventories[player]) do
				if not table.find(healing, v.Name) then continue end
				v.Equipped = false
				if v.Name == toolname then
					v.Equipped = true
				end
			end
			for _, v in pairs(StarterGear:GetChildren()) do
				if table.find(healing, v.Name) then
					v:Destroy()
				end
			end
			for _, v in pairs(player.Character:GetChildren()) do
				if table.find(healing, v.Name) then
					v:Destroy()
				end
			end
			local tool = tools[toolname]
			tool:Clone().Parent = StarterGear
			tool:Clone().Parent = backpack
		end
	end
	healingevent:FireClient(player, inventories[player])
end)

doorway.ProximityPrompt.Triggered:Connect(function(player)
	local leaderstats = player:WaitForChild(""leaderstats"")
	local eggs_ =  leaderstats:WaitForChild(""E-Eggs🥚"")
	if eggs_.Value >= requiredeggs then
		opendoor:FireClient(player)
	end
end)

chatpromt.Triggered:Connect(function(player)
	dialogue:FireClient(player)
end)

inventoryinfoevent.OnServerInvoke = function(player)
	return inventoryinfo
end"
mub526jY,RequestException: error with request,basedcount_bot,Python,Thursday 1st of February 2024 12:59:17 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 122, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
Eu3r3emn,Cutscene Handler (401 lines),3DCreator,Lua,Thursday 1st of February 2024 12:57:31 PM CDT,"local cake = workspace:FindFirstChild(""cake"")
local minecraft = cake:FindFirstChild(""Minecraft Cake"")
local proximity = minecraft:FindFirstChild(""ProximityPrompt"")
local players = game:GetService(""Players"")
local player = players.LocalPlayer
local cakecameras = workspace:FindFirstChild(""Cameras""):FindFirstChild(""Cakescene"")
local cashiercameras = workspace:FindFirstChild(""Cameras""):FindFirstChild(""Cashierscene"")
local breakfastcameras = workspace:FindFirstChild(""Cameras""):FindFirstChild(""Breakfastscene"")
local canadacameras = workspace:FindFirstChild(""Cameras""):FindFirstChild(""Canadascene"")
local camera = workspace.CurrentCamera
local tweenservice = game:GetService(""TweenService"")
local lighting = game:GetService(""Lighting"")
local previous = 0
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local toolsevent = replicatedstorage:FindFirstChild(""Tools"")
local connection = replicatedstorage:FindFirstChild(""Connection"")
local badgeservice = game:GetService(""BadgeService"")
local porximity2 = workspace:FindFirstChild(""Cashier""):FindFirstChild(""ProximityPrompt"")
local Sfxtype = workspace:FindFirstChild(""UISFX""):FindFirstChild(""Type"")
local cashierframe = script.Parent:FindFirstChild(""CashierFrame"")
local canadaframe = script.Parent:FindFirstChild(""CanadaFrame"")
local message = cashierframe:FindFirstChild(""Message"")
local options = cashierframe.Options
local shopframe = script.Parent:FindFirstChild(""ShopFrame"")
local bordergate = workspace[""Border Gate""]
local bordergate2 = workspace[""Border Gate1""]
local toolshop = shopframe:FindFirstChild(""ToolShop"")
local borderguard = workspace:FindFirstChild(""Border Guard"")
local inshop = false
local backpack = player.Backpack
local breakfastending = false
local tweenInfo = TweenInfo.new(
	3,
	Enum.EasingStyle.Sine,
	Enum.EasingDirection.Out,
	0,
	false,
	1
)
local tweeninfo_ = TweenInfo.new(
	2,
	Enum.EasingStyle.Quint,
	Enum.EasingDirection.Out,
	0,
	false,
	1
)
local tweeninfo__ = TweenInfo.new(
	0.5,
	Enum.EasingStyle.Quint,
	Enum.EasingDirection.Out,
	0,
	false,
	1
)

local function typeText(text, object)
	object.Text = """"
	for i = 1, #text do
		object.Text = string.sub(text,1,i)
		Sfxtype:Play()
		wait(0.04)
	end
end

local function goodbye(object, proximitypromt)
	cashierframe.Visible = false
	canadaframe.Visible = false
	options.Visible = false
	shopframe.Visible = false
	local charcter = player.Character or player.CharacterAdded:Wait()
	local HumanoidRootPart = charcter:FindFirstChild(""HumanoidRootPart"")
		cashierframe.Visible = true
		options.Visible = false
		message.Visible = true
		message.Text = """"
		typeText(""Goodbye 👋"", message)
		camera.CameraType = Enum.CameraType.Custom
		wait(0.5)
		message.Visible = false
		cashierframe.Visible = false
		canadaframe.Visible = false
		shopframe.Visible = false
		HumanoidRootPart.Anchored = false
		inshop = false
		proximitypromt.Enabled = true
end

porximity2.Triggered:Connect(function(player)
	inshop = true
	porximity2.Enabled = false
	local charcter = player.Character or player.CharacterAdded:Wait()
	charcter:FindFirstChild(""HumanoidRootPart"").Anchored = true
	camera.CameraType = Enum.CameraType.Scriptable
	local tween4 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera1"").CFrame})
	local tween7 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera1"").CFrame})
	tween4:Play()
	workspace.NPCSFX.CashierSpeech:Play()
	tween4.Completed:Connect(function()
		options.Visible = false
		cashierframe.Visible = true
		message.Visible = true
		porximity2.Parent.Parent = replicatedstorage
		local casheier2 = replicatedstorage:FindFirstChild(""Cashier2"")
		if not casheier2 then
			return 
		else
			casheier2.Parent = workspace
		end
		wait()
		typeText(""I own this shop now what'd ya like to buy?"", message)
		wait(1)
		local tween5 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera2"").CFrame})
		local tween8 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera2"").CFrame})
		local tween9 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera2"").CFrame})
		tween5:Play()
		tween5.Completed:Connect(function()
			local tween6 = tweenservice:Create(camera, tweeninfo_, {CFrame = cashiercameras:FindFirstChild(""Camera1"").CFrame})
			
			message.Visible = false
			options.Visible = true
			options:FindFirstChild(""ToolButton"").MouseButton1Click:Connect(function()
				tween9:Play()
				cashierframe.Visible = false
				shopframe.Visible = true
				toolshop.Visible = true
			end)
			for _, item in pairs(toolshop:GetChildren()) do
				if item:IsA(""Frame"") then
					if item.Enabled then
						for _, v in pairs(item:GetChildren()) do
							if v:IsA(""TextButton"") or v:IsA(""ImageButton"") then
								if item.Name == ""ByeFrame"" then
									v.MouseButton1Click:Connect(function()
										goodbye(cashiercameras.Camera1, porximity2)
										workspace:FindFirstChild(""Cashier2"").Parent = replicatedstorage
										porximity2.Parent.Parent = workspace
										porximity2.Enabled = true
										inshop = false
									end)
								else
									v.MouseButton1Click:Connect(function()
										if player.leaderstats.Cash.Value >= item.IPrice.Value then
											toolsevent:FireServer(item.ItemName.Value, item.IPrice.Value)
											toolsevent.OnClientEvent:Connect(function(bool)
												if bool then
													toolshop.Visible = false
													shopframe.Visible = false
													cashierframe.Visible = false
													options.Visible = false
													tween7:Play()
													tween7.Completed:Connect(function()
														cashierframe.Visible = true
														options.Visible = false
														message.Visible = true
														typeText(""Thanks for the cash, you wanna purchase anything else?"", message)
														tween8:Play()
														tween8.Completed:Connect(function()
															message.Visible = false
															options.Visible = true
														end)
													end)
												end
											end)
										end
									end)
								end
								end
							
						end
					end
				end
			end
			options:FindFirstChild(""ByeButton"").MouseButton1Click:Connect(function()		
				goodbye(cashiercameras.Camera1, porximity2)
				workspace:FindFirstChild(""Cashier2"").Parent = replicatedstorage
				porximity2.Parent.Parent = workspace
				porximity2.Enabled = true
				inshop = false
			end)
		end)
	end)
end)

borderguard.ProximityPrompt.Triggered:Connect(function()
	local character = player.Character or player.CharacterAdded
	camera.CameraType = Enum.CameraType.Scriptable
	borderguard.ProximityPrompt.Enabled = false
	local tween = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera1"").CFrame})
	local tween1 = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera2"").CFrame})
	local tween2 = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera3"").CFrame})
	local tween3 = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera4"").CFrame})
	local tween4 = tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera5"").CFrame})
	local tween5 = tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera1"").CFrame})
	local tween6 = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera2"").CFrame})
	local tween7 = tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera1"").CFrame})
	local tween8 = tweenservice:Create(camera, tweeninfo_, {CFrame = canadacameras:FindFirstChild(""Camera2"").CFrame})
	local tween9 = tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera1"").CFrame})
	local tween10 =  tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera2"").CFrame})
	local tween11 = tweenservice:Create(camera, tweenInfo, {CFrame = canadacameras:FindFirstChild(""Camera1"").CFrame})
	options.Visible = false
	tween:Play()
	tween.Completed:Connect(function()
		cashierframe.Visible = true
		character.HumanoidRootPart.Anchored = true
		canadaframe.Visible = false
		shopframe.Visible = false
		message.Visible = true
		message.Text = """"
		typeText(""Aye lad what you want?"", message)
		tween1:Play()
		tween1.Completed:Connect(function()
			canadaframe.Visible = true
			cashierframe.Visible = false
			shopframe.Visible = false
			for _, frame in pairs(canadaframe:GetChildren()) do
				if frame:IsA(""Frame"") then
					for _, button in pairs(frame:GetChildren()) do
						if button:IsA(""TextButton"") or button:IsA(""ImageButton"") then
							button.MouseButton1Click:Connect(function()
								if frame.Name == ""ByeFrame"" then
									goodbye(canadacameras:FindFirstChild(""Camera1""), borderguard.ProximityPrompt)
								elseif frame.Name == ""AskFrame"" then
									canadaframe.Visible = false
									tween5:Play()
									message.Text = """"
									tween5.Completed:Connect(function()
										canadaframe.Visible = false
										shopframe.Visible = false
										cashierframe.Visible = true
										message.Visible = true
										message.Text = """"
										typeText(""I've always wanted to be in the army so I became a military veteran, but old age has hit me now so I continue to be somewhat part of the military."", message)
										wait(1.5)
										message.Text = """"
										typeText(""Anything else you want?"", message)
										tween6:Play()
										tween6.Completed:Connect(function()
											message.Text = """"
											message.Visible = false
											cashierframe.Visible = false
											canadaframe.Visible = true
											shopframe.Visible = false
										end)
									end)
								elseif frame.Name == ""BorderFrame"" then
									canadaframe.Visible = false
									tween9:Play()
									tween9.Completed:Connect(function()
										shopframe.Visible = false
										cashierframe.Visible = true
										message.Visible = true
										message.Text = """"
										typeText(""Alright please equip your passport, I'll give you 3 seconds to get it out"", message)
										tween10:Play()
										tween10.Completed:Connect(function()
											wait(3)
											cashierframe.Visible = false
											message.Text = """"
											if not character:FindFirstChild(""Fake Passport"") then
												tween7:Play()
												tween7.Completed:Connect(function()
													cashierframe.Visible = true
													typeText(""No passport found you may not cross"", message)
													canadaframe.Visible = false
													cashierframe.Visible = false
													shopframe.Visible = false
													message.Text = """"
													character.Humanoid.Health = 0
												end)
											elseif character:FindFirstChild(""Fake Passport"") then
												tween11:Play()
												tween11.Completed:Connect(function()
													cashierframe.Visible = true
													message.Text = """"
													typeText(""Passport found, you may now enter Canada🇨🇦"",message)
													tween2:Play()
													tween2.Completed:Connect(function()
														tween3:Play()
														tween3.Completed:Connect(function()
															tween4:Play()
															tween4.Completed:Connect(function()
																workspace:FindFirstChild(""Border""):Destroy()
																local clonedbordergate = replicatedstorage:FindFirstChild(""Border Gate""):Clone()
																local clonedbordergate2 = replicatedstorage:FindFirstChild(""Border Gate1""):Clone()
																clonedbordergate.Parent = workspace
																clonedbordergate2.Parent = workspace
																bordergate.Parent = replicatedstorage
																bordergate2.Parent = replicatedstorage
																replicatedstorage:FindFirstChild(""badges""):FireServer(2142976355)
																wait(1)
																goodbye(canadacameras:FindFirstChild(""Camera1""), borderguard.ProximityPrompt)
															end)
														end)
													end)
												end)
											end
										end)
									end)
								end
							end)
						end
					end
				end
			end
		end)
	end)
end)

proximity.Triggered:Connect(function(player)
	proximity.Enabled = false
	connection:FireServer()
	print(""trigeddd"")
	script.Sound:Play()
	lighting.ColorShift_Top = Color3.fromRGB(217, 21, 2)
	lighting.ColorShift_Bottom = Color3.fromRGB(217, 21, 2)
	lighting.ClockTime = 22
	camera.CameraType = Enum.CameraType.Scriptable
	camera.CFrame = cakecameras:FindFirstChild(""Camera1"").CFrame
	local tween = tweenservice:Create(camera, tweenInfo, {CFrame = cakecameras:FindFirstChild(""Camera2"").CFrame})
	tween:Play()
	wait(3)
	local tween2 = tweenservice:Create(camera, tweenInfo, {CFrame = cakecameras:FindFirstChild(""Camera3"").CFrame})
	tween2:Play()
	wait(3.5)
	script.Sound:Stop()
	script.Creepy:Play()
	player:FindFirstChild(""PlayerGui""):FindFirstChild(""FadeBlank""):FindFirstChild(""Activate"").Enabled = true
	player:FindFirstChild(""PlayerGui""):FindFirstChild(""Player""):FindFirstChild(""LocalScript""):FindFirstChild(""Sound""):Destroy()
	wait(5)
	player:Kick(""Never Steal Cake"")
end)

backpack.ChildAdded:Connect(function(object)
	if breakfastending == true then return end
	if backpack:FindFirstChild(""BloxyCola"") and backpack:FindFirstChild(""Crips"") then
		repeat wait(2)
			print(""Checking if in shop"")
		until inshop == false
		porximity2.Enabled = false
		wait(4)
		replicatedstorage:FindFirstChild(""badges""):FireServer(2142975896)
		script.Phonk.TimePosition = 55
		script.Phonk:Play()
		camera.CameraType = Enum.CameraType.Scriptable
		local table_ = replicatedstorage:FindFirstChild(""Table"")
		local tween10 = tweenservice:Create(camera, tweeninfo_, {CFrame = breakfastcameras:FindFirstChild(""Camera1"").CFrame})
		local tween11 = tweenservice:Create(camera, tweenInfo, {CFrame = breakfastcameras:FindFirstChild(""Camera2"").CFrame})
		local tween12 = tweenservice:Create(camera, tweeninfo_, {CFrame = breakfastcameras:FindFirstChild(""Camera3"").CFrame})
		local tween13 = tweenservice:Create(camera, tweeninfo__, {CFrame = breakfastcameras:FindFirstChild(""Camera4"").CFrame})
		local tween14 = tweenservice:Create(camera, tweeninfo__, {CFrame = breakfastcameras:FindFirstChild(""Camera5"").CFrame})
		local tween15 = tweenservice:Create(camera, tweeninfo__, {CFrame = breakfastcameras:FindFirstChild(""Camera6"").CFrame})
		tween10:Play()
		table_.Parent = workspace
		table_.Handledrink.OpenSound:Play()
		table_.Handledrink.DrinkSound:Play()
		wait(1)
		table_.Handlecrisp.DrinkSound:Play()
		table_.Handlecrisp.OpenSound:Play()
		tween10.Completed:Connect(function()
			tween11:Play()
			table_.Handledrink.OpenSound:Play()
			table_.Handledrink.DrinkSound:Play()
			table_.Handlecrisp.DrinkSound:Play()
			table_.Handlecrisp.OpenSound:Play()
			tween11.Completed:Connect(function()
				wait(1)
				tween12:Play()
				tween12.Completed:Connect(function()
					replicatedstorage:FindFirstChild(""Angry Gigachad"").Parent = workspace
					wait(1)
					tween13:Play()
					tween13.Completed:Connect(function()
						tween14:Play()
						tween14.Completed:Connect(function()
							cashierframe.Visible = true
							options.Visible = false
							message.Text = """"
							message.Visible = true
							typeText(""GigaChad: EAT PROTEIN NOT UNHEALTHY STUFF"", message)
							wait(2)
							player.Character.Humanoid.Health -= 50
							tween15:Play()
							tween15.Completed:Connect(function()
								wait(1)
								cashierframe.Visible = false
								camera.CameraType = Enum.CameraType.Custom
								table_.Parent = replicatedstorage
								workspace:FindFirstChild(""Angry Gigachad"").Parent = replicatedstorage
								script.Phonk:Stop()
								breakfastending = true
								porximity2.Enabled = true
							end)
						end)

					end)
					end)
			end)
		end)
	end
end)"
8Qi7MHmM,No Way I'm an Adult,ktvchains,Perl,Thursday 1st of February 2024 12:56:13 PM CDT,"# raw, 1080p
 
# E41 240129 [Honey J]
watch: https://www.bilibili.tv/en/video/4790107850408448

# E40 230711 [Monika]
watch: https://www.bilibili.tv/en/video/4787787630646784"
