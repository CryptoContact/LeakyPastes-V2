id,title,username,language,date,content
UBihU18U,Conversor MP4 para MP3 e Vice Versa (Necessita do FFMPEG) Versão Final (IMPORTANTE),MizunoBrasil,Python,Saturday 11th of May 2024 12:52:41 AM CDT,"************************************************************
** Necessário ter instalado o FFMPEG para funcionar     ****
------------------------------------------------------------
Arquivo .bat:
@echo off
echo Instalando o FFmpeg...
winget install ffmpeg
echo.
echo O FFmpeg foi instalado com sucesso!
pause
echo Pressione uma tecla para fechar...
pause > nul
---------------------------------------------------------------------
** MP3 para MP4 permite adicionar imagem de fundo (poster/thumbnail) *
*********************************************************************

import tkinter as tk
from tkinter import filedialog, messagebox, ttk
import subprocess
import threading
import os

class FileConverterApp:
    def __init__(self, master):
        self.master = master
        master.title(""Conversor de Arquivos"")

        # Criar o menu
        menu_bar = tk.Menu(master)
        file_menu = tk.Menu(menu_bar, tearoff=0)
        file_menu.add_command(label=""Sair"", command=master.quit)
        menu_bar.add_cascade(label=""Arquivo"", menu=file_menu)
        help_menu = tk.Menu(menu_bar, tearoff=0)
        help_menu.add_command(label=""Sobre"", command=self.show_about)
        menu_bar.add_cascade(label=""Ajuda"", menu=help_menu)
        master.config(menu=menu_bar)

        # Configurações da janela
        window_size = ""400x300""
        master.geometry(window_size)
        screen_width = master.winfo_screenwidth()
        screen_height = master.winfo_screenheight()
        x = int((screen_width / 2) - (400 / 2))
        y = int((screen_height / 2) - (300 / 2))
        master.geometry(f""{window_size}+{x}+{y}"")

        # Botões para escolher tipo de conversão
        self.mp4_to_mp3_button = tk.Button(master, text=""Converter MP4 para MP3"", command=self.convert_mp4_to_mp3)
        self.mp4_to_mp3_button.pack(pady=10)

        self.mp3_to_mp4_button = tk.Button(master, text=""Converter MP3 para MP4"", command=self.convert_mp3_to_mp4)
        self.mp3_to_mp4_button.pack(pady=10)

        # Barra de progresso
        self.progress_bar = ttk.Progressbar(master, mode='indeterminate', length=200)

        # Caixa de texto para exibir o caminho do arquivo convertido
        self.output_path_entry = tk.Entry(master, width=50)
        self.output_path_entry.pack(pady=10)
        self.output_path_entry.config(state='readonly', readonlybackground='white')

        # Adicionar menu de contexto à caixa de texto
        self.context_menu = tk.Menu(master, tearoff=0)
        self.context_menu.add_command(label=""Copiar"", command=self.copy_to_clipboard)
        self.output_path_entry.bind(""<Button-3>"", self.show_context_menu)

        # Label para mensagem final
        self.result_label = tk.Label(master, text="""")
        self.result_label.pack()

        # Rodapé com a versão do programa
        self.footer_label = tk.Label(master, text=""Conversor MP3/MP4 - v5"", anchor=""w"")
        self.footer_label.pack(side=""bottom"", fill=""x"")

    def convert_mp4_to_mp3(self):
        mp4_file = filedialog.askopenfilename(filetypes=[(""MP4 Files"", ""*.mp4"")])
        if not mp4_file:
            messagebox.showwarning('Aviso', 'Seleção de arquivo MP4 cancelada.')
            return

        # Obter apenas o nome do arquivo sem extensão
        output_file_name = os.path.splitext(os.path.basename(mp4_file))[0]
        
        output_file = filedialog.asksaveasfilename(defaultextension="".mp3"", filetypes=[(""MP3 Files"", ""*.mp3"")], initialfile=output_file_name)
        if not output_file:
            messagebox.showwarning('Aviso', 'Conversão cancelada.')
            return

        command = [
            'ffmpeg',
            '-i', mp4_file,
            '-vn',
            '-acodec', 'libmp3lame',
            '-q:a', '4',
            f""{output_file}""
        ]

        self.progress_bar.pack(pady=10)
        self.progress_bar.start(10)
        
        threading.Thread(target=self.run_ffmpeg_command, args=(command, output_file)).start()

    def convert_mp3_to_mp4(self):
        mp3_file = filedialog.askopenfilename(filetypes=[(""MP3 Files"", ""*.mp3"")])
        if not mp3_file:
            messagebox.showwarning('Aviso', 'Seleção de arquivo MP3 cancelada.')
            return

        # Obter apenas o nome do arquivo sem extensão
        output_file_name = os.path.splitext(os.path.basename(mp3_file))[0]
        
        output_file = filedialog.asksaveasfilename(defaultextension="".mp4"", filetypes=[(""MP4 Files"", ""*.mp4"")], initialfile=output_file_name)
        if not output_file:
            messagebox.showwarning('Aviso', 'Conversão cancelada.')
            return

        image_file = filedialog.askopenfilename(filetypes=[(""Image Files"", ""*.jpg;*.jpeg;*.png"")])
        if not image_file:
            messagebox.showwarning('Aviso', 'Seleção de imagem cancelada.')
            return

        command = [
            'ffmpeg',
            '-loop', '1',
            '-framerate', '2',
            '-i', image_file,
            '-i', mp3_file,
            '-vf', 'scale=trunc(iw/2)*2:trunc(ih/2)*2',
            '-c:v', 'libx264',
            '-tune', 'stillimage',
            '-c:a', 'aac',
            '-b:a', '192k',
            '-shortest',
            '-pix_fmt', 'yuv420p',
            f""{output_file}""
        ]

        self.progress_bar.pack(pady=10)
        self.progress_bar.start(10)
        
        threading.Thread(target=self.run_ffmpeg_command, args=(command, output_file)).start()

    def run_ffmpeg_command(self, command, output_file):
        try:
            subprocess.run(command, check=True)
            self.output_path_entry.config(state='normal')
            self.output_path_entry.delete(0, tk.END)
            self.output_path_entry.insert(0, output_file)
            self.output_path_entry.config(state='readonly')
            self.result_label.config(text=""Conversão concluída!"")
            messagebox.showinfo('Sucesso', 'Conversão concluída!')
        except subprocess.CalledProcessError as e:
            self.result_label.config(text=f""Falha na conversão: {e}"")
            messagebox.showerror('Erro', f'Falha na conversão: {e}')
        finally:
            self.progress_bar.stop()
            self.progress_bar.pack_forget()  # Esconde a barra de progresso após a conclusão

    def show_context_menu(self, event):
        self.context_menu.post(event.x_root, event.y_root)

    def copy_to_clipboard(self):
        self.output_path_entry.select_range(0, tk.END)
        self.output_path_entry.event_generate('<<Copy>>')
        self.output_path_entry.selection_clear()

    def show_about(self):
        messagebox.showinfo(""Sobre"", ""Conversor de arquivos MP3 para vídeo em MP4 e vice-versa\n2024 - Mizuno"")

root = tk.Tk()
app = FileConverterApp(root)
root.mainloop()"
KUrNREH5,U_Proses.PAS,afrizalwahyuadi66,TypeScript,Saturday 11th of May 2024 12:48:14 AM CDT,"unit U_proses;
interface
   uses crt;
   function PROS_1 ( var x,y,z,t,k,kur : real):real;
   function pros_2 ( var s,ls,kl         : real):real;
   function PROS_3 ( var a,b,c,Luas,Keliling:Real):real;
   function PROS_4 ( var LL,KL,Diameter,JariJari:Real):real;
   function PROS_5 ( var V1,V2,V3,T1,T2,T3,S1,S2,S3,RataRataJarak:Real):real;
   Procedure PROS_6 (var X:Integer; y : string);
   procedure PROS_7 ( var a,b,c,d,e : real);
   function PROS_8 ( var X:integer):integer;
   procedure PROS_9 (IM :string ;UTS,UAS,TUGAS,KEHADIRAN,NA:real);
   Procedure PROS_10 (n,b,c:integer);
   Procedure PROS_11 (N,i,jumlahBarisan:integer);
   Procedure PROS_12 (x,n,firstterm, secondterm, nextterm:integer);

 implementation

 function PROS_1 ( var x,y,z,t,k,kur : real):real;
     begin
        gotoxy(43,04);
        readln(x);
        gotoxy(43,06);
        readln(y);
        gotoxy(43,08);
        readln(z);

        t := x + y+z;
        k := x * y * z;
        kur := x - y - z;
        gotoxy(44,10);write(t:0:2);
        gotoxy(44,12);write(k  :0:2);
        gotoxy(44,11);write(kur:0:2);

     end;

   function pros_2 ( var s,ls,kl         : real):real;
      begin
      gotoxy(48,04);
   readln(s);

   ls := (s * s * sqrt(3)) / 4;
   kl := 3 * s;

  gotoxy(50,07);write(ls:0:2);
  gotoxy(50,08);write(kl:0:2);

      end;


  function PROS_3 ( var a,b,c,Luas,Keliling:Real):real;
    begin

     gotoxy(43,04);
     Readln(a);
     gotoxy(43,06);
     Readln(b);
     c:=sqrt(a*a+b*b);
     luas:=0.5*a*b;
     Keliling:=a+b+c;
     gotoxy(47,09);write(Luas:0:2);
     gotoxy(47,08);write(Keliling:0:2);
    end;

  function PROS_4 ( var LL,KL,Diameter,JariJari:Real):real;
    begin
      gotoxy(47,04);
      Readln(Diameter);
      JariJari:=Diameter/2;
      LL:=3.14*JariJari*JariJari;
      KL:=2*3.14*JariJari;
      gotoxy(47,07);write(LL:0:2);
      gotoxy(47,08);write(KL:0:2);
    end;

  function PROS_5 ( var V1,V2,V3,T1,T2,T3,S1,S2,S3,RataRataJarak:Real):real;
    begin

      gotoxy(49,04);
      Readln(V1);
      gotoxy(49,06);
      Readln(T1);
      gotoxy(49,08);
      Readln(V2);
      gotoxy(49,10);
      Readln(T2);
      gotoxy(49,12);
      Readln(V3);
      gotoxy(49,14);
      Readln(T3);
      S1:=V1*T1;
      S2:=V2*T2;
      S3:=V3*T3;
      RataRataJarak:=(S1+S2+S3);
      gotoxy(49,16);write(S1:0:2);
      gotoxy(49,17);write(S2:0:2);
      gotoxy(49,18);write(S3:0:2);
      gotoxy(49,20);write(RataRataJarak:0:2);
    end;

  Procedure PROS_6 (var X:Integer;y : string);
   begin
      gotoxy(47,04);
      Readln(X);
      gotoxy(32,07);
      if (x < 0) then
         y := 'NEGATIF'
      else
         y := 'POSITIF';
         if (x = 0) then
            write('nol')
         else
            if (x mod 2 = 0) then
               write('BILANGAN GENAP ',y)
            else
               write('BILANGAN GANJIl ',y);
   end;

  procedure PROS_7 ( var a,b,c,d,e : real);
   begin
      gotoxy(23,04);Writeln('Masukan Jumlah Pembelian :');
      gotoxy(23,05);Write('Jumlah Pembelian:Rp.');
      Readln(a);
      gotoxy(23,07);Write('Jenis Konsumen');
      gotoxy(23,08);write('1:Pelanggan,2:Non-Pelanggan: ');
      Readln(b);
      if (b = 1) then
       c:=0.1*a
      else
       c:=0;
       e:=(Trunc(a/1000000))*30000;
       d:=a-c+e;
       gotoxy(23,10);Writeln('==============================');
       gotoxy(23,11);Writeln('       Struk Pembayaran       ');
       gotoxy(23,12);Writeln('------------------------------');
       gotoxy(23,13);Writeln('Jumlah Pembelian : Rp.',a:0:3);
       gotoxy(23,14);Writeln('Potongan         : Rp.',c:0:3);
       gotoxy(23,15);Writeln('Cashback         : Rp.',e:0:3);
       gotoxy(23,16);Writeln('------------------------------');
       gotoxy(23,17);Writeln('Total Pembayaran : Rp.',d:0:3);
       gotoxy(23,18);Writeln('==============================');
      end;

  function PROS_8 ( var X:integer):integer;
   begin
     gotoxy(47,04);
      Readln(x);
      gotoxy(33,07);
      case X of
       0:Writeln('nol');
       1:Writeln('satu');
       2:Writeln('dua');
       3:Writeln('tiga');
       4:Writeln('empat');
       5:Writeln('lima');
       6:Writeln('enam');
       7:Writeln('tujuh');
       8:Writeln('delapan');
       9:Writeln('sembilan');
     else
       gotoxy(33,07);Writeln('salah entri:ketik bilangan 0..9');
     end;
   end;

 procedure PROS_9 (IM :string ;UTS,UAS,TUGAS,KEHADIRAN,NA:real);
  begin
    gotoxy(50,04);
    Readln(UTS);

    gotoxy(50,06);
    Readln(UAS);

    gotoxy(50,08);
    Readln(TUGAS);

    gotoxy(50,10);
    readln(KEHADIRAN);
    KEHADIRAN:=(KEHADIRAN/16)*100;
    NA:=(0.3* UTS)+(0.4* UAS)+(0.2*TUGAS)+(0.1*KEHADIRAN);
   case Round(NA) of
     0..100:
      begin;
       case Round(NA) of
        81..100:IM := ' A';
        66..80: IM := ' B';
        51..65: IM := ' C';
        41..50: IM := ' D';
       else   IM:= ' E';
       end;
        gotoxy(50,12);Writeln('',NA:0:2);
        gotoxy(50,13);Write('',IM);
      end;
    else
     gotoxy(50,12);Write('Salah nilai');
   end;
  end;

 Procedure PROS_10 (n,b,c:integer);
   begin
     Gotoxy(48,04);
      readln(n);
     Gotoxy(48,06);
      readln(b);
      for c :=  n to b do
         Begin
           Gotoxy(32,08); write(' ',++c);
         End;
   end;

  Procedure PROS_11 (N,i,jumlahBarisan:integer);
   begin
    Gotoxy(48,04);
     Readln(N);
    Gotoxy(48,06);
     Readln(jumlahBarisan);
    Gotoxy(32,08);
     for i:=1 to jumlahBarisan do
     begin
      Write(N*i,'');
     end;
   end;

  Procedure PROS_12 (x,n,firstterm, secondterm, nextterm:integer);
  BEGIN

   firstterm := 0;
   secondterm := 1;

  gotoxy(45,04);
   readln(n);

   for n := 1 to n do
   begin
    if n = 1 then
      writeln(firstterm)
    else if n = 2 then
      writeln(secondterm)
    else
    begin
      nextterm := firstterm + secondterm;
      firstterm := secondterm;
      secondterm := nextterm;
      writeln(nextterm);
    end;
   end;
  end;





begin
end.
"
Y3c1C6Xc,fifth_task,artmexbet,C++,Saturday 11th of May 2024 12:47:22 AM CDT,"#include <iostream>
#include <vector>
#include <semaphore.h>
#include <atomic>
#include <thread>

class TableToClean {
public:
    int tableNumber;
    int guestNumber;

    TableToClean(int tableNumber, int guestNumber) {
        this->tableNumber = tableNumber;
        this->guestNumber = guestNumber;
    }
};

std::vector<std::vector<bool>> matrix;

std::vector<TableToClean> tablesToClean;

sem_t queueSem;  // Семафор для количества людей в очереди (по нему продавцы ориентируются на наличие необработанных покупателей)
pthread_mutex_t queueMutex;  // Мьютекс для чтения и записи в очередь
pthread_mutex_t tableMutex;  // Мьютекс для работы с таблицами
sem_t freeTablesSem;  // Семафор для количества свободных столов
sem_t cleanTablesSem;  // Семафор для количества столов, которые нужно убрать
pthread_mutex_t cleanTablesMutex;  // Мьютекс для работы со столами, которые нужно убрать

pthread_rwlock_t rwlock;  // Рид-райт лок для чтения и записи в консоль

std::atomic<bool> stop_thread(false);  // Создаём ""атомарную"" переменную. Это чуть-чуть упрощает работу с потоками.
// Если эта переменная - true, все потоки умирают.

class GuestInfo {
public:
    int tableNumber;
    int guestNumber;
    int eatTime;

    GuestInfo(int tableNumber, int guestNumber, int eatTime) {
        this->tableNumber = tableNumber;
        this->guestNumber = guestNumber;
        this->eatTime = eatTime;
    }
};

void *GuestActor(void *arg) {
    auto *info = (GuestInfo *) arg;

    pthread_rwlock_wrlock(&rwlock);
    std::cout << ""Guest "" << info->guestNumber << "" started eating at table "" << info->tableNumber << std::endl;
    pthread_rwlock_unlock(&rwlock);

    std::this_thread::sleep_for(std::chrono::seconds(info->eatTime));  // Гость ест

    pthread_mutex_lock(&cleanTablesMutex);  // Лочим мьютекс
    tablesToClean.emplace_back(info->tableNumber, info->guestNumber);  // Добавляем стол в список для уборки
    pthread_mutex_unlock(&cleanTablesMutex);  // Разлочим мьютекс
    sem_post(&cleanTablesSem);  // Освобождаем семафор для уборки

    pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
    std::cout << ""Guest "" << info->guestNumber << "" finished eating at table "" << info->tableNumber << std::endl;
    pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль
    delete info;
    return nullptr;
}

class Guest {
public:
    int checkoutTime;
    int eatTime;

    Guest(int checkoutTime, int eatTime) {
        this->checkoutTime = checkoutTime;
        this->eatTime = eatTime;
    }

    void start(int tableNumber, int guestNumber) {
        pthread_t thread;
        auto *info = new GuestInfo(tableNumber, guestNumber, this->eatTime);
        pthread_create(&thread, nullptr, &GuestActor, info);
    }
};

std::vector<Guest> queue;

void *SellerActor(void *arg) {
    int *sellerId = (int *) arg;
    while (!stop_thread) {
        sem_wait(&queueSem);  // Ждем, пока в очереди не появится хоть один покупатель
        pthread_mutex_lock(&queueMutex);  // Лочим мьютекс
        if (queue.empty()) {
            pthread_mutex_unlock(&queueMutex);  // Разлочим мьютекс
            continue;
        }
        auto guest = queue[0];
        queue.erase(queue.begin());
        pthread_mutex_unlock(&queueMutex);  // Разлочим мьютекс

        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        std::cout << ""Seller "" << sellerId << "" started serving guest"" << std::endl;
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль

        std::this_thread::sleep_for(
                std::chrono::seconds(guest.checkoutTime));  // Продавец ждет, пока покупатель сделает заказ

        pthread_mutex_lock(&tableMutex);  // Лочим мьютекс

        sem_wait(&freeTablesSem);  // Ждём, пока не освободится стол

        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        std::cout << ""Seller "" << sellerId << "" finished serving guest"" << std::endl;
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль

        // Ищем свободное место
        bool found = false;
        for (int i = 0; i < matrix.size(); i++) {
            for (int j = 0; j < matrix[i].size(); j++) {
                if (!matrix[i][j]) {
                    pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
                    std::cout << ""Guest "" << j << "" sits at table "" << i << std::endl;
                    pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль
                    matrix[i][j] = true;
                    pthread_mutex_unlock(&tableMutex);  // Разлочим мьютекс
                    guest.start(i, j);
                    found = true;
                    break;
                }
            }
            if (found) {
                break;
            }
        }
    }
    return nullptr;
}

void *CleanerActor(void *arg) {
    int *cleanTime = (int *) arg;
    while (!stop_thread) {
        sem_wait(&cleanTablesSem);  // Ждем, пока появится стол, который нужно убрать
        pthread_mutex_lock(&cleanTablesMutex);  // Лочим мьютекс
        if (tablesToClean.empty()) {
            pthread_mutex_unlock(&cleanTablesMutex);  // Разлочим мьютекс
            continue;
        }
        auto table = tablesToClean[0];
        tablesToClean.erase(tablesToClean.begin());
        pthread_mutex_unlock(&cleanTablesMutex);  // Разлочим мьютекс

        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        std::cout << ""Cleaner started cleaning table "" << table.tableNumber << "" from guest "" << table.guestNumber
                  << std::endl;
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль

        std::this_thread::sleep_for(std::chrono::seconds(*cleanTime));  // Убираем стол

        pthread_mutex_lock(&tableMutex);  // Лочим мьютекс
        matrix[table.tableNumber][table.guestNumber] = false;  // Освобождаем стол
        sem_post(&freeTablesSem);  // Освобождаем семафор для свободных столов
        pthread_mutex_unlock(&tableMutex);  // Разлочим мьютекс

        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        std::cout << ""Cleaner finished cleaning table "" << table.tableNumber << "" from guest "" << table.guestNumber
                  << std::endl;
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль
    }
    return nullptr;
}

void fillMatrix(int tableCount, int tableSize) {
    matrix.resize(tableCount);
    for (int i = 0; i < tableCount; i++) {
        matrix[i].resize(tableSize);
        for (int j = 0; j < tableSize; j++) {
            matrix[i][j] = false;
        }
    }
}

void printCommands() {
    std::cout << ""----------------------------------"" << std::endl;
    std::cout << ""Commands:"" << std::endl;
    std::cout << ""1. Add guest"" << std::endl;
    std::cout << ""2. Print tables"" << std::endl;
    std::cout << ""3. Print queue"" << std::endl;
    std::cout << ""4. Exit"" << std::endl;
    std::cout << ""5. Print clean queue"" << std::endl;
    std::cout << ""Enter number of commands:"" << std::endl;
    std::cout << ""----------------------------------"" << std::endl;
}

void printTables() {
    for (int i = 0; i < matrix.size(); i++) {
        std::cout << ""Table "" << i << "": "";
        for (auto &&j: matrix[i]) {
            if (j) {
                std::cout << ""X"";  // Принтуем столы, которые заняты
            } else {
                std::cout << ""O"";  // Принтуем свободные столы
            }
        }
        std::cout << std::endl;
    }
}

void printQueue() {
    if (queue.empty()){
        std::cout << ""Queue is empty"" << std::endl;
        return;
    }
    for (int i = 0; i < queue.size(); i++) {
        std::cout << ""Guest "" << i << "": "";
        std::cout << ""Checkout time: "" << queue[i].checkoutTime << "" Eat time: "" << queue[i].eatTime << std::endl;
    }
}

void printCleanQueue() {
    if (tablesToClean.empty()){
        std::cout << ""Clean queue is empty"" << std::endl;
        return;
    }
    for (auto & i : tablesToClean) {
        std::cout << ""Table "" << i.tableNumber << "" from guest "" << i.guestNumber << std::endl;
    }
}

int main() {
    sem_init(&queueSem, 0, 0);  // Инициализируем семафор для количества людей в очереди
    // К нему подключаются продавцы, ожидающие покупателей
    pthread_mutex_init(&queueMutex, nullptr);
    // Инициализируем мьютекс для работы с очередью (добавление и удаление элементов)
    pthread_mutex_init(&tableMutex, nullptr);

    pthread_mutex_init(&cleanTablesMutex,
                       nullptr);  // Инициализируем мьютекс для работы со столами, которые нужно убрать
    sem_init(&cleanTablesSem, 0, 0);  // Инициализируем семафор для количества столов, которые нужно убрать

    pthread_rwlock_init(&rwlock, nullptr);  // Инициализируем рид-райт лок для чтения и записи в консоль

    // Создаём потоки продавцов

    pthread_t firstSellerThread, secondSellerThread;
    pthread_create(&firstSellerThread, nullptr, &SellerActor, (void *) 1);
    pthread_create(&secondSellerThread, nullptr, &SellerActor, (void *) 2);


    std::cout << ""Enter table count"" << std::endl;
    int tableCount;
    std::cin >> tableCount;
    std::cout << ""Enter table size"" << std::endl;
    int tableSize;
    std::cin >> tableSize;
    fillMatrix(tableCount, tableSize);

    sem_init(&freeTablesSem, 1, tableCount * tableSize);  // Инициализируем семафор для количества свободных столов

    std::cout << ""Enter clean time in seconds"" << std::endl;
    int cleanTime;
    std::cin >> cleanTime; // Вводим время, которое потребуется для мытья одной тарелки (считаем для упрощения,
    // что каждый гость делает одинаковое количество грязной посуды)

    // Создаём потоки уборщиков
    pthread_t firstCleanerThread;
    pthread_create(&firstCleanerThread, nullptr, &CleanerActor, &cleanTime);

    while (!stop_thread) {
        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        printCommands();
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль
        int command;
        std::cin >> command;
        pthread_rwlock_wrlock(&rwlock);  // Лочим рид-райт лок для записи в консоль
        if (command == 1) {
            // Добавляем нового покупателя
            std::cout << ""Enter checkout time"" << std::endl;
            int checkoutTime;
            std::cin >> checkoutTime; // Вводим время заказа покупателя (время, которое он потратит на создание заказа)

            std::cout << ""Enter eat time"" << std::endl;
            int eatTime;
            std::cin >> eatTime;// Вводим время еды покупателя (время, которое он потратит на поедание заказа)

            Guest guest(checkoutTime, eatTime);
            pthread_mutex_lock(&queueMutex); // Лочим мьютекс
            queue.push_back(guest);
            printQueue();
            pthread_mutex_unlock(&queueMutex); // Разлочим мьютекс
            sem_post(&queueSem);
        } else if (command == 2) {
            pthread_mutex_lock(&tableMutex);
            printTables();
            pthread_mutex_unlock(&tableMutex);
        } else if (command == 3) {
            pthread_mutex_lock(&queueMutex);
            printQueue();
            pthread_mutex_unlock(&queueMutex);
        } else if (command == 4) {
            stop_thread = true;
        } else if(command == 5) {
            pthread_mutex_lock(&cleanTablesMutex);
            printCleanQueue();
            pthread_mutex_unlock(&cleanTablesMutex);
        } else {
            std::cout << ""Invalid command"" << std::endl;
        }
        pthread_rwlock_unlock(&rwlock);  // Разлочим рид-райт лок для записи в консоль
    }
    // Тут можно заджоинить потоки между собой
    return 0;
}
"
1ykd1qXr,P_UTSS2.PAS,afrizalwahyuadi66,TypeScript,Saturday 11th of May 2024 12:46:51 AM CDT,"program utsS2;
uses crt, U_MENU, U_PROSES;
var stop,stop2 : boolean;
a,b,c,d,e,f,g,h,i,j : real;
ulang : char;
x,n,k,pil,r,t: integer;
z: string;

BEGIN
   Repeat
      stop := false;
      menu_uts(pil,true);
      case pil of
         1 :   repeat
                  stop2 := false;
                  NO_1(false);
                  PROS_1(a,b,c,d,e,f);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          2 :  repeat
                   stop2 := false;
                  NO_2(false);
                  PROS_2(a,b,c);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          3 :  repeat
                  stop2 := false;
                  NO_3(false);
                  PROS_3(a,b,c,d,e);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          4 :  repeat
                  stop2 := false;
                  NO_4(false);
                  PROS_4(a,b,c,d);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          5 :  repeat
                  stop2 := false;
                  NO_5(false);
                  PROS_5(a,b,c,d,e,f,g,h,i,j);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          6  : repeat
                  stop2 := false;
                  NO_6(false);
                  PROS_6(x,z);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          7  : repeat
                  stop2 := false;
                  NO_7(false);
                  PROS_7(a,b,c,d,e);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);
          8 : repeat
                  stop2 := false;
                  NO_8(false);
                  PROS_8(x);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          9  : repeat
                  stop2 := false;
                  NO_9(false);
                  PROS_9(z,a,b,c,d,e);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          10 : repeat
                  stop2 := false;
                  NO_10(false);
                  PROS_10(x,n,k);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

          11 : repeat
                  stop2 := false;
                  NO_11(false);
                  PROS_11(x,n,k);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);

         12 : repeat
                  stop2 := false;
                  NO_12(false);
                  PROS_12(x,n,k,r,t);
                  gotoxy(20,20);write('Apakah mau keluar? Y/T :');
                  readln(ulang);
                  if (ulang = 'y') then
                     stop2 := true
                  else
                     stop2 := false;
               until(stop2);




          0 : stop := true;

      end;
   Until(stop);
   ClrScr;
  gotoxy(35,12);write('Terimakasih');
   Readln;
END."
SqkTZn3y,Qluxiang7,Damonwei,JSON,Saturday 11th of May 2024 12:43:30 AM CDT,"{
""作者"":""Dwei-0430"",
""站名"":"""",
""请求头"":""手机"",
""主页url"":""https://www.luxiang7.com/"",
""分类url"":""https://www.luxiang7.com/{cateId}/{catePg}/"",
""分类"":""NBA录像$nbalx"",
""二次截取"": ""class=\""main r_box\"">&&</ul>"",
""数组"":""<li>&&</li>"",
""标题"":""title=\""&&\"""",
""图片"":""src=\""&&\"""",
""链接"":""href=\""&&\"""",
""链接前缀"": """",
""简介"":""Dwei观赛提示：先选择腾讯线路，解析选择web解析，若解析错误再选择快手视频即可观看赛事录像回放，直接选择快手视频无法观看！！"",
""导演"":""DweiTV：Never'underestimate'the'heart'of'a'champion! "",
""主演"":""东契奇、约基奇、詹姆斯、杜兰特、库里、塔图姆、阿德托孔博、恩比德、布克"",
""线路数组"":""class=\""lmname\"">&&</li>"",
""线路标题"":""nbalx/\"">&&</a>[替换:nbalx/\""></a>>>DweiTV]"",
""播放数组"":""class=\""news_con\"">&&class=\""xinhao\"">"",
""播放列表"": ""<a&&/a>"",
""播放标题"":""target=\""_blank\"">&&</a>"",
""播放链接"":""href=\""&&\"""",
""播放链接前缀"": """",
""免嗅"": ""0"",
""嗅探词"": ""weibocdn.com#.mp4#kwaicdn.com#.m3u8?#download-v.123pan.cn"",
""搜索模式"": ""1"",
""搜索url"":""/search.php?q={wd}"",
""搜索二次截取"": ""class=\""main r_box\"">&&</ul>"",
""搜索数组"":""<li>&&</li>"",
""搜索标题"":""title=\""&&\"""",
""搜索图片"":""src=\""&&\"""",
""搜索链接"":""href=\""&&\"""",
""筛选"": {}
}
"
RDiwps8v,Untitled,Aw3som3n3sss,C++,Saturday 11th of May 2024 12:40:32 AM CDT,"// This program is to simulate Powerball and Mega Millions
/*[CYB220] Lab requirements:
 * This is a CS120 homework submission.
 * IMPORTANT: You don't need to find the security related bugs (input validation,
type checking)
 * (6 pts) 1. Fixed the arrays and make sure the arrays are shuffled correctly!
(This does not count toward a coding problem!)
 * (24 pts) 2. There are at least 4 subtle coding problems in the code, find 3 of
them to get full points
 * a. Read the homework requirement and Do a code review to find the problems
 * b. Write a comment near the problem code, start your comment with [CYB220]
 * c. Fix the code!
 * 3. SUBMIT THIS .CPP FILE to CANVAS
 *
 *
 * [CYB220]
 * Shuffle - Line 200-220
 * Missing PowerBall Input - Line 120, 135 and 182
 * Repreated Numbers - Line 99 -157
 * PowerBall and MegaMil Balls incorrect numbers - Line 50-70
 */
 //Missing Powerball Input.
 //Checks if numbers are repeated. Line
 //NOTE1: array shuffle does not count as 1 coding problem.
 //NOTE2: Same type of issue at different places count as 1 coding problem.
 //NOTE3: Users entering a very large number, with characters and type mismatch,
are not the type of problem we are looking for in this lab.
 //[CYB220] Start your comments like this (with [CYB220]) to make my grading
easier. Thanks!
#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
using namespace std;
int main()
{
int PowerBallW[69]; //Array for PowerBall White
int PowerBallR[26]; //Array for PowerBall Red
int MegaMilW[70]; //Array for MegaMillions White
int MegaMilR[25];//Array for MegaMillions Red
int j = 0; //A variable to make choice loop work.
int White[5]; //Array for user input for white
int Red = 0; //Variable for user input for red
int random = 0; //Variable for random number in array
int choice = 0; //Variable storage for user choice
int correctWhite = 0;
int win_red = 0;
int redMatch = 0;
srand(time(NULL));
//----------------------Initialize Arrays-------------------------
/* [CYB220] Problem - When printing the array you see that some numbers are
between 1 and 69 / 70 and others are - 858993460.
Array is not initialied correctly. It skips indexes and defaults to -
858993460 because the index i is incremented twice. Making some the same default
number.
Fix - Don't increment i twice.
*/
for (int i = 0; i < 69; i++) {
PowerBallW[i] = i + 1;
//i++;
}
for (int i = 0; i < 26; i++) {
PowerBallR[i] = i + 1;
//i++;
}
for (int i = 0; i < 70; i++) {
MegaMilW[i] = i + 1;
//i++;
}
for (int i = 0; i < 25; i++) {
MegaMilR[i] = i + 1;
//i++;
}
//--------------------Start simulation code----------------------
do {
cout << ""Would you like to play MegaMillions or PowerBall?"" << endl;
cout << ""Please enter 1 for Megamillions and 2 for PowerBall."" << endl;
cin >> choice;
if (choice == 1) {
j++;
}
else if (choice == 2) {
j++;
}
else {
cout << ""Error. Please enter a valid option."" << endl;
}
} while (j == 0);
if (choice == 1) { //Conditional to show what the user chose
cout << ""You have chosen to play MegaMillions."" << endl;
}
else {
cout << ""You have chosen to play PowerBall."" << endl;
}
cout << ""Please enter 5 numbers for the white ball numbers you wish to play
with."" << endl;
for (int i = 0; i < 5; i++) {
int j = 0;
/*[CYB220] - Problem - Doesn't meet the requirement to not have numbers
that are repreated.
Fix Both Powerball and MegaMil- Added a While loop that checks previous
inputs with the current input and if they are equal it asks for the input again.
*/
if (choice == 1) { // Conditionals for valid numbers.
cout << ""Please choose numbers between 1 & 70."" << endl;
cin >> White[i];
for (int k = 0; k < i; k++) {
while ((White[i] == White[k])) { //[CYB220] Checks if the
current input is the same as any of the others.
cout << ""Invalid number."" << endl << ""Try again.
Please enter a number."" << endl;
cin >> White[i];
}
if (White[i] < 1 || White[i] >70) {
do {
cout << ""Invalid number."" << endl << ""Try
again. Please enter a number."" << endl;
cin >> White[i];
if (White[i] > 1 && White[i] <= 70) {
j++;
}
else {
cout << ""No."" << endl;
}
} while (j == 0);
}
}
}
/*[CYB220] Problem -If 2 is entered to play the PowerBall, it instantly
believes the input is incorrect and any input that is correct is seen as incorrect
Also the Red ball input also is instantly incorrect. Fix - Was missing
cin to get an input before checking if valid.*/
else { //conditional for valid powerball number.
cout << ""Please choose numbers between 1 & 69."" << endl;
cin >> White[i]; //[CYB220] There was no input for the current
White Index. Added this line.
for (int k = 0; k < i; k++) {
while ((White[i] == White[k])) { //[CYB220] Checks if the
current input is the same as any of the others.
cout << ""Invalid number."" << endl << ""Try again.
Please enter a number."" << endl;
cin >> White[i];
}
if (White[i] < 1 || White[i] >69) {
do {
cout << ""Invalid number."" << endl << ""Try
again. Please enter a number."" << endl;
cin >> White[i];
if (White[i] > 1 && White[i] <= 69)
{
j++;
}
else {
cout << ""No."" << endl;
}
} while (j == 0);
}
}
}
}
j = 0; //To make the next conditionals work for keeping the numbers honest.
if (choice == 1) {
cout << ""Please enter one number for the red ball."" << endl;
cout << ""Your number should be between 1 and 25."" << endl;
cin >> Red;
if (Red < 1 || Red > 25) {
do {
cout << ""Invalid number."" << endl << ""Try again. Please
enter a number."" << endl;
cin >> Red;
if (Red > 1 && Red <= 25) {
j++;
}
else {
cout << ""No."" << endl;
}
} while (j == 0);
}
}
else {
cout << ""Please enter one number for the red ball."" << endl;
cout << ""Your number should be between 1 and 26."" << endl;
cin >> Red; //[CYB220] Added Cin to get input first before checking if
valid.
if (Red < 1 || Red > 26) {
do {
cout << ""Invalid number."" << endl << ""Try again. Please
enter a number."" << endl;
cin >> Red;
if (Red > 1 && Red <= 26) {
j++;
}
else {
cout << ""No. "" << endl;
}
} while (j == 0);
}
}
cout << ""You have chosen for the white balls the numbers: "" << White[0] << ""
"" << White[1] << "" "" << White[2] << "" "" << White[3] << "" "" << White[4] << ""."" <<
endl << endl;
cout << ""You have chosen for the red ball: "" << Red << ""."" << endl;
cout << ""-----------------------------------------"" << endl << endl;
/*[CYB220] Problem - Does not shuffle with random indexes. And creates an
error with the stack varaiable. goes from 3 4 5 ... because of i+2
 Fix- Rand to get a random index and make the current index the value of the
random.
 */
if (choice == 1) {
for (int i = 0; i < 70; i++) { // Loop to shuffle numbers for Megamill
random = rand() % 70;
//random = i + 2;
int z; //temp variable
z = MegaMilW[i];
MegaMilW[i] = MegaMilW[random];
MegaMilW[random] = z;
}
}
else { //PowerBall array shuffle.
for (int i = 0; i < 69; i++) {
random = rand() % 69;
//random = i + 2;
int z;
z = PowerBallW[i];
PowerBallW[i] = PowerBallW[random];
PowerBallW[random] = z;
}
}
cout << ""********* Now the results are: **********"" << endl;
//check the first 5 elements of the array and compare them with the white
balls
if (choice == 1) {
cout << ""The winning white balls are: "";
for (int i = 0; i < 5; i++) {
cout << MegaMilW[i] << "" "";
if (White[0] == MegaMilW[i] || White[1] == MegaMilW[i] ||
White[2] == MegaMilW[i] || White[3] == MegaMilW[i] || White[4] == MegaMilW[i])
correctWhite++;
}
win_red = rand() % 25;
}
else {
cout << ""The winning white balls are: "";
for (int i = 0; i < 5; i++) {
cout << PowerBallW[i] << "" "";
if (White[0] == PowerBallW[i] || White[1] == PowerBallW[i] ||
White[2] == PowerBallW[i] || White[3] == PowerBallW[i] || White[4] ==
PowerBallW[i])
correctWhite++;
}
win_red = rand() % 26;
}
cout << ""\n\nYou have "" << correctWhite << "" White balls matched!"" << endl;
cout << ""The winning red ball is: "" << win_red << endl;
cout << ""The red ball you guessed: "" << Red << endl;
if (Red == win_red) {
cout << ""Your guessed correctly!"" << endl;
}
else {
cout << ""You missed the red ball..."" << endl;
}
if (choice == 1) {
for (int i = 0; i < 70; i++) { // loop to see if shuffle worked.
cout << MegaMilW[i] << "" "";
}
}
//[CYB220] - Added just to see Powerball shuffle since there was only 1.
else if (choice == 2) {
for (int i = 0; i < 69; i++) { // loop to see if shuffle worked.
cout << PowerBallW[i] << "" "";
}
 }
cout << endl << endl;
return 0;
}"
mdb9rdf6,AI,excellent940707,Python,Saturday 11th of May 2024 12:38:00 AM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Sat Mar 23 15:02:20 2024

@author: yiwen
""""""

import torch
from torch import nn
from torch.utils.data import DataLoader
from torchvision import datasets
from torchvision.transforms import ToTensor



batch_size = 64


training_data = datasets.FashionMNIST(
    root=""data"",
    train=True,
    download=True,
    transform=ToTensor()
    )

test_data = datasets.FashionMNIST(
    root=""data"",
    train=False,
    download=True,
    transform=ToTensor()
    )

train_dataloader = DataLoader(training_data, batch_size=batch_size)
test_dataloader = DataLoader(test_data, batch_size=batch_size)


device = (
     ""cuda""if torch.cuda.is_available()
    else ""mps"" if torch.backends.mps.is_available()
    else ""cpu""
    )

print(f""Using {device} device"")



class NeuralNetwork(nn.Module):
    def __init__(self):
        super().__init__()
        self.flatten = nn.Flatten()
        self.linear_relu_stack = nn.Sequential(
            nn.Linear(28*28, 512),
            nn.ReLU(),
            nn.Linear(512, 512),
            nn.ReLU(),
            nn.Linear(512, 10)
            )
    
    def forward(self, x):
        x = self.flatten(x)
        logits = self.linear_relu_stack(x)
        return logits
    
model = NeuralNetwork().to(device)
print(model)



loss_fn = nn.CrossEntropyLoss()
# model.parameters()返回一個包含所有這些參數的生成器或迭代器，
# 你可以使用它來訪問和操作這些參數。
optimizer = torch.optim.SGD(model.parameters(), lr=1e-3)

def train(dataloader, model, loss_fn, optimizer):
    size = len(dataloader.dataset)
    model.train()
    for batch, (x, y) in enumerate(dataloader):
        x, y = x.to(device), y.to(device)
        
        # Compute prediction error
        pred = model(x)
        loss = loss_fn(pred, y)
        
        # Backpropagation
        loss.backward()
        optimizer.step()
        optimizer.zero_grad()
        
        if batch%100 ==0:
            loss, current = loss.item(), (batch + 1)*len(x)
            print(f""loss: {loss:>7f} [{current:>5d}/{size:>5d}]"")
        
def test(dataloader, model, loss_fn):
    size = len(dataloader.dataset)
    num_batches = len(dataloader)
    model.eval()
    
    test_loss, correct = 0, 0
    with torch.no_grad():
        for x, y in dataloader:
            x, y = x.to(device), y.to(device)
            pred = model(x)
            test_loss += loss_fn(pred, y).item()
            correct += (pred.argmax(1)==y).type(torch.float).sum().item()
    test_loss /= num_batches
    correct /= size
    print(f""Test Error: \n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f}\n"")



epochs = 5
for t in range(epochs):
    print(f""Epoch {t+1}\n"")
    train(train_dataloader, model, loss_fn, optimizer)
    test(test_dataloader, model, loss_fn)
print(""Done!"")

torch.save(model.state_dict(), ""model_pyt_1.pth"")
print(""Saved PyTorch Model State to model_pyt_1.pth"")

# model = NeuralNetwork().to(device)
# model.load_state_dict(torch.load(""model_pyt_1.pth""))



classes = [
    ""T-shirt/top"",
    ""Trouser"",
    ""Pullover"",
    ""Dress"",
    ""Coat"",
    ""Sandal"",
    ""Shirt"",
    ""Sneaker"",
    ""Bag"",
    ""Ankle boot"",
]

model.eval()
x, y = test_data[0][0], test_data[0][1]
with torch.no_grad():
    x = x.to(device)
    pred = model(x)
    predicted, actual = classes[pred[0].argmax(0)], classes[y]
    print(f'Predicted: ""{predicted}"", Actual: ""{actual}""')"
TY3gBFPz,RequestException: error with request,basedcount_bot,Python,Saturday 11th of May 2024 12:33:06 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 263, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
YjaHsLCN,Untitled,35657,C++,Saturday 11th of May 2024 12:14:22 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <Windows.h>

using namespace std;

struct film {
	char title[40];
	char producer[40];
	char genre[40];
	int rating;
};

struct video_store {										 
	film store[100];
	int films_number = 0;
};


void add_movie(video_store& some_store, const char* title, const char* producer, const char* genre, int rating) {
	if (some_store.films_number == 100) {
		cout << ""Фильм не может быть добавлен"" << endl;
		return;
	}
	strcpy(some_store.store[some_store.films_number].title, title);
	strcpy(some_store.store[some_store.films_number].producer, producer);
	strcpy(some_store.store[some_store.films_number].genre, genre);
	some_store.store[some_store.films_number].rating = rating;
	some_store.films_number++;
}

void del_movie(video_store& some_store, const char* title) {
	for (int i = 0; i < some_store.films_number; i++) {
		if (!strcmp(some_store.store[i].title, title)) {
			for (int j = i; j < some_store.films_number - 1; j++) {
				some_store.store[j] = some_store.store[j + 1];
			}
			some_store.films_number--;
		}
	}
}

void show_all_movies(const video_store& some_store) {
	for (int i = 0; i < some_store.films_number; i++) {
		cout << '\""' << some_store.store[i].title << ""\"",  режиссер - "" << some_store.store[i].producer << "", жанр - "" << some_store.store[i].genre << "", рейтинг - "" << some_store.store[i].rating << endl;
	}
	cout << endl;
}

int main() {

	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	video_store my_store;

	add_movie(my_store, ""Пираты Карибского моря"", ""Гор Вербински"", ""фантастика"", 5);
	add_movie(my_store, ""Гарри Поттер"", ""Крис Каламбус"", ""фантастика"", 4);
	add_movie(my_store, ""Бриллиантовая рука"", ""Леонид Гайдай"", ""комедия"", 5);
	add_movie(my_store, ""Иван Васильевич меняет профессию"", ""Леонид Гайдай"", ""комедия"", 5);
	add_movie(my_store, ""Шерлок Холмс"", ""Гай Ричи"", ""детектив"", 5);

	show_all_movies(my_store);

	del_movie(my_store, ""Гарри Поттер"");

	add_movie(my_store, ""Карты, деньги, два ствола"", ""Гай Ричи"", ""комедия"", 5);

	show_all_movies(my_store);
}"
6gVunXmQ,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Saturday 11th of May 2024 12:14:05 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_812381.pdf

Working as of:
11 May 2024"
mz0VEnTs,Untitled,Aw3som3n3sss,C++,Friday 10th of May 2024 11:58:53 PM CDT,"#include <iostream>
using namespace std;
/*
Elizabeth Smith
Name Length? -Yes - No more than 100
- Type? - Yes - Only letters
-Range? - No
-Format? - No
Age - Length? - No
- Type? - Yes - Int
-Range? - Yes - 1 to 126
-Format? - No
Phone number - Length? - Yes - Depending on format, needs 10 or 11 digits
- Type? - No
-Range? - No
-Format? - Yes - Mix of digits and certain characters
*/
bool checkName(char name[], int length);
bool checkNum(char num[], int length);
bool checkAge(int age);
int findLen(char n[]);
int main()
{
	//Variables
	char name[100] = ""abc"";
	char phoneNumber[15] = ""1 208 885 0000"";
	int age = 0;
	bool nameCheck = true;
	bool numCheck = true;
	bool ageCheck = true;
	//Get Name
	cout << ""Enter Your Name: "";
	fgets(name, sizeof(name), stdin);
	int lengthN = findLen(name);
	//If name is too long, ignores first 100 characters.
	//If not too long, adds replaces newline with NULL
	if (lengthN > 0 && name[lengthN - 1] == '\n') {
		name[lengthN - 1] = '\0';
		--lengthN;
	}
	else {
		cin.ignore(100, '\n');
	}
	nameCheck = checkName(name, lengthN);
	while (nameCheck == false) {
		cout << ""Invalid Input. Try Again: "";
		fgets(name, sizeof(name), stdin);
		lengthN = findLen(name);
		if (lengthN > 0 && name[lengthN - 1] == '\n') {
			name[lengthN - 1] = '\0';
			--lengthN;
		}
		else {
			cin.ignore(100, '\n');
		}
		nameCheck = checkName(name, lengthN);
	}

	//GET AGE
	cout << ""Enter Age: "";
	cin >> age;
	ageCheck = checkAge(age);
	while (ageCheck == false)
	{
		cout << ""Re-Enter a valid Age: "";
		cin >> age;
		ageCheck = checkAge(age);
	}
	cin.ignore();
	//GET NUMBER
	cout << ""Enter Phone Number: "";
	fgets(phoneNumber, sizeof(phoneNumber), stdin);
	lengthN = findLen(phoneNumber);

	//If number is too long, ignores.
	//If not too long, adds replaces newline with NULL
	if (lengthN > 0 && name[lengthN - 1] == '\n') {
		name[lengthN - 1] = '\0';
		--lengthN;
	}
	else {
		cin.ignore();
	}
	numCheck = checkNum(phoneNumber, lengthN);
	while (numCheck == false) {
		cout << ""Invalid Input. Try Again : "";
		fgets(phoneNumber, sizeof(phoneNumber), stdin);
		lengthN = findLen(phoneNumber);

		if (lengthN > 0 && name[lengthN - 1] == '\n') {
			name[lengthN - 1] = '\0';
			--lengthN;
		}
		else {
			cin.ignore();
		}
		numCheck = checkNum(phoneNumber, lengthN);
	}

	cout << ""\nINFORMATION COLLECTED:\n"";
	cout << ""Name: "" << name << endl;
	cout << ""Age: "" << age << endl;
	cout << ""Phone Number: "" << phoneNumber << endl;
	return 0;
}
//Returns false if not letters else true
bool checkName(char name[], int length)
{
	for (int i = 0; i < length; i++) {
		if (!isalpha(name[i])) {
			cout << ""Use Letters Only: \n"";
			return false;
		}
	}
	return true;
}
//Returns true if formats match else false or false if digit count is not correct
bool checkNum(char num[], int length)
{

	int digitCount = 0;
	for (int i = 0; i < length; i++) {


		if (isdigit(num[i]) || num[i] == ' ' || num[i] == '-' || num[i] == '(' || num[i]
			== ')' || num[0] == '+' || num[i] == '\n' || num[i] == '\0') {
			if (isdigit(num[i]))
			{
				digitCount++;
			}
		}
		else
		{
			cout << ""Invalid Character: \n"";
			return false;
		}

	}
	//+12088850000
	if (num[0] == '+' && digitCount == 11) {

		return true;
	}
	//1 208 885 0000
	if (isspace(num[1]) && isspace(num[5]) && isspace(num[9]) &&
		(digitCount == 11 || digitCount == 10)) {
		return true;
	}
	//208-885-0000
	if (num[3] == '-' && num[7] == '-' && (digitCount == 11 || digitCount ==
		10))
	{
		return true;
	}
	//(208)8850000
	if (num[0] == '(' && num[4] == ')' && (digitCount == 11 || digitCount ==
		10))
	{
		return true;
	}
	if (digitCount == 10 || digitCount == 11) {
		return true;
	}
	if (digitCount != 10 && digitCount != 11) {
		cout << ""Invalid Number of Digits\n"";
		return false;
	}
	return false;
}
//Returns false if range fails or not number else true
bool checkAge(int age)
{
	if (age > 126 || age < 0)
	{
		cout << ""Invalid Age Range.\n"";
		return false;
	}
	//If the input is not a number
	if (cin.fail())
	{
		cin.clear(); // Clear the error flag
		//cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Discard invalid input
		cout << ""Invalid input. Please enter a number for age.\n"";
		return false;
	}
	return true;
}
int findLen(char n[]) {
	int count = 0;
	for (int i = 0; n[i] != '\0'; i++) {
		++count;
	}
	return count;
}"
PA4M2ugH,azure mod lite,Actyrn,Lua,Friday 10th of May 2024 11:52:15 PM CDT,"-- Credits to Elegant and Weda, the original script coders

-- If ur gonna put in vault / showcase, pls don't put the source code directly or loadstring, put the discord

-- DO NOT EDIT BELOW IF YOU DON'T KNOW WHAT YOU'RE DOING!!

repeat wait() until game:IsLoaded()

Drawing = Drawing
setfpscap = setfpscap
hookmetamethod = hookmetamethod
newcclosure = newcclosure
getnamecallmethod = getnamecallmethod

-- Variables

local UiLib = loadstring(game:HttpGet(""https://pastebin.com/raw/JFzC7iXS""))()

local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")

local Workspace = game:GetService(""Workspace"")
local Players = game:GetService(""Players"")

local CoreGui = game:GetService(""CoreGui"")
local CorePackages = game:GetService(""CorePackages"")

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local StarterGui = game:GetService(""StarterGui"")
local Stats = game:GetService(""Stats"")

local CamlockPlr
local LocalPlr = Players.LocalPlayer

local CamBindEnabled = false

local AntiCheatNamecall

local StrafeSpeed = 0

local SelfDotCircle = Drawing.new(""Circle"")
SelfDotCircle.Filled = true
SelfDotCircle.Thickness = 1
SelfDotCircle.Radius = 7

local SelfTracerLine = Drawing.new(""Line"")
SelfTracerLine.Thickness = 2

local CamFovCircle = Drawing.new(""Circle"")
CamFovCircle.Thickness = 1.5

local CamTracerLine = Drawing.new(""Line"")
CamTracerLine.Thickness = 2

local CamHighlight = Instance.new(""Highlight"", CoreGui)

local CameraAimbot = {
	Enabled = false, 
	Keybind = nil, 

	Prediction = nil, 
	RealPrediction = nil, 

	Resolver = false, 

	JumpOffset = 0, 
	RealJumpOffset = nil, 

	HitPart = ""HumanoidRootPart"", 
	RealHitPart = nil, 

	UseAirPart = false, 
	AirPart = ""LowerTorso"", 
	AirCheckType = ""Once in Air"", 

	AutoPred = false, 
	Notify = false, 

	KoCheck = false, 
	Tracer = false, 

	Highlight = false, 

	Smoothing = false, 
	Smoothness = nil, 

	UseFov = false
}

local Utilities = {
	NoJumpCooldown = false, 
	NoSlowdown = false, 

	AutoStomp = false, 
	AutoReload = false
}

local Movement = {
	SpeedEnabled = false, 
	SpeedAmount = 1, 

	AutoJump = false, 

	BunnyHop = false, 
	HopAmount = 1, 

	FlightEnabled = false, 
	FlightAmount = 1
}

local SelfDot = {
	Enabled = false, 
	Tracer = false, 

	RandomHitPart = false, 
	Prediction = 1, 

	HitPart = ""HumanoidRootPart"", 
	RealHitPart = nil
}

local AntiLock = {
	Enabled = false, 
	Mode = ""Up"", 

	DesyncVel = Vector3.new(0, 9e9, 0), 
	DesyncAngles = 0.5
}

-- Functions

function ClosestPlr(Part, UseFov, FovCircle)
	local Distance, Closest = math.huge, nil

	for I, Target in pairs(Players:GetPlayers()) do
		if Target ~= LocalPlr then
			local Position = Workspace.CurrentCamera:WorldToViewportPoint(Target.Character[Part].Position)
			local Magnitude = (Vector2.new(Position.X, Position.Y) - UserInputService:GetMouseLocation()).Magnitude

			if UseFov then
				if Magnitude < Distance and Magnitude < FovCircle.Radius then
					Closest = Target
					Distance = Magnitude
				end
			else
				if Magnitude < Distance then
					Closest = Target
					Distance = Magnitude
				end
			end
		end
	end

	return Closest
end

-- You've caught me, the resolver is skidded...

function Recalculate(Target)
	local Part = Target.Character[CameraAimbot.RealHitPart]

	local CurrentPosition = Part.Position
	local CurrentTime = tick()

	wait()

	local NewPosition = Part.Position
	local NewTime = tick()

	local DistanceTraveled = (NewPosition - CurrentPosition)

	local TimeInterval = NewTime - CurrentTime

	local Velocity = DistanceTraveled / TimeInterval

	CurrentPosition = NewPosition
	CurrentTime = NewTime

	return Velocity
end

-- Window

local Actyrn = UiLib:CreateWindow(""Azure Modded (LITE) | Actyrn"", Vector2.new(500, 600), Enum.KeyCode.RightShift)

-- Tabs

local MainTab = Actyrn:CreateTab(""Main"")
local MiscTab = Actyrn:CreateTab(""Misc"")

-- Sectors

-- MAIN

local CameraAimbotSec = MainTab:CreateSector(""Camera Aimbot"", ""left"")
local AntiLockSec = MainTab:CreateSector(""Anti Lock"", ""right"")
local SelfDotSec = MainTab:CreateSector(""Self Dot"", ""right"")

-- MISC

local UtilitiesSec = MiscTab:CreateSector(""Utilities"", ""left"")
local MovementSec = MiscTab:CreateSector(""Movement"", ""right"")

-- Toggles

-- MAIN

-- Camera Aimbot

CameraAimbotSec:AddToggle(""Enabled"", false, function(Value)
	CameraAimbot.Enabled = Value
end, ""CameraEnabled"")

CameraAimbotSec:AddKeybind(""Keybind"", nil, function(Value)
	CameraAimbot.Keybind = Value
end, ""CameraKeybind"")

CameraAimbotSec:AddTextbox(""Prediction"", nil, function(Value)
	CameraAimbot.Prediction = Value
	CameraAimbot.RealPrediction = Value
end, ""CameraPrediction"")

local CamResolverTog = CameraAimbotSec:AddToggle(""Antilock Resolver"", false, function(Value)
	CameraAimbot.Resolver = Value
end, ""CameraAntilockResolver"")

CamResolverTog:AddKeybind(nil, ""CameraAntilockResolverKeybind"")

CameraAimbotSec:AddSlider(""Jump Offset"", -2, 0, 2, 100, function(Value)
	CameraAimbot.JumpOffset = Value
	CameraAimbot.RealJumpOffset = Value
end, ""CameraJumpOffset"")

CameraAimbotSec:AddDropdown(""Hit Part"", {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso""}, ""HumanoidRootPart"", false, function(Value)
	CameraAimbot.HitPart = Value
	CameraAimbot.RealHitPart = Value
end, ""CameraHitPart"")

CameraAimbotSec:AddToggle(""Use Air Part"", false, function(Value)
	CameraAimbot.UseAirPart = Value
end, ""CameraUseAirPart"")

CameraAimbotSec:AddDropdown(""Air Part"", {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso"", ""RightHand"", ""LeftHand"", ""RightFoot"", ""LeftFoot""}, ""LowerTorso"", false, function(Value)
	CameraAimbot.AirPart = Value
end, ""CameraAirPart"")

CameraAimbotSec:AddDropdown(""Air Check Type"", {""Once in Air"", ""Once Freefalling""}, ""Once in Air"", false, function(Value)
	CameraAimbot.AirCheckType = Value
end, ""CameraAirCheckType"")

CameraAimbotSec:AddToggle(""Auto Pred"", false, function(Value)
	CameraAimbot.AutoPred = Value
end, ""CameraAutoPred"")

CameraAimbotSec:AddToggle(""Notify"", false, function(Value)
	CameraAimbot.Notify = Value
end, ""CameraNotify"")

CameraAimbotSec:AddToggle(""KO Check"", false, function(Value)
	CameraAimbot.KoCheck = Value
end, ""CameraKOCheck"")

local CamTracerTog = CameraAimbotSec:AddToggle(""Tracer"", false, function(Value)
	CameraAimbot.Tracer = Value
end, ""CameraTracer"")

CamTracerTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	CamTracerLine.Color = Value
end, ""CameraTracerColor"")

local CamHighlightTog = CameraAimbotSec:AddToggle(""Highlight"", false, function(Value)
	CameraAimbot.Highlight = Value
end, ""CameraHighlight"")

CamHighlightTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	CamHighlight.FillColor = Value
end, ""CameraHighlightFillColor"")

CamHighlightTog:AddColorpicker(Color3.fromRGB(90, 65, 110), function(Value)
	CamHighlight.OutlineColor = Value
end, ""CameraHighlightOutlineColor"")

CameraAimbotSec:AddToggle(""Smoothing"", false, function(Value)
	CameraAimbot.Smoothing = Value
end, ""CameraSmoothing"")

CameraAimbotSec:AddTextbox(""Smoothness"", nil, function(Value)
	CameraAimbot.Smoothness = Value
end, ""CameraSmoothness"")

CameraAimbotSec:AddToggle(""Use FOV"", false, function(Value)
	CameraAimbot.UseFov = Value
end, ""CameraUseFOV"")

local CamFovTog = CameraAimbotSec:AddToggle(""FOV Visible"", false, function(Value)
	CamFovCircle.Visible = Value
end, ""CameraFOVVisible"")

CamFovTog:AddColorpicker(Color3.fromRGB(80, 15, 180), function(Value)
	CamFovCircle.Color = Value
end, ""CameraFOVColor"")

CameraAimbotSec:AddToggle(""FOV Filled"", false, function(Value)
	CamFovCircle.Filled = Value
end, ""CameraFOVFilled"")

CameraAimbotSec:AddSlider(""FOV Transparency"", 0, 0.75, 1, 100, function(Value)
	CamFovCircle.Transparency = Value
end, ""CameraFOVTransparency"")

CameraAimbotSec:AddSlider(""FOV Size"", 5, 80, 500, 1, function(Value)
	CamFovCircle.Radius = Value * 2
end, ""CameraFOVSize"")

-- Anti Lock

local AntiLockTog = AntiLockSec:AddToggle(""Enabled"", false, function(Value)
	AntiLock.Enabled = Value
end, ""AntiLockEnabled"")

AntiLockTog:AddKeybind(nil, ""AntiLockKeybind"")

AntiLockSec:AddDropdown(""Mode"", {""Up"", ""Down"", ""Prediction Disabler"", ""Spinbot Desync""}, ""Up"", false, function(Value)
	AntiLock.Mode = Value
end, ""AntiLockMode"")

AntiLockSec:AddLabel(""Spinbot Desync"")

AntiLockSec:AddDropdown(""Desync Velocity"", {""Sky"", ""Underground""}, ""Sky"", false, function(Value)
	if Value == ""Sky"" then
		AntiLock.DesyncVel = Vector3.new(0, 9e9, 0)
	elseif Value == ""Underground"" then
		AntiLock.DesyncVel = Vector3.new(0, -9e9, 0)
	end
end, ""AntiLockDesyncVelocity"")

AntiLockSec:AddSlider(""Desync Angles"", -50, 0.5, 50, 2, function(Value)
	AntiLock.DesyncAngles = Value
end, ""AntiLockDesyncAngles"")

-- Self Dot

local SelfDotTog = SelfDotSec:AddToggle(""Enabled"", false, function(Value)
	SelfDot.Enabled = Value
end, ""SelfDotEnabled"")

SelfDotTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	SelfDotCircle.Color = Value
	SelfTracerLine.Color = Value
end, ""SelfDotCircleLineColor"")

SelfDotSec:AddToggle(""Tracer"", false, function(Value)
	SelfDot.Tracer = Value
end, ""SelfDotTracer"")

SelfDotSec:AddToggle(""Random Hit Part"", false, function(Value)
	SelfDot.RandomHitPart = Value
end, ""SelfDotRandomHitPart"")

SelfDotSec:AddSlider(""Prediction"", 1, 1, 5, 2, function(Value)
	SelfDot.Prediction = Value / 20
end, ""SelfDotPrediction"")

SelfDotSec:AddDropdown(""Hit Part"", {""Head"", ""Torso""}, ""Torso"", false, function(Value)
	if Value == ""Head"" then
		SelfDot.HitPart = ""Head""
		SelfDot.RealHitPart = ""Head""
	else
		SelfDot.HitPart = ""HumanoidRootPart""
		SelfDot.RealHitPart = ""HumanoidRootPart""
	end
end, ""SelfDotHitPart"")

-- MISC

-- Utilities

UtilitiesSec:AddToggle(""No Jump Cooldown"", false, function(Value)
	Utilities.NoJumpCooldown = Value
end, ""NoJumpCooldown"")

UtilitiesSec:AddToggle(""No Slowdown"", false, function(Value)
	Utilities.NoSlowdown = Value
end, ""NoSlowdown"")

UtilitiesSec:AddToggle(""Auto Stomp"", false, function(Value)
	Utilities.AutoStomp = Value
end, ""AutoStomp"")

UtilitiesSec:AddToggle(""Auto Reload"", false, function(Value)
	Utilities.AutoReload = Value
end, ""AutoReload"")

local TrashTalkTog = UtilitiesSec:AddToggle(""Trash Talk"", false, function(Value)
	if Value then
		local TrashTalkWords = {"".gg/wDngb2mv4H"", ""How to aim pls help"", ""my lil brother was playing AND HE BEAT U LOLOL :rofl:"", ""Mobile player beat u lol"", ""420 ping and u got SLAMMED"", ""ur bad"", ""seed"", ""im not locking ur just bad"", ""clown"", ""sonned"", ""LOLL UR BAD"", ""dont even try.."", ""ez"", ""gg = get good"", ""my grandmas better than u :skull:"", ""hop off kid"", ""bro cannot aim"", ""u got absolutely DOGGED on"", ""i run this server son"", ""what is bro doing :skull:"", ""no way"", ""my cat walked across my keyboard and beat u LOLL""}

		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(TrashTalkWords[math.random(#TrashTalkWords)], ""All"")
	end
end, ""TrashTalk"")

TrashTalkTog:AddKeybind(nil, ""TrashTalkKeybind"")

-- Movement

local SpeedTog = MovementSec:AddToggle(""Speed"", false, function(Value)
	Movement.SpeedEnabled = Value
end, ""Speed"")

SpeedTog:AddKeybind(nil, ""SpeedKeybind"")

MovementSec:AddSlider(""Speed Amount"", 1, 1, 5000, 1, function(Value)
	Movement.SpeedAmount = Value / 1000
end, ""SpeedAmount"")

MovementSec:AddToggle(""Auto Jump"", false, function(Value)
	Movement.AutoJump = Value
end, ""AutoJump"")

MovementSec:AddToggle(""Bunny Hop"", false, function(Value)
	Movement.BunnyHop = Value
end, ""BunnyHop"")

MovementSec:AddSlider(""Hop Amount"", 1, 1, 50, 1, function(Value)
	Movement.HopAmount = Value / 100
end, ""HopAmount"")

local FlightTog = MovementSec:AddToggle(""Flight"", false, function(Value)
	Movement.FlightEnabled = Value
end, ""Flight"")

FlightTog:AddKeybind(nil, ""FlightKeybind"")

MovementSec:AddSlider(""Flight Amount"", 1, 1, 5000, 1, function(Value)
	Movement.FlightAmount = Value / 20
end, ""FlightAmount"")

-- Code

if setfpscap then
	setfpscap(0)
end

if CorePackages.Packages then
	CorePackages.Packages:Destroy()
end

-- Heartbeat Functions

RunService.Heartbeat:Connect(function()
	local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(LocalPlr.Character[SelfDot.RealHitPart].Position + (LocalPlr.Character[SelfDot.RealHitPart].AssemblyLinearVelocity * SelfDot.Prediction))

	if SelfDot.Enabled and OnScreen then
		SelfDotCircle.Visible = true
		SelfDotCircle.Position = Vector2.new(Position.X, Position.Y)
	else
		SelfDotCircle.Visible = false
	end
end)

RunService.Heartbeat:Connect(function()
	local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(LocalPlr.Character[SelfDot.RealHitPart].Position + (LocalPlr.Character[SelfDot.RealHitPart].AssemblyLinearVelocity * SelfDot.Prediction))

	if SelfDot.Tracer and OnScreen then
		SelfTracerLine.Visible = true
		SelfTracerLine.From = UserInputService:GetMouseLocation()
		SelfTracerLine.To = Vector2.new(Position.X, Position.Y)
	else
		SelfTracerLine.Visible = false
	end
end)

RunService.Heartbeat:Connect(function()
	if AntiLock.Enabled then
		local RootPart = LocalPlr.Character.HumanoidRootPart
		local Velocity, Cframe = RootPart.AssemblyLinearVelocity, RootPart.CFrame

		if AntiLock.Mode == ""Up"" then
			RootPart.AssemblyLinearVelocity = Vector3.new(0, 9e9, 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Down"" then
			RootPart.AssemblyLinearVelocity = Vector3.new(0, -9e9, 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Prediction Disabler"" then
			RootPart.AssemblyLinearVelocity = Velocity * 0
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Spinbot Desync"" then
			RootPart.AssemblyLinearVelocity = AntiLock.DesyncVel
			RootPart.CFrame = Cframe * CFrame.Angles(0, math.rad(AntiLock.DesyncAngles), 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity
		end
	end
end)

RunService.Heartbeat:Connect(function()
	if Movement.FlightEnabled and not AntiLock.Enabled then
		local FlyVelocity = Vector3.new(0, 0.9, 0)

		if not UserInputService:GetFocusedTextBox() then
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.A) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * -Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.S) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * -Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.D) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * Movement.FlightAmount)
			end
		end

		LocalPlr.Character.HumanoidRootPart.AssemblyLinearVelocity = FlyVelocity
		LocalPlr.Character.Humanoid:ChangeState(""Freefall"")
	end
end)

-- Stepped Functions

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
		CameraAimbot.RealJumpOffset = CameraAimbot.JumpOffset
	else
		CameraAimbot.RealJumpOffset = 0
	end
end)

RunService.Stepped:Connect(function()
	local AirCheckType

	if CameraAimbot.AirCheckType == ""Once in Air"" then
		AirCheckType = CamlockPlr.Character.Humanoid.FloorMaterial == Enum.Material.Air
	else
		AirCheckType = CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall
	end

	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.UseAirPart and AirCheckType then
		CameraAimbot.RealHitPart = CameraAimbot.AirPart
	else
		CameraAimbot.RealHitPart = CameraAimbot.HitPart
	end
end)

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.AutoPred then
		local Ping = math.round(Stats.Network.ServerStatsItem[""Data Ping""]:GetValue())

		if Ping < 10 then
			CameraAimbot.RealPrediction = 0.097

		elseif Ping < 20 then
			CameraAimbot.RealPrediction = 0.112

		elseif Ping < 30 then
			CameraAimbot.RealPrediction = 0.115

		elseif Ping < 40 then
			CameraAimbot.RealPrediction = 0.125

		elseif Ping < 50 then
			CameraAimbot.RealPrediction = 0.122

		elseif Ping < 60 then
			CameraAimbot.RealPrediction = 0.123

		elseif Ping < 70 then
			CameraAimbot.RealPrediction = 0.132

		elseif Ping < 80 then
			CameraAimbot.RealPrediction = 0.134

		elseif Ping < 90 then
			CameraAimbot.RealPrediction = 0.137

		elseif Ping < 100 then
			CameraAimbot.RealPrediction = 0.146

		elseif Ping < 110 then
			CameraAimbot.RealPrediction = 0.148

		elseif Ping < 120 then
			CameraAimbot.RealPrediction = 0.144

		elseif Ping < 130 then
			CameraAimbot.RealPrediction = 0.157

		elseif Ping < 140 then
			CameraAimbot.RealPrediction = 0.122

		elseif Ping < 150 then
			CameraAimbot.RealPrediction = 0.152

		elseif Ping < 160 then
			CameraAimbot.RealPrediction = 0.163

		elseif Ping < 170 then
			CameraAimbot.RealPrediction = 0.192

		elseif Ping < 180 then
			CameraAimbot.RealPrediction = 0.193

		elseif Ping < 190 then
			CameraAimbot.RealPrediction = 0.167

		elseif Ping < 200 then
			CameraAimbot.RealPrediction = 0.166

		elseif Ping < 210 then
			CameraAimbot.RealPrediction = 0.168

		elseif Ping < 220 then
			CameraAimbot.RealPrediction = 0.166

		elseif Ping < 230 then
			CameraAimbot.RealPrediction = 0.157

		elseif Ping < 240 then
			CameraAimbot.RealPrediction = 0.168

		elseif Ping < 250 then
			CameraAimbot.RealPrediction = 0.165

		elseif Ping < 260 then
			CameraAimbot.RealPrediction = 0.176

		elseif Ping < 270 then
			CameraAimbot.RealPrediction = 0.177

		elseif Ping < 280 then
			CameraAimbot.RealPrediction = 0.181

		elseif Ping < 290 then
			CameraAimbot.RealPrediction = 0.182

		elseif Ping < 300 then
			CameraAimbot.RealPrediction = 0.185
		end
	else
		CameraAimbot.RealPrediction = CameraAimbot.Prediction
	end
end)

RunService.Stepped:Connect(function()
	LocalPlr.Character.Humanoid.UseJumpPower = not Utilities.NoJumpCooldown
end)

RunService.Stepped:Connect(function()
	if Utilities.NoSlowdown then
		local Slowdowns = LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""NoJumping"") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""ReduceWalk"") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""NoWalkSpeed"")

		if Slowdowns then
			Slowdowns:Destroy()
		end

		if LocalPlr.Character.BodyEffects.Reload.Value then
			LocalPlr.Character.BodyEffects.Reload.Value = false
		end

		if LocalPlr.Character.BodyEffects.Reloading.Value then
			LocalPlr.Character.BodyEffects.Reloading.Value = false
		end
	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AutoStomp then
		ReplicatedStorage.MainEvent:FireServer(""Stomp"")
	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AutoReload and LocalPlr.Character:FindFirstChildWhichIsA(""Tool"").Ammo.Value <= 0 then
		ReplicatedStorage.MainEvent:FireServer(""Reload"", LocalPlr.Character:FindFirstChildWhichIsA(""Tool""))
	end
end)

RunService.Stepped:Connect(function()
	if Movement.SpeedEnabled then
		LocalPlr.Character.HumanoidRootPart.CFrame = LocalPlr.Character.HumanoidRootPart.CFrame + LocalPlr.Character.Humanoid.MoveDirection * Movement.SpeedAmount
	end
end)

RunService.Stepped:Connect(function()
	if Movement.AutoJump and LocalPlr.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall and LocalPlr.Character.Humanoid.MoveDirection.Magnitude > 0 then
		LocalPlr.Character.Humanoid:ChangeState(""Jumping"")
	end
end)

RunService.Stepped:Connect(function()
	if Movement.BunnyHop and LocalPlr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
		LocalPlr.Character.HumanoidRootPart.CFrame = LocalPlr.Character.HumanoidRootPart.CFrame + LocalPlr.Character.Humanoid.MoveDirection * Movement.HopAmount
	end
end)

-- RenderStepped Functions

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled then
		if CameraAimbot.Resolver then
			if CameraAimbot.Smoothing then
				Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Recalculate(CamlockPlr) * CameraAimbot.RealPrediction)), CameraAimbot.Smoothness, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
			else
				Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Recalculate(CamlockPlr) * CameraAimbot.RealPrediction))
			end
		else
			if CameraAimbot.Smoothing then
				Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction)), CameraAimbot.Smoothness, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
			else
				Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
			end
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.KoCheck and (CamlockPlr.Character.Humanoid.Health <= 2.25 or LocalPlr.Character.Humanoid.Health <= 2.25) then
		CamBindEnabled = false
	end
end)

RunService.RenderStepped:Connect(function()
	local Position, OnScreen

	if CameraAimbot.Resolver then
		Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Recalculate(CamlockPlr) * CameraAimbot.RealPrediction))
	else
		Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
	end

	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.Tracer and OnScreen then
		CamTracerLine.Visible = true
		CamTracerLine.From = UserInputService:GetMouseLocation()
		CamTracerLine.To = Vector2.new(Position.X, Position.Y)
	else
		CamTracerLine.Visible = false
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.Highlight then
		CamHighlight.Parent = CamlockPlr.Character
	else
		CamHighlight.Parent = CoreGui
	end
end)

RunService.RenderStepped:Connect(function()
	CamFovCircle.Position = UserInputService:GetMouseLocation()
end)

RunService.RenderStepped:Connect(function()
	if (SelfDot.Enabled or SelfDot.Tracer) and SelfDot.RandomHitPart then
		local RandomHitParts = {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso"", ""RightUpperArm"", ""LeftUpperArm"", ""RightLowerArm"", ""LeftLowerArm"", ""RightUpperLeg"", ""LeftUpperLeg"", ""RightLowerLeg"", ""LeftLowerLeg""}

		SelfDot.RealHitPart = RandomHitParts[math.random(#RandomHitParts)]
		wait(0.6)
	else
		SelfDot.RealHitPart = SelfDot.HitPart
	end
end)

-- InputBegan Functions

UserInputService.InputBegan:Connect(function(Key)
	if CameraAimbot.Enabled and Key.KeyCode == CameraAimbot.Keybind and not UserInputService:GetFocusedTextBox() then
		local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(ClosestPlr(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle).Character[CameraAimbot.RealHitPart].Position)

		if CamBindEnabled then
			CamBindEnabled = false

			if CameraAimbot.Notify then
				StarterGui:SetCore(""SendNotification"", {
					Title = ""Azure Modded [Actyrn]"", 
					Text = ""Untargeting: "" .. CamlockPlr.DisplayName, 
					Duration = 2.5
				})
			end
		else
			if OnScreen then
				CamBindEnabled = true
				CamlockPlr = ClosestPlr(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle)

				if CameraAimbot.Notify then
					StarterGui:SetCore(""SendNotification"", {
						Title = ""Azure Modded [Actyrn]"", 
						Text = ""Targeting: "" .. CamlockPlr.DisplayName, 
						Duration = 2.5
					})
				end
			end
		end
	end
end)

-- Hookmetamethod functions

AntiCheatNamecall = hookmetamethod(game, ""__namecall"", newcclosure(function(Self, ...)
	local Arguments = {...}
	local AntiCheats = {""BreathingHAMON"", ""TeleportDetect"", ""JJARC"", ""TakePoisonDamage"", ""CHECKER_1"", ""CHECKER"", ""GUI_CHECK"", ""OneMoreTime"", ""checkingSPEED"", ""BANREMOTE"", ""PERMAIDBAN"", ""KICKREMOTE"", ""BR_KICKPC"", ""FORCEFIELD"", ""Christmas_Sock"", ""VirusCough"", ""Symbiote"", ""Symbioted"", ""RequestAFKDisplay""}

	if table.find(AntiCheats, Arguments[1]) and getnamecallmethod() == ""FireServer"" then
		return
	end

	return AntiCheatNamecall(Self, ...)
end))"
BTJkxi2f,Untitled,Hidend,C++,Friday 10th of May 2024 10:47:53 PM CDT,"//hidend
#include ""pch.h""
#include <iostream>
#include <fstream>
#include <cstring>
#include <Shlwapi.h>

DWORD samp_base = 0;
HMODULE g_hModule = NULL;
bool bDetourMyself = false;

const DWORD OFFSETS[6][2]{
    /*ChatInfo, AddMsg*/
    {0x21A0E4, 0x645A0}, // 037-r1 - 0
    {0x021A0EC, 0x64670}, // 037-r2 - 1
    {0x026E8C8, 0x679F0}, // 037-r3_1 - 2
    {0x026E9F8, 0x68130}, // 037-r4 - 3 
    {0x026E9F8, 0x68170}, // 037-r4_2 -4
    {0x026EB80, 0x68170}, // 037-r5_1 - 5
};

int get_samp_version_id()
{
    int version_current = -1;

    if (samp_base)
    {
        int version_id = *reinterpret_cast<int*>((char*)samp_base + 0x128);
        switch (version_id) {
        case 0x5542F47A: // R1
            version_current = 0;
            break;
        case 0x59C30C94: // R2
            version_current = 1;
            break;
        default:
            version_id = *reinterpret_cast<int*>((char*)samp_base + 0x120);

            switch (version_id) {
            case 0x5C0B4243: // R3
                version_current = 2;
                break;
            case 0x5DD606CD: // R4 - v1
                version_current = 3;
                break;
            case 0x6094ACAB: // R4 - v2
                version_current = 4;
                break;
            case 0x6372C39E: // R5, ni nos interesa pero meh
                version_current = 5;
                break;
            }
        }
    }
    return version_current;
}

void addMessageToChat(unsigned dwColor, const char* szMsg, ...)
{
    int version = get_samp_version_id();
    if (version == -1)
        return;

    DWORD chatInfoOffset = OFFSETS[version][0];
    DWORD addMsgOffset = OFFSETS[version][1];

    unsigned char red = static_cast<unsigned char>(rand() % 256);
    unsigned char green = static_cast<unsigned char>(rand() % 256);
    unsigned char blue = static_cast<unsigned char>(rand() % 256);

    // Combine the color components into a single unsigned integer
    unsigned newColor = (red << 16) | (green << 8) | blue;
    auto addMessage = reinterpret_cast<void(__thiscall*)(void* pChat, unsigned color, const char* message)>(samp_base + addMsgOffset);
    addMessage(*reinterpret_cast<void**>(samp_base + chatInfoOffset), newColor, szMsg);
}

void searchStringInFile(const char* filePath, const char* searchString) {
    std::ifstream file(filePath);
    if (file.is_open()) {
        addMessageToChat(-1, ""abierto"");
        char line[256];
        char buffer[256];
        while (file.getline(line, sizeof(line))) {
            addMessageToChat(-1, line);
            char* pos = strstr(line, searchString);
            if (pos != nullptr) {
                sprintf_s(buffer, sizeof(buffer), ""Encontrado en archivo in file: %s\n"", filePath);
                addMessageToChat(-1, buffer);
                sprintf_s(buffer, sizeof(buffer), ""Texto encontrado: '%s'"", searchString);
                addMessageToChat(-1, buffer);
                break;
            }
        }
        file.close();
    }
}

int init()
{
    char* Directorio = reinterpret_cast<char*>(0xB71A60);
    samp_base = (DWORD)LoadLibraryA(""samp.dll"");

    searchStringInFile(""D:\\Games\\Grand Theft Auto San Andreas\\moonloader\\test.lua"", ""0x001eb6d4"");
    addMessageToChat(-1, ""test2"");
    FreeLibraryAndExitThread(g_hModule, 0);
    return 0;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReasonForCall, LPVOID lpReserved)
{
    switch (dwReasonForCall)
    {
    case DLL_PROCESS_ATTACH:
        g_hModule = hModule;
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)init, NULL, NULL, NULL);
        break;
    case DLL_THREAD_ATTACH:
        break;
    case DLL_THREAD_DETACH:
        break;
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}"
WJ9NkHPq,wifi-to-eth-route.sh,About80Ninjas,Bash,Friday 10th of May 2024 10:29:31 PM CDT,"#!/bin/bash

# Share Wifi with Eth device
#
#
# This script is created to work with Raspbian Stretch
# but it can be used with most of the distributions
# by making few changes.
#
# Make sure you have already installed `dnsmasq`
# Please modify the variables according to your need
# Don't forget to change the name of network interface
# Check them with `ifconfig`

#credit: https://github.com/arpitjindal97/raspbian-recipes/tree/master

ip_address_and_network_mask_in_CDIR_notation=""192.168.2.1/24""
dhcp_range_start=""192.168.2.2""
dhcp_range_end=""192.168.2.100""
dhcp_time=""12h""
dns_server=""1.1.1.1""
eth=""eth0""
wlan=""wlan0""

sudo systemctl start network-online.target &> /dev/null

sudo iptables -F
sudo iptables -t nat -F
sudo iptables -t nat -A POSTROUTING -o $wlan -j MASQUERADE
sudo iptables -A FORWARD -i $wlan -o $eth -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i $eth -o $wlan -j ACCEPT

sudo sh -c ""echo 1 > /proc/sys/net/ipv4/ip_forward""

sudo ip link set $eth down
sudo ip link set $eth up
sudo ip addr add  $ip_address_and_network_mask_in_CDIR_notation dev $eth 

# Remove default route created by dhcpcd
sudo ip route del 0/0 dev $eth &> /dev/null

sudo systemctl stop dnsmasq

sudo rm -rf /etc/dnsmasq.d/* &> /dev/null

echo -e ""interface=$eth
bind-interfaces
server=$dns_server
domain-needed
bogus-priv
dhcp-range=$dhcp_range_start,$dhcp_range_end,$dhcp_time"" > /tmp/custom-dnsmasq.conf

sudo cp /tmp/custom-dnsmasq.conf /etc/dnsmasq.d/custom-dnsmasq.conf
sudo systemctl start dnsmasq"
G7Bn6k79,ACTIVITY 4 ADASYS,mikeyworx,MySQL,Friday 10th of May 2024 10:29:19 PM CDT,"CREATE DATABASE CUB_MSG;
USE CUB_MSG;

CREATE TABLE messages (
	id INT auto_increment primary KEY,
    subject varchar(255),
    body Text
);

INSERT INTO messages (subject, body) VALUES
('CSS Workshop', 'Join us for a CSS Workshop where we will delve deep into the intricacies of Cascading Style Sheets.'),
('PHP Debugging Techniques', 'Learn advanced PHP debugging techniques in our upcoming workshop.'),
('Introduction to XHTML', 'Join our seminar on the basics of XHTML for web development beginners.'),
('CSS Flexbox Layouts', 'Discover the power of CSS Flexbox layouts in our hands-on session.'),
('PHP Security Best Practices', 'Master the best practices for securing your PHP applications.'),
('XHTML for SEO', 'Learn how to optimize XHTML documents for better search engine ranking.'),
('Advanced CSS Animations', 'Take your CSS animation skills to the next level with our advanced workshop.'),
('Database Integration', 'Learn how to integrate databases seamlessly into your PHP applications.'),
('XHTML Accessibility', 'Ensure accessibility compliance with XHTML standards.'),
('Responsive Web Design with CSS', 'Design responsive websites using the latest CSS techniques.'),
('PHP Only in Body', 'This message contains PHP in the body but not in the subject.'),
('Proposal Review', 'Review of the proposal for PHP project.');


SELECT * FROM messages WHERE subject LIKE '%CSS%' AND body LIKE '%CSS%';

SELECT * FROM messages WHERE body LIKE '%PHP%' AND (subject NOT LIKE '%PHP%' OR subject IS NULL);

SELECT * FROM messages WHERE subject LIKE '%XHTML%';

"
h3g1esxh,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Friday 10th of May 2024 09:59:01 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
11 May 2024"
tsw6peQZ,jrszb2018,Damonwei,JSON,Friday 10th of May 2024 09:46:30 PM CDT,"{
""author"":""Dwei-0202"",
""homeUrl"": ""http://m.jrszb2018.com/"",
""ua"":""Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1"",
""cateManual"": {""赛事直播"": ""666""},
""cateUrl"": ""http://m.jrszb2018.com"",
""cateVodNode"": ""//div[@class='contentList']/a"",
""cateVodName"": ""concat(/div/div[1]/p[last()]/text(),'VS',/div/div[3]/p[last()]/text())"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div/div[1]/p/img/@src"",
""cateVodMark"": ""concat(/div/div[2]/p/text(),'-',/div/div[2]/p[2]/text(),'-',/div/div[2]/p[2]/span/text())"",
""dtUrl"": ""http://m.jrszb2018.com{vid}"",
""dtNode"": ""//div[@id='app']//div[@class='today']/div"",
""dtName"": ""concat(/div[1]/p/text(),'VS',/div[3]//text())"",
""dtImg"": ""'https://tuapi.eees.cc/api.php?category={fengjing,jianyue}&type=302'"",
""dtDirector"": ""concat('Never underestimate the heart of a champion! ')"",
""dtDirectorR"": """",
""dtDesc"": ""concat('Damon提醒：比赛时间开始前10分钟左右才会有直播信号接入，优先选择官方高清线路，非官方直播中勿信广告，勿扫码或添加主播等链接！！！')"",
""dtFromNode"": ""//div[@id='app']//div[@class='today']/div"",
""dtFromName"":  ""'【直播源】'"",
""dtUrlNode"": ""//div[@class='liveshow']"",
""dtUrlSubNode"": ""/a[contains(./@data-url,'http')]"",
""dtUrlId"": ""/@data-url"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""playUrl"":""{playUrl}""

}"
518NKxN7,85128,Damonwei,JSON,Friday 10th of May 2024 09:29:27 PM CDT,"{
""author"":""Dwei-0308"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.85128.net/category-11.html"",
""cateNode"": ""//ul[contains(@class,'wide')]/li/a[(contains(@href,'/category'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""https://www.85128.net/category-(\\w+).html"",
""homeVodNode"": ""//ul[@class='clearfix']/li/a"",
""homeVodName"": ""[substring-after([substring-before(/span/img/@alt,'》')],'《')]"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/span/img/@src"",
""homeVodImgR"": """",
""homeVodMark"": ""[substring-after(/span/img/@alt,'》')]"",
""cateUrl"": ""https://www.85128.net/category-{cateId}_{catePg}.html"",
""cateVodNode"": ""//ul[@class='clearfix']/li/a"",
""cateVodName"": ""[substring-after([substring-before(/span/img/@alt,'》')],'《')]"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/span/img/@src"",
""cateVodImgR"": """",
""cateVodMark"": ""[substring-after(/span/img/@alt,'》')]"",
""dtUrl"":""{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='tx-text f-16 mb15']/p/img/@src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""[substring-after([substring-before(//div[@class='tx-text f-16 mb15']/p/span/text(),'◎语　　言')],'类　　别　')]"",
""dtCateR"": """",
""dtYear"": ""[substring-after([substring-before(//div[@class='tx-text f-16 mb15']/p/span/text(),'◎产　　地')],'年　　代　')]"",
""dtYearR"": """",
""dtArea"": ""[substring-after([substring-before(//div[@class='tx-text f-16 mb15']/p/span/text(),'◎类　　别')],'产　　地　')]"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""[substring-after([substring-before(//div[@class='tx-text f-16 mb15']/p/span/text(),'◎主　　演')],'导　　演　')]"",
""dtDirectorR"": """",
""dtActor"": ""[substring-after([substring-before(//div[@class='tx-text f-16 mb15']/p/span/text(),'◎简　　介')],'主　　演　')]"",
""dtActorR"": ""\\S+-\\S+"",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！！简介：',[substring-after(//div[@class='tx-text f-16 mb15']/p/span/text(),'简　　介')])"",
""dtFromNode"": ""//body"",
""dtFromName"":  ""concat('DweiTV')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@class='tx-text f-16 mb15']"",
""dtUrlSubNode"": ""//table/tbody/tr/td[contains(.//@href,'magnet:')]/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""{playUrl}"",
""searchUrl"":""https://www.85128.net/search.php?q={wd}"",
""scVodNode"":""//ul[@class='clearfix']/li/a"",
""scVodName"":""[substring-after([substring-before(/span/img/@alt,'》')],'《')]"",
""scVodId"":""/@href"",
""scVodIdR"": """",
""scVodImg"":""/span/img/@src"",
""scVodImgR"":"""",
""scVodMark"":""[substring-after(/span/img/@alt,'》')]""

}"
rG15Qh7j,Q348z,Damonwei,JSON,Friday 10th of May 2024 09:25:15 PM CDT,"{
    
    ""作者"":""Dwei-0129"",
    
    ""站名"":""348影视"",
    
    ""主页url"":""https://348z.com/"",
    
    ""简介"":""Dwei观影提示，若线路存在广告请勿相信！！！++详情：&&</div>"",
     
    ""导演"":""导演：&&</li>"",
    
    ""主演"":""主演：&&</li>"",
    
    ""影片状态"":""状态：&&</li>"",
    
    ""影片类型"":""data vodTag\"">&&</li>"",
    
    ""数组"":""list-width volistwidthb\"">&&</li>"",
    
    ""标题"":""title=\""&&\"""",
    
    ""副标题"":""list-remarks hidden\"">&&</span>"",
    
    ""图片"":""data-original=\""&&\"""",
    
    ""链接"":""href=\""&&\"""",
    
    ""搜索url"":""/vodsearch.html?wd={wd}"",
    
    ""搜索模式"":""1"",
    
    ""搜索数组"":""img lazy eclazy br\""&&</a>"",
    
    ""搜索标题"":""title=\""&&\"""",
    
    ""搜索副标题"":""list-remarks hidden\"">&&</span>"",
    
    ""搜索图片"":""data-original=\""&&\"""",
    
    ""搜索链接"":""href=\""&&\"""",
    
    ""线路数组"":""data-from=&&</a>[排序: 蓝光LZ>]"",
    
    ""线路标题"":"">&&<"",
    
    ""分类url"":""https://348z.com/vodshow/area/{area}/by/{by}/id/{cateId}/page/{catePg}/year/{year}.html;;ak"",
    
    ""分类"":""国产剧$13#港台剧$14#日韩剧$15#欧美剧$16#B站剧集$49#电视剧$2#电影$1#综艺$3#动漫$4""
    }"
8nt1bcC8,hanjukankan,Damonwei,JSON,Friday 10th of May 2024 09:23:26 PM CDT,"{
""author"":""Dwei-0202"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.hanjukankan.com/"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""推荐"": ""5"",""韩剧"": ""1"",""电影"": ""2"",""其他"": ""4"",""韩综"": ""3""},
""homeVodNode"": ""//div[contains(@class,'myui-vodlist__box')]/a"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""/span[last()-1]/text()"",
""cateUrl"": ""https://www.hanjukankan.com/search.php?page={catePg}&searchtype=5&tid={cateId}"",
""cateVodNode"": ""//div[contains(@class,'myui-vodlist__box')]/a"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""/span[last()-1]/text()"",
""dtUrl"":""https://www.hanjukankan.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='myui-content__thumb']/a/img/@data-original"",
""dtImgR"": """",
""dtCate"": ""concat([substring-before(//span[contains(text(),'类型')]/following-sibling::*//text(),'地区')])"",
""dtCateR"": """",
""dtYear"": ""//span[contains(text(),'年份')]/following-sibling::*//text()"",
""dtYearR"": """",
""dtArea"": ""[substring-before(//span[contains(text(),'地区')]/following-sibling::*//text(),'年份')]"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//span[contains(text(),'导演')]/following-sibling::*//text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//span[contains(text(),'主演')]/following-sibling::*//text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！简介：',//span[contains(@class,'sketch hidden-sm')]/text())"",
""dtFromNode"": ""//ul[contains(@class,'nav nav-tabs ')]/li/a"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//ul[contains(@class,'myui-content__list')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://www.hanjukankan.com{playUrl}"",
""searchUrl"":""https://www.hanjukankan.com/search.php?searchword={wd}"",
""scVodNode"":""//a[contains(@class,'myui-vodlist__thumb')]"",
""scVodName"":""/@title"",
""scVodId"":""/@href"",
""scVodImg"":""/@data-original"",
""scVodMark"":""/span[last()-1]/text()""

}"
TwPmVhFv,yuepianys,Damonwei,JSON,Friday 10th of May 2024 09:20:42 PM CDT,"{
""author"":""Dwei-0202"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://yuepianys.com/"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""4"",""综艺"": ""3""},
""homeVodNode"": ""//div[contains(@class,'public-list-box')]/div[1]/a"",
""homeVodName"": ""/img/@alt"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/img/@data-src"",
""homeVodImgR"": """",
""homeVodMark"": ""/div/span/text()"",
""cateUrl"": ""https://yuepianys.com/vod/list.html?page={catePg}&type_id={cateId}"",
""cateVodNode"": ""//div[contains(@class,'public-list-box')]/div[1]/a"",
""cateVodName"": ""/img/@alt"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/img/@data-src"",
""cateVodImgR"": """",
""cateVodMark"": ""/div/span/text()"",
""dtUrl"":""https://yuepianys.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h3/text()"",
""dtNameR"": """",
""dtImg"": ""//div[contains(@class,'detail-pic')]/img/@data-src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//strong[contains(text(),'类型')]/parent::*//text()[last()])"",
""dtCateR"": """",
""dtYear"": ""//div[@class='slide-info hide'][1]/span[1]/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='desc clearfix']/p[1]/span[1]/a/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//strong[contains(text(),'导演')]/following-sibling::*//text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//strong[contains(text(),'演员')]/following-sibling::*//text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！！简介：',//div[@id='height_limit']/text())"",
""dtFromNode"": ""//body"",
""dtFromName"":  ""concat('DweiTV')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[contains(@class,'anthology-list-box')]/div/ul"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://yuepianys.com{playUrl}"",
""searchUrl"":""https://yuepianys.com/vod/search.html?keyword={wd}"",
""scVodNode"":""//div[contains(@class,'public-list-box')]/div[1]/a"",
""scVodName"":""/img/@alt"",
""scVodId"":""/@href"",
""scVodIdR"": """",
""scVodImg"":""/img/@data-src"",
""scVodImgR"":"""",
""scVodMark"":""/a/div/span/text()""
}"
MDPg8MmP,Qpptv06,Damonwei,JSON,Friday 10th of May 2024 09:18:59 PM CDT,"{
""分类url"": ""https://www.pptv06.com/vodshow/{cateId}-{area}-------{catePg}---{year}.html"",
""分类"": ""电影$1#电视剧$2#动漫$4""
}"
cN6g5HwB,Qzhuiying,Damonwei,JSON,Friday 10th of May 2024 09:18:03 PM CDT,"{
""线路数组"": ""data-hash=\""slide{1}\""&&</small>[排序:4K蓝光]"",
""搜索url"": ""http://vip.zhuiying.cyou/index.php/vod/search/wd/{wd}.html"",
""分类url"": ""http://vip.zhuiying.cyou/index.php/vod/show/id/{cateId}/page/{catePg}/are/{are}/by/{by}/class/{class}/lang/{lang}/year/{year}.html"",
""分类"": ""电影$2#剧集$1#综艺$3#动漫$4#短剧$20#体育$21""
}"
xCqzi1r0,Qsaohuo,Damonwei,JSON,Friday 10th of May 2024 09:17:12 PM CDT,"{
""作者"":"""",
""站名"":""骚火"",
""主页url"":""https://saohuo.tv/"",
""简介"":""+<p class=\""p_txt show_part\""&&</p>"",
""导演"":""</h1><p>* / 导演：&& /"",
""主演"":""主演：&&</p>"",
""影片地区"":""</h1><p>&& / "",
""影片年代"":""<p>* / && /"",
""影片状态"":""v_note\"">&&</div>"",
""搜索url"":""https://saohuo.tv/search.php?searchword={wd}"",
""线路二次截取"":""<ul class=\""from_list\"">&&</ul>"",
""线路数组"":""<li&&/li>"",
""线路标题"":"">&&<[替换:1号线路>>DweiTV#2号线路>>DweiTV2]"",
""分类url"":""https://saohuo.tv/list/{cateId}{area}{by}{class}{lang}{catePg}{year}.html;;ak"",
""分类"":""电视剧$2#电影$1""
}"
ME60s8WE,dyhz3,Damonwei,JSON,Friday 10th of May 2024 09:15:04 PM CDT,"{
""author"":""Dwei-0427"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""http://m.dyhz3.com/list-select-id-2-type--area-%E5%86%85%E5%9C%B0-year--star--state--order-hits.html"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""国产剧"": ""/list-select-id-2-type--area-内地-year--star--state--order-addtime-p-"",""港台剧"": ""/list-select-id-2-type--area-香港-year--star--state--order-hits-p-"",""日韩剧"": ""/list-select-id-2-type--area-韩国-year--star--state--order-hits-p-"",""欧美剧"": ""/list-select-id-2-type--area-美国-year--star--state--order-hits-p-"",""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""3"",""综艺"": ""4""},
""homeVodNode"": ""//ul[contains(@class,'list-unstyled vod-item-img ff-img-140')]/li"",
""homeVodName"": ""//h2/a/text()"",
""homeVodId"": ""//h2/a/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/p/a/img/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""/p/a/span/text()"",
""cateUrl"": ""http://m.dyhz3.com/list-select-id-{cateId}-type--area--year--star--state--order-addtime-p-{catePg}.html"",
""cateVodNode"": ""//ul[contains(@class,'list-unstyled vod-item-img ff-img-140')]/li"",
""cateVodName"": ""//h2/a/text()"",
""cateVodId"": ""//h2/a/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/p/a/img/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""/p/a/span/text()"",
""dtUrl"":""http://m.dyhz3.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h2/a/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='media-left']/a/img/@data-original"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//dt[contains(text(),'类型')]/following-sibling::dd[1]/a/text())"",
""dtCateR"": """",
""dtYear"": ""//dt[contains(text(),'年份')]/following-sibling::dd[1]/a/text()"",
""dtYearR"": """",
""dtArea"": ""//dt[contains(text(),'地区')]/following-sibling::dd[1]/a/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//dt[contains(text(),'导演')]/following-sibling::dd[1]/a/text())"",
""dtDirectorR"": ""导演：(.*)"",
""dtActor"": ""concat(//dt[contains(text(),'主演')]/following-sibling::dd[1]/a/text())"",
""dtActorR"": ""/(.*)/"",
""dtDesc"": ""concat('Dwei观影提示：资源播放缓慢或加载失败可切换不同线路或点击首页切换站点或点击快速搜索观看，若线路存在广告请勿相信！！！简介：',//div[contains(@class,'vod-nav-content active in')]/text()[last()])"",
""dtFromNode"": ""//div[@class='tab-content']/div/div/h2"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@class='tab-content']/div/ul[contains(@class,'list-unstyled')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""http://m.dyhz3.com{playUrl}"",
""searchUrl"":""http://m.dyhz3.com/vod-search-wd-{wd}-p-{page}.html"",
""scVodNode"":""//ul[contains(@class,'list-unstyled vod-item-img ff-img-140')]/li"",
""scVodName"":""//h2/a/text()"",
""scVodId"":""//h2/a/@href"",
""scVodIdR"": """",
""scVodImg"":""/p/a/img/@data-original"",
""scVodImgR"":"""",
""scVodMark"":""/p/a/span/text()""
}"
7nFtJn56,ncat2,Damonwei,JSON,Friday 10th of May 2024 08:19:54 PM CDT,"{
""author"":""Dwei-0424"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.ncat2.com:51111/"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""3"",""综艺"": ""4"",""短剧"": ""6""},
""homeVodNode"": ""//div[@class='module-item']/a"",
""homeVodName"": ""/div[1]/div/img/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/div[1]/div/img/@date-src"",
""homeVodImgR"": """",
""homeVodMark"": ""concat(/div[1]/div[last()]/span/text(),'-',/div[1]/div[2]/div/span/text())"",
""cateUrl"": ""https://www.ncat2.com:51111/show/{cateId}-{class}-{area}--{year}-3-{catePg}.html"",
""cateVodNode"": ""//div[@class='module-item']/a"",
""cateVodName"": ""/div[1]/div/img/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div[1]/div/img/@data-src"",
""cateVodImgR"": """",
""cateVodMark"": ""concat(/div[1]/div[last()]/span/text(),'-',/div[1]/div[2]/div/span/text())"",
""dtUrl"":""https://www.ncat2.com:51111{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//div[@class='detail-title']/strong/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='detail-pic']/img/@src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""//div[contains(@class,'detail-tags')]/a[3]/text()"",
""dtCateR"": """",
""dtYear"": ""//div[contains(@class,'detail-tags')]/a[1]/text()"",
""dtYearR"": """",
""dtArea"": ""//div[contains(@class,'detail-tags')]/a[2]/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//div[contains(text(),'导演')]/following-sibling::*//text())"",
""dtDirectorR"": ""导演：(.*)"",
""dtActor"": ""concat(//div[contains(text(),'演员')]/following-sibling::*//text())"",
""dtActorR"": ""/(.*)/"",
""dtDesc"": ""concat('Dwei观影提示：资源播放缓慢或加载失败可切换不同线路或点击首页切换站点或点击快速搜索观看，若线路存在广告请勿相信！！！简介：',//div[contains(@class,'detail-desc')]/p/text())"",
""dtFromNode"": ""//div[@id='detail-source-swiper']/div/div/a"",
""dtFromName"":  ""concat(/span/text(),'☞',/i[last()]/text(),'集')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[contains(@class,'episode-list')]"",
""dtUrlSubNode"": ""/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://www.ncat2.com:51111{playUrl}"",
""searchUrl"":""https://www.ncat2.com:51111/search?k={wd}"",
""scVodNode"":""//div[contains(@class,'search-result-list')]/a"",
""scVodName"":""//div[@class='search-result-item-pic']/img/@title"",
""scVodId"":""/@href"",
""scVodIdR"": """",
""scVodImg"":""//div[@class='search-result-item-pic']/img/@src"",
""scVodImgR"":"""",
""scVodMark"":""/div[1]/div/text()""
}"
QZjRxcRM,netflixgc,Damonwei,JSON,Friday 10th of May 2024 08:19:16 PM CDT,"{
""author"":""Dwei-0308"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.netflixgc.com/vodshow/14-----------.html"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""NETFLIX"": ""15"",""奈飞请搜索观看"": ""14""},
""homeVodNode"": ""//div[contains(@class,'public-list-div')]/a"",
""homeVodName"": ""/img/@alt"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/img/@data-src"",
""homeVodImgR"": """",
""homeVodMark"": ""/span[1]/text()"",
""cateUrl"": ""https://www.netflixgc.com/{cateId}/index_{catePg}.html"",
""cateVodNode"": ""//div[contains(@class,'public-list-div')]/a"",
""cateVodName"": ""/img/@alt"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/img/@data-src"",
""cateVodImgR"": """",
""cateVodMark"": ""/span[1]/text()"",
""dtUrl"":""https://www.netflixgc.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h3/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='detail-pic']/img/@data-src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//strong[contains(text(),'類型')]/following-sibling::*//text())"",
""dtCateR"": """",
""dtYear"": ""//span[@class='slide-info-remarks'][2]/a/text()"",
""dtYearR"": """",
""dtArea"": ""//span[@class='slide-info-remarks'][3]/a/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//strong[contains(text(),'導演')]/following-sibling::*//text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//strong[contains(text(),'演員')]/following-sibling::*//text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！！简介：',//div[@id='height_limit']/text())"",
""dtFromNode"": ""//body//div[@class='swiper-wrapper']/a"",
""dtFromName"":  ""concat(/text(),'☞',/span/text(),'集')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//body//ul[contains(@class,'anthology-list-play')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://www.netflixgc.com{playUrl}"",
""searchUrl"":""https://www.netflixgc.com/vodsearch/{wd}-------------.html"",
""scVodNode"":""//div[contains(@class,'public-list-box')]/div/a"",
""scVodName"":""[substring-before(/img/@alt,'封面')]"",
""scVodId"":""/@href"",
""scVodIdR"": """",
""scVodImg"":""/img/@data-src"",
""scVodImgR"":"""",
""scVodMark"":""/span[1]/text()""

}"
grPFYWda,keke11,Damonwei,JSON,Friday 10th of May 2024 08:19:01 PM CDT,"{
""author"":""Dwei-0131"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.keke11.com:51111/"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""3"",""综艺"": ""4"",""短剧"": ""6""},
""homeVodNode"": ""//div[@class='module-item']/a"",
""homeVodName"": ""/div[1]/div[1]/img/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/div[1]/div[1]/img/@data-src"",
""homeVodImgR"": """",
""homeVodMark"": ""/div[1]/div[3]/span/text()"",
""cateUrl"": ""https://www.keke11.com:51111/show/{cateId}-----3-{catePg}.html"",
""cateVodNode"": ""//div[@class='module-item']/a"",
""cateVodName"": ""/div[1]/div[1]/img/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div[1]/div[1]/img/@data-src"",
""cateVodImgR"": """",
""cateVodMark"": ""/div[1]/div[3]/span/text()"",
""dtUrl"":""https://www.keke11.com:51111{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//div[@class='detail-title']/strong/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='detail-pic']/img/@src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""//div[contains(@class,'detail-tags')]/a[last()]/text()"",
""dtCateR"": """",
""dtYear"": ""//div[contains(@class,'detail-tags')]/a[1]/text()"",
""dtYearR"": """",
""dtArea"": ""//div[contains(@class,'detail-tags')]/a[2]/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//div[contains(text(),'导演')]/following-sibling::*//text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//div[contains(text(),'演员')]/following-sibling::*//text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！简介：',//div[contains(@class,'detail-desc')]/p/text())"",
""dtFromNode"": ""//div[contains(@id,'detail-source-swiper')]/div/div/a"",
""dtFromName"":  ""concat(/span/text(),'☞',/i[last()]/text())"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@class='episode-box-main']/div"",
""dtUrlSubNode"": ""/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://www.keke11.com:51111{playUrl}"",
""searchUrl"":""https://www.keke11.com:51111/search?k={wd}"",
""scVodNode"":""//div[contains(@class,'search-result-list')]/a"",
""scVodName"":""/div[2]/div[1]/div/img/@title"",
""scVodId"":""/@href"",
""scVodIdR"": """",
""scVodImg"":""/div[2]/div[1]/div/img/@src"",
""scVodImgR"":"""",
""scVodMark"":""/div[1]/div/text()""
}"
c0UQxJTC,Qbaipiaoys,Damonwei,JSON,Friday 10th of May 2024 08:18:22 PM CDT,"{
""主页url"": ""https://www.baipiaoys.com:9092/"",
""副标题"": ""pic-text text-right\"">&&</b>"",
""搜索模式"": ""1"",
""搜索url"": ""https://www.baipiaoys.com:9092/search.html?wd={wd}"",
""图片"": ""data-original=\""&&\"""",
""嗅探词"": "".mp4#m3u8#.m3u8#/tos/#.flv#video/tos"",
""影片类型"": ""<div class=\""module-info-tag\"">&&立即播放"",
""导演"": ""导演：&&</div>"",
""主演"": ""主演：&&</div>"",
""线路标题"": ""[替换:白嫖播放器>>DweiTV]"",
""分类"": ""电视剧$2#电影$1#动漫$3#短剧$4#综艺$5"",
""分类url"": ""https://www.baipiaoys.com:9092/show/area/{area}/class/{class}/id/{cateId}/page/{catePg}/lang/{lang}/letter/{letter}/year/{year}.html""
}"
0F6k10UK,Qjinyuys,Damonwei,JSON,Friday 10th of May 2024 08:18:08 PM CDT,"{
    ""作者"":""Dwei-0420"",
    ""站名"":""金鱼"",
    ""主页url"":""https://jinyuys.com/"",
    ""数组"":""lazyload&&</a>"",
    ""图片"":""data-original=\""&&\"""",
    ""标题"":""title=\""&&\"""",
    ""链接"":""href=\""&&\"""",
    ""副标题"":""pic-text text-right\"">&&</span>"",
    ""简介"":""简介：&&</p>"",
    ""导演"":""导演：&&</p>"",
    ""主演"":""主演：&&</p>"",
    ""影片年代"":""更新：&&</p>"",
    ""影片状态"":""年份：&&</p>"",
    ""搜索url"":""https://jinyuys.com/search.html?keyword={wd}"",
    ""搜索模式"":""1"",
    ""搜索数组"":""<div class=\""thumb\"">&&</div>"",
    ""搜索图片"":""data-original=\""&&\"""",
    ""搜索标题"":""title=\""&&\"""",
    ""搜索链接"":""href=\""&&\"""",
    ""搜索副标题"":""pic-text text-right\"">&&</span>"",
    ""线路二次截取"":""排序&&</div>"",
    ""线路数组"":""<li>&&</li>"",
    ""线路标题"":"">&&</a>"",
    ""播放数组"":""<ul class=\""myui-content__list scrollbar sort-list clearfix playEpisodes\""&&</ul>"",
    ""播放标题"":"">&&</a>"",
    ""播放列表"":""<li&&</li>"",
    ""播放链接"":""href=\""&&\"""",
    ""分类url"":""https://jinyuys.com/vod/index.html?cate_id={cateId}&page={catePg}&type_id={class}&year_id={year}&area_id={area}"",
    ""分类"":""电视剧$2#电影$3#综艺$4#动漫$1"",
    ""嗅探词"":"".m3u8#.mp4?#tos-cn-i-siecs4i2o7#.mp4"",
    ""过滤词"":""url#.m3u8.cloud#51.la#cnzz.com#baidu.com#bilibili.com"",
    ""播放请求头"":""User-Agent$Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36"",
 ""筛选"":{
""2"":[
  {""key"":""class"",""name"":""类型"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""国产剧"",""v"":""13""},
  {""n"":""港台剧"",""v"":""17""},
  {""n"":""日韩剧"",""v"":""15""},
  {""n"":""欧美剧"",""v"":""14""}]},

  {""key"":""year"",""name"":""年份"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""2023"",""v"":""25""},
  {""n"":""2022"",""v"":""26""},
  {""n"":""2021"",""v"":""27""},
  {""n"":""2020"",""v"":""28""},
  {""n"":""2019"",""v"":""29""},
  {""n"":""2018"",""v"":""30""},
  {""n"":""2017"",""v"":""31""}]}],
  
""1"":[
  {""key"":""class"",""name"":""类型"",""value"":[
{""n"":""全部"",""v"":""""},
{""n"":""动作片"",""v"":""21""},
{""n"":""喜剧片"",""v"":""22""},
{""n"":""爱情片"",""v"":""23""},
{""n"":""科幻片"",""v"":""24""},
{""n"":""恐怖片"",""v"":""25""},
{""n"":""剧情片"",""v"":""26""},
{""n"":""战争片"",""v"":""27""},
{""n"":""动画片"",""v"":""30""}]},
  
  {""key"":""area"",""name"":""地区"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""大陆"",""v"":""2""},
  {""n"":""香港"",""v"":""3""},
  {""n"":""韩国"",""v"":""8""},
  {""n"":""美国"",""v"":""5""},
  {""n"":""日本"",""v"":""9""},
  {""n"":""法国"",""v"":""7""},
  {""n"":""英国"",""v"":""6""},
  {""n"":""台湾"",""v"":""4""},
  {""n"":""泰国"",""v"":""11""},
  {""n"":""印度"",""v"":""10""},
  {""n"":""其他"",""v"":""12""}]},
  
  {""key"":""year"",""name"":""年份"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""2023"",""v"":""25""},
  {""n"":""2022"",""v"":""26""},
  {""n"":""2021"",""v"":""27""},
  {""n"":""2020"",""v"":""28""},
  {""n"":""2019"",""v"":""29""},
  {""n"":""2018"",""v"":""30""},
  {""n"":""2017"",""v"":""31""}]}],
  
""4"":[
  {""key"":""class"",""name"":""类型"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""内地"",""v"":""34""},
  {""n"":""港台"",""v"":""36""},
  {""n"":""日韩"",""v"":""35""},
  {""n"":""欧美"",""v"":""37""}]},

  {""key"":""year"",""name"":""年份"",""value"":[
  {""n"":""全部"",""v"":""""},
  {""n"":""2023"",""v"":""25""},
  {""n"":""2022"",""v"":""26""},
  {""n"":""2021"",""v"":""27""},
  {""n"":""2020"",""v"":""28""},
  {""n"":""2019"",""v"":""29""},
  {""n"":""2018"",""v"":""30""},
  {""n"":""2017"",""v"":""31""}]}]}
}
"
MyXnpUb9,Qcecidy,Damonwei,JSON,Friday 10th of May 2024 08:17:43 PM CDT,"{
	""作者"": ""Dwei-0129"",
	""站名"": ""策驰"",
	""主页url"": ""https://www.cecidy.cc/"",
    ""分类"": ""国产剧$13#港台剧$14#日韩剧$15#欧美剧$16#电影$1#电视剧$2#综艺$3#动漫$4#"",
    ""分类url"": ""https://www.cecidy.cc/vodshow/{cateId}-{area}-{by}---{letter}---{catePg}---{year}/"",
	""数组"": ""myui-vodlist__box&&</div>"",
	""副标题"": ""pic-text text-right\"">&&</span>"",
	""标题"": ""title=\""&&\"""",
	""链接"": ""href=\""&&\"""",
	""搜索模式"": ""1"",
	""搜索url"": ""https://www.cecidy.cc/vodsearch/-------------/?wd={wd}&submit="",
	""搜索数组"": ""myui-vodlist__thumb>&&</a>"",
	""搜索副标题"": ""pic-text text-right\"">&&</span>"",
	""年代"": ""年份：&&</a>"",
	""地区"": ""地区：&&</a>"",
	""类型"": ""类型：&&</a>"",
	""导演"": ""导演：&&</p>"",
	""主演"": ""主演：&&</p>"",
	""简介"": ""Dwei观影提示，若线路存在广告请勿相信！！！++description\"" content=\""&& />"",
	""嗅探词"":"".m3u8#.mp4#.flv#.m4a#.avi#.mkv#.mov#.3gp#.asf#.rm#.rmvb#.wmv#.mpg#.mpeg#.mpe#.ts#.vob#.mp3#.wma"",
	""线路数组"": ""#playlist&&</li>[不包含:无尽资源#八戒资源#淘片资源]"",
	""线路标题"": "">&&</a>[替换:策驰>>DweiTV]"",
	""播放数组"": """",
	""播放列表"": """",
	""播放标题"":"""",
	""播放链接"": ""href=\""&&\"""",
	""筛选"": {
		""1"": [
			{""key"": ""cateId"",""name"": ""类型"",""value"": 
			  [
				 {""n"": ""全部"",""v"": ""1""},{""n"": ""动作片"",""v"": ""6""},{""n"": ""喜剧片"",""v"": ""7""},{""n"": ""爱情片"",""v"": ""8""},
				 {""n"": ""科幻片"",""v"": ""9""},{""n"":""恐怖片"",""v"":""10""},{""n"":""剧情片"",""v"":""11""},{""n"":""战争片"",""v"": ""12""},
				 {""n"":""犯罪片"",""v"": ""20""},{""n"": ""奇幻片"",""v"": ""21""},{""n"":""悬疑片"",""v"":""22""},{""n"":""犯罪片"",""v"":""23""},
				 {""n"": ""惊悚片"",""v"": ""24""},{""n"": ""记录片"",""v"": ""25""},{""n"": ""动画片"",""v"": ""54""}
			  ]
			},
			{""key"": ""area"",""name"": ""地区"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""大陆"",""v"": ""大陆""},{""n"": ""香港"",""v"": ""香港""},{""n"": ""台湾"",""v"": ""台湾""},
				 {""n"": ""美国"",""v"": ""美国""},{""n"": ""法国"",""v"": ""法国""},{""n"": ""英国"",""v"": ""英国""},{""n"": ""日本"",""v"": ""日本""},
				 {""n"": ""韩国"",""v"": ""韩国""},{""n"": ""德国"",""v"": ""德国""},{""n"": ""泰国"",""v"": ""泰国""},{""n"": ""印度"",""v"": ""印度""},
			     {""n"": ""意大利"",""v"": ""意大利""},{""n"": ""西班牙"",""v"": ""西班牙""},{""n"": ""加拿大"",""v"": ""加拿大""},
				 {""n"":""其他"",""v"": ""其他""}
			  ]
			},
			{""key"": ""year"",""name"": ""年份"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""2023"",""v"": ""2023""},{""n"": ""2022"",""v"": ""2022""},{""n"": ""2021"",""v"": ""2021""},
				 {""n"": ""2020"",""v"": ""2020""},{""n"": ""2019"",""v"": ""2019""},{""n"": ""2018"",""v"": ""2018""},{""n"": ""2017"",""v"": ""2017""},
				 {""n"": ""2016"",""v"": ""2016""},{""n"": ""2015"",""v"": ""2015""},{""n"": ""2014"",""v"": ""2014""},{""n"": ""2013"",""v"": ""2013""},
				 {""n"": ""2012"",""v"": ""2012""},{""n"": ""2011"",""v"": ""2011""},{""n"": ""2010"",""v"": ""2010""}
			  ]
			},
			{""key"":""letter"",""name"":""字母"",""value"":
			    [
				{""n"":""全部"",""v"":""""},{""n"":""A"",""v"":""A""},{""n"":""B"",""v"":""B""},{""n"":""C"",""v"":""C""},{""n"":""D"",""v"":""D""},{""n"":""E"",""v"":""E""},
				{""n"":""F"",""v"":""F""},{""n"":""G"",""v"":""G""},{""n"":""H"",""v"":""H""},{""n"":""I"",""v"":""I""},{""n"":""J"",""v"":""J""},{""n"":""K"",""v"":""K""},
				{""n"":""L"",""v"":""L""},{""n"":""M"",""v"":""M""},{""n"":""N"",""v"":""N""},{""n"":""O"",""v"":""O""},{""n"":""P"",""v"":""P""},{""n"":""Q"",""v"":""Q""},
				{""n"":""R"",""v"":""R""},{""n"":""S"",""v"":""S""},{""n"":""T"",""v"":""T""},{""n"":""U"",""v"":""U""},{""n"":""V"",""v"":""V""},{""n"":""W"",""v"":""W""},
				{""n"":""X"",""v"":""X""},{""n"":""Y"",""v"":""Y""},{""n"":""Z"",""v"":""Z""}
				]
			},
			{""key"": ""by"",""name"": ""排序"",""value"": 
			   [{""n"": ""时间"",""v"": ""time""},{""n"": ""人气"",""v"": ""hits""},{""n"": ""评分"",""v"": ""score""}]
			}
		],
		""2"": [
			{""key"": ""cateId"",""name"": ""类型"",""value"": 
			  [
				 {""n"": ""全部"",""v"": ""2""},{""n"": ""国产剧"",""v"": ""13""},{""n"": ""港台剧"",""v"": ""14""},{""n"": ""日韩剧"",""v"": ""15""},
				 {""n"": ""欧美剧"",""v"": ""16""},{""n"": ""海外剧"",""v"": ""20""}
			  ]
			},
			{""key"": ""area"",""name"": ""地区"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""大陆"",""v"": ""内地""},{""n"": ""韩国"",""v"": ""韩国""},{""n"": ""香港"",""v"": ""香港""},
				 {""n"": ""台湾"",""v"": ""台湾""},{""n"": ""日本"",""v"": ""日本""},{""n"": ""美国"",""v"": ""美国""},{""n"": ""泰国"",""v"": ""泰国""},
				 {""n"": ""英国"",""v"": ""英国""},{""n"":""新加坡"",""v"":""新加坡""},{""n"":""其他"",""v"":""其他""}
			  ]
			},
			{""key"": ""year"",""name"": ""年份"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""2023"",""v"": ""2023""},{""n"": ""2022"",""v"": ""2022""},{""n"": ""2021"",""v"": ""2021""},
				 {""n"": ""2020"",""v"": ""2020""},{""n"": ""2019"",""v"": ""2019""},{""n"": ""2018"",""v"": ""2018""},{""n"": ""2017"",""v"": ""2017""},
				 {""n"": ""2016"",""v"": ""2016""},{""n"": ""2015"",""v"": ""2015""},{""n"": ""2014"",""v"": ""2014""},{""n"": ""2013"",""v"": ""2013""},
				 {""n"": ""2012"",""v"": ""2012""},{""n"": ""2011"",""v"": ""2011""},{""n"": ""2010"",""v"": ""2010""}
			  ]
			},
			{""key"":""letter"",""name"":""字母"",""value"":
			    [
				{""n"":""全部"",""v"":""""},{""n"":""A"",""v"":""A""},{""n"":""B"",""v"":""B""},{""n"":""C"",""v"":""C""},{""n"":""D"",""v"":""D""},{""n"":""E"",""v"":""E""},
				{""n"":""F"",""v"":""F""},{""n"":""G"",""v"":""G""},{""n"":""H"",""v"":""H""},{""n"":""I"",""v"":""I""},{""n"":""J"",""v"":""J""},{""n"":""K"",""v"":""K""},
				{""n"":""L"",""v"":""L""},{""n"":""M"",""v"":""M""},{""n"":""N"",""v"":""N""},{""n"":""O"",""v"":""O""},{""n"":""P"",""v"":""P""},{""n"":""Q"",""v"":""Q""},
				{""n"":""R"",""v"":""R""},{""n"":""S"",""v"":""S""},{""n"":""T"",""v"":""T""},{""n"":""U"",""v"":""U""},{""n"":""V"",""v"":""V""},{""n"":""W"",""v"":""W""},
				{""n"":""X"",""v"":""X""},{""n"":""Y"",""v"":""Y""},{""n"":""Z"",""v"":""Z""}
				]
			},
			{""key"": ""by"",""name"": ""排序"",""value"": 
			   [{""n"": ""时间"",""v"": ""time""},{""n"": ""人气"",""v"": ""hits""},{""n"": ""评分"",""v"": ""score""}]
			}
		],
		""3"": [
			{""key"": ""area"",""name"": ""地区"",""value"": 
			  [
			    {""n"":""全部"",""v"":""""},{""n"":""内地"",""v"":""内地""},{""n"":""港台"",""v"":""港台""},{""n"":""日韩"",""v"":""日韩""},
			    {""n"":""欧美"",""v"":""欧美""}
			  ]
			},
			{""key"": ""year"",""name"": ""年份"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""2023"",""v"": ""2023""},{""n"": ""2022"",""v"": ""2022""},{""n"": ""2021"",""v"": ""2021""},
				 {""n"": ""2020"",""v"": ""2020""},{""n"": ""2019"",""v"": ""2019""},{""n"": ""2018"",""v"": ""2018""},{""n"": ""2017"",""v"": ""2017""},
				 {""n"": ""2016"",""v"": ""2016""},{""n"": ""2015"",""v"": ""2015""},{""n"": ""2014"",""v"": ""2014""},{""n"": ""2013"",""v"": ""2013""},
				 {""n"": ""2012"",""v"": ""2012""},{""n"": ""2011"",""v"": ""2011""},{""n"": ""2010"",""v"": ""2010""}
			  ]
			},
			{""key"":""letter"",""name"":""字母"",""value"":
			    [
				{""n"":""全部"",""v"":""""},{""n"":""A"",""v"":""A""},{""n"":""B"",""v"":""B""},{""n"":""C"",""v"":""C""},{""n"":""D"",""v"":""D""},{""n"":""E"",""v"":""E""},
				{""n"":""F"",""v"":""F""},{""n"":""G"",""v"":""G""},{""n"":""H"",""v"":""H""},{""n"":""I"",""v"":""I""},{""n"":""J"",""v"":""J""},{""n"":""K"",""v"":""K""},
				{""n"":""L"",""v"":""L""},{""n"":""M"",""v"":""M""},{""n"":""N"",""v"":""N""},{""n"":""O"",""v"":""O""},{""n"":""P"",""v"":""P""},{""n"":""Q"",""v"":""Q""},
				{""n"":""R"",""v"":""R""},{""n"":""S"",""v"":""S""},{""n"":""T"",""v"":""T""},{""n"":""U"",""v"":""U""},{""n"":""V"",""v"":""V""},{""n"":""W"",""v"":""W""},
				{""n"":""X"",""v"":""X""},{""n"":""Y"",""v"":""Y""},{""n"":""Z"",""v"":""Z""}
				]
			},
			{""key"": ""by"",""name"": ""排序"",""value"": 
			   [{""n"": ""时间"",""v"": ""time""},{""n"": ""人气"",""v"": ""hits""},{""n"": ""评分"",""v"": ""score""}]
			}
		],
		""4"": [
			{""key"": ""area"",""name"": ""地区"",""value"": 
			  [
				{""n"": ""全部"",""v"": """"},{""n"": ""内地"",""v"": ""内地""},{""n"": ""韩国"",""v"": ""韩国""},{""n"": ""香港"",""v"": ""香港""},
				{""n"": ""台湾"",""v"": ""台湾""},{""n"": ""日本"",""v"": ""日本""},{""n"": ""美国"",""v"": ""美国""},{""n"": ""泰国"",""v"": ""泰国""},
				{""n"": ""英国"",""v"": ""英国""},{""n"": ""新加坡"",""v"": ""新加坡""},{""n"": ""其他"",""v"": ""其他""}
			  ]
			},
			{""key"": ""year"",""name"": ""年份"",""value"": 
			  [
				 {""n"": ""全部"",""v"": """"},{""n"": ""2023"",""v"": ""2023""},{""n"": ""2022"",""v"": ""2022""},{""n"": ""2021"",""v"": ""2021""},
				 {""n"": ""2020"",""v"": ""2020""},{""n"": ""2019"",""v"": ""2019""},{""n"": ""2018"",""v"": ""2018""},{""n"": ""2017"",""v"": ""2017""},
				 {""n"": ""2016"",""v"": ""2016""},{""n"": ""2015"",""v"": ""2015""},{""n"": ""2014"",""v"": ""2014""},{""n"": ""2013"",""v"": ""2013""},
				 {""n"": ""2012"",""v"": ""2012""},{""n"": ""2011"",""v"": ""2011""},{""n"": ""2010"",""v"": ""2010""}
			  ]
			},
			{""key"":""letter"",""name"":""字母"",""value"":
			    [
				{""n"":""全部"",""v"":""""},{""n"":""A"",""v"":""A""},{""n"":""B"",""v"":""B""},{""n"":""C"",""v"":""C""},{""n"":""D"",""v"":""D""},{""n"":""E"",""v"":""E""},
				{""n"":""F"",""v"":""F""},{""n"":""G"",""v"":""G""},{""n"":""H"",""v"":""H""},{""n"":""I"",""v"":""I""},{""n"":""J"",""v"":""J""},{""n"":""K"",""v"":""K""},
				{""n"":""L"",""v"":""L""},{""n"":""M"",""v"":""M""},{""n"":""N"",""v"":""N""},{""n"":""O"",""v"":""O""},{""n"":""P"",""v"":""P""},{""n"":""Q"",""v"":""Q""},
				{""n"":""R"",""v"":""R""},{""n"":""S"",""v"":""S""},{""n"":""T"",""v"":""T""},{""n"":""U"",""v"":""U""},{""n"":""V"",""v"":""V""},{""n"":""W"",""v"":""W""},
				{""n"":""X"",""v"":""X""},{""n"":""Y"",""v"":""Y""},{""n"":""Z"",""v"":""Z""}
				]
			},
			{""key"": ""by"",""name"": ""排序"",""value"": 
			   [{""n"": ""时间"",""v"": ""time""},{""n"": ""人气"",""v"": ""hits""},{""n"": ""评分"",""v"": ""score""}]
			}
		]
		
	}
}"
R4B7VNUr,Led_Potenciometro_POO,Abelsor,C++,Friday 10th of May 2024 08:02:46 PM CDT,"/////////////////////////// Class Potenciometro  ////////////////////////

class Potenciometro{
    public:
        Potenciometro();
        Potenciometro(byte);
        virtual ~Potenciometro();

        // Metodos
        float escalar();
        float getLectura();
        
    private:
        byte pin;
        float lectura;
};

Potenciometro::Potenciometro(){
  
}

Potenciometro::Potenciometro(byte _pin){
    pin = _pin;
}

Potenciometro::~Potenciometro(){
  
}

float Potenciometro::getLectura(){
    return analogRead(pin);
}

float Potenciometro::escalar()
{
    return map(Potenciometro::getLectura(),0,1023,0,255);
}


/////////////////////////// Class Led  ////////////////////////
class Led{
    public:
        Led();
        Led(byte);
        virtual ~Led();

        // Metodos
        void setIntensidad(float);

    private:
        byte pin;
        float intensidad;
};

Led::Led(){
  
}

Led::Led(byte _pin){
  pin = _pin;
  pinMode(_pin, OUTPUT);
}

Led::~Led(){
  
}

void Led::setIntensidad(float _intensidad){
  intensidad = _intensidad;
  analogWrite(pin,_intensidad);
}


///////////////////////////////////////////////////////////////
Led led(6);
Potenciometro p1(A0);

void setup()
{
    Serial.begin(9600);
}

void loop()
{
    led.setIntensidad(p1.getLectura());    
}
"
p9xscX9M,2024-05-10_stats.json,rdp_snitch,JSON,Friday 10th of May 2024 07:18:23 PM CDT,"{
  ""ip"": {
    ""164.92.119.186"": 2253,
    ""64.124.50.139"": 6,
    ""176.113.115.151"": 6,
    ""179.60.147.124"": 3,
    ""45.227.254.23"": 3,
    ""185.242.226.23"": 3,
    ""205.210.31.223"": 9,
    ""87.251.75.145"": 9,
    ""159.223.34.114"": 9,
    ""194.165.16.10"": 6,
    ""194.165.16.11"": 6,
    ""4.233.222.227"": 3,
    ""103.47.194.167"": 3,
    ""185.170.144.3"": 6,
    ""45.227.254.8"": 12,
    ""84.201.2.2"": 6,
    ""165.154.129.130"": 3,
    ""205.210.31.228"": 9,
    ""194.165.16.73"": 3,
    ""152.42.184.74"": 6,
    ""185.161.248.121"": 18,
    ""58.218.204.183"": 9,
    ""80.66.66.250"": 6,
    ""123.56.20.194"": 18,
    ""205.210.31.220"": 9,
    ""172.105.123.28"": 36,
    ""87.251.75.64"": 3,
    ""45.227.254.9"": 9,
    ""185.122.204.179"": 6,
    ""162.142.125.222"": 3,
    ""194.165.16.37"": 6,
    ""187.190.60.112"": 3,
    ""198.235.24.215"": 9,
    ""194.165.16.72"": 6
  },
  ""asn"": {
    ""AS14061"": 2268,
    ""AS6461"": 6,
    ""AS57678"": 6,
    ""AS209588"": 3,
    ""AS267784"": 24,
    ""AS202425"": 3,
    ""AS396982"": 36,
    ""AS208091"": 12,
    ""AS48721"": 27,
    ""AS8075"": 3,
    ""AS140832"": 3,
    ""AS197414"": 6,
    ""AS44066"": 6,
    ""AS135377"": 3,
    ""AS49202"": 18,
    ""AS4134"": 9,
    ""AS51765"": 6,
    ""AS37963"": 18,
    ""AS63949"": 36,
    ""AS57523"": 6,
    ""AS398324"": 3,
    ""AS22884"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 2268,
    ""Zayo Bandwidth"": 6,
    ""Cat Technologies Co. Limited"": 6,
    ""Flyservers S.A."": 54,
    ""IP Volume inc"": 3,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 18,
    ""Microsoft Corporation"": 3,
    ""FTECH"": 3,
    ""www.accelerated.de"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Kisara LLC"": 18,
    ""Chinanet"": 9,
    ""Oy Crea Nova Hosting Solution Ltd"": 6,
    ""Hangzhou Alibaba Advertising Co"": 18,
    ""Akamai Technologies"": 36,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Censys, Inc."": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 2262,
    ""Microsoft Corporation"": 6,
    ""Cat Technologies Co. Limited"": 6,
    ""Cloud Solutions S.A"": 3,
    ""UAB Host Baltic"": 24,
    ""AI Spera"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 18,
    ""Flyservers S.A"": 27,
    ""Microsoft Azure Cloud (francecentral)"": 3,
    ""Unknown"": 3,
    ""Xhostis"": 6,
    ""diva-e Datacenters GmbH"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Digital Ocean"": 6,
    ""Kisara LLC"": 18,
    ""Chinanet JS"": 9,
    ""Aliyun Computing Co., LTD"": 18,
    ""Linode"": 36,
    ""Starcrecium Limited"": 6,
    ""Censys Inc"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""regionName"": {
    ""California"": 2289,
    ""Virginia"": 6,
    ""Moscow"": 30,
    ""Distrito Federal"": 3,
    ""Vilnius"": 24,
    ""North Holland"": 21,
    ""Central Singapore"": 45,
    ""Kaunas"": 27,
    ""\u00cele-de-France"": 3,
    ""Hanoi"": 3,
    ""Hesse"": 6,
    ""England"": 3,
    ""South West"": 6,
    ""Jiangsu"": 9,
    ""Uusimaa"": 6,
    ""Beijing"": 18,
    ""Michigan"": 3,
    ""Hidalgo"": 3
  },
  ""country"": {
    ""United States"": 2298,
    ""Russia"": 30,
    ""Venezuela"": 3,
    ""Lithuania"": 51,
    ""The Netherlands"": 21,
    ""Singapore"": 51,
    ""France"": 3,
    ""Vietnam"": 3,
    ""Germany"": 6,
    ""United Kingdom"": 3,
    ""China"": 27,
    ""Finland"": 6,
    ""Mexico"": 3
  },
  ""account"": {
    ""hello"": 2337,
    ""Test"": 60,
    ""Administr"": 39,
    ""nmap"": 3,
    ""AqMoRMfnZ"": 3,
    ""lZiFFs"": 3,
    ""dPdMuL"": 3,
    ""Administrator"": 3,
    ""PTprllUWc"": 3,
    ""KRQqse"": 3,
    ""wbzqlB"": 3,
    ""Domain"": 21,
    ""PYSZyZWxK"": 3,
    ""dgQzae"": 3,
    ""ErAtvd"": 3,
    ""(empty)"": 3,
    ""ynIQOpM"": 3,
    ""DHqRvYEmL"": 3,
    ""iGpvCj"": 3,
    ""WsavwF"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2505
  },
  ""client_build"": {
    ""Unknown"": 2505
  },
  ""client_name"": {
    ""Unknown"": 2505
  },
  ""ip_type"": {
    ""hosting"": 2376,
    ""Unknown"": 114,
    ""proxy"": 15
  }
}"
8S7Syh92,2024-05-10_stats.json,rdp_snitch,JSON,Friday 10th of May 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""164.92.119.186"": 1502,
    ""64.124.50.139"": 4,
    ""176.113.115.151"": 4,
    ""179.60.147.124"": 2,
    ""45.227.254.23"": 2,
    ""185.242.226.23"": 2,
    ""205.210.31.223"": 6,
    ""87.251.75.145"": 6,
    ""159.223.34.114"": 6,
    ""194.165.16.10"": 4,
    ""194.165.16.11"": 4,
    ""4.233.222.227"": 2,
    ""103.47.194.167"": 2,
    ""185.170.144.3"": 4,
    ""45.227.254.8"": 8,
    ""84.201.2.2"": 4,
    ""165.154.129.130"": 2,
    ""205.210.31.228"": 6,
    ""194.165.16.73"": 2,
    ""152.42.184.74"": 4,
    ""185.161.248.121"": 12,
    ""58.218.204.183"": 6,
    ""80.66.66.250"": 4,
    ""123.56.20.194"": 12,
    ""205.210.31.220"": 6,
    ""172.105.123.28"": 24,
    ""87.251.75.64"": 2,
    ""45.227.254.9"": 6,
    ""185.122.204.179"": 4,
    ""162.142.125.222"": 2,
    ""194.165.16.37"": 4,
    ""187.190.60.112"": 2,
    ""198.235.24.215"": 6,
    ""194.165.16.72"": 4
  },
  ""asn"": {
    ""AS14061"": 1512,
    ""AS6461"": 4,
    ""AS57678"": 4,
    ""AS209588"": 2,
    ""AS267784"": 16,
    ""AS202425"": 2,
    ""AS396982"": 24,
    ""AS208091"": 8,
    ""AS48721"": 18,
    ""AS8075"": 2,
    ""AS140832"": 2,
    ""AS197414"": 4,
    ""AS44066"": 4,
    ""AS135377"": 2,
    ""AS49202"": 12,
    ""AS4134"": 6,
    ""AS51765"": 4,
    ""AS37963"": 12,
    ""AS63949"": 24,
    ""AS57523"": 4,
    ""AS398324"": 2,
    ""AS22884"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 1512,
    ""Zayo Bandwidth"": 4,
    ""Cat Technologies Co. Limited"": 4,
    ""Flyservers S.A."": 36,
    ""IP Volume inc"": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 12,
    ""Microsoft Corporation"": 2,
    ""FTECH"": 2,
    ""www.accelerated.de"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Kisara LLC"": 12,
    ""Chinanet"": 6,
    ""Oy Crea Nova Hosting Solution Ltd"": 4,
    ""Hangzhou Alibaba Advertising Co"": 12,
    ""Akamai Technologies"": 24,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Censys, Inc."": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 1508,
    ""Microsoft Corporation"": 4,
    ""Cat Technologies Co. Limited"": 4,
    ""Cloud Solutions S.A"": 2,
    ""UAB Host Baltic"": 16,
    ""AI Spera"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 12,
    ""Flyservers S.A"": 18,
    ""Microsoft Azure Cloud (francecentral)"": 2,
    ""Unknown"": 2,
    ""Xhostis"": 4,
    ""diva-e Datacenters GmbH"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Digital Ocean"": 4,
    ""Kisara LLC"": 12,
    ""Chinanet JS"": 6,
    ""Aliyun Computing Co., LTD"": 12,
    ""Linode"": 24,
    ""Starcrecium Limited"": 4,
    ""Censys Inc"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""regionName"": {
    ""California"": 1526,
    ""Virginia"": 4,
    ""Moscow"": 20,
    ""Distrito Federal"": 2,
    ""Vilnius"": 16,
    ""North Holland"": 14,
    ""Central Singapore"": 30,
    ""Kaunas"": 18,
    ""\u00cele-de-France"": 2,
    ""Hanoi"": 2,
    ""Hesse"": 4,
    ""England"": 2,
    ""South West"": 4,
    ""Jiangsu"": 6,
    ""Uusimaa"": 4,
    ""Beijing"": 12,
    ""Michigan"": 2,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""United States"": 1532,
    ""Russia"": 20,
    ""Venezuela"": 2,
    ""Lithuania"": 34,
    ""The Netherlands"": 14,
    ""Singapore"": 34,
    ""France"": 2,
    ""Vietnam"": 2,
    ""Germany"": 4,
    ""United Kingdom"": 2,
    ""China"": 18,
    ""Finland"": 4,
    ""Mexico"": 2
  },
  ""account"": {
    ""hello"": 1558,
    ""Test"": 40,
    ""Administr"": 26,
    ""nmap"": 2,
    ""AqMoRMfnZ"": 2,
    ""lZiFFs"": 2,
    ""dPdMuL"": 2,
    ""Administrator"": 2,
    ""PTprllUWc"": 2,
    ""KRQqse"": 2,
    ""wbzqlB"": 2,
    ""Domain"": 14,
    ""PYSZyZWxK"": 2,
    ""dgQzae"": 2,
    ""ErAtvd"": 2,
    ""(empty)"": 2,
    ""ynIQOpM"": 2,
    ""DHqRvYEmL"": 2,
    ""iGpvCj"": 2,
    ""WsavwF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1670
  },
  ""client_build"": {
    ""Unknown"": 1670
  },
  ""client_name"": {
    ""Unknown"": 1670
  },
  ""ip_type"": {
    ""hosting"": 1584,
    ""Unknown"": 76,
    ""proxy"": 10
  }
}"
NqRD9eyW,2024-05-10_stats.json,rdp_snitch,JSON,Friday 10th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""164.92.119.186"": 751,
    ""64.124.50.139"": 2,
    ""176.113.115.151"": 2,
    ""179.60.147.124"": 1,
    ""45.227.254.23"": 1,
    ""185.242.226.23"": 1,
    ""205.210.31.223"": 3,
    ""87.251.75.145"": 3,
    ""159.223.34.114"": 3,
    ""194.165.16.10"": 2,
    ""194.165.16.11"": 2,
    ""4.233.222.227"": 1,
    ""103.47.194.167"": 1,
    ""185.170.144.3"": 2,
    ""45.227.254.8"": 4,
    ""84.201.2.2"": 2,
    ""165.154.129.130"": 1,
    ""205.210.31.228"": 3,
    ""194.165.16.73"": 1,
    ""152.42.184.74"": 2,
    ""185.161.248.121"": 6,
    ""58.218.204.183"": 3,
    ""80.66.66.250"": 2,
    ""123.56.20.194"": 6,
    ""205.210.31.220"": 3,
    ""172.105.123.28"": 12,
    ""87.251.75.64"": 1,
    ""45.227.254.9"": 3,
    ""185.122.204.179"": 2,
    ""162.142.125.222"": 1,
    ""194.165.16.37"": 2,
    ""187.190.60.112"": 1,
    ""198.235.24.215"": 3,
    ""194.165.16.72"": 2
  },
  ""asn"": {
    ""AS14061"": 756,
    ""AS6461"": 2,
    ""AS57678"": 2,
    ""AS209588"": 1,
    ""AS267784"": 8,
    ""AS202425"": 1,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS48721"": 9,
    ""AS8075"": 1,
    ""AS140832"": 1,
    ""AS197414"": 2,
    ""AS44066"": 2,
    ""AS135377"": 1,
    ""AS49202"": 6,
    ""AS4134"": 3,
    ""AS51765"": 2,
    ""AS37963"": 6,
    ""AS63949"": 12,
    ""AS57523"": 2,
    ""AS398324"": 1,
    ""AS22884"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 756,
    ""Zayo Bandwidth"": 2,
    ""Cat Technologies Co. Limited"": 2,
    ""Flyservers S.A."": 18,
    ""IP Volume inc"": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 6,
    ""Microsoft Corporation"": 1,
    ""FTECH"": 1,
    ""www.accelerated.de"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Kisara LLC"": 6,
    ""Chinanet"": 3,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Akamai Technologies"": 12,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Censys, Inc."": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 754,
    ""Microsoft Corporation"": 2,
    ""Cat Technologies Co. Limited"": 2,
    ""Cloud Solutions S.A"": 1,
    ""UAB Host Baltic"": 8,
    ""AI Spera"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 6,
    ""Flyservers S.A"": 9,
    ""Microsoft Azure Cloud (francecentral)"": 1,
    ""Unknown"": 1,
    ""Xhostis"": 2,
    ""diva-e Datacenters GmbH"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Digital Ocean"": 2,
    ""Kisara LLC"": 6,
    ""Chinanet JS"": 3,
    ""Aliyun Computing Co., LTD"": 6,
    ""Linode"": 12,
    ""Starcrecium Limited"": 2,
    ""Censys Inc"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""regionName"": {
    ""California"": 763,
    ""Virginia"": 2,
    ""Moscow"": 10,
    ""Distrito Federal"": 1,
    ""Vilnius"": 8,
    ""North Holland"": 7,
    ""Central Singapore"": 15,
    ""Kaunas"": 9,
    ""\u00cele-de-France"": 1,
    ""Hanoi"": 1,
    ""Hesse"": 2,
    ""England"": 1,
    ""South West"": 2,
    ""Jiangsu"": 3,
    ""Uusimaa"": 2,
    ""Beijing"": 6,
    ""Michigan"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""United States"": 766,
    ""Russia"": 10,
    ""Venezuela"": 1,
    ""Lithuania"": 17,
    ""The Netherlands"": 7,
    ""Singapore"": 17,
    ""France"": 1,
    ""Vietnam"": 1,
    ""Germany"": 2,
    ""United Kingdom"": 1,
    ""China"": 9,
    ""Finland"": 2,
    ""Mexico"": 1
  },
  ""account"": {
    ""hello"": 779,
    ""Test"": 20,
    ""Administr"": 13,
    ""nmap"": 1,
    ""AqMoRMfnZ"": 1,
    ""lZiFFs"": 1,
    ""dPdMuL"": 1,
    ""Administrator"": 1,
    ""PTprllUWc"": 1,
    ""KRQqse"": 1,
    ""wbzqlB"": 1,
    ""Domain"": 7,
    ""PYSZyZWxK"": 1,
    ""dgQzae"": 1,
    ""ErAtvd"": 1,
    ""(empty)"": 1,
    ""ynIQOpM"": 1,
    ""DHqRvYEmL"": 1,
    ""iGpvCj"": 1,
    ""WsavwF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 835
  },
  ""client_build"": {
    ""Unknown"": 835
  },
  ""client_name"": {
    ""Unknown"": 835
  },
  ""ip_type"": {
    ""hosting"": 792,
    ""Unknown"": 38,
    ""proxy"": 5
  }
}"
9Hk4QypX,Untitled,Lizalovv,JSON,Friday 10th of May 2024 06:36:50 PM CDT,"{'ver1':'1', 'ver2':'3'}"
tvMxa15G,Database opencomputer,blauerdrache87,Lua,Friday 10th of May 2024 06:35:15 PM CDT,"--The startup which checks for updates and whether it's using OpenOS or MineOS
local status, compat = pcall(require,""Compat"")
if not status then --auto assume system is OpenOS because MineOS should autoinstall it
    print(""Installing Compatability layer"")
    os.execute(""wget -f https://raw.githubusercontent.com/cadergator10/Opencomputers-serpentine/main/database/Compat.lua Compat.lua"")
    compat = require(""Compat"")
end
local mainPage = ""https://cadespc.com/servertine/modules/""
local download = mainPage .. ""getservertine"" --URL used by boot for servertine stuff
local aRD = compat.isMine and compat.fs.path(compat.system.getCurrentScript()) or """" --path of program
local config = compat.loadTable(aRD .. ""bootconfig.txt"") --boot configuration
local term = not compat.isMine and require(""term"") or nil --nil if MineOS, is term API if OpenOS
--openOSReq are library files for GUI and GUI API + JSON
local openOSReq = {[""JSON.lua""]=""https://github.com/IgorTimofeev/MineOS/raw/master/Libraries/JSON.lua"",[""GUI.lua""]=""https://raw.githubusercontent.com/cadergator10/Opencomputers-serpentine/main/database/GUI.lua"",[""advancedLua.lua""]=""https://github.com/IgorTimofeev/AdvancedLua/raw/master/AdvancedLua.lua"",[""color.lua""]=""https://github.com/IgorTimofeev/Color/raw/master/Color.lua"",[""doubleBuffering.lua""]=""https://github.com/IgorTimofeev/DoubleBuffering/raw/master/DoubleBuffering.lua"",[""image.lua""]=""https://github.com/IgorTimofeev/Image/raw/master/Image.lua"",[""OCIF.lua""]=""https://github.com/IgorTimofeev/Image/raw/master/OCIF.lua""}

if not compat.isMine then --Should, if OpenOS, install all dependencies.
    local status, _ = pcall(require,""GUI"") --Check if GUI API exists. Otherwise, download it.
    if not status then
        for key,value in pairs(openOSReq) do
            print(""Installing "" .. key)
            compat.internet.download(value,""/lib/"" .. key)
            --os.execute(""wget -f "" .. value .. "" /lib/"" .. key) --(getting rid of wget execute in favor of actual compat downloader)
        end
        os.execute(""mkdir /lib/FormatModules"")
        print(""Installing OCIF in FormatModules folder"") --OCIF must be in this folder for Image library to work.
        compat.internet.download(""https://github.com/IgorTimofeev/Image/raw/master/OCIF.lua"",""/lib/FormatModules/OCIF.lua"")
    end
end

local GUI = require(""GUI"")
local JSON = require(""JSON"")

--libs that get filled in future
local errHan

local didError = false --If error handler detects error, then clearScreen() doesn't clear the screen

local arg = ...
if arg ~= nil then --If someone inputs args, it prints it out.
    print(arg)
end

local function split(s, delimiter) --splits string (""hello,world,yeah"") into table {""hello"",""world"",""yeah""}
    local result = {}
    for match in (s..delimiter):gmatch(""(.-)""..delimiter) do
      table.insert(result, match)
    end
    return result
  end

local function installer(version, bootver) --asks user input and stuff, plus installs all files from my website
    local install = false
    local saveBoot = true
    local isConfig = config == nil
    if config == nil then --create boot config.
        config = {[""version""] = -1,[""bootver""] = -1,[""checkVersion""]=true,[""lang""]=""English"",[""shutdownonexit""]=true,[""startupParams""]={},[""anonymousReport""]=true}--startupParams are one-time keys to do stuff, usually done by the database itself.
        saveBoot = true
        install = true
        GUI.alert(""By default, anonymous reporting is enabled. If enabled it will automatically send any crashes or errors caused by the system or a module to the developer/owner. You can change this in bootconfig.txt file"")
    elseif config.bootver == nil then
        config.bootver = -1
        saveBoot = true
        install = true
    end
    local style = {bottomButton = 0xFFFFFF, bottomText = 0x555555, bottomSelectButton = 0x880000, bottomSelectText = 0xFFFFFF}
    if compat.isMine then --is MineOS
        --TODO: Debug if OpenOS version works, then create MineOS one
        --compat.system.addWindow(0xE1E1E1)
        if isConfig then
            GUI.alert(""New system: Installing servertine"") --Force install of system. Doesn't ask whether to install
        elseif config.bootver == -1 then
            GUI.alert(""Boot files prepping install"")
        else
            install = -2 --makes sure it waits until user inputs something
            local workspace = GUI.workspace()
            local container = GUI.addBackgroundContainer(workspace, true, true, ""New version available:"" )
            if version ~= config.version then container.layout:addChild(GUI.label(80,5,16,1, style.bottomText, ""Servertine: "" .. tostring(config.version) .. "" -> "" .. tostring(version))) end
            if bootver ~= config.bootver then container.layout:addChild(GUI.label(80,5,16,1, style.bottomText, ""Boot Version: "" .. tostring(config.bootver) .. "" -> "" .. tostring(bootver))) end
            container.layout:addChild(GUI.button(80,5,16,1,style.bottomButton, style.bottomText, style.bottomSelectButton, style.bottomSelectText, ""Install"")).onTouch = function()
                install = true --Install all stuff
                container:remove()
                workspace:draw(true)
                workspace:stop()
            end
            container.layout:addChild(GUI.button(80,5,16,1,style.bottomButton, style.bottomText, style.bottomSelectButton, style.bottomSelectText, ""Don't Install"")).onTouch = function()
                install = false --don't install
                container:remove()
                workspace:draw(true)
                workspace:stop()
            end
            container.layout:addChild(GUI.button(80,5,16,1,style.bottomButton, style.bottomText, style.bottomSelectButton, style.bottomSelectText, ""Don't ask again"")).onTouch = function()
                config.checkVersion = false --don't install and don't version check anymore
                compat.saveTable(config,aRD .. ""bootconfig.txt"")
                install = false
                container:remove()
                workspace:draw(true)
                workspace:stop()
            end
            container.panel.onTouch = function() --Always install if panel clicked
                install = true --Install all stuff
                container:remove()
                workspace:draw(true)
                workspace:stop()
            end
            workspace:draw(true)
            workspace:start()
        end
        while install == -2 do --repeat until user presses button. TEST: Not tested yet
            --os.sleep() --may require restart if os.sleep()
        end
        if install then
            local worked, errored = compat.internet.request(download .. ""files"",nil,{[""User-Agent""] = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36""}) --get file urls from server
            if worked then --if successful request
                local tempTable = JSON.decode(worked) --decode JSON to table
                local aRD = compat.fs.path(compat.system.getCurrentScript()) --get file location
                local workspace = GUI.workspace()
                --main stuff
                local container = GUI.addBackgroundContainer(workspace, true, true, ""Setting up folders"")
                workspace:draw(true)
                local folders = split(tempTable.folders,"","") --prep folders? TODO: Fix what's wrong here WHY
                for _,value in pairs(folders) do
                    if compat.fs.isDirectory(aRD .. value) then --if dir exists, delete it. Then it makes a directory again
                        compat.fs.remove(aRD .. value)
                    end
                    compat.fs.makeDirectory(aRD .. value)
                end
                --doing boot stuff first
                if(bootver ~= config.bootver) then --TODO: Fix version checker if broken & make sure it doesnt use openOSReq when downloading the files
                    --[[if not (compat.isMine) then
                        for key,value in pairs(openOSReq) do --install
                            print(""Installing "" .. key)
                            compat.internet.download(value,""/lib/"" .. key)
                            --os.execute(""wget -f "" .. value .. "" /lib/"" .. key) --(getting rid of wget execute in favor of actual compat downloader)
                        end
                    end]] --commented since clearly mineos
                    if compat.fs.isDirectory(aRD .. ""BootFiles"") then
                        compat.fs.remove(aRD .. ""BootFiles"")
                    end
                    compat.fs.makeDirectory(aRD .. ""BootFiles"")
                    for _, value in pairs(tempTable.boot) do
                        if value.type == ""boot"" and value.noMine == false then
                            container.label.text = ""Installing boot file to "" .. value.path .. "" file from URL: "" .. value.url
                            workspace:draw(true)
                            compat.internet.download(value.url,string.sub(value.path,1,1) == ""~"" and aRD .. string.sub(value.path,2,-1) or value.path)
                        end --Shouldn't need itself overwritten since not OpenOS.
                    end  --WHAT AM I THINKING?!? MINEOS HAS ALL BOOT FILES (apart from error checking) TODO: fix the website so it can determine what is only OpenOS and what is for both
                end
                --other stuff
                if(version ~= config.version) then

                    for _, value in pairs(tempTable.files) do
                        if value.type == ""db"" then --Download the required files in all locations
                            container.label.text = ""Installing to "" .. value.path .. "" file from URL: "" .. value.url
                            workspace:draw(true)
                            compat.internet.download(value.url,aRD .. value.path)
                        end
                    end
                end
                container:remove()
                workspace:draw(true)
                config.version = tempTable.version
                config.bootver = tempTable.bootVer
                compat.saveTable(config,aRD .. ""bootconfig.txt"") --update version for version checker
                loc = compat.system.getLocalization(compat.fs.path(compat.system.getCurrentScript()) .. ""Localizations/"") --Retrieve localizations in boot loader so 1. available in boot file, and 2. Enabled by default.
            else
                error(""Failed to download files. Server may be down"")
            end
            --perform install
            return true
        elseif not isConfig then
            return true
        else
            return false
        end
    else --OpenOS version
        term.clear()
        if isConfig then
            print(""New system: Installing servertine"") --force install
        elseif arg == ""--install"" then
            print(""Install command received. Reinstalling everything"") --if they run the boot and input --install after it, it will install regardless of version check
            install = true
        else
            print(""New version for the Servertine Database is available!"") --let them choose whether to install
            if version ~= config.version then print(""Database:   "" .. tostring(config.version) .. "" -> "" .. tostring(version)) end
            if bootver ~= config.bootver then print(""Boot Files: "" .. tostring(config.bootver) .. "" -> "" .. tostring(bootver)) end
            print(""Would you like to install this version? yes or no\nSome modules may require the new version"")
            local text = term.read():sub(1,-2)
            while text ~= ""yes"" and text ~= ""no"" do
                print(""Invalid input"")
                text = term.read():sub(1,-2)
            end
            if text == ""yes"" then --install new version
                install = true
            else --don't
                print(""Do you want the system to remember your decision?"")
                local text = term.read():sub(1,-2)
                while text ~= ""yes"" and text ~= ""no"" do
                    print(""Invalid input"")
                    text = term.read():sub(1,-2)
                end
                if text == ""yes"" then --skip version checking in future
                    config.checkVersion = false
                    compat.saveTable(config,aRD .. ""bootconfig.txt"")
                end
            end
        end
        if install then
            local worked, errored = compat.internet.request(download .. ""files"",nil,{[""User-Agent""] = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36""})
            if worked then
                local tempTable = JSON.decode(worked) --TODO: Make sure this matches json sent by the server
                local aRD = compat.fs.path(compat.system.getCurrentScript())

                local folders = split(tempTable.folders,"","") --prep folders?
                for _,value in pairs(folders) do
                    if compat.fs.isDirectory(aRD .. value) then
                        compat.fs.remove(aRD .. value)
                    end --setup folders
                    compat.fs.makeDirectory(aRD .. value)
                end
                --doing boot stuff first
                if(bootver ~= config.bootver) then
                    --[[for key,value in pairs(openOSReq) do --install
                        print(""Installing "" .. key)
                        compat.internet.download(value,""/lib/"" .. key)
                        --os.execute(""wget -f "" .. value .. "" /lib/"" .. key) --(getting rid of wget execute in favor of actual compat downloader)
                    end]] --commented out to see if fix
                    if compat.fs.isDirectory(aRD .. ""BootFiles"") then
                        compat.fs.remove(aRD .. ""BootFiles"")
                    end
                    compat.fs.makeDirectory(aRD .. ""BootFiles"")
                    local mainF = null
                    for _, value in pairs(tempTable.boot) do
                        if value.type == ""boot"" then
                            print(""Installing boot file to "" .. value.path .. "" file from URL: "" .. value.url)
                            compat.internet.download(value.url,string.sub(value.path,1,1) == ""~"" and aRD .. string.sub(value.path,2,-1) or value.path) --Make sure that a ""~"" allows it to use the local folder rather than global
                        elseif value.type == ""bootmain"" then
                            mainF = value
                        end
                    end
                    if mainF ~= null then
                        print(""Installing main boot program"")
                        compat.internet.download(mainF.url, aRD .. ""boot.lua"")
                    end
                end
                --other stuff
                for _, value in pairs(tempTable.files) do --install files
                    if value.type == ""db"" then
                        print(""Installing to "" .. value.path .. "" file from URL: "" .. value.url)
                        compat.internet.download(value.url,aRD .. value.path)
                    end
                end
                config.version = tempTable.version --change version for version checker
                local goodBoot = bootver ~= config.bootver
                config.bootver = tempTable.bootVer
                compat.saveTable(config,aRD .. ""bootconfig.txt"")
                if(goodBoot or arg == ""--install"") then --make sure computer restarts on boot.
                    print(""Please restart computer to run new boot"")
                    os.sleep(2)
                    os.execute(""shutdown"")
                end
                loc = compat.system.getLocalization(compat.fs.path(compat.system.getCurrentScript()) .. ""Localizations/"") --Retrieve localizations in boot loader so 1. available in boot file, and 2. Enabled by default.
            else
                error(""Failed to download files. Server may be down"") --failed to connect to server
            end
            --perform install
            return true --true means can run file
        elseif not isConfig then
            return true
        else
            return false --false means can't run file (not installed likely)
        end
    end
    if saveBoot then --at end in case install fails
        compat.saveTable(config,aRD .. ""bootconfig.txt"")
    end
end

local function clearScreen() --If OpenOS, clear screen to make better after closing.
    if not compat.isMine and not didError then
        if compat.workspace ~= nil then --remove all GUI stuff to see if this fixes bad background
            compat.window:remove()
            compat.workspace:draw(true)
            compat.workspace:stop()
            compat.window, compat.workspace = nil, nil
        end
        term = require(""Term"")
        term.clear()
        if config.shutdownonexit then
            os.sleep(1) --wait 1 sec
            os.execute(""shutdown"")
        end
    end
end


if config == nil or arg == ""--install"" or config.bootver == nil then
    installer() --If no config or --install key passed after running boot, it runs installer
elseif arg == ""--lib"" then
    for key,value in pairs(openOSReq) do
        print(""Installing "" .. key)
        compat.internet.download(value,""/lib/"" .. key)
        --os.execute(""wget -f "" .. value .. "" /lib/"" .. key) --(getting rid of wget execute in favor of actual compat downloader)
    end
elseif arg == ""--delcompat"" then
    compat.fs.remove(aRD .. ""Compat.lua"")
    print(""Compat library removed! Can be reinstalled after rebooting pc"")
    os.sleep(3)
    os.execute(""shutdown"")
end

errHan = require(""BootFiles/errorhandler"")
local notif = require(""BootFiles/notification"")
if config.getNotif == nil then
    config.getNotif = true
    compat.saveTable(config,aRD .. ""bootconfig.txt"")
end
errHan.setup(config)
notif.setup(config)

compat.lang = config.lang --set compat lang file to whatever is in bootconfig (for OpenOS, since no localization stuff works with it.)
local status, loc = pcall(compat.system.getLocalization(compat.fs.path(compat.system.getCurrentScript()) .. ""Localizations/"")) --Retrieve localizations in boot loader so 1. available in boot file, and 2. Enabled by default.
local result, reason = loadfile(compat.fs.path(compat.system.getCurrentScript()) .. ""/Database.lua"") --check for database program
if result then --file exists
    result = compat.fs.path(compat.system.getCurrentScript()) .. ""/Database.lua"" --set path for dofile()
    if config.checkVersion then --If version checking is enabled
        local worked, errored = compat.internet.request(download .. ""version"",nil,{[""User-Agent""] = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36""})
        if worked then --If got info from website
            local tempTable = JSON.decode(worked)
            if tempTable.success == true and (tempTable.version ~= config.version or tempTable.bootver ~= config.bootver) then --success checking version and version is not the same as one on web (bad version or update to system)
                local goodToRun = installer(tempTable.version, tempTable.bootver) --run installer
                if goodToRun then --run program
                    notif.getNotifications() --popup alerts
                    local success, result = pcall(dofile,result)
                    if not success then
                        errHan.erHandle(result)
                        didError = true
                    end
                    clearScreen()
                end
            else
                notif.getNotifications() --popup alerts
                local success, result = pcall(dofile,result)
                if not success then
                    errHan.erHandle(result)
                    didError = true
                end
                clearScreen()
            end
        else --failed to connect to web: run database anyway
            GUI.alert(""Error getting version from website"")
            notif.getNotifications() --popup alerts
            local success, result = pcall(dofile,result)
            if not success then
                errHan.erHandle(result)
                didError = true
            end
            clearScreen()
        end
    else --no version checking: only run program
        notif.getNotifications() --popup alerts
        local success, result = pcall(dofile,result)
        if not success then
            errHan.erHandle(result)
            didError = true
        end
        clearScreen()
    end
else --try running installer since db file doesn't exist
    local goodToRun = installer()
    if goodToRun then --file should exist now
        result, reason = loadfile(compat.fs.path(compat.system.getCurrentScript()) .. ""/Database.lua"")
        if result then --is loaded, so now can run
            result = compat.fs.path(compat.system.getCurrentScript()) .. ""/Database.lua""
            notif.getNotifications() --popup alerts
            local success, result = pcall(dofile,result)
            if not success then
                errHan.erHandle(result)
                didError = true
            end
            clearScreen()
        else --still doesn't exist?
            error(""Failed to run installed program. It'sa makea no sensea"")
        end
    end
end"
6LuUnW5m,is_mounted,Python253,Python,Friday 10th of May 2024 06:31:29 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: is_mounted.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script enables users to retrieve essential data about each mounted filesystem.

Information Included:
    - Device: The device associated with the mounted filesystem (e.g., C:\, D:\ on Windows, or /dev/sda1, /dev/sdb1 on Unix-like systems).
    - Filesystem Type: The type of filesystem used on the device (e.g., NTFS, ext4, FAT32).
    - Total Size: The total size of the filesystem, indicating the overall storage capacity available.
    - Used Space: The amount of space currently utilized within the filesystem.
    - Available Space: The remaining available space within the filesystem that can be utilized.
    - Usage Percentage: The percentage of space currently utilized in relation to the total capacity.

Functions:
    1. main(): Main function to fetch and display mounted filesystems information.
    2. bytes_to_human_readable(bytes): Converts bytes to a human-readable format.

Requirements:
    - Python 3.x
    - psutil Module

Usage:
    - Run the script to display information about mounted filesystems.

Expected Output:
--------------------------------------------------------
    Fetching Mounted Filesystems...

    Mounted Filesystems Found:

        :: [Mount Point: C:\] ::

          - Device: C:\
          - Filesystem Type: NTFS
          - Total Size: 474.73 GB
          - Used Space: 124.94 GB
          - Available Space: 349.79 GB
          - Usage Percentage: 26.3%

        :: [Mount Point: D:\] ::

          - Device: D:\
          - Filesystem Type: NTFS
          - Total Size: 931.50 GB
          - Used Space: 165.80 GB
          - Available Space: 765.69 GB
          - Usage Percentage: 17.8%
--------------------------------------------------------
          
Additional Notes:
    - This script requires the psutil module to be installed.
    - You can install it using pip command:
        
            'pip install psutil'
            
    - Ensure that the script has the necessary permissions to access mounted filesystem information.
    - By executing the script, users gain insights into the storage utilization of each mounted filesystem,
      empowering them to make informed decisions regarding resource allocation, storage management & system performance optimization.
""""""

import psutil

def main():
    """"""
    Main function to fetch and display mounted filesystems information.
    """"""
    print(""Fetching Mounted Filesystems...\n"")
    try:
        mounts = psutil.disk_partitions()
        if not mounts:
            print(""No filesystems are mounted."")
        else:
            print(""Mounted Filesystems Found:\n"")
            for mount in mounts:
                print(f""\t:: [Mount Point: {mount.mountpoint}] ::\n"")
                usage = psutil.disk_usage(mount.mountpoint)
                print(f""\t  - Device: {mount.device}"")
                print(f""\t  - Filesystem Type: {mount.fstype}"")
                print(f""\t  - Total Size: {bytes_to_human_readable(usage.total)}"")
                print(f""\t  - Used Space: {bytes_to_human_readable(usage.used)}"")
                print(f""\t  - Available Space: {bytes_to_human_readable(usage.free)}"")
                print(f""\t  - Usage Percentage: {usage.percent}%"")
                print()
    except Exception as e:
        print(f""\n\tError: {e}"")

def bytes_to_human_readable(bytes):
    """"""
    Convert bytes to a human-readable format (e.g., KB, MB, GB).
    """"""
    for unit in ["""", ""KB"", ""MB"", ""GB"", ""TB""]:
        if bytes < 1024:
            return f""{bytes:.2f} {unit}""
        bytes /= 1024

if __name__ == ""__main__"":
    main()
"
31NbDi1P,yt_transcriber,Python253,Python,Friday 10th of May 2024 06:04:30 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: yt_transcriber.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script is a utility for extracting transcripts from YouTube shorts & videos.
It provides functions to extract the video ID from a YouTube URL, fetch the transcript for the specified video, and save the transcript to a text file.
The script also includes a user-friendly interface for selecting options to input a YouTube URL or use an example URL, and it supports fetching transcripts in multiple languages.

Requirements:
    - youtube_transcript_api: This script requires the 'youtube_transcript_api' library.
    - Install via pip command:
        
        'pip install youtube_transcript_api'

Functions:
    1. extract_video_id(video_url): Extracts the video ID from a YouTube URL.
    2. save_transcript_to_file(transcript_text): Saves the transcript text to a text file.
    3. main(): Provides a user interface for selecting options to input a YouTube URL or use an example URL, fetches the transcript, and offers the option to save the transcript to a file.

Usage:
    - Run the script using Python: `python yt_transcriber.py`
    - Select an option:
        1. Input YouTube Video Url: Enter a YouTube video or Shorts URL to fetch the transcript.
        2. Use Example Video Url: Use an example video URL provided in the script to fetch the transcript.
    - If selecting option 1:
        - Enter the YouTube Video or Shorts URL.
        - The script attempts to fetch the transcript in specified languages (English, Spanish, Arabic, Simplified Chinese).
        - The transcript is displayed, and the user is prompted to save it to a file.
    - If selecting option 2:
        - The transcript for the example video URL is fetched and displayed.
        - The user is prompted to save the transcript to a file.

Additional Notes:
    - This script supports fetching transcripts in multiple languages, including English, Spanish, Arabic, and Simplified Chinese.
    - The script handles various user inputs and provides appropriate error messages for invalid inputs.
    - Make sure to install the 'youtube_transcript_api' library before running the script.
""""""

from youtube_transcript_api import YouTubeTranscriptApi

def extract_video_id(video_url):
    """"""
    Extracts the video ID from a YouTube URL.

    Args:
        video_url (str): The YouTube video URL.

    Returns:
        str or None: The extracted video ID if found, otherwise None.
    """"""
    # Extract video ID from YouTube URL
    if ""youtube.com"" in video_url:
        if ""/shorts/"" in video_url:
            video_id = video_url.split(""/shorts/"")[-1]
            return video_id
        else:
            video_id = video_url.split(""v="")[-1]
            return video_id
    elif ""youtu.be"" in video_url:
        video_id = video_url.split(""/"")[-1]
        return video_id
    else:
        return None

def save_transcript_to_file(transcript_text):
    """"""
    Saves the transcript text to a text file.

    Args:
        transcript_text (str): The transcript text to be saved.
    """"""
    file_name = input(
        ""\nEnter the file name to save the transcript (without extension): ""
    )
    file_path = f""{file_name}.txt""
    with open(file_path, ""w"", encoding=""utf-8"") as file:
        file.write(transcript_text)
    print(f""\nTranscript saved as {file_path}"")

def main():
    # Print The Header
    print(
        """"""
      __   __         _____      _                    
      \ \ / /__  _   |_   _|   _| |__   ___           
       \ V / _ \| | | || || | | | '_ \ / _ \          
        | | (_) | |_| || || |_| | |_) |  __/          
 _____  |_|\___/ \__,_||_| \__,_|_.__/_\___|          
|_   _| __ __ _ _ __  ___  ___ _ __(_) |__   ___ _ __ 
  | || '__/ _` | '_ \/ __|/ __| '__| | '_ \ / _ \ '__|
  | || | | (_| | | | \__ \ (__| |  | | |_) |  __/ |   
  |_||_|  \__,_|_| |_|___/\___|_|  |_|_.__/ \___|_|   
        """"""
    )

    # Main Menu
    print(""\n\tSelect an option:\n"")
    print(""\t1: Input YouTube Video or Shorts Url"")
    print(""\t2: Use Example Video Url"")
    option = input(""\n\tEnter the option number (1 or 2): "")

    if option == ""1"":
        video_url = input(""\n\tEnter the YouTube Video URL: "")
        video_id = extract_video_id(video_url)

        if not video_id:
            print(""\nInvalid YouTube Video URL. Exiting..."")
            return

        # Scan CC for the specified languages
        languages_to_try = [""en"", ""es"", ""ar"", ""zh-Hans""]
        transcript = None

        # Attempt to fetch transcripts in specified languages
        for lang in languages_to_try:
            transcript = YouTubeTranscriptApi.get_transcript(video_id, languages=[lang])
            if transcript:
                break

        if not transcript:
            print(""\nNo transcript available for the selected languages. Exiting..."")
            return

        transcript_text = """"
        for item in transcript:
            transcript_text += f""{item['start']:>6.2f}: {item['text']}\n""
        print(transcript_text)

        # Save Menu
        print(""\n\tDo you want to save the transcript to a file?\n"")
        print(""\t1: Yes"")
        print(""\t2: No"")
        save_option = input(""\nEnter the option number: "")

        # Function to save the transcript to a txt file in the current working directory
        if save_option == ""1"":
            save_transcript_to_file(transcript_text)
        elif save_option == ""2"":
            print(""\nTranscript not saved!"")
        else:
            print(""\nInvalid option!"")
    elif option == ""2"":
        video_id = ""jNQXAC9IVRw""  # Example video URL: https://www.youtube.com/watch?v=jNQXAC9IVRw
        transcript = YouTubeTranscriptApi.get_transcript(video_id)
        transcript_text = """"
        for item in transcript:
            transcript_text += f""{item['start']:>6.2f}: {item['text']}\n""
        print(transcript_text)

        # Save Menu
        print(""\n\tDo you want to save the transcript to a file?\n"")
        print(""\t1: Yes"")
        print(""\t2: No"")
        save_option = input(""\n\tEnter the option number: "")

        # Function to save the transcript to a txt file in the current working directory
        if save_option == ""1"":
            save_transcript_to_file(transcript_text)
        elif save_option == ""2"":
            print(""\nTranscript not saved!"")
        else:
            print(""\nInvalid option!"")
    else:
        print(""\nInvalid option!"")

if __name__ == ""__main__"":
    main()
"
aMsqjtVQ,Untitled,Deliverator,PowerShell,Friday 10th of May 2024 05:21:53 PM CDT,"# Define an array of applications to start
$applications = @(
#    ""C:\Program Files (x86)\NaturalPoint\TrackIR5\TrackIR5.exe"",
    ""D:\DCS-SimpleRadio-Standalone\SR-ClientRadio.exe""
#    ""C:\Program Files (x86)\JoyToKey\JoyToKey.exe"",
#    ""F:\DCS World\bin-mt\DCS.exe""
)

# Loop through each application
foreach ($app in $applications) {
    # Check if the application is already running
    $running = Get-Process | Where-Object {$_.MainModule.FileName -eq $app}

    # If the application is not running, start it
    if (-not $running) {
        Start-Process -FilePath $app -Verb RunAs
    }
    
    Start-Sleep -Seconds 5  # Add a 5-second delay
}
"
t415XsDk,Untitled,ragitaboom,JSON,Friday 10th of May 2024 04:54:33 PM CDT,"{
  ""ADS_PROVIDER"": ""YANDEX""
}"
SvCiWMM6,Arduino - Lettura sensore differenziale MS4525DO,webtronico,Arduino,Friday 10th of May 2024 04:05:34 PM CDT,"#include <Wire.h>

#define MS4525DO_address 0x28 // Indirizzo I2C del MS4525DO

void setup() {
  Wire.begin();
  Serial.begin(9600);
}

void loop() {
  Wire.requestFrom(MS4525DO_address, 4); // Richiedi 4 byte dal sensore
  delay(10); // Aspetta che i dati siano pronti

  if(Wire.available()) {
    uint8_t buf[4];
    Wire.readBytes(buf, 4); // Leggi i 4 byte

    uint16_t pressure_raw = (buf[0] << 8) | buf[1]; // Combina i primi due byte per ottenere la pressione grezza
    pressure_raw = pressure_raw & 0x3FFF; // Rimuovi i primi due bit (status bits)

    uint16_t temp_raw = (buf[2] << 8) | buf[3]; // Combina gli ultimi due byte per ottenere la temperatura grezza
    temp_raw = temp_raw >> 5; // Rimuovi gli ultimi 5 bit (status bits)

    float pressure_psi = ((pressure_raw - 0.1*16383) * (30-(-30)) / (0.8*16383)) - 30; // Converti la pressione grezza in psi
    float temp_C = ((200.0 * temp_raw) / 2047) - 50; // Converti la temperatura grezza in gradi Celsius

    float speed_mps = sqrt((2*abs(pressure_psi))/(1.2041*0.5)); // Calcola la velocità in m/s utilizzando la legge di Bernoulli
    float speed_kmh = speed_mps * 3.6; // Converti la velocità in km/h

    Serial.print(""Pressione grezza: "");
    Serial.println(pressure_raw);
    Serial.print(""Pressione in PSI: "");
    Serial.println(pressure_psi);
    Serial.print(""Velocità del vento: "");
    Serial.print(speed_kmh);
    Serial.println("" Km/h"");
    Serial.print(""Temperatura: "");
    Serial.print(temp_C);
    Serial.println("" C°"");
  }

  delay(1000); // Aspetta 1 secondo prima del prossimo ciclo
}"
rKV8aPN5,Задача 5,dmemsm,Python,Friday 10th of May 2024 03:45:25 PM CDT,"import math

d = int(input())
v = [int(input()) for i in range(d)]
p = [int(input()) for i in range(d)]
sumv = sum(v)
sump = sum(p)
print(f""Суммарный заработок Васи: {sumv}"")
print(f""Суммарный заработок Пети: {sump}"")
if sumv > sump:
    perday = p[-1]
    print(f""Пете нужно работать ещё {math.ceil((sumv - sump) / perday)} день/дня/дней"")
elif sump > sumv:
    perday = v[-1]
    print(f""Васе нужно работать ещё {math.ceil((sump - sumv) / perday)} день/дня/дней"")
"
C1mTwZSH,CC Mekanism Induction Battery Monitoring V2,THEdarkkman,Lua,Friday 10th of May 2024 03:12:37 PM CDT,"-- Terminal preparation
term.clear()
term.setCursorPos(1,1)

-- Monitor preparation
local monitor = peripheral.find(""monitor"")
if monitor then
    monitor.setBackgroundColour(colors.gray)
    monitor.clear()
    monitor.setCursorPos(1,1)
end

-- Configuration
local config = {
    isTestingModeEnabled = false
}
if config.isTestingModeEnabled then
    print(""Testing mode is enabled."")
end

-- Variable declaration
inductionPort = nil
local energy
local energySuffix
local progressBar
local monitorColor = colors.gray
local pos1
local pos2

-- Functions

-- Print text serialised
local function printText(text)
    print(textutils.serialise(text))
end

-- Convert Joules to RF(Redstone Flux)
local function convertToRF(amntEnergy)
    return math.floor(amntEnergy / 2.5)
end

-- Find suffix and convert value
local function formatEnergyValue(val)
    val = val + 1       -- bugProof
    local suffix
    local energy = 1    -- bugProof
    if val < 1000 then
        suffix = ''
    elseif val < 1000000 then
        energy = val / 1000
        suffix = 'k'
    elseif val < 1000000000 then
        energy = val / 1000000
        suffix = 'M'
    elseif val < 1000000000000 then
        energy = val / 1000000000
        suffix = 'G'
    else
        energy = val / 1000000000000
        suffix = 'T'
    end
    return suffix, energy
end

-- Round a number to a specific number of decimal places
local function roundToDecimal(number, decimalPlaces)
    local powerOf10 = 10 ^ decimalPlaces
    return math.floor(number * powerOf10 + 0.5) / powerOf10
end

-- Monitor draw region 
local function drawRegion(pos1, pos2, monitorColor, monitor)
    --[[
    - pos1          Top-left coordinates
    - pos2          Bottom-right corner coordinates
    - monitorColor  Color you want to draw with
    - monitor       Monitor you want to draw to
    ]] 
    local x1, y1 = pos1[1], pos1[2]     -- Top-left corner coordinates
    local x2, y2 = pos2[1], pos2[2]     -- Bottom-right corner coordinates
    local numSpaces = y2 - y1 + 1       -- Calculate the number of blank spaces to write
    if monitor and config.isTestingModeEnabled then
        printText(""Monitor is working"")
        printText(""Color: "" .. monitorColor)
        printText(""Drawing region at x1:"" .. x1 .. "" x2:""..x2.."" y1:""..y1.."" y2:""..y2)
        printText(""Drawed region is ""..numSpaces.. "" pixels long"")
    end
    monitor.setBackgroundColour(monitorColor)  -- Set the color for the draw

    -- Loop through each line of the region
    for y = y1, y2 do
        -- Loop through each column of the region
        for x = x1, x2 do
            monitor.setCursorPos(x,y)
            monitor.write("" "")
        end
    end
    -- Reset the background color to the default
    monitor.setBackgroundColour(colors.gray)
end

-- Check for induction port in peripheral
local function isInductionPort()
    local name = ""inductionPort""
    for _, side in pairs(peripheral.getNames()) do
        if name == peripheral.getType(side) then
            printText(""Found "" .. name .. "" on "" .. side)
            return peripheral.wrap(side)
        end
    end
    print(""There is no ""..name .."" in the peripheral list"")
    return false
end

local function getCurrentEnergy(inductionPort)
    local suffix, energy = formatEnergyValue(convertToRF(inductionPort.getEnergy()))
    energy = roundToDecimal(energy, 2)
    return suffix, energy
end

local function getMaxEnergy(inductionPort)            
    local suffix, energy = formatEnergyValue(convertToRF(inductionPort.getMaxEnergy()))
    energy = roundToDecimal(energy, 1)
    return suffix, energy
end

local function getLastInput()
    local suffix, energy = formatEnergyValue(convertToRF(inductionPort.getLastInput()))
    energy = roundToDecimal(energy, 0)
    return suffix, energy
end

local function getLastOutput()
    local suffix, energy  = formatEnergyValue(convertToRF(inductionPort.getLastOutput()))
    energy = roundToDecimal(energy, 0)
    return suffix, energy
end

local function drawBar()
    local monitorColor = colors.black
    local pos1 = {1, 18}
    local pos2 = {29, 19}
    drawRegion(pos1, pos2, monitorColor, monitor)    
end

local function drawProgressBar()
    monitorColor = colors.red
    progressBar = roundToDecimal(inductionPort.getEnergyFilledPercentage() * 28 + 1, 1)
    pos1 = {1, 18}
    pos2 = {progressBar, 19}
    drawRegion(pos1, pos2, monitorColor, monitor)    
end

-- Monitor updating
-- Refresh and update the monitor each time the function is called
local function monitorUpdateValue()
    local energy 
    local energySuffix
    local maxEnergy
    local maxEnergySuffix
    -- Title
    monitor.setCursorPos(1,1)
    monitor.write(""INDUCTION BATTERY"")
    monitor.setCursorPos(1,2)
    monitor.write(""-----------------"")
    -- Stored energy
    monitor.setCursorPos(1,3)
    monitor.write(""Energy"")
    monitor.setCursorPos(10,3)
    monitor.write("":"")
    monitor.setCursorPos(11,3)
    energySuffix, energy = getCurrentEnergy(inductionPort)
    maxEnergySuffix, maxEnergy = getMaxEnergy(inductionPort)
    monitor.write(energy ..energySuffix ..""RF / "" .. maxEnergy ..maxEnergySuffix ..""RF"")
    -- Input
    monitor.setCursorPos(1,4)
    monitor.write(""Input"")
    monitor.setCursorPos(10,4)
    monitor.write("":"")
    monitor.setCursorPos(11,4)
    energySuffix, energy = getLastInput()
    monitor.write(energy .. energySuffix .. ""RF"")
    -- Output
    monitor.setCursorPos(1,5)
    monitor.write(""Output"")
    monitor.setCursorPos(10,5)
    monitor.write("":"")
    monitor.setCursorPos(11,5)
    energySuffix, energy = getLastOutput()
    monitor.write(energy .. energySuffix .. ""RF"")
end
-----------------

-- Code

-- Assign the induction port object
inductionPort = isInductionPort()

-- Testing
if config.isTestingModeEnabled then
    -- Test and printing
    printText(""Testing print:"")
    printText(""color is "" .. monitorColor)
    printText(inductionPort.getEnergyFilledPercentage())
end
-- check if inductionPort is present
if not inductionPort then -- if not, stop the program
    print(""There is no induction port, aborting."")
    return
else
    -- Program start here
    
    -- Draw the initial bar outside the loop
    drawBar()

    while true do
        -- Main loop --

        -- Check if a monitor is present
        if monitor then
            -- Call monitoring
            monitorUpdateValue()

            -- Draw the progression bar
            drawProgressBar()
        else
            printText(""No monitor is present, aborting"")
            return false
        end

        os.sleep(1)
    end
end"
YEySvSFx,Задача 4,dmemsm,Python,Friday 10th of May 2024 03:09:27 PM CDT,"kx = int(input(""x координата колонны: ""))
ky = int(input(""y координата колонны: ""))
vx1 = int(input(""x1 координата стола Васи: ""))
vy1 = int(input(""y1 координата стола Васи: ""))
vx2 = int(input(""x2 координата стола Васи: ""))
vy2 = int(input(""y2 координата стола Васи: ""))
print(f""x1 координата стола Пети: {-1*(vx1 - kx) + kx}"")
print(f""y1 координата стола Пети: {-1*(vy1 - ky) + ky}"")
print(f""x2 координата стола Пети: {-1*(vx2 - kx) + kx}"")
print(f""y2 координата стола Пети: {-1*(vy2 - ky) + ky}"")
"
ZH4qL33X,Задача 3,dmemsm,Python,Friday 10th of May 2024 03:08:46 PM CDT,"pd1 = int(input(""Первый рабочий день Пети: ""))
pd2 = int(input(""Второй рабочий день Пети: ""))
pd3 = int(input(""Третий рабочий день Пети: ""))
pstart = int(input(""Начало рабочего дня Пети: ""))
pend = int(input(""Конец рабочего дня Пети: ""))
vd1 = int(input(""Первый рабочий день Васи: ""))
vd2 = int(input(""Второй рабочий день Васи: ""))
vd3 = int(input(""Третий рабочий день Васи: ""))
vstart = int(input(""Начало рабочего дня Васи: ""))
vend = int(input(""Конец рабочего дня Васи: ""))

pdays = [pd1, pd2, pd3]
vdays = [vd1, vd2, vd3]
if abs(pstart-vstart) > 1 or abs(pend-vend) > 1: # Если начало или конец рабочего дня Васи и Пети различаются больше, чем на час
    print(0)
else:
    print(len([i for i in pdays if i in vdays])) # Считаем количество совпадающих дней"
MU8a7ShC,RMS BACKUP 5/10/24,coffeeandphotos,CSS,Friday 10th of May 2024 03:08:05 PM CDT,"//Don't Display Portfolio Pagination 
.item-pagination--prev-next {
  display: none;}

/* Change dropdown menu background */
.header-nav-folder-content {
   background: #BEBCE6 !important;
}

//header nav menu mobile

.header-menu-nav-item a {
    font-size: 1.9rem;}


//remove underline from links
a {
text-decoration: none !important;
}
header a {
background-image: none !important;
}
footer a {
text-decoration: none !important;
}

//hide BACK in mobile menu
.header-menu-controls-control span:nth-of-type(2) {
  display: none;
}

// Hiding and showing sections on Home Mobile/desktop
@media screen and (max-width: 641px) {
section[data-section-id=""64ebc5b2f3bbbd56308e6cf5""] {
 display:none !important;
  }
}
@media screen and (min-width: 641px) {
section[data-section-id=""64ebc5a3d0e4a46a28d88f35""] {
 display:none !important;
  }
}

// logo gallery marquee homepage

@keyframes moveLeft {
  0% {
    transform: translateX(0%);
  }

  100% {
    transform: translateX(-300%);
  }
}
//main css
section[data-section-id=""63c35bb9b98b7f0d1d647b8d""] {
 overflow:hidden;
 border-bottom:1px solid;

 .gallery-grid-item-wrapper img  {
  object-fit:contain !important;
}

.gallery-grid-wrapper {
  display:flex !important;
  animation:  moveLeft 65s linear      infinite;
  .gallery-grid-item {
   min-width:15%;
     margin-right:5%; 
  }
}



.gallery-grid-item:not([data-show]) .gallery-grid-item-wrapper {
    opacity: 1;
  
}
.gallery-grid-item:not([data-show]) .gallery-grid-item-caption {
    opacity: 1;
    visibility: visible !important;
}

.gallery-grid[data-show-captions=""false""] .gallery-grid-item-caption {
    display: none
}

.gallery-grid[data-show-captions=""true""][data-animation=""none""] .gallery-grid-item-caption {
    transition: none
}

}

//mobile

section[data-section-id=""63c35bb9b98b7f0d1d647b8d""] {

@media screen and (max-width:767px) {
.gallery-grid-item {
   min-width:50% !important;
     margin-right:5%; 
  }

}

.gallery  {
    min-height:initial !important;
  }

}
//end of gallery marque

//list image radius

.user-items-list-simple .list-image
{border-radius:40px;}

//bloag image style radius
.blog-basic-grid .image-wrapper img {
  border-radius: 40px;}

//gallery slideshow container radius homepage
section[data-section-id=""64cc5fafe9b3b21c0a814db1""]
.sqs-gallery-block-slideshow .sqs-gallery-design-stacked-slide {border-radius:40px;} 
//
.sqs-gallery-block-slideshow {
  background-color: transparent}
 //
//mega menu
.mega {
  position: absolute;
  width: 100%;
  opacity: 0;
  left: 0;
  bottom: 0px;
  visibility: hidden;
  pointer-events: none;
  transition:transform 1s ease;
  transform: translate(0,95%);
 
  &:after {
    position: absolute;
    left: 0;
    content: '';
    height: 100%;
    width: 100%;
    z-index: -1;
    background: transparent;
    top: 5px;
    transform: translate(0,-100%);
    
  
  }
 
 
}

.mega:hover {
  opacity: 1;
  visibility: visible;
   pointer-events: auto!important;
  -webkit-transition-delay: 0s;
  -o-transition-delay: 0s;
  transition-delay: 0s;
transform: translate(0,100%);
  & * {
    pointer-events: auto;
  }
}
.folder a {
  pointer-events:none;
}
.folder:hover {
  & + .mega {
    opacity: 1;
    pointer-events: auto!important;
    visibility: visible;
    transform: translate(0,100%);
  }
}



@media (min-width:991px) {

.folder {
 z-index:99999 !important;
.header-nav-folder-content {
  display: none;
}
}
.header-nav-item,
.header-title,
.header-actions {
  z-index: 9;
  position: relative !important;
}
.header-background,.header::before,
{
  pointer-events: none!important;
}

.header-display,
.header-inner {
  position: static!important;
}

}


//LEFT ALIGN TEXT
.mega {
 p,h2,h3,h1 {
    text-align:left;
  }
//remove underlines in links
  p a {
    border-bottom:0px !important;
  }
}

 .section-background-content img {
  visibility:visible !important;
}

//background color
//Mega Menu Background color
.mega {

 .section-background {
    background-color: #EBEAEB !important;
  }

}
//padding
.mega {
.content-wrapper {
    padding-top: 5vh !important;
    padding-bottom: 5vh !important;
  }
}
//typography
.mega {
h3 {
font-size:18px;
font-family: Poppins;
}
h1,h2,h3,h4, p {
text-align:left;
line-height: 1.8;
}

}

//mobile mega menu 
//Hide Default Nav Items
//hide popout menu on mobile, most tablets
@media only screen and (max-width: 1024px) and (pointer: coarse), screen and (max-width: 799px) {
.header-menu-nav-list {
  display:none;
}

}

//basic mobile


.header--menu-open .header-menu {
   overflow-y:scroll;
   background-color:#EBEAEB; //change as needed
  .header-menu-bg{
    display:none;
   }
 
//Fix Background Color
.page-section {
    background-color:transparent !important;   
    min-height:initial !important;
  }

.section-background {
   background-color: transparent !important;
  }

//Define Padding
 .content-wrapper {
  padding-top:0px  !important;
  padding-bottom:0px !important;
}
//Adjust Block Spacing
  .sqs-block {
    padding-top:10px;
    padding-bottom:10px;
  }

}

body:not(.header--menu-open) {
  #mobileNav {
    opacity:0;
  }
}

.header--menu-open {
   #mobileNav {
    opacity:1;
  }
}

//fix button mobile nav
#block-44f48ad044cd63646853 .sqs-button-element--primary {color: #fff !important}



//mobile menu pages font style
[data-section-id=""63cf36ffbc1f0240b2998d16""] H3 { line-height: 1.8 !important;
}
[data-section-id=""63cf3617e216dc3d3b12e29d""] H3 { line-height: 1.8 !important;
}"
X8emx8L7,simulate_movement,Python253,Python,Friday 10th of May 2024 03:01:45 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: simulate_movement.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script emulates user interaction by automatically moving the cursor on the screen at predefined intervals.
It serves as a tool for mimicking user activity in scenarios such as preventing system idle timeouts, maintaining application sessions, or testing user interface responsiveness.

Requirements:
    - Python must be installed on the system.
    - The pyautogui library must be installed.
      You can install it using this pip command:
              
              'pip install pyautogui'
              
    - The script should be executed on a platform that supports graphical interfaces, such as Windows, macOS, or Linux with X11.

Functions:
    - simulate_activity():
      This function continuously moves the cursor in a tiny square pattern at predefined intervals, effectively simulating user activity.

Usage:
    1. Ensure Python and the pyautogui library are installed on your system.
    2. Download the simulate_movement.py script to a location on your computer.
    3. Open a command prompt or terminal window.
    4. Navigate to the directory where the script is located.
    5. Run the script by executing the command: python simulate_movement.py.
    6. The script will start simulating cursor movement in the background.
    7. To stop the script, press Ctrl+C in the command prompt or terminal window.

Additional Notes:
    - This script is intended for scenarios where it's necessary to prevent system idle timeouts, maintain active sessions, or test user interface responsiveness.
    - Adjustments to the movement step size (MOVEMENT_STEP) and delay (MOVEMENT_DELAY) can be made to customize the behavior of cursor movement.
    - While running, the script does not produce any visible output or indication of activity, making it discreet and suitable for background operation.
""""""

import time
import pyautogui

# Constants
SLEEP_DURATION = 60  # Seconds
MOVEMENT_STEP = 1  # Pixels
MOVEMENT_DELAY = 0.0001  # Seconds

# Loop indefinitely until interrupted
try:
    while True:
        # Sleep for the specified duration
        time.sleep(SLEEP_DURATION)
        
        # Move the cursor in a tiny square pattern
        pyautogui.move(-MOVEMENT_STEP, 0, duration=MOVEMENT_DELAY)  # Left
        pyautogui.move(0, -MOVEMENT_STEP, duration=MOVEMENT_DELAY)  # Up
        pyautogui.move(MOVEMENT_STEP, 0, duration=MOVEMENT_DELAY)   # Right
        pyautogui.move(0, MOVEMENT_STEP, duration=MOVEMENT_DELAY)   # Down
        
except KeyboardInterrupt:
    # Handle keyboard interrupt (Ctrl+C)
    print(""Script terminated by user."")
"
X8jAhfCu,Prac №4,stupid_pro,ASM (NASM),Friday 10th of May 2024 02:37:26 PM CDT,"; Читаем массив char-ов cо стандартного потока ввода
; в динамическую память.
; считывание прекращается в тот момент, когда в потоке ввода встретилось char
; со значением 0.
; Память выделяем макросом new.

;мой основной код для прака

include console.inc

ALLONG_SIZE equ 2
ZERO_CODE equ 48

.data
    mark_number dd 0
    array_size    dd 0
    array_pointer dd 0
    array_size_for_pair dd 0
    array_pointer_for_pair dd 0

.code

    ;
    ; параметры:
    ; 1. параметр указатель на начало массива.
    ; 2. указатель на размер массива.
    ; возвращаемое значение
    ; 0 - всё хорошо
    ;

read_array proc
    push ebp
    mov ebp, esp

    ;
    ; зарезервируем место на стеке,
    ; для хранения размера выделенной памяти для массива
    ; выделим 4 байта, в дальнейшем к ним обращаться как
    ; [ebp - 4]
    ;выделяем 4 байта: в младшем байте будет лежать наш char, в остальных трех будут лежать нули
    ;

    sub esp, 20

    ;
    ; В регистре ebx будем сохранять текущий размер считываемого  массива.
    ; в edi - будем хранить текущий адрес массива
    ; в esi - считанный элемент массива
    ;

    push ebx
    push esi
    push edi

    mov ebx, 0

    ;
    ; Делаем размер выделенной памяти
    ; равным 0 изначально.
    ; edi указатель на массив проинициализируем 0, чтобы dispose
    ; не  вызывать.
    ;

    mov dword ptr [ebp - 4], 0
    mov dword ptr [ebp - 8], 0
    mov dword ptr [ebp - 12], 0
    mov dword ptr [ebp - 16], 0
    mov dword ptr [ebp - 20], 0

    mov edi, 0

read_elms_loop:

    ;
    ;будем записывать чары в регистр dl
    ;

    outstrln ""input elm: ""
    inchar dl
    outstr ""read elm: ""
    outcharln dl

    ;
    ;записываем в esi значение регистра dl, пополненное нулями
    ;

    movzx esi, dl

    cmp esi, ZERO_CODE
    je after_read_elms_loop

    mov ecx, 8

make_fin_reg:
    ;побитово сдвигаем содержимое стека по данным адресам
    shl dword ptr [ebp - 16], 1
    rcl dword ptr [ebp - 20], 1
    loop make_fin_reg

    add dword ptr [ebp - 16], esi
    cmp dword ptr [ebp - 20], '/-:f'
    jne not_slash_pered_fin
    cmp dword ptr [ebp - 12], 1
    je not_fin

not_slash_pered_fin:
    mov eax, '0-:f'
    and eax, 0ffffffh
    and dword ptr [ebp - 20], 0ffffffh
    cmp dword ptr [ebp - 20], eax
    jne not_fin
    cmp dword ptr [ebp - 16], 'in:-'

    jne not_fin
    jmp after_read_elms_loop

not_fin:

    ;проверка /

	cmp esi, '/'
	jne not_slash
	cmp dword ptr [ebp - 8], 1
	je not_one_slash
	mov dword ptr [ebp - 8], 1
	mov dword ptr [ebp - 12], 1
	jmp read_elms_loop

not_one_slash:
	mov dword ptr [ebp - 8], 0
	mov dword ptr [ebp - 12], 0

not_slash:
	mov dword ptr [ebp - 8], 0

    ; cmp esi, SLASH
    ; outintln esi
    ; jne routine

; first_slash:
;     outstr ""input elem: (we got first slash)""
;     inchar dl
;     outstr ""read elm: ""
;     outcharln dl

;     movzx esi, dl

;     cmp esi, ZERO_CODE
;     je after_read_elms_loop

;     cmp esi, '\'
;     je routine

; routine:

    ;
    ; проверяем есть ли место куда положить очередной элемент
    ; если нет, то запускаем выделение памяти
    ;

    cmp ebx, [ebp - 4]
    jb mem_enough
    outstrln ""allong mem""

    ;
    ; на сколько байт будем удлиннять память.
    ; удлинняем на 2 элемента, каждый по 4 байта.
    ; Для этого пересчитываем размер из элементов в байты.
    ; затем прибавляем то, на сколько увеличиваем размер памяти.
    ; и проверяем на переполнение.
    ; эта часть кода отвечает за ситуацию, когда текущий размер памяти >= выделенному
    ;

    mov eax, 1 ; в eax помещаем 4 - размер одного элемента
    mul ebx ; mul - умножение на eax того, что мы передали результат в EDX:EAX
    ; теперь в eax хранится число байтов, которое выделено под элементы
    add eax, ALLONG_SIZE ; allong_size = 2
    jc process_overflow ;jc - jump carry flag

    ;
    ; Сохраним новый размер в переменную,
    ; где мы храним размер.
    ;

    add  dword ptr [ebp - 4], ALLONG_SIZE

    ;
    ; Здесь как параметр макроса передаём размер, который лежит в еах,
    ; сам макрос после работы в регистре eax вернёт
    ; новый указатель на выделенную память.
    ; если памяти нет, то вернётся 0
    ;

    push ebx

    outstr ""New memory allocation size: ""
    outintln eax

    new eax
    cmp eax, 0
    je process_out_of_mem

    outstr ""New pointer to array: ""
    outintln eax

    outstr ""Old pointer to array: ""
    outintln edi

    pop ebx

    ;
    ; переписываем старую память в новую.
    ;

    mov ecx, 0

copy_elms_loop:

    cmp ecx, ebx
    jae after_copy_elms_loop ; прыжок, если всё перекопировали

    mov dl, [edi + ecx * 1]
    mov [eax + ecx * 1], dl

    inc ecx
    jmp copy_elms_loop

after_copy_elms_loop:

    ;
    ; меняем указатели и освобождаем старую память.
    ;

    xchg eax, edi
    cmp eax, 0

    je mem_enough

    push ebx
    dispose eax
    pop ebx


mem_enough:

    ;
    ; Помещаем новый элемент в выделенную память.
    ;

    mov edx, esi

    mov [edi + 1 * ebx], edx

    inc ebx

    jmp read_elms_loop

after_read_elms_loop:
    ;
    ; normal finishing
    ;

    ;
    ; возвращаем адрес массива
    ;

    mov esi, [ebp + 8]
    mov [esi], edi

    ;
    ; возвращаем размер массива
    ;

    mov esi, [ebp + 12]
    mov [esi], ebx

    pop edi
    pop esi
    pop ebx

    mov eax, 0

    mov esp, ebp

    pop ebp

    ret 4 + 4

process_overflow:

    dispose edi ; чистим выделенную память

    pop edi
    pop esi
    pop ebx

    mov eax, 1
    mov esp, ebp
    pop ebp

    ret 4 + 4

process_out_of_mem:

    dispose edi ; чистим выделенную память
    pop edi
    pop esi
    pop ebx

    mov eax, 2

    mov esp, ebp
    pop ebp
    ret 4 + 4

read_array endp


print_array proc

    push ebp
    mov ebp, esp
    push edi


    mov edi, [ebp + 8]
    mov ecx, 0

loop_print_arr:


    cmp ecx, [ebp + 12]
    jae after_loop_print_arr

    outchar byte ptr [edi + 1 * ecx]

    inc ecx

    jmp loop_print_arr

after_loop_print_arr:

    pop edi
    pop ebp

    ret 4 + 4

    print_array endp


main_part proc

    push ebp
    mov ebp, esp

    ; выделим некоторое число байт, будем к ним обращаться, как:
    ; [ebp - 4] - выделенная память для массива
    ; [ebp - 8] - начало предложения
    ; [ebp - 12] - количество знаков препинания в предложении
    ; [ebp - 16] - конец предложения
    ; [ebp - 20] - указатель на массив пар или троек

    sub esp, 24

    push ebx
    push esi
    push edi

    ;
    ; В регистре ebx будем сохранять текущий размер полученного  массива
    ; в esi
    ; в edi будем хранить текущий адрес массива
    ;

    mov ebx, 0

    mov dword ptr [ebp - 4], 0 ; размер выделенной памяти
    mov dword ptr [ebp - 8], 0 ; адрес начала предложения
    mov dword ptr [ebp - 12], 0 ; количество знаков препинания
    mov dword ptr [ebp - 16], 0 ; адрес конца предложения
    mov dword ptr [ebp - 20], 0 ; адрес нового массива пар или троек
    mov dword ptr [ebp - 24], 0 ; для указателя

    mov esi, 0

    mov ecx, 0

    mov edi, [ebp + 16] ; поместили адрес начала текста
;
;     outintln [ebp + 8]
;     outintln [ebp + 12]
;     outintln [ebp + 16]
;     outintln [ebp + 20]
;
;     outstrln ""Goyda!!""


; tag_before_start:
;     ;помещаем в [ebp - 8] адрес начала предложения
;     mov dword ptr [ebp - 8], ecx

find_punkt_marks:
    mov edi, [ebp + 16]

    cmp ecx, [ebp + 20]
    jae after_read_elems_of_text_loop

;     outstrln ""we print some shit""
;     outcharln byte ptr [edi + 1 * ecx]
;     outintln byte ptr [edi + 1 * ecx]

    cmp byte ptr [edi + 1 * ecx], ','
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], '-'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], ':'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], '('
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], ')'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], '!'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], '?'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], ';'
    je we_got_punkt_mark

    cmp byte ptr [edi + 1 * ecx], '.'
    je dot

    inc ecx

    jmp find_punkt_marks

    ;если наткнулись на пунктуационный знак, то прибавляем один
    we_got_punkt_mark:
        inc dword ptr [ebp - 12]
        inc ecx
;         outstrln ""Its ecx in we_got_punkt_mark""
;         outintln ecx
        jmp find_punkt_marks

    dot:
        outstrln ""Sentence has ended""
        outstr ""Print ECX - adress of the sentence ""
        outintln ecx
        outintln dword ptr [ebp - 12]

        mov edi, [ebp - 20] ; указатель на начало массива троек

        inc ecx
        mov dword ptr [ebp - 16], ecx ; [ebp - 16] - адрес конца предложения (относительно начала текста)


        cmp ebx, [ebp - 4]
        jb enough_memory
        outstrln ""Allocation mem in main part""

        mov eax, 12
        mul ebx
        add eax, ALLONG_SIZE * 12

        jc process_main_part_overflow

        add dword ptr [ebp - 4], ALLONG_SIZE

        push ebx

        outstr ""New memory allocation size: ""
        outintln eax

        new eax
        cmp eax, 0
        je process_main_part_out_of_mem

        outstr ""New pointer to array: ""
        outintln eax

        outstr ""Old pointer to array: ""
        outintln edi

        pop ebx

        mov ecx, 0

    copy_array_pair_loop:
        cmp ecx, ebx
        jae after_copying_array
        push esi
        push eax

        mov eax, 12
        mul ecx
        mov esi, eax
        pop eax

        mov edx, [edi + esi]
        mov [eax + esi], edx

        mov edx, [edi + esi + 4]
        mov [eax + esi + 4], edx

        mov edx, [edi + esi + 8]
        mov [eax + esi + 8], edx

        pop esi

        inc ecx

        jmp copy_array_pair_loop

    after_copying_array:
;         outstrln ""we print new adreess""
;         outintln eax

        xchg eax, edi

;         outstrln ""we print new adreess""
;         outintln edi

        cmp eax, 0
        je enough_memory

        push ebx
        push ecx
        push edi
        dispose eax
        pop edi
        pop ecx
        pop ebx

    enough_memory:
;         outstrln ""we have enough mem""
        mov ecx, dword ptr [ebp - 16]
        mov eax, 12
        mul ebx
        push esi

        mov esi, [ebp - 12] ; в esi поместили число знаков препинания
        mov [edi + eax], esi

        mov [ebp - 12], dword ptr 0 ; обнуляем число знаков препинания
;         outstrln ""We print the number of punkt""
;         outintln esi

        mov esi, [ebp - 8] ; в esi поместили адрес начала предложения
        mov [edi + eax + 4], esi
;         outstrln ""We print the adress begin""
;         outintln esi

        mov esi, [ebp - 16] ;в esi поместили конец предложения
        mov [edi + eax + 8], esi
;         outstrln ""We print the adress end""
;         outintln esi

        pop esi
        inc ebx

        mov dword ptr [ebp - 20], edi

        mov dword ptr [ebp - 8], ecx

        mov dword ptr [ebp - 24], edi

        jmp find_punkt_marks

    after_read_elems_of_text_loop:

        newline
        outstrln ""Finish of creating array of triples""

        mov edi, dword ptr [ebp - 24]
    ;
    ; normal finishing
    ;

    ;
    ; возвращаем адрес массива
    ;
        mov edx, [ebp + 8]
        mov [edx], edi

    ;
    ; возвращаем размер массива
    ;
        mov edx, [ebp + 12]
        mov [edx], ebx

        outstr ""size of arr: ""
        outintln ebx

        pop edi
        pop esi
        pop ebx

        mov eax, 0

        mov esp, ebp
        pop ebp
        ret 4 + 4 + 4 + 4


    process_main_part_overflow:

        outstrln ""We have overflow!""

        dispose edi ; чистим выделенную память
        pop edi
        pop esi
        pop ebx

        mov eax, 1

        mov [ebp - 12], dword ptr 0

        mov esp, ebp
        pop ebp
        ret 4 + 4 + 4 + 4

    process_main_part_out_of_mem:
        dispose edi ; чистим выделенную память
        pop edi
        pop esi
        pop ebx

        mov eax, 2

        mov [ebp - 12], dword ptr 0

        mov esp, ebp
        pop ebp
        ret 4 + 4 + 4 + 4

main_part endp

print_sentence_array proc

    push ebp
    mov ebp, esp
    push edi

    mov edi, [ebp + 8]  ; arr_pointer_pair
    mov ebx, [ebp + 16] ; arr_pointer

    mov ecx, 0
    mov eax, 0

    outstrln ""Process of printing array of pairs:""
    newline

loop_print_mas:

    cmp ecx, [ebp + 12]
    jae after_loop_print_mas

    mov eax, 12
    mul ecx

    outstr ""Size: ""
    outintln dword ptr [edi + eax]
    mov edx, dword ptr [edi + eax + 4]

print_mas:

    cmp edx, [edi + eax + 8]
;     outintln dword ptr [edi + eax + 4]
;     outintln dword ptr [edi + eax + 4]
    jae next_print
    outchar byte ptr [ebx + edx]
    inc edx
    jmp print_mas

next_print:

    inc ecx
    newline
    newline
    jmp loop_print_mas

after_loop_print_mas:

    pop edi
    pop ebp
    ret 4 + 4 + 4
print_sentence_array endp

; def InsertionSort(A):
;     for i in range(1, len(A)):
;         # В new_elem сохранили значение A[i]
;         new_elem = A[i]
;         # Начиная с элемента A[i - 1]
;         j = i - 1
;         # все элементы, которые больше new_elem
;         while j >= 0 and A[j] > new_elem:
;             # сдвигаем вправо на 1
;             A[j + 1] = A[j]
;             j -= 1
;         # На свободное место записываем new_elem
;         A[j + 1] = new_elem

insertionSort proc

    push ebp
    mov  ebp, esp

    sub esp, 8

    push ebx
    push esi
    push edi
    push edx

    ;ebp + 8    указатель на массив
    ;ebp + 12   число элементов в массиве

    ; установили есх на число элементов

    ; установили есх на последний элемент массива
    mov eax, dword ptr [ebp + 12] ; количество элементов массива пар
    mov ecx, 12 ; 12 * [ebp + 12]
    mul ecx
    mov ecx, eax

    mov eax, 0          ; eax = 'i'
    xor ebx, ebx        ; ebx = 'j'
    mov esi, dword ptr [ebp + 8]    ; esi - адрес массива

    mov dword ptr [esp - 4], 0 ; адрес начала
    mov dword ptr [esp - 8], 0 ; адрес конца

    forloop:
        ;If 'i' >= the number of items, exit the loop
        cmp eax, ecx
        jge endloop

        ; сохраняем наше значение количества элементов
        push ecx

        ;сохраним в есх числовое значение key
        mov ecx, dword ptr [esi + eax]

        mov edx, dword ptr [esi + eax + 4]
        mov dword ptr [esp - 4], edx

        mov edx, dword ptr [esi + eax + 8]
        mov dword ptr [esp - 8], edx

        ;j = i-1
        mov ebx, eax
        sub ebx, 12

        whileloop:
            ;если j < 0, покидаем цикл
            cmp ebx, 0
            jl endwhile

            ;если array[j] <= key, покидаем цикл
            cmp dword ptr [esi + ebx], ecx
            jle endwhile

            mov edx, dword ptr [esi + ebx]
            mov dword ptr [esi + ebx + 12], edx

            mov edx, dword ptr [esi + ebx + 4]
            mov dword ptr [esi + ebx + 4 + 12], edx

            mov edx, dword ptr [esi + ebx + 8]
            mov dword ptr [esi + ebx + 8 + 12], edx

            ;j--
            sub ebx, 12

            ;Go back to the top of this loop
            jmp whileloop

        endwhile:

        ;array[j+1] = key
        mov dword ptr [esi + ebx + 12], ecx

        mov edx, [esp - 4]
        mov dword ptr [esi + ebx + 12 + 4], edx

        mov edx, [esp - 8]
        mov dword ptr [esi + ebx + 12 + 8], edx
        ;i++
        add eax, 12

        ;restore our ""number of items"" value
        pop ecx

        jmp forloop

    endloop:

    pop edx
    pop edi
    pop esi
    pop ebx

    mov esp, ebp
    pop ebp

    ret 4 + 4
insertionSort endp




start:

   push offset array_size
   push offset array_pointer
   call read_array

   outstr ""array read, size: ""
   outintln array_size

   push array_size
   push array_pointer
   call print_array

   newline

   push array_size
   push array_pointer
   push offset array_size_for_pair
   push offset array_pointer_for_pair
   call main_part

   newline

   push array_pointer
   push array_size_for_pair
   push array_pointer_for_pair
   call print_sentence_array

   push array_size_for_pair
   push array_pointer_for_pair
   call insertionSort
;
   push array_pointer
   push array_size_for_pair
   push array_pointer_for_pair
   call print_sentence_array

   exit 0
end start
"
uWV79KSJ,open_optional_features,Python253,Python,Friday 10th of May 2024 02:28:38 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: open_optional_features.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script is designed to facilitate the opening of the Windows optional features settings.
It provides a quick and easy way to access these settings without manually navigating through the Windows control panel.

Requirements:
    - This script is intended for use on Windows operating systems.
    - Python must be installed on the system and accessible from the command line.

Functions:
    - run_optional_features():
      This function executes the command ""optionalfeatures"", which opens the Windows optional features settings.

Usage:
    1. Ensure Python is installed on the system.
    2. Download the open_optional_features.py script to a location on your computer.
    3. Open a command prompt or terminal window.
    4. Navigate to the directory where the script is located.
    5. Run the script by executing the command: python open_optional_features.py
    6. The Windows optional features settings will open automatically.
    7. After selecting the desired features, click ""OK"" to save the settings.
    8. You may be prompted to restart the computer now or later, but note that changes may not take effect until after a computer reset.

Additional Notes:
    - The script utilizes the os.system() function to execute the ""optionalfeatures"" command, which is the command-line interface for accessing the Windows optional features settings.
    - This script provides a convenient way to open the Windows optional features settings, particularly for users who prefer command-line interfaces or need to automate this task.
    - It's important to exercise caution when modifying optional features settings, as changes may affect the functionality and stability of the Windows operating system.
""""""

import os
import time
import ctypes

def run_optional_features():
    # Open the Windows optional features settings
    os.system(""optionalfeatures"")

if __name__ == ""__main__"":
    print(""\nOpening Optional Features...\n"")
    # Run the function to open the Windows optional features settings
    run_optional_features()
"
