id,title,username,language,date,content
cX3eN4HW,Untitled,skimono,C++,Saturday 7th of October 2023 12:58:26 PM CDT,"struct Node {
    ll key, pr;
    ll left = -1, right = -1, cnt;
    ll sz;
};
 
struct dd {
    //Djinchuriki Djubi
    vector <Node> nodes;
    ll nodesNumber = 0;
    ll kor = -1;
    ll makeNewNode(ll x) {
        nodes.push_back({ x, (int)rnd(), -1, -1, 1, 1 });
        return nodesNumber++;
    }
    ll getSZ(ll v) { return (v >= 0) ? nodes[v].sz : 0; }
    void recalculate(ll v) {
        if (v >= 0) {
            nodes[v].sz = getSZ(nodes[v].left) + getSZ(nodes[v].right) + nodes[v].cnt;
        }
    }
    bool exists(ll root, ll x) {
        ll v = root;
        while (v != -1) {
            Node& nd = nodes[v];
            if (nd.key == x)
                return true;
            else if (nd.key > x)
                v = nodes[v].left;
            else
                v = nodes[v].right;
        }
        return false;
    }
    pair <ll, ll> split(ll root, ll x) {
        if (root == -1)
            return { -1,-1 };
        if (x < nodes[root].key) {
            pair <ll, ll> p = split(nodes[root].left, x);
            nodes[root].left = p.second;
            recalculate(root);
            return { p.first, root };
        }
        else {
            pair <ll, ll> p = split(nodes[root].right, x);
            nodes[root].right = p.first;
            recalculate(root);
            return { root,p.second };
        }
    }
    ll merge(ll root1, ll root2) {
        if (root2 == -1) {
            return root1;
        }
        if (root1 == -1) {
            return root2;
        }
        if (nodes[root1].pr > nodes[root2].pr) {
            nodes[root1].right = merge(nodes[root1].right, root2);
            recalculate(root1);
            return root1;
        }
        else {
            nodes[root2].left = merge(root1, nodes[root2].left);
            recalculate(root2);
            return root2;
        }
    }
    ll insert(ll root, ll x) {
        if (exists(root, x)) {
            pair <ll, ll> p = split(root, x);
            pair <ll, ll> pp = split(p.first, x - 1);
            nodes[pp.second].cnt++;
            nodes[pp.second].sz++;
            return merge(merge(pp.first, pp.second), p.second);
        }
        else {
            ll newNode = makeNewNode(x);
            pair <ll, ll> p = split(root, x);
            return merge(p.first, merge(newNode, p.second));
        }
    }
    ll erase(ll root, ll x) {
        if (!exists(root, x)) {
            return root;
        }
        else {
            pair <ll, ll> p = split(root, x);
            pair <ll, ll> pp = split(p.first, x - 1);
            nodes[pp.second].cnt--;
            nodes[pp.second].sz--;
            if (nodes[pp.second].cnt == 0) {
                return merge(pp.first, p.second);
            }
            else {
                return merge(merge(pp.first, pp.second), p.second);
            }
        }
    }
    ll prev(ll root, ll x) {
        ll v = root, res = -inf, ans = 0;
        while (v != -1) {
            Node& nd = nodes[v];
            if (nd.key > x) {
                v = nd.left;
            }
            else {
                if (nd.key == x) {
                    ans += getSZ(nd.left);
                }
                else {
                    ans += getSZ(nd.left) + nd.cnt;
                }
                v = nd.right;
            }
        }
        return ans;
    }
};
 
struct fnw {
    vector <dd> fn;//Fenwick
    //I want to take vseros
    void build(ll n) {
        fn.resize(n + 4);
    }
    ll sump(ll r, ll x) {
        ll ans = 0;
        for (r; r > 0; r -= r & -r) {
            ans += fn[r].prev(fn[r].kor, x);
        }
        return ans;
    }
    ll sum(ll l, ll r, ll x) {
        // Кол-во элементов с l to r меньших x
        return sump(r, x) - sump(l - 1, x);
    }
    void add(ll r, ll val) {
        for (r; r < fn.size(); r += r & -r) {
            if (val > 0) {
                fn[r].kor = fn[r].insert(fn[r].kor, val);
            }
            else {
                fn[r].kor = fn[r].erase(fn[r].kor, -val);
            }
        }
    }
};"
KVrizZ6J,mv neg to start myver,STANAANDREY,C,Saturday 7th of October 2023 12:57:34 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#define NMAX 101

void swap(int* a, int* b) {
	int tmp = *a;
	*a = *b;
	*b = tmp;
}

void moveNegsToStart(int n, int arr[]) {
	int j = 0;
	while (arr[j] < 0) {
		j++;
	}
	for (int i = j + 1; i < n; i++) {
		if (arr[i] < 0) {
			swap(&arr[i], &arr[j]);
			j++;
			while (arr[j] < 0) {
				j++;
			}
		}
	}
}

int main(void) {
	int n;
	assert(scanf_s(""%d"", &n));
	static int arr[NMAX];
	for (int i = 0; i < n; i++) {
		assert(scanf_s(""%d"", &arr[i]));
	}
	moveNegsToStart(n, arr);
	for (int i = 0; i < n; i++) {
		printf(""%d "", arr[i]);
	}
	putchar('\n');
	return 0;
}"
uBbm0X5T,dustCrafting,mitgobla,Lua,Saturday 7th of October 2023 12:23:24 PM CDT,"-- Setup by facing a glass block
-- Turn until facing the glass block

function turnToGlass()
    success, data = turtle.inspect()
    if success then
        while data.name ~= ""minecraft:glass"" do
            turtle.turnRight()
            success, data = turtle.inspect()
        end
    end
end

turnToGlass()

-- We are now facing the glass block

function getNewHammer()
    turnToGlass()
    turtle.select(1)
    turtle.turnLeft()
    -- wait until we have a hammer
    while turtle.getItemCount(1) == 0 do
        turtle.suck()
        sleep(1)
    end
    turtle.turnRight()
end

while true do
    -- First check if we have a copper hammer
    if turtle.getItemCount(1) == 0 then
        getNewHammer()
    end

    -- Now grab ores from the barrel. These are behind the turtle
    turtle.turnLeft()
    turtle.turnLeft()
    turtle.select(2)
    turtle.suck()

    -- Now craft the ores into dust
    turtle.craft()

    -- Now put dust in the barrel, which is to the right of the glass block
    turtle.turnLeft()

    for i = 2, 16 do
        turtle.select(i)
        turtle.drop()
    end

    turnToGlass()
end"
uy8Fw0UL,5,Lucian_Adrian,C,Saturday 7th of October 2023 12:16:48 PM CDT,"#include <stdio.h>

int numarMaximCutiiCubice(int inaltime) {
    // Numărul maxim de cutii este egal cu înălțimea camerei
    return inaltime;
}

int main() {
    int inaltime;
    
    printf(""Introduceti inaltimea camerei: "");
    scanf(""%d"", &inaltime);

    int rezultat = numarMaximCutiiCubice(inaltime);
    printf(""Numarul maxim de cutii cubice de latura 1 care pot incapea in camera este: %d\n"", rezultat);

    return 0;
}"
X4jCyVVM,4b,Lucian_Adrian,C,Saturday 7th of October 2023 12:13:00 PM CDT,"#include <stdio.h>

int numarCutiiCubice(int inaltime) {
    // Numărul de cutii este egal cu înălțimea camerei
    return inaltime;
}

int main() {
    int inaltime;
    
    printf(""Introduceti inaltimea camerei: "");
    scanf(""%d"", &inaltime);

    int rezultat = numarCutiiCubice(inaltime);
    printf(""Numarul de cutii cubice de latura 1 care pot fi suprapuse in camera este: %d\n"", rezultat);

    return 0;
}
"
ipTN6hyD,4a,Lucian_Adrian,C,Saturday 7th of October 2023 12:11:57 PM CDT,"#include <stdio.h>

// Functia care returneaza cate cutii cubice de latura 1 pot fi suprapuse intr-o incapere de inaltime h
int numarCutii(int h) {
    return h;
}

int main() {
    int h;

    printf(""Introduceti inaltimea incaperii (h): "");
    scanf(""%d"", &h);

    printf(""In incaperea de inaltime %d pot fi suprapuse %d cutii cubice de latura 1.\n"", h, numarCutii(h));
    
    return 0;
}"
HFrDcSMR,Untitled,Tanisha25,C++,Saturday 7th of October 2023 12:03:25 PM CDT,"//Tanisha Pareek.
// a=97, z=122, A=65, Z=90, '0'-48, '9'-57

#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

#define pb push_back

typedef long long ll;
typedef vector<ll> vll;
typedef tree<ll, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update> pbds; // find_by_order(k)--(returns iterator of ele. at index k), order_of_key(k)--(returns index of k if k was present in set.)
typedef tree<ll, null_type, less_equal<int>, rb_tree_tag,tree_order_statistics_node_update> multipbds;

//--CONSTANTS--
const ll mod = 1e9 + 7;

//--USEFUL FUNCTIONS--
bool    isPalindrome(string str){ll low = 0,high = str.length() - 1;while (low < high){if (str[low] != str[high])return false;low++,high--;}return true;}
bool    isPrime(ll n){for(ll i=2;(i*i)<=n;i++){if((n%i) == 0) return false;}return true;}
ll      highestSmallerPower(ll num, ll p){ll cnt=0,curr=1;while((curr*p)<=num) curr*=p,cnt++;return cnt;} // gives largest power value(say x) such that p^x <= num
ll      modulerExpo(ll num,ll p,ll m){ll ans=1;num%=m;while(p){if(p&1) ans*=num;ans%=m;p = p>>1;num*=num;num%=m;}return ans;} // (num^p)%m
ll      phin(ll n){ll result = n;for(ll i=2;(i*i)<=n;i++){if(n%i == 0){while(n%i == 0) n/=i;result -= result/i;}}if(n>1) result -= (result/n);return result;}
vll primes;
void countPrimes(ll n)
{
	vector<bool> is_prime((n+1),true);
	is_prime[0] = is_prime[1] = false;

	for(ll i=2;i<=n;i++)
	{
		if((is_prime[i])&&((i*i)<=n))
		{
			for(ll j=(i*i);j<=n;j+=i) is_prime[j]=false;
		}
	}

	for(ll i=1;i<=n;i++)
	{
		if(is_prime[i]) primes.pb(i);
	}
	return;
}
ll inverse(ll i, ll m){
	if(i==1) return 1;
	return (m - ((m/i)*inverse(m%i,m))%m+m)%m;
}

// ---- Solution ----
void bfs(ll source, vector<vll> &shortestPath, vector<vll> &graph, ll n)
{
	queue<ll> q;
	q.push(source);
	vll vis(n+1,0);
	shortestPath[source][source] = 0;
	vis[source] = 1;

	while(!q.empty())
	{
		ll x = q.front();
		q.pop();

		for(auto j:graph[x])
		{
			if(vis[j] == 1) continue;
			vis[j] = 1;
			q.push(j);
			shortestPath[source][j] = shortestPath[source][x] + 1;
		}
	}
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen(""input.txt"", ""r"", stdin);
	freopen(""output.txt"", ""w"", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	//Please read the question carefully again!

	ll n;
	cin>>n;

	vector<vll> graph(n+1,vll());
	vll isSelfLoop(n+1,0);
	for(ll i=1;i<=n;i++)
	{
		ll x;
		for(ll j=1;j<=n;j++)
		{
			cin>>x;
			if(x == 1) graph[i].pb(j);
			if((x==1)&&(j==i)) isSelfLoop[i]++;
		} 
	}

	vector<vll> shortestPath(n+1,vll(n+1,1e6));

	for(ll i=1;i<=n;i++)
	{
		bfs(i,shortestPath,graph,n);
		// for(ll j=1;j<=n;j++) cout<<shortestPath[i][j]<<"" "";
		// cout<<""\n"";
	}
	for(ll i=1;i<=n;i++)
	{
		if(isSelfLoop[i] == 1) cout<<""1\n"";
		else
		{
			ll mini = LLONG_MAX;
			for(ll j=1;j<=n;j++)
			{
				if(j == i) continue;
				mini = min(mini, (shortestPath[i][j] + shortestPath[j][i]));
			}
			
			if(mini >= 1e6) cout<<""NO WAY\n"";
			else cout<<mini<<""\n"";
		}
	}
	return 0;
}"
MeAVxXGC,2b,Lucian_Adrian,C,Saturday 7th of October 2023 11:50:48 AM CDT,"#include <stdio.h>


int ultimaCifraSuma(int numar1, int numar2) {
    int suma = numar1 + numar2;
    return suma % 10;
}

int main() {
    int numar1, numar2, numar3;

    printf(""Introduceti primul numar: "");
    scanf(""%d"", &numar1);

    printf(""Introduceti al doilea numar: "");
    scanf(""%d"", &numar2);

    printf(""Introduceti al treilea numar: "");
    scanf(""%d"", &numar3);

  
    int sumaTemp = ultimaCifraSuma(numar1, numar2);
    int sumaFinala = ultimaCifraSuma(sumaTemp, numar3);

    printf(""Ultima cifra a sumei numerelor %d, %d si %d este: %d\n"", numar1, numar2, numar3, sumaFinala);
    
    return 0;
}
"
5KWJ8qqW,2a,Lucian_Adrian,C,Saturday 7th of October 2023 11:50:17 AM CDT,"#include <stdio.h>

int ultimaCifraSuma(int numar1, int numar2) {
    int suma = numar1 + numar2;
    int ultimaCifra = suma % 10;
    return ultimaCifra;
}

int main() {
    int numar1, numar2, numar3;
    
    printf(""Introduceti primul numar: "");
    scanf(""%d"", &numar1);

    printf(""Introduceti al doilea numar: "");
    scanf(""%d"", &numar2);

    printf(""Introduceti al treilea numar: "");
    scanf(""%d"", &numar3);

    int suma1_2 = ultimaCifraSuma(numar1, numar2);
    int suma1_2_3 = ultimaCifraSuma(suma1_2, numar3);

    printf(""Ultima cifra a sumei celor trei numere este: %d\n"", suma1_2_3);

    return 0;
}
"
4d2gAedm,1b,Lucian_Adrian,C,Saturday 7th of October 2023 11:46:53 AM CDT,"#include <stdio.h>


int ultimaCifraSuma(int numar1, int numar2) {
    int suma = numar1 + numar2;
    return suma % 10;
}

int main() {
    int numar1, numar2;

    printf(""Introduceti primul numar: "");
    scanf(""%d"", &numar1);

    printf(""Introduceti al doilea numar: "");
    scanf(""%d"", &numar2);

    printf(""Ultima cifra a sumei numerelor %d si %d este: %d\n"", numar1, numar2, ultimaCifraSuma(numar1, numar2));
    
    return 0;
}"
SZ0MZbkj,1a,Lucian_Adrian,C,Saturday 7th of October 2023 11:46:11 AM CDT,"#include <stdio.h>

int ultimaCifraSuma(int numar1, int numar2) {

    int suma = numar1 + numar2;


    int ultimaCifra = suma % 10;

    return ultimaCifra;
}

int main() {
    int numar1, numar2;
    
    printf(""Introduceti primul numar: "");
    scanf(""%d"", &numar1);

    printf(""Introduceti al doilea numar: "");
    scanf(""%d"", &numar2);

    int rezultat = ultimaCifraSuma(numar1, numar2);
    printf(""Ultima cifra a sumei este: %d\n"", rezultat);

    return 0;
}"
BtUAkF8m,Untitled,drakon-firestone,C#,Saturday 7th of October 2023 11:25:28 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lekcja3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int a = 5;
            int b = 10;
            int c = 4;

            // dodawanie
            int suma = a + b + c;
            Console.WriteLine(suma); // 19

            // odejmowanie 
            int roznica = b - c;
            Console.WriteLine(roznica); // 6

            // mnożenie
            int mnozenie = a * b;
            Console.WriteLine(mnozenie); // 50

            // dzielenie
            int dzielenie = b / a;
            Console.WriteLine(dzielenie); // 2

            // dzielenie modulo (reszta z dzielenia)
            // b % c => 10 / 4 = 2 r. 2 => b % c = 10 % 4 = 2
            // 13 % 5 = 3 bo 13 / 5 = 2 r 3
            // 40 % 13 = 1 bo 40 / 13 = 3 r 1
            // 15 % 5 = 0 bo 15 / 5 = 3 r 0
            int modulo = b % c;
            Console.WriteLine(modulo);

            // a = 5, b = 10, c = 4
            int dzialanie = (a + b * c) / c;
            Console.WriteLine(dzialanie);

            // 21 % 8 = 5
            // 33 % 4 = 1
            // 17 % 10 = 7
            // 7 % 1 = 0


            Console.WriteLine(""Podaj imię: "");
            //string imie = Console.ReadLine();

            


            // PARSOWANIE - zamiana tekstu na inny typ
            int wzrost = int.Parse(""175"");
            Console.WriteLine(""Podaj wiek: "");
            //int wiek = int.Parse(Console.ReadLine());


            int x = 1;
            int y = 2;
            float z = x / y;
            Console.WriteLine(z);

            
            float x2 = x;
            // float = float  /  int
            float z2 =  x2   /  y;
            Console.WriteLine(z2);


            double potega = Math.Pow(2, 3); // 2 * 2 * 2 = 8

            double pierw_kwad = Math.Sqrt(9); // 3




            Console.ReadLine();
        }
    }
}
"
tynGEpnL,Nigerian scammers [7-10-1/2023],bombaires,HTML,Saturday 7th of October 2023 10:59:36 AM CDT,"<a href=""mailto:poast@email.com"">poast@email.com</a>
<a href=""mailto:burtondy@gmail.com"">burtondy@gmail.com</a>
<a href=""mailto:bu.rt.ond.y@gmail.com"">bu.rt.ond.y@gmail.com</a>
<a href=""mailto:bur.t.o.n.dy@gmail.com"">bur.t.o.n.dy@gmail.com</a>
<a href=""mailto:b.ur.ton.d.y@gmail.com"">b.ur.ton.d.y@gmail.com</a>
<a href=""mailto:burton.dy@gmail.com"">burton.dy@gmail.com</a>
<a href=""mailto:bur.tondy@gmail.com"">bur.tondy@gmail.com</a>
<a href=""mailto:bu.r.to.ndy@gmail.com"">bu.r.to.ndy@gmail.com</a>
<a href=""mailto:b.urto.nd.y@gmail.com"">b.urto.nd.y@gmail.com</a>
<a href=""mailto:b.urt.o.ndy@gmail.com"">b.urt.o.ndy@gmail.com</a>
<a href=""mailto:bur.to.n.dy@gmail.com"">bur.to.n.dy@gmail.com</a>
<a href=""mailto:b.u.rt.on.dy@gmail.com"">b.u.rt.on.dy@gmail.com</a>
<a href=""mailto:b.u.r.t.o.ndy@gmail.com"">b.u.r.t.o.ndy@gmail.com</a>
<a href=""mailto:bur.t.o.n.d.y@gmail.com"">bur.t.o.n.d.y@gmail.com</a>
<a href=""mailto:bu.r.t.ond.y@gmail.com"">bu.r.t.ond.y@gmail.com</a>
<a href=""mailto:bu.r.t.o.n.d.y@gmail.com"">bu.r.t.o.n.d.y@gmail.com</a>
<a href=""mailto:b.ur.t.o.ndy@gmail.com"">b.ur.t.o.ndy@gmail.com</a>
<a href=""mailto:bur.t.ond.y@gmail.com"">bur.t.ond.y@gmail.com</a>
<a href=""mailto:b.u.r.tondy@gmail.com"">b.u.r.tondy@gmail.com</a>
<a href=""mailto:bu.r.tondy@gmail.com"">bu.r.tondy@gmail.com</a>
<a href=""mailto:bu.r.to.n.d.y@gmail.com"">bu.r.to.n.d.y@gmail.com</a>
<a href=""mailto:bu.r.to.nd.y@gmail.com"">bu.r.to.nd.y@gmail.com</a>
<a href=""mailto:bu.rtondy@gmail.com"">bu.rtondy@gmail.com</a>
<a href=""mailto:b.u.r.t.on.d.y@gmail.com"">b.u.r.t.on.d.y@gmail.com</a>
<a href=""mailto:b.urtondy@gmail.com"">b.urtondy@gmail.com</a>
<a href=""mailto:burtond.y@gmail.com"">burtond.y@gmail.com</a>
<a href=""mailto:b.u.rton.dy@gmail.com"">b.u.rton.dy@gmail.com</a>
<a href=""mailto:bur.ton.d.y@gmail.com"">bur.ton.d.y@gmail.com</a>
<a href=""mailto:b.u.r.t.on.dy@gmail.com"">b.u.r.t.on.dy@gmail.com</a>
<a href=""mailto:b.urt.ondy@gmail.com"">b.urt.ondy@gmail.com</a>
<a href=""mailto:burt.ondy@gmail.com"">burt.ondy@gmail.com</a>
<a href=""mailto:b.ur.t.ondy@gmail.com"">b.ur.t.ondy@gmail.com</a>
<a href=""mailto:bur.ton.dy@gmail.com"">bur.ton.dy@gmail.com</a>
<a href=""mailto:bu.r.t.o.ndy@gmail.com"">bu.r.t.o.ndy@gmail.com</a>
<a href=""mailto:bur.tond.y@gmail.com"">bur.tond.y@gmail.com</a>
<a href=""mailto:bu.r.t.o.n.dy@gmail.com"">bu.r.t.o.n.dy@gmail.com</a>
<a href=""mailto:bu.rt.o.n.d.y@gmail.com"">bu.rt.o.n.d.y@gmail.com</a>
<a href=""mailto:b.u.rt.ond.y@gmail.com"">b.u.rt.ond.y@gmail.com</a>
<a href=""mailto:bur.t.o.ndy@gmail.com"">bur.t.o.ndy@gmail.com</a>
<a href=""mailto:b.u.r.tond.y@gmail.com"">b.u.r.tond.y@gmail.com</a>
<a href=""mailto:bu.rto.n.dy@gmail.com"">bu.rto.n.dy@gmail.com</a>
<a href=""mailto:b.u.r.t.o.n.d.y@gmail.com"">b.u.r.t.o.n.d.y@gmail.com</a>
<a href=""mailto:bu.rto.ndy@gmail.com"">bu.rto.ndy@gmail.com</a>
<a href=""mailto:bu.r.t.on.d.y@gmail.com"">bu.r.t.on.d.y@gmail.com</a>
<a href=""mailto:b.u.rtondy@gmail.com"">b.u.rtondy@gmail.com</a>
<a href=""mailto:bur.to.n.d.y@gmail.com"">bur.to.n.d.y@gmail.com</a>
<a href=""mailto:burt.ond.y@gmail.com"">burt.ond.y@gmail.com</a>
<a href=""mailto:b.u.r.to.n.dy@gmail.com"">b.u.r.to.n.dy@gmail.com</a>
<a href=""mailto:b.urto.n.dy@gmail.com"">b.urto.n.dy@gmail.com</a>
<a href=""mailto:bu.rto.n.d.y@gmail.com"">bu.rto.n.d.y@gmail.com</a>
<a href=""mailto:b.u.r.t.o.n.dy@gmail.com"">b.u.r.t.o.n.dy@gmail.com</a>
<a href=""mailto:bu.rt.ondy@gmail.com"">bu.rt.ondy@gmail.com</a>
<a href=""mailto:bu.rt.on.dy@gmail.com"">bu.rt.on.dy@gmail.com</a>
<a href=""mailto:b.u.r.to.ndy@gmail.com"">b.u.r.to.ndy@gmail.com</a>
<a href=""mailto:bu.r.t.on.dy@gmail.com"">bu.r.t.on.dy@gmail.com</a>
<a href=""mailto:b.ur.t.ond.y@gmail.com"">b.ur.t.ond.y@gmail.com</a>
<a href=""mailto:b.ur.ton.dy@gmail.com"">b.ur.ton.dy@gmail.com</a>
<a href=""mailto:b.ur.to.n.dy@gmail.com"">b.ur.to.n.dy@gmail.com</a>
<a href=""mailto:b.ur.t.o.nd.y@gmail.com"">b.ur.t.o.nd.y@gmail.com</a>
<a href=""mailto:b.u.rt.o.n.dy@gmail.com"">b.u.rt.o.n.dy@gmail.com</a>
<a href=""mailto:b.u.r.t.o.nd.y@gmail.com"">b.u.r.t.o.nd.y@gmail.com</a>
<a href=""mailto:b.u.r.to.nd.y@gmail.com"">b.u.r.to.nd.y@gmail.com</a>
<a href=""mailto:b.u.rt.o.ndy@gmail.com"">b.u.rt.o.ndy@gmail.com</a>
<a href=""mailto:burto.n.dy@gmail.com"">burto.n.dy@gmail.com</a>
<a href=""mailto:b.ur.tond.y@gmail.com"">b.ur.tond.y@gmail.com</a>
<a href=""mailto:bu.r.ton.d.y@gmail.com"">bu.r.ton.d.y@gmail.com</a>
<a href=""mailto:b.ur.t.o.n.dy@gmail.com"">b.ur.t.o.n.dy@gmail.com</a>
<a href=""mailto:b.urt.on.dy@gmail.com"">b.urt.on.dy@gmail.com</a>
<a href=""mailto:bu.rt.o.ndy@gmail.com"">bu.rt.o.ndy@gmail.com</a>
<a href=""mailto:bu.rt.on.d.y@gmail.com"">bu.rt.on.d.y@gmail.com</a>
<a href=""mailto:bu.rt.o.nd.y@gmail.com"">bu.rt.o.nd.y@gmail.com</a>
<a href=""mailto:bu.r.to.n.dy@gmail.com"">bu.r.to.n.dy@gmail.com</a>
<a href=""mailto:b.u.rto.n.d.y@gmail.com"">b.u.rto.n.d.y@gmail.com</a>
<a href=""mailto:b.urt.on.d.y@gmail.com"">b.urt.on.d.y@gmail.com</a>
<a href=""mailto:bur.t.ondy@gmail.com"">bur.t.ondy@gmail.com</a>
<a href=""mailto:b.ur.to.n.d.y@gmail.com"">b.ur.to.n.d.y@gmail.com</a>
<a href=""mailto:b.u.rto.ndy@gmail.com"">b.u.rto.ndy@gmail.com</a>
<a href=""mailto:bur.t.on.dy@gmail.com"">bur.t.on.dy@gmail.com</a>
<a href=""mailto:bu.r.t.ondy@gmail.com"">bu.r.t.ondy@gmail.com</a>
<a href=""mailto:bu.r.tond.y@gmail.com"">bu.r.tond.y@gmail.com</a>
<a href=""mailto:burto.n.d.y@gmail.com"">burto.n.d.y@gmail.com</a>
<a href=""mailto:burt.o.n.d.y@gmail.com"">burt.o.n.d.y@gmail.com</a>
<a href=""mailto:bur.t.on.d.y@gmail.com"">bur.t.on.d.y@gmail.com</a>
<a href=""mailto:burt.on.dy@gmail.com"">burt.on.dy@gmail.com</a>
<a href=""mailto:b.u.r.ton.d.y@gmail.com"">b.u.r.ton.d.y@gmail.com</a>
<a href=""mailto:b.u.rt.o.n.d.y@gmail.com"">b.u.rt.o.n.d.y@gmail.com</a>
<a href=""mailto:b.u.rto.n.dy@gmail.com"">b.u.rto.n.dy@gmail.com</a>
<a href=""mailto:b.urt.o.nd.y@gmail.com"">b.urt.o.nd.y@gmail.com</a>
<a href=""mailto:burt.on.d.y@gmail.com"">burt.on.d.y@gmail.com</a>
<a href=""mailto:b.u.r.t.ond.y@gmail.com"">b.u.r.t.ond.y@gmail.com</a>
<a href=""mailto:b.u.rtond.y@gmail.com"">b.u.rtond.y@gmail.com</a>
<a href=""mailto:b.ur.t.on.d.y@gmail.com"">b.ur.t.on.d.y@gmail.com</a>
<a href=""mailto:b.urt.o.n.dy@gmail.com"">b.urt.o.n.dy@gmail.com</a>
<a href=""mailto:b.urton.d.y@gmail.com"">b.urton.d.y@gmail.com</a>
<a href=""mailto:b.urt.ond.y@gmail.com"">b.urt.ond.y@gmail.com</a>
<a href=""mailto:burton.d.y@gmail.com"">burton.d.y@gmail.com</a>
<a href=""mailto:b.u.rt.on.d.y@gmail.com"">b.u.rt.on.d.y@gmail.com</a>
<a href=""mailto:burt.o.ndy@gmail.com"">burt.o.ndy@gmail.com</a>
<a href=""mailto:b.u.r.to.n.d.y@gmail.com"">b.u.r.to.n.d.y@gmail.com</a>
<a href=""mailto:b.urton.dy@gmail.com"">b.urton.dy@gmail.com</a>
<a href=""mailto:bu.rton.dy@gmail.com"">bu.rton.dy@gmail.com</a>
<a href=""mailto:b.u.rton.d.y@gmail.com"">b.u.rton.d.y@gmail.com</a>
<a href=""mailto:b.u.r.t.ondy@gmail.com"">b.u.r.t.ondy@gmail.com</a>
<a href=""mailto:burt.o.nd.y@gmail.com"">burt.o.nd.y@gmail.com</a>
<a href=""mailto:bu.r.ton.dy@gmail.com"">bu.r.ton.dy@gmail.com</a>
<a href=""mailto:bu.rt.o.n.dy@gmail.com"">bu.rt.o.n.dy@gmail.com</a>
<a href=""mailto:b.ur.tondy@gmail.com"">b.ur.tondy@gmail.com</a>
<a href=""mailto:bur.to.ndy@gmail.com"">bur.to.ndy@gmail.com</a>
<a href=""mailto:b.urt.o.n.d.y@gmail.com"">b.urt.o.n.d.y@gmail.com</a>
<a href=""mailto:bur.t.o.nd.y@gmail.com"">bur.t.o.nd.y@gmail.com</a>
<a href=""mailto:bu.r.t.o.nd.y@gmail.com"">bu.r.t.o.nd.y@gmail.com</a>
<a href=""mailto:b.urtond.y@gmail.com"">b.urtond.y@gmail.com</a>
<a href=""mailto:b.ur.to.nd.y@gmail.com"">b.ur.to.nd.y@gmail.com</a>
<a href=""mailto:b.u.rto.nd.y@gmail.com"">b.u.rto.nd.y@gmail.com</a>
<a href=""mailto:burt.o.n.dy@gmail.com"">burt.o.n.dy@gmail.com</a>
<a href=""mailto:burtondy@gmail.com"">burtondy@gmail.com</a>
<a href=""mailto:bur.to.nd.y@gmail.com"">bur.to.nd.y@gmail.com</a>
<a href=""mailto:burto.ndy@gmail.com"">burto.ndy@gmail.com</a>
<a href=""mailto:burto.nd.y@gmail.com"">burto.nd.y@gmail.com</a>
<a href=""mailto:bu.rtond.y@gmail.com"">bu.rtond.y@gmail.com</a>
<a href=""mailto:bu.rton.d.y@gmail.com"">bu.rton.d.y@gmail.com</a>
<a href=""mailto:b.ur.t.on.dy@gmail.com"">b.ur.t.on.dy@gmail.com</a>
<a href=""mailto:b.u.r.ton.dy@gmail.com"">b.u.r.ton.dy@gmail.com</a>
<a href=""mailto:b.ur.t.o.n.d.y@gmail.com"">b.ur.t.o.n.d.y@gmail.com</a>
<a href=""mailto:b.urto.ndy@gmail.com"">b.urto.ndy@gmail.com</a>
<a href=""mailto:b.ur.to.ndy@gmail.com"">b.ur.to.ndy@gmail.com</a>
<a href=""mailto:bu.rto.nd.y@gmail.com"">bu.rto.nd.y@gmail.com</a>
<a href=""mailto:b.u.rt.ondy@gmail.com"">b.u.rt.ondy@gmail.com</a>
<a href=""mailto:b.u.rt.o.nd.y@gmail.com"">b.u.rt.o.nd.y@gmail.com</a>
<a href=""mailto:b.urto.n.d.y@gmail.com"">b.urto.n.d.y@gmail.com</a>
<a href=""mailto:alexputilov241@gmail.com"">alexputilov241@gmail.com</a>
<a href=""mailto:al.ex.put.ilo.v.2.41@gmail.com"">al.ex.put.ilo.v.2.41@gmail.com</a>
<a href=""mailto:ale.x.p.ut.il.ov241@gmail.com"">ale.x.p.ut.il.ov241@gmail.com</a>
<a href=""mailto:al.e.xp.uti.lo.v241@gmail.com"">al.e.xp.uti.lo.v241@gmail.com</a>
<a href=""mailto:al.exp.u.tilo.v241@gmail.com"">al.exp.u.tilo.v241@gmail.com</a>
<a href=""mailto:al.exp.u.tilov.24.1@gmail.com"">al.exp.u.tilov.24.1@gmail.com</a>
<a href=""mailto:a.l.e.x.puti.lo.v.241@gmail.com"">a.l.e.x.puti.lo.v.241@gmail.com</a>
<a href=""mailto:a.lexput.ilo.v2.41@gmail.com"">a.lexput.ilo.v2.41@gmail.com</a>
<a href=""mailto:ale.x.puti.lov.2.4.1@gmail.com"">ale.x.puti.lov.2.4.1@gmail.com</a>
<a href=""mailto:ale.xpu.t.i.l.ov.2.4.1@gmail.com"">ale.xpu.t.i.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:al.e.x.p.ut.ilo.v.241@gmail.com"">al.e.x.p.ut.ilo.v.241@gmail.com</a>
<a href=""mailto:a.le.xp.ut.il.ov.2.4.1@gmail.com"">a.le.xp.ut.il.ov.2.4.1@gmail.com</a>
<a href=""mailto:al.e.xput.i.l.o.v241@gmail.com"">al.e.xput.i.l.o.v241@gmail.com</a>
<a href=""mailto:a.lexp.util.ov2.4.1@gmail.com"">a.lexp.util.ov2.4.1@gmail.com</a>
<a href=""mailto:al.ex.putilo.v.24.1@gmail.com"">al.ex.putilo.v.24.1@gmail.com</a>
<a href=""mailto:ale.x.p.u.tilo.v.2.41@gmail.com"">ale.x.p.u.tilo.v.2.41@gmail.com</a>
<a href=""mailto:al.e.xputi.l.ov2.41@gmail.com"">al.e.xputi.l.ov2.41@gmail.com</a>
<a href=""mailto:a.lex.p.ut.i.lov.2.4.1@gmail.com"">a.lex.p.ut.i.lov.2.4.1@gmail.com</a>
<a href=""mailto:a.le.xp.utilov2.4.1@gmail.com"">a.le.xp.utilov2.4.1@gmail.com</a>
<a href=""mailto:a.l.ex.pu.t.il.ov.241@gmail.com"">a.l.ex.pu.t.il.ov.241@gmail.com</a>
<a href=""mailto:a.l.e.x.put.i.l.ov2.41@gmail.com"">a.l.e.x.put.i.l.ov2.41@gmail.com</a>
<a href=""mailto:a.l.e.xpu.t.il.ov.2.41@gmail.com"">a.l.e.xpu.t.il.ov.2.41@gmail.com</a>
<a href=""mailto:a.le.xp.u.tilo.v241@gmail.com"">a.le.xp.u.tilo.v241@gmail.com</a>
<a href=""mailto:a.le.xpu.ti.l.ov.2.4.1@gmail.com"">a.le.xpu.ti.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.l.expu.t.i.l.o.v24.1@gmail.com"">a.l.expu.t.i.l.o.v24.1@gmail.com</a>
<a href=""mailto:al.e.xp.ut.ilov.2.41@gmail.com"">al.e.xp.ut.ilov.2.41@gmail.com</a>
<a href=""mailto:al.ex.p.u.t.ilo.v2.41@gmail.com"">al.ex.p.u.t.ilo.v2.41@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.ti.l.o.v241@gmail.com"">a.l.ex.p.u.ti.l.o.v241@gmail.com</a>
<a href=""mailto:a.le.xpu.til.o.v24.1@gmail.com"">a.le.xpu.til.o.v24.1@gmail.com</a>
<a href=""mailto:ale.x.putilov.24.1@gmail.com"">ale.x.putilov.24.1@gmail.com</a>
<a href=""mailto:a.l.ex.put.i.l.ov.241@gmail.com"">a.l.ex.put.i.l.ov.241@gmail.com</a>
<a href=""mailto:al.e.x.put.il.ov2.4.1@gmail.com"">al.e.x.put.il.ov2.4.1@gmail.com</a>
<a href=""mailto:a.le.x.p.ut.i.l.ov.24.1@gmail.com"">a.le.x.p.ut.i.l.ov.24.1@gmail.com</a>
<a href=""mailto:alexp.u.t.i.l.o.v24.1@gmail.com"">alexp.u.t.i.l.o.v24.1@gmail.com</a>
<a href=""mailto:a.le.xp.u.til.ov.2.41@gmail.com"">a.le.xp.u.til.ov.2.41@gmail.com</a>
<a href=""mailto:a.le.x.putilov2.4.1@gmail.com"">a.le.x.putilov2.4.1@gmail.com</a>
<a href=""mailto:al.e.xput.il.o.v24.1@gmail.com"">al.e.xput.il.o.v24.1@gmail.com</a>
<a href=""mailto:a.le.x.p.u.tilo.v.241@gmail.com"">a.le.x.p.u.tilo.v.241@gmail.com</a>
<a href=""mailto:a.lex.p.u.t.i.l.ov.2.4.1@gmail.com"">a.lex.p.u.t.i.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.t.il.ov.241@gmail.com"">a.l.e.x.p.u.t.il.ov.241@gmail.com</a>
<a href=""mailto:ale.xp.u.ti.l.o.v2.4.1@gmail.com"">ale.xp.u.ti.l.o.v2.4.1@gmail.com</a>
<a href=""mailto:alex.p.ut.i.l.o.v241@gmail.com"">alex.p.ut.i.l.o.v241@gmail.com</a>
<a href=""mailto:al.e.xput.il.ov2.41@gmail.com"">al.e.xput.il.ov2.41@gmail.com</a>
<a href=""mailto:a.lex.p.u.t.i.lo.v.241@gmail.com"">a.lex.p.u.t.i.lo.v.241@gmail.com</a>
<a href=""mailto:a.l.e.xp.uti.lo.v2.41@gmail.com"">a.l.e.xp.uti.lo.v2.41@gmail.com</a>
<a href=""mailto:al.e.x.p.u.t.il.o.v24.1@gmail.com"">al.e.x.p.u.t.il.o.v24.1@gmail.com</a>
<a href=""mailto:alex.p.ut.i.l.ov2.4.1@gmail.com"">alex.p.ut.i.l.ov2.4.1@gmail.com</a>
<a href=""mailto:al.e.xp.u.til.o.v241@gmail.com"">al.e.xp.u.til.o.v241@gmail.com</a>
<a href=""mailto:ale.xp.u.t.i.l.ov.2.4.1@gmail.com"">ale.xp.u.t.i.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.lexp.utilov24.1@gmail.com"">a.lexp.utilov24.1@gmail.com</a>
<a href=""mailto:ale.xput.ilo.v241@gmail.com"">ale.xput.ilo.v241@gmail.com</a>
<a href=""mailto:al.e.xputilo.v24.1@gmail.com"">al.e.xputilo.v24.1@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.tilov24.1@gmail.com"">a.l.ex.p.u.tilov24.1@gmail.com</a>
<a href=""mailto:a.lexp.utilov241@gmail.com"">a.lexp.utilov241@gmail.com</a>
<a href=""mailto:a.le.x.pu.t.il.o.v2.41@gmail.com"">a.le.x.pu.t.il.o.v2.41@gmail.com</a>
<a href=""mailto:a.l.e.xputi.lov24.1@gmail.com"">a.l.e.xputi.lov24.1@gmail.com</a>
<a href=""mailto:ale.xpu.tilo.v241@gmail.com"">ale.xpu.tilo.v241@gmail.com</a>
<a href=""mailto:a.l.e.x.pu.t.ilov24.1@gmail.com"">a.l.e.x.pu.t.ilov24.1@gmail.com</a>
<a href=""mailto:a.le.xput.il.o.v241@gmail.com"">a.le.xput.il.o.v241@gmail.com</a>
<a href=""mailto:al.e.xput.i.l.ov.2.41@gmail.com"">al.e.xput.i.l.ov.2.41@gmail.com</a>
<a href=""mailto:a.l.e.x.putilo.v241@gmail.com"">a.l.e.x.putilo.v241@gmail.com</a>
<a href=""mailto:al.ex.p.u.til.ov2.4.1@gmail.com"">al.ex.p.u.til.ov2.4.1@gmail.com</a>
<a href=""mailto:al.ex.p.utilo.v.2.4.1@gmail.com"">al.ex.p.utilo.v.2.4.1@gmail.com</a>
<a href=""mailto:a.lex.p.u.ti.l.ov.2.41@gmail.com"">a.lex.p.u.ti.l.ov.2.41@gmail.com</a>
<a href=""mailto:a.lexputi.l.o.v2.41@gmail.com"">a.lexputi.l.o.v2.41@gmail.com</a>
<a href=""mailto:a.l.ex.pu.t.i.lo.v.2.41@gmail.com"">a.l.ex.pu.t.i.lo.v.2.41@gmail.com</a>
<a href=""mailto:alex.pu.t.i.lo.v.2.4.1@gmail.com"">alex.pu.t.i.lo.v.2.4.1@gmail.com</a>
<a href=""mailto:alex.p.uti.lov.24.1@gmail.com"">alex.p.uti.lov.24.1@gmail.com</a>
<a href=""mailto:ale.xput.il.o.v.241@gmail.com"">ale.xput.il.o.v.241@gmail.com</a>
<a href=""mailto:a.le.xpu.til.o.v2.4.1@gmail.com"">a.le.xpu.til.o.v2.4.1@gmail.com</a>
<a href=""mailto:al.e.xpu.tilo.v24.1@gmail.com"">al.e.xpu.tilo.v24.1@gmail.com</a>
<a href=""mailto:a.le.xp.u.ti.l.o.v241@gmail.com"">a.le.xp.u.ti.l.o.v241@gmail.com</a>
<a href=""mailto:a.le.xpu.tilo.v241@gmail.com"">a.le.xpu.tilo.v241@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.t.il.o.v2.41@gmail.com"">a.l.ex.p.u.t.il.o.v2.41@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.ti.l.ov.241@gmail.com"">a.l.ex.p.u.ti.l.ov.241@gmail.com</a>
<a href=""mailto:ale.xpu.ti.lo.v.241@gmail.com"">ale.xpu.ti.lo.v.241@gmail.com</a>
<a href=""mailto:ale.xp.ut.ilo.v241@gmail.com"">ale.xp.ut.ilo.v241@gmail.com</a>
<a href=""mailto:al.ex.puti.lov.24.1@gmail.com"">al.ex.puti.lov.24.1@gmail.com</a>
<a href=""mailto:al.ex.p.uti.l.o.v.2.41@gmail.com"">al.ex.p.uti.l.o.v.2.41@gmail.com</a>
<a href=""mailto:alexp.u.til.o.v24.1@gmail.com"">alexp.u.til.o.v24.1@gmail.com</a>
<a href=""mailto:a.le.xpu.tilo.v.24.1@gmail.com"">a.le.xpu.tilo.v.24.1@gmail.com</a>
<a href=""mailto:al.e.xp.ut.il.o.v.241@gmail.com"">al.e.xp.ut.il.o.v.241@gmail.com</a>
<a href=""mailto:alex.p.ut.ilov241@gmail.com"">alex.p.ut.ilov241@gmail.com</a>
<a href=""mailto:a.lexput.i.lo.v2.4.1@gmail.com"">a.lexput.i.lo.v2.4.1@gmail.com</a>
<a href=""mailto:a.l.e.x.putil.ov.24.1@gmail.com"">a.l.e.x.putil.ov.24.1@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.t.i.l.o.v.2.4.1@gmail.com"">a.l.e.x.p.u.t.i.l.o.v.2.4.1@gmail.com</a>
<a href=""mailto:alexpu.t.i.l.ov241@gmail.com"">alexpu.t.i.l.ov241@gmail.com</a>
<a href=""mailto:a.l.exput.ilo.v241@gmail.com"">a.l.exput.ilo.v241@gmail.com</a>
<a href=""mailto:a.l.ex.pu.ti.l.o.v.2.4.1@gmail.com"">a.l.ex.pu.ti.l.o.v.2.4.1@gmail.com</a>
<a href=""mailto:alex.pu.t.ilov2.41@gmail.com"">alex.pu.t.ilov2.41@gmail.com</a>
<a href=""mailto:a.lexputil.ov.2.4.1@gmail.com"">a.lexputil.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.lex.p.u.ti.lov.241@gmail.com"">a.lex.p.u.ti.lov.241@gmail.com</a>
<a href=""mailto:a.le.x.put.i.l.o.v241@gmail.com"">a.le.x.put.i.l.o.v241@gmail.com</a>
<a href=""mailto:alexp.uti.lo.v24.1@gmail.com"">alexp.uti.lo.v24.1@gmail.com</a>
<a href=""mailto:a.lexp.u.ti.l.ov.2.41@gmail.com"">a.lexp.u.ti.l.ov.2.41@gmail.com</a>
<a href=""mailto:alex.p.u.ti.l.o.v.241@gmail.com"">alex.p.u.ti.l.o.v.241@gmail.com</a>
<a href=""mailto:alexp.ut.i.lo.v24.1@gmail.com"">alexp.ut.i.lo.v24.1@gmail.com</a>
<a href=""mailto:a.le.xp.u.t.ilo.v.241@gmail.com"">a.le.xp.u.t.ilo.v.241@gmail.com</a>
<a href=""mailto:al.expu.t.i.lov.2.41@gmail.com"">al.expu.t.i.lov.2.41@gmail.com</a>
<a href=""mailto:a.l.e.x.pu.tilov2.41@gmail.com"">a.l.e.x.pu.tilov2.41@gmail.com</a>
<a href=""mailto:ale.x.p.ut.il.ov.2.41@gmail.com"">ale.x.p.ut.il.ov.2.41@gmail.com</a>
<a href=""mailto:a.lexputilov.24.1@gmail.com"">a.lexputilov.24.1@gmail.com</a>
<a href=""mailto:al.e.x.put.ilov2.41@gmail.com"">al.e.x.put.ilov2.41@gmail.com</a>
<a href=""mailto:al.exp.ut.ilov.2.41@gmail.com"">al.exp.ut.ilov.2.41@gmail.com</a>
<a href=""mailto:al.exputil.o.v.24.1@gmail.com"">al.exputil.o.v.24.1@gmail.com</a>
<a href=""mailto:a.lex.pu.ti.lov.2.41@gmail.com"">a.lex.pu.ti.lov.2.41@gmail.com</a>
<a href=""mailto:al.e.xp.ut.ilo.v24.1@gmail.com"">al.e.xp.ut.ilo.v24.1@gmail.com</a>
<a href=""mailto:al.e.x.p.u.ti.lo.v2.41@gmail.com"">al.e.x.p.u.ti.lo.v2.41@gmail.com</a>
<a href=""mailto:a.le.xpu.t.il.o.v24.1@gmail.com"">a.le.xpu.t.il.o.v24.1@gmail.com</a>
<a href=""mailto:a.le.x.p.u.ti.lo.v.241@gmail.com"">a.le.x.p.u.ti.lo.v.241@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.ti.l.ov2.4.1@gmail.com"">a.l.e.x.p.u.ti.l.ov2.4.1@gmail.com</a>
<a href=""mailto:a.l.e.x.pu.t.i.l.o.v.24.1@gmail.com"">a.l.e.x.pu.t.i.l.o.v.24.1@gmail.com</a>
<a href=""mailto:a.l.e.xp.util.o.v2.41@gmail.com"">a.l.e.xp.util.o.v2.41@gmail.com</a>
<a href=""mailto:ale.xp.uti.l.ov241@gmail.com"">ale.xp.uti.l.ov241@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.t.i.lov2.4.1@gmail.com"">a.l.e.x.p.u.t.i.lov2.4.1@gmail.com</a>
<a href=""mailto:a.lex.put.il.o.v.24.1@gmail.com"">a.lex.put.il.o.v.24.1@gmail.com</a>
<a href=""mailto:ale.xp.u.ti.lo.v.24.1@gmail.com"">ale.xp.u.ti.lo.v.24.1@gmail.com</a>
<a href=""mailto:ale.xpu.t.ilov2.4.1@gmail.com"">ale.xpu.t.ilov2.4.1@gmail.com</a>
<a href=""mailto:alex.pu.t.ilo.v.241@gmail.com"">alex.pu.t.ilo.v.241@gmail.com</a>
<a href=""mailto:alex.p.u.t.ilov.241@gmail.com"">alex.p.u.t.ilov.241@gmail.com</a>
<a href=""mailto:a.le.xput.il.ov24.1@gmail.com"">a.le.xput.il.ov24.1@gmail.com</a>
<a href=""mailto:al.ex.puti.lov2.41@gmail.com"">al.ex.puti.lov2.41@gmail.com</a>
<a href=""mailto:a.l.expu.til.ov241@gmail.com"">a.l.expu.til.ov241@gmail.com</a>
<a href=""mailto:a.le.xp.ut.i.lov.2.4.1@gmail.com"">a.le.xp.ut.i.lov.2.4.1@gmail.com</a>
<a href=""mailto:a.l.ex.put.i.l.ov2.41@gmail.com"">a.l.ex.put.i.l.ov2.41@gmail.com</a>
<a href=""mailto:a.l.e.xp.u.til.ov.2.4.1@gmail.com"">a.l.e.xp.u.til.ov.2.4.1@gmail.com</a>
<a href=""mailto:ale.xp.utilo.v.2.4.1@gmail.com"">ale.xp.utilo.v.2.4.1@gmail.com</a>
<a href=""mailto:alex.p.u.t.ilov241@gmail.com"">alex.p.u.t.ilov241@gmail.com</a>
<a href=""mailto:ale.x.p.uti.l.ov2.4.1@gmail.com"">ale.x.p.uti.l.ov2.4.1@gmail.com</a>
<a href=""mailto:alexputil.ov.24.1@gmail.com"">alexputil.ov.24.1@gmail.com</a>
<a href=""mailto:a.l.e.x.put.i.l.ov.241@gmail.com"">a.l.e.x.put.i.l.ov.241@gmail.com</a>
<a href=""mailto:alexput.ilo.v2.41@gmail.com"">alexput.ilo.v2.41@gmail.com</a>
<a href=""mailto:ale.x.p.u.tilov.2.41@gmail.com"">ale.x.p.u.tilov.2.41@gmail.com</a>
<a href=""mailto:a.l.ex.p.uti.lov241@gmail.com"">a.l.ex.p.uti.lov241@gmail.com</a>
<a href=""mailto:a.lex.pu.t.i.l.ov241@gmail.com"">a.lex.pu.t.i.l.ov241@gmail.com</a>
<a href=""mailto:al.e.x.p.uti.l.ov.2.4.1@gmail.com"">al.e.x.p.uti.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.le.xp.ut.ilov24.1@gmail.com"">a.le.xp.ut.ilov24.1@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.tilo.v.24.1@gmail.com"">a.l.e.x.p.u.tilo.v.24.1@gmail.com</a>
<a href=""mailto:alex.p.util.ov2.4.1@gmail.com"">alex.p.util.ov2.4.1@gmail.com</a>
<a href=""mailto:al.e.xput.i.lov24.1@gmail.com"">al.e.xput.i.lov24.1@gmail.com</a>
<a href=""mailto:al.exp.util.o.v.2.41@gmail.com"">al.exp.util.o.v.2.41@gmail.com</a>
<a href=""mailto:a.lexputilov2.4.1@gmail.com"">a.lexputilov2.4.1@gmail.com</a>
<a href=""mailto:a.le.xputi.l.o.v.2.41@gmail.com"">a.le.xputi.l.o.v.2.41@gmail.com</a>
<a href=""mailto:a.lex.p.u.t.i.l.ov24.1@gmail.com"">a.lex.p.u.t.i.l.ov24.1@gmail.com</a>
<a href=""mailto:a.lex.p.u.til.ov2.41@gmail.com"">a.lex.p.u.til.ov2.41@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.ti.lo.v.2.41@gmail.com"">a.l.e.x.p.u.ti.lo.v.2.41@gmail.com</a>
<a href=""mailto:al.exp.u.tilo.v2.41@gmail.com"">al.exp.u.tilo.v2.41@gmail.com</a>
<a href=""mailto:al.e.x.pu.ti.l.o.v2.41@gmail.com"">al.e.x.pu.ti.l.o.v2.41@gmail.com</a>
<a href=""mailto:al.e.x.pu.ti.lo.v.241@gmail.com"">al.e.x.pu.ti.lo.v.241@gmail.com</a>
<a href=""mailto:al.e.xp.u.t.i.lov241@gmail.com"">al.e.xp.u.t.i.lov241@gmail.com</a>
<a href=""mailto:a.l.e.x.p.ut.il.o.v2.4.1@gmail.com"">a.l.e.x.p.ut.il.o.v2.4.1@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.ti.l.ov.2.4.1@gmail.com"">a.l.e.x.p.u.ti.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.lexpu.ti.l.ov241@gmail.com"">a.lexpu.ti.l.ov241@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.til.o.v.2.4.1@gmail.com"">a.l.ex.p.u.til.o.v.2.4.1@gmail.com</a>
<a href=""mailto:al.expu.t.i.l.o.v2.4.1@gmail.com"">al.expu.t.i.l.o.v2.4.1@gmail.com</a>
<a href=""mailto:al.ex.puti.lov.241@gmail.com"">al.ex.puti.lov.241@gmail.com</a>
<a href=""mailto:a.lex.put.i.lov2.41@gmail.com"">a.lex.put.i.lov2.41@gmail.com</a>
<a href=""mailto:a.lex.p.u.t.ilo.v24.1@gmail.com"">a.lex.p.u.t.ilo.v24.1@gmail.com</a>
<a href=""mailto:al.exputilo.v.2.41@gmail.com"">al.exputilo.v.2.41@gmail.com</a>
<a href=""mailto:alex.p.ut.ilo.v241@gmail.com"">alex.p.ut.ilo.v241@gmail.com</a>
<a href=""mailto:a.l.e.x.p.u.tilo.v.241@gmail.com"">a.l.e.x.p.u.tilo.v.241@gmail.com</a>
<a href=""mailto:a.lexpu.ti.lo.v241@gmail.com"">a.lexpu.ti.lo.v241@gmail.com</a>
<a href=""mailto:a.l.e.xp.u.t.i.l.o.v.241@gmail.com"">a.l.e.xp.u.t.i.l.o.v.241@gmail.com</a>
<a href=""mailto:a.lexp.ut.ilov2.41@gmail.com"">a.lexp.ut.ilov2.41@gmail.com</a>
<a href=""mailto:ale.xpu.t.ilov.2.4.1@gmail.com"">ale.xpu.t.ilov.2.4.1@gmail.com</a>
<a href=""mailto:al.ex.p.u.ti.lov.2.41@gmail.com"">al.ex.p.u.ti.lov.2.41@gmail.com</a>
<a href=""mailto:al.e.x.put.il.o.v241@gmail.com"">al.e.x.put.il.o.v241@gmail.com</a>
<a href=""mailto:al.e.x.putilov.2.41@gmail.com"">al.e.x.putilov.2.41@gmail.com</a>
<a href=""mailto:al.exput.il.o.v24.1@gmail.com"">al.exput.il.o.v24.1@gmail.com</a>
<a href=""mailto:al.ex.pu.tilov2.4.1@gmail.com"">al.ex.pu.tilov2.4.1@gmail.com</a>
<a href=""mailto:a.le.x.putil.ov241@gmail.com"">a.le.x.putil.ov241@gmail.com</a>
<a href=""mailto:al.e.x.p.uti.l.o.v2.4.1@gmail.com"">al.e.x.p.uti.l.o.v2.4.1@gmail.com</a>
<a href=""mailto:ale.x.pu.ti.l.ov2.4.1@gmail.com"">ale.x.pu.ti.l.ov2.4.1@gmail.com</a>
<a href=""mailto:ale.x.put.i.l.o.v.24.1@gmail.com"">ale.x.put.i.l.o.v.24.1@gmail.com</a>
<a href=""mailto:ale.xp.util.o.v2.41@gmail.com"">ale.xp.util.o.v2.41@gmail.com</a>
<a href=""mailto:ale.xp.u.til.ov.241@gmail.com"">ale.xp.u.til.ov.241@gmail.com</a>
<a href=""mailto:a.l.exp.u.tilov24.1@gmail.com"">a.l.exp.u.tilov24.1@gmail.com</a>
<a href=""mailto:al.exputilo.v.2.4.1@gmail.com"">al.exputilo.v.2.4.1@gmail.com</a>
<a href=""mailto:al.e.xpu.t.i.l.o.v.2.41@gmail.com"">al.e.xpu.t.i.l.o.v.2.41@gmail.com</a>
<a href=""mailto:a.le.xpu.ti.lo.v2.4.1@gmail.com"">a.le.xpu.ti.lo.v2.4.1@gmail.com</a>
<a href=""mailto:a.le.x.put.i.lov241@gmail.com"">a.le.x.put.i.lov241@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.ti.lov241@gmail.com"">a.l.ex.p.u.ti.lov241@gmail.com</a>
<a href=""mailto:a.l.ex.p.u.ti.l.ov.2.4.1@gmail.com"">a.l.ex.p.u.ti.l.ov.2.4.1@gmail.com</a>
<a href=""mailto:a.lexp.u.t.ilov24.1@gmail.com"">a.lexp.u.t.ilov24.1@gmail.com</a>
<a href=""mailto:al.e.xp.u.ti.lov24.1@gmail.com"">al.e.xp.u.ti.lov24.1@gmail.com</a>
<a href=""mailto:alexpu.t.i.lo.v241@gmail.com"">alexpu.t.i.lo.v241@gmail.com</a>
<a href=""mailto:al.ex.pu.t.i.lov.2.41@gmail.com"">al.ex.pu.t.i.lov.2.41@gmail.com</a>
<a href=""mailto:a.l.exput.i.l.ov2.4.1@gmail.com"">a.l.exput.i.l.ov2.4.1@gmail.com</a>
<a href=""mailto:a.l.exputi.lo.v.2.41@gmail.com"">a.l.exputi.lo.v.2.41@gmail.com</a>
<a href=""mailto:a.le.xp.uti.lo.v241@gmail.com"">a.le.xp.uti.lo.v241@gmail.com</a>
<a href=""mailto:alexput.i.lov2.41@gmail.com"">alexput.i.lov2.41@gmail.com</a>
<a href=""mailto:ale.xpu.t.il.ov.241@gmail.com"">ale.xpu.t.il.ov.241@gmail.com</a>
<a href=""mailto:a.le.xp.u.t.i.l.o.v.241@gmail.com"">a.le.xp.u.t.i.l.o.v.241@gmail.com</a>
<a href=""mailto:a.lexp.utilo.v24.1@gmail.com"">a.lexp.utilo.v24.1@gmail.com</a>
<a href=""mailto:a.l.e.xp.u.t.i.lo.v241@gmail.com"">a.l.e.xp.u.t.i.lo.v241@gmail.com</a>
<a href=""mailto:al.e.xputil.o.v.2.41@gmail.com"">al.e.xputil.o.v.2.41@gmail.com</a>
<a href=""mailto:ale.x.p.u.t.i.l.o.v24.1@gmail.com"">ale.x.p.u.t.i.l.o.v24.1@gmail.com</a>
<a href=""mailto:al.exp.ut.i.lo.v2.41@gmail.com"">al.exp.ut.i.lo.v2.41@gmail.com</a>
<a href=""mailto:alex.pu.tilo.v.2.41@gmail.com"">alex.pu.tilo.v.2.41@gmail.com</a>
<a href=""mailto:al.ex.p.u.tilo.v.241@gmail.com"">al.ex.p.u.tilo.v.241@gmail.com</a>
<a href=""mailto:al.e.xp.u.t.ilov.24.1@gmail.com"">al.e.xp.u.t.ilov.24.1@gmail.com</a>
<a href=""mailto:info@realrulaghani.com"">info@realrulaghani.com</a>
<a href=""mailto:dd368053@gmail.com"">dd368053@gmail.com</a>
<a href=""mailto:dd.368053@gmail.com"">dd.368053@gmail.com</a>
<a href=""mailto:d.d3.68.0.5.3@gmail.com"">d.d3.68.0.5.3@gmail.com</a>
<a href=""mailto:dd.3.68.0.5.3@gmail.com"">dd.3.68.0.5.3@gmail.com</a>
<a href=""mailto:dd.36.80.5.3@gmail.com"">dd.36.80.5.3@gmail.com</a>
<a href=""mailto:dd3.68.0.5.3@gmail.com"">dd3.68.0.5.3@gmail.com</a>
<a href=""mailto:d.d.3.6.8053@gmail.com"">d.d.3.6.8053@gmail.com</a>
<a href=""mailto:d.d.36.805.3@gmail.com"">d.d.36.805.3@gmail.com</a>
<a href=""mailto:d.d3.6.8053@gmail.com"">d.d3.6.8053@gmail.com</a>
<a href=""mailto:d.d3.6.8.0.53@gmail.com"">d.d3.6.8.0.53@gmail.com</a>
<a href=""mailto:dd.368.053@gmail.com"">dd.368.053@gmail.com</a>
<a href=""mailto:d.d3.6.805.3@gmail.com"">d.d3.6.805.3@gmail.com</a>
<a href=""mailto:d.d.3.6.8.05.3@gmail.com"">d.d.3.6.8.05.3@gmail.com</a>
<a href=""mailto:dd368053@gmail.com"">dd368053@gmail.com</a>
<a href=""mailto:d.d3.6.8.0.5.3@gmail.com"">d.d3.6.8.0.5.3@gmail.com</a>
<a href=""mailto:dd36805.3@gmail.com"">dd36805.3@gmail.com</a>
<a href=""mailto:d.d.3.6.8.053@gmail.com"">d.d.3.6.8.053@gmail.com</a>
<a href=""mailto:d.d368.05.3@gmail.com"">d.d368.05.3@gmail.com</a>
<a href=""mailto:d.d3.6.8.05.3@gmail.com"">d.d3.6.8.05.3@gmail.com</a>
<a href=""mailto:d.d.3.68.0.53@gmail.com"">d.d.3.68.0.53@gmail.com</a>
<a href=""mailto:dd36.805.3@gmail.com"">dd36.805.3@gmail.com</a>
<a href=""mailto:dd3.6.80.5.3@gmail.com"">dd3.6.80.5.3@gmail.com</a>
<a href=""mailto:d.d.36.8.0.5.3@gmail.com"">d.d.36.8.0.5.3@gmail.com</a>
<a href=""mailto:d.d.3.68.05.3@gmail.com"">d.d.3.68.05.3@gmail.com</a>
<a href=""mailto:dd36.8.053@gmail.com"">dd36.8.053@gmail.com</a>
<a href=""mailto:d.d.36.8.05.3@gmail.com"">d.d.36.8.05.3@gmail.com</a>
<a href=""mailto:d.d.36.80.5.3@gmail.com"">d.d.36.80.5.3@gmail.com</a>
<a href=""mailto:d.d.368.0.5.3@gmail.com"">d.d.368.0.5.3@gmail.com</a>
<a href=""mailto:dd.3.680.53@gmail.com"">dd.3.680.53@gmail.com</a>
<a href=""mailto:d.d.368053@gmail.com"">d.d.368053@gmail.com</a>
<a href=""mailto:d.d.3.6.805.3@gmail.com"">d.d.3.6.805.3@gmail.com</a>
<a href=""mailto:dd36.80.5.3@gmail.com"">dd36.80.5.3@gmail.com</a>
<a href=""mailto:d.d.3.68.0.5.3@gmail.com"">d.d.3.68.0.5.3@gmail.com</a>
<a href=""mailto:dd.36.8.0.5.3@gmail.com"">dd.36.8.0.5.3@gmail.com</a>
<a href=""mailto:dd.3.6.8053@gmail.com"">dd.3.6.8053@gmail.com</a>
<a href=""mailto:d.d.3.6.8.0.5.3@gmail.com"">d.d.3.6.8.0.5.3@gmail.com</a>
<a href=""mailto:d.d.3680.5.3@gmail.com"">d.d.3680.5.3@gmail.com</a>
<a href=""mailto:dd3.68.0.53@gmail.com"">dd3.68.0.53@gmail.com</a>
<a href=""mailto:dd.3.68053@gmail.com"">dd.3.68053@gmail.com</a>
<a href=""mailto:dd3.6.8.05.3@gmail.com"">dd3.6.8.05.3@gmail.com</a>
<a href=""mailto:dd.3.680.5.3@gmail.com"">dd.3.680.5.3@gmail.com</a>
<a href=""mailto:dd36.80.53@gmail.com"">dd36.80.53@gmail.com</a>
<a href=""mailto:d.d3680.53@gmail.com"">d.d3680.53@gmail.com</a>
<a href=""mailto:dd368.0.5.3@gmail.com"">dd368.0.5.3@gmail.com</a>
<a href=""mailto:dd.3.6.805.3@gmail.com"">dd.3.6.805.3@gmail.com</a>
<a href=""mailto:dd36.8053@gmail.com"">dd36.8053@gmail.com</a>
<a href=""mailto:d.d36.80.53@gmail.com"">d.d36.80.53@gmail.com</a>
<a href=""mailto:d.d368053@gmail.com"">d.d368053@gmail.com</a>
<a href=""mailto:dd.3.6.80.5.3@gmail.com"">dd.3.6.80.5.3@gmail.com</a>
<a href=""mailto:dd368.053@gmail.com"">dd368.053@gmail.com</a>
<a href=""mailto:d.d36.8.0.5.3@gmail.com"">d.d36.8.0.5.3@gmail.com</a>
<a href=""mailto:d.d.36805.3@gmail.com"">d.d.36805.3@gmail.com</a>
<a href=""mailto:dd.36.8053@gmail.com"">dd.36.8053@gmail.com</a>
<a href=""mailto:dd.3.68.05.3@gmail.com"">dd.3.68.05.3@gmail.com</a>
<a href=""mailto:dd.368.0.53@gmail.com"">dd.368.0.53@gmail.com</a>
<a href=""mailto:d.d.3.68053@gmail.com"">d.d.3.68053@gmail.com</a>
<a href=""mailto:d.d3.680.53@gmail.com"">d.d3.680.53@gmail.com</a>
<a href=""mailto:dd.36.8.0.53@gmail.com"">dd.36.8.0.53@gmail.com</a>
<a href=""mailto:d.d368.053@gmail.com"">d.d368.053@gmail.com</a>
<a href=""mailto:dd3.680.5.3@gmail.com"">dd3.680.5.3@gmail.com</a>
<a href=""mailto:d.d36.8.05.3@gmail.com"">d.d36.8.05.3@gmail.com</a>
<a href=""mailto:d.d.3.68.053@gmail.com"">d.d.3.68.053@gmail.com</a>
<a href=""mailto:dd.36.80.53@gmail.com"">dd.36.80.53@gmail.com</a>
<a href=""mailto:d.d.3.6.80.53@gmail.com"">d.d.3.6.80.53@gmail.com</a>
<a href=""mailto:d.d.3.6.8.0.53@gmail.com"">d.d.3.6.8.0.53@gmail.com</a>
<a href=""mailto:dd36.8.0.53@gmail.com"">dd36.8.0.53@gmail.com</a>
<a href=""mailto:d.d368.0.5.3@gmail.com"">d.d368.0.5.3@gmail.com</a>
<a href=""mailto:d.d36.805.3@gmail.com"">d.d36.805.3@gmail.com</a>
<a href=""mailto:dd.3.6.8.0.53@gmail.com"">dd.3.6.8.0.53@gmail.com</a>
<a href=""mailto:dd.3.6.8.053@gmail.com"">dd.3.6.8.053@gmail.com</a>
<a href=""mailto:d.d3.6.80.53@gmail.com"">d.d3.6.80.53@gmail.com</a>
<a href=""mailto:d.d.36.8.0.53@gmail.com"">d.d.36.8.0.53@gmail.com</a>
<a href=""mailto:dd.36.8.05.3@gmail.com"">dd.36.8.05.3@gmail.com</a>
<a href=""mailto:d.d36.8.0.53@gmail.com"">d.d36.8.0.53@gmail.com</a>
<a href=""mailto:d.d.3680.53@gmail.com"">d.d.3680.53@gmail.com</a>
<a href=""mailto:d.d3.68053@gmail.com"">d.d3.68053@gmail.com</a>
<a href=""mailto:d.d.3.680.53@gmail.com"">d.d.3.680.53@gmail.com</a>
<a href=""mailto:dd.3.68.053@gmail.com"">dd.3.68.053@gmail.com</a>
<a href=""mailto:dd.36.8.053@gmail.com"">dd.36.8.053@gmail.com</a>
<a href=""mailto:dd3680.53@gmail.com"">dd3680.53@gmail.com</a>
<a href=""mailto:dd.36805.3@gmail.com"">dd.36805.3@gmail.com</a>
<a href=""mailto:dd3.6.8.0.53@gmail.com"">dd3.6.8.0.53@gmail.com</a>
<a href=""mailto:d.d36.8053@gmail.com"">d.d36.8053@gmail.com</a>
<a href=""mailto:d.d368.0.53@gmail.com"">d.d368.0.53@gmail.com</a>
<a href=""mailto:d.d.3.6.80.5.3@gmail.com"">d.d.3.6.80.5.3@gmail.com</a>
<a href=""mailto:dd3.6.8.0.5.3@gmail.com"">dd3.6.8.0.5.3@gmail.com</a>
<a href=""mailto:dd.3680.53@gmail.com"">dd.3680.53@gmail.com</a>
<a href=""mailto:d.d3.6.80.5.3@gmail.com"">d.d3.6.80.5.3@gmail.com</a>
<a href=""mailto:d.d3.680.5.3@gmail.com"">d.d3.680.5.3@gmail.com</a>
<a href=""mailto:dd368.0.53@gmail.com"">dd368.0.53@gmail.com</a>
<a href=""mailto:dd.368.05.3@gmail.com"">dd.368.05.3@gmail.com</a>
<a href=""mailto:d.d3680.5.3@gmail.com"">d.d3680.5.3@gmail.com</a>
<a href=""mailto:dd368.05.3@gmail.com"">dd368.05.3@gmail.com</a>
<a href=""mailto:d.d.36.80.53@gmail.com"">d.d.36.80.53@gmail.com</a>
<a href=""mailto:dd3.680.53@gmail.com"">dd3.680.53@gmail.com</a>
<a href=""mailto:dd.3.6.8.05.3@gmail.com"">dd.3.6.8.05.3@gmail.com</a>
<a href=""mailto:d.d3.6805.3@gmail.com"">d.d3.6805.3@gmail.com</a>
<a href=""mailto:d.d.36.8.053@gmail.com"">d.d.36.8.053@gmail.com</a>
<a href=""mailto:dd36.8.0.5.3@gmail.com"">dd36.8.0.5.3@gmail.com</a>
<a href=""mailto:dd.3.6.80.53@gmail.com"">dd.3.6.80.53@gmail.com</a>
<a href=""mailto:dd.36.805.3@gmail.com"">dd.36.805.3@gmail.com</a>
<a href=""mailto:dd.3.6805.3@gmail.com"">dd.3.6805.3@gmail.com</a>
<a href=""mailto:dd3680.5.3@gmail.com"">dd3680.5.3@gmail.com</a>
<a href=""mailto:d.d3.6.8.053@gmail.com"">d.d3.6.8.053@gmail.com</a>
<a href=""mailto:dd3.68053@gmail.com"">dd3.68053@gmail.com</a>
<a href=""mailto:d.d3.68.05.3@gmail.com"">d.d3.68.05.3@gmail.com</a>
<a href=""mailto:dd3.68.053@gmail.com"">dd3.68.053@gmail.com</a>
<a href=""mailto:dd.3.68.0.53@gmail.com"">dd.3.68.0.53@gmail.com</a>
<a href=""mailto:d.d.3.6805.3@gmail.com"">d.d.3.6805.3@gmail.com</a>
<a href=""mailto:dd3.6.805.3@gmail.com"">dd3.6.805.3@gmail.com</a>
<a href=""mailto:dd3.6.8.053@gmail.com"">dd3.6.8.053@gmail.com</a>
<a href=""mailto:d.d.36.8053@gmail.com"">d.d.36.8053@gmail.com</a>
<a href=""mailto:d.d36805.3@gmail.com"">d.d36805.3@gmail.com</a>
<a href=""mailto:dd3.6.8053@gmail.com"">dd3.6.8053@gmail.com</a>
<a href=""mailto:dd.3.6.8.0.5.3@gmail.com"">dd.3.6.8.0.5.3@gmail.com</a>
<a href=""mailto:d.d3.68.053@gmail.com"">d.d3.68.053@gmail.com</a>
<a href=""mailto:d.d36.8.053@gmail.com"">d.d36.8.053@gmail.com</a>
<a href=""mailto:dd.3680.5.3@gmail.com"">dd.3680.5.3@gmail.com</a>
<a href=""mailto:d.d.368.053@gmail.com"">d.d.368.053@gmail.com</a>
<a href=""mailto:d.d.368.0.53@gmail.com"">d.d.368.0.53@gmail.com</a>
<a href=""mailto:dd.368.0.5.3@gmail.com"">dd.368.0.5.3@gmail.com</a>
<a href=""mailto:d.d.368.05.3@gmail.com"">d.d.368.05.3@gmail.com</a>
<a href=""mailto:dd3.68.05.3@gmail.com"">dd3.68.05.3@gmail.com</a>
<a href=""mailto:dd36.8.05.3@gmail.com"">dd36.8.05.3@gmail.com</a>
<a href=""mailto:d.d3.68.0.53@gmail.com"">d.d3.68.0.53@gmail.com</a>
<a href=""mailto:d.d.3.680.5.3@gmail.com"">d.d.3.680.5.3@gmail.com</a>
<a href=""mailto:dd3.6805.3@gmail.com"">dd3.6805.3@gmail.com</a>
<a href=""mailto:d.d36.80.5.3@gmail.com"">d.d36.80.5.3@gmail.com</a>
<a href=""mailto:dd3.6.80.53@gmail.com"">dd3.6.80.53@gmail.com</a>
<a href=""mailto:drezeh222@gmail.com"">drezeh222@gmail.com</a>
<a href=""mailto:dr.eze.h222@gmail.com"">dr.eze.h222@gmail.com</a>
<a href=""mailto:dr.eze.h.2.2.2@gmail.com"">dr.eze.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.zeh2.2.2@gmail.com"">dr.e.zeh2.2.2@gmail.com</a>
<a href=""mailto:d.re.ze.h222@gmail.com"">d.re.ze.h222@gmail.com</a>
<a href=""mailto:dre.z.e.h222@gmail.com"">dre.z.e.h222@gmail.com</a>
<a href=""mailto:d.r.e.zeh2.22@gmail.com"">d.r.e.zeh2.22@gmail.com</a>
<a href=""mailto:d.r.e.ze.h2.2.2@gmail.com"">d.r.e.ze.h2.2.2@gmail.com</a>
<a href=""mailto:dre.zeh2.22@gmail.com"">dre.zeh2.22@gmail.com</a>
<a href=""mailto:dr.e.zeh222@gmail.com"">dr.e.zeh222@gmail.com</a>
<a href=""mailto:d.r.e.z.e.h22.2@gmail.com"">d.r.e.z.e.h22.2@gmail.com</a>
<a href=""mailto:d.r.eze.h.2.2.2@gmail.com"">d.r.eze.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.ez.eh.2.22@gmail.com"">dr.ez.eh.2.22@gmail.com</a>
<a href=""mailto:dr.ez.e.h2.22@gmail.com"">dr.ez.e.h2.22@gmail.com</a>
<a href=""mailto:d.r.e.z.eh.2.2.2@gmail.com"">d.r.e.z.eh.2.2.2@gmail.com</a>
<a href=""mailto:d.r.ez.e.h222@gmail.com"">d.r.ez.e.h222@gmail.com</a>
<a href=""mailto:d.r.e.zeh22.2@gmail.com"">d.r.e.zeh22.2@gmail.com</a>
<a href=""mailto:d.r.eze.h.2.22@gmail.com"">d.r.eze.h.2.22@gmail.com</a>
<a href=""mailto:d.r.eze.h2.2.2@gmail.com"">d.r.eze.h2.2.2@gmail.com</a>
<a href=""mailto:d.re.ze.h.2.2.2@gmail.com"">d.re.ze.h.2.2.2@gmail.com</a>
<a href=""mailto:dre.z.e.h.22.2@gmail.com"">dre.z.e.h.22.2@gmail.com</a>
<a href=""mailto:d.reze.h222@gmail.com"">d.reze.h222@gmail.com</a>
<a href=""mailto:dre.ze.h.2.2.2@gmail.com"">dre.ze.h.2.2.2@gmail.com</a>
<a href=""mailto:d.rezeh.222@gmail.com"">d.rezeh.222@gmail.com</a>
<a href=""mailto:dr.eze.h.22.2@gmail.com"">dr.eze.h.22.2@gmail.com</a>
<a href=""mailto:dr.e.z.e.h.222@gmail.com"">dr.e.z.e.h.222@gmail.com</a>
<a href=""mailto:drez.eh.2.22@gmail.com"">drez.eh.2.22@gmail.com</a>
<a href=""mailto:d.re.z.e.h.2.2.2@gmail.com"">d.re.z.e.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.eze.h.2.22@gmail.com"">dr.eze.h.2.22@gmail.com</a>
<a href=""mailto:dr.e.z.eh222@gmail.com"">dr.e.z.eh222@gmail.com</a>
<a href=""mailto:d.r.ezeh22.2@gmail.com"">d.r.ezeh22.2@gmail.com</a>
<a href=""mailto:dr.ez.eh.22.2@gmail.com"">dr.ez.eh.22.2@gmail.com</a>
<a href=""mailto:drez.eh222@gmail.com"">drez.eh222@gmail.com</a>
<a href=""mailto:d.r.ezeh2.2.2@gmail.com"">d.r.ezeh2.2.2@gmail.com</a>
<a href=""mailto:dre.zeh.22.2@gmail.com"">dre.zeh.22.2@gmail.com</a>
<a href=""mailto:dr.e.z.eh2.22@gmail.com"">dr.e.z.eh2.22@gmail.com</a>
<a href=""mailto:d.r.eze.h.22.2@gmail.com"">d.r.eze.h.22.2@gmail.com</a>
<a href=""mailto:d.re.z.eh22.2@gmail.com"">d.re.z.eh22.2@gmail.com</a>
<a href=""mailto:d.re.ze.h2.2.2@gmail.com"">d.re.ze.h2.2.2@gmail.com</a>
<a href=""mailto:d.r.ez.eh.2.22@gmail.com"">d.r.ez.eh.2.22@gmail.com</a>
<a href=""mailto:d.r.ez.e.h2.22@gmail.com"">d.r.ez.e.h2.22@gmail.com</a>
<a href=""mailto:d.rezeh.2.22@gmail.com"">d.rezeh.2.22@gmail.com</a>
<a href=""mailto:d.re.z.eh222@gmail.com"">d.re.z.eh222@gmail.com</a>
<a href=""mailto:dr.ez.e.h22.2@gmail.com"">dr.ez.e.h22.2@gmail.com</a>
<a href=""mailto:dr.ezeh222@gmail.com"">dr.ezeh222@gmail.com</a>
<a href=""mailto:d.rez.e.h2.2.2@gmail.com"">d.rez.e.h2.2.2@gmail.com</a>
<a href=""mailto:drez.eh22.2@gmail.com"">drez.eh22.2@gmail.com</a>
<a href=""mailto:drezeh2.22@gmail.com"">drezeh2.22@gmail.com</a>
<a href=""mailto:dr.e.z.e.h22.2@gmail.com"">dr.e.z.e.h22.2@gmail.com</a>
<a href=""mailto:dreze.h2.2.2@gmail.com"">dreze.h2.2.2@gmail.com</a>
<a href=""mailto:d.r.ezeh.2.2.2@gmail.com"">d.r.ezeh.2.2.2@gmail.com</a>
<a href=""mailto:d.rez.e.h22.2@gmail.com"">d.rez.e.h22.2@gmail.com</a>
<a href=""mailto:dr.e.z.e.h.22.2@gmail.com"">dr.e.z.e.h.22.2@gmail.com</a>
<a href=""mailto:d.re.zeh22.2@gmail.com"">d.re.zeh22.2@gmail.com</a>
<a href=""mailto:dr.ez.eh222@gmail.com"">dr.ez.eh222@gmail.com</a>
<a href=""mailto:dre.zeh.2.22@gmail.com"">dre.zeh.2.22@gmail.com</a>
<a href=""mailto:d.re.zeh.2.2.2@gmail.com"">d.re.zeh.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.zeh22.2@gmail.com"">dr.e.zeh22.2@gmail.com</a>
<a href=""mailto:d.re.zeh.2.22@gmail.com"">d.re.zeh.2.22@gmail.com</a>
<a href=""mailto:dr.e.z.eh2.2.2@gmail.com"">dr.e.z.eh2.2.2@gmail.com</a>
<a href=""mailto:drezeh.222@gmail.com"">drezeh.222@gmail.com</a>
<a href=""mailto:d.r.e.z.eh.2.22@gmail.com"">d.r.e.z.eh.2.22@gmail.com</a>
<a href=""mailto:dr.e.z.e.h.2.2.2@gmail.com"">dr.e.z.e.h.2.2.2@gmail.com</a>
<a href=""mailto:d.rez.e.h2.22@gmail.com"">d.rez.e.h2.22@gmail.com</a>
<a href=""mailto:dre.ze.h.222@gmail.com"">dre.ze.h.222@gmail.com</a>
<a href=""mailto:dr.e.ze.h.22.2@gmail.com"">dr.e.ze.h.22.2@gmail.com</a>
<a href=""mailto:drezeh.2.2.2@gmail.com"">drezeh.2.2.2@gmail.com</a>
<a href=""mailto:dre.zeh2.2.2@gmail.com"">dre.zeh2.2.2@gmail.com</a>
<a href=""mailto:dr.ezeh.2.2.2@gmail.com"">dr.ezeh.2.2.2@gmail.com</a>
<a href=""mailto:dr.ez.e.h.22.2@gmail.com"">dr.ez.e.h.22.2@gmail.com</a>
<a href=""mailto:d.reze.h.22.2@gmail.com"">d.reze.h.22.2@gmail.com</a>
<a href=""mailto:d.r.ezeh.222@gmail.com"">d.r.ezeh.222@gmail.com</a>
<a href=""mailto:drez.e.h2.22@gmail.com"">drez.e.h2.22@gmail.com</a>
<a href=""mailto:d.r.e.z.eh222@gmail.com"">d.r.e.z.eh222@gmail.com</a>
<a href=""mailto:dr.ez.e.h.2.2.2@gmail.com"">dr.ez.e.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.ez.eh22.2@gmail.com"">dr.ez.eh22.2@gmail.com</a>
<a href=""mailto:d.rez.e.h.222@gmail.com"">d.rez.e.h.222@gmail.com</a>
<a href=""mailto:dr.ezeh22.2@gmail.com"">dr.ezeh22.2@gmail.com</a>
<a href=""mailto:d.rez.eh222@gmail.com"">d.rez.eh222@gmail.com</a>
<a href=""mailto:dr.ez.e.h222@gmail.com"">dr.ez.e.h222@gmail.com</a>
<a href=""mailto:d.r.ez.eh.222@gmail.com"">d.r.ez.eh.222@gmail.com</a>
<a href=""mailto:d.r.e.ze.h.2.2.2@gmail.com"">d.r.e.ze.h.2.2.2@gmail.com</a>
<a href=""mailto:dreze.h22.2@gmail.com"">dreze.h22.2@gmail.com</a>
<a href=""mailto:drez.e.h.2.22@gmail.com"">drez.e.h.2.22@gmail.com</a>
<a href=""mailto:d.re.zeh222@gmail.com"">d.re.zeh222@gmail.com</a>
<a href=""mailto:d.r.ezeh2.22@gmail.com"">d.r.ezeh2.22@gmail.com</a>
<a href=""mailto:dreze.h.22.2@gmail.com"">dreze.h.22.2@gmail.com</a>
<a href=""mailto:d.rez.eh.2.2.2@gmail.com"">d.rez.eh.2.2.2@gmail.com</a>
<a href=""mailto:d.re.ze.h.2.22@gmail.com"">d.re.ze.h.2.22@gmail.com</a>
<a href=""mailto:dre.z.eh.222@gmail.com"">dre.z.eh.222@gmail.com</a>
<a href=""mailto:d.re.ze.h.222@gmail.com"">d.re.ze.h.222@gmail.com</a>
<a href=""mailto:dre.z.e.h.2.22@gmail.com"">dre.z.e.h.2.22@gmail.com</a>
<a href=""mailto:dr.e.ze.h2.22@gmail.com"">dr.e.ze.h2.22@gmail.com</a>
<a href=""mailto:dre.zeh222@gmail.com"">dre.zeh222@gmail.com</a>
<a href=""mailto:dr.e.z.eh.2.2.2@gmail.com"">dr.e.z.eh.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.z.eh22.2@gmail.com"">dr.e.z.eh22.2@gmail.com</a>
<a href=""mailto:d.reze.h.222@gmail.com"">d.reze.h.222@gmail.com</a>
<a href=""mailto:drez.eh.22.2@gmail.com"">drez.eh.22.2@gmail.com</a>
<a href=""mailto:dre.ze.h2.2.2@gmail.com"">dre.ze.h2.2.2@gmail.com</a>
<a href=""mailto:dreze.h.222@gmail.com"">dreze.h.222@gmail.com</a>
<a href=""mailto:dreze.h222@gmail.com"">dreze.h222@gmail.com</a>
<a href=""mailto:d.re.z.e.h2.22@gmail.com"">d.re.z.e.h2.22@gmail.com</a>
<a href=""mailto:d.r.e.zeh.2.2.2@gmail.com"">d.r.e.zeh.2.2.2@gmail.com</a>
<a href=""mailto:d.rez.e.h.22.2@gmail.com"">d.rez.e.h.22.2@gmail.com</a>
<a href=""mailto:d.r.ez.e.h22.2@gmail.com"">d.r.ez.e.h22.2@gmail.com</a>
<a href=""mailto:d.r.e.ze.h.222@gmail.com"">d.r.e.ze.h.222@gmail.com</a>
<a href=""mailto:d.re.z.eh.2.2.2@gmail.com"">d.re.z.eh.2.2.2@gmail.com</a>
<a href=""mailto:d.rezeh2.22@gmail.com"">d.rezeh2.22@gmail.com</a>
<a href=""mailto:dre.zeh22.2@gmail.com"">dre.zeh22.2@gmail.com</a>
<a href=""mailto:d.reze.h2.22@gmail.com"">d.reze.h2.22@gmail.com</a>
<a href=""mailto:dreze.h.2.22@gmail.com"">dreze.h.2.22@gmail.com</a>
<a href=""mailto:d.r.e.ze.h.22.2@gmail.com"">d.r.e.ze.h.22.2@gmail.com</a>
<a href=""mailto:d.re.z.eh.2.22@gmail.com"">d.re.z.eh.2.22@gmail.com</a>
<a href=""mailto:d.r.ez.eh.22.2@gmail.com"">d.r.ez.eh.22.2@gmail.com</a>
<a href=""mailto:d.r.ez.e.h.2.2.2@gmail.com"">d.r.ez.e.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.zeh.2.2.2@gmail.com"">dr.e.zeh.2.2.2@gmail.com</a>
<a href=""mailto:dre.z.e.h.222@gmail.com"">dre.z.e.h.222@gmail.com</a>
<a href=""mailto:dr.e.ze.h.222@gmail.com"">dr.e.ze.h.222@gmail.com</a>
<a href=""mailto:dr.ezeh.2.22@gmail.com"">dr.ezeh.2.22@gmail.com</a>
<a href=""mailto:d.r.eze.h222@gmail.com"">d.r.eze.h222@gmail.com</a>
<a href=""mailto:d.r.e.z.e.h2.2.2@gmail.com"">d.r.e.z.e.h2.2.2@gmail.com</a>
<a href=""mailto:d.rezeh222@gmail.com"">d.rezeh222@gmail.com</a>
<a href=""mailto:dr.ez.e.h2.2.2@gmail.com"">dr.ez.e.h2.2.2@gmail.com</a>
<a href=""mailto:dr.e.ze.h.2.2.2@gmail.com"">dr.e.ze.h.2.2.2@gmail.com</a>
<a href=""mailto:d.r.ez.e.h.222@gmail.com"">d.r.ez.e.h.222@gmail.com</a>
<a href=""mailto:dre.z.e.h.2.2.2@gmail.com"">dre.z.e.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.ze.h22.2@gmail.com"">dr.e.ze.h22.2@gmail.com</a>
<a href=""mailto:drez.e.h.222@gmail.com"">drez.e.h.222@gmail.com</a>
<a href=""mailto:d.r.e.zeh222@gmail.com"">d.r.e.zeh222@gmail.com</a>
<a href=""mailto:dre.z.e.h22.2@gmail.com"">dre.z.e.h22.2@gmail.com</a>
<a href=""mailto:dr.eze.h2.2.2@gmail.com"">dr.eze.h2.2.2@gmail.com</a>
<a href=""mailto:d.re.z.eh.222@gmail.com"">d.re.z.eh.222@gmail.com</a>
<a href=""mailto:d.r.e.z.e.h.2.22@gmail.com"">d.r.e.z.e.h.2.22@gmail.com</a>
<a href=""mailto:dr.eze.h22.2@gmail.com"">dr.eze.h22.2@gmail.com</a>
<a href=""mailto:d.r.e.zeh.2.22@gmail.com"">d.r.e.zeh.2.22@gmail.com</a>
<a href=""mailto:drezeh.22.2@gmail.com"">drezeh.22.2@gmail.com</a>
<a href=""mailto:d.re.z.e.h.2.22@gmail.com"">d.re.z.e.h.2.22@gmail.com</a>
<a href=""mailto:dre.z.eh2.2.2@gmail.com"">dre.z.eh2.2.2@gmail.com</a>
<a href=""mailto:dr.e.z.eh.22.2@gmail.com"">dr.e.z.eh.22.2@gmail.com</a>
<a href=""mailto:d.rez.eh.222@gmail.com"">d.rez.eh.222@gmail.com</a>
<a href=""mailto:dr.e.zeh2.22@gmail.com"">dr.e.zeh2.22@gmail.com</a>
<a href=""mailto:d.re.zeh2.2.2@gmail.com"">d.re.zeh2.2.2@gmail.com</a>
<a href=""mailto:dr.e.zeh.2.22@gmail.com"">dr.e.zeh.2.22@gmail.com</a>
<a href=""mailto:d.r.e.zeh2.2.2@gmail.com"">d.r.e.zeh2.2.2@gmail.com</a>
<a href=""mailto:d.rez.e.h.2.2.2@gmail.com"">d.rez.e.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.z.eh.222@gmail.com"">dr.e.z.eh.222@gmail.com</a>
<a href=""mailto:dre.z.eh.22.2@gmail.com"">dre.z.eh.22.2@gmail.com</a>
<a href=""mailto:d.r.e.zeh.22.2@gmail.com"">d.r.e.zeh.22.2@gmail.com</a>
<a href=""mailto:d.re.z.eh2.22@gmail.com"">d.re.z.eh2.22@gmail.com</a>
<a href=""mailto:dr.ez.eh.2.2.2@gmail.com"">dr.ez.eh.2.2.2@gmail.com</a>
<a href=""mailto:dre.z.eh222@gmail.com"">dre.z.eh222@gmail.com</a>
<a href=""mailto:d.r.e.ze.h.2.22@gmail.com"">d.r.e.ze.h.2.22@gmail.com</a>
<a href=""mailto:d.r.e.ze.h2.22@gmail.com"">d.r.e.ze.h2.22@gmail.com</a>
<a href=""mailto:dreze.h2.22@gmail.com"">dreze.h2.22@gmail.com</a>
<a href=""mailto:dr.ez.e.h.2.22@gmail.com"">dr.ez.e.h.2.22@gmail.com</a>
<a href=""mailto:d.r.e.zeh.222@gmail.com"">d.r.e.zeh.222@gmail.com</a>
<a href=""mailto:dreze.h.2.2.2@gmail.com"">dreze.h.2.2.2@gmail.com</a>
<a href=""mailto:dr.ezeh2.22@gmail.com"">dr.ezeh2.22@gmail.com</a>
<a href=""mailto:dr.e.z.e.h.2.22@gmail.com"">dr.e.z.e.h.2.22@gmail.com</a>
<a href=""mailto:dr.e.z.e.h222@gmail.com"">dr.e.z.e.h222@gmail.com</a>
<a href=""mailto:drez.e.h.2.2.2@gmail.com"">drez.e.h.2.2.2@gmail.com</a>
<a href=""mailto:d.r.ez.eh2.22@gmail.com"">d.r.ez.eh2.22@gmail.com</a>
<a href=""mailto:dr.e.z.e.h2.22@gmail.com"">dr.e.z.e.h2.22@gmail.com</a>
<a href=""mailto:d.r.eze.h.222@gmail.com"">d.r.eze.h.222@gmail.com</a>
<a href=""mailto:d.r.e.ze.h22.2@gmail.com"">d.r.e.ze.h22.2@gmail.com</a>
<a href=""mailto:dr.e.ze.h.2.22@gmail.com"">dr.e.ze.h.2.22@gmail.com</a>
<a href=""mailto:drezeh2.2.2@gmail.com"">drezeh2.2.2@gmail.com</a>
<a href=""mailto:d.re.z.e.h22.2@gmail.com"">d.re.z.e.h22.2@gmail.com</a>
<a href=""mailto:dr.ezeh.222@gmail.com"">dr.ezeh.222@gmail.com</a>
<a href=""mailto:dre.z.eh2.22@gmail.com"">dre.z.eh2.22@gmail.com</a>
<a href=""mailto:dr.e.ze.h222@gmail.com"">dr.e.ze.h222@gmail.com</a>
<a href=""mailto:dr.ezeh.22.2@gmail.com"">dr.ezeh.22.2@gmail.com</a>
<a href=""mailto:dr.ez.e.h.222@gmail.com"">dr.ez.e.h.222@gmail.com</a>
<a href=""mailto:d.rezeh.2.2.2@gmail.com"">d.rezeh.2.2.2@gmail.com</a>
<a href=""mailto:d.r.ez.eh2.2.2@gmail.com"">d.r.ez.eh2.2.2@gmail.com</a>
<a href=""mailto:d.rez.e.h.2.22@gmail.com"">d.rez.e.h.2.22@gmail.com</a>
<a href=""mailto:dr.e.z.eh.2.22@gmail.com"">dr.e.z.eh.2.22@gmail.com</a>
<a href=""mailto:d.r.e.z.eh.22.2@gmail.com"">d.r.e.z.eh.22.2@gmail.com</a>
<a href=""mailto:d.r.e.z.e.h.22.2@gmail.com"">d.r.e.z.e.h.22.2@gmail.com</a>
<a href=""mailto:d.rez.eh2.22@gmail.com"">d.rez.eh2.22@gmail.com</a>
<a href=""mailto:dre.z.e.h2.22@gmail.com"">dre.z.e.h2.22@gmail.com</a>
<a href=""mailto:drez.e.h222@gmail.com"">drez.e.h222@gmail.com</a>
<a href=""mailto:d.reze.h22.2@gmail.com"">d.reze.h22.2@gmail.com</a>
<a href=""mailto:d.r.e.z.eh.222@gmail.com"">d.r.e.z.eh.222@gmail.com</a>
<a href=""mailto:d.re.zeh.22.2@gmail.com"">d.re.zeh.22.2@gmail.com</a>
<a href=""mailto:dre.z.eh.2.2.2@gmail.com"">dre.z.eh.2.2.2@gmail.com</a>
<a href=""mailto:dr.e.z.e.h2.2.2@gmail.com"">dr.e.z.e.h2.2.2@gmail.com</a>
<a href=""mailto:dr.ez.eh.222@gmail.com"">dr.ez.eh.222@gmail.com</a>
<a href=""mailto:d.re.zeh2.22@gmail.com"">d.re.zeh2.22@gmail.com</a>
<a href=""mailto:drez.eh2.22@gmail.com"">drez.eh2.22@gmail.com</a>
<a href=""mailto:d.r.e.z.eh2.22@gmail.com"">d.r.e.z.eh2.22@gmail.com</a>
<a href=""mailto:dr.e.zeh.222@gmail.com"">dr.e.zeh.222@gmail.com</a>
<a href=""mailto:dre.ze.h.22.2@gmail.com"">dre.ze.h.22.2@gmail.com</a>
<a href=""mailto:d.r.ezeh.2.22@gmail.com"">d.r.ezeh.2.22@gmail.com</a>
<a href=""mailto:dr.eze.h.222@gmail.com"">dr.eze.h.222@gmail.com</a>
<a href=""mailto:drezeh.2.22@gmail.com"">drezeh.2.22@gmail.com</a>
<a href=""mailto:d.re.z.eh.22.2@gmail.com"">d.re.z.eh.22.2@gmail.com</a>
<a href=""mailto:d.rez.eh22.2@gmail.com"">d.rez.eh22.2@gmail.com</a>
<a href=""mailto:d.r.e.z.e.h.2.2.2@gmail.com"">d.r.e.z.e.h.2.2.2@gmail.com</a>
<a href=""mailto:drez.e.h2.2.2@gmail.com"">drez.e.h2.2.2@gmail.com</a>
<a href=""mailto:d.rez.eh2.2.2@gmail.com"">d.rez.eh2.2.2@gmail.com</a>
<a href=""mailto:bashirbala200@gmail.com"">bashirbala200@gmail.com</a>
<a href=""mailto:ba.s.h.i.r.ba.la.2.00@gmail.com"">ba.s.h.i.r.ba.la.2.00@gmail.com</a>
<a href=""mailto:b.as.h.irbala.2.0.0@gmail.com"">b.as.h.irbala.2.0.0@gmail.com</a>
<a href=""mailto:ba.sh.ir.ba.l.a2.0.0@gmail.com"">ba.sh.ir.ba.l.a2.0.0@gmail.com</a>
<a href=""mailto:ba.shi.r.b.a.la20.0@gmail.com"">ba.shi.r.b.a.la20.0@gmail.com</a>
<a href=""mailto:bas.hi.rba.la.20.0@gmail.com"">bas.hi.rba.la.20.0@gmail.com</a>
<a href=""mailto:ba.shi.rbal.a.2.0.0@gmail.com"">ba.shi.rbal.a.2.0.0@gmail.com</a>
<a href=""mailto:b.a.shi.rba.l.a.20.0@gmail.com"">b.a.shi.rba.l.a.20.0@gmail.com</a>
<a href=""mailto:bas.hi.r.b.a.la200@gmail.com"">bas.hi.r.b.a.la200@gmail.com</a>
<a href=""mailto:b.a.s.h.i.r.ba.l.a200@gmail.com"">b.a.s.h.i.r.ba.l.a200@gmail.com</a>
<a href=""mailto:bashi.r.b.a.l.a.20.0@gmail.com"">bashi.r.b.a.l.a.20.0@gmail.com</a>
<a href=""mailto:ba.sh.i.rb.ala2.0.0@gmail.com"">ba.sh.i.rb.ala2.0.0@gmail.com</a>
<a href=""mailto:b.a.s.hirba.l.a.20.0@gmail.com"">b.a.s.hirba.l.a.20.0@gmail.com</a>
<a href=""mailto:ba.s.hirb.a.l.a20.0@gmail.com"">ba.s.hirb.a.l.a20.0@gmail.com</a>
<a href=""mailto:b.a.s.h.i.r.b.a.la.200@gmail.com"">b.a.s.h.i.r.b.a.la.200@gmail.com</a>
<a href=""mailto:bas.h.i.r.b.a.l.a200@gmail.com"">bas.h.i.r.b.a.l.a200@gmail.com</a>
<a href=""mailto:bas.h.i.rba.l.a200@gmail.com"">bas.h.i.rba.l.a200@gmail.com</a>
<a href=""mailto:bashi.r.ba.la.200@gmail.com"">bashi.r.ba.la.200@gmail.com</a>
<a href=""mailto:b.a.shir.b.ala2.0.0@gmail.com"">b.a.shir.b.ala2.0.0@gmail.com</a>
<a href=""mailto:b.ash.ir.b.al.a.2.00@gmail.com"">b.ash.ir.b.al.a.2.00@gmail.com</a>
<a href=""mailto:ba.s.h.i.rbal.a.20.0@gmail.com"">ba.s.h.i.rbal.a.20.0@gmail.com</a>
<a href=""mailto:b.as.hirba.l.a.200@gmail.com"">b.as.hirba.l.a.200@gmail.com</a>
<a href=""mailto:ba.shi.r.b.al.a2.0.0@gmail.com"">ba.shi.r.b.al.a2.0.0@gmail.com</a>
<a href=""mailto:bas.h.irb.a.la20.0@gmail.com"">bas.h.irb.a.la20.0@gmail.com</a>
<a href=""mailto:b.a.shi.rbala.2.00@gmail.com"">b.a.shi.rbala.2.00@gmail.com</a>
<a href=""mailto:ba.sh.irba.la.20.0@gmail.com"">ba.sh.irba.la.20.0@gmail.com</a>
<a href=""mailto:ba.shir.b.al.a.200@gmail.com"">ba.shir.b.al.a.200@gmail.com</a>
<a href=""mailto:bas.h.i.rba.la.200@gmail.com"">bas.h.i.rba.la.200@gmail.com</a>
<a href=""mailto:ba.s.hir.b.al.a.200@gmail.com"">ba.s.hir.b.al.a.200@gmail.com</a>
<a href=""mailto:b.a.sh.irba.l.a2.0.0@gmail.com"">b.a.sh.irba.l.a2.0.0@gmail.com</a>
<a href=""mailto:bas.hi.r.b.al.a.200@gmail.com"">bas.hi.r.b.al.a.200@gmail.com</a>
<a href=""mailto:ba.shir.ba.l.a200@gmail.com"">ba.shir.ba.l.a200@gmail.com</a>
<a href=""mailto:b.ash.i.rba.l.a.2.00@gmail.com"">b.ash.i.rba.l.a.2.00@gmail.com</a>
<a href=""mailto:ba.s.h.i.r.b.a.l.a2.0.0@gmail.com"">ba.s.h.i.r.b.a.l.a2.0.0@gmail.com</a>
<a href=""mailto:b.a.sh.irb.a.l.a.2.0.0@gmail.com"">b.a.sh.irb.a.l.a.2.0.0@gmail.com</a>
<a href=""mailto:ba.shir.b.a.la20.0@gmail.com"">ba.shir.b.a.la20.0@gmail.com</a>
<a href=""mailto:b.a.s.h.i.r.b.a.la.2.00@gmail.com"">b.a.s.h.i.r.b.a.la.2.00@gmail.com</a>
<a href=""mailto:b.a.shi.rba.la20.0@gmail.com"">b.a.shi.rba.la20.0@gmail.com</a>
<a href=""mailto:b.a.shi.rb.a.la200@gmail.com"">b.a.shi.rb.a.la200@gmail.com</a>
<a href=""mailto:ba.sh.i.rb.a.l.a2.00@gmail.com"">ba.sh.i.rb.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.a.s.hi.rba.l.a200@gmail.com"">b.a.s.hi.rba.l.a200@gmail.com</a>
<a href=""mailto:b.as.hi.r.bal.a.20.0@gmail.com"">b.as.hi.r.bal.a.20.0@gmail.com</a>
<a href=""mailto:ba.s.h.i.rba.l.a.2.00@gmail.com"">ba.s.h.i.rba.l.a.2.00@gmail.com</a>
<a href=""mailto:b.as.hir.bal.a.200@gmail.com"">b.as.hir.bal.a.200@gmail.com</a>
<a href=""mailto:bashir.b.ala.20.0@gmail.com"">bashir.b.ala.20.0@gmail.com</a>
<a href=""mailto:b.ash.irb.a.la2.00@gmail.com"">b.ash.irb.a.la2.00@gmail.com</a>
<a href=""mailto:b.a.shi.rbala20.0@gmail.com"">b.a.shi.rbala20.0@gmail.com</a>
<a href=""mailto:b.ash.ir.bal.a.2.00@gmail.com"">b.ash.ir.bal.a.2.00@gmail.com</a>
<a href=""mailto:b.a.s.h.i.r.b.ala2.00@gmail.com"">b.a.s.h.i.r.b.ala2.00@gmail.com</a>
<a href=""mailto:ba.sh.i.r.b.al.a2.00@gmail.com"">ba.sh.i.r.b.al.a2.00@gmail.com</a>
<a href=""mailto:ba.s.h.i.r.bala2.00@gmail.com"">ba.s.h.i.r.bala2.00@gmail.com</a>
<a href=""mailto:b.ashir.b.ala200@gmail.com"">b.ashir.b.ala200@gmail.com</a>
<a href=""mailto:b.a.sh.i.r.bal.a20.0@gmail.com"">b.a.sh.i.r.bal.a20.0@gmail.com</a>
<a href=""mailto:b.a.s.h.i.r.b.a.la2.00@gmail.com"">b.a.s.h.i.r.b.a.la2.00@gmail.com</a>
<a href=""mailto:b.as.hi.r.b.a.l.a2.00@gmail.com"">b.as.hi.r.b.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.a.sh.irb.al.a200@gmail.com"">b.a.sh.irb.al.a200@gmail.com</a>
<a href=""mailto:bas.hi.rbal.a2.0.0@gmail.com"">bas.hi.rbal.a2.0.0@gmail.com</a>
<a href=""mailto:b.a.s.hi.r.b.al.a.200@gmail.com"">b.a.s.hi.r.b.al.a.200@gmail.com</a>
<a href=""mailto:ba.sh.i.rba.la.20.0@gmail.com"">ba.sh.i.rba.la.20.0@gmail.com</a>
<a href=""mailto:b.a.shi.rb.a.la2.0.0@gmail.com"">b.a.shi.rb.a.la2.0.0@gmail.com</a>
<a href=""mailto:b.a.sh.i.rb.a.la.20.0@gmail.com"">b.a.sh.i.rb.a.la.20.0@gmail.com</a>
<a href=""mailto:ba.sh.ir.b.al.a200@gmail.com"">ba.sh.ir.b.al.a200@gmail.com</a>
<a href=""mailto:b.a.s.h.ir.b.a.la.2.0.0@gmail.com"">b.a.s.h.ir.b.a.la.2.0.0@gmail.com</a>
<a href=""mailto:ba.s.hirb.ala.2.00@gmail.com"">ba.s.hirb.ala.2.00@gmail.com</a>
<a href=""mailto:b.a.shir.ba.la.2.0.0@gmail.com"">b.a.shir.ba.la.2.0.0@gmail.com</a>
<a href=""mailto:b.a.shi.r.b.al.a20.0@gmail.com"">b.a.shi.r.b.al.a20.0@gmail.com</a>
<a href=""mailto:bas.hirbala.20.0@gmail.com"">bas.hirbala.20.0@gmail.com</a>
<a href=""mailto:b.ash.i.r.b.al.a20.0@gmail.com"">b.ash.i.r.b.al.a20.0@gmail.com</a>
<a href=""mailto:b.a.shir.b.ala20.0@gmail.com"">b.a.shir.b.ala20.0@gmail.com</a>
<a href=""mailto:b.a.s.hir.ba.l.a.20.0@gmail.com"">b.a.s.hir.ba.l.a.20.0@gmail.com</a>
<a href=""mailto:b.a.sh.i.r.bal.a.200@gmail.com"">b.a.sh.i.r.bal.a.200@gmail.com</a>
<a href=""mailto:b.a.s.hi.r.ba.l.a.20.0@gmail.com"">b.a.s.hi.r.ba.l.a.20.0@gmail.com</a>
<a href=""mailto:b.a.s.hi.r.bala.2.00@gmail.com"">b.a.s.hi.r.bala.2.00@gmail.com</a>
<a href=""mailto:b.a.s.h.irba.l.a.200@gmail.com"">b.a.s.h.irba.l.a.200@gmail.com</a>
<a href=""mailto:b.a.s.h.i.rb.a.l.a.200@gmail.com"">b.a.s.h.i.rb.a.l.a.200@gmail.com</a>
<a href=""mailto:bas.hi.r.ba.la.2.00@gmail.com"">bas.hi.r.ba.la.2.00@gmail.com</a>
<a href=""mailto:ba.s.hi.rb.a.l.a.20.0@gmail.com"">ba.s.hi.rb.a.l.a.20.0@gmail.com</a>
<a href=""mailto:b.as.hi.rbala2.00@gmail.com"">b.as.hi.rbala2.00@gmail.com</a>
<a href=""mailto:bash.i.rb.al.a2.00@gmail.com"">bash.i.rb.al.a2.00@gmail.com</a>
<a href=""mailto:ba.s.h.ir.b.ala2.00@gmail.com"">ba.s.h.ir.b.ala2.00@gmail.com</a>
<a href=""mailto:ba.s.hi.rb.ala.2.00@gmail.com"">ba.s.hi.rb.ala.2.00@gmail.com</a>
<a href=""mailto:ba.sh.irbal.a200@gmail.com"">ba.sh.irbal.a200@gmail.com</a>
<a href=""mailto:ba.s.hi.rb.a.la2.0.0@gmail.com"">ba.s.hi.rb.a.la2.0.0@gmail.com</a>
<a href=""mailto:ba.s.hirb.a.l.a2.0.0@gmail.com"">ba.s.hirb.a.l.a2.0.0@gmail.com</a>
<a href=""mailto:bas.hir.b.a.la200@gmail.com"">bas.hir.b.a.la200@gmail.com</a>
<a href=""mailto:ba.s.h.i.r.b.a.la.20.0@gmail.com"">ba.s.h.i.r.b.a.la.20.0@gmail.com</a>
<a href=""mailto:b.as.h.i.rb.al.a.20.0@gmail.com"">b.as.h.i.rb.al.a.20.0@gmail.com</a>
<a href=""mailto:bas.h.ir.b.a.l.a200@gmail.com"">bas.h.ir.b.a.l.a200@gmail.com</a>
<a href=""mailto:b.ashi.rb.ala.200@gmail.com"">b.ashi.rb.ala.200@gmail.com</a>
<a href=""mailto:ba.s.h.i.rba.la2.0.0@gmail.com"">ba.s.h.i.rba.la2.0.0@gmail.com</a>
<a href=""mailto:b.a.sh.i.rb.a.la2.00@gmail.com"">b.a.sh.i.rb.a.la2.00@gmail.com</a>
<a href=""mailto:ba.s.h.i.rba.l.a200@gmail.com"">ba.s.h.i.rba.l.a200@gmail.com</a>
<a href=""mailto:ba.shi.rb.a.l.a200@gmail.com"">ba.shi.rb.a.l.a200@gmail.com</a>
<a href=""mailto:b.a.sh.ir.bala2.00@gmail.com"">b.a.sh.ir.bala2.00@gmail.com</a>
<a href=""mailto:ba.s.hirbal.a.2.00@gmail.com"">ba.s.hirbal.a.2.00@gmail.com</a>
<a href=""mailto:ba.sh.irb.a.l.a200@gmail.com"">ba.sh.irb.a.l.a200@gmail.com</a>
<a href=""mailto:bash.ir.b.ala.2.0.0@gmail.com"">bash.ir.b.ala.2.0.0@gmail.com</a>
<a href=""mailto:b.as.h.irb.al.a.20.0@gmail.com"">b.as.h.irb.al.a.20.0@gmail.com</a>
<a href=""mailto:ba.sh.irbal.a2.0.0@gmail.com"">ba.sh.irbal.a2.0.0@gmail.com</a>
<a href=""mailto:ba.s.h.ir.ba.la.20.0@gmail.com"">ba.s.h.ir.ba.la.20.0@gmail.com</a>
<a href=""mailto:b.a.s.hirbala20.0@gmail.com"">b.a.s.hirbala20.0@gmail.com</a>
<a href=""mailto:ba.s.hi.r.b.a.l.a.2.00@gmail.com"">ba.s.hi.r.b.a.l.a.2.00@gmail.com</a>
<a href=""mailto:b.as.h.i.r.ba.la.200@gmail.com"">b.as.h.i.r.ba.la.200@gmail.com</a>
<a href=""mailto:ba.s.h.i.r.b.al.a200@gmail.com"">ba.s.h.i.r.b.al.a200@gmail.com</a>
<a href=""mailto:b.a.sh.i.r.bala200@gmail.com"">b.a.sh.i.r.bala200@gmail.com</a>
<a href=""mailto:ba.shi.rb.a.l.a2.00@gmail.com"">ba.shi.rb.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.as.hirbal.a.20.0@gmail.com"">b.as.hirbal.a.20.0@gmail.com</a>
<a href=""mailto:bash.i.r.b.a.l.a.2.0.0@gmail.com"">bash.i.r.b.a.l.a.2.0.0@gmail.com</a>
<a href=""mailto:b.a.shir.ba.la.20.0@gmail.com"">b.a.shir.ba.la.20.0@gmail.com</a>
<a href=""mailto:bash.irb.a.la.2.0.0@gmail.com"">bash.irb.a.la.2.0.0@gmail.com</a>
<a href=""mailto:ba.s.hi.r.bal.a.20.0@gmail.com"">ba.s.hi.r.bal.a.20.0@gmail.com</a>
<a href=""mailto:b.ash.irb.a.l.a200@gmail.com"">b.ash.irb.a.l.a200@gmail.com</a>
<a href=""mailto:b.a.shir.b.a.la200@gmail.com"">b.a.shir.b.a.la200@gmail.com</a>
<a href=""mailto:ba.shi.rb.a.l.a.2.0.0@gmail.com"">ba.shi.rb.a.l.a.2.0.0@gmail.com</a>
<a href=""mailto:bashi.rba.l.a.20.0@gmail.com"">bashi.rba.l.a.20.0@gmail.com</a>
<a href=""mailto:ba.sh.irba.la.2.0.0@gmail.com"">ba.sh.irba.la.2.0.0@gmail.com</a>
<a href=""mailto:bas.h.i.r.bala2.00@gmail.com"">bas.h.i.r.bala2.00@gmail.com</a>
<a href=""mailto:b.a.sh.i.rb.ala200@gmail.com"">b.a.sh.i.rb.ala200@gmail.com</a>
<a href=""mailto:b.a.sh.i.r.bala.200@gmail.com"">b.a.sh.i.r.bala.200@gmail.com</a>
<a href=""mailto:b.as.h.ir.b.a.la2.00@gmail.com"">b.as.h.ir.b.a.la2.00@gmail.com</a>
<a href=""mailto:ba.s.hir.bal.a200@gmail.com"">ba.s.hir.bal.a200@gmail.com</a>
<a href=""mailto:bash.i.r.b.a.la.200@gmail.com"">bash.i.r.b.a.la.200@gmail.com</a>
<a href=""mailto:b.a.s.hir.b.al.a2.0.0@gmail.com"">b.a.s.hir.b.al.a2.0.0@gmail.com</a>
<a href=""mailto:ba.shirb.a.la.2.0.0@gmail.com"">ba.shirb.a.la.2.0.0@gmail.com</a>
<a href=""mailto:b.a.shi.r.bala.2.00@gmail.com"">b.a.shi.r.bala.2.00@gmail.com</a>
<a href=""mailto:b.a.shirb.a.la.20.0@gmail.com"">b.a.shirb.a.la.20.0@gmail.com</a>
<a href=""mailto:bashi.r.b.al.a.2.00@gmail.com"">bashi.r.b.al.a.2.00@gmail.com</a>
<a href=""mailto:bas.h.irb.a.l.a2.00@gmail.com"">bas.h.irb.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.ashirba.la.20.0@gmail.com"">b.ashirba.la.20.0@gmail.com</a>
<a href=""mailto:b.a.sh.irb.ala2.00@gmail.com"">b.a.sh.irb.ala2.00@gmail.com</a>
<a href=""mailto:ba.sh.ir.bal.a.2.0.0@gmail.com"">ba.sh.ir.bal.a.2.0.0@gmail.com</a>
<a href=""mailto:bas.hi.r.b.a.la2.0.0@gmail.com"">bas.hi.r.b.a.la2.0.0@gmail.com</a>
<a href=""mailto:ba.sh.irbala.2.00@gmail.com"">ba.sh.irbala.2.00@gmail.com</a>
<a href=""mailto:ba.s.h.ir.bal.a200@gmail.com"">ba.s.h.ir.bal.a200@gmail.com</a>
<a href=""mailto:bas.h.irb.ala.200@gmail.com"">bas.h.irb.ala.200@gmail.com</a>
<a href=""mailto:b.a.s.hirbala2.0.0@gmail.com"">b.a.s.hirbala2.0.0@gmail.com</a>
<a href=""mailto:ba.sh.ir.ba.la2.00@gmail.com"">ba.sh.ir.ba.la2.00@gmail.com</a>
<a href=""mailto:bashi.rba.la2.0.0@gmail.com"">bashi.rba.la2.0.0@gmail.com</a>
<a href=""mailto:b.a.shi.r.ba.l.a200@gmail.com"">b.a.shi.r.ba.l.a200@gmail.com</a>
<a href=""mailto:b.as.hi.rba.la200@gmail.com"">b.as.hi.rba.la200@gmail.com</a>
<a href=""mailto:ba.shi.rbala200@gmail.com"">ba.shi.rbala200@gmail.com</a>
<a href=""mailto:b.as.hi.r.ba.l.a2.00@gmail.com"">b.as.hi.r.ba.l.a2.00@gmail.com</a>
<a href=""mailto:b.a.shirbal.a200@gmail.com"">b.a.shirbal.a200@gmail.com</a>
<a href=""mailto:b.ashir.bala200@gmail.com"">b.ashir.bala200@gmail.com</a>
<a href=""mailto:b.a.shi.r.b.a.la20.0@gmail.com"">b.a.shi.r.b.a.la20.0@gmail.com</a>
<a href=""mailto:b.a.sh.i.rb.a.l.a.20.0@gmail.com"">b.a.sh.i.rb.a.l.a.20.0@gmail.com</a>
<a href=""mailto:ba.sh.i.rb.al.a.20.0@gmail.com"">ba.sh.i.rb.al.a.20.0@gmail.com</a>
<a href=""mailto:b.ashi.rbal.a20.0@gmail.com"">b.ashi.rbal.a20.0@gmail.com</a>
<a href=""mailto:b.a.sh.ir.ba.la.20.0@gmail.com"">b.a.sh.ir.ba.la.20.0@gmail.com</a>
<a href=""mailto:ba.sh.ir.b.a.la2.00@gmail.com"">ba.sh.ir.b.a.la2.00@gmail.com</a>
<a href=""mailto:ba.s.h.ir.bala.20.0@gmail.com"">ba.s.h.ir.bala.20.0@gmail.com</a>
<a href=""mailto:b.ashi.rb.a.la.200@gmail.com"">b.ashi.rb.a.la.200@gmail.com</a>
<a href=""mailto:b.a.sh.i.r.ba.l.a2.0.0@gmail.com"">b.a.sh.i.r.ba.l.a2.0.0@gmail.com</a>
<a href=""mailto:b.a.sh.irba.l.a200@gmail.com"">b.a.sh.irba.l.a200@gmail.com</a>
<a href=""mailto:bas.h.ir.ba.la200@gmail.com"">bas.h.ir.ba.la200@gmail.com</a>
<a href=""mailto:bas.h.i.rba.la2.0.0@gmail.com"">bas.h.i.rba.la2.0.0@gmail.com</a>
<a href=""mailto:b.a.s.hi.rba.l.a.2.00@gmail.com"">b.a.s.hi.rba.l.a.2.00@gmail.com</a>
<a href=""mailto:b.a.s.h.ir.b.ala2.00@gmail.com"">b.a.s.h.ir.b.ala2.00@gmail.com</a>
<a href=""mailto:b.a.s.h.i.rb.a.l.a2.00@gmail.com"">b.a.s.h.i.rb.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.as.h.ir.b.al.a.2.00@gmail.com"">b.as.h.ir.b.al.a.2.00@gmail.com</a>
<a href=""mailto:b.as.h.ir.bal.a2.00@gmail.com"">b.as.h.ir.bal.a2.00@gmail.com</a>
<a href=""mailto:b.a.shirb.a.l.a.20.0@gmail.com"">b.a.shirb.a.l.a.20.0@gmail.com</a>
<a href=""mailto:bash.irbal.a.20.0@gmail.com"">bash.irbal.a.20.0@gmail.com</a>
<a href=""mailto:ba.sh.irb.al.a.2.0.0@gmail.com"">ba.sh.irb.al.a.2.0.0@gmail.com</a>
<a href=""mailto:b.a.sh.i.rba.l.a2.00@gmail.com"">b.a.sh.i.rba.l.a2.00@gmail.com</a>
<a href=""mailto:b.a.sh.i.rb.a.la.2.0.0@gmail.com"">b.a.sh.i.rb.a.la.2.0.0@gmail.com</a>
<a href=""mailto:bashirbal.a.200@gmail.com"">bashirbal.a.200@gmail.com</a>
<a href=""mailto:ba.sh.ir.b.ala200@gmail.com"">ba.sh.ir.b.ala200@gmail.com</a>
<a href=""mailto:bas.h.i.r.ba.l.a2.0.0@gmail.com"">bas.h.i.r.ba.l.a2.0.0@gmail.com</a>
<a href=""mailto:bash.irbal.a2.0.0@gmail.com"">bash.irbal.a2.0.0@gmail.com</a>
<a href=""mailto:ba.shir.ba.l.a.20.0@gmail.com"">ba.shir.ba.l.a.20.0@gmail.com</a>
<a href=""mailto:ba.s.hi.r.bal.a.2.00@gmail.com"">ba.s.hi.r.bal.a.2.00@gmail.com</a>
<a href=""mailto:bashi.r.ba.l.a20.0@gmail.com"">bashi.r.ba.l.a20.0@gmail.com</a>
<a href=""mailto:b.a.sh.irbal.a2.0.0@gmail.com"">b.a.sh.irbal.a2.0.0@gmail.com</a>
<a href=""mailto:b.ashirb.ala2.0.0@gmail.com"">b.ashirb.ala2.0.0@gmail.com</a>
<a href=""mailto:b.ashi.rba.la.2.00@gmail.com"">b.ashi.rba.la.2.00@gmail.com</a>
<a href=""mailto:bash.irb.al.a.2.0.0@gmail.com"">bash.irb.al.a.2.0.0@gmail.com</a>
<a href=""mailto:b.a.shirb.a.l.a200@gmail.com"">b.a.shirb.a.l.a200@gmail.com</a>
<a href=""mailto:b.ash.ir.bala.2.00@gmail.com"">b.ash.ir.bala.2.00@gmail.com</a>
<a href=""mailto:b.a.shi.r.b.a.l.a.2.00@gmail.com"">b.a.shi.r.b.a.l.a.2.00@gmail.com</a>
<a href=""mailto:b.as.hi.r.b.a.la.20.0@gmail.com"">b.as.hi.r.b.a.la.20.0@gmail.com</a>
<a href=""mailto:bash.ir.b.ala.200@gmail.com"">bash.ir.b.ala.200@gmail.com</a>
<a href=""mailto:b.a.s.hi.r.b.ala.200@gmail.com"">b.a.s.hi.r.b.ala.200@gmail.com</a>
<a href=""mailto:ba.s.hi.r.ba.l.a.2.00@gmail.com"">ba.s.hi.r.ba.l.a.2.00@gmail.com</a>
<a href=""mailto:ba.s.h.ir.b.a.l.a.20.0@gmail.com"">ba.s.h.ir.b.a.l.a.20.0@gmail.com</a>
<a href=""mailto:bas.h.i.r.b.a.l.a20.0@gmail.com"">bas.h.i.r.b.a.l.a20.0@gmail.com</a>
<a href=""mailto:b.ashi.r.b.a.l.a2.00@gmail.com"">b.ashi.r.b.a.l.a2.00@gmail.com</a>
<a href=""mailto:b.a.s.hirba.l.a2.00@gmail.com"">b.a.s.hirba.l.a2.00@gmail.com</a>
<a href=""mailto:ba.shi.r.b.a.la200@gmail.com"">ba.shi.r.b.a.la200@gmail.com</a>
<a href=""mailto:ba.sh.i.rb.al.a20.0@gmail.com"">ba.sh.i.rb.al.a20.0@gmail.com</a>
<a href=""mailto:ba.sh.i.rb.a.la.2.00@gmail.com"">ba.sh.i.rb.a.la.2.00@gmail.com</a>
<a href=""mailto:bas.hirb.a.l.a.2.0.0@gmail.com"">bas.hirb.a.l.a.2.0.0@gmail.com</a>
<a href=""mailto:b.ash.i.r.b.al.a200@gmail.com"">b.ash.i.r.b.al.a200@gmail.com</a>
<a href=""mailto:b.a.shi.rbal.a2.0.0@gmail.com"">b.a.shi.rbal.a2.0.0@gmail.com</a>
<a href=""mailto:bas.h.ir.ba.l.a.200@gmail.com"">bas.h.ir.ba.l.a.200@gmail.com</a>
<a href=""mailto:b.as.h.irba.la200@gmail.com"">b.as.h.irba.la200@gmail.com</a>
<a href=""mailto:ba.s.hi.rb.ala200@gmail.com"">ba.s.hi.rb.ala200@gmail.com</a>
<a href=""mailto:b.ashirb.al.a2.0.0@gmail.com"">b.ashirb.al.a2.0.0@gmail.com</a>
<a href=""mailto:b.ashi.r.b.a.la.200@gmail.com"">b.ashi.r.b.a.la.200@gmail.com</a>
<a href=""mailto:b.a.sh.i.rbala.20.0@gmail.com"">b.a.sh.i.rbala.20.0@gmail.com</a>
<a href=""mailto:ba.sh.irba.la20.0@gmail.com"">ba.sh.irba.la20.0@gmail.com</a>"
QpdvEtjG,Savings,Spocoman,Python,Saturday 7th of October 2023 10:44:24 AM CDT,"salary = float(input())
months = int(input())
minimal_costs = float(input())

monthly_savings = salary * 0.70 - minimal_costs

print(f""She can save {monthly_savings / salary * 100:.2f}%\n{monthly_savings * months:.2f}"")
"
CagUWq3n,Savings,Spocoman,JavaScript,Saturday 7th of October 2023 10:31:20 AM CDT,"function savings(input) {
    let salary = Number(input[0]);
    let months = Number(input[1]);
    let minimalCosts = Number(input[2]);

    let monthlySavings = salary * 0.70 - minimalCosts;

    console.log(`She can save ${(monthlySavings / salary * 100).toFixed(2)}%\n${(monthlySavings * months).toFixed(2)}`);

    return;
}"
QcZWGq4H,Untitled,Skos_Martren,C++,Saturday 7th of October 2023 10:31:17 AM CDT,"#include <iostream>
#include<cassert>
#include <array>

using namespace std; 

constexpr int SIZE_ALPHABET = 128;

class Solution {

private:

    // https://github.com/SkosMartren/leetcode_com/blob/main/README.md#setting-the-size-of-an-array-in-a-private-section
    //constexpr int SIZE_ALPHABET = 128; // 'Solution::SIZE_ALPHABET' cannot be declared with 'constexpr' specifier // почему так?
    int LengthSubstr = 0;
public:

    int lengthOfLongestSubstringKDistinct(string_view s, int k) { // ""0 <= k <= 50""

        if (k <= 0) { return LengthSubstr; }

        array<int, SIZE_ALPHABET> CharToCount; CharToCount.fill(0);

        for (int RightBorderWindow = 0, LeftBorderWindow = 0; RightBorderWindow <= s.size() - 1; ++RightBorderWindow) { // move Right ptr

            if (++CharToCount[s[RightBorderWindow]] == 1) { // новая буква (CharToCount[RightBorderWindow]) в sliding window
                --k;
            } // RightBorderWindow указывет на последний символ sliding window 

            while (LeftBorderWindow < RightBorderWindow && k < 0) { // move Left ptr

                if (--CharToCount[s[LeftBorderWindow]] == 0) {
                    ++k;
                }
                ++LeftBorderWindow;
            } // LeftBorderWindow указывет на первый символ sliding window

            LengthSubstr = max(LengthSubstr, RightBorderWindow - LeftBorderWindow + 1);
            assert(LeftBorderWindow <= RightBorderWindow);
        }

        return LengthSubstr;
    }

};

int main() {
    cout << Solution().lengthOfLongestSubstringKDistinct(""abc"", 0) << '\n';
    cout << Solution().lengthOfLongestSubstringKDistinct(""aaa"", 0) << '\n';
    cout << Solution().lengthOfLongestSubstringKDistinct(""aAaA"", 1) << '\n';
    cout << Solution().lengthOfLongestSubstringKDistinct(""aA~aA"", 2) << '\n';
    cout << Solution().lengthOfLongestSubstringKDistinct(""aAaA"", 2) << '\n';
}
/*
0
0
1
2
4
*/"
Z9v8CPuB,Savings,Spocoman,C++,Saturday 7th of October 2023 10:25:26 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double salary;
    cin >> salary;

    int months;
    cin >> months;

    double minimalCosts;
    cin >> minimalCosts;

    double monthlySavings = salary * 0.70 - minimalCosts;

    printf(""She can save %.2f%%\n%.2f"", monthlySavings / salary * 100, monthlySavings * months);

	return 0;
}"
2E43bzQ6,BASH Dialog Shift Log example #1,metalx1000,Bash,Saturday 7th of October 2023 10:19:49 AM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2023  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

tmpfile=""/tmp/shiftlog.tmp""
logfile=""/tmp/shiftlog""
backtitle=""Cool Fire Department""

exec 3>&1;
user=""$(dialog --backtitle ""$backtitle"" --inputbox ""Enter the name"" 15 30 2>&1 1>&3)""
[[ ""$user"" ]] || exit

date=""$(dialog --backtitle ""$backtitle"" --calendar 'calendar'  5 50 2>&1 1>&3)""
echo $date
[[ ""$date"" ]] || exit


#dialog --title ""Shift Log"" --backtitle ""$backtitle"" --editbox ""$logfile"" 16 50 2> ""$tmpfile""; cp ""$tmpfile"" ""$logfile""
dialog --title ""Shift Log"" --backtitle ""$backtitle"" --editbox ""$logfile"" 16 50 2> ""$tmpfile""; cp ""$tmpfile"" ""$logfile""

clear
echo ""$user -- $date""
cat $logfile
"
tHt6KzGK,Savings,Spocoman,C#,Saturday 7th of October 2023 10:19:22 AM CDT,"using System;

namespace Savings
{
    class Program
    {
        static void Main(string[] args)
        {
            double salary = double.Parse(Console.ReadLine());
            int months = int.Parse(Console.ReadLine());
            double minimalCosts = double.Parse(Console.ReadLine());

            double monthlySavings = salary * 0.70 - minimalCosts;

            Console.WriteLine($""She can save {monthlySavings / salary * 100:f2}%\n{monthlySavings * months:f2}"");
        }
    }
}"
5q8c44WR,Print file content through stdin redirection,BenTibnam,C,Saturday 7th of October 2023 10:15:12 AM CDT,"#include <stdio.h>

int main(void)
{
    char c;

    while ((c = getchar()) != EOF)
    {
        printf(""%c"", c);
    }

    return 0;
}

// ./bin < input_file will print the input file content to stdout"
W9QBRupQ,Untitled,Skos_Martren,C++,Saturday 7th of October 2023 10:09:32 AM CDT,"/*
class Solution {
 public:
  vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {
  }
};
*/

#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

class Solution {

public:

    /*

    1 <= val_i, freq_i <= 10^4 for each encoded1[i].
    1 <= val_j, freq_j <= 10^4 for each encoded2[j].

    encoded1[i].front() == val_i, encoded1[i].back() == freq_i
    encoded2[j].front() == val_j, encoded2[j].back() == freq_j
    */
    vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {

        vector<vector<int>> Product;

        int i = 0;
        int j = 0;

        while (i < encoded1.size()) { // <-- ""The full arrays that encoded1 and encoded2 represent are the same length."" --> sum(freq_i) == sum(freq_j)

            /*
            encoded1[i].length == 2
            encoded2[j].length == 2
            */
            int product_ij = encoded1[i].front() * encoded2[j].front();

            // ""Note: Compression should be done such that the run-length encoded array has the minimum possible length.""
            int freq_ij = min(encoded1[i].back(), encoded2[j].back()); // количество  product_ij не может быть более min(encoded1[i].back(), encoded2[j].back())

            encoded1[i].back() -= freq_ij;
            encoded2[j].back() -= freq_ij;

            // хотя бы один из этих условных операторов сработает всегда ввиду определения freq_ij, а в конечном итоге i AND j одновременно укажут на i == encoded1.size() AND j == encoded2.size() --> цикл будет работать за O(|encoded1| + |encoded2|)
            if (encoded1[i].back() == 0) { ++i; }
            if (encoded2[j].back() == 0) { ++j; }

            if (Product.empty() || Product.back().front() != product_ij) { Product.push_back({ product_ij , freq_ij }); }
            else { // см. ""My ex 2"" пример в теле main
                Product.back().back() += freq_ij; 
            }
        }

        return Product;

    }
};

int main() {

    vector<vector<int>> encoded1 = { {1, 3}, {2,3} }, encoded2 = { {6, 3}, {3, 3} };

    vector<vector<int>> Ans = Solution().findRLEArray(encoded1, encoded2);

    for (auto vec : Ans) {
        for (int val : vec) {
            cout << val << ' ';
        }
        cout << '\n';
    }
}
/*
vector<vector<int>> encoded1 = { {10, 2}, {7,1}, {3, 2}, {17,1} }, encoded2 = { {11, 3}, {15, 3} };

110 2
77 1
45 2
255 1

10 10  7  3  3 17
11 11 11 15 15 15
*/"
ec0yAcqF,Summer Shopping,Spocoman,Python,Saturday 7th of October 2023 09:52:23 AM CDT,"budget = float(input())
towel = float(input())
discount = int(input())

umbrella = towel / 3 * 2
flip_flops = umbrella * 0.75
beach_bag = (towel + flip_flops) / 3

sum = (towel + umbrella + flip_flops + beach_bag) * (100 - discount) / 100

if budget >= sum:
    print(f""Annie's sum is {sum:.2f} lv. She has {budget - sum:.2f} lv. left."")
else:
    print(f""Annie's sum is {sum:.2f} lv. She needs {sum - budget:.2f} lv. more."")
"
RLdqKRk9,Untitled,Sreekar_0125,C++,Saturday 7th of October 2023 09:42:15 AM CDT,"#include <bits/stdc++.h>
using namespace std;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define traverse(i, a) for (auto i : a)
#define set_bits(x) __builtin_popcountll(x)
#define leading_zero(x) __builtin_clz(x)
#define trailing_zero(x) __builtin_ctz(x)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define MOD 1000000007
#define endl '\n'

#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x) \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif

const int N = 2e5;

template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}

template <typename T>
void input(vector<T> &v)
{
    f(i, 0, (int)v.size()) cin >> v[i];
}

template <typename T>
void input(T &a)
{
    cin >> a;
}

template <typename T>
void print(vector<T> &v)
{
    f(i, 0, (int)v.size()) cout << v[i] << ' ';
    cout << endl;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b, int m)
{
    a %= m;
    int ans = 1;
    while (b > 0)
    {
        if (b & 1)
        {
            ans = (ans * a) % MOD;
        }
        a = (a * a) % MOD;
        b >>= 1;
    }
    return ans;
}

int modadd(int a, int b)
{
    return (a % MOD + b % MOD) % MOD;
}
int modsub(int a, int b)
{
    return ((a % MOD - b % MOD) % MOD + MOD) % MOD;
}
int modmul(int a, int b)
{
    return (a % MOD * b % MOD) % MOD;
}
int moddiv(int a, int b)
{
    return ((a % MOD) * (binpow(b, MOD - 2, MOD))) % MOD;
}

int lbnd(vi &v, int x)
{
    int n = v.size();
    int low = 0;
    int high = n - 1;
    int ans = -1;
    while (low <= high)
    {
        int mid = (low + high) >> 1;
        if (v[mid] <= x)
        {
            ans = mid;
            low = mid + 1;
        }
        else
        {
            high = mid - 1;
        }
    }
    return ans;
}

int ubnd(vi &v, int x)
{
    int n = v.size();
    int low = 0;
    int high = n - 1;
    int ans = -1;
    while (low <= high)
    {
        int mid = (low + high) >> 1;
        if (v[mid] >= x)
        {
            ans = mid;
            high = mid - 1;
        }
        else
        {
            low = mid + 1;
        }
    }
    return ans;
}

// vpi moves = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};
// vi graph[N + 1];
// vb visited(N + 1, false);
// vi parent(N + 1, -1);
// vi level(N + 1, 0);

// void bfs(vi *graph, vb &visited, vi &parent, vi &level, int start)
// {
//     queue<int> q;
//     visited[start] = true;
//     q.push(start);
//     while (!q.empty())
//     {
//         int node = q.front();
//         traverse(i, graph[node])
//         {
//             if (!visited[i])
//             {
//                 if (parent[i] == -1)
//                     parent[i] = node;
//                 if (level[i] == 0)
//                     level[i] = 1 + level[node];
//                 visited[i] = true;
//                 q.push(i);
//             }
//         }
//         q.pop();
//     }
// }

// void dfs(vi *graph, vb &visited, int start)
// {
//     visited[start] = true;
//     traverse(i, graph[start])
//     {
//         if (!visited[i])
//         {
//             visited[i] = true;
//             dfs(graph, visited, i);
//         }
//     }
// }

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

void solve()
{
    string s1, s2;
    cin >> s1 >> s2;

    vi cnt(26, 0);
    f(i, 0, s1.length())
    {
        cnt[s1[i] - 'a']++;
    }
    int ans = 0;

    f(i, 0, s2.length())
    {
        int ch = s2[i] - 'a';
        if (cnt[ch])
        {
            cnt[ch]--;
        }
        else
        {
            if (ch == 0)
            {
                if(cnt['z' - 'a'])
                {
                    cnt['z' - 'a']--;
                    ans++;
                }
                else 
                {
                    ans += 2;
                }
            }
            else 
            {
                if (cnt[ch - 1])
                {
                    cnt[ch - 1]--;
                    ans++;
                }
                else
                {
                    ans += 2;
                }
            }    
        }
    }
    cout << ans << endl;
}

signed main()
{
    init_code();
    fast();
    int t = 1;
    cin >> t;
    // gensieve();
    while (t--)
    {
        solve();
    }
    return 0;
}
"
TiWRA75d,shooter_final,zerg959,Python,Saturday 7th of October 2023 09:33:59 AM CDT,"from pygame import *
from random import randint
#подгружаем отдельно функции для работы со шрифтом
font.init()
font1 = font.Font(None, 80)
win = font1.render('YOU WIN!', True, (255, 255, 255))
lose = font1.render('YOU LOSE!', True, (180, 0, 0))


font2 = font.Font(None, 36)


#фоновая музыка
mixer.init()
mixer.music.load('space.ogg')
mixer.music.play()
fire_sound = mixer.Sound('fire.ogg')


#нам нужны такие картинки:
img_back = ""galaxy.jpg"" #фон игры
img_bullet = ""bullet.png"" #пуля
img_hero = ""rocket.png"" #герой
img_enemy = ""ufo.png"" #враг
score = 0 #сбито кораблей
goal = 10 #столько кораблей нужно сбить для победы
lost = 0 #пропущено кораблей
max_lost = 3 #проиграли, если пропустили столько
#класс-родитель для других спрайтов
class GameSprite(sprite.Sprite):
 #конструктор класса
   def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
       #вызываем конструктор класса (Sprite):
       sprite.Sprite.__init__(self)


       #каждый спрайт должен хранить свойство image - изображение
       self.image = transform.scale(image.load(player_image), (size_x, size_y))
       self.speed = player_speed


       #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
       self.rect = self.image.get_rect()
       self.rect.x = player_x
       self.rect.y = player_y
 #метод, отрисовывающий героя на окне
   def reset(self):
       window.blit(self.image, (self.rect.x, self.rect.y))


#класс главного игрока
class Player(GameSprite):
   #метод для управления спрайтом стрелками клавиатуры
   def update(self):
       keys = key.get_pressed()
       if keys[K_LEFT] and self.rect.x > 5:
           self.rect.x -= self.speed
       if keys[K_RIGHT] and self.rect.x < win_width - 80:
           self.rect.x += self.speed
 #метод ""выстрел"" (используем место игрока, чтобы создать там пулю)
   def fire(self):
       bullet = Bullet(img_bullet, self.rect.centerx, self.rect.top, 15, 20, -15)
       bullets.add(bullet)


#класс спрайта-врага  
class Enemy(GameSprite):
   #движение врага
   def update(self):
       self.rect.y += self.speed
       global lost
       #исчезает, если дойдёт до края экрана
       if self.rect.y > win_height:
           self.rect.x = randint(80, win_width - 80)
           self.rect.y = 0
           lost = lost + 1
#класс спрайта-пули  
class Bullet(GameSprite):
   # движение врага
   def update(self):
       self.rect.y += self.speed
       # исчезает, если дойдет до края экрана
       if self.rect.y < 0:
           self.kill()
#создаём окошко
win_width = 700
win_height = 500
display.set_caption(""Shooter"")
window = display.set_mode((win_width, win_height))
background = transform.scale(image.load(img_back), (win_width, win_height))
#создаём спрайты
ship = Player(img_hero, 5, win_height - 100, 80, 100, 10)
#создание группы спрайтов-врагов
monsters = sprite.Group()
for i in range(1, 6):
   monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
   monsters.add(monster)
bullets = sprite.Group()
#переменная ""игра закончилась"": как только там True, в основном цикле перестают работать спрайты
finish = False
#основной цикл игры:
run = True #флаг сбрасывается кнопкой закрытия окна
while run:
   #с
обытие нажатия на кнопку Закрыть   for e in event.get():
       if e.type == QUIT:
           run = False
       #событие нажатия на пробел - спрайт стреляет
       elif e.type == KEYDOWN:
           if e.key == K_SPACE:
               fire_sound.play()
               ship.fire()
 #сама игра: действия спрайтов, проверка правил игры, перерисовка
   if not finish:
       #обновляем фон
       window.blit(background,(0,0))


       #производим движения спрайтов
       ship.update()
       monsters.update()
       bullets.update()


       #обновляем их в новом местоположении при каждой итерации цикла
       ship.reset()
       monsters.draw(window)
       bullets.draw(window)
       #проверка столкновения пули и монстров
       collides = sprite.groupcollide(monsters, bullets, True, True)
       for c in collides:
           #этот цикл повторится столько раз, сколько монстров подбито
           score = score + 1
           monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
           monsters.add(monster)


       #возможный проигрыш
       if sprite.spritecollide(ship, monsters, False) or lost >= max_lost:
           finish = True #проиграли
           window.blit(lose, (200, 200))


       #проверка выигрыша
       if score >= goal:
           finish = True
           window.blit(win, (200, 200))


       #пишем текст на экране
       text = font2.render(""Счет: "" + str(score), 1, (255, 255, 255))
       window.blit(text, (10, 20))


       text_lose = font2.render(""Пропущено: "" + str(lost), 1, (255, 255, 255))
       window.blit(text_lose, (10, 50))


       display.update()

   else:
       finish = False
       score = 0
       lost = 0
       for b in bullets:
           b.kill()
       for m in monsters:
           m.kill()


       time.delay(3000)
       for i in range(1, 6):
           monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
           monsters.add(monster)
      


   time.delay(50)"
DXbkLiQ5,MOK layout Kurdish Cyrillic,dksetiavan,JSON,Saturday 7th of October 2023 09:30:30 AM CDT,"OK_Layout_Begin
Name:Kurdish Cyrillic
'1234567890
ԛԝертйуиопӧш
асдфгһжклэщ
зхчвбнмәь
'1234567890
ԚԜЕРТЙУИОПӦШ
АСДФГҺЖКЛЭЩ
ЗХЧВБНМӘЬ
₽£¥€$%^&*()
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
1dXdgbfJ,MOK layout Kurdi (Hawar Latin),dksetiavan,JSON,Saturday 7th of October 2023 09:29:33 AM CDT,"OK_Layout_Begin
Name:Kurdi (Hawar Latin)
1234567890ḧẍ
qwertyuiopêû
asdfghjklşî
zxcvbnmç'
1234567890ḦẌ
QWERTYUIOPÊÛ
ASDFGHJKLŞÎ
ZXCVBNMÇ'
№£¥€$%^&*()
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
T3CkC6Zx,MOK layout Kurdi (unified alphabet),dksetiavan,JSON,Saturday 7th of October 2023 09:28:39 AM CDT,"OK_Layout_Begin
Name:Kurdish Unified Alphabet
1234567890
qwertyuiopéú
asdfghjklíù
zxcvbnm'
1234567890
QWERTYUIOPÉÚ
ASDFGHJKLÍÙ
ZXCVBNM'
£¥€$%^&*()
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
tECmK1eZ,Untitled,Josif_tepe,C++,Saturday 7th of October 2023 09:07:43 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
using namespace std;

struct ucenik{
    string ime;
    string prezime;
    
    void vnesi() {
        cin >> ime >> prezime;
        
    }
    void pecati() {
        cout << ime << "" "" << prezime << endl;
    }
};
int main() {
    ucenik u;

    u.vnesi();
    u.pecati();
    
    
    
    return 0;
}
"
XAN5Whw1,Josephus Permutation..,DiYane,Python,Saturday 7th of October 2023 09:06:23 AM CDT,"def josephus(elements, skip):
    idx = 0
    result = []
    while len(elements) > 0:
        idx = (idx + skip - 1) % len(elements)
        result.append((elements.pop(idx)))

    return result

def trim_white_spaces(elements):
    result = elements
    no_spaces = ''
    for num in result:
        if no_spaces != '':
            no_spaces += ','
        for char in str(num):
            if ord(char) in range(48, 58):
                no_spaces += char

    return '[' + no_spaces + ']'


elements_list = input().split()
k = int(input())

print((trim_white_spaces(josephus(elements_list, k))))"
5YPAfj6m,Josephus Permutation,DiYane,Python,Saturday 7th of October 2023 09:04:02 AM CDT,"people = input().split(' ')
kills = int(input())
executed = []
counter = 0
current_index = 0

while len(people) > 0:
    counter += 1

    if counter % kills == 0:
        executed.append(people.pop(current_index))
    else:
        current_index += 1

    if current_index >= len(people):
        current_index = 0

print(str(executed).replace(' ', '').replace('\'', ''))"
RQ589VM3,Конвертер валют,Yaniha,C#,Saturday 7th of October 2023 09:01:19 AM CDT,"using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using static System.Net.Mime.MediaTypeNames;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandGoldToWood = ""1"";
            const string CommandGoldToRubies = ""2"";
            const string CommandWoodToGold = ""3"";
            const string CommandWoodToRubies = ""4"";
            const string CommandRubiesToGold = ""5"";
            const string CommandRubiesToWood = ""6"";
            const string CommandExit = ""exit"";

            float gold;
            float wood;
            float rubies;
            float goldToWood = 1;
            float goldToRubies = 10;
            float woodToGold = 2;
            float woodToRubies = 25;
            float rubiesToGold = 0.12f;
            float rubiesToWood = 0.035f;
            string userInput;
            bool isWorking = true;

            Console.Write($""Сколько у вас золота? "");
            gold = Convert.ToInt32(Console.ReadLine());
            Console.Write($""Сколько у вас дерева? "");
            wood = Convert.ToInt32(Console.ReadLine());
            Console.Write($""Сколько у вас рубинов? "");
            rubies = Convert.ToInt32(Console.ReadLine());

            while (isWorking)
            {
                Console.Clear();
                Console.WriteLine($""У вас: {gold} золота; {wood} девера; {rubies} рубинов.\nКакую конвертацию хотите выполнить?"");
                Console.WriteLine($""1. Золото в дерево\n2. Золото в рубины\n3. Дерево в золото\n4. Дерево в рубины\n"" +
                    $""5. Рубины в золото\n6. Рубины в дерево\nexit. выход"");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandGoldToWood:
                        Console.WriteLine($""1 дерево = {goldToWood} золота. Сколько дерева вы хотите получить?"");
                        userInput = Console.ReadLine();
                        wood += Convert.ToSingle(userInput);
                        gold -= Convert.ToSingle(userInput) * goldToWood;
                        break;
                    case CommandGoldToRubies:
                        Console.WriteLine($""1 рубин = {goldToRubies} золота. Сколько рубинов вы хотите получить?"");
                        userInput = Console.ReadLine();
                        rubies += Convert.ToSingle(userInput);
                        gold -= Convert.ToSingle(userInput) * goldToRubies;
                        break;
                    case CommandWoodToGold:
                        Console.WriteLine($""1 золото = {woodToGold} дерева. Сколько золота вы хотите получить?"");
                        userInput = Console.ReadLine();
                        gold += Convert.ToSingle(userInput);
                        wood -= Convert.ToSingle(userInput) * woodToGold;
                        break;
                    case CommandWoodToRubies:
                        Console.WriteLine($""1 рубин = {woodToRubies} дерева. Сколько рубинов вы хотите получить?"");
                        userInput = Console.ReadLine();
                        rubies += Convert.ToSingle(userInput);
                        wood -= Convert.ToSingle(userInput) * woodToRubies;
                        break;
                    case CommandRubiesToGold:
                        Console.WriteLine($""1 золото = {rubiesToGold} рубинов. Сколько золота вы хотите получить?"");
                        userInput = Console.ReadLine();
                        gold += Convert.ToSingle(userInput);
                        rubies -= Convert.ToSingle(userInput) * rubiesToGold;
                        break;
                    case CommandRubiesToWood:
                        Console.WriteLine($""1 дерева = {rubiesToWood} рубинов. Сколько дерева вы хотите получить?"");
                        userInput = Console.ReadLine();
                        wood += Convert.ToSingle(userInput);
                        rubies -= Convert.ToSingle(userInput) * rubiesToWood;
                        break;
                    case CommandExit:
                        isWorking = false;
                        break;
                }
            }

            Console.WriteLine(""Программа закрыта!"");
            Console.ReadKey();
        }
    }
}"
UhJid4Y1,Untitled,Skos_Martren,C++,Saturday 7th of October 2023 08:54:08 AM CDT,"/*
class Solution {
 public:
  vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {
  }
};
*/

#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

class Solution {

public:

    /*
    
    1 <= val_i, freq_i <= 10^4 for each encoded1[i].
    1 <= val_j, freq_j <= 10^4 for each encoded2[j].
    
    encoded1[i].front() == val_i, encoded1[i].back() == freq_i
    encoded2[j].front() == val_j, encoded2[j].back() == freq_j
    */
    vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {  

        vector<vector<int>> Product;

        int i = 0;
        int j = 0;

        while (i < encoded1.size()) { // <-- ""The full arrays that encoded1 and encoded2 represent are the same length."" --> sum(freq_i) == sum(freq_j)

            /*
            encoded1[i].length == 2
            encoded2[j].length == 2
            */
            int product_ij = encoded1[i].front() * encoded2[j].front();

            // ""Note: Compression should be done such that the run-length encoded array has the minimum possible length.""
            int freq_ij = min(encoded1[i].back(), encoded2[j].back()); // количество  product_ij не может быть более min(encoded1[i].back(), encoded2[j].back())

            encoded1[i].back() -= freq_ij;
            encoded2[j].back() -= freq_ij;

            // хотя бы один из этих условных операторов сработает всегда ввиду определения freq_ij, а в конечном итоге i AND j одновременно укажут на i == encoded1.size() AND j == encoded2.size() --> цикл будет работать за O(|encoded1| + |encoded2|)
            if (encoded1[i].back() == 0) { ++i; }
            if (encoded2[j].back() == 0) { ++j; }

            Product.push_back({ product_ij , freq_ij });
        }

        return Product;

    }
};

int main() {

    vector<vector<int>> encoded1 = { {10, 2}, {7,1}, {3, 2}, {17,1} }, encoded2 = { {11, 3}, {15, 3} };

    vector<vector<int>> Ans = Solution().findRLEArray(encoded1, encoded2);

    for (auto vec : Ans) {
        for (int val : vec) {
            cout << val << ' ';
        }
        cout << '\n';
    }
}
/*
vector<vector<int>> encoded1 = { {10, 2}, {7,1}, {3, 2}, {17,1} }, encoded2 = { {11, 3}, {15, 3} };

110 2
77 1
45 2
255 1

10 10  7  3  3 17
11 11 11 15 15 15
*/"
mmf41QZK,Summer Shopping,Spocoman,JavaScript,Saturday 7th of October 2023 08:44:48 AM CDT,"function cruiseChip(input) {
    let budget = Number(input[0]);
    let towel = Number(input[1]);
    let discount = Number(input[2]);

    let umbrella = towel / 3 * 2;
    let flipFlops = umbrella * 0.75;
    let beachBag = (towel + flipFlops) / 3;

    let sum = (towel + umbrella + flipFlops + beachBag) * (100 - discount) / 100;

    if (budget >= sum) {
        console.log(`Annie's sum is ${sum.toFixed(2)} lv. She has ${(budget - sum).toFixed(2)} lv. left.`);
    } else {
        console.log(`Annie's sum is ${sum.toFixed(2)} lv. She needs ${(sum - budget).toFixed(2)} lv. more.`);
    }
    return;
}"
7tPpfCX4,Summer Shopping,Spocoman,C++,Saturday 7th of October 2023 08:36:17 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double budget, towel, discount;
    cin >> budget >> towel >> discount;

    double umbrella = towel / 3 * 2;
    double flipFlops = umbrella * 0.75;
    double beachBag = (towel + flipFlops) / 3;

    double sum = (towel + umbrella + flipFlops + beachBag) * (100 - discount) / 100;

    printf(""Annie's sum is %.2f lv. "", sum);
    if (budget >= sum) {
        printf(""She has %.2f lv. left."", budget - sum);
    }
    else {
        printf(""She needs %.2f lv. more."", sum - budget);
    }
	return 0;
}"
QPfTBzQy,Untitled,Josif_tepe,C++,Saturday 7th of October 2023 08:31:58 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
using namespace std;

struct ucenik {
    string ime;
    string prezime;
    int godini;
    double prosek;
    string sredno_uciliste;
};

int main() {
    
    int n;
    cin >> n;
    
    ucenik ucenici[n];
    
    for(int i = 0; i < n; i++) {
        cin >> ucenici[i].ime >> ucenici[i].prezime >> ucenici[i].godini >> ucenici[i].prosek >> ucenici[i].sredno_uciliste;
    }
    
    for(int i = 0; i < n; i++) {
        cout << ucenici[i].ime << "" "" << ucenici[i].prezime << "" ""<< ucenici[i].godini << "" "" << ucenici[i].prosek << "" ""<< ucenici[i].sredno_uciliste << endl;
    }
    
    return 0;
}
"
2ikDQQjH,Summer Shopping,Spocoman,C#,Saturday 7th of October 2023 08:28:24 AM CDT,"using System;

namespace SummerShopping
{
    class Program
    {
        static void Main(string[] args)
        {
            double budget = double.Parse(Console.ReadLine());
            double towel = double.Parse(Console.ReadLine());
            int discount = int.Parse(Console.ReadLine());

            double umbrella = towel / 3 * 2;
            double flipFlops = umbrella * 0.75;
            double beachBag = (towel + flipFlops) / 3;

            double sum = (towel + umbrella + flipFlops + beachBag) * (100 - discount) / 100;

            Console.Write($""Annie's sum is {sum:f2} lv. "");
            if (budget >= sum)
            {
                Console.WriteLine($""She has {budget - sum:f2} lv. left."");
            }
            else
            {
                Console.WriteLine($""She needs {sum - budget:f2} lv. more."");
            }
        }
    }
}"
XiZsbqRD,News Oct7 23,Newscaster_Ned,Email,Saturday 7th of October 2023 08:18:31 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

I‎ ‎j‎u‎s‎t‎ ‎w‎a‎n‎n‎a‎ ‎t‎h‎a‎n‎k‎ ‎a‎l‎l‎ ‎t‎h‎o‎s‎e‎ ‎g‎r‎o‎s‎s‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎e‎o‎p‎l‎e‎ ‎f‎o‎r‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎s‎i‎t‎e‎.‎

J‎e‎w‎i‎s‎h‎ ‎H‎o‎l‎i‎d‎a‎y‎ ‎H‎o‎r‎r‎o‎r‎:‎ ‎H‎a‎m‎a‎s‎ ‎u‎n‎p‎r‎e‎c‎e‎d‎e‎n‎t‎e‎d‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎

T‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎R‎o‎c‎k‎e‎t‎s‎ ‎R‎a‎i‎n‎ ‎D‎o‎w‎n‎

S‎h‎o‎c‎k‎:‎ ‎M‎i‎l‎i‎t‎a‎n‎t‎s‎ ‎I‎n‎f‎i‎l‎t‎r‎a‎t‎e‎ ‎t‎o‎w‎n‎s‎

m‎u‎l‎t‎i‎p‎l‎e‎ ‎f‎a‎t‎a‎l‎i‎t‎i‎e‎s‎,‎ ‎~‎3‎0‎0‎ ‎W‎o‎u‎n‎d‎e‎d‎

N‎e‎t‎a‎n‎y‎a‎h‎u‎:‎ ‎’‎W‎e‎ ‎A‎r‎e‎ ‎a‎t‎ ‎W‎a‎r‎…‎ ‎G‎r‎a‎v‎e‎ ‎M‎i‎s‎t‎a‎k‎e‎’‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
J‎E‎R‎U‎S‎A‎L‎E‎M‎ ‎(‎A‎P‎)‎ ‎—‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎i‎p‎ ‎c‎a‎r‎r‎i‎e‎d‎ ‎o‎u‎t‎ ‎a‎n‎ ‎u‎n‎p‎r‎e‎c‎e‎d‎e‎n‎t‎e‎d‎ ‎i‎n‎f‎i‎l‎t‎r‎a‎t‎i‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎i‎n‎t‎o‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎s‎e‎n‎d‎i‎n‎g‎ ‎f‎i‎g‎h‎t‎e‎r‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎b‎o‎r‎d‎e‎r‎ ‎a‎n‎d‎ ‎f‎i‎r‎i‎n‎g‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎r‎o‎c‎k‎e‎t‎s‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎a‎s‎ ‎t‎h‎e‎ ‎r‎u‎l‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎ ‎g‎r‎o‎u‎p‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎o‎f‎ ‎a‎ ‎n‎e‎w‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎.‎

J‎i‎m‎ ‎j‎o‎r‎d‎a‎n‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎ ‎f‎o‎r‎ ‎H‎o‎u‎s‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎
4‎,‎3‎7‎6‎
M‎a‎r‎l‎o‎w‎’‎s‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎B‎i‎d‎e‎n‎ ‎C‎o‎v‎e‎r‎e‎d‎ ‎f‎o‎r‎ ‎B‎r‎o‎t‎h‎e‎r‎ ‎i‎n‎ ‎F‎a‎t‎a‎l‎ ‎H‎i‎t‎-‎a‎n‎d‎-‎R‎u‎n‎
M‎a‎r‎l‎o‎w‎’‎s‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎B‎i‎d‎e‎n‎ ‎C‎o‎v‎e‎r‎e‎d‎ ‎f‎o‎r‎ ‎B‎r‎o‎t‎h‎e‎r‎ ‎i‎n‎ ‎F‎a‎t‎a‎l‎ ‎H‎i‎t‎-‎a‎n‎d‎-‎R‎u‎n‎
5‎,‎1‎1‎0‎
D‎e‎S‎a‎n‎t‎i‎s‎:‎ ‎T‎r‎u‎m‎p‎ ‎'‎D‎i‎d‎n‎’‎t‎ ‎D‎e‎l‎i‎v‎e‎r‎ ‎o‎n‎ ‎H‎i‎s‎ ‎C‎o‎r‎e‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎'‎
D‎e‎S‎a‎n‎t‎i‎s‎:‎ ‎T‎r‎u‎m‎p‎ ‎'‎D‎i‎d‎n‎’‎t‎ ‎D‎e‎l‎i‎v‎e‎r‎ ‎o‎n‎ ‎H‎i‎s‎ ‎C‎o‎r‎e‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎'‎
1‎,‎5‎0‎3‎

F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎:‎ ‎B‎i‎d‎e‎n‎ ‎F‎a‎l‎s‎e‎l‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎A‎r‎e‎ ‎B‎e‎t‎t‎e‎r‎ ‎O‎f‎f‎ ‎a‎n‎d‎ ‎T‎h‎e‎y‎ ‎K‎n‎o‎w‎ ‎I‎t‎
4‎,‎2‎4‎3‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
H‎a‎m‎a‎s‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎ ‎g‎r‎o‎u‎p‎ ‎h‎a‎s‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎a‎ ‎w‎a‎r‎ ‎t‎h‎a‎t‎ ‎‘‎I‎s‎r‎a‎e‎l‎ ‎w‎i‎l‎l‎ ‎w‎i‎n‎,‎’‎ ‎d‎e‎f‎e‎n‎s‎e‎ ‎m‎i‎n‎i‎s‎t‎e‎r‎ ‎s‎a‎y‎s‎
3‎,‎1‎4‎8‎
E‎u‎r‎o‎p‎e‎a‎n‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎R‎a‎l‎l‎y‎ ‎t‎o‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎C‎o‎n‎d‎e‎m‎n‎ ‎'‎D‎e‎s‎p‎i‎c‎a‎b‎l‎e‎ ‎A‎t‎t‎a‎c‎k‎'‎
E‎u‎r‎o‎p‎e‎a‎n‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎R‎a‎l‎l‎y‎ ‎t‎o‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎C‎o‎n‎d‎e‎m‎n‎ ‎'‎D‎e‎s‎p‎i‎c‎a‎b‎l‎e‎ ‎A‎t‎t‎a‎c‎k‎'‎
7‎4‎
V‎i‎v‎e‎k‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎C‎a‎n‎ ‎D‎e‎f‎e‎a‎t‎ ‎a‎ ‎‘‎W‎o‎u‎n‎d‎e‎d‎’‎ ‎T‎r‎u‎m‎p‎
V‎i‎v‎e‎k‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎C‎a‎n‎ ‎D‎e‎f‎e‎a‎t‎ ‎a‎ ‎‘‎W‎o‎u‎n‎d‎e‎d‎’‎ ‎T‎r‎u‎m‎p‎
5‎3‎8‎
M‎a‎r‎l‎o‎w‎’‎s‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎H‎o‎w‎ ‎B‎i‎d‎e‎n‎ ‎C‎u‎r‎e‎d‎ ‎C‎a‎n‎c‎e‎r‎*‎ ‎w‎i‎t‎h‎ ‎A‎s‎h‎l‎e‎y‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎B‎o‎o‎
M‎a‎r‎l‎o‎w‎’‎s‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎H‎o‎w‎ ‎B‎i‎d‎e‎n‎ ‎C‎u‎r‎e‎d‎ ‎C‎a‎n‎c‎e‎r‎*‎ ‎w‎i‎t‎h‎ ‎A‎s‎h‎l‎e‎y‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎B‎o‎o‎
4‎,‎7‎6‎5‎
C‎a‎l‎i‎f‎.‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎T‎e‎a‎m‎ ‎F‎o‎r‎f‎e‎i‎t‎s‎ ‎G‎a‎m‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎T‎e‎a‎m‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎s‎
C‎a‎l‎i‎f‎.‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎T‎e‎a‎m‎ ‎F‎o‎r‎f‎e‎i‎t‎s‎ ‎G‎a‎m‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎T‎e‎a‎m‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎s‎
4‎2‎7‎
A‎m‎e‎r‎i‎c‎a‎ ‎C‎r‎e‎a‎t‎e‎d‎ ‎3‎3‎6‎,‎0‎0‎0‎ ‎J‎o‎b‎s‎ ‎I‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎,‎ ‎P‎u‎t‎t‎i‎n‎g‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎o‎n‎ ‎F‎e‎d‎ ‎t‎o‎ ‎H‎i‎k‎e‎
A‎m‎e‎r‎i‎c‎a‎ ‎C‎r‎e‎a‎t‎e‎d‎ ‎3‎3‎6‎,‎0‎0‎0‎ ‎J‎o‎b‎s‎ ‎I‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎,‎ ‎P‎u‎t‎t‎i‎n‎g‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎o‎n‎ ‎F‎e‎d‎ ‎t‎o‎ ‎H‎i‎k‎e‎

B‎a‎b‎o‎o‎n‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎M‎u‎r‎d‎e‎r‎i‎n‎g‎ ‎A‎r‎m‎y‎ ‎S‎o‎l‎d‎i‎e‎r‎ ‎a‎n‎d‎ ‎H‎o‎m‎e‎c‎o‎m‎i‎n‎g‎ ‎Q‎u‎e‎e‎n‎.‎

H‎e‎ ‎s‎h‎o‎t‎ ‎t‎h‎e‎i‎r‎ ‎c‎a‎r‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎2‎0‎ ‎t‎i‎m‎e‎s‎.‎


C‎h‎i‎n‎k‎ ‎D‎o‎c‎t‎o‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎D‎r‎u‎g‎g‎i‎n‎g‎ ‎a‎n‎d‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎P‎a‎t‎i‎e‎n‎t‎s‎.‎


M‎o‎n‎k‎e‎y‎ ‎D‎e‎e‎m‎e‎d‎ ‎U‎n‎f‎i‎t‎ ‎f‎o‎r‎ ‎T‎r‎i‎a‎l‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎3‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎S‎u‎b‎u‎r‎b‎a‎n‎ ‎B‎o‎s‎t‎o‎n‎.‎


N‎e‎g‎r‎o‎ ‎S‎h‎o‎o‎t‎s‎ ‎u‎p‎ ‎C‎V‎S‎ ‎i‎n‎ ‎D‎e‎K‎a‎l‎b‎ ‎A‎f‎t‎e‎r‎ ‎H‎a‎v‎i‎n‎g‎ ‎A‎r‎g‎u‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎E‎m‎p‎l‎o‎y‎e‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎,‎ ‎b‎l‎a‎c‎k‎s‎.‎ ‎N‎i‎c‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎y‎o‎u‎'‎v‎e‎ ‎s‎t‎i‎l‎l‎ ‎g‎o‎t‎ ‎i‎t‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎1‎°‎
0‎%‎
N‎N‎E‎ ‎1‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎7‎ ‎|‎ ‎D‎a‎y‎
7‎6‎°‎
N‎N‎E‎
1‎7‎
 ‎
m‎p‎h‎
C‎o‎n‎s‎i‎d‎e‎r‎a‎b‎l‎e‎ ‎c‎l‎o‎u‎d‎i‎n‎e‎s‎s‎.‎ ‎H‎i‎g‎h‎ ‎7‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎0‎8‎ ‎p‎m‎
S‎a‎t‎ ‎0‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎1‎°‎
N‎N‎E‎
8‎
 ‎
m‎p‎h‎
A‎ ‎f‎e‎w‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎5‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎5‎5‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎3‎5‎ ‎p‎m‎
S‎u‎n‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎5‎4‎°‎
1‎%‎
E‎S‎E‎ ‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎3‎°‎
1‎%‎
S‎S‎W‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎0‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎0‎°‎
/‎6‎5‎°‎
4‎9‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎1‎
C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎8‎°‎
2‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎2‎°‎
/‎6‎9‎°‎
2‎0‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎5‎8‎°‎
2‎4‎%‎
N‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎4‎
S‎u‎n‎n‎y‎
7‎7‎°‎
/‎5‎2‎°‎
0‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎5‎
S‎u‎n‎n‎y‎
7‎8‎°‎
/‎5‎4‎°‎
1‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎0‎°‎
/‎5‎7‎°‎
6‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎9‎°‎
2‎0‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎3‎°‎
/‎6‎0‎°‎
1‎6‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎1‎°‎
1‎8‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎2‎°‎
1‎2‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎1‎°‎
5‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎V‎a‎m‎p‎i‎r‎e‎s‎.‎ ‎🧛

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

E‎n‎g‎l‎a‎n‎d‎
E‎n‎g‎l‎a‎n‎d‎,‎ ‎E‎n‎g‎e‎r‎l‎a‎n‎d‎,‎ ‎M‎e‎r‎r‎y‎ ‎O‎l‎d‎e‎ ‎E‎n‎g‎l‎a‎n‎d‎,‎ ‎A‎l‎b‎i‎o‎n‎,‎ ‎N‎o‎r‎t‎h‎ ‎F‎r‎a‎n‎c‎e‎,‎ ‎A‎i‎r‎s‎t‎r‎i‎p‎ ‎O‎n‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎i‎s‎t‎a‎n‎,‎ ‎I‎n‎k‎l‎a‎n‎d‎,‎ ‎B‎r‎i‎t‎f‎a‎g‎l‎a‎n‎d‎,‎ ‎A‎m‎e‎r‎i‎c‎a‎'‎s‎ ‎B‎i‎t‎c‎h‎,‎ ‎E‎n‎g‎a‎y‎l‎a‎n‎d‎,‎ ‎B‎r‎i‎t‎s‎h‎i‎t‎s‎,‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎J‎r‎.‎,‎ ‎U‎S‎ ‎A‎i‎r‎c‎r‎a‎f‎t‎ ‎C‎a‎r‎r‎i‎e‎r‎,‎ ‎C‎r‎u‎m‎p‎e‎t‎v‎i‎l‎l‎e‎,‎ ‎F‎a‎t‎l‎a‎n‎d‎,‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎s‎ ‎a‎r‎s‎e‎,‎ ‎W‎a‎l‎e‎s‎'‎ ‎A‎b‎u‎s‎i‎v‎e‎ ‎S‎p‎o‎u‎s‎e‎,‎ ‎T‎e‎a‎-‎a‎n‎d‎-‎C‎r‎u‎m‎p‎e‎t‎-‎l‎a‎n‎d‎,‎ ‎B‎o‎n‎g‎i‎s‎t‎a‎n‎ ‎o‎r‎ ‎N‎e‎w‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎i‎n‎b‎r‎e‎d‎ ‎c‎i‎t‎y‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎K‎i‎n‎g‎d‎o‎m‎.‎ ‎(‎S‎e‎e‎ ‎W‎a‎l‎e‎s‎ ‎f‎o‎r‎ ‎a‎b‎o‎v‎e‎ ‎a‎v‎e‎r‎a‎g‎e‎ ‎i‎n‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎K‎i‎n‎g‎d‎o‎m‎)‎.‎ ‎T‎h‎e‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎a‎r‎e‎ ‎a‎s‎y‎m‎m‎e‎t‎r‎i‎c‎a‎l‎ ‎a‎l‎o‎n‎g‎ ‎t‎h‎e‎ ‎b‎o‎d‎y‎,‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎p‎a‎r‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎a‎ ‎m‎i‎r‎r‎o‎r‎ ‎i‎m‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎.‎ ‎T‎h‎e‎y‎ ‎d‎o‎ ‎n‎o‎t‎ ‎h‎a‎v‎e‎ ‎h‎a‎r‎d‎e‎n‎e‎d‎ ‎e‎x‎o‎s‎k‎e‎l‎e‎t‎o‎n‎s‎ ‎w‎h‎i‎c‎h‎ ‎r‎e‎s‎u‎l‎t‎s‎ ‎i‎n‎ ‎h‎o‎r‎r‎i‎b‎l‎e‎ ‎s‎k‎i‎n‎ ‎c‎o‎n‎d‎i‎t‎i‎o‎n‎s‎.‎ ‎T‎h‎e‎y‎ ‎b‎r‎e‎a‎t‎h‎e‎ ‎v‎i‎a‎ ‎t‎h‎e‎i‎r‎ ‎l‎u‎n‎g‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎i‎r‎ ‎p‎e‎r‎m‎a‎n‎e‎n‎t‎l‎y‎ ‎f‎l‎a‎r‎e‎d‎ ‎n‎o‎s‎t‎r‎i‎l‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎b‎o‎d‎i‎e‎s‎ ‎c‎a‎n‎ ‎b‎e‎ ‎c‎l‎a‎s‎s‎i‎f‎i‎e‎d‎ ‎i‎n‎t‎o‎ ‎t‎h‎r‎e‎e‎ ‎m‎a‎j‎o‎r‎ ‎p‎a‎r‎t‎s‎:‎ ‎h‎e‎a‎d‎,‎ ‎a‎b‎d‎o‎m‎e‎n‎ ‎a‎n‎d‎ ‎l‎i‎m‎b‎s‎.‎ ‎T‎h‎e‎ ‎l‎i‎m‎b‎s‎,‎ ‎o‎n‎e‎ ‎p‎a‎i‎r‎ ‎e‎a‎c‎h‎ ‎o‎f‎ ‎l‎e‎g‎s‎ ‎a‎n‎d‎ ‎a‎r‎m‎s‎,‎ ‎a‎t‎t‎a‎c‎h‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎h‎e‎a‎d‎.‎

T‎h‎e‎ ‎Q‎u‎e‎e‎n‎ ‎i‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎l‎a‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎e‎g‎g‎s‎ ‎r‎e‎q‎u‎i‎r‎e‎d‎ ‎f‎o‎r‎ ‎r‎e‎p‎l‎a‎c‎i‎n‎g‎ ‎w‎o‎r‎k‎e‎r‎s‎ ‎l‎o‎s‎t‎ ‎i‎n‎ ‎I‎r‎a‎q‎.‎ ‎T‎h‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎m‎a‎l‎e‎s‎ ‎i‎s‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎l‎o‎w‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎o‎n‎l‎y‎ ‎o‎n‎e‎ ‎m‎a‎l‎e‎ ‎(‎u‎b‎i‎q‎u‎i‎t‎o‎u‎s‎l‎y‎ ‎n‎a‎m‎e‎d‎ ‎S‎t‎e‎v‎e‎)‎ ‎i‎s‎ ‎n‎e‎e‎d‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎r‎e‎p‎r‎o‎d‎u‎c‎t‎i‎v‎e‎ ‎p‎r‎o‎c‎e‎s‎s‎.‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎i‎s‎,‎ ‎a‎l‎l‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎r‎e‎g‎a‎r‎d‎l‎e‎s‎s‎ ‎o‎f‎ ‎s‎e‎x‎,‎ ‎a‎r‎e‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎a‎s‎ ‎E‎n‎g‎l‎i‎s‎h‎m‎e‎n‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎L‎i‎m‎e‎y‎ ‎f‎e‎m‎a‎l‎e‎s‎ ‎a‎p‎p‎e‎a‎r‎ ‎t‎o‎ ‎b‎e‎ ‎m‎a‎l‎e‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎m‎a‎l‎e‎s‎ ‎h‎a‎v‎e‎ ‎a‎b‎s‎u‎r‎d‎l‎y‎ ‎c‎u‎r‎v‎e‎d‎ ‎p‎e‎n‎i‎s‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎h‎a‎s‎ ‎r‎e‎s‎u‎l‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎a‎n‎n‎i‎n‎g‎ ‎o‎f‎ ‎E‎n‎g‎l‎i‎s‎h‎m‎e‎n‎ ‎f‎r‎o‎m‎ ‎b‎a‎b‎y‎s‎i‎t‎t‎i‎n‎g‎ ‎d‎u‎t‎i‎e‎s‎ ‎i‎n‎ ‎F‎r‎a‎n‎c‎e‎,‎ ‎P‎o‎l‎a‎n‎d‎,‎ ‎a‎n‎d‎ ‎T‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎d‎u‎e‎ ‎t‎o‎ ‎v‎a‎g‎i‎n‎a‎l‎ ‎a‎n‎d‎ ‎a‎n‎a‎l‎ ‎h‎o‎o‎k‎i‎n‎g‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎w‎o‎m‎e‎n‎ ‎a‎r‎e‎ ‎f‎a‎m‎o‎u‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎f‎r‎i‎e‎d‎-‎c‎h‎i‎c‎k‎e‎n‎ ‎s‎c‎e‎n‎t‎e‎d‎ ‎p‎u‎s‎s‎i‎e‎s‎ ‎a‎n‎d‎ ‎g‎r‎a‎v‎y‎ ‎s‎c‎e‎n‎t‎e‎d‎ ‎p‎o‎o‎ ‎p‎i‎p‎e‎s‎.‎ ‎F‎o‎r‎ ‎t‎h‎i‎s‎ ‎r‎e‎a‎s‎o‎n‎,‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎a‎r‎e‎ ‎b‎a‎n‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎o‎u‎c‎h‎i‎n‎g‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎w‎o‎m‎e‎n‎.‎ ‎E‎n‎t‎r‎y‎ ‎i‎n‎t‎o‎ ‎a‎n‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎f‎e‎m‎a‎l‎e‎ ‎c‎a‎n‎ ‎o‎n‎l‎y‎ ‎b‎e‎ ‎a‎c‎h‎i‎e‎v‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎a‎i‎d‎ ‎o‎f‎ ‎a‎ ‎d‎r‎a‎g‎o‎n‎ ‎o‎r‎ ‎a‎n‎ ‎e‎l‎f‎i‎n‎ ‎p‎a‎s‎s‎w‎o‎r‎d‎.‎

C‎o‎n‎t‎r‎a‎r‎y‎ ‎t‎o‎ ‎w‎h‎a‎t‎ ‎m‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎,‎ ‎t‎h‎e‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎d‎o‎ ‎n‎o‎t‎ ‎b‎i‎t‎e‎.‎ ‎T‎h‎e‎y‎ ‎u‎s‎e‎ ‎t‎h‎e‎i‎r‎ ‎j‎a‎w‎s‎ ‎t‎o‎ ‎a‎n‎c‎h‎o‎r‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎,‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎s‎t‎r‎o‎n‎g‎ ‎m‎a‎n‎d‎i‎b‎l‎e‎s‎,‎ ‎a‎t‎t‎a‎c‎h‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎f‎o‎o‎d‎ ‎a‎n‎d‎ ‎t‎e‎a‎r‎ ‎a‎t‎ ‎i‎t‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎i‎r‎ ‎l‎i‎m‎b‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎a‎r‎e‎ ‎u‎n‎i‎s‎e‎x‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎ ‎a‎g‎e‎ ‎o‎f‎ ‎1‎5‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎s‎p‎r‎i‎n‎k‎l‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎q‎u‎e‎e‎n‎'‎s‎ ‎f‎a‎r‎t‎ ‎d‎u‎s‎t‎ ‎a‎n‎d‎ ‎b‎u‎r‎i‎e‎d‎ ‎b‎e‎n‎e‎a‎t‎h‎ ‎S‎t‎o‎n‎e‎h‎e‎n‎g‎e‎ ‎f‎o‎r‎ ‎a‎ ‎f‎o‎r‎t‎n‎i‎g‎h‎t‎.‎ ‎T‎h‎i‎s‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎i‎s‎ ‎k‎n‎o‎w‎s‎ ‎a‎s‎ ‎""‎K‎i‎m‎p‎i‎n‎g‎ ‎t‎h‎e‎ ‎W‎o‎n‎k‎s‎e‎y‎""‎ ‎a‎n‎d‎ ‎r‎a‎n‎k‎s‎ ‎a‎m‎o‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎h‎a‎l‎l‎o‎w‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎'‎s‎ ‎c‎o‎m‎i‎n‎g‎ ‎o‎f‎ ‎a‎g‎e‎ ‎r‎i‎t‎u‎a‎l‎s‎.‎


(‎(‎ ‎T‎H‎E‎ ‎Q‎U‎E‎E‎N‎ ‎H‎A‎S‎ ‎F‎I‎N‎A‎L‎L‎Y‎ ‎F‎U‎C‎K‎I‎N‎G‎ ‎D‎I‎E‎D‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎g‎r‎i‎u‎s‎ ‎c‎i‎n‎g‎u‎l‎a‎t‎a‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎p‎i‎n‎k‎-‎s‎p‎o‎t‎t‎e‎d‎ ‎h‎a‎w‎k‎m‎o‎t‎h‎ ‎o‎r‎ ‎s‎w‎e‎e‎t‎p‎o‎t‎a‎t‎o‎ ‎h‎o‎r‎n‎w‎o‎r‎m‎,‎ ‎i‎s‎ ‎a‎ ‎m‎o‎t‎h‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎S‎p‎h‎i‎n‎g‎i‎d‎a‎e‎.‎ ‎T‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎w‎a‎s‎ ‎f‎i‎r‎s‎t‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎b‎y‎ ‎J‎o‎h‎a‎n‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎F‎a‎b‎r‎i‎c‎i‎u‎s‎ ‎i‎n‎ ‎1‎7‎7‎5‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎a‎ ‎w‎i‎d‎e‎ ‎r‎a‎n‎g‎e‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎s‎,‎ ‎w‎i‎t‎h‎ ‎a‎d‎u‎l‎t‎s‎ ‎m‎i‎g‎r‎a‎t‎i‎n‎g‎ ‎n‎o‎r‎t‎h‎ ‎t‎o‎ ‎C‎a‎n‎a‎d‎a‎ ‎a‎n‎d‎ ‎s‎o‎u‎t‎h‎ ‎t‎o‎ ‎P‎a‎t‎a‎g‎o‎n‎i‎a‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎F‎a‎l‎k‎l‎a‎n‎d‎ ‎I‎s‎l‎a‎n‎d‎s‎.‎ ‎I‎t‎ ‎c‎a‎n‎ ‎a‎l‎s‎o‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎G‎a‎l‎á‎p‎a‎g‎o‎s‎ ‎I‎s‎l‎a‎n‎d‎s‎ ‎a‎n‎d‎ ‎H‎a‎w‎a‎i‎i‎,‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎n‎d‎ ‎W‎e‎s‎t‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎A‎ ‎n‎o‎c‎t‎u‎r‎n‎a‎l‎ ‎i‎n‎s‎e‎c‎t‎,‎ ‎A‎.‎ ‎c‎i‎n‎g‎u‎l‎a‎t‎a‎ ‎f‎e‎e‎d‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎n‎e‎c‎t‎a‎r‎ ‎f‎r‎o‎m‎ ‎d‎e‎e‎p‎-‎t‎h‎r‎o‎a‎t‎e‎d‎ ‎f‎l‎o‎w‎e‎r‎s‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎m‎o‎o‎n‎f‎l‎o‎w‎e‎r‎,‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎g‎l‎o‎r‎i‎e‎s‎ ‎a‎n‎d‎ ‎p‎e‎t‎u‎n‎i‎a‎.‎ ‎I‎t‎s‎ ‎l‎a‎r‎v‎a‎ ‎i‎s‎ ‎a‎ ‎l‎a‎r‎g‎e‎,‎ ‎s‎t‎o‎u‎t‎ ‎c‎a‎t‎e‎r‎p‎i‎l‎l‎a‎r‎ ‎w‎i‎t‎h‎ ‎a‎ ‎h‎o‎r‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎f‎e‎e‎d‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎d‎a‎y‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎n‎i‎g‎h‎t‎ ‎o‎n‎ ‎s‎w‎e‎e‎t‎ ‎p‎o‎t‎a‎t‎o‎,‎ ‎D‎a‎t‎u‎r‎a‎,‎ ‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎ ‎p‎l‎a‎n‎t‎s‎.‎ ‎T‎h‎i‎s‎ ‎m‎a‎l‎e‎ ‎A‎.‎ ‎c‎i‎n‎g‎u‎l‎a‎t‎a‎ ‎m‎o‎t‎h‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎o‎u‎n‎t‎ ‎T‎o‎t‎u‎m‎a‎s‎ ‎c‎l‎o‎u‎d‎ ‎f‎o‎r‎e‎s‎t‎ ‎i‎n‎ ‎P‎a‎n‎a‎m‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎s‎p‎i‎n‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎o‎s‎e‎ ‎r‎e‎v‎o‎l‎v‎i‎n‎g‎ ‎d‎o‎o‎r‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎a‎i‎r‎p‎o‎r‎t‎.‎"
rfXJ4Y0U,Title settings in the base layout,nemopeti,TypeScript,Saturday 7th of October 2023 08:17:31 AM CDT,"import './globals.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import Header from ""@/app/header"";

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Nemo demo Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang=""hu"">
      <body className={inter.className}>
        <Header/>
        {children}
      </body>
    </html>
  )
}
"
V5YdRSz3,Untitled,Josif_tepe,C++,Saturday 7th of October 2023 08:17:28 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
using namespace std;



int main() {
    int n;
    cin >> n;
    
    string ime[n];
    string prezime[n];
    int godini[n];
    double prosek[n];
    string sredno_uciliste[n];
    
    for(int i = 0; i < n; i++) {
        cin >> ime[i] >> prezime[i] >> godini[i] >> prosek[i] >> sredno_uciliste[i];
    }
    
    for(int i = 0; i < n; i++) {
        cout << ""Ime: "" << ime[i] << endl;
        cout << ""Prezime: "" << prezime[i] << endl;
        cout << ""Godini: "" << godini[i] << endl;
        cout << ""Prosek: "" << prosek[i] << endl;
        cout << ""Sredno uciliste: "" << sredno_uciliste[i] << endl;
    }
    return 0;
}
"
PKv05wEM,Dynamic title change for search page,nemopeti,TypeScript,Saturday 7th of October 2023 08:13:54 AM CDT,"import type { Metadata, ResolvingMetadata } from 'next'

export async function generateMetadata(): Promise<Metadata> {
    return {
        title: 'Search',
    }
}

export default function SearchPage() {
    return (
        <div>
            Search
        </div>
    );
};"
mwZ2T5ba,How to scale-up java apps with too small fonts,Maluvia,Bash,Saturday 7th of October 2023 07:57:19 AM CDT,"Add this to jar command:
 -Dsun.java2d.uiScale=2.0  (Or whatever scale factor you prefer)

Ex:  java -jar -Dsun.java2d.uiScale=2.0 application.jar 

[From epineda  https://askubuntu.com/users/157108/epineda]"
jhfSZPR7,Untitled,Zeinab_Hamdy,C++,Saturday 7th of October 2023 07:53:29 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
// #define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */


const ll N = 1e3 + 5 , inf = 1e18;



int n , m , X1 , X2 , Y1 , Y2 ;

char arr[N][N];


int dx[]={ -1 , 1 ,  0 , 0 };
int dy[]={  0 , 0 ,  1 , -1};
char C[] ={ 'U' , 'D' , 'R' , 'L' };

bool valid(int x , int y){
    return x >=0 and y>=0 and x < n and y < m ;
}


ll dp[N+10][N+10];



ll rec(int x , int y ){

    if(x==X2 and y==Y2) return 0 ;
    if(!valid(x,y) or arr[x][y]=='#') return inf ;

    ll& ret = dp[x][y];
    if(~ret) return ret;

    ret = inf;
    for(int i =0 ; i < 4 ; i++){
        int newX = x + dx[i] , newY = y + dy[i];
        if(valid(newX , newY) and arr[newX][newY]!='#')
            ret = min(ret , 1+ rec(newX , newY));
    }
    return ret ;
}


void build(int x , int y ){
    
        if(x==X2 and y==Y2) return ;
        if(!valid(x,y) or arr[x][y]=='#') return ;
    
        ll ret = inf;
        for(int i =0 ; i < 4 ; i++){
            int newX = x + dx[i] , newY = y + dy[i];
            if(valid(newX , newY) and arr[newX][newY]!='#')
               ret = min(ret , 1 +rec(newX , newY));
        }

        for(int i =0 ; i < 4 ; i++){
            int newX = x + dx[i] , newY = y + dy[i];
            if(valid(newX , newY) and arr[newX][newY]!='#' and ret == 1 + rec(newX , newY)){
                cout << C[i];
                build(newX , newY);
                return ;
            }
        }
}


void myCode(){

cin >> n >> m ;

for(int i =0 ; i < n ; i++){
    for(int j =0 ; j < m ; j++){
        cin >> arr[i][j];
        if(arr[i][j]=='A') X1=i , Y1=j;
        else if(arr[i][j]=='B') X2 = i , Y2 = j;
    }
}

clr(dp , -1);



ll ans = inf ;

ans = min(ans , rec(X1 , Y1));

if(ans == inf) RV(cout << ""NO"");


cout << ""YES\n"" << ans << nl;

build(X1,Y1);



}


int main(){
                                   FastCode ;
                                   Zainab() ;





        int testCase=1;
            //  cin >> testCase ;
        for(int i=1 ; i<= testCase ; i++){
            myCode();
        }


    return 0;
}

"
Uk1ASD28,computercraft_tower_builder_startup_east,NobodyNeeds,Lua,Saturday 7th of October 2023 07:53:03 AM CDT,"local initialX, initialY, initialZ = 59, 66, -1004
local initialDirection = ""east""

local x, y, z
local startX, startY, startZ

local directions = {[0] = ""north"", [1] = ""east"", [2] = ""south"", [3] = ""west"", north = 0, east = 1, south = 2, west = 3}
local currentDirection

local firstColumnOffset = 3
local offsetIncrease = 5
local columnWidth = 4
local columnCount = 14
local figureHeight = 8
local margin = 1
local towerHeight = 12
local towerWidth = columnWidth * columnCount + margin * 2

local solidBlock = ""quartz_block""
local glassBlock = ""quartz_glass""

local function getLocation()
	repeat
		x, y, z = gps.locate(1)
	until x
end

local function getActionDirection(direction)
	return not direction and """" or direction == ""Forward"" and """" or direction
end

local function safeBreakBlock(direction)
	local breakBlock = turtle[""dig""..getActionDirection(direction)]
	local inspect = turtle[""inspect""..getActionDirection(direction)]

	local success, inspectResult = inspect()
	
	if success and not string.match(inspectResult.name, ""turtle"") then
		if string.match(inspectResult.name, solidBlock) then
			turtle.select(1)
		elseif string.match(inspectResult.name, glassBlock) then
			turtle.select(9)
		else
			error(""this block shouldn't be here"")
		end
		
		if turtle.getItemCount() == 64 then
			turtle.drop(1)
		end
		
		breakBlock()
	end
end

local function go(direction, times)
	local move = turtle[direction and string.lower(direction) or ""forward""]
	
	for i = 1, times or 1 do
		while not move() do
			safeBreakBlock(direction)
		end
	end
end

local function place(direction)
	local placeBlock = turtle[""place""..getActionDirection(direction)]
	local compare = turtle[""compare""..getActionDirection(direction)]
	local slot = turtle.getSelectedSlot()

	if compare() then return end

	while not placeBlock() do
		safeBreakBlock(direction)
		turtle.select(slot)
	end
end

local function getDirectionIfTurn(turnNumber)
	return directions[(directions[currentDirection] + turnNumber) % 4]
end

local function getTurtleDirection()
	local success, inspectResult = turtle.inspectUp()
	
	if not success or not string.match(inspectResult.name, ""entangled_chest"") then
		turtle.select(15)
		safeBreakBlock(""Up"")
		turtle.select(15)
		place(""Up"")
		
		success, inspectResult = turtle.inspectUp()
		
		if not success or not string.match(inspectResult.name, ""entangled_chest"") then
			error(""can't define turtle direction"")
		end
	end
	
	turtle.select(15)
	turtle.digUp()
	
	currentDirection = inspectResult.state.facing
end

getLocation()
y = y - 1

getTurtleDirection()

if initialDirection == ""north"" or initialDirection == ""south"" then
	initialX, initialZ = initialZ, initialX	
	x, z = z, x
end

startX = math.abs(x - initialX)
startY = math.abs(y - initialY)
startZ = math.abs(z - initialZ)

if startX == towerWidth - 1 and getDirectionIfTurn(-1) == initialDirection then
	if startZ == 0 then
		go()
	end
	
	turtle.turnRight()

	startZ = 1
elseif startX == 0 and getDirectionIfTurn(1) == initialDirection then
	if startZ == 1 then
		go()
	end
	
	turtle.turnRight()
	go(""Up"")
	
	startY = startY + 1
	startZ = 0
end

shell.run(""tower"", startX, startY, startZ)"
mBfMtvw6,computercraft_tower_builder,NobodyNeeds,Lua,Saturday 7th of October 2023 07:52:40 AM CDT,"local startX, startY, startZ = 0, 0, 0

local firstColumnOffset = 3
local offsetIncrease = 5
local columnWidth = 4
local columnCount = 14
local figureHeight = 8
local margin = 1
local towerHeight = 110
local towerWidth = columnWidth * columnCount + margin * 2

local solidBlock = ""quartz_block""
local glassBlock = ""quartz_glass""

local args = {...}

local figure = 
{
[8] = {'#', '#', '#', '#'},
[7] = {'#', '@', '@', '#'},
[6] = {'#', '@', '@', '#'},
[5] = {'#', '@', '@', '#'},
[4] = {'#', '@', '@', '#'},
[3] = {'#', '#', '#', '#'},
[2] = {'@', '@', '@', '@'},
[1] = {'@', '@', '@', '@'} 
}

local function checkItem(name, slot)
	local item = turtle.getItemDetail(slot)
	return item and string.match(item.name, name)
end

local function findItemSlot(name, slot)
	for curSlot = slot or 1, 16 do
		if checkItem(name, curSlot) then
			return curSlot
		end
	end
	
	return nil
end

local function getActionDirection(direction)
	return not direction and """" or direction == ""Forward"" and """" or direction
end

local function safeBreakBlock(direction)
	local breakBlock = turtle[""dig""..getActionDirection(direction)]
	local inspect = turtle[""inspect""..getActionDirection(direction)]

	local success, inspectResult = inspect()
	
	if success and not string.match(inspectResult.name, ""turtle"") then
		if string.match(inspectResult.name, solidBlock) then
			turtle.select(1)
		elseif string.match(inspectResult.name, glassBlock) then
			turtle.select(9)
		else
			error(""this block shouldn't be here"")
		end
		
		if turtle.getItemCount() == 64 then
			turtle.drop(1)
		end
		
		breakBlock()
	end
end

local function go(direction, times)
	local move = turtle[direction and string.lower(direction) or ""forward""]
	
	for i = 1, times or 1 do
		while not move() do
			safeBreakBlock(direction)
		end
	end
end

local function place(direction)
	local placeBlock = turtle[""place""..getActionDirection(direction)]
	local compare = turtle[""compare""..getActionDirection(direction)]
	local slot = turtle.getSelectedSlot()

	if compare() then return end

	while not placeBlock() do
		safeBreakBlock(direction)
		turtle.select(slot)
	end
end

local function getBlock(x, y, innerBlock, outerBlock)
	if x - margin < 0 or x - towerWidth + margin >= 0 then
		return outerBlock
	end

	local currentColumnNumber = math.floor((x - margin) / columnWidth)
	local currentColumnOffset = (firstColumnOffset + currentColumnNumber * offsetIncrease) % figureHeight
	
	local figureWidthOffset = (x - margin) % columnWidth
	local figureHeightOffset = (y - currentColumnOffset) % figureHeight
	
	if figure[figureHeightOffset + 1][figureWidthOffset + 1] == '#' then
		return outerBlock
	else
		return innerBlock
	end
end

local function refillBlock(block)
	local isSolid = block == solidBlock
	
	local firstSlot = isSolid and 1 or 9
	local lastSlot = isSolid and 8 or 14
	local chestSlot = isSolid and 15 or 16
	
	turtle.select(chestSlot)
	place(""Up"")
	
	for curSlot = firstSlot, lastSlot do
		turtle.select(curSlot)
		turtle.suckUp(64)
	end
	
	turtle.select(chestSlot)
	turtle.digUp()
	
	if not findItemSlot(block) then
		error(block.."" chest is empty"")
	end
end

local function placeTowerBlock(curX, curY, curZ)
	local innerBlock = curZ == 0 and glassBlock or ""air""
	local outerBlock = solidBlock
	
	local block = getBlock(curX, curY, innerBlock, outerBlock)
	
	if block == ""air"" then
		return
	end
	
	local slot = findItemSlot(block)
	
	if not slot then
		refillBlock(block)
		slot = findItemSlot(block)
	end
	
	turtle.select(slot)
	place(""Down"")
end

if args[1] and args[2] and args[3] then
	startX = tonumber(args[1])
	startY = tonumber(args[2])
	startZ = tonumber(args[3])
	
	if not startX or not startY or not startZ then
		error(""args have to be numbers"")
	end
end

for y = startY, towerHeight - 1 do
	for z = startZ, 1 do
		local step = z == 0 and 1 or -1
		local endX = z == 0 and towerWidth - 1 or 0
		
		for x = startX, endX, step do
			placeTowerBlock(x, y, z)

			if x ~= endX then
				go()
			end
		end			
		
		turtle.turnRight()
		go()
		turtle.turnRight()
		
		startX = towerWidth - 1
	end
	
	go(""Up"")
	
	startX = 0
	startZ = 0
end"
Q9aedrh7,"Draggable, Resizeable roblox studio",HairBaconGamming,Lua,Saturday 7th of October 2023 07:46:19 AM CDT,"local UserInputService = game:GetService(""UserInputService"")
local function MakeDraggable(Dragger,Object,Callback)
	local StartPosition,StartDrag = nil,nil

	Dragger.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			StartPosition = UserInputService:GetMouseLocation()
			StartDrag = Object.AbsolutePosition
		end
	end)
	UserInputService.InputChanged:Connect(function(Input)
		if StartDrag and Input.UserInputType == Enum.UserInputType.MouseMovement then
			local Mouse = UserInputService:GetMouseLocation()
			local Delta = Mouse - StartPosition
			StartPosition = Mouse
			Object.Position = Object.Position + UDim2.new(0,Delta.X,0,Delta.Y)
		end
	end)
	Dragger.InputEnded:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			StartPosition,StartDrag = nil,nil
			if Callback then
				Callback(Object.Position)
			end
		end
	end)
end

local function MakeResizeable(Dragger,Object,MinSize,Callback)
	local StartPosition,StartSize = nil,nil

	Dragger.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			StartPosition = UserInputService:GetMouseLocation()
			StartSize = Object.AbsoluteSize
		end
	end)
	UserInputService.InputChanged:Connect(function(Input)
		if StartPosition and Input.UserInputType == Enum.UserInputType.MouseMovement then
			local Mouse = UserInputService:GetMouseLocation()
			local Delta = Mouse - StartPosition

			local Size = StartSize + Delta
			local SizeX = math.max(MinSize.X,Size.X)
			local SizeY = math.max(MinSize.Y,Size.Y)
			Object.Size = UDim2.fromOffset(SizeX,SizeY)
		end
	end)
	Dragger.InputEnded:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			StartPosition,StartSize = nil,nil
			if Callback then
				Callback(Object.Size)
			end
		end
	end)
end"
NhZz5rR3,Search modification for https://www.youtube.com/watch?v=7DVdVGm7Ht8,nemopeti,TypeScript,Saturday 7th of October 2023 07:37:54 AM CDT,"import {Todo} from ""@/typings"";
import Link from ""next/link"";

type PageProps = {
    params: {
        searchTerm:string;
    };
}

const search = async (searchTerm:string) => {
    const res = await fetch('https://jsonplaceholder.typicode.com/todos/', {next: {revalidate: 60}});
    const todos:Todo[] = await res.json();

    const sres =  todos.filter(t => t.title.indexOf(searchTerm)>-1);

    return {
        organic_results: sres
    };
}
export default async function Page({params: { searchTerm}}:PageProps) {


    const searchResult = await search(searchTerm)

    return (
        <div>
            <p className={'text-gray-500 text-sm'}>You searchd for: {searchTerm}</p>

            <ol className={'space-y5 p-5'}>
                {searchResult.organic_results.map((result)=>(
                    <li key={result.id} className={'list-decimal'}>
                        <p className={'font-bold'}>{result.title}</p>
                        <Link href={`/todos/${result.id}`}>Details</Link>
                    </li>
                ))}
            </ol>
        </div>
    );
};"
136xPaEi,Untitled,Stawlie0,C++,Saturday 7th of October 2023 07:14:21 AM CDT,"--SWITCH
local MODE = nil
local PALETTE_PATH = ""palette.cia""

--MODES
local MODES = {
	[""MODE_24BIT""] = ""24bit"",
}

--CONSTANTS--
local FOREGROUND = 3
local BACKGROUND = 2
local ALPHA_CHANNEL = 1

local UTF8_CHAR = 0
local COMPRESSED_PIXEL = 1

local ELEMENT_COUNT = 2
local ELEMENT_COUNT_FULL_ARRAY = 4

local IMAGE_WIDTH  = 1
local IMAGE_HEIGHT = 2
local IMAGE_FRAMES = 3
local IMAGE        = 4

local BYTE_SIZE = 8
local NULL_CHAR = 0

local FILE_OPEN_ERROR = ""Can't open file""
local LOAD_PALETTE_ERROR = ""Can't load color index array. Table = nil or Table size less 256[0-255]""
local SIGNATURE_MATCH_ERROR = ""Signatures not match""

--Загрузка палитры
local palette = nil
function LOAD_PALETTE( color_index_array )
	palette = color_index_array
end

local function reloadPalette()
	dofile( PALETTE_PATH )
	if ( not palette or #palette ~= 255 ) then
		error( LOAD_PALETTE_ERROR )
	end
end

--.ocif подпись
local ocif_signature1 = 0x896F6369
local ocif_signature2 = 0x00661A0A --7 bytes: 89 6F 63 69 66 1A 0A
local ocif_signature_expand = { string.char(0x89), string.char(0x6F), string.char(0x63), string.char(0x69), string.char(0x66), string.char(0x1A), string.char(0x0A) }

--Выделить бит-терминатор в первом байте utf8 символа: 1100 0010 --> 0010 0000
local function selectTerminateBit_l()
	local prevByte = nil
	local prevTerminateBit = nil

	return function( byte )
		local x, terminateBit = nil
		if ( prevByte == byte ) then
			return prevTerminateBit
		end

		x = bit32.band( bit32.bnot(byte), 0x000000FF )
		x = bit32.bor( x, bit32.rshift(x, 1) )
		x = bit32.bor( x, bit32.rshift(x, 2) )
		x = bit32.bor( x, bit32.rshift(x, 4) )
		x = bit32.bor( x, bit32.rshift(x, 8) )
		x = bit32.bor( x, bit32.rshift(x, 16) )

		terminateBit = x - bit32.rshift(x, 1)

		--save state
		prevByte = byte
		prevTerminateBit = terminateBit

		return terminateBit
	end
end
local selectTerminateBit = selectTerminateBit_l()

--Прочитать n <= 4 байтов из файла, возвращает прочитанные байты как число, если не удалось прочитать, то возвращает 0
local function readBytes(file, bytes)
  local readedByte = 0
  local readedNumber = 0
  for i = bytes, 1, -1 do
    readedByte = string.byte( file:read(1) or NULL_CHAR )
    readedNumber = readedNumber + bit32.lshift(readedByte, i*8-8)
  end

  return readedNumber
end

--Преобразует цвет в hex записи в rgb запись
local function HEXtoRGB(color)
  local rr = bit32.extract( color, 16, 8 )
  local gg = bit32.extract( color, 8,  8 )
  local bb = bit32.extract( color, 0,  8 )
 
  return rr, gg, bb
end

local function RGBtoHEX(rr, gg, bb)
  return bit32.lshift(rr, 16) + bit32.lshift(gg, 8) + bb
end

--Альфа-смешение
local function alphaBlend(background_screen_color, foreground_image_color, alpha_channel)
	if ( alpha_channel <= 0 ) then return foreground_image_color end

	local INVERTED_ALPHA_CHANNEL = 255-alpha_channel

	local background_screen_color_rr, background_screen_color_gg, background_screen_color_bb    = HEXtoRGB(background_screen_color)
	local foreground_image_color_rr, foreground_image_color_gg, foreground_image_color_bb = HEXtoRGB(foreground_image_color)

	local blended_rr = foreground_image_color_rr * INVERTED_ALPHA_CHANNEL / 255 + background_screen_color_rr * alpha_channel / 255
	local blended_gg = foreground_image_color_gg * INVERTED_ALPHA_CHANNEL / 255 + background_screen_color_gg * alpha_channel / 255
	local blended_bb = foreground_image_color_bb * INVERTED_ALPHA_CHANNEL / 255 + background_screen_color_bb * alpha_channel / 255

	return RGBtoHEX( blended_rr, blended_gg, blended_bb )
end

--Конвертация 24 битной палитры в 8 битную
local function HEX_color24to8_l()
	local prevHexcolor24 = nil
	local prevIndex = 0

	return function( hexcolor24 )
		if ( hexcolor24 == prevHexcolor24 ) then
			return prevIndex
		end
		prevHexcolor24 = hexcolor24

		local rr, gg, bb = HEXtoRGB( hexcolor24 )
		local reducedColor = math.modf(rr / 0x33) * 0x330000 + math.modf(gg / 0x24) * 0x2400 + math.modf(bb / 0x3F) * 0x3F

		for color_index, color in pairs(palette) do
			if ( hexcolor24 == color or reducedColor == color ) then
				prevIndex = color_index
				return color_index
			end
		end

		return 0
	end
end
local HEX_color24to8 = HEX_color24to8_l()

--Конвертация 8 битной палитры в 24 битную
local function HEX_color8to24( hexcolor8 )
	return palette[hexcolor8]
end

--Сжатие пикселя, исключая символ
local function compressPixel(foreground, background, alpha)
	return bit32.lshift( foreground, BYTE_SIZE*2 ) + bit32.lshift( background, BYTE_SIZE ) + alpha
end

--Восстановление пикселя
local function decompressPixel( compressed_pixel )
	return bit32.rshift( compressed_pixel, BYTE_SIZE*2 ), bit32.rshift( bit32.band( compressed_pixel, 0x00FF00 ), BYTE_SIZE ), bit32.band( compressed_pixel, 0x0000FF )
end

--Подготавливает цвета и символ для записи в файл
local function encodePixel(compressed_pixel, _, _, _, char)
	local decompressed_fg, decompressed_bg, alpha = decompressPixel( compressed_pixel )
	local ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 = string.byte( char, 1, 6 )

	ascii_char1 = ascii_char1 or NULL_CHAR

	return { decompressed_fg, decompressed_bg, alpha, ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 }
end

local function encodePixel_full_array(_, hexcolor_fg, hexcolor_bg, alpha, char)
	local converted_fg = HEX_color24to8( hexcolor_fg )
	local converted_bg = HEX_color24to8( hexcolor_bg )
	local ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 = string.byte( char, 1, 6 )

	ascii_char1 = ascii_char1 or NULL_CHAR

	return { converted_fg, converted_bg, alpha, ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 }
end

local function encodePixel_24bit_mode(_, hexcolor_fg, hexcolor_bg, alpha, char)
	local red_fg, green_fg, blue_fg = HEXtoRGB( hexcolor_fg )
	local red_bg, green_bg, blue_bg = HEXtoRGB( hexcolor_bg )
	local ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 = string.byte( char, 1, 6 )
	ascii_char1 = ascii_char1 or NULL_CHAR

	return { red_fg, green_fg, blue_fg, red_bg, green_bg, blue_bg, alpha, ascii_char1, ascii_char2, ascii_char3, ascii_char4, ascii_char5, ascii_char6 }
end

--Выбор метода записи
local encodePixel =
{
	[MODES.MODE_24BIT] = encodePixel_24bit_mode,

	[true]  = encodePixel_full_array,
	[false]	= encodePixel
}

--Декодирование utf8 символа
local function decodeChar(file)
	local firstUTF8Byte = readBytes(file, 1)
	local charcodeArray = {firstUTF8Byte}
	local utf8Length = 1

	local terminateBit = selectTerminateBit(firstUTF8Byte)
	if ( terminateBit == 32 ) then
		utf8Length = 2
	elseif ( terminateBit == 16 ) then 
		utf8Length = 3
	elseif ( terminateBit == 8 ) then
		utf8Length = 4
	elseif ( terminateBit == 4 ) then
		utf8Length = 5
	elseif ( terminateBit == 2 ) then
		utf8Length = 6
	end

	for i = 1, utf8Length-1 do
		table.insert( charcodeArray, readBytes(file, 1) )
	end

	return string.char( table.unpack( charcodeArray ) )
end

local imageAPI = {}

--Установить режим работы
function imageAPI.setMode( mode )
	if ( mode == ""8bit"" ) then
		MODE = nil
	else
		MODE = mode
	end
end

--Установить путь до палитры
function imageAPI.setPalette( palette_path )
	PALETTE_PATH = palette_path or PALETTE_PATH
	reloadPalette()
end

--Получить текущий режим
function imageAPI.getMode()
	return MODE
end

--Запись в файл по массиву изображения
function imageAPI.write(path, picture, full_array)
	local elementCount = (full_array or MODE == MODES.MODE_24BIT) and ELEMENT_COUNT_FULL_ARRAY or ELEMENT_COUNT
	local encodedPixel = nil

	local file = assert( io.open(path, ""w""), FILE_OPEN_ERROR )

	file:write( table.unpack(ocif_signature_expand) )
	file:write( string.char( picture[IMAGE_WIDTH]  ) )
	file:write( string.char( picture[IMAGE_HEIGHT] ) )
	file:write( string.char( picture[IMAGE_FRAMES] ) )
	
	for frame=0, picture[IMAGE_FRAMES]-1, 1 do
		for element = elementCount, picture[IMAGE_HEIGHT] * picture[IMAGE_WIDTH] * elementCount, elementCount do
			--Подготовка пикселя к записи
			encodedPixel = encodePixel[MODE or full_array or false]
			(
				picture[IMAGE+frame][element-COMPRESSED_PIXEL],
				picture[IMAGE+frame][element-FOREGROUND],
				picture[IMAGE+frame][element-BACKGROUND],
				picture[IMAGE+frame][element-ALPHA_CHANNEL],
				picture[IMAGE+frame][element-UTF8_CHAR]
			)

			--Запись
			for i = 1, #encodedPixel do
				file:write( string.char( encodedPixel[i] ) )
			end
		end
	end

	file:close()
end

--Чтение из файла, возвращет массив изображения
function imageAPI.read(path, full_array)
	local picture = {}
	local elementCount = (MODE == MODES.MODE_24BIT) and ELEMENT_COUNT_FULL_ARRAY or ELEMENT_COUNT
	local file = assert( io.open(path, ""rb""), FILE_OPEN_ERROR )

	--Чтение подписи файла
	local signature1, signature2 = readBytes(file, 4), readBytes(file, 3)
	if ( signature1 ~= ocif_signature1 or signature2 ~= ocif_signature2 ) then
		file:close()
		error( SIGNATURE_MATCH_ERROR )
	end

	picture[IMAGE_WIDTH]  = readBytes(file, 1)
	picture[IMAGE_HEIGHT] = readBytes(file, 1)
	picture[IMAGE_FRAMES] = readBytes(file, 1)

	for frame=0, picture[IMAGE_FRAMES]-1, 1 do
		picture[IMAGE+frame] = {}

		for element = elementCount, picture[IMAGE_HEIGHT] * picture[IMAGE_WIDTH] * elementCount, elementCount do
			if ( MODE == MODES.MODE_24BIT or full_array ) then
				picture[IMAGE+frame][element-FOREGROUND] = readBytes(file, 3)
				picture[IMAGE+frame][element-BACKGROUND] = readBytes(file, 3)
				picture[IMAGE+frame][element-ALPHA_CHANNEL] = readBytes(file, 1)
			else
				picture[IMAGE+frame][element-COMPRESSED_PIXEL] = readBytes(file, 3)
			end

			picture[IMAGE+frame][element-UTF8_CHAR] = decodeChar( file )
		end
	end

	file:close()

	return picture
end

--Отрисовка изображения(Для примера. Медленная. Делайте СВОЮ отрисовку)
function imageAPI.draw(picture, frame, sx, sy, gpu)
	frame = frame - 1
	local x, y = 0, 0

	local screenBg = nil
	local fg8bit, bg8bit, alpha, fg24bit, bg24bit = nil

	local elementCount = (MODE == MODES.MODE_24BIT) and ELEMENT_COUNT_FULL_ARRAY or ELEMENT_COUNT
	for element = elementCount, picture[IMAGE_HEIGHT] * picture[IMAGE_WIDTH] * elementCount, elementCount do	
		x = (x % picture[IMAGE_WIDTH]) + 1
		y = (x == 1) and y+1 or y

		_, _, screenBg = gpu.get(sx+x-1, sy+y-1)

		if ( MODE == MODES.MODE_24BIT ) then
			fg24bit, bg24bit, alpha = picture[IMAGE+frame][element-FOREGROUND], picture[IMAGE+frame][element-BACKGROUND], picture[IMAGE+frame][element-ALPHA_CHANNEL]
		else
			fg8bit, bg8bit, alpha = decompressPixel( picture[IMAGE+frame][element-COMPRESSED_PIXEL] )
			fg24bit, bg24bit = HEX_color8to24( fg8bit ), HEX_color8to24( bg8bit )
		end

		gpu.setForeground( fg24bit )
		gpu.setBackground( alphaBlend( screenBg, bg24bit, alpha ) )

		gpu.set(sx+x-1, sy+y-1, picture[IMAGE+frame][element-UTF8_CHAR])
	end
end

return imageAPI"
hKyJULHH,Execute step by step,keisei,C#,Saturday 7th of October 2023 06:44:05 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TaskFromMisha.Services;
using TaskFromMisha.Infrastructure;
using System.Data;
using System.Windows.Input;

namespace TaskFromMisha.VM
{
    class StepByStepVM:ViewModel
    {
    	//Временный математический результат
        private int z = 0;
        
        //Проверка на продолжение работы функции CheckCanNextStep()
        private bool CanNextStep = false;
        
        //Команда, срабатывающая при нажатии на кнопку
        public ICommand NextStepCommand { get; }
        private bool CanNextStepCommandExecute(object p) => true;
        private void OnNextStepCommandExecuted(object p) => CanNextStep = true;
		
        //Метод, ожидающий нажатия кнопки
        public void CheckCanNextStep() 
        {
            while (true)
            {
                if (CanNextStep)
                {
                    CanNextStep = false;
                    return;
                }
            }
        }
		
        //Свойство z
        public int Z
        {
            get => z;
            set
            {
                z = value;
                OnPropertyChanged();
            }
        }
        
        
		//Сложная математическая функция. Планируется выводить на экран каждый сделанный шаг
        async public void inc()
        {
            for(int i=0; i<15; i++)
            {
                await Task.Run(()=>CheckCanNextStep());
                Z += i;
            }
        }

        public StepByStepVM()
        {
            NextStepCommand = new LabmdaCommand(OnNextStepCommandExecuted, CanNextStepCommandExecute);
            inc();
        }
    }
}
"
6uL7V8kF,Untitled,xPucTu4,Python,Saturday 7th of October 2023 06:36:41 AM CDT,"import math
selected_figure = input()

square = ""square""
rectangle = ""rectangle""
circle = ""circle""
triangle = ""triangle""

if selected_figure == square:
    side = float(input())
    square = side * side
    print(f""{square:.3f}"")

elif selected_figure == rectangle:
    rectangle = float(input()) * float(input())
    print(f""{rectangle:.3f}"")

elif selected_figure == circle:
    circle = math.pi * float(input()) ** 2
    print(f""{circle:.3f}"")

elif selected_figure == triangle:
    triangle = 1 / 2 * float(input()) * float(input())
    print(f""{triangle:.3f}"")"
YeXA4Rsq,Mad,Unknown_No_1,PHP,Saturday 7th of October 2023 06:30:52 AM CDT,NewVersionModComingSoon
