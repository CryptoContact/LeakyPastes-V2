id,title,username,language,date,content
mn29dMLP,enderphone,Hakai69,Lua,Friday 11th of August 2023 12:47:49 PM CDT,"local channel = 6969
local modem = peripheral.wrap(""back"")


term.clear()
term.setCursorPos(1,1)

local function send()
    local message = {""zn75SKKr7W"",""zn75SKKr7W""}
    print(""SENDING: ""..message)
    modem.transmit(channel,channel,message)
end
send()
--By Hakai69"
4PkH4zBF,ender,Hakai69,Lua,Friday 11th of August 2023 12:47:03 PM CDT,"local channel = 6969
local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(channel)

local function receive(protocol, timeout) --From rednet api
    if type(protocol) == ""number"" and timeout == nil then
        protocol, timeout = nil, protocol
    end

    -- Start the timer
    local timer, event_filter
    if timeout then
        timer = os.startTimer(timeout)
        event_filter = ""modem_message"" or ""timer""
    else
        event_filter = ""modem_message""
    end

    -- Wait for events
    while true do
        local event, _, _, port, message = os.pullEvent(event_filter)
        if event == ""modem_message"" and type(message) == ""table"" then
            if message[2] == protocol then
                return message
            end
        elseif event == ""timer"" then
            -- Return nil if we timeout
            if p1 == timer then
                return nil
            end
        end
    end
end
local function redstone()
    redstone.setOutput(""left"", true)
    timer = os.startTimer(0.5)
    local event = os.pullEvent(""timer"")
    redstone.setOutput(""left"", false)
end
local message = receive(""zn75SKKr7W"")
if message then
    redstone()
end
--By Hakai69"
tjgYBm7k,Untitled,Skos_Martren,C++,Friday 11th of August 2023 12:45:22 PM CDT,"/*

По условию задачи необходимо подсчитать КОЛИЧЕСТВО таких суфиксов Suffix[g] чтобы 
prefixSum[h] - prefixSum[f] = k == Suffix[g] : 0 <= f < h <= nums.size()


Рассмотрим формулу: prefixSum[h] - k = prefixSum[f] и омтетим, что: 
	* prefixSum[h] существует по определнию префиксной суммы, т.е. индекс h -- это конец подмассива в nums: prefixSum[h] = sum(nums[i]) : 0 <= i <= h
	* k дано по условию
	* Тогда, ЕСЛИ СУЩЕСТВУЕТ prefixSum[f], то можно ГАРАНТИРОВАТЬ существование Suffix[g] = k
	* Если Suffix[g] будет сущестоввать на момент исследования prefixSum[h], то выражение prefixSum[h] - prefixSum[f] = k будет истино
	* Теперь задача свелась к следующему утвержению: зафиксируем конец префикса h. Если существует префикс prefixSum[f] = prefixSum[h] - k, 
	  такой, что f < h, то к ответ надо инкрементировать
   	* k = Suffix[g] = sum(nums[i]) : f <= i <= h

*/

class Solution {

private:

using PrefixSum = int; // максимальная сумма префиска достигается в крайнем случае: [1000, ...., 1000] : nums.length = 2 * 10^4 --> 1000 * 2 * 10^4 = 2 * 10^7 < 2^31 - 1  < 2^31 ~ 10^9

using Count = int; // из ""1 <= nums.length <= 2 * 10^4"" --> что int достаточно. крайний случай: [1000, ...., 1000], k = 1000 : nums.length = 2 * 10^4


struct DataPrefix{

Count count = 0;
vector<int> RightIdxPrefixSum;

};

unordered_map<PrefixSum, DataPrefix> PrefixToData;

public:
    int subarraySum(const vector<int>& nums, int k) {
        
        int Number = 0;

        int PrefixSum_h = 0;
        ++PrefixToData[PrefixSum_h].count; 
        PrefixToData[PrefixSum_h].RightIdxPrefixSum.push_back(0);

        vector<pair<int, int>> IdxsSuffix;

        for(int h = 0; h < nums.size(); ++h){

            PrefixSum_h += nums[h];
            PrefixToData[PrefixSum_h].RightIdxPrefixSum.push_back(h);

            if(PrefixToData.find(PrefixSum_h - k) != PrefixToData.end()){ // роиск prefixSum[f]

                Number += PrefixToData[PrefixSum_h - k].count;

                for(int val : PrefixToData[PrefixSum_h - k].RightIdxPrefixSum){
                    IdxsSuffix.push_back({val, h});
                }

                
            }

            ++PrefixToData[PrefixSum_h].count;
            

        }

        for(auto [l, r] : IdxsSuffix){
            cout << l << ' ' << r << '\n';
        }

        // return IdxsSuffix.size(); // Wrong Answer 65 / 93 testcases passed 
        return Number;

    }
};"
5ZEd8c5e,Untitled,Skos_Martren,C++,Friday 11th of August 2023 12:21:26 PM CDT,"/*

По условию задачи необходимо подсчитать КОЛИЧЕСТВО таких суфиксов Suffix[g] чтобы 
prefixSum[h] - prefixSum[f] = k == Suffix[g] : 0 <= f < h <= nums.size()


Рассмотрим формулу: prefixSum[h] - k = prefixSum[f] и омтетим, что: 
	* prefixSum[h] существует по определнию префиксной суммы, т.е. индекс h -- это конец подмассива в nums: prefixSum[h] = sum(nums[i]) : 0 <= i <= h
	* k дано по условию
	* Тогда, ЕСЛИ СУЩЕСТВУЕТ prefixSum[f], то можно ГАРАНТИРОВАТЬ существование Suffix[g] = k
	* Если Suffix[g] будет сущестоввать на момент исследования prefixSum[h], то выражение prefixSum[h] - prefixSum[f] = k будет истино
	* Теперь задача свелась к следующему утвержению: зафиксируем конец префикса h. Если существует префикс prefixSum[f] = prefixSum[h] - k, 
	  такой, что f < h, то к ответ надо инкрементировать
   	* k = Suffix[g] = sum(nums[i]) : f <= i <= h

*/

class Solution {

private:

using PrefixSum = int; // максимальная сумма префиска достигается в крайнем случае: [1000, ...., 1000] : nums.length = 2 * 10^4 --> 1000 * 2 * 10^4 = 2 * 10^7 < 2^31 - 1  < 2^31 ~ 10^9

using Count = int; // из ""1 <= nums.length <= 2 * 10^4"" --> что int достаточно. крайний случай: [1000, ...., 1000], k = 1000 : nums.length = 2 * 10^4


struct DataPrefix{

Count count = 0;
int RightIdxPrefixSum = 0;

};

unordered_map<PrefixSum, DataPrefix> PrefixToData;

public:
    int subarraySum(const vector<int>& nums, int k) {
        
        int Number = 0;

        int PrefixSum_h = 0;
        ++PrefixToData[PrefixSum_h].count; 

        vector<pair<int, int>> IdxsPrefix;

        for(int h = 0; h < nums.size(); ++h){

            PrefixSum_h += nums[h];
            PrefixToData[PrefixSum_h].RightIdxPrefixSum = h;

            if(PrefixToData.find(PrefixSum_h - k) != PrefixToData.end()){ // роиск prefixSum[f]

                Number += PrefixToData[PrefixSum_h - k].count;
                IdxsPrefix.push_back({PrefixToData[PrefixSum_h - k].RightIdxPrefixSum, h});
            }

            ++PrefixToData[PrefixSum_h].count;
            

        }

        for(auto [l, r] : IdxsPrefix){
            cout << l << ' ' << r << '\n';
        }

        // return IdxsPrefix.size(); // Wrong Answer 65 / 93 testcases passed 
        return Number;

    }
};"
zPwkn5RM,Untitled,Mysoft,QBasic,Friday 11th of August 2023 12:17:44 PM CDT,"		UEVENT ON:  ON UEVENT GOSUB EventISR
        ' *** Create ISR code for events ***
        DIM iSeg AS INTEGER, iOff AS INTEGER
        lPev = AddrOfSetUEvent 'lib call to get ptr for qb internal func
        IF lPev = 0 THEN PRINT ""addr of SetUEvent failed..."": END '<- safety
        lSeg = (((lPev AND &HFFFF0000) \ &H10000) AND &HFFFF&)
        lOff = (lPev AND &HFFFF&)
        PRINT HEX$(lSeg) + "":"" + HEX$(lOff) '<-prints seg:off of SetUEvent
        lSeg = lSeg * 256&: lOff = lOff * 256&

		'inlined assembly hehe'
        lsr(0) = &H90000068 + lSeg 'push 0000h  / nop
        lsr(1) = &H60000068 + lOff 'push 0000h  / pusha
        lsr(2) = &H5EFFEC8B        'mov bp,sp / call far [bp+10h]
        lsr(3) = &HE620B010        'mov al,20 / out 20,al
        lsr(4) = &HC4836120        'popa / add sp, 4
        lsr(5) = &HCF04            'iret        	"
tk0J0Cai,Untitled,Mysoft,QBasic,Friday 11th of August 2023 12:14:13 PM CDT,"DECLARE FUNCTION AddrOfSetUEvent&

DEFLNG L
DEFINT I

lPev = AddrOfSetUEvent '<- asm that return seg:off of SetUEvent()

'split seg/off
iSeg = (CINT((lPev AND &HFFFF0000) \ &H10000))
iOff = (lPev AND &HFFFF&)

CLS

UEVENT ON
ON UEVENT GOSUB Load

DO
  IF x THEN PRINT ""Event!"": EXIT DO
  DEF SEG = iSeg : CALL absolute(iOff) '<- works
LOOP UNTIL INKEY$ <> """"
PRINT ""Done""
END

Load:
PRINT ""Event Handler""
x = 1
RETURN

"
dF5m6sDD,Nigerian scammers [11-8-1/2023],bombaires,HTML,Friday 11th of August 2023 11:43:35 AM CDT,"<a href=""mailto:joywilli33@gmail.com"">joywilli33@gmail.com</a>
<a href=""mailto:jo.yw.i.l.li33@gmail.com"">jo.yw.i.l.li33@gmail.com</a>
<a href=""mailto:joy.wil.li33@gmail.com"">joy.wil.li33@gmail.com</a>
<a href=""mailto:jo.yw.i.lli33@gmail.com"">jo.yw.i.lli33@gmail.com</a>
<a href=""mailto:j.o.y.wi.l.l.i33@gmail.com"">j.o.y.wi.l.l.i33@gmail.com</a>
<a href=""mailto:j.oywil.li33@gmail.com"">j.oywil.li33@gmail.com</a>
<a href=""mailto:joyw.il.li.3.3@gmail.com"">joyw.il.li.3.3@gmail.com</a>
<a href=""mailto:jo.yw.il.l.i.33@gmail.com"">jo.yw.il.l.i.33@gmail.com</a>
<a href=""mailto:joyw.il.li33@gmail.com"">joyw.il.li33@gmail.com</a>
<a href=""mailto:joyw.i.l.l.i.3.3@gmail.com"">joyw.i.l.l.i.3.3@gmail.com</a>
<a href=""mailto:jo.ywil.li.3.3@gmail.com"">jo.ywil.li.3.3@gmail.com</a>
<a href=""mailto:jo.ywil.l.i33@gmail.com"">jo.ywil.l.i33@gmail.com</a>
<a href=""mailto:j.o.y.w.il.li33@gmail.com"">j.o.y.w.il.li33@gmail.com</a>
<a href=""mailto:j.oyw.i.l.l.i.33@gmail.com"">j.oyw.i.l.l.i.33@gmail.com</a>
<a href=""mailto:j.oy.wi.ll.i.3.3@gmail.com"">j.oy.wi.ll.i.3.3@gmail.com</a>
<a href=""mailto:joyw.illi33@gmail.com"">joyw.illi33@gmail.com</a>
<a href=""mailto:j.o.ywi.l.l.i.3.3@gmail.com"">j.o.ywi.l.l.i.3.3@gmail.com</a>
<a href=""mailto:j.o.ywill.i33@gmail.com"">j.o.ywill.i33@gmail.com</a>
<a href=""mailto:j.o.y.w.illi33@gmail.com"">j.o.y.w.illi33@gmail.com</a>
<a href=""mailto:joyw.ill.i.3.3@gmail.com"">joyw.ill.i.3.3@gmail.com</a>
<a href=""mailto:j.o.ywilli.3.3@gmail.com"">j.o.ywilli.3.3@gmail.com</a>
<a href=""mailto:j.oy.w.i.l.l.i.3.3@gmail.com"">j.oy.w.i.l.l.i.3.3@gmail.com</a>
<a href=""mailto:j.oy.w.il.l.i33@gmail.com"">j.oy.w.il.l.i33@gmail.com</a>
<a href=""mailto:jo.y.wi.l.li.33@gmail.com"">jo.y.wi.l.li.33@gmail.com</a>
<a href=""mailto:jo.y.will.i.3.3@gmail.com"">jo.y.will.i.3.3@gmail.com</a>
<a href=""mailto:jo.yw.i.ll.i.3.3@gmail.com"">jo.yw.i.ll.i.3.3@gmail.com</a>
<a href=""mailto:joy.wi.lli.33@gmail.com"">joy.wi.lli.33@gmail.com</a>
<a href=""mailto:joy.w.i.lli.33@gmail.com"">joy.w.i.lli.33@gmail.com</a>
<a href=""mailto:j.o.y.wil.l.i3.3@gmail.com"">j.o.y.wil.l.i3.3@gmail.com</a>
<a href=""mailto:j.oy.wi.ll.i3.3@gmail.com"">j.oy.wi.ll.i3.3@gmail.com</a>
<a href=""mailto:j.o.ywi.lli33@gmail.com"">j.o.ywi.lli33@gmail.com</a>
<a href=""mailto:j.o.ywilli.33@gmail.com"">j.o.ywilli.33@gmail.com</a>
<a href=""mailto:joywill.i.33@gmail.com"">joywill.i.33@gmail.com</a>
<a href=""mailto:j.oyw.illi.3.3@gmail.com"">j.oyw.illi.3.3@gmail.com</a>
<a href=""mailto:j.oyw.il.li.3.3@gmail.com"">j.oyw.il.li.3.3@gmail.com</a>
<a href=""mailto:jo.y.w.i.lli.3.3@gmail.com"">jo.y.w.i.lli.3.3@gmail.com</a>
<a href=""mailto:j.o.ywi.l.l.i33@gmail.com"">j.o.ywi.l.l.i33@gmail.com</a>
<a href=""mailto:j.oywi.l.li33@gmail.com"">j.oywi.l.li33@gmail.com</a>
<a href=""mailto:j.o.y.w.ill.i33@gmail.com"">j.o.y.w.ill.i33@gmail.com</a>
<a href=""mailto:jo.y.w.il.li.3.3@gmail.com"">jo.y.w.il.li.3.3@gmail.com</a>
<a href=""mailto:j.o.ywi.l.l.i.33@gmail.com"">j.o.ywi.l.l.i.33@gmail.com</a>
<a href=""mailto:jo.y.wi.lli.3.3@gmail.com"">jo.y.wi.lli.3.3@gmail.com</a>
<a href=""mailto:joy.willi.3.3@gmail.com"">joy.willi.3.3@gmail.com</a>
<a href=""mailto:jo.yw.i.l.l.i3.3@gmail.com"">jo.yw.i.l.l.i3.3@gmail.com</a>
<a href=""mailto:j.o.ywi.l.li.33@gmail.com"">j.o.ywi.l.li.33@gmail.com</a>
<a href=""mailto:joyw.i.ll.i33@gmail.com"">joyw.i.ll.i33@gmail.com</a>
<a href=""mailto:j.o.ywi.l.li.3.3@gmail.com"">j.o.ywi.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oy.wil.l.i.3.3@gmail.com"">j.oy.wil.l.i.3.3@gmail.com</a>
<a href=""mailto:joy.wi.ll.i.3.3@gmail.com"">joy.wi.ll.i.3.3@gmail.com</a>
<a href=""mailto:jo.y.wi.l.l.i33@gmail.com"">jo.y.wi.l.l.i33@gmail.com</a>
<a href=""mailto:joywil.li3.3@gmail.com"">joywil.li3.3@gmail.com</a>
<a href=""mailto:j.oy.w.i.lli.3.3@gmail.com"">j.oy.w.i.lli.3.3@gmail.com</a>
<a href=""mailto:j.oywi.lli3.3@gmail.com"">j.oywi.lli3.3@gmail.com</a>
<a href=""mailto:jo.yw.i.l.li.33@gmail.com"">jo.yw.i.l.li.33@gmail.com</a>
<a href=""mailto:j.o.y.w.i.ll.i3.3@gmail.com"">j.o.y.w.i.ll.i3.3@gmail.com</a>
<a href=""mailto:joywi.l.li33@gmail.com"">joywi.l.li33@gmail.com</a>
<a href=""mailto:j.oy.w.i.ll.i33@gmail.com"">j.oy.w.i.ll.i33@gmail.com</a>
<a href=""mailto:jo.yw.i.l.li.3.3@gmail.com"">jo.yw.i.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oy.wil.l.i33@gmail.com"">j.oy.wil.l.i33@gmail.com</a>
<a href=""mailto:jo.y.wil.l.i.33@gmail.com"">jo.y.wil.l.i.33@gmail.com</a>
<a href=""mailto:j.o.y.willi.3.3@gmail.com"">j.o.y.willi.3.3@gmail.com</a>
<a href=""mailto:joy.w.i.ll.i3.3@gmail.com"">joy.w.i.ll.i3.3@gmail.com</a>
<a href=""mailto:jo.ywill.i3.3@gmail.com"">jo.ywill.i3.3@gmail.com</a>
<a href=""mailto:j.oy.w.il.li.3.3@gmail.com"">j.oy.w.il.li.3.3@gmail.com</a>
<a href=""mailto:joy.wi.l.li33@gmail.com"">joy.wi.l.li33@gmail.com</a>
<a href=""mailto:joyw.illi.3.3@gmail.com"">joyw.illi.3.3@gmail.com</a>
<a href=""mailto:j.oyw.illi33@gmail.com"">j.oyw.illi33@gmail.com</a>
<a href=""mailto:jo.y.w.ill.i.33@gmail.com"">jo.y.w.ill.i.33@gmail.com</a>
<a href=""mailto:j.oywi.ll.i3.3@gmail.com"">j.oywi.ll.i3.3@gmail.com</a>
<a href=""mailto:joyw.i.lli.33@gmail.com"">joyw.i.lli.33@gmail.com</a>
<a href=""mailto:j.o.y.wi.l.l.i3.3@gmail.com"">j.o.y.wi.l.l.i3.3@gmail.com</a>
<a href=""mailto:joyw.i.l.l.i33@gmail.com"">joyw.i.l.l.i33@gmail.com</a>
<a href=""mailto:j.o.y.willi3.3@gmail.com"">j.o.y.willi3.3@gmail.com</a>
<a href=""mailto:j.oy.w.il.l.i3.3@gmail.com"">j.oy.w.il.l.i3.3@gmail.com</a>
<a href=""mailto:jo.ywi.lli33@gmail.com"">jo.ywi.lli33@gmail.com</a>
<a href=""mailto:j.o.ywil.l.i3.3@gmail.com"">j.o.ywil.l.i3.3@gmail.com</a>
<a href=""mailto:j.oywil.li.33@gmail.com"">j.oywil.li.33@gmail.com</a>
<a href=""mailto:joy.w.il.li.3.3@gmail.com"">joy.w.il.li.3.3@gmail.com</a>
<a href=""mailto:j.oywi.l.li.3.3@gmail.com"">j.oywi.l.li.3.3@gmail.com</a>
<a href=""mailto:j.o.yw.i.l.li3.3@gmail.com"">j.o.yw.i.l.li3.3@gmail.com</a>
<a href=""mailto:joywi.ll.i33@gmail.com"">joywi.ll.i33@gmail.com</a>
<a href=""mailto:j.oy.w.il.li33@gmail.com"">j.oy.w.il.li33@gmail.com</a>
<a href=""mailto:joywi.ll.i.33@gmail.com"">joywi.ll.i.33@gmail.com</a>
<a href=""mailto:joy.wi.ll.i3.3@gmail.com"">joy.wi.ll.i3.3@gmail.com</a>
<a href=""mailto:joy.w.i.l.li33@gmail.com"">joy.w.i.l.li33@gmail.com</a>
<a href=""mailto:j.o.ywi.lli3.3@gmail.com"">j.o.ywi.lli3.3@gmail.com</a>
<a href=""mailto:j.oyw.ill.i33@gmail.com"">j.oyw.ill.i33@gmail.com</a>
<a href=""mailto:j.oywill.i3.3@gmail.com"">j.oywill.i3.3@gmail.com</a>
<a href=""mailto:j.oy.will.i33@gmail.com"">j.oy.will.i33@gmail.com</a>
<a href=""mailto:jo.yw.i.l.li3.3@gmail.com"">jo.yw.i.l.li3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.l.li3.3@gmail.com"">j.oyw.i.l.li3.3@gmail.com</a>
<a href=""mailto:j.oy.w.il.l.i.33@gmail.com"">j.oy.w.il.l.i.33@gmail.com</a>
<a href=""mailto:jo.y.wi.ll.i.33@gmail.com"">jo.y.wi.ll.i.33@gmail.com</a>
<a href=""mailto:joy.wil.li3.3@gmail.com"">joy.wil.li3.3@gmail.com</a>
<a href=""mailto:jo.y.w.il.li33@gmail.com"">jo.y.w.il.li33@gmail.com</a>
<a href=""mailto:j.o.y.w.il.li.3.3@gmail.com"">j.o.y.w.il.li.3.3@gmail.com</a>
<a href=""mailto:j.oy.wi.ll.i33@gmail.com"">j.oy.wi.ll.i33@gmail.com</a>
<a href=""mailto:j.oywil.l.i33@gmail.com"">j.oywil.l.i33@gmail.com</a>
<a href=""mailto:j.o.yw.illi.3.3@gmail.com"">j.o.yw.illi.3.3@gmail.com</a>
<a href=""mailto:joyw.i.lli.3.3@gmail.com"">joyw.i.lli.3.3@gmail.com</a>
<a href=""mailto:joy.wi.l.li.3.3@gmail.com"">joy.wi.l.li.3.3@gmail.com</a>
<a href=""mailto:jo.y.w.illi.3.3@gmail.com"">jo.y.w.illi.3.3@gmail.com</a>
<a href=""mailto:jo.y.wi.l.l.i.3.3@gmail.com"">jo.y.wi.l.l.i.3.3@gmail.com</a>
<a href=""mailto:j.o.yw.i.l.l.i.33@gmail.com"">j.o.yw.i.l.l.i.33@gmail.com</a>
<a href=""mailto:joyw.i.l.l.i3.3@gmail.com"">joyw.i.l.l.i3.3@gmail.com</a>
<a href=""mailto:j.oy.w.illi33@gmail.com"">j.oy.w.illi33@gmail.com</a>
<a href=""mailto:jo.yw.ill.i33@gmail.com"">jo.yw.ill.i33@gmail.com</a>
<a href=""mailto:j.o.y.w.il.l.i.3.3@gmail.com"">j.o.y.w.il.l.i.3.3@gmail.com</a>
<a href=""mailto:joy.w.ill.i.33@gmail.com"">joy.w.ill.i.33@gmail.com</a>
<a href=""mailto:j.oywill.i.33@gmail.com"">j.oywill.i.33@gmail.com</a>
<a href=""mailto:joy.w.il.l.i3.3@gmail.com"">joy.w.il.l.i3.3@gmail.com</a>
<a href=""mailto:joywilli3.3@gmail.com"">joywilli3.3@gmail.com</a>
<a href=""mailto:j.o.yw.i.ll.i.3.3@gmail.com"">j.o.yw.i.ll.i.3.3@gmail.com</a>
<a href=""mailto:jo.y.will.i3.3@gmail.com"">jo.y.will.i3.3@gmail.com</a>
<a href=""mailto:j.oywi.l.l.i33@gmail.com"">j.oywi.l.l.i33@gmail.com</a>
<a href=""mailto:joyw.illi.33@gmail.com"">joyw.illi.33@gmail.com</a>
<a href=""mailto:jo.ywi.l.li3.3@gmail.com"">jo.ywi.l.li3.3@gmail.com</a>
<a href=""mailto:jo.ywill.i33@gmail.com"">jo.ywill.i33@gmail.com</a>
<a href=""mailto:j.o.yw.il.li3.3@gmail.com"">j.o.yw.il.li3.3@gmail.com</a>
<a href=""mailto:j.oy.w.i.lli3.3@gmail.com"">j.oy.w.i.lli3.3@gmail.com</a>
<a href=""mailto:j.oywi.l.l.i.3.3@gmail.com"">j.oywi.l.l.i.3.3@gmail.com</a>
<a href=""mailto:joy.wi.l.l.i.33@gmail.com"">joy.wi.l.l.i.33@gmail.com</a>
<a href=""mailto:joy.w.i.ll.i.33@gmail.com"">joy.w.i.ll.i.33@gmail.com</a>
<a href=""mailto:joy.wil.l.i3.3@gmail.com"">joy.wil.l.i3.3@gmail.com</a>
<a href=""mailto:j.oyw.ill.i3.3@gmail.com"">j.oyw.ill.i3.3@gmail.com</a>
<a href=""mailto:joy.will.i3.3@gmail.com"">joy.will.i3.3@gmail.com</a>
<a href=""mailto:jo.ywi.lli.33@gmail.com"">jo.ywi.lli.33@gmail.com</a>
<a href=""mailto:j.oyw.il.l.i.3.3@gmail.com"">j.oyw.il.l.i.3.3@gmail.com</a>
<a href=""mailto:jo.y.w.i.l.li.3.3@gmail.com"">jo.y.w.i.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.ll.i33@gmail.com"">j.oyw.i.ll.i33@gmail.com</a>
<a href=""mailto:joy.wi.l.li3.3@gmail.com"">joy.wi.l.li3.3@gmail.com</a>
<a href=""mailto:joywi.l.l.i.3.3@gmail.com"">joywi.l.l.i.3.3@gmail.com</a>
<a href=""mailto:joy.w.il.l.i33@gmail.com"">joy.w.il.l.i33@gmail.com</a>
<a href=""mailto:j.o.y.w.il.l.i33@gmail.com"">j.o.y.w.il.l.i33@gmail.com</a>
<a href=""mailto:jo.ywi.l.l.i33@gmail.com"">jo.ywi.l.l.i33@gmail.com</a>
<a href=""mailto:j.oy.wi.l.l.i.33@gmail.com"">j.oy.wi.l.l.i.33@gmail.com</a>
<a href=""mailto:j.oy.w.i.l.l.i.33@gmail.com"">j.oy.w.i.l.l.i.33@gmail.com</a>
<a href=""mailto:j.oy.willi3.3@gmail.com"">j.oy.willi3.3@gmail.com</a>
<a href=""mailto:j.o.yw.i.lli.33@gmail.com"">j.o.yw.i.lli.33@gmail.com</a>
<a href=""mailto:j.o.y.w.i.ll.i33@gmail.com"">j.o.y.w.i.ll.i33@gmail.com</a>
<a href=""mailto:j.o.yw.i.l.li.3.3@gmail.com"">j.o.yw.i.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oyw.il.l.i3.3@gmail.com"">j.oyw.il.l.i3.3@gmail.com</a>
<a href=""mailto:joy.wi.l.l.i.3.3@gmail.com"">joy.wi.l.l.i.3.3@gmail.com</a>
<a href=""mailto:j.o.y.wi.l.li33@gmail.com"">j.o.y.wi.l.li33@gmail.com</a>
<a href=""mailto:j.o.yw.i.l.li33@gmail.com"">j.o.yw.i.l.li33@gmail.com</a>
<a href=""mailto:jo.y.w.i.ll.i3.3@gmail.com"">jo.y.w.i.ll.i3.3@gmail.com</a>
<a href=""mailto:j.oy.w.i.l.li33@gmail.com"">j.oy.w.i.l.li33@gmail.com</a>
<a href=""mailto:j.oy.w.i.l.l.i3.3@gmail.com"">j.oy.w.i.l.l.i3.3@gmail.com</a>
<a href=""mailto:j.o.y.wil.l.i.3.3@gmail.com"">j.o.y.wil.l.i.3.3@gmail.com</a>
<a href=""mailto:joywilli.33@gmail.com"">joywilli.33@gmail.com</a>
<a href=""mailto:jo.yw.i.lli3.3@gmail.com"">jo.yw.i.lli3.3@gmail.com</a>
<a href=""mailto:j.o.yw.i.ll.i.33@gmail.com"">j.o.yw.i.ll.i.33@gmail.com</a>
<a href=""mailto:j.oy.wi.l.li.33@gmail.com"">j.oy.wi.l.li.33@gmail.com</a>
<a href=""mailto:joy.wi.l.l.i33@gmail.com"">joy.wi.l.l.i33@gmail.com</a>
<a href=""mailto:j.oyw.illi3.3@gmail.com"">j.oyw.illi3.3@gmail.com</a>
<a href=""mailto:j.o.ywill.i3.3@gmail.com"">j.o.ywill.i3.3@gmail.com</a>
<a href=""mailto:j.o.y.w.i.l.li.3.3@gmail.com"">j.o.y.w.i.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oy.wi.l.l.i33@gmail.com"">j.oy.wi.l.l.i33@gmail.com</a>
<a href=""mailto:j.oyw.il.l.i33@gmail.com"">j.oyw.il.l.i33@gmail.com</a>
<a href=""mailto:joyw.il.l.i33@gmail.com"">joyw.il.l.i33@gmail.com</a>
<a href=""mailto:joywill.i3.3@gmail.com"">joywill.i3.3@gmail.com</a>
<a href=""mailto:jo.yw.illi33@gmail.com"">jo.yw.illi33@gmail.com</a>
<a href=""mailto:joy.wil.l.i33@gmail.com"">joy.wil.l.i33@gmail.com</a>
<a href=""mailto:j.o.y.w.i.lli3.3@gmail.com"">j.o.y.w.i.lli3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.l.li.33@gmail.com"">j.oyw.i.l.li.33@gmail.com</a>
<a href=""mailto:joy.wi.ll.i.33@gmail.com"">joy.wi.ll.i.33@gmail.com</a>
<a href=""mailto:j.o.ywi.l.li33@gmail.com"">j.o.ywi.l.li33@gmail.com</a>
<a href=""mailto:j.o.y.w.ill.i.3.3@gmail.com"">j.o.y.w.ill.i.3.3@gmail.com</a>
<a href=""mailto:j.oy.willi33@gmail.com"">j.oy.willi33@gmail.com</a>
<a href=""mailto:joywi.ll.i3.3@gmail.com"">joywi.ll.i3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.ll.i.3.3@gmail.com"">j.oyw.i.ll.i.3.3@gmail.com</a>
<a href=""mailto:jo.yw.i.ll.i.33@gmail.com"">jo.yw.i.ll.i.33@gmail.com</a>
<a href=""mailto:j.o.yw.ill.i.33@gmail.com"">j.o.yw.ill.i.33@gmail.com</a>
<a href=""mailto:jo.yw.i.l.l.i.3.3@gmail.com"">jo.yw.i.l.l.i.3.3@gmail.com</a>
<a href=""mailto:j.oy.w.i.lli33@gmail.com"">j.oy.w.i.lli33@gmail.com</a>
<a href=""mailto:j.o.y.w.il.l.i3.3@gmail.com"">j.o.y.w.il.l.i3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.lli.3.3@gmail.com"">j.oyw.i.lli.3.3@gmail.com</a>
<a href=""mailto:jo.y.wil.li3.3@gmail.com"">jo.y.wil.li3.3@gmail.com</a>
<a href=""mailto:j.oyw.i.l.li33@gmail.com"">j.oyw.i.l.li33@gmail.com</a>
<a href=""mailto:jo.ywi.lli3.3@gmail.com"">jo.ywi.lli3.3@gmail.com</a>
<a href=""mailto:joy.wil.l.i.33@gmail.com"">joy.wil.l.i.33@gmail.com</a>
<a href=""mailto:jo.yw.il.li3.3@gmail.com"">jo.yw.il.li3.3@gmail.com</a>
<a href=""mailto:j.oy.w.illi.3.3@gmail.com"">j.oy.w.illi.3.3@gmail.com</a>
<a href=""mailto:jo.yw.il.l.i33@gmail.com"">jo.yw.il.l.i33@gmail.com</a>
<a href=""mailto:joywill.i.3.3@gmail.com"">joywill.i.3.3@gmail.com</a>
<a href=""mailto:j.oy.wi.l.li3.3@gmail.com"">j.oy.wi.l.li3.3@gmail.com</a>
<a href=""mailto:j.oy.will.i.33@gmail.com"">j.oy.will.i.33@gmail.com</a>
<a href=""mailto:j.o.yw.i.ll.i33@gmail.com"">j.o.yw.i.ll.i33@gmail.com</a>
<a href=""mailto:jo.yw.i.ll.i33@gmail.com"">jo.yw.i.ll.i33@gmail.com</a>
<a href=""mailto:j.o.ywi.lli.3.3@gmail.com"">j.o.ywi.lli.3.3@gmail.com</a>
<a href=""mailto:joywi.lli.33@gmail.com"">joywi.lli.33@gmail.com</a>
<a href=""mailto:j.o.yw.il.l.i.3.3@gmail.com"">j.o.yw.il.l.i.3.3@gmail.com</a>
<a href=""mailto:joyw.il.l.i.3.3@gmail.com"">joyw.il.l.i.3.3@gmail.com</a>
<a href=""mailto:j.o.y.will.i3.3@gmail.com"">j.o.y.will.i3.3@gmail.com</a>
<a href=""mailto:jo.y.wil.l.i.3.3@gmail.com"">jo.y.wil.l.i.3.3@gmail.com</a>
<a href=""mailto:jo.y.w.ill.i.3.3@gmail.com"">jo.y.w.ill.i.3.3@gmail.com</a>
<a href=""mailto:j.o.ywi.l.li3.3@gmail.com"">j.o.ywi.l.li3.3@gmail.com</a>
<a href=""mailto:joy.w.i.l.li.3.3@gmail.com"">joy.w.i.l.li.3.3@gmail.com</a>
<a href=""mailto:j.oywi.l.li.33@gmail.com"">j.oywi.l.li.33@gmail.com</a>
<a href=""mailto:j.o.ywill.i.33@gmail.com"">j.o.ywill.i.33@gmail.com</a>
<a href=""mailto:joy.w.i.ll.i33@gmail.com"">joy.w.i.ll.i33@gmail.com</a>
<a href=""mailto:drandrewgoodman@caramail.com"">drandrewgoodman@caramail.com</a>
<a href=""mailto:westernunion22291@yahoo.com"">westernunion22291@yahoo.com</a>
<a href=""mailto:yenisbsus@gmail.com"">yenisbsus@gmail.com</a>
<a href=""mailto:ye.ni.s.b.s.u.s@gmail.com"">ye.ni.s.b.s.u.s@gmail.com</a>
<a href=""mailto:yen.isbsu.s@gmail.com"">yen.isbsu.s@gmail.com</a>
<a href=""mailto:y.enis.bs.us@gmail.com"">y.enis.bs.us@gmail.com</a>
<a href=""mailto:y.e.nis.bsu.s@gmail.com"">y.e.nis.bsu.s@gmail.com</a>
<a href=""mailto:ye.n.i.s.b.su.s@gmail.com"">ye.n.i.s.b.su.s@gmail.com</a>
<a href=""mailto:ye.n.isbsus@gmail.com"">ye.n.isbsus@gmail.com</a>
<a href=""mailto:y.en.i.sbsus@gmail.com"">y.en.i.sbsus@gmail.com</a>
<a href=""mailto:ye.n.is.bsu.s@gmail.com"">ye.n.is.bsu.s@gmail.com</a>
<a href=""mailto:ye.n.isbs.us@gmail.com"">ye.n.isbs.us@gmail.com</a>
<a href=""mailto:y.en.i.s.bsu.s@gmail.com"">y.en.i.s.bsu.s@gmail.com</a>
<a href=""mailto:y.e.n.i.sbs.us@gmail.com"">y.e.n.i.sbs.us@gmail.com</a>
<a href=""mailto:ye.ni.sb.sus@gmail.com"">ye.ni.sb.sus@gmail.com</a>
<a href=""mailto:yeni.s.b.s.u.s@gmail.com"">yeni.s.b.s.u.s@gmail.com</a>
<a href=""mailto:yenisb.sus@gmail.com"">yenisb.sus@gmail.com</a>
<a href=""mailto:ye.nis.bsu.s@gmail.com"">ye.nis.bsu.s@gmail.com</a>
<a href=""mailto:ye.nisb.sus@gmail.com"">ye.nisb.sus@gmail.com</a>
<a href=""mailto:ye.nis.bs.u.s@gmail.com"">ye.nis.bs.u.s@gmail.com</a>
<a href=""mailto:ye.n.isbsu.s@gmail.com"">ye.n.isbsu.s@gmail.com</a>
<a href=""mailto:y.e.n.i.s.b.sus@gmail.com"">y.e.n.i.s.b.sus@gmail.com</a>
<a href=""mailto:y.enisb.su.s@gmail.com"">y.enisb.su.s@gmail.com</a>
<a href=""mailto:y.enisbs.us@gmail.com"">y.enisbs.us@gmail.com</a>
<a href=""mailto:ye.ni.sb.su.s@gmail.com"">ye.ni.sb.su.s@gmail.com</a>
<a href=""mailto:yenis.bsus@gmail.com"">yenis.bsus@gmail.com</a>
<a href=""mailto:yeni.sbsus@gmail.com"">yeni.sbsus@gmail.com</a>
<a href=""mailto:yen.i.sb.s.us@gmail.com"">yen.i.sb.s.us@gmail.com</a>
<a href=""mailto:y.e.ni.s.bs.u.s@gmail.com"">y.e.ni.s.bs.u.s@gmail.com</a>
<a href=""mailto:y.e.n.i.sb.sus@gmail.com"">y.e.n.i.sb.sus@gmail.com</a>
<a href=""mailto:ye.ni.sb.s.us@gmail.com"">ye.ni.sb.s.us@gmail.com</a>
<a href=""mailto:y.e.n.i.sbsu.s@gmail.com"">y.e.n.i.sbsu.s@gmail.com</a>
<a href=""mailto:y.e.ni.s.bs.us@gmail.com"">y.e.ni.s.bs.us@gmail.com</a>
<a href=""mailto:y.en.i.s.b.sus@gmail.com"">y.en.i.s.b.sus@gmail.com</a>
<a href=""mailto:y.e.n.isb.sus@gmail.com"">y.e.n.isb.sus@gmail.com</a>
<a href=""mailto:ye.ni.s.b.sus@gmail.com"">ye.ni.s.b.sus@gmail.com</a>
<a href=""mailto:y.enis.b.su.s@gmail.com"">y.enis.b.su.s@gmail.com</a>
<a href=""mailto:ye.n.i.sb.s.us@gmail.com"">ye.n.i.sb.s.us@gmail.com</a>
<a href=""mailto:ye.n.is.b.su.s@gmail.com"">ye.n.is.b.su.s@gmail.com</a>
<a href=""mailto:yeni.sbs.u.s@gmail.com"">yeni.sbs.u.s@gmail.com</a>
<a href=""mailto:yen.i.s.bsus@gmail.com"">yen.i.s.bsus@gmail.com</a>
<a href=""mailto:y.en.i.sbsu.s@gmail.com"">y.en.i.sbsu.s@gmail.com</a>
<a href=""mailto:y.en.i.s.bs.u.s@gmail.com"">y.en.i.s.bs.u.s@gmail.com</a>
<a href=""mailto:y.e.ni.sb.s.u.s@gmail.com"">y.e.ni.sb.s.u.s@gmail.com</a>
<a href=""mailto:ye.ni.s.b.su.s@gmail.com"">ye.ni.s.b.su.s@gmail.com</a>
<a href=""mailto:y.e.n.is.bsus@gmail.com"">y.e.n.is.bsus@gmail.com</a>
<a href=""mailto:y.en.is.bs.us@gmail.com"">y.en.is.bs.us@gmail.com</a>
<a href=""mailto:y.e.n.is.b.su.s@gmail.com"">y.e.n.is.b.su.s@gmail.com</a>
<a href=""mailto:yenis.bsu.s@gmail.com"">yenis.bsu.s@gmail.com</a>
<a href=""mailto:y.e.n.isbs.us@gmail.com"">y.e.n.isbs.us@gmail.com</a>
<a href=""mailto:ye.nis.bs.us@gmail.com"">ye.nis.bs.us@gmail.com</a>
<a href=""mailto:y.e.n.isbs.u.s@gmail.com"">y.e.n.isbs.u.s@gmail.com</a>
<a href=""mailto:y.eni.s.bsus@gmail.com"">y.eni.s.bsus@gmail.com</a>
<a href=""mailto:yen.i.sb.su.s@gmail.com"">yen.i.sb.su.s@gmail.com</a>
<a href=""mailto:y.eni.sbsu.s@gmail.com"">y.eni.sbsu.s@gmail.com</a>
<a href=""mailto:y.enis.bs.u.s@gmail.com"">y.enis.bs.u.s@gmail.com</a>
<a href=""mailto:y.e.n.isbsus@gmail.com"">y.e.n.isbsus@gmail.com</a>
<a href=""mailto:y.e.n.i.s.b.s.us@gmail.com"">y.e.n.i.s.b.s.us@gmail.com</a>
<a href=""mailto:y.en.i.s.b.su.s@gmail.com"">y.en.i.s.b.su.s@gmail.com</a>
<a href=""mailto:y.e.n.i.sb.s.u.s@gmail.com"">y.e.n.i.sb.s.u.s@gmail.com</a>
<a href=""mailto:y.enisbsu.s@gmail.com"">y.enisbsu.s@gmail.com</a>
<a href=""mailto:y.en.i.sb.s.us@gmail.com"">y.en.i.sb.s.us@gmail.com</a>
<a href=""mailto:y.enisbs.u.s@gmail.com"">y.enisbs.u.s@gmail.com</a>
<a href=""mailto:y.e.ni.s.bsu.s@gmail.com"">y.e.ni.s.bsu.s@gmail.com</a>
<a href=""mailto:ye.n.i.sb.s.u.s@gmail.com"">ye.n.i.sb.s.u.s@gmail.com</a>
<a href=""mailto:yen.i.sb.sus@gmail.com"">yen.i.sb.sus@gmail.com</a>
<a href=""mailto:yen.isb.s.us@gmail.com"">yen.isb.s.us@gmail.com</a>
<a href=""mailto:y.e.n.i.s.bsus@gmail.com"">y.e.n.i.s.bsus@gmail.com</a>
<a href=""mailto:y.e.nisbsu.s@gmail.com"">y.e.nisbsu.s@gmail.com</a>
<a href=""mailto:yen.is.b.s.u.s@gmail.com"">yen.is.b.s.u.s@gmail.com</a>
<a href=""mailto:y.e.nisbs.u.s@gmail.com"">y.e.nisbs.u.s@gmail.com</a>
<a href=""mailto:yeni.s.b.su.s@gmail.com"">yeni.s.b.su.s@gmail.com</a>
<a href=""mailto:ye.n.is.bsus@gmail.com"">ye.n.is.bsus@gmail.com</a>
<a href=""mailto:ye.n.i.s.bs.u.s@gmail.com"">ye.n.i.s.bs.u.s@gmail.com</a>
<a href=""mailto:y.e.ni.s.b.su.s@gmail.com"">y.e.ni.s.b.su.s@gmail.com</a>
<a href=""mailto:y.e.ni.sbsu.s@gmail.com"">y.e.ni.sbsu.s@gmail.com</a>
<a href=""mailto:y.e.n.i.s.b.s.u.s@gmail.com"">y.e.n.i.s.b.s.u.s@gmail.com</a>
<a href=""mailto:yen.i.s.b.su.s@gmail.com"">yen.i.s.b.su.s@gmail.com</a>
<a href=""mailto:yeni.s.bsus@gmail.com"">yeni.s.bsus@gmail.com</a>
<a href=""mailto:y.e.nis.b.s.u.s@gmail.com"">y.e.nis.b.s.u.s@gmail.com</a>
<a href=""mailto:yenisb.su.s@gmail.com"">yenisb.su.s@gmail.com</a>
<a href=""mailto:yenisb.s.u.s@gmail.com"">yenisb.s.u.s@gmail.com</a>
<a href=""mailto:yen.isbs.us@gmail.com"">yen.isbs.us@gmail.com</a>
<a href=""mailto:y.e.n.isb.s.u.s@gmail.com"">y.e.n.isb.s.u.s@gmail.com</a>
<a href=""mailto:yen.is.b.sus@gmail.com"">yen.is.b.sus@gmail.com</a>
<a href=""mailto:y.enisb.s.us@gmail.com"">y.enisb.s.us@gmail.com</a>
<a href=""mailto:y.e.n.is.bs.us@gmail.com"">y.e.n.is.bs.us@gmail.com</a>
<a href=""mailto:yen.is.b.su.s@gmail.com"">yen.is.b.su.s@gmail.com</a>
<a href=""mailto:yen.isb.sus@gmail.com"">yen.isb.sus@gmail.com</a>
<a href=""mailto:y.e.ni.sbsus@gmail.com"">y.e.ni.sbsus@gmail.com</a>
<a href=""mailto:y.e.ni.sbs.u.s@gmail.com"">y.e.ni.sbs.u.s@gmail.com</a>
<a href=""mailto:ye.ni.sbsus@gmail.com"">ye.ni.sbsus@gmail.com</a>
<a href=""mailto:ye.n.isb.s.us@gmail.com"">ye.n.isb.s.us@gmail.com</a>
<a href=""mailto:y.e.ni.s.b.s.us@gmail.com"">y.e.ni.s.b.s.us@gmail.com</a>
<a href=""mailto:yeni.sbsu.s@gmail.com"">yeni.sbsu.s@gmail.com</a>
<a href=""mailto:y.e.nis.b.s.us@gmail.com"">y.e.nis.b.s.us@gmail.com</a>
<a href=""mailto:yen.i.s.b.s.u.s@gmail.com"">yen.i.s.b.s.u.s@gmail.com</a>
<a href=""mailto:y.en.is.b.s.u.s@gmail.com"">y.en.is.b.s.u.s@gmail.com</a>
<a href=""mailto:y.e.ni.sb.s.us@gmail.com"">y.e.ni.sb.s.us@gmail.com</a>
<a href=""mailto:yen.i.s.b.s.us@gmail.com"">yen.i.s.b.s.us@gmail.com</a>
<a href=""mailto:ye.ni.s.bsu.s@gmail.com"">ye.ni.s.bsu.s@gmail.com</a>
<a href=""mailto:y.eni.sb.s.u.s@gmail.com"">y.eni.sb.s.u.s@gmail.com</a>
<a href=""mailto:y.enis.b.s.us@gmail.com"">y.enis.b.s.us@gmail.com</a>
<a href=""mailto:ye.nisb.s.us@gmail.com"">ye.nisb.s.us@gmail.com</a>
<a href=""mailto:yeni.sb.s.us@gmail.com"">yeni.sb.s.us@gmail.com</a>
<a href=""mailto:ye.n.is.b.sus@gmail.com"">ye.n.is.b.sus@gmail.com</a>
<a href=""mailto:ye.nis.b.s.us@gmail.com"">ye.nis.b.s.us@gmail.com</a>
<a href=""mailto:yen.i.s.bsu.s@gmail.com"">yen.i.s.bsu.s@gmail.com</a>
<a href=""mailto:ye.n.isb.s.u.s@gmail.com"">ye.n.isb.s.u.s@gmail.com</a>
<a href=""mailto:y.en.i.s.b.s.us@gmail.com"">y.en.i.s.b.s.us@gmail.com</a>
<a href=""mailto:y.eni.s.b.s.u.s@gmail.com"">y.eni.s.b.s.u.s@gmail.com</a>
<a href=""mailto:y.en.isb.su.s@gmail.com"">y.en.isb.su.s@gmail.com</a>
<a href=""mailto:ye.n.i.sbs.us@gmail.com"">ye.n.i.sbs.us@gmail.com</a>
<a href=""mailto:y.e.n.i.sb.s.us@gmail.com"">y.e.n.i.sb.s.us@gmail.com</a>
<a href=""mailto:y.enis.b.sus@gmail.com"">y.enis.b.sus@gmail.com</a>
<a href=""mailto:yenisbs.us@gmail.com"">yenisbs.us@gmail.com</a>
<a href=""mailto:y.eni.sb.sus@gmail.com"">y.eni.sb.sus@gmail.com</a>
<a href=""mailto:y.en.is.b.sus@gmail.com"">y.en.is.b.sus@gmail.com</a>
<a href=""mailto:y.enis.bsus@gmail.com"">y.enis.bsus@gmail.com</a>
<a href=""mailto:y.eni.sb.su.s@gmail.com"">y.eni.sb.su.s@gmail.com</a>
<a href=""mailto:ye.ni.sbs.us@gmail.com"">ye.ni.sbs.us@gmail.com</a>
<a href=""mailto:y.enisbsus@gmail.com"">y.enisbsus@gmail.com</a>
<a href=""mailto:ye.n.i.s.bsus@gmail.com"">ye.n.i.s.bsus@gmail.com</a>
<a href=""mailto:yeni.s.bsu.s@gmail.com"">yeni.s.bsu.s@gmail.com</a>
<a href=""mailto:yen.is.bsu.s@gmail.com"">yen.is.bsu.s@gmail.com</a>
<a href=""mailto:yen.is.bsus@gmail.com"">yen.is.bsus@gmail.com</a>
<a href=""mailto:y.en.isbsu.s@gmail.com"">y.en.isbsu.s@gmail.com</a>
<a href=""mailto:ye.n.i.s.b.s.us@gmail.com"">ye.n.i.s.b.s.us@gmail.com</a>
<a href=""mailto:y.e.ni.s.bsus@gmail.com"">y.e.ni.s.bsus@gmail.com</a>
<a href=""mailto:ye.ni.s.bs.us@gmail.com"">ye.ni.s.bs.us@gmail.com</a>
<a href=""mailto:ye.n.isb.sus@gmail.com"">ye.n.isb.sus@gmail.com</a>
<a href=""mailto:yen.isb.su.s@gmail.com"">yen.isb.su.s@gmail.com</a>
<a href=""mailto:yen.is.b.s.us@gmail.com"">yen.is.b.s.us@gmail.com</a>
<a href=""mailto:y.e.ni.sb.su.s@gmail.com"">y.e.ni.sb.su.s@gmail.com</a>
<a href=""mailto:y.en.i.s.bsus@gmail.com"">y.en.i.s.bsus@gmail.com</a>
<a href=""mailto:yen.i.s.bs.us@gmail.com"">yen.i.s.bs.us@gmail.com</a>
<a href=""mailto:y.e.ni.s.b.sus@gmail.com"">y.e.ni.s.b.sus@gmail.com</a>
<a href=""mailto:y.e.n.is.b.s.u.s@gmail.com"">y.e.n.is.b.s.u.s@gmail.com</a>
<a href=""mailto:yenis.b.su.s@gmail.com"">yenis.b.su.s@gmail.com</a>
<a href=""mailto:ye.nisbs.u.s@gmail.com"">ye.nisbs.u.s@gmail.com</a>
<a href=""mailto:yeni.sb.sus@gmail.com"">yeni.sb.sus@gmail.com</a>
<a href=""mailto:y.en.isbs.u.s@gmail.com"">y.en.isbs.u.s@gmail.com</a>
<a href=""mailto:y.enis.bsu.s@gmail.com"">y.enis.bsu.s@gmail.com</a>
<a href=""mailto:y.e.nisb.s.u.s@gmail.com"">y.e.nisb.s.u.s@gmail.com</a>
<a href=""mailto:y.e.nis.bs.us@gmail.com"">y.e.nis.bs.us@gmail.com</a>
<a href=""mailto:yeni.sb.su.s@gmail.com"">yeni.sb.su.s@gmail.com</a>
<a href=""mailto:yen.isbs.u.s@gmail.com"">yen.isbs.u.s@gmail.com</a>
<a href=""mailto:yen.is.bs.us@gmail.com"">yen.is.bs.us@gmail.com</a>
<a href=""mailto:yen.i.s.b.sus@gmail.com"">yen.i.s.b.sus@gmail.com</a>
<a href=""mailto:ye.n.i.sb.sus@gmail.com"">ye.n.i.sb.sus@gmail.com</a>
<a href=""mailto:y.en.is.b.s.us@gmail.com"">y.en.is.b.s.us@gmail.com</a>
<a href=""mailto:y.en.is.bs.u.s@gmail.com"">y.en.is.bs.u.s@gmail.com</a>
<a href=""mailto:y.e.n.i.s.b.su.s@gmail.com"">y.e.n.i.s.b.su.s@gmail.com</a>
<a href=""mailto:y.e.nisbsus@gmail.com"">y.e.nisbsus@gmail.com</a>
<a href=""mailto:y.eni.sbsus@gmail.com"">y.eni.sbsus@gmail.com</a>
<a href=""mailto:yeni.sb.s.u.s@gmail.com"">yeni.sb.s.u.s@gmail.com</a>
<a href=""mailto:y.e.ni.s.b.s.u.s@gmail.com"">y.e.ni.s.b.s.u.s@gmail.com</a>
<a href=""mailto:y.e.n.i.sbsus@gmail.com"">y.e.n.i.sbsus@gmail.com</a>
<a href=""mailto:y.e.n.i.s.bs.u.s@gmail.com"">y.e.n.i.s.bs.u.s@gmail.com</a>
<a href=""mailto:ye.n.i.s.b.sus@gmail.com"">ye.n.i.s.b.sus@gmail.com</a>
<a href=""mailto:ye.ni.sb.s.u.s@gmail.com"">ye.ni.sb.s.u.s@gmail.com</a>
<a href=""mailto:y.en.i.sbs.us@gmail.com"">y.en.i.sbs.us@gmail.com</a>
<a href=""mailto:ye.nis.b.su.s@gmail.com"">ye.nis.b.su.s@gmail.com</a>
<a href=""mailto:yen.i.sb.s.u.s@gmail.com"">yen.i.sb.s.u.s@gmail.com</a>
<a href=""mailto:y.eni.s.b.s.us@gmail.com"">y.eni.s.b.s.us@gmail.com</a>
<a href=""mailto:yen.i.sbs.u.s@gmail.com"">yen.i.sbs.u.s@gmail.com</a>
<a href=""mailto:yenisbsus@gmail.com"">yenisbsus@gmail.com</a>
<a href=""mailto:ye.n.isb.su.s@gmail.com"">ye.n.isb.su.s@gmail.com</a>
<a href=""mailto:y.e.n.is.b.sus@gmail.com"">y.e.n.is.b.sus@gmail.com</a>
<a href=""mailto:y.e.nisb.s.us@gmail.com"">y.e.nisb.s.us@gmail.com</a>
<a href=""mailto:yen.i.sbs.us@gmail.com"">yen.i.sbs.us@gmail.com</a>
<a href=""mailto:y.eni.sbs.us@gmail.com"">y.eni.sbs.us@gmail.com</a>
<a href=""mailto:y.en.isbs.us@gmail.com"">y.en.isbs.us@gmail.com</a>
<a href=""mailto:y.e.n.i.s.bs.us@gmail.com"">y.e.n.i.s.bs.us@gmail.com</a>
<a href=""mailto:yen.i.sbsus@gmail.com"">yen.i.sbsus@gmail.com</a>
<a href=""mailto:ye.n.is.bs.us@gmail.com"">ye.n.is.bs.us@gmail.com</a>
<a href=""mailto:y.e.n.i.sb.su.s@gmail.com"">y.e.n.i.sb.su.s@gmail.com</a>
<a href=""mailto:y.en.isb.sus@gmail.com"">y.en.isb.sus@gmail.com</a>
<a href=""mailto:y.e.n.i.s.bsu.s@gmail.com"">y.e.n.i.s.bsu.s@gmail.com</a>
<a href=""mailto:ye.nisbs.us@gmail.com"">ye.nisbs.us@gmail.com</a>
<a href=""mailto:yen.isbsus@gmail.com"">yen.isbsus@gmail.com</a>
<a href=""mailto:yen.is.bs.u.s@gmail.com"">yen.is.bs.u.s@gmail.com</a>
<a href=""mailto:y.eni.sb.s.us@gmail.com"">y.eni.sb.s.us@gmail.com</a>
<a href=""mailto:y.e.nis.bsus@gmail.com"">y.e.nis.bsus@gmail.com</a>
<a href=""mailto:ye.nis.bsus@gmail.com"">ye.nis.bsus@gmail.com</a>
<a href=""mailto:y.eni.s.bs.us@gmail.com"">y.eni.s.bs.us@gmail.com</a>
<a href=""mailto:yeni.s.b.sus@gmail.com"">yeni.s.b.sus@gmail.com</a>
<a href=""mailto:yenis.b.s.us@gmail.com"">yenis.b.s.us@gmail.com</a>
<a href=""mailto:y.enisb.sus@gmail.com"">y.enisb.sus@gmail.com</a>
<a href=""mailto:ye.n.i.sbsus@gmail.com"">ye.n.i.sbsus@gmail.com</a>
<a href=""mailto:yeni.s.bs.us@gmail.com"">yeni.s.bs.us@gmail.com</a>
<a href=""mailto:y.en.isbsus@gmail.com"">y.en.isbsus@gmail.com</a>
<a href=""mailto:ye.n.i.s.bs.us@gmail.com"">ye.n.i.s.bs.us@gmail.com</a>
<a href=""mailto:yen.i.sbsu.s@gmail.com"">yen.i.sbsu.s@gmail.com</a>
<a href=""mailto:y.e.n.isb.s.us@gmail.com"">y.e.n.isb.s.us@gmail.com</a>
<a href=""mailto:y.en.is.b.su.s@gmail.com"">y.en.is.b.su.s@gmail.com</a>
<a href=""mailto:y.e.nis.bs.u.s@gmail.com"">y.e.nis.bs.u.s@gmail.com</a>
<a href=""mailto:yenis.bs.us@gmail.com"">yenis.bs.us@gmail.com</a>
<a href=""mailto:ye.ni.s.bs.u.s@gmail.com"">ye.ni.s.bs.u.s@gmail.com</a>
<a href=""mailto:y.en.isb.s.us@gmail.com"">y.en.isb.s.us@gmail.com</a>
<a href=""mailto:y.e.nisbs.us@gmail.com"">y.e.nisbs.us@gmail.com</a>
<a href=""mailto:ye.n.is.bs.u.s@gmail.com"">ye.n.is.bs.u.s@gmail.com</a>
<a href=""mailto:ye.nisbsu.s@gmail.com"">ye.nisbsu.s@gmail.com</a>
<a href=""mailto:elizabethala1945@gmail.com"">elizabethala1945@gmail.com</a>
<a href=""mailto:e.l.izab.eth.al.a.1945@gmail.com"">e.l.izab.eth.al.a.1945@gmail.com</a>
<a href=""mailto:eli.z.abet.hal.a.194.5@gmail.com"">eli.z.abet.hal.a.194.5@gmail.com</a>
<a href=""mailto:elizab.et.ha.la1945@gmail.com"">elizab.et.ha.la1945@gmail.com</a>
<a href=""mailto:eliz.a.bet.ha.la194.5@gmail.com"">eliz.a.bet.ha.la194.5@gmail.com</a>
<a href=""mailto:eliza.be.th.a.l.a.19.45@gmail.com"">eliza.be.th.a.l.a.19.45@gmail.com</a>
<a href=""mailto:e.li.z.abe.t.h.al.a.1.9.45@gmail.com"">e.li.z.abe.t.h.al.a.1.9.45@gmail.com</a>
<a href=""mailto:eli.zabet.h.a.l.a.19.4.5@gmail.com"">eli.zabet.h.a.l.a.19.4.5@gmail.com</a>
<a href=""mailto:e.liz.ab.etha.l.a1945@gmail.com"">e.liz.ab.etha.l.a1945@gmail.com</a>
<a href=""mailto:eli.za.b.e.tha.la19.45@gmail.com"">eli.za.b.e.tha.la19.45@gmail.com</a>
<a href=""mailto:e.l.iz.a.beth.a.l.a.1.9.45@gmail.com"">e.l.iz.a.beth.a.l.a.1.9.45@gmail.com</a>
<a href=""mailto:e.l.iz.a.be.t.ha.l.a.19.45@gmail.com"">e.l.iz.a.be.t.ha.l.a.19.45@gmail.com</a>
<a href=""mailto:el.izab.et.hala.1.9.4.5@gmail.com"">el.izab.et.hala.1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.zabet.hal.a19.4.5@gmail.com"">e.l.i.zabet.hal.a19.4.5@gmail.com</a>
<a href=""mailto:e.li.za.beth.ala19.45@gmail.com"">e.li.za.beth.ala19.45@gmail.com</a>
<a href=""mailto:e.l.iz.a.b.et.hala1.94.5@gmail.com"">e.l.iz.a.b.et.hala1.94.5@gmail.com</a>
<a href=""mailto:e.li.za.b.ethal.a19.45@gmail.com"">e.li.za.b.ethal.a19.45@gmail.com</a>
<a href=""mailto:el.i.za.b.e.tha.la.1.945@gmail.com"">el.i.za.b.e.tha.la.1.945@gmail.com</a>
<a href=""mailto:e.l.iza.b.e.th.a.l.a.194.5@gmail.com"">e.l.iza.b.e.th.a.l.a.194.5@gmail.com</a>
<a href=""mailto:e.l.iza.b.e.t.hala.1.945@gmail.com"">e.l.iza.b.e.t.hala.1.945@gmail.com</a>
<a href=""mailto:e.liz.abet.hala1.94.5@gmail.com"">e.liz.abet.hala1.94.5@gmail.com</a>
<a href=""mailto:eli.z.abet.h.a.la1.9.4.5@gmail.com"">eli.z.abet.h.a.la1.9.4.5@gmail.com</a>
<a href=""mailto:eliz.ab.e.th.ala1945@gmail.com"">eliz.ab.e.th.ala1945@gmail.com</a>
<a href=""mailto:e.l.i.z.abe.th.a.l.a.1945@gmail.com"">e.l.i.z.abe.th.a.l.a.1945@gmail.com</a>
<a href=""mailto:eli.zab.et.ha.la.194.5@gmail.com"">eli.zab.et.ha.la.194.5@gmail.com</a>
<a href=""mailto:e.l.iza.b.e.thal.a.1945@gmail.com"">e.l.iza.b.e.thal.a.1945@gmail.com</a>
<a href=""mailto:e.lizab.e.tha.la.1945@gmail.com"">e.lizab.e.tha.la.1945@gmail.com</a>
<a href=""mailto:eli.zabe.t.h.ala.19.4.5@gmail.com"">eli.zabe.t.h.ala.19.4.5@gmail.com</a>
<a href=""mailto:eli.z.abe.t.hala.19.4.5@gmail.com"">eli.z.abe.t.hala.19.4.5@gmail.com</a>
<a href=""mailto:eli.z.ab.etha.la.1945@gmail.com"">eli.z.ab.etha.la.1945@gmail.com</a>
<a href=""mailto:el.i.zabet.h.a.la1.94.5@gmail.com"">el.i.zabet.h.a.la1.94.5@gmail.com</a>
<a href=""mailto:e.li.z.a.be.t.h.al.a.1.9.4.5@gmail.com"">e.li.z.a.be.t.h.al.a.1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.zabe.t.h.al.a1.9.4.5@gmail.com"">e.l.i.zabe.t.h.al.a1.9.4.5@gmail.com</a>
<a href=""mailto:eli.za.bet.ha.la.1.94.5@gmail.com"">eli.za.bet.ha.la.1.94.5@gmail.com</a>
<a href=""mailto:e.li.z.abe.t.h.ala.194.5@gmail.com"">e.li.z.abe.t.h.ala.194.5@gmail.com</a>
<a href=""mailto:eliz.a.b.e.t.h.al.a.1.9.45@gmail.com"">eliz.a.b.e.t.h.al.a.1.9.45@gmail.com</a>
<a href=""mailto:e.li.za.be.th.a.l.a.1.94.5@gmail.com"">e.li.za.be.th.a.l.a.1.94.5@gmail.com</a>
<a href=""mailto:e.l.i.z.ab.et.h.a.l.a.194.5@gmail.com"">e.l.i.z.ab.et.h.a.l.a.194.5@gmail.com</a>
<a href=""mailto:el.iza.b.e.tha.la.1.9.4.5@gmail.com"">el.iza.b.e.tha.la.1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.z.abe.tha.la.1945@gmail.com"">e.l.i.z.abe.tha.la.1945@gmail.com</a>
<a href=""mailto:eliz.abethal.a.194.5@gmail.com"">eliz.abethal.a.194.5@gmail.com</a>
<a href=""mailto:e.l.izabe.t.h.al.a.19.45@gmail.com"">e.l.izabe.t.h.al.a.19.45@gmail.com</a>
<a href=""mailto:el.iz.a.be.t.hala.19.45@gmail.com"">el.iz.a.be.t.hala.19.45@gmail.com</a>
<a href=""mailto:e.lizab.e.t.h.ala1.9.45@gmail.com"">e.lizab.e.t.h.ala1.9.45@gmail.com</a>
<a href=""mailto:e.l.izabe.t.h.a.la19.4.5@gmail.com"">e.l.izabe.t.h.a.la19.4.5@gmail.com</a>
<a href=""mailto:e.liz.abeth.a.la1.9.4.5@gmail.com"">e.liz.abeth.a.la1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.iz.ab.et.h.a.l.a.19.4.5@gmail.com"">e.l.iz.ab.et.h.a.l.a.19.4.5@gmail.com</a>
<a href=""mailto:eli.z.abet.hala1.9.4.5@gmail.com"">eli.z.abet.hala1.9.4.5@gmail.com</a>
<a href=""mailto:e.li.zab.etha.la1.94.5@gmail.com"">e.li.zab.etha.la1.94.5@gmail.com</a>
<a href=""mailto:e.li.z.a.b.e.t.h.a.la.19.45@gmail.com"">e.li.z.a.b.e.t.h.a.la.19.45@gmail.com</a>
<a href=""mailto:e.lizab.ethal.a1.945@gmail.com"">e.lizab.ethal.a1.945@gmail.com</a>
<a href=""mailto:e.l.i.z.a.be.t.ha.la19.4.5@gmail.com"">e.l.i.z.a.be.t.ha.la19.4.5@gmail.com</a>
<a href=""mailto:el.iza.be.th.al.a.19.4.5@gmail.com"">el.iza.be.th.al.a.19.4.5@gmail.com</a>
<a href=""mailto:e.l.i.z.a.beth.ala1.9.45@gmail.com"">e.l.i.z.a.beth.ala1.9.45@gmail.com</a>
<a href=""mailto:e.li.z.ab.e.t.h.a.la.1.9.45@gmail.com"">e.li.z.ab.e.t.h.a.la.1.9.45@gmail.com</a>
<a href=""mailto:el.i.za.b.e.th.ala194.5@gmail.com"">el.i.za.b.e.th.ala194.5@gmail.com</a>
<a href=""mailto:e.liz.abe.t.ha.l.a.1.945@gmail.com"">e.liz.abe.t.ha.l.a.1.945@gmail.com</a>
<a href=""mailto:el.iz.ab.e.t.hala1.945@gmail.com"">el.iz.ab.e.t.hala1.945@gmail.com</a>
<a href=""mailto:e.l.i.za.b.e.t.ha.l.a194.5@gmail.com"">e.l.i.za.b.e.t.ha.l.a194.5@gmail.com</a>
<a href=""mailto:eli.zab.et.ha.l.a1945@gmail.com"">eli.zab.et.ha.l.a1945@gmail.com</a>
<a href=""mailto:eli.z.a.bet.hal.a194.5@gmail.com"">eli.z.a.bet.hal.a194.5@gmail.com</a>
<a href=""mailto:e.l.iza.b.et.h.a.la.194.5@gmail.com"">e.l.iza.b.et.h.a.la.194.5@gmail.com</a>
<a href=""mailto:e.l.iz.a.b.e.th.a.la19.4.5@gmail.com"">e.l.iz.a.b.e.th.a.la19.4.5@gmail.com</a>
<a href=""mailto:eli.z.a.bet.hal.a1945@gmail.com"">eli.z.a.bet.hal.a1945@gmail.com</a>
<a href=""mailto:e.l.i.z.a.b.e.t.h.a.l.a1.9.45@gmail.com"">e.l.i.z.a.b.e.t.h.a.l.a1.9.45@gmail.com</a>
<a href=""mailto:eli.zabetha.l.a.1945@gmail.com"">eli.zabetha.l.a.1945@gmail.com</a>
<a href=""mailto:el.izabe.t.h.ala1.945@gmail.com"">el.izabe.t.h.ala1.945@gmail.com</a>
<a href=""mailto:eliza.b.et.ha.la1.9.4.5@gmail.com"">eliza.b.et.ha.la1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.zabet.hala.1.94.5@gmail.com"">e.l.i.zabet.hala.1.94.5@gmail.com</a>
<a href=""mailto:e.li.za.b.e.t.hal.a19.45@gmail.com"">e.li.za.b.e.t.hal.a19.45@gmail.com</a>
<a href=""mailto:elizab.ethal.a.19.4.5@gmail.com"">elizab.ethal.a.19.4.5@gmail.com</a>
<a href=""mailto:eliza.bet.ha.l.a.1.945@gmail.com"">eliza.bet.ha.l.a.1.945@gmail.com</a>
<a href=""mailto:e.li.za.b.eth.a.la1.94.5@gmail.com"">e.li.za.b.eth.a.la1.94.5@gmail.com</a>
<a href=""mailto:el.i.zabet.h.a.la.1945@gmail.com"">el.i.zabet.h.a.la.1945@gmail.com</a>
<a href=""mailto:e.l.iz.a.b.ethala.1.9.45@gmail.com"">e.l.iz.a.b.ethala.1.9.45@gmail.com</a>
<a href=""mailto:e.l.izab.etha.l.a.1.9.45@gmail.com"">e.l.izab.etha.l.a.1.9.45@gmail.com</a>
<a href=""mailto:e.l.i.z.abethala.19.4.5@gmail.com"">e.l.i.z.abethala.19.4.5@gmail.com</a>
<a href=""mailto:e.liza.be.t.h.a.l.a.194.5@gmail.com"">e.liza.be.t.h.a.l.a.194.5@gmail.com</a>
<a href=""mailto:el.iza.be.t.h.a.la1.94.5@gmail.com"">el.iza.be.t.h.a.la1.94.5@gmail.com</a>
<a href=""mailto:e.liz.a.betha.l.a.19.45@gmail.com"">e.liz.a.betha.l.a.19.45@gmail.com</a>
<a href=""mailto:e.l.iz.a.b.e.t.hal.a1.9.4.5@gmail.com"">e.l.iz.a.b.e.t.hal.a1.9.4.5@gmail.com</a>
<a href=""mailto:e.li.zabet.h.al.a.1.9.45@gmail.com"">e.li.zabet.h.al.a.1.9.45@gmail.com</a>
<a href=""mailto:el.izabe.t.ha.l.a1.9.4.5@gmail.com"">el.izabe.t.ha.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:el.iz.ab.e.t.ha.l.a.19.45@gmail.com"">el.iz.ab.e.t.ha.l.a.19.45@gmail.com</a>
<a href=""mailto:eliza.beth.al.a19.4.5@gmail.com"">eliza.beth.al.a19.4.5@gmail.com</a>
<a href=""mailto:e.l.iza.b.ethala.194.5@gmail.com"">e.l.iza.b.ethala.194.5@gmail.com</a>
<a href=""mailto:e.li.zabet.ha.la1.94.5@gmail.com"">e.li.zabet.ha.la1.94.5@gmail.com</a>
<a href=""mailto:eliz.ab.et.hala1945@gmail.com"">eliz.ab.et.hala1945@gmail.com</a>
<a href=""mailto:e.liz.a.be.thala.1.9.4.5@gmail.com"">e.liz.a.be.thala.1.9.4.5@gmail.com</a>
<a href=""mailto:eli.za.be.t.ha.l.a1.945@gmail.com"">eli.za.be.t.ha.l.a1.945@gmail.com</a>
<a href=""mailto:e.li.za.be.th.a.la.1945@gmail.com"">e.li.za.be.th.a.la.1945@gmail.com</a>
<a href=""mailto:el.iz.a.beth.a.la1945@gmail.com"">el.iz.a.beth.a.la1945@gmail.com</a>
<a href=""mailto:el.izabetha.la1.94.5@gmail.com"">el.izabetha.la1.94.5@gmail.com</a>
<a href=""mailto:el.iz.a.betha.l.a.1945@gmail.com"">el.iz.a.betha.l.a.1945@gmail.com</a>
<a href=""mailto:eli.zabet.h.a.la.1.94.5@gmail.com"">eli.zabet.h.a.la.1.94.5@gmail.com</a>
<a href=""mailto:el.i.z.ab.et.hala1945@gmail.com"">el.i.z.ab.et.hala1945@gmail.com</a>
<a href=""mailto:e.li.z.abe.thal.a1.94.5@gmail.com"">e.li.z.abe.thal.a1.94.5@gmail.com</a>
<a href=""mailto:el.iza.b.e.thala1.94.5@gmail.com"">el.iza.b.e.thala1.94.5@gmail.com</a>
<a href=""mailto:e.l.i.z.ab.eth.ala1945@gmail.com"">e.l.i.z.ab.eth.ala1945@gmail.com</a>
<a href=""mailto:el.iz.a.b.e.thal.a.1.945@gmail.com"">el.iz.a.b.e.thal.a.1.945@gmail.com</a>
<a href=""mailto:el.iza.b.e.thal.a1.94.5@gmail.com"">el.iza.b.e.thal.a1.94.5@gmail.com</a>
<a href=""mailto:el.iz.a.b.et.h.al.a.1.9.4.5@gmail.com"">el.iz.a.b.et.h.al.a.1.9.4.5@gmail.com</a>
<a href=""mailto:eli.za.b.et.ha.la19.45@gmail.com"">eli.za.b.et.ha.la19.45@gmail.com</a>
<a href=""mailto:el.i.zabe.th.al.a.19.4.5@gmail.com"">el.i.zabe.th.al.a.19.4.5@gmail.com</a>
<a href=""mailto:e.li.za.be.t.h.a.la194.5@gmail.com"">e.li.za.be.t.h.a.la194.5@gmail.com</a>
<a href=""mailto:el.i.z.a.bet.ha.l.a194.5@gmail.com"">el.i.z.a.bet.ha.l.a194.5@gmail.com</a>
<a href=""mailto:el.iz.a.be.t.ha.la19.4.5@gmail.com"">el.iz.a.be.t.ha.la19.4.5@gmail.com</a>
<a href=""mailto:eli.zabet.h.a.la1.945@gmail.com"">eli.zabet.h.a.la1.945@gmail.com</a>
<a href=""mailto:eli.za.betha.l.a.1.945@gmail.com"">eli.za.betha.l.a.1.945@gmail.com</a>
<a href=""mailto:el.iza.b.et.h.a.la19.45@gmail.com"">el.iza.b.et.h.a.la19.45@gmail.com</a>
<a href=""mailto:e.l.iz.ab.e.th.a.l.a.1945@gmail.com"">e.l.iz.ab.e.th.a.l.a.1945@gmail.com</a>
<a href=""mailto:e.liz.abet.h.a.l.a.19.45@gmail.com"">e.liz.abet.h.a.l.a.19.45@gmail.com</a>
<a href=""mailto:eli.za.b.e.t.ha.la.1.9.45@gmail.com"">eli.za.b.e.t.ha.la.1.9.45@gmail.com</a>
<a href=""mailto:el.iz.abe.t.hal.a1.945@gmail.com"">el.iz.abe.t.hal.a1.945@gmail.com</a>
<a href=""mailto:elizabet.ha.la1945@gmail.com"">elizabet.ha.la1945@gmail.com</a>
<a href=""mailto:e.l.i.zabeth.a.l.a.194.5@gmail.com"">e.l.i.zabeth.a.l.a.194.5@gmail.com</a>
<a href=""mailto:e.li.zab.etha.l.a.1.94.5@gmail.com"">e.li.zab.etha.l.a.1.94.5@gmail.com</a>
<a href=""mailto:e.li.z.abet.h.a.la19.4.5@gmail.com"">e.li.z.abet.h.a.la19.4.5@gmail.com</a>
<a href=""mailto:eli.za.betha.l.a194.5@gmail.com"">eli.za.betha.l.a194.5@gmail.com</a>
<a href=""mailto:e.li.za.b.et.hal.a19.45@gmail.com"">e.li.za.b.et.hal.a19.45@gmail.com</a>
<a href=""mailto:eliz.ab.et.h.a.la1.945@gmail.com"">eliz.ab.et.h.a.la1.945@gmail.com</a>
<a href=""mailto:e.l.izabet.h.ala.1.945@gmail.com"">e.l.izabet.h.ala.1.945@gmail.com</a>
<a href=""mailto:e.l.iz.ab.et.h.al.a1.94.5@gmail.com"">e.l.iz.ab.et.h.al.a1.94.5@gmail.com</a>
<a href=""mailto:e.l.iz.ab.e.th.a.la1.94.5@gmail.com"">e.l.iz.ab.e.th.a.la1.94.5@gmail.com</a>
<a href=""mailto:elizab.e.t.h.a.la194.5@gmail.com"">elizab.e.t.h.a.la194.5@gmail.com</a>
<a href=""mailto:elizab.e.thal.a1945@gmail.com"">elizab.e.thal.a1945@gmail.com</a>
<a href=""mailto:e.l.i.za.be.t.h.a.la1.94.5@gmail.com"">e.l.i.za.be.t.h.a.la1.94.5@gmail.com</a>
<a href=""mailto:e.l.iza.be.t.h.al.a19.45@gmail.com"">e.l.iza.be.t.h.al.a19.45@gmail.com</a>
<a href=""mailto:el.i.za.be.t.hala.1.94.5@gmail.com"">el.i.za.be.t.hala.1.94.5@gmail.com</a>
<a href=""mailto:e.l.izab.ethal.a194.5@gmail.com"">e.l.izab.ethal.a194.5@gmail.com</a>
<a href=""mailto:e.liza.be.t.h.a.l.a19.45@gmail.com"">e.liza.be.t.h.a.l.a19.45@gmail.com</a>
<a href=""mailto:e.li.z.ab.e.t.ha.l.a.1.94.5@gmail.com"">e.li.z.ab.e.t.ha.l.a.1.94.5@gmail.com</a>
<a href=""mailto:el.i.z.a.bet.hala.194.5@gmail.com"">el.i.z.a.bet.hala.194.5@gmail.com</a>
<a href=""mailto:e.liz.abet.ha.la.1945@gmail.com"">e.liz.abet.ha.la.1945@gmail.com</a>
<a href=""mailto:eli.za.be.t.h.ala.1945@gmail.com"">eli.za.be.t.h.ala.1945@gmail.com</a>
<a href=""mailto:e.liz.a.b.et.ha.la.19.45@gmail.com"">e.liz.a.b.et.ha.la.19.45@gmail.com</a>
<a href=""mailto:el.iz.a.beth.ala.1.945@gmail.com"">el.iz.a.beth.ala.1.945@gmail.com</a>
<a href=""mailto:eli.za.be.t.h.a.la1945@gmail.com"">eli.za.be.t.h.a.la1945@gmail.com</a>
<a href=""mailto:e.l.iza.b.e.t.h.al.a1945@gmail.com"">e.l.iza.b.e.t.h.al.a1945@gmail.com</a>
<a href=""mailto:eli.zab.e.t.ha.l.a1.9.4.5@gmail.com"">eli.zab.e.t.ha.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:e.lizab.e.t.h.al.a.1.9.45@gmail.com"">e.lizab.e.t.h.al.a.1.9.45@gmail.com</a>
<a href=""mailto:e.li.z.abe.t.ha.l.a.19.4.5@gmail.com"">e.li.z.abe.t.ha.l.a.19.4.5@gmail.com</a>
<a href=""mailto:e.liz.ab.e.th.a.l.a.19.45@gmail.com"">e.liz.ab.e.th.a.l.a.19.45@gmail.com</a>
<a href=""mailto:eliz.ab.e.tha.l.a1.9.4.5@gmail.com"">eliz.ab.e.tha.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.iz.a.be.t.h.ala.1.94.5@gmail.com"">e.l.iz.a.be.t.h.ala.1.94.5@gmail.com</a>
<a href=""mailto:eli.z.abet.h.a.la.1.9.45@gmail.com"">eli.z.abet.h.a.la.1.9.45@gmail.com</a>
<a href=""mailto:el.i.zabe.t.hala19.45@gmail.com"">el.i.zabe.t.hala19.45@gmail.com</a>
<a href=""mailto:el.i.za.betha.la.1.94.5@gmail.com"">el.i.za.betha.la.1.94.5@gmail.com</a>
<a href=""mailto:e.liz.abeth.al.a1945@gmail.com"">e.liz.abeth.al.a1945@gmail.com</a>
<a href=""mailto:el.iza.b.e.thala194.5@gmail.com"">el.iza.b.e.thala194.5@gmail.com</a>
<a href=""mailto:eliz.a.be.t.h.a.la19.4.5@gmail.com"">eliz.a.be.t.h.a.la19.4.5@gmail.com</a>
<a href=""mailto:e.l.i.za.b.et.h.al.a1.9.45@gmail.com"">e.l.i.za.b.et.h.al.a1.9.45@gmail.com</a>
<a href=""mailto:e.liz.a.b.et.h.a.la1.945@gmail.com"">e.liz.a.b.et.h.a.la1.945@gmail.com</a>
<a href=""mailto:eli.z.ab.e.th.a.la1.94.5@gmail.com"">eli.z.ab.e.th.a.la1.94.5@gmail.com</a>
<a href=""mailto:e.liz.a.b.e.th.al.a194.5@gmail.com"">e.liz.a.b.e.th.al.a194.5@gmail.com</a>
<a href=""mailto:el.i.za.b.et.h.al.a1.94.5@gmail.com"">el.i.za.b.et.h.al.a1.94.5@gmail.com</a>
<a href=""mailto:e.l.iz.abe.t.ha.l.a.194.5@gmail.com"">e.l.iz.abe.t.ha.l.a.194.5@gmail.com</a>
<a href=""mailto:eliz.a.b.ethala.1.9.45@gmail.com"">eliz.a.b.ethala.1.9.45@gmail.com</a>
<a href=""mailto:eli.z.a.bet.ha.la.1945@gmail.com"">eli.z.a.bet.ha.la.1945@gmail.com</a>
<a href=""mailto:e.l.i.za.beth.al.a.19.45@gmail.com"">e.l.i.za.beth.al.a.19.45@gmail.com</a>
<a href=""mailto:e.li.z.ab.e.t.h.ala194.5@gmail.com"">e.li.z.ab.e.t.h.ala194.5@gmail.com</a>
<a href=""mailto:eliza.b.e.tha.l.a1945@gmail.com"">eliza.b.e.tha.l.a1945@gmail.com</a>
<a href=""mailto:e.l.i.z.a.be.t.ha.l.a1.945@gmail.com"">e.l.i.z.a.be.t.ha.l.a1.945@gmail.com</a>
<a href=""mailto:e.l.i.z.a.b.e.thal.a.1945@gmail.com"">e.l.i.z.a.b.e.thal.a.1945@gmail.com</a>
<a href=""mailto:e.li.zabe.t.ha.l.a19.45@gmail.com"">e.li.zabe.t.ha.l.a19.45@gmail.com</a>
<a href=""mailto:eliz.a.b.eth.al.a.19.45@gmail.com"">eliz.a.b.eth.al.a.19.45@gmail.com</a>
<a href=""mailto:eliza.b.etha.la.1.9.45@gmail.com"">eliza.b.etha.la.1.9.45@gmail.com</a>
<a href=""mailto:e.li.z.a.be.thal.a.19.4.5@gmail.com"">e.li.z.a.be.thal.a.19.4.5@gmail.com</a>
<a href=""mailto:eli.za.b.et.h.a.la.1945@gmail.com"">eli.za.b.et.h.a.la.1945@gmail.com</a>
<a href=""mailto:e.l.izabetha.l.a1.9.4.5@gmail.com"">e.l.izabetha.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:eliz.abe.t.hala.194.5@gmail.com"">eliz.abe.t.hala.194.5@gmail.com</a>
<a href=""mailto:e.l.iza.be.t.ha.la194.5@gmail.com"">e.l.iza.be.t.ha.la194.5@gmail.com</a>
<a href=""mailto:eli.za.beth.ala1.94.5@gmail.com"">eli.za.beth.ala1.94.5@gmail.com</a>
<a href=""mailto:e.li.z.abetha.l.a.19.45@gmail.com"">e.li.z.abetha.l.a.19.45@gmail.com</a>
<a href=""mailto:eliza.b.e.t.h.a.la.19.45@gmail.com"">eliza.b.e.t.h.a.la.19.45@gmail.com</a>
<a href=""mailto:e.l.i.za.b.e.th.a.la19.4.5@gmail.com"">e.l.i.za.b.e.th.a.la19.4.5@gmail.com</a>
<a href=""mailto:eli.za.bet.h.al.a.194.5@gmail.com"">eli.za.bet.h.al.a.194.5@gmail.com</a>
<a href=""mailto:el.i.z.abeth.al.a19.45@gmail.com"">el.i.z.abeth.al.a19.45@gmail.com</a>
<a href=""mailto:eliza.b.e.t.ha.la194.5@gmail.com"">eliza.b.e.t.ha.la194.5@gmail.com</a>
<a href=""mailto:el.iza.b.e.th.a.l.a.19.4.5@gmail.com"">el.iza.b.e.th.a.l.a.19.4.5@gmail.com</a>
<a href=""mailto:el.i.zab.e.tha.l.a.1.9.4.5@gmail.com"">el.i.zab.e.tha.l.a.1.9.4.5@gmail.com</a>
<a href=""mailto:eli.zabe.th.ala1.945@gmail.com"">eli.zabe.th.ala1.945@gmail.com</a>
<a href=""mailto:eliz.a.bethala.19.45@gmail.com"">eliz.a.bethala.19.45@gmail.com</a>
<a href=""mailto:e.li.zabe.t.ha.la.19.45@gmail.com"">e.li.zabe.t.ha.la.19.45@gmail.com</a>
<a href=""mailto:el.i.za.betha.la1945@gmail.com"">el.i.za.betha.la1945@gmail.com</a>
<a href=""mailto:e.li.z.a.b.et.h.a.la.1.94.5@gmail.com"">e.li.z.a.b.et.h.a.la.1.94.5@gmail.com</a>
<a href=""mailto:eli.z.a.b.e.t.h.ala19.4.5@gmail.com"">eli.z.a.b.e.t.h.ala19.4.5@gmail.com</a>
<a href=""mailto:el.izab.e.t.h.al.a.19.45@gmail.com"">el.izab.e.t.h.al.a.19.45@gmail.com</a>
<a href=""mailto:e.liz.a.bethal.a19.45@gmail.com"">e.liz.a.bethal.a19.45@gmail.com</a>
<a href=""mailto:e.l.i.za.be.tha.l.a1.9.45@gmail.com"">e.l.i.za.be.tha.l.a1.9.45@gmail.com</a>
<a href=""mailto:e.liza.b.e.th.a.l.a1.9.4.5@gmail.com"">e.liza.b.e.th.a.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.z.ab.et.hala.1945@gmail.com"">e.l.i.z.ab.et.hala.1945@gmail.com</a>
<a href=""mailto:el.i.zab.et.ha.la1.9.45@gmail.com"">el.i.zab.et.ha.la1.9.45@gmail.com</a>
<a href=""mailto:eliz.ab.e.t.h.ala19.45@gmail.com"">eliz.ab.e.t.h.ala19.45@gmail.com</a>
<a href=""mailto:e.l.iz.a.beth.al.a19.45@gmail.com"">e.l.iz.a.beth.al.a19.45@gmail.com</a>
<a href=""mailto:e.lizab.etha.la.19.4.5@gmail.com"">e.lizab.etha.la.19.4.5@gmail.com</a>
<a href=""mailto:el.i.z.ab.et.ha.l.a1.9.4.5@gmail.com"">el.i.z.ab.et.ha.l.a1.9.4.5@gmail.com</a>
<a href=""mailto:e.l.i.z.ab.etha.la.1.945@gmail.com"">e.l.i.z.ab.etha.la.1.945@gmail.com</a>
<a href=""mailto:e.lizab.e.t.hala.19.45@gmail.com"">e.lizab.e.t.hala.19.45@gmail.com</a>
<a href=""mailto:e.li.za.be.thala194.5@gmail.com"">e.li.za.be.thala194.5@gmail.com</a>
<a href=""mailto:elizab.e.th.a.l.a1.945@gmail.com"">elizab.e.th.a.l.a1.945@gmail.com</a>"
grhUmDNW,chatbox_glass,goldfiction,Lua,Friday 11th of August 2023 11:43:30 AM CDT,"function findAndWrap(devType)
  local devices = peripheral.getNames()
  for id, devName in pairs(devices) do
    if peripheral.getType(devName) == devType then
      return peripheral.wrap(devName)
    end
  end
end

glass = findAndWrap(""openperipheral_bridge"")

function start()
 print(""watching chatbox messages"")
 while true do
    message = os.pullEvent(""chatbox_command"")
    if message ~= """" then
      glass.clear()
      glass.addText(5,200, message, 0xFF0000)
      glass.sync()
    end
    sleep(0.5)
  end
end

start()"
TsstrwU0,# tk_procedural_slither.py,here2share,Python,Friday 11th of August 2023 10:43:10 AM CDT,"# tk_procedural_slither.py

from tkinter import *
import math

ww = 800
hh = 600
ww0 = ww//2
hh0 = hh//2
L = 160 # snake length by pixel
direction = [0, 0, 0, 0]  # initial direction
degrees = math.radians(359.9999999999)
print(degrees)

root = Tk()
root.title(""tk procedural slither"")
root.geometry(""%dx%d+10+10""%(ww,hh))
canv = Canvas(root, width=ww, height=hh)
canv.pack()

points = []
angles = [angle*0.0002 for angle in range(700, 901)]
angles += [-angle*0.0002 for angle in range(700, 901)]

def movement():
	x = int(ww0 + math.cos(direction[0]) * (math.cos(direction[1]) * (ww0 - 15)))
	y = int(hh0 + math.sin(direction[2]) * (math.sin(direction[3]) * (hh0 - 15)))
	return (x, y)

body = range(1, L)
for i in range(L):
	points.append(movement())

while True:
	canv.delete('all')
	points.append(movement())
	points = points[-L:]
	angles.extend([angles.pop(0), angles.pop(9), angles.pop(21), angles.pop(79), angles.pop(7), angles.pop(101), angles.pop(57)])
	direction = [angles[-i] + direction[i] for i in (0, 1, 2, 3)] # update the direction
	canv.create_line(points, fill=""blue"", width=3, smooth=True, splinesteps=5)
	canv.update()

root.mainloop()"
K8Kzv2jY,AutoBountyLazzyHub,bk,Lua,Friday 11th of August 2023 10:04:41 AM CDT,"repeat wait() until game:IsLoaded()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/LazzySensai/AutoFamBounty/main/Lazzy""))()"
ARW8um4z,NBT Scanner,Duristran,Lua,Friday 11th of August 2023 10:01:21 AM CDT,"
-- Returns a new ""Object"" containing a bunch of helper functions
-- for scanning an item for NBT values
function NBTScanner(peripheralName, slot)
    -- Wraps the peripheral
    local perp = peripheral.wrap(peripheralName)

    -- Tracks whether we should continue scanning or not
    local enabled = false
    -- List of all values we found, stored as [NBT] = 0
    local allNbtValues = {}

    -- Continuously scans the slot for items
    -- For use with parallel API
    local function scan()
        -- Enable the module
        enabled = true
        while enabled do
            -- fetch the item in the passed slot
            local item = perp.getItemMeta(slot)
            -- check if the item has a nbtHash
            if type(item) == ""table"" and type(item.nbtHash) == ""string"" then
                -- If it looks right, add it to the list
                allNbtValues[item.nbtHash] = 0
            end
            -- Allow other parallel threads to run
            os.sleep(1)
        end
    end

    -- Call from another thread to stop the scan
    local function stop()
        enabled = false
    end

    -- Sets the slot to scan
    local function setSlot(newslot)
        slot = newslot
    end

    -- Returns a string of all the values we found
    -- Split by newline character
    local function getValues()
        local data = """"
        for value, _ in pairs(allNbtValues) do
            data = value .. ""\n""
        end
    end

    -- Returns the number of values we found
    -- whilst scanning
    local function getValueCount()
        local count = 0
        for _, _ in pairs(allNbtValues) do
            count = count + 1
        end
        return count
    end

    return {
        scan = scan,
        stop = stop,
        setSlot = setSlot,
        getValues = getValues,
        getValueCount = getValueCount
    }
end

-- Watches the keyboard for the enter key
-- When pressed, stops the passed NBTScanner
local function keyHandler(nbtScanner)
	return function()
	    while true do
 	       	local event, key = os.pullEvent(""key"")
 	       	if key == keys.enter then
 	           	nbtScanner.stop()
  	          	return -- break parallel
  	    	end
		end
    end
end

local function main()
    -- Create a new NBTScanner
    -- BE SURE TO SET THE PROPER PERIPHERAL NAME AND SLOT YOU WISH TO WATCH
    local nbtScanner = NBTScanner(""left"", 10)
	local myKeyHandler = keyHandler(nbtScanner)
    -- Start scanning and watch for the enter key
    parallel.waitForAny(myKeyHandler, nbtScanner.scan)

    -- Once done store all the data to a file
    local storedData = fs.open(""nbtData"", ""w"")
    storedData.write(nbtScanner.getValues())
    print(""Wrote "" .. nbtScanner.getValueCount() .. "" values to file"")
    storedData.close()
end

main()"
KszjzRcE,if-ternario.js,Talilo,JavaScript,Friday 11th of August 2023 09:56:39 AM CDT,"//https://editor.p5js.org/

var carteira = false;

carteira == true? console.log(""pode dirigir""):console.log(""não pode diridir"");

// função dirigir com arraw

function motorista(){
  var nome = ""Mario"";
  var idade = 19;
  var carteira = false;
  dados = [nome, idade, carteira]
  return dados
  
}

console.log(motorista());


function dirigir(){
  var dados = motorista();
  console.log( `Caro senhor ${dados[0]}, sua idade é ${dados[1]} logo voce ${dados[2] == true? ""pode dirigir"":""não pode diridir""}`);

  
}

dirigir()


// funcao dirigir com obejeto

function motorista(){

  dados = {
      nome : ""Mario"",
      idade : 19,
     carteira : false
    
  }
  return dados
  
}

console.log(motorista());


function dirigir(){
  var dados = motorista();
  console.log( `Caro senhor ${dados.nome}, sua idade é ${dados.idade} logo voce ${dados.carteira == true? ""pode dirigir"":""não pode diridir""}`);

  
}

dirigir()"
x1NUuyAE,aiogram + yookassa + aioscheduler payments registrator and checker succeed status of this payments.,dkmarchuk,Python,Friday 11th of August 2023 09:25:45 AM CDT,"# aiogram2.x + aioscheduler + yookassa ready solution

# Решение aiogram + yookassa для выставления ссылок на оплату по банковской карте 
# и автоматического подхватывания успешной оплаты с дальнейшими хотелками заказчика.
# Платеж периодически проверяется на успешность оплаты, либо ждет ответа в кнопке /start, 
# когда юзер нажимает ""Вернуться в магазин"" на самой странице оплаты на сайте yookassa.ru (yoomoney.ru), 
# не пропуская оплаченных платежей. 
# Платеж может потеряться, когда после оплаты юзер просто закрывает окошко оплаты сайта yookassa.ru, не нажимая кнопку ""Вернуться в магазин"", тем самым не используя возвратный коллбек. 
# На практике, таких кейсов было около 80%, что натолкнуло на разработку этого решения.
# Соответственно, с этим кодом можно свести к нулю все пропущенные успешные платежи от пользователей.  

# info: t.me/etoSlishkom


############### loader.py

import logging
from aiogram import Bot
from aiogram.dispatcher import Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from backports import zoneinfo
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from yookassa import Configuration

with open('data/config.yml') as yaml_file:
    data = yaml.safe_load(yaml_file)

DEBUG = data.get('DEBUG', False)
TOKEN = data.get('TOKEN', '')
LOG_FILE = data.get('LOG_FILE', '')
YOOKASSA_ACCOUNT_ID = data.get('YOOKASSA_ACCOUNT_ID', 0)
YOOKASSA_SECRET_KEY = data.get('YOOKASSA_SECRET_KEY', '')

WEBHOOK_HOST = data.get('WEBHOOK_HOST', '')
WEBHOOK_PATH = data.get('WEBHOOK_PATH', '')
WEBHOOK_URL = f""{WEBHOOK_HOST}{WEBHOOK_PATH}""

WEBAPP_HOST = data.get('WEBAPP_HOST', '')
WEBAPP_PORT = data.get('WEBAPP_PORT', 0)

logging.basicConfig(filename=LOG_FILE,
                    level=logging.INFO,
                    filemode='a',
                    datefmt='%Y-%m-%d, %H:%M',
                    format='%(asctime)s: %(name)s: %(levelname)s: %(message)s')
log = logging.getLogger('Bot')
logging.getLogger('apscheduler.scheduler').setLevel(logging.WARNING)
logging.getLogger('apscheduler.executors.default').setLevel(logging.WARNING)
logging.getLogger('aiohttp.access').setLevel(logging.WARNING)
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.bind_filter(filters.IsAdminPersonal)
dp.bind_filter(filters.IsClientPersonal)
zone = zoneinfo.ZoneInfo('Europe/Moscow')
scheduler = AsyncIOScheduler(timezone=zone)  
# Надо проверить, возможно Yookassa регистрирует платеж не по Мск timezone 
# (и в 00:00 (в 03:00) не разберешь, платеж улетел в локальную базу сегодня или вчера)
# В моем решении мне нужна была синхронизация с PostgreSQL и Redis, поэтому используется zoneinfo


async def on_startup(_):
    global scheduler
    if not DEBUG:
        await bot.set_webhook(WEBHOOK_URL)
    # start work with yookassa
    Configuration.configure(
        account_id=YOOKASSA_ACCOUNT_ID,
        secret_key=YOOKASSA_SECRET_KEY
    )
    # Start run functions with awaiting (+20 sec from current time and longer) by schedule
    scheduler.start()


async def on_shutdown(_):
    global scheduler
    if not DEBUG:
        await bot.delete_webhook()
    await dp.storage.close()
    await dp.storage.wait_closed()
    scheduler.shutdown()


############### client_handlers.py

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.deep_linking import get_start_link  # для хендлера в /start, чтобы подхватывать из message.get_args()
from asyncio import sleep
from datetime import datetime, timedelta
from uuid import uuid4
from yookassa import Payment

# Ваша бекенд- хотелка
# Что нужно сделать при успешном платеже от юзера
async def after_succeded_payment(from_user, state):
    user_id = from_user.id


# регистрация кнопки платежа и его id
# лучше сразу перепишите код, возвратить ответ в state: FSMContext, лаконичнее и понятнее будет смотреться в общем коде,
# чем то, что есть сейчас 
async def payment_pair(from_user: types.User, amount: int, caption: str = 'Оплатить') -> tuple:
    user_id = from_user.id
    idempotency_key = uuid4()
    return_url = await get_start_link('payment', encode=True)
    user = '@' + from_user.username + ', ' if from_user.username is not None else ''
    description = f'Взнос {amount} руб. от {user}Telegram id: {user_id}.'
    # если у вас договор как самозанятый, обратите внимание на обяз параметры customer, vat_code, quantity
    # если неохота писать проведение платежа в зависимости от еще каких- либо условий, то capture = True 
    # и платежка сразу упадет вам с payment.status == 'succeeded'
    payment_data = {
        'amount': {
            'value': str(amount),
            'currency': 'RUB'
        },
        'description': description,
        'receipt': {
            'customer': {
                'email': 'my@gmail.com'
            },
            'items': [
                {
                    'description': description,
                    'amount': {
                        'value': str(amount),
                        'currency': 'RUB'
                    },
                    'vat_code': 1,
                    'quantity': '1',
                    'payment_subject': 'service',
                    'payment_mode': 'full_payment'
                }
            ]
        },
        'confirmation': {
            'type': 'redirect',
            'return_url': return_url
        },
        'capture': True,
        'payment_method_data': {
            'type': 'bank_card'
        }
    }
    payment = Payment.create(payment_data, idempotency_key)
    log.info(f'{user_id}: payment_pair: Регистрация платежа: id: {payment.id}, сумма: {amount} руб.')
    payment_button = types.InlineKeyboardButton(f'{caption} {amount} руб.', url=payment.confirmation.confirmation_url)
    return payment_button, payment.id


async def checkout(from_user: types.User, state: FSMContext):
    user_id = from_user.id
    # дата проведения платежа
    today = datetime.now(tz=zone)
    async with state.proxy() as data:
        payment_id = data.get('payment_id', '')
        block_checkout_at_time = data.get('block_checkout_at_time', today - timedelta(days=1))
    if payment_id:
        # id платежа найден, проверить статус
        payment = Payment.find_one(payment_id=payment_id)
        amount = int(payment.amount.value)
        if payment.status == 'succeeded':
            
            # ваш бекенд хотелок после успешной оплаты
            await after_succeded_payment(from_user, state)
            
            log.info(f'{user_id}: checkout: Оплата: {amount} руб, ЮКасса id: {payment_id}.')
            await state.update_data(payment_id='')
            # Остановить периодическую проверку платежа
            await state.update_data(block_checkout_at_time=today - timedelta(days=1))
        # если процесс оплаты клиентом еще идет на стороне Юкасса, ждем их коллбек в /start (валидный около 1ч, вроде),
        # еще раз проверяем статус платежа. 
        # Если неохота ждать ЮКассу и вы можете скрыть ссылку на оплату (удалить сообщение из чата), 
        # то нужно остановить периодический проверяльщик платежа, 
        # соотв это параметр EXPIRED_PAYMENT в func=callback_send_payment_button
        else:
            # ожидаем оплату от пользователя, периодически проверяем статус платежа
            if today < block_checkout_at_time:
                scheduler.add_job(func=checkout,
                                  kwargs={'from_user': from_user, 'state': state},
                                  trigger='date',
                                  next_run_time=today + timedelta(seconds=INTERVAL_CHECK_FOR_PAYMENT)
                                  )
            # сообщения оплаты скрыты, но платеж от Юкасса технически может быть оплачен.
            # Оставляем возможность оплаты с редиректом кнопкой /start
            # взамен присылаем менюшку для продолжения взаимодействия с ботом
            else:
                await send_message_then_delete(user_id, MESSAGE['expired_checkout'], state,
                                               reply_markup=start_menu_markup)
                log.info(f'{user_id}: checkout: Завершение периодической проверки платежа. ЮКасса id: {payment_id} '
                         f'на сумму {amount} руб. в течение {INTERVAL_CHECK_FOR_PAYMENT} сек. не был оплачен.')
    else:
        log.info(f'{user_id}: checkout: Не оплаченный id или оплата уже произведена этой функцией предыдущей итерацией от scheduler.')


@dp.message_handler(IsClientPersonal(), commands=['start'])
async def start(msg: types.Message, state: FSMContext):
    user_id = msg.from_user.id
    first_name = msg.from_user.first_name
    user_name = msg.from_user.username
    args = msg.get_args()

    # Обычное нажатие пользователем кнопки /start или Выбора меню ""Основное меню"" без аргументов
    if not args:
        log.info(f'@{user_name}, {first_name}, {user_id}: start: Кнопка /start')
        await bot.send_message(user_id, f'Привет, {first_name} 🙂 \n\n{MESSAGE[""start_menu""]}')
    
    # Кнопка /start пришла с аргументами
    # Коллбек оплаты от ЮКасса
    elif args == 'cGF5bWVudA':
        
        # если вам страшно после args == 'cGF5bWVudA', 
        # то старый код: decode = decode_payload(args); if decode == 'payment':
        async with state.proxy() as data:
            payment_id = data.get('payment_id', '')
        
        # Ссылка на оплату еще актуальна. Проверить платеж на оплату
        if payment_id:
            log.info(f'@{user_name}, {first_name}, {user_id}: start: Возвратный коллбек ЮКасса, id: {payment_id}')
            await checkout(from_user=msg.from_user, state=state)
        # Нет ссылки для оплаты. Платеж оплачен и подхвачен на лету (см внутренности def checkout) или платеж не актуален
        else:
            log.info(f'@{user_name}, {first_name}, {user_id}: start: Возвратный коллбек ЮКасса, id: None')
            await bot.send_message(user_id, MESSAGE['start_menu_file_downloaded'])


# Выставить ссылки на оплату за какой- либо товар
@dp.callback_query_handler(lambda call: call.data.startswith('item_to_buy_'))
async def callback_send_payment_button(call: types.CallbackQuery, state: FSMContext):
    user_id = call.from_user.id

    # сегодня. формат: YYYY-MM-DD
    today = datetime.now(tz=zone)
    # установить отложенный триггер заключительного обращения запущенной проверки оплаты checkout:
    # время, когда не нужно обработывать платеж и считать ссылку на оплату истекшей
    await state.update_data(block_checkout_at_time=today + timedelta(seconds=EXPIRED_PAYMENT))
    amount = 100
    checkout_keyboard = types.InlineKeyboardMarkup()
    checkout_button, payment_id = await payment_pair(from_user=call.from_user, amount=amount)
    checkout_keyboard.row(checkout_button)
    await state.update_data(payment_id=payment_id)

    await send_message_then_delete(user_id, 'Оплатить', reply_markup=checkout_keyboard)
    # Запустить периодическую проверку платежа
    scheduler.add_job(func=checkout,
                      kwargs={'from_user': call.from_user, 'state': state},
                      trigger='date',
                      next_run_time=today + timedelta(seconds=5),
                      misfire_grace_time=1,
                      id=payment_id
                     )"
Jq9TmEM5,Untitled,Don_Mag,Swift,Friday 11th of August 2023 09:16:12 AM CDT,"import UIKit
import WebKit

class WebShadVC: UIViewController {
	
	let wv1: WKWebView = WKWebView()
	let wv2: WKWebView = WKWebView()

	override func viewDidAppear(_ animated: Bool) {
		super.viewDidAppear(animated)
		
		view.backgroundColor = .yellow

		wv1.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(wv1)
		wv2.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(wv2)

		let g = view.safeAreaLayoutGuide
		NSLayoutConstraint.activate([
			
			wv1.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),
			wv1.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			wv1.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			wv1.heightAnchor.constraint(equalToConstant: 80.0),
			
			wv2.topAnchor.constraint(equalTo: wv1.bottomAnchor, constant: 20.0),
			wv2.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			wv2.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			wv2.heightAnchor.constraint(equalTo: wv1.heightAnchor),
			
		])
		
		var titleColor: String?
		
		let htmlstr: String = ""<p>geschieht</p>""
		
		let str = ""<!DOCTYPE html> <html> <head> <link href='https://fonts.googleapis.com/css?family=Fira Sans Condensed' rel='stylesheet'> <style> body {font-family: 'Fira Sans Condensed';} .image {width: 100%; height: auto;} .bg-white { background: rgba(255, 255, 255, .7); border-radius:40px; padding: 20px; }html { padding: 10px;} h2 {\(titleColor ?? ""font-size:40pt; color:#000000;"")} p{ font-size:26pt; {font-family: 'Fira Sans', sans-serif;}.bold{font-weight:bold;}.italic{font-style: italic;}.oblique{font-style: oblique;}} strong{font-size:30pt} </style> </head> <body><div class='bg-white'>\(htmlstr) </div> </body> </html>""

		wv1.loadHTMLString(str, baseURL: nil)
		wv2.loadHTMLString(str, baseURL: nil)

		wv1.isOpaque = true
		wv2.isOpaque = false
		
	}
	
}"
FpfSHKgw,Untitled,bbcqx,Python,Friday 11th of August 2023 09:01:47 AM CDT,"class RabbitmqConnectionFactory:
    # ...

    def __enter__(self):
        credentials = pika.credentials.PlainCredentials(
            self.username, self.password
        )
        self.connection = pika.BlockingConnection(
            pika.ConnectionParameters(self.host, self.port, ""/"", credentials)
        )
        self._make_new_channel()
        return self

    def __exit__(self, exc_type, exc_value, traceback):
        self._close_channel()
        self._close_connection()

    def _make_new_channel(self):
        if self.connection and self.connection.is_open:
            self.channel = self.connection.channel()

    def _close_channel(self):
        if self.channel and not self.channel.is_closed:
            self.channel.close()

    def _close_connection(self):
        if self.connection and not self.connection.is_closed:
            self.connection.close()

    def _get_channel(self):
        if (not self.connection or self.connection.is_closed or
            not self.channel or self.channel.is_closed):
            self.__exit__(None, None, None)
            self.__enter__()
        return self.channel

    # ... rest of the class
    
    
    # USE like this ONLY:

    with RabbitmqConnectionFactory(...) as rq:
    	rq.declare_queue(...)
"
L8QnFXPE,News Aug11 23,Newscaster_Ned,Email,Friday 11th of August 2023 08:58:11 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎l‎l‎o‎,‎ ‎y‎e‎ ‎o‎l‎d‎e‎ ‎f‎o‎l‎k‎.‎ ‎I‎t‎'‎s‎ ‎y‎e‎ ‎h‎i‎s‎t‎o‎r‎i‎a‎n‎ ‎N‎e‎w‎s‎e‎c‎a‎s‎t‎r‎e‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎y‎e‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

M‎i‎g‎r‎a‎n‎t‎s‎ ‎E‎v‎a‎c‎u‎a‎t‎e‎d‎ ‎F‎r‎o‎m‎ ‎'‎F‎l‎o‎a‎t‎e‎l‎'‎ ‎A‎f‎t‎e‎r‎ ‎D‎e‎a‎d‎l‎y‎ ‎B‎a‎c‎t‎e‎r‎i‎a‎ ‎F‎o‎u‎n‎d‎
M‎a‎u‎i‎ ‎F‎i‎r‎e‎s‎ ‎F‎u‎e‎l‎e‎d‎ ‎b‎y‎ ‎I‎n‎v‎a‎s‎i‎v‎e‎ ‎A‎l‎i‎e‎n‎ ‎G‎r‎a‎s‎s‎e‎s‎
B‎i‎d‎e‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎S‎t‎i‎l‎l‎ ‎S‎t‎i‎c‎k‎y‎:‎ ‎P‎r‎o‎d‎u‎c‎e‎r‎ ‎P‎r‎i‎c‎e‎ ‎I‎n‎d‎e‎x‎ ‎R‎i‎s‎e‎s‎ ‎M‎o‎r‎e‎ ‎T‎h‎a‎n‎ ‎E‎x‎p‎e‎c‎t‎e‎d‎
T‎h‎i‎r‎d‎ ‎o‎f‎ ‎B‎r‎i‎t‎o‎n‎s‎ ‎D‎o‎ ‎N‎o‎t‎ ‎K‎n‎o‎w‎ ‎'‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎W‎o‎m‎e‎n‎'‎ ‎a‎r‎e‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎M‎a‎l‎e‎s‎
P‎o‎l‎l‎:‎ ‎H‎i‎g‎h‎ ‎P‎e‎r‎c‎e‎n‎t‎a‎g‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎'‎s‎ ‎H‎a‎v‎e‎ ‎T‎r‎i‎e‎d‎ ‎M‎a‎r‎i‎j‎u‎a‎n‎a‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎a‎w‎a‎i‎i‎ ‎B‎u‎r‎n‎i‎n‎g‎

T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎ ‎p‎r‎o‎v‎i‎d‎e‎d‎ ‎b‎y‎ ‎C‎o‎u‎n‎t‎y‎ ‎o‎f‎ ‎M‎a‎u‎i‎ ‎s‎h‎o‎w‎s‎ ‎f‎i‎r‎e‎ ‎a‎n‎d‎ ‎s‎m‎o‎k‎e‎ ‎f‎i‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎k‎y‎ ‎f‎r‎o‎m‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎s‎e‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎H‎o‎k‎i‎o‎k‎i‎o‎ ‎P‎l‎a‎c‎e‎ ‎a‎n‎d‎ ‎L‎a‎h‎a‎i‎n‎a‎ ‎B‎y‎p‎a‎s‎s‎ ‎i‎n‎ ‎M‎a‎u‎i‎,‎ ‎H‎a‎w‎a‎i‎i‎ ‎o‎n‎ ‎T‎u‎e‎s‎d‎a‎y‎,‎ ‎A‎u‎g‎.‎ ‎8‎,‎ ‎2‎0‎2‎3‎.‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎s‎ ‎i‎n‎ ‎H‎a‎w‎a‎i‎i‎ ‎f‎a‎n‎n‎e‎d‎ ‎b‎y‎ ‎s‎t‎r‎o‎n‎g‎ ‎w‎i‎n‎d‎s‎ ‎b‎u‎r‎n‎e‎d‎ ‎m‎u‎l‎t‎i‎p‎l‎e‎ ‎s‎t‎r‎u‎c‎t‎u‎r‎e‎s‎ ‎i‎n‎ ‎a‎r‎e‎a‎s‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎h‎i‎s‎t‎o‎r‎i‎c‎ ‎L‎a‎h‎a‎i‎n‎a‎ ‎t‎o‎w‎n‎,‎ ‎f‎o‎r‎c‎i‎n‎g‎ ‎e‎v‎a‎c‎u‎a‎t‎i‎o‎n‎s‎ ‎a‎n‎d‎ ‎c‎l‎o‎s‎i‎n‎g‎ ‎s‎c‎h‎o‎o‎l‎s‎ ‎i‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎,‎ ‎a‎n‎d‎ ‎r‎e‎s‎c‎u‎e‎r‎s‎ ‎p‎u‎l‎l‎e‎d‎ ‎a‎ ‎d‎o‎z‎e‎n‎ ‎p‎e‎o‎p‎l‎e‎ ‎e‎s‎c‎a‎p‎i‎n‎g‎ ‎s‎m‎o‎k‎e‎ ‎a‎n‎d‎ ‎f‎l‎a‎m‎e‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎o‎c‎e‎a‎n‎.‎ ‎(‎Z‎e‎k‎e‎ ‎K‎a‎l‎u‎a‎/‎C‎o‎u‎n‎t‎y‎ ‎o‎f‎ ‎M‎a‎u‎i‎ ‎v‎i‎a‎ ‎A‎P‎)‎
H‎a‎w‎a‎i‎i‎ ‎F‎i‎r‎e‎s‎:‎ ‎D‎e‎a‎t‎h‎ ‎T‎o‎l‎l‎ ‎C‎l‎i‎m‎b‎s‎ ‎t‎o‎ ‎3‎6‎ ‎a‎s‎ ‎F‎l‎a‎m‎e‎s‎ ‎E‎n‎g‎u‎l‎f‎ ‎M‎a‎u‎i‎
3‎,‎5‎9‎4‎
J‎a‎c‎k‎ ‎S‎m‎i‎t‎h‎ ‎W‎a‎n‎t‎s‎ ‎T‎r‎u‎m‎p‎ ‎T‎r‎i‎a‎l‎ ‎J‎a‎n‎.‎ ‎2‎ ‎-‎-‎ ‎R‎i‎g‎h‎t‎ ‎B‎e‎f‎o‎r‎e‎ ‎I‎o‎w‎a‎ ‎C‎a‎u‎c‎u‎s‎e‎s‎
J‎a‎c‎k‎ ‎S‎m‎i‎t‎h‎ ‎W‎a‎n‎t‎s‎ ‎T‎r‎u‎m‎p‎ ‎T‎r‎i‎a‎l‎ ‎J‎a‎n‎.‎ ‎2‎ ‎-‎-‎ ‎R‎i‎g‎h‎t‎ ‎B‎e‎f‎o‎r‎e‎ ‎I‎o‎w‎a‎ ‎C‎a‎u‎c‎u‎s‎e‎s‎
4‎,‎1‎5‎1‎
L‎o‎c‎a‎l‎s‎ ‎B‎e‎g‎ ‎O‎p‎r‎a‎h‎,‎ ‎B‎e‎z‎o‎s‎,‎ ‎E‎l‎l‎i‎s‎o‎n‎ ‎f‎o‎r‎ ‎H‎e‎l‎p‎ ‎a‎m‎i‎d‎ ‎M‎a‎u‎i‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎s‎
L‎o‎c‎a‎l‎s‎ ‎B‎e‎g‎ ‎O‎p‎r‎a‎h‎,‎ ‎B‎e‎z‎o‎s‎,‎ ‎E‎l‎l‎i‎s‎o‎n‎ ‎f‎o‎r‎ ‎H‎e‎l‎p‎ ‎a‎m‎i‎d‎ ‎M‎a‎u‎i‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎s‎
4‎,‎5‎8‎3‎
P‎R‎O‎V‎O‎,‎ ‎U‎T‎A‎H‎ ‎-‎ ‎A‎U‎G‎U‎S‎T‎ ‎9‎:‎ ‎F‎B‎I‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎t‎h‎e‎ ‎h‎o‎m‎e‎ ‎o‎f‎ ‎C‎r‎a‎i‎g‎ ‎R‎o‎b‎e‎r‎t‎s‎o‎n‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎s‎h‎o‎t‎ ‎a‎n‎d‎ ‎k‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎F‎B‎I‎ ‎i‎n‎ ‎a‎ ‎r‎a‎i‎d‎ ‎o‎n‎ ‎h‎i‎s‎ ‎h‎o‎m‎e‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎o‎n‎ ‎A‎u‎g‎u‎s‎t‎ ‎9‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎P‎r‎o‎v‎o‎,‎ ‎U‎t‎a‎h‎.‎ ‎T‎h‎e‎ ‎F‎B‎I‎ ‎w‎a‎s‎ ‎i‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎n‎g‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎t‎h‎r‎e‎a‎t‎s‎ ‎b‎y‎ ‎R‎o‎b‎e‎r‎t‎s‎o‎n‎ ‎t‎o‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎B‎i‎d‎e‎n‎ ‎w‎h‎o‎ ‎i‎s‎ ‎v‎i‎s‎i‎t‎i‎n‎g‎ ‎S‎a‎l‎t‎ ‎L‎a‎k‎e‎ ‎C‎i‎t‎y‎ ‎t‎o‎d‎a‎y‎ ‎a‎n‎d‎ ‎t‎o‎m‎o‎r‎r‎o‎w‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎G‎e‎o‎r‎g‎e‎ ‎F‎r‎e‎y‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
F‎B‎I‎ ‎G‎u‎n‎n‎e‎d‎ ‎D‎o‎w‎n‎ ‎U‎t‎a‎h‎ ‎M‎a‎n‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎i‎n‎g‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎
6‎,‎1‎1‎6‎
K‎a‎t‎h‎y‎ ‎G‎r‎i‎f‎f‎i‎n‎ ‎P‎o‎s‎t‎s‎ ‎J‎a‎c‎k‎ ‎S‎m‎i‎t‎h‎ ‎H‎o‎l‎d‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎S‎e‎v‎e‎r‎e‎d‎ ‎H‎e‎a‎d‎
K‎a‎t‎h‎y‎ ‎G‎r‎i‎f‎f‎i‎n‎ ‎P‎o‎s‎t‎s‎ ‎J‎a‎c‎k‎ ‎S‎m‎i‎t‎h‎ ‎H‎o‎l‎d‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎S‎e‎v‎e‎r‎e‎d‎ ‎H‎e‎a‎d‎
9‎1‎7‎
V‎i‎d‎e‎o‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎S‎h‎o‎w‎ ‎B‎u‎d‎w‎e‎i‎s‎e‎r‎ ‎T‎e‎n‎t‎ ‎E‎m‎p‎t‎y‎ ‎a‎t‎ ‎S‎t‎u‎r‎g‎i‎s‎ ‎M‎o‎t‎o‎r‎c‎y‎c‎l‎e‎ ‎E‎v‎e‎n‎t‎
V‎i‎d‎e‎o‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎S‎h‎o‎w‎ ‎B‎u‎d‎w‎e‎i‎s‎e‎r‎ ‎T‎e‎n‎t‎ ‎E‎m‎p‎t‎y‎ ‎a‎t‎ ‎S‎t‎u‎r‎g‎i‎s‎ ‎M‎o‎t‎o‎r‎c‎y‎c‎l‎e‎ ‎E‎v‎e‎n‎t‎
4‎7‎1‎
C‎N‎N‎’‎s‎ ‎T‎a‎p‎p‎e‎r‎ ‎t‎o‎ ‎C‎o‎m‎e‎r‎:‎ ‎'‎C‎e‎r‎t‎a‎i‎n‎l‎y‎ ‎T‎h‎e‎r‎e‎’‎s‎ ‎S‎l‎e‎a‎z‎e‎,‎'‎ ‎B‎u‎t‎ ‎N‎o‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎
C‎N‎N‎’‎s‎ ‎T‎a‎p‎p‎e‎r‎ ‎t‎o‎ ‎C‎o‎m‎e‎r‎:‎ ‎'‎C‎e‎r‎t‎a‎i‎n‎l‎y‎ ‎T‎h‎e‎r‎e‎’‎s‎ ‎S‎l‎e‎a‎z‎e‎,‎'‎ ‎B‎u‎t‎ ‎N‎o‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎
5‎2‎4‎
B‎i‎d‎e‎n‎ ‎G‎i‎v‎e‎s‎ ‎I‎r‎a‎n‎ ‎$‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎i‎n‎ ‎U‎n‎f‎r‎o‎z‎e‎n‎ ‎A‎s‎s‎e‎t‎s‎ ‎f‎o‎r‎ ‎F‎i‎v‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎s‎
B‎i‎d‎e‎n‎ ‎G‎i‎v‎e‎s‎ ‎I‎r‎a‎n‎ ‎$‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎i‎n‎ ‎U‎n‎f‎r‎o‎z‎e‎n‎ ‎A‎s‎s‎e‎t‎s‎ ‎f‎o‎r‎ ‎F‎i‎v‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎s‎
2‎,‎4‎4‎1‎
J‎a‎n‎u‎a‎r‎y‎ ‎6‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎D‎e‎s‎t‎r‎o‎y‎e‎d‎ ‎R‎e‎c‎o‎r‎d‎s‎,‎ ‎V‎i‎d‎e‎o‎s‎;‎ ‎T‎r‎u‎m‎p‎ ‎D‎e‎f‎e‎n‎s‎e‎ ‎I‎m‎p‎e‎r‎i‎l‎e‎d‎
J‎a‎n‎u‎a‎r‎y‎ ‎6‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎D‎e‎s‎t‎r‎o‎y‎e‎d‎ ‎R‎e‎c‎o‎r‎d‎s‎,‎ ‎V‎i‎d‎e‎o‎s‎;‎ ‎T‎r‎u‎m‎p‎ ‎D‎e‎f‎e‎n‎s‎e‎ ‎I‎m‎p‎e‎r‎i‎l‎e‎d‎
5‎,‎3‎5‎9‎
T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎I‎n‎f‎o‎r‎m‎e‎d‎ ‎F‎B‎I‎ ‎A‎b‎o‎u‎t‎ ‎M‎a‎n‎ ‎W‎h‎o‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎ ‎B‎i‎d‎e‎n‎
T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎I‎n‎f‎o‎r‎m‎e‎d‎ ‎F‎B‎I‎ ‎A‎b‎o‎u‎t‎ ‎M‎a‎n‎ ‎W‎h‎o‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎ ‎B‎i‎d‎e‎n‎

T‎e‎e‎n‎a‎p‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎T‎e‎e‎n‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎w‎e‎s‎t‎ ‎H‎o‎u‎s‎t‎o‎n‎.‎

T‎h‎e‎ ‎v‎i‎c‎t‎i‎m‎'‎s‎ ‎n‎a‎m‎e‎ ‎w‎a‎s‎ ‎n‎o‎t‎ ‎D‎o‎n‎ ‎D‎a‎'‎q‎u‎a‎n‎ ‎S‎h‎a‎n‎a‎d‎a‎ ‎T‎r‎a‎y‎v‎o‎n‎ ‎T‎y‎r‎o‎n‎e‎.‎


N‎i‎g‎g‎a‎b‎i‎t‎c‎h‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎n‎d‎ ‎D‎i‎s‎m‎e‎m‎b‎e‎r‎i‎n‎g‎ ‎H‎i‎s‎ ‎C‎o‎r‎p‎s‎e‎.‎


C‎h‎i‎m‎p‎ ‎S‎t‎a‎b‎s‎ ‎O‎C‎ ‎D‎o‎c‎t‎o‎r‎ ‎W‎h‎i‎l‎e‎ ‎H‎e‎ ‎W‎a‎s‎ ‎R‎i‎d‎i‎n‎g‎ ‎B‎i‎k‎e‎.‎


B‎o‎n‎o‎b‎o‎ ‎T‎u‎r‎n‎s‎ ‎H‎i‎m‎s‎e‎l‎f‎ ‎i‎n‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎r‎a‎n‎g‎l‎i‎n‎g‎ ‎H‎i‎s‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎H‎e‎r‎ ‎S‎h‎e‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎F‎l‎e‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎e‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎t‎h‎e‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎6‎°‎
/‎7‎9‎°‎
2‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎ ‎|‎ ‎D‎a‎y‎
1‎0‎6‎°‎
2‎%‎
S‎
1‎5‎
 ‎
m‎p‎h‎
S‎o‎m‎e‎ ‎c‎l‎o‎u‎d‎s‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎s‎u‎n‎n‎y‎ ‎s‎k‎i‎e‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎N‎e‎a‎r‎ ‎r‎e‎c‎o‎r‎d‎ ‎h‎i‎g‎h‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎1‎0‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
E‎x‎t‎r‎e‎m‎e‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎1‎5‎ ‎p‎m‎
F‎r‎i‎ ‎1‎1‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎9‎°‎
1‎4‎%‎
S‎
1‎6‎
 ‎
m‎p‎h‎
A‎ ‎f‎e‎w‎ ‎p‎a‎s‎s‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎7‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎2‎8‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
5‎:‎1‎8‎ ‎p‎m‎
S‎a‎t‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎6‎°‎
/‎7‎8‎°‎
8‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎6‎°‎
/‎7‎5‎°‎
7‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎6‎°‎
8‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎6‎°‎
1‎5‎%‎
N‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎6‎
S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎6‎°‎
1‎1‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎7‎
S‎u‎n‎n‎y‎
1‎0‎6‎°‎
/‎7‎6‎°‎
5‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎4‎°‎
/‎7‎6‎°‎
6‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎3‎°‎
/‎7‎5‎°‎
7‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎2‎°‎
/‎7‎5‎°‎
7‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎5‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
1‎9‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
2‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
1‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
2‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎F‎u‎r‎r‎i‎e‎s‎.‎ 😺

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎a‎p‎e‎f‎u‎g‎e‎e‎
A‎ ‎r‎a‎p‎e‎f‎u‎g‎e‎e‎ ‎i‎s‎ ‎a‎ ‎r‎a‎p‎e‎y‎ ‎r‎e‎f‎u‎g‎e‎e‎ ‎w‎h‎o‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎u‎s‎e‎s‎ ‎a‎ ‎r‎a‎p‎e‎ ‎m‎o‎b‎ ‎t‎o‎ ‎c‎u‎c‎k‎ ‎t‎h‎e‎ ‎n‎a‎t‎i‎v‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎f‎ ‎a‎ ‎c‎o‎u‎n‎t‎r‎y‎,‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎f‎u‎l‎l‎y‎ ‎r‎e‎l‎i‎a‎n‎t‎ ‎o‎n‎ ‎w‎e‎a‎k‎ ‎w‎i‎l‎l‎e‎d‎ ‎l‎i‎b‎e‎r‎a‎l‎s‎ ‎t‎o‎ ‎d‎u‎e‎ ‎s‎o‎.‎ ‎T‎e‎c‎h‎n‎i‎c‎a‎l‎l‎y‎ ‎s‎p‎e‎a‎k‎i‎n‎g‎,‎ ‎C‎h‎r‎i‎s‎t‎o‎p‎h‎e‎r‎ ‎C‎o‎l‎u‎m‎b‎u‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎f‎a‎g‎s‎ ‎w‎h‎o‎ ‎c‎o‎l‎o‎n‎i‎z‎e‎d‎ ‎A‎m‎e‎r‎i‎l‎a‎r‎d‎ ‎w‎e‎r‎e‎ ‎n‎o‎t‎ ‎r‎a‎p‎e‎f‎u‎g‎e‎e‎s‎,‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎t‎o‎o‎k‎ ‎t‎h‎e‎i‎r‎ ‎s‎p‎o‎i‎l‎s‎ ‎b‎y‎ ‎f‎o‎r‎c‎e‎ ‎a‎n‎d‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎n‎a‎t‎i‎v‎e‎ ‎c‎a‎p‎i‎t‎u‎l‎a‎t‎i‎o‎n‎.‎ ‎A‎ ‎r‎a‎p‎e‎f‎u‎g‎e‎e‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎h‎a‎p‎p‎e‎n‎s‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎C‎h‎a‎n‎c‎e‎l‎l‎o‎r‎ ‎o‎f‎ ‎y‎o‎u‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎i‎s‎ ‎a‎ ‎w‎o‎m‎a‎n‎.‎ ‎R‎a‎p‎e‎f‎u‎g‎e‎e‎s‎ ‎a‎r‎e‎ ‎a‎ ‎l‎u‎l‎z‎y‎ ‎r‎e‎s‎u‎l‎t‎ ‎o‎f‎ ‎l‎i‎b‎e‎r‎a‎l‎i‎s‎m‎ ‎a‎n‎d‎ ‎t‎o‎l‎e‎r‎a‎n‎c‎e‎ ‎a‎n‎d‎ ‎m‎u‎l‎t‎i‎c‎u‎l‎t‎u‎r‎a‎l‎i‎s‎m‎ ‎a‎n‎d‎ ‎p‎r‎o‎-‎i‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎o‎p‎e‎n‎ ‎b‎o‎r‎d‎e‎r‎ ‎p‎o‎l‎i‎c‎i‎e‎s‎.‎ ‎B‎y‎ ‎l‎e‎t‎t‎i‎n‎g‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎f‎o‎r‎e‎i‎g‎n‎e‎r‎s‎ ‎a‎n‎d‎ ‎i‎m‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎i‎n‎t‎o‎ ‎y‎o‎u‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎,‎ ‎w‎h‎a‎t‎'‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎ ‎t‎h‎a‎t‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎p‎p‎e‎n‎?‎ ‎O‎h‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎k‎n‎o‎w‎,‎ ‎j‎u‎s‎t‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎v‎i‎o‎l‎e‎n‎t‎ ‎g‎a‎n‎g‎ ‎r‎a‎p‎e‎s‎ ‎b‎y‎ ‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎r‎a‎p‎i‎n‎g‎ ‎a‎l‎l‎ ‎y‎o‎u‎r‎ ‎w‎h‎i‎t‎e‎ ‎w‎o‎m‎e‎n‎ ‎o‎n‎ ‎N‎e‎w‎ ‎Y‎e‎a‎r‎'‎s‎ ‎E‎v‎e‎ ‎2‎0‎1‎5‎.‎ ‎T‎h‎e‎ ‎r‎o‎v‎i‎n‎g‎ ‎r‎a‎p‎e‎ ‎g‎a‎n‎g‎s‎ ‎h‎a‎d‎ ‎m‎u‎c‎h‎ ‎s‎u‎c‎c‎e‎s‎s‎ ‎i‎n‎ ‎C‎o‎l‎o‎g‎n‎e‎,‎ ‎G‎e‎r‎m‎a‎n‎y‎,‎ ‎e‎v‎e‎r‎y‎ ‎m‎a‎j‎o‎r‎ ‎G‎e‎r‎m‎a‎n‎ ‎C‎i‎t‎y‎,‎ ‎S‎w‎i‎t‎z‎e‎r‎l‎a‎n‎d‎,‎ ‎S‎w‎e‎d‎e‎n‎,‎ ‎F‎i‎n‎l‎a‎n‎d‎,‎ ‎F‎r‎a‎n‎c‎e‎,‎ ‎a‎n‎d‎ ‎A‎u‎s‎t‎r‎i‎a‎,‎ ‎s‎i‎n‎c‎e‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎k‎n‎o‎w‎s‎ ‎w‎h‎i‎t‎e‎ ‎w‎o‎m‎e‎n‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎a‎t‎t‎r‎a‎c‎t‎i‎v‎e‎ ‎p‎e‎o‎p‎l‎e‎.‎

(‎(‎ ‎H‎I‎D‎E‎ ‎Y‎O‎U‎R‎ ‎W‎O‎M‎E‎N‎F‎O‎L‎K‎,‎ ‎F‎R‎I‎T‎Z‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎A‎l‎r‎i‎g‎h‎t‎ ‎h‎e‎r‎e‎'‎s‎ ‎A‎n‎g‎l‎i‎n‎.‎

B‎u‎l‎b‎o‎u‎s‎ ‎S‎c‎u‎m‎-‎S‎u‎c‎k‎e‎r‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎F‎a‎l‎s‎e‎l‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎J‎o‎e‎ ‎B‎r‎a‎n‎d‎o‎n‎ ‎W‎o‎n‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎A‎u‎g‎u‎s‎t‎ ‎8‎,‎ ‎2‎0‎2‎3‎

D‎e‎s‎a‎n‎t‎i‎s‎ ‎j‎u‎s‎t‎ ‎s‎a‎i‎d‎ ‎T‎r‎u‎m‎p‎ ‎l‎o‎s‎t‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎

H‎e‎ ‎c‎h‎o‎s‎e‎ ‎t‎h‎e‎ ‎D‎C‎ ‎c‎o‎n‎s‎u‎l‎t‎a‎n‎t‎s‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎7‎0‎%‎ ‎o‎f‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎w‎h‎o‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎T‎r‎u‎m‎p‎ ‎w‎o‎n‎

H‎i‎s‎ ‎c‎a‎r‎e‎e‎r‎ ‎i‎s‎ ‎f‎i‎n‎i‎s‎h‎e‎d‎ ‎a‎n‎d‎ ‎i‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎p‎i‎c‎.‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎c‎x‎j‎X‎e‎C‎5‎d‎S‎y‎

—‎ ‎j‎o‎h‎n‎n‎y‎ ‎m‎a‎g‎a‎ ‎(‎@‎_‎j‎o‎h‎n‎n‎y‎m‎a‎g‎a‎)‎ ‎A‎u‎g‎u‎s‎t‎ ‎7‎,‎ ‎2‎0‎2‎3‎

M‎e‎a‎t‎b‎a‎l‎l‎ ‎“‎R‎o‎n‎”‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎c‎l‎a‎i‎m‎e‎d‎ ‎o‎n‎ ‎M‎o‎n‎d‎a‎y‎ ‎t‎h‎a‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎w‎o‎n‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎.‎

T‎h‎i‎s‎ ‎p‎r‎e‎t‎t‎y‎ ‎w‎e‎l‎l‎ ‎s‎e‎a‎l‎s‎ ‎h‎i‎s‎ ‎f‎a‎t‎e‎ ‎–‎ ‎a‎s‎ ‎i‎f‎ ‎i‎t‎ ‎w‎a‎s‎n‎’‎t‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎s‎e‎a‎l‎e‎d‎.‎

T‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎v‎e‎r‎y‎ ‎b‎i‎g‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎c‎e‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎h‎o‎w‎ ‎t‎h‎i‎s‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎o‎u‎t‎:‎

“‎I‎’‎m‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎T‎r‎u‎m‎p‎,‎ ‎e‎x‎c‎e‎p‎t‎ ‎I‎’‎m‎ ‎y‎o‎u‎n‎g‎e‎r‎ ‎a‎n‎d‎ ‎m‎o‎r‎e‎ ‎c‎o‎m‎p‎e‎t‎e‎n‎t‎.‎ ‎I‎ ‎l‎i‎k‎e‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎o‎,‎ ‎a‎n‎d‎ ‎a‎g‎r‎e‎e‎ ‎w‎i‎t‎h‎ ‎h‎i‎m‎ ‎o‎n‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎,‎ ‎b‎u‎t‎ ‎v‎o‎t‎e‎ ‎f‎o‎r‎ ‎m‎e‎ ‎a‎n‎d‎ ‎I‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎m‎o‎r‎e‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎ ‎a‎t‎ ‎i‎m‎p‎l‎e‎m‎e‎n‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎a‎g‎e‎n‎d‎a‎ ‎t‎h‎a‎n‎ ‎T‎r‎u‎m‎p‎ ‎w‎a‎s‎.‎”‎

A‎n‎d‎ ‎h‎o‎w‎ ‎i‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎:‎

“‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎a‎r‎e‎ ‎r‎i‎g‎h‎t‎ ‎–‎ ‎I‎ ‎c‎o‎n‎d‎e‎m‎n‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎d‎a‎n‎g‎e‎r‎o‎u‎s‎ ‎c‎o‎n‎s‎p‎i‎r‎a‎c‎y‎ ‎t‎h‎e‎o‎r‎i‎e‎s‎.‎ ‎W‎e‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎e‎m‎b‎r‎a‎c‎e‎ ‎t‎h‎e‎ ‎v‎a‎l‎u‎e‎s‎ ‎o‎f‎ ‎o‎u‎r‎ ‎d‎e‎m‎o‎c‎r‎a‎c‎y‎.‎”‎

Y‎o‎u‎ ‎w‎o‎u‎l‎d‎n‎’‎t‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎i‎s‎ ‎g‎u‎y‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎n‎y‎ ‎w‎o‎r‎s‎e‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎r‎e‎ ‎y‎o‎u‎ ‎g‎o‎.‎

I‎ ‎d‎o‎n‎’‎t‎ ‎e‎v‎e‎n‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎h‎o‎w‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎l‎i‎k‎e‎ ‎t‎h‎i‎s‎ ‎h‎a‎p‎p‎e‎n‎s‎.‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎s‎u‎r‎e‎l‎y‎ ‎n‎o‎ ‎s‎i‎n‎g‎l‎e‎ ‎a‎d‎v‎i‎s‎o‎r‎,‎ ‎a‎n‎y‎w‎h‎e‎r‎e‎,‎ ‎w‎h‎o‎ ‎w‎o‎u‎l‎d‎ ‎t‎e‎l‎l‎ ‎h‎i‎m‎ ‎h‎e‎ ‎c‎o‎u‎l‎d‎ ‎b‎e‎c‎o‎m‎e‎ ‎m‎o‎r‎e‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎b‎y‎ ‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎w‎a‎s‎ ‎l‎e‎g‎i‎t‎i‎m‎a‎t‎e‎.‎

D‎i‎d‎ ‎h‎e‎ ‎j‎u‎s‎t‎ ‎d‎o‎ ‎t‎h‎i‎s‎ ‎a‎s‎ ‎a‎ ‎s‎p‎u‎r‎-‎o‎f‎-‎t‎h‎e‎-‎m‎o‎m‎e‎n‎t‎ ‎t‎h‎i‎n‎g‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎v‎i‎e‎w‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎h‎e‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎i‎n‎c‎o‎m‎p‎e‎t‎e‎n‎t‎ ‎a‎n‎d‎ ‎a‎n‎t‎i‎-‎s‎o‎c‎i‎a‎l‎?‎

E‎i‎t‎h‎e‎r‎ ‎w‎a‎y‎,‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎1‎0‎0‎%‎ ‎c‎h‎a‎n‎c‎e‎ ‎h‎e‎ ‎i‎s‎ ‎n‎o‎w‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎t‎r‎y‎ ‎t‎o‎ ‎d‎o‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎c‎o‎r‎r‎e‎c‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎e‎x‎p‎l‎a‎i‎n‎,‎ ‎i‎n‎ ‎s‎o‎m‎e‎ ‎w‎a‎y‎,‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎d‎i‎d‎n‎’‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎m‎e‎a‎n‎ ‎w‎h‎a‎t‎ ‎h‎e‎ ‎s‎a‎i‎d‎.‎

H‎o‎w‎e‎v‎e‎r‎,‎ ‎w‎h‎a‎t‎ ‎t‎h‎a‎t‎ ‎d‎o‎e‎s‎ ‎i‎s‎ ‎r‎e‎m‎o‎v‎e‎ ‎h‎i‎s‎ ‎a‎b‎i‎l‎i‎t‎y‎ ‎t‎o‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎b‎e‎ ‎v‎a‎g‎u‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎s‎s‎u‎e‎.‎ ‎T‎h‎e‎ ‎b‎e‎s‎t‎ ‎p‎l‎a‎y‎ ‎–‎ ‎t‎h‎e‎ ‎v‎e‎r‎y‎ ‎o‎b‎v‎i‎o‎u‎s‎ ‎p‎l‎a‎y‎,‎ ‎w‎h‎i‎c‎h‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎a‎n‎y‎o‎n‎e‎ ‎w‎o‎u‎l‎d‎ ‎a‎d‎v‎i‎s‎e‎ ‎h‎i‎m‎ ‎t‎o‎ ‎d‎o‎ ‎–‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎t‎o‎ ‎s‎a‎y‎:‎

“‎L‎o‎o‎k‎,‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎l‎e‎g‎i‎t‎i‎m‎a‎t‎e‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎s‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎w‎h‎e‎n‎ ‎I‎’‎m‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎,‎ ‎I‎’‎m‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎p‎u‎t‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎a‎ ‎c‎o‎m‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎o‎ ‎l‎o‎o‎k‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎i‎r‎r‎e‎g‎u‎l‎a‎r‎i‎t‎i‎e‎s‎ ‎o‎f‎ ‎t‎h‎a‎t‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎g‎e‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎b‎o‎t‎t‎o‎m‎ ‎o‎f‎ ‎w‎h‎a‎t‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎.‎”‎

V‎e‎r‎y‎,‎ ‎v‎e‎r‎y‎ ‎s‎i‎m‎p‎l‎e‎.‎ ‎A‎n‎d‎ ‎i‎t‎ ‎i‎s‎ ‎a‎ ‎v‎e‎r‎y‎ ‎e‎a‎s‎y‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎h‎o‎l‎d‎ ‎–‎ ‎i‎f‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎p‎r‎e‎s‎s‎e‎d‎,‎ ‎j‎u‎s‎t‎ ‎k‎e‎e‎p‎ ‎r‎e‎p‎e‎a‎t‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎t‎h‎i‎n‎k‎ ‎i‎t‎ ‎n‎e‎e‎d‎s‎ ‎i‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎d‎.‎ ‎Y‎o‎u‎ ‎d‎o‎n‎’‎t‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎s‎a‎y‎ ‎“‎i‎t‎ ‎w‎a‎s‎ ‎f‎r‎a‎u‎d‎,‎”‎ ‎y‎o‎u‎ ‎j‎u‎s‎t‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎y‎o‎u‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎a‎t‎,‎ ‎a‎n‎d‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎r‎e‎c‎k‎o‎n‎i‎n‎g‎.‎

I‎n‎s‎t‎e‎a‎d‎ ‎h‎e‎ ‎g‎o‎e‎s‎ ‎o‎u‎t‎ ‎t‎h‎e‎r‎e‎,‎ ‎g‎e‎t‎s‎ ‎p‎r‎e‎s‎s‎e‎d‎,‎ ‎a‎n‎d‎ ‎s‎a‎y‎s‎ ‎“‎t‎h‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎a‎r‎e‎ ‎r‎i‎g‎h‎t‎ ‎–‎ ‎i‎t‎’‎s‎ ‎a‎l‎l‎ ‎r‎e‎a‎l‎!‎”‎

T‎h‎e‎ ‎m‎o‎s‎t‎ ‎a‎s‎t‎o‎n‎i‎s‎h‎i‎n‎g‎ ‎t‎h‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎M‎e‎a‎t‎b‎a‎l‎l‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎h‎o‎w‎ ‎i‎n‎c‎o‎m‎p‎e‎t‎e‎n‎t‎ ‎h‎e‎ ‎i‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎l‎i‎k‎e‎,‎ ‎w‎h‎e‎n‎e‎v‎e‎r‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎m‎o‎v‎e‎s‎ ‎h‎e‎ ‎c‎o‎u‎l‎d‎ ‎m‎a‎k‎e‎,‎ ‎h‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎m‎a‎k‎e‎s‎ ‎t‎h‎e‎ ‎w‎r‎o‎n‎g‎ ‎o‎n‎e‎.‎

D‎e‎S‎a‎n‎t‎i‎s‎ ‎k‎n‎o‎w‎s‎ ‎f‎o‎r‎ ‎a‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎m‎a‎i‎l‎-‎i‎n‎ ‎b‎a‎l‎l‎o‎t‎s‎ ‎c‎a‎u‎s‎e‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎l‎e‎a‎n‎,‎ ‎d‎r‎a‎s‎t‎i‎c‎a‎l‎l‎y‎,‎ ‎t‎o‎w‎a‎r‎d‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎.‎ ‎E‎v‎e‎n‎ ‎i‎f‎ ‎y‎o‎u‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎d‎o‎n‎’‎t‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎f‎r‎a‎u‎d‎,‎ ‎h‎e‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎p‎r‎o‎v‎e‎d‎ ‎t‎h‎i‎s‎ ‎i‎n‎ ‎2‎0‎2‎2‎,‎ ‎w‎h‎e‎n‎ ‎h‎e‎ ‎b‎a‎n‎n‎e‎d‎ ‎m‎a‎i‎l‎-‎i‎n‎ ‎b‎a‎l‎l‎o‎t‎s‎ ‎a‎n‎d‎ ‎n‎o‎t‎ ‎o‎n‎l‎y‎ ‎h‎e‎,‎ ‎b‎u‎t‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎a‎t‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎ ‎l‎e‎v‎e‎l‎,‎ ‎w‎o‎n‎ ‎b‎y‎ ‎i‎n‎c‎r‎e‎d‎i‎b‎l‎e‎ ‎m‎a‎r‎g‎i‎n‎s‎,‎ ‎v‎a‎s‎t‎l‎y‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎t‎h‎a‎n‎ ‎t‎h‎o‎s‎e‎ ‎i‎n‎ ‎s‎t‎a‎t‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎m‎a‎i‎l‎-‎i‎n‎ ‎b‎a‎l‎l‎o‎t‎s‎.‎

H‎i‎s‎ ‎a‎n‎t‎i‎-‎m‎a‎i‎l‎-‎i‎n‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎i‎s‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎a‎ ‎r‎e‎a‎l‎l‎y‎ ‎g‎o‎o‎d‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎p‎o‎i‎n‎t‎.‎ ‎I‎f‎ ‎h‎e‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎a‎t‎t‎a‎c‎k‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎,‎ ‎h‎e‎ ‎c‎o‎u‎l‎d‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎s‎a‎y‎ ‎“‎T‎r‎u‎m‎p‎ ‎s‎h‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎d‎o‎n‎e‎ ‎m‎o‎r‎e‎ ‎t‎o‎ ‎s‎t‎o‎p‎ ‎m‎a‎i‎l‎-‎i‎n‎ ‎b‎a‎l‎l‎o‎t‎s‎ ‎–‎ ‎I‎ ‎s‎t‎o‎p‎p‎e‎d‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎i‎n‎ ‎2‎0‎2‎2‎,‎ ‎b‎u‎t‎ ‎T‎r‎u‎m‎p‎ ‎w‎a‎s‎ ‎a‎l‎l‎o‎w‎i‎n‎g‎ ‎F‎a‎u‎c‎i‎ ‎t‎o‎ ‎r‎u‎n‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎.‎”‎

T‎h‎i‎s‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎a‎l‎l‎ ‎o‎b‎v‎i‎o‎u‎s‎.‎

M‎a‎y‎b‎e‎ ‎I‎’‎m‎ ‎v‎e‎r‎y‎ ‎s‎m‎a‎r‎t‎.‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎I‎ ‎a‎m‎ ‎r‎e‎a‎s‎o‎n‎a‎b‎l‎y‎ ‎s‎m‎a‎r‎t‎.‎ ‎B‎u‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎s‎t‎u‎f‎f‎ ‎t‎h‎a‎t‎ ‎a‎n‎y‎ ‎m‎o‎r‎o‎n‎ ‎c‎o‎u‎l‎d‎ ‎f‎i‎g‎u‎r‎e‎ ‎o‎u‎t‎.‎

T‎h‎a‎t‎’‎s‎ ‎t‎h‎e‎ ‎i‎s‎s‎u‎e‎:‎ ‎M‎e‎a‎t‎b‎a‎l‎l‎ ‎R‎o‎n‎ ‎i‎s‎ ‎n‎o‎t‎ ‎j‎u‎s‎t‎ ‎a‎n‎y‎ ‎m‎o‎r‎o‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎ ‎K‎á‎r‎m‎á‎n‎ ‎v‎o‎r‎t‎e‎x‎ ‎s‎t‎r‎e‎e‎t‎ ‎i‎s‎ ‎a‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎i‎n‎ ‎f‎l‎u‎i‎d‎ ‎d‎y‎n‎a‎m‎i‎c‎s‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎a‎ ‎r‎e‎p‎e‎a‎t‎i‎n‎g‎ ‎p‎a‎t‎t‎e‎r‎n‎ ‎o‎f‎ ‎s‎w‎i‎r‎l‎i‎n‎g‎ ‎v‎o‎r‎t‎i‎c‎e‎s‎,‎ ‎c‎a‎u‎s‎e‎d‎ ‎b‎y‎ ‎v‎o‎r‎t‎e‎x‎ ‎s‎h‎e‎d‎d‎i‎n‎g‎,‎ ‎i‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎u‎n‎s‎t‎e‎a‎d‎y‎ ‎f‎l‎o‎w‎ ‎s‎e‎p‎a‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎f‎l‎u‎i‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎b‎l‎u‎n‎t‎ ‎b‎o‎d‎i‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎n‎a‎m‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎H‎u‎n‎g‎a‎r‎i‎a‎n‎-‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎e‎n‎g‎i‎n‎e‎e‎r‎ ‎a‎n‎d‎ ‎f‎l‎u‎i‎d‎ ‎d‎y‎n‎a‎m‎i‎c‎i‎s‎t‎ ‎T‎h‎e‎o‎d‎o‎r‎e‎ ‎v‎o‎n‎ ‎K‎á‎r‎m‎á‎n‎.‎ ‎T‎h‎i‎s‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎i‎m‎a‎g‎e‎,‎ ‎t‎a‎k‎e‎n‎ ‎b‎y‎ ‎N‎A‎S‎A‎'‎s‎ ‎L‎a‎n‎d‎s‎a‎t‎ ‎7‎ ‎i‎n‎ ‎1‎9‎9‎9‎,‎ ‎s‎h‎o‎w‎s‎ ‎a‎ ‎K‎á‎r‎m‎á‎n‎ ‎v‎o‎r‎t‎e‎x‎ ‎s‎t‎r‎e‎e‎t‎ ‎c‎a‎u‎s‎e‎d‎ ‎b‎y‎ ‎w‎i‎n‎d‎ ‎f‎l‎o‎w‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎J‎u‎a‎n‎ ‎F‎e‎r‎n‎á‎n‎d‎e‎z‎ ‎I‎s‎l‎a‎n‎d‎s‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎C‎h‎i‎l‎e‎a‎n‎ ‎c‎o‎a‎s‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎o‎u‎t‎h‎ ‎P‎a‎c‎i‎f‎i‎c‎ ‎O‎c‎e‎a‎n‎.‎ ‎T‎h‎e‎ ‎f‎l‎o‎w‎ ‎o‎f‎ ‎a‎t‎m‎o‎s‎p‎h‎e‎r‎i‎c‎ ‎a‎i‎r‎ ‎o‎v‎e‎r‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎i‎s‎l‎a‎n‎d‎s‎ ‎c‎a‎n‎ ‎c‎a‎u‎s‎e‎ ‎v‎i‎s‎i‎b‎l‎e‎ ‎v‎o‎r‎t‎e‎x‎ ‎s‎t‎r‎e‎e‎t‎s‎ ‎w‎h‎e‎n‎ ‎a‎ ‎c‎l‎o‎u‎d‎ ‎l‎a‎y‎e‎r‎ ‎i‎s‎ ‎p‎r‎e‎s‎e‎n‎t‎ ‎a‎t‎ ‎a‎ ‎c‎e‎r‎t‎a‎i‎n‎ ‎a‎l‎t‎i‎t‎u‎d‎e‎.‎ ‎I‎t‎ ‎c‎a‎n‎ ‎r‎e‎a‎c‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎4‎0‎0‎ ‎k‎i‎l‎o‎m‎e‎t‎r‎e‎s‎ ‎(‎2‎5‎0‎ ‎m‎i‎l‎e‎s‎)‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎ ‎i‎n‎ ‎s‎u‎c‎h‎ ‎c‎a‎s‎e‎s‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎v‎o‎r‎t‎e‎x‎ ‎d‎i‎a‎m‎e‎t‎e‎r‎ ‎o‎f‎ ‎2‎0‎ ‎t‎o‎ ‎4‎0‎ ‎k‎m‎ ‎(‎1‎2‎ ‎t‎o‎ ‎2‎5‎ ‎m‎i‎)‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎R‎o‎b‎e‎r‎t‎ ‎C‎a‎h‎a‎l‎a‎n‎,‎ ‎N‎A‎S‎A‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎o‎n‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎o‎s‎e‎ ‎k‎i‎d‎d‎i‎e‎ ‎r‎i‎d‎e‎s‎ ‎a‎t‎ ‎W‎a‎l‎m‎a‎r‎t‎.‎"
CPB7RBdK,Voxel Pro Bootup,genericPaster,Bash,Friday 11th of August 2023 08:20:55 AM CDT,"usb 1-1.2: USB disconnect, device number 4
[  182.060186] usb 1-1.2: new high-speed USB device number 6 using sunxi-ehci
[  182.175225] scsi1 : usb-storage 1-1.2:1.0
[  183.342666] scsi 1:0:0:0: Direct-Access     USB      Flash Disk       1100 PQ: 0 ANSI: 4
[  183.356114] sd 1:0:0:0: [sda] 7866368 512-byte logical blocks: (4.02 GB/3.75 GiB)
[  183.367580] sd 1:0:0:0: [sda] Write Protect is off
[  183.374470] sd 1:0:0:0: [sda] No Caching mode page present
[  183.380746] sd 1:0:0:0: [sda] Assuming drive cache: write through
[  183.392879] sd 1:0:0:0: [sda] No Caching mode page present
[  183.399132] sd 1:0:0:0: [sda] Assuming drive cache: write through
[  183.407740]  sda: sda1
[  183.414301] FAT-fs (sda1): utf8 is not a recommended IO charset for FAT filesystems, filesystem will be case sensitive!
[  183.431598] sd 1:0:0:0: [sda] No Caching mode page present
[  183.437940] sd 1:0:0:0: [sda] Assuming drive cache: write through
[  183.444947] sd 1:0:0:0: [sda] Attached SCSI removable disk
[    0.000000] Booting Linux on physical CPU 0
[    0.000000] Linux version 3.4.39+ (zhanglei@ubuntu Revision:543) (gcc version 4.9.4 (Linaro GCC 4.9-2017.01) ) #8 Fri Apr 22 10:27:17 CST 2022
[    0.000000] CPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine: sun8i
[    0.000000] Memory policy: ECC disabled, Data cache writeback
[    0.000000] script_init enter!
[    0.000000] script_init exit!
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16256
[    0.000000] Kernel command line: console=ttyS0,115200 panic=5 rootwait rootfstype=ext4 root=/dev/mmcblk0p2 init=linuxrc earlyprintk rw
[    0.000000] PID hash table entries: 256 (order: -2, 1024 bytes)
[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)
[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Memory: 64MB = 64MB total
[    0.000000] Memory: 56652k/56652k available, 8884k reserved, 0K highmem
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
[    0.000000]     vmalloc : 0xc4800000 - 0xff000000   ( 936 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xc4000000   (  64 MB)
[    0.000000]     modules : 0xbf000000 - 0xc0000000   (  16 MB)
[    0.000000]       .text : 0xc0008000 - 0xc0588000   (5632 kB)
[    0.000000]       .init : 0xc0588000 - 0xc060b000   ( 524 kB)
[    0.000000]       .data : 0xc060c000 - 0xc0654bd0   ( 291 kB)
[    0.000000]        .bss : 0xc0654bf4 - 0xc06eaa44   ( 600 kB)
[    0.000000] NR_IRQS:544
[    0.000000] 524 ahb1 set parent pll_periph0d2
[    0.000000] Architected local timer running at 24.00MHz.
[    0.000000] Switching to timer-based delay loop
[    0.000000] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956ms
[    0.000000] Console: colour dummy device 80x30
[    0.000158] Calibrating delay loop (skipped), value calculated using timer frequency.. 4800.00 BogoMIPS (lpj=24000000)
[    0.000181] pid_max: default: 32768 minimum: 301
[    0.000327] Mount-cache hash table entries: 512
[    0.000843] CPU: Testing write buffer coherency: ok
[    0.001102] Setting up static identity map for 0x403d0530 - 0x403d0588
[    0.001751] devtmpfs: initialized
[    0.003515] pinctrl core: initialized pinctrl subsystem
[    0.004023] NET: Registered protocol family 16
[    0.004376] DMA: preallocated 128 KiB pool for atomic coherent allocations
[    0.004423] script_sysfs_init success
[    0.005184] gpiochip_add: registered GPIOs 0 to 223 on device: sunxi-pinctrl
[    0.005648] sunxi-pinctrl sunxi-pinctrl: initialized sunXi PIO driver
[    0.006406] touchscreen device registered
[    0.006697] [sunxi-module]: [sunxi-module.0] probe success
[    0.006943] script config pll_isp to 360 Mhz
[    0.006975] Not Found clk pll_video in script
[    0.006987] script config pll_ve to 360 Mhz
[    0.007006] Not Found clk pll_periph0 in script
[    0.007015] Not Found clk pll_de in script
[    0.007021] sunxi_default_clk_init
[    0.007028] try to set pll6ahb1 to 200000000
[    0.007040] Error not get clk pll6ahb1
[    0.007052] Error not get clk pll6ahb1try to set ahb1 to 200000000
[    0.007071] try to set apb1 to 100000000
[    0.007331] ===fe3o4==== sunxi_root_procfs_attach ret:0
[    0.011606] bio: create slab <bio-0> at 0
[    0.011868] pwm module init!
[    0.013953] SCSI subsystem initialized
[    0.014188] usbcore: registered new interface driver usbfs
[    0.014259] usbcore: registered new interface driver hub
[    0.014409] usbcore: registered new device driver usb
[    0.014535] twi_chan_cfg()345 - [twi0]:sunxi_i2c_platform_data.frequency == 100000
[    0.014548] twi_chan_cfg()353 - [twi0] has no twi_regulator.
[    0.014559] twi_chan_cfg()342 - [twi1] has no twi_speed!
[    0.014568] twi_chan_cfg()353 - [twi1] has no twi_regulator.
[    0.015272] axp20_board 0-0034: AXP (CHIP ID: 0x41) detected
[    0.224601] Linux video capture interface: v2.00
[    0.230365] gpiochip_add: registered GPIOs 1024 to 1028 on device: axp_pin
[    0.230548] Advanced Linux Sound Architecture Driver Version 1.0.25.
[    0.231479] cfg80211: Calling CRDA to update world regulatory domain
[    0.232592] Switching to clocksource arch_sys_counter
[    0.238613] NET: Registered protocol family 2
[    0.238874] IP route cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.239269] TCP established hash table entries: 2048 (order: 2, 16384 bytes)
[    0.239320] TCP bind hash table entries: 2048 (order: 1, 8192 bytes)
[    0.239350] TCP: Hash tables configured (established 2048 bind 2048)
[    0.239361] TCP: reno registered
[    0.239373] UDP hash table entries: 256 (order: 0, 4096 bytes)
[    0.239395] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
[    0.239652] NET: Registered protocol family 1
[    0.240072] RPC: Registered named UNIX socket transport module.
[    0.240088] RPC: Registered udp transport module.
[    0.240096] RPC: Registered tcp transport module.
[    0.240103] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.240344] [pm]aw_pm_init!
[    0.240361] standby_mode = 1.
[    0.240368] wakeup src cnt is : 3.
[    0.240381] pmu name: pmu1_para .
[    0.240392] pmu1_enable = 0x1.
[    0.240399] pmux_id = 0x1.
[    0.240423] add_sys_pwr_dm: get ldo name failed
[    0.240432] add_sys_pwr_dm: get ldo name failed
[    0.241019] add_sys_pwr_dm: get ldo name failed
[    0.241029] add_sys_pwr_dm: get ldo name failed
[    0.241039] add_sys_pwr_dm: get ldo name failed
[    0.241048] add_sys_pwr_dm: get ldo name failed
[    0.241596] add_sys_pwr_dm: get ldo name failed
[    0.242131] after inited: sys_mask config = 0x4810.
[    0.242141] dynamic_standby enalbe = 0x0.
[    0.242219] sunxi_reg_init enter
[    0.244390] msgmni has been set to 110
[    0.244949] io scheduler noop registered
[    0.244960] io scheduler deadline registered
[    0.245044] io scheduler cfq registered (default)
[    0.245426] [DISP]disp_module_init
[    0.245800] cmdline,disp=
[    0.246307] rotation_sw module is config as no used
[    0.246339] [DISP] disp_get_rotation_sw,line:68:disp 0 out of range? g_rot_sw=0
[    0.246353] [DISP] disp_init_connections,line:289:NULL pointer: 0, 0
[    0.246469] Fb_map_video_memory(reserve), pa=0x43f00000 size:0xbb800
[    0.247554] [DISP] Fb_map_kernel_logo,line:924:Fb_map_kernel_logo failed!
[    0.253021] Console: switching to colour frame buffer device 100x30
[    0.262682] [DISP] lcd_clk_config,line:886:disp 0, clk: pll(400000000),clk(200000000),dclk(20000000) dsi_rate(400000000)
[    0.262706]      clk real:pll(402000000),clk(201000000),dclk(20100000) dsi_rate(0)
[    0.262877] [DISP]disp_module_init finish
[    0.263120] sw_uart_get_devinfo()1503 - uart0 has no uart_regulator.
[    0.263136] sw_uart_get_devinfo()1503 - uart1 has no uart_regulator.
[    0.263150] sw_uart_get_devinfo()1503 - uart2 has no uart_regulator.
[    0.263617] uart0: ttyS1 at MMIO 0x1c28000 (irq = 32) is a SUNXI
[    0.264008] uart1: ttyS2 at MMIO 0x1c28400 (irq = 33) is a SUNXI
[    0.264281] uart2: ttyS0 at MMIO 0x1c28800 (irq = 34) is a SUNXI
[    0.264294] sw_uart_pm()890 - uart2 clk is already enable
[    0.264311] sw_console_setup()1233 - console setup baud 115200 parity n bits 8, flow n
[    0.418844] console [ttyS0] enabled
[    1.001291] sunxi_spi_chan_cfg()1378 - [spi-0] has no spi_regulator.
[    1.008356] sunxi_spi_register_spidev()1989 - Get spi devices number failed
[    1.016131] sunxi_spi_init()2075 - register spi devices board info failed
[    1.025252] Failed to alloc md5
[    1.028782] eth0: Use random mac address
[    1.033265] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.060767] sunxi-ehci sunxi-ehci.1: SW USB2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.069680] sunxi-ehci sunxi-ehci.1: new USB bus registered, assigned bus number 1
[    1.078213] sunxi-ehci sunxi-ehci.1: irq 104, io mem 0xf1c1a000
[    1.100031] sunxi-ehci sunxi-ehci.1: USB 0.0 started, EHCI 1.00
[    1.107289] hub 1-0:1.0: USB hub found
[    1.111507] hub 1-0:1.0: 1 port detected
[    1.116327] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.143334] sunxi-ohci sunxi-ohci.1: SW USB2.0 'Open' Host Controller (OHCI) Driver
[    1.151875] sunxi-ohci sunxi-ohci.1: new USB bus registered, assigned bus number 2
[    1.160317] sunxi-ohci sunxi-ohci.1: irq 105, io mem 0xf1c1a400
[    1.180703] ehci_irq: highspeed device connect
[    1.224668] hub 2-0:1.0: USB hub found
[    1.228845] hub 2-0:1.0: 1 port detected
[    1.233663] Initializing USB Mass Storage driver...
[    1.239191] usbcore: registered new interface driver usb-storage
[    1.245915] USB Mass Storage support registered.
[    1.251403] file system registered
[    1.256756] android_usb gadget: Mass Storage Function, version: 2009/09/11
[    1.264446] android_usb gadget: Number of LUNs=1
[    1.269594]  lun0: LUN: removable file: (no medium)
[    1.275450] android_usb gadget: android_usb ready
[    1.280771] TSC2007 TouchScreen Driver probe
[    1.286476] gspca_main: v2.14.0 registered
[    1.291716] usbcore: registered new interface driver uvcvideo
[    1.298090] USB Video Class driver (v1.0.8_SONiX_v2.6.36.04)
[    1.305661] sunxi_wdt_init_module: sunxi WatchDog Timer Driver v1.0
[    1.313020] sunxi_wdt_probe: devm_ioremap return wdt_reg 0xf1c20ca0, res->start 0x01c20ca0, res->end 0x01c20cbf
[    1.324278] sunxi_wdt_probe: initialized (g_timeout=16s, g_nowayout=0)
[    1.331752] wdt_enable, write reg 0xf1c20cb8 val 0x00000000
[    1.337935] wdt_set_tmout, write 0x000000b0 to mode reg 0xf1c20cb8, actual timeout 16 sec
[    1.347447] [mmc]: SD/MMC/SDIO Host Controller Driver(v1.114 2015-6-2 10:21) Compiled in Feb 21 2022 at 16:37:14
[    1.358801] [mmc]: get mmc0's sdc_power failed
[    1.363750] [mmc]: MMC host used card: 0x1, boot card: 0x1, io_card 0
[    1.371645] [mmc]: sdc0 set ios: clk 0Hz bm OD pm OFF vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.382560] [mmc]: sdc0 set ios: clk 0Hz bm PP pm UP vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.392556] usbcore: registered new interface driver usbhid
[    1.398760] usbhid: USB HID core driver
[    1.403042] [mmc]: sdc0 power_supply is null
[    1.409440] logger: created 256K log 'log_main'
[    1.414658] logger: created 32K log 'log_events'
[    1.419881] logger: created 32K log 'log_radio'
[    1.424944] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.435138] usb 1-1: new high-speed USB device number 2 using sunxi-ehci
[    1.442746] logger: created 32K log 'log_system'
[    1.449311] script_get_item return type err, consider it no ldo
[    1.455940] script_get_item return audio_pa_ctrl type err
[    1.463131] asoc: sndcodec <-> sunxi-codec mapping ok
[    1.470582] [DAUDIO]sunxi-daudio cannot find any using configuration for controllers, return directly!
[    1.481254] [I2S]snddaudio cannot find any using configuration for controllers, return directly!
[    1.491065] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 52,  RTO !!
[    1.499200] [DAUDIO0] driver not init,just return.
[    1.504776] TCP: cubic registered
[    1.508463] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 52,  RTO !!
[    1.516641] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.526862] NET: Registered protocol family 17
[    1.531837] lib80211: common routines for IEEE802.11 drivers
[    1.538255] Registering the dns_resolver key type
[    1.544907] VFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5
[    1.553462] ThumbEE CPU extension supported.
[    1.559276] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.569461] Registering SWP/SWPB emulation handler
[    1.577486] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 8,  RTO !!
[    1.585869] *******************Try sdio*******************
[    1.592812] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.601721] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.610597] ALSA device list:
[    1.613930] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.621996]   #0: audiocodec
[    1.625552] Waiting for root device /dev/mmcblk0p2...
[    1.631256] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.639316] *******************Try sd *******************
[    1.646152] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.654370] hub 1-1:1.0: USB hub found
[    1.658543] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.666962] hub 1-1:1.0: 4 ports detected
[    1.671425] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.680409] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.688538] *******************Try mmc*******************
[    1.694550] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.705624] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.715901] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.726149] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.738779] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.791220] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.814353] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.824936] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.835432] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.845867] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.856307] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.866734] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.877156] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.888825] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.899286] mmc0: new high speed MMC card at address 0001
[    1.905833] mmcblk0: mmc0:0001 08A391 7.28 GiB
[    1.911034] mmcblk0boot0: mmc0:0001 08A391 partition 1 4.00 MiB
[    1.917700] mmcblk0boot1: mmc0:0001 08A391 partition 2 4.00 MiB
[    1.925715]  mmcblk0: p1 p2 p3
[    1.930506] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.942385]  mmcblk0boot1: unknown partition table
[    1.948638] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.960461] usb 1-1.1: new high-speed USB device number 3 using sunxi-ehci
[    1.968257]  mmcblk0boot0: unknown partition table
[    1.973981] *******************mmc init ok *******************
[    2.070430] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    2.129913] EXT4-fs (mmcblk0p2): recovery complete
[    2.135629] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)
[    2.144772] VFS: Mounted root (ext4 filesystem) on device 179:2.
[    2.151992] devtmpfs: mounted
[    2.156216] Freeing init memory: 524K
[    2.180325] usb 1-1.2: new high-speed USB device number 4 using sunxi-ehci
[    2.293796] scsi0 : usb-storage 1-1.2:1.0
[    2.313232] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)
[    2.352348] EXT4-fs (mmcblk0p3): recovery complete
[    2.357687] EXT4-fs (mmcblk0p3): mounted filesystem with ordered data mode. Opts: (null)
[    2.380292] usb 1-1.3: new high-speed USB device number 5 using sunxi-ehci
Starting logging: OK
Initializing random number generator... done.
Starting network...
xxxxxxxxxxxxxx
[    2.577775] uvcvideo: Found UVC 1.00 device USB 2.0 PC Camera (058f:3841)
[    2.875443] gmac0: probed
[    2.878497] gmac0 gmac0: eth0: eth0: PHY ID 00441400 at 0 IRQ poll (gmac0-0:00)
[    2.887116] uvcvideo: Failed to query (1) UVC control 1 (unit 4) : -110 (exp. 4).
[    3.052722] RTW: module init start
[    3.056509] RTW: rtl8188fu v5.11.5-13-g2482755ff.20210615
[    3.062592] RTW: build time: Feb 25 2022 10:38:56
[    3.068330] RTW: rtw_inetaddr_notifier_register
[    3.073930] RTW:
[    3.073937] usb_endpoint_descriptor(0):
[    3.080360] RTW: bLength=7
[    3.083357] RTW: bDescriptorType=5
[    3.087145] RTW: bEndpointAddress=81
[    3.091118] RTW: wMaxPacketSize=512
[    3.094981] RTW: bInterval=0
[    3.098170] RTW: RT_usb_endpoint_is_bulk_in = 1
[    3.103199] RTW:
[    3.103203] usb_endpoint_descriptor(1):
[    3.109621] RTW: bLength=7
[    3.112628] RTW: bDescriptorType=5
[    3.116395] RTW: bEndpointAddress=2
[    3.120266] RTW: wMaxPacketSize=512
[    3.124129] RTW: bInterval=0
[    3.127319] RTW: RT_usb_endpoint_is_bulk_out = 2
[    3.132442] RTW:
[    3.132445] usb_endpoint_descriptor(2):
[    3.138822] RTW: bLength=7
[    3.141824] RTW: bDescriptorType=5
[    3.145591] RTW: bEndpointAddress=3
[    3.149455] RTW: wMaxPacketSize=512
[    3.153324] RTW: bInterval=0
[    3.156512] RTW: RT_usb_endpoint_is_bulk_out = 3
[    3.161643] RTW: nr_endpoint=3, in_num=1, out_num=2
[    3.161648]
[    3.168693] RTW: USB_SPEED_HIGH
[    3.173959] RTW: CHIP TYPE: RTL8188FU
[    3.178869] RTW: Chip Version Info: CHIP_8188F_S2_1T1R_RomVer(0)
[    3.185606] RTW: _ConfigChipOutEP_8188F OutEpQueueSel(0x05), OutEpNumber(2)
[    3.193866] RTW: EEPROM type is E-FUSE
[    3.198580] RTW: Boot from EFUSE, Autoload OK !
[    3.203877] uvcvideo: Failed to query (1) UVC control 1 (unit 4) : -110 (exp. 4).
[    3.212965] RTW: hal_EfuseSwitchToBank: Efuse switch bank to 0
[    3.346084] RTW: hal_ReadEFuse_WiFi: data end at address=0x6e
[    3.353037] RTW: HW EFUSE
[    3.355957] RTW: 0x000: 29 81 00 FC  0B 00 00 00  00 0C 04 4C  10 07 00 00
[    3.363871] RTW: 0x010: 25 25 26 26  26 26 27 27  28 28 28 03  FF FF FF FF
[    3.371802] RTW: 0x020: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.379716] RTW: 0x030: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.387605] RTW: 0x040: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.395491] RTW: 0x050: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.403383] RTW: 0x060: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.411266] RTW: 0x070: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.419140] RTW: 0x080: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.427029] RTW: 0x090: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.434912] RTW: 0x0A0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.442792] RTW: 0x0B0: FF FF FF FF  FF FF FF FF  20 20 28 00  00 00 00 FF
[    3.450860] RTW: 0x0C0: FF 12 00 10  00 FF 00 FF  00 00 FF FF  FF FF FF FF
[    3.458734] RTW: 0x0D0: DA 0B 79 F1  42 66 40 94  A4 08 23 1A  3C 09 03 52
[    3.466617] RTW: 0x0E0: 65 61 6C 74  65 6B 09 03  38 30 32 2E  31 31 6E 00
[    3.474553] RTW: 0x0F0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.482435] RTW: 0x100: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.490315] RTW: 0x110: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.498198] RTW: 0x120: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.506080] RTW: 0x130: C1 B6 FF FF  FF FF FF FF  FF FF 00 11  FF FF FF FF
[    3.513961] RTW: 0x140: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.521949] RTW: 0x150: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.529823] RTW: 0x160: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.537705] RTW: 0x170: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.545585] RTW: 0x180: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.553470] RTW: 0x190: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.561351] RTW: 0x1A0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.569224] RTW: 0x1B0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.577108] RTW: 0x1C0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.584989] RTW: 0x1D0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.592870] RTW: 0x1E0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.600759] RTW: 0x1F0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.608641] RTW: EEPROM VID = 0x bda
[    3.612608] RTW: EEPROM PID = 0xf179
[    3.616580] RTW: hal_com_config_channel_plan chplan:0x20
[    3.622486] RTW: Hal_EfuseParsePowerSavingMode_8188F...bHWPwrPindetect(0)-bHWPowerdown(0) ,bSupportRemoteWakeup(1)
[    3.633978] RTW: ### PS params=>  power_mgnt(2),usbss_enable(0) ###
[    3.641989] scsi 0:0:0:0: Direct-Access     USB      Flash Disk       1100 PQ: 0 ANSI: 4
[    3.653342] RTW: kfree Pwr Trim flag:1
[    3.657504] RTW: bb_gain:6
[    3.663674] sd 0:0:0:0: [sda] 7866368 512-byte logical blocks: (4.02 GB/3.75 GiB)
[    3.674340] RTW: rtl8188f_FirmwareDownload fw: FW_NIC, size: 20832
[    3.681271] RTW: rtl8188f_FirmwareDownload: fw_ver=f fw_subver=0001 sig=0x88f1, Month=05, Date=06, Hour=09, Minute=34
[    3.693074] RTW: rtl8188f_FirmwareDownload(): Shift for fw header!
[    3.699929] RTW: rtl8188f_FirmwareDownload by IO write!
[    3.706150] sd 0:0:0:0: [sda] Write Protect is off
[    3.712292] sd 0:0:0:0: [sda] No Caching mode page present
[    3.718410] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.730261] sd 0:0:0:0: [sda] No Caching mode page present
[    3.736390] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.744792]  sda: sda1
[    3.751172] sd 0:0:0:0: [sda] No Caching mode page present
[    3.757305] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.764154] sd 0:0:0:0: [sda] Attached SCSI removable disk
[    3.794467] RTW: polling_fwdl_chksum: Checksum report OK! (1, 0ms), REG_MCUFWDL:0x00050105
[    3.805452] RTW: _8051Reset8188: Finish
[    3.818962] RTW: _FWFreeToGo: Polling FW ready OK! (73, 10ms), REG_MCUFWDL:0x000501c6
[    3.827683] RTW: rtl8188f_FirmwareDownload: DLFW OK !
[    3.833327] RTW: rtl8188f_FirmwareDownload success. write_fw:1, 140ms
[    3.840865] RTW:  <=== rtl8188f_FirmwareDownload()
[    3.848212] RTW: CardDisableRTL8188FU
[    3.857082] RTW: hal_read_mac_hidden_rpt OK! (1, 10ms), fwdl:1, id:0x19
[    3.864463] RTW: InitAdapterVariablesByPROM_8188FU(): REPLACEMENT = 0
[    3.871656] RTW: rtw_hal_read_chip_info in 680 ms
[    3.877226] RTW: init_channel_set((null)) ChannelPlan ID:0x20, ch num:13
[    3.884728] RTW: [RF_PATH] ver_id.RF_TYPE:RF_1T1R
[    3.889962] RTW: [RF_PATH] HALSPEC's rf_reg_trx_path_bmp:0x11, rf_reg_path_avail_num:1, max_tx_cnt:1
[    3.900110] RTW: [RF_PATH] PG's trx_path_bmp:0x00, max_tx_cnt:0
[    3.906676] RTW: [RF_PATH] Registry's trx_path_bmp:0x00, tx_path_lmt:0, rx_path_lmt:0
[    3.915376] RTW: [RF_PATH] HALDATA's trx_path_bmp:0x11, max_tx_cnt:1
[    3.922539] RTW: [RF_PATH] HALDATA's rf_type:RF_1T1R, NumTotalRFPath:1
[    3.929782] RTW: rtw_hal_rfpath_init trx_path_bmp:0x11(RF_1T1R), NumTotalRFPath:1, max_tx_cnt:1
[    3.939447] RTW: [TRX_Nss] HALSPEC - tx_nss:1, rx_nss:1
[    3.945248] RTW: [TRX_Nss] Registry - tx_nss:0, rx_nss:0
[    3.951144] RTW: [TRX_Nss] HALDATA - tx_nss:1, rx_nss:1
[    3.956938] RTW: rtw_hal_trxnss_init tx_nss:1, rx_nss:1
[    3.964022] RTW: init_mlme_default_rate_set: support CCK
[    3.969927] RTW: init_mlme_default_rate_set: support OFDM
[    3.976803] RTW: NR_RECVBUFF: 8, recvbuf_nr: 8
[    3.981806] RTW: MAX_RECVBUF_SZ: 32768
[    3.986554] RTW: NR_PREALLOC_RECV_SKB: 8
[    3.991481] RTW: rtw_alloc_macid((null)) if1, mac_addr:ff:ff:ff:ff:ff:ff macid:1
[    3.999714] RTW: rtw_init_pwrctrl_priv: IPS_mode=1, LPS_mode=2, LPS_level=0
[    4.008318] RTW: IQK FW offload:disable
[    4.012635] RTW: Init_ODM_ComInfo_8188f(): Fv=0 Cv=4
[    4.018613] RTW: rtw_regsty_chk_target_tx_power_valid return _FALSE for band:0, path:0, rs:0, t:-1
[    4.028969] RTW: phy_ConfigBBWithPgParaFile(): No File PHY_REG_PG.txt, Load from HWImg Array!
[    4.038512] RTW: default power by rate loaded
[    4.043775] RTW: pwrctrlpriv.bSupportRemoteWakeup~~~~~~
[    4.049581] RTW: pwrctrlpriv.bSupportRemoteWakeup~~~[1]~~~
[    4.055762] RTW: rtw_macaddr_cfg mac addr:xxxxxxxxxxxxxx
[    4.061962] RTW: bDriverStopped:True, bSurpriseRemoved:False, bup:0, hw_init_completed:0
[    4.071261] RTW: rtw_cfg80211_init_wiphy_band:rf_type=0
[    4.077079] RTW: [HT] HAL Support STBC = 0x01
[    4.081956] RTW: rtw_wiphy_alloc(phy0)
[    4.086434] RTW: rtw_wdev_alloc(padapter=c4b50000)
[    4.092261] RTW: rtw_wiphy_register(phy0)
[    4.097141] RTW: rtw_ndev_init(wlan0) if1 mac_addr=xxxxxxxxxxxxxx
[    4.105179] RTW: rtw_ndev_notifier_call(wlan0) state:16
[    4.111849] RTW: rtw_ndev_notifier_call(wlan0) state:5
[    4.117731] usbcore: registered new interface driver rtl8188fu
[    4.124255] RTW: module init ret=0
ls: /mnt/Adventurer4*.tgz: No such file or directory
found /mnt/flashforge_init.sh
+ dirname /mnt/flashforge_init.sh
+ WORK_DIR=/mnt
+ RUN_DIR=/opt/PROGRAM
+ MACHINE=Adventurer4-VoxelPro
+ PID=0012
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ uname -r
+ CHECH_KERNEL=3.4.39+
+ [ 3.4.39+ != 3.4.39+ ]
+ [ ! -f /mnt/screwflag ]
+ [ Adventurer4-VoxelPro !=  ]
+ [ 00D1 !=  ]
+ [ Adventurer4-VoxelPro != Adventurer4-VoxelPro ]
+ [ 00D1 != 0012 ]
+ echo Firmware does not match machine type.
Firmware does not match machine type.
+ exit 1
[INFO]/opt/PROGRAM/ffstartup-arm version: 1.0.0
[DEBUG]root: /opt/PROGRAM, kernel: kernel, control: control, library: library, software: software
[INFO]version map: map[library:{2 1.2.0   []} software:{3 2.1.1   []} kernel:{0 1.4.0   []} control:{1 2.1.0   []}]
[INFO]set TSLIB_FBDEVICE: /dev/fb0 success
[INFO]set QT_QPA_GENERIC_PLUGINS: tslib success
[INFO]set TSLIB_CONSOLEDEVICE: none success
[INFO]set OPENSSL_DIR: /opt/openssl-1.0.2d success
[INFO]set QWS_MOUSE_PROTO: TSLIB:/dev/input/event0 success
[INFO]set LIBRARY_DIR: /opt/PROGRAM/library/1.2.0 success
[INFO]set FFMPEG_DIR: /opt/ffmpeg-4.0.2 success
[INFO]set LD_LIBRARY_PATH: /opt/cloud/curl-7.55.1/lib:/opt/cloud/jsoncpp/lib:/opt/cloud/boost/lib:/opt/cloud/socketio/lib:/opt/openssl-1.0.2d/lib:/opt/ffmpeg-4.0.2/lib:/opt/x264/lib:/opt/tslib-1.4/lib:/opt/qt-4.8.6/lib: success
[INFO]set TSLIB_CALIBFILE: /opt/tslib-1.4/etc/pointercal success
[INFO]set QT_QPA_PLATFORM_PLUGIN_PATH: /opt/qt-4.8.6/plugins success
[INFO]set CLOUD_DIR: /opt/cloud success
[INFO]set LD_PRELOAD: /opt/tslib-1.4/lib/libts.so success
[INFO]set QT_QWS_FONTDIR: /opt/qt-4.8.6/lib/fonts success
[INFO]set TSLIB_TSEVENTTYPE: INPUT success
[INFO]set TSLIB_CONFFILE: /opt/tslib-1.4/etc/ts.conf success
[INFO]set X264_DIR: /opt/x264 success
[INFO]set TSLIB_PLUGINDIR: /opt/tslib-1.4/lib/ts success
[INFO]set QWS_DISPLAY: transformed:rot270:LinuxFB:mmWidth156:mmHeight244:0 success
[INFO]set TSLIBDIR: /opt/tslib-1.4 success
[INFO]set WORK_DIR: /opt/PROGRAM success
[INFO]set QTDIR: /opt/qt-4.8.6 success
[INFO]set QT_QPA_PLATFORM: linuxfb:tty=/dev/fb0:size=480x854:mmsize=156x244:offset=0 success
[INFO]set PATH: /opt/cloud/curl-7.55.1/bin:/opt/openssl-1.0.2d/bin:/opt/tslib-1.4/bin:/opt/ffmpeg-4.0.2/bin:/sbin:/usr/sbin:/bin:/usr/bin success
[INFO]set TSLIB_TSDEVICE: /dev/input/event0 success
[DEBUG]Envs: [USER=root SHLVL=1 HOME=/ TERM=vt102 PATH=/opt/cloud/curl-7.55.1/bin:/opt/openssl-1.0.2d/bin:/opt/tslib-1.4/bin:/opt/ffmpeg-4.0.2/bin:/sbin:/usr/sbin:/bin:/usr/bin RUNLEVEL=earlyprintk SHELL=/bin/sh PWD=/ TSLIB_FBDEVICE=/dev/fb0 QT_QPA_GENERIC_PLUGINS=tslib TSLIB_CONSOLEDEVICE=none OPENSSL_DIR=/opt/openssl-1.0.2d QWS_MOUSE_PROTO=TSLIB:/dev/input/event0 LIBRARY_DIR=/opt/PROGRAM/library/1.2.0 FFMPEG_DIR=/opt/ffmpeg-4.0.2 LD_LIBRARY_PATH=/opt/cloud/curl-7.55.1/lib:/opt/cloud/jsoncpp/lib:/opt/cloud/boost/lib:/opt/cloud/socketio/lib:/opt/openssl-1.0.2d/lib:/opt/ffmpeg-4.0.2/lib:/opt/x264/lib:/opt/tslib-1.4/lib:/opt/qt-4.8.6/lib: TSLIB_CALIBFILE=/opt/tslib-1.4/etc/pointercal QT_QPA_PLATFORM_PLUGIN_PATH=/opt/qt-4.8.6/plugins CLOUD_DIR=/opt/cloud LD_PRELOAD=/opt/tslib-1.4/lib/libts.so QT_QWS_FONTDIR=/opt/qt-4.8.6/lib/fonts TSLIB_TSEVENTTYPE=INPUT TSLIB_CONFFILE=/opt/tslib-1.4/etc/ts.conf X264_DIR=/opt/x264 TSLIB_PLUGINDIR=/opt/tslib-1.4/lib/ts QWS_DISPLAY=transformed:rot270:LinuxFB:mmWidth156:mmHeight244:0 TSLIBDIR=/opt/tslib-1.4 WORK_DIR=/opt/PROGRAM QTDIR=/opt/qt-4.8.6 QT_QPA_PLATFORM=linuxfb:tty=/dev/fb0:size=480x854:mmsize=156x244:offset=0 TSLIB_TSDEVICE=/dev/input/event0]
[INFO]start application (/opt/PROGRAM/software/2.1.1/firmwareExe) ....
args: [-1 -D -qws]
[INFO]application (/opt/PROGRAM/software/2.1.1/firmwareExe) start success, PID (117)

Welcome to flashforge
buildroot login: Could not read calibration: ""/etc/pointercal""
argv[0]= /opt/PROGRAM/software/2.1.1/firmwareExe
argv[1]= -1
argv[2]= -D
argv[3]=
open a log
killall: udhcpc: no process killed
[   16.762066] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[   16.783035] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[   16.822107] FAT-fs (sda1): utf8 is not a recommended IO charset for FAT filesystems, filesystem will be case sensitive!
src/FileManager.cpp[168]: access[   17.158992] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
 file(/opt/camera) fail: No such file or directory
[   19.225103] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   19.242504] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   19.260605] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   19.278724] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   19.295864] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   19.314228] uvcvideo: (f:uvc_fixup_video_ctrl, l:124) format->nframes[7], format->flags[0x1] compressed, reduce video frame[640x480] size[921600]->[153600]bytes
[   26.430474] usb 1-1.2: USB disconnect, device number 4
[INFO]Process (117) run success
[DEBUG]version map: map[kernel:{0 1.4.0   []} control:{1 2.1.0   []} library:{2 1.2.0   []} software:{3 2.1.1   []}]
[DEBUG]k: software, v: {3 2.1.1   []}
[DEBUG]k: kernel, v: {0 1.4.0   []}
[DEBUG]k: control, v: {1 2.1.0   []}
[DEBUG]k: library, v: {2 1.2.0   []}
[INFO]testApplication thread end
[   62.760091] usb 1-1.2: new high-speed USB device number 6 using sunxi-ehci
[   62.875289] scsi1 : usb-storage 1-1.2:1.0
[   64.042329] scsi 1:0:0:0: Direct-Access     USB      Flash Disk       1100 PQ: 0 ANSI: 4
[   64.055927] sd 1:0:0:0: [sda] 7866368 512-byte logical blocks: (4.02 GB/3.75 GiB)
[   64.067129] sd 1:0:0:0: [sda] Write Protect is off
[   64.073913] sd 1:0:0:0: [sda] No Caching mode page present
[   64.080243] sd 1:0:0:0: [sda] Assuming drive cache: write through
[   64.092240] sd 1:0:0:0: [sda] No Caching mode page present
[   64.098494] sd 1:0:0:0: [sda] Assuming drive cache: write through
[   64.107041]  sda: sda1
[   64.113610] FAT-fs (sda1): utf8 is not a recommended IO charset for FAT filesystems, filesystem will be case sensitive!
[   64.131029] sd 1:0:0:0: [sda] No Caching mode page present
[   64.137361] sd 1:0:0:0: [sda] Assuming drive cache: write through
[   64.144367] sd 1:0:0:0: [sda] Attached SCSI removable disk
[    0.000000] Booting Linux on physical CPU 0
[    0.000000] Linux version 3.4.39+ (zhanglei@ubuntu Revision:543) (gcc version 4.9.4 (Linaro GCC 4.9-2017.01) ) #8 Fri Apr 22 10:27:17 CST 2022
[    0.000000] CPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine: sun8i
[    0.000000] Memory policy: ECC disabled, Data cache writeback
[    0.000000] script_init enter!
[    0.000000] script_init exit!
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16256
[    0.000000] Kernel command line: console=ttyS0,115200 panic=5 rootwait rootfstype=ext4 root=/dev/mmcblk0p2 init=linuxrc earlyprintk rw
[    0.000000] PID hash table entries: 256 (order: -2, 1024 bytes)
[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)
[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Memory: 64MB = 64MB total
[    0.000000] Memory: 56652k/56652k available, 8884k reserved, 0K highmem
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
[    0.000000]     vmalloc : 0xc4800000 - 0xff000000   ( 936 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xc4000000   (  64 MB)
[    0.000000]     modules : 0xbf000000 - 0xc0000000   (  16 MB)
[    0.000000]       .text : 0xc0008000 - 0xc0588000   (5632 kB)
[    0.000000]       .init : 0xc0588000 - 0xc060b000   ( 524 kB)
[    0.000000]       .data : 0xc060c000 - 0xc0654bd0   ( 291 kB)
[    0.000000]        .bss : 0xc0654bf4 - 0xc06eaa44   ( 600 kB)
[    0.000000] NR_IRQS:544
[    0.000000] 524 ahb1 set parent pll_periph0d2
[    0.000000] Architected local timer running at 24.00MHz.
[    0.000000] Switching to timer-based delay loop
[    0.000000] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 178956ms
[    0.000000] Console: colour dummy device 80x30
[    0.000159] Calibrating delay loop (skipped), value calculated using timer frequency.. 4800.00 BogoMIPS (lpj=24000000)
[    0.000182] pid_max: default: 32768 minimum: 301
[    0.000333] Mount-cache hash table entries: 512
[    0.000852] CPU: Testing write buffer coherency: ok
[    0.001116] Setting up static identity map for 0x403d0530 - 0x403d0588
[    0.001769] devtmpfs: initialized
[    0.003514] pinctrl core: initialized pinctrl subsystem
[    0.004014] NET: Registered protocol family 16
[    0.004365] DMA: preallocated 128 KiB pool for atomic coherent allocations
[    0.004414] script_sysfs_init success
[    0.005168] gpiochip_add: registered GPIOs 0 to 223 on device: sunxi-pinctrl
[    0.005638] sunxi-pinctrl sunxi-pinctrl: initialized sunXi PIO driver
[    0.006386] touchscreen device registered
[    0.006672] [sunxi-module]: [sunxi-module.0] probe success
[    0.006923] script config pll_isp to 360 Mhz
[    0.006958] Not Found clk pll_video in script
[    0.006971] script config pll_ve to 360 Mhz
[    0.006989] Not Found clk pll_periph0 in script
[    0.006997] Not Found clk pll_de in script
[    0.007003] sunxi_default_clk_init
[    0.007009] try to set pll6ahb1 to 200000000
[    0.007019] Error not get clk pll6ahb1
[    0.007030] Error not get clk pll6ahb1try to set ahb1 to 200000000
[    0.007049] try to set apb1 to 100000000
[    0.007299] ===fe3o4==== sunxi_root_procfs_attach ret:0
[    0.011578] bio: create slab <bio-0> at 0
[    0.011851] pwm module init!
[    0.013906] SCSI subsystem initialized
[    0.014143] usbcore: registered new interface driver usbfs
[    0.014217] usbcore: registered new interface driver hub
[    0.014362] usbcore: registered new device driver usb
[    0.014489] twi_chan_cfg()345 - [twi0]:sunxi_i2c_platform_data.frequency == 100000
[    0.014502] twi_chan_cfg()353 - [twi0] has no twi_regulator.
[    0.014513] twi_chan_cfg()342 - [twi1] has no twi_speed!
[    0.014522] twi_chan_cfg()353 - [twi1] has no twi_regulator.
[    0.015225] axp20_board 0-0034: AXP (CHIP ID: 0x41) detected
[    0.224528] Linux video capture interface: v2.00
[    0.230367] gpiochip_add: registered GPIOs 1024 to 1028 on device: axp_pin
[    0.230549] Advanced Linux Sound Architecture Driver Version 1.0.25.
[    0.231483] cfg80211: Calling CRDA to update world regulatory domain
[    0.232597] Switching to clocksource arch_sys_counter
[    0.238626] NET: Registered protocol family 2
[    0.238897] IP route cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.239298] TCP established hash table entries: 2048 (order: 2, 16384 bytes)
[    0.239347] TCP bind hash table entries: 2048 (order: 1, 8192 bytes)
[    0.239377] TCP: Hash tables configured (established 2048 bind 2048)
[    0.239387] TCP: reno registered
[    0.239399] UDP hash table entries: 256 (order: 0, 4096 bytes)
[    0.239420] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
[    0.239665] NET: Registered protocol family 1
[    0.240075] RPC: Registered named UNIX socket transport module.
[    0.240090] RPC: Registered udp transport module.
[    0.240098] RPC: Registered tcp transport module.
[    0.240106] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.240350] [pm]aw_pm_init!
[    0.240366] standby_mode = 1.
[    0.240372] wakeup src cnt is : 3.
[    0.240385] pmu name: pmu1_para .
[    0.240397] pmu1_enable = 0x1.
[    0.240404] pmux_id = 0x1.
[    0.240428] add_sys_pwr_dm: get ldo name failed
[    0.240437] add_sys_pwr_dm: get ldo name failed
[    0.241027] add_sys_pwr_dm: get ldo name failed
[    0.241038] add_sys_pwr_dm: get ldo name failed
[    0.241047] add_sys_pwr_dm: get ldo name failed
[    0.241056] add_sys_pwr_dm: get ldo name failed
[    0.241604] add_sys_pwr_dm: get ldo name failed
[    0.242142] after inited: sys_mask config = 0x4810.
[    0.242152] dynamic_standby enalbe = 0x0.
[    0.242230] sunxi_reg_init enter
[    0.244409] msgmni has been set to 110
[    0.244979] io scheduler noop registered
[    0.244989] io scheduler deadline registered
[    0.245072] io scheduler cfq registered (default)
[    0.245458] [DISP]disp_module_init
[    0.245834] cmdline,disp=
[    0.246344] rotation_sw module is config as no used
[    0.246376] [DISP] disp_get_rotation_sw,line:68:disp 0 out of range? g_rot_sw=0
[    0.246392] [DISP] disp_init_connections,line:289:NULL pointer: 0, 0
[    0.246507] Fb_map_video_memory(reserve), pa=0x43f00000 size:0xbb800
[    0.247592] [DISP] Fb_map_kernel_logo,line:924:Fb_map_kernel_logo failed!
[    0.253046] Console: switching to colour frame buffer device 100x30
[    0.262701] [DISP] lcd_clk_config,line:886:disp 0, clk: pll(400000000),clk(200000000),dclk(20000000) dsi_rate(400000000)
[    0.262726]      clk real:pll(402000000),clk(201000000),dclk(20100000) dsi_rate(0)
[    0.262895] [DISP]disp_module_init finish
[    0.263143] sw_uart_get_devinfo()1503 - uart0 has no uart_regulator.
[    0.263161] sw_uart_get_devinfo()1503 - uart1 has no uart_regulator.
[    0.263175] sw_uart_get_devinfo()1503 - uart2 has no uart_regulator.
[    0.263639] uart0: ttyS1 at MMIO 0x1c28000 (irq = 32) is a SUNXI
[    0.264022] uart1: ttyS2 at MMIO 0x1c28400 (irq = 33) is a SUNXI
[    0.264293] uart2: ttyS0 at MMIO 0x1c28800 (irq = 34) is a SUNXI
[    0.264309] sw_uart_pm()890 - uart2 clk is already enable
[    0.264328] sw_console_setup()1233 - console setup baud 115200 parity n bits 8, flow n
[    0.418870] console [ttyS0] enabled
[    1.001324] sunxi_spi_chan_cfg()1378 - [spi-0] has no spi_regulator.
[    1.008387] sunxi_spi_register_spidev()1989 - Get spi devices number failed
[    1.016162] sunxi_spi_init()2075 - register spi devices board info failed
[    1.025304] Failed to alloc md5
[    1.028835] eth0: Use random mac address
[    1.033319] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.060812] sunxi-ehci sunxi-ehci.1: SW USB2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.069728] sunxi-ehci sunxi-ehci.1: new USB bus registered, assigned bus number 1
[    1.078259] sunxi-ehci sunxi-ehci.1: irq 104, io mem 0xf1c1a000
[    1.100030] sunxi-ehci sunxi-ehci.1: USB 0.0 started, EHCI 1.00
[    1.107275] hub 1-0:1.0: USB hub found
[    1.111492] hub 1-0:1.0: 1 port detected
[    1.116299] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.143307] sunxi-ohci sunxi-ohci.1: SW USB2.0 'Open' Host Controller (OHCI) Driver
[    1.151847] sunxi-ohci sunxi-ohci.1: new USB bus registered, assigned bus number 2
[    1.160290] sunxi-ohci sunxi-ohci.1: irq 105, io mem 0xf1c1a400
[    1.180717] ehci_irq: highspeed device connect
[    1.224668] hub 2-0:1.0: USB hub found
[    1.228846] hub 2-0:1.0: 1 port detected
[    1.233651] Initializing USB Mass Storage driver...
[    1.239181] usbcore: registered new interface driver usb-storage
[    1.245902] USB Mass Storage support registered.
[    1.251387] file system registered
[    1.256737] android_usb gadget: Mass Storage Function, version: 2009/09/11
[    1.264424] android_usb gadget: Number of LUNs=1
[    1.269571]  lun0: LUN: removable file: (no medium)
[    1.275428] android_usb gadget: android_usb ready
[    1.280751] TSC2007 TouchScreen Driver probe
[    1.286447] gspca_main: v2.14.0 registered
[    1.291686] usbcore: registered new interface driver uvcvideo
[    1.298062] USB Video Class driver (v1.0.8_SONiX_v2.6.36.04)
[    1.305626] sunxi_wdt_init_module: sunxi WatchDog Timer Driver v1.0
[    1.312991] sunxi_wdt_probe: devm_ioremap return wdt_reg 0xf1c20ca0, res->start 0x01c20ca0, res->end 0x01c20cbf
[    1.324245] sunxi_wdt_probe: initialized (g_timeout=16s, g_nowayout=0)
[    1.331719] wdt_enable, write reg 0xf1c20cb8 val 0x00000000
[    1.337905] wdt_set_tmout, write 0x000000b0 to mode reg 0xf1c20cb8, actual timeout 16 sec
[    1.347411] [mmc]: SD/MMC/SDIO Host Controller Driver(v1.114 2015-6-2 10:21) Compiled in Feb 21 2022 at 16:37:14
[    1.358763] [mmc]: get mmc0's sdc_power failed
[    1.363712] [mmc]: MMC host used card: 0x1, boot card: 0x1, io_card 0
[    1.371612] [mmc]: sdc0 set ios: clk 0Hz bm OD pm OFF vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.382515] [mmc]: sdc0 set ios: clk 0Hz bm PP pm UP vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.392513] usbcore: registered new interface driver usbhid
[    1.398722] usbhid: USB HID core driver
[    1.403006] [mmc]: sdc0 power_supply is null
[    1.409403] logger: created 256K log 'log_main'
[    1.414621] logger: created 32K log 'log_events'
[    1.419846] logger: created 32K log 'log_radio'
[    1.424908] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.435101] usb 1-1: new high-speed USB device number 2 using sunxi-ehci
[    1.442704] logger: created 32K log 'log_system'
[    1.449264] script_get_item return type err, consider it no ldo
[    1.455894] script_get_item return audio_pa_ctrl type err
[    1.463089] asoc: sndcodec <-> sunxi-codec mapping ok
[    1.470549] [DAUDIO]sunxi-daudio cannot find any using configuration for controllers, return directly!
[    1.481215] [I2S]snddaudio cannot find any using configuration for controllers, return directly!
[    1.491030] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 52,  RTO !!
[    1.499167] [DAUDIO0] driver not init,just return.
[    1.504733] TCP: cubic registered
[    1.508421] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 52,  RTO !!
[    1.516593] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.526836] NET: Registered protocol family 17
[    1.531815] lib80211: common routines for IEEE802.11 drivers
[    1.538228] Registering the dns_resolver key type
[    1.544886] VFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5
[    1.553442] ThumbEE CPU extension supported.
[    1.559254] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.569441] Registering SWP/SWPB emulation handler
[    1.577469] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 8,  RTO !!
[    1.585853] *******************Try sdio*******************
[    1.592798] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.601701] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.610584] ALSA device list:
[    1.613916] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.621974]   #0: audiocodec
[    1.625536] Waiting for root device /dev/mmcblk0p2...
[    1.631236] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 5,  RTO !!
[    1.639295] *******************Try sd *******************
[    1.646092] hub 1-1:1.0: USB hub found
[    1.650297] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.658640] hub 1-1:1.0: 4 ports detected
[    1.663111] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.672057] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.681049] [mmc]: *** sunxi_mci_dump_errinfo(L826): smc 0 err, cmd 55,  RTO !!
[    1.689184] *******************Try mmc*******************
[    1.695210] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.705841] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.716099] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.726340] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.738968] [mmc]: sdc0 set ios: clk 400000Hz bm OD pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.791216] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.814348] [mmc]: sdc0 set ios: clk 400000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.824933] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.835432] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing LEGACY(SDR12) dt B
[    1.845868] [mmc]: sdc0 set ios: clk 25000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.856310] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.866739] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 1 timing MMC-HS(SDR20) dt B
[    1.877163] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.888841] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.899305] mmc0: new high speed MMC card at address 0001
[    1.905855] mmcblk0: mmc0:0001 08A391 7.28 GiB
[    1.911061] mmcblk0boot0: mmc0:0001 08A391 partition 1 4.00 MiB
[    1.917728] mmcblk0boot1: mmc0:0001 08A391 partition 2 4.00 MiB
[    1.925740]  mmcblk0: p1 p2 p3
[    1.930543] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.942451]  mmcblk0boot1: unknown partition table
[    1.948696] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    1.960386] usb 1-1.1: new high-speed USB device number 3 using sunxi-ehci
[    1.968377]  mmcblk0boot0: unknown partition table
[    1.974089] *******************mmc init ok *******************
[    2.070421] [mmc]: sdc0 set ios: clk 50000000Hz bm PP pm ON vdd 3.3V width 4 timing MMC-HS(SDR20) dt B
[    2.133031] EXT4-fs (mmcblk0p2): recovery complete
[    2.138709] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)
[    2.147796] VFS: Mounted root (ext4 filesystem) on device 179:2.
[    2.155023] devtmpfs: mounted
[    2.159242] Freeing init memory: 524K
[    2.163636] usb 1-1.2: new high-speed USB device number 4 using sunxi-ehci
[    2.283727] scsi0 : usb-storage 1-1.2:1.0
[    2.316561] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)
[    2.355330] EXT4-fs (mmcblk0p3): recovery complete
[    2.360735] EXT4-fs (mmcblk0p3): mounted filesystem with ordered data mode. Opts: (null)
[    2.370294] usb 1-1.3: new high-speed USB device number 5 using sunxi-ehci
Starting logging: OK
Initializing random number generator... done.
Starting network...
xxxxxxxxxxxxxx
[    2.567437] uvcvideo: Found UVC 1.00 device USB 2.0 PC Camera (058f:3841)
[    2.870299] uvcvideo: Failed to query (1) UVC control 1 (unit 4) : -110 (exp. 4).
[    2.884415] gmac0: probed
[    2.887469] gmac0 gmac0: eth0: eth0: PHY ID 00441400 at 0 IRQ poll (gmac0-0:00)
[    3.053804] RTW: module init start
[    3.057592] RTW: rtl8188fu v5.11.5-13-g2482755ff.20210615
[    3.063678] RTW: build time: Feb 25 2022 10:38:56
[    3.069418] RTW: rtw_inetaddr_notifier_register
[    3.074611] RTW:
[    3.074617] usb_endpoint_descriptor(0):
[    3.081017] RTW: bLength=7
[    3.084014] RTW: bDescriptorType=5
[    3.087802] RTW: bEndpointAddress=81
[    3.091772] RTW: wMaxPacketSize=512
[    3.095636] RTW: bInterval=0
[    3.098825] RTW: RT_usb_endpoint_is_bulk_in = 1
[    3.103854] RTW:
[    3.103858] usb_endpoint_descriptor(1):
[    3.110283] RTW: bLength=7
[    3.113279] RTW: bDescriptorType=5
[    3.117046] RTW: bEndpointAddress=2
[    3.120922] RTW: wMaxPacketSize=512
[    3.124785] RTW: bInterval=0
[    3.127975] RTW: RT_usb_endpoint_is_bulk_out = 2
[    3.133099] RTW:
[    3.133102] usb_endpoint_descriptor(2):
[    3.139483] RTW: bLength=7
[    3.142485] RTW: bDescriptorType=5
[    3.146252] RTW: bEndpointAddress=3
[    3.150122] RTW: wMaxPacketSize=512
[    3.153986] RTW: bInterval=0
[    3.157174] RTW: RT_usb_endpoint_is_bulk_out = 3
[    3.162304] RTW: nr_endpoint=3, in_num=1, out_num=2
[    3.162309]
[    3.169354] RTW: USB_SPEED_HIGH
[    3.173033] uvcvideo: Failed to query (1) UVC control 1 (unit 4) : -110 (exp. 4).
[    3.183947] RTW: CHIP TYPE: RTL8188FU
[    3.189164] RTW: Chip Version Info: CHIP_8188F_S2_1T1R_RomVer(0)
[    3.195927] RTW: _ConfigChipOutEP_8188F OutEpQueueSel(0x05), OutEpNumber(2)
[    3.204499] RTW: EEPROM type is E-FUSE
[    3.210005] RTW: Boot from EFUSE, Autoload OK !
[    3.215635] RTW: hal_EfuseSwitchToBank: Efuse switch bank to 0
[    3.347754] RTW: hal_ReadEFuse_WiFi: data end at address=0x6e
[    3.354707] RTW: HW EFUSE
[    3.357623] RTW: 0x000: 29 81 00 FC  0B 00 00 00  00 0C 04 4C  10 07 00 00
[    3.365534] RTW: 0x010: 25 25 26 26  26 26 27 27  28 28 28 03  FF FF FF FF
[    3.373460] RTW: 0x020: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.381392] RTW: 0x030: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.389266] RTW: 0x040: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.397151] RTW: 0x050: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.405046] RTW: 0x060: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.412929] RTW: 0x070: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.420809] RTW: 0x080: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.428691] RTW: 0x090: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.436572] RTW: 0x0A0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.444611] RTW: 0x0B0: FF FF FF FF  FF FF FF FF  20 20 28 00  00 00 00 FF
[    3.452505] RTW: 0x0C0: FF 12 00 10  00 FF 00 FF  00 00 FF FF  FF FF FF FF
[    3.460430] RTW: 0x0D0: DA 0B 79 F1  42 66 40 94  A4 08 23 1A  3C 09 03 52
[    3.468304] RTW: 0x0E0: 65 61 6C 74  65 6B 09 03  38 30 32 2E  31 31 6E 00
[    3.476194] RTW: 0x0F0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.484076] RTW: 0x100: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.491957] RTW: 0x110: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.499839] RTW: 0x120: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.507720] RTW: 0x130: C1 B6 FF FF  FF FF FF FF  FF FF 00 11  FF FF FF FF
[    3.515698] RTW: 0x140: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.523588] RTW: 0x150: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.531469] RTW: 0x160: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.539343] RTW: 0x170: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.547232] RTW: 0x180: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.555113] RTW: 0x190: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.562993] RTW: 0x1A0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.570883] RTW: 0x1B0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.578756] RTW: 0x1C0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.586637] RTW: 0x1D0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.594525] RTW: 0x1E0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.602408] RTW: 0x1F0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF
[    3.610295] RTW: EEPROM VID = 0x bda
[    3.614256] RTW: EEPROM PID = 0xf179
[    3.618226] RTW: hal_com_config_channel_plan chplan:0x20
[    3.624132] RTW: Hal_EfuseParsePowerSavingMode_8188F...bHWPwrPindetect(0)-bHWPowerdown(0) ,bSupportRemoteWakeup(1)
[    3.635622] RTW: ### PS params=>  power_mgnt(2),usbss_enable(0) ###
[    3.643661] scsi 0:0:0:0: Direct-Access     USB      Flash Disk       1100 PQ: 0 ANSI: 4
[    3.655042] RTW: kfree Pwr Trim flag:1
[    3.659207] RTW: bb_gain:6
[    3.665339] sd 0:0:0:0: [sda] 7866368 512-byte logical blocks: (4.02 GB/3.75 GiB)
[    3.676013] RTW: rtl8188f_FirmwareDownload fw: FW_NIC, size: 20832
[    3.682944] RTW: rtl8188f_FirmwareDownload: fw_ver=f fw_subver=0001 sig=0x88f1, Month=05, Date=06, Hour=09, Minute=34
[    3.694746] RTW: rtl8188f_FirmwareDownload(): Shift for fw header!
[    3.701650] RTW: rtl8188f_FirmwareDownload by IO write!
[    3.707811] sd 0:0:0:0: [sda] Write Protect is off
[    3.714175] sd 0:0:0:0: [sda] No Caching mode page present
[    3.720329] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.732053] sd 0:0:0:0: [sda] No Caching mode page present
[    3.738178] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.746592]  sda: sda1
[    3.752931] sd 0:0:0:0: [sda] No Caching mode page present
[    3.759059] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    3.765876] sd 0:0:0:0: [sda] Attached SCSI removable disk
[    3.795767] RTW: polling_fwdl_chksum: Checksum report OK! (1, 0ms), REG_MCUFWDL:0x00050105
[    3.806750] RTW: _8051Reset8188: Finish
[    3.820259] RTW: _FWFreeToGo: Polling FW ready OK! (72, 20ms), REG_MCUFWDL:0x000501c6
[    3.828952] RTW: rtl8188f_FirmwareDownload: DLFW OK !
[    3.834572] RTW: rtl8188f_FirmwareDownload success. write_fw:1, 130ms
[    3.842159] RTW:  <=== rtl8188f_FirmwareDownload()
[    3.849510] RTW: CardDisableRTL8188FU
[    3.858380] RTW: hal_read_mac_hidden_rpt OK! (1, 10ms), fwdl:1, id:0x19
[    3.865766] RTW: InitAdapterVariablesByPROM_8188FU(): REPLACEMENT = 0
[    3.872954] RTW: rtw_hal_read_chip_info in 670 ms
[    3.878441] RTW: init_channel_set((null)) ChannelPlan ID:0x20, ch num:13
[    3.885989] RTW: [RF_PATH] ver_id.RF_TYPE:RF_1T1R
[    3.891225] RTW: [RF_PATH] HALSPEC's rf_reg_trx_path_bmp:0x11, rf_reg_path_avail_num:1, max_tx_cnt:1
[    3.901366] RTW: [RF_PATH] PG's trx_path_bmp:0x00, max_tx_cnt:0
[    3.907932] RTW: [RF_PATH] Registry's trx_path_bmp:0x00, tx_path_lmt:0, rx_path_lmt:0
[    3.916632] RTW: [RF_PATH] HALDATA's trx_path_bmp:0x11, max_tx_cnt:1
[    3.923796] RTW: [RF_PATH] HALDATA's rf_type:RF_1T1R, NumTotalRFPath:1
[    3.931047] RTW: rtw_hal_rfpath_init trx_path_bmp:0x11(RF_1T1R), NumTotalRFPath:1, max_tx_cnt:1
[    3.940712] RTW: [TRX_Nss] HALSPEC - tx_nss:1, rx_nss:1
[    3.946506] RTW: [TRX_Nss] Registry - tx_nss:0, rx_nss:0
[    3.952402] RTW: [TRX_Nss] HALDATA - tx_nss:1, rx_nss:1
[    3.958211] RTW: rtw_hal_trxnss_init tx_nss:1, rx_nss:1
[    3.964311] RTW: init_mlme_default_rate_set: support CCK
[    3.970231] RTW: init_mlme_default_rate_set: support OFDM
[    3.978127] RTW: NR_RECVBUFF: 8, recvbuf_nr: 8
[    3.983216] RTW: MAX_RECVBUF_SZ: 32768
[    3.987705] RTW: NR_PREALLOC_RECV_SKB: 8
[    3.992706] RTW: rtw_alloc_macid((null)) if1, mac_addr:ff:ff:ff:ff:ff:ff macid:1
[    4.001013] RTW: rtw_init_pwrctrl_priv: IPS_mode=1, LPS_mode=2, LPS_level=0
[    4.009751] RTW: IQK FW offload:disable
[    4.014064] RTW: Init_ODM_ComInfo_8188f(): Fv=0 Cv=4
[    4.019852] RTW: rtw_regsty_chk_target_tx_power_valid return _FALSE for band:0, path:0, rs:0, t:-1
[    4.030340] RTW: phy_ConfigBBWithPgParaFile(): No File PHY_REG_PG.txt, Load from HWImg Array!
[    4.039859] RTW: default power by rate loaded
[    4.045004] RTW: pwrctrlpriv.bSupportRemoteWakeup~~~~~~
[    4.050835] RTW: pwrctrlpriv.bSupportRemoteWakeup~~~[1]~~~
[    4.056945] RTW: rtw_macaddr_cfg mac addr:xxxxxxxxxxxxxx
[    4.063138] RTW: bDriverStopped:True, bSurpriseRemoved:False, bup:0, hw_init_completed:0
[    4.072741] RTW: rtw_cfg80211_init_wiphy_band:rf_type=0
[    4.078557] RTW: [HT] HAL Support STBC = 0x01
[    4.083448] RTW: rtw_wiphy_alloc(phy0)
[    4.087819] RTW: rtw_wdev_alloc(padapter=c4b50000)
[    4.093497] RTW: rtw_wiphy_register(phy0)
[    4.098386] RTW: rtw_ndev_init(wlan0) if1 mac_addr=xxxxxxxxxxxxxx
[    4.106392] RTW: rtw_ndev_notifier_call(wlan0) state:16
[    4.113056] RTW: rtw_ndev_notifier_call(wlan0) state:5
[    4.118940] usbcore: registered new interface driver rtl8188fu
[    4.125465] RTW: module init ret=0
ls: /mnt/Adventurer4*.tgz: No such file or directory
found /mnt/flashforge_init.sh
+ dirname /mnt/flashforge_init.sh
+ WORK_DIR=/mnt
+ RUN_DIR=/opt/PROGRAM
+ MACHINE=Adventurer4-VoxelPro
+ PID=00D1
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ uname -r
+ CHECH_KERNEL=3.4.39+
+ [ 3.4.39+ != 3.4.39+ ]
+ [ ! -f /mnt/screwflag ]
+ [ Adventurer4-VoxelPro !=  ]
+ [ 00D1 !=  ]
+ [ Adventurer4-VoxelPro != Adventurer4-VoxelPro ]
+ [ 00D1 != 00D1 ]
+ SSID_NAME=Adventurer 4
+ SSID_PASS=12345678
+ sync
+ [ ! -d /opt/PROGRAM ]
+ cat /mnt/start.img
+ create_key
+ key_dir=/opt/
+ key_pair=/opt/private.pem
+ public_key=/opt/key.pub
+ private_key=/opt/key.priv
+ password=abcd
+ [ ! -f /opt/private.pem ]
+ update_other
+ [ -d /opt/backup ]
+ [ -h /etc/rc.d/S98sysntpd ]
+ [ ! -d /data/picture ]
+ [ -f /mnt/screwflag ]
+ [ ! -f /opt/art.img ]
+ echo update art file
update art file
+ dd if=/dev/mtd2 of=/opt/art.img
dd: can't open '/dev/mtd2': No such file or directory
+ sync
+ update_control
+ echo update control
update control
+ cd /mnt
+ start_head=control-
+ end_tail=.tar.xz
+ ls -1t control-3.1.1.tar.xz
control-3.1.1.tar.xz
+ [ 0 -eq 0 ]
+ ls -1t control-3.1.1.tar.xz
+ head -n 1
+ file_name=control-3.1.1.tar.xz
+ expr 20 - 8 - 7
+ version_length=5
+ control_version=3.1.1
+ echo 3.1.1
3.1.1
+ [ ! -d /opt/PROGRAM/control ]
+ temp_dir=/opt/PROGRAM/control/temp
+ [ -d /opt/PROGRAM/control/temp ]
+ mkdir -p /opt/PROGRAM/control/temp
+ tar -xzvf control-3.1.1.tar.xz -C /opt/PROGRAM/control/temp
./Adventurer4-HD-IAP-2.4.0-20230718.hex
./Adventurer4-NA-IAP.hex
./IAPCommand
./md5sum.list
./run.sh
+ sync
+ cd /opt/PROGRAM/control/temp
+ md5sum -s -c md5sum.list
+ [ 0 -eq 0 ]
+ cd ..
+ grep -v temp
+ ls
+ xargs rm -rf
+ sync
+ mv temp 3.1.1
+ sync
+ cd 3.1.1
+ [ -f run.sh ]
+ /opt/PROGRAM/control/3.1.1/run.sh
+ dirname /opt/PROGRAM/control/3.1.1/run.sh
+ WORK_DIR=/opt/PROGRAM/control/3.1.1
+ FIRMWARE_M3_NA=Adventurer4-NA-IAP.hex
+ FIRMWARE_M3_HD=Adventurer4-HD-IAP-2.4.0-20230718.hex
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ uname -r
+ CHECH_KERNEL=3.4.39+
+ [ 3.4.39+ != 3.4.39+ ]
+ [ -f /opt/PROGRAM/control/3.1.1/IAPCommand ]
+ chmod a+x /opt/PROGRAM/control/3.1.1/IAPCommand
+ [ -f /opt/PROGRAM/control/3.1.1/Adventurer4-NA-IAP.hex -a -f /opt/PROGRAM/control/3.1.1/Adventurer4-HD-IAP-2.4.0-20230718.hex ]
+ echo burn M3 firmware...
burn M3 firmware...
+ /opt/PROGRAM/control/3.1.1/IAPCommand /opt/PROGRAM/control/3.1.1/Adventurer4-NA-IAP.hex /opt/PROGRAM/control/3.1.1/Adventurer4-HD-IAP-2.4.0-20230718.hex
fileName NA: /opt/PROGRAM/control/3.1.1/Adventurer4-NA-IAP.hex
fileName HD: /opt/PROGRAM/control/3.1.1/Adventurer4-HD-IAP-2.4.0-20230718.hex
Serial port /dev/ttyS1 open.
stm32 reset
.
Connected to board.
Update :HD
STM-32 Wirting
The 0th frame data transmission is completed.
The 1th frame data transmission is completed.
The 2th frame data transmission is completed.
The 3th frame data transmission is completed.
The 4th frame data transmission is completed.
The 5th frame data transmission is completed.
The 6th frame data transmission is completed.
The 7th frame data transmission is completed.
The 8th frame data transmission is completed.
The 9th frame data transmission is completed.
The 10th frame data transmission is completed.
The 11th frame data transmission is completed.
The 12th frame data transmission is completed.
The 13th frame data transmission is completed.
The 14th frame data transmission is completed.
The 15th frame data transmission is completed.
The 16th frame data transmission is completed.
The 17th frame data transmission is completed.
The 18th frame data transmission is completed.
The 19th frame data transmission is completed.
The 20th frame data transmission is completed.
The 21th frame data transmission is completed.
The 22th frame data transmission is completed.
The 23th frame data transmission is completed.
The 24th frame data transmission is completed.
The 25th frame data transmission is completed.
The 26th frame data transmission is completed.
The 27th frame data transmission is completed.
The 28th frame data transmission is completed.
The 29th frame data transmission is completed.
The 30th frame data transmission is completed.
The 31th frame data transmission is completed.
The 32th frame data transmission is completed.
The 33th frame data transmission is completed.
The 34th frame data transmission is completed.
The 35th frame data transmission is completed.
The 36th frame data transmission is completed.
The 37th frame data transmission is completed.
The 38th frame data transmission is completed.
The 39th frame data transmission is completed.
The 40th frame data transmission is completed.
The 41th frame data transmission is completed.
The 42th frame data transmission is completed.
The 43th frame data transmission is completed.
The 44th frame data transmission is completed.
The 45th frame data transmission is completed.
The 46th frame data transmission is completed.
The 47th frame data transmission is completed.
The 48th frame data transmission is completed.
The 49th frame data transmission is completed.
The 50th frame data transmission is completed.
The 51th frame data transmission is completed.
The 52th frame data transmission is completed.
The 53th frame data transmission is completed.
The 54th frame data transmission is completed.
The 55th frame data transmission is completed.
The 56th frame data transmission is completed.
The 57th frame data transmission is completed.
The 58th frame data transmission is completed.
The 59th frame data transmission is completed.
STM32Write: success.
STM32iap finished HD.
+ exit 0
+ update_kernel
+ echo update kernel
update kernel
+ cd /mnt
+ start_head=kernel-
+ end_tail=.tar.xz
+ ls -1t kernel-1.4.0.tar.xz
kernel-1.4.0.tar.xz
+ [ 0 -eq 0 ]
+ head -n 1
+ ls -1t kernel-1.4.0.tar.xz
+ file_name=kernel-1.4.0.tar.xz
+ expr 19 - 7 - 7
+ version_length=5
+ kernel_version=1.4.0
+ [ ! -d /opt/PROGRAM/kernel ]
+ temp_dir=/opt/PROGRAM/kernel/temp
+ [ -d /opt/PROGRAM/kernel/temp ]
+ mkdir -p /opt/PROGRAM/kernel/temp
+ tar -xzvf kernel-1.4.0.tar.xz -C /opt/PROGRAM/kernel/temp
./8188fu.ko
./md5sum.list
./run.sh
./script.bin
./uImage-AD4-6-20210705
+ sync
+ cd /opt/PROGRAM/kernel/temp
+ md5sum -s -c md5sum.list
+ [ 0 -eq 0 ]
+ cd ..
+ xargs rm -rf
+ grep -v temp
+ ls
+ sync
+ mv temp 1.4.0
+ sync
+ cd 1.4.0
+ [ -f run.sh ]
+ /opt/PROGRAM/kernel/1.4.0/run.sh
+ dirname /opt/PROGRAM/kernel/1.4.0/run.sh
+ WORK_DIR=/opt/PROGRAM/kernel/1.4.0
+ KERNEL_UIMAGE=uImage-AD4-6-20210705
+ KERNEL_SCRIPT=script.bin
+ WIFI_DRIVER=8188fu.ko
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ [ -f /opt/PROGRAM/kernel/1.4.0/8188fu.ko ]
+ echo update 8188fu.ko
update 8188fu.ko
+ cp_file /opt/PROGRAM/kernel/1.4.0/8188fu.ko /lib/modules/3.4.39/8188fu.ko
+ SRCFILE=/opt/PROGRAM/kernel/1.4.0/8188fu.ko
+ DSTFILE=/lib/modules/3.4.39/8188fu.ko
+ [ ! -f /lib/modules/3.4.39/8188fu.ko ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/kernel/1.4.0/8188fu.ko
+ SRCFILEMD5=24564770160364926905e58418a00147
+ cut -d   -f 1
+ md5sum /lib/modules/3.4.39/8188fu.ko
+ DSTFILEMD5=24564770160364926905e58418a00147
+ [ 24564770160364926905e58418a00147 != 24564770160364926905e58418a00147 ]
+ sync
+ sleep 1
+ [ -f /opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705 ]
+ echo update uImage
update uImage
+ mount[   20.592218] FAT-fs (mmcblk0p1): utf8 is not a recommended IO charset for FAT filesystems, filesystem will be case sensitive!
 -t vfat -o codepage=936,iocharset=utf8 /dev/mmcblk0p1 /media
+ cp_file /opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705 /media/uImage
+ SRCFILE=/opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705
+ DSTFILE=/media/uImage
+ [ ! -f /media/uImage ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705
+ SRCFILEMD5=547504cd11564744fa6be70d4a53eb0a
+ cut -d   -f 1
+ md5sum /media/uImage
+ DSTFILEMD5=ed73f0fc59b68760f267a0078f6d9e21
+ [ 547504cd11564744fa6be70d4a53eb0a != ed73f0fc59b68760f267a0078f6d9e21 ]
+ rm -rf /media/uImage
+ cp -vf /opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705 /media/uImage
'/opt/PROGRAM/kernel/1.4.0/uImage-AD4-6-20210705' -> '/media/uImage'
+ chmod a+x /media/uImage
+ sync
+ cut -d   -f 1
+ md5sum /media/uImage
+ DSTFILEMD5=547504cd11564744fa6be70d4a53eb0a
+ [ 547504cd11564744fa6be70d4a53eb0a != 547504cd11564744fa6be70d4a53eb0a ]
+ sync
+ echo update script
update script
+ cp_file /opt/PROGRAM/kernel/1.4.0/script.bin /media/script.bin
+ SRCFILE=/opt/PROGRAM/kernel/1.4.0/script.bin
+ DSTFILE=/media/script.bin
+ [ ! -f /media/script.bin ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/kernel/1.4.0/script.bin
+ SRCFILEMD5=3bc5fc62008d79b71af6af00926bce05
+ cut -d   -f 1
+ md5sum /media/script.bin
+ DSTFILEMD5=3bc5fc62008d79b71af6af00926bce05
+ [ 3bc5fc62008d79b71af6af00926bce05 != 3bc5fc62008d79b71af6af00926bce05 ]
+ sync
+ umount /media
+ sleep 1
+ exit 0
+ update_software
+ echo update software
update software
+ cd /mnt
+ start_head=software-
+ end_tail=.tar.xz
+ ls -1t software-2.3.0.tar.xz
software-2.3.0.tar.xz
+ [ 0 -eq 0 ]
+ head -n 1
+ ls -1t software-2.3.0.tar.xz
+ file_name=software-2.3.0.tar.xz
+ expr 21 - 9 - 7
+ version_length=5
+ software_version=2.3.0
+ echo 2.3.0
2.3.0
+ [ ! -d /opt/PROGRAM/software ]
+ temp_dir=/opt/PROGRAM/software/temp
+ [ -d /opt/PROGRAM/software/temp ]
+ mkdir -p /opt/PROGRAM/software/temp
+ tar -xzvf software-2.3.0.tar.xz -C /opt/PROGRAM/software/temp
./adventurer4-arm
./auto_run.sh
./client/
./client/images/
./client/images/h_lefticon.png
./client/images/G_File.png
./client/images/close_v.png
./client/images/pt_icon.png
./client/Home.html
./client/Header.html
./client/w3.css
./client/js/
./client/js/jquery-3.2.1.js
./client/js/home.js
./client/js/header.js
./client/js/lib/
./client/js/lib/jquery.confirm.js
./client/js/lib/jquery.cookie.js
./client/js/jquery.cookie.js
./firstVersion
./md5sum.list
./run.sh
./serial-test
+ sync
+ cd /opt/PROGRAM/software/temp
+ md5sum -s -c md5sum.list
+ [ 0 -eq 0 ]
+ cd ..
+ xargs rm -rf
+ ls
+ grep -v temp
+ sync
+ mv temp 2.3.0
+ sync
+ cd 2.3.0
+ [ -f run.sh ]
+ //opt/PROGRAM/software/2.3.0/run.sh
+ dirname //opt/PROGRAM/software/2.3.0/run.sh
+ WORK_DIR=//opt/PROGRAM/software/2.3.0
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ uname -r
+ CHECH_KERNEL=3.4.39+
+ [ 3.4.39+ != 3.4.39+ ]
+ [ -f //opt/PROGRAM/software/2.3.0/auto_run.sh ]
+ echo update auto_run.sh
update auto_run.sh
+ cp_file //opt/PROGRAM/software/2.3.0/auto_run.sh /opt/
+ SRCFILE=//opt/PROGRAM/software/2.3.0/auto_run.sh
+ basename //opt/PROGRAM/software/2.3.0/auto_run.sh
+ DSTFILE=/opt/auto_run.sh
+ [ ! -f /opt/auto_run.sh ]
+ cut -d   -f 1
+ md5sum //opt/PROGRAM/software/2.3.0/auto_run.sh
+ SRCFILEMD5=497a83318f7c0652b04310fc60060b5a
+ cut -d   -f 1
+ md5sum /opt/auto_run.sh
+ DSTFILEMD5=75e2f7daf8839ab3891da981a6dd75e7
+ [ 497a83318f7c0652b04310fc60060b5a != 75e2f7daf8839ab3891da981a6dd75e7 ]
+ rm -rf /opt/auto_run.sh
+ cp -vf //opt/PROGRAM/software/2.3.0/auto_run.sh /opt/
'//opt/PROGRAM/software/2.3.0/auto_run.sh' -> '/opt/auto_run.sh'
+ chmod a+x /opt/auto_run.sh
+ sync
+ cut -d   -f 1
+ md5sum /opt/auto_run.sh
+ DSTFILEMD5=497a83318f7c0652b04310fc60060b5a
+ [ 497a83318f7c0652b04310fc60060b5a != 497a83318f7c0652b04310fc60060b5a ]
+ [ -f //opt/PROGRAM/software/2.3.0/nozzle_remover.gx ]
+ exit 0
+ update_library
+ echo update library
update library
+ cd /mnt
+ start_head=library-
+ end_tail=.tar.xz
+ ls -1t library-1.2.0.tar.xz
library-1.2.0.tar.xz
+ [ 0 -eq 0 ]
+ head -n 1
+ ls -1t library-1.2.0.tar.xz
+ file_name=library-1.2.0.tar.xz
+ expr 20 - 8 - 7
+ version_length=5
+ library_version=1.2.0
+ echo 1.2.0
1.2.0
+ [ ! -d /opt/PROGRAM/library ]
+ temp_dir=/opt/PROGRAM/library/temp
+ [ -d /opt/PROGRAM/library/temp ]
+ mkdir -p /opt/PROGRAM/library/temp
+ tar -xzvf library-1.2.0.tar.xz -C /opt/PROGRAM/library/temp
./code2000.ttf
./create-rsa.sh
./env.cfg
./ffstartup-arm
./ffstartup.cfg
./md5sum.list
./microhttpd/
./microhttpd/lib/
./microhttpd/lib/libmicrohttpd.la
./microhttpd/lib/libmicrohttpd.so.12.36.0
./microhttpd/lib/libmicrohttpd.so.12
./microhttpd/lib/libmicrohttpd.so
./run.sh
+ sync
+ cd /opt/PROGRAM/library/temp
+ md5sum -s -c md5sum.list
+ [ 0 -eq 0 ]
+ cd ..
+ xargs rm -rf
+ grep -v temp
+ ls
+ sync
+ mv temp 1.2.0
+ sync
+ cd 1.2.0
+ [ -f run.sh ]
+ /opt/PROGRAM/library/1.2.0/run.sh
+ dirname /opt/PROGRAM/library/1.2.0/run.sh
+ WORK_DIR=/opt/PROGRAM/library/1.2.0
+ uname -m
+ CHECH_ARCH=armv7l
+ [ armv7l != armv7l ]
+ uname -r
+ CHECH_KERNEL=3.4.39+
+ [ 3.4.39+ != 3.4.39+ ]
+ [ -f /opt/PROGRAM/library/1.2.0/create-rsa.sh ]
+ cp_file /opt/PROGRAM/library/1.2.0/create-rsa.sh /bin/
+ SRCFILE=/opt/PROGRAM/library/1.2.0/create-rsa.sh
+ basename /opt/PROGRAM/library/1.2.0/create-rsa.sh
+ DSTFILE=/bin/create-rsa.sh
+ [ ! -f /bin/create-rsa.sh ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/library/1.2.0/create-rsa.sh
+ SRCFILEMD5=8ca8299de2e6b69ed398c9ef96276076
+ cut -d   -f 1
+ md5sum /bin/create-rsa.sh
+ DSTFILEMD5=8ca8299de2e6b69ed398c9ef96276076
+ [ 8ca8299de2e6b69ed398c9ef96276076 != 8ca8299de2e6b69ed398c9ef96276076 ]
+ [ -f /opt/PROGRAM/library/1.2.0/code2000.ttf ]
+ echo update code2000.ttf
update code2000.ttf
+ cp_file /opt/PROGRAM/library/1.2.0/code2000.ttf /opt/qt-4.8.6/lib/fonts/
+ SRCFILE=/opt/PROGRAM/library/1.2.0/code2000.ttf
+ basename /opt/PROGRAM/library/1.2.0/code2000.ttf
+ DSTFILE=/opt/qt-4.8.6/lib/fonts/code2000.ttf
+ [ ! -f /opt/qt-4.8.6/lib/fonts/code2000.ttf ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/library/1.2.0/code2000.ttf
+ SRCFILEMD5=8bf83f63173414f80dfca8ccbd4ba537
+ cut -d   -f 1
+ md5sum /opt/qt-4.8.6/lib/fonts/code2000.ttf
+ DSTFILEMD5=8bf83f63173414f80dfca8ccbd4ba537
+ [ 8bf83f63173414f80dfca8ccbd4ba537 != 8bf83f63173414f80dfca8ccbd4ba537 ]
+ [ -f /opt/PROGRAM/library/1.2.0/code2000-small.ttf ]
+ [ -f /opt/PROGRAM/library/1.2.0/ffstartup.cfg ]
+ cp_file /opt/PROGRAM/library/1.2.0/ffstartup.cfg /opt/PROGRAM/
+ SRCFILE=/opt/PROGRAM/library/1.2.0/ffstartup.cfg
+ basename /opt/PROGRAM/library/1.2.0/ffstartup.cfg
+ DSTFILE=/opt/PROGRAM/ffstartup.cfg
+ [ ! -f /opt/PROGRAM/ffstartup.cfg ]
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/library/1.2.0/ffstartup.cfg
+ SRCFILEMD5=b64f153def78950964d170525c88e35f
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/ffstartup.cfg
+ DSTFILEMD5=7cc382116e25c69273c8e4fe2f2eb62e
+ [ b64f153def78950964d170525c88e35f != 7cc382116e25c69273c8e4fe2f2eb62e ]
+ rm -rf /opt/PROGRAM/ffstartup.cfg
+ cp -vf /opt/PROGRAM/library/1.2.0/ffstartup.cfg /opt/PROGRAM/
'/opt/PROGRAM/library/1.2.0/ffstartup.cfg' -> '/opt/PROGRAM/ffstartup.cfg'
+ chmod a+x /opt/PROGRAM/ffstartup.cfg
+ sync
+ cut -d   -f 1
+ md5sum /opt/PROGRAM/ffstartup.cfg
+ DSTFILEMD5=b64f153def78950964d170525c88e35f
+ [ b64f153def78950964d170525c88e35f != b64f153def78950964d170525c88e35f ]
+ [ -f /opt/PROGRAM/library/1.2.0/ffstartup-mipsle ]
+ exit 0
+ cp /mnt/pointercal /opt/tslib-1.4/etc/pointercal
+ sync
+ cat /mnt/end.img
+ /mnt/play
+ exit 0
[  158.271019] usb 1-1.2: USB disconnect, device number 4
"
cv8erSVM,Drones Factory,Idanref,TypeScript,Friday 11th of August 2023 08:10:52 AM CDT,"// Drone Interface
interface Drone {
  fly(): string;
}

// Concrete Drone 1: Simple Plastic Drone
class SimplePlasticDrone implements Drone {
  fly(): string {
    return 'Flying a simple plastic drone';
  }
}

// Concrete Drone 2: Drone With Missiles
class DroneWithMissiles implements Drone {
  fly(): string {
    return 'Flying a drone with missiles';
  }
}

// Concrete Drone 3: Kamikaza Drone
class KamikazaDrone implements Drone {
  fly(): string {
    return 'Flying a kamikaza drone';
  }
}

// Drone Factory
class DronesFactory {
  createDrone(type: string): Drone {
    switch (type) {
      case 'simple':
        return new SimplePlasticDrone();
      case 'missiles':
        return new DroneWithMissiles();
      case 'kamikaza':
        return new KamikazaDrone();
      default:
        throw new Error('Invalid drone type');
    }
  }
}

// Client Code
const factory = new DronesFactory();
const simpleDrone = factory.createDrone('simple');
console.log(simpleDrone.fly()); // Output: 'Flying a simple plastic drone'

const missileDrone = factory.createDrone('missiles');
console.log(missileDrone.fly()); // Output: 'Flying a drone with missiles'

const kamikazaDrone = factory.createDrone('kamikaza');
console.log(kamikazaDrone.fly()); // Output: 'Flying a kamikaza drone'
"
P8tjzSax,I,Salvens,C++,Friday 11th of August 2023 08:00:35 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>


using namespace std;

#define int long long
#pragma comment(linker,""/STACK:1000000000,1000000000"")

const long long INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const int N = 1e5 + 10;

const int M1 = 1e9 + 123;
const int M2 = 1e9 + 321;
int P1 = 22811;
int P2 = 22699;

array<int, MAXN> power1, power2;

inline void init_pow() {
    power1[0] = 1;
    power2[0] = 1;
    for (int i = 1; i < MAXN; ++i) {
        power1[i] = (1ll * power1[i - 1] * P1) % M1;
        power2[i] = (1ll * power2[i - 1] * P2) % M2;
    }
}

/*inline void build_hash(vector<int>& s, vector<pair<int, int>>& h) {
    int n = s.size();
    h.resize(n + 1);
    h[0].first = 0;
    h[0].second = 0;

    for (int i = 0; i < n; ++i) {
        h[i + 1].first = (h[i].first + 1ll * s[i] * power1[i]) % M1;
        h[i + 1].second = (h[i].second + 1ll * s[i] * power2[i]) % M2;
    }
}*/

inline pair<int, int> get_hash(vector<pair<int, int>>& h, int pos, int len, int mx_pow = 0) {
    int h1 = h[pos + len].first - h[pos].first;
    int h2 = h[pos + len].second - h[pos].second;
    if (h1 < 0) {
        h1 += M1;
    }
    if (h2 < 0) {
        h2 += M2;
    }
    if (mx_pow != 0) {
        h1 = 1ll * h1 * power1[mx_pow - (pos + len - 1)] % M1;
        h2 = 1ll * h2 * power2[mx_pow - (pos + len - 1)] % M2;
    }
    return make_pair(h1, h2);
}

/*inline bool is_equal(vector<pair<int, int>>& h_l, vector<pair<int, int>>& h_r, int start1, int start2, int len) {
    pair<int, int> d_l, d_r;
    d_l.first = ((h_l[start1 + len].first - h_l[start1].first + M1) % M1 * 1ll * power1[start2]) % M1;
    d_l.second = ((h_l[start1 + len].second - h_l[start1].second + M2) % M2 * 1ll * power2[start2]) % M2;

    d_r.first = ((h_r[start2 + len].first - h_r[start2].first + M1) % M1 * 1ll * power1[start1]) % M1;
    d_r.second = ((h_r[start2 + len].second - h_r[start2].second + M2) % M2 * 1ll * power2[start1]) % M2;

    return d_l == d_r;
}*/

inline int random_key(const int before, const int after) {
    auto seed = std::chrono::high_resolution_clock::now().time_since_epoch().count();
    std::mt19937 mt_rand(seed);
    int base = std::uniform_int_distribution<int>(before + 1, after)(mt_rand);
    return base;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

//    P1 = random_key(256, M1);
//    P2 = random_key(256, M2);

    int n, m;
    cin >> n >> m;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }

    vector<pair<int, int>> h_a(n + 1), h_b(n + 1);
    init_pow();
    h_a[0] = {0, 0};
    h_b[0] = {0, 0};
    for (int i = 0; i < n; ++i) {
        h_a[i + 1].first = (h_a[i].first + 1ll * a[i] * power1[i]) % M1;
        h_a[i + 1].second = (h_a[i].second + 1ll * a[i] * power2[i]) % M2;

        h_b[i + 1].first = (h_b[i].first + 1ll * a[n - i - 1] * power1[i]) % M1;
        h_b[i + 1].second = (h_b[i].second + 1ll * a[n - i - 1] * power2[i]) % M2;
    }

    vector<int> ans = {n};
    for (int i = 1; i <= n / 2; ++i) {
        if (get_hash(h_a, 0, i, n) == get_hash(h_b, n - 2 * i, i, n)) {
            ans.emplace_back(n - i);
        }
    }
    sort(ans.begin(), ans.end());
    for (const auto& i: ans) {
        cout << i << ' ';
    }
}"
XLTP8uL9,Factory,Idanref,TypeScript,Friday 11th of August 2023 07:57:28 AM CDT,"// Product Interface
interface Product {
  getDescription(): string;
}

// Concrete Product 1: Laptop
class Laptop implements Product {
  getDescription(): string {
    return 'This is a Laptop';
  }
}

// Concrete Product 2: Smartphone
class Smartphone implements Product {
  getDescription(): string {
    return 'This is a Smartphone';
  }
}

// Abstract Factory
abstract class ProductFactory {
  abstract createProduct(): Product;
}

// Concrete Factory 1: Laptop Factory
class LaptopFactory extends ProductFactory {
  createProduct(): Product {
    return new Laptop();
  }
}

// Concrete Factory 2: Smartphone Factory
class SmartphoneFactory extends ProductFactory {
  createProduct(): Product {
    return new Smartphone();
  }
}

// Client Code
function clientCode(factory: ProductFactory) {
  const product = factory.createProduct();
  console.log(product.getDescription());
}

const laptopFactory = new LaptopFactory();
clientCode(laptopFactory); // Output: 'This is a Laptop'

const smartphoneFactory = new SmartphoneFactory();
clientCode(smartphoneFactory); // Output: 'This is a Smartphone'
"
HzAeDGm4,Build Info,Mana42135,Lua,Friday 11th of August 2023 07:44:53 AM CDT,"local Build_Info = {}

function Build_Info:VersionType()
    return '1.0.1'
end

function Build_Info:GetBuild()
    return 'Aug 11 2023'
end

function Build_Info:GetBuildType()
    return 'BETA'
end

return Build_Info"
drzqLqbh,print_numbers,nikolalsvk,Ruby,Friday 11th of August 2023 07:29:39 AM CDT,"def print_numbers
  (1..100).each do |num|
    output = ''

    output += 'APing' if num % 3 == 0
    output += 'BPong' if num % 5 == 0

    if output.empty?
      puts num
    else
      puts output
    end
  end
end

print_numbers"
u5eHWGa6,Untitled,videns,Java,Friday 11th of August 2023 07:26:39 AM CDT,"package main.com.demo.leak.search.bank;

import main.com.demo.leak.search.bank.model.Balance;
import main.com.demo.leak.search.bank.model.Client;
import main.com.demo.leak.search.bank.model.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

@Repository
public class BankPostgresRepository {

    @Autowired
    private DataSource dataSource;

    public Client createClient(Client client) {
        try (Connection con = getConnection();
             PreparedStatement ps = insertClientStatement(con, client);
             ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                int id = rs.getInt(1);
                client.setId(id);
                System.out.println(""Created client with id "" + id);
            } else {
                throw new RuntimeException(""No results returned from query executions"");
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return client;
    }

    public Transaction createTransaction(Transaction transaction) {
        try (Connection con = getConnection();
             PreparedStatement ps = insertTransactionStatement(con, transaction);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                int id = rs.getInt(1);
                transaction.setId(id);
                System.out.println(""Created transaction with id "" + id);
            } else {
                throw new RuntimeException(""No results returned from query executions"");
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return transaction;
    }

    public Balance getBalance(Integer clientId) {
        Balance balance = new Balance();
        try (Connection con = getConnection();
             PreparedStatement ps = getBalanceStatement(con, clientId);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                int amount = rs.getInt(1);
                balance.setBalance(amount);
                System.out.println(""Get balance for client with id "" + clientId);
            } else {
                throw new RuntimeException(""No results returned from query executions"");
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return balance;
    }

    private PreparedStatement getBalanyceStatement(Connection con, Integer clientId) throws SQLException {
        PreparedStatement ps = con.prepareStatement(""SELECT debit - credit FROM (SELECT COALESCE(sum(amount), 0) AS debit FROM transaction WHERE to_client_id = ? ) a, ( SELECT COALESCE(sum(amount), 0) AS credit FROM transaction WHERE from_client_id = ? ) b;"");
        ps.setInt(1, clientId);
        ps.setInt(2, clientId);
        ps.setInt(3, clientId);
        return ps;
    }


    private PreparedStatement insertClientStatement(Connection con, Client client) throws SQLException {
        PreparedStatement ps = con.prepareStatement(""INSERT INTO client(name, email, phone, password) VALUES (?, ?, ?, ?) RETURNING id"");
        ps.setString(1, client.getName());
        ps.setString(2, client.getEmail());
        ps.setString(3, client.getPhone());
        ps.setString(4, client.getPassword());
        return ps;
    }

    private PreparedStatement insertTransactionStatement(Connection con, Transaction transaction) throws SQLException {
        PreparedStatement ps = con.prepareStatement(""INSERT INTO transaction(from_client_id, to_client_id, amount) VALUES (?, ?, ?) RETURNING id"");
        ps.setInt(1, transaction.getFromClientId());
        ps.setInt(2, transaction.getToClientId());
        ps.setInt(3, transaction.getAmount());
        return ps;
    }

    private Connection getConnection() throws SQLException {
        return dataSource.getConnection();
    }

    public void setDataSource(final DataSource dataSource) {
        this.dataSource = dataSource;
    }
}
"
zsaKpGFW,BankApplication.java,videns,Java,Friday 11th of August 2023 07:23:51 AM CDT,"package main.com.demo.leak.search.bank;

import com.zaxxer.hikari.HikariDataSource;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
import org.springframework.context.annotation.Bean;

import javax.sql.DataSource;

/**
 * @author pavel.ivanov@demo-leak-search.com
 */

@SpringBootApplication
public class BankApplication {

	public static void main(String[] args) {
		SpringApplication.run(BankApplication.class, args);
	}

	@Bean
	public DataSource datasource(DataSourceProperties dataSourceProperties) {
		HikariDataSource dataSource = dataSourceProperties.initializeDataSourceBuilder().type(HikariDataSource.class).build();
		dataSource.setMaximumPoolSize(Runtime.getRuntime().availableProcessors() * 2);
		return dataSource;
	}
}
"
30x0NQUL,IMO,CamolaZ,Python,Friday 11th of August 2023 07:22:34 AM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_percentage_error
import numpy as np
import torch
import torch.nn as nn
import torch.optim as optim
from keras.preprocessing.text import Tokenizer
from keras.preprocessing.sequence import pad_sequences
from IPython.display import clear_output

# Initialize lists to store data


# Split the data into train, valid and validation sets
train_df, valid_df, test_df = train_valid_test_split(label_df, target = 'PRECO_VENDA_OBSERVADO', train_size = 0.6, valid_size = 0.2,  test_size=0.2, shuffle = True, random_state=42)

# Split X y
# ------------------------
X_train = train_df['DESCRICAO_TEXTO'].values # texts
y_train = train_df['PRECO_VENDA_OBSERVADO'].astype(float).values # labels

# Text and label columns
X_valid = valid_df['DESCRICAO_TEXTO'].values # texts
y_valid = valid_df['PRECO_VENDA_OBSERVADO'].astype(float).values # labels

# Text and label columns
X_test = test_df['DESCRICAO_TEXTO'].values # texts
y_test = test_df['PRECO_VENDA_OBSERVADO'].astype(float).values # labels

# Tokenization
# -----------------------------------

#
tokenizer = Tokenizer()
tokenizer.fit_on_texts(X_train)
word_index = tokenizer.word_index

# Train
train_sequences = tokenizer.texts_to_sequences(X_train)
max_sequence_length = max(len(seq) for seq in train_sequences)
X_train_padded_sequences = pad_sequences(train_sequences, maxlen=max_sequence_length)

# Validation
valid_sequences = tokenizer.texts_to_sequences(X_valid)
max_sequence_length = max(len(seq) for seq in train_sequences)
X_valid_padded_sequences = pad_sequences(valid_sequences, maxlen=max_sequence_length)

# Test
test_sequences = tokenizer.texts_to_sequences(X_test)
max_sequence_length = max(len(seq) for seq in test_sequences)
X_test_padded_sequences = pad_sequences(test_sequences, maxlen=max_sequence_length)


# Deep Learning Network configuration
# =========================================================================
# Define the model architecture
class LSTMModel(nn.Module):
    def __init__(self, vocab_size, embedding_dim, hidden_dim):
        super(LSTMModel, self).__init__()
        self.embedding = nn.Embedding(vocab_size, embedding_dim)
        self.lstm = nn.LSTM(embedding_dim, hidden_dim, batch_first=True)
        self.linear = nn.Linear(hidden_dim, 1)
        
    def forward(self, x):
        x = self.embedding(x)
        output, _ = self.lstm(x)
        output = output[:, -1, :]  # Use only the last output from the LSTM
        output = self.linear(output)
        return output

model = LSTMModel(vocab_size=len(word_index) + 1, embedding_dim=100, hidden_dim=128)

# Define the loss function and optimizer
criterion = nn.MSELoss()
optimizer = optim.Adam(model.parameters(), lr=0.01)

# Convert labels to torch tensor
y_train = torch.tensor(y_train,dtype=torch.float32)
y_valid = torch.tensor(y_valid,dtype=torch.float32)

# Train the model
batch_size = 1
train_data = list(zip(X_train_padded_sequences,y_train))
train_loader = torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=True)


# TRAIN
#========================================================================
mapes_train_list = [];  mapes_valid_list = []
for epoch in range(1000):
    total_loss = 0
    for batch_x, batch_y in train_loader:
        optimizer.zero_grad()
        output = model(batch_x)
        loss = criterion(output, batch_y.view(-1, 1))
        loss.backward()
        optimizer.step()
        total_loss += loss.item()
    
    # Calculate MAPE for each epoch
    with torch.no_grad():

        y_train_hat = model(torch.tensor(X_train_padded_sequences, dtype=torch.long))
        mape_train = mean_absolute_percentage_error(y_train,y_train_hat.view(-1))

        y_valid_hat = model(torch.tensor(X_valid_padded_sequences, dtype=torch.long))
        mape_valid = mean_absolute_percentage_error(y_valid,y_valid_hat.view(-1))


    # Print the MAPE for each epoch
    print(f""Epoch {epoch + 1}, Loss: {total_loss}, MAPE_VALID: {mape_valid.item()} , MAPE_TRAIN: {mape_train.item()}  "")
    # Save data for each epoch

    mapes_train_list.append(mape_train)
    mapes_valid_list.append(mape_valid)

    #clear_output(wait=True)
    # plt.plot(mapes_train_list);  plt.plot(mapes_valid_list)
    # plt.ylabel('data') #set the label for y axis
    # plt.xlabel('index') #set the label for x-axis
    # plt.title(""Plotting a list"") #set the title of the graph

# PLOTS
# ===================================================================

# Test map computation
y_test_hat = model(torch.tensor(X_test_padded_sequences, dtype=torch.long))
mape_test = mean_absolute_percentage_error(y_test, y_test_hat.view(-1))
print(mape_test)

plt.plot(mapes_train_list);  plt.plot(mapes_valid_list)
plt.ylabel('data') #set the label for y axis
plt.xlabel('index') #set the label for x-axis
plt.title(""Plotting a list"") #set the title of the graph
"
SivAKfEL,QuizApp1 / openningScreen,salma_samy,Dart,Friday 11th of August 2023 07:18:20 AM CDT,"import 'dart:ui';

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Container(
        // width: MediaQuery.of(context).size.width,
        // height: MediaQuery.of(context).size.height,

        alignment: Alignment.center,
        // padding: EdgeInsets.all(22),
        padding: EdgeInsets.fromLTRB(35, 0, 0, 10),

        decoration: BoxDecoration(
          image: DecorationImage(
            fit: BoxFit.cover,
            image: AssetImage('images/background.jpg'),
          ),
        ),
        child: Scaffold(
          backgroundColor: Colors.transparent,
          body: SafeArea(
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Container(
                    alignment: Alignment.center,
                    padding: const EdgeInsets.all(50),
                    decoration: BoxDecoration(
                        image: DecorationImage(
                      image: AssetImage('images/image2.png'),
                    )),
                  ),
                  SizedBox(
                    height: 25
                    ,

                    ///MediaQuery.of(context).size.height * 0.2,
                  ),
                  Container(
                    child: const Text(
                      'ITI Quiz app',
                      style: const TextStyle(
                        fontFamily: 'Bradley Hand ITC',
                        // fontFamily: 'fonts/Pacifico.ttf',
                        fontSize: 40,
                        color: Colors.yellow,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                  SizedBox(
                      // height: 15,

                      ),
                  Container(
                    child: const Text(
                      'We Are Creative, enjoy our App',
                      style: const TextStyle(
                        fontFamily: 'Brush Script MT',
                        fontSize: 27,
                        color: Colors.white,
                        // fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
          floatingActionButton: Row(
            // mainAxisAlignment: MainAxisAlignment.end,
            mainAxisAlignment: MainAxisAlignment.center,

            children: [
              Container(
                decoration: new BoxDecoration(
                  // borderRadius: new BorderRadius.circular(6.0),
                  color: Colors.transparent,
                ),
                width: 290,
                height: 40,
                child: BottomAppBar(
                  // padding: EdgeInsets.only(left: 15),

                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      foregroundColor: Colors.white,
                      primary: Color(0xff27bf2c),
                      onPrimary: Colors.white,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                    ),
                    child: const Text(
                      'Start',
                      style: TextStyle(
                        // backgroundColor: Colors.transparent,
                        fontSize: 30,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    onPressed: () {
                      print('starting...');
                    },
                  ),
                  // ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

/*

          */
"
DFy8Nt4X,gdhjfg,Salvens,C#,Friday 11th of August 2023 07:11:22 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
 
namespace Test
{
 
    class Program
    {
 
        private static void Main(string[] args)
        {
            int count = int.Parse(Console.ReadLine());
            var dicionary = new Dictionary<string, int>();
            List<KeyValuePair<string, int>> list = new List<KeyValuePair<string, int>>();
 
            for (int i = 0; i < count; i++)
            {
                string[] str = Console.ReadLine().Split(' ');
                int countStr = int.Parse(str[1]);
 
                if (dicionary.ContainsKey(str[0]))
                {
                    dicionary[str[0]] += countStr;
                }
                else
                {
                    dicionary.Add(str[0], countStr);
                }
            }
 
            count = int.Parse(Console.ReadLine());
            var liststr = new List<string>();
 
            for (int i = 0; i < count; i++)
            {
                liststr.Add(Console.ReadLine());
            }
 
 
 
            for (int i = 0; i < liststr.Count; i++)
            {
                var str = liststr[i];
                list = new List<KeyValuePair<string, int>>();
 
                foreach (var el in dicionary)
                {
                    if (el.Key.StartsWith(str))
                    {
                        list.Add(el);
                    }
 
                }
 
                list.Sort((value1, value2) =>
                {
                    if (value1.Value > value2.Value)
                        return -1;
 
                    if (value1.Value < value2.Value)
                        return 1;
 
                    if (value1.Value == value2.Value)
                    {
                        int index = 0;
 
                        var str1 = value1.Key.ToLower();
                        var str2 = value2.Key.ToLower();
 
                        while (index < str1.Length && index < str2.Length
                        && str1[index] == str2[index])
                        {
                            index++;
                        }
 
                        if (index == value1.Key.Length && index != value2.Key.Length)
                        {
                            return -1;
                        }
 
                        if (index == value2.Key.Length && index != value1.Key.Length)
                        {
                            return 1;
                        }
 
                        if (index == value1.Key.Length)
                        {
                            index--;
                        }
 
                        if (str1[index] > str2[index])
                            return 1;
 
                        else if (str1[index] < str2[index])
                            return -1;
 
                    }
 
                    return 0;
 
                });
 
 
                int ind = 0;
 
                string s = """";
 
                while (ind < 10 && ind < list.Count)
                {
                    if (ind < 9 && ind < list.Count - 1)
                        s += $""{list[ind++].Key}\r\n"";
                    else
                        s += $""{list[ind++].Key}"";
                }
 
                if (i != liststr.Count - 1)
                {
                    if (list.Count != 0)
                        s += ""\r\n"";
                    s += ""\r\n"";
                }
 
                Console.Write(s);
            }
 
 
        }
    }
 
}"
0CYK1cEL,Facade,Idanref,TypeScript,Friday 11th of August 2023 06:20:21 AM CDT,"class CPU {
  start(): void {
    console.log(""CPU started"");
  }
}

class Memory {
  load(position: number, data: string): void {
    console.log(`Loading data ${data} at position ${position}`);
  }
}

class HardDrive {
  read(position: number, size: number): string {
    console.log(`Reading ${size} data from position ${position}`);
    return ""data"";
  }
}

// Facade: This is the class that simplifies the interface to the subsystems.
class Computer {
  private cpu: CPU;
  private memory: Memory;
  private hardDrive: HardDrive;

  constructor() {
    this.cpu = new CPU();
    this.memory = new Memory();
    this.hardDrive = new HardDrive();
  }

  start(): void {
    this.cpu.start();
    const data = this.hardDrive.read(1000, 200);
    this.memory.load(0, data);
    console.log(""Computer started"");
  }
}

// Client Code: The client interacts with the subsystems through the simplified interface provided by the facade.
const computer = new Computer();
computer.start();
// Output:
// CPU started
// Reading 200 data from position 1000
// Loading data data at position 0
// Computer started"
kNrisFDQ,data661,TestGuy1,JSON,Friday 11th of August 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9ec7bce836fb8195269ba11ae64eaa30dc0d5128333d126216476ddce1085cbd41ad0e58a636e7de7a100e36f4fa13d30b9a6e7d8c8eba8b5b7c7a4ffab6fae5191b476ad632806c521de56ac8f39f7e054745098d550f97390e1d20cea17f3750728e1b75660ee8c7e9145117002cd714d559a15430b3243ab5f7837849fbd2',
  otherdata: [
    '41a0ffa8b8c130048e2909676c1efdb5',
    '7a941fec7a4d7da1f534ae855db075cf',
    'dd7c4f07159b22ce66fc4d823991e9d6',
    '18d1bbab283e55062841917d1504f3f4',
    '678d872daa32a9eeb00ef142578a0ecc',
    '2b97f0d5bf4af99800e6c3b4bfa3e105',
    '9bc8f59af51c8ca36ac39a5f0895b81f',
    'fc505eceef160473f485c99e52cb5829'
  ]
}"
k6ETnnys,Обращение к элементу массива,Mauzzz0,TypeScript,Friday 11th of August 2023 05:26:46 AM CDT,"const clients = [{id: 1, name: '100'}, {id: 2, name: '200'}];

const findFirstClient = (arr: typeof clients) => {
    return arr[0];
}

const firstClient = findFirstClient(clients);

firstClient.name = 'one';

console.log(clients);

const firstClientAlternative = clients[0];

firstClientAlternative.name = 'two';

console.log(clients);
"
DrbjABzy,EXO Ladder 4,ktvchains,Perl,Friday 11th of August 2023 05:18:15 AM CDT,"# EN, 1080p
# I'll try to update this on Fridays, as people have requested 1080p links, but there might be delays, since it's not a priority.
# Subtitles (KOCOWA release): https://subscene.com/subtitles/exos-travel-the-world-on-a-ladder-in-geoje-and-tongyeong-travel-the-world-on-exos-ladder-season-4-exo-4
 
# E2 230811
[!ads] watch: https://filemoon.sx/d/jmql5fhinklj
[!ads] download: https://www.europeup.com/vys51hg3gopw/exol4_e2_1080p_kcw.mp4

# E1 230811
[!ads] watch: https://filemoon.sx/d/ju84ijs5bbx2
[!ads] download: https://www.europeup.com/iey3q37g7ew1/exol4_e1_1080p_kcw.mp4"
fXWq31VF,DotaN Stats,Enkada,Lua,Friday 11th of August 2023 05:14:22 AM CDT,"require(""stats"")

function CAddonTemplateGameMode:InitGameMode()
	-- [Your code]
	
	-- Sends dedicated key to the server
	-- Comment out this line once key is received and set on server side
	Stats.SendKey()

	-- Listens to an event, that occurs when one of the team's anicent gets destroyed
	-- and submits match data via HTTP POST request
	ListenToGameEvent('dota_match_done', function(keys)
		Stats.SubmitMatch(keys.winningteam)
    end, nil)
end


-- 
-- File [stats.lua]
--

Stats = class({})

Stats.host = ""https://dotan.enkada.ru/api/match/add.php""
Stats.key = GetDedicatedServerKey(""FaPaH002"")

Stats.token = ""O=X97Pq-NnZ4rTY9GYa1!Dq7IUbltZY38apSJa7LC-ISvfE/qf8T6OO/VviCEUJx""

-- Submits match data using POST HTTP request
function Stats.SubmitMatch(winningteam, callback)
	print(""[STATS] Attempt to submit match"")

	local data = {
		matchID = tostring(GameRules:Script_GetMatchID()), -- Returns zero in dev mode
		duration = math.floor(GameRules:GetGameTime() + 0.5),
        winner = winningteam, -- DOTA_TEAM_GOODGUYS = 2, DOTA_TEAM_BADGUYS = 3
		players = GetPlayerList(),
        token = Stats.token
		-- key = Stats.key
	}

    --print(""Post data JSON:"", json.encode(data))

	local req = CreateHTTPRequestScriptVM(""POST"", Stats.host)

    if req == nil then
        print(""[STATS] Failed to create http request"")
	end

	req:SetHTTPRequestGetOrPostParameter('data', json.encode(data))

    req:Send(function(res)
        if res.StatusCode ~= 200 then
            print(""[STATS] Server connection failure, code"", res.StatusCode)
            return
        end

		print(""[STATS] Received"", res.Body)
		local obj, pos, err = json.decode(res.Body)
    end)
end

-- Sends dedicated server key
-- Only used on the first setup and when secret string for Stats.key changes
function Stats.SendKey()
	local data = {
		key = Stats.key
	}

	local req = CreateHTTPRequestScriptVM(""POST"", Stats.host)

    if req == nil then
        print(""[STATS] Failed to create http request"")
	end

	req:SetHTTPRequestGetOrPostParameter('dedicated_key', json.encode(data))

    req:Send(function(res)
        if res.StatusCode ~= 200 then
            print(""[STATS] Server connection failure, code"", res.StatusCode)
            return
        end

		print(""[STATS] Server key sent"", res.Body)
    end)
end

-- Creates an array of players
-- steamName returns an empty string
-- TODO: add tower damage
function GetPlayerList()
    local players = {}
    for playerID = 0, DOTA_MAX_PLAYERS do
        if PlayerResource:IsValidPlayerID(playerID) then
            if not PlayerResource:IsBroadcaster(playerID) then

                table.insert(players, {
                    steamID32 = PlayerResource:GetSteamAccountID(playerID),
                    steamID64 = tostring(PlayerResource:GetSteamID(playerID)), 
					playerName = PlayerResource:GetPlayerName(playerID), -- Empty for some reason
					team = PlayerResource:GetTeam(playerID) - 2,
					hero = string.gsub(PlayerResource:GetSelectedHeroName(playerID), ""npc_dota_hero_"", """"),
					items = GetItemList(PlayerResource:GetSelectedHeroEntity(playerID)),
					networth = PlayerResource:GetNetWorth(playerID),
					kills = PlayerResource:GetKills(playerID),
					deaths = PlayerResource:GetDeaths(playerID),
					assists = PlayerResource:GetAssists(playerID),
					gpm = PlayerResource:GetGoldPerMin(playerID),
					xpm = PlayerResource:GetXPPerMin(playerID),
					level = PlayerResource:GetLevel(playerID),
					lastHits = PlayerResource:GetLastHits(playerID),
					denies = PlayerResource:GetDenies(playerID),
					damage = PlayerResource:GetRawPlayerDamage(playerID),
					healing = PlayerResource:GetHealing(playerID)
                })
            end
        end
    end

    return players
end

-- Creates an item array by hero
function GetItemList(hero)
    local itemTable = {}

    for i = 0, 5 do
        local item = hero:GetItemInSlot(i)
        if item then
            local itemName = string.gsub(item:GetAbilityName(), ""item_"", """") -- Cuts the item_ prefix
            table.insert(itemTable, itemName)
        end
    end

    return itemTable
end"
RHYUrCx5,Untitled,Gosunov,C++,Friday 11th of August 2023 05:07:58 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define set _set
 
const int maxn = 1000000000;
char p[maxn / 16 + 1];
 
void set(int x) {
    x >>= 1;
    p[x / 8] |= '\1' << (x % 8); 
}
 
bool get(int x) {
    x >>= 1;
    return !((p[x / 8] >> (x % 8)) & 1);
}
 
void build() {
    for (int i = 3; i * i < maxn; i += 2) {
        if (!get(i))
            continue;
        for (int j = i * i; j < maxn; j += (i << 1)) {
            set(j);
        }
    }
}
 
bool is_prime(int x) {
    if (x == 2) return true;
    if ((x & 1) == 0) return false;
    return get(x);
}
 
void solve() {
    int primes = 0;
    for (int i = 1; i < maxn; ++i)
        primes += is_prime(i);
    cout << primes << '\n';
}
 
signed main() {
    build();
    solve();
}"
rUnYpK7i,ADSAF,Salvens,C++,Friday 11th of August 2023 05:05:05 AM CDT,"#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <random>
#include <vector>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define int long long

const int C = 20;
const int MAXN = (int)1e6 + 5;
const long long INF = (long long)1e18;
const double PI = 3.1415926535897;
const int k = 1000003, mod = 1e9 + 7, mod1 = 228228227;
vector<int> h(MAXN), h1(MAXN), rh(MAXN), rh1(MAXN), p(MAXN), p1(MAXN);

int mul(int a, int b) {
    return a * b % mod;
}

int minu(int a, int b) {
    if (a >= b) {
        return a - b;
    } else {
        return a - b + mod;
    }
}

int mul1(int a, int b) {
    return a * b % mod1;
}

int minu1(int a, int b) {
    if (a >= b) {
        return a - b;
    } else {
        return a - b + mod1;
    }
}

int get(int l, int r) {
    return minu(h[r], mul(h[l], p[r - l]));
}

int get1(int l, int r) {
    return minu1(h1[r], mul1(h1[l], p[r - l]));
}

int rget(int l, int r) {
    return minu(rh[r], mul(rh[l], p[r - l]));
}

int rget1(int l, int r) {
    return minu1(rh1[r], mul1(rh1[l], p[r - l]));
}

void solve() {
    int n, m;
    cin >> n >> m;
    vector<int> a(n);
    for (int &i : a) {
        cin >> i;
    }
    h1[0] = 0;
    h[0] = 0;
    rh[0] = 0;
    rh1[0] = 0;
    for (int i = 0; i < a.size(); ++i) {
        h[i + 1] = (mul(h[i], k) + a[i]) % mod;
        rh[i + 1] = (mul(rh[i], k) + a[a.size() - i - 1]) % mod;
        h1[i + 1] = (mul1(h1[i], k) + a[i]) % mod1;
        rh1[i + 1] = (mul1(rh1[i], k) + a[a.size() - i - 1]) % mod1;
    }

    vector<int> ans = {n};
    for (int i = 1; i <= n / 2; ++i) {
//        cout << i << endl;
//        cout << get(0, i) << ' ' << rget(n - 2 * i, n - i) << '\n';
//        cout << mul(get(0, i), p[n - i]) << ' ' << mul(rget(n - 2 * i, n - i), p[i]) << ' ' << mul1(get1(0, i), p[n - i]) << ' ' << mul1(rget1(n - 2 * i, n - i), p[i]) << '\n';
        if (get(0, i) == rget(n - 2 * i, n - i) && get(0, i) == rget(n - 2 * i, n - i)) {
            ans.emplace_back(n - i);
        }
    }
    sort(ans.begin(), ans.end());
    for (int i : ans) {
        cout << i << ' ';
    }
}

int32_t main() {
//    freopen(""input.txt"", ""r"", stdin);
//    freopen(""output.txt"", ""w"", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    p[0] = 1;
    for (int i = 1; i < MAXN; ++i) {
        p[i] = (p[i - 1] * k) % mod;
    }
    int ttt = 1;
    //cin >> ttt;
    while (ttt--) {
        solve();
    }
    return 0;
}"
rbJ22Gqs,Election and Political Simulation (C++),4rl3fd,C++,Friday 11th of August 2023 04:59:49 AM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>
#include <unistd.h>
#include <chrono>
#include <thread>
#include <fstream>
#include <algorithm>
#include <utility>
#include <cmath>

using namespace std;

//string allparties[6][5] = {{""National Revival Rally - L"", ""Collectivist Union"",""Labor Party"", ""New Cultural Movement - L"", ""Patriotic Socialists United - L""}, {""National Reform Council"", ""New Cultural Movement - P"", ""Yellow & Blue Alliance - P"", ""People's Nationalist League - P"", ""National Revival Rally - P""}, {""Liberal Democratic Congress"", ""Unity and Nation - M"", ""Yellow & Blue Alliance - M"", ""Centrist Democrats"", ""National Revival Rally - M""}, {""The Traditional Way"", ""Unity and Nation - R"", ""Yellow & Blue Alliance - R"", ""Conservative Labor"", ""National Revival Rally - R""},{""Order and Culture Front"", ""Unity and Nation - N"", ""Patriotic Socialists United - N"", ""National Revival Rally - N"", ""People's Nationalist League - N""}, {""National Development Corp"", ""United Officer's League"", ""People's Revolutionary Vanguard""}};

string allparties[6][10]= {
    {""Progressive Unity Party"",""Equality Forward Party"",""People's Liberation Alliance"",""Social Justice Movement"",""Workers' Solidarity Party"",""Democratic Renewal Front"",""Collective Future Coalition"",""Green Progress Party"",""New Horizons League"",""Liberty and Equity Bloc""},
    {""People's Voice Party"",""Common Folks Movement"",""National Renewal Party"",""True Patriot Party"",""People's Choice Alliance"",""Everyday Heroes Party"",""Main Street Movement"",""Grassroots Empowerment Party"",""Heartland Action Party"",""Populist Unity Front""},
    {""Unity Center Party"",""Progressive Moderates Alliance"",""Common Ground Coalition"",""Centrist Democratic Movement"",""Bridge Builders Party"",""Modern Voice Party"",""Middle Path Alliance"",""Balanced Future Front"",""Core Values Party"",""Centrist Reconciliation Party""},
    {""Conservative Reform Party"",""Traditionalist Vanguard"",""National Sovereignty Party"",""Freedom and Order Alliance"",""Righteous Future Movement"",""Patriotic Restoration Party"",""True Values Front"",""Heritage Guardians Party"",""Nationalist Revival Coalition"",""Right-Wing Unity Party""},
    {""Homeland First Party"",""National Pride Movement"",""Sovereign Nation Party"",""Patriot's Renewal Front"",""Cultural Identity Alliance"",""Heritage Defenders Party"",""Native Land Coalition"",""National Unity Guardians"",""Ethno-Nationalist Bloc"",""New Nationalist Vanguard""},
    {""National Stability Directorate"",""National Security Council"",""Order Maintenance Committee"",""Defense Authority Council"",""Sovereignty Guardianship Council"",""Military Oversight Committee"",""National Harmony Command"",""Authority Preservation Council"",""Unity and Defense Directorate"",""Strategic Leadership Council""}
    };

string par_name[7] = {""Republican Democracy Party - L"", ""Republican Democracy Party - P"", ""Republican Democracy Party - M"", ""Republican Democracy Party - R"", ""Republican Democracy Party - N"", ""National Development Corp"", ""Vacant""};
string par_acro[7] ={""Leftists"", ""Populists"", ""Moderates"", ""Rightists"", ""Nationalists"", ""Military"", ""Vacant""};
int par_coal[5];
float par_seats[5];
int par_seats_int[5];

int wbmid =0; // 0 = midterm before snap: make next elect general, 1 = general before snap, make next elect midterm
bool snap = false;
int friendly[6];

string flags[13] = {""Economic Redistribution"", ""Labor Rights Empowerment"", ""Social Welfare Expansion"", ""Education Reform"", ""Market Regulation"", ""Immigration Management"", ""Foreign Relations Diplomacy"", ""Cultural Heritage Preservation"", ""Strong National Defense"", ""Identity-Based Citizenship"", ""Environmental Protection"", ""National Security Enhancement"", ""Ethnic and National Exclusivity""};

int minumpol = 7;

int pflags[5];


int prevseats[5] = {0,0,0,0,0};


int splural = 0;
int startyear = 1950;
bool isnew[5] = {true,true,true,true,true};

int military = 80;
int milfav = 4, milenem =0;
int milyear = startyear;

int intervals = 2;
int inyear = startyear;

string userinput ="""";

int prevtot =0;
int policy;
float pfloat = 0.50;
int year = startyear;
int trendyear = startyear;
int lhgains[5] = {0,0,0,0,0};

int militancy = 50;

int prevpercent[5] = {0,0,0,0,0};

bool fair = true;

int presyear =startyear, premyear = startyear;

string cannames[8];
string pcannames[7] = {"""","""","""","""","""","""",""""};
int pcanyear[5] = {startyear,startyear,startyear,startyear,startyear};
int canyear[5] = {startyear,startyear,startyear,startyear,startyear};

string prevpres = """", prevprem = """";

string presprename, premprename;

string pname, pmname;

string president, primeminister, opposition;

int trending =2;

float par_votes[5] = {25,25,25,25,25};
int par_votes_int[5];

float par_percent[5];
int par_percent_int[5];

float popularity[5] = {20,20,20,20,20};

int totalvotes =0;

int tvts =0;

int people =100;
int pefav = trending, penem = 4;
int peyear = startyear; // note: create a people's revolution mechanic

int seats = 50;
int seatcheck;

int presidentnum =6;
int pres_votes =0;

int juntayear = startyear-8;

int primeministernum =6;

int oppositionnum =6;

int govmembers=0;
int gmem[5];
int govseats;
int govper;

int plurality;
int pluralvotes;

int oppomembers =0;
int omem[5];
int opposeats;
int oppoper;

int indepmembers =0;
int imem[5];
int indepseats =0;
int indeper;

int p_auth[7] = {0,0,0,0,0};
// -5 to 5

int totauth = 50; // higher, less authoritarian, lower more authoritarian
// -100 to 100

int av_correspond =0; // this integer will correspond to the ""i"" integer use din the for loop for adding votes

bool midterm = false;

bool junta = false;

bool ot =false;
int countdown = startyear;

int economy = 40; // only goes 1 to 100
int competence[5] = {2,3,4,3,2};
int BBC = 5;
bool boom = true;
int shiffty;

void mupdate()
{
    militancy += p_auth[presidentnum];
    militancy += totauth/10;
    militancy += people/10;
    militancy -= (year - presyear)/10;

    if(militancy > 100)
    {
        militancy =100;
    }
    if(militancy < -100)
    {
        militancy = -100;
    }
}

void updateauth()
{
    float auadd = (float) p_auth[presidentnum]*(popularity[presidentnum] + (par_seats[presidentnum]/seats));
    totauth += p_auth[presidentnum];
    totauth += militancy/10;
    //totauth += auadd;
    if(totauth > 100)
    {
        totauth = 100;
    } else if(totauth < -100)
    {
        totauth = -100;
    }
}

void bbcupdate()
{
    if(boom)
    {
        BBC++;
    } else
    {
        BBC--;
    }
    if(BBC >= shiffty)
    {
        BBC--;
        boom = false;
    }
    if(BBC <= shiffty-(shiffty*2))
    {
        shiffty = (rand()%3)*5;
        BBC++;
        boom = true;
    }

    if(boom == false)
    {
        if(rand()%10 < competence[presidentnum]/2)
        {
            boom = true;
            shiffty = (rand()%3)*5;
        }
    } else if(boom == true)
    {
        if( rand()%10 > competence[presidentnum]*2)
        {
            boom = false;
        }
    }
}

void shiftcomp(int k)
{
    if(rand()%10 <5)
    {
        competence[k]++;
    } else
    {
        competence[k]--;
    }
    if(competence[k] > 10)
    {
        competence[k] = 10;
    }
    if(competence[k] < 1)
    {
        competence[k] = 1;
    }
}

void ecupdate()
{
    float bonus;
    switch(competence[presidentnum])
    {
    case 1:bonus = 0.01;
        break;
    case 2:bonus = 0.03;
        break;
    case 3:bonus = 0.05;
        break;
    case 4:bonus = 0.1;
        break;
    case 5:bonus = 0.15;
        break;
    case 6:bonus = 0.2;
        break;
    case 7:bonus = 0.25;
        break;
    case 8: bonus = 0.3;
        break;
    case 9: bonus = 0.4;
        break;
    case 10: bonus = 0.5;
        break;
    default:
        bonus = 0.6;
        break;
    }

    switch(people/10)
    {
    case 1:bonus += -0.25;
        break;
    case 2:bonus += -0.2;
        break;
    case 3:bonus +=  -0.15;
        break;
    case 4:bonus += -0.1;
        break;
    case 5:bonus += -0.05;
        break;
    case 6:bonus += 0.05;
        break;
    case 7:bonus += 0.1;
        break;
    case 8: bonus += 0.15;
        break;
    case 9: bonus += 0.2;
        break;
    case 10: bonus += 0.25;
        break;
    default:
        if(people < 0)
        {
            bonus += -0.3;
        }else
        {
            bonus = 0.3;
        }
    }
    float BBChange = (float) BBC/100;
    bonus += BBChange;
    economy += economy*bonus;
    int downturn = rand()%10;
    economy -= downturn;
    economy += militancy/10;
    if(economy > 100)
    {
        economy = 100;
    }
    if(economy < -100)
    {
        economy = -100;
    }
}

void indivgen(int k)
{
    string consonant[20] = {""B"",""B"",""K"",""D"",""G"",""H"",""H"",""L"",""L"",""M"",""N"",""P"",""R"",""S"",""S"",""T"",""T"",""W"",""W"",""Y""};
    string vowel[13] = {""A"",""A"",""A"",""A"",""A"",""E"",""I"",""I"",""I"",""O"",""O"",""O"",""U""};
    string aftercon[11] = {""NG"",""NG"",""M"",""M"",""N"",""K"",""K"",""P"",""P"",""T"",""Y""};

    string bloc1,bloc2, bloc3;
    string fname, lname;
    bloc1 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc1 += aftercon[rand()%11];
        }
        bloc2 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc2 += aftercon[rand()%11];
        }
        bloc3 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc3 += aftercon[rand()%11];
        }

        fname = bloc1 + bloc2;
        if(rand()%10 < 5)
        {
            fname += bloc3;
        }



        bloc1 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc1 += aftercon[rand()%11];
        }
        bloc2 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc2 += aftercon[rand()%11];
        }
        bloc3 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc3 += aftercon[rand()%11];
        }

        lname = bloc1 + bloc2;
        if(rand()%10 < 5)
        {
            lname += bloc3;
        }
        cannames[k] = fname + "" "" + lname;


}

void pmindivgen(int k)
{
    string consonant[20] = {""B"",""B"",""K"",""D"",""G"",""H"",""H"",""L"",""L"",""M"",""N"",""P"",""R"",""S"",""S"",""T"",""T"",""W"",""W"",""Y""};
    string vowel[13] = {""A"",""A"",""A"",""A"",""A"",""E"",""I"",""I"",""I"",""O"",""O"",""O"",""U""};
    string aftercon[11] = {""NG"",""NG"",""M"",""M"",""N"",""K"",""K"",""P"",""P"",""T"",""Y""};

    string bloc1,bloc2, bloc3;
    string fname, lname;
    bloc1 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc1 += aftercon[rand()%11];
        }
        bloc2 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc2 += aftercon[rand()%11];
        }
        bloc3 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc3 += aftercon[rand()%11];
        }

        fname = bloc1 + bloc2;
        if(rand()%10 < 5)
        {
            fname += bloc3;
        }



        bloc1 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc1 += aftercon[rand()%11];
        }
        bloc2 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc2 += aftercon[rand()%11];
        }
        bloc3 = consonant[rand()%20] + vowel[rand()%13];
        if(rand()%10 < 3)
        {
            bloc3 += aftercon[rand()%11];
        }

        lname = bloc1 + bloc2;
        if(rand()%10 < 5)
        {
            lname += bloc3;
        }
        pcannames[k] = fname + "" "" + lname;


}

void pecheck()
{
    if(presidentnum == pefav)
    {
        people += 10;
    } else if(presidentnum == penem)
    {
        people -= 10;
    } else
    {
        if(presidentnum > pefav)
        {
            people -= presidentnum - pefav;
        } else
        {
            people -=  pefav -presidentnum;
        }

        if(presidentnum > penem)
        {
            people += presidentnum - penem;
        } else
        {
            people +=  penem -presidentnum;
        }
    }

    if(fair == false)
    {
        people -= year-presyear;
    }

    if(pefav == oppositionnum)
    {
        people -= 5;
    }
    if(penem == primeministernum)
    {
        people -= 5;
    }
    if(pefav == primeministernum)
    {
        people += 5;
    }

    people -= par_percent_int[penem]/2;
    people += par_percent_int[pefav]/2;
    people += economy/10;
    people += totauth/10;
    people += militancy/10;

    if(fair == false)
    {
        people -= year - presyear;
    }

    if(people > 100 && presidentnum == pefav)
    {
        people = 100;
    } else if (people > 40 && presidentnum == penem)
    {
        people = 40;
    } else if (people > 70 && presidentnum != pefav && presidentnum != penem)
    {
        people = 70;
    }

    if(people < -200)
    {
        people = -200;
    }
}

void pshift()
{

        switch(rand()%10)
        {
        case 1:
        case 2:
            penem++;
            break;
        case 9:
        case 8:
            penem --;
            break;
        default:
            break;
        }
    if(penem > 4)
    {
        penem = 4;
    }
    if(penem < 0)
    {
        penem  =0;
    }
    if(penem == pefav)
    {
        penem = rand()%4;
    }
}

void revcheck()
{
    if(rand()%20 < year - peyear)
    {
        if(people < -25 && rand()%20 > (people + par_percent_int[presidentnum])-intervals && militancy < -10)
        {
            intervals =0;
            peyear = year;
            ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << presprename << "" ("" << prevpres << "") "" << presyear << "" - "" << year << "" (REVOLT)"" << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];


        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << prevprem << "") "" << premyear << "" - "" << year  << "" (REVOLT)""<< endl;
        pmfile.close();
        premyear = year;
        prevprem = par_name[primeministernum];
        premprename = cannames[primeministernum];
        economy -= (rand()%5)*5;
        if(presidentnum == milfav)
        {
            military -=50;
        } else if(presidentnum == milenem)
        {
            military += 25;
        } else
        {
            military -=30;
        }
        totauth += rand()%200;

        intervals = 0;
        ot = true;
        militancy += rand()%200;
            presidentnum = pefav;
            oppositionnum = penem;
            president = par_name[pefav];
            opposition = par_name[oppositionnum];
            presyear = year;
            pname = cannames[pefav];

            primeministernum = 6;
            primeminister = ""VACANT"";
            premyear = year;
            pmname = ""VACANT"";
            fair = true;
            junta = false;
            midterm = false;
            people =99;
            cout << ""REVOLUTION!"" << endl;
            sleep(1);
        }else if(people < -10 && rand()%100 < military)
        {
            people += rand()%200;
            militancy += rand()%200;
            cout << ""REVOLUTION FAILED"" << endl;
            sleep(1);
        }
    }
}

void mchange()
{
    if((rand()%year-startyear)+1 < year - milyear)
    {
        milyear = year;
        int k = rand()%10;
        if(presidentnum != milfav)
        {
            if(milfav > 2)
        {
            switch(k)
        {
        case 1:
        case 2:
            milfav++;
            break;
        case 10:
        case 9:
            milfav--;
            break;
        default:
            break;
        }
        if(milfav > 4)
        {
            milfav =4;
        } else if( milfav < 0)
        {
            milfav = 0;
        }
        } else if(milfav <=3)
        {

            switch(k)
        {
        case 1:
        case 2:
        case 3:
        case 4:
            milfav++;
            break;
        case 10:
            milfav--;
            break;
        default:
            break;
        }
        if(milfav > 4)
        {
            milfav =4;
        } else if( milfav < 0)
        {
            milfav = 0;
        }

        }
        } else
        {

            if(milfav > 2)
        {
            switch(k)
        {
        case 1:
            milfav++;
            break;
        case 10:
            milfav--;
            break;
        default:
            break;
        }
        if(milfav > 4)
        {
            milfav =4;
        } else if( milfav < 0)
        {
            milfav = 0;
        }
        } else if(milfav <=3)
        {

            switch(k)
        {
        case 1:
        case 2:
            milfav++;
            break;
        case 10:
            milfav--;
            break;
        default:
            break;
        }
        if(milfav > 4)
        {
            milfav =4;
        } else if( milfav < 0)
        {
            milfav = 0;
        }

        }



        }



        k = rand()%10;

        if(milenem <=3)
        {

            switch(k)
        {
        case 1:
        case 2:
            milenem++;
            break;
        case 10:
        case 9:
        milenem--;
        break;
        default:
            break;
        }

        } else if(milenem > 3)
        {

            switch(k)
        {
        case 1:
        case 2:
        case 3:
        case 4:
            milenem--;
            break;
        case 10:
        milenem++;
        break;
        default:
            break;
        }

        }


        for(int i=0; i!= oppomembers; i++)
        {
            if(milfav == omem[i])
            {
                military -=5;
            }
            if(milenem == omem[i])
            {
                military +=5;
            }
        }

        for(int i=0; i!= govmembers; i++)
        {
            if(milfav == gmem[i])
            {
                military +=5;
            }
            if(milenem == gmem[i])
            {
                military -=5;
            }
        }

        if(milenem > 4)
        {
            milenem =4;
        } else if( milenem < 0)
        {
            milenem = 0;
        }

        while(milenem == milfav)
        {
            milenem = rand()%4;
        }
    }
    par_name[5] = allparties[5][rand()%3];
}

void covalues()
{
    if(presidentnum == milfav)
    {
        military += 10;
    }else if(presidentnum == milenem)
    {
        military -= 10;
    }else
    {
        if(presidentnum < milenem)
        {
            military += milenem - presidentnum;
        } else
        {
            military += presidentnum - milenem;
        }

        if(presidentnum < milfav)
        {
            military -= milfav - presidentnum;
        }else
        {
            military -= presidentnum - milfav;
        }
    }

    if(primeministernum == milfav)
    {
        military += 5;
    } else if(primeministernum == milenem)
    {
        military -= 5;
    }

    if(oppositionnum == milfav)
    {
        military -= 20;
    }
    if(fair == false)
    {
        military -= year- presyear;
    }
    if(military > 100 && presidentnum == milfav)
    {
        military = 100;
    } else if (military > 40 && presidentnum == milenem)
    {
        military = 40;
    } else if (military > 70 && presidentnum != milfav && presidentnum != milenem)
    {
        military = 70;
    }
    if(military < -100)
    {
        military =-100;
    }
    military += economy/10;
    military-= totauth/10;
    military += (int) (par_seats[milfav] / seats)*100;
    military -= (int) (par_seats[milenem] / seats)*100;
}

void coupcheck()
{
    // coup factor = term length(year - presyear)

    if(rand()%8 < year - juntayear && junta == false)
    {

        int supportfactor = (int)(par_percent_int[presidentnum]/10 + ((par_seats[presidentnum] / seats)*100) + military) - (year-presyear);
        int sfcheck = rand()%50;
        sfcheck = sfcheck - (sfcheck*2);
        if(sfcheck > supportfactor-intervals)
        {
            intervals = 0;
            junta = true;
        ot = true;
        juntayear = year;
            ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << presprename << "" ("" << prevpres << "") "" << presyear << "" - "" << year << "" (COUP)"" << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];


        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << prevprem << "") "" << premyear << "" - "" << year  << "" (COUP)""<< endl;
        pmfile.close();
        premyear = year;
        prevprem = par_name[primeministernum];
        premprename = cannames[primeministernum];


        economy -= (rand()%5)*5;
        if(presidentnum == pefav)
        {
            people -=50;
        } else if(presidentnum == penem)
        {
            people += 25;
        } else
        {
            people -=30;
        }
        totauth -= rand()%200;
        militancy -= rand()%200;
        intervals = 0;
            presidentnum = milfav;
            oppositionnum = milenem;
            president = par_name[presidentnum];
            opposition = par_name[oppositionnum];
            presyear = year;
            pname = cannames[milfav];
            p_auth[presidentnum] = -10;

            primeministernum = 6;
            primeminister = ""VACANT"";
            premyear = year;
            pmname = ""VACANT"";
            fair = false;
            midterm = false;
            military =99;
            cout << ""MILITARY COUP!"" << endl;
            sleep(1);
        } else if(military < -10 && rand()%100 < people)
        {
            military += rand()%200;
            militancy += rand()%200;
            cout << ""COUP ATTEMPT FAILED"" << endl;
            sleep(1);
        }
    }
}

void countplural()
{
    pluralvotes = 0;
    for(int i=0; i!=5; i++)
    {
        if(par_votes_int[i] > pluralvotes)
        {
            plurality =i;
            pluralvotes = par_votes_int[i];
        }
    }
}

void dsdhondt()
{
    int winr = 6;
    int winnum =0;
    int vcomp[6];
    int counts[6]= {0,0,0,0,0};
    vcomp[5] =0;
    for(int i=0; i!=5; i++)
    {
        vcomp[i] = par_votes_int[i];
    }

    for(int i=0; i< seats*pfloat;i++)
    {
        //cout << ""A"";
        for(int j=0; j!=5; j++)
        {
            //cout << ""B"";
            if(vcomp[j] > winnum)
            {
                winr = j;
                winnum = vcomp[j];
            }
        }
        /*for(int f=0; f!=5; f++)
        {
            cout << par_name[f] << "" "" << counts[f]+1 << "" "" << vcomp[f] << "" "";
            if(f == winr)
            {
                cout << ""+"" << endl;
            }else
            {
                cout <<  endl;
            }

        }*/
        counts[winr]++;
        vcomp[winr] = par_votes_int[winr]/(counts[winr]+1);
        par_seats[winr]++;
        par_seats_int[winr]++;

        if(vcomp[winr] == 0)
        {
            for(int c=0; c!=5; c++)
            {
                vcomp[c] = par_votes_int[c];
            }
        }

        winnum =0;
        winr =6;
        //sleep(1);
        //system(""CLS"");
    }

    for(int i=0; i!=5; i++)
    {
        lhgains[i] = par_seats_int[i];
    }
}

void discont()
{
    srand(time(NULL));
    int order[5] = {0,0,0,0,0};
    int oper[5] = {0,0,0,0,0};

    for(int i=0; i!=5; i++)
    {
        oper[i] = par_percent_int[i];
        order[i] = i;
    }

    for(int i=0; i!=5; i++)
    {
        if(i == presidentnum && midterm == true)
        {
            oper[i] += 5;
        } else if(i == plurality && midterm == false)
        {
            oper[i] += 15;
        } else if(i == presidentnum && midterm == false)
        {
            oper[i] += 5;
        } else if(i == plurality && midterm == true)
        {
            oper[i] += 10;
        }

        if(i == presidentnum)
        {
            oper[i] +=10;
        }
        if(i == primeministernum)
        {
            oper[i] += 5;
        }
        if( i == oppositionnum)
        {
            oper[i] += 5;
        }
        if(i == trending)
        {
            oper[i] += 7;
        }
        if(i == presidentnum)
        {
            oper[i] -= year-presyear;
        }
        if(plurality != presidentnum && i == plurality)
    {
        oper[i] += par_percent_int[plurality] - par_percent_int[presidentnum];
    }
    }

    int k =0;

    /*if(year == startyear)
    {
        policy = ((rand()%13) *5)+35;
        pfloat = (float) policy/100;
    }*/

    for(int c=0; c< round(seats*pfloat); c++)
    {
        for(int f=0; f!=5; f++)
        {
            k = rand()%100;
                if(k < oper[f])
                {
                    par_seats[order[f]]++;
                    par_seats_int[order[f]]++;
                    break;
                }
        }

    }

    for(int i=0; i!=5; i++)
    {
        lhgains[i] = par_seats_int[i];
    }

}

void calsplu()
{
    int winer = 1;
    for(int i=0; i!=5; i++)
    {
        if(par_seats_int[i] > winer)
        {
            splural = i;
            winer = par_seats_int[i];
        }
    }
}

int add_votes()
{
    srand(time(NULL));
    std::this_thread::sleep_for(std::chrono::milliseconds(500));
    float advote =0;
    int event = rand()%5;
    if(av_correspond == presidentnum){
        switch(event)
        {
        case 3:
            advote += (rand()%totalvotes) *1.5;
        case 4:
            case 5:
            advote += (rand()%totalvotes) *1.25;
            break;
        default:
            advote += (rand()%totalvotes) * 0.25;
        }
    }
    if(av_correspond == primeministernum) {
        switch(event)
        {
        case 1:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.95;
            }else
            {
                advote += (rand()%totalvotes)*1.10;
            }
            break;
        case 2:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.5;
            }else
            {
                advote += (rand()%totalvotes)*1.30;
            }
        case 3:
            case 4:
                if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.25;
            }else
            {
                advote += (rand()%totalvotes)*0.5;
            }
            break;
        default:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.05;
            }else
            {
                advote += (rand()%totalvotes) * 0.10;
            }
        }
    }
    if(av_correspond == oppositionnum){
        switch(event)
        {
        case 1:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 1.10;
            }else
            {
                advote += (rand()%totalvotes) *1.75;
            }
        case 2:
        case 3:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.5;
            } else
            {
                advote += (rand()%totalvotes) *1.10;
            }
            break;
        default:
            if(primeministernum == oppositionnum)
            {
                advote += (rand()%totalvotes) * 0.10;
            }else
            {
                advote += (rand()%totalvotes) * 0.5;
            }
        }
    }
    int kal = rand()%100;
    if(kal >50)
    {
        advote += (rand()%totalvotes)/100;
    } else if(kal <50 && kal >30)
    {
        advote += (rand()%totalvotes)/50;
    } else if( kal < 30 && kal > 10)
    {
        advote += (rand()%totalvotes)/20;
    } else if(kal <10 && kal >3)
    {
        advote += rand()%totalvotes;
    } else
    {
        advote += (rand()%totalvotes)*2;
    }

    advote += advote * (popularity[av_correspond] /100);

    if(fair == false)
    {
        if(av_correspond == presidentnum)
        {
            advote = advote*2;
            if(junta == true)
            {
                advote += advote * 3;
            }
        }else
        {
            advote = advote /5;
        }

    }

    float paut = p_auth[av_correspond]/50;

    advote += advote*paut;

    if(junta == true && av_correspond == milfav)
    {
        advote = advote *3;
    }

    if(junta == true && av_correspond == milenem)
    {
        advote = advote*0.15;
    }

    if(trending == av_correspond && junta == false)
    {
        advote = advote *1.75;
    }

    float fly = (friendly[av_correspond]+10)/100;
    advote += advote*fly;
    if(av_correspond == presidentnum)
    {
        float age = (year-presyear) /10;
        if(age <1)
        {
            age =1;
        }
        advote = advote /age;
    }

    int aconvert = (int) advote;


    return aconvert;
}

void count_total()
{
    totalvotes =0;
    for(int i=0; i!=5; i++)
    {
        par_votes_int[i] = (int) par_votes[i];
        totalvotes += par_votes_int[i];
    }
}

void oppoprimaries()
{
    int wvotes =0;
    if(par_seats_int[oppositionnum] == 0)
    {
        for(int i=0; i!=oppomembers; i++)
    {
        if(par_seats_int[omem[i]] > wvotes)
        {
            oppositionnum =omem[i];
            wvotes = par_seats_int[omem[i]];
        }
    }

    }
    if(rand()%seats > par_seats_int[oppositionnum])
    {
        for(int i=0; i!=oppomembers; i++)
    {
        if(par_seats_int[omem[i]] > wvotes)
        {
            oppositionnum =omem[i];
            wvotes = par_seats_int[omem[i]];
        }
    }
    }
}

void vcalc()
{
    for(int i=0; i!=5; i++)
    {
        par_percent[i] = (par_votes[i] / totalvotes);
        par_percent_int[i] = (int)(par_percent[i]*100);
    }
}

float tseats =0;
float remaining =0;

void seatcalc()
{
    tseats =0;
    seatcheck =0;
    for(int i=0; i!=5; i++)
    {
        tseats += par_seats[i];
    }
    remaining =0;
    remaining = seats-tseats;
    for(int i=0; i!=5; i++)
    {
        par_seats[i] += round(remaining * par_percent[i]);
        par_seats_int[i] = (int) par_seats[i];
    }
}

void prescalc()
{
    int loservotes =1;
    pres_votes =1;
    for(int i=0; i!=5; i++)
    {
        if(par_votes_int[i] > pres_votes)
        {
            presidentnum = i;
            pres_votes = par_votes_int[i];
        }
    }
    for(int i=0; i!=5; i++)
    {
        if(par_votes_int[i] < pres_votes && par_votes_int[i] > loservotes)
        {
            oppositionnum =i;
            loservotes = par_votes_int[i];
        }
    }


    gmem[govmembers] = presidentnum;
    govseats += par_seats_int[presidentnum];
    govper += par_percent_int[presidentnum];
    govmembers++;
    if(pres_votes >= (totalvotes/2))
    {
        cout << cannames[presidentnum] << "" ("" << par_name[presidentnum] << "") has won the Presidency by a Majority!"" << endl;
    } else
    {
        cout << cannames[presidentnum] << "" ("" << par_name[presidentnum] << "") has won the Presidency by a Plurality!"" << endl;
    }
    if(cannames[presidentnum] != presprename && junta == false)
    {
        ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << presprename << "" ("" << prevpres << "") "" << presyear << "" - "" << year << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];
    }
    if( cannames[presidentnum] != presprename && junta == true && ot == true)
    {
        ot = false;
        ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << par_name[5] << "" "" << presyear << "" - "" << year << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];
    } else if( cannames[presidentnum] != presprename && junta == true && ot == false)
    {
        ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << presprename << "" ("" << prevpres << "") "" << presyear << "" - "" << year << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];
    }
    pname = cannames[presidentnum];
}

void coalitionform()
{


    oppomembers =0;
    omem[oppomembers] = 0;
    opposition = """";
    opposeats += 0;
    oppoper += 0;

    opposition = par_name[oppositionnum];
    omem[oppomembers] = oppositionnum;
    opposeats += par_seats_int[oppositionnum];
    oppoper += par_percent_int[oppositionnum];
    oppomembers++;

    int gchance =0;
    int ochance =0;

    gchance = par_percent_int[presidentnum]/2;
    ochance = par_percent_int[oppositionnum]/2;
    int ichance = 10;

    //cout << ""Prepared Variables"" << endl;

    for(int i=0; i!=5; i++)
    {
        gchance = par_percent_int[presidentnum]/2;
    ochance = par_percent_int[oppositionnum]/2;
    ichance = ((gchance+ochance)*0.05)+1;
        if(i != presidentnum && i!= oppositionnum)
        {
            if(presidentnum > i)
            {
                ochance += (presidentnum - i)*5;
            } else
            {
                ochance += (i-presidentnum)*5;
            }

            if(oppositionnum > i)
            {
                gchance += (oppositionnum - i)*5;
            } else
            {
                gchance += (i-oppositionnum)*5;
            }


            if(pflags[i] == pflags[presidentnum])
            {
                if(presidentnum > i)
                {
                    gchance += (presidentnum - i)*5;
                } else
                {
                    gchance += (i-presidentnum)*5;
                }
            } else if(pflags[i] == pflags[oppositionnum])
            {
                if(oppositionnum > i)
                {
                    gchance += (oppositionnum - i)*5;
                } else
                {
                    gchance += (i-oppositionnum)*5;
                }
            } else
            {
                if(pflags[i] > pflags[presidentnum])
                {
                    ochance += (pflags[i] - pflags[presidentnum])*2;
                } else
                {
                    ochance += (pflags[presidentnum] - pflags[i])*2;
                }

                if(pflags[i] > pflags[oppositionnum])
                {
                    gchance += (pflags[i] - pflags[oppositionnum])*2;
                } else
                {
                    gchance += (pflags[oppositionnum] - pflags[i])*2;
                }
            }
            gchance += friendly[presidentnum]*2;
            ochance += friendly[oppositionnum]*2;
            if(snap == true)
            {
                gchance *=10;
            }
            //cout << ""Finished Manipulating Chances"" << endl;
            // coalition chance
            /*long long ccer =0;
            long long totalChance = ochance + gchance + ichance;

            if (totalChance <= RAND_MAX) {
                ccer = (rand() % totalChance) + 1;
            } else
            {
                totalChance/=10;
                ccer = (rand() % totalChance) + 1;
            }

            ccer = (rand()%(ochance + gchance + ichance))+1;*/

            int tchan = (ochance + gchance + ichance)+1;
            float ocp = (ochance / static_cast<float>(tchan)) * 100;
            float gcp = (gchance / static_cast<float>(tchan)) * 100;
            float icp = (ichance / static_cast<float>(tchan)) * 100;

            int evt = rand()%100;
            //cout << ""Generated Random Number"" << endl;
            if(evt >= ocp+icp)
            {
                gmem[govmembers] = i;
                govseats += par_seats_int[i];
                govper += par_percent_int[i];
                govmembers++;
            } else if(evt < ocp && evt > icp)
            {
                omem[oppomembers] =i;
                opposeats += par_seats_int[i];
                oppoper += par_percent_int[i];
                oppomembers++;
            } else
            {
                imem[indepmembers] =i;
                indepseats += par_seats_int[i];
                indeper += par_percent_int[i];
                indepmembers++;
            }

            //cout << ""Finished Deciding Coalitions"" << endl;
        }
    }
    if(oppositionnum == presidentnum)
    {
        oppositionnum = omem[rand()%oppomembers];
    }
}


void pmcalc()
{
    float goseats = (float) govseats, opseats = (float) opposeats, inseats = (float) indepseats;
    goseats = (goseats/seats)*100;
    opseats = (opseats/seats)*100;
    inseats = (inseats/seats)*100;
    govper = (int) goseats;
    oppoper = (int) opseats;
    indeper = (int) inseats;
    bool hasfoundpm = false;
    int gplu =0;

    if(govseats > opposeats && indepseats < seats/2)
    {
        cout << ""The Ruling Party has secured a majority in parliament"" << endl;
        if(rand()%seats < par_seats_int[presidentnum])
        {
            primeministernum = presidentnum;
        } else
        {
            primeministernum = gmem[rand()%govmembers];
        }
        cout << pcannames[primeministernum] << ""("" << par_name[primeministernum] << "") has been appointed Prime Minister"" << endl;

    } else
    {
        if(indepseats >= govseats + opposeats)
        {
            cout << ""A majority in parliament has declared a boycott. \nSnap elections have been scheduled later this year"" << endl;
            midterm = false;
        intervals = 0;
        primeministernum = 6;
        } else if(opposeats >= govseats)
        {
            cout << ""The Ruling Party has failed to secure a majority in parliament.\nSnap elections have been scheduled later this year"" << endl;
        midterm = false;
        intervals = 0;
        primeministernum = 6;
        }

    }


    if(oppomembers == 0)
    {
        oppositionnum = 7;
        opposition = """";
    }

    pmname = pcannames[primeministernum];

    if(cannames[primeministernum] != premprename && junta == false)
    {
        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << prevprem << "") "" << premyear << "" - "" << year << endl;
        pmfile.close();
        premyear = year;
        prevprem =par_name[primeministernum];
        premprename = cannames[primeministernum];
    }
    if( cannames[primeministernum] != premprename && junta == true && ot == true)
    {
        ot = false;
        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << par_name[5] << "") "" << premyear << "" - "" << year << endl;
        pmfile.close();
        premyear = year;
        prevprem =par_name[primeministernum];
        premprename = cannames[primeministernum];
    } else if( cannames[primeministernum] != premprename && junta == true && ot == false)
    {
        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << prevprem << "") "" << premyear << "" - "" << year << endl;
        pmfile.close();
        premyear = year;
        prevprem =par_name[primeministernum];
        premprename = cannames[primeministernum];
    }
    if(cannames[primeministernum] == pcannames[primeministernum])
    {
        premprename = cannames[primeministernum];
    } else
    {
        premprename = pcannames[primeministernum];
    }

}

void converttoint()
{
    for(int i=0; i!=5; i++)
    {
        par_percent_int[i] = (int)(par_percent[i]*100);
        par_votes_int[i] = (int)par_votes[i];
    }
}

void restart()
{
    president = par_name[presidentnum];
    primeminister = par_name[primeministernum];
    opposition = par_name[oppositionnum];
    plurality =0;
    pluralvotes =0;



    if(people < 30 && people > 10 && primeministernum != 6)
    {
        intervals -= 3/(people/10);
    } else if(people <=10 && primeministernum != 6)
    {
        intervals += people/10;
    }


    pefav = trending;
    for(int i=0; i!=5; i++)
    {
        popularity[i] = par_percent[i];
    }



    for(int i=0; i!=5; i++)
    {
        isnew[i] = false;
        if(rand()%100 > par_percent_int[i] && par_seats_int[i] <= (seats*0.10))
        {
            par_name[i] = allparties[i][rand()%9];
            isnew[i] = true;
            prevseats[i] = 0;
            prevpercent[i] = 0;
            canyear[i] = year;
            indivgen(i);
            shiftcomp(i);
            p_auth[i] = (rand()%10) -(5+(abs(i-3)*2));
            pflags[i] = (rand()%minumpol)+i;
            friendly[i] = (rand()%20)-10;
        }
    }


    par_name[presidentnum] = president;
    par_name[primeministernum] = primeminister;
    par_name[oppositionnum] = opposition;

    int mf = rand()%10;
    int polyear = startyear;


    for(int i=0; i!=5; i++)
    {
        prevseats[i] = par_seats_int[i];
        prevpercent[i] = par_percent_int[i];
    }

    int b = rand()%100;
    if(b < par_percent_int[presidentnum])
    {
        cannames[presidentnum] = pname;
        pflags[presidentnum] = (rand()%minumpol)+presidentnum;
    } else
    {
        indivgen(presidentnum);
        pflags[presidentnum] = (rand()%minumpol)+presidentnum;
    }

    for(int i=0; i!=5; i++)
    {

         par_coal[i]=0;
 par_seats[i]=0;
 par_seats_int[i]=0;

 par_votes[i] =10;
 par_votes_int[i] =0;

 par_percent[i] =0;
 par_percent_int[i] =0;


 totalvotes =0;

 pres_votes =0;


govper=0;
oppoper =0;
indeper=0;
govmembers=0;
 gmem[i] =0;
 govseats =0;

 oppomembers =0;
 omem[i] =0;
 opposeats =0;

 indepmembers =0;
 imem[i] =0;
 indepseats =0;

 av_correspond =0;

    }


    if(primeministernum != 6 && intervals < 1)
    {
        intervals = 1;
    }
}


void updates()
{
    int mf = rand()%10;
    int polyear = startyear;
    if(junta == true && rand()%100 < year - juntayear)
    {
        junta = false;
    }

    if(junta == true)
    {
        people += (year - presyear)/10;
    }

    if(rand()%15 < (year-trendyear))
    {
        trending = rand()%4;
        trendyear = year;
    }
    for(int i=0; i!= intervals; i++)
    {
        updateauth();
        bbcupdate();
        ecupdate();
        mupdate();
    }

    for(int i=0; i!=5; i++)
    {
        int s = rand()%100;
        if(s > (par_percent_int[i] - (year-canyear[i]))- p_auth[i])
    {
        if(rand()%100 < par_percent_int[i])
        {
            cannames[i] = pcannames[i];
            pflags[i] = (rand()%minumpol)+i;
            shiftcomp(i);
            p_auth[i] = (rand()%10) -(5+(abs(i-3)*2));
        } else
        {
            canyear[i] = year;
        indivgen(i);
        pflags[i] = (rand()%minumpol)+i;
        shiftcomp(i);
        p_auth[i] = (rand()%10) -(5+(abs(i-3)*2));
        friendly[i] = (rand()%20)-10;
        }
    }
    }
    for(int i=0; i!=5; i++)
    {
        int v = rand()%100;
        if(v > par_percent_int[i] - (year-pcanyear[i]))
    {
        pcanyear[i] = year;
        pmindivgen(i);
    }
    }


    if(rand()%50 < year - polyear)
    {
        polyear = year;
        switch(mf)
        {
        case 1:
            pfloat = 0.20;
        case 2:
            pfloat = 0.25;
        case 3:
            pfloat = 0.30;
        case 4:
            pfloat = 0.35;
        case 5:
            pfloat = 0.40;
        case 6:
            pfloat = 0.45;
        case 7:
            pfloat = 0.50;
        case 8:
            pfloat = 0.55;
        case 9:
            pfloat = 0.60;
        case 10:
            pfloat = 0.65;
        default:
            break;
        }
    }

    if(primeministernum == presidentnum)
    {
        if(rand()%100 < par_percent_int[primeministernum]*0.75)
        {
            cannames[presidentnum] = pcannames[primeministernum];
        }
    }

}


void calcdif()
{

     int difference = ((year - startyear)/10) +2;
 seats += rand()%difference;
 if(totalvotes - prevtot <=0)
 {
     float tdif = (float)totalvotes, ttot = (float) prevtot;
     tdif = tdif /totalvotes;
     seats = round(seats*tdif);
 } else
 {
     float tdif = (float)totalvotes, ttot = (float) prevtot;
     tdif = (tdif-ttot) /totalvotes;
     seats = round(seats * tdif);
 }

}


void dispall()
{
    int lowerhouse =0;
    for(int i=0; i!=5; i++)
    {
        lowerhouse += lhgains[i];
    }
    int upperhouse = 0;
    for(int i=0; i!=5; i++)
    {
        upperhouse += par_seats_int[i] - lhgains[i];
    }
    for(int i =0; i!=5; i++)
    {
        cout << ""======================================"" << endl;
        if(cannames[i] == pcannames[i])
        {
            cout << cannames[i] << "" - "" << par_name[i] << "" ("" << par_acro[i] << "")\n"" << par_votes_int[i] << "" ("" << par_percent_int[i] << ""% | "";
        } else
        {
            cout << cannames[i] << "" / "" << pcannames[i] << "" - "" << par_name[i] << "" ("" << par_acro[i] << "")\n"" << par_votes_int[i] << "" ("" << par_percent_int[i] << ""% | "";
        }
        if(isnew[i] != true)
        {
            if(par_percent_int[i] >= prevpercent[i])
        {
            cout << ""+"" << par_percent_int[i] - prevpercent[i] << ""%)"" << endl;
        }else
        {
            cout << par_percent_int[i] - prevpercent[i] << ""%)"" << endl;
        }
        } else
        {
            if(par_percent_int[i] >= prevpercent[i])
            {
            cout << ""+"" << par_percent_int[i] - prevpercent[i] << ""%) - NEW"" << endl;
            }else
            {
                cout << par_percent_int[i] - prevpercent[i] << ""%) - NEW"" << endl;
            }
        }


        for(int b=0; b< par_percent_int[i]; b++)
        {
            cout << ""|"";
        }
        cout << ""\nTotal Seats Won: "" << par_seats_int[i] << "" (US: "" << par_seats_int[i] - lhgains[i] << "" | LS: "" << lhgains[i] << "" | "";

        if(isnew[i] != true)
        {
            if(par_seats_int[i] >= prevseats[i])
        {
            cout << ""+"" << par_seats_int[i] - prevseats[i] << "")"" << endl;
        }else
        {
            cout << par_seats_int[i] - prevseats[i] << "")"" << endl;
        }
        } else
        {
            if(par_seats_int[i] >= prevseats[i])
            {
            cout << ""+"" << par_seats_int[i] - prevseats[i] << "") - NEW"" << endl;
            }else
            {
                cout << par_seats_int[i] - prevseats[i] << "") - NEW"" << endl;
            }
        }
        cout << ""FLAGSHIP POLICY: "" << flags[pflags[i]] << endl;


    }
}

int main()
{
    srand(time(NULL));
    //cngen();
    shiffty = (rand()%3)*5;

    for(int i=0; i!=5; i++)
    {
        indivgen(i);
        pflags[i] = (rand()%minumpol)+i;
        pmindivgen(i);
        p_auth[i] = (rand()%10) -(5+(abs(i-3)*2));
        friendly[i] = (rand()%20)-10;
    }
    policy = ((rand()%13) *5)+35;
        pfloat = (float) policy/100;
    ofstream presfile;
presfile.open(""Presidents.txt"");
    presfile << ""FILE SCCUESSFULLY CREATED"" << endl;
    presfile.close();
    ofstream pmfile;
pmfile.open(""Premieres.txt"");
    pmfile << ""FILE SCCUESSFULLY CREATED"" << endl;
    pmfile.close();

    ofstream erecord;
erecord.open(""Elections.txt"");
    erecord << ""FILE SCCUESSFULLY CREATED"" << endl;
    erecord.close();

    trending = rand()%5;

    game:
        system(""CLS"");
    cout << ""Votes are being counted..."" << endl;
    for(int i=0; i< ((year - startyear)/10)+10; i++)
    {
        count_total();
        for(int b=0; b!=5; b++)
        {
            av_correspond =b;
            par_votes[b] += add_votes();
        }
        count_total();
        vcalc();
    converttoint();


    system(""CLS"");
    if(midterm == true && snap == false)
    {
        cout << year << "" Parliamentary Elections Opinion Polls:"" << endl;
    } else if(snap == true)
    {
        cout << year << "" Snap Elections Opinion Polls:"" << endl;
    }else if (midterm == false&& snap == false)
    {
        cout << year << "" General Elections Opinion Polls:"" << endl;
    }
            cout << ""President: "" << pname << ""(""<< president << "")"" << endl;
            cout << ""Prime Minister: "" << pmname << ""(""<< primeminister << "")""  << endl;
            cout << ""Opposition: "" << pcannames[oppositionnum] << ""(""<< opposition << "")""  << endl;
            cout << endl;
            /*int lowerhouse = round(seats * pfloat);
    int upperhouse = round(seats - lowerhouse);
            cout << ""Seats Last Election: "" << seats << endl;
            cout << ""-Upper House: "" << upperhouse << endl;
            cout << ""-Lower House: "" << lowerhouse << endl;*/
        for(int i =0; i!=5; i++)
    {
        cout << ""======================================"" << endl;
        if(cannames[i] == pcannames[i])
        {
            cout << cannames[i] << "" - "" << par_name[i] << "" ("" << par_acro[i] << "")\n"" << par_votes_int[i] << "" ("" << par_percent_int[i] << ""%)"" << endl;
        }else
        {
            cout << cannames[i] << "" / "" << pcannames[i] << "" - "" << par_name[i] << "" ("" << par_acro[i] << "")\n"" << par_votes_int[i] << "" ("" << par_percent_int[i] << ""%)"" << endl;
        }

        for(int b=0; b< par_percent_int[i]; b++)
        {
            cout << ""|"";
        }

        cout << endl;
        cout << ""FLAGSHIP POLICY: "" << flags[pflags[i]] << endl;
    }
    //std::this_thread::sleep_for(std::chrono::milliseconds(500));
    }
    system(""CLS"");
    prevtot = totalvotes;
    count_total();
    vcalc();
    converttoint();
    calcdif();
    countplural();
    if(fair == true)
    {
        dsdhondt();
    }else
    {
        discont();
    }
    seatcalc();



    if(midterm == true&& snap == false)
    {
        cout << year << "" Parliamentary Elections"" << endl;
    }else if(snap == true)
    {
        cout << year << "" Snap Elections"" << endl;
    } else if (midterm == false&& snap == false)
    {
        cout << year << "" General Elections"" << endl;
    }
    calsplu();
    if(midterm == false)
    {
        prescalc();
        //cout << ""elected Pres"" << endl;
    } else if(midterm == true)
    {
        gmem[0] = presidentnum;
    govseats += par_seats_int[presidentnum];
    govper += par_percent_int[presidentnum];
    govmembers++;
    //cout << ""Appointed Gov"" << endl;
    }


    countplural();
    //cout << ""counted plurality"" << endl;
    coalitionform();
    //cout << ""formed coalitions"" << endl;
    pmcalc();
    //cout << ""Appointed PM"" << endl;
    if(junta == false && fair == false && rand()%(year - startyear) < (year - presyear) && govmembers < 4 && p_auth[presidentnum] >=1)
    {
        fair = true;
    }else if(junta == false && fair == false && rand()%10 < (year-presyear) && govseats == 0|| president != primeminister && p_auth[presidentnum] >=1)
    {
        fair = true;
    }
    /*if(presidentnum == primeministernum && govmembers == 4 && par_seats[presidentnum] > seats * 0.75 && fair == true && rand()%100 < popularity[presidentnum] *100)
    {
        fair = false;
    }*/

    if(fair == true && presidentnum == primeministernum && govseats > opposeats *2 && rand()%seats < par_seats_int[presidentnum] && totauth < -10 && p_auth[presidentnum]<=0)
    {
        fair = false;
    }
    cout << endl;
int lowerhouse =0;
    for(int i=0; i!=5; i++)
    {
        lowerhouse += lhgains[i];
    }
    int upperhouse = 0;
    for(int i=0; i!=5; i++)
    {
        upperhouse += par_seats_int[i] - lhgains[i];
    }
    /*cout << ""Calculated House"" << endl;
    system(""CLS"");
    if(midterm == true)
    {
        cout << year << "" Parliamentary Elections"" << endl;
    } else
    {
        cout << year << "" General Elections"" << endl;
    }*/
    cout << ""President: "" << pname << ""(""<< par_name[presidentnum] << "")"" << endl;
    cout << ""Prime Minister: "" << pmname << ""(""<< par_name[primeministernum] << "")""  << endl;
    cout << ""Opposition: "" << pcannames[oppositionnum] << ""(""<< par_name[oppositionnum] << "")""  << endl;
    cout << ""\nFlagship Policy: "" << flags[pflags[presidentnum]];
    if(primeministernum != presidentnum && flags[pflags[primeministernum]] != flags[pflags[presidentnum]] && primeministernum != 6)
    {
        cout << "" And "" << flags[pflags[primeministernum]];
    }
    cout << endl;
    cout << ""\nTotal Seats: "" << upperhouse + lowerhouse;
    cout << "" (Upper Seats: "" << upperhouse;
    cout << "" | Lower Seats: "" << lowerhouse << "")"" <<endl;

    float gfloat = govseats;
    float ofloat = opposeats;
    float ifloat = indepseats;
    seats = upperhouse + lowerhouse;
    cout << ""Composition:"" << endl;
    if(govseats >0)
    {
        if(indepseats >0)
        {
            cout << ""Government: "" << govseats << "" Seats ("" << round((gfloat/seats)*100)  << ""% | ""<< round((gfloat/(seats-indepseats))*100) << ""%)""<< endl;
        }else
        {
         cout << ""Government: "" << govseats << "" Seats ("" << round((gfloat/seats)*100)  << ""%)"" << endl;
        }
        cout << ""Members: "";
        for(int i=0; i!=govmembers; i++)
        {
            cout << par_name[gmem[i]];
            if(i != govmembers-1)
            {
                cout << "", "";
            }
        }
    }
    if(opposeats > 0)
    {
        if(indepseats >0)
        {
            cout << ""\n=====\nOpposition: "" << opposeats << "" Seats ("" << round((ofloat/seats)*100)  << ""% | ""<< round((ofloat/(seats-indepseats))*100) << ""%)""<< endl;
        }else
        {
         cout << ""\n=====\nOpposition: "" << opposeats << "" Seats ("" << round((ofloat/seats)*100)  << ""%)"" << endl;
        }
        for(int i=0; i!=oppomembers; i++)
        {
            cout << par_name[omem[i]];
            if(i != oppomembers-1)
            {
                cout << "", "";
            }
        }
    }

    if(indepseats > 0)
    {
        cout << ""\n=====\nBoycotting: "" << indepseats<< "" Seats ("" << round((ifloat/seats)*100)  << ""%)"" << endl;
        for(int i=0; i!=indepmembers; i++)
        {
            cout << par_name[imem[i]];
            if(i != indepmembers-1)
            {
                cout << "", "";
            }
        }
    }
    cout << endl;

    pecheck();
    covalues();
    mchange();
    pshift();
    cout << ""\nMilitary Status: "";
    switch(military/10)
    {
    case 1:
        cout << ""General Dissatisfaction"" << endl;
        break;
    case 2:
        cout << ""Discontent Among Lower Ranks"" << endl;
        break;
    case 3:
        cout << ""Divided"" << endl;
        break;
    case 4:
        cout << ""Slight Disagreements"" << endl;
        break;
    case 5:
        cout << ""Low Support for Government"" << endl;
        break;
    case 6:
        cout << ""Apolitical Military"" << endl;
        break;
    case 7:
        cout << ""Generally Supportive"" << endl;
        break;
    case 8:
        cout << ""Secretly Endorses the Government"" << endl;
        break;
    case 9:
        cout << ""Open Military Endorsement"" << endl;
        break;
    case 10:
        cout << ""Fanatically Loyal"" << endl;
    break;
    case 0:
        cout << ""Strained Relations with the Government"" << endl;
        break;
    case -1:
        cout << ""Officers Openly Denouncing Government"" << endl;
        break;
    case -2:
        cout << ""Generally Disloyal Army"" << endl;
        break;
    case -3:
        cout << ""Small Outbreaks of Mutinies"" << endl;
        break;
    case -4:
        cout << ""Officers Leading Mutinies"" << endl;
        break;
    case -5:
        cout << ""Widespread Military Defections"" << endl;
        break;
        default:
            if(military < 0)
            {
                cout << ""Military Coup Imminent"" << endl;
            } else
            {
                cout << ""Fanatically Loyal"" << endl;
            }

            break;
    }

    //cout << ""Military-backed Party: "" << par_name[milfav] << endl;
    //cout << ""Military-opposed Party: "" << par_name[milenem] << endl;
    cout << ""National Status: "";
    switch(people/10)
    {
    case 10:
    case 9:
        cout << ""Nationwide Support"" << endl;
        break;
    case 8:
    case 7:
    case 6:
    case 5:
        cout << ""Supportive Populace"" << endl;
        break;
    case 4:
    case 3:
    case 2:
    case 1:
        cout << ""Indifferent People"" << endl;
        break;
    case 0:
    case -1:
        cout << ""Divided"" << endl;
        break;
    case -2:
    case -3:
        cout << ""General Discontent"" << endl;
        break;
    case -4:
    case -5:
    case -6:
    case -7:
        cout << ""Widespread Protests"" << endl;
        break;
    case -8:
    case -9:
    default:
        if(people < 0)
        {
            cout << ""Nationwide Riots"" << endl;
        } else
        {
            cout << ""Nationwide Support"" << endl;
        }
        break;
    }

    cout << ""Economic Status: "";
    switch(economy/10)
    {
    case 10:
    case 9:
    case 8:
    case 7:
        cout << ""Booming"" << endl;
        break;
    case 6:
    case 5:
    case 4:
    case 3:
        cout << ""Expanding"" << endl;
        break;
    case 2:
    case 1:
    case 0:
    case -1:
        cout << ""Contracting"" << endl;
        break;
    case -2:
    case -3:
    case -4:
    case -5:
        cout << ""Recession"" << endl;
        break;
    case -6:
    case -7:
    case -8:
    case -9:
        cout << ""Depression"" << endl;
        break;
    default:
        cout << ""Booming"" << endl;
        break;
    }
    cout << ""Freedom   Level: "";
    switch(totauth/10)
    {
    case 10:
    case 9:
        cout << ""High"" << endl;
        break;
    case 8:
    case 7:
    case 6:
    case 5:
        cout << ""Above Average"" << endl;
        break;
    case 4:
    case 3:
    case 2:
    case 1:
    case 0:
    case -1:
        cout << ""Average"" << endl;
        break;
    case -2:
    case -3:
    case -4:
    case -5:
        cout << ""Below Average"" << endl;
        break;
    case -6:
    case -7:
    case -8:
    case -9:
        cout << ""Low"" << endl;
        break;
    default:
        if(totauth < 0)
        {
            cout << ""Low"" << endl;
        } else
        {
            cout << ""High"" << endl;
        }
        break;
    }

    cout << ""Militancy Level: "";
    switch(militancy/10)
    {
    case 10:
    case 9:
        cout << ""None"" << endl;
        break;
    case 8:
    case 7:
    case 6:
    case 5:
        cout << ""Nothing Significant"" << endl;
        break;
    case 4:
    case 3:
    case 2:
    case 1:
    case 0:
    case -1:
        cout << ""Low Militancy"" << endl;
        break;
    case -2:
    case -3:
    case -4:
    case -5:
        cout << ""Some Militancy"" << endl;
        break;
    case -6:
    case -7:
    case -8:
    case -9:
        cout << ""Abundant Militancy"" << endl;
        break;
    default:
        if(militancy < 0)
        {
            cout << ""Abundant Militancy"" << endl;
        } else
        {
            cout << ""None"" << endl;
        }
        break;
    }
    //cout << ""People-backed Party: "" << par_name[pefav] << endl;
    //cout << ""People-opposed Party: "" << par_name[penem] << endl;

    //cout << tseats << endl;
    //cout << remaining << endl;
//    cout << ""DEBUG: "" << totalvotes << endl;
//cout << presidentnum << endl;
//cout << oppositionnum << endl;

    /*erecord.open(""Elections.txt"", fstream::app);
        if(midterm == false)
        {
            erecord << year << "" GENERAL ELECTIONS"" << endl;
            erecord << ""WINNERS:"" << endl;
            if(presidentnum == primeministernum)
            {
                erecord << ""President & Prime Minister: "" << cannames[presidentnum] << "" ("" << par_name[presidentnum] << "") - "" << par_percent_int[presidentnum] << ""%"" << endl;
            } else
            {
                erecord << ""President: "" << cannames[presidentnum] << "" ("" << par_name[presidentnum] << "") - "" << par_percent_int[presidentnum] << ""%""  << endl;
                erecord << ""Prime Minister: "" << cannames[primeministernum] << "" ("" << par_name[primeministernum] << "") - "" << par_percent_int[primeministernum] << ""%"" << endl;
            }
            erecord << ""\n=========="" << endl;
        } else
        {

            erecord << year << "" MIDTERM ELECTIONS"" << endl;
            erecord << ""WINNER:"" << endl;
            erecord << ""Prime Minister: "" << cannames[primeministernum] << "" ("" << par_name[primeministernum] << "") - "" << par_percent_int[primeministernum] << ""%"" << endl;
            erecord << ""\n=========="" << endl;


        }
        erecord.close();*/

        if(midterm == true)
        {
            midterm = false;
        } else if(midterm == false)
        {
            midterm = true;
        }
        if(snap == true)
    {
        snap =false;
        if(wbmid ==0)
        {
            wbmid = 2;
            midterm = true;
        } else
        {
            wbmid = 3;
            midterm =false;
        }
    }
        //cout << ""A"" << endl;
    if(fair == false)
    {
        intervals = par_percent_int[presidentnum] /10;
    intervals = (rand()%intervals)+1;
        intervals = intervals *1.5;
    }
    //cout << ""M"" << endl;

    intervals -= totauth/50;
    if(fair == true && totauth >= 0)
    {
        intervals = 2;
    }
    //cout << ""O"" << endl;

    if(govseats < opposeats || govseats + opposeats < indepseats )
    {
        if(wbmid != 2 && wbmid !=3)
        {
            if(midterm == true)
        {
            wbmid = 0;
        } else
        {
            wbmid =1;
        }
        } else
        {
            if(wbmid == 2)
            {
                wbmid =0;
            } else
            {
                wbmid =1;
            }
        }
        snap = true;
        intervals = 0;
        midterm = false;
        if(presidentnum == milfav)
        {
            military -= 20;
        } else if(presidentnum == milenem)
        {
            military += 10;
        } else
        {
            military -=10;
        }

        if(presidentnum == pefav)
        {
            people -= 20;
        } else if(presidentnum == penem)
        {
            people += 10;
        } else
        {
            people -=10;
        }
    }
    //cout << ""G"" << endl;

    /*cout << ""ECONOMY: "" << economy << endl;
    if(boom)
    {
        cout << ""BOOM ENDS IN "" << year + shiffty << endl;
    }*/



    tvts = 0;
    for(int i=0; i!=5; i++)
    {
        tvts+= par_votes_int[i];
    }
    //cout << ""U"" << endl;
    cout << ""\nVoter Turnout This Election: "" << tvts << endl;
    //cout << ""Person Represented Per Seat: "" << tvts/seats << endl;
    cout << ""Voter-to-Seat Ratio: "" << tvts/seats+1 << "" : 1"" << endl;
    if(primeministernum != 6 && intervals < 1)
    {
        intervals =1;
    }
    if(primeministernum == 6)
    {
        intervals =0;
    }
    cout << ""\nNext Election: "" << year + intervals << endl;

    if(year+intervals >= 2023)
    {
        ofstream presfile;
        presfile.open(""Presidents.txt"", fstream::app);
        presfile << presprename << "" ("" << prevpres << "") "" << presyear << "" - CURRENT"" << endl;
        presfile.close();
        presyear = year;
        prevpres = par_name[presidentnum];
        presprename = cannames[presidentnum];


        ofstream pmfile;
        pmfile.open(""Premieres.txt"", fstream::app);
        pmfile << premprename << "" ("" << prevprem << "") "" << premyear << "" - CURRENT"" << endl;
        pmfile.close();
        premyear = year;
        prevprem = par_name[primeministernum];
        premprename = cannames[primeministernum];
    }
    cout << ""\nInput 1 to show full election results"" << endl;
    cin >> userinput;
    if(userinput == ""1"")
    {
        dispall();
        cin >> userinput;
    }


    updates();
    coupcheck();
    if(ot == false)
    {
            revcheck();
    }

    year += intervals;
    restart();
    goto game;
}
"
XgmCtdfi,Funkcja Sprawdz Wygrana,drakon-firestone,JavaScript,Friday 11th of August 2023 04:27:48 AM CDT,"function sprawdzWygrana() {
  licznikTur++;
  if (
    przyciski[0].textContent == przyciski[1].textContent &&
    przyciski[1].textContent == przyciski[2].textContent &&
    przyciski[1].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[3].textContent == przyciski[4].textContent &&
    przyciski[3].textContent == przyciski[5].textContent &&
    przyciski[4].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[6].textContent == przyciski[7].textContent &&
    przyciski[7].textContent == przyciski[8].textContent &&
    przyciski[7].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[0].textContent == przyciski[3].textContent &&
    przyciski[3].textContent == przyciski[6].textContent &&
    przyciski[3].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[1].textContent == przyciski[4].textContent &&
    przyciski[4].textContent == przyciski[7].textContent &&
    przyciski[4].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[2].textContent == przyciski[5].textContent &&
    przyciski[5].textContent == przyciski[8].textContent &&
    przyciski[5].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[0].textContent == przyciski[4].textContent &&
    przyciski[4].textContent == przyciski[8].textContent &&
    przyciski[8].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (
    przyciski[2].textContent == przyciski[4].textContent &&
    przyciski[4].textContent == przyciski[6].textContent &&
    przyciski[4].textContent != """"
  ) {
    console.log(""zwycięstwo"");
  } else if (licznikTur == 9) {
    info.textContent = ""remis!"";
  }
}"
B16422kr,I,Salvens,C++,Friday 11th of August 2023 04:22:39 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>


using namespace std;

//#define int long long
#pragma comment(linker,""/STACK:1000000000,1000000000"")

const long long INF = 1e9 + 7;
const int MAXN = 1e6 + 1000;
const int N = 1e5 + 10;

const int M1 = 1e9 + 123;
const int M2 = 1e9 + 321;
int P1 = 22811;
int P2 = 22699;

array<int, MAXN> power1, power2;

inline void init_pow() {
    power1[0] = 1;
    power2[0] = 1;
    for (int i = 1; i < MAXN; ++i) {
        power1[i] = (1ll * power1[i - 1] * P1) % M1;
        power2[i] = (1ll * power2[i - 1] * P2) % M2;
    }
}

inline void build_hash(vector<int>& s, vector<pair<int, int>>& h) {
    int n = s.size();
    h.resize(n + 1);
    h[0].first = 0;
    h[0].second = 0;

    for (int i = 0; i < n; ++i) {
        h[i + 1].first = (h[i].first + 1ll * s[i] * power1[i]) % M1;
        h[i + 1].second = (h[i].second + 1ll * s[i] * power2[i]) % M2;
    }
}

inline bool is_equal(vector<pair<int, int>>& h_l, vector<pair<int, int>>& h_r, int start1, int start2, int len) {
    pair<int, int> d_l, d_r;
    d_l.first = ((h_l[start1 + len].first - h_l[start1].first + M1) % M1 * 1ll * power1[start2]) % M1;
    d_l.second = ((h_l[start1 + len].second - h_l[start1].second + M2) % M2 * 1ll * power2[start2]) % M2;

    d_r.first = ((h_r[start2 + len].first - h_r[start2].first + M1) % M1 * 1ll * power1[start1]) % M1;
    d_r.second = ((h_r[start2 + len].second - h_r[start2].second + M2) % M2 * 1ll * power2[start1]) % M2;

    return d_l == d_r;
}

inline int random_key(const int before, const int after) {
    auto seed = std::chrono::high_resolution_clock::now().time_since_epoch().count();
    std::mt19937 mt_rand(seed);
    int base = std::uniform_int_distribution<int>(before + 1, after)(mt_rand);
    return base;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    P1 = random_key(256, M1);
    P2 = random_key(256, M2);

    int n, m;
    cin >> n >> m;
    vector<int> a(n), b(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        b[i] = a[i];
    }
    reverse(b.begin(), b.end());


    vector<pair<int, int>> h_a, h_b;
    init_pow();
    build_hash(a, h_a);
    build_hash(b, h_b);


    for (int i = n / 2 - 1; i < n; ++i) {
        int len = n - i - 1;
        if (is_equal(h_b, h_a, n - i - 1, i + 1, len)) {
            cout << i + 1 << ' ';
        }
    }
}"
5bFN65BB,G,Salvens,C++,Friday 11th of August 2023 04:19:29 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>


using namespace std;

#define int long long
#pragma comment(linker,""/STACK:1000000000,1000000000"")

const long long INF = 1e9 + 7;
const int MAXN = 2e5 + 1000;
const int N = 1e5 + 10;

const int M1 = 1e9 + 123;
const int M2 = 1e9 + 321;
int P1 = 22811;
int P2 = 22699;
array<int, MAXN> power1, power2;

void init_pow() {
    power1[0] = 1;
    power2[0] = 1;
    for (int i = 1; i < MAXN; ++i) {
        power1[i] = (power1[i - 1] * P1) % M1;
        power2[i] = (power2[i - 1] * P2) % M2;
    }
}

void build_hash(string& s, vector<pair<int, int>>& h) {
    int n = s.size();
    h.resize(n + 1);
    h[0].first = 0;
    h[0].second = 0;

    for (int i = 0; i < n; ++i) {
        h[i + 1].first = (h[i].first + s[i] * power1[i]) % M1;
        h[i + 1].second = (h[i].second + s[i] * power2[i]) % M2;
    }
}

pair<int, int> get_hash(vector<pair<int, int>>& h, int pos, int len, int mx_pow = 0) {
    int h1 = h[pos + len].first - h[pos].first;
    int h2 = h[pos + len].second - h[pos].second;
    if (h1 < 0) {
        h1 += M1;
    }
    if (h2 < 0) {
        h2 += M2;
    }
    if (mx_pow != 0) {
        h1 = h1 * power1[mx_pow - (pos + len - 1)] % M1;
        h2 = h2 * power2[mx_pow - (pos + len - 1)] % M2;
    }
    return make_pair(h1, h2);
}

bool is_equal(vector<pair<int, int>>& h_l, vector<pair<int, int>>& h_r, int start1, int start2, int len) {
    pair<int, int> d_l, d_r;
    d_l.first = ((h_l[start1 + len].first - h_l[start1].first + M1) % M1 * power1[start2]) % M1;
    d_l.second = ((h_l[start1 + len].second - h_l[start1].second + M2) % M2 * power2[start2]) % M2;

    d_r.first = ((h_r[start2 + len].first - h_r[start2].first + M1) % M1 * power1[start1]) % M1;
    d_r.second = ((h_r[start2 + len].second - h_r[start2].second + M2) % M2 * power2[start1]) % M2;

    return d_l == d_r;
}

int random_key(const int before, const int after) {
    auto seed = std::chrono::high_resolution_clock::now().time_since_epoch().count();
    std::mt19937 mt_rand(seed);
    int base = std::uniform_int_distribution<int>(before + 1, after)(mt_rand);
    return base;
}

int sum(int a, int k, int mod) {
    if (k == 1) {
        return 1;
    } else if (k % 2 == 0) {
        return (1ll + a) * sum(1ll * a * a % mod, k / 2, mod) % mod;
    } else {
        return 1 + (a + 1ll) * a % mod * sum(1ll * a * a % mod, k / 2, mod) % mod;
    };
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    P1 = random_key(256, M1);
    P2 = random_key(256, M2);

    string a;
    cin >> a;
    int n = a.size();
    reverse(a.begin(), a.end());


    vector<pair<int, int>> h_a;
    init_pow();
    build_hash(a, h_a);

    int ans = 0;
    for (int len = 1; len <= n; ++len) {
        auto h1 = h_a[len];
        auto h2 = h_a[n];

        h1.first = 1ll * h1.first * sum(power1[len], n, M1) % M1;
        h2.first = 1ll * h2.first * sum(power1[n], len, M1) % M1;

        h1.second = 1ll * h1.second * sum(power2[len], n, M2) % M2;
        h2.second = 1ll * h2.second * sum(power2[n], len, M2) % M2;

        ans += (h1 == h2);
    }
    cout << ans << '\n';
}"
RQkvgFfa,State | Dev/Env Example,Idanref,TypeScript,Friday 11th of August 2023 04:09:07 AM CDT,"interface EnvironmentState {
  getDatabaseConnectionString(): string;
  logError(error: string): void;
}

class DevelopmentState implements EnvironmentState {
  getDatabaseConnectionString(): string {
    return ""mongodb://localhost:27017/development-db"";
  }

  logError(error: string): void {
    console.log(""[DEBUG]:"", error);
  }
}

class ProductionState implements EnvironmentState {
  getDatabaseConnectionString(): string {
    return ""mongodb://production-server:27017/production-db"";
  }

  logError(error: string): void {
    // Logging error to a monitoring service in production
    console.log(""[ERROR]:"", error);
  }
}

class ConfigurationManager {
  private state: EnvironmentState;

  constructor(env: string) {
    if (env === ""development"") {
      this.state = new DevelopmentState();
    } else if (env === ""production"") {
      this.state = new ProductionState();
    } else {
      throw new Error(""Invalid environment"");
    }
  }

  getDatabaseConnectionString(): string {
    return this.state.getDatabaseConnectionString();
  }

  logError(error: string): void {
    this.state.logError(error);
  }
}

const devConfig = new ConfigurationManager(""development"");
console.log(devConfig.getDatabaseConnectionString()); // Output: mongodb://localhost:27017/development-db
devConfig.logError(""This is a development error""); // Output: [DEBUG]: This is a development error

const prodConfig = new ConfigurationManager(""production"");
console.log(prodConfig.getDatabaseConnectionString()); // Output: mongodb://production-server:27017/production-db
prodConfig.logError(""This is a production error""); // Output: [ERROR]: This is a production error
"
LviybZ9q,State | Traffic Light Example,Idanref,TypeScript,Friday 11th of August 2023 04:02:49 AM CDT,"interface TrafficLightState {
  proceed(): void;
  next(light: TrafficLight): void;
}

class RedState implements TrafficLightState {
  proceed(): void {
    console.log(""STOP! The light is Red."");
  }

  next(light: TrafficLight): void {
    light.changeState(new GreenState());
  }
}

class YellowState implements TrafficLightState {
  proceed(): void {
    console.log(""Be CAREFUL! The light is Yellow."");
  }

  next(light: TrafficLight): void {
    light.changeState(new RedState());
  }
}

class GreenState implements TrafficLightState {
  proceed(): void {
    console.log(""GO! The light is Green."");
  }

  next(light: TrafficLight): void {
    light.changeState(new YellowState());
  }
}

class TrafficLight {
  private state: TrafficLightState;

  constructor() {
    this.state = new RedState();
  }

  changeState(state: TrafficLightState): void {
    this.state = state;
  }

  proceed(): void {
    this.state.proceed();
  }

  next(): void {
    this.state.next(this);
  }
}

const light = new TrafficLight();

light.proceed(); // Output: STOP! The light is Red.
light.next();

light.proceed(); // Output: GO! The light is Green.
light.next();

light.proceed(); // Output: Be CAREFUL! The light is Yellow.
light.next();
"
iub9cmKA,F,Salvens,C++,Friday 11th of August 2023 03:49:55 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>


using namespace std;

//#define int long long
#pragma comment(linker,""/STACK:1000000000,1000000000"")

const long long INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const int N = 1e5 + 10;

int n, k;

struct vertex {
    int next[2] = {0, 0};
} v[30 * MAXN];

array<int, 30 * MAXN> cn;

int root = 0, top = 1;

inline void add(int x) {
    int cur = root;
    for (int i = 29; i >= 0; --i) {
        int b = bool(x & (1 << i));
        if (v[cur].next[b] == 0) {
            v[cur].next[b] = top++;
        }
        cur = v[cur].next[b];
        ++cn[cur];
    }
}

long long ans = 0;

inline void find(int x) {
    int cur = 0;
    for (int i = 29; i >= 0; --i) {
        int b = bool(x & (1 << i));
        if (k & (1 << i)) {
            if (v[cur].next[1 - b] == 0) {
                return;
            }
            cur = v[cur].next[1 - b];
        } else {
            if (v[cur].next[1 - b] != 0) {
                ans += cn[v[cur].next[1 - b]];
            }
            if (v[cur].next[b] == 0) {
                return;
            }
            cur = v[cur].next[b];
        }
    }
    ans += cn[cur];
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    add(0);

    cin >> n >> k;
    int sum = 0;
    for (int i = 0; i < n; ++i) {
        int x;
        cin >> x;
        sum ^= x;
        find(sum);
        add(sum);
    }
    cout << ans << '\n';
}"
gsyWNizX,Module Script,HowToRoblox,Lua,Friday 11th of August 2023 03:33:05 AM CDT,"local npcs = script:WaitForChild(""NPCs"")

local rnd = Random.new()

local cs = game:GetService(""Chat"")


function npcChat(npc: Model)
	cs:Chat(npc.Head, ""No you're not!"", Enum.ChatColor.White)
end

function createNPCs(plr: Player)
	
	local char = plr.Character
	local root = char:FindFirstChild(""HumanoidRootPart"")
	
	if not char or not root or not char:FindFirstChild(""Humanoid"") or char.Humanoid.Health <= 0 then return end
	
	if char:FindFirstChild(""NOT LONELY"") then
		
		for _, npc in pairs(workspace[plr.Name .. "" NPCs""]:GetChildren()) do
			npcChat(npc)
		end
		
		return
	end
	
	local notLonelyValue = Instance.new(""StringValue"")
	notLonelyValue.Name = ""NOT LONELY""
	notLonelyValue.Parent = char
	
	local numNPCs = rnd:NextInteger(70, 100)
	
	local allNPCs = npcs:GetChildren()
	
	local npcContainer = Instance.new(""Folder"")
	npcContainer.Name = plr.Name .. "" NPCs""
	npcContainer.Parent = workspace
	
	char.Humanoid.Died:Connect(function()
		npcContainer:Destroy()
	end)
	
	for i = 1, numNPCs do
		
		if npcContainer then
			
			local randomNPC = allNPCs[rnd:NextInteger(1, #allNPCs)]:Clone()
			
			randomNPC.HumanoidRootPart.CFrame = CFrame.new(root.Position - (root.CFrame.LookVector * i * 1.4 * Vector3.new(1, 0, 1)), root.Position)
			
			task.spawn(function()
				
				local conn
				conn = game:GetService(""RunService"").Heartbeat:Connect(function()
					
					if randomNPC and randomNPC.Parent == npcContainer then
						randomNPC.Humanoid:MoveTo(root.Position - (root.CFrame.LookVector * i * 1.4 * Vector3.new(1, 0, 1)))
					else
						conn:Disconnect()
					end
				end)
			end)
			
			randomNPC.Humanoid.Died:Connect(function()
				
				randomNPC:Destroy()
				
				if #npcContainer:GetChildren() == 0 then
					npcContainer:Destroy()
					notLonelyValue:Destroy()	
				end
			end)
			
			randomNPC.Parent = npcContainer
			
			npcChat(randomNPC)
				
			task.wait(0.05)
			
		else
			break
		end
	end
end


return createNPCs"
trMZBL2L,Main Script,HowToRoblox,Lua,Friday 11th of August 2023 03:32:47 AM CDT,"local message = ""im so lonely""
local allowedChars = ""abcdefghijklmnopqrstuvwxyz ""
allowedChars = allowedChars:split("""")

local createNPCs = require(script:WaitForChild(""CreateNPCs""))

function filterMessage(msg: string)
	
	msg = msg:lower()
	local filteredMsg = """"

	for _, char in pairs(msg:split("""")) do

		if table.find(allowedChars, char) then
			filteredMsg = filteredMsg .. char
		end
	end
	
	return filteredMsg
end

game.Players.PlayerAdded:Connect(function(plr)
	
	plr.Chatted:Connect(function(msg, _recipient)
		
		msg = filterMessage(msg)
		
		if msg == message then
			
			createNPCs(plr)
		end
	end)
end)"
j8h97hKZ,Singleton & ProductDAO Example,Idanref,TypeScript,Friday 11th of August 2023 03:30:20 AM CDT,"import { writeFileSync } from 'fs';

interface Product {
  id: string;
  price: number;
  name: string;
}

interface ProductDAO { // separation of the data logic (like Model)
  addProduct(product: Product): void;
  updateProduct(product: Product): void;
  deleteProduct(id: string): void;
  getProduct(id: string): Product;
}

class ProductDAOImpl implements ProductDAO { // Using singleton
  private static instance: ProductDAOImpl;

  private constructor() {}

  public static getInstance(): ProductDAOImpl {
    if (!ProductDAOImpl.instance) {
      ProductDAOImpl.instance = new ProductDAOImpl();
    }
    return ProductDAOImpl.instance;
  }

  addProduct(product: Product): void {
    const path = `./products/${product.id}.json`;
    writeFileSync(path, JSON.stringify(product));
    console.log(`Product with ID ${product.id} has been saved.`);
  }

  updateProduct(product: Product): void {
    throw new Error('UnsupportedOperationException');
  }

  deleteProduct(id: string): void {
    throw new Error('UnsupportedOperationException');
  }

  getProduct(id: string): Product {
    throw new Error('UnsupportedOperationException');
  }
}

const productDAO = ProductDAOImpl.getInstance();

const product: Product = {
  id: '123',
  price: 99.99,
  name: 'Laptop',
};

productDAO.addProduct(product);
"
0BJpeQtP,kit_sdl2_coreVector.c (WIP; to be fully tested),Kitomas,C,Friday 11th of August 2023 03:24:15 AM CDT,"//my own primitive form of contiguous dynamic arrays
#include ""../include/kit_sdl2/kit_core.h""
#include ""../_private/include/_kit_privmacro.h""


//initializes any added memory if difference is positive
int _kit_coreVectorRealloc(void* ptr_p, char axis,
                           Uint32 osize, Uint32 nsize)
{
  if(osize==nsize) return 0;
  void* _ptr=SDL_realloc(*(void**)ptr_p,nsize);
  if(_ptr==NULL){
    if(axis!=0) SDL_SetError(""SDL_realloc() of %c axis failed"",axis);
    return -1;
  }
  Uint32 size_diff=nsize-osize;
  if(size_diff>0) SDL_memset(_ptr+osize,0,size_diff);
  *(void**)ptr_p=_ptr;
  return 0;
}


void _kit_coreVectorFreeZinY(kit_coreVector* Vector,
                             Uint32 x_start, Uint32 x_end,
                             Uint32 y_start, Uint32 y_end)
{
  if(Vector->_dims<3) return; //z doesn't exist in 1d or 2d array
  void*** p3d=Vector->p3d;
  for(Uint32 xi=x_start; xi<x_end; ++xi){ void** p2d=p3d[xi];
    if(p2d==NULL) break;
    for(Uint32 yi=y_start; yi<y_end; ++yi){ void* p1d=p2d[yi];
      if(p1d==NULL) break;
      SDL_free(p1d); p2d[yi]=NULL;
    }
  }
}

void _kit_coreVectorFreeYinX(kit_coreVector* Vector,
                             Uint32 x_start, Uint32 x_end)
{
  if(Vector->_dims<2) return; //y doesn't exist in 1d array
  void** p2d=Vector->p2d;
  for(Uint32 xi=x_start; xi<x_end; ++xi){ void* p1d=p2d[xi];
    if(p1d==NULL) break;
    SDL_free(p1d); p2d[xi]=NULL;
  }
}


int _kit_coreVectorResizeX(kit_coreVector** Vector_p,
                           Uint32 x_osize, Uint32 x_nsize, Uint32 x_new)
{
  kit_coreVector* Vector=*Vector_p;
  if(Vector->x==x_new) return 0;
  //x axis is contiguous with the vector struct itself
  x_osize+=sizeof(kit_coreVector); x_nsize+=sizeof(kit_coreVector);
  if(_kit_coreVectorRealloc(Vector_p,'x', x_osize,x_nsize)) return -12;
  Vector->ptr=(void*)Vector;
  Vector->x=x_new;
  return 0;
}

int _kit_coreVectorResizeY(kit_coreVector* Vector,
                           Uint32 x_start, Uint32 x_end,
                           Uint32 y_osize, Uint32 y_nsize, Uint32 y_new)
{
  if(Vector->_dims<2) return 0; //y doesn't exist in 1d array
  if(Vector->y==y_new) return 0;
  void** p2d=Vector->p2d;
  for(Uint32 xi=x_start; xi<x_end; ++xi)
    if(_kit_coreVectorRealloc(&p2d[xi],'y', y_osize,y_nsize)) return -13;
  Vector->y=y_new;
  return 0;
}

int _kit_coreVectorResizeZ(kit_coreVector* Vector,
                           Uint32 x_start, Uint32 x_end,
                           Uint32 y_start, Uint32 y_end,
                           Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  if(Vector->_dims<3) return 0; //z doesn't exist in 1d or 2d array
  if(Vector->z==z_new) return 0;
  void*** p3d=Vector->p3d;
  for(Uint32 xi=x_start; xi<x_end; ++xi){ void** p2d=p3d[xi];
    for(Uint32 yi=y_start; yi<y_end; ++yi)
      if(_kit_coreVectorRealloc(&p2d[yi],'z', z_osize,z_nsize)) return -14;
  }
  Vector->z=z_new;
  return 0;
}

//uninitialize rS where it isn't needed
//un-inline these if binary size becomes unacceptable!
//(remember, <xyz>_old and <xyz>_new are sometimes flipped when used as a parameter when freeing)
static inline int _kit_coreVectorSubX(kit_coreVector** Vector_p,
                                      Uint32 x_new,   Uint32 x_old, Uint32 y_old,
                                      Uint32 x_osize, Uint32 x_nsize)
{
  kit_coreVector* Vector=*Vector_p;
  _kit_coreVectorFreeZinY(Vector, x_new,x_old, 0,y_old);
  _kit_coreVectorFreeYinX(Vector, x_new,x_old);
  return _kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new);
}

static inline int _kit_coreVectorSubY(kit_coreVector* Vector,
                                      Uint32 x_new,   Uint32 y_old, Uint32 y_new,
                                      Uint32 y_osize, Uint32 y_nsize)
{
  _kit_coreVectorFreeZinY(Vector, 0,x_new, y_old,y_new);
  return _kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new);
}

static inline int _kit_coreVectorSubZ(kit_coreVector* Vector,
                                      Uint32 x_new,   Uint32 y_new, Uint32 z_osize,
                                      Uint32 z_nsize, Uint32 z_new)
{
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorSubXY(kit_coreVector** Vector_p,
                                       Uint32 x_new,   Uint32 x_old, Uint32 y_old,
                                       Uint32 x_osize, Uint32 x_nsize,
                                       Uint32 y_new,   Uint32 y_osize, Uint32 y_nsize)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  _kit_coreVectorFreeZinY(Vector, x_new,x_old, 0,y_old);
  _kit_coreVectorFreeYinX(Vector, x_new,x_old);
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  _kit_coreVectorFreeZinY(Vector, 0,x_new, y_new,y_old);
  return _kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new);
}

static inline int _kit_coreVectorSubYZ(kit_coreVector* Vector,
                                       Uint32 x_new,   Uint32 y_old,   Uint32 y_new,
                                       Uint32 y_osize, Uint32 y_nsize,
                                       Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  int rS=0; //(r)eturn(S)tatus
  _kit_coreVectorFreeZinY(Vector, 0,x_new, y_new,y_old);
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorSubXZ(kit_coreVector** Vector_p,
                                       Uint32 x_new,   Uint32 x_old,   Uint32 y_new,
                                       Uint32 x_osize, Uint32 x_nsize,
                                       Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  _kit_coreVectorFreeZinY(Vector, x_new,x_old, 0,y_new);
  _kit_coreVectorFreeYinX(Vector, x_new,x_old);
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorSubXYZ(kit_coreVector** Vector_p,
                                        Uint32 x_new,   Uint32 x_old,   Uint32 y_old,
                                        Uint32 x_osize, Uint32 x_nsize,
                                        Uint32 y_new,   Uint32 y_osize, Uint32 y_nsize,
                                        Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  _kit_coreVectorFreeZinY(Vector, x_new,x_old, 0,y_old);
  _kit_coreVectorFreeYinX(Vector, x_new,x_old);
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  _kit_coreVectorFreeZinY(Vector, 0,x_new, y_new,y_old);
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}


static inline int _kit_coreVectorAddX(kit_coreVector** Vector_p,
                                      Uint32 x_osize, Uint32 x_nsize, Uint32 x_new,
                                      Uint32 x_old,   Uint32 y_nsize, Uint32 y_new,
                                      Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, x_old,x_new, 0,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, x_old,x_new, 0,y_nsize, 0,z_nsize, z_new);
}

static inline int _kit_coreVectorAddY(kit_coreVector* Vector,
                                      Uint32 x_new, Uint32 y_osize, Uint32 y_nsize, Uint32 y_new,
                                      Uint32 y_old, Uint32 z_nsize, Uint32 z_new)
{
  int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, y_old,y_new, 0,z_nsize, z_new);
}

static inline int _kit_coreVectorAddZ(kit_coreVector* Vector,
                                      Uint32 x_new,   Uint32 y_new,
                                      Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorAddXY(kit_coreVector** Vector_p,
                                       Uint32 x_osize, Uint32 x_nsize, Uint32 x_new,
                                       Uint32 x_old,   Uint32 y_osize, Uint32 y_nsize, Uint32 y_new,
                                       Uint32 y_old,   Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_old, y_osize,y_nsize, y_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, x_old,x_new, 0,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, y_old,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorAddYZ(kit_coreVector* Vector,
                                       Uint32 x_new, Uint32 y_osize, Uint32 y_nsize, Uint32 y_new,
                                       Uint32 y_old, Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_new, y_osize,y_nsize, y_new))) return rS;
  if((rS=_kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_old, z_osize,z_nsize, z_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, y_old,y_new, 0,z_nsize, z_new);
}

static inline int _kit_coreVectorAddXZ(kit_coreVector** Vector_p,
                                       Uint32 x_osize, Uint32 x_nsize, Uint32 x_new,
                                       Uint32 x_old,   Uint32 y_nsize, Uint32 y_new,
                                       Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, x_old,x_new, 0,y_nsize, y_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_new, z_osize,z_nsize, z_new);
}

static inline int _kit_coreVectorAddXYZ(kit_coreVector** Vector_p,
                                        Uint32 x_osize, Uint32 x_nsize, Uint32 x_new,
                                        Uint32 x_old,   Uint32 y_osize, Uint32 y_nsize, Uint32 y_new,
                                        Uint32 y_old,   Uint32 z_osize, Uint32 z_nsize, Uint32 z_new)
{
  kit_coreVector* Vector=*Vector_p; int rS=0; //(r)eturn(S)tatus
  if((rS=_kit_coreVectorResizeX(Vector_p, x_osize,x_nsize, x_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, 0,x_old, y_osize,y_osize, y_new))) return rS;
  if((rS=_kit_coreVectorResizeY(Vector, x_old,x_new, 0,y_osize, y_new))) return rS;
  if((rS=_kit_coreVectorResizeZ(Vector, 0,x_new, 0,y_old, z_osize,z_nsize, z_new))) return rS;
  return _kit_coreVectorResizeZ(Vector, 0,x_new, y_old,y_new, 0,z_nsize, z_new);
}


#define _0X (0x000)
#define _NX (0x100)
#define _PX (0x300)
#define _0Y (0x000)
#define _NY (0x010)
#define _PY (0x030)
#define _0Z (0x000)
#define _NZ (0x001)
#define _PZ (0x003)
#define _VADECISION(_action) \
  if((returnStatus=_action)){ goto _error_; }
#define _VADECISION_B(_action) _VADECISION(_action) break;
//add to or subtract from size
int kit_coreVectorAdd(kit_coreVector** Vector_p, Sint32 x_add, Sint32 y_add, Sint32 z_add){
  if(!x_add && !y_add && !z_add) return 0;
  int returnStatus=0;
  _IF_SDLERR_I(Vector_p==NULL,-1,;,""Vector_p cannot be NULL"")
  kit_coreVector* Vector=*Vector_p;
  _IF_SDLERR_I(Vector==NULL,-2,;,""*Vector_p cannot be NULL"")

  Uint32 unit=Vector->unit;
  Uint32 x_old=Vector->x,   y_old=Vector->y,   z_old=Vector->z;
       _IF_SDLERR_I( (!z_old)&&(z_add!=0) ,-3,;,""cannot change z on non-3d vector"")
  else _IF_SDLERR_I( (!y_old)&&(y_add!=0) ,-4,;,""cannot change y on 1d vector"")
  Uint32 x_new=x_old+x_add, y_new=y_old+y_add, z_new=z_old+z_add;
       _IF_SDLERR_I( (!z_old)!=(!z_add) ,-5,;,""resulting z cannot have its axis status flipped"")
  else _IF_SDLERR_I( (!y_old)!=(!y_add) ,-6,;,""resulting y cannot have its axis status flipped"")

  //check for any underflows and overflows respectively (and some dimension error checks)
   //x
       _IF_SDLERR_I( x_add<0&&(x_new>x_old) ,-7,;,""resulting x cannot be 0"")
  else _IF_SDLERR_I( x_add>0&&(x_new<x_old) ,-8,;,""applying x_add caused an overflow"")
   //y
  if(y_add<0 && (y_new>y_old)) y_new=0;
  else _IF_SDLERR_I( y_add>0&&(y_new<y_old) ,-9,;,""applying y_add caused an overflow"")
  else _IF_SDLERR_I( y_new==0 && z_new>0 ,-10,;,""resulting y cannot be 0 if z>0"")
   //z
  if(z_add<0 && (z_new>z_old)) z_new=0;
  else _IF_SDLERR_I( z_add>0&&(z_new<z_old) ,-11,;,""applying z_add caused an overflow"")

  Uint32 x_unit, y_unit, z_unit;
  x_unit=y_unit=z_unit = sizeof(void*);
  int decision, dims=(x_new!=0)+(y_new!=0)+(z_new!=0); //dim(ension)s
       if(dims==1) x_unit=unit;
  else if(dims==2) y_unit=unit;
  else             z_unit=unit; //(dims==3)
  Uint32 x_osize=x_unit*x_old, y_osize=y_unit*y_old, z_osize=z_unit*z_old;
  Uint32 x_nsize=x_unit*x_new, y_nsize=y_unit*y_new, z_nsize=z_unit*z_new;

  decision =( ((x_new>0)<<1)|(x_new!=0) )<<12; //0x0000 -> 0x3000
  decision|=( ((y_new>0)<<1)|(y_new!=0) )<< 8; //0x0000 -> 0x0300
  decision|=( ((z_new>0)<<1)|(z_new!=0) )<< 4; //0x0000 -> 0x0030
  switch(decision){
  //SUB
  case (_NX|_0Y|_0Z): //_NX_0Y_0Z; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorSubX( &Vector,x_new,x_old,y_old,x_osize,x_nsize ))
  case (_0X|_NY|_0Z): //_0X_NY_0Z; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorSubY( Vector,x_new,y_old,y_new,y_osize,y_nsize ))
  case (_0X|_0Y|_NZ): //_0X_0Y_NZ; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorSubZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
  case (_NX|_NY|_0Z): //_NX_NY_0Z; technically a superset of: (_NX_0Y_0Z,_0X_NY_0Z)
    _VADECISION_B(_kit_coreVectorSubXY( &Vector,x_new,x_old,y_old,x_osize,x_nsize,y_new,y_osize,y_nsize ))
  case (_0X|_NY|_NZ): //_0X_NY_NZ; technically a superset of: (_0X_NY_0Z,_0X_0Y_NZ)
    _VADECISION_B(_kit_coreVectorSubYZ( Vector,x_new,y_old,y_new,y_osize,y_nsize,z_osize,z_nsize,z_new ))
  case (_NX|_0Y|_NZ): //_NX_0Y_NZ; technically a superset of: (_NX_0Y_0Z,_0X_0Y_NZ)
    _VADECISION_B(_kit_coreVectorSubXZ( &Vector,x_new,x_old,y_new,x_osize,x_nsize,z_osize,z_nsize,z_new ))
  case (_NX|_NY|_NZ): //_NX_NY_NZ; technically a superset of: (_NX_NY_0Z,_0X_0Y_NZ)
    _VADECISION_B(_kit_coreVectorSubXYZ( &Vector,x_new,x_old,y_old,x_osize,x_nsize,y_new,y_osize,y_nsize,z_osize,z_nsize,z_new ))
  //ADD
  case (_PX|_0Y|_0Z): //_PX_0Y_0Z; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorAddX( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_nsize,z_new ))
  case (_0X|_PY|_0Z): //_0X_PY_0Z; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorAddY( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_nsize,z_new ))
  case (_0X|_0Y|_PZ): //_0X_0Y_PZ; technically a superset of: (n/a)
    _VADECISION_B(_kit_coreVectorAddZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
  case (_PX|_PY|_0Z): //_PX_PY_0Z; technically a superset of: (_PX_0Y_0Z,_0X_PY_0Z)
    _VADECISION_B(_kit_coreVectorAddXY( &Vector,x_osize,x_nsize,x_new,x_old,y_osize,y_nsize,y_new,y_old,z_osize,z_nsize,z_new ))
  case (_0X|_PY|_PZ): //_0X_PY_PZ; technically a superset of: (_0X_PY_0Z,_0X_0Y_PZ)
    _VADECISION_B(_kit_coreVectorAddYZ( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_osize,z_nsize,z_new ))
  case (_PX|_0Y|_PZ): //_PX_0Y_PZ; technically a superset of: (_PX_0Y_0Z,_0X_0Y_PZ)
    _VADECISION_B(_kit_coreVectorAddXZ( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_osize,z_nsize,z_new ))
  case (_PX|_PY|_PZ): //_PX_PY_PZ; technically a superset of: (_PX_PY_0Z,_0X_0Y_PZ)
    _VADECISION_B(_kit_coreVectorAddXYZ( &Vector,x_osize,x_nsize,x_new,x_old,y_osize,y_nsize,y_new,y_old,z_osize,z_nsize,z_new ))
  //SUBX ADDYZ
  case (_NX|_PY|_0Z): //_NX_PY_0Z; technically a superset of: (_NX_0Y_0Z, _0X_PY_0Z)
    _VADECISION(  _kit_coreVectorSubX( &Vector,x_new,x_old,y_old,x_osize,x_nsize ))
    _VADECISION_B(_kit_coreVectorAddY( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_nsize,z_new ))
  case (_NX|_0Y|_PZ): //_NX_0Y_PZ; technically a superset of: (_NX_0Y_0Z, _0X_0Y_PZ)
    _VADECISION(  _kit_coreVectorSubX( &Vector,x_new,x_old,y_old,x_osize,x_nsize ))
    _VADECISION_B(_kit_coreVectorAddZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
  case (_NX|_PY|_PZ): //_NX_PY_PZ; technically a superset of: (_NX_0Y_0Z, _0X_PY_PZ)
    _VADECISION(  _kit_coreVectorSubX( &Vector,x_new,x_old,y_old,x_osize,x_nsize ))
    _VADECISION_B(_kit_coreVectorAddYZ( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_osize,z_nsize,z_new ))
  //SUBY ADDXZ
  case (_PX|_NY|_0Z): //_PX_NY_0Z; technically a superset of: (_0X_NY_0Z, _PX_0Y_0Z)
    _VADECISION(  _kit_coreVectorSubY( Vector,x_new,y_old,y_new,y_osize,y_nsize ))
    _VADECISION_B(_kit_coreVectorAddX( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_nsize,z_new ))
  case (_0X|_NY|_PZ): //_0X_NY_PZ; technically a superset of: (_0X_NY_0Z, _0X_0Y_PZ)
    _VADECISION(  _kit_coreVectorSubY( Vector,x_new,y_old,y_new,y_osize,y_nsize ))
    _VADECISION_B(_kit_coreVectorAddZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
  case (_PX|_NY|_PZ): //_PX_NY_PZ; technically a superset of: (_0X_NY_0Z, _PX_0Y_PZ)
    _VADECISION(  _kit_coreVectorSubY( Vector,x_new,y_old,y_new,y_osize,y_nsize ))
    _VADECISION_B(_kit_coreVectorAddXZ( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_osize,z_nsize,z_new ))
  //SUBZ ADDXY
  case (_PX|_0Y|_NZ): //_PX_0Y_NZ; technically a superset of: (_0X_0Y_NZ, _PX_0Y_0Z)
    _VADECISION(  _kit_coreVectorSubZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
    _VADECISION_B(_kit_coreVectorAddX( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_nsize,z_new ))
  case (_0X|_PY|_NZ): //_0X_PY_NZ; technically a superset of: (_0X_0Y_NZ, _0X_PY_0Z)
    _VADECISION(  _kit_coreVectorSubZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
    _VADECISION_B(_kit_coreVectorAddY( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_nsize,z_new ))
  case (_PX|_PY|_NZ): //_PX_PY_NZ; technically a superset of: (_0X_0Y_NZ, _PX_PY_0Z)
    _VADECISION(  _kit_coreVectorSubZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
    _VADECISION_B(_kit_coreVectorAddXY( &Vector,x_osize,x_nsize,x_new,x_old,y_osize,y_nsize,y_new,y_old,z_osize,z_nsize,z_new ))
  //SUBXYZ ADDXYZ
  case (_NX|_NY|_PZ): //_NX_NY_PZ; technically a superset of: (_NX_NY_0Z, _0X_0Y_PZ)
    _VADECISION(  _kit_coreVectorSubXY( &Vector,x_new,x_old,y_old,x_osize,x_nsize,y_new,y_osize,y_nsize ))
    _VADECISION_B(_kit_coreVectorAddZ( Vector,x_new,y_new,z_osize,z_nsize,z_new ))
  case (_PX|_NY|_NZ): //_PX_NY_NZ; technically a superset of: (_0X_NY_NZ, _PX_0Y_0Z)
    _VADECISION(  _kit_coreVectorSubYZ( Vector,x_new,y_old,y_new,y_osize,y_nsize,z_osize,z_nsize,z_new ))
    _VADECISION_B(_kit_coreVectorAddX( &Vector,x_osize,x_nsize,x_new,x_old,y_nsize,y_new,z_nsize,z_new ))
  case (_NX|_PY|_NZ): //_NX_PY_NZ; technically a superset of: (_NX_0Y_NZ, _0X_PY_0Z)
    _VADECISION(  _kit_coreVectorSubXZ( &Vector,x_new,x_old,y_new,x_osize,x_nsize,z_osize,z_nsize,z_new ))
    _VADECISION_B(_kit_coreVectorAddY( Vector,x_new,y_osize,y_nsize,y_new,y_old,z_nsize,z_new ))
  default: _IS_SDLERR_I(-15,;,""decision switch defaulted (this shouldn't be possible); decision=0x%X"",decision)
  }
  *Vector_p=Vector;
  _error_:
  return returnStatus;
}
//set new size (if an axis == 0, then leave that axis unchanged)
int kit_coreVectorSet(kit_coreVector** Vector_p, Uint32 x_new, Uint32 y_new, Uint32 z_new){
  int returnStatus=0;
  _IF_SDLERR_I(Vector_p==NULL,-1,;,""Vector_p cannot be NULL"")
  kit_coreVector* Vector=*Vector_p;
  _IF_SDLERR_I(Vector==NULL,-2,;,""*Vector_p cannot be NULL"")

  Uint32 x_old =Vector->x, y_old =Vector->y, z_old=Vector->z;
  Sint32 x_diff=(x_new==0) ? 0 : x_new-x_old;
  Sint32 y_diff=(y_new==0) ? 0 : y_new-y_old;
  Sint32 z_diff=(z_new==0) ? 0 : z_new-z_old;

  returnStatus=kit_coreVectorAdd(Vector_p, x_diff,y_diff,z_diff);

  _error_:
  return returnStatus;
}


int kit_coreVectorDestroy(kit_coreVector** Vector_p){
  int returnStatus=0;
  _IF_SDLERR_I(Vector_p==NULL,-1,;,""Vector_p cannot be NULL"")
  kit_coreVector* Vector=*Vector_p;
  _IF_SDLERR_I(Vector==NULL,-2,;,""*Vector_p cannot be NULL"")

  void *p1d, **p2d, ***p3d;
  int x=Vector->x, y=Vector->y; //z=Vector->z;
  Sint32 condition=Vector->_dims&3;
  if(!condition) condition=(x!=0) + (y!=0) + (Vector->z!=0);

  //condition must be equal to the number of dimensions (1=1d,2=2d,3=3d)
  switch(condition){
  case 3: p3d=Vector->p3d;
    for(Uint32 xi=0; xi<x; ++xi){
      if((p2d=p3d[xi])==NULL) break;
      for(Uint32 yi=0; yi<y; ++yi){
        if((p1d=p2d[yi])==NULL) break;
        else SDL_free(p1d);
      }
    }
  case 2: p2d=Vector->p2d;
    for(Uint32 xi=0; xi<x; ++xi){
      if((p1d=p2d[xi])==NULL) break;
      else SDL_free(p1d);
    }
  case 1: SDL_free(Vector); //frees Vector->p1d too
  default: *Vector_p=NULL;
  }
  _error_:
  return returnStatus;
}


kit_coreVector* kit_coreVectorCreate(Uint32 x, Uint32 y, Uint32 z,
                                     Uint32 unit, Uint32 type_n,
                                     int* returnStatus_p)
{
  kit_coreVector* Vector=NULL;
  size_t x_size, y_size, z_size;
  void /* *p1d, */ **p2d, ***p3d;
  int returnStatus=0, dimensions=0x80000000;
  _IF_SDLERR_I(x==0,-1,;,""variable x cannot be 0"")

  //x axis
  x_size=(!y && !z) ? unit*x : sizeof(void*)*x;
  returnStatus=_kit_coreVectorRealloc(&Vector,0, 0,sizeof(kit_coreVector)+x_size);
  _IF_SDLERR_I(returnStatus,-2,;,""SDL_malloc() for x axis failed"")
  Vector->p1d=((void*)Vector) + sizeof(kit_coreVector); //array is ahead by 32B
  ++dimensions; //vector now contains an x axis

  //y axis
  _IF_SDLERR_I(y==0 && z>0,-3,;,""variable y cannot be 0 if z>0"")
  if(y>0){ ++dimensions; //vector now contains a y axis
    y_size=(!z) ? unit*y : sizeof(void*)*y;
    p2d=Vector->p2d;
    for(Uint32 xi=0; xi<x; ++xi){
      returnStatus=_kit_coreVectorRealloc(&p2d[xi],0, 0,y_size);
      _IF_SDLERR_I(returnStatus,-4,;,""SDL_malloc() for y axis failed"")
    }
  }

  //z axis
  if(z>0){ ++dimensions; //vector now contains a z axis
    z_size=unit*z; p3d=Vector->p3d;
    for(Uint32 xi=0; xi<x; ++xi){ p2d=p3d[xi];
      for(Uint32 yi=0; yi<y; ++yi){
        returnStatus=_kit_coreVectorRealloc(&p2d[yi],0, 0,z_size);
        _IF_SDLERR_I(returnStatus,-5,;,""SDL_malloc() for z axis failed"")
      }
    }
  }

  dimensions&=0x7fffffff; //unset sign bit
  Vector->type.n=type_n;
  Vector->x=x, Vector->y=y, Vector->z=z;
  Vector->unit=unit;
  _error_:
  if(Vector!=NULL){
    Vector->_dims=dimensions&3;
    if(dimensions<0) returnStatus+=kit_coreVectorDestroy(&Vector); //-=0 -> 2
  }
  if(returnStatus_p!=NULL) *returnStatus_p=returnStatus;
  return Vector;
}"
RVwnquwq,MaxHub | Auto Dodge | Perfect Untitled Boxing Game Script Pastebin,GUI_Maker_Roblox,Lua,Friday 11th of August 2023 02:47:34 AM CDT,"--Join MaxHub Discord |
loadstring(game:HttpGet(""https://api.luarmor.net/files/v3/loaders/3f4c258405c294983a9b0e113dad3de7.lua""))()"
WaB95tY1,Senarai,ayiemedia,HTML,Friday 11th of August 2023 02:24:51 AM CDT,"Senarai aduan 
13 Ogos - https://docs.google.com/spreadsheets/d/1fL8cCjRfJgOAGsSNi-0A4_MnO9BCDBboJD0hW40MJ9E/edit#gid=0
12 Ogos -  https://docs.google.com/spreadsheets/d/1pilmLlCE3iPJHtVUut20HUCEDn7dFkSq-p26qir-mjs/edit
11 Ogos - https://docs.google.com/spreadsheets/d/1tCqvpzdYc_DZVn6foD3l-f-cWoKof-4c7CsTpdLP-R4/edit
10 Ogos - https://docs.google.com/spreadsheets/d/1YJgrIgixfMlbjyaNC4iGhvSj073H5NgrElsnQDO4qH8/edit#gid=0 
9 Ogos - https://docs.google.com/spreadsheets/d/1EZmbGDayi9UcjGa1Tao15eYWYXo1-rVJ3fvfyDN588A/edit#gid=0
8 Ogos - https://docs.google.com/spreadsheets/d/1WFagMzKwl27s6dkfaQI28NJ_v58LGM-041q3xX1S1e8/edit#gid=1560368342
7 Ogos https://docs.google.com/spreadsheets/d/1ZCj2Ays9NzweXqnaaaf8Mh1lZSU2_9h0_5DcG7kWyJI/edit?usp=sharing
6 Ogos https://docs.google.com/spreadsheets/d/1IDuyxgwOJmUQMUwcacgJHLx1XFsJuIhZMWC8CAwXWOo/edit?usp=sharing
5 Ogos https://docs.google.com/spreadsheets/d/1SfTSVhAXN1b-1S-HdGNj8YkpBgDDZeIppoVJqCspF7c/edit?usp=sharing
4 Ogos https://docs.google.com/spreadsheets/d/1nKwpuHVqitYF1TjRLxfDGRTfXFFIXX4UUnfkoN-f_Lw/edit?usp=sharing
3 Ogos https://docs.google.com/spreadsheets/d/1T7eoeWq9EkxKVosoMssw5V9rgfWMBbqU-Sz1Y0fjmMA/edit?usp=sharing
2 Ogos https://docs.google.com/spreadsheets/d/1kpguanVdtTJq9K-ic6m1zcwdqNUw7FoWCLDY8v1bUqc/edit?usp=sharing
1 Ogos - https://docs.google.com/spreadsheets/d/1i2rctZeNH6mdFc_SWK3wVmLc8ITNAKfLPmY1qhQ6esQ/edit?usp=sharing
31 Julai - https://docs.google.com/spreadsheets/d/1r9SEKs3_gShF_r8IjY7d-KkERAsJotoHFbOD9jXK83c/edit?usp=sharing
30 Julai - https://docs.google.com/spreadsheets/d/1Y7Fw0zgFTlOFTwZfZpKgepsb_Dltv-G4nNMUfLLiCf0/edit?usp=sharing
29 Julai - https://docs.google.com/spreadsheets/d/1kUlyrERRUcAbwJEygi50QB3SqI2Ver55SgnRDPeIkyg/edit?usp=sharing
28 Julai - https://docs.google.com/spreadsheets/d/1YKlHK4JXMJjGKofBYgnuE6qB5yoYq87L5_mKySnsGu4/edit?usp=sharing
27 Julai -https://docs.google.com/spreadsheets/d/1mtELxP1qvR_1khmP4EzB-UWGwZc9AvEIzFQfob0I-I4/edit?usp=sharing
26 Julai - https://docs.google.com/spreadsheets/d/14u1d5To_ypUvyEjQbj7KRzRbSosaWnXFurlBC40oPY8/edit#gid=0
25 Julai -https://docs.google.com/spreadsheets/d/1uB_uIShXPoGw7D5JLRpi72UmX25IdVKIo7TCMdsbM8k/edit#gid=0
24 Julai https://docs.google.com/spreadsheets/d/1TicBTRevNFMrUnxmzdQIQeS0qeqo7KGJtItunTm1R1Q/edit?usp=sharing"
uzhE23R2,blynk_watchdog,mikroavr,Arduino,Friday 11th of August 2023 02:22:02 AM CDT,"#define RXD2 26
#define TXD2 27

#define PKEY 14
#define RST 12

#define TINY_GSM_MODEM_SIM7600
#define BLYNK_TEMPLATE_ID ""TMPLE1aPZJfE""
#define BLYNK_TEMPLATE_NAME ""Solar_Tracker""
#define BLYNK_AUTH_TOKEN ""aoZ95-IDwV16oVP3N9TChD36QmmPWMRz""

#define BLYNK_PRINT Serial
#define SerialMon Serial
#define SerialAT Serial2
#include <TinyGsmClient.h>
#include <BlynkSimpleTinyGSM.h>
TinyGsm modem(SerialAT);

unsigned long cur_time_res, old_time_res;
unsigned long cur_time, old_time;
bool hold = 0;

#define TINY_GSM_MODEM_SIM7600
#if !defined(TINY_GSM_RX_BUFFER)
#define TINY_GSM_RX_BUFFER 650
#endif
#define TINY_GSM_DEBUG SerialMon
// set GSM PIN, if any
#define GSM_PIN """"

// Your GPRS credentials, if any
char apn[]  = ""Internet"";
char user[] = """";
char pass[] = """";

int counter = 0;
int count_con = 0;

#define WATCHDOG_TIMEOUT_S 20 // restart jika tidak ada respon 5detik
hw_timer_t * watchDogTimer = NULL;

void IRAM_ATTR watchDogInterrupt() {
  Serial.println(""reboot"");
  ESP.restart();
}

void watchDogRefresh()
{
  timerWrite(watchDogTimer, 0);                    //reset timer (feed watchdog)
}

void setup() {
  // put your setup code here, to run once:

  delay(100);
  Serial.begin(115200);
  SerialAT.begin(115200, SERIAL_8N1, RXD2, TXD2);

  pinMode(RST, OUTPUT);
  pinMode(PKEY, OUTPUT);

  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  digitalWrite(PKEY, HIGH);
  digitalWrite(RST, HIGH);
  delay(1000);
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);

  SerialMon.println(""Initializing modem..."");
  modem.restart();
  String modemInfo = modem.getModemInfo();
  Serial.print(""Modem Info: "");
  Serial.println(modemInfo);

  Blynk.begin(BLYNK_AUTH_TOKEN, modem, apn, user, pass);
  delay(100);

}

void loop() {
  // put your main code here, to run repeatedly:
  Blynk.run();

  cur_time_res = millis();
  if (cur_time_res - old_time_res >= 1000) {
    watchDogRefresh();

    old_time_res = millis();
  }



  cur_time = millis();
  if (cur_time - old_time >= 4000) {
    //baca_pzem();
    Blynk.virtualWrite(V3, counter);
    counter ++;
    if (counter == 1500) {
      counter = 0;
    }
    bool check_con = Blynk.connected();
    Serial.print(""connected: "" );
    Serial.println(check_con);
    if (check_con == false) {
      count_con++;
      if (count_con == 20) {
        Serial.print(""disconnect: "");
        Serial.println(count_con);
        reset_sim();
        wakeup_sim();
      }
    }
    old_time = millis();
  }
}

void reset_sim() {
  digitalWrite(RST, HIGH);
}

void wakeup_sim() {
  SerialMon.println(""wakeup sim7600"");
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  digitalWrite(PKEY, HIGH);
  digitalWrite(RST, HIGH);
  delay(1000);
  digitalWrite(PKEY, LOW);
  digitalWrite(RST, LOW);
  delay(1000);
  wRespon(15000);
}

void wRespon(long waktu) {
  cur_time_res = millis();
  old_time_res = cur_time_res;
  while (cur_time_res - old_time_res < waktu ) {
    cur_time_res = millis();
    while (SerialAT.available() > 0) {
      SerialMon.print(SerialAT.readString());
    }
  }
}"
QN6JDAhy,Untitled,sashaatx,Autohotkey,Friday 11th of August 2023 02:00:43 AM CDT,"
#Requires Autohotkey v2
;AutoGUI 2.5.8 creator: Alguimist autohotkey.com/boards/viewtopic.php?f=64&t=89901
;AHKv2converter creator: github.com/mmikeww/AHK-v2-script-converter
;Easy_AutoGUI_for_AHKv2 github.com/samfisherirl/Easy-Auto-GUI-for-AHK-v2

myGuiObj := myClass.UI()
; myGuiObj.Destroy()

class myClass
{
	static UI()
	{
		myGUI := Gui()
		ogcButtonOK := myGui.Add(""Button"", ""x8 y8 w80 h23"", ""&OK"")
		ogcButtonOK.OnEvent(""Click"", OnEventHandler)
		myGui.OnEvent('Close', (*) => ExitApp())
		myGui.Title := ""Window""
		myGui.Show(""w120 h46"")
					
		OnEventHandler(*)
		{
			ToolTip(""Click! This is a sample action.`n""
			. ""Active GUI element values include:`n""  
			. ""ogcButtonOK => "" ogcButtonOK.Text ""`n"", 77, 277)
			SetTimer () => ToolTip(), -3000 ; tooltip timer
		}
		return myGui
	}
}

"
d5Ky9YBn,Untitled,sashaatx,Autohotkey,Friday 11th of August 2023 02:00:04 AM CDT,"MenuHelpAbout(*)
{
    About := Gui(""+owner"" MyGui.Hwnd)  ; Make the main window the owner of the ""about box"".
    MyGui.Opt(""+Disabled"")  ; Disable main window.
    About.Add(""Text"",, ""Text for about box."")
    About.Add(""Button"", ""Default"", ""OK"").OnEvent(""Click"", About_Close)
    About.OnEvent(""Close"", About_Close)
    About.OnEvent(""Escape"", About_Close)
    About.Show()

    About_Close(*)
    {
        MyGui.Opt(""-Disabled"")  ; Re-enable the main window (must be done prior to the next step).
        About.Destroy()  ; Destroy the about box.
    }
}"
