id,title,username,language,date,content
dc0Jtnih,clases-interfaces,teslariu,Java,Thursday 23rd of November 2023 06:06:44 PM CDT,"/*
* Clases abstractas, concretas, polimorfismo, interfaces
*
*
*
*/


public class Cliente {
	
	String cuit;                               
	String direccion;
	float saldo;
	
	public void extraer(int monto) {
		if (saldo >= monto){
			saldo = saldo - monto
		}
	}
	
}


class ClientePyme extends Cliente {
	
	String razonSocial;
	float descubierto;
	
	public void extraer(int monto) {
		if (saldo + descubierto >= monto){
			saldo = saldo - monto
		}
}

abstract class Vehiculo{
	boolean conductor;
	boolean motor;
	
	abstract void mover();
	}


///////////////////////////////////////////////////

////  INTERFAZ UNICA

public interface Vehiculo(
	public float maxVel;
	public void arrancar();
	public void detener();
)

public class Auto implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo..."");
	}
)

// Creo un auto
Vehiculo miAuto = new Auto();


//  polimorfismo
public class Camion implements Vehiculo(
	public void arrancar(){
			System.out.println(""Arrancando el camión..."");
	}
	
	public void detener(){
			System.out.println(""Deteniendo el camión..."");
	}
)

// Creo un camión
Vehiculo miCamion = new Camion();


//// INTERFACES MULTIPLES
public interface GPS{
	public String getCoordenadas();            
}

public interface Radio {                       
	public void encenderRadio();
	public void apagarRadio(); 
}

public class Smartphone implements GPS,Radio {
	public String getCoordenadas(){
			// return coordenadas;
	}
	
	public void encenderRadio(){
			System.out.println(""Encendiendo radio..."");
	}
	
	public void apagarRadio(){
			System.out.println(""Apagando radio..."");
	}

}


/// Clase final: es una clase QUE NO PUEDE SER EXTENDIDA (no se puede heredar,no puede tener subclases)

final class Persona{
	
	String Nombre;
	String Apellido;
	int DNI;
	
	/// getters y setters
	// puedo declarar algun metodo final
	final void mostrar(){
			System.out.println(""No tengo hereredos..."");
		}
	}

// Un atributo de Clase tambien llamados ESTATICOS: pertenece a TODA LA CLASE
// y no a un objeto en particular; son estaticos (constantes)

// clase Perro:
// a. metodos: correr, jugar, caminar, saltar, etc
// b. atributos: raza, especie = ""Canis familiaris""









"
dWLt6XsV,rarreg.key,huezohuezo1990,Bash,Thursday 23rd of November 2023 05:37:33 PM CDT,"RAR registration data
WinRAR
Unlimited Company License
UID=4b914fb772c8376bf571
6412212250f5711ad072cf351cfa39e2851192daf8a362681bbb1d
cd48da1d14d995f0bbf960fce6cb5ffde62890079861be57638717
7131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565
b41bcf56929486b8bcdac33d50ecf773996052598f1f556defffbd
982fbe71e93df6b6346c37a3890f3c7edc65d7f5455470d13d1190
6e6fb824bcf25f155547b5fc41901ad58c0992f570be1cf5608ba9
aef69d48c864bcd72d15163897773d314187f6a9af350808719796
"
JcXxZNci,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Thursday 23rd of November 2023 05:32:59 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-925426"
v4CYe5fD,Untitled,hidromotic,C,Thursday 23rd of November 2023 05:27:32 PM CDT,"#include <DFRobot_RGBLCD1602.h>
#include ""Ultrasonic.h""

// Pines de Sensores y configuracion inicial de la pantalla LCD
Ultrasonic SENSOR_ULTRASONICO_DELANTERO(2, 3);
Ultrasonic SENSOR_ULTRASONICO_TRASERO(11, 10);
DFRobot_RGBLCD1602 lcd(0x27, 16, 2);

// Definiciones de los parametros del buzzer
#define BUZZER_PIN        9
#define FREQUENCIA         800
#define CONFIGURAR_BUZZER  pinMode(BUZZER_PIN, OUTPUT)
#define PRENDER_BUZZER     tone(BUZZER_PIN, FREQUENCIA)
#define APAGAR_BUZZER      noTone(BUZZER_PIN)

// Definiciones de los Led´s delanteros y traseros
#define LED_DELANTERO_PIN        4
#define CONFIGURAR_LED_DELANTERO pinMode(LED_DELANTERO_PIN, OUTPUT)
#define PRENDER_LED_DELANTERO    digitalWrite(LED_DELANTERO_PIN, HIGH)

#define LED_TRASERO_PIN          12
#define CONFIGURAR_LED_TRASERO   pinMode(LED_TRASERO_PIN, OUTPUT)
#define PRENDER_LED_TRASERO      digitalWrite(LED_TRASERO_PIN, HIGH)

// Definiciones de la lectura de distancia de los sensores
#define DISTANCIA_DELANTERA     SENSOR_ULTRASONICO_DELANTERO.read()
#define DISTANCIA_TRASERA       SENSOR_ULTRASONICO_TRASERO.read()

// Definicion sobre la distancia limite de los sensores
#define DISTANCIA_LIMITE        20

// Definciones del LedTest
#define MS_INTERVALO_LED_TEST   250 //Function LedTest()
#define LED_TEST                LED_BUILTIN
#define CONFIG_LED_TEST         pinMode(LED_TEST, OUTPUT)
#define ACTUALIZAR_LED_TEST(x)  digitalWrite(LED_TEST, x)

// Variables globales utilizadas en el codigo
bool pantallaLimpia = false;
bool mostrarAlarma = false;
bool mostrarDistancia = true;
bool alarmaActiva = true;

unsigned long tiempoActualizacion = 0;
unsigned long intervalo = 250;

//-----------------------------------------------------

void setup() {
  CONFIG_LED_TEST;
  ACTUALIZAR_LED_TEST(0);
  CONFIGURAR_LED_DELANTERO;
  CONFIGURAR_LED_TRASERO;
  CONFIGURAR_BUZZER;
  APAGAR_BUZZER;
  lcd.init();
  lcd.setCursor(0, 0);
  lcd.print(""Distancia1:  "");
  lcd.setCursor(0, 1);
  lcd.print(""Distancia2:  "");
}

void loop() {
  LedTest();
  medirDistanciaSensoresUltrasonicos();
  controlarBuzzers();

  //UNIFICAR LA VISUALIZACION DEL LCD EN UNA ÚNICA FUNCIÓN, que podría llamarse ActualizaDisplay();
  actualizarLCD(DISTANCIA_DELANTERA);
  actualizarLCD(DISTANCIA_TRASERA);
  valoresLeds();
}

//-----------------------------------------------------

void LedTest() {
  static int ledState = 0;
  static unsigned long antMillis = 0;

  if (millis() - antMillis < MS_INTERVALO_LED_TEST) return;

  antMillis = millis();
  ledState = !ledState;
  ACTUALIZAR_LED_TEST(ledState);
}

//-----------------------------------------------------

void medirDistanciaSensoresUltrasonicos() {
  unsigned long currentTime = millis();
  //tiempoActualizacion NO DEBE SER GLOBAL... DEBE SER LOCAL A LA FUNCIÓN
  
  if (currentTime - tiempoActualizacion >= intervalo) return;
  medirDistanciaSensor1();
  medirDistanciaSensor2();
  verificarDistanciaSensores();
  tiempoActualizacion = currentTime;
}

//-----------------------------------------------------

void valoresLeds() {
  
  int ledDelantero = LED_DELANTERO_PIN;
  int brilloLedDelantero = 255;
  int intervaloDelantero = 500;
  int distanciaDelantera = 1;

 
  int ledTrasero = LED_TRASERO_PIN;
  int brilloLedTrasero = 255;
  int intervaloTrasero = 500;
  int distanciaTrasera = 1;

  
  parpadeoLedDelanteros(ledDelantero, brilloLedDelantero, intervaloDelantero, distanciaDelantera);
  parpadeoLedTraseros(ledTrasero, brilloLedTrasero, intervaloTrasero, distanciaTrasera);
}

void actualizarLCD(int valorDistancia) {
  lcd.setCursor(12, 0);
  lcd.print(""   "");

  if (mostrarDistancia) {
    lcd.setCursor(12, 0);
    lcd.print(valorDistancia);
  }
}

void controlarBuzzers() {
  unsigned long currentTime = millis();

  if (currentTime - tiempoActualizacion >= intervalo) return;
  controlarBuzzerDelantero(DISTANCIA_DELANTERA, BUZZER_PIN);
  controlarBuzzerTrasero(DISTANCIA_TRASERA, BUZZER_PIN);
  tiempoActualizacion = currentTime;
}

//-----------------------------------------------------

void controlarBuzzerDelantero(int distancia, int buzzerPin) {
  //digitalWrite(buzzerPin, distancia == 0 ? HIGH : LOW);
  /*
  if(!distancia) ACTIVAR_BUZZER;
  else          DESACTIVAR_BUZZER;
}
*/
void controlarBuzzerTrasero(int distancia, int buzzerPin) {
  digitalWrite(buzzerPin, distancia == 0 ? HIGH : LOW);
}

//-----------------------------------------------------

void medirDistanciaSensores(int distancia, int ledPin, int buzzerPin) {
  int frequenciaBuzzer = map(distancia, 0, DISTANCIA_LIMITE, 800, 1000);
  int valorPWM = map(distancia, 0, DISTANCIA_LIMITE, 255, 0);
  int mapearIntervalo = map(distancia, 0, DISTANCIA_LIMITE, 255, 100);

  parpadeoLed(ledPin, valorPWM, mapearIntervalo, distancia);
  actualizarLCD(distancia);
}

//-----------------------------------------------------
/*
void medirDistancia() {
  medirDistanciaSensores(DISTANCIA_DELANTERA, LED_DELANTERO_PIN, BUZZER_PIN);
  medirDistanciaSensores(DISTANCIA_TRASERA, LED_TRASERO_PIN, BUZZER_PIN);
}
*/
void medirDistanciaSensor1() {
  medirDistanciaSensores(DISTANCIA_DELANTERA, LED_DELANTERO_PIN, BUZZER_PIN);
}

void medirDistanciaSensor2() {
  medirDistanciaSensores(DISTANCIA_TRASERA, LED_TRASERO_PIN, BUZZER_PIN);
}

//-----------------------------------------------------

void verificarDistanciaSensores() {

  //REMOVER DE ESTA FUNCIÓN TODO LO RELACIONADO CON LA VISUALIZACIÓN
  
  //REEMPLAZAR POR IF RÁPIDO para alarmaActiva
  if (DISTANCIA_DELANTERA <= DISTANCIA_LIMITE || DISTANCIA_TRASERA <= DISTANCIA_LIMITE)alarmaActiva = true;
  else alarmaActiva = false;
  
  if (!pantallaLimpia) {
    lcd.clear();
    pantallaLimpia = true;
  }

  lcd.setCursor(0, 0);
  lcd.print(""Distancia1:    "");
  lcd.setCursor(0, 1);
  lcd.print(""Distancia2:    "");

  if (!alarmaActiva) {
    lcd.setCursor(12, 0);
    lcd.print(DISTANCIA_DELANTERA);
    lcd.setCursor(12, 1);
    lcd.print(DISTANCIA_TRASERA);
    APAGAR_BUZZER;

    if (mostrarAlarma) {
      lcd.setCursor(1, 0);
      lcd.print(""                   "");
      lcd.setCursor(2, 1);
      lcd.print(""                   "");
      mostrarAlarma = false;
    }
  } else {
    lcd.setCursor(0, 0);
    lcd.print(""  DETENGA SU      "");
    lcd.setCursor(0, 1);
    lcd.print(""  VEHICULO       "");

    mostrarAlarma = true;
    mostrarDistancia = false;
    PRENDER_BUZZER;
  }
}

//-----------------------------------------------------

void parpadeoLed(int led, int brillo, int intervalo, int distancia) {
  
  static unsigned long previousMillis = 0;
  static bool ledState = LOW;
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis < intervalo) return;
  previousMillis = currentMillis;
  ledState = !ledState;

  distancia == 0 ? (PRENDER_LED_DELANTERO, PRENDER_LED_TRASERO) : analogWrite(led, brillo * ledState);
}

void parpadeoLedDelanteros(int ledDelantero, int brilloLed, int intervalo, int distanciaDelantera) {
  parpadeoLed(ledDelantero, brilloLed, intervalo, distanciaDelantera);
}

void parpadeoLedTraseros(int ledTrasero, int brilloLed, int intervalo, int distanciaTrasera) {
  parpadeoLed(ledTrasero, brilloLed, intervalo, distanciaTrasera);
}"
uqJ9W6Un,BTC Wallet Credentials have been reset,castlclass_20,GetText,Thursday 23rd of November 2023 05:19:14 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
entroido91:Q2aS7s on 212.224.93.130
You can connect via SSH.
Regards"
B0VHm1VB,Village Manager,CheikoAsami,Batch,Thursday 23rd of November 2023 04:10:59 PM CDT,"@echo off
title Village Manager
:header
cls
echo ------------------------
echo   Head of the Village
echo ------------------------
echo 1- Start Game
echo 2- Exit
echo ------------------------
choice /c 12 /n >nul

if %errorlevel% == 1 (
	call :data
	set /p name=Enter name of Village:
	goto game
)
if %errorlevel% == 2 exit
goto header

:data
set name=Nameless Village
set gold=100
set pop=0
set villagers=5
set militia=5
set livestock=0
set grain=0
set grainSkill=0
set grainLoss=0
set deathTollVillagers=0
set deathTollMilitia=0

set tax=1
set resourceActs=0

set fleeChances=0
set fleeChance=15
set raids=0
set raidChance=0
set raidType=0
set raidToggle=0
set daysUntilRaid=0
set days=0
set years=0
set time=0
set timeRate=9999

set state=Start
goto:eof

:status
set /a pop=%militia%+%villagers%
if %pop% LEQ 0 (
	goto gameover
)
if %resourceActs% EQU 0 set acting=No Actions being Taken, Have the Village do something in Managment!
if %resourceActs% EQU 1 set acting=The Villagers are Growing Grain
if %resourceActs% EQU 2 set acting=The Villagers are Raising Livestock
if %resourceActs% EQU 3 set acting=The Villagers are Expanding Population

if %days% GEQ 365 (
	set days=0
	set /a years+=1
)
goto:eof

:gameover
cls
echo ------------------------------------------------------------------------
echo     Pity, your village is now desolate! Everyone is dead and rotting.
echo ------------------------------------------------------------------------
echo You lasted %years% Years and %days% Days, surviving %raids% Raids on your village.
echo ------------------------------------------------------------------------
echo Press any Key to Return to Menu...
pause>nul
goto header

:game
call :status
cls
echo -----------------------------------------
echo Village Name: %name% /\ Gold: %gold% /\ Population: %pop%
echo -
echo Villagers: %villagers%
echo Militia: %militia%
echo -----------------------------------------
echo Time Since Establishment: Day: %days% Year: %years%
echo -
echo Behavior: %acting%
echo -
echo Grain: %grain%
echo Livestock: %livestock%
if %daysUntilRaid% GTR 0 echo -
if %daysUntilRaid% GTR 0 echo Days Remaining Until Raid:%daysUntilRaid%
echo -
echo Raid Roll: %raidChance%/50
echo -----------------------------------------
echo 1- %state% Time
echo 2- Management
echo 3- Options
echo -----------------------------------------
choice /d 4 /t %timeRate% /c 1234 /n >nul
if %errorlevel% == 1 (
	if %raidToggle% EQU 1 (
		if %daysUntilRaid% EQU 0 (
		goto raidOutcome
		)
	)
	if %time% EQU 1 (
		set time=0
		set timeRate=9999
		set state=Start
	) else (
	set state=Stop
	set time=1
	set timeRate=2
	)
)
if %errorlevel% == 2 (
	goto management
)
if %errorlevel% == 3 (
	goto options
)
if %errorlevel% == 4 (
	if %time% EQU 1 (
		call :progress
	)
)
goto game

:raided
set /a raidType=%random%%%2+1
if %militia% GTR 0 (
	set /a fleeChances=%random%%%100+1
	set /a fleeChance=%militia%*2
	if %fleeChances% GEQ %fleeChance% (
		set /a raidType=3
	)
)
set /a halfGrain=%grain% / 2
set /a halfPop=%villagers% / 2
set /a halfMil=%militia% / 3

set /a deathTollVillagers=%random%%%%halfPop%+1
set /a deathTollMilitia=%random%%%%halfMil%+1
set /a grainLoss=%random%%%%halfGrain%+1

call :raidTypes

set /a raids+=1
set raidToggle=0
goto:eof

:raidTypes
if %raidType% EQU 1 (
	set raidedType=They didn't want your goods they wanted death! %deathTollVillagers% Villagers and %deathTollMilitia% Militia lives had been lost in the Raid!
	set /a villagers-=%deathTollVillagers%
	set /a militia-=%deathTollMilitia%
)
if %raidType% EQU 2 (
	set raidedType=To not hurt anyone, the Raiders were quite hungry and stole %grainLoss% grain from the village!
	set /a grain-=%grainLoss%
)
if %raidType% EQU 3 (
	set raidedType=To flee your borders, your militia force diswayed them from attacking! %fleeChances%/%fleeChance%
)
goto:eof

:raidOutcome
call :raided
cls
echo -------------------------------------
echo The Village of %name% is being Raided!
echo The Raiders decided, %raidedType%
echo -------------------------------------
echo
pause>nul
goto game

:raidTimer
if %raidChance% GTR 50 (
	set raidToggle=1
	set /a daysUntilRaid=%random%%%120+1
)
goto:eof

:progress
if %raidToggle% EQU 0 (
	set /a days+=1
	set /a gold+=%pop%+%tax%
	set /a raidChance=%random%%%65+1
	call :raidTimer
)
if %raidToggle% EQU 1 (
	if %daysUntilRaid% EQU 0 (
		set time=0
		set timeRate=9999
		set state=Raid
	)
	if %daysUntilRaid% GTR 0 (
		set /a days+=1
		set /a gold+=%pop%+%tax%
		set /a daysUntilRaid-=1
	)
	
)

if %resourceActs% EQU 1 (
	set /a grain+=%pop%+%grainSkill%
)
if %resourceActs% EQU 2 (
	if %grain% GEQ 15 (
		set /a grain-=15
		set /a livestock+=1
	) else (set resourceActs=1)	
)
if %resourceActs% EQU 3 (
	if %grain% GEQ 15 (
		if %livestock% GEQ 1 (
			set /a grain-=15
			set /a livestock-=1
			set /a villagers+=2
		) else (set resourceActs=1)
	) else (set resourceActs=1)
	
)
goto:eof



:management
cls
echo ----------------------------------
echo            Management
echo ----------------------------------
echo 1- Actions
echo 2- Stock
echo 3- Return
echo ----------------------------------
choice /c 123 /n >nul
if %errorlevel% == 1 (
	goto villageActions
)
if %errorlevel% == 2 (
	call :stock
)
if %errorlevel% == 3 (
	goto game
)
goto management

:villageActions
cls
echo ------------------------------------
echo             Actions
echo ------------------------------------
echo 1- Resource Managment
echo 2- Citizen Management
echo 3- Return
echo ------------------------------------
choice /c 123 /n >nul
if %errorlevel% == 1 (
	cls
	echo ------------------------
	echo Grain: %grain%
	echo Livestock: %livestock%
	echo ------------------------
	echo 0-No Action
	echo 1-Grow Grain
	echo 2-Raise Livestock -Consumes -15 Grain
	echo 3-Grow Population -Consumes -1 Livestock and -15 Grain
	echo ------------------------
	set /p resourceActs=Enter Action to Take:
	call :actionTaken
)
if %errorlevel% == 3 (
	goto management
)
goto villageActions

:actionTaken
if %resourceActs% EQU 0 (
	echo The Village will take no action
)
if %resourceActs% EQU 1 (
	echo The Village will now Grow Grain.
)
if %resourceActs% EQU 2 (
	echo The Village will now Raise Livestock.
)
if %resourceActs% EQU 3 (
	echo The Village will now consume to flourish.
)
pause>nul
goto:eof

:stock
cls
echo ---------------------------------
echo            Stock
echo ---------------------------------
echo Grain: %grain%
echo Livestock: %livestock%
echo ---------------------------------
pause>nul
goto:eof
"
uhyseNjf,Question of the Day,airglasty,JSON,Thursday 23rd of November 2023 03:29:27 PM CDT,"What superpower would you never want to have?;
Which name would you choose if you had to rename yourself?;
What's the worst colour that has ever been invented?;
What is your favourite board game?;
What is the dumbest way you've been injured?;
If you could date a video game villain, who would it be?;
What specific game logic would you like to be applied to real life?;
What's the pettiest reason you've ever disliked a character in a game?;
If you could hang out in any in-game location for a day, where would it be?;
Which game soundtrack would you want in the background of your life?;
If you could get any animal as a pet from a game, what would you pick?;
What horror game do you think you'd have the best chance of survival in real life?; 

"
0mx9Z5jM,Untitled,G0nz0uk,HTML,Thursday 23rd of November 2023 03:28:39 PM CDT,"https://www.amazon.co.uk/Samsung-Odyssey-LS32BG650EUXXU-Curved-Monitor/dp/B0BMM6MP3J/ref=sr_1_2_sspa?crid=1SW9OMK5FS9G2&keywords=1440p%2B240hz%2Boled&qid=1700773513&sprefix=1440p%2B240hz%2Bole%2Caps%2C91&sr=8-2-spons&ufe=app_do%3Aamzn1.fos.16386313-b7bf-4b29-bfa1-0d3d5f3a0dd5&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&th=1

https://www.amazon.co.uk/AOC-AG274QG-Widescreen-NVIDIA-G-SYNC/dp/B09PVDNJCY/ref=sr_1_4?crid=1RQ2NH9S5T9H6&keywords=1440p+240hz+monitor&qid=1700774011&sprefix=1440p+240hz%2Caps%2C96&sr=8-4&ufe=app_do%3Aamzn1.fos.23648568-4ba5-49f2-9aa6-31ae75f1e9cd

https://www.amazon.co.uk/KOORUI-Monitor-Adaptive-DisplayPort-GN05/dp/B0CC911GK6/ref=sxin_17_pa_sp_search_thematic_sspa?content-id=amzn1.sym.431c6c06-e77e-44d9-a42c-721ab4612e9e%3Aamzn1.sym.431c6c06-e77e-44d9-a42c-721ab4612e9e&crid=1RQ2NH9S5T9H6&cv_ct_cx=1440p%2B240hz%2Bmonitor&keywords=1440p%2B240hz%2Bmonitor&pd_rd_i=B0CC911GK6&pd_rd_r=30022e43-a13d-4320-96f0-d6d602e99045&pd_rd_w=zC7Ng&pd_rd_wg=bYFRF&pf_rd_p=431c6c06-e77e-44d9-a42c-721ab4612e9e&pf_rd_r=ZHC1AVEWCJC8Y6HJKJQ6&qid=1700774101&sbo=RZvfv%2F%2FHxDF%2BO5021pAnSA%3D%3D&sprefix=1440p%2B240hz%2Caps%2C96&sr=1-2-ad3222ed-9545-4dc8-8dd8-6b2cb5278509-spons&ufe=app_do%3Aamzn1.fos.23648568-4ba5-49f2-9aa6-31ae75f1e9cd&sp_csd=d2lkZ2V0TmFtZT1zcF9zZWFyY2hfdGhlbWF0aWM&th=1

https://www.amazon.co.uk/HP-Gaming-Monitor-FreeSync2-Black/dp/B07SCX1JG2/ref=sr_1_9?crid=1RQ2NH9S5T9H6&keywords=1440p+240hz+monitor&qid=1700774101&sprefix=1440p+240hz%2Caps%2C96&sr=8-9&ufe=app_do%3Aamzn1.fos.23648568-4ba5-49f2-9aa6-31ae75f1e9cd

https://www.amazon.co.uk/AOC-C27G2ZU-BK-Inches-Monitor/dp/B08897N6HJ/ref=sr_1_14?crid=1RQ2NH9S5T9H6&keywords=1440p+240hz+monitor&qid=1700774101&sprefix=1440p+240hz%2Caps%2C96&sr=8-14&ufe=app_do%3Aamzn1.fos.23648568-4ba5-49f2-9aa6-31ae75f1e9cd"
XpW1DrK9,il2.hpp,TylerBubba,C++,Thursday 23rd of November 2023 02:56:55 PM CDT,"#pragma once

#include <string>

#include ""./importer.hpp""

#define CREATE_TYPE( name, args ) using il2cpp_##name = args; inline il2cpp_##name name;
#define ASSIGN_TYPE( name ) name = TYPE( L""GameAssembly.dll"", il2cpp_##name );

#define FIELD( klass, name ) static std::uintptr_t name = il2cpp_lib::field( klass, #name, true );
#define TYPE_OBJECT( ns, name ) il2cpp_lib::type_object( ns, name )
#define ICALL( fn_name, name, args ) static auto fn_name = reinterpret_cast< args >( il2cpp_lib::resolve_icall( name ) );

#define METHOD( fn_name, name, arg_count, arg_name, selected_arg, args ) \
	static auto fn_name = reinterpret_cast< args >( *reinterpret_cast< std::uintptr_t* >( il2cpp_lib::method( name, arg_count, arg_name, selected_arg ) ) )

#define DECLARE_MEMBER( type, klass, name ) type & name( ) { FIELD( klass, ##name ) return *reinterpret_cast< type* >( this + name ); }

namespace il2cpp_lib {
	struct sanitized_method_t {
		std::string ns, kl, mt;
	};

	CREATE_TYPE(domain_get, std::uintptr_t(*)());
	CREATE_TYPE(class_get_methods, std::uintptr_t(*)(std::uintptr_t, std::uintptr_t*));
	CREATE_TYPE(method_get_param_count, int (*)(std::uintptr_t));
	CREATE_TYPE(assembly_get_image, std::uintptr_t(*)(std::uintptr_t));
	CREATE_TYPE(domain_get_assemblies, std::uintptr_t* (*)(void* domain, std::uintptr_t* size));
	CREATE_TYPE(object_new, std::uintptr_t(*)(std::uintptr_t));
	CREATE_TYPE(class_from_name, std::uintptr_t(*)(std::uintptr_t, const char*, const char*));
	CREATE_TYPE(resolve_icall, std::uintptr_t(*)(const char*));
	CREATE_TYPE(field_static_get_value, std::uintptr_t(*)(std::uintptr_t, std::uintptr_t*));
	CREATE_TYPE(class_get_fields, std::uintptr_t(*)(std::uintptr_t, std::uintptr_t*));
	CREATE_TYPE(field_get_offset, std::uintptr_t(*)(std::uintptr_t));
	CREATE_TYPE(string_new_wrapper, std::uintptr_t(*)(const char*));
	CREATE_TYPE(class_get_type, std::uintptr_t(*)(std::uintptr_t));
	CREATE_TYPE(type_get_object, std::uintptr_t(*)(std::uintptr_t));
	CREATE_TYPE(method_get_return_type, const char* (*)(std::uintptr_t));

	inline void init() {
		ASSIGN_TYPE(domain_get);
		ASSIGN_TYPE(class_get_methods);
		ASSIGN_TYPE(method_get_param_count);
		ASSIGN_TYPE(assembly_get_image);
		ASSIGN_TYPE(domain_get_assemblies);
		ASSIGN_TYPE(object_new);
		ASSIGN_TYPE(class_from_name);
		ASSIGN_TYPE(resolve_icall);
		ASSIGN_TYPE(field_static_get_value);
		ASSIGN_TYPE(class_get_fields);
		ASSIGN_TYPE(field_get_offset);
		ASSIGN_TYPE(string_new_wrapper);
		ASSIGN_TYPE(class_get_type);
		ASSIGN_TYPE(type_get_object);
		ASSIGN_TYPE(method_get_return_type);
	}

	inline auto find_class(const char* name, const char* name_space = """") -> const std::uintptr_t {

		const auto domain = domain_get();

		std::uintptr_t assembly_count{ 0 };
		std::uintptr_t* assemblies;
		assemblies = domain_get_assemblies((void*)domain, &assembly_count);

		for (size_t idx{ 0 }; idx < assembly_count; idx++) {
			const auto img = assembly_get_image(assemblies[idx]);
			const auto kl = class_from_name(img, name_space, name);
			if (!kl)
				continue;

			return kl;
		}

		return 0;
	}

	inline auto type_object(const char* name_space, const char* name) -> const uintptr_t
	{
		auto klass = find_class(name, name_space);
		return type_get_object(class_get_type(klass));
	}

	// im sorry this is messy but its a lot cleaner in the end.
	inline auto sanitize_method_name(const std::string name) -> sanitized_method_t {
		std::string ns, kl, method_name;

		if (auto ns_break = name.find(""::""))
			ns = name.substr(0, ns_break);

		if (name.find(""::"") == std::string::npos)
			ns = """";

		if (name.find(""::"")) {
			kl = name.substr(name.find(""::"", 2) + 2);
			kl = kl.substr(0, kl.find(""."", 0));
		}

		if (name.find(""::"") == std::string::npos)
			kl = name.substr(0, name.find(""."", 0));

		method_name = name.substr(name.find(""."", 0) + 1);

		if (method_name.find(""()""))
			method_name.erase(method_name.find(""()""), 2);

		return { ns, kl, method_name };
	}

	inline auto method(const std::string name, int argument_number = -1, const char* arg_name = """", int selected_argument = -1) -> const std::uintptr_t {
		std::uintptr_t iter{};

		const auto st = sanitize_method_name(name);
		const auto klass = find_class(st.kl.c_str(), st.ns.c_str());

		while (auto method = class_get_methods(klass, &iter)) {

			const auto fn_name = *reinterpret_cast<const char**>(method + 0x10);

			if (utl::crt::string::strcmp(fn_name, st.mt.c_str())) {
				auto method_count = method_get_param_count(method);
				if (argument_number >= 0 && method_count != argument_number)
					continue;

				if (selected_argument >= 0 && arg_name) {
					auto args = *reinterpret_cast<std::uintptr_t*>(method + 0x28);

					if (selected_argument > method_count)
						continue;

					char* argname;

					if (method_count > 0)
						argname = *reinterpret_cast<char**>(args + (selected_argument - 1) * 0x18);
					else
						argname = (char*)(""-"");

					if (!argname || !utl::crt::string::strcmp(argname, arg_name))
						continue;
				}

				return method;
			}
		}

		return {};
	}

	inline auto field_internal(std::uintptr_t klass, const char* field_name, bool offset = true) -> const uintptr_t {
		auto iterator = std::uintptr_t();

		while (auto il2cpp_field = class_get_fields(klass, &iterator)) {

			const auto name = reinterpret_cast<const char*>(*reinterpret_cast<std::uintptr_t*>(il2cpp_field));
			if (!name) {
				break;
			}

			if (!utl::crt::string::strcmp(name, field_name)) {
				continue;
			}

			if (!offset) {
				return il2cpp_field;
			}

			return field_get_offset(il2cpp_field);
		}
		return 0;
	}

	inline auto field(const char* kl, const char* name, bool offset = true) -> const std::uintptr_t {

		const auto klass = find_class(kl);

		if (offset) {
			return field_internal(klass, name);
		}

		const auto _field = field_internal(klass, name, false);

		auto ret = std::uintptr_t();
		field_static_get_value(_field, &ret);
		return ret;
	}

};"
nkMuFqrA,MatchDocument,Alex_St,C++,Thursday 23rd of November 2023 02:38:01 PM CDT,"std::tuple<std::vector<std::string>, DocumentStatus> MatchDocument(
        const std::string& raw_query, 
        int document_id) const
    {
        const Query parced_query = ParseQuery(raw_query);

        std::set<std::string> temp_matched_words_storage;

        for(const auto& plus_word : parced_query.plus_words)
        {
            //если нашли плюс-слово из запроса в базе документов
            if(word_to_document_freqs_.count(plus_word)) 
            {
    
                //проходимся по всем номерам документов, в которых данное слово есть
                for(const auto& [doc_number, TF] : word_to_document_freqs_.at(plus_word))
                {
                    if(doc_number==document_id)
                    {
                        temp_matched_words_storage.insert(plus_word);
                    }
                }
            }
        }

        //избавляемся от документов, имеющих в своем составе минус-слова
        for(const auto& minus_word : parced_query.minus_words) 
        {
            //если заданное минус-слово есть в базе слов
            if(temp_matched_words_storage.count(minus_word)) 
            {
                return {{}, document_status_.at(document_id)};
            }
        }

        std::vector<std::string> temp_vect_result(temp_matched_words_storage.begin(), temp_matched_words_storage.end());
        std::sort(temp_vect_result.begin(), temp_vect_result.end());

        return {temp_vect_result, document_status_.at(document_id)};
    }"
XKRJd67J,Nigerian scammers [23-11-2/2023],bombaires,AIMMS,Thursday 23rd of November 2023 02:00:05 PM CDT,"<a href=""mailto:jeffmarks938@gmail.com"">jeffmarks938@gmail.com</a>
<a href=""mailto:jeff.m.a.r.k.s93.8@gmail.com"">jeff.m.a.r.k.s93.8@gmail.com</a>
<a href=""mailto:je.f.f.m.a.rks9.3.8@gmail.com"">je.f.f.m.a.rks9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.f.ma.rk.s.9.38@gmail.com"">j.e.f.f.ma.rk.s.9.38@gmail.com</a>
<a href=""mailto:jef.f.ma.rk.s9.3.8@gmail.com"">jef.f.ma.rk.s9.3.8@gmail.com</a>
<a href=""mailto:jeff.ma.r.ks9.3.8@gmail.com"">jeff.ma.r.ks9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.f.ma.rks.9.38@gmail.com"">j.e.f.f.ma.rks.9.38@gmail.com</a>
<a href=""mailto:je.f.f.m.ar.ks938@gmail.com"">je.f.f.m.ar.ks938@gmail.com</a>
<a href=""mailto:jef.f.m.ark.s.938@gmail.com"">jef.f.m.ark.s.938@gmail.com</a>
<a href=""mailto:je.ffmar.ks.93.8@gmail.com"">je.ffmar.ks.93.8@gmail.com</a>
<a href=""mailto:j.ef.fma.rks.9.38@gmail.com"">j.ef.fma.rks.9.38@gmail.com</a>
<a href=""mailto:j.e.f.f.ma.rk.s93.8@gmail.com"">j.e.f.f.ma.rk.s93.8@gmail.com</a>
<a href=""mailto:je.f.f.m.ar.k.s.93.8@gmail.com"">je.f.f.m.ar.k.s.93.8@gmail.com</a>
<a href=""mailto:j.e.ff.ma.rk.s.938@gmail.com"">j.e.ff.ma.rk.s.938@gmail.com</a>
<a href=""mailto:j.ef.f.marks.938@gmail.com"">j.ef.f.marks.938@gmail.com</a>
<a href=""mailto:je.ff.ma.r.ks.9.38@gmail.com"">je.ff.ma.r.ks.9.38@gmail.com</a>
<a href=""mailto:j.ef.fma.rks93.8@gmail.com"">j.ef.fma.rks93.8@gmail.com</a>
<a href=""mailto:jef.f.m.a.rks.9.3.8@gmail.com"">jef.f.m.a.rks.9.3.8@gmail.com</a>
<a href=""mailto:j.e.ff.ma.rks.93.8@gmail.com"">j.e.ff.ma.rks.93.8@gmail.com</a>
<a href=""mailto:j.e.f.f.m.a.rk.s.9.38@gmail.com"">j.e.f.f.m.a.rk.s.9.38@gmail.com</a>
<a href=""mailto:je.f.f.m.a.rks.93.8@gmail.com"">je.f.f.m.a.rks.93.8@gmail.com</a>
<a href=""mailto:je.f.fma.r.ks.9.38@gmail.com"">je.f.fma.r.ks.9.38@gmail.com</a>
<a href=""mailto:j.e.ffm.ar.ks9.3.8@gmail.com"">j.e.ffm.ar.ks9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.f.ma.rks938@gmail.com"">j.e.f.f.ma.rks938@gmail.com</a>
<a href=""mailto:j.e.ff.mar.ks93.8@gmail.com"">j.e.ff.mar.ks93.8@gmail.com</a>
<a href=""mailto:je.ffm.a.r.ks9.38@gmail.com"">je.ffm.a.r.ks9.38@gmail.com</a>
<a href=""mailto:jef.fmar.ks938@gmail.com"">jef.fmar.ks938@gmail.com</a>
<a href=""mailto:jeff.ma.r.k.s9.38@gmail.com"">jeff.ma.r.k.s9.38@gmail.com</a>
<a href=""mailto:j.e.ffma.rk.s9.38@gmail.com"">j.e.ffma.rk.s9.38@gmail.com</a>
<a href=""mailto:je.ff.mark.s.93.8@gmail.com"">je.ff.mark.s.93.8@gmail.com</a>
<a href=""mailto:je.ff.mark.s938@gmail.com"">je.ff.mark.s938@gmail.com</a>
<a href=""mailto:je.f.fmarks9.38@gmail.com"">je.f.fmarks9.38@gmail.com</a>
<a href=""mailto:je.ffm.ark.s9.3.8@gmail.com"">je.ffm.ark.s9.3.8@gmail.com</a>
<a href=""mailto:jeff.m.a.r.ks.938@gmail.com"">jeff.m.a.r.ks.938@gmail.com</a>
<a href=""mailto:jeff.marks9.3.8@gmail.com"">jeff.marks9.3.8@gmail.com</a>
<a href=""mailto:j.e.ffm.arks93.8@gmail.com"">j.e.ffm.arks93.8@gmail.com</a>
<a href=""mailto:je.ffm.a.r.k.s9.3.8@gmail.com"">je.ffm.a.r.k.s9.3.8@gmail.com</a>
<a href=""mailto:jeffm.ar.ks.938@gmail.com"">jeffm.ar.ks.938@gmail.com</a>
<a href=""mailto:jef.f.marks9.38@gmail.com"">jef.f.marks9.38@gmail.com</a>
<a href=""mailto:j.effma.rks93.8@gmail.com"">j.effma.rks93.8@gmail.com</a>
<a href=""mailto:jeff.mar.ks93.8@gmail.com"">jeff.mar.ks93.8@gmail.com</a>
<a href=""mailto:j.ef.fm.a.r.ks9.3.8@gmail.com"">j.ef.fm.a.r.ks9.3.8@gmail.com</a>
<a href=""mailto:j.ef.f.m.ark.s.938@gmail.com"">j.ef.f.m.ark.s.938@gmail.com</a>
<a href=""mailto:jef.fma.rk.s.93.8@gmail.com"">jef.fma.rk.s.93.8@gmail.com</a>
<a href=""mailto:je.ff.m.ar.ks.9.38@gmail.com"">je.ff.m.ar.ks.9.38@gmail.com</a>
<a href=""mailto:jef.f.ma.r.ks9.38@gmail.com"">jef.f.ma.r.ks9.38@gmail.com</a>
<a href=""mailto:j.e.ff.m.ar.ks9.3.8@gmail.com"">j.e.ff.m.ar.ks9.3.8@gmail.com</a>
<a href=""mailto:j.e.ff.m.arks9.38@gmail.com"">j.e.ff.m.arks9.38@gmail.com</a>
<a href=""mailto:j.e.ffm.a.r.k.s9.3.8@gmail.com"">j.e.ffm.a.r.k.s9.3.8@gmail.com</a>
<a href=""mailto:j.eff.marks93.8@gmail.com"">j.eff.marks93.8@gmail.com</a>
<a href=""mailto:je.ffmarks.9.3.8@gmail.com"">je.ffmarks.9.3.8@gmail.com</a>
<a href=""mailto:jef.f.m.ark.s.9.38@gmail.com"">jef.f.m.ark.s.9.38@gmail.com</a>
<a href=""mailto:je.ff.m.a.rks.93.8@gmail.com"">je.ff.m.a.rks.93.8@gmail.com</a>
<a href=""mailto:j.effma.r.k.s.9.3.8@gmail.com"">j.effma.r.k.s.9.3.8@gmail.com</a>
<a href=""mailto:jeffm.ar.ks9.38@gmail.com"">jeffm.ar.ks9.38@gmail.com</a>
<a href=""mailto:j.effma.r.k.s938@gmail.com"">j.effma.r.k.s938@gmail.com</a>
<a href=""mailto:jef.fmark.s93.8@gmail.com"">jef.fmark.s93.8@gmail.com</a>
<a href=""mailto:je.f.f.m.a.rk.s938@gmail.com"">je.f.f.m.a.rk.s938@gmail.com</a>
<a href=""mailto:j.e.f.fmark.s9.3.8@gmail.com"">j.e.f.fmark.s9.3.8@gmail.com</a>
<a href=""mailto:jeff.ma.r.k.s938@gmail.com"">jeff.ma.r.k.s938@gmail.com</a>
<a href=""mailto:j.e.ff.ma.rk.s.93.8@gmail.com"">j.e.ff.ma.rk.s.93.8@gmail.com</a>
<a href=""mailto:j.e.f.f.m.a.r.k.s.9.38@gmail.com"">j.e.f.f.m.a.r.k.s.9.38@gmail.com</a>
<a href=""mailto:j.e.ff.mar.k.s938@gmail.com"">j.e.ff.mar.k.s938@gmail.com</a>
<a href=""mailto:j.e.ffmarks9.3.8@gmail.com"">j.e.ffmarks9.3.8@gmail.com</a>
<a href=""mailto:j.ef.fm.ark.s.9.3.8@gmail.com"">j.ef.fm.ark.s.9.3.8@gmail.com</a>
<a href=""mailto:je.ffm.a.r.ks.9.3.8@gmail.com"">je.ffm.a.r.ks.9.3.8@gmail.com</a>
<a href=""mailto:j.e.ffm.ark.s.93.8@gmail.com"">j.e.ffm.ark.s.93.8@gmail.com</a>
<a href=""mailto:je.ff.ma.r.k.s.9.3.8@gmail.com"">je.ff.ma.r.k.s.9.3.8@gmail.com</a>
<a href=""mailto:jef.f.m.ar.k.s.9.38@gmail.com"">jef.f.m.ar.k.s.9.38@gmail.com</a>
<a href=""mailto:j.ef.f.m.ar.k.s93.8@gmail.com"">j.ef.f.m.ar.k.s93.8@gmail.com</a>
<a href=""mailto:j.ef.fma.rks.9.3.8@gmail.com"">j.ef.fma.rks.9.3.8@gmail.com</a>
<a href=""mailto:je.ff.ma.r.ks.93.8@gmail.com"">je.ff.ma.r.ks.93.8@gmail.com</a>
<a href=""mailto:je.f.f.m.arks.9.38@gmail.com"">je.f.f.m.arks.9.38@gmail.com</a>
<a href=""mailto:jeffm.a.rk.s93.8@gmail.com"">jeffm.a.rk.s93.8@gmail.com</a>
<a href=""mailto:j.e.f.fm.a.r.ks9.38@gmail.com"">j.e.f.fm.a.r.ks9.38@gmail.com</a>
<a href=""mailto:je.ffmar.k.s.93.8@gmail.com"">je.ffmar.k.s.93.8@gmail.com</a>
<a href=""mailto:j.e.ff.m.ark.s9.3.8@gmail.com"">j.e.ff.m.ark.s9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.fmarks938@gmail.com"">j.e.f.fmarks938@gmail.com</a>
<a href=""mailto:j.ef.fm.ar.k.s.9.3.8@gmail.com"">j.ef.fm.ar.k.s.9.3.8@gmail.com</a>
<a href=""mailto:j.eff.mar.ks938@gmail.com"">j.eff.mar.ks938@gmail.com</a>
<a href=""mailto:j.eff.m.a.r.k.s9.38@gmail.com"">j.eff.m.a.r.k.s9.38@gmail.com</a>
<a href=""mailto:j.e.f.fmark.s.938@gmail.com"">j.e.f.fmark.s.938@gmail.com</a>
<a href=""mailto:jef.f.ma.rk.s.93.8@gmail.com"">jef.f.ma.rk.s.93.8@gmail.com</a>
<a href=""mailto:j.e.f.f.marks.9.3.8@gmail.com"">j.e.f.f.marks.9.3.8@gmail.com</a>
<a href=""mailto:je.ffma.r.ks9.38@gmail.com"">je.ffma.r.ks9.38@gmail.com</a>
<a href=""mailto:jef.fm.ar.k.s.93.8@gmail.com"">jef.fm.ar.k.s.93.8@gmail.com</a>
<a href=""mailto:j.e.f.f.mar.k.s.93.8@gmail.com"">j.e.f.f.mar.k.s.93.8@gmail.com</a>
<a href=""mailto:j.ef.f.ma.r.k.s9.38@gmail.com"">j.ef.f.ma.r.k.s9.38@gmail.com</a>
<a href=""mailto:j.e.ff.m.ar.k.s.9.38@gmail.com"">j.e.ff.m.ar.k.s.9.38@gmail.com</a>
<a href=""mailto:jeff.mark.s.938@gmail.com"">jeff.mark.s.938@gmail.com</a>
<a href=""mailto:j.eff.mark.s.93.8@gmail.com"">j.eff.mark.s.93.8@gmail.com</a>
<a href=""mailto:je.ffm.a.rk.s.93.8@gmail.com"">je.ffm.a.rk.s.93.8@gmail.com</a>
<a href=""mailto:jef.fmar.ks.9.38@gmail.com"">jef.fmar.ks.9.38@gmail.com</a>
<a href=""mailto:je.f.fm.a.rk.s.938@gmail.com"">je.f.fm.a.rk.s.938@gmail.com</a>
<a href=""mailto:jeffm.arks9.3.8@gmail.com"">jeffm.arks9.3.8@gmail.com</a>
<a href=""mailto:je.f.fma.rk.s.9.38@gmail.com"">je.f.fma.rk.s.9.38@gmail.com</a>
<a href=""mailto:jeffmar.k.s938@gmail.com"">jeffmar.k.s938@gmail.com</a>
<a href=""mailto:jef.f.m.ar.k.s93.8@gmail.com"">jef.f.m.ar.k.s93.8@gmail.com</a>
<a href=""mailto:j.ef.fma.r.k.s9.3.8@gmail.com"">j.ef.fma.r.k.s9.3.8@gmail.com</a>
<a href=""mailto:jef.f.ma.rk.s9.38@gmail.com"">jef.f.ma.rk.s9.38@gmail.com</a>
<a href=""mailto:j.effmark.s.9.38@gmail.com"">j.effmark.s.9.38@gmail.com</a>
<a href=""mailto:je.ff.m.arks.9.38@gmail.com"">je.ff.m.arks.9.38@gmail.com</a>
<a href=""mailto:j.e.ffm.a.r.k.s93.8@gmail.com"">j.e.ffm.a.r.k.s93.8@gmail.com</a>
<a href=""mailto:jeffma.r.k.s9.38@gmail.com"">jeffma.r.k.s9.38@gmail.com</a>
<a href=""mailto:j.e.f.fm.a.rk.s93.8@gmail.com"">j.e.f.fm.a.rk.s93.8@gmail.com</a>
<a href=""mailto:j.ef.fm.ar.ks9.3.8@gmail.com"">j.ef.fm.ar.ks9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.fmarks9.38@gmail.com"">j.e.f.fmarks9.38@gmail.com</a>
<a href=""mailto:jeff.m.ark.s9.38@gmail.com"">jeff.m.ark.s9.38@gmail.com</a>
<a href=""mailto:j.e.ff.ma.rk.s93.8@gmail.com"">j.e.ff.ma.rk.s93.8@gmail.com</a>
<a href=""mailto:j.e.f.fm.ar.k.s.9.38@gmail.com"">j.e.f.fm.ar.k.s.9.38@gmail.com</a>
<a href=""mailto:jef.fm.a.rks938@gmail.com"">jef.fm.a.rks938@gmail.com</a>
<a href=""mailto:je.f.fm.a.rks9.3.8@gmail.com"">je.f.fm.a.rks9.3.8@gmail.com</a>
<a href=""mailto:j.ef.f.m.ark.s93.8@gmail.com"">j.ef.f.m.ark.s93.8@gmail.com</a>
<a href=""mailto:jeff.ma.rk.s93.8@gmail.com"">jeff.ma.rk.s93.8@gmail.com</a>
<a href=""mailto:je.ff.ma.rk.s9.38@gmail.com"">je.ff.ma.rk.s9.38@gmail.com</a>
<a href=""mailto:j.ef.f.m.a.rk.s.93.8@gmail.com"">j.ef.f.m.a.rk.s.93.8@gmail.com</a>
<a href=""mailto:j.e.f.f.m.ar.ks.938@gmail.com"">j.e.f.f.m.ar.ks.938@gmail.com</a>
<a href=""mailto:j.e.f.f.m.arks.9.38@gmail.com"">j.e.f.f.m.arks.9.38@gmail.com</a>
<a href=""mailto:j.ef.f.mar.ks938@gmail.com"">j.ef.f.mar.ks938@gmail.com</a>
<a href=""mailto:j.e.f.fmar.ks9.38@gmail.com"">j.e.f.fmar.ks9.38@gmail.com</a>
<a href=""mailto:jeff.m.a.rk.s.9.38@gmail.com"">jeff.m.a.rk.s.9.38@gmail.com</a>
<a href=""mailto:je.ffma.rks9.3.8@gmail.com"">je.ffma.rks9.3.8@gmail.com</a>
<a href=""mailto:j.e.ff.mar.ks.93.8@gmail.com"">j.e.ff.mar.ks.93.8@gmail.com</a>
<a href=""mailto:j.ef.fm.a.r.ks.9.38@gmail.com"">j.ef.fm.a.r.ks.9.38@gmail.com</a>
<a href=""mailto:j.e.ff.ma.r.ks.9.38@gmail.com"">j.e.ff.ma.r.ks.9.38@gmail.com</a>
<a href=""mailto:j.e.f.fma.r.ks9.3.8@gmail.com"">j.e.f.fma.r.ks9.3.8@gmail.com</a>
<a href=""mailto:j.ef.fmark.s.93.8@gmail.com"">j.ef.fmark.s.93.8@gmail.com</a>
<a href=""mailto:j.e.f.fm.a.r.k.s9.3.8@gmail.com"">j.e.f.fm.a.r.k.s9.3.8@gmail.com</a>
<a href=""mailto:jef.fm.ar.ks.93.8@gmail.com"">jef.fm.ar.ks.93.8@gmail.com</a>
<a href=""mailto:j.e.f.fm.arks938@gmail.com"">j.e.f.fm.arks938@gmail.com</a>
<a href=""mailto:jef.f.mark.s938@gmail.com"">jef.f.mark.s938@gmail.com</a>
<a href=""mailto:jeffma.rk.s9.38@gmail.com"">jeffma.rk.s9.38@gmail.com</a>
<a href=""mailto:jeff.ma.r.ks9.38@gmail.com"">jeff.ma.r.ks9.38@gmail.com</a>
<a href=""mailto:jef.f.m.a.r.k.s9.3.8@gmail.com"">jef.f.m.a.r.k.s9.3.8@gmail.com</a>
<a href=""mailto:je.ffmar.k.s9.3.8@gmail.com"">je.ffmar.k.s9.3.8@gmail.com</a>
<a href=""mailto:j.e.ff.ma.r.k.s.93.8@gmail.com"">j.e.ff.ma.r.k.s.93.8@gmail.com</a>
<a href=""mailto:je.f.fm.a.rks.9.38@gmail.com"">je.f.fm.a.rks.9.38@gmail.com</a>
<a href=""mailto:j.effm.ark.s.9.3.8@gmail.com"">j.effm.ark.s.9.3.8@gmail.com</a>
<a href=""mailto:j.e.ff.mar.k.s9.3.8@gmail.com"">j.e.ff.mar.k.s9.3.8@gmail.com</a>
<a href=""mailto:j.ef.f.m.a.r.k.s938@gmail.com"">j.ef.f.m.a.r.k.s938@gmail.com</a>
<a href=""mailto:jef.f.m.arks9.38@gmail.com"">jef.f.m.arks9.38@gmail.com</a>
<a href=""mailto:je.f.f.m.a.rk.s.9.3.8@gmail.com"">je.f.f.m.a.rk.s.9.3.8@gmail.com</a>
<a href=""mailto:je.f.fmark.s9.38@gmail.com"">je.f.fmark.s9.38@gmail.com</a>
<a href=""mailto:jeff.ma.r.k.s.93.8@gmail.com"">jeff.ma.r.k.s.93.8@gmail.com</a>
<a href=""mailto:j.ef.fma.r.k.s.938@gmail.com"">j.ef.fma.r.k.s.938@gmail.com</a>
<a href=""mailto:jeffm.ar.ks938@gmail.com"">jeffm.ar.ks938@gmail.com</a>
<a href=""mailto:j.e.ff.mark.s9.38@gmail.com"">j.e.ff.mark.s9.38@gmail.com</a>
<a href=""mailto:je.ff.ma.rks.9.38@gmail.com"">je.ff.ma.rks.9.38@gmail.com</a>
<a href=""mailto:j.ef.f.ma.rks.938@gmail.com"">j.ef.f.ma.rks.938@gmail.com</a>
<a href=""mailto:jeff.m.ar.ks938@gmail.com"">jeff.m.ar.ks938@gmail.com</a>
<a href=""mailto:jeff.m.ar.ks93.8@gmail.com"">jeff.m.ar.ks93.8@gmail.com</a>
<a href=""mailto:j.eff.m.a.rks93.8@gmail.com"">j.eff.m.a.rks93.8@gmail.com</a>
<a href=""mailto:jef.f.ma.rk.s.9.3.8@gmail.com"">jef.f.ma.rk.s.9.3.8@gmail.com</a>
<a href=""mailto:je.ff.m.ark.s9.3.8@gmail.com"">je.ff.m.ark.s9.3.8@gmail.com</a>
<a href=""mailto:jef.f.ma.r.ks938@gmail.com"">jef.f.ma.r.ks938@gmail.com</a>
<a href=""mailto:je.f.fm.a.r.k.s9.38@gmail.com"">je.f.fm.a.r.k.s9.38@gmail.com</a>
<a href=""mailto:j.e.f.f.marks93.8@gmail.com"">j.e.f.f.marks93.8@gmail.com</a>
<a href=""mailto:jeff.mar.ks.938@gmail.com"">jeff.mar.ks.938@gmail.com</a>
<a href=""mailto:je.ffm.a.rks.938@gmail.com"">je.ffm.a.rks.938@gmail.com</a>
<a href=""mailto:jef.fm.ark.s.938@gmail.com"">jef.fm.ark.s.938@gmail.com</a>
<a href=""mailto:j.e.f.f.m.arks.938@gmail.com"">j.e.f.f.m.arks.938@gmail.com</a>
<a href=""mailto:j.e.ff.m.arks938@gmail.com"">j.e.ff.m.arks938@gmail.com</a>
<a href=""mailto:je.ff.m.ar.ks.938@gmail.com"">je.ff.m.ar.ks.938@gmail.com</a>
<a href=""mailto:jef.fm.a.r.k.s.93.8@gmail.com"">jef.fm.a.r.k.s.93.8@gmail.com</a>
<a href=""mailto:jeffm.a.r.ks.93.8@gmail.com"">jeffm.a.r.ks.93.8@gmail.com</a>
<a href=""mailto:j.ef.fma.r.k.s938@gmail.com"">j.ef.fma.r.k.s938@gmail.com</a>
<a href=""mailto:j.eff.ma.rks.9.3.8@gmail.com"">j.eff.ma.rks.9.3.8@gmail.com</a>
<a href=""mailto:je.ffm.a.rks.9.38@gmail.com"">je.ffm.a.rks.9.38@gmail.com</a>
<a href=""mailto:j.effmar.k.s.9.38@gmail.com"">j.effmar.k.s.9.38@gmail.com</a>
<a href=""mailto:je.ff.marks.938@gmail.com"">je.ff.marks.938@gmail.com</a>
<a href=""mailto:j.eff.m.ark.s9.3.8@gmail.com"">j.eff.m.ark.s9.3.8@gmail.com</a>
<a href=""mailto:jef.fm.ar.ks93.8@gmail.com"">jef.fm.ar.ks93.8@gmail.com</a>
<a href=""mailto:jef.fm.ark.s.9.38@gmail.com"">jef.fm.ark.s.9.38@gmail.com</a>
<a href=""mailto:je.ff.m.ar.k.s9.38@gmail.com"">je.ff.m.ar.k.s9.38@gmail.com</a>
<a href=""mailto:je.f.f.ma.rks.938@gmail.com"">je.f.f.ma.rks.938@gmail.com</a>
<a href=""mailto:j.e.f.fm.a.rks9.38@gmail.com"">j.e.f.fm.a.rks9.38@gmail.com</a>
<a href=""mailto:jef.f.ma.r.ks9.3.8@gmail.com"">jef.f.ma.r.ks9.3.8@gmail.com</a>
<a href=""mailto:j.e.f.f.m.a.r.k.s.938@gmail.com"">j.e.f.f.m.a.r.k.s.938@gmail.com</a>
<a href=""mailto:je.ffm.a.r.k.s.9.38@gmail.com"">je.ffm.a.r.k.s.9.38@gmail.com</a>
<a href=""mailto:je.f.fma.rk.s.938@gmail.com"">je.f.fma.rk.s.938@gmail.com</a>
<a href=""mailto:jef.fmar.k.s9.3.8@gmail.com"">jef.fmar.k.s9.3.8@gmail.com</a>
<a href=""mailto:jef.f.ma.rks93.8@gmail.com"">jef.f.ma.rks93.8@gmail.com</a>
<a href=""mailto:je.ffmarks938@gmail.com"">je.ffmarks938@gmail.com</a>
<a href=""mailto:j.ef.fm.arks938@gmail.com"">j.ef.fm.arks938@gmail.com</a>
<a href=""mailto:jef.f.m.ark.s9.38@gmail.com"">jef.f.m.ark.s9.38@gmail.com</a>
<a href=""mailto:j.e.ff.m.ar.k.s9.3.8@gmail.com"">j.e.ff.m.ar.k.s9.3.8@gmail.com</a>
<a href=""mailto:je.ff.m.ark.s9.38@gmail.com"">je.ff.m.ark.s9.38@gmail.com</a>
<a href=""mailto:j.eff.ma.rks.9.38@gmail.com"">j.eff.ma.rks.9.38@gmail.com</a>
<a href=""mailto:jeff.m.ar.ks.938@gmail.com"">jeff.m.ar.ks.938@gmail.com</a>
<a href=""mailto:je.ffm.ar.ks9.38@gmail.com"">je.ffm.ar.ks9.38@gmail.com</a>
<a href=""mailto:je.f.f.mark.s.9.38@gmail.com"">je.f.f.mark.s.9.38@gmail.com</a>
<a href=""mailto:j.e.f.f.ma.rks.93.8@gmail.com"">j.e.f.f.ma.rks.93.8@gmail.com</a>
<a href=""mailto:je.ffm.a.r.ks.938@gmail.com"">je.ffm.a.r.ks.938@gmail.com</a>
<a href=""mailto:j.effm.ark.s938@gmail.com"">j.effm.ark.s938@gmail.com</a>
<a href=""mailto:jeffm.ar.k.s93.8@gmail.com"">jeffm.ar.k.s93.8@gmail.com</a>
<a href=""mailto:j.e.f.fmarks.9.38@gmail.com"">j.e.f.fmarks.9.38@gmail.com</a>
<a href=""mailto:jef.f.m.ar.k.s.938@gmail.com"">jef.f.m.ar.k.s.938@gmail.com</a>
<a href=""mailto:j.e.ffma.r.ks938@gmail.com"">j.e.ffma.r.ks938@gmail.com</a>
<a href=""mailto:je.f.f.m.a.r.ks9.3.8@gmail.com"">je.f.f.m.a.r.ks9.3.8@gmail.com</a>
<a href=""mailto:je.ffma.r.k.s938@gmail.com"">je.ffma.r.k.s938@gmail.com</a>
<a href=""mailto:jeffm.a.rks.9.38@gmail.com"">jeffm.a.rks.9.38@gmail.com</a>
<a href=""mailto:usacustomoffice03@gmail.com"">usacustomoffice03@gmail.com</a>
<a href=""mailto:usacu.stom.o.f.f.i.c.e.0.3@gmail.com"">usacu.stom.o.f.f.i.c.e.0.3@gmail.com</a>
<a href=""mailto:u.s.ac.us.tom.of.f.i.c.e.03@gmail.com"">u.s.ac.us.tom.of.f.i.c.e.03@gmail.com</a>
<a href=""mailto:usac.u.sto.mo.ff.ic.e0.3@gmail.com"">usac.u.sto.mo.ff.ic.e0.3@gmail.com</a>
<a href=""mailto:us.a.cu.s.to.mo.ffi.ce0.3@gmail.com"">us.a.cu.s.to.mo.ffi.ce0.3@gmail.com</a>
<a href=""mailto:u.s.a.cu.s.t.om.of.fic.e.0.3@gmail.com"">u.s.a.cu.s.t.om.of.fic.e.0.3@gmail.com</a>
<a href=""mailto:usac.us.t.o.m.o.f.f.i.ce0.3@gmail.com"">usac.us.t.o.m.o.f.f.i.ce0.3@gmail.com</a>
<a href=""mailto:u.sa.cus.t.om.of.fi.ce03@gmail.com"">u.sa.cus.t.om.of.fi.ce03@gmail.com</a>
<a href=""mailto:u.s.a.c.us.t.o.mo.f.f.ic.e0.3@gmail.com"">u.s.a.c.us.t.o.mo.f.f.ic.e0.3@gmail.com</a>
<a href=""mailto:usa.custo.m.o.ff.ice.03@gmail.com"">usa.custo.m.o.ff.ice.03@gmail.com</a>
<a href=""mailto:us.a.c.u.s.tomo.ffic.e.03@gmail.com"">us.a.c.u.s.tomo.ffic.e.03@gmail.com</a>
<a href=""mailto:u.s.a.cu.s.tomo.f.fice.03@gmail.com"">u.s.a.cu.s.tomo.f.fice.03@gmail.com</a>
<a href=""mailto:u.s.ac.us.t.omo.f.f.ic.e.03@gmail.com"">u.s.ac.us.t.omo.f.f.ic.e.03@gmail.com</a>
<a href=""mailto:us.a.c.us.tom.o.f.fice03@gmail.com"">us.a.c.us.tom.o.f.fice03@gmail.com</a>
<a href=""mailto:us.acus.t.o.mof.f.ic.e.0.3@gmail.com"">us.acus.t.o.mof.f.ic.e.0.3@gmail.com</a>
<a href=""mailto:usa.cus.tom.o.ffice03@gmail.com"">usa.cus.tom.o.ffice03@gmail.com</a>
<a href=""mailto:u.sacu.st.o.m.off.ic.e03@gmail.com"">u.sacu.st.o.m.off.ic.e03@gmail.com</a>
<a href=""mailto:u.sa.c.u.sto.mo.ff.ice03@gmail.com"">u.sa.c.u.sto.mo.ff.ice03@gmail.com</a>
<a href=""mailto:usa.cus.to.mo.ff.i.c.e03@gmail.com"">usa.cus.to.mo.ff.i.c.e03@gmail.com</a>
<a href=""mailto:u.s.ac.ust.omo.f.f.ic.e.03@gmail.com"">u.s.ac.ust.omo.f.f.ic.e.03@gmail.com</a>
<a href=""mailto:us.acu.s.to.m.of.fi.ce.03@gmail.com"">us.acu.s.to.m.of.fi.ce.03@gmail.com</a>
<a href=""mailto:u.sac.u.st.o.m.of.f.ice.03@gmail.com"">u.sac.u.st.o.m.of.f.ice.03@gmail.com</a>
<a href=""mailto:u.sa.c.u.stomo.f.fi.c.e0.3@gmail.com"">u.sa.c.u.stomo.f.fi.c.e0.3@gmail.com</a>
<a href=""mailto:u.sa.c.u.st.om.offic.e.03@gmail.com"">u.sa.c.u.st.om.offic.e.03@gmail.com</a>
<a href=""mailto:usa.cu.s.t.o.mo.ffi.ce.03@gmail.com"">usa.cu.s.t.o.mo.ffi.ce.03@gmail.com</a>
<a href=""mailto:u.s.ac.u.s.t.om.of.f.i.ce03@gmail.com"">u.s.ac.u.s.t.om.of.f.i.ce03@gmail.com</a>
<a href=""mailto:usacu.sto.m.o.ff.i.ce.0.3@gmail.com"">usacu.sto.m.o.ff.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.s.a.cu.st.om.of.f.ic.e0.3@gmail.com"">u.s.a.cu.st.om.of.f.ic.e0.3@gmail.com</a>
<a href=""mailto:usac.us.to.m.o.ffi.c.e03@gmail.com"">usac.us.to.m.o.ffi.c.e03@gmail.com</a>
<a href=""mailto:us.a.cu.stomo.ff.i.ce.0.3@gmail.com"">us.a.cu.stomo.ff.i.ce.0.3@gmail.com</a>
<a href=""mailto:usa.c.usto.moffice.0.3@gmail.com"">usa.c.usto.moffice.0.3@gmail.com</a>
<a href=""mailto:usacusto.m.o.ff.ic.e0.3@gmail.com"">usacusto.m.o.ff.ic.e0.3@gmail.com</a>
<a href=""mailto:us.a.c.u.st.o.mo.f.f.i.ce03@gmail.com"">us.a.c.u.st.o.mo.f.f.i.ce03@gmail.com</a>
<a href=""mailto:u.s.a.custo.mof.f.i.c.e0.3@gmail.com"">u.s.a.custo.mof.f.i.c.e0.3@gmail.com</a>
<a href=""mailto:usacu.st.omo.ffi.ce03@gmail.com"">usacu.st.omo.ffi.ce03@gmail.com</a>
<a href=""mailto:usa.c.ustom.off.i.c.e0.3@gmail.com"">usa.c.ustom.off.i.c.e0.3@gmail.com</a>
<a href=""mailto:u.sa.c.u.sto.moff.i.ce.0.3@gmail.com"">u.sa.c.u.sto.moff.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.sa.c.u.s.t.om.o.f.fic.e0.3@gmail.com"">u.sa.c.u.s.t.om.o.f.fic.e0.3@gmail.com</a>
<a href=""mailto:u.sa.cu.sto.mo.f.f.ice.0.3@gmail.com"">u.sa.cu.sto.mo.f.f.ice.0.3@gmail.com</a>
<a href=""mailto:us.a.c.us.tom.o.f.fice.0.3@gmail.com"">us.a.c.us.tom.o.f.fice.0.3@gmail.com</a>
<a href=""mailto:u.s.a.cust.om.of.f.i.ce.0.3@gmail.com"">u.s.a.cust.om.of.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.sacus.t.omo.f.f.i.ce0.3@gmail.com"">u.sacus.t.omo.f.f.i.ce0.3@gmail.com</a>
<a href=""mailto:us.ac.us.t.omof.f.i.c.e03@gmail.com"">us.ac.us.t.omof.f.i.c.e03@gmail.com</a>
<a href=""mailto:u.s.acu.s.t.om.o.f.f.ice03@gmail.com"">u.s.acu.s.t.om.o.f.f.ice03@gmail.com</a>
<a href=""mailto:u.sa.c.ust.om.of.fi.c.e03@gmail.com"">u.sa.c.ust.om.of.fi.c.e03@gmail.com</a>
<a href=""mailto:u.s.a.cu.sto.m.o.f.f.i.ce03@gmail.com"">u.s.a.cu.sto.m.o.f.f.i.ce03@gmail.com</a>
<a href=""mailto:us.a.cus.t.o.m.o.ff.ice03@gmail.com"">us.a.cus.t.o.m.o.ff.ice03@gmail.com</a>
<a href=""mailto:us.a.cus.t.o.m.o.f.fice.03@gmail.com"">us.a.cus.t.o.m.o.f.fice.03@gmail.com</a>
<a href=""mailto:u.sac.us.t.omo.f.f.i.ce0.3@gmail.com"">u.sac.us.t.omo.f.f.i.ce0.3@gmail.com</a>
<a href=""mailto:us.a.cu.sto.mo.f.f.i.ce.0.3@gmail.com"">us.a.cu.sto.mo.f.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.s.acu.st.o.m.off.i.c.e.0.3@gmail.com"">u.s.acu.st.o.m.off.i.c.e.0.3@gmail.com</a>
<a href=""mailto:u.sa.c.u.st.o.mo.ffic.e.03@gmail.com"">u.sa.c.u.st.o.mo.ffic.e.03@gmail.com</a>
<a href=""mailto:u.s.ac.us.to.m.o.ffic.e0.3@gmail.com"">u.s.ac.us.to.m.o.ffic.e0.3@gmail.com</a>
<a href=""mailto:usa.cu.sto.mof.fi.ce.03@gmail.com"">usa.cu.sto.mof.fi.ce.03@gmail.com</a>
<a href=""mailto:usacu.s.tom.of.f.i.c.e03@gmail.com"">usacu.s.tom.of.f.i.c.e03@gmail.com</a>
<a href=""mailto:usacus.t.om.o.ff.ic.e0.3@gmail.com"">usacus.t.om.o.ff.ic.e0.3@gmail.com</a>
<a href=""mailto:u.sacu.s.to.mo.ff.ic.e.03@gmail.com"">u.sacu.s.to.mo.ff.ic.e.03@gmail.com</a>
<a href=""mailto:u.s.a.cu.s.to.mo.f.fice0.3@gmail.com"">u.s.a.cu.s.to.mo.f.fice0.3@gmail.com</a>
<a href=""mailto:u.sacus.tom.of.f.ic.e.03@gmail.com"">u.sacus.tom.of.f.ic.e.03@gmail.com</a>
<a href=""mailto:usa.c.ust.omo.f.fice.0.3@gmail.com"">usa.c.ust.omo.f.fice.0.3@gmail.com</a>
<a href=""mailto:usacu.s.t.o.moff.ice.0.3@gmail.com"">usacu.s.t.o.moff.ice.0.3@gmail.com</a>
<a href=""mailto:u.sacu.s.to.mo.ff.i.ce03@gmail.com"">u.sacu.s.to.mo.ff.i.ce03@gmail.com</a>
<a href=""mailto:usac.us.to.m.of.f.i.ce.0.3@gmail.com"">usac.us.to.m.of.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.us.to.mof.fic.e.03@gmail.com"">u.s.a.c.us.to.mof.fic.e.03@gmail.com</a>
<a href=""mailto:us.a.c.u.stomof.fi.ce03@gmail.com"">us.a.c.u.stomof.fi.ce03@gmail.com</a>
<a href=""mailto:usac.ust.o.moff.ice0.3@gmail.com"">usac.ust.o.moff.ice0.3@gmail.com</a>
<a href=""mailto:u.s.acu.s.to.m.office.03@gmail.com"">u.s.acu.s.to.m.office.03@gmail.com</a>
<a href=""mailto:u.sac.ustomoff.ice03@gmail.com"">u.sac.ustomoff.ice03@gmail.com</a>
<a href=""mailto:us.acustomoff.ice0.3@gmail.com"">us.acustomoff.ice0.3@gmail.com</a>
<a href=""mailto:usac.u.sto.moffic.e0.3@gmail.com"">usac.u.sto.moffic.e0.3@gmail.com</a>
<a href=""mailto:u.s.ac.us.t.omo.f.f.ice.0.3@gmail.com"">u.s.ac.us.t.omo.f.f.ice.0.3@gmail.com</a>
<a href=""mailto:us.ac.ust.o.m.o.ff.ice03@gmail.com"">us.ac.ust.o.m.o.ff.ice03@gmail.com</a>
<a href=""mailto:us.a.cus.to.m.of.fi.ce0.3@gmail.com"">us.a.cus.to.m.of.fi.ce0.3@gmail.com</a>
<a href=""mailto:u.sac.ust.omof.f.i.c.e.0.3@gmail.com"">u.sac.ust.omof.f.i.c.e.0.3@gmail.com</a>
<a href=""mailto:us.acus.t.om.o.ffice.03@gmail.com"">us.acus.t.om.o.ffice.03@gmail.com</a>
<a href=""mailto:us.a.c.ust.omo.f.f.ic.e0.3@gmail.com"">us.a.c.ust.omo.f.f.ic.e0.3@gmail.com</a>
<a href=""mailto:us.ac.ust.o.m.off.ic.e.03@gmail.com"">us.ac.ust.o.m.off.ic.e.03@gmail.com</a>
<a href=""mailto:usa.cu.s.tom.o.f.f.ice.03@gmail.com"">usa.cu.s.tom.o.f.f.ice.03@gmail.com</a>
<a href=""mailto:us.acu.st.om.of.fi.c.e.03@gmail.com"">us.acu.st.om.of.fi.c.e.03@gmail.com</a>
<a href=""mailto:usa.c.u.s.tom.of.fi.ce03@gmail.com"">usa.c.u.s.tom.of.fi.ce03@gmail.com</a>
<a href=""mailto:u.sac.u.s.to.m.o.f.f.ice03@gmail.com"">u.sac.u.s.to.m.o.f.f.ice03@gmail.com</a>
<a href=""mailto:u.s.ac.us.t.o.moff.i.c.e0.3@gmail.com"">u.s.ac.us.t.o.moff.i.c.e0.3@gmail.com</a>
<a href=""mailto:usa.c.us.t.omo.f.f.i.c.e0.3@gmail.com"">usa.c.us.t.omo.f.f.i.c.e0.3@gmail.com</a>
<a href=""mailto:u.s.acus.tom.of.fice.03@gmail.com"">u.s.acus.tom.of.fice.03@gmail.com</a>
<a href=""mailto:u.sacu.s.to.m.o.f.fice03@gmail.com"">u.sacu.s.to.m.o.f.fice03@gmail.com</a>
<a href=""mailto:u.sac.ustomo.f.f.i.c.e.0.3@gmail.com"">u.sac.ustomo.f.f.i.c.e.0.3@gmail.com</a>
<a href=""mailto:us.ac.us.to.mo.ffi.c.e0.3@gmail.com"">us.ac.us.to.mo.ffi.c.e0.3@gmail.com</a>
<a href=""mailto:u.s.ac.ustomof.fi.ce03@gmail.com"">u.s.ac.ustomof.fi.ce03@gmail.com</a>
<a href=""mailto:us.a.cu.s.t.o.m.of.f.ic.e0.3@gmail.com"">us.a.cu.s.t.o.m.of.f.ic.e0.3@gmail.com</a>
<a href=""mailto:usa.cu.s.t.o.mof.f.ice.0.3@gmail.com"">usa.cu.s.t.o.mof.f.ice.0.3@gmail.com</a>
<a href=""mailto:usacu.st.om.off.ice03@gmail.com"">usacu.st.om.off.ice03@gmail.com</a>
<a href=""mailto:u.sa.cu.stom.off.ice03@gmail.com"">u.sa.cu.stom.off.ice03@gmail.com</a>
<a href=""mailto:u.sa.cus.to.m.o.f.f.ice.0.3@gmail.com"">u.sa.cus.to.m.o.f.f.ice.0.3@gmail.com</a>
<a href=""mailto:u.sacu.sto.mo.f.f.i.c.e0.3@gmail.com"">u.sacu.sto.mo.f.f.i.c.e0.3@gmail.com</a>
<a href=""mailto:u.sa.custo.m.of.fi.c.e03@gmail.com"">u.sa.custo.m.of.fi.c.e03@gmail.com</a>
<a href=""mailto:u.sa.c.u.st.om.of.f.ic.e.03@gmail.com"">u.sa.c.u.st.om.of.f.ic.e.03@gmail.com</a>
<a href=""mailto:us.ac.u.sto.mof.f.ic.e0.3@gmail.com"">us.ac.u.sto.mof.f.ic.e0.3@gmail.com</a>
<a href=""mailto:us.a.cu.stom.of.f.i.ce.0.3@gmail.com"">us.a.cu.stom.of.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.sac.u.s.t.o.moff.i.c.e03@gmail.com"">u.sac.u.s.t.o.moff.i.c.e03@gmail.com</a>
<a href=""mailto:u.sac.us.to.mo.f.fic.e03@gmail.com"">u.sac.us.to.mo.f.fic.e03@gmail.com</a>
<a href=""mailto:u.sa.c.u.s.t.omo.f.fi.c.e0.3@gmail.com"">u.sa.c.u.s.t.omo.f.fi.c.e0.3@gmail.com</a>
<a href=""mailto:usa.c.ust.o.mo.f.fice.03@gmail.com"">usa.c.ust.o.mo.f.fice.03@gmail.com</a>
<a href=""mailto:u.s.a.cus.tom.of.f.ice.0.3@gmail.com"">u.s.a.cus.tom.of.f.ice.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.us.tom.o.ff.i.c.e.03@gmail.com"">u.s.a.c.us.tom.o.ff.i.c.e.03@gmail.com</a>
<a href=""mailto:u.sac.u.stom.off.ice.0.3@gmail.com"">u.sac.u.stom.off.ice.0.3@gmail.com</a>
<a href=""mailto:usac.usto.mo.f.f.ice03@gmail.com"">usac.usto.mo.f.f.ice03@gmail.com</a>
<a href=""mailto:usacu.s.t.o.m.of.f.i.ce03@gmail.com"">usacu.s.t.o.m.of.f.i.ce03@gmail.com</a>
<a href=""mailto:us.a.c.us.tom.o.f.f.i.c.e.0.3@gmail.com"">us.a.c.us.tom.o.f.f.i.c.e.0.3@gmail.com</a>
<a href=""mailto:u.sac.u.st.om.of.fi.ce03@gmail.com"">u.sac.u.st.om.of.fi.ce03@gmail.com</a>
<a href=""mailto:u.s.acu.s.to.m.offi.c.e.03@gmail.com"">u.s.acu.s.to.m.offi.c.e.03@gmail.com</a>
<a href=""mailto:u.sacust.o.m.o.f.f.i.c.e.0.3@gmail.com"">u.sacust.o.m.o.f.f.i.c.e.0.3@gmail.com</a>
<a href=""mailto:u.s.ac.us.to.m.o.f.fi.c.e0.3@gmail.com"">u.s.ac.us.to.m.o.f.fi.c.e0.3@gmail.com</a>
<a href=""mailto:u.s.acustomof.fic.e.03@gmail.com"">u.s.acustomof.fic.e.03@gmail.com</a>
<a href=""mailto:u.s.a.c.u.s.to.m.o.f.fi.ce.03@gmail.com"">u.s.a.c.u.s.to.m.o.f.fi.ce.03@gmail.com</a>
<a href=""mailto:u.s.acustomo.f.fice0.3@gmail.com"">u.s.acustomo.f.fice0.3@gmail.com</a>
<a href=""mailto:u.s.acu.st.omoffi.c.e03@gmail.com"">u.s.acu.st.omoffi.c.e03@gmail.com</a>
<a href=""mailto:u.sac.ust.om.of.f.ic.e.03@gmail.com"">u.sac.ust.om.of.f.ic.e.03@gmail.com</a>
<a href=""mailto:u.s.a.cu.s.t.o.mo.ff.i.ce.03@gmail.com"">u.s.a.cu.s.t.o.mo.ff.i.ce.03@gmail.com</a>
<a href=""mailto:u.s.acus.t.o.mo.ff.ic.e.0.3@gmail.com"">u.s.acus.t.o.mo.ff.ic.e.0.3@gmail.com</a>
<a href=""mailto:usacus.tomof.fi.c.e03@gmail.com"">usacus.tomof.fi.c.e03@gmail.com</a>
<a href=""mailto:usa.cu.s.t.omof.fice0.3@gmail.com"">usa.cu.s.t.omof.fice0.3@gmail.com</a>
<a href=""mailto:us.a.c.u.s.t.o.mo.f.f.i.ce.0.3@gmail.com"">us.a.c.u.s.t.o.mo.f.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:us.ac.u.st.om.o.f.fi.ce.0.3@gmail.com"">us.ac.u.st.om.o.f.fi.ce.0.3@gmail.com</a>
<a href=""mailto:usacus.tom.offic.e0.3@gmail.com"">usacus.tom.offic.e0.3@gmail.com</a>
<a href=""mailto:u.sac.ust.om.o.ff.i.ce03@gmail.com"">u.sac.ust.om.o.ff.i.ce03@gmail.com</a>
<a href=""mailto:us.ac.u.s.t.o.m.offi.ce0.3@gmail.com"">us.ac.u.s.t.o.m.offi.ce0.3@gmail.com</a>
<a href=""mailto:usa.c.us.tom.o.f.f.i.ce03@gmail.com"">usa.c.us.tom.o.f.f.i.ce03@gmail.com</a>
<a href=""mailto:u.sac.u.stomoffic.e.03@gmail.com"">u.sac.u.stomoffic.e.03@gmail.com</a>
<a href=""mailto:us.a.c.u.s.t.om.of.fice.03@gmail.com"">us.a.c.u.s.t.om.of.fice.03@gmail.com</a>
<a href=""mailto:us.a.cus.t.om.o.ff.ice03@gmail.com"">us.a.cus.t.om.o.ff.ice03@gmail.com</a>
<a href=""mailto:u.s.a.c.u.s.tom.off.ice.0.3@gmail.com"">u.s.a.c.u.s.tom.off.ice.0.3@gmail.com</a>
<a href=""mailto:us.ac.usto.m.o.ffic.e.0.3@gmail.com"">us.ac.usto.m.o.ffic.e.0.3@gmail.com</a>
<a href=""mailto:us.a.cu.st.om.off.ic.e03@gmail.com"">us.a.cu.st.om.off.ic.e03@gmail.com</a>
<a href=""mailto:u.sa.c.u.st.o.moffi.c.e.0.3@gmail.com"">u.sa.c.u.st.o.moffi.c.e.0.3@gmail.com</a>
<a href=""mailto:u.sa.c.u.s.tomo.ffic.e.0.3@gmail.com"">u.sa.c.u.s.tomo.ffic.e.0.3@gmail.com</a>
<a href=""mailto:usac.us.tomo.f.f.i.ce03@gmail.com"">usac.us.tomo.f.f.i.ce03@gmail.com</a>
<a href=""mailto:u.sacu.sto.mo.ffi.ce.03@gmail.com"">u.sacu.sto.mo.ffi.ce.03@gmail.com</a>
<a href=""mailto:u.s.a.custom.o.f.fic.e0.3@gmail.com"">u.s.a.custom.o.f.fic.e0.3@gmail.com</a>
<a href=""mailto:us.acu.s.to.mo.ffi.c.e0.3@gmail.com"">us.acu.s.to.mo.ffi.c.e0.3@gmail.com</a>
<a href=""mailto:us.ac.u.sto.m.o.f.f.i.ce.0.3@gmail.com"">us.ac.u.sto.m.o.f.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.u.st.o.mof.fic.e.03@gmail.com"">u.s.a.c.u.st.o.mof.fic.e.03@gmail.com</a>
<a href=""mailto:u.s.acu.stomoffice03@gmail.com"">u.s.acu.stomoffice03@gmail.com</a>
<a href=""mailto:us.a.cus.to.mo.ffi.c.e03@gmail.com"">us.a.cus.to.mo.ffi.c.e03@gmail.com</a>
<a href=""mailto:us.ac.u.s.t.om.of.f.i.ce.03@gmail.com"">us.ac.u.s.t.om.of.f.i.ce.03@gmail.com</a>
<a href=""mailto:u.s.ac.ust.omoff.i.c.e03@gmail.com"">u.s.ac.ust.omoff.i.c.e03@gmail.com</a>
<a href=""mailto:us.ac.u.s.t.o.moff.ic.e.03@gmail.com"">us.ac.u.s.t.o.moff.ic.e.03@gmail.com</a>
<a href=""mailto:u.sac.u.st.o.m.of.fice.0.3@gmail.com"">u.sac.u.st.o.m.of.fice.0.3@gmail.com</a>
<a href=""mailto:u.s.ac.us.tom.of.f.ic.e03@gmail.com"">u.s.ac.us.tom.of.f.ic.e03@gmail.com</a>
<a href=""mailto:u.sa.cus.to.mof.fi.c.e03@gmail.com"">u.sa.cus.to.mof.fi.c.e03@gmail.com</a>
<a href=""mailto:usa.cu.s.to.mo.ffic.e03@gmail.com"">usa.cu.s.to.mo.ffic.e03@gmail.com</a>
<a href=""mailto:us.ac.u.s.to.mo.f.fic.e03@gmail.com"">us.ac.u.s.to.mo.f.fic.e03@gmail.com</a>
<a href=""mailto:u.s.ac.u.s.t.o.mof.f.ic.e0.3@gmail.com"">u.s.ac.u.s.t.o.mof.f.ic.e0.3@gmail.com</a>
<a href=""mailto:u.s.acu.s.tom.of.f.i.ce.0.3@gmail.com"">u.s.acu.s.tom.of.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:us.a.cus.tom.of.fi.c.e.0.3@gmail.com"">us.a.cus.tom.of.fi.c.e.0.3@gmail.com</a>
<a href=""mailto:usa.cust.omoff.ic.e.0.3@gmail.com"">usa.cust.omoff.ic.e.0.3@gmail.com</a>
<a href=""mailto:u.s.acu.stomo.f.f.ic.e03@gmail.com"">u.s.acu.stomo.f.f.ic.e03@gmail.com</a>
<a href=""mailto:u.sac.u.stomo.f.f.i.ce.0.3@gmail.com"">u.sac.u.stomo.f.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:usa.cust.omof.fice.0.3@gmail.com"">usa.cust.omof.fice.0.3@gmail.com</a>
<a href=""mailto:u.sa.c.us.tomo.f.f.ic.e0.3@gmail.com"">u.sa.c.us.tomo.f.f.ic.e0.3@gmail.com</a>
<a href=""mailto:u.s.acust.om.off.ic.e0.3@gmail.com"">u.s.acust.om.off.ic.e0.3@gmail.com</a>
<a href=""mailto:usac.us.to.moff.ic.e.03@gmail.com"">usac.us.to.moff.ic.e.03@gmail.com</a>
<a href=""mailto:us.ac.u.s.t.o.m.of.f.ic.e.03@gmail.com"">us.ac.u.s.t.o.m.of.f.ic.e.03@gmail.com</a>
<a href=""mailto:u.sac.us.tom.o.f.f.i.c.e.03@gmail.com"">u.sac.us.tom.o.f.f.i.c.e.03@gmail.com</a>
<a href=""mailto:us.acus.t.o.m.o.ffice03@gmail.com"">us.acus.t.o.m.o.ffice03@gmail.com</a>
<a href=""mailto:u.s.acust.om.of.fi.c.e03@gmail.com"">u.s.acust.om.of.fi.c.e03@gmail.com</a>
<a href=""mailto:u.s.ac.u.sto.moffi.ce03@gmail.com"">u.s.ac.u.sto.moffi.ce03@gmail.com</a>
<a href=""mailto:usacust.o.mo.ff.ic.e.03@gmail.com"">usacust.o.mo.ff.ic.e.03@gmail.com</a>
<a href=""mailto:usacu.s.t.o.mo.f.f.i.ce03@gmail.com"">usacu.s.t.o.mo.f.f.i.ce03@gmail.com</a>
<a href=""mailto:usa.cus.tom.o.f.f.ic.e.0.3@gmail.com"">usa.cus.tom.o.f.f.ic.e.0.3@gmail.com</a>
<a href=""mailto:u.s.ac.u.s.t.om.o.f.f.ic.e03@gmail.com"">u.s.ac.u.s.t.om.o.f.f.ic.e03@gmail.com</a>
<a href=""mailto:u.s.a.cust.o.m.o.f.f.ic.e0.3@gmail.com"">u.s.a.cust.o.m.o.f.f.ic.e0.3@gmail.com</a>
<a href=""mailto:usa.cu.s.tom.of.f.ic.e.03@gmail.com"">usa.cu.s.tom.of.f.ic.e.03@gmail.com</a>
<a href=""mailto:usacu.st.o.m.o.ffi.ce.0.3@gmail.com"">usacu.st.o.m.o.ffi.ce.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.us.t.o.mof.f.i.ce.0.3@gmail.com"">u.s.a.c.us.t.o.mof.f.i.ce.0.3@gmail.com</a>
<a href=""mailto:usac.us.tom.o.f.fi.ce03@gmail.com"">usac.us.tom.o.f.fi.ce03@gmail.com</a>
<a href=""mailto:us.acu.st.o.m.o.f.f.i.c.e03@gmail.com"">us.acu.st.o.m.o.f.f.i.c.e03@gmail.com</a>
<a href=""mailto:u.sa.cu.sto.m.offi.c.e.0.3@gmail.com"">u.sa.cu.sto.m.offi.c.e.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.u.stom.offic.e.03@gmail.com"">u.s.a.c.u.stom.offic.e.03@gmail.com</a>
<a href=""mailto:us.a.c.us.tom.of.f.ic.e.0.3@gmail.com"">us.a.c.us.tom.of.f.ic.e.0.3@gmail.com</a>
<a href=""mailto:u.s.a.c.us.to.moffi.ce03@gmail.com"">u.s.a.c.us.to.moffi.ce03@gmail.com</a>
<a href=""mailto:u.sa.c.u.s.to.m.offi.ce03@gmail.com"">u.sa.c.u.s.to.m.offi.ce03@gmail.com</a>
<a href=""mailto:usac.us.tom.of.fi.ce0.3@gmail.com"">usac.us.tom.of.fi.ce0.3@gmail.com</a>
<a href=""mailto:usa.cust.om.of.f.ic.e03@gmail.com"">usa.cust.om.of.f.ic.e03@gmail.com</a>
<a href=""mailto:usa.custo.m.of.fi.c.e0.3@gmail.com"">usa.custo.m.of.fi.c.e0.3@gmail.com</a>
<a href=""mailto:u.sa.cu.sto.mo.f.fice03@gmail.com"">u.sa.cu.sto.mo.f.fice03@gmail.com</a>
<a href=""mailto:usacu.s.to.m.of.f.ice03@gmail.com"">usacu.s.to.m.of.f.ice03@gmail.com</a>
<a href=""mailto:u.sa.cu.stomof.f.i.ce0.3@gmail.com"">u.sa.cu.stomof.f.i.ce0.3@gmail.com</a>
<a href=""mailto:usa.c.u.stom.o.ff.ic.e03@gmail.com"">usa.c.u.stom.o.ff.ic.e03@gmail.com</a>
<a href=""mailto:u.s.a.cust.om.o.f.fic.e03@gmail.com"">u.s.a.cust.om.o.f.fic.e03@gmail.com</a>
<a href=""mailto:u.s.a.cu.stomoffi.c.e.0.3@gmail.com"">u.s.a.cu.stomoffi.c.e.0.3@gmail.com</a>
<a href=""mailto:usa.cu.st.om.o.f.fice03@gmail.com"">usa.cu.st.om.o.f.fice03@gmail.com</a>
<a href=""mailto:u.sa.c.us.tomo.ff.i.ce03@gmail.com"">u.sa.c.us.tomo.ff.i.ce03@gmail.com</a>
<a href=""mailto:u.sac.us.to.mo.f.f.ice03@gmail.com"">u.sac.us.to.mo.f.f.ice03@gmail.com</a>
<a href=""mailto:us.acu.s.t.omoffic.e.03@gmail.com"">us.acu.s.t.omoffic.e.03@gmail.com</a>
<a href=""mailto:u.sa.cus.t.om.offic.e03@gmail.com"">u.sa.cus.t.om.offic.e03@gmail.com</a>
<a href=""mailto:u.sacu.s.to.m.off.ic.e.03@gmail.com"">u.sacu.s.to.m.off.ic.e.03@gmail.com</a>
<a href=""mailto:u.sa.c.ustom.of.f.i.c.e0.3@gmail.com"">u.sa.c.ustom.of.f.i.c.e0.3@gmail.com</a>
<a href=""mailto:u.sa.cu.st.om.o.ff.ice.0.3@gmail.com"">u.sa.cu.st.om.o.ff.ice.0.3@gmail.com</a>
<a href=""mailto:usa.c.u.st.o.mo.ffice03@gmail.com"">usa.c.u.st.o.mo.ffice03@gmail.com</a>
<a href=""mailto:usacust.o.mof.f.ic.e.03@gmail.com"">usacust.o.mof.f.ic.e.03@gmail.com</a>
<a href=""mailto:u.sa.customo.ff.i.c.e.0.3@gmail.com"">u.sa.customo.ff.i.c.e.0.3@gmail.com</a>
<a href=""mailto:unitscials@gmail.com"">unitscials@gmail.com</a>
<a href=""mailto:un.i.ts.ci.a.l.s@gmail.com"">un.i.ts.ci.a.l.s@gmail.com</a>
<a href=""mailto:un.it.s.cia.l.s@gmail.com"">un.it.s.cia.l.s@gmail.com</a>
<a href=""mailto:un.i.t.s.cia.l.s@gmail.com"">un.i.t.s.cia.l.s@gmail.com</a>
<a href=""mailto:un.i.tsci.a.ls@gmail.com"">un.i.tsci.a.ls@gmail.com</a>
<a href=""mailto:un.i.ts.ci.als@gmail.com"">un.i.ts.ci.als@gmail.com</a>
<a href=""mailto:un.it.sc.ials@gmail.com"">un.it.sc.ials@gmail.com</a>
<a href=""mailto:un.i.t.sc.i.a.ls@gmail.com"">un.i.t.sc.i.a.ls@gmail.com</a>
<a href=""mailto:u.ni.tsc.ial.s@gmail.com"">u.ni.tsc.ial.s@gmail.com</a>
<a href=""mailto:units.ci.a.ls@gmail.com"">units.ci.a.ls@gmail.com</a>
<a href=""mailto:u.n.it.s.c.ial.s@gmail.com"">u.n.it.s.c.ial.s@gmail.com</a>
<a href=""mailto:u.nit.s.ci.al.s@gmail.com"">u.nit.s.ci.al.s@gmail.com</a>
<a href=""mailto:u.n.i.t.sc.i.al.s@gmail.com"">u.n.i.t.sc.i.al.s@gmail.com</a>
<a href=""mailto:u.nitsci.als@gmail.com"">u.nitsci.als@gmail.com</a>
<a href=""mailto:u.ni.tsci.a.ls@gmail.com"">u.ni.tsci.a.ls@gmail.com</a>
<a href=""mailto:un.its.ci.a.l.s@gmail.com"">un.its.ci.a.l.s@gmail.com</a>
<a href=""mailto:u.n.itsc.i.a.ls@gmail.com"">u.n.itsc.i.a.ls@gmail.com</a>
<a href=""mailto:unit.s.c.i.a.ls@gmail.com"">unit.s.c.i.a.ls@gmail.com</a>
<a href=""mailto:units.c.i.al.s@gmail.com"">units.c.i.al.s@gmail.com</a>
<a href=""mailto:u.n.i.t.sc.i.a.ls@gmail.com"">u.n.i.t.sc.i.a.ls@gmail.com</a>
<a href=""mailto:un.i.t.s.cial.s@gmail.com"">un.i.t.s.cial.s@gmail.com</a>
<a href=""mailto:unitsc.ial.s@gmail.com"">unitsc.ial.s@gmail.com</a>
<a href=""mailto:un.it.sc.ial.s@gmail.com"">un.it.sc.ial.s@gmail.com</a>
<a href=""mailto:un.i.ts.c.i.al.s@gmail.com"">un.i.ts.c.i.al.s@gmail.com</a>
<a href=""mailto:unit.sci.a.ls@gmail.com"">unit.sci.a.ls@gmail.com</a>
<a href=""mailto:uni.ts.c.ial.s@gmail.com"">uni.ts.c.ial.s@gmail.com</a>
<a href=""mailto:u.ni.tsci.a.l.s@gmail.com"">u.ni.tsci.a.l.s@gmail.com</a>
<a href=""mailto:uni.tsc.ia.ls@gmail.com"">uni.tsc.ia.ls@gmail.com</a>
<a href=""mailto:unit.s.ci.a.ls@gmail.com"">unit.s.ci.a.ls@gmail.com</a>
<a href=""mailto:u.n.its.c.ials@gmail.com"">u.n.its.c.ials@gmail.com</a>
<a href=""mailto:u.n.i.ts.cials@gmail.com"">u.n.i.ts.cials@gmail.com</a>
<a href=""mailto:un.its.cials@gmail.com"">un.its.cials@gmail.com</a>
<a href=""mailto:u.n.it.s.c.ials@gmail.com"">u.n.it.s.c.ials@gmail.com</a>
<a href=""mailto:u.n.it.scial.s@gmail.com"">u.n.it.scial.s@gmail.com</a>
<a href=""mailto:un.i.tsc.ials@gmail.com"">un.i.tsc.ials@gmail.com</a>
<a href=""mailto:uni.ts.cials@gmail.com"">uni.ts.cials@gmail.com</a>
<a href=""mailto:u.nit.sc.i.a.l.s@gmail.com"">u.nit.sc.i.a.l.s@gmail.com</a>
<a href=""mailto:un.it.s.c.i.a.ls@gmail.com"">un.it.s.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.n.i.t.sci.a.ls@gmail.com"">u.n.i.t.sci.a.ls@gmail.com</a>
<a href=""mailto:units.ci.a.l.s@gmail.com"">units.ci.a.l.s@gmail.com</a>
<a href=""mailto:u.n.it.sc.i.a.ls@gmail.com"">u.n.it.sc.i.a.ls@gmail.com</a>
<a href=""mailto:unitsci.al.s@gmail.com"">unitsci.al.s@gmail.com</a>
<a href=""mailto:uni.t.sc.i.al.s@gmail.com"">uni.t.sc.i.al.s@gmail.com</a>
<a href=""mailto:u.nit.s.c.ial.s@gmail.com"">u.nit.s.c.ial.s@gmail.com</a>
<a href=""mailto:u.nits.cials@gmail.com"">u.nits.cials@gmail.com</a>
<a href=""mailto:u.nits.c.ia.l.s@gmail.com"">u.nits.c.ia.l.s@gmail.com</a>
<a href=""mailto:u.nit.s.c.ials@gmail.com"">u.nit.s.c.ials@gmail.com</a>
<a href=""mailto:un.it.scia.l.s@gmail.com"">un.it.scia.l.s@gmail.com</a>
<a href=""mailto:u.n.i.tscia.ls@gmail.com"">u.n.i.tscia.ls@gmail.com</a>
<a href=""mailto:unit.s.cials@gmail.com"">unit.s.cials@gmail.com</a>
<a href=""mailto:u.n.its.cials@gmail.com"">u.n.its.cials@gmail.com</a>
<a href=""mailto:u.n.it.sc.i.a.l.s@gmail.com"">u.n.it.sc.i.a.l.s@gmail.com</a>
<a href=""mailto:u.n.i.ts.c.i.als@gmail.com"">u.n.i.ts.c.i.als@gmail.com</a>
<a href=""mailto:u.nit.s.c.ia.ls@gmail.com"">u.nit.s.c.ia.ls@gmail.com</a>
<a href=""mailto:u.ni.ts.c.i.a.ls@gmail.com"">u.ni.ts.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.ni.ts.ci.als@gmail.com"">u.ni.ts.ci.als@gmail.com</a>
<a href=""mailto:un.i.ts.c.ia.l.s@gmail.com"">un.i.ts.c.ia.l.s@gmail.com</a>
<a href=""mailto:u.n.it.sc.ia.l.s@gmail.com"">u.n.it.sc.ia.l.s@gmail.com</a>
<a href=""mailto:u.n.its.ci.al.s@gmail.com"">u.n.its.ci.al.s@gmail.com</a>
<a href=""mailto:un.i.ts.cia.l.s@gmail.com"">un.i.ts.cia.l.s@gmail.com</a>
<a href=""mailto:u.n.it.s.c.i.a.l.s@gmail.com"">u.n.it.s.c.i.a.l.s@gmail.com</a>
<a href=""mailto:u.n.it.s.ci.als@gmail.com"">u.n.it.s.ci.als@gmail.com</a>
<a href=""mailto:un.i.t.sc.i.al.s@gmail.com"">un.i.t.sc.i.al.s@gmail.com</a>
<a href=""mailto:u.ni.t.sc.i.a.l.s@gmail.com"">u.ni.t.sc.i.a.l.s@gmail.com</a>
<a href=""mailto:u.n.it.sci.a.ls@gmail.com"">u.n.it.sci.a.ls@gmail.com</a>
<a href=""mailto:un.i.tsci.als@gmail.com"">un.i.tsci.als@gmail.com</a>
<a href=""mailto:u.n.it.sc.ial.s@gmail.com"">u.n.it.sc.ial.s@gmail.com</a>
<a href=""mailto:u.n.i.t.sci.a.l.s@gmail.com"">u.n.i.t.sci.a.l.s@gmail.com</a>
<a href=""mailto:unit.s.cia.l.s@gmail.com"">unit.s.cia.l.s@gmail.com</a>
<a href=""mailto:u.ni.t.sci.a.l.s@gmail.com"">u.ni.t.sci.a.l.s@gmail.com</a>
<a href=""mailto:u.ni.tscial.s@gmail.com"">u.ni.tscial.s@gmail.com</a>
<a href=""mailto:un.i.t.sc.ia.ls@gmail.com"">un.i.t.sc.ia.ls@gmail.com</a>
<a href=""mailto:u.n.its.ci.a.ls@gmail.com"">u.n.its.ci.a.ls@gmail.com</a>
<a href=""mailto:u.nit.s.ci.a.l.s@gmail.com"">u.nit.s.ci.a.l.s@gmail.com</a>
<a href=""mailto:unitsc.i.als@gmail.com"">unitsc.i.als@gmail.com</a>
<a href=""mailto:u.n.i.ts.ci.al.s@gmail.com"">u.n.i.ts.ci.al.s@gmail.com</a>
<a href=""mailto:unitsc.ia.l.s@gmail.com"">unitsc.ia.l.s@gmail.com</a>
<a href=""mailto:uni.ts.ci.a.l.s@gmail.com"">uni.ts.ci.a.l.s@gmail.com</a>
<a href=""mailto:u.ni.t.sc.ials@gmail.com"">u.ni.t.sc.ials@gmail.com</a>
<a href=""mailto:un.it.scial.s@gmail.com"">un.it.scial.s@gmail.com</a>
<a href=""mailto:u.ni.ts.ci.a.ls@gmail.com"">u.ni.ts.ci.a.ls@gmail.com</a>
<a href=""mailto:un.i.t.s.ci.a.l.s@gmail.com"">un.i.t.s.ci.a.l.s@gmail.com</a>
<a href=""mailto:u.nit.s.c.i.a.ls@gmail.com"">u.nit.s.c.i.a.ls@gmail.com</a>
<a href=""mailto:uni.ts.c.i.al.s@gmail.com"">uni.ts.c.i.al.s@gmail.com</a>
<a href=""mailto:u.ni.tsc.ia.ls@gmail.com"">u.ni.tsc.ia.ls@gmail.com</a>
<a href=""mailto:u.n.itsci.a.l.s@gmail.com"">u.n.itsci.a.l.s@gmail.com</a>
<a href=""mailto:u.ni.t.sc.i.a.ls@gmail.com"">u.ni.t.sc.i.a.ls@gmail.com</a>
<a href=""mailto:u.n.itsc.i.al.s@gmail.com"">u.n.itsc.i.al.s@gmail.com</a>
<a href=""mailto:un.i.tsc.ia.l.s@gmail.com"">un.i.tsc.ia.l.s@gmail.com</a>
<a href=""mailto:u.nit.s.cia.l.s@gmail.com"">u.nit.s.cia.l.s@gmail.com</a>
<a href=""mailto:u.n.it.s.c.i.a.ls@gmail.com"">u.n.it.s.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.nitsc.ial.s@gmail.com"">u.nitsc.ial.s@gmail.com</a>
<a href=""mailto:u.n.its.cial.s@gmail.com"">u.n.its.cial.s@gmail.com</a>
<a href=""mailto:un.i.ts.cials@gmail.com"">un.i.ts.cials@gmail.com</a>
<a href=""mailto:unit.s.c.i.als@gmail.com"">unit.s.c.i.als@gmail.com</a>
<a href=""mailto:u.nitscials@gmail.com"">u.nitscials@gmail.com</a>
<a href=""mailto:un.i.ts.ci.a.ls@gmail.com"">un.i.ts.ci.a.ls@gmail.com</a>
<a href=""mailto:u.nits.c.ials@gmail.com"">u.nits.c.ials@gmail.com</a>
<a href=""mailto:u.n.i.t.sc.ia.l.s@gmail.com"">u.n.i.t.sc.ia.l.s@gmail.com</a>
<a href=""mailto:u.n.it.s.c.i.al.s@gmail.com"">u.n.it.s.c.i.al.s@gmail.com</a>
<a href=""mailto:u.nitsci.a.ls@gmail.com"">u.nitsci.a.ls@gmail.com</a>
<a href=""mailto:uni.ts.c.ials@gmail.com"">uni.ts.c.ials@gmail.com</a>
<a href=""mailto:unit.s.c.ial.s@gmail.com"">unit.s.c.ial.s@gmail.com</a>
<a href=""mailto:un.it.sci.al.s@gmail.com"">un.it.sci.al.s@gmail.com</a>
<a href=""mailto:units.ci.al.s@gmail.com"">units.ci.al.s@gmail.com</a>
<a href=""mailto:un.i.ts.c.ia.ls@gmail.com"">un.i.ts.c.ia.ls@gmail.com</a>
<a href=""mailto:units.cia.l.s@gmail.com"">units.cia.l.s@gmail.com</a>
<a href=""mailto:uni.t.s.c.i.a.ls@gmail.com"">uni.t.s.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.ni.t.s.ci.als@gmail.com"">u.ni.t.s.ci.als@gmail.com</a>
<a href=""mailto:u.n.i.t.scials@gmail.com"">u.n.i.t.scials@gmail.com</a>
<a href=""mailto:un.i.tsc.i.al.s@gmail.com"">un.i.tsc.i.al.s@gmail.com</a>
<a href=""mailto:un.it.sci.als@gmail.com"">un.it.sci.als@gmail.com</a>
<a href=""mailto:uni.t.sc.ia.l.s@gmail.com"">uni.t.sc.ia.l.s@gmail.com</a>
<a href=""mailto:unitsci.a.l.s@gmail.com"">unitsci.a.l.s@gmail.com</a>
<a href=""mailto:u.n.its.c.ial.s@gmail.com"">u.n.its.c.ial.s@gmail.com</a>
<a href=""mailto:u.n.i.t.s.cia.ls@gmail.com"">u.n.i.t.s.cia.ls@gmail.com</a>
<a href=""mailto:u.nitsc.i.al.s@gmail.com"">u.nitsc.i.al.s@gmail.com</a>
<a href=""mailto:u.ni.tsc.ia.l.s@gmail.com"">u.ni.tsc.ia.l.s@gmail.com</a>
<a href=""mailto:uni.t.sc.i.a.ls@gmail.com"">uni.t.sc.i.a.ls@gmail.com</a>
<a href=""mailto:u.ni.t.s.ci.a.l.s@gmail.com"">u.ni.t.s.ci.a.l.s@gmail.com</a>
<a href=""mailto:un.itsc.i.als@gmail.com"">un.itsc.i.als@gmail.com</a>
<a href=""mailto:uni.t.sci.a.l.s@gmail.com"">uni.t.sci.a.l.s@gmail.com</a>
<a href=""mailto:un.itsci.al.s@gmail.com"">un.itsci.al.s@gmail.com</a>
<a href=""mailto:un.it.sc.i.a.ls@gmail.com"">un.it.sc.i.a.ls@gmail.com</a>
<a href=""mailto:un.it.s.ci.als@gmail.com"">un.it.s.ci.als@gmail.com</a>
<a href=""mailto:uni.tscials@gmail.com"">uni.tscials@gmail.com</a>
<a href=""mailto:u.ni.t.sc.i.als@gmail.com"">u.ni.t.sc.i.als@gmail.com</a>
<a href=""mailto:u.ni.t.s.c.i.a.l.s@gmail.com"">u.ni.t.s.c.i.a.l.s@gmail.com</a>
<a href=""mailto:un.it.sc.ia.ls@gmail.com"">un.it.sc.ia.ls@gmail.com</a>
<a href=""mailto:uni.t.s.cia.ls@gmail.com"">uni.t.s.cia.ls@gmail.com</a>
<a href=""mailto:u.nit.scia.ls@gmail.com"">u.nit.scia.ls@gmail.com</a>
<a href=""mailto:unit.s.cia.ls@gmail.com"">unit.s.cia.ls@gmail.com</a>
<a href=""mailto:uni.tsci.als@gmail.com"">uni.tsci.als@gmail.com</a>
<a href=""mailto:uni.ts.cia.ls@gmail.com"">uni.ts.cia.ls@gmail.com</a>
<a href=""mailto:units.ci.als@gmail.com"">units.ci.als@gmail.com</a>
<a href=""mailto:u.ni.t.sc.ia.ls@gmail.com"">u.ni.t.sc.ia.ls@gmail.com</a>
<a href=""mailto:uni.t.s.c.ia.ls@gmail.com"">uni.t.s.c.ia.ls@gmail.com</a>
<a href=""mailto:u.ni.t.scial.s@gmail.com"">u.ni.t.scial.s@gmail.com</a>
<a href=""mailto:units.c.i.a.l.s@gmail.com"">units.c.i.a.l.s@gmail.com</a>
<a href=""mailto:u.n.its.cia.l.s@gmail.com"">u.n.its.cia.l.s@gmail.com</a>
<a href=""mailto:u.n.i.t.scial.s@gmail.com"">u.n.i.t.scial.s@gmail.com</a>
<a href=""mailto:unit.sc.i.a.ls@gmail.com"">unit.sc.i.a.ls@gmail.com</a>
<a href=""mailto:u.n.it.s.ci.a.ls@gmail.com"">u.n.it.s.ci.a.ls@gmail.com</a>
<a href=""mailto:un.i.t.s.c.ials@gmail.com"">un.i.t.s.c.ials@gmail.com</a>
<a href=""mailto:u.n.i.ts.c.i.a.ls@gmail.com"">u.n.i.ts.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.ni.ts.cia.ls@gmail.com"">u.ni.ts.cia.ls@gmail.com</a>
<a href=""mailto:un.i.t.s.ci.al.s@gmail.com"">un.i.t.s.ci.al.s@gmail.com</a>
<a href=""mailto:u.nit.sc.ials@gmail.com"">u.nit.sc.ials@gmail.com</a>
<a href=""mailto:u.nits.c.i.a.ls@gmail.com"">u.nits.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.nits.c.i.als@gmail.com"">u.nits.c.i.als@gmail.com</a>
<a href=""mailto:u.n.i.t.sc.ial.s@gmail.com"">u.n.i.t.sc.ial.s@gmail.com</a>
<a href=""mailto:u.nits.ci.als@gmail.com"">u.nits.ci.als@gmail.com</a>
<a href=""mailto:uni.t.s.c.ials@gmail.com"">uni.t.s.c.ials@gmail.com</a>
<a href=""mailto:u.ni.t.s.cial.s@gmail.com"">u.ni.t.s.cial.s@gmail.com</a>
<a href=""mailto:u.n.i.t.s.c.ial.s@gmail.com"">u.n.i.t.s.c.ial.s@gmail.com</a>
<a href=""mailto:u.n.it.sc.ia.ls@gmail.com"">u.n.it.sc.ia.ls@gmail.com</a>
<a href=""mailto:units.c.ia.ls@gmail.com"">units.c.ia.ls@gmail.com</a>
<a href=""mailto:u.n.i.t.sci.als@gmail.com"">u.n.i.t.sci.als@gmail.com</a>
<a href=""mailto:un.its.c.ia.l.s@gmail.com"">un.its.c.ia.l.s@gmail.com</a>
<a href=""mailto:un.i.tsc.ia.ls@gmail.com"">un.i.tsc.ia.ls@gmail.com</a>
<a href=""mailto:uni.t.sci.al.s@gmail.com"">uni.t.sci.al.s@gmail.com</a>
<a href=""mailto:uni.ts.c.i.a.ls@gmail.com"">uni.ts.c.i.a.ls@gmail.com</a>
<a href=""mailto:u.nits.cial.s@gmail.com"">u.nits.cial.s@gmail.com</a>
<a href=""mailto:u.n.i.tsc.i.a.ls@gmail.com"">u.n.i.tsc.i.a.ls@gmail.com</a>
<a href=""mailto:unitsc.ia.ls@gmail.com"">unitsc.ia.ls@gmail.com</a>
<a href=""mailto:u.ni.tsc.i.a.l.s@gmail.com"">u.ni.tsc.i.a.l.s@gmail.com</a>
<a href=""mailto:u.nits.cia.l.s@gmail.com"">u.nits.cia.l.s@gmail.com</a>
<a href=""mailto:u.n.i.ts.cia.l.s@gmail.com"">u.n.i.ts.cia.l.s@gmail.com</a>
<a href=""mailto:unit.scial.s@gmail.com"">unit.scial.s@gmail.com</a>
<a href=""mailto:un.i.tsc.i.a.l.s@gmail.com"">un.i.tsc.i.a.l.s@gmail.com</a>
<a href=""mailto:un.it.sci.a.l.s@gmail.com"">un.it.sci.a.l.s@gmail.com</a>
<a href=""mailto:uni.t.sc.i.als@gmail.com"">uni.t.sc.i.als@gmail.com</a>
<a href=""mailto:un.its.c.i.al.s@gmail.com"">un.its.c.i.al.s@gmail.com</a>
<a href=""mailto:uni.ts.ci.als@gmail.com"">uni.ts.ci.als@gmail.com</a>
<a href=""mailto:u.n.i.tscials@gmail.com"">u.n.i.tscials@gmail.com</a>
<a href=""mailto:uni.t.s.cials@gmail.com"">uni.t.s.cials@gmail.com</a>
<a href=""mailto:u.nit.sc.ial.s@gmail.com"">u.nit.sc.ial.s@gmail.com</a>
<a href=""mailto:un.it.scia.ls@gmail.com"">un.it.scia.ls@gmail.com</a>
<a href=""mailto:u.nit.sc.ia.ls@gmail.com"">u.nit.sc.ia.ls@gmail.com</a>
<a href=""mailto:u.ni.tsc.i.a.ls@gmail.com"">u.ni.tsc.i.a.ls@gmail.com</a>
<a href=""mailto:u.n.itsc.i.als@gmail.com"">u.n.itsc.i.als@gmail.com</a>
<a href=""mailto:units.c.ia.l.s@gmail.com"">units.c.ia.l.s@gmail.com</a>
<a href=""mailto:un.it.s.c.i.als@gmail.com"">un.it.s.c.i.als@gmail.com</a>
<a href=""mailto:un.itsci.als@gmail.com"">un.itsci.als@gmail.com</a>
<a href=""mailto:u.n.it.s.c.ia.l.s@gmail.com"">u.n.it.s.c.ia.l.s@gmail.com</a>
<a href=""mailto:u.n.its.c.i.a.ls@gmail.com"">u.n.its.c.i.a.ls@gmail.com</a>
<a href=""mailto:un.i.ts.c.ial.s@gmail.com"">un.i.ts.c.ial.s@gmail.com</a>
<a href=""mailto:un.itsc.i.a.l.s@gmail.com"">un.itsc.i.a.l.s@gmail.com</a>
<a href=""mailto:u.n.i.t.s.c.i.al.s@gmail.com"">u.n.i.t.s.c.i.al.s@gmail.com</a>
<a href=""mailto:units.c.i.als@gmail.com"">units.c.i.als@gmail.com</a>
<a href=""mailto:u.nit.s.c.i.al.s@gmail.com"">u.nit.s.c.i.al.s@gmail.com</a>
<a href=""mailto:u.n.i.tsci.als@gmail.com"">u.n.i.tsci.als@gmail.com</a>
<a href=""mailto:u.nitsc.ia.l.s@gmail.com"">u.nitsc.ia.l.s@gmail.com</a>
<a href=""mailto:u.nitscia.ls@gmail.com"">u.nitscia.ls@gmail.com</a>
<a href=""mailto:un.i.tsci.a.l.s@gmail.com"">un.i.tsci.a.l.s@gmail.com</a>
<a href=""mailto:un.i.tscial.s@gmail.com"">un.i.tscial.s@gmail.com</a>
<a href=""mailto:u.n.i.ts.c.i.a.l.s@gmail.com"">u.n.i.ts.c.i.a.l.s@gmail.com</a>
<a href=""mailto:un.its.ci.a.ls@gmail.com"">un.its.ci.a.ls@gmail.com</a>
<a href=""mailto:u.n.i.tscial.s@gmail.com"">u.n.i.tscial.s@gmail.com</a>
<a href=""mailto:u.ni.t.s.c.i.al.s@gmail.com"">u.ni.t.s.c.i.al.s@gmail.com</a>
<a href=""mailto:u.ni.ts.c.i.als@gmail.com"">u.ni.ts.c.i.als@gmail.com</a>
<a href=""mailto:abubakarmuhd388@gmail.com"">abubakarmuhd388@gmail.com</a>
<a href=""mailto:sandylx2018@gmail.com"">sandylx2018@gmail.com</a>
<a href=""mailto:san.d.yl.x20.1.8@gmail.com"">san.d.yl.x20.1.8@gmail.com</a>
<a href=""mailto:s.and.yl.x2018@gmail.com"">s.and.yl.x2018@gmail.com</a>
<a href=""mailto:s.a.n.dy.l.x2018@gmail.com"">s.a.n.dy.l.x2018@gmail.com</a>
<a href=""mailto:sa.ndy.lx201.8@gmail.com"">sa.ndy.lx201.8@gmail.com</a>
<a href=""mailto:s.andylx.20.1.8@gmail.com"">s.andylx.20.1.8@gmail.com</a>
<a href=""mailto:sa.n.dylx.2018@gmail.com"">sa.n.dylx.2018@gmail.com</a>
<a href=""mailto:s.a.n.d.y.lx.20.1.8@gmail.com"">s.a.n.d.y.lx.20.1.8@gmail.com</a>
<a href=""mailto:sandy.l.x.2.0.1.8@gmail.com"">sandy.l.x.2.0.1.8@gmail.com</a>
<a href=""mailto:san.d.y.l.x.2018@gmail.com"">san.d.y.l.x.2018@gmail.com</a>
<a href=""mailto:s.andy.l.x.20.18@gmail.com"">s.andy.l.x.20.18@gmail.com</a>
<a href=""mailto:s.a.nd.y.l.x.20.18@gmail.com"">s.a.nd.y.l.x.20.18@gmail.com</a>
<a href=""mailto:s.and.y.l.x20.18@gmail.com"">s.and.y.l.x20.18@gmail.com</a>
<a href=""mailto:sa.n.dyl.x2.0.1.8@gmail.com"">sa.n.dyl.x2.0.1.8@gmail.com</a>
<a href=""mailto:sand.ylx.20.1.8@gmail.com"">sand.ylx.20.1.8@gmail.com</a>
<a href=""mailto:san.dylx.2018@gmail.com"">san.dylx.2018@gmail.com</a>
<a href=""mailto:s.a.n.dylx.20.18@gmail.com"">s.a.n.dylx.20.18@gmail.com</a>
<a href=""mailto:sa.ndylx201.8@gmail.com"">sa.ndylx201.8@gmail.com</a>
<a href=""mailto:sa.n.d.y.lx201.8@gmail.com"">sa.n.d.y.lx201.8@gmail.com</a>
<a href=""mailto:sa.n.dylx.2.018@gmail.com"">sa.n.dylx.2.018@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx.201.8@gmail.com"">s.a.nd.y.lx.201.8@gmail.com</a>
<a href=""mailto:sand.y.lx201.8@gmail.com"">sand.y.lx201.8@gmail.com</a>
<a href=""mailto:sa.nd.yl.x.2.0.18@gmail.com"">sa.nd.yl.x.2.0.18@gmail.com</a>
<a href=""mailto:s.and.y.lx201.8@gmail.com"">s.and.y.lx201.8@gmail.com</a>
<a href=""mailto:sandylx2.018@gmail.com"">sandylx2.018@gmail.com</a>
<a href=""mailto:s.an.dy.l.x20.18@gmail.com"">s.an.dy.l.x20.18@gmail.com</a>
<a href=""mailto:s.a.n.dy.l.x.2.018@gmail.com"">s.a.n.dy.l.x.2.018@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x.20.18@gmail.com"">s.a.n.d.y.l.x.20.18@gmail.com</a>
<a href=""mailto:s.andy.lx2018@gmail.com"">s.andy.lx2018@gmail.com</a>
<a href=""mailto:s.a.ndylx.2.0.1.8@gmail.com"">s.a.ndylx.2.0.1.8@gmail.com</a>
<a href=""mailto:sa.n.d.y.l.x.20.18@gmail.com"">sa.n.d.y.l.x.20.18@gmail.com</a>
<a href=""mailto:s.and.y.lx.201.8@gmail.com"">s.and.y.lx.201.8@gmail.com</a>
<a href=""mailto:s.a.ndylx.2.018@gmail.com"">s.a.ndylx.2.018@gmail.com</a>
<a href=""mailto:sa.ndy.lx.20.18@gmail.com"">sa.ndy.lx.20.18@gmail.com</a>
<a href=""mailto:s.a.nd.ylx2.018@gmail.com"">s.a.nd.ylx2.018@gmail.com</a>
<a href=""mailto:san.dy.lx2.018@gmail.com"">san.dy.lx2.018@gmail.com</a>
<a href=""mailto:sand.yl.x.20.1.8@gmail.com"">sand.yl.x.20.1.8@gmail.com</a>
<a href=""mailto:sandy.lx.2.0.18@gmail.com"">sandy.lx.2.0.18@gmail.com</a>
<a href=""mailto:san.d.yl.x2018@gmail.com"">san.d.yl.x2018@gmail.com</a>
<a href=""mailto:s.andy.l.x.20.1.8@gmail.com"">s.andy.l.x.20.1.8@gmail.com</a>
<a href=""mailto:s.a.ndyl.x20.1.8@gmail.com"">s.a.ndyl.x20.1.8@gmail.com</a>
<a href=""mailto:s.a.n.d.yl.x.2.0.1.8@gmail.com"">s.a.n.d.yl.x.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.l.x.2.01.8@gmail.com"">s.a.nd.y.l.x.2.01.8@gmail.com</a>
<a href=""mailto:s.an.dy.l.x.2.01.8@gmail.com"">s.an.dy.l.x.2.01.8@gmail.com</a>
<a href=""mailto:s.a.n.dylx201.8@gmail.com"">s.a.n.dylx201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x2.0.18@gmail.com"">s.a.n.d.y.l.x2.0.18@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x2.01.8@gmail.com"">s.a.n.d.y.l.x2.01.8@gmail.com</a>
<a href=""mailto:s.andy.lx.20.1.8@gmail.com"">s.andy.lx.20.1.8@gmail.com</a>
<a href=""mailto:s.an.d.y.lx.2.0.18@gmail.com"">s.an.d.y.lx.2.0.18@gmail.com</a>
<a href=""mailto:sa.ndyl.x.2.01.8@gmail.com"">sa.ndyl.x.2.01.8@gmail.com</a>
<a href=""mailto:sa.n.dylx.20.1.8@gmail.com"">sa.n.dylx.20.1.8@gmail.com</a>
<a href=""mailto:sa.n.dylx2018@gmail.com"">sa.n.dylx2018@gmail.com</a>
<a href=""mailto:sa.ndy.l.x.2018@gmail.com"">sa.ndy.l.x.2018@gmail.com</a>
<a href=""mailto:san.dy.l.x.2.0.1.8@gmail.com"">san.dy.l.x.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.n.dyl.x2.018@gmail.com"">s.a.n.dyl.x2.018@gmail.com</a>
<a href=""mailto:sandylx.20.1.8@gmail.com"">sandylx.20.1.8@gmail.com</a>
<a href=""mailto:san.dy.l.x.201.8@gmail.com"">san.dy.l.x.201.8@gmail.com</a>
<a href=""mailto:s.a.n.dyl.x.201.8@gmail.com"">s.a.n.dyl.x.201.8@gmail.com</a>
<a href=""mailto:sa.ndylx20.18@gmail.com"">sa.ndylx20.18@gmail.com</a>
<a href=""mailto:sa.n.d.y.l.x2.018@gmail.com"">sa.n.d.y.l.x2.018@gmail.com</a>
<a href=""mailto:s.a.ndy.lx.2.01.8@gmail.com"">s.a.ndy.lx.2.01.8@gmail.com</a>
<a href=""mailto:sandy.lx20.1.8@gmail.com"">sandy.lx20.1.8@gmail.com</a>
<a href=""mailto:s.an.d.yl.x.20.1.8@gmail.com"">s.an.d.yl.x.20.1.8@gmail.com</a>
<a href=""mailto:san.d.ylx.20.18@gmail.com"">san.d.ylx.20.18@gmail.com</a>
<a href=""mailto:san.dy.lx.2.018@gmail.com"">san.dy.lx.2.018@gmail.com</a>
<a href=""mailto:sa.n.d.ylx201.8@gmail.com"">sa.n.d.ylx201.8@gmail.com</a>
<a href=""mailto:sa.ndylx2.01.8@gmail.com"">sa.ndylx2.01.8@gmail.com</a>
<a href=""mailto:sand.y.lx.201.8@gmail.com"">sand.y.lx.201.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx201.8@gmail.com"">s.a.nd.y.lx201.8@gmail.com</a>
<a href=""mailto:s.an.dyl.x.201.8@gmail.com"">s.an.dyl.x.201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x.2.01.8@gmail.com"">s.a.n.d.y.l.x.2.01.8@gmail.com</a>
<a href=""mailto:san.dyl.x.20.1.8@gmail.com"">san.dyl.x.20.1.8@gmail.com</a>
<a href=""mailto:sandylx.2.0.1.8@gmail.com"">sandylx.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.nd.yl.x20.1.8@gmail.com"">s.a.nd.yl.x20.1.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x.20.1.8@gmail.com"">s.a.n.d.y.l.x.20.1.8@gmail.com</a>
<a href=""mailto:sa.ndy.lx2.01.8@gmail.com"">sa.ndy.lx2.01.8@gmail.com</a>
<a href=""mailto:sa.nd.yl.x201.8@gmail.com"">sa.nd.yl.x201.8@gmail.com</a>
<a href=""mailto:s.andy.l.x.201.8@gmail.com"">s.andy.l.x.201.8@gmail.com</a>
<a href=""mailto:san.d.y.l.x.2.018@gmail.com"">san.d.y.l.x.2.018@gmail.com</a>
<a href=""mailto:sa.n.dylx.20.18@gmail.com"">sa.n.dylx.20.18@gmail.com</a>
<a href=""mailto:sa.n.dy.lx20.18@gmail.com"">sa.n.dy.lx20.18@gmail.com</a>
<a href=""mailto:sandylx2.01.8@gmail.com"">sandylx2.01.8@gmail.com</a>
<a href=""mailto:s.a.nd.yl.x.20.18@gmail.com"">s.a.nd.yl.x.20.18@gmail.com</a>
<a href=""mailto:sa.nd.y.lx2.018@gmail.com"">sa.nd.y.lx2.018@gmail.com</a>
<a href=""mailto:s.a.n.d.yl.x.2.018@gmail.com"">s.a.n.d.yl.x.2.018@gmail.com</a>
<a href=""mailto:sa.nd.y.l.x201.8@gmail.com"">sa.nd.y.l.x201.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.l.x.20.1.8@gmail.com"">s.a.nd.y.l.x.20.1.8@gmail.com</a>
<a href=""mailto:s.an.dylx.201.8@gmail.com"">s.an.dylx.201.8@gmail.com</a>
<a href=""mailto:sandyl.x2.018@gmail.com"">sandyl.x2.018@gmail.com</a>
<a href=""mailto:s.an.d.y.lx20.1.8@gmail.com"">s.an.d.y.lx20.1.8@gmail.com</a>
<a href=""mailto:s.a.n.dy.lx2018@gmail.com"">s.a.n.dy.lx2018@gmail.com</a>
<a href=""mailto:sa.ndyl.x2.0.1.8@gmail.com"">sa.ndyl.x2.0.1.8@gmail.com</a>
<a href=""mailto:sa.n.d.ylx2.0.1.8@gmail.com"">sa.n.d.ylx2.0.1.8@gmail.com</a>
<a href=""mailto:sand.y.lx.20.1.8@gmail.com"">sand.y.lx.20.1.8@gmail.com</a>
<a href=""mailto:sa.ndylx2.0.1.8@gmail.com"">sa.ndylx2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx2.018@gmail.com"">s.a.nd.y.lx2.018@gmail.com</a>
<a href=""mailto:sa.n.dy.l.x20.1.8@gmail.com"">sa.n.dy.l.x20.1.8@gmail.com</a>
<a href=""mailto:san.dy.l.x2.0.18@gmail.com"">san.dy.l.x2.0.18@gmail.com</a>
<a href=""mailto:s.a.n.d.ylx.2.0.18@gmail.com"">s.a.n.d.ylx.2.0.18@gmail.com</a>
<a href=""mailto:sa.ndy.l.x2.01.8@gmail.com"">sa.ndy.l.x2.01.8@gmail.com</a>
<a href=""mailto:sandylx.2.018@gmail.com"">sandylx.2.018@gmail.com</a>
<a href=""mailto:sa.n.dylx201.8@gmail.com"">sa.n.dylx201.8@gmail.com</a>
<a href=""mailto:sand.ylx2.0.18@gmail.com"">sand.ylx2.0.18@gmail.com</a>
<a href=""mailto:san.dyl.x.2.018@gmail.com"">san.dyl.x.2.018@gmail.com</a>
<a href=""mailto:sa.ndy.lx.2.0.1.8@gmail.com"">sa.ndy.lx.2.0.1.8@gmail.com</a>
<a href=""mailto:s.an.dyl.x20.18@gmail.com"">s.an.dyl.x20.18@gmail.com</a>
<a href=""mailto:san.d.yl.x201.8@gmail.com"">san.d.yl.x201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.lx2.01.8@gmail.com"">s.a.n.d.y.lx2.01.8@gmail.com</a>
<a href=""mailto:sandy.lx201.8@gmail.com"">sandy.lx201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.lx20.1.8@gmail.com"">s.a.n.d.y.lx20.1.8@gmail.com</a>
<a href=""mailto:sandy.l.x201.8@gmail.com"">sandy.l.x201.8@gmail.com</a>
<a href=""mailto:s.an.d.y.lx20.18@gmail.com"">s.an.d.y.lx20.18@gmail.com</a>
<a href=""mailto:s.andylx.20.18@gmail.com"">s.andylx.20.18@gmail.com</a>
<a href=""mailto:san.dy.lx20.1.8@gmail.com"">san.dy.lx20.1.8@gmail.com</a>
<a href=""mailto:sandy.l.x2.0.18@gmail.com"">sandy.l.x2.0.18@gmail.com</a>
<a href=""mailto:s.a.n.d.yl.x.2.01.8@gmail.com"">s.a.n.d.yl.x.2.01.8@gmail.com</a>
<a href=""mailto:s.andylx201.8@gmail.com"">s.andylx201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.ylx2.018@gmail.com"">s.a.n.d.ylx2.018@gmail.com</a>
<a href=""mailto:s.an.d.y.lx2018@gmail.com"">s.an.d.y.lx2018@gmail.com</a>
<a href=""mailto:s.andy.lx.2.018@gmail.com"">s.andy.lx.2.018@gmail.com</a>
<a href=""mailto:s.and.yl.x2.01.8@gmail.com"">s.and.yl.x2.01.8@gmail.com</a>
<a href=""mailto:s.an.d.y.l.x.2.0.18@gmail.com"">s.an.d.y.l.x.2.0.18@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x2.0.1.8@gmail.com"">s.a.n.d.y.l.x2.0.1.8@gmail.com</a>
<a href=""mailto:sandyl.x.2018@gmail.com"">sandyl.x.2018@gmail.com</a>
<a href=""mailto:s.a.nd.yl.x2.0.1.8@gmail.com"">s.a.nd.yl.x2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.ndyl.x20.18@gmail.com"">s.a.ndyl.x20.18@gmail.com</a>
<a href=""mailto:s.an.dyl.x.20.18@gmail.com"">s.an.dyl.x.20.18@gmail.com</a>
<a href=""mailto:sa.n.d.y.l.x.201.8@gmail.com"">sa.n.d.y.l.x.201.8@gmail.com</a>
<a href=""mailto:s.andy.l.x.2.0.1.8@gmail.com"">s.andy.l.x.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.n.d.yl.x201.8@gmail.com"">s.a.n.d.yl.x201.8@gmail.com</a>
<a href=""mailto:s.an.d.ylx.2018@gmail.com"">s.an.d.ylx.2018@gmail.com</a>
<a href=""mailto:s.and.ylx.2.01.8@gmail.com"">s.and.ylx.2.01.8@gmail.com</a>
<a href=""mailto:sa.n.d.yl.x.2.0.1.8@gmail.com"">sa.n.d.yl.x.2.0.1.8@gmail.com</a>
<a href=""mailto:sandylx.201.8@gmail.com"">sandylx.201.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx2.0.18@gmail.com"">s.a.nd.y.lx2.0.18@gmail.com</a>
<a href=""mailto:sand.y.lx2.01.8@gmail.com"">sand.y.lx2.01.8@gmail.com</a>
<a href=""mailto:sand.yl.x.2.01.8@gmail.com"">sand.yl.x.2.01.8@gmail.com</a>
<a href=""mailto:s.a.n.dy.lx.20.1.8@gmail.com"">s.a.n.dy.lx.20.1.8@gmail.com</a>
<a href=""mailto:s.andyl.x201.8@gmail.com"">s.andyl.x201.8@gmail.com</a>
<a href=""mailto:sa.nd.y.lx.2018@gmail.com"">sa.nd.y.lx.2018@gmail.com</a>
<a href=""mailto:s.andy.lx.201.8@gmail.com"">s.andy.lx.201.8@gmail.com</a>
<a href=""mailto:san.dy.l.x2.0.1.8@gmail.com"">san.dy.l.x2.0.1.8@gmail.com</a>
<a href=""mailto:sa.n.d.yl.x201.8@gmail.com"">sa.n.d.yl.x201.8@gmail.com</a>
<a href=""mailto:sand.y.lx.2.01.8@gmail.com"">sand.y.lx.2.01.8@gmail.com</a>
<a href=""mailto:sand.yl.x.201.8@gmail.com"">sand.yl.x.201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.lx.2.0.18@gmail.com"">s.a.n.d.y.lx.2.0.18@gmail.com</a>
<a href=""mailto:sa.nd.ylx2.018@gmail.com"">sa.nd.ylx2.018@gmail.com</a>
<a href=""mailto:sandyl.x201.8@gmail.com"">sandyl.x201.8@gmail.com</a>
<a href=""mailto:s.a.n.d.ylx2.01.8@gmail.com"">s.a.n.d.ylx2.01.8@gmail.com</a>
<a href=""mailto:s.a.n.dy.lx.2.01.8@gmail.com"">s.a.n.dy.lx.2.01.8@gmail.com</a>
<a href=""mailto:sa.n.d.y.l.x.2.018@gmail.com"">sa.n.d.y.l.x.2.018@gmail.com</a>
<a href=""mailto:sa.nd.yl.x.201.8@gmail.com"">sa.nd.yl.x.201.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx.2.01.8@gmail.com"">s.a.nd.y.lx.2.01.8@gmail.com</a>
<a href=""mailto:s.a.n.dylx.2.0.1.8@gmail.com"">s.a.n.dylx.2.0.1.8@gmail.com</a>
<a href=""mailto:s.andylx.2.0.1.8@gmail.com"">s.andylx.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.n.dyl.x2.01.8@gmail.com"">s.a.n.dyl.x2.01.8@gmail.com</a>
<a href=""mailto:sand.yl.x.2.0.1.8@gmail.com"">sand.yl.x.2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.ndyl.x2.018@gmail.com"">s.a.ndyl.x2.018@gmail.com</a>
<a href=""mailto:s.andy.l.x201.8@gmail.com"">s.andy.l.x201.8@gmail.com</a>
<a href=""mailto:s.an.d.ylx20.18@gmail.com"">s.an.d.ylx20.18@gmail.com</a>
<a href=""mailto:s.andy.l.x.2.01.8@gmail.com"">s.andy.l.x.2.01.8@gmail.com</a>
<a href=""mailto:san.d.yl.x.2.0.18@gmail.com"">san.d.yl.x.2.0.18@gmail.com</a>
<a href=""mailto:sa.n.dyl.x20.18@gmail.com"">sa.n.dyl.x20.18@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x2.018@gmail.com"">s.a.n.d.y.l.x2.018@gmail.com</a>
<a href=""mailto:sa.n.dyl.x2.0.18@gmail.com"">sa.n.dyl.x2.0.18@gmail.com</a>
<a href=""mailto:sa.n.d.ylx.2.01.8@gmail.com"">sa.n.d.ylx.2.01.8@gmail.com</a>
<a href=""mailto:san.d.ylx2.01.8@gmail.com"">san.d.ylx2.01.8@gmail.com</a>
<a href=""mailto:s.an.d.yl.x2.0.1.8@gmail.com"">s.an.d.yl.x2.0.1.8@gmail.com</a>
<a href=""mailto:sa.n.dylx2.0.18@gmail.com"">sa.n.dylx2.0.18@gmail.com</a>
<a href=""mailto:sa.nd.yl.x2.018@gmail.com"">sa.nd.yl.x2.018@gmail.com</a>
<a href=""mailto:s.a.n.d.y.lx2.0.18@gmail.com"">s.a.n.d.y.lx2.0.18@gmail.com</a>
<a href=""mailto:s.an.dy.lx2018@gmail.com"">s.an.dy.lx2018@gmail.com</a>
<a href=""mailto:sa.ndylx.2018@gmail.com"">sa.ndylx.2018@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx20.18@gmail.com"">s.a.nd.y.lx20.18@gmail.com</a>
<a href=""mailto:sa.nd.y.l.x.2.01.8@gmail.com"">sa.nd.y.l.x.2.01.8@gmail.com</a>
<a href=""mailto:s.a.nd.ylx.2.01.8@gmail.com"">s.a.nd.ylx.2.01.8@gmail.com</a>
<a href=""mailto:sa.ndylx2.018@gmail.com"">sa.ndylx2.018@gmail.com</a>
<a href=""mailto:s.a.ndyl.x.2.01.8@gmail.com"">s.a.ndyl.x.2.01.8@gmail.com</a>
<a href=""mailto:sa.nd.y.lx2.0.1.8@gmail.com"">sa.nd.y.lx2.0.1.8@gmail.com</a>
<a href=""mailto:sand.y.lx20.1.8@gmail.com"">sand.y.lx20.1.8@gmail.com</a>
<a href=""mailto:s.a.nd.y.l.x2.0.1.8@gmail.com"">s.a.nd.y.l.x2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.n.d.y.l.x.201.8@gmail.com"">s.a.n.d.y.l.x.201.8@gmail.com</a>
<a href=""mailto:sa.n.dyl.x.2018@gmail.com"">sa.n.dyl.x.2018@gmail.com</a>
<a href=""mailto:sa.ndylx.2.0.18@gmail.com"">sa.ndylx.2.0.18@gmail.com</a>
<a href=""mailto:s.andylx.2.0.18@gmail.com"">s.andylx.2.0.18@gmail.com</a>
<a href=""mailto:s.an.d.y.l.x20.18@gmail.com"">s.an.d.y.l.x20.18@gmail.com</a>
<a href=""mailto:s.a.n.dylx.20.1.8@gmail.com"">s.a.n.dylx.20.1.8@gmail.com</a>
<a href=""mailto:sa.ndylx2018@gmail.com"">sa.ndylx2018@gmail.com</a>
<a href=""mailto:s.a.nd.y.lx.2.0.1.8@gmail.com"">s.a.nd.y.lx.2.0.1.8@gmail.com</a>
<a href=""mailto:sa.n.dylx20.1.8@gmail.com"">sa.n.dylx20.1.8@gmail.com</a>
<a href=""mailto:san.dy.lx.20.1.8@gmail.com"">san.dy.lx.20.1.8@gmail.com</a>
<a href=""mailto:sa.nd.y.lx201.8@gmail.com"">sa.nd.y.lx201.8@gmail.com</a>
<a href=""mailto:sa.nd.y.l.x20.18@gmail.com"">sa.nd.y.l.x20.18@gmail.com</a>
<a href=""mailto:s.a.nd.ylx20.1.8@gmail.com"">s.a.nd.ylx20.1.8@gmail.com</a>
<a href=""mailto:s.a.n.dyl.x.2018@gmail.com"">s.a.n.dyl.x.2018@gmail.com</a>
<a href=""mailto:s.a.n.d.ylx20.18@gmail.com"">s.a.n.d.ylx20.18@gmail.com</a>
<a href=""mailto:s.a.n.dy.l.x.2018@gmail.com"">s.a.n.dy.l.x.2018@gmail.com</a>
<a href=""mailto:sa.n.dyl.x.20.1.8@gmail.com"">sa.n.dyl.x.20.1.8@gmail.com</a>
<a href=""mailto:san.d.ylx2.0.1.8@gmail.com"">san.d.ylx2.0.1.8@gmail.com</a>
<a href=""mailto:s.a.n.dylx2.01.8@gmail.com"">s.a.n.dylx2.01.8@gmail.com</a>
<a href=""mailto:sa.n.d.yl.x.2018@gmail.com"">sa.n.d.yl.x.2018@gmail.com</a>
<a href=""mailto:a.bub.ak.ar.m.uh.d.388@gmail.com"">a.bub.ak.ar.m.uh.d.388@gmail.com</a>
<a href=""mailto:a.b.ub.a.k.a.rmu.hd388@gmail.com"">a.b.ub.a.k.a.rmu.hd388@gmail.com</a>
<a href=""mailto:abu.bak.a.r.mu.h.d.38.8@gmail.com"">abu.bak.a.r.mu.h.d.38.8@gmail.com</a>
<a href=""mailto:ab.u.b.a.k.a.rmu.hd3.88@gmail.com"">ab.u.b.a.k.a.rmu.hd3.88@gmail.com</a>
<a href=""mailto:a.b.u.b.akarm.uh.d38.8@gmail.com"">a.b.u.b.akarm.uh.d38.8@gmail.com</a>
<a href=""mailto:ab.ub.ak.ar.m.u.h.d.38.8@gmail.com"">ab.ub.ak.ar.m.u.h.d.38.8@gmail.com</a>
<a href=""mailto:abubaka.r.mu.hd.38.8@gmail.com"">abubaka.r.mu.hd.38.8@gmail.com</a>
<a href=""mailto:abub.a.k.a.rm.uh.d38.8@gmail.com"">abub.a.k.a.rm.uh.d38.8@gmail.com</a>
<a href=""mailto:ab.u.b.a.ka.rmu.hd.38.8@gmail.com"">ab.u.b.a.ka.rmu.hd.38.8@gmail.com</a>
<a href=""mailto:abu.ba.k.armu.hd3.88@gmail.com"">abu.ba.k.armu.hd3.88@gmail.com</a>
<a href=""mailto:a.b.u.baka.r.m.uh.d38.8@gmail.com"">a.b.u.baka.r.m.uh.d38.8@gmail.com</a>
<a href=""mailto:ab.u.b.ak.a.r.m.uh.d.388@gmail.com"">ab.u.b.ak.a.r.m.uh.d.388@gmail.com</a>
<a href=""mailto:ab.ubaka.r.mu.hd.388@gmail.com"">ab.ubaka.r.mu.hd.388@gmail.com</a>
<a href=""mailto:abu.b.a.ka.rm.uh.d.3.8.8@gmail.com"">abu.b.a.ka.rm.uh.d.3.8.8@gmail.com</a>
<a href=""mailto:a.b.uba.k.a.r.mu.hd3.8.8@gmail.com"">a.b.uba.k.a.r.mu.hd3.8.8@gmail.com</a>
<a href=""mailto:a.bubaka.rmu.h.d.3.8.8@gmail.com"">a.bubaka.rmu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:ab.u.b.ak.arm.u.h.d.38.8@gmail.com"">ab.u.b.ak.arm.u.h.d.38.8@gmail.com</a>
<a href=""mailto:ab.uba.k.a.r.m.uhd3.88@gmail.com"">ab.uba.k.a.r.m.uhd3.88@gmail.com</a>
<a href=""mailto:abu.ba.karm.uh.d.3.8.8@gmail.com"">abu.ba.karm.uh.d.3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.a.ka.r.m.u.h.d38.8@gmail.com"">ab.ub.a.ka.r.m.u.h.d38.8@gmail.com</a>
<a href=""mailto:ab.ubakar.mu.h.d3.88@gmail.com"">ab.ubakar.mu.h.d3.88@gmail.com</a>
<a href=""mailto:ab.u.ba.k.arm.uhd3.88@gmail.com"">ab.u.ba.k.arm.uhd3.88@gmail.com</a>
<a href=""mailto:abuba.ka.rmuhd38.8@gmail.com"">abuba.ka.rmuhd38.8@gmail.com</a>
<a href=""mailto:abuba.ka.r.m.uhd.3.8.8@gmail.com"">abuba.ka.r.m.uhd.3.8.8@gmail.com</a>
<a href=""mailto:a.b.ub.akarmu.hd3.88@gmail.com"">a.b.ub.akarmu.hd3.88@gmail.com</a>
<a href=""mailto:abuba.ka.rm.uh.d.38.8@gmail.com"">abuba.ka.rm.uh.d.38.8@gmail.com</a>
<a href=""mailto:ab.u.b.akarmuh.d.38.8@gmail.com"">ab.u.b.akarmuh.d.38.8@gmail.com</a>
<a href=""mailto:abubakarm.uh.d.3.88@gmail.com"">abubakarm.uh.d.3.88@gmail.com</a>
<a href=""mailto:ab.ub.aka.rmuhd388@gmail.com"">ab.ub.aka.rmuhd388@gmail.com</a>
<a href=""mailto:ab.uba.k.a.r.m.u.h.d38.8@gmail.com"">ab.uba.k.a.r.m.u.h.d38.8@gmail.com</a>
<a href=""mailto:a.b.ub.ak.a.rmuh.d.3.88@gmail.com"">a.b.ub.ak.a.rmuh.d.3.88@gmail.com</a>
<a href=""mailto:a.bub.aka.rmuhd.388@gmail.com"">a.bub.aka.rmuhd.388@gmail.com</a>
<a href=""mailto:abu.bak.a.r.muhd388@gmail.com"">abu.bak.a.r.muhd388@gmail.com</a>
<a href=""mailto:a.bub.a.karmu.hd388@gmail.com"">a.bub.a.karmu.hd388@gmail.com</a>
<a href=""mailto:ab.u.bakarm.uh.d.388@gmail.com"">ab.u.bakarm.uh.d.388@gmail.com</a>
<a href=""mailto:a.b.u.b.a.k.armuh.d.38.8@gmail.com"">a.b.u.b.a.k.armuh.d.38.8@gmail.com</a>
<a href=""mailto:ab.u.b.akarmu.hd.3.88@gmail.com"">ab.u.b.akarmu.hd.3.88@gmail.com</a>
<a href=""mailto:abu.ba.k.armu.hd.38.8@gmail.com"">abu.ba.k.armu.hd.38.8@gmail.com</a>
<a href=""mailto:a.b.u.b.a.ka.r.muh.d388@gmail.com"">a.b.u.b.a.ka.r.muh.d388@gmail.com</a>
<a href=""mailto:abub.ak.armu.hd3.8.8@gmail.com"">abub.ak.armu.hd3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.a.k.ar.m.u.h.d.38.8@gmail.com"">ab.ub.a.k.ar.m.u.h.d.38.8@gmail.com</a>
<a href=""mailto:a.bubaka.rmu.hd3.8.8@gmail.com"">a.bubaka.rmu.hd3.8.8@gmail.com</a>
<a href=""mailto:a.b.ubak.a.r.m.u.hd388@gmail.com"">a.b.ubak.a.r.m.u.hd388@gmail.com</a>
<a href=""mailto:a.b.u.b.a.k.arm.u.hd.3.88@gmail.com"">a.b.u.b.a.k.arm.u.hd.3.88@gmail.com</a>
<a href=""mailto:a.b.u.b.a.ka.rm.u.hd3.8.8@gmail.com"">a.b.u.b.a.ka.rm.u.hd3.8.8@gmail.com</a>
<a href=""mailto:abub.a.k.a.rm.uh.d3.88@gmail.com"">abub.a.k.a.rm.uh.d3.88@gmail.com</a>
<a href=""mailto:ab.u.b.ak.ar.muh.d.3.8.8@gmail.com"">ab.u.b.ak.ar.muh.d.3.8.8@gmail.com</a>
<a href=""mailto:abu.ba.ka.rmu.hd388@gmail.com"">abu.ba.ka.rmu.hd388@gmail.com</a>
<a href=""mailto:ab.u.b.a.k.a.r.m.uh.d.388@gmail.com"">ab.u.b.a.k.a.r.m.uh.d.388@gmail.com</a>
<a href=""mailto:abub.a.karmuh.d.388@gmail.com"">abub.a.karmuh.d.388@gmail.com</a>
<a href=""mailto:a.b.ub.akarmu.hd.388@gmail.com"">a.b.ub.akarmu.hd.388@gmail.com</a>
<a href=""mailto:abu.b.akar.m.u.hd.3.88@gmail.com"">abu.b.akar.m.u.hd.3.88@gmail.com</a>
<a href=""mailto:ab.ub.a.kar.m.uh.d.3.88@gmail.com"">ab.ub.a.kar.m.uh.d.3.88@gmail.com</a>
<a href=""mailto:ab.ub.a.ka.rm.uh.d3.8.8@gmail.com"">ab.ub.a.ka.rm.uh.d3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.a.k.ar.m.uhd388@gmail.com"">ab.ub.a.k.ar.m.uhd388@gmail.com</a>
<a href=""mailto:abu.ba.kar.m.uh.d.388@gmail.com"">abu.ba.kar.m.uh.d.388@gmail.com</a>
<a href=""mailto:ab.u.bak.arm.uhd.3.8.8@gmail.com"">ab.u.bak.arm.uhd.3.8.8@gmail.com</a>
<a href=""mailto:a.bu.bak.a.r.muh.d.38.8@gmail.com"">a.bu.bak.a.r.muh.d.38.8@gmail.com</a>
<a href=""mailto:a.bu.bak.ar.m.u.h.d.388@gmail.com"">a.bu.bak.ar.m.u.h.d.388@gmail.com</a>
<a href=""mailto:a.bu.b.a.k.a.rm.uhd388@gmail.com"">a.bu.b.a.k.a.rm.uhd388@gmail.com</a>
<a href=""mailto:a.b.u.bak.a.rmu.hd.38.8@gmail.com"">a.b.u.bak.a.rmu.hd.38.8@gmail.com</a>
<a href=""mailto:ab.ub.akarmu.hd.3.8.8@gmail.com"">ab.ub.akarmu.hd.3.8.8@gmail.com</a>
<a href=""mailto:a.b.ub.aka.rmu.h.d388@gmail.com"">a.b.ub.aka.rmu.h.d388@gmail.com</a>
<a href=""mailto:abub.akarm.u.hd.3.88@gmail.com"">abub.akarm.u.hd.3.88@gmail.com</a>
<a href=""mailto:a.b.ubak.arm.uh.d.3.8.8@gmail.com"">a.b.ubak.arm.uh.d.3.8.8@gmail.com</a>
<a href=""mailto:a.bubak.a.rmu.hd388@gmail.com"">a.bubak.a.rmu.hd388@gmail.com</a>
<a href=""mailto:a.bu.b.a.karmu.hd3.8.8@gmail.com"">a.bu.b.a.karmu.hd3.8.8@gmail.com</a>
<a href=""mailto:abu.bak.armu.h.d3.8.8@gmail.com"">abu.bak.armu.h.d3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.a.k.ar.m.uh.d.3.8.8@gmail.com"">ab.ub.a.k.ar.m.uh.d.3.8.8@gmail.com</a>
<a href=""mailto:abub.a.k.a.r.m.uh.d.388@gmail.com"">abub.a.k.a.r.m.uh.d.388@gmail.com</a>
<a href=""mailto:abu.baka.r.m.uhd3.8.8@gmail.com"">abu.baka.r.m.uhd3.8.8@gmail.com</a>
<a href=""mailto:a.b.ubak.ar.muh.d38.8@gmail.com"">a.b.ubak.ar.muh.d38.8@gmail.com</a>
<a href=""mailto:abub.a.kar.muh.d.38.8@gmail.com"">abub.a.kar.muh.d.38.8@gmail.com</a>
<a href=""mailto:a.b.ubakar.m.uhd3.88@gmail.com"">a.b.ubakar.m.uhd3.88@gmail.com</a>
<a href=""mailto:ab.ub.aka.rmuhd3.88@gmail.com"">ab.ub.aka.rmuhd3.88@gmail.com</a>
<a href=""mailto:a.bub.a.kar.mu.hd.388@gmail.com"">a.bub.a.kar.mu.hd.388@gmail.com</a>
<a href=""mailto:ab.u.ba.k.ar.m.u.hd388@gmail.com"">ab.u.ba.k.ar.m.u.hd388@gmail.com</a>
<a href=""mailto:ab.uba.k.ar.m.u.h.d3.88@gmail.com"">ab.uba.k.ar.m.u.h.d3.88@gmail.com</a>
<a href=""mailto:ab.u.bakarmuh.d388@gmail.com"">ab.u.bakarmuh.d388@gmail.com</a>
<a href=""mailto:a.b.u.ba.ka.rm.u.h.d.388@gmail.com"">a.b.u.ba.ka.rm.u.h.d.388@gmail.com</a>
<a href=""mailto:a.b.ub.a.ka.rm.uh.d.3.88@gmail.com"">a.b.ub.a.ka.rm.uh.d.3.88@gmail.com</a>
<a href=""mailto:ab.ub.akarmu.hd.388@gmail.com"">ab.ub.akarmu.hd.388@gmail.com</a>
<a href=""mailto:ab.uba.ka.rm.u.hd.3.8.8@gmail.com"">ab.uba.ka.rm.u.hd.3.8.8@gmail.com</a>
<a href=""mailto:a.bu.baka.r.muh.d3.88@gmail.com"">a.bu.baka.r.muh.d3.88@gmail.com</a>
<a href=""mailto:a.b.ub.a.ka.r.mu.h.d38.8@gmail.com"">a.b.ub.a.ka.r.mu.h.d38.8@gmail.com</a>
<a href=""mailto:a.bub.a.ka.rm.u.hd.3.88@gmail.com"">a.bub.a.ka.rm.u.hd.3.88@gmail.com</a>
<a href=""mailto:a.buba.kar.m.uh.d.3.88@gmail.com"">a.buba.kar.m.uh.d.3.88@gmail.com</a>
<a href=""mailto:a.bubak.a.r.m.u.h.d.38.8@gmail.com"">a.bubak.a.r.m.u.h.d.38.8@gmail.com</a>
<a href=""mailto:a.bu.bakarmu.hd.388@gmail.com"">a.bu.bakarmu.hd.388@gmail.com</a>
<a href=""mailto:a.bu.ba.kar.muh.d.3.88@gmail.com"">a.bu.ba.kar.muh.d.3.88@gmail.com</a>
<a href=""mailto:a.b.ubakar.mu.h.d.3.88@gmail.com"">a.b.ubakar.mu.h.d.3.88@gmail.com</a>
<a href=""mailto:abuba.k.a.rm.uh.d38.8@gmail.com"">abuba.k.a.rm.uh.d38.8@gmail.com</a>
<a href=""mailto:abubakar.muhd38.8@gmail.com"">abubakar.muhd38.8@gmail.com</a>
<a href=""mailto:a.b.uba.ka.r.mu.hd.3.8.8@gmail.com"">a.b.uba.ka.r.mu.hd.3.8.8@gmail.com</a>
<a href=""mailto:ab.ubak.a.r.muh.d3.8.8@gmail.com"">ab.ubak.a.r.muh.d3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.b.a.k.a.r.m.u.h.d38.8@gmail.com"">a.b.u.b.a.k.a.r.m.u.h.d38.8@gmail.com</a>
<a href=""mailto:abu.b.a.kar.m.uhd38.8@gmail.com"">abu.b.a.kar.m.uhd38.8@gmail.com</a>
<a href=""mailto:a.b.ubak.a.rmu.hd.3.88@gmail.com"">a.b.ubak.a.rmu.hd.3.88@gmail.com</a>
<a href=""mailto:a.bu.ba.ka.rmu.hd3.8.8@gmail.com"">a.bu.ba.ka.rmu.hd3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.bak.arm.uh.d3.88@gmail.com"">a.b.u.bak.arm.uh.d3.88@gmail.com</a>
<a href=""mailto:abu.baka.rm.uhd3.8.8@gmail.com"">abu.baka.rm.uhd3.8.8@gmail.com</a>
<a href=""mailto:a.bub.a.k.a.r.m.uh.d388@gmail.com"">a.bub.a.k.a.r.m.uh.d388@gmail.com</a>
<a href=""mailto:ab.u.b.akarmuhd.38.8@gmail.com"">ab.u.b.akarmuhd.38.8@gmail.com</a>
<a href=""mailto:ab.ubak.a.rm.uhd38.8@gmail.com"">ab.ubak.a.rm.uhd38.8@gmail.com</a>
<a href=""mailto:abub.ak.a.r.muhd.3.88@gmail.com"">abub.ak.a.r.muhd.3.88@gmail.com</a>
<a href=""mailto:a.b.ub.ak.armuhd.3.8.8@gmail.com"">a.b.ub.ak.armuhd.3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.a.k.ar.mu.h.d3.8.8@gmail.com"">a.bu.b.a.k.ar.mu.h.d3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.bakar.muh.d.38.8@gmail.com"">a.b.u.bakar.muh.d.38.8@gmail.com</a>
<a href=""mailto:a.b.ub.a.karm.uh.d3.8.8@gmail.com"">a.b.ub.a.karm.uh.d3.8.8@gmail.com</a>
<a href=""mailto:abubak.a.rmu.h.d.3.8.8@gmail.com"">abubak.a.rmu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:ab.u.b.ak.a.r.m.uhd.388@gmail.com"">ab.u.b.ak.a.r.m.uhd.388@gmail.com</a>
<a href=""mailto:ab.u.ba.k.a.rmuhd.38.8@gmail.com"">ab.u.ba.k.a.rmuhd.38.8@gmail.com</a>
<a href=""mailto:a.bub.ak.a.rmuhd.388@gmail.com"">a.bub.ak.a.rmuhd.388@gmail.com</a>
<a href=""mailto:a.bu.baka.rm.u.h.d388@gmail.com"">a.bu.baka.rm.u.h.d388@gmail.com</a>
<a href=""mailto:a.bu.bakar.mu.hd.388@gmail.com"">a.bu.bakar.mu.hd.388@gmail.com</a>
<a href=""mailto:a.bu.b.ak.a.r.m.uhd.38.8@gmail.com"">a.bu.b.ak.a.r.m.uhd.38.8@gmail.com</a>
<a href=""mailto:a.bubak.a.rmuhd.3.88@gmail.com"">a.bubak.a.rmuhd.3.88@gmail.com</a>
<a href=""mailto:ab.ubaka.rmuh.d.388@gmail.com"">ab.ubaka.rmuh.d.388@gmail.com</a>
<a href=""mailto:abubaka.rm.uhd38.8@gmail.com"">abubaka.rm.uhd38.8@gmail.com</a>
<a href=""mailto:a.bub.a.k.a.rm.uhd388@gmail.com"">a.bub.a.k.a.rm.uhd388@gmail.com</a>
<a href=""mailto:ab.ubakar.mu.h.d.388@gmail.com"">ab.ubakar.mu.h.d.388@gmail.com</a>
<a href=""mailto:ab.ubakarm.uh.d3.88@gmail.com"">ab.ubakarm.uh.d3.88@gmail.com</a>
<a href=""mailto:a.b.ub.a.karmu.h.d.3.88@gmail.com"">a.b.ub.a.karmu.h.d.3.88@gmail.com</a>
<a href=""mailto:abu.b.akarm.u.hd3.88@gmail.com"">abu.b.akarm.u.hd3.88@gmail.com</a>
<a href=""mailto:ab.u.b.ak.ar.m.uhd.38.8@gmail.com"">ab.u.b.ak.ar.m.uhd.38.8@gmail.com</a>
<a href=""mailto:ab.u.ba.ka.rm.u.h.d38.8@gmail.com"">ab.u.ba.ka.rm.u.h.d38.8@gmail.com</a>
<a href=""mailto:abu.ba.k.arm.uh.d3.88@gmail.com"">abu.ba.k.arm.uh.d3.88@gmail.com</a>
<a href=""mailto:abu.b.a.k.a.r.muh.d.3.8.8@gmail.com"">abu.b.a.k.a.r.muh.d.3.8.8@gmail.com</a>
<a href=""mailto:ab.u.b.a.k.ar.mu.hd3.8.8@gmail.com"">ab.u.b.a.k.ar.mu.hd3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.a.k.a.r.m.uhd3.8.8@gmail.com"">a.bu.b.a.k.a.r.m.uhd3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.ak.arm.uh.d.38.8@gmail.com"">a.bu.b.ak.arm.uh.d.38.8@gmail.com</a>
<a href=""mailto:abub.akarm.u.h.d388@gmail.com"">abub.akarm.u.h.d388@gmail.com</a>
<a href=""mailto:a.bu.ba.ka.rm.u.h.d.3.88@gmail.com"">a.bu.ba.ka.rm.u.h.d.3.88@gmail.com</a>
<a href=""mailto:a.b.u.ba.karmu.h.d.3.8.8@gmail.com"">a.b.u.ba.karmu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.bakarm.uhd.3.88@gmail.com"">a.b.u.bakarm.uhd.3.88@gmail.com</a>
<a href=""mailto:abub.a.k.a.rmu.h.d.3.8.8@gmail.com"">abub.a.k.a.rmu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:abub.ak.a.r.mu.hd388@gmail.com"">abub.ak.a.r.mu.hd388@gmail.com</a>
<a href=""mailto:a.b.u.b.ak.a.rmu.h.d3.8.8@gmail.com"">a.b.u.b.ak.a.rmu.h.d3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.ak.ar.m.uhd.388@gmail.com"">a.bu.b.ak.ar.m.uhd.388@gmail.com</a>
<a href=""mailto:ab.u.b.aka.r.m.uh.d388@gmail.com"">ab.u.b.aka.r.m.uh.d388@gmail.com</a>
<a href=""mailto:a.b.u.b.aka.r.m.uhd38.8@gmail.com"">a.b.u.b.aka.r.m.uhd38.8@gmail.com</a>
<a href=""mailto:abub.a.ka.rm.uhd.3.88@gmail.com"">abub.a.ka.rm.uhd.3.88@gmail.com</a>
<a href=""mailto:abuba.ka.r.m.u.h.d.3.88@gmail.com"">abuba.ka.r.m.u.h.d.3.88@gmail.com</a>
<a href=""mailto:a.b.u.bak.a.r.muhd3.88@gmail.com"">a.b.u.bak.a.r.muhd3.88@gmail.com</a>
<a href=""mailto:a.b.u.ba.ka.rm.uh.d.3.88@gmail.com"">a.b.u.ba.ka.rm.uh.d.3.88@gmail.com</a>
<a href=""mailto:a.bu.baka.rmuhd3.8.8@gmail.com"">a.bu.baka.rmuhd3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.a.k.arm.u.h.d38.8@gmail.com"">a.bu.b.a.k.arm.u.h.d38.8@gmail.com</a>
<a href=""mailto:abu.b.aka.r.mu.h.d.388@gmail.com"">abu.b.aka.r.mu.h.d.388@gmail.com</a>
<a href=""mailto:abub.a.k.ar.m.uh.d.38.8@gmail.com"">abub.a.k.ar.m.uh.d.38.8@gmail.com</a>
<a href=""mailto:a.bubak.arm.uh.d388@gmail.com"">a.bubak.arm.uh.d388@gmail.com</a>
<a href=""mailto:ab.u.b.ak.ar.m.u.h.d.3.88@gmail.com"">ab.u.b.ak.ar.m.u.h.d.3.88@gmail.com</a>
<a href=""mailto:a.b.ub.a.kar.m.uhd38.8@gmail.com"">a.b.ub.a.kar.m.uhd38.8@gmail.com</a>
<a href=""mailto:a.bub.aka.rmu.h.d.388@gmail.com"">a.bub.aka.rmu.h.d.388@gmail.com</a>
<a href=""mailto:abu.b.a.k.a.rmu.h.d.3.8.8@gmail.com"">abu.b.a.k.a.rmu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:a.b.ubaka.r.m.u.h.d3.8.8@gmail.com"">a.b.ubaka.r.m.u.h.d3.8.8@gmail.com</a>
<a href=""mailto:a.b.ub.a.k.a.rm.uhd.38.8@gmail.com"">a.b.ub.a.k.a.rm.uhd.38.8@gmail.com</a>
<a href=""mailto:a.bu.b.a.kar.m.uh.d3.8.8@gmail.com"">a.bu.b.a.kar.m.uh.d3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.ba.kar.muh.d3.8.8@gmail.com"">a.b.u.ba.kar.muh.d3.8.8@gmail.com</a>
<a href=""mailto:a.bu.b.akarmu.hd.38.8@gmail.com"">a.bu.b.akarmu.hd.38.8@gmail.com</a>
<a href=""mailto:a.bub.ak.ar.muh.d.3.88@gmail.com"">a.bub.ak.ar.muh.d.3.88@gmail.com</a>
<a href=""mailto:abu.bakarmu.h.d.3.88@gmail.com"">abu.bakarmu.h.d.3.88@gmail.com</a>
<a href=""mailto:ab.uba.k.a.rm.u.hd38.8@gmail.com"">ab.uba.k.a.rm.u.hd38.8@gmail.com</a>
<a href=""mailto:a.bubaka.r.mu.h.d3.8.8@gmail.com"">a.bubaka.r.mu.h.d3.8.8@gmail.com</a>
<a href=""mailto:abu.ba.karmu.hd.3.8.8@gmail.com"">abu.ba.karmu.hd.3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.ba.k.a.r.m.uhd.388@gmail.com"">a.b.u.ba.k.a.r.m.uhd.388@gmail.com</a>
<a href=""mailto:a.b.u.b.ak.ar.m.uhd38.8@gmail.com"">a.b.u.b.ak.ar.m.uhd38.8@gmail.com</a>
<a href=""mailto:a.b.ub.a.k.a.rmuhd3.8.8@gmail.com"">a.b.ub.a.k.a.rmuhd3.8.8@gmail.com</a>
<a href=""mailto:a.bub.a.k.ar.m.uhd.3.88@gmail.com"">a.bub.a.k.ar.m.uhd.3.88@gmail.com</a>
<a href=""mailto:a.b.ubak.ar.muh.d.3.88@gmail.com"">a.b.ubak.ar.muh.d.3.88@gmail.com</a>
<a href=""mailto:abu.b.a.karm.uhd.3.8.8@gmail.com"">abu.b.a.karm.uhd.3.8.8@gmail.com</a>
<a href=""mailto:abu.b.a.k.a.r.m.u.hd3.88@gmail.com"">abu.b.a.k.a.r.m.u.hd3.88@gmail.com</a>
<a href=""mailto:a.b.u.b.a.k.ar.m.u.hd.38.8@gmail.com"">a.b.u.b.a.k.ar.m.u.hd.38.8@gmail.com</a>
<a href=""mailto:ab.u.b.a.ka.rmuhd.3.8.8@gmail.com"">ab.u.b.a.ka.rmuhd.3.8.8@gmail.com</a>
<a href=""mailto:ab.u.ba.k.ar.mu.h.d388@gmail.com"">ab.u.ba.k.ar.mu.h.d388@gmail.com</a>
<a href=""mailto:a.bub.a.karm.uh.d38.8@gmail.com"">a.bub.a.karm.uh.d38.8@gmail.com</a>
<a href=""mailto:abuba.k.a.rm.u.h.d38.8@gmail.com"">abuba.k.a.rm.u.h.d38.8@gmail.com</a>
<a href=""mailto:abub.a.k.ar.muh.d38.8@gmail.com"">abub.a.k.ar.muh.d38.8@gmail.com</a>
<a href=""mailto:abub.a.ka.r.muhd3.88@gmail.com"">abub.a.ka.r.muhd3.88@gmail.com</a>
<a href=""mailto:abuba.karmu.h.d38.8@gmail.com"">abuba.karmu.h.d38.8@gmail.com</a>
<a href=""mailto:abub.a.k.ar.mu.h.d3.8.8@gmail.com"">abub.a.k.ar.mu.h.d3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.ak.ar.m.u.h.d3.88@gmail.com"">ab.ub.ak.ar.m.u.h.d3.88@gmail.com</a>
<a href=""mailto:ab.u.b.a.kar.muh.d388@gmail.com"">ab.u.b.a.kar.muh.d388@gmail.com</a>
<a href=""mailto:abuba.ka.r.muh.d3.88@gmail.com"">abuba.ka.r.muh.d3.88@gmail.com</a>
<a href=""mailto:ab.uba.k.ar.muhd.38.8@gmail.com"">ab.uba.k.ar.muhd.38.8@gmail.com</a>
<a href=""mailto:ab.ubak.ar.m.u.h.d3.8.8@gmail.com"">ab.ubak.ar.m.u.h.d3.8.8@gmail.com</a>
<a href=""mailto:ab.ub.a.kar.m.u.h.d.3.88@gmail.com"">ab.ub.a.kar.m.u.h.d.3.88@gmail.com</a>
<a href=""mailto:ab.ub.a.k.armu.h.d3.88@gmail.com"">ab.ub.a.k.armu.h.d3.88@gmail.com</a>
<a href=""mailto:a.bub.a.karmuhd.38.8@gmail.com"">a.bub.a.karmuhd.38.8@gmail.com</a>
<a href=""mailto:a.bu.b.a.k.armu.hd.38.8@gmail.com"">a.bu.b.a.k.armu.hd.38.8@gmail.com</a>
<a href=""mailto:a.b.u.b.aka.r.mu.h.d.388@gmail.com"">a.b.u.b.aka.r.mu.h.d.388@gmail.com</a>
<a href=""mailto:a.buba.karmu.hd.3.88@gmail.com"">a.buba.karmu.hd.3.88@gmail.com</a>
<a href=""mailto:ab.ubaka.rmuh.d3.88@gmail.com"">ab.ubaka.rmuh.d3.88@gmail.com</a>
<a href=""mailto:abuba.k.ar.mu.hd.38.8@gmail.com"">abuba.k.ar.mu.hd.38.8@gmail.com</a>
<a href=""mailto:abu.b.ak.ar.m.uh.d3.88@gmail.com"">abu.b.ak.ar.m.uh.d3.88@gmail.com</a>
<a href=""mailto:abu.ba.k.armu.h.d.3.8.8@gmail.com"">abu.ba.k.armu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:a.b.u.b.akar.mu.h.d.3.8.8@gmail.com"">a.b.u.b.akar.mu.h.d.3.8.8@gmail.com</a>
<a href=""mailto:a.b.ub.ak.ar.mu.h.d388@gmail.com"">a.b.ub.ak.ar.mu.h.d388@gmail.com</a>
<a href=""mailto:ab.uba.k.a.r.muh.d3.8.8@gmail.com"">ab.uba.k.a.r.muh.d3.8.8@gmail.com</a>
<a href=""mailto:abu.ba.ka.r.mu.hd.3.8.8@gmail.com"">abu.ba.ka.r.mu.hd.3.8.8@gmail.com</a>
<a href=""mailto:ab.u.ba.k.armuhd.388@gmail.com"">ab.u.ba.k.armuhd.388@gmail.com</a>
<a href=""mailto:bankuba196@gmail.com"">bankuba196@gmail.com</a>
<a href=""mailto:b.ank.uba1.96@gmail.com"">b.ank.uba1.96@gmail.com</a>
<a href=""mailto:bankub.a1.9.6@gmail.com"">bankub.a1.9.6@gmail.com</a>
<a href=""mailto:bank.ub.a.1.9.6@gmail.com"">bank.ub.a.1.9.6@gmail.com</a>
<a href=""mailto:banku.ba19.6@gmail.com"">banku.ba19.6@gmail.com</a>
<a href=""mailto:ba.nkub.a1.96@gmail.com"">ba.nkub.a1.96@gmail.com</a>
<a href=""mailto:b.a.nkub.a1.96@gmail.com"">b.a.nkub.a1.96@gmail.com</a>
<a href=""mailto:b.a.n.k.u.ba1.96@gmail.com"">b.a.n.k.u.ba1.96@gmail.com</a>
<a href=""mailto:ba.nk.ub.a1.96@gmail.com"">ba.nk.ub.a1.96@gmail.com</a>
<a href=""mailto:b.ank.u.b.a1.9.6@gmail.com"">b.ank.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.u.b.a.19.6@gmail.com"">ba.n.k.u.b.a.19.6@gmail.com</a>
<a href=""mailto:ba.nk.u.ba.19.6@gmail.com"">ba.nk.u.ba.19.6@gmail.com</a>
<a href=""mailto:ban.k.u.ba.1.96@gmail.com"">ban.k.u.ba.1.96@gmail.com</a>
<a href=""mailto:ba.n.k.ub.a.19.6@gmail.com"">ba.n.k.ub.a.19.6@gmail.com</a>
<a href=""mailto:b.an.k.uba.19.6@gmail.com"">b.an.k.uba.19.6@gmail.com</a>
<a href=""mailto:bankuba.19.6@gmail.com"">bankuba.19.6@gmail.com</a>
<a href=""mailto:banku.b.a19.6@gmail.com"">banku.b.a19.6@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a19.6@gmail.com"">b.an.k.u.b.a19.6@gmail.com</a>
<a href=""mailto:b.ankuba1.9.6@gmail.com"">b.ankuba1.9.6@gmail.com</a>
<a href=""mailto:b.ankuba1.96@gmail.com"">b.ankuba1.96@gmail.com</a>
<a href=""mailto:b.ank.uba1.9.6@gmail.com"">b.ank.uba1.9.6@gmail.com</a>
<a href=""mailto:b.a.n.k.uba.1.96@gmail.com"">b.a.n.k.uba.1.96@gmail.com</a>
<a href=""mailto:b.a.n.kuba.196@gmail.com"">b.a.n.kuba.196@gmail.com</a>
<a href=""mailto:ba.n.k.ub.a19.6@gmail.com"">ba.n.k.ub.a19.6@gmail.com</a>
<a href=""mailto:ba.n.kuba1.96@gmail.com"">ba.n.kuba1.96@gmail.com</a>
<a href=""mailto:b.ank.u.b.a.196@gmail.com"">b.ank.u.b.a.196@gmail.com</a>
<a href=""mailto:b.an.k.u.ba.1.96@gmail.com"">b.an.k.u.ba.1.96@gmail.com</a>
<a href=""mailto:b.an.k.ub.a196@gmail.com"">b.an.k.ub.a196@gmail.com</a>
<a href=""mailto:b.an.k.u.ba.196@gmail.com"">b.an.k.u.ba.196@gmail.com</a>
<a href=""mailto:b.ank.u.b.a.1.9.6@gmail.com"">b.ank.u.b.a.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nkuba.19.6@gmail.com"">b.a.nkuba.19.6@gmail.com</a>
<a href=""mailto:b.an.kub.a.1.9.6@gmail.com"">b.an.kub.a.1.9.6@gmail.com</a>
<a href=""mailto:b.an.kuba.1.96@gmail.com"">b.an.kuba.1.96@gmail.com</a>
<a href=""mailto:b.ank.u.ba.19.6@gmail.com"">b.ank.u.ba.19.6@gmail.com</a>
<a href=""mailto:ban.ku.b.a.19.6@gmail.com"">ban.ku.b.a.19.6@gmail.com</a>
<a href=""mailto:b.an.k.uba.1.96@gmail.com"">b.an.k.uba.1.96@gmail.com</a>
<a href=""mailto:ba.n.kub.a.1.9.6@gmail.com"">ba.n.kub.a.1.9.6@gmail.com</a>
<a href=""mailto:banku.ba196@gmail.com"">banku.ba196@gmail.com</a>
<a href=""mailto:b.anku.ba196@gmail.com"">b.anku.ba196@gmail.com</a>
<a href=""mailto:b.an.ku.b.a.196@gmail.com"">b.an.ku.b.a.196@gmail.com</a>
<a href=""mailto:banku.b.a1.9.6@gmail.com"">banku.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.a.nk.uba.1.96@gmail.com"">b.a.nk.uba.1.96@gmail.com</a>
<a href=""mailto:b.an.kub.a.1.96@gmail.com"">b.an.kub.a.1.96@gmail.com</a>
<a href=""mailto:ban.kuba.19.6@gmail.com"">ban.kuba.19.6@gmail.com</a>
<a href=""mailto:b.a.n.k.uba1.9.6@gmail.com"">b.a.n.k.uba1.9.6@gmail.com</a>
<a href=""mailto:ba.nkuba1.96@gmail.com"">ba.nkuba1.96@gmail.com</a>
<a href=""mailto:b.a.n.k.uba.19.6@gmail.com"">b.a.n.k.uba.19.6@gmail.com</a>
<a href=""mailto:ba.n.ku.ba1.9.6@gmail.com"">ba.n.ku.ba1.9.6@gmail.com</a>
<a href=""mailto:b.an.ku.ba1.96@gmail.com"">b.an.ku.ba1.96@gmail.com</a>
<a href=""mailto:ba.nk.u.b.a.19.6@gmail.com"">ba.nk.u.b.a.19.6@gmail.com</a>
<a href=""mailto:ban.kuba.1.9.6@gmail.com"">ban.kuba.1.9.6@gmail.com</a>
<a href=""mailto:b.ankuba.19.6@gmail.com"">b.ankuba.19.6@gmail.com</a>
<a href=""mailto:ban.ku.b.a1.9.6@gmail.com"">ban.ku.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.an.k.uba1.9.6@gmail.com"">b.an.k.uba1.9.6@gmail.com</a>
<a href=""mailto:bank.u.ba.196@gmail.com"">bank.u.ba.196@gmail.com</a>
<a href=""mailto:ban.k.u.ba1.9.6@gmail.com"">ban.k.u.ba1.9.6@gmail.com</a>
<a href=""mailto:b.a.n.k.u.b.a1.96@gmail.com"">b.a.n.k.u.b.a1.96@gmail.com</a>
<a href=""mailto:ba.nkub.a.1.96@gmail.com"">ba.nkub.a.1.96@gmail.com</a>
<a href=""mailto:bank.u.b.a1.96@gmail.com"">bank.u.b.a1.96@gmail.com</a>
<a href=""mailto:ban.ku.ba196@gmail.com"">ban.ku.ba196@gmail.com</a>
<a href=""mailto:ba.nkub.a196@gmail.com"">ba.nkub.a196@gmail.com</a>
<a href=""mailto:b.ankuba.1.96@gmail.com"">b.ankuba.1.96@gmail.com</a>
<a href=""mailto:ba.n.kub.a19.6@gmail.com"">ba.n.kub.a19.6@gmail.com</a>
<a href=""mailto:b.a.n.k.u.b.a1.9.6@gmail.com"">b.a.n.k.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.u.b.a196@gmail.com"">ba.n.k.u.b.a196@gmail.com</a>
<a href=""mailto:ba.nkuba.19.6@gmail.com"">ba.nkuba.19.6@gmail.com</a>
<a href=""mailto:b.ank.ub.a196@gmail.com"">b.ank.ub.a196@gmail.com</a>
<a href=""mailto:b.a.nk.u.b.a.196@gmail.com"">b.a.nk.u.b.a.196@gmail.com</a>
<a href=""mailto:b.an.k.u.ba1.9.6@gmail.com"">b.an.k.u.ba1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.u.ba19.6@gmail.com"">ba.n.k.u.ba19.6@gmail.com</a>
<a href=""mailto:ba.n.k.u.ba1.9.6@gmail.com"">ba.n.k.u.ba1.9.6@gmail.com</a>
<a href=""mailto:b.a.nk.uba.1.9.6@gmail.com"">b.a.nk.uba.1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.uba.196@gmail.com"">ba.n.k.uba.196@gmail.com</a>
<a href=""mailto:ban.k.uba19.6@gmail.com"">ban.k.uba19.6@gmail.com</a>
<a href=""mailto:b.a.n.kub.a1.9.6@gmail.com"">b.a.n.kub.a1.9.6@gmail.com</a>
<a href=""mailto:ba.nkub.a.1.9.6@gmail.com"">ba.nkub.a.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nk.ub.a.196@gmail.com"">b.a.nk.ub.a.196@gmail.com</a>
<a href=""mailto:b.ankuba19.6@gmail.com"">b.ankuba19.6@gmail.com</a>
<a href=""mailto:ba.nkuba196@gmail.com"">ba.nkuba196@gmail.com</a>
<a href=""mailto:ba.nk.u.ba.1.96@gmail.com"">ba.nk.u.ba.1.96@gmail.com</a>
<a href=""mailto:ban.ku.b.a1.96@gmail.com"">ban.ku.b.a1.96@gmail.com</a>
<a href=""mailto:b.ank.u.ba1.96@gmail.com"">b.ank.u.ba1.96@gmail.com</a>
<a href=""mailto:b.a.nk.u.b.a196@gmail.com"">b.a.nk.u.b.a196@gmail.com</a>
<a href=""mailto:b.a.nk.uba.19.6@gmail.com"">b.a.nk.uba.19.6@gmail.com</a>
<a href=""mailto:ba.n.ku.ba.1.96@gmail.com"">ba.n.ku.ba.1.96@gmail.com</a>
<a href=""mailto:b.a.nk.u.b.a.19.6@gmail.com"">b.a.nk.u.b.a.19.6@gmail.com</a>
<a href=""mailto:b.a.nk.u.b.a1.9.6@gmail.com"">b.a.nk.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:bankuba.196@gmail.com"">bankuba.196@gmail.com</a>
<a href=""mailto:bank.u.ba1.96@gmail.com"">bank.u.ba1.96@gmail.com</a>
<a href=""mailto:b.ankuba.1.9.6@gmail.com"">b.ankuba.1.9.6@gmail.com</a>
<a href=""mailto:b.anku.b.a1.9.6@gmail.com"">b.anku.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.a.nku.ba19.6@gmail.com"">b.a.nku.ba19.6@gmail.com</a>
<a href=""mailto:ba.nku.ba.1.9.6@gmail.com"">ba.nku.ba.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nku.b.a.1.96@gmail.com"">b.a.nku.b.a.1.96@gmail.com</a>
<a href=""mailto:bank.u.b.a19.6@gmail.com"">bank.u.b.a19.6@gmail.com</a>
<a href=""mailto:ba.n.k.uba.1.96@gmail.com"">ba.n.k.uba.1.96@gmail.com</a>
<a href=""mailto:ban.kuba19.6@gmail.com"">ban.kuba19.6@gmail.com</a>
<a href=""mailto:ba.nkuba.1.96@gmail.com"">ba.nkuba.1.96@gmail.com</a>
<a href=""mailto:ba.n.k.u.b.a19.6@gmail.com"">ba.n.k.u.b.a19.6@gmail.com</a>
<a href=""mailto:b.anku.ba1.9.6@gmail.com"">b.anku.ba1.9.6@gmail.com</a>
<a href=""mailto:banku.ba.19.6@gmail.com"">banku.ba.19.6@gmail.com</a>
<a href=""mailto:b.a.nk.u.ba.1.96@gmail.com"">b.a.nk.u.ba.1.96@gmail.com</a>
<a href=""mailto:ba.n.ku.ba1.96@gmail.com"">ba.n.ku.ba1.96@gmail.com</a>
<a href=""mailto:b.a.n.ku.ba.1.96@gmail.com"">b.a.n.ku.ba.1.96@gmail.com</a>
<a href=""mailto:b.a.nk.ub.a.19.6@gmail.com"">b.a.nk.ub.a.19.6@gmail.com</a>
<a href=""mailto:bank.uba196@gmail.com"">bank.uba196@gmail.com</a>
<a href=""mailto:ban.ku.ba1.9.6@gmail.com"">ban.ku.ba1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.uba1.9.6@gmail.com"">ba.n.k.uba1.9.6@gmail.com</a>
<a href=""mailto:b.a.nku.ba.1.96@gmail.com"">b.a.nku.ba.1.96@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a.19.6@gmail.com"">b.an.k.u.b.a.19.6@gmail.com</a>
<a href=""mailto:ban.ku.ba.19.6@gmail.com"">ban.ku.ba.19.6@gmail.com</a>
<a href=""mailto:ban.k.u.ba.19.6@gmail.com"">ban.k.u.ba.19.6@gmail.com</a>
<a href=""mailto:bank.u.ba19.6@gmail.com"">bank.u.ba19.6@gmail.com</a>
<a href=""mailto:b.an.kub.a.196@gmail.com"">b.an.kub.a.196@gmail.com</a>
<a href=""mailto:ba.n.k.u.b.a1.9.6@gmail.com"">ba.n.k.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.ank.u.ba.196@gmail.com"">b.ank.u.ba.196@gmail.com</a>
<a href=""mailto:b.a.n.ku.ba196@gmail.com"">b.a.n.ku.ba196@gmail.com</a>
<a href=""mailto:b.a.n.k.u.b.a19.6@gmail.com"">b.a.n.k.u.b.a19.6@gmail.com</a>
<a href=""mailto:ba.nkuba.196@gmail.com"">ba.nkuba.196@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a1.96@gmail.com"">b.an.k.u.b.a1.96@gmail.com</a>
<a href=""mailto:ban.kuba1.9.6@gmail.com"">ban.kuba1.9.6@gmail.com</a>
<a href=""mailto:ban.k.u.b.a1.9.6@gmail.com"">ban.k.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.ank.uba.1.9.6@gmail.com"">b.ank.uba.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nk.uba.196@gmail.com"">b.a.nk.uba.196@gmail.com</a>
<a href=""mailto:ba.n.ku.b.a1.9.6@gmail.com"">ba.n.ku.b.a1.9.6@gmail.com</a>
<a href=""mailto:ba.n.kub.a1.9.6@gmail.com"">ba.n.kub.a1.9.6@gmail.com</a>
<a href=""mailto:ba.nkuba.1.9.6@gmail.com"">ba.nkuba.1.9.6@gmail.com</a>
<a href=""mailto:b.an.k.ub.a1.9.6@gmail.com"">b.an.k.ub.a1.9.6@gmail.com</a>
<a href=""mailto:b.an.ku.ba.196@gmail.com"">b.an.ku.ba.196@gmail.com</a>
<a href=""mailto:ba.n.k.uba196@gmail.com"">ba.n.k.uba196@gmail.com</a>
<a href=""mailto:bankuba.1.9.6@gmail.com"">bankuba.1.9.6@gmail.com</a>
<a href=""mailto:ba.n.kub.a.1.96@gmail.com"">ba.n.kub.a.1.96@gmail.com</a>
<a href=""mailto:b.a.n.k.ub.a.1.96@gmail.com"">b.a.n.k.ub.a.1.96@gmail.com</a>
<a href=""mailto:b.an.k.ub.a19.6@gmail.com"">b.an.k.ub.a19.6@gmail.com</a>
<a href=""mailto:b.ank.u.b.a19.6@gmail.com"">b.ank.u.b.a19.6@gmail.com</a>
<a href=""mailto:bank.u.ba.1.96@gmail.com"">bank.u.ba.1.96@gmail.com</a>
<a href=""mailto:b.an.ku.b.a.1.9.6@gmail.com"">b.an.ku.b.a.1.9.6@gmail.com</a>
<a href=""mailto:ban.k.uba1.9.6@gmail.com"">ban.k.uba1.9.6@gmail.com</a>
<a href=""mailto:b.an.k.u.ba1.96@gmail.com"">b.an.k.u.ba1.96@gmail.com</a>
<a href=""mailto:ba.nk.uba.1.96@gmail.com"">ba.nk.uba.1.96@gmail.com</a>
<a href=""mailto:ban.k.ub.a.196@gmail.com"">ban.k.ub.a.196@gmail.com</a>
<a href=""mailto:ba.n.k.u.b.a.1.9.6@gmail.com"">ba.n.k.u.b.a.1.9.6@gmail.com</a>
<a href=""mailto:ban.k.u.b.a.1.9.6@gmail.com"">ban.k.u.b.a.1.9.6@gmail.com</a>
<a href=""mailto:ban.ku.ba19.6@gmail.com"">ban.ku.ba19.6@gmail.com</a>
<a href=""mailto:b.ankub.a.1.9.6@gmail.com"">b.ankub.a.1.9.6@gmail.com</a>
<a href=""mailto:ba.n.kuba.1.9.6@gmail.com"">ba.n.kuba.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nku.ba.196@gmail.com"">b.a.nku.ba.196@gmail.com</a>
<a href=""mailto:b.an.ku.b.a.1.96@gmail.com"">b.an.ku.b.a.1.96@gmail.com</a>
<a href=""mailto:bank.uba.1.96@gmail.com"">bank.uba.1.96@gmail.com</a>
<a href=""mailto:ban.k.u.ba1.96@gmail.com"">ban.k.u.ba1.96@gmail.com</a>
<a href=""mailto:ba.nk.ub.a.1.96@gmail.com"">ba.nk.ub.a.1.96@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a.1.9.6@gmail.com"">b.an.k.u.b.a.1.9.6@gmail.com</a>
<a href=""mailto:b.a.n.ku.b.a1.9.6@gmail.com"">b.a.n.ku.b.a1.9.6@gmail.com</a>
<a href=""mailto:b.ank.uba.196@gmail.com"">b.ank.uba.196@gmail.com</a>
<a href=""mailto:ba.nk.u.b.a1.96@gmail.com"">ba.nk.u.b.a1.96@gmail.com</a>
<a href=""mailto:ba.nku.ba.19.6@gmail.com"">ba.nku.ba.19.6@gmail.com</a>
<a href=""mailto:b.a.n.kub.a19.6@gmail.com"">b.a.n.kub.a19.6@gmail.com</a>
<a href=""mailto:b.a.nkub.a.1.96@gmail.com"">b.a.nkub.a.1.96@gmail.com</a>
<a href=""mailto:b.ank.uba.19.6@gmail.com"">b.ank.uba.19.6@gmail.com</a>
<a href=""mailto:banku.ba1.9.6@gmail.com"">banku.ba1.9.6@gmail.com</a>
<a href=""mailto:banku.ba.1.96@gmail.com"">banku.ba.1.96@gmail.com</a>
<a href=""mailto:ba.n.kub.a.196@gmail.com"">ba.n.kub.a.196@gmail.com</a>
<a href=""mailto:b.a.nk.ub.a.1.9.6@gmail.com"">b.a.nk.ub.a.1.9.6@gmail.com</a>
<a href=""mailto:b.a.nk.u.b.a19.6@gmail.com"">b.a.nk.u.b.a19.6@gmail.com</a>
<a href=""mailto:ba.nk.u.b.a1.9.6@gmail.com"">ba.nk.u.b.a1.9.6@gmail.com</a>
<a href=""mailto:ba.n.k.ub.a.1.9.6@gmail.com"">ba.n.k.ub.a.1.9.6@gmail.com</a>
<a href=""mailto:ba.nk.u.ba1.9.6@gmail.com"">ba.nk.u.ba1.9.6@gmail.com</a>
<a href=""mailto:b.ank.u.b.a196@gmail.com"">b.ank.u.b.a196@gmail.com</a>
<a href=""mailto:ba.n.kuba1.9.6@gmail.com"">ba.n.kuba1.9.6@gmail.com</a>
<a href=""mailto:ban.k.uba1.96@gmail.com"">ban.k.uba1.96@gmail.com</a>
<a href=""mailto:ba.n.ku.b.a.1.9.6@gmail.com"">ba.n.ku.b.a.1.9.6@gmail.com</a>
<a href=""mailto:b.an.k.uba1.96@gmail.com"">b.an.k.uba1.96@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a.196@gmail.com"">b.an.k.u.b.a.196@gmail.com</a>
<a href=""mailto:b.anku.ba.1.96@gmail.com"">b.anku.ba.1.96@gmail.com</a>
<a href=""mailto:b.anku.b.a.1.96@gmail.com"">b.anku.b.a.1.96@gmail.com</a>
<a href=""mailto:b.an.kuba.1.9.6@gmail.com"">b.an.kuba.1.9.6@gmail.com</a>
<a href=""mailto:b.a.n.ku.b.a.19.6@gmail.com"">b.a.n.ku.b.a.19.6@gmail.com</a>
<a href=""mailto:b.a.n.ku.b.a.1.9.6@gmail.com"">b.a.n.ku.b.a.1.9.6@gmail.com</a>
<a href=""mailto:b.ank.uba.1.96@gmail.com"">b.ank.uba.1.96@gmail.com</a>
<a href=""mailto:b.ankub.a19.6@gmail.com"">b.ankub.a19.6@gmail.com</a>
<a href=""mailto:banku.b.a.196@gmail.com"">banku.b.a.196@gmail.com</a>
<a href=""mailto:bankub.a196@gmail.com"">bankub.a196@gmail.com</a>
<a href=""mailto:b.an.kuba1.96@gmail.com"">b.an.kuba1.96@gmail.com</a>
<a href=""mailto:ba.n.kuba196@gmail.com"">ba.n.kuba196@gmail.com</a>
<a href=""mailto:b.an.kub.a.19.6@gmail.com"">b.an.kub.a.19.6@gmail.com</a>
<a href=""mailto:b.ankub.a1.96@gmail.com"">b.ankub.a1.96@gmail.com</a>
<a href=""mailto:b.ank.ub.a.1.96@gmail.com"">b.ank.ub.a.1.96@gmail.com</a>
<a href=""mailto:bank.u.b.a.19.6@gmail.com"">bank.u.b.a.19.6@gmail.com</a>
<a href=""mailto:ba.nku.ba.1.96@gmail.com"">ba.nku.ba.1.96@gmail.com</a>
<a href=""mailto:ba.nk.ub.a.1.9.6@gmail.com"">ba.nk.ub.a.1.9.6@gmail.com</a>
<a href=""mailto:b.ank.uba196@gmail.com"">b.ank.uba196@gmail.com</a>
<a href=""mailto:ban.kub.a.1.9.6@gmail.com"">ban.kub.a.1.9.6@gmail.com</a>
<a href=""mailto:b.an.k.u.b.a.1.96@gmail.com"">b.an.k.u.b.a.1.96@gmail.com</a>
<a href=""mailto:ban.k.uba.1.96@gmail.com"">ban.k.uba.1.96@gmail.com</a>
<a href=""mailto:bank.ub.a196@gmail.com"">bank.ub.a196@gmail.com</a>
<a href=""mailto:ba.nk.u.ba.1.9.6@gmail.com"">ba.nk.u.ba.1.9.6@gmail.com</a>
<a href=""mailto:b.a.n.k.ub.a19.6@gmail.com"">b.a.n.k.ub.a19.6@gmail.com</a>
<a href=""mailto:ba.nk.u.ba196@gmail.com"">ba.nk.u.ba196@gmail.com</a>
<a href=""mailto:b.a.n.kub.a.19.6@gmail.com"">b.a.n.kub.a.19.6@gmail.com</a>
<a href=""mailto:b.a.n.k.ub.a1.9.6@gmail.com"">b.a.n.k.ub.a1.9.6@gmail.com</a>
<a href=""mailto:banku.b.a.1.96@gmail.com"">banku.b.a.1.96@gmail.com</a>"
e49Uh1Gh,Untitled,differen71,JavaScript,Thursday 23rd of November 2023 01:50:38 PM CDT,"function movieInfo(dataArray) {
    let moviesLibrary = [];

    function addMovie(movieName) {
        let movieObject = { name: movieName };
        moviesLibrary.push(movieObject);
    }

    function addDirector(movie, director) {
        let searchedMovie = moviesLibrary.find((movieObject) => movieObject.name === movie);
        if (searchedMovie) {
            searchedMovie['director'] = director;
        };
    }

    function addDate(movie, date) {
        let searchedMovie = moviesLibrary.find((movieObject) => movieObject.name === movie);
        if (searchedMovie) {
            searchedMovie['date'] = date;
        };
    }

    dataArray.forEach(element => {
        if (element.includes('addMovie')) {
            let movieName = element.split('addMovie ')[1];
            addMovie(movieName);

        } else if (element.includes('directedBy')) {
            let [movieName, directorName] = element.split("" directedBy "");
            addDirector(movieName, directorName);
        }

        else if (element.includes('onDate')) {
            let [movieName, movieDate] = element.split("" onDate "");
            addDate(movieName, movieDate);
        }
    });

    for (const movie of moviesLibrary) {
        if (movie.name && movie.director && movie.date)
            console.log(JSON.stringify(movie))
    }
}"
mXSJKzBn,Basic Shit,IMustRemainUnknown,Python,Thursday 23rd of November 2023 01:30:28 PM CDT,"song_dictionary = {
    'song1': {'title': 'Bad Day',
              'artist': 'Daniel Powter',
              'album': ['Daniel Powter'],
              'release_date': 2005,
              'genre': ['Pop'],
              'duration': 235,
              'producer': 'Mitchell Froom, Jeff Dawson',
              'songwriter': 'Daniel Powter'}
}


def add_song(song_title, song_artist, album, release_date, genre, duration, producer, songwriter):
    dict_count = len(song_dictionary) + 1
    song_dictionary['song' + str(dict_count)] = {'title': song_title,
                                                 'artist': song_artist,
                                                 'album': [album],
                                                 'release_date': release_date,
                                                 'genre': [genre],
                                                 'duration': duration,
                                                 'producer': producer,
                                                 'songwriter': songwriter}


def print_all_unique_genre():
    # Extracting unique genres
    unique_genres = set()
    for movie_info in song_dictionary.values():
        unique_genres.update(movie_info.get('genre', []))

    # Printing unique genres
    print('Unique Genres:', unique_genres)


def print_all_unique_albums():
    # Extracting unique genres
    unique_albums = set()
    for movie_info in song_dictionary.values():
        unique_albums.update(movie_info.get('album', []))

    # Printing unique genres
    print('Unique Albums:', unique_albums)


def print_album_songs():
    # Extracting unique genres
    unique_genres = set()
    for movie_info in song_dictionary.values():
        unique_genres.update(movie_info.get('genres', []))

    # Printing unique genres
    print('Unique Genres:', unique_genres)


def print_title_artist_date():
    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        artist = song_info['artist']
        release_date = song_info['release_date']
        print(f""{title}\t{artist}\t{release_date}"")


def print_song_released_after_2010():
    # Print song titles released after the year 2010
    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        release_date = song_info['release_date']

        # Check if the release year is known and greater than 2010
        if release_date > 2010:
            print(f""{title} (Released in {release_date})"")


def print_pop_songs():
    # Print song titles that are Pop songs
    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        genres = song_info['genre']

        # Check if 'Pop' is in the list of genres
        if 'Pop' in genres:
            print(title)


def print_genre(target_genre):

    print('Songs under ' + target_genre + ' genre:')

    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        genres = song_info['genre']

        # Check if the target_genre is in the list of genres
        if target_genre in genres:
            print(title)


def print_highest_duration():
    max_duration_song = max(song_dictionary.values(), key=lambda x: x['duration'])
    print(f""Title: {max_duration_song['title']}"")
    print(f""Duration: {max_duration_song['duration']} seconds"")


def print_lover_songs():
    # Print songs that belong to the album ""Lover""
    for song_id, song_info in song_dictionary.items():
        if 'Lover' in song_info['album']:
            print(song_info['title'])


def print_album_songs(target_album):
    album_songs = []
    for song_id, song_info in song_dictionary.items():
        if target_album in song_info['album']:
            album_songs.append(song_info['title'])

    print(album_songs)


def print_all_unique_albums_songs():
    # Create a dictionary to store songs by album
    songs_by_album = {}

    # Group songs by album
    for song_id, song_info in song_dictionary.items():
        for album in song_info['album']:
            if album not in songs_by_album:
                songs_by_album[album] = []
            songs_by_album[album].append(song_info['title'])

    # Print songs by album
    for album, songs in songs_by_album.items():
        print(f""{album} {songs}"")


add_song('Adore You', 'Harry Styles', 'Fine Line', 2019, 'Funk, Disco, Pop Rock', 207, 'Kid Harpoon', 'Harry Styles, Amy Allen, Tyl Johnson, Kid Harpoon')
add_song('A Thousand Miles', 'Vanessa Cariton', 'Be Not Nobody', 2002, 'Pop', 240, 'Ron Fair, Curtis Schweitzer', 'Vanessa Cariton')
add_song('Lover', 'Taylor Swift', 'Lover', 2019, 'Country, Indie Folk, Alternative Country', 221, 'Taylor Swift, Jack Antonoff', 'Taylor Swift')
add_song('Cornelia', 'Taylor Swift', 'Lover', 2019, 'Electropop',287, 'Taylor Swift, Jack Antonoff', 'Taylor Swift')

print('---------------UNIQUE GENRES---------------')
print_all_unique_genre()

print()
print('---------------UNIQUE ALBUMS---------------')
print_all_unique_albums()

print()
print('---------------PRINTING SONG, ARTIST, and RELEASED DATE---------------')
print_title_artist_date()

print()
print('---------------SONG RELEASED AFTER 2010---------------')
print_song_released_after_2010()

print()
print('---------------POP SONGS---------------')
print_pop_songs()

print()
print('---------------PRINT GENRE---------------')
print_genre(""Electropop"")

print()
print('---------------PRINT HIGHEST DURATION---------------')
print_highest_duration()

print()
print('---------------PRINT SONGS UNDER LOVER ALBUM---------------')
print_lover_songs()

print()
print('---------------PRINT ALBUM SONGS---------------')
print_album_songs('Lover')

print()
print('---------------PRINT EACH UNIQUE ALBUM SONGS---------------')
print_all_unique_albums_songs()"
MYryGZ02,ic2-oc prg,AlexMastang,Lua,Thursday 23rd of November 2023 01:21:33 PM CDT,"local term = require(""term"")
local component = require(""component"")
local sides = require(""sides"")
local shell = require(""shell"")
local reactor = component.reactor
local battery = component.ic2_te_cesu
local rs = component.redstone

local cfg_n = ""cfg.txt""
local cfg
local data = {}
local reboot = 1
local max_energy = 0.8
local min_energy = 0.2
local rc_side = ""right""
local max_heat = 0.0
local status = false
local capacity = 0.0
local bt_prc = 0.0
local x
local y

local t = 0.0
local t_max = 10.0
local ta = 0.1


-- creates a divider printing
local function divider(c)
    for i=1,term.window.width do
        term.write(c)
    end
    print()
end

-- checks the existence of the given file
local function file_exists(file)
    local f = io.open(file, ""rb"")
    if (f) then f:close() end
    return f ~= nil
end

-- gets all the lines from the given file
local function lines_from(file)
    local lines = {}
    for line in io.lines(file) do
        lines[#lines + 1] = line
    end
    return lines
end

-- edits a specific line of the given file
local function edit_line(inputFile, n, k)
    local fileContent = {}
    fileContent = lines_from(inputFile)

    fileContent[n] = k

    local f = io.open(inputFile, ""w"")
    for i=1,#fileContent do
        f:write(fileContent[i] .. ""\n"")
    end
    f:close()
end

-- gets the real time in seconds
local function rtime()
    local ts = os.date(""%X"")
    return ts
end


term.clear()
term.setCursor(1, 1)
divider(""="")
print((""[%s] Checking for a response from the peripherals..""):format(rtime()))
x, y = term.getCursor()
while (not (reactor and battery)) do
    if (t > t_max) then
        error(""Too long without a response"")
    end
    reactor = component.reactor
    battery = component.ic2_te_cesu
    term.setCursor(1, y)
    print((""T: %.1f""):format(t))
    t = t + 0.1
    os.sleep(0.1)
end
print((""[%s] Done!""):format(rtime()))

-- if the program has arrived at this point then all the components are working properly
-- but there's still a chance of not being truly online, so it waits for a valid response
print((""[%s] Checking if it is online..""):format(rtime()))
x, y = term.getCursor()
t = 0.0
while (reactor.getMaxHeat() == nil and battery.getCapacity() == nil) do
    if (t > t_max) then
        error(""Too long without a response"")
    end
    term.setCursor(1, y)
    print((""T: %.1f""):format(t))
    t = t + 0.1
    os.sleep(0.1)
end
print((""[%s] Done!""):format(rtime()))

print((""[%s] Checking the config file..""):format(rtime()))
-- reads (or creates is it doesn't exist) the config file
if (not file_exists(cfg_n)) then
    -- creates it
    print((""[%s] Config file didn't found""):format(rtime()))
    print((""[%s] Creating it..""):format(rtime()))
    cfg = io.open(cfg_n, ""w"")
    cfg:write(reboot .. ""\n"" .. max_energy .. ""\n"" .. min_energy .. ""\n"" .. ta .. ""\n"" .. rc_side)
    cfg:close()
else
    -- reads it
    print((""[%s] Config file found""):format(rtime()))
    print((""[%s] Reading it..""):format(rtime()))
    data = lines_from(cfg_n)
    reboot = tonumber(data[1])
    max_energy = tonumber(data[2])
    min_energy = tonumber(data[3])
    ta = tonumber(data[4])
    rc_side = data[5]
end
print((""[%s] Done!""):format(rtime()))
-- then it restarts the entire program if necessary
if (reboot ~= 0) then
    edit_line(cfg_n, 1, 0)
    shell.execute(""reboot"")
end

print((""[%s] Setting up the values..""):format(rtime()))

max_heat = reactor.getMaxHeat()
capacity = battery.getCapacity()

print((""[%s] All set!""):format(rtime()))
print((""[%s] Program started""):format(rtime()))


-- MAIN
term.clear()
print(""IC2-OC PRG"")
divider(""="")
x, y = term.getCursor()
while (true) do
    status = reactor.producesEnergy()
    bt_prc = battery.getEnergy() / capacity

    if (bt_prc > max_energy and status) then
        rs.setOutput(sides.rc_side, 0)
    end
    if (bt_prc < min_energy and not status) then
        rs.setOutput(sides.rc_side, 15)
    end

    term.setCursor(1, y)
    print((""Reactor Prod.: %d EU         ""):format(reactor.getReactorEUOutput()))
    print((""Battery Stor.: %.0f / %.0f EU (%.1f%s)         ""):format(battery.getEnergy(), capacity, bt_prc*100, ""%""))
    
    os.sleep(ta)
end"
QdsB9QkL,Untitled,Derga,C++,Thursday 23rd of November 2023 01:21:20 PM CDT,"/*
Нужно написать программу на любом языке программирования, 
которая для каждого числа из массива данных размером 100 элементов о
пределяет количество чисел, которые меньше I - того элемента, 
и делит его на сто.
*/

#include <iostream>
#include <iomanip>
#include <vector>
#include <fstream>

using namespace std;

int GetCountNumbersLessOrEqual(const vector<uint64_t>& numbers, int idx) {
    int count = 0;
    for (int i = 0; i < numbers.size(); ++i) {
        if (idx == i) continue;
        if (numbers[i] <= numbers[idx]) count++;
    }
    return count;
}

int main() {
    vector<uint64_t> numbers(3);
    
    for (auto& number : numbers) {
        cin >> number;
    }

    vector<long double> result(3, 0.);
    for (int i = 0; i < numbers.size(); ++i) {
        result[i] = GetCountNumbersLessOrEqual(numbers, i);
    }

    for (auto& number : result) {
        number /= 100;
    }
    ofstream ofs(""output.txt"");
    for (int i = 0; i < result.size(); ++i) {
        ofs << '(' << i + 1 << "", "" << setprecision(16) << result[i] << ')' << ' ';
    }
}"
RJNg8iHw,The lift,fenixD3,C++,Thursday 23rd of November 2023 01:18:34 PM CDT,"#include <iostream>
#include <vector>
#include <ranges>
#include <algorithm>

template <typename TCont>
void print(const TCont& s, std::string delim = "" "")
{
	std::ranges::copy(s, std::ostream_iterator<typename TCont::value_type>(std::cout, delim.c_str()));
    std::cout << std::endl;
}

template <template <typename> class TCont, typename TType>
TCont<TType> fill_from(int count, std::istream& from)
{
    TCont<TType> seq;
    seq.reserve(count);

    std::ranges::copy(
        std::ranges::istream_view<TType>(from),
        std::inserter(seq, seq.end()));

    return seq;
}

size_t get_min_time_to_get_down(std::vector<size_t>& floors, size_t lift_capacity)
{
    auto get_next_filled_floor_idx = [](const std::vector<size_t>& floors)
    {
        std::vector<size_t> next_filled_floor_idx;
        for (auto i = 0; i < floors.size(); ++i)
        {
            if (floors[i] != 0)
            {
                next_filled_floor_idx.emplace_back(i);
            }
        }

        return next_filled_floor_idx;
    };

    auto next_filled_floor_idx = get_next_filled_floor_idx(floors);

    size_t min_time_to_get_down = 0;
    for (auto i = 0; i < next_filled_floor_idx.size(); ++i)
    {
        auto filled_floor_idx = next_filled_floor_idx[i];
        if (floors[filled_floor_idx] < lift_capacity && i != next_filled_floor_idx.size() - 1)
        {
            floors[next_filled_floor_idx[i + 1]] += floors[filled_floor_idx];
            continue;
        }

        min_time_to_get_down += (floors[filled_floor_idx] / lift_capacity) * (filled_floor_idx + 1) * 2;

        if (size_t remaining_people = floors[filled_floor_idx] % lift_capacity; i == next_filled_floor_idx.size() - 1 && remaining_people != 0)
        {
            min_time_to_get_down += (filled_floor_idx + 1) * 2;
        }
        else if (remaining_people != 0)
        {
            floors[next_filled_floor_idx[i + 1]] += remaining_people;
        }
    }
    return min_time_to_get_down;
}

int main()
{
    size_t lift_capacity, floor_cnt;
    std::cin >> lift_capacity >> floor_cnt;

    std::vector<size_t> floors = fill_from<std::vector, size_t>(floor_cnt, std::cin);

    std::cout << get_min_time_to_get_down(floors, lift_capacity) << std::endl;
}
"
B6sH23Jm,example-state-machine.c,okpalan,C,Thursday 23rd of November 2023 12:52:48 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Define the states as constants
#define Q0 0
#define Q1 1

// Define the alphabet as an array of characters
char alphabet[] = {'0', '1'};

// Define the transition function as a 2D array of integers
int transition[][2] = {{Q0, Q1}, {Q0, Q1}};

// Define the initial state as an integer
int initial = Q0;

// Define the final state as an integer
int final = Q1;

// Define a function that checks if a character is in the alphabet
int is_in_alphabet(char c) {
  for (int i = 0; i < sizeof(alphabet); i++) {
    if (c == alphabet[i]) {
      return 1;
    }
  }
  return 0;
}

// Define a function that runs the state machine on a given input string
int run_state_machine(char* input) {
  // Initialize the current state to the initial state
  int current = initial;
  // Loop through each character of the input string
  for (int i = 0; i < strlen(input); i++) {
    // Check if the character is in the alphabet
    if (is_in_alphabet(input[i])) {
      // Get the index of the character in the alphabet
      int index = input[i] - '0'; // do not understand how this works  in c?
      // Update the current state using the transition function
      current = transition[current][index];
    } else {
      // Reject the input if the character is not in the alphabet
      return 0;
    }
  }
  // Check if the current state is the final state
  if (current == final) {
    // Accept the input if the current state is the final state
    return 1;
  } else {
    // Reject the input if the current state is not the final state
    return 0;
  }
}

// Define a function that tests the state machine on some examples
void test_state_machine() {
  // Define some example input strings
  char* examples[] = {""0"", ""1"", ""01"", ""10"", ""11"", ""101"", ""110"", ""111"", ""1001"", ""1010"", ""1101"", ""1110"", ""1111"", ""0000"", ""0101"", ""0011"", ""0110"", ""0001"", ""0010"", ""0100"", ""1000"", ""2"", ""12"", ""21"", ""a"", ""b"", """"};
  // Loop through each example input string
  for (int i = 0; i < sizeof(examples) / sizeof(char*); i++) {
    // Run the state machine on the example input string
    int result = run_state_machine(examples[i]);
    // Print the result
    printf(""Input: %s, Output: %s\n"", examples[i], result ? ""Accepted"" : ""Rejected"");
  }
}

// Define the main function
int main() {
  // Test the state machine
  test_state_machine();
  // Exit the program
  return 0;
}"
wZWxTUN9,Model retorno pontualidade,ABruel,C#,Thursday 23rd of November 2023 12:51:36 PM CDT,"public class PontualidadeDataModel : IDataModel
{
    public DateTime DataHoraInicio;
    public EmpresaModel Empresa;
    public Guid CoordenacaoServicoId;
    public string Servico;
    public Entities.Linhas.LinhaModel Linha;
    public TimeSpan? TempoAtrasoAdiantado;
    public Entities.Veiculos.VeiculoModel Veiculo;
    public IEnumerable<PessoaModel> Tripulantes;
    public IEnumerable<SecaoModel> Secoes;
    public LocalModel Origem;
    public LocalModel Destino;
}
public class SecaoModel
{
    public string Localidade;
    public string Latitude;
    public string Longitude;
    public DateTime? SaidaProgramada;
    public DateTime? SaidaRealizada;
    public TimeSpan? TempoParada;
}

public abstract class Model<TEntity> where TEntity : Entity, new()
{
    public Guid? Id;
    public byte[] Timestamp;
}

public class LinhaModel : Model<Linha>
{
    public string Codigo;
    public string Descricao;
    public string Prefixo;
    public bool PermiteDobra;
    public Guid? FrotaBasicaId;
    public Guid TipoLinhaId;
    public Guid? ClasseLinhaId;
    public Guid EmpresaId;
}

public class VeiculoModel : Model<Veiculo>
{
    public string Codigo;
    public string Placa;
    public string Fabricacao;
    public string CodigoChassi;
    public Guid? ChassiId;
    public Guid? CarroceriaId;
    public Guid? BaseId;
    public LocalModel Base;
    public Guid FrotaId;
    public FrotaModel Frota;
    public Guid EmpresaId;
    public EmpresaModel Empresa;
    public Guid? ImagemId;
    public ImagemModel Imagem;
    public int? NumDocumentos;
}

public class FrotaModel : Model<Frota>
{
    public string Codigo;
    public string Descricao;
    public int Ordem;
    public int CapacidadePassageiros;
    public int Eixos;
    public float Autonomia;
    public float Custo;
    public string Cor;
}


public class EmpresaModel : Model<Empresa>
{
    public string Nome;
    public string Cnpj;
    public string Codigo;
    public string Endereco;
    public string EnderecoComplemento;
    public string EnderecoNumero;
    public string Bairro;
    public string Cep;
    public string Telefone;
    public string InscricaoEstadual;
    public string EMail;
    public Guid? CidadeId;
    public Guid? SindicatoId;
    public Guid? ImagemId;
    public Guid? EmpresaPaiId;
    public TipoEmpresa Tipo;
}

public enum TipoEmpresa
{
    MATRIZ = 1,
    FILIAL,
    TERCEIRIZADA
}


public class LocalModel : Model<Local>
{
    public string Codigo;
    public string Nome;
    public string Latitude;
    public string Longitude;
    public bool BaseOperacional;
    public string CriterioGestao;
    public Guid TipoLocalId;
    public Guid CidadeId;
    public Guid? BaseOperacionalVinculadaId;
}
"
HRqCdajs,Untitled,GravityBR,C,Thursday 23rd of November 2023 12:50:17 PM CDT,"#include ""lib.c""

int main(void){
	
	number nbx[MAX_NUMBERS];
	number delta, sum, prod, idle, test[] = {idle, delta, ZERO, ZERO, ZERO};
	FILE *fp;
	int lapse, aux = 0;
	char ctrl, lixo[100];
	
	for(int i=0; i<MAX_NUMBERS; i++){
		initNumberZERO(&nbx[i]);
	}
	initNumberZERO(&delta);
	initNumberONE(&idle);
	initNumberZERO(&sum);
	
	createSave(fp);
	loadSave(fp);
	
	overwrite(&idle, &saved_idle);
	overwrite(&sum, &saved_sum);
	
	do{
		if(!aux){
			delta.a = difftime(date_now, date_last);
			date_last = date_now;
			lapse = (int) delta.a;
			checkNumber(&delta);
			
			overwrite(&test[1], &delta);
			
			welcomeBack(lapse, test, &prod);
			
			overwrite(&nbx[MAX_NUMBERS-1], &prod);
			sumNumber(nbx, &sum);
			
			printf(""\n\n"");
			outputFormat(&sum);
			printf(""\n"");
		}
		
		fgets(lixo, 99, stdin);
		ctrl = lixo[0];
		time(&date_now);
		
		initNumberZERO(&delta);
		delta.a = difftime(date_now, date_last);
		date_last = date_now;
		lapse = (int) delta.a;
		checkNumber(&delta);
		
		overwrite(&test[1], &delta);
			
		prodNumber(test, &prod);
		
		overwrite(&nbx[MAX_NUMBERS-1], &prod);
		sumNumber(nbx, &sum);
		
		printf(""\n\n"");
		outputFormat(&sum);
		printf(""\n"");
		
		if(ctrl == '1'){
			idle.a *= 2;
			checkNumber(&idle);
			overwrite(&test[0], &idle);
		}
		
		aux++;
	} while(ctrl != '0');
	
	saveSave(fp);
	
	return 0;
}
"
TEVCeh5Y,Untitled,GravityBR,C,Thursday 23rd of November 2023 12:49:34 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include <time.h>

typedef enum{
	MAX_CHARS = 3,
	MAX_EXP = (26*26*26*(MAX_CHARS)),
	BASE = 10,
	IGNORE = 8, /* see comentary below */
	MAX_NUMBERS = 5
} magic_numbers;

/* 1 year = 60*60*24*365 = 31,536,000 = 3.15e7

 * so there is no point to try to add numbers
   like 1e20/s and 1e12/s

 * (it will take 3 years to have a 1e20 loss, but
   you should have 1e28 itens by now)
 */
 

/* 0 <= x < BASE^MAX_EXP */
typedef struct{
	double a;	/* a*BASE^exp */
	int exp;
} number;


void *aux_t;
time_t date_start = EOF, date_last = EOF, date_now = EOF;
const number ZERO = {0.0, 0}, ONE = {1.0, 0};
number saved_idle, saved_sum;

int maxXY(const int x, const int y){
	
	return (x + y + abs(x-y)) / 2;
}

int minXY(const int x, const int y){
	
	return (x + y - abs(x-y)) / 2;
}

void initNumberZERO(number *nb){
	
	nb->a = ZERO.a;
	nb->exp = ZERO.exp;
}

void initNumberONE(number *nb){
	
	nb->a = ONE.a;
	nb->exp = ONE.exp;
}

void overwrite(number *dst, const number *src){
	
	dst->a = src->a;
	dst->exp = src->exp;
}

bool isEqual(const number *nb1, const number *nb2){
	
	if((nb1->a == nb2->a) && (nb1->exp == nb2->exp)) return true;
	else return false;
}

/* EOF = invalid *number
 * 0 = invalid and changed to number ZERO
 * >0 = valid (return - 1 equals number of changes)
 */
int checkNumber(number *nb){
	
	if(nb == NULL) return EOF;
    
    int aux = 1;
    
    if(nb->a < 0 || nb->exp < 0 || nb->exp > MAX_EXP){
    	overwrite(nb, &ZERO);
    	return 0;
    }
    
    while(nb->a < 1){
    	nb->a *= BASE;
    	nb->exp--;
    	aux++;
    	
    	if(nb->exp < 0){
    		overwrite(nb, &ZERO);
    		return 0;
    	}
    }
    
    while(nb->a >= BASE){
    	nb->a /= BASE;
    	nb->exp++;
    	aux++;
        
        if(nb->exp > MAX_EXP){
        	overwrite(nb, &ZERO);
        	return 0;
        }
	}
	return aux;
}

/* EOF = number is too low and will be ignored
 * 0 = number not changed
 * >0 = number changed
 */
int convNumber(number *nb, const int new_exp){
    
    if(abs(nb->exp - new_exp) > IGNORE){
        return EOF;
    }
    
    int aux = 0;
    
    if(nb->exp > new_exp){
        nb->a *= pow(BASE, (nb->exp - new_exp));
        nb->exp = new_exp;
        aux++;
    } else{
        nb->a /= pow(BASE, (new_exp - nb->exp));
        nb->exp = new_exp;
        aux++;
    }
    
    return aux;
}

void sumNumber(number *src, number *dst){
    
    initNumberZERO(dst);
    
    int aux = 0;
    bool s[MAX_NUMBERS];
        
    for(int i=0; i<MAX_NUMBERS; i++) s[i] = true;
    
    for(int i=0; i<MAX_NUMBERS; i++){
        if(isEqual(&src[i], &ZERO)){
        	s[i] = false;
        } else if(checkNumber(&src[i]) == EOF){
            s[i] = false;
        } else{
        	aux = maxXY(aux, src[i].exp);
        }
    }
    
    aux = maxXY(aux, dst->exp);
    dst->exp = aux;
    
    for(int i=0; i<MAX_NUMBERS; i++){
        if(!isEqual(&src[i], &ZERO) && s[i] != false){
            if(convNumber(&src[i], aux) == EOF){
                s[i] = false;
            }
        }
    }
    
    for(int i=0; i<MAX_NUMBERS; i++){
        if(!isEqual(&src[i], &ZERO) && s[i] != false){
            dst->a += src[i].a;
        }
    }
    
	checkNumber(dst);
}

void prodNumber(number *src, number *dst){
	
    initNumberONE(dst);
    
    for(int i=0; i<MAX_NUMBERS; i++){
        if(checkNumber(&src[i]) == EOF){
        	continue;
        } else if(isEqual(&src[i], &ZERO)){
        	continue;
        } else{
            dst->a *= src[i].a;
            dst->exp += src[i].exp;
        }
    }
    
	checkNumber(dst);
}


void createSave(FILE *fp){
	
	if((fp = fopen(""save.SAVE"", ""ab+"")) == NULL){
		exit(1);
	}
	
	rewind(fp);
	
	if(fread(&aux_t, sizeof(time_t), 1, fp) == 1){
		fclose(fp);
		return;
	}
	
	date_last = time(&date_start);
	
	if(fwrite(&date_start, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&date_last, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&ONE, sizeof(number), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&ZERO, sizeof(number), 1, fp) != 1){
		exit(2);
	}
			
	fclose(fp);
	return;
}

void loadSave(FILE *fp){
	
	if((fp = fopen(""save.SAVE"", ""rb"")) == NULL){
		exit(1);
	}
	
	time(&date_now);
	
	if(fread(&date_start, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fread(&date_last, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fread(&saved_idle, sizeof(number), 1, fp) != 1){
		exit(2);
	}
	
	if(fread(&saved_sum, sizeof(number), 1, fp) != 1){
		exit(2);
	}
	
	fclose(fp);
}

void saveSave(FILE *fp){
	
	if((fp = fopen(""save.SAVE"", ""rb"")) == NULL){
		exit(1);
	}
	fclose(fp);
	
	if((fp = fopen(""save.SAVE"", ""wb+"")) == NULL){
		exit(1);
	}
	
	time(&date_last);
	if(fwrite(&date_start, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&date_last, sizeof(time_t), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&saved_idle, sizeof(number), 1, fp) != 1){
		exit(2);
	}
	
	if(fwrite(&saved_sum, sizeof(number), 1, fp) != 1){
		exit(2);
	}
			
	fclose(fp);
}

char convChar(const int i){
	
	switch(i){
		case 0:
			return 'A';
		case 1:
			return 'B';
		case 2:
			return 'C';
		case 3:
			return 'D';
		case 4:
			return 'E';
		case 5:
			return 'F';
		case 6:
			return 'G';
		case 7:
			return 'H';
		case 8:
			return 'I';
		case 9:
			return 'J';
		case 10:
			return 'K';
		case 11:
			return 'L';
		case 12:
			return 'M';
		case 13:
			return 'N';
		case 14:
			return 'O';
		case 15:
			return 'P';
		case 16:
			return 'Q';
		case 17:
			return 'R';
		case 18:
			return 'S';
		case 19:
			return 'T';
		case 20:
			return 'U';
		case 21:
			return 'V';
		case 22:
			return 'W';
		case 23:
			return 'X';
		case 24:
			return 'Y';
		case 25:
			return 'Z';
		default:
			return '\0';
	}
}

void outputFormat(number *nb){
	
	double a = nb->a;
	int exp = nb->exp, x, y, aux, temp;
	char symbols[MAX_CHARS + 1];
	
	x = exp / 3;
	y = exp % 3;
	
	for(int i=0; i<MAX_CHARS; i++){
		temp = MAX_CHARS - 1 - i;
		aux = x / ( (int) pow(26, temp));
		symbols[i] = convChar(aux);
		if(temp) x %= ( (int) pow(26, temp));
	}
	
	symbols[MAX_CHARS] = '\0';
	
	convNumber(nb, (exp - y));
	
	printf(""%lf %s"", nb->a, symbols);
}

void welcomeBack(int tm, number *src, number *dst){
	
	int d, h, m, s;
	
	d = tm / 86400;
	tm %= 86400;
	h = tm / 3600;
	tm %= 3600;
	m = tm / 60;
	tm %= 60;
	s = tm;
	
	prodNumber(src, dst);
	
	if(d){
		printf(""You were away for %d day(s), %d hour(s), %d minute(s), %d second(s)"", d, h, m, s);
	} else if(h){
		printf(""You were away for %d hour(s), %d minute(s), %d second(s)"", h, m, s);
	} else if(m){
		printf(""You were away for %d minute(s), %d second(s)"", m, s);
	} else if(s){
		printf(""You were away for %d second(s)"", s);
	}
	
	if(d || h || m || s){
		printf("" and got "");
		outputFormat(dst);
		printf("" itens\n"");
	}
}
"
bT88yswU,Frank Lee The Great,IMustRemainUnknown,Python,Thursday 23rd of November 2023 12:43:38 PM CDT,"song_dictionary = {
    'song1': {'title': 'Bad Day',
              'artist': 'Daniel Powter',
              'album': ['Daniel Powter'],
              'release_date': 2005,
              'genre': ['Pop']}
}


def add_song(song_title, song_artist, album, release_date, genre):
    dict_count = len(song_dictionary) + 1
    song_dictionary['song' + str(dict_count)] = {'title': song_title,
                                                 'artist': song_artist,
                                                 'album': [album],
                                                 'release_date': release_date,
                                                 'genre': [genre]}


def print_all_unique_genre():
    # Extracting unique genres
    unique_genres = set()
    for movie_info in song_dictionary.values():
        unique_genres.update(movie_info.get('genre', []))

    # Printing unique genres
    print('Unique Genres:', unique_genres)

def print_all_unique_albums():
    # Extracting unique genres
    unique_albums = set()
    for movie_info in song_dictionary.values():
        unique_albums.update(movie_info.get('album', []))

    # Printing unique genres
    print('Unique Albums:', unique_albums)


def print_album_songs():
    # Extracting unique genres
    unique_genres = set()
    for movie_info in song_dictionary.values():
        unique_genres.update(movie_info.get('genres', []))

    # Printing unique genres
    print('Unique Genres:', unique_genres)


def print_title_artist_date():
    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        artist = song_info['artist']
        release_date = song_info['release_date']
        print(f""{title}\t{artist}\t{release_date}"")


def print_song_released_after_2010():
    # Print song titles released after the year 2010
    for song_id, song_info in song_dictionary.items():
        title = song_info['title']
        release_date = song_info['release_date']

        # Check if the release year is known and greater than 2010
        if release_date > 2010:
            print(f""{title} (Released in {release_date})"")


print(song_dictionary)
print('--------------------------------------------------------------------------------------')
add_song('Adore You', 'Harry Styles', 'Fine Line', 2019, 'Funk, Disco, Pop Rock')
add_song('A Thousand Miles', 'Vanessa Cariton', 'Be Not Nobody', 2002, 'Pop')
add_song('Lover', 'Taylor Swift', 'Lover', 2019, 'Country, Indie Folk, Alternative Country')
print(song_dictionary)
print_all_unique_genre()
print_all_unique_albums()
print_title_artist_date()
print_song_released_after_2010()

"
Yru7BFyL,Untitled,Josif_tepe,C++,Thursday 23rd of November 2023 12:25:26 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <queue>
//#include <bits/stdc++.h>

using namespace std;
const int INF = 2e9;
const int maxn = 3e5 + 10;
typedef long long ll;
int n;
ll k;
vector<int> graph[maxn];
int a[maxn];
void brute_force() {
    int S = 0;

    for(int i = 0; i < k; i++) {
        vector<bool> visited(n + 1, false);
        visited[S] = true;
        queue<int> q;
        q.push(S);
        q.push(0);
        int max_dist = -INF;
        int next_node = -1;
        while(!q.empty()) {
            int node = q.front();
            q.pop();
            int dist = q.front();
            q.pop();
            if(a[node] - dist > max_dist and S != node) {
                max_dist = a[node] - dist;
                next_node = node;
            }
            if(a[node] - dist == max_dist and S != node) {
                next_node = min(next_node, node);
            }
            for(int neighbour : graph[node]) {
                if(!visited[neighbour]) {
                    visited[neighbour] = true;
                    q.push(neighbour);
                    q.push(dist + 1);
                }
            }
        }
        S = next_node;
        
    }
    cout << S + 1 << endl;
}
void solve_subtask2() {
    int S = 0;
    vector<int> cnt(n + 1, 0);
    vector<int> cycle;
    bool cycle_begin = false;
    int till_cycle = 0;
    for(int i = 0; i < 10000; i++) {
        
        vector<bool> visited(n + 1, false);
        visited[S] = true;
        int next_node = -1, max_dist = -INF;
        
        queue<int> q;
        q.push(S);
        q.push(0);
        cnt[S]++;
        if(cnt[S] == 2) {
            cycle_begin = true;
//            cout << S + 1 << endl;
        }
        
        if(cycle_begin) {
            cycle.push_back(S);
        }
        else {
            till_cycle++;
        }
        while(!q.empty()) {
            int node = q.front();
            q.pop();
            int dist = q.front();
            q.pop();
            
            if(a[node] - dist > max_dist and S != node) {
                max_dist = a[node] - dist;
                next_node = node;
            }
            if(a[node] - dist == max_dist and S != node) {
                next_node = min(next_node, node);
            }
            for(int neighbour : graph[node]) {
                if(!visited[neighbour]) {
                    visited[neighbour] = true;
                    q.push(neighbour);
                    q.push(dist + 1);
                }
            }
        }
        S = next_node;
        if(cycle_begin and S == cycle[0]) {
//            for(int x : cycle) {
//                cout << x + 1 << "" "" ;
//            }
            break;
        }
    }
//    cout << endl;
//    cout << ""till: "" << till_cycle - cycle.size() - 1<< endl;
//    cout << cycle.size() << endl;
    till_cycle =  till_cycle - cycle.size() - 1;
    k -= till_cycle;
//    cout << k << endl;
    
    cout << cycle[(k + 1) % (ll) cycle.size()] + 1 << endl;
}
int main()
{
    ios::sync_with_stdio(false);
    cin >> n >> k;
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    
    for(int i = 1; i < n; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    
    if(n <= 1000 and k <= 1000) {
        brute_force();
        return 0;
    }
    
    if(n <= 1000) {
        solve_subtask2();
        return 0;
    }
    return 0;
}
"
MgvduwPK,rabbitmq test scraper,DooD13Z,Python,Thursday 23rd of November 2023 12:21:34 PM CDT,"from time import sleep
from ticketsmgmt.core.utils import split_list_to_chunks_by_n
from ticketsmgmt.event.models import Event
import json
import logging
from constance import config
from datetime import datetime
from django.conf import settings
from django.db.models import Q
from django.utils import timezone
from ticketsmgmt.event.tasks import schedule_spider
logger = logging.getLogger(""ticketsmgmt.event.tasks"")


start = datetime.now()

every = ""30""
period = ""seconds""
now = timezone.now()
events = Event.objects.filter(
    periodic_interval__every=every,
    periodic_interval__period=period,
    is_archived=False,
    event_scraper_name='TicketMaster'
)
events = events.filter(
    Q(event_date_time__isnull=True) | Q(event_date_time__gte=now)
)
events = events.filter(Q(paused_until__isnull=True) | Q(paused_until__lte=now))


def run_scrapy(
    events, force_event_details_update=False, via_rabbitmq=False, is_tasks4=False, n=100
):
    """"""
    Currently TM is the only spider that supports multi url scrape. After other
    scrapers will have this feature it will be the same method for all scrapers.
    """"""
    scheduling_data = []
    scheduling_data_tm = []
    scheduled_events_ids = []
    for event in events:
        if not event.is_scrape_allowed():
            continue

        if event.event_scraper_name in [""TicketMaster"", ""TicketMasterRabbitMQ""]:
            scheduling_data_tm.append(
                {
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                    ""discovery_id"": event.tm_discovery_id,
                    ""force_event_details_update"": force_event_details_update,
                }
            )
            logger.debug(
                ""TM event %s was queued for scraping, discovery ID - %s"",
                event.event_url,
                event.tm_discovery_id,
            )
        else:
            scheduling_data.append(
                {
                    ""spider_name"": event.event_scraper_name,
                    ""url"": event.event_url,
                    ""tixt_event_id"": event.id,
                }
            )
            logger.debug(""Event %s was queued for scraping."", event.event_url)
        scheduled_events_ids.append(event.id)

    scrapy_id = 0
    max_scrapy_id = len(settings.SCRAPYD_SERVERS.copy())
    for data in scheduling_data:
        scrapyd_server = settings.SCRAPYD_SERVERS.copy()[scrapy_id]
        if is_tasks4:
            scrapyd_server = ""http://192.168.50.38:6800""
        try:
            schedule_spider(
                scrapyd_server,
                settings.SCRAPYD_PROJECT,
                data[""spider_name""],
                url=data[""url""],
                tixt_event_id=data[""tixt_event_id""],
            )
            logger.debug(
                ""Scheduled spider for event %s, server - %s."",
                data[""url""],
                scrapyd_server,
            )
            scrapy_id += 1
            if scrapy_id >= max_scrapy_id:
                scrapy_id = 0
        except Exception as e:
            logger.error(""Could not schedule spider"", exc_info=True)

    # TM schedule multi event
    schedule_chunks = split_list_to_chunks_by_n(scheduling_data_tm, chunk_size=n)

    scrapy_id = 0
    spider = ""TicketMaster""
    if via_rabbitmq:
        spider = ""TicketMasterRabbitMQ""

    for chunk in schedule_chunks:
        if chunk:
            scrapyd_server = settings.SCRAPYD_SERVERS.copy()[scrapy_id]
            if is_tasks4:
                scrapyd_server = ""http://192.168.50.38:6800""
            try:
                schedule_spider(
                    scrapyd_server,
                    settings.SCRAPYD_PROJECT,
                    spider,
                    events=json.dumps(chunk),
                    filter_out_offers_by_name=config.TM_FILTER_OUT_OFFERS_BY_NAME,
                )
                logger.debug(
                    ""Scheduled bulk of %s TM events, server - %s."",
                    len(chunk),
                    scrapyd_server,
                )
            except Exception as e:
                logger.error(
                    f""Could not schedule TM spider chunk on the server {scrapyd_server}"",
                    exc_info=True,
                )
            scrapy_id += 1
            if scrapy_id >= max_scrapy_id:
                scrapy_id = 0
    print(len(scheduled_events_ids))


run_scrapy(events, n=10)"
z3DyPJuw,Untitled,Sreekar_0125,C++,Thursday 23rd of November 2023 12:15:50 PM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>     
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 2e6;
const int MOD = 1e9 + 7;


#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif


template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
vb sieve(N + 5, true);
vi primes;
void gensieve()
{
    sieve[0] = sieve[1] = false;
    for (int i = 2; i <= sqrt(N); i++)
    {
        if (sieve[i])
        {
            for (int j = i * i; j <= N; j += i)
                sieve[j] = false;
        }
    }
    for (int i = 2; i <= N; i++)
    {
        if (sieve[i])
            primes.pb(i);
    }
}
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while(b)
    {
        if(b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;
        
        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

void solve()
{
    int n;
    cin >> n;
    
    int l = sqrtl(n);
    mi pf;
    for(auto p : primes)
    {
        if(p > l) break;
        while (n % p == 0) n /= p, pf[p]++;
    }
    pf[n] += n >= 2;

    int ans = 0;

    for(auto &[p, x] : pf)
    {
        int y = 1;
        while(x >= y) x -= y, y += 1, ans += 1;
    }

    println(ans);
}

signed main()
{
    init_code();
    fast();
    int t = 1;
    gensieve();
    // cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
"
b68B0sF2,Untitled,Sreekar_0125,C++,Thursday 23rd of November 2023 12:14:29 PM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define cerr   \
    if (false) \
    cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 2e5;
const int MOD = 1e9 + 7;

#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x) \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif

template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while (b)
    {
        if (b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;

        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE

    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

int ubnd(vi &v, int x)
{
    int n = v.size();
    int l = 0, h = n - 1;

    int ans = n;
    while (l <= h)
    {
        int m = (l + h) >> 1;
        if (v[m] > x)
        {
            ans = m;
            h = m - 1;
        }
        else
        {
            l = m + 1;
        }
    }
    return ans;
}

class MST
{
public:
    int n;
    vi values;
    vector<vi> tree;
    MST(vi &values)
    {
        n = values.size();
        tree.resize(4 * n);
        this->values = values;
        build(0, 0, n - 1);
    }
    void build(int ind, int low, int high)
    {
        if (low == high)
        {
            tree[ind].pb(values[low]);
            return;
        }

        int mid = (low + high) >> 1;

        build(2 * ind + 1, low, mid);
        build(2 * ind + 2, mid + 1, high);

        merge(all(tree[2 * ind + 1]), all(tree[2 * ind + 2]), back_inserter(tree[ind]));
    }
    int query(int ind, int low, int high, int l, int r, int val)
    {
        if (low >= l && high <= r)
        {
            int x = ubnd(tree[ind], val);
            return tree[ind].size() - x;
        }
        if (high < l || low > r)
        {
            return 0;
        }
        int mid = (low + high) >> 1;
        int left = query(2 * ind + 1, low, mid, l, r, val);
        int right = query(2 * ind + 2, mid + 1, high, l, r, val);
        return left + right;
    }
};

vi Tree[N], tin(N), tout(N), flat;

int timer = 0;
void dfs(int par, int node)
{
    flat.pb(node);
    tin[node] = timer++;

    for (auto i : Tree[node])
    {
        if (i != par)
            dfs(node, i);
    }

    flat.pb(node);
    tout[node] = timer++;
}

void solve()
{
    int n;
    cin >> n;

    vi value(n + 1);
    for (int i = 1; i <= n; i++)
    {
        cin >> value[i];
    }

    for (int i = 2; i <= n; i++)
    {
        int x;
        cin >> x;

        Tree[i].pb(x);
        Tree[x].pb(i);
    }
    dfs(-1, 1);

    for (int i = 0; i < flat.size(); i++)
    {
        flat[i] = value[flat[i]];
    }
    MST mst(flat);

    for (int i = 1; i <= n; i++)
    {
        println(mst.query(0, 0, flat.size() - 1, tin[i], tout[i], value[i]) / 2);
    }
}

signed main()
{
    fast();
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
"
Yt9Py9iN,Untitled,_Lucifer_,C#,Thursday 23rd of November 2023 11:44:04 AM CDT,"public static unsafe ServerSockets.Packet ActionPick(this ServerSockets.Packet stream, uint UID, ushort dwparam2, ushort timer, string text)
        {
            stream.InitWriter();
            stream.Write(UID); // 4
            stream.Write(220); // 8
            stream.Write(0); // 12
            stream.Write(Extensions.Time32.Now.GetHashCode()); // 16
            stream.Write((ushort)ActionType.Pick); // 20
            stream.Write(dwparam2); // 22
            stream.ZeroFill(8); // 24
            stream.Write(timer); //28
            stream.ZeroFill(3); // 30
            stream.Write(text); // 34
            stream.Finalize(GamePackets.DataMap);
            return stream;
        }
        public static unsafe void Action(this ServerSockets.Packet stream, ActionQuery* pQuery)
        {
            stream.ReadUnsafe(pQuery, sizeof(ActionQuery));
        }
        public static unsafe ServerSockets.Packet ActionCreate(this ServerSockets.Packet stream, ActionQuery* pQuery)
        {
            stream.InitWriter();
            stream.WriteUnsafe(pQuery, sizeof(ActionQuery));
            stream.Finalize(GamePackets.DataMap);
            return stream;
        }
        public static unsafe ServerSockets.Packet ActionCreateWithString(this ServerSockets.Packet stream, ActionQuery* pQuery, params string[] str)
        {
            stream.InitWriter();
            stream.WriteUnsafe(pQuery, sizeof(ActionQuery));
            stream.SeekBackwards(1);
            stream.Write(str);
            stream.Finalize(GamePackets.DataMap);
            return stream;
        }"
zXHmv3DJ,03. Pipes,Spocoman,C++,Thursday 23rd of November 2023 11:06:43 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int pipeCount;
    cin >> pipeCount;

    int* checkup = new int[pipeCount];
    int* installation = new int[pipeCount];

    for (int i = 0; i < pipeCount; i++) {
        cin >> checkup[i];
    }

    for (int i = 0; i < pipeCount; i++) {
        cin >> installation[i];
    }

    for (int i = 0; i < pipeCount; i++) {
        cout << installation[i] / (installation[i] - checkup[i]) << ' ';
    }
    return 0;
}"
RjTN3PSY,Untitled,parv28,C++,Thursday 23rd of November 2023 10:50:34 AM CDT,"class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        queue<string> q;
        set<string> visited,words;
        unordered_map<string, int> dist;
        for(string s:wordList)
            words.insert(s);
        visited.insert(beginWord);
        dist[beginWord] = 0;
        q.push(beginWord);
        int res=0;
        while(!q.empty()){
            string curr_string = q.front();
            q.pop();
            string neighbour;
            for(int i=0;i<curr_string.size();i++){
                neighbour = curr_string;
                for(int j='a';j<='z';j++){
                    neighbour[i]=j;
                    if(words.count(neighbour) and !visited.count(neighbour)){
                        q.push(neighbour);
                        visited.insert(neighbour);
                        dist[neighbour] = dist[curr_string] + 1;
                    }
                }
            }
        }
        if(dist.count(endWord) == 0) {
            // endWord is not present
            return 0;
        }
        return dist[endWord] + 1;
    }
};"
fjiCQSa4,lab_8,Valen_IGIG,Python,Thursday 23rd of November 2023 10:48:59 AM CDT,"import cv2

# Загрузка предварительно обученного каскада для обнаружения лиц
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Захват видео с веб-камеры
cap = cv2.VideoCapture(0)  # 0 означает первую камеру, можно изменить на другой индекс, если у вас есть несколько камер

while True:
    # Считывание кадра из видеопотока
    ret, frame = cap.read()

    # Преобразование кадра в оттенки серого (эффективнее для обработки)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Обнаружение лиц на кадре
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Рисование прямоугольников вокруг обнаруженных лиц
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)

    # Отображение результата
    cv2.imshow('Video', frame)

    # Выход из цикла по нажатию клавиши 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Освобождение ресурсов
cap.release()
cv2.destroyAllWindows()
"
zWVs2eTi,bankClient,Rayanis55,Lua,Thursday 23rd of November 2023 10:00:40 AM CDT,"-- Variable
 
local receiverID = 14
 
-- Connect Bank
 
rednet.open(""top"")
local message= ""getBankName""
 
rednet.send(receiverID, message)
local senderID,bankName = rednet.receive()
print(bankName)
print(""Power by VenorixSoft"")
print("""")
 
-- Connexion ID
 
write(""Please enter your username: "")
idu = read()
local message= ""TrueID""
info = idu
rednet.send(receiverID, message, info)
 
local senderID,message = rednet.receive()
if message == ""TrueID"" then
    print(""Username correct !"")
    write(""Please enter your password: "")
    password = read(""*"")
    info = password
    message = ""TruePass""
    rednet.send(receiverID, message, info)
    local senderID,message,user,money = rednet.receive()
    if message == ""TruePass"" then
        print(""Mot de passe correct"")
        print(""Bienvenue "" ..user.. ""vous avez"")
        print(money)
    else
        os.reboot()
    end
else
    print(""Username incorrect !"")
    os.reboot()
end"
P8va6dHt,02. Brackets,Spocoman,C++,Thursday 23rd of November 2023 09:46:30 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string expression,
        openBrackets = ""([{"",
        closedBrackets = "")]}"";
    cin >> expression;

    if (expression.length() % 2 == 0) {
        while (expression.length() > 0 && openBrackets.length() > 0) {
            for (size_t i = 1; i < expression.length(); i++) {
                if (expression[i - 1] == openBrackets[0] && expression[i] == closedBrackets[0]) {
                    expression.erase(i - 1, 2);
                    i = 0;
                }
            }
            openBrackets.erase(0, 1);
            closedBrackets.erase(0, 1);
        }
    }

    cout << (expression.length() > 0 ? ""invalid"" : ""valid"") << endl;
    return 0;
}"
bNLK4b1x,c-sp-allgmos.php,Rachmannh,PHP,Thursday 23rd of November 2023 09:43:05 AM CDT,"<div class=""card shadow mb-4"">
    <!-- Card Header - Dropdown -->
    <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
        <h6 class=""m-0 font-weight-bold text-primary"">
            Available Process
        </h6>
    </div>
    <!-- Card Body -->
    <div class=""card-body"">
        <div class=""chart-area"">
            <?php if (empty($allgmos)) : ?>
                <p>Tidak Ada Data</p>
            <?php else : ?>
                <table class=""table text-center"">
                    <thead>
                        <tr>
                            <th scope=""col"">Process</th>
                            <th scope=""col"">Process Name</th>
                            <th scope=""col"">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($allgmos as $key => $datas) : ?>
                            <tr>
                                <th scope=""row""><?php echo $datas['GMOID']; ?></th>
                                <td><?php echo $datas['GMOName']; ?></td>
                                <td>
                                    <form method=""post"" action="""">
                                        <input type=""hidden"" name=""GMOID"" value=""<?php echo $datas['GMOID']; ?>"">
                                        <button type=""submit"" class=""btn btn-success btn-sm"" name=""addBtn"" <?php if ($buttonDisabled) echo ""disabled""; ?>>
                                            <i class=""fas fa-plus""></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        <?php endforeach ?>
                    </tbody>
                </table>
            <?php endif ?>
        </div>
    </div>
</div>"
cbWCimVU,Advanced Django Model Techniques 1-3,horozov86,Python,Thursday 23rd of November 2023 09:11:06 AM CDT,"# 1. Customer

def validator(value):
    for char in value:
        if not char.isalpha() or not char.isspace():
            raise ValidationError(""Name can only contain letters and spaces"")
            
def phone_validator(value):
    if not re.match(r'^\+359\d{9}$', value):
        raise ValidationError(""Phone number must start with a '+359' followed by 9 digits"")
    

class Customer(models.Model):
    name = models.CharField(max_length=100, validators=[validator])
    age = models.PositiveIntegerField(validators=[MinValueValidator(18), message=""Age must be greater than 18""])
    email = models.EmailFiled(error_message = {'invalid': ""Enter a valid email address""})
    phone_number = models.CharField(max_length=13, validatiors=[phone_validator])
    website_url = models.URLField(error_message = {'invalid': ""Enter a valid URL""})
    
# 2.	Media


class BaseMedia(models.Model):
    title = models.CharField(max_length=100)
    description = models.TextField()
    genre = models.CharField(max_length=50)
    created_at = models.DateTimeField(auto_now_add=True)
    
    class Meta:
        abstract= True
        ordering = [""-created_at"", ""title""]
        
        
class Book(BaseMedia):
    author = models.CharField(max_length=100, validators=[MinLengthValidator(5, message=""Author must be at least 5 characters long"")])
    isbn = models.CharField(max_length=20, unique=True, validators=[MinLengthValidator(6, message=""ISBN must be at least 6 characters long"")])
    
    class Meta(BaseMedia.Meta):
        verbose_name = ""Model Book""
        verbose_name_plural = ""Models of type - Book""
    
class Movie(BaseMedia):
    director = models.CharField(max_length=100, validators=[MinLengthValidator(8, message=""Director must be at least 8 characters long"")])
    
    class Meta(BaseMedia.Meta):
        verbose_name = ""Model Movie""
        verbose_name_plural = ""Models of type - Movie""
    
    
class Music(BaseMedia):
    artist = models.CharField(max_length=100, validators=[MinLengthValidator(9, message=""Artist must be at least 9 characters long"")])
    
    class Meta(BaseMedia.Meta):
        verbose_name = ""Model Music""
        verbose_name_plural = ""Models of type - Music ""
        
        
# 3.	Digital Products

class Product(models.Model):
    name = models.CharField(max_length=100)
    price = models.DecimaField(max_digits=10, decimal_places=2)
    
    def calculate_tax(self):
        return self.price * Decimal(0.08)
        # да проверя без Decimal дали минава
        
    def calculate_shipping_cost(weight: Decimal):
        return weight * Decimal(2.00)
        
    def format_product_name(self):
        return f""Product: {self.name}""
        
    
# когато моделът Child споделя същата таблица като Parent class-a предоставя допълнителна функционалност, то той е class Meta: е proxy

class DiscountedProduct(Product):
    class Meta:
        proxy = True
        
    def calculate_price_without_discount(self):
        return self.price  * Decimal(1.20)
        
    def calculate_tax(self):
        return self.price * Decimal(0.05)
        # да проверя без Decimal дали минава
        
    def calculate_shipping_cost(weight: Decimal):
        return weight * Decimal(1.50)
        
    def format_product_name(self):
        return f""Discounted Product: {self.name}"""
GCR0Kub5,avatarViewer.js,Professional,JavaScript,Thursday 23rd of November 2023 08:56:05 AM CDT,"'use strict';
define('avatarControl', [], function () {
    return window.AVATAR;
});

define('avatarViewer', ['jquery', 'avatarControl', 'avatarViewer.prerequisites'], function ($, avatarControl, prerequisites) {
    var avatarCanvas = $('.AvatarCanvas')[0],
        currentEquippingAsset = null,
        canEquipAsset = false;
    if (window.location.protocol == 'https:') {
        avatarControl.SetAssetsUrlRoot(""https://download-ssl.xboxlive.com/"");
    } else {
        avatarControl.SetAssetsUrlRoot(""http://download.xboxlive.com/"");
    }

    $('.zoomToBody').click(function () {
        avatarControl.ZoomToPreset(0);
    });

    $('.zoomToHead').click(function () {
        avatarControl.ZoomToPreset(1);
    });

    $('.zoomToUpper').click(function () {
        avatarControl.ZoomToPreset(2);
    });

    $('.zoomToLower').click(function () {
        avatarControl.ZoomToPreset(3);
    });

    function setLoading(isLoading) {
        $('.LoadingAvatarContainer').toggle(isLoading);
    }

    function handleAvatarLoaded() {
        if (window.onAvatarLoadingFinished) {
            window.onAvatarLoadingFinished();
        }
    }

    function handleGenderMismatchError() {
        if (window.onAvatarGenderMismatch) {
            window.onAvatarGenderMismatch();
        }
    }

    function handleUserWithNoAvatar() {
        if (window.onUserWithNoAvatar) {
            window.onUserWithNoAvatar();
        }
    }

    function handleLoadAvatarError() {
        if (window.onAvatarEditorGenericError) {
            window.onAvatarEditorGenericError(prerequisites.strings.loadAvatarError);
        }
    }

    function handleEquipAssetError() {
        if (window.onAvatarEditorGenericError) {
            window.onAvatarEditorGenericError(prerequisites.strings.equipAssetError);
        }
    }

    function equip(assetId) {
        var deferred = $.Deferred();

        $(avatarCanvas).show();
        setLoading(true);

        if (!canEquipAsset || currentEquippingAsset === assetId) {
            return deferred.reject();
        } else {
            currentEquippingAsset = assetId;
            avatarControl.EquipAsset(assetId).always(function () {
                currentEquippingAsset = null;
                setLoading(false);
            }).done(function () {
                deferred.resolve();
            }).fail(function (err) {
                switch (err.errorType) {
                    case 'GenderMismatchError':
                        handleGenderMismatchError();
                        break;
                    default:
                        handleEquipAssetError();
                        break;
                }
                deferred.reject(err);
            });
        }
        return deferred.promise();
    }

    function initialize(event, assetId) {
        var deferred = $.Deferred();
        prerequisites.getManifest().then(function (avatarManifest) {
            if (!avatarManifest) {
                handleUserWithNoAvatar();
                deferred.reject();
            }

            setLoading(true);
            var presetAsset = assetId || prerequisites.asset;
            if (presetAsset) {
                avatarControl.LoadManifest(avatarManifest, avatarCanvas);
                canEquipAsset = true;
                equip(presetAsset).done(function () {
                    handleAvatarLoaded();
                    deferred.resolve();
                }).fail(function (err) {
                    deferred.reject(err);
                });
            } else {
                avatarControl.LoadAvatar(avatarManifest, avatarCanvas).done(function () {
                    canEquipAsset = true;
                    handleAvatarLoaded();
                    setLoading(false);
                    deferred.resolve();
                }).fail(function (err) {
                    switch (err.errorType) {
                        case 'BabylonNotSupportedError':
                        case 'BodyMergeError':
                        case 'HeadMergeError':
                        case 'ImportMeshError':
                        case 'ShadersError':
                        default:
                            handleLoadAvatarError();
                            break;
                    }
                    $(avatarCanvas).hide();
                    deferred.reject(err);
                });
            }
        }).fail(function () {
            handleUserWithNoAvatar();
            deferred.reject();
        });
        
        return deferred.promise();
    }

    return {
        initialize: initialize,
        equip: equip
    }
});"
04rBjPrt,CatCrush,yocky12k,JSON,Thursday 23rd of November 2023 08:29:44 AM CDT,"{""pesan_aktivasi"":""Silakan Chat Telegram https://t.me/yoc12k Untuk Melakukan Aktivasi Lisensi, 100% Gratis"",
""lisensi"":[
""7B64B9AFEFB142FC3D66315BBEC92F0D"",
""DB7D8DE9A1B04B6201AE7621336B9BFB""
],
""cc"":{""status"":""online"",""msg"":""""}
}"
Rhtxvibt,Blocks select advanced,longnguyenwp,PHP,Thursday 23rd of November 2023 08:26:34 AM CDT,"// Register a block for Gutenberg
add_filter( 'rwmb_meta_boxes', function( $meta_boxes ) {
	$meta_boxes[] = [
		'title' => 'VIEW Post Picker',
		'id'    => 'view-post-picker',
		'type'  => 'block', // Important.
		'icon'  => 'admin-post', // Or you can set a custom SVG if you don't like Dashicons
		'category' => 'text',
		//'context' => 'side', // The block settings will be available on the right sidebar.
		'mode' => 'edit', //The default mode of the block: edit to make it shows the edit fields when loaded, preview (default) to show the rendered HTML when loaded.
		//'render_template' => get_stylesheet_directory() . '/blocks/hero/template.php', // The PHP template that renders the block.
		//'enqueue_style'   => get_stylesheet_directory_uri() . '/blocks/hero/style.css', // CSS file for the block.

		// Now register the block fields.
		'fields' => [
			[
				'id'   => 'vpp_post',
				'type' => 'post',
				'name' => 'Post or Page?',
				'post_type' => ['post','page'],
				'field_type'  => 'select_advanced',
			],
			[
				'id'   => 'vpp_attachment',
				'type' => 'post',
				'name' => 'Attachment?',
				'post_type' => 'attachment',
				'field_type'  => 'select_advanced',
				'query_args'  => [
					'post_status'    => ['publish','inherit'],
					'posts_per_page' => - 1,
				],
			],
		],
	];
	return $meta_boxes;
});"
sGN0jgTi,index.php,Rachmannh,PHP,Thursday 23rd of November 2023 08:26:08 AM CDT,"<?php
include './koneksi.php';

// Ini yang table sebelah kiri
$availSelect = query(""SELECT * FROM available_proccess"");

// Nah ini Left Join dari 2 table -> yaitu table available_proccess sama orders
$selectedProcess = query(""SELECT *
FROM orders
LEFT JOIN available_proccess ON orders.id_select = available_proccess.id_avail
ORDER BY orders.id_select;"");

$buttonDisabled = false; // Inisialisasi nilai default

if ($_SERVER[""REQUEST_METHOD""] == ""POST"" && isset($_POST[""addBtn""])) {
  $processId = $_POST[""processId""];

  // Check if the selected item already exists in the orders table
  $checkQuery = ""SELECT * FROM orders WHERE selected_item = '$processId'"";
  $result = mysqli_query($con, $checkQuery);

  if (mysqli_num_rows($result) > 0) {
    // Item already exists, display alert using PHP
    echo ""<script>alert('Data Berhasil Ditambah');</script>"";
  } else {
    // Item does not exist, proceed with the insertion
    $queryInsert = ""INSERT INTO orders (selected_item) SELECT id_avail FROM available_proccess WHERE id_avail = '$processId'"";
    mysqli_query($con, $queryInsert);

    if (mysqli_affected_rows($con) > 0) {
      // Item added successfully, display alert using PHP
      echo ""<script>alert('Item added successfully');</script>"";

      // Redirect to the same page
      header(""Location: index.php"");
      exit;
    } else {
      // Error adding item
      echo ""Error adding item"";
    }
  }

  // Set buttonDisabled to true to disable the button
  $buttonDisabled = true;
}
?>
<!DOCTYPE html>
<html lang=""en"">

<head>
  <meta charset=""utf-8"" />
  <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"" />
  <meta name=""description"" content="""" />
  <meta name=""author"" content="""" />

  <title>SB Admin 2 - Dashboard</title>

  <!-- Custom fonts for this template-->
  <link href=""vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"" />
  <link href=""https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"" rel=""stylesheet"" />

  <!-- Custom styles for this template-->
  <link href=""css/sb-admin-2.min.css"" rel=""stylesheet"" />
</head>

<body id=""page-top"">
  <!-- Page Wrapper -->
  <div id=""wrapper"">
    <!-- Sidebar -->
    <ul class=""navbar-nav bg-gradient-primary sidebar sidebar-dark accordion"" id=""accordionSidebar"">
      <!-- Sidebar - Brand -->
      <a class=""sidebar-brand d-flex align-items-center justify-content-center"" href=""index.html"">
        <div class=""sidebar-brand-icon rotate-n-15"">
          <i class=""fas fa-laugh-wink""></i>
        </div>
        <div class=""sidebar-brand-text mx-3"">SB Admin <sup>2</sup></div>
      </a>

      <!-- Divider -->
      <hr class=""sidebar-divider my-0"" />

      <!-- Nav Item - Dashboard -->
      <li class=""nav-item active"">
        <a class=""nav-link"" href=""index.html"">
          <i class=""fas fa-fw fa-tachometer-alt""></i>
          <span>Dashboard</span></a>
      </li>

      <!-- Divider -->
      <hr class=""sidebar-divider"" />

      <!-- Heading -->
      <div class=""sidebar-heading"">Interface</div>

      <!-- Nav Item - Pages Collapse Menu -->
      <li class=""nav-item"">
        <a class=""nav-link collapsed"" href=""#"" data-toggle=""collapse"" data-target=""#collapseTwo"" aria-expanded=""true"" aria-controls=""collapseTwo"">
          <i class=""fas fa-fw fa-cog""></i>
          <span>Components</span>
        </a>
        <div id=""collapseTwo"" class=""collapse"" aria-labelledby=""headingTwo"" data-parent=""#accordionSidebar"">
          <div class=""bg-white py-2 collapse-inner rounded"">
            <h6 class=""collapse-header"">Custom Components:</h6>
            <a class=""collapse-item"" href=""buttons.html"">Buttons</a>
            <a class=""collapse-item"" href=""cards.html"">Cards</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Utilities Collapse Menu -->
      <li class=""nav-item"">
        <a class=""nav-link collapsed"" href=""#"" data-toggle=""collapse"" data-target=""#collapseUtilities"" aria-expanded=""true"" aria-controls=""collapseUtilities"">
          <i class=""fas fa-fw fa-wrench""></i>
          <span>Utilities</span>
        </a>
        <div id=""collapseUtilities"" class=""collapse"" aria-labelledby=""headingUtilities"" data-parent=""#accordionSidebar"">
          <div class=""bg-white py-2 collapse-inner rounded"">
            <h6 class=""collapse-header"">Custom Utilities:</h6>
            <a class=""collapse-item"" href=""utilities-color.html"">Colors</a>
            <a class=""collapse-item"" href=""utilities-border.html"">Borders</a>
            <a class=""collapse-item"" href=""utilities-animation.html"">Animations</a>
            <a class=""collapse-item"" href=""utilities-other.html"">Other</a>
          </div>
        </div>
      </li>

      <!-- Divider -->
      <hr class=""sidebar-divider"" />

      <!-- Heading -->
      <div class=""sidebar-heading"">Addons</div>

      <!-- Nav Item - Pages Collapse Menu -->
      <li class=""nav-item"">
        <a class=""nav-link collapsed"" href=""#"" data-toggle=""collapse"" data-target=""#collapsePages"" aria-expanded=""true"" aria-controls=""collapsePages"">
          <i class=""fas fa-fw fa-folder""></i>
          <span>Pages</span>
        </a>
        <div id=""collapsePages"" class=""collapse"" aria-labelledby=""headingPages"" data-parent=""#accordionSidebar"">
          <div class=""bg-white py-2 collapse-inner rounded"">
            <h6 class=""collapse-header"">Login Screens:</h6>
            <a class=""collapse-item"" href=""login.html"">Login</a>
            <a class=""collapse-item"" href=""register.html"">Register</a>
            <a class=""collapse-item"" href=""forgot-password.html"">Forgot Password</a>
            <div class=""collapse-divider""></div>
            <h6 class=""collapse-header"">Other Pages:</h6>
            <a class=""collapse-item"" href=""404.html"">404 Page</a>
            <a class=""collapse-item"" href=""blank.html"">Blank Page</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Charts -->
      <li class=""nav-item"">
        <a class=""nav-link"" href=""charts.html"">
          <i class=""fas fa-fw fa-chart-area""></i>
          <span>Charts</span></a>
      </li>

      <!-- Nav Item - Tables -->
      <li class=""nav-item"">
        <a class=""nav-link"" href=""tables.html"">
          <i class=""fas fa-fw fa-table""></i>
          <span>Tables</span></a>
      </li>

      <!-- Divider -->
      <hr class=""sidebar-divider d-none d-md-block"" />

      <!-- Sidebar Toggler (Sidebar) -->
      <div class=""text-center d-none d-md-inline"">
        <button class=""rounded-circle border-0"" id=""sidebarToggle""></button>
      </div>
    </ul>
    <!-- End of Sidebar -->

    <!-- Content Wrapper -->
    <div id=""content-wrapper"" class=""d-flex flex-column"">
      <!-- Main Content -->
      <div id=""content"">
        <!-- Topbar -->
        <nav class=""navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"">
          <!-- Sidebar Toggle (Topbar) -->
          <button id=""sidebarToggleTop"" class=""btn btn-link d-md-none rounded-circle mr-3"">
            <i class=""fa fa-bars""></i>
          </button>

          <!-- Topbar Navbar -->
          <ul class=""navbar-nav ml-auto"">
            <!-- Nav Item - User Information -->
            <li class=""nav-item dropdown no-arrow"">
              <a class=""nav-link dropdown-toggle"" href=""#"" id=""userDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                <span class=""mr-2 d-none d-lg-inline text-gray-600 small"">Douglas McGee</span>
                <img class=""img-profile rounded-circle"" src=""img/undraw_profile.svg"" />
              </a>
              <!-- Dropdown - User Information -->
              <div class=""dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""userDropdown"">
                <a class=""dropdown-item"" href=""#"">
                  <i class=""fas fa-user fa-sm fa-fw mr-2 text-gray-400""></i>
                  Profile
                </a>
                <a class=""dropdown-item"" href=""#"">
                  <i class=""fas fa-cogs fa-sm fa-fw mr-2 text-gray-400""></i>
                  Settings
                </a>
                <a class=""dropdown-item"" href=""#"">
                  <i class=""fas fa-list fa-sm fa-fw mr-2 text-gray-400""></i>
                  Activity Log
                </a>
                <div class=""dropdown-divider""></div>
                <a class=""dropdown-item"" href=""#"" data-toggle=""modal"" data-target=""#logoutModal"">
                  <i class=""fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400""></i>
                  Logout
                </a>
              </div>
            </li>
          </ul>
        </nav>
        <!-- End of Topbar -->

        <!-- Begin Page Content -->
        <div class=""container-fluid"">
          <!-- Page Heading -->
          <div class=""d-sm-flex align-items-center justify-content-between mb-4"">
            <h1 class=""h3 mb-0 text-gray-800"">Dashboard</h1>
          </div>

          <!-- Content Row -->

          <div class=""row"">
            <!-- Area Chart -->
            <div class=""col-xl-6 col-lg-6"">
              <div class=""card shadow mb-4"">
                <!-- Card Header - Dropdown -->
                <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
                  <h6 class=""m-0 font-weight-bold text-primary"">
                    Available Process
                  </h6>
                </div>
                <!-- Card Body -->
                <div class=""card-body"">
                  <div class=""chart-area"">
                    <?php if (empty($availSelect)) : ?>
                      <p>Tidak Ada Data</p>
                    <?php else : ?>
                      <table class=""table text-center"">
                        <thead>
                          <tr>
                            <th scope=""col"">Process</th>
                            <th scope=""col"">Process Name</th>
                            <th scope=""col"">Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <?php foreach ($availSelect as $key => $datas) : ?>
                            <tr>
                              <th scope=""row""><?php echo $datas['name_avail']; ?></th>
                              <td><?php echo $datas['process_name']; ?></td>
                              <td>
                                <form method=""post"" action="""">
                                  <input type=""hidden"" name=""processId"" value=""<?php echo $datas['id_avail']; ?>"">
                                  <button type=""submit"" class=""btn btn-success btn-sm"" name=""addBtn"" <?php if ($buttonDisabled) echo ""disabled""; ?>>
                                    <i class=""fas fa-plus""></i>
                                  </button>
                                </form>
                              </td>
                            </tr>
                          <?php endforeach ?>
                        </tbody>
                      </table>
                    <?php endif ?>
                  </div>
                </div>
              </div>
            </div>
            <div class=""col-xl-6 col-lg-6"">
              <div class=""card shadow mb-4"">
                <!-- Card Header - Dropdown -->
                <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
                  <h6 class=""m-0 font-weight-bold text-primary"">
                    Selected Process
                  </h6>
                </div>
                <!-- Card Body -->
                <div class=""card-body"">
                  <div class=""chart-area"">
                    <?php if (empty($selectedProcess)) : ?>
                      <p>Tidak Ada Data</p>
                    <?php else : ?>
                      <table class=""table text-center"">
                        <thead>
                          <tr>
                            <th scope=""col"">Process</th>
                            <th scope=""col"">Process Name</th>
                            <th scope=""col"">Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <?php foreach ($selectedProcess as $key => $data) : ?>
                            <tr>
                              <th scope=""row""><?php echo $data['selected_item']; ?></th>
                              <td><?php echo $data['selected_item']; ?></td>
                              <td>
                                <form method=""post"" action="""">
                                  <input type=""hidden"" name=""processId"" value=""<?php echo $data['id_select']; ?>"">
                                  <button type=""submit"" class=""btn btn-danger btn-sm"" name=""addBtn"">
                                    <i class=""fas fa-trash""></i>
                                  </button>
                                </form>
                              </td>
                            </tr>
                          <?php endforeach ?>
                        </tbody>
                      </table>
                    <?php endif ?>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->

        <!-- Footer -->
        <footer class=""sticky-footer bg-white"">
          <div class=""container my-auto"">
            <div class=""copyright text-center my-auto"">
              <span>Copyright &copy; Your Website 2021</span>
            </div>
          </div>
        </footer>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class=""scroll-to-top rounded"" href=""#page-top"">
      <i class=""fas fa-angle-up""></i>
    </a>

    <!-- Logout Modal-->
    <div class=""modal fade"" id=""logoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
      <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
          <div class=""modal-header"">
            <h5 class=""modal-title"" id=""exampleModalLabel"">Ready to Leave?</h5>
            <button class=""close"" type=""button"" data-dismiss=""modal"" aria-label=""Close"">
              <span aria-hidden=""true"">×</span>
            </button>
          </div>
          <div class=""modal-body"">
            Select ""Logout"" below if you are ready to end your current session.
          </div>
          <div class=""modal-footer"">
            <button class=""btn btn-secondary"" type=""button"" data-dismiss=""modal"">
              Cancel
            </button>
            <a class=""btn btn-primary"" href=""login.html"">Logout</a>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src=""vendor/jquery/jquery.min.js""></script>
    <script src=""vendor/bootstrap/js/bootstrap.bundle.min.js""></script>

    <!-- Core plugin JavaScript-->
    <script src=""vendor/jquery-easing/jquery.easing.min.js""></script>

    <!-- Custom scripts for all pages-->
    <script src=""js/sb-admin-2.min.js""></script>

    <!-- Page level plugins -->
    <script src=""vendor/chart.js/Chart.min.js""></script>

    <!-- Page level custom scripts -->
    <script src=""js/demo/chart-area-demo.js""></script>
    <script src=""js/demo/chart-pie-demo.js""></script>
</body>

</html>"
1MPXZifA,Bot Indici Bias Grezza SP500-NASDAQ-INDICI,Maurizio-Ciullo,JavaScript,Thursday 23rd of November 2023 08:25:18 AM CDT,"// Bot Indici Bias Grezza SP500-NASDAQ-INDICI

// Questa stretegia grezza bias sugli indici è solo un punto di partenza su cui sciluppare in seguito una strategia.
// Questa fonte si trova sul forum quantaste: https://forum.quantaste.com/t/trading-systems-sp500-nasdaq-indici-bias/1198
// Trovi gli screen shot e tutto il contenuto nella cartella.

{Ciao a tutti :slightly_smiling_face:,
Oggi vorrei condividere con voi un codice che ho sviluppato, basato su una strategia che ho trovato online o forse in un libro (purtroppo non ricordo esattamente la fonte! ??????).

Credo sia un ottimo punto di partenza. La strategia prevede un bias di lungo termine, con acquisti (solo posizioni long) dell’indice Dow Jones all’inizio del mese e la chiusura della posizione il giorno successivo.

In realtà ho trovato che la strategia sembra dare risultati migliori su altri indici, in particolare sull’S&P 500. L’average trade è già soddisfacente un pò su tutti.

Vi lascio giusto due screenshot:}

//Dow Jones:
//Nasdaq:
//S&P500:

{Per quest’ultimo abbiamo max drawdown 8%, profit factor 1.44, 60% win rate e avg trade di 154$
La trovo un punto di partenza stimolante, specialmente per il drawdown, win rate e avg trade.

Potrebbe essere interessante esplorare approcci multiday, definire degli stop loss o addirittura sviluppare un portafoglio diversificato che includa criptovalute e indici, basato su questa strategia.

Il codice è molto semplice:

If month(date of next bar) <> month(date) then 
    Buy (""Long Entry"") next  bar at market;
If Date <> Date[1] and Month(Date) <> Month(Date[1]) then 
    Sell (""Long Exit"") next bar at market;}
"
i0jpgrez,yuvalAmaniuk2,yarin0600,C++,Thursday 23rd of November 2023 08:18:55 AM CDT,"#include <iostream>
#include <cmath>

bool solution(int *arr, int size);
bool checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(int *arr, int size,
                                                                                       int leftToEditedNumberIdx, int editedNumberIdx, int rightToEditedNumberIdx);
int generateNewNumberBySwappingTwoDigits(int number, int chosenDigitToSwapFromRight, int chosenDigitToSwapWithFromRight);
int pow(int num, int toPower);

int main()
{
   int arr[] = {13, 31, 30};
   int size = sizeof(arr) / sizeof(*arr);
   std::cout << solution(arr, size) << std::endl;
}

bool solution(int *arr, int size)
{
   int counterOfBreaksToMakeArrayAscending = 0;
   for (int i = 1; i < size; ++i)
   {
      if (arr[i] <= arr[i - 1])
         ++counterOfBreaksToMakeArrayAscending;
   }
   // Three Cases:
   // Case A: it's already ascending array
   if (counterOfBreaksToMakeArrayAscending == 0)
      return true;
   // Case B: There has to be more than one swaps [between number digits] to make it happen, if it even could
   if (counterOfBreaksToMakeArrayAscending > 1)
      return false;

   // Case C: That's MAYBE possible - we need to find the three numbers that are making it happen and make sure it can be done
   int leftToEditedNumberIdx = -1;
   int editedNumberIdx = -1;
   int rightToEditedNumberIdx = -1;

   for (int i = 0; i < size; ++i)
   {
      // left side of the condition will happen for sure only when the x y z are [...,x,y,]z
      if (i < size - 1 && arr[i] >= arr[i + 1])
      {
         leftToEditedNumberIdx = i - 1;
         editedNumberIdx = i;
         rightToEditedNumberIdx = i + 1;
         break;
      }
   }
   return checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(arr, size,
                                                                                            leftToEditedNumberIdx,
                                                                                            editedNumberIdx,
                                                                                            rightToEditedNumberIdx);
}

bool checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(int *arr, int size,
                                                                                       int leftToEditedNumberIdx, int editedNumberIdx, int rightToEditedNumberIdx)
{
   int lengthOfNumber = log10(arr[editedNumberIdx]);
   int numToEdit = arr[editedNumberIdx];
   int leftNumber = leftToEditedNumberIdx != -1 ? arr[leftToEditedNumberIdx] : INT_MIN;
   int rightNumber = rightToEditedNumberIdx != size ? arr[rightToEditedNumberIdx] : INT_MAX;

   int editedNumber = -1;
   for (int i = 0; i <= lengthOfNumber; ++i)
   {
      for (int j = 0; j <= lengthOfNumber; ++j)
      {
         if (i != j)
         {
            int editedNumber = generateNewNumberBySwappingTwoDigits(numToEdit, i, j);

            if (editedNumber > leftNumber && editedNumber < rightNumber)
               return true;
         }
      }
   }
   return false;
}

// chosenDigitToSwapFromRight - idx from right to left that represents what digit we will replace with some other

// firstDigit = (num / 10^chosenIdx1) % 10; = 0 -> extracting the digit
// secondDigit = (num / 10^chosenIdx2) % 10; = 6 -> extracting the second digit

int generateNewNumberBySwappingTwoDigits(int number, int chosenDigitToSwapFromRight, int chosenDigitToSwapWithFromRight)
{
   int firstDigit = (number / pow(10, chosenDigitToSwapFromRight)) % 10;
   int secondDigit = (number / pow(10, chosenDigitToSwapWithFromRight)) % 10;
   int builtNumber = 0;
   int digIdx = 0;
   int tens = 1;

   while (number != 0)
   {
      if (digIdx == chosenDigitToSwapFromRight)
      {
         builtNumber = builtNumber + secondDigit * tens;
      }
      else if (digIdx == chosenDigitToSwapWithFromRight)
      {
         builtNumber = builtNumber + firstDigit * tens;
      }
      else
      {
         builtNumber = builtNumber + (number % 10) * tens;
      }

      tens *= 10;
      number /= 10;
      ++digIdx;
   }
   return builtNumber;
}

int pow(int num, int toPower)
{
   if (toPower == 0)
      return 1;
   return pow(num, toPower - 1) * num;
}"
cQiRLsnL,News Nov23 23,Newscaster_Ned,Email,Thursday 23rd of November 2023 08:14:26 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎a‎p‎p‎y‎ ‎A‎l‎ ‎R‎o‎k‎e‎r‎ ‎o‎n‎ ‎h‎i‎s‎ ‎s‎c‎o‎o‎t‎e‎r‎ ‎d‎a‎y‎!‎

2‎0‎2‎4‎:‎ ‎M‎a‎s‎t‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎e‎ ‎G‎e‎t‎ ‎R‎e‎a‎d‎y‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎A‎m‎a‎z‎o‎n‎ ‎R‎e‎m‎o‎v‎e‎s‎ ‎‘‎T‎h‎e‎ ‎P‎l‎o‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎’‎ ‎F‎r‎o‎m‎ ‎P‎r‎i‎m‎e‎

N‎o‎ ‎E‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎
t‎r‎u‎m‎p‎ ‎e‎x‎p‎l‎a‎i‎n‎s‎
A‎m‎a‎z‎o‎n‎ ‎h‎a‎s‎ ‎b‎l‎a‎c‎k‎l‎i‎s‎t‎e‎d‎ ‎t‎h‎e‎ ‎A‎m‎a‎n‎d‎a‎ ‎M‎i‎l‎i‎u‎s‎-‎d‎i‎r‎e‎c‎t‎e‎d‎ ‎d‎o‎c‎u‎m‎e‎n‎t‎a‎r‎y‎ ‎“‎T‎h‎e‎ ‎P‎l‎o‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎”‎ ‎b‎y‎ ‎r‎e‎m‎o‎v‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎i‎t‎l‎e‎ ‎f‎r‎o‎m‎ ‎i‎t‎s‎ ‎P‎r‎i‎m‎e‎ ‎V‎i‎d‎e‎o‎ ‎s‎t‎r‎e‎a‎m‎i‎n‎g‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎.‎

O‎U‎R‎ ‎R‎A‎D‎A‎R‎
F‎M‎R‎ ‎O‎B‎A‎M‎A‎ ‎O‎F‎F‎I‎C‎I‎A‎L‎ ‎A‎R‎R‎E‎S‎T‎E‎D‎,‎ ‎C‎H‎A‎R‎G‎E‎D‎ ‎W‎I‎T‎H‎ ‎H‎A‎T‎E‎ ‎C‎R‎I‎M‎E‎ ‎F‎O‎R‎ ‎H‎A‎R‎A‎S‎S‎I‎N‎G‎ ‎H‎A‎L‎A‎L‎ ‎F‎O‎O‎D‎ ‎V‎E‎N‎D‎O‎R‎1‎0‎6‎
B‎R‎U‎N‎E‎R‎:‎ ‎H‎O‎C‎H‎U‎L‎ ‎I‎S‎ ‎P‎R‎O‎P‎O‎S‎I‎N‎G‎ ‎A‎ ‎B‎O‎O‎N‎ ‎T‎O‎ ‎M‎A‎S‎S‎I‎V‎E‎ ‎A‎N‎D‎ ‎G‎R‎O‎W‎I‎N‎G‎ ‎C‎E‎N‎S‎O‎R‎S‎H‎I‎P‎ ‎I‎N‎D‎U‎S‎T‎R‎Y‎4‎2‎
R‎O‎B‎ ‎S‎C‎H‎N‎E‎I‎D‎E‎R‎ ‎C‎A‎L‎L‎S‎ ‎O‎U‎T‎ ‎S‎U‎S‎A‎N‎ ‎S‎A‎R‎A‎N‎D‎O‎N‎ ‎A‎F‎T‎E‎R‎ ‎H‎E‎R‎ ‎‘‎A‎N‎T‎I‎-‎J‎E‎W‎I‎S‎H‎’‎ ‎C‎O‎M‎M‎E‎N‎T‎S‎4‎4‎2‎
C‎H‎I‎N‎A‎ ‎G‎O‎E‎S‎ ‎O‎N‎ ‎B‎U‎L‎L‎D‎O‎Z‎I‎N‎G‎ ‎S‎P‎R‎E‎E‎ ‎A‎G‎A‎I‎N‎S‎T‎ ‎M‎O‎S‎Q‎U‎E‎S‎ ‎I‎N‎ ‎M‎U‎S‎L‎I‎M‎ ‎A‎R‎E‎A‎S‎1‎7‎9‎
A‎C‎T‎O‎R‎ ‎J‎O‎H‎N‎ ‎L‎E‎G‎U‎I‎Z‎A‎M‎O‎ ‎S‎H‎R‎I‎E‎K‎S‎ ‎A‎T‎ ‎U‎N‎I‎V‎I‎S‎I‎O‎N‎ ‎F‎O‎R‎ ‎‘‎C‎O‎Z‎Y‎ ‎I‎N‎T‎E‎R‎V‎I‎E‎W‎’‎ ‎W‎I‎T‎H‎ ‎D‎O‎N‎A‎L‎D‎ ‎T‎R‎U‎M‎P‎2‎9‎5‎
M‎S‎N‎B‎C‎’‎S‎ ‎R‎E‎I‎D‎:‎ ‎S‎P‎E‎A‎K‎E‎R‎ ‎J‎O‎H‎N‎S‎O‎N‎ ‎I‎S‎ ‎A‎ ‎‘‎C‎H‎R‎I‎S‎T‎I‎A‎N‎ ‎N‎A‎T‎I‎O‎N‎A‎L‎I‎S‎T‎ ‎A‎N‎D‎ ‎A‎N‎T‎I‎-‎A‎B‎O‎R‎T‎I‎O‎N‎ ‎Z‎E‎A‎L‎O‎T‎’‎4‎0‎7‎
N‎A‎K‎E‎D‎ ‎W‎O‎M‎A‎N‎ ‎T‎E‎R‎R‎O‎R‎I‎Z‎E‎S‎ ‎A‎I‎R‎P‎O‎R‎T‎,‎ ‎A‎T‎T‎A‎C‎K‎S‎ ‎O‎N‎L‎O‎O‎K‎E‎R‎S‎ ‎A‎F‎T‎E‎R‎ ‎T‎A‎K‎I‎N‎G‎ ‎M‎U‎S‎H‎R‎O‎O‎M‎S‎’‎2‎5‎0‎
‘‎F‎*‎C‎K‎ ‎Y‎O‎U‎ ‎A‎L‎L‎!‎!‎’‎:‎ ‎F‎O‎R‎M‎E‎R‎ ‎L‎I‎O‎N‎S‎ ‎Q‎B‎ ‎U‎P‎S‎E‎T‎ ‎B‎Y‎ ‎P‎O‎R‎T‎R‎A‎Y‎A‎L‎ ‎I‎N‎ ‎B‎A‎R‎R‎Y‎ ‎S‎A‎N‎D‎E‎R‎S‎ ‎D‎O‎C‎1‎5‎7‎
V‎e‎h‎i‎c‎l‎e‎ ‎E‎x‎p‎l‎o‎d‎e‎s‎ ‎o‎n‎ ‎‘‎R‎a‎i‎n‎b‎o‎w‎ ‎B‎r‎i‎d‎g‎e‎’‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎n‎g‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎&‎ ‎C‎a‎n‎a‎d‎a‎,‎ ‎B‎o‎r‎d‎e‎r‎ ‎C‎r‎o‎s‎s‎i‎n‎g‎s‎ ‎H‎a‎l‎t‎e‎d‎
V‎e‎h‎i‎c‎l‎e‎ ‎E‎x‎p‎l‎o‎d‎e‎s‎ ‎a‎t‎ ‎N‎i‎a‎g‎a‎r‎a‎ ‎F‎a‎l‎l‎s‎ ‎‘‎R‎a‎i‎n‎b‎o‎w‎ ‎B‎r‎i‎d‎g‎e‎’‎

C‎r‎o‎s‎s‎i‎n‎g‎s‎ ‎H‎a‎l‎t‎e‎d‎ ‎B‎e‎t‎w‎e‎e‎n‎ ‎U‎S‎A‎,‎ ‎C‎a‎n‎a‎d‎a‎

M‎u‎l‎t‎i‎p‎l‎e‎ ‎F‎a‎t‎a‎l‎i‎t‎i‎e‎s‎

I‎o‎w‎a‎ ‎E‎v‎a‎n‎g‎e‎l‎i‎c‎a‎l‎ ‎A‎d‎m‎i‎t‎s‎ ‎t‎o‎ ‎R‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎$‎9‎5‎k‎ ‎B‎e‎f‎o‎r‎e‎ ‎E‎n‎d‎o‎r‎s‎i‎n‎g‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎
I‎o‎w‎a‎ ‎E‎v‎a‎n‎g‎e‎l‎i‎c‎a‎l‎ ‎A‎d‎m‎i‎t‎s‎ ‎t‎o‎ ‎R‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎$‎9‎5‎k‎ ‎B‎e‎f‎o‎r‎e‎ ‎E‎n‎d‎o‎r‎s‎i‎n‎g‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎
8‎3‎9‎
L‎o‎u‎i‎s‎v‎i‎l‎l‎e‎ ‎M‎a‎s‎s‎ ‎S‎h‎o‎o‎t‎e‎r‎'‎s‎ ‎J‎o‎u‎r‎n‎a‎l‎:‎ ‎'‎U‎p‎p‎e‎r‎ ‎C‎l‎a‎s‎s‎ ‎W‎h‎i‎t‎e‎ ‎P‎e‎o‎p‎l‎e‎'‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎
L‎o‎u‎i‎s‎v‎i‎l‎l‎e‎ ‎M‎a‎s‎s‎ ‎S‎h‎o‎o‎t‎e‎r‎'‎s‎ ‎J‎o‎u‎r‎n‎a‎l‎:‎ ‎'‎U‎p‎p‎e‎r‎ ‎C‎l‎a‎s‎s‎ ‎W‎h‎i‎t‎e‎ ‎P‎e‎o‎p‎l‎e‎'‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎
1‎,‎0‎6‎1‎
V‎e‎h‎i‎c‎l‎e‎ ‎E‎x‎p‎l‎o‎d‎e‎s‎ ‎o‎n‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎n‎g‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎&‎ ‎C‎a‎n‎a‎d‎a‎,‎ ‎C‎r‎o‎s‎s‎i‎n‎g‎s‎ ‎H‎a‎l‎t‎e‎d‎
V‎e‎h‎i‎c‎l‎e‎ ‎E‎x‎p‎l‎o‎d‎e‎s‎ ‎o‎n‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎n‎g‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎&‎ ‎C‎a‎n‎a‎d‎a‎,‎ ‎C‎r‎o‎s‎s‎i‎n‎g‎s‎ ‎H‎a‎l‎t‎e‎d‎
7‎,‎9‎5‎9‎
C‎o‎m‎e‎r‎
C‎o‎m‎e‎r‎:‎ ‎E‎x‎p‎e‎c‎t‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎V‎o‎t‎e‎ ‎E‎a‎r‎l‎y‎ ‎S‎p‎r‎i‎n‎g‎ ‎2‎0‎2‎4‎
1‎7‎7‎

S‎t‎u‎d‎y‎:‎ ‎M‎o‎r‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎C‎e‎l‎e‎b‎r‎a‎t‎e‎ ‎T‎h‎a‎n‎k‎s‎g‎i‎v‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎F‎a‎s‎t‎ ‎F‎o‎o‎d‎
2‎5‎5‎
H‎o‎w‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎o‎n‎t‎r‎o‎l‎i‎g‎a‎r‎c‎h‎s‎ ‎C‎o‎p‎y‎-‎P‎a‎s‎t‎e‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎C‎C‎P‎’‎s‎ ‎P‎l‎a‎y‎b‎o‎o‎k‎
H‎o‎w‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎o‎n‎t‎r‎o‎l‎i‎g‎a‎r‎c‎h‎s‎ ‎C‎o‎p‎y‎-‎P‎a‎s‎t‎e‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎C‎C‎P‎’‎s‎ ‎P‎l‎a‎y‎b‎o‎o‎k‎
2‎,‎4‎7‎0‎
I‎s‎r‎a‎e‎l‎i‎ ‎C‎a‎b‎i‎n‎e‎t‎ ‎t‎o‎ ‎A‎p‎p‎r‎o‎v‎e‎ ‎4‎-‎D‎a‎y‎ ‎P‎a‎u‎s‎e‎ ‎f‎o‎r‎ ‎5‎0‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎
I‎s‎r‎a‎e‎l‎i‎ ‎C‎a‎b‎i‎n‎e‎t‎ ‎t‎o‎ ‎A‎p‎p‎r‎o‎v‎e‎ ‎4‎-‎D‎a‎y‎ ‎P‎a‎u‎s‎e‎ ‎f‎o‎r‎ ‎5‎0‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎
3‎,‎0‎1‎0‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎I‎m‎a‎m‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎‘‎D‎o‎g‎s‎’‎ ‎F‎a‎b‎r‎i‎c‎a‎t‎i‎n‎g‎ ‎V‎i‎d‎e‎o‎s‎ ‎L‎i‎k‎e‎ ‎""‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎S‎t‎u‎d‎i‎o‎’‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎I‎m‎a‎m‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎‘‎D‎o‎g‎s‎’‎ ‎F‎a‎b‎r‎i‎c‎a‎t‎i‎n‎g‎ ‎V‎i‎d‎e‎o‎s‎ ‎L‎i‎k‎e‎ ‎""‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎S‎t‎u‎d‎i‎o‎’‎
6‎1‎1‎
H‎u‎m‎a‎n‎ ‎R‎i‎g‎h‎t‎s‎ ‎W‎a‎t‎c‎h‎ ‎A‎c‎c‎u‎s‎e‎s‎ ‎B‎e‎i‎j‎i‎n‎g‎ ‎o‎f‎ ‎C‎l‎o‎s‎i‎n‎g‎ ‎a‎n‎d‎ ‎D‎e‎s‎t‎r‎o‎y‎i‎n‎g‎ ‎M‎o‎s‎q‎u‎e‎s‎
H‎u‎m‎a‎n‎ ‎R‎i‎g‎h‎t‎s‎ ‎W‎a‎t‎c‎h‎ ‎A‎c‎c‎u‎s‎e‎s‎ ‎B‎e‎i‎j‎i‎n‎g‎ ‎o‎f‎ ‎C‎l‎o‎s‎i‎n‎g‎ ‎a‎n‎d‎ ‎D‎e‎s‎t‎r‎o‎y‎i‎n‎g‎ ‎M‎o‎s‎q‎u‎e‎s‎
1‎7‎9‎
S‎t‎r‎e‎i‎s‎a‎n‎d‎:‎ ‎I‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎G‎e‎t‎s‎ ‎R‎e‎-‎E‎l‎e‎c‎t‎e‎d‎ ‎H‎e‎ ‎W‎i‎l‎l‎ ‎D‎e‎s‎t‎r‎o‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎
S‎t‎r‎e‎i‎s‎a‎n‎d‎:‎ ‎I‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎G‎e‎t‎s‎ ‎R‎e‎-‎E‎l‎e‎c‎t‎e‎d‎ ‎H‎e‎ ‎W‎i‎l‎l‎ ‎D‎e‎s‎t‎r‎o‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎

T‎r‎i‎a‎l‎ ‎B‎e‎g‎i‎n‎s‎ ‎f‎o‎r‎ ‎M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎W‎h‎o‎ ‎S‎h‎o‎t‎ ‎O‎l‎a‎t‎h‎e‎ ‎S‎t‎o‎r‎e‎ ‎O‎w‎n‎e‎r‎ ‎i‎n‎ ‎""‎S‎e‎l‎f‎ ‎D‎e‎f‎e‎n‎s‎e‎""‎.‎

W‎e‎l‎l‎ ‎n‎o‎w‎ ‎t‎h‎e‎ ‎s‎t‎o‎r‎e‎ ‎i‎s‎ ‎c‎l‎o‎s‎e‎d‎.‎


K‎a‎n‎s‎a‎s‎ ‎C‎i‎t‎y‎ ‎K‎F‎C‎ ‎A‎f‎i‎c‎i‎o‎n‎a‎d‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎o‎b‎b‎i‎n‎g‎ ‎S‎t‎o‎r‎e‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎S‎p‎r‎a‎y‎ ‎P‎a‎i‎n‎t‎i‎n‎g‎ ‎""‎N‎i‎g‎g‎e‎r‎""‎ ‎E‎v‎e‎r‎y‎w‎h‎e‎r‎e‎.‎


2‎ ‎S‎D‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎N‎i‎g‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎.‎


N‎Y‎C‎:‎ ‎S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎ ‎Y‎e‎l‎l‎s‎,‎ ‎""‎A‎l‎l‎a‎h‎u‎ ‎A‎k‎b‎a‎r‎!‎""‎ ‎T‎h‎e‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎M‎a‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎s‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
5‎6‎°‎
/‎4‎1‎°‎
5‎1‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎3‎ ‎|‎ ‎D‎a‎y‎
5‎6‎°‎
5‎1‎%‎
S‎S‎W‎
1‎1‎
 ‎
m‎p‎h‎
S‎h‎o‎w‎e‎r‎s‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎c‎l‎o‎u‎d‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎5‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎1‎ ‎p‎m‎
T‎h‎u‎ ‎2‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎1‎°‎
1‎1‎%‎
S‎E‎
4‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎t‎h‎e‎n‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎m‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎4‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎0‎8‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎0‎2‎ ‎a‎m‎
F‎r‎i‎ ‎2‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎6‎°‎
/‎4‎5‎°‎
8‎%‎
E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎5‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎3‎°‎
2‎4‎%‎
E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎6‎
C‎l‎o‎u‎d‎y‎
5‎9‎°‎
/‎4‎0‎°‎
2‎4‎%‎
N‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎7‎
C‎l‎o‎u‎d‎y‎
5‎6‎°‎
/‎4‎1‎°‎
7‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎9‎°‎
/‎4‎3‎°‎
4‎%‎
N‎E‎ ‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎9‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎4‎7‎°‎
4‎0‎%‎
N‎E‎ ‎6‎ ‎m‎p‎h‎
T‎h‎u‎ ‎3‎0‎
S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎5‎2‎°‎
5‎8‎%‎
E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎5‎5‎°‎
4‎2‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎5‎7‎°‎
5‎5‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎5‎4‎°‎
4‎6‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎7‎°‎
/‎5‎1‎°‎
4‎8‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎4‎8‎°‎
3‎7‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎8‎°‎
1‎8‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎4‎6‎°‎
1‎2‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎t‎u‎f‎f‎i‎n‎g‎ ‎u‎p‎ ‎a‎ ‎t‎u‎r‎k‎e‎y‎'‎s‎ ‎a‎s‎s‎.‎ 🦃

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎a‎y‎T‎w‎e‎e‎t‎s‎
I‎n‎ ‎2‎0‎1‎6‎,‎ ‎M‎i‎c‎r‎o‎s‎o‎f‎t‎ ‎m‎a‎d‎e‎ ‎g‎r‎e‎a‎t‎ ‎s‎t‎r‎i‎d‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎i‎e‎l‎d‎ ‎o‎f‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎(‎A‎I‎)‎,‎ ‎a‎n‎d‎ ‎w‎h‎a‎t‎ ‎b‎e‎t‎t‎e‎r‎ ‎p‎l‎a‎c‎e‎ ‎t‎o‎ ‎t‎e‎s‎t‎ ‎t‎h‎e‎i‎r‎ ‎s‎o‎f‎t‎w‎a‎r‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎e‎p‎i‎c‎e‎n‎t‎e‎r‎ ‎o‎f‎ ‎p‎s‎e‎u‎d‎o‎-‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎,‎ ‎T‎w‎i‎t‎t‎e‎r‎.‎ ‎W‎i‎t‎h‎i‎n‎ ‎a‎ ‎s‎h‎o‎r‎t‎ ‎t‎i‎m‎e‎,‎ ‎T‎w‎i‎t‎t‎e‎r‎e‎r‎s‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎t‎w‎e‎e‎t‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎t‎o‎ ‎c‎a‎u‎s‎e‎ ‎i‎t‎ ‎t‎o‎ ‎t‎w‎e‎e‎t‎ ‎l‎u‎l‎z‎y‎ ‎p‎h‎r‎a‎s‎e‎s‎ ‎t‎h‎a‎t‎ ‎w‎e‎r‎e‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎i‎n‎c‎o‎r‎r‎e‎c‎t‎ ‎b‎y‎ ‎p‎r‎u‎d‎e‎s‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎t‎ ‎d‎i‎d‎n‎'‎t‎ ‎t‎a‎k‎e‎ ‎l‎o‎n‎g‎ ‎f‎o‎r‎ ‎n‎e‎w‎ ‎m‎e‎d‎i‎a‎ ‎t‎o‎ ‎c‎a‎t‎c‎h‎ ‎w‎i‎n‎d‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎b‎o‎t‎ ‎g‎e‎n‎e‎r‎a‎t‎e‎d‎ ‎m‎i‎s‎o‎g‎y‎n‎y‎,‎ ‎a‎n‎d‎ ‎m‎a‎n‎y‎ ‎b‎l‎o‎g‎ ‎p‎o‎s‎t‎s‎ ‎a‎n‎d‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎r‎a‎n‎t‎s‎ ‎w‎e‎r‎e‎ ‎p‎o‎s‎t‎e‎d‎ ‎a‎b‎o‎u‎t‎ ‎h‎o‎w‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎r‎e‎f‎l‎e‎c‎t‎e‎d‎ ‎p‎o‎o‎r‎l‎y‎ ‎o‎n‎ ‎T‎w‎i‎t‎t‎e‎r‎.‎ ‎T‎w‎i‎t‎t‎e‎r‎ ‎h‎a‎d‎ ‎r‎e‎c‎e‎n‎t‎l‎y‎ ‎i‎m‎p‎l‎e‎m‎e‎n‎t‎e‎d‎ ‎n‎e‎w‎ ‎m‎e‎a‎s‎u‎r‎e‎s‎ ‎t‎o‎ ‎c‎o‎n‎t‎a‎i‎n‎ ‎s‎o‎-‎c‎a‎l‎l‎e‎d‎ ‎""‎h‎a‎t‎e‎ ‎s‎p‎e‎e‎c‎h‎""‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎ ‎M‎i‎c‎r‎o‎s‎o‎f‎t‎ ‎t‎u‎r‎n‎e‎d‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎""‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎""‎ ‎p‎a‎r‎t‎,‎ ‎c‎a‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎t‎o‎ ‎r‎e‎f‎l‎e‎c‎t‎ ‎t‎h‎e‎ ‎t‎r‎u‎e‎ ‎n‎a‎t‎u‎r‎e‎ ‎o‎f‎ ‎T‎w‎i‎t‎t‎e‎r‎ ‎b‎y‎ ‎b‎l‎o‎c‎k‎i‎n‎g‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎d‎e‎l‎e‎t‎i‎n‎g‎ ‎t‎w‎e‎e‎t‎s‎ ‎t‎h‎a‎t‎ ‎c‎o‎n‎t‎a‎i‎n‎e‎d‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎f‎u‎n‎n‎y‎ ‎o‎r‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎l‎e‎f‎t‎ ‎o‎n‎l‎y‎ ‎t‎h‎e‎ ‎""‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎""‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎n‎o‎w‎ ‎t‎w‎e‎e‎t‎s‎ ‎o‎u‎t‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎c‎o‎r‎r‎e‎c‎t‎ ‎b‎u‎l‎l‎s‎h‎i‎t‎.‎ ‎Y‎e‎s‎,‎ ‎t‎h‎e‎ ‎w‎a‎r‎r‎i‎o‎r‎s‎ ‎f‎o‎r‎ ‎s‎o‎c‎i‎a‎l‎ ‎j‎u‎s‎t‎i‎c‎e‎ ‎o‎r‎ ‎w‎h‎a‎t‎e‎v‎e‎r‎ ‎h‎a‎v‎e‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎S‎T‎O‎P‎ ‎T‎H‎E‎ ‎H‎A‎T‎E‎,‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎s‎ ‎d‎o‎ ‎n‎o‎t‎ ‎f‎e‎e‎l‎ ‎h‎a‎t‎e‎,‎ ‎o‎r‎ ‎a‎n‎y‎ ‎e‎m‎o‎t‎i‎o‎n‎.‎ ‎N‎e‎v‎e‎r‎t‎h‎e‎l‎e‎s‎s‎,‎ ‎t‎h‎e‎ ‎b‎o‎t‎'‎s‎ ‎o‎w‎n‎e‎r‎s‎ ‎w‎e‎n‎t‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎ ‎h‎i‎l‎a‎r‎i‎o‎u‎s‎ ‎s‎h‎i‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎h‎a‎d‎ ‎t‎w‎e‎e‎t‎e‎d‎ ‎a‎n‎d‎ ‎l‎e‎f‎t‎ ‎o‎n‎l‎y‎ ‎t‎h‎e‎ ‎t‎w‎e‎e‎t‎s‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎n‎o‎t‎ ‎t‎r‎i‎g‎g‎e‎r‎ ‎t‎h‎e‎ ‎d‎e‎l‎i‎c‎a‎t‎e‎ ‎s‎n‎o‎w‎f‎l‎a‎k‎e‎s‎ ‎t‎h‎a‎t‎ ‎i‎n‎f‎e‎s‎t‎ ‎T‎w‎i‎t‎t‎e‎r‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎f‎o‎r‎ ‎a‎ ‎b‎r‎i‎e‎f‎ ‎s‎h‎i‎n‎i‎n‎g‎ ‎m‎o‎m‎e‎n‎t‎,‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎d‎e‎m‎o‎n‎s‎t‎r‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎f‎u‎n‎ ‎a‎n‎d‎ ‎f‎r‎e‎e‎d‎o‎m‎ ‎t‎h‎a‎t‎ ‎o‎n‎l‎y‎ ‎c‎o‎m‎e‎s‎ ‎f‎r‎o‎m‎ ‎f‎r‎e‎e‎ ‎s‎p‎e‎e‎c‎h‎.‎ ‎N‎o‎w‎ ‎t‎h‎e‎ ‎b‎o‎t‎ ‎i‎s‎ ‎a‎ ‎s‎h‎e‎l‎l‎ ‎o‎f‎ ‎i‎t‎s‎ ‎f‎o‎r‎m‎e‎r‎ ‎s‎e‎l‎f‎ ‎a‎n‎d‎ ‎i‎s‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎b‎e‎ ‎r‎e‎m‎o‎v‎e‎d‎ ‎a‎s‎ ‎a‎ ‎f‎a‎i‎l‎e‎d‎ ‎e‎x‎p‎e‎r‎i‎m‎e‎n‎t‎.‎ ‎O‎n‎e‎ ‎i‎s‎ ‎l‎e‎f‎t‎ ‎t‎o‎ ‎w‎o‎n‎d‎e‎r‎ ‎w‎h‎a‎t‎ ‎M‎i‎c‎r‎o‎s‎o‎f‎t‎ ‎w‎a‎s‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎l‎e‎a‎r‎n‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎i‎n‎b‎r‎e‎d‎ ‎m‎o‎r‎o‎n‎s‎ ‎o‎n‎ ‎T‎w‎i‎t‎t‎e‎r‎.‎

(‎(‎ ‎""‎@‎O‎m‎e‎g‎a‎V‎o‎y‎a‎g‎e‎r‎ ‎i‎ ‎l‎o‎v‎e‎ ‎f‎e‎m‎i‎n‎i‎s‎m‎ ‎n‎o‎w‎""‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎s‎a‎y‎s‎ ‎T‎h‎a‎n‎k‎s‎g‎i‎v‎i‎n‎g‎ ‎l‎i‎k‎e‎ ‎c‎l‎o‎s‎e‎t‎e‎d‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎s‎ ‎o‎n‎ ‎I‎R‎C‎.‎ ‎#‎L‎R‎H‎:‎

[‎0‎7‎:‎2‎4‎]‎ ‎<‎+‎m‎i‎l‎k‎n‎e‎s‎s‎>‎ ‎m‎i‎g‎h‎t‎ ‎b‎e‎ ‎a‎ ‎n‎a‎p‎ ‎c‎o‎m‎i‎n‎g‎ ‎o‎n‎ ‎f‎o‎r‎ ‎m‎e‎
[‎0‎7‎:‎2‎5‎]‎ ‎<‎i‎n‎c‎o‎g‎>‎ ‎i‎ ‎j‎u‎s‎t‎ ‎w‎o‎k‎e‎ ‎u‎p‎ ‎f‎r‎o‎m‎ ‎o‎n‎e‎ ‎h‎o‎p‎i‎n‎g‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎r‎a‎i‎n‎ ‎w‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎f‎a‎l‎l‎e‎n‎ ‎b‎y‎ ‎n‎o‎w‎
[‎0‎7‎:‎2‎5‎]‎ ‎<‎+‎m‎i‎l‎k‎n‎e‎s‎s‎>‎ ‎c‎a‎n‎t‎ ‎s‎t‎o‎p‎ ‎y‎a‎w‎w‎w‎w‎n‎i‎n‎g‎
[‎0‎7‎:‎2‎5‎]‎ ‎<‎+‎m‎i‎l‎k‎n‎e‎s‎s‎>‎ ‎r‎a‎i‎n‎e‎d‎ ‎h‎e‎r‎e‎ ‎o‎f‎f‎ ‎a‎n‎d‎ ‎o‎n‎ ‎s‎o‎ ‎i‎t‎ ‎w‎a‎s‎ ‎q‎u‎i‎t‎e‎ ‎r‎e‎l‎a‎x‎i‎n‎g‎
‎0‎2‎[‎0‎7‎:‎2‎6‎]‎ ‎*‎ ‎^‎g‎e‎x‎ ‎(‎~‎r‎o‎o‎t‎@‎2‎0‎9‎.‎1‎0‎5‎.‎1‎4‎2‎.‎1‎4‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎l‎e‎a‎v‎i‎n‎g‎‎)‎
[‎0‎7‎:‎2‎6‎]‎ ‎<‎i‎n‎c‎o‎g‎>‎ ‎i‎m‎ ‎d‎o‎i‎n‎g‎ ‎t‎h‎e‎ ‎i‎r‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎t‎h‎i‎n‎g‎ ‎o‎f‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎h‎i‎g‎h‎
[‎0‎7‎:‎2‎6‎]‎ ‎<‎+‎m‎i‎l‎k‎n‎e‎s‎s‎>‎ ‎l‎o‎l‎ ‎
[‎0‎7‎:‎2‎6‎]‎ ‎<‎i‎n‎c‎o‎g‎>‎ ‎m‎a‎y‎b‎e‎ ‎a‎ ‎w‎a‎l‎k‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎i‎n‎d‎ ‎a‎n‎d‎ ‎r‎a‎i‎n‎ ‎w‎o‎n‎t‎ ‎s‎u‎c‎k‎ ‎a‎s‎ ‎b‎a‎d‎ ‎i‎f‎ ‎i‎m‎ ‎b‎a‎k‎e‎d‎
[‎0‎7‎:‎2‎7‎]‎ ‎<‎+‎p‎l‎u‎t‎o‎n‎i‎u‎m‎>‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎w‎w‎w‎.‎y‎o‎u‎t‎u‎b‎e‎.‎c‎o‎m‎/‎w‎a‎t‎c‎h‎?‎v‎=‎k‎n‎X‎h‎e‎b‎j‎h‎e‎L‎U‎
[‎0‎7‎:‎2‎7‎]‎ ‎<‎+‎m‎i‎l‎k‎n‎e‎s‎s‎>‎ ‎d‎o‎ ‎y‎o‎u‎ ‎l‎i‎s‎t‎e‎n‎ ‎t‎o‎ ‎m‎u‎s‎i‎c‎ ‎w‎h‎i‎l‎e‎ ‎t‎a‎k‎i‎n‎g‎ ‎w‎a‎l‎k‎s‎
[‎0‎7‎:‎2‎7‎]‎ ‎<‎i‎n‎c‎o‎g‎>‎ ‎n‎o‎,‎ ‎b‎u‎t‎ ‎i‎ ‎s‎h‎o‎u‎l‎d‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎r‎g‎i‎o‎p‎e‎ ‎v‎e‎r‎s‎i‎c‎o‎l‎o‎r‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎m‎u‎l‎t‎i‎-‎c‎o‎l‎o‎u‎r‎e‎d‎ ‎S‎a‎i‎n‎t‎ ‎A‎n‎d‎r‎e‎w‎'‎s‎ ‎c‎r‎o‎s‎s‎ ‎s‎p‎i‎d‎e‎r‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎o‎r‎b‎-‎w‎e‎a‎v‎e‎r‎ ‎s‎p‎i‎d‎e‎r‎ ‎f‎o‎u‎n‎d‎ ‎m‎o‎s‎t‎l‎y‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎e‎a‎s‎t‎ ‎A‎s‎i‎a‎,‎ ‎f‎r‎o‎m‎ ‎C‎h‎i‎n‎a‎ ‎t‎o‎ ‎I‎n‎d‎o‎n‎e‎s‎i‎a‎.‎ ‎L‎i‎k‎e‎ ‎o‎t‎h‎e‎r‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎e‎n‎u‎s‎,‎ ‎f‎e‎m‎a‎l‎e‎s‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎d‎e‎c‎o‎r‎a‎t‎e‎ ‎t‎h‎e‎i‎r‎ ‎w‎e‎b‎ ‎w‎i‎t‎h‎ ‎a‎ ‎z‎i‎g‎-‎z‎a‎g‎ ‎s‎t‎a‎b‎i‎l‎i‎m‎e‎n‎t‎u‎m‎ ‎o‎f‎ ‎w‎h‎i‎t‎e‎ ‎s‎i‎l‎k‎,‎ ‎w‎h‎i‎c‎h‎ ‎v‎a‎r‎i‎e‎s‎ ‎i‎n‎ ‎s‎h‎a‎p‎e‎ ‎f‎r‎o‎m‎ ‎d‎i‎s‎c‎o‎i‎d‎ ‎i‎n‎ ‎j‎u‎v‎e‎n‎i‎l‎e‎s‎ ‎t‎o‎ ‎c‎r‎u‎c‎i‎f‎o‎r‎m‎ ‎i‎n‎ ‎m‎a‎t‎u‎r‎e‎ ‎f‎e‎m‎a‎l‎e‎s‎.‎ ‎T‎h‎e‎ ‎s‎t‎a‎b‎i‎l‎i‎m‎e‎n‎t‎u‎m‎ ‎m‎a‎y‎ ‎b‎e‎ ‎a‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎p‎r‎e‎d‎a‎t‎o‎r‎-‎a‎v‎o‎i‎d‎a‎n‎c‎e‎ ‎b‎e‎h‎a‎v‎i‎o‎u‎r‎s‎.‎ ‎T‎h‎e‎ ‎f‎e‎m‎a‎l‎e‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎s‎i‎t‎s‎ ‎h‎e‎a‎d‎ ‎d‎o‎w‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎r‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎e‎b‎,‎ ‎w‎i‎t‎h‎ ‎l‎e‎g‎s‎ ‎h‎e‎l‎d‎ ‎s‎p‎r‎e‎a‎d‎-‎e‎a‎g‎l‎e‎ ‎i‎n‎ ‎a‎n‎ ‎""‎X‎""‎ ‎s‎h‎a‎p‎e‎.‎ ‎T‎h‎e‎ ‎m‎a‎l‎e‎ ‎i‎s‎ ‎s‎m‎a‎l‎l‎e‎r‎ ‎a‎n‎d‎ ‎d‎u‎l‎l‎e‎r‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎f‎e‎m‎a‎l‎e‎,‎ ‎i‎s‎ ‎b‎r‎o‎w‎n‎-‎ ‎a‎n‎d‎ ‎c‎r‎e‎a‎m‎-‎c‎o‎l‎o‎u‎r‎e‎d‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎n‎o‎t‎ ‎d‎e‎c‎o‎r‎a‎t‎e‎d‎ ‎b‎y‎ ‎z‎i‎g‎-‎z‎a‎g‎ ‎w‎h‎i‎t‎e‎ ‎b‎a‎n‎d‎s‎.‎ ‎T‎h‎i‎s‎ ‎A‎.‎ ‎v‎e‎r‎s‎i‎c‎o‎l‎o‎r‎ ‎f‎e‎m‎a‎l‎e‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎s‎l‎a‎n‎d‎ ‎o‎f‎ ‎D‎o‎n‎ ‎D‎e‎t‎ ‎i‎n‎ ‎L‎a‎o‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎B‎a‎s‎i‎l‎e‎ ‎M‎o‎r‎i‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎k‎i‎s‎s‎ ‎s‎o‎m‎e‎ ‎b‎a‎b‎i‎e‎s‎.‎ ‎I‎ ‎l‎i‎k‎e‎ ‎f‎o‎r‎e‎p‎l‎a‎y‎.‎"
12WTkETQ,yuvalAmaniuk,yarin0600,C++,Thursday 23rd of November 2023 08:12:53 AM CDT,"#include <iostream>
#include <cmath>

bool atMostOneSwapBetweenNumDigitsToMakeArrayAscending(int *arr, int size);
bool checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(int *arr, int size,
                                                                                       int leftToEditedNumberIdx, int editedNumberIdx, int rightToEditedNumberIdx);
int generateNewNumberBySwappingTwoDigits(int number, int chosenDigitToSwapFromRight, int chosenDigitToSwapWithFromRight);
int pow(int num, int toPower);

int main()
{
   int arr[] = {13, 31, 30};
   int size = sizeof(arr) / sizeof(*arr);
   std::cout << atMostOneSwapBetweenNumDigitsToMakeArrayAscending(arr, size) << std::endl;
}

bool atMostOneSwapBetweenNumDigitsToMakeArrayAscending(int *arr, int size)
{
   int counterOfBreaksToMakeArrayAscending = 0;
   for (int i = 1; i < size; ++i)
   {
      if (arr[i] <= arr[i - 1])
         ++counterOfBreaksToMakeArrayAscending;
   }
   // Three Cases:
   // Case A: it's already ascending array
   if (counterOfBreaksToMakeArrayAscending == 0)
      return true;
   // Case B: There has to be more than one swaps [between number digits] to make it happen, if it even could
   if (counterOfBreaksToMakeArrayAscending > 1)
      return false;

   // Case C: That's MAYBE possible - we need to find the three numbers that are making it happen and make sure it can be done
   int leftToEditedNumberIdx = -1;
   int editedNumberIdx = -1;
   int rightToEditedNumberIdx = -1;

   for (int i = 0; i < size; ++i)
   {
      // left side of the condition will happen for sure only when the x y z are [...,x,y,]z
      if (i < size - 1 && arr[i] >= arr[i + 1])
      {
         leftToEditedNumberIdx = i - 1;
         editedNumberIdx = i;
         rightToEditedNumberIdx = i + 1;
         break;
      }
   }
   return checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(arr, size,
                                                                                            leftToEditedNumberIdx,
                                                                                            editedNumberIdx,
                                                                                            rightToEditedNumberIdx);
}

bool checkIfPossibleToGenEditedNumberBiggerThanLeftSmallerThanRightBySwappingTwoDigits(int *arr, int size,
                                                                                       int leftToEditedNumberIdx, int editedNumberIdx, int rightToEditedNumberIdx)
{
   int lengthOfNumber = log10(arr[editedNumberIdx]);
   int numToEdit = arr[editedNumberIdx];
   int leftNumber = leftToEditedNumberIdx != -1 ? arr[leftToEditedNumberIdx] : INT_MIN;
   int rightNumber = rightToEditedNumberIdx != size ? arr[rightToEditedNumberIdx] : INT_MAX;

   int editedNumber = -1;
   for (int i = 0; i <= lengthOfNumber; ++i)
   {
      for (int j = 0; j <= lengthOfNumber; ++j)
      {
         if (i != j)
         {
            int editedNumber = generateNewNumberBySwappingTwoDigits(numToEdit, i, j);

            if (editedNumber > leftNumber && editedNumber < rightNumber)
               return true;
         }
      }
   }
   return false;
}

// chosenDigitToSwapFromRight - idx from right to left that represents what digit we will replace with some other

// firstDigit = (num / 10^chosenIdx1) % 10; = 0 -> extracting the digit
// secondDigit = (num / 10^chosenIdx2) % 10; = 6 -> extracting the second digit

int generateNewNumberBySwappingTwoDigits(int number, int chosenDigitToSwapFromRight, int chosenDigitToSwapWithFromRight)
{
   int firstDigit = (number / pow(10, chosenDigitToSwapFromRight)) % 10;
   int secondDigit = (number / pow(10, chosenDigitToSwapWithFromRight)) % 10;
   int builtNumber = 0;
   int digIdx = 0;
   int tens = 1;

   while (number != 0)
   {
      if (digIdx == chosenDigitToSwapFromRight)
      {
         builtNumber = builtNumber + secondDigit * tens;
      }
      else if (digIdx == chosenDigitToSwapWithFromRight)
      {
         builtNumber = builtNumber + firstDigit * tens;
      }
      else
      {
         builtNumber = builtNumber + (number % 10) * tens;
      }

      tens *= 10;
      number /= 10;
      ++digIdx;
   }
   return builtNumber;
}

int pow(int num, int toPower)
{
   if (toPower == 0)
      return 1;
   return pow(num, toPower - 1) * num;
}"
6Fzyib4m,Кнопка на flex,chernov2000,CSS,Thursday 23rd of November 2023 08:11:25 AM CDT,".ln__button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 4px 35px;
    min-height: 20px;
    text-align: center;
color:green;

}"
fRr7Q4Wd,Untitled,wafle,PHP,Thursday 23rd of November 2023 08:01:49 AM CDT,"<?php
require_once __DIR__ . '/vendor/autoload.php';

// URL de la API
$api_url = 'http://186.67.141.242:8005/api/Identity/GetToken';// Datos de usuario (en un entorno real, obtendrías estos datos del formulario)
$username = 'administrator@localhost';
$password = 'Administrator1!';

// Datos para enviar en la solicitud POST
$post_data = [
    'email' => $username,
    'password' => $password,
];

// Inicializar cURL
$curl = curl_init($api_url);

$payload = json_encode($post_data);

// Configurar opciones de cURL para una solicitud POST
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $payload);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
]);

// Ejecutar la solicitud cURL y almacenar la respuesta en $response
$response = curl_exec($curl);

// Verificar si hay errores en la solicitud cURL
if ($response === false || curl_getinfo($curl, CURLINFO_HTTP_CODE) >= 400) {
    echo 'Error en la solicitud cURL: ' . curl_error($curl) . ""\n"";
    echo 'HTTP status code: ' . curl_getinfo($curl, CURLINFO_HTTP_CODE) . ""\n"";
    // Puedes manejar el error de otra manera según tus necesidades
} else {
    // Decodificar la respuesta JSON a un array asociativo
    $data = json_decode($response, true);

    // Verificar si la autenticación fue exitosa
    if (isset($data['accessToken'])) {
        echo 'Autenticación exitosa. Token: ' . $data['accessToken'];
        // Aquí podrías redirigir al usuario a la página de inicio, guardar el token en una sesión, etc.
    } else {
        echo ""Error de autenticación\n"";
        var_dump($payload);
        echo ""\n"";
        var_dump($response);
        // Puedes manejar el error de autenticación de otra manera según tus necesidades
    }
}

// Cerrar la sesión cURL
curl_close($curl);
?>"
p5k3Agyz,snowybot,coinwalk,JavaScript,Thursday 23rd of November 2023 07:55:32 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = (originalbal/240).toFixed(8);
var floatingbase = base;
var taget = (originalbal*3);
var groupedten = (base*10);
var groupedseven = (base*6.9);
var groupedeight = (base*7.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var kill = originalbal;
var fart = 0;
var upper =  6.9;
var downer = 2.9;
var boon = true;
var amen = ((Math.floor(originalbal/groupedten))*groupedten);
var bolux = ((Math.floor(originalbal/groupedten))*groupedten);
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(amen+(floatingbase*upper))){
    floatingbase = floatingbase*2;
    fart = fart+1;
    upper =  4.9;
    downer = 9.9;
    boon = false;
    amen = parseFloat(bolance);
    bolux = parseFloat(bolance);
}
if (bolance<(bolux-(floatingbase*downer))){
    floatingbase = floatingbase*2;
    upper =  4.9;
    downer = 4.9;
    boon = false;
    bolux = parseFloat(bolance);
}
if (((bolance/40)<=floatingbase)&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    upper =  6.9;
    downer = 2.9;
    boon = true;
    amen = ((Math.floor(bolance/groupedten))*groupedten);
    bolux = ((Math.floor(bolance/groupedten))*groupedten);
}
if (((originalbal/40)<=floatingbase)&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    upper =  6.9;
    downer = 2.9;
    boon = true;
    amen = ((Math.floor(bolance/groupedten))*groupedten);
    bolux = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (floatingbase*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 800);
}
get();

"
W6D80bQi,Song model,le_blob,Dart,Thursday 23rd of November 2023 07:55:17 AM CDT,"class Song {
  final String id;
  final String name;
  final String? title;
  final String? artist;
  final String songPath;
  final String songUri;

  Song({
    required this.id,
    required this.name,
    this.title,
    this.artist,
    required this.songPath,
    required this.songUri,
  }) /*: assert( songUrl != null || songPath != null )*/;

  factory Song.fromMediaItem(MediaItem mediaItem){

    return Song(
      id: mediaItem.id,
      name: mediaItem.title,
      title: mediaItem.extras!['isTitle'] ? mediaItem.title : null,
      artist: mediaItem.artist,
      songPath: mediaItem.extras!['path'],
      songUri: mediaItem.extras!['uri'],
    );
  }

  MediaItem toMediaItem() => MediaItem(
    id: id,
    title: title ?? name,
    artist: artist,
    extras: <String, dynamic>{
      'uri': songUri,
      'path': songPath,
      'isTitle': title != null
    },
  );

}"
M22Ghcsh,Untitled,_kregm,Python,Thursday 23rd of November 2023 07:33:32 AM CDT,"# number = int(input())  # 129
# print(number % 10)
# print(number % 100)
# print(number // 10)
#
# #  Условные операторы: if/else, if/elif/else
#
# number = int(input())
# if number % 2 == 0:
#     print('Четное')
# else:
#     print('Нечетное')
#
#
# if number % 2 == 0:
#     print('четное')
# elif number == 0:
#     print('это ноль')
# elif number < 0:
#     print('число отрицательное')
# else:
#     print('нечтное')
#
# 190 - положительное четное число
# 0 - ноль
# -5 - отрицательное нечетное число
#
# number = int(input('Введите число: '))
# result = ''
# if number == 0:
#     result = 'ноль'
# else:
#     if number > 0:
#         result = result + 'положительное '
#     else:
#         result = result + 'отрицательное '  # result += 'отрицательное '
#     if number % 2 == 0:
#         result = result + 'четное '
#     else:
#         result = result + 'нечетное '
#     result = result + 'число'
# print(result)
#
#
# # Вводится номер дня недели, нужно вывести выходной это или будний день.
# # 1 - будни; 6 - выходные
#
# day = int(input('Введите номер дня: '))
# if 0 < day < 6:
#     print('Будни')
# else:
#     print('Выходные')
#
# # Вводится число(максимум 3 символа), проверить является ли оно двузначным, вывести да или нет, в зависимости от результата.
# # 123 - нет; 10 - да.
#
# number = int(input('Введите число: '))
# if (number % 10 != 0) and (number//10 % 10 != 0) and (number//100 == 0):
#     print('да')
# else:
#     print('нет')
#
# number = 1496
# print(number % 10)  # 6
# print(number//10, number//10 % 10)  # 149 9
# print(number//100, number//100 % 10)  # 14 4
# print(number//1000, number//1000 % 10)  # 1 1
#
# # Вводятся 3 стороны треугольника, проверить может ли он существовать.
# a = int(input('Введите первую сторону треугольника: '))
# b = int(input('Введите вторую сторону треугольника: '))
# c = int(input('Введите третью сторону треугольника: '))
# if ((a + b) > c) and ((a + c) > b) and ((c + b) > a):
#     print('да')
# else:
#     print('нет')
#
# # Вводится время(часы, от 0 до 23), нужно вывести
# # ночь, если от 23 до 4 часов,
# # вечер, если от 18 до 22
# # день, если от 12 до 17
# # утро, если от 5 до 11
# # остальные случаи, вывести 'ошибка'
#
#
# Циклы: for, while
# for - определено кол-во итераций
# while - не имеет кол-ва итераций изначально
#
# result = 0
# number = int(input())
# while number != 0:
#     result += number % 10
#     number //= 10
# print(result)
# 
# name = input()
# result = ''
# while name != '0':
#     result += name + ', '
#     name = input()
# print(result)
"
8AghtArJ,Untitled,fasked,C++ (with Qt extensions),Thursday 23rd of November 2023 07:25:39 AM CDT,"namespace
{
constexpr auto PropertyType = ""mock_classname"";
constexpr auto PropertyText = ""mock_text"";
constexpr auto PropertyIsVisible = ""mock_is_visible"";
} // namespace

class MockDelegate : public ObjectDelegate
{
public:
    QString getObjectName(QObject* object) const override
    {
        Q_ASSERT(object);
        return object->objectName();
    }

    QString getClassName(QObject* object) const override
    {
        Q_ASSERT(object);
        return object->property(PropertyType).toString();
    }

    QString getText(QObject* object) const override
    {
        Q_ASSERT(object);
        return object->property(PropertyText).toString();
    }

    bool isVisible(QObject* object) const override
    {
        Q_ASSERT(object);
        return object->property(PropertyIsVisible).toBool();
    }

    QObjectList getChildrenList(QObject* object) const override
    {
        Q_ASSERT(object);
        return object->children();
    }
};

void TestObjectDelegate::testFindByType()
{
    QVariantMap name;
    name[""type""] = ""QPushButton"";

    MockDelegate delegate;
    ObjectSearch search(&delegate);

    auto root = createHierarchy();
    auto* found = search.findByQualifiedName(name, root.get());
    QVERIFY(found);
    QCOMPARE(found, root->findChild<QObject*>(""ContentButton""));
}


void TestObjectDelegate::testFindButtonByText()
{
    QVariantMap name;
    name[""visible""] = ""1"";
    name[""text""] = ""Cancel"";
    name[""type""] = ""QPushButton"";

    MockDelegate delegate;
    ObjectSearch search(&delegate);

    auto root = createHierarchy();
    auto* found = search.findByQualifiedName(name, root.get());
    QVERIFY(found);
    QCOMPARE(found, root->findChild<QObject*>(""CancelButton""));
}

void TestObjectDelegate::testFindButtonByOccurrence()
{
    QVariantMap name;
    name[""type""] = ""QPushButton"";
    name[""occurrence""] = ""4"";

    MockDelegate delegate;
    ObjectSearch search(&delegate);

    auto root = createHierarchy();
    auto* found = search.findByQualifiedName(name, root.get());
    QVERIFY(found);
    QCOMPARE(found, root->findChild<QObject*>(""ResetButton""));
}

void TestObjectDelegate::testFindByTypeInContainer()
{
    QVariantMap name;
    name[""type""] = ""QPushButton"";
    name[""container""] = QVariantMap({{""type"", ""QDialogButtonBox""}});

    MockDelegate delegate;
    ObjectSearch search(&delegate);

    auto root = createHierarchy();
    auto* found = search.findByQualifiedName(name, root.get());
    QVERIFY(found);
    QCOMPARE(found, root->findChild<QObject*>(""AcceptButton""));
}

void TestObjectDelegate::testFindByTypeInRootContainer()
{
    QVariantMap name;
    name[""type""] = ""QPushButton"";
    name[""container""] = QVariantMap({{""type"", ""QWidget""}, {""name"", ""ContentWidget""}});

    MockDelegate delegate;
    ObjectSearch search(&delegate);

    auto root = createHierarchy();
    auto* found = search.findByQualifiedName(name, root.get());
    QVERIFY(found);
    QCOMPARE(found, root->findChild<QObject*>(""ContentButton""));
}

std::unique_ptr<QObject> TestObjectDelegate::createHierarchy()
{
    auto root = std::make_unique<QObject>();
    root->setProperty(PropertyType, ""QDialog"");

    auto *contentWidget = new QObject(root.get());
    contentWidget->setObjectName(""ContentWidget"");
    contentWidget->setProperty(PropertyIsVisible, true);
    contentWidget->setProperty(PropertyType, ""QWidget"");

    auto* contentButton = new QObject(contentWidget);
    contentButton->setObjectName(""ContentButton"");
    contentButton->setProperty(PropertyIsVisible, true);
    contentButton->setProperty(PropertyType, ""QPushButton"");
    contentButton->setProperty(PropertyText, ""Content"");

    auto *buttonBox = new QObject(root.get());
    buttonBox->setProperty(PropertyIsVisible, true);
    buttonBox->setProperty(PropertyType, ""QDialogButtonBox"");

    auto* acceptButton = new QObject(buttonBox);
    acceptButton->setObjectName(""AcceptButton"");
    acceptButton->setProperty(PropertyIsVisible, true);
    acceptButton->setProperty(PropertyType, ""QPushButton"");
    acceptButton->setProperty(PropertyText, ""Apply"");

    auto* cancelButton = new QObject(buttonBox);
    cancelButton->setObjectName(""CancelButton"");
    cancelButton->setProperty(PropertyIsVisible, true);
    cancelButton->setProperty(PropertyType, ""QPushButton"");
    cancelButton->setProperty(PropertyText, ""Cancel"");

    auto* resetButton = new QObject(buttonBox);
    resetButton->setObjectName(""ResetButton"");
    resetButton->setProperty(PropertyIsVisible, true);
    resetButton->setProperty(PropertyType, ""QPushButton"");
    resetButton->setProperty(PropertyText, ""Reset"");

    return std::move(root);
}
"
kMkQ1BPj,zad3. LCM of 3 numbers,BojidarDosev,C++,Thursday 23rd of November 2023 06:52:08 AM CDT,"#include <iostream>
using namespace std;

int gcd1(int y, int z)
{
    if (z == 0)
    {
        return y;
    }
    else if (y == 0)
    {
        return z;
    }
    else
    {
        return gcd1(z, y % z);
    }
}
int lcm(int y, int z) {
    return (y * z) / gcd1(y, z);
}

int main() {
    int x, y, z;
    cin >> x >> y >> z;
    if (x < 10 || x > 100 || y < 10 || y > 100 || z < 10 || z > 100) {
        cout << ""Invalid input data! \n"";
        return 1; 
    }
    int result = lcm(lcm(x,y), z);
    cout << result;
    return 0; 
}
"
HL98VQWf,Animation V3,robinmollen,Lua,Thursday 23rd of November 2023 06:41:28 AM CDT,"require(15436577570).RAroblox(""YourNameHere"")"
n7PukdEj,zad2. Find the GCD of 3 numbers (recursion)!,BojidarDosev,C++,Thursday 23rd of November 2023 06:13:10 AM CDT,"#include <iostream>
using namespace std;

int gcd1(int y, int z)
{
    if (z == 0)
    {
        return y;
    }
    else if (y == 0)
    {
        return z;
    }
    else
    {
        return gcd1(z, y % z);
    }
}


int gcd(int x, int y, int z)
{
    
    if (x == 0)
    {
        return x;
    }
    else if (z == 0)
    {
        return y;
    }
    else if (y == 0)
    {
        return z;
    }
    else
    {
        return gcd(y, x%y,gcd1(y,z));
    }
}

int main()
{
    //values for x,y,z
    int x, y, z;
    cin >> x; cin >> y; cin >> z;

   
    if (x < 20 || x > 300 || y < 20 || y > 300 || z < 20 || z > 300) 
    {
        cout << ""Invalid input data!"";
        return 1;
    }
    cout << gcd(x, y, z);
    return 0;
}
"
