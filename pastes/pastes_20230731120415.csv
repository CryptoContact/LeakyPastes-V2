id,title,username,language,date,content
1d3CVNwN,tankSwap,ZJSSON,Lua,Monday 31st of July 2023 06:57:05 AM CDT,"local BARREL=""minecraft:barrel_6""
local HOPPER=""minecraft:hopper_14""
local DEPLOYER=""create:deployer_0""

local dep=peripheral.wrap(DEPLOYER)
local bar=peripheral.wrap(BARREL)
local hop=peripheral.wrap(HOPPER)
local hop2=peripheral.wrap('right')
local im=peripheral.find('inventoryManager')

redstone.setOutput('right',true)
local pos=1
while true do
    print(""Start check"")
    local c=im.removeItemFromPlayerNBT('north',1,nil,{fingerprint=""2562E8108422876C06CF2431D7F8AF30""})
    if c==1 then
        bar.pullItems(DEPLOYER,1)
        dep.pullItems(BARREL,1)
        im.addItemToPlayer('north',1)
    end
    
    redstone.setOutput('right',false)
    sleep(1)
    redstone.setOutput('right',true)
    sleep(3)
end"
7Z5wZQzy,Ping Pong!,AccoutDeleted1022,Lua,Monday 31st of July 2023 06:45:37 AM CDT,"repeat
    local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""Io  I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""I o I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""l  ol"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""I o I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))
local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""Io  I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""I o I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""l  ol"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))

wait(0.3)

local args = {
    [1] = ""Update"",
    [2] = {
        [""DescriptionText""] = ""I o I"",
        [""ImageId""] = 0
    }
}

game:GetService(""ReplicatedStorage""):WaitForChild(""CustomiseBooth""):FireServer(unpack(args))
    until
If DescriptionText = stop
    print(""Script Has Stopped!"")
    -- idk what do here"
ppXQYH9b,Query Report Log Gate IN SC,Alimin1313,PostgreSQL,Monday 31st of July 2023 06:43:26 AM CDT,"SELECT aa.gate_in_id, coalesce(aa.balance,0) as balance, bb.terminal_name as terminal, dd.station_name as station, CONCAT(to_char(aa.created_on, 'dd-mm-YYYY'), ', ', to_char(aa.created_on, 'HH24:MI:SS')) as gate_in_on, gg.terminal_name as terminal_before_in, ii.card_type_name AS type_card, ee.station_name as station_before_in,CONCAT(to_char(aa.gate_in_before_on, 'dd-mm-YYYY'), ', ', to_char(aa.gate_in_before_on, 'HH24:MI:SS')) as gate_before_in,hh.terminal_name as terminal_before_out, ff.station_name as station_before_out,aa.card_number,cc.bank_name,aa.created_on, CONCAT(to_char(aa.gate_out_before_on, 'dd-mm-YYYY'), ', ', to_char(aa.gate_out_before_on, 'HH24:MI:SS')) as gate_before_out, CASE WHEN jj.uid is not null then jj.uid WHEN ll.uid is not null then ll.uid ELSE null end as uid, CASE WHEN jj.name is not null then jj.name WHEN ll.name is not null then ll.name ELSE null end as name, CASE WHEN jj.nik is not null then jj.nik WHEN ll.nik is not null then ll.nik ELSE null end as nik, CASE WHEN jj.institution_name is not null then jj.institution_name WHEN ll.institution_name is not null then ll.institution_name ELSE null end as institution_name, CASE WHEN kk.name_type is not null then kk.name_type WHEN ll.card_number is not null then 'Family Trip' ELSE null end as subs_card_type_name FROM trx.t_trx_gate_in_kue aa LEFT JOIN master.t_mtr_device_terminal bb ON aa.terminal_code = bb.terminal_code LEFT JOIN master.t_mtr_bank cc ON aa.card_issuer = cc.bank_code LEFT JOIN master.t_mtr_station dd ON aa.station_code = dd.station_id LEFT JOIN master.t_mtr_station ee ON aa.station_code_in_before = ee.station_id LEFT JOIN master.t_mtr_station ff ON aa.station_code_out_before = ff.station_id LEFT JOIN master.t_mtr_device_terminal gg ON aa.terminal_code_in_before = gg.terminal_code LEFT JOIN master.t_mtr_device_terminal hh ON aa.terminal_code_out_before = hh.terminal_code LEFT JOIN master.t_mtr_card_type ii ON aa.card_type_id= ii.card_type_id LEFT JOIN master.t_mtr_subs_card_registration jj ON aa.card_number = jj.card_number LEFT JOIN master.t_mtr_subs_card_type kk ON jj.subs_card_type_id = kk.subs_card_type_id LEFT JOIN master.t_mtr_family_trip_registration ll ON aa.card_number = ll.card_number WHERE aa.status =1 AND aa.card_type_id IN(3,4) AND jj.subs_card_type_id = '4' AND aa.created_on between '2023-07-25' and ('2023-07-31'::date + '1 day'::interval) "
w1Qdz8Vh,Untitled,phpface,PHP,Monday 31st of July 2023 06:33:56 AM CDT,"get_post_meta( get_the_ID(), 'viewCount', true )"
x5uNmasL,WooCommerce Long Filename Overflow - Fix,CodeDropz,CSS,Monday 31st of July 2023 06:30:47 AM CDT,"@media screen and (max-width: 768px) {
   .codedropz--results {
        width: calc(100vw - 30px);
    }
}"
jTAuzDpw,Neznayaka 6.0.9,artem360,Lua,Monday 31st of July 2023 06:28:33 AM CDT,"working = true
version = ""1.0.0"""
bFTqUZzr,Untitled,kchandran,JSON,Monday 31st of July 2023 06:17:40 AM CDT,"curl --location --request GET 'https://api.bigbasket.com/crmapi/v4.0.0/get-member-orders/?bbsign=ZqVZix_Y7_UJDItYDeaLirl5goxTCVrtqCF8xhP9Idw%3D%3AbWVtYmVyX2lk&member_id=70996' \
--header 'Authorization: Basic a2FwdHVyZTpLYXB0dXJlQDEyMw==' \
--header 'Cookie: _bb_cid=1; _bb_rd=6; _bb_rdt=""MzEyOTMyNjYzNQ==.0""; _bb_tc=0; ts=""2021-09-03 11:44:58.150""; _bb_cid=1; ts=""2023-07-31 16:44:11.270""'"
346fwnYz,RelatÃ³rio informando quais clientes realizaram compras de mais de 1 unidade de um mesmo item,williansebastiao,PL/SQL,Monday 31st of July 2023 06:13:44 AM CDT,"select soc.user_id,
       u.name,
       u.email,
       u.cpf,
       c.payment_type,
       c.flag_card,
       soi.price,
       soi.payment_date,
       soi.send_date,
       sop.payment_type,
       sop.value,
       sop.discount,
       sop.quantity,
       soc.consumed,
       i.cart_item_id,
       i.price,
       i.send_date,
       i.installment,
       ci.last_invoice_status,
       ci.discount_price,
       c.status
from store_oneclick_invoice soi
         join store_oneclick_purchase sop on soi.store_oneclick_purchase_id = sop.id
         join store_oneclick_campaign soc on sop.oneclick_campaign_id = soc.id
         join invoice i on soi.invoice_id = i.id
         join cart_items ci on i.cart_item_id = ci.id
         join cart c on ci.id_cart = c.id
         join user u on c.user_id = u.id
where sop.quantity > 1
order by sop.created_at desc;"
5dvjyYnD,data650,TestGuy1,JSON,Monday 31st of July 2023 06:13:10 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '000430c00893486ec898f6422ea42742c887584995d06811a1b17ca68e50c92e2fafaa15fc7821e42167acf288308f2c1a2218537338b2c73af8b35b63c0d6f6a3c169ca5f016daa3453abe259fa63388e11d9413c0f5dc598d6f7056dde9802c2073548178f46095aa82d4d376f499b8d78868b6029f9860077dd566c66d13d',
  otherdata: [
    '4fb3e24b72a25e3acddc7a555d0e46dc',
    '9404bc1fcc82563121413e4d03840e75',
    'bf4256302b8fc049a09bf4bec8de89c7',
    'b00a80bd11d9ae056500925b520edfe8',
    '48730c1adc940e4fcca1d9fa9289943e',
    '30bb5ffa141f106aa4577c5fc3930954',
    '5810b56cda60bc11ccf7a8f3d941b757',
    '9cd905940dba06ae99953858c72d0e80'
  ]
}"
0VwwHBDR,"12U,s Gui Script Hub",robinmollen,Lua,Monday 31st of July 2023 06:05:49 AM CDT,"require(14260116557).RAroblox(""YourNameHere"")"
S5k6Ca2M,discovery + yt-dlp helper,sirelkilla,PowerShell,Monday 31st of July 2023 05:29:06 AM CDT,"#powershell script to scrape discovery plus easier (LEGAL- need paid account, but free trial works)

$URL = Read-Host -Prompt ""Show URL (e.g. discoveryplus.com/show/alone)""
while (!(($input0 -eq ""y"") -or ($input0 -eq ""n""))) {
	$input0 = (Read-Host -Prompt ""Do you want ALL seasons? (y/n)"").ToLower()
}
$want_all_seasons = $input0 -eq ""y""
$want_seasons = @()
while (!($want_all_seasons -or $want_seasons[0])) {
	$want_seasons = (Read-Host -Prompt ""Type list of seasons (e.g. 2,3)"") -split ""\D+""
}
while (!(($qualityInput -eq ""y"") -or ($qualityInput -eq ""n""))) {
	$qualityInput = (Read-Host -Prompt ""Do you want 720p files to save space and time? Otherwise max. (y/n)"").ToLower()
}
$browser = Read-Host -Prompt ""Browser (e.g. brave,chrome)""
cd (Read-Host -Prompt ""Full path where season folders should go (leave blank for no change)"")
Write-Host
Write-Host ""---------------------------""
Write-Host
$matchsuc = $URL -match '/show/([\w\-]+)'
if (!$matchsuc) {
	Read-Host -Prompt ""Invalid URL!""
	exit
}
$altid = $Matches[1]
#token / cookie is required to use api, so create anonymous one
$token = (ConvertFrom-Json (iwr ""https://us1-prod-direct.discoveryplus.com/token?deviceId=abcdefgh&realm=go&shortlived=true"").Content).Data.attributes.token
$cookie = New-Object System.Net.Cookie -Property @{ Name=""st""; Value=$token; Domain=""us1-prod-direct.discoveryplus.com"" }
$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession
$session.Cookies.Add($cookie)
#fetch hidden information
$infoDump = ConvertFrom-Json (iwr (""https://us1-prod-direct.discoveryplus.com/cms/routes/show/""+$altid+""?include=default"") -WebSession $session -Headers @{""accept"" = ""*/*""; ""x-disco-client"" = ""WEB:UNKNOWN:dplus_us:2.25.4""; ""x-disco-params"" = ""realm=go,bid=dplus,hn=www.discoveryplus.com,hth=,features=ar""}).Content
foreach ($inc in $infoDump.included) {
	if ($inc.attributes -and ($inc.attributes.alternateId -eq $altid)) {
		$showIdStr = $inc.attributes.analyticsId.Substring(3)
		$trueSeasons = $inc.attributes.seasonNumbers
	} ElseIf ($inc.attributes -and ($inc.attributes.name -eq ""generic-show-episodes"")) {
		$cmsid = $inc.id
	}
	if ($showIdStr -and $cmsid) { break }
}
if ($want_all_seasons) {
	$want_seasons = $trueSeasons
}
$dlformat = ""bv[vbr<8000]+ba""
if ($qualityInput -eq ""y"") {
	$dlformat = '(bv[vbr<3100]/wv)+(ba[abr<111]/wa)'
}
foreach ($season in @($want_seasons)) {
	$old = $infoDump
	#fetch list of episodes from database
	$infoDump = ConvertFrom-Json (iwr (""https://us1-prod-direct.discoveryplus.com/cms/collections/""+$cmsid+""?include=default&pf[seasonNumber]=""+$season+""&pf[show.id]=""+$showIdStr) -WebSession $session -Headers @{""accept"" = ""*/*""; ""x-disco-client"" = ""WEB:UNKNOWN:dplus_us:2.25.4""; ""x-disco-params"" = ""realm=go,bid=dplus,hn=www.discoveryplus.com,hth=,features=ar""}).Content
	if ($old -eq $infoDump ) { break }
	mkdir(""S""+$season)
	$ep,$pad = 0,'0'
	#loop thru and download videos
	For ($i=0; $i -lt $infoDump.included.Length; $i++) { #foreach isn't in order
		$inc = $infoDump.included[$i]
		if ($inc.relationships -and $inc.relationships.show -and ($inc.relationships.show.data.id -eq $showIdStr) -and ($inc.attributes.path.IndexOf(""-trailer"") -eq -1)) {
			$ep++
			if ( $ep -gt 9 ) { $pad = '' }
			yt-dlp (""https://www.discoveryplus.com/video/""+$inc.attributes.path) --cookies-from-browser $browser -f $dlformat -o ($pwd.Path+""/S""+$season+'/E'+$pad+$ep+' %(title)s.%(ext)s') --retry-sleep exp=1
		}
	}
}
Read-Host -Prompt 'ALL DONE!'"
CH4B53T8,panel,inventrkits,Arduino,Monday 31st of July 2023 05:14:48 AM CDT,"//
//Program written by Bruce Bohnert
//07-10-2023
//
//
#include <Arduino.h>
#include <SPI.h>
#include <U8g2lib.h>
#include <TM1637Display.h>

#define CLK 6  //pin assignment for TM1637
#define DIO 5  //pin assignment for TM1637
 
U8G2_SH1106_128X64_NONAME_F_HW_I2C  u8g2Panel(U8G2_R0); // I2C / TWI
//U8G2_SH1106_128X64  u8g2Panel(U8G_I2C_OPT_NONE); // I2C / TWI
// PRE-SAVED BITMAP CONSTANTS
TM1637Display LEDDisplay = TM1637Display(CLK, DIO);


static const unsigned char LiquidO2Status [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x33, 0x00, 0x0C, 0xE0, 
  0x0F, 0x60, 0x00, 0x86, 0xC1, 0xFF, 0x00, 0x00, 0xF8, 0x03, 0xF0, 0xC3, 
  0x33, 0x00, 0x0C, 0xF8, 0x3F, 0x60, 0x00, 0x86, 0xC1, 0xFF, 0x03, 0x00, 
  0xFE, 0x0F, 0xF8, 0xC7, 0x33, 0x00, 0x0C, 0x3C, 0x78, 0x60, 0x00, 0x86, 
  0xC1, 0x00, 0x07, 0x00, 0x0F, 0x1E, 0x1C, 0xCE, 0x33, 0x00, 0x0C, 0x0C, 
  0x60, 0x60, 0x00, 0x86, 0xC1, 0x00, 0x0E, 0x00, 0x03, 0x18, 0x06, 0xDC, 
  0x33, 0x00, 0x0C, 0x06, 0xC0, 0x60, 0x00, 0x86, 0xC1, 0x00, 0x0C, 0x80, 
  0x01, 0x30, 0x06, 0xD8, 0x33, 0x00, 0x0C, 0x06, 0xC0, 0x60, 0x00, 0x86, 
  0xC1, 0x00, 0x18, 0x80, 0x01, 0x30, 0x00, 0xD8, 0x33, 0x00, 0x0C, 0x03, 
  0x80, 0x61, 0x00, 0x86, 0xC1, 0x00, 0x18, 0xC0, 0x00, 0x60, 0x00, 0xD8, 
  0x33, 0x00, 0x0C, 0x03, 0x80, 0x61, 0x00, 0x86, 0xC1, 0x00, 0x18, 0xC0, 
  0x00, 0x60, 0x00, 0xCC, 0x33, 0x00, 0x0C, 0x03, 0x80, 0x61, 0x00, 0x86, 
  0xC1, 0x00, 0x18, 0xC0, 0x00, 0x60, 0x00, 0xCC, 0x33, 0x00, 0x0C, 0x03, 
  0x80, 0x61, 0x00, 0x86, 0xC1, 0x00, 0x18, 0xC0, 0x00, 0x60, 0x00, 0xC6, 
  0x33, 0x00, 0x0C, 0x03, 0x80, 0x61, 0x00, 0x86, 0xC1, 0x00, 0x18, 0xC0, 
  0x00, 0x60, 0x00, 0xC3, 0x33, 0x00, 0x0C, 0x03, 0x80, 0x61, 0x00, 0x86, 
  0xC1, 0x00, 0x18, 0xC0, 0x00, 0x60, 0x80, 0xC1, 0x33, 0x00, 0x0C, 0x06, 
  0xC0, 0x61, 0x00, 0x86, 0xC1, 0x00, 0x1C, 0x80, 0x01, 0x30, 0xE0, 0xC0, 
  0x33, 0x00, 0x0C, 0x06, 0xC6, 0x60, 0x00, 0x86, 0xC1, 0x00, 0x0C, 0x80, 
  0x01, 0x30, 0x70, 0xC0, 0x33, 0x00, 0x0C, 0x0C, 0xFE, 0xC0, 0x00, 0x83, 
  0xC1, 0x00, 0x0E, 0x00, 0x03, 0x18, 0x18, 0xC0, 0x33, 0x00, 0x0C, 0x3C, 
  0x78, 0xC0, 0x81, 0x83, 0xC1, 0x00, 0x07, 0x00, 0x0F, 0x1E, 0x0C, 0xC0, 
  0xF3, 0x7F, 0x0C, 0xF0, 0xFF, 0x80, 0xFF, 0x81, 0xC1, 0xFF, 0x03, 0x00, 
  0xFC, 0x0F, 0xFE, 0xDF, 0xF3, 0x7F, 0x0C, 0xC0, 0xEF, 0x01, 0x7E, 0x80, 
  0xC1, 0xFF, 0x00, 0x00, 0xF8, 0x03, 0xFE, 0xDF, 0x03, 0x00, 0x00, 0x00, 
  0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xC0, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 
  0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0xFF, 0xFF, 0x03, 0xFC, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x73, 0x63, 0x03, 0xFE, 0x01, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xB9, 0x31, 
  0x03, 0x6E, 0x03, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0xDC, 0x98, 0x03, 0x6F, 0x03, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x6E, 0xCC, 0x03, 0x6F, 0x06, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x37, 0x66, 
  0x03, 0x6F, 0x06, 0xC0, 0x0B, 0x04, 0x24, 0x00, 0x80, 0x07, 0x0F, 0x83, 
  0x00, 0xE0, 0x3B, 0x33, 0x03, 0x57, 0x03, 0xC0, 0x0B, 0x04, 0x24, 0x00, 
  0x40, 0x88, 0x90, 0x44, 0x00, 0xE0, 0x9D, 0x19, 0x03, 0x06, 0x03, 0xC0, 
  0x0B, 0x08, 0x22, 0x00, 0x40, 0x88, 0x90, 0x44, 0x00, 0xE0, 0xCE, 0x8C, 
  0x03, 0xFE, 0x01, 0xC0, 0x0B, 0x08, 0x22, 0x20, 0x40, 0x88, 0x90, 0x24, 
  0x00, 0x60, 0x67, 0xC6, 0x03, 0xF8, 0x00, 0xC0, 0x0B, 0x10, 0x21, 0x00, 
  0x40, 0x88, 0x90, 0x24, 0x00, 0xE0, 0x33, 0x63, 0x03, 0x30, 0x00, 0xC0, 
  0x0B, 0x10, 0x21, 0x00, 0x40, 0x0C, 0x0F, 0x93, 0x01, 0xE0, 0x99, 0x31, 
  0x03, 0x30, 0x00, 0xC0, 0x0B, 0x10, 0x21, 0x00, 0x80, 0x8B, 0x10, 0x48, 
  0x02, 0xE0, 0xCC, 0x18, 0x83, 0x31, 0x0C, 0xC0, 0x0B, 0xA0, 0x20, 0x00, 
  0x00, 0x88, 0x10, 0x48, 0x02, 0x60, 0x66, 0x8C, 0x83, 0x37, 0x0F, 0xC0, 
  0x0B, 0xA0, 0x20, 0x00, 0x40, 0x88, 0x10, 0x44, 0x02, 0x60, 0x33, 0xC6, 
  0x83, 0xBF, 0x0F, 0xC0, 0x0B, 0x40, 0x20, 0x00, 0x40, 0x88, 0x10, 0x44, 
  0x02, 0xE0, 0x19, 0x63, 0xFF, 0xF9, 0x0D, 0xC0, 0xFB, 0x43, 0xE0, 0x2F, 
  0x80, 0x07, 0x0F, 0x82, 0x01, 0xE0, 0x8C, 0x31, 0xFF, 0xF9, 0xFC, 0xC7, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xC6, 0x18, 
  0x83, 0xDF, 0xFF, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x60, 0x63, 0x8C, 0x83, 0x0F, 0x0F, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x31, 0xC6, 0x83, 0x03, 0x0C, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x18, 0x63, 
  0x83, 0x00, 0x08, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x60, 0x8C, 0x31, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xC6, 0x18, 0x03, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x63, 0x8C, 
  0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xE0, 0x31, 0xC6, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x18, 0x63, 0x03, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x8C, 0x31, 
  0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x60, 0xC6, 0x18, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x63, 0x8C, 0x03, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x31, 0xC6, 
  0x01, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0x18, 0xE3, 0x01, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8F, 0xF1, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };


static const unsigned char BatteryStatusScreen [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x80, 0x0B, 0x10, 0x5C, 0x5B, 0x05, 0x18, 0xDA, 0x41, 0x58, 0x2B, 
  0x20, 0x1C, 0x00, 0x80, 0x01, 0x80, 0x3F, 0x30, 0xFC, 0xFF, 0x07, 0x7E, 
  0xFE, 0x61, 0xF8, 0x6F, 0x30, 0x7E, 0x00, 0x80, 0x01, 0x80, 0x71, 0x38, 
  0xE0, 0xE0, 0x00, 0xC3, 0x38, 0xF0, 0xC0, 0x61, 0x30, 0x63, 0x00, 0x80, 
  0x01, 0xC0, 0x60, 0x78, 0x60, 0xC0, 0x00, 0xC3, 0x30, 0xF0, 0x80, 0x60, 
  0x30, 0xC1, 0x00, 0x80, 0x01, 0x80, 0x60, 0x6C, 0x60, 0xC0, 0x00, 0x43, 
  0x30, 0x90, 0x81, 0x61, 0x30, 0x03, 0x00, 0x80, 0x01, 0x80, 0x3F, 0xCC, 
  0x60, 0x40, 0x00, 0x1E, 0x30, 0x98, 0xC1, 0x60, 0x30, 0x1F, 0x00, 0x80, 
  0x01, 0xC0, 0x3F, 0xC4, 0x60, 0xC0, 0x00, 0x7C, 0x30, 0x18, 0x83, 0x61, 
  0x30, 0x7C, 0x00, 0x80, 0x01, 0x80, 0x60, 0xFE, 0x61, 0xC0, 0x00, 0xE0, 
  0x30, 0xFC, 0x83, 0x60, 0x30, 0x60, 0x00, 0x80, 0x01, 0xC0, 0xE0, 0xFE, 
  0x61, 0xC0, 0x80, 0x81, 0x30, 0xFC, 0x83, 0x61, 0xB0, 0xC1, 0x00, 0x80, 
  0x01, 0xC0, 0x61, 0x03, 0x61, 0xC0, 0x00, 0xC3, 0x30, 0x0C, 0x86, 0x60, 
  0xB0, 0xC1, 0x00, 0x80, 0x01, 0x80, 0x79, 0x03, 0x63, 0xC0, 0x00, 0xE7, 
  0x30, 0x06, 0xC6, 0xC1, 0x18, 0xE7, 0x00, 0x80, 0x01, 0x80, 0xBF, 0x01, 
  0x63, 0xC0, 0x00, 0x7E, 0x30, 0x06, 0x8C, 0xC0, 0x0F, 0x7E, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 
  0x02, 0x08, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x40, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x41, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 
  0x70, 0x0C, 0x1B, 0x02, 0x00, 0x78, 0x1C, 0x47, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xC0, 0x30, 0x0C, 0x19, 0x03, 0x06, 0x6C, 0xB2, 0x25, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x38, 0x1E, 0x3B, 0x02, 
  0x06, 0xC4, 0xB3, 0x34, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 
  0x39, 0x1A, 0x79, 0x02, 0x06, 0xC6, 0xBE, 0x17, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xE0, 0x39, 0x13, 0x49, 0xC3, 0x3F, 0xEC, 0x9E, 0xDB, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x40, 0x2D, 0xBF, 0xD9, 0x02, 
  0x06, 0xF8, 0x33, 0xE8, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x40, 
  0xAF, 0x3B, 0x8B, 0x03, 0x06, 0xC4, 0x23, 0xAC, 0x01, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x40, 0xA6, 0x61, 0x19, 0x03, 0x06, 0x6C, 0x32, 0xA4, 
  0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 0xE6, 0xC0, 0x09, 0x03, 
  0x00, 0x38, 0x1E, 0xE6, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x40, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x40, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x40, 0x80, 
  0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x40, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x7E, 0x38, 0x0C, 0x00, 
  0xE0, 0x38, 0x8E, 0x01, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0xEE, 0x28, 0x0C, 0x00, 0xB0, 0xD9, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0xC6, 0x3C, 0x0C, 0x62, 0x90, 0xCD, 0xD3, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0xC6, 0x24, 0x0C, 0x7F, 
  0xB0, 0x8D, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x7E, 0x34, 0x0C, 0x00, 0xF0, 0xC5, 0xAC, 0x03, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0xD6, 0x26, 0x0C, 0x6B, 0x18, 0xC5, 0xB0, 0x03, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x86, 0x32, 0x0C, 0x7F, 
  0x18, 0xC7, 0xD0, 0x02, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0xC6, 0x63, 0x04, 0x00, 0x98, 0x4D, 0xD8, 0x06, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x7E, 0xC3, 0x07, 0x00, 0xF0, 0x79, 0x88, 0x03, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x20, 0x08, 0x01, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };


// PRE-SAVED BITMAP CONSTANTS
static const unsigned char CryoTanksScreen [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x1C, 0xBC, 0x08, 0x08, 0x0F, 0x70, 0x1D, 0x02, 0x82, 0x19, 
  0x94, 0x07, 0x00, 0x80, 0x01, 0x00, 0x7F, 0xFE, 0x19, 0x8C, 0x3F, 0xF0, 
  0x1F, 0x06, 0x83, 0x19, 0xCE, 0x0F, 0x00, 0x80, 0x01, 0x80, 0xE3, 0x8C, 
  0x3B, 0xCE, 0x71, 0x80, 0x03, 0x0F, 0x87, 0x19, 0xE7, 0x1C, 0x00, 0x80, 
  0x01, 0x80, 0xC1, 0x04, 0x33, 0x66, 0x60, 0x00, 0x01, 0x0F, 0x8F, 0x99, 
  0x63, 0x18, 0x00, 0x80, 0x01, 0xC0, 0x80, 0x0E, 0x67, 0x63, 0x60, 0x80, 
  0x83, 0x0D, 0x8F, 0xD9, 0x60, 0x00, 0x00, 0x80, 0x01, 0xC0, 0x00, 0xDC, 
  0xC3, 0x63, 0xC0, 0x00, 0x81, 0x19, 0x9B, 0xF9, 0xC0, 0x07, 0x00, 0x80, 
  0x01, 0xC0, 0x00, 0xFE, 0xC1, 0x61, 0xC0, 0x00, 0xC3, 0x19, 0xBB, 0xF9, 
  0x81, 0x1F, 0x00, 0x80, 0x01, 0xC0, 0x80, 0xEC, 0xC0, 0x60, 0xC0, 0x80, 
  0xC3, 0x3F, 0xB3, 0x99, 0x01, 0x1C, 0x00, 0x80, 0x01, 0xC0, 0x80, 0x8E, 
  0x81, 0x61, 0xE0, 0x00, 0xC3, 0x3F, 0xE3, 0x19, 0x63, 0x10, 0x00, 0x80, 
  0x01, 0x80, 0xC1, 0x06, 0xC3, 0xE0, 0x60, 0x00, 0x61, 0x70, 0xC3, 0x19, 
  0x66, 0x18, 0x00, 0x80, 0x01, 0x00, 0xE7, 0x0C, 0x87, 0xC1, 0x39, 0x80, 
  0x63, 0x60, 0xC3, 0x19, 0xEE, 0x1D, 0x00, 0x80, 0x01, 0x00, 0x3F, 0x0C, 
  0x86, 0x80, 0x1F, 0x00, 0x33, 0xE0, 0x83, 0x19, 0xDC, 0x0F, 0x00, 0x80, 
  0x01, 0x00, 0x14, 0x00, 0x82, 0x00, 0x02, 0x00, 0x20, 0x00, 0x00, 0x01, 
  0x00, 0x02, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x7C, 0xC2, 
  0xC2, 0x40, 0x00, 0x00, 0xA0, 0x17, 0x16, 0x84, 0x0D, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0xFC, 0xC7, 0x62, 0xC0, 0x00, 0x00, 0xE0, 0x37, 0x36, 0x83, 
  0x1F, 0x00, 0x00, 0x80, 0x01, 0x00, 0x30, 0xC6, 0x36, 0xC0, 0x01, 0x00, 
  0x80, 0x39, 0x96, 0x83, 0x31, 0x00, 0x00, 0x80, 0x01, 0x00, 0x30, 0xCE, 
  0x1E, 0x60, 0x01, 0x00, 0x80, 0x71, 0xF6, 0x80, 0x11, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x30, 0xDB, 0x1E, 0x60, 0x03, 0x00, 0x80, 0xD1, 0xF6, 0x80, 
  0x1F, 0x00, 0x00, 0x80, 0x01, 0x00, 0x30, 0xDA, 0x36, 0xEF, 0x03, 0x00, 
  0x80, 0x91, 0xB7, 0xF9, 0x3F, 0x00, 0x00, 0x80, 0x01, 0x00, 0x30, 0xF3, 
  0x72, 0xF7, 0x07, 0x00, 0x80, 0xB1, 0x37, 0xF9, 0x31, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x30, 0xE2, 0x66, 0x30, 0x06, 0x00, 0x80, 0x11, 0x37, 0x83, 
  0x31, 0x00, 0x00, 0x80, 0x01, 0x00, 0x30, 0xE2, 0xC2, 0x18, 0x04, 0x00, 
  0x80, 0x19, 0x16, 0x86, 0x1F, 0x00, 0x00, 0x80, 0x01, 0x00, 0x20, 0x83, 
  0x02, 0x08, 0x04, 0x00, 0x80, 0x10, 0x26, 0x84, 0x05, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xF0, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x0F, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x00, 
  0x00, 0x30, 0x00, 0x18, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x06, 
  0x00, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x60, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 
  0xFF, 0x3F, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xFF, 0xDF, 0x3E, 0x00, 0x12, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xDF, 0xFF, 0x3F, 0x00, 0x12, 
  0x00, 0x06, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x7F, 
  0xFB, 0x3F, 0x00, 0x12, 0x00, 0xFE, 0xDF, 0x7F, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xFF, 0x7F, 0x3F, 0x00, 0x12, 0x00, 0xFC, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 0x7F, 0x3F, 0x00, 0x12, 
  0x00, 0xFE, 0x7F, 0xF7, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xE7, 
  0xFD, 0x36, 0x00, 0x12, 0x00, 0xDE, 0xF6, 0xFF, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xFF, 0xFF, 0x3F, 0x00, 0x12, 0x00, 0x7E, 0xFF, 0xFE, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xBF, 0xEF, 0x3F, 0x00, 0x16, 
  0x00, 0xFC, 0xEF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 
  0xBF, 0x3E, 0xE0, 0xFF, 0x03, 0xFE, 0xFE, 0xEF, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xDF, 0xFE, 0x3F, 0x20, 0x00, 0x02, 0x7C, 0xFF, 0xFB, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0x3F, 0x30, 0x00, 
  0x02, 0xDE, 0xBF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 
  0xB7, 0x3F, 0x10, 0x00, 0x02, 0xFE, 0xFB, 0xFB, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x7F, 0xFF, 0x3E, 0x00, 0x00, 0x02, 0xFE, 0xF7, 0xFF, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 0x7B, 0x3F, 0x30, 0x00, 
  0x02, 0xFC, 0xBF, 0xF7, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFF, 
  0xFE, 0x3F, 0x20, 0x00, 0x02, 0xBC, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xDF, 0xEF, 0x3F, 0xF0, 0xFF, 0x03, 0xFE, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFE, 0xFF, 0x1F, 0x80, 0x56, 
  0x00, 0xFC, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xFE, 
  0xFF, 0x1F, 0x80, 0x52, 0x00, 0xF8, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xFC, 0xFF, 0x0F, 0x80, 0x52, 0x00, 0xF0, 0xFF, 0x1F, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xF0, 0xFF, 0x03, 0x80, 0x52, 
  0x00, 0xE0, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x80, 0x52, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x80, 0x52, 0x00, 0x00, 0x90, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0xF9, 0xFF, 0xFF, 0xD2, 
  0xFF, 0xFF, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x16, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };

// PRE-SAVED BITMAP CONSTANTS
static const unsigned char LifeSupportScreen [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x40, 0x80, 0xF8, 0xF9, 0x03, 0x3C, 0x04, 0xE2, 0x87, 0x1F, 0x38, 
  0xF0, 0xE3, 0x0F, 0xC0, 0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x42, 0x04, 
  0x22, 0x88, 0x20, 0xC6, 0x10, 0x04, 0x01, 0xC0, 0x03, 0x40, 0x80, 0x08, 
  0x08, 0x00, 0x42, 0x04, 0x22, 0x88, 0x20, 0x82, 0x10, 0x04, 0x01, 0xC0, 
  0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x02, 0x04, 0x22, 0x88, 0x20, 0x01, 
  0x11, 0x04, 0x01, 0xC0, 0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x0C, 0x04, 
  0x22, 0x88, 0x20, 0x01, 0x11, 0x04, 0x01, 0xC0, 0x03, 0x40, 0x80, 0xF8, 
  0xF8, 0x01, 0x30, 0x04, 0xE2, 0x87, 0x1F, 0x01, 0xF1, 0x03, 0x01, 0xC0, 
  0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x40, 0x04, 0x22, 0x80, 0x00, 0x01, 
  0x11, 0x01, 0x01, 0xC0, 0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x40, 0x04, 
  0x22, 0x80, 0x00, 0x01, 0x11, 0x02, 0x01, 0xC0, 0x03, 0x40, 0x80, 0x08, 
  0x08, 0x00, 0x42, 0x04, 0x22, 0x80, 0x00, 0x82, 0x10, 0x04, 0x01, 0xC0, 
  0x03, 0x40, 0x80, 0x08, 0x08, 0x00, 0x42, 0x08, 0x21, 0x80, 0x00, 0xC6, 
  0x10, 0x04, 0x01, 0xC0, 0x03, 0xC0, 0x8F, 0x08, 0xF8, 0x03, 0x3C, 0xF0, 
  0x20, 0x80, 0x00, 0x38, 0x10, 0x08, 0x01, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0xC3, 0x81, 0xC0, 0x47, 0x82, 0x00, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0x23, 0x82, 0x40, 0x48, 0x86, 0x80, 0x90, 0x08, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0x13, 0x44, 0x41, 0x48, 
  0x8A, 0x40, 0xA0, 0x08, 0x00, 0x00, 0x00, 0x80, 0x81, 0x07, 0x00, 0xC0, 
  0x13, 0x40, 0x41, 0x48, 0x8A, 0x40, 0x20, 0x08, 0x00, 0x00, 0x00, 0x80, 
  0x81, 0x07, 0x00, 0xC0, 0x13, 0x20, 0xC2, 0x47, 0x92, 0x40, 0x20, 0x04, 
  0x00, 0x00, 0x00, 0x80, 0xC1, 0x06, 0x00, 0xC0, 0x13, 0xE0, 0x43, 0x48, 
  0xA2, 0x40, 0x20, 0x02, 0x00, 0x00, 0x00, 0x80, 0x67, 0x06, 0x00, 0xC0, 
  0x13, 0x24, 0x42, 0x48, 0xA2, 0x40, 0x20, 0x01, 0x00, 0x00, 0x00, 0x80, 
  0x37, 0x06, 0x00, 0xC0, 0x23, 0x12, 0x44, 0x48, 0xC2, 0x80, 0x90, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x3D, 0x06, 0x00, 0xC0, 0xC3, 0x11, 0xC4, 0x47, 
  0x82, 0x00, 0x8F, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x19, 0x06, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0x23, 0xC8, 0x0F, 0xE1, 0xEF, 0xE7, 0xC3, 0x03, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0x23, 0x48, 0x00, 0x01, 
  0x21, 0x20, 0x24, 0x04, 0x00, 0x00, 0x00, 0x80, 0x81, 0x07, 0x00, 0xC0, 
  0x23, 0x48, 0x80, 0x02, 0x21, 0x20, 0x24, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xC1, 0x07, 0x00, 0xC0, 0x23, 0x48, 0x80, 0x02, 0x21, 0x20, 0x24, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xC5, 0x06, 0x00, 0xC0, 0xE3, 0xCF, 0x47, 0x04, 
  0xE1, 0xE3, 0xC3, 0x03, 0x00, 0x00, 0x00, 0x80, 0x67, 0x06, 0x00, 0xC0, 
  0x23, 0x48, 0xC0, 0x07, 0x21, 0x20, 0x02, 0x04, 0x00, 0x00, 0x00, 0x80, 
  0x3F, 0x06, 0x00, 0xC0, 0x23, 0x48, 0x40, 0x04, 0x21, 0x20, 0x04, 0x04, 
  0x00, 0x00, 0x00, 0x80, 0x1D, 0x06, 0x00, 0xC0, 0x23, 0x48, 0x20, 0x08, 
  0x21, 0x20, 0x24, 0x04, 0x00, 0x00, 0x00, 0x80, 0x19, 0x06, 0x00, 0xC0, 
  0x23, 0xC8, 0x2F, 0x08, 0xE1, 0x27, 0xC8, 0x03, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x81, 0x07, 0x00, 0xC0, 
  0x13, 0x42, 0x08, 0x7F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xC1, 0x07, 0x00, 0xC0, 0x13, 0x45, 0x08, 0x08, 0x01, 0x41, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xC1, 0x06, 0x00, 0xC0, 0x13, 0x45, 0x14, 0x08, 
  0x01, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x67, 0x06, 0x00, 0xC0, 
  0x13, 0x45, 0x14, 0x08, 0x01, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x37, 0x06, 0x00, 0xC0, 0x23, 0x25, 0x14, 0x08, 0x1F, 0x3F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x3D, 0x06, 0x00, 0xC0, 0xA3, 0x28, 0x22, 0x08, 
  0x01, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1D, 0x06, 0x00, 0xC0, 
  0xA3, 0x28, 0x3E, 0x08, 0x01, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xFF, 0x07, 0x00, 0xC0, 0xA3, 0x28, 0x22, 0x08, 0x01, 0x41, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0xC0, 0xA3, 0x28, 0x41, 0x08, 
  0x01, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x43, 0x10, 0x41, 0x08, 0x3F, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };

static const unsigned char IMUStatusScreen [] U8X8_PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x33, 0x38, 0x00, 0x0E, 
  0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 
  0x33, 0x78, 0x00, 0x0F, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0xF1, 0x07, 0x00, 0xC0, 0x33, 0x78, 0x00, 0x0F, 0x03, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0xF3, 0x03, 0x00, 0xC0, 0x33, 0xD8, 0x80, 0x0D, 
  0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x87, 0x01, 0x00, 0xC0, 
  0x33, 0xD8, 0x80, 0x0D, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xC1, 0x00, 0x00, 0xC0, 0x33, 0xD8, 0x80, 0x0D, 0x03, 0x30, 0x00, 0x80, 
  0x20, 0x00, 0x00, 0x80, 0x61, 0x00, 0x00, 0xC0, 0x33, 0x98, 0xC1, 0x0C, 
  0x03, 0x30, 0x00, 0x00, 0x11, 0x00, 0x00, 0x80, 0xF1, 0x03, 0x00, 0xC0, 
  0x33, 0x98, 0xC1, 0x0C, 0x03, 0x30, 0x00, 0x00, 0x11, 0x00, 0x00, 0xC0, 
  0xFB, 0x03, 0x00, 0xC0, 0x33, 0x98, 0xC1, 0x0C, 0x03, 0x30, 0x00, 0x00, 
  0x0A, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0xC0, 0x33, 0x18, 0x63, 0x0C, 
  0x03, 0x30, 0x00, 0x00, 0x04, 0x3E, 0xC0, 0xBF, 0xFF, 0x01, 0x00, 0xC0, 
  0x33, 0x18, 0x63, 0x0C, 0x03, 0x30, 0x00, 0x00, 0x0A, 0x3E, 0xF0, 0x87, 
  0xF1, 0x07, 0x00, 0xC0, 0x33, 0x18, 0x63, 0x0C, 0x03, 0x30, 0x00, 0x00, 
  0x11, 0x1E, 0xBC, 0x83, 0xC1, 0x1E, 0x00, 0xC0, 0x33, 0x18, 0x36, 0x0C, 
  0x03, 0x30, 0x00, 0x00, 0x11, 0x3E, 0xCE, 0x80, 0x81, 0x39, 0x00, 0xC0, 
  0x33, 0x18, 0x36, 0x0C, 0x03, 0x30, 0x00, 0x80, 0x20, 0x66, 0x67, 0x80, 
  0x01, 0xE3, 0x00, 0xC0, 0x33, 0x18, 0x36, 0x0C, 0x06, 0x18, 0x00, 0x00, 
  0x00, 0xC0, 0x71, 0x80, 0x01, 0xC6, 0x01, 0xC0, 0x33, 0x18, 0x1C, 0x0C, 
  0x0E, 0x1C, 0x00, 0x00, 0x00, 0xC0, 0x31, 0x80, 0x01, 0x8E, 0x03, 0xC0, 
  0x33, 0x18, 0x1C, 0x0C, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x60, 0x1B, 0x80, 
  0x01, 0x0C, 0x83, 0xC0, 0x33, 0x18, 0x1C, 0x0C, 0xF0, 0x03, 0x00, 0x00, 
  0x00, 0x30, 0x1E, 0x80, 0x01, 0x18, 0xC6, 0xC3, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0C, 0x80, 0x01, 0x18, 0x8C, 0xCF, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x80, 
  0x01, 0x38, 0x9C, 0xCF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0C, 0x76, 0x80, 0x01, 0x30, 0xF8, 0xC7, 0x43, 0x20, 0x40, 0xF0, 
  0x41, 0x20, 0xFE, 0xF9, 0x03, 0x0C, 0xE6, 0x80, 0x01, 0x30, 0x7C, 0xC3, 
  0xA3, 0x20, 0x40, 0x08, 0xC2, 0x20, 0x02, 0x08, 0x04, 0x06, 0xC6, 0x81, 
  0x01, 0x70, 0x3F, 0xC2, 0xA3, 0x20, 0x40, 0x04, 0x44, 0x21, 0x02, 0x08, 
  0x08, 0x06, 0x87, 0x83, 0x01, 0xE0, 0x33, 0xC0, 0xA3, 0x20, 0x40, 0x04, 
  0x40, 0x21, 0x02, 0x08, 0x08, 0x06, 0x03, 0x87, 0x01, 0xF8, 0x60, 0xC0, 
  0x13, 0x21, 0x40, 0x04, 0x40, 0x22, 0x02, 0x08, 0x08, 0x03, 0x03, 0x8E, 
  0x01, 0x7E, 0x60, 0xC0, 0x13, 0x21, 0x40, 0x84, 0x47, 0x22, 0xFE, 0x09, 
  0x08, 0x03, 0x03, 0x9C, 0xC1, 0x67, 0x60, 0xC0, 0x0B, 0x22, 0x40, 0x04, 
  0x44, 0x24, 0x02, 0x08, 0x08, 0x03, 0x03, 0xB8, 0xF1, 0x61, 0x60, 0xC0, 
  0xFB, 0x23, 0x40, 0x04, 0x44, 0x28, 0x02, 0x08, 0x08, 0x03, 0x03, 0xE0, 
  0x3D, 0xE0, 0x60, 0xC0, 0x0B, 0x22, 0x40, 0x04, 0x44, 0x28, 0x02, 0x08, 
  0x08, 0x03, 0x03, 0xC0, 0x0F, 0xC0, 0xC0, 0xC0, 0x07, 0x24, 0x40, 0x08, 
  0x42, 0x30, 0x02, 0x08, 0x04, 0x03, 0x03, 0xE0, 0x03, 0xC0, 0xC0, 0xC0, 
  0x07, 0xE4, 0x4F, 0xF0, 0x41, 0x20, 0xFE, 0xF9, 0x03, 0x03, 0x03, 0xF8, 
  0x03, 0xC0, 0xC0, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x03, 0x9F, 0x07, 0xC0, 0xC0, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC3, 0x87, 0x0D, 0xE0, 0x60, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF3, 0x80, 
  0x39, 0x60, 0x60, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x3F, 0x80, 0x71, 0x60, 0x60, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x0F, 0x80, 0xE1, 0x60, 0x60, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x03, 0x80, 
  0xC1, 0x61, 0x60, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x60, 0x7E, 0x06, 0x80, 0x81, 0x63, 0x30, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x1F, 0x06, 0x80, 0x01, 0x37, 0x30, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x06, 0x80, 
  0x01, 0x3E, 0x18, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0x0C, 0x06, 0x80, 0x01, 0x3C, 0x18, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x19, 0x0C, 0x80, 0x01, 0x38, 0x0C, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x38, 0x0C, 0x80, 
  0x01, 0x78, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x31, 0x18, 0x80, 0x01, 0xDC, 0x06, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x88, 0x60, 0x18, 0x80, 0x01, 0x8C, 0x03, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xC0, 0x30, 0x80, 
  0x01, 0x86, 0x33, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x50, 0x80, 0x71, 0x80, 0x01, 0xC6, 0x36, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x67, 0x80, 0x01, 0x73, 0x3C, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xCE, 0x80, 
  0x81, 0x39, 0x3E, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x20, 0x00, 0xBC, 0x83, 0xC1, 0x1E, 0x3E, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xF0, 0x87, 0xF1, 0x07, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xC0, 0xFF, 
  0xFF, 0x01, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFE, 0x3F, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xA0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };

static const unsigned char GYROStatusScreen [] U8X8_PROGMEM = {  
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x3E, 0x06, 0xF6, 0x07, 0x3F, 0x80, 
  0xCF, 0x7F, 0x18, 0xFE, 0x0F, 0x8C, 0x0F, 0xC0, 0x03, 0x00, 0xFF, 0x0C, 
  0xF3, 0x8F, 0x7F, 0xC0, 0xDF, 0x7F, 0x1C, 0xFE, 0x0F, 0xCC, 0x1F, 0xC0, 
  0x03, 0x80, 0xC1, 0x0C, 0x33, 0xCC, 0xE1, 0xC0, 0x38, 0x0C, 0x3C, 0x30, 
  0x0C, 0x6C, 0x18, 0xC0, 0x03, 0xC0, 0x81, 0x99, 0x31, 0xCC, 0xC0, 0xC0, 
  0x30, 0x0C, 0x3C, 0x30, 0x0C, 0x6C, 0x18, 0xC0, 0x03, 0xC0, 0x00, 0xF0, 
  0x30, 0xCC, 0xC0, 0xC0, 0x01, 0x0C, 0x66, 0x30, 0x0C, 0xEC, 0x01, 0xC0, 
  0x03, 0xC0, 0x00, 0xF0, 0xF0, 0x6F, 0xC0, 0x80, 0x0F, 0x0C, 0x66, 0x30, 
  0x0C, 0xCC, 0x0F, 0xC0, 0x03, 0xC0, 0xF8, 0x61, 0xF0, 0x63, 0xC0, 0x00, 
  0x1E, 0x0C, 0x63, 0x30, 0x0C, 0x0C, 0x1F, 0xC0, 0x03, 0xC0, 0x80, 0x61, 
  0x30, 0xE7, 0xC0, 0x00, 0x30, 0x0C, 0xFF, 0x30, 0x0C, 0x0C, 0x38, 0xC0, 
  0x03, 0xC0, 0x80, 0x61, 0x30, 0xC6, 0xC0, 0x60, 0x30, 0x0C, 0xC3, 0x30, 
  0x18, 0x6C, 0x30, 0xC0, 0x03, 0x80, 0x81, 0x61, 0x30, 0xCC, 0x61, 0xC0, 
  0x30, 0x8C, 0x81, 0x31, 0x18, 0x66, 0x38, 0xC0, 0x03, 0x00, 0xFF, 0x61, 
  0x30, 0x9C, 0x7F, 0xC0, 0x1F, 0x8C, 0x81, 0x31, 0xF8, 0xC7, 0x1F, 0xC0, 
  0x03, 0x00, 0x7E, 0x60, 0x30, 0x18, 0x1F, 0x80, 0x0F, 0xCC, 0x80, 0x33, 
  0xE0, 0x83, 0x0F, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0xC0, 
  0x03, 0x63, 0x60, 0xF0, 0xF1, 0xF9, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x10, 0x00, 0xC0, 0x03, 0x36, 0xE0, 0x98, 0x1B, 0x1B, 0x0C, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x14, 0x00, 0xC0, 0x03, 0x1E, 0xF0, 0x0C, 
  0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x12, 0x00, 0xC0, 
  0x03, 0x1C, 0xB0, 0x0C, 0x0C, 0xF8, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x11, 0x00, 0xC0, 0x03, 0x9C, 0x97, 0x0D, 0x0C, 0xF8, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0C, 0x11, 0x00, 0xC0, 0x03, 0x9E, 0xFF, 0x0D, 
  0x0E, 0x1A, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x10, 0x00, 0xC0, 
  0x03, 0x36, 0x18, 0x1B, 0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x64, 0x10, 0x00, 0xC0, 0x03, 0x63, 0x0C, 0xFB, 0xF9, 0xF9, 0xFD, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x10, 0x00, 0xC0, 0x83, 0x61, 0x0C, 0xF6, 
  0xE0, 0xF8, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFC, 0x1F, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0xC0, 
  0x83, 0x61, 0x60, 0xF0, 0xF1, 0xF9, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x14, 0x00, 0xC0, 0x03, 0x33, 0xE0, 0x98, 0xBB, 0x1B, 0x0C, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x14, 0x00, 0xC0, 0x03, 0x36, 0xF0, 0x0C, 
  0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x12, 0x00, 0xC0, 
  0x03, 0x1E, 0xB0, 0x0C, 0x0C, 0xF8, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x11, 0x00, 0xC0, 0x03, 0x8C, 0x97, 0x0D, 0x0C, 0xF8, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x8C, 0x10, 0x00, 0xC0, 0x03, 0x8C, 0xFF, 0x0D, 
  0x0F, 0x1A, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x10, 0x00, 0xC0, 
  0x03, 0x0C, 0x18, 0x0B, 0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x64, 0x10, 0x00, 0xC0, 0x03, 0x0C, 0x0C, 0xFB, 0xF9, 0xF9, 0xFD, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0xC0, 0x03, 0x0C, 0x0C, 0xF2, 
  0xF0, 0xF8, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0xC0, 
  0x03, 0x7F, 0x60, 0xF0, 0xF1, 0xF9, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x14, 0x00, 0xC0, 0x03, 0x3F, 0xE0, 0xB8, 0xBB, 0xFB, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x14, 0x00, 0xC0, 0x03, 0x30, 0xF0, 0x0C, 
  0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x12, 0x00, 0xC0, 
  0x03, 0x18, 0xB0, 0x0C, 0x0C, 0xF8, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x11, 0x00, 0xC0, 0x03, 0x8C, 0x97, 0x0D, 0x0C, 0xF8, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x8C, 0x10, 0x00, 0xC0, 0x03, 0x86, 0xFF, 0x0D, 
  0x0E, 0x1A, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x10, 0x00, 0xC0, 
  0x03, 0x02, 0x18, 0x0B, 0x1B, 0x1B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x64, 0x10, 0x00, 0xC0, 0x03, 0x7F, 0x0C, 0xFB, 0xB9, 0xF9, 0xFD, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x10, 0x00, 0xC0, 0x03, 0x7F, 0x0C, 0xF6, 
  0xF0, 0xF9, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, };

int draw_state = 0; 
const uint8_t all_on[] = {0xff, 0xff, 0xff, 0xff}; 
const uint8_t blank[] = {0x00, 0x00, 0x00, 0x00}; 
const byte SEG_DONE[] = {
  SEG_B | SEG_C | SEG_D | SEG_E | SEG_G,           // d
  SEG_A | SEG_B | SEG_C | SEG_D | SEG_E | SEG_F,   // O
  SEG_C | SEG_E | SEG_G,                           // n
  SEG_A | SEG_D | SEG_E | SEG_F | SEG_G            // E
};
const byte seg_A[] ={
  SEG_A,SEG_A,SEG_A,SEG_A};

const byte seg_B[] ={
  SEG_B,SEG_B,SEG_B,SEG_B};

  const byte seg_C[] ={
  SEG_C,SEG_C,SEG_C,SEG_C};

  const byte seg_D[] ={
  SEG_D,SEG_D,SEG_D,SEG_D};

  const byte seg_E[] ={
  SEG_E,SEG_E,SEG_E,SEG_E};

  const byte seg_F[] ={
  SEG_F,SEG_F,SEG_F,SEG_F};

  const byte seg_G[] ={
  SEG_G,SEG_G,SEG_G,SEG_G};

  int redLED = 4;
  int yelLED = A3;
  int bluLED = A2;
  int grnLED = A1;
  int whtLED = 10;
  int swADV = 3;  //additional pushbutton switch for undefined function
  int swENT = 2;  //additional pushbutton switch for undefined function
  int sw = 7;  //rotary encoder switch
  int outputA = 8; //Rotary encoder dt
  int outputB = 9; //Rotary encoder clk
  int altitude = 90;  //Rotary encoder var to count steps (simulated altitude)
  int currentStateA; 
  int lastStateA;
  byte abortFlag = 0;
  long randNumb;
  const int beep = 11;  //pin for tone output

void setup(void) {
  Serial.begin(9600);

  // Just to know which program is running on my Arduino. Useful if you have several micros or just forgot the file name
  Serial.println(F(""START "" __FILE__ "" from "" __DATE__ "" at ""__TIME__ ));

  u8g2Panel.begin();
  u8g2Panel.setColorIndex(1); // pixel on
  LEDDisplay.clear();
  pinMode(redLED, OUTPUT);
  pinMode(yelLED, OUTPUT);
  pinMode(bluLED, OUTPUT);
  pinMode(grnLED, OUTPUT);
  pinMode(whtLED, OUTPUT);  
  pinMode(swADV, INPUT_PULLUP);
  pinMode(swENT, INPUT_PULLUP);
  pinMode(outputA,INPUT);
  pinMode(outputB,INPUT);
  pinMode(sw, INPUT_PULLUP);

  randomSeed(analogRead(0));  //set a random seed number for the random number generator; reads noise on the A0 pin
}
 
void loop(void) {

    // Set the brightness:
  LEDDisplay.setBrightness(7);
  // All segments on to test the TM1637 LED display
  LEDDisplay.setSegments(all_on);
  delay(2000);
  LEDDisplay.clear();
  delay(1000);  
  tone(beep,1500,50);
  delay(50);
  tone(beep,1000,50); 

  dwnldFSW(); //draws screen to show Flight Software loading

// picture loop 
  for(int i = 0; i <=7; ++i) { //var i cycles through the different system status pages and major flight modes automatically - no othere logic control
    u8g2Panel.clearBuffer();
    draw();
    u8g2Panel.sendBuffer();
    delay(2000);
    // increase the state
    draw_state++;
    int x;
    for (x = 0; x <= 9; x++) {  //throw some numbers up on the LED display. Use 
      randNumb = random(0, 9000);
      LEDDisplay.showNumberDec(randNumb,1,4,0);  // default is 4 digits with leading zero disabled
      delay(100);
    } 
  }
  if (draw_state >= 5) draw_state = 0;

}  //End loop()

void draw(void) {
  switch(draw_state){ 
    case 0: break;
    case 1: clrDiscLEDS();
            digitalWrite(redLED , HIGH);
            u8g2Panel.drawXBMP( 0, 0, 128, 64, BatteryStatusScreen); 
            break;
    case 2: clrDiscLEDS();
            digitalWrite(yelLED,1);            
            u8g2Panel.drawXBMP( 0, 0, 128, 64, LiquidO2Status); 
            break;
    case 3: clrDiscLEDS();
            digitalWrite(yelLED , HIGH);
            u8g2Panel.drawXBMP( 0, 0, 128, 64, LifeSupportScreen); 
            break;
    case 4: clrDiscLEDS();
            digitalWrite(bluLED , HIGH);
            u8g2Panel.drawXBMP( 0, 0, 128, 64, GYROStatusScreen); 
            break;
    case 5: clrDiscLEDS();
            digitalWrite(bluLED , HIGH);
            u8g2Panel.drawXBMP( 0, 0, 128, 64, IMUStatusScreen); 
            break;
    case 6: clrDiscLEDS();
            digitalWrite(grnLED , HIGH);
            u8g2Panel.drawXBMP( 0, 0, 128, 64, CryoTanksScreen); 
            break;
    case 7: clrDiscLEDS();
            for(byte loopcnt = 0; loopcnt <= 3; loopcnt++){
              for(byte ledvalue = 0; ledvalue <= 250; ledvalue +=10){
                analogWrite(whtLED, ledvalue);
                delay(10);
              }    
            }
            analogWrite(whtLED,125);   //leave whtLED on medium brightness
            movKnobMsg();
            doRotary();
            if (abortFlag == 0){
              tchdownMsg();
              setDiscLEDS();
              delay(1000);
              clrDiscLEDS;
            } else{
              abortMsg();
            }
            clrDiscLEDS();  //clear all discrete LEDs and wait here forever
            while (1);  //loop here endlessly  
            break;
  
  }

}


void dwnldFSW (void){
  int progress = 0;
  byte segnum = 0;
  do {
    u8g2Panel.firstPage();
    do {
      u8g2Panel.setFont(u8g2_font_saikyosansbold8_8u);
      u8g2Panel.drawStr(20,10,""DOWNLOADING"");
      u8g2Panel.drawStr(7,20,""FLIGHT SOFTWARE"");
      u8g2Panel.drawStr(17,60,""VER. 4.10.2A"");
      u8g2Panel.drawFrame(14,24,100,24);
      u8g2Panel.drawBox(15,25,progress,23);
    } while ( u8g2Panel.nextPage() );
    segDisplay(segnum);
    segnum++;
    if(segnum >= 6) segnum = 0;
    progress += 2;

  }while (progress < 100);

  LEDDisplay.setSegments(SEG_DONE);
  delay(2000);
}

void liftoff (void){
  do{
    u8g2Panel.firstPage();
    u8g2Panel.setFont(u8g2_font_luBS18_tr);
    u8g2Panel.drawStr(10,25, ""LIFTOFF"");
    u8g2Panel.drawStr(10,50, ""SUCCESS"");
  } while ( u8g2Panel.nextPage() );    
  
}

void tchdownMsg (void){
  do{
    u8g2Panel.firstPage();
    u8g2Panel.setFont(u8g2_font_luBS18_tr);
    u8g2Panel.drawStr(10,25,""TOUCH-"");
    u8g2Panel.drawStr(5,50,"" DOWN!"");
  } while ( u8g2Panel.nextPage() );    
  
}

void movKnobMsg (void){
  do{
    u8g2Panel.firstPage();
    //u8g2Panel.setFont(u8g2_font_luBS18_tr);
    u8g2Panel.setFont(u8g2_font_helvB12_tr);
    u8g2Panel.drawStr(5,20,""ROTATE KNOB"");
    u8g2Panel.drawStr(12,40,"" TO REDUCE"");
    u8g2Panel.drawStr(22,60,""ALTITUDE"");
  } while ( u8g2Panel.nextPage() );    
  
}

void abortMsg (void){
  do{
    u8g2Panel.firstPage();
    //u8g2Panel.setFont(u8g2_font_luBS18_tr);
    u8g2Panel.setFont(u8g2_font_helvB12_tr);
    u8g2Panel.drawStr(20,20,""LANDING"");
    u8g2Panel.drawStr(20,40,""ABORTED"");
    u8g2Panel.drawStr(13,60,""TRY AGAIN!"");
  } while ( u8g2Panel.nextPage() );      
}

void doRotary (void){
  LEDDisplay.clear(); 
  LEDDisplay.showNumberDec(altitude,1,3,1);
  altitude = 90;  //set initial value of altitude (altitude of craft in this case)
  do{  //Main rotary encoder processing starts here. Values from 0 - 180 are allowed. limits are set by S/W
  // Read the current state of outputA
    currentStateA = digitalRead(outputA);
 
  // If last and current state of outputA are different, then pulse occurred
  // React to only 1 state change to avoid double count
    if (currentStateA != lastStateA  && currentStateA == 1){
 
     // Encoder is rotating CW so increment
      if (digitalRead(outputB) != currentStateA) {
        altitude ++;
        if(altitude > 180) altitude = 180;  //limit upper count to '9'
        
      } else {
 
    // If the outputB state is different than the outputA state then
    // the encoder is rotating CCW so decrement
        altitude --;
        if(altitude < 0) altitude = 0;  //limit lower count to '0' (no negative)
      
      }
    LEDDisplay.showNumberDec(altitude,1,3,1);  //showNumberDec(int var to display, bool leading zero - 1=true, byte # of digits (0-3), byte starting position of var (0-3)  )

  }

  lastStateA = currentStateA;
  //slight debounce delay
  delay(1);
  //check if Rotary Encoder switch was pressed simulating an ABORT landing procedure
  if(digitalRead(sw) == 0){  //rotary encoder switch pressed!
    abortFlag = 1;
  };

  } while (altitude > 0 && abortFlag == 0); 

}  //End function doRotary()

void segDisplay(byte segid){
  switch (segid) {
    case 0:
      LEDDisplay.setSegments(seg_A);
      break;
    case 1:
      LEDDisplay.setSegments(seg_B);
      break;
    case 2:
      LEDDisplay.setSegments(seg_C);
      break;      
    case 3:
      LEDDisplay.setSegments(seg_D);
      break;
    case 4:
      LEDDisplay.setSegments(seg_E);
      break;
    case 5:
      LEDDisplay.setSegments(seg_F);
      break;
    default:
      break;

  }
}

void setDiscLEDS(void){
  digitalWrite(redLED,HIGH);
  digitalWrite(yelLED,HIGH);
  digitalWrite(bluLED,HIGH);
  digitalWrite(grnLED,HIGH);
  digitalWrite(whtLED,HIGH);  
}

void clrDiscLEDS(void){
  digitalWrite(redLED,LOW);
  digitalWrite(yelLED,LOW);
  digitalWrite(bluLED,LOW);
  digitalWrite(grnLED,LOW);
  digitalWrite(whtLED,LOW);
}
"
BC2cHFqJ,B,Salvens,C++,Monday 31st of July 2023 04:33:36 AM CDT,"#include <iostream>
#include <vector>
#include <array>
#include <set>

using namespace std;

#define int long long

const long long INF = 1e18 + 7;
const int MAXN = 1e5 + 100;
const int N = 1e5 + 10;
const int MOD = 1e9 + 7;

array<array<int, MAXN>, 2> dp;
array<int, MAXN> used;
vector<vector<int>> g;

void dfs(int v, int p) {
    used[v] = true;
    bool flag = true;
    for (auto to: g[v]) {
        if (!used[to]) {
            dfs(to, v);
            flag = false;
        }
        if (to != p) {
            dp[0][v] = ((dp[0][v] * dp[0][to]) % MOD * dp[1][to]) % MOD;
            dp[1][v] = (dp[1][v] * dp[0][to]) % MOD;
        }
    }
    if (flag) {
        dp[0][v] = 1;
        dp[1][v] = 1;
    }
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int n;
    cin >> n;
    g.resize(n);
    for (int i = 0; i < n - 1; ++i) {
        int u, v;
        cin >> u >> v;
        --u, --v;
        g[u].emplace_back(v);
        g[v].emplace_back(u);
    }
    dfs(0, -1);
    cout << (dp[0][0] + dp[1][0]) % MOD /*<< ""|""*/;
   /* for (int j = 0; j < n; ++j) {
        if (dp[0][j] == 1 && dp[1][j] == 1) {
            cout << j + 1 << ' ';
        }
    }*/

}"
jKkpHje4,limit datepicker so past dates cannot be selected,wpgenie,PHP,Monday 31st of July 2023 04:20:36 AM CDT,"/*
wpgenie.org

limit date picker so past dates cannot be selected, this JS code snippet should go to your child theme functions.php or customization plugin
https://wpgenie.org/tutorials-category/code-snippets-and-template-customizations-using-child-theme

*/

function wpgenie_limit_past_dates_in_datepicker() {
    ?>
    <script>
	jQuery(document).ready(function($) {
		jQuery('.datetimepicker').datetimepicker(
			{defaultDate: """",
			dateFormat: ""yy-mm-dd"",
			numberOfMonths: 1,
			showButtonPanel: true,
			minDate: new Date(),
			showOn: ""button"",
			buttonImage: SA_Ajax.calendar_image,
			buttonImageOnly: true
			});
	});
    </script>
    <?php
}
add_action( 'admin_head', 'wpgenie_limit_past_dates_in_datepicker' );   // loads JS in wp-admin / backend, comment line if not required in backend
add_action( 'wp_head', 'wpgenie_limit_past_dates_in_datepicker');		// loads JS in frontend, comment line if not required in frontend"
5BV6MpDE,Untitled,wclovers,PHP,Monday 31st of July 2023 04:11:50 AM CDT,"add_filter( 'product_simple_fields_attributes', function($fields) {
    if (isset($fields['attributes'])) {
        $fields['attributes']['options']['value']['placeholder'] = sprintf( __('Enter some text, some attributes by ""%s"" separating values.', 'wc-frontend-manager'), WC_DELIMITER );
    }
    return $fields;
} );"
PsZv0UEd,ConversiÃ³n Google Ads MAFE piscinas zaragoza,carlosmdh,JavaScript,Monday 31st of July 2023 04:06:00 AM CDT,"<!-- Event snippet for Leads Piscinas Zaragoza conversion page -->
<script>
  gtag('event', 'conversion', {'send_to': 'AW-10948802758/h3bRCP778coYEMbx5eQo'});
</script>
"
LwkFxjzS,!manon,palmtreetop,JSON,Monday 31st of July 2023 04:00:11 AM CDT,"[`ð merde! (the nerve!)`,
`ðð¾ c'est parti (let's go~)`,
`ð©° ...la lala la lala - la la ðLA` (from French nursery rhyme il Ã©tair un petit navire @ https://youtu.be/hOwu_P_uXcY?t=40),
`ðð¾ merci beaucoup! (thank you very much!) âï½¡Â°â©`]"
ad2rtVDn,Update Manager,RedbanditDEV,Lua,Monday 31st of July 2023 03:47:00 AM CDT,"shell.run(""pastebin get "")

for line in io.lines(""updateList"") do
	print(line)
end"
PiLFptfc,Untitled,dllbridge,C,Monday 31st of July 2023 03:46:28 AM CDT,"
#include <stdio.h>


////////////////////////////////////////////
class TT
{
	
	friend int f(TT );                    //                             Ð Ð¾Ð´Ð½Ð¾Ð²ÑÐµÐ¼ÐµÐ½Ð½Ð¾ ÑÐ²Ð»ÑÐµÑÑÑ Ð¿ÑÐ¾ÑÐ¾ÑÐ¸Ð¿Ð¾Ð¼ ÑÑÐ½ÐºÑÐ¸Ð¸.
	
    int n1;
    int n2;
    
    int add(int  _n)
    {
		
		return n1 + _n;
    }
};





////////////////////////////////////////////
int main()                                //
{
	
	TT t;
	
	printf(""add = %d\n"", f(t));
}



//  ÐÐ· Ð´ÑÑÐ¶ÐµÑÑÐ²ÐµÐ½Ð½Ð¾Ð¹ ÑÑÐ½ÐºÑÐ¸Ð¸:
//  1) ÐÐ½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð¸ÑÑÐµÐ¼ Ð·Ð°ÐºÑÑÑÐ¾Ðµ Ð¿Ð¾Ð»Ðµ ""n1""
//  2) ÐÑÐ·ÑÐ²Ð°ÐµÐ¼ Ð·Ð°ÐºÑÑÑÑÐ¹ Ð¼ÐµÑÐ¾Ð´   ""add()""
////////////////////////////////////////////
int f(TT t)                               //
{
	
	t.n1 = 7;
	return t.add(1);
}





"
S4ZWW0PW,Bread Factory,DiYane,Python,Monday 31st of July 2023 03:46:26 AM CDT,"day_events_list = input().split(""|"")

MAX_ENERGY = 100
ORDER_ENERGY = 30
REST_ENERGY = 50
energy = 100
coins = 100
is_not_bankrupt = True

for event in day_events_list:
    single_events_list = event.split(""-"")
    name = single_events_list[0]
    value = int(single_events_list[1])

    if name == ""rest"":
        gained_energy = 0

        if energy + value > MAX_ENERGY:
            gained_energy = MAX_ENERGY - energy
            energy = MAX_ENERGY
        else:
            energy += value
            gained_energy = value

        print(f""You gained {gained_energy} energy."")
        print(f""Current energy: {energy}."")

    elif name == ""order"":
        if energy >= ORDER_ENERGY:
            energy -= ORDER_ENERGY
            coins += value
            print(f""You earned {value} coins."")
        else:
            energy += REST_ENERGY
            print(""You had to rest!"")
            continue

    else:
        if coins > value:
            coins -= value
            print(f""You bought {name}."")
        else:
            print(f""Closed! Cannot afford {name}."")
            is_not_bankrupt = False
            break

        if coins <= 0:
            is_not_bankrupt = False
            break

if is_not_bankrupt:
    print(""Day completed!"")
    print(f""Coins: {coins}"")
    print(f""Energy: {energy}"")"
giSAtUsj,"Hello, France",DiYane,Python,Monday 31st of July 2023 03:37:10 AM CDT,"collection_items = input()
budget = float(input())

bought_products = []
new_prices = []

for item in collection_items.split('|'):
    tokens = item.split('->')
    product_type = tokens[0]
    product_price = float(tokens[1])
    if product_type == ""Clothes"" and product_price > 50.00:
        continue
    if product_type == ""Shoes"" and product_price > 35.00:
        continue
    if product_type == ""Accessories"" and product_price > 20.50:
        continue
    if budget >= product_price:
        budget -= product_price
        bought_products.append(product_price)
        new_prices.append(product_price * 1.4)

for new_price in new_prices:
    print(f'{new_price:.2f}',end=' ')
print('')

profit = sum(new_prices) - sum(bought_products)
print(f'Profit: {profit:.2f}')

new_budget = budget + sum(new_prices)
if new_budget >= 150:
    print(""Hello, France!"")
else:
    print(""Not enough money."")"
y9qfnF0m,Ð¿Ð¾Ð»ÑÑÐ¸ÑÑ client id,kalaganov5,JavaScript,Monday 31st of July 2023 03:36:17 AM CDT,"gtag('get', 'GA4_MEASUREMENT_ID', 'client_id', (client_id) => {
        console.log('Client ID:', client_id);
        // ÐÐ´ÐµÑÑ Ð²Ñ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ client_id Ð´Ð»Ñ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½ÑÑ Ð´ÐµÐ¹ÑÑÐ²Ð¸Ð¹
      });"
jmivC0Y5,Seize the Fire,DiYane,Python,Monday 31st of July 2023 03:33:23 AM CDT,"fires = input().split(""#"")
water = int(input())

effort = 0
total_fire = 0
put_out_cells = []

print(""Cells:"")

for fire in fires:
    args = fire.split("" = "")
    fire_type = args[0]
    level = int(args[1])
    valid = False


    if water < level:
        continue

    if fire_type == 'High':
        if 81 <= level <= 125:
            valid = True
    elif fire_type == 'Medium':
        if 51 <= level <= 80:
            valid = True
    elif fire_type == 'Low':
        if 1 <= level <= 50:
            valid = True

    if valid:
        put_out_cells.append(level)
        water -= level
        effort += level * 0.25
        total_fire += level


for cell in put_out_cells:
    print(f' - {cell}')

print(f'Effort: {effort:.2f}')
print(f'Total Fire: {total_fire}')"
ehNtVkE5,A,Salvens,C++,Monday 31st of July 2023 03:27:17 AM CDT,"#include <iostream>
#include <vector>
#include <array>
#include <set>

using namespace std;

#define int long long

const long long INF = 1e18 + 7;
const int MAXN = 6e3 + 100;
const int N = 1e5 + 10;

array<array<int, MAXN>, 2> dp;
array<int, MAXN> cost;
vector<vector<int>> g;

void dfs(int v) {
    for (auto to: g[v]) {
        dfs(to);
        dp[0][v] += max(dp[0][to], dp[1][to]);
        dp[1][v] += dp[0][to];
    }
    dp[1][v] += cost[v];
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> cost[i];
    }
    g.resize(n);
    set<int> st;
    for(int i = 0; i < n; ++i) {
        st.insert(i);
    }
    while (true) {
        int u, v;
        cin >> u >> v;
        if (u == 0 && v == 0) {
            break;
        }
        --u, --v;
        g[v].emplace_back(u);
        st.erase(u);
    }
    int root = *st.begin();
    dfs(root);
    cout << max(dp[0][root], dp[1][root]) << '\n';
}"
SjjPSSzB,Survival of the Biggest,DiYane,Python,Monday 31st of July 2023 03:19:10 AM CDT,"a = input()
number = int(input())
ll = [int(i) for i in a.split(' ')]

for _ in range(number):
    x = min(ll)
    ll.remove(x)

result = ', '.join(map(str, ll))
print(result)"
yEUS37sE,Faro Shuffle,DiYane,Python,Monday 31st of July 2023 03:13:11 AM CDT,"card_deck = input().split()
num_of_shuffles = int(input())
final_deck = []

for shuffles in range (num_of_shuffles):
    final_deck = []
    middle_of_the_desk = len(card_deck) // 2
    left_half = card_deck [0:middle_of_the_desk]
    right_half = card_deck [middle_of_the_desk::]
    for index_of_the_card in range(len(left_half)):
        final_deck.append(left_half[index_of_the_card])
        final_deck.append(right_half[index_of_the_card])

    card_deck = final_deck
print(card_deck)"
fnXYREyt,Number Beggars,DiYane,Python,Monday 31st of July 2023 03:11:37 AM CDT,"sum_list = input().split("", "")
num_of_beggars = int(input())
final_list = []
counter_of_index = 0
tem_sum = 0
sum_list_as_digits = []

for index in range (len(sum_list)):
    sum_list_as_digits.append(int(sum_list[index]))

while counter_of_index < num_of_beggars:
    for element in range(counter_of_index, len(sum_list_as_digits), num_of_beggars):
        tem_sum += sum_list_as_digits[element]
    final_list.append(tem_sum)
    tem_sum = 0
    counter_of_index += 1
    
print(final_list)"
LETjYRMN,Football Cards,DiYane,Python,Monday 31st of July 2023 03:10:05 AM CDT,"team_a = [""A-1"", ""A-2"", ""A-3"", ""A-4"", ""A-5"", ""A-6"", ""A-7"", ""A-8"", ""A-9"", ""A-10"", ""A-11""]
team_b = [""B-1"", ""B-2"", ""B-3"", ""B-4"", ""B-5"", ""B-6"", ""B-7"", ""B-8"", ""B-9"", ""B-10"", ""B-11""]

game_was_terminated = False

sent_off_players = input().split("" "")
for player in sent_off_players:
    if player in team_a:
        team_a.remove(player)
    elif player in team_b:
        team_b.remove(player)

    if len(team_a) < 7 or len(team_b) < 7:
        game_was_terminated = True
        break

print(f""Team A - {len(team_a)}; Team B - {len(team_b)}"")

if game_was_terminated:
    print(""Game was terminated"")"
RtCRV6bD,Format the Text JS Advanced,TZinovieva,JavaScript,Monday 31st of July 2023 03:09:42 AM CDT,"function solve() {
  let text = document.getElementById('input').value;
  let output = document.getElementById('output');

  let arr = text.split('.').filter(s => s !== '');

  while (arr.length > 0) {
    let paragraphText = arr.splice(0, 3).join('. ') + '.';
    let paragraph = document.createElement('p');
    paragraph.textContent = paragraphText;
    output.appendChild(paragraph);
  }
}"
ae5vJRBy,Fields,Dreigon,JSON,Monday 31st of July 2023 02:34:26 AM CDT,"{
  ""apikey"": {
    ""type"": ""text"",
    ""label"": ""API Key""
  },
  ""location"": {
    ""type"": ""text"",
    ""label"": ""Weather Location""
  },
  ""showLocation"": {
	""type"": ""dropdown"",
	""label"": ""Show Location?"",
	""value"": ""yes"",
	""options"": {
		""yes"": ""Yes"",
		""no"": ""No""
	}
  },
  ""showHumidity"": {
	""type"": ""dropdown"",
	""label"": ""Show Humidity?"",
	""value"": ""yes"",
	""options"": {
		""yes"": ""Yes"",
		""no"": ""No""
	}
  },
  ""showTemp"": {
	""type"": ""dropdown"",
	""label"": ""Show Temperature?"",
	""value"": ""yes"",
	""options"": {
		""yes"": ""Yes"",
		""no"": ""No""
	}
  },
  ""showForecast"": {
	""type"": ""dropdown"",
	""label"": ""Show Forecast Icon?"",
	""value"": ""yes"",
	""options"": {
		""yes"": ""Yes"",
		""no"": ""No""
	}
  },
  ""lblTemp"": {
    ""type"": ""text"",
    ""label"": ""Temperature Label"",
    ""value"": ""Temp:""
  },
  ""lblHumidity"": {
    ""type"": ""text"",
    ""label"": ""Humidity Label"",
    ""value"": ""Humidity:""
  },
  ""lblForecast"": {
    ""type"": ""text"",
    ""label"": ""Forecast Label"",
    ""value"": ""Weather:""
  },
  ""lblPosition"": {
	""type"": ""dropdown"",
	""label"": ""Label Position"",
	""value"": ""before"",
	""options"": {
		""before"": ""Before"",
		""after"": ""After""
	}
  },
  ""units"": {
	""type"": ""dropdown"",
	""label"": ""Units"",
	""value"": ""C"",
	""options"": {
		""C"": ""Celcius"",
		""F"": ""Fahrenheit"",
		""CF"": ""Both""
	}
  },
  ""rounding"": {
	""type"": ""number"",
	""label"": ""Temperature decimals"",
	""value"": 1,
	""step"": 1
  },
  ""textAlign"": {
    ""label"": ""Text align"",
    ""type"": ""dropdown"",
    ""value"": ""left"",
    ""options"": {
      ""left"": ""Left"",
      ""center"": ""Center"",
      ""right"": ""Right""
    }
  },
  ""fontName"": {
    ""type"": ""googleFont"",
    ""label"": ""Font name"",
    ""value"": ""Montserrat""
  },
  ""dynamicFontSize"": {
    ""type"": ""dropdown"",
    ""label"": ""Font size"",
    ""value"": ""static"",
    ""options"": {
      ""static"": ""Static - set below"",
      ""dynamic"": ""Dynamic - fit container size""
    }
  },
  ""fontSize"": {
    ""type"": ""number"",
    ""label"": ""Font size"",
    ""value"": 24,
	""step"": 2
  },
  ""spacing"": {
    ""type"": ""number"",
    ""label"": ""Spacing"",
    ""value"": 10,
	""step"": 2
  },
  ""iconSize"": {
    ""type"": ""number"",
    ""label"": ""Icon Size"",
    ""value"": 32,
	""step"": 2
  },
  ""fontWeight"": {
    ""label"": ""Font Weight"",
    ""type"": ""dropdown"",
    ""value"": ""400"",
    ""options"": {
      ""100"": ""Thin (100)"",
      ""300"": ""Light (300)"",
      ""400"": ""Regular (400)"",
      ""500"": ""Medium (500)"",
      ""700"": ""Bold (700)"",
      ""900"": ""Black (900)""
    }
  },
  ""fontColor"": {
    ""type"": ""colorpicker"",
    ""label"": ""Font Color"",
    ""value"": ""rgba(255,255,255,1)""
  }
}"
vsMKKV2i,JS,Dreigon,JavaScript,Monday 31st of July 2023 02:33:28 AM CDT,"const UPDATE_INTERVAL = 5 * 60 * 1000; //5 Minutes
const API = ""https://api.openweathermap.org/data/2.5/weather"";

let fieldData, channel;

var div = document.getElementById('weather');

const COMMANDS = {
  setlocation: (args) => {
    if (args.length == 0) return;
  	fieldData.location = args.join("" "");
	SE_API.store.set('dreigonWidget', {loc: fieldData.location});
    update();
  }
};

window.addEventListener('onWidgetLoad', function (obj) {
	//console.log(obj);
    fieldData = obj.detail.fieldData;
  	channel = obj.detail.channel.username;
	setLabel(""lblTemp"");
	setLabel(""lblHumidity"");
	setLabel(""lblForecast"");
	if (fieldData.lblPosition === ""after"") {
		swapNodes(""lblTemp"", ""temperature"");
		swapNodes(""lblHumidity"", ""humidity"");
		swapNodes(""lblForecast"", ""forecast"");
		//$(""#lblTemp"").after($(""#temperature""));
		//$(""#lblHumidity"").after($(""#humidity""));
		//$(""#lblForecast"").after($(""#forecast""));
	}
	if (fieldData.showHumidity === ""no"") document.getElementById(""sectionHumidity"").style.display = ""none"";
	if (fieldData.showTemp === ""no"") document.getElementById(""sectionTemp"").style.display = ""none"";
	if (fieldData.showForecast === ""no"") document.getElementById(""sectionForecast"").style.display = ""none"";
  	SE_API.store.get('dreigonWidget').then(obj => {
		if (obj && obj.loc) fieldData.location = obj.loc;
		update();
	});
    setInterval(update, UPDATE_INTERVAL);
});

function swapNodes(aId, bId) {
	var a = document.getElementById(aId);
	var b = document.getElementById(bId);
    var aparent = a.parentNode;
    var asibling = a.nextSibling === b ? a : a.nextSibling;
    b.parentNode.insertBefore(a, b);
    aparent.insertBefore(b, asibling);
}

function setLabel(lbl) {
	if (fieldData[lbl].length == 0) {
		document.getElementById(lbl).style.display = ""none"";
	} else {
		document.getElementById(lbl).innerHTML = fieldData[lbl];
	}
}

window.addEventListener('onEventReceived', (evt) => {
  switch (evt.detail.listener) {
    case ""message"":
      handleMessage(evt.detail.event.data);
      break;
  }
});

function handleMessage(evt) {
  	var userState = { mod: parseInt(evt.tags.mod), broadcaster: evt.nick === channel };
	if (!(userState.mod == 1 || userState.broadcaster)) return;
  	var msg = evt.text;
  	if (!msg.startsWith(""!"")) return;
  	var args = msg.substring(1).split("" "");
   	var cmd = args.shift().toLowerCase();
  	
  	for (var key in COMMANDS) {
    	if (key === cmd) {
          COMMANDS[key](args);
        }
    }
  	
}

function update() {
  
	var url = new URL(API);
	url.searchParams.append(""q"", fieldData.location);
	url.searchParams.append(""appid"", fieldData.apikey);
	url.searchParams.append(""units"", ""metric"");
	if (fieldData.showLocation === ""yes"") {
		document.getElementById(""location"").innerHTML = fieldData.location;
	} else {
		document.getElementById(""location"").style.display = ""none"";
	}
	fetch(url)
		.then(response => response.json())
		.then(data => displayWeather(data));
}

function displayWeather(data) {
	if (data.cod == 401) {
		return console.log(""Invalid API Key"");
	}
	var celcius = data.main.temp;
	var tempDisplay = """";
	switch(fieldData.units) {
		case ""C"":
			tempDisplay = celcius.toFixed(fieldData.rounding) + ""&deg;C"";
			break;
		case ""F"":
			tempDisplay = C2F(celcius).toFixed(fieldData.rounding) + ""&deg;F"";
			break;
		case ""CF"":
			tempDisplay = celcius.toFixed(fieldData.rounding) + ""&deg;C | "" + C2F(celcius).toFixed(fieldData.rounding) + ""&deg;F"";
			break;
	}	
	document.getElementById(""temperature"").innerHTML = tempDisplay;
	document.getElementById(""humidity"").innerHTML = data.main.humidity + ""%"";
	document.getElementById(""forecast"").src = `https://openweathermap.org/img/w/${data.weather[0].icon}.png`;
}


function C2F(c) {
	return (c * 9/5) + 32;
}"
JEvTqH1D,CSS,Dreigon,CSS,Monday 31st of July 2023 02:32:57 AM CDT,"@import url('https://fonts.googleapis.com/css?family={fontName}');
* {
    font-family: '{{fontName}}', sans-serif;
    color:{{fontColor}};
    font-weight:{{fontWeight}};
    font-size:{{fontSize}}px;
}

.weather {
	margin-right: {{spacing}}px;
  	display: inline-block;
}

#forecast {
	width:{{iconSize}}px;
	height:{{iconSize}}px;
	vertical-align: middle;
}

#forecastLbl {
	margin-right: 0px;	
}

.main-container {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}"
uB3bELeU,HTML,Dreigon,HTML 5,Monday 31st of July 2023 02:31:59 AM CDT,"<div class=""main-container"" id=""weather"">
	<span class=""weather"" id=""location"">&hellip;</span></span>
	<span class=""weather"" id=""sectionTemp""><span id=""lblTemp"">Temp:</span>&nbsp;<span id=""temperature"">&hellip;&deg;C</span></span>
	<span class=""weather"" id=""sectionHumidity""><span id=""lblHumidity"">Humidity:</span>&nbsp;<span id=""humidity"">&hellip;%</span></span>
	<span  id=""sectionForecast""><span class=""weather"" id=""lblForecast"">Weather:</span>
	<img id=""forecast"" src=""https://openweathermap.org/img/w/01d.png"" width=""32"" height=""32""/></span>
</div>"
beina8L1,Untitled,keselyoleren,JSON,Monday 31st of July 2023 02:25:30 AM CDT,"{
	""data"": {
		""id"": 1,
		""thumbnail"": ""http://localhost:8000/media/file_thumbnail/CC-12-202109060919-009_0_thumb_36hMmZy.jpeg"",
		""author"": {
			""id"": 12,
			""username"": ""jason81@example.com"",
			""email"": ""jason81@example.com"",
			""lms_role"": ""Author"",
			""employee_id"": null,
			""employee_name"": null,
			""sex"": null,
			""phone_number"": null,
			""company_name"": null,
			""departement"": null,
			""position"": null,
			""location"": null,
			""profile_pic"": ""http://localhost:8000/profile_pic/default.png"",
			""bank_name"": null,
			""bank_account"": null,
			""bio"": null,
			""twitter"": null,
			""facebook"": null,
			""instagram"": null,
			""linkedin_link"": null,
			""ktp"": null
		},
		""topik"": {
			""id"": 5,
			""name"": ""3d modeling""
		},
		""created_at"": ""2023-04-05T06:21:06.261960Z"",
		""updated_at"": ""2023-05-31T06:54:48.231196Z"",
		""name"": ""Balnder basic"",
		""subject"": ""Pengenalan blamder basic"",
		""category"": ""Hard Skill"",
		""language"": ""Bahasa"",
		""certificate"": ""Classic"",
		""short_description"": ""Want to learn to make characters quickly and easily in Blender, that you can use in your games, animations or graphics?"",
		""description"": ""Maybe youâve found Blender hard to learn and donât have the time for a big course? Or youâre more of an intermediate user but finding character modelling tricky?"",
		""course_status"": ""publish"",
		""information"": {
			""id"": 1,
			""video_preview"": {
				""id"": 1,
				""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
				""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
				""meta"": null
			},
			""benefit"": ""Low Poly Characters: Blender Bitesize Course"",
			""course_ditujukan"": ""Create low poly characters from start to finish."",
			""materi"": ""The fundamentals of the Blender Interface. How to follow character references. Texturing characters."",
			""requirements"": ""The only course prerequisite is that you're able to install Blender 3.0.""
		},
		""playlist"": {
			""pre_test"": [
				{
					""id"": 1,
					""title"": ""Test Basic"",
					""summary"": ""Lorem ipsum dollar emmet"",
					""type_question"": ""select"",
					""questions"": [],
					""is_complate"": true
				}
			],
			""session"": [
				{
					""id"": 1,
					""course"": 1,
					""name"": ""Chapter 1"",
					""lessons"": [
						{
							""id"": 1,
							""name"": ""Java script 2"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""meta"": null
							},
							""video_url"": null,
							""document"": null,
							""is_complate"": false,
							""is_active"": false
						},
						{
							""id"": 7,
							""name"": ""Tips"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 10,
								""file_path"": ""http://localhost:8000/media/file_content/Advanced_Dictionaries__defaultdict_in_Python_JXxkYeh.mp4"",
								""file"": ""/media/file_content/Advanced_Dictionaries__defaultdict_in_Python_JXxkYeh.mp4"",
								""meta"": {
									""duration"": 791.57
								}
							},
							""video_url"": null,
							""document"": null,
							""is_complate"": false,
							""is_active"": false
						}
					],
					""total_video"": 2,
					""total_document"": 0,
					""quiz"": [
						{
							""id"": 1,
							""title"": ""Test Basic"",
							""summary"": ""Lorem ipsum dollar emmet"",
							""type_question"": ""select"",
							""questions"": [],
							""is_complate"": true
						},
						{
							""id"": 2,
							""title"": ""Test Basic"",
							""summary"": ""Lorem ipsum dollar emmet"",
							""type_question"": ""select"",
							""questions"": [],
							""is_complate"": true
						}
					],
					""is_complate"": true
				},
				{
					""id"": 2,
					""course"": 1,
					""name"": ""Chapter 2"",
					""lessons"": [
						{
							""id"": 2,
							""name"": ""Java script 2"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""meta"": null
							},
							""video_url"": null,
							""document"": null,
							""is_complate"": false,
							""is_active"": false
						},
						{
							""id"": 3,
							""name"": ""Java script 2"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""meta"": null
							},
							""video_url"": null,
							""document"": null,
							""is_complate"": false,
							""is_active"": false
						},
						{
							""id"": 4,
							""name"": ""Java script 2"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""meta"": null
							},
							""video_url"": null,
							""document"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/get_pdf/1/"",
								""file"": ""/media/file_content/Penerima.pdf""
							},
							""is_complate"": false,
							""is_active"": false
						},
						{
							""id"": 5,
							""name"": ""Java script 2"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""file"": ""/media/file_content/Screen_Recording_2023-03-26_at_21.09.43_kTChOnL.mov"",
								""meta"": null
							},
							""video_url"": null,
							""document"": {
								""id"": 1,
								""file_path"": ""http://localhost:8000/get_pdf/1/"",
								""file"": ""/media/file_content/Penerima.pdf""
							},
							""is_complate"": false,
							""is_active"": false
						},
						{
							""id"": 6,
							""name"": ""Tips"",
							""video_source"": ""Other resource"",
							""video"": {
								""id"": 10,
								""file_path"": ""http://localhost:8000/media/file_content/Advanced_Dictionaries__defaultdict_in_Python_JXxkYeh.mp4"",
								""file"": ""/media/file_content/Advanced_Dictionaries__defaultdict_in_Python_JXxkYeh.mp4"",
								""meta"": {
									""duration"": 791.57
								}
							},
							""video_url"": null,
							""document"": null,
							""is_complate"": false,
							""is_active"": false
						}
					],
					""total_video"": 5,
					""total_document"": 2,
					""quiz"": [],
					""is_complate"": true
				},
				{
					""id"": 3,
					""course"": 1,
					""name"": ""Chapter 3"",
					""lessons"": [],
					""total_video"": 0,
					""total_document"": 0,
					""quiz"": [],
					""is_complate"": true
				}
			],
			""final_test"": []
		}
	},
	""message"": ""Success"",
	""status"": 200,
	""success"": true
}"
Tix1GScf,Multiples List,DiYane,Python,Monday 31st of July 2023 02:25:02 AM CDT,"def generate_multiples(factor, count):
    multiples = []

    for i in range(1, count + 1):
        multiples.append(factor * i)

    return multiples

if __name__ == ""__main__"":
    factor = int(input())
    count = int(input())

    result = generate_multiples(factor, count)
    print(result)
"
UYBi5XRZ,Untitled,wclovers,PHP,Monday 31st of July 2023 02:21:35 AM CDT,"add_filter('wcfm_allowed_order_status', function ($all_status) {
    if (wcfm_is_vendor()) {
        $remove_status = ['wc-refunded','wc-checkout-draft'];
        $all_status = array_diff_key($all_status, array_flip($remove_status));
    }
    return $all_status;
}, 11);"
gCaWWY1v,éæ¨ä¸èµ·çï¼[çµè§å§]è²è±æ¥¼æ´æ°è³18é,xiaomianao666,JavaScript,Monday 31st of July 2023 02:09:08 AM CDT,æµ·éè§çè§ååäº«ï¼å½ååäº«çæ¯ï¼äºçº§é¡µé¢è¯¦æï¿¥page_detailï¿¥[çµè§å§]è²è±æ¥¼æ´æ°è³18é@@
bzRc6qwG,Invert Values,DiYane,Python,Monday 31st of July 2023 01:59:13 AM CDT,"def opposite_numbers(input_string):
    numbers = list(map(int, input_string.split()))

    opposites = [-num for num in numbers]

    return opposites

if __name__ == ""__main__"":
    input_string = input()

    output_list = opposite_numbers(input_string)
    print(output_list)
"
MiGzx2QM,DOM Manipulation,vasaniyakush,HTML,Monday 31st of July 2023 01:44:05 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>


    <h1 >TODO List</h1>
    <h1 class=""heading2"">My TODO List</h1>



    <div>
        <h1 class=""heading3"">This is 1 inside div</h1>
        <h1 class=""heading3"">This is 2 inside div</h1>
        <h1 class=""heading3"">This is 3 inside div</h1>
    </div>
    <input type=""text""></input><button>Add</button>
    <ul>
        <li>Task 1</li>
        <li>Task 2</li>
        <li>Task 3</li>
    </ul>
    <script>
        const my_div_heading = document.querySelectorAll('h1.heading3')
        my_div_heading[2].style.color = ""blue""
        // const my_div = document.querySelector('div')
        // my_div.querySelectorAll('h1')[1].style.color = 'red'
        // // document.querySelectorAll('h1')

    </script>
</body>
</html>"
4AsXBKSp,Untitled,SeanRossHarvey,Python,Monday 31st of July 2023 01:43:33 AM CDT,"import time
import random

def display_intro():
    print(""You are standing at the entrance of a dark cave."")
    print(""Your objective is to explore the cave and find the hidden treasure."")
    print()

def choose_path():
    path = """"
    while path.lower() not in [""left"", ""right""]:
        path = input(""Will you go left or right? "").lower()
    return path

def encounter_scenario():
    scenarios = [
        ""You stumbled upon a colony of bats. They startle you but eventually fly away."",
        ""You found a pile of glittering gems. You collect a few for good luck."",
        ""A sudden gust of wind blows out your torch. You're left in darkness."",
        ""You encounter a friendly troll who gives you directions to the treasure."",
        ""You slip on a wet rock and twist your ankle. You need to rest for a while."",
        ""You find a hidden passage that leads deeper into the cave."",
        ""You triggered a trap and rocks start falling. You narrowly escape."",
        ""You discover a clue that leads you closer to the hidden treasure."",
        ""You hear distant growls, and decide it's best to turn back for now."",
    ]
    return random.choice(scenarios)

def explore_cave():
    display_intro()
    while True:
        print(""You reach a fork in the cave."")
        path = choose_path()
        print(f""You venture {path}."")
        time.sleep(1)
        scenario = encounter_scenario()
        print(scenario)
        time.sleep(2)
        if ""treasure"" in scenario:
            print(""Congratulations! You found the hidden treasure!"")
            break
        print()

if __name__ == ""__main__"":
    explore_cave()"
uxUA0ZGY,Example Diamond shop,ThisIsVegas,JSON,Monday 31st of July 2023 01:38:14 AM CDT,"{
    ""items"": [
        {
            ""sku"": ""bundle-diamond1"",
            ""name"": {
                ""en"": ""180 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/b36d33aff58a72ea11c0de551291dffe.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 1.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        },
        {
            ""sku"": ""bundle-diamond2"",
            ""name"": {
                ""en"": ""450 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/edf13fb8ad1a7fe7cdec961d037996c0.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 4.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        },
        {
            ""sku"": ""bundle-diamond3"",
            ""name"": {
                ""en"": ""900 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/1ccdde7532633753c66d004cbe9fc547.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 9.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        },
        {
            ""sku"": ""bundle-diamond4"",
            ""name"": {
                ""en"": ""1800 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/e062c4ae2275ff36451cf948b25fba62.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 19.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        },
        {
            ""sku"": ""bundle-diamond5"",
            ""name"": {
                ""en"": ""4500 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/fc0ddc8ca11c5de13239645866d53bf1.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 49.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        },
        {
            ""sku"": ""bundle-diamond6"",
            ""name"": {
                ""en"": ""9000 diamond""
            },
            ""type"": ""virtual_currency"",
            ""description"": null,
            ""image_url"": ""https://cdn3.xsolla.com/img/misc/images/c518b3efcb8d377ee27a55f0a60c5e9a.png"",
            ""long_description"": null,
            ""attributes"": [],
            ""is_free"": false,
            ""order"": 1,
            ""groups"": [],
            ""regional_prices"": [],
            ""prices"": [
                {
                    ""amount"": 99.99,
                    ""currency"": ""USD"",
                    ""is_default"": true,
                    ""is_enabled"": true
                }
            ],
            ""media_list"": [],
            ""vc_prices"": [],
            ""is_enabled"": true,
            ""is_show_in_store"": true,
            ""regions"": [],
            ""limits"": {
                ""per_user"": null,
                ""per_item"": null,
                ""recurrent_schedule"": null
            },
            ""periods"": [],
            ""inventory_options"": {
                ""consumable"": true,
                ""expiration_period"": null
            },
            ""is_hard"": false
        }
    ]
}"
uZgP7Aqv,Example Coin shop,ThisIsVegas,JSON,Monday 31st of July 2023 01:36:51 AM CDT,"{
    ""status"": ""success"",
    ""data"": [
        {
            ""id"": ""bundle-coin1"",
            ""editorName"": ""bundle-coin1"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""buyValueType"": ""fixed"",
            ""purchaseCurrencyType"": ""single"",
            ""itemId"": ""bundle-coin1"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""stackAmount"": 1,
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""sort"": 0,
            ""status"": 1,
            ""hgam"": {
                ""editorName"": ""coin1-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin1-shop-view_ryDtz6_ver_2""
            },
            ""name"": ""A sack of Coins"",
            ""description"": ""A linen sack containing 550 Coins"",
            ""values"": {
                ""status"": 1,
                ""buy"": {
                    ""diamond"": 180
                }
            },
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin1"",
                ""editorName"": ""bundle-coin1"",
                ""type"": ""bundle"",
                ""isActive"": true,
                ""properties"": [],
                ""status"": 1,
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 550
                        }
                    ]
                },
                ""hgam"": {
                    ""editorName"": ""coin1-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin1-shop-view_ryDtz6_ver_2""
                },
                ""name"": ""A sack of Coins"",
                ""description"": ""A linen sack containing 550 Coins""
            }
        },
        {
            ""id"": ""bundle-coin2"",
            ""editorName"": ""bundle-coin2"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""buyValueType"": ""fixed"",
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""purchaseCurrencyType"": ""single"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""stackAmount"": 1,
            ""sort"": 1,
            ""status"": 1,
            ""itemId"": ""bundle-coin2"",
            ""description"": ""A pouch containing 1,350 Coins"",
            ""hgam"": {
                ""editorName"": ""coin2-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin2-shop-view_l6Yd1U_ver_2""
            },
            ""name"": ""A pouch of Coins"",
            ""values"": {
                ""status"": 1,
                ""buy"": {
                    ""diamond"": 450
                }
            },
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin2"",
                ""editorName"": ""bundle-coin2"",
                ""type"": ""bundle"",
                ""isActive"": true,
                ""properties"": [],
                ""status"": 1,
                ""hgam"": {
                    ""editorName"": ""coin2-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin2-shop-view_l6Yd1U_ver_2""
                },
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 1350
                        }
                    ]
                },
                ""description"": ""A pouch containing 1,350 Coins"",
                ""name"": ""A pouch of Coins""
            }
        },
        {
            ""id"": ""bundle-coin3"",
            ""editorName"": ""bundle-coin3"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""buyValueType"": ""fixed"",
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""purchaseCurrencyType"": ""single"",
            ""itemId"": ""bundle-coin3"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""stackAmount"": 1,
            ""sort"": 2,
            ""status"": 1,
            ""name"": ""A crate of Coins"",
            ""description"": ""A crate containing 2,700 Coins"",
            ""hgam"": {
                ""editorName"": ""coin3-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin3-shop-view_7gzjeO_ver_2""
            },
            ""values"": {
                ""status"": 1,
                ""buy"": {
                    ""diamond"": 900
                }
            },
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin3"",
                ""editorName"": ""bundle-coin3"",
                ""isActive"": true,
                ""type"": ""bundle"",
                ""properties"": [],
                ""status"": 1,
                ""name"": ""A crate of Coins"",
                ""description"": ""A crate containing 2,700 Coins"",
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 2700
                        }
                    ]
                },
                ""hgam"": {
                    ""editorName"": ""coin3-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin3-shop-view_7gzjeO_ver_2""
                }
            }
        },
        {
            ""id"": ""bundle-coin4"",
            ""editorName"": ""bundle-coin4"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""values"": {
                ""buy"": {
                    ""diamond"": 1800
                },
                ""status"": 1
            },
            ""buyValueType"": ""fixed"",
            ""description"": ""A wooden chest containing 5,500 coins"",
            ""sort"": 3,
            ""purchaseCurrencyType"": ""single"",
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""itemId"": ""bundle-coin4"",
            ""name"": ""A chest of coins"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""hgam"": {
                ""editorName"": ""coin4-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin4-shop-view_NU2AEq_ver_1""
            },
            ""stackAmount"": 1,
            ""status"": 1,
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin4"",
                ""editorName"": ""bundle-coin4"",
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 5500
                        }
                    ]
                },
                ""hgam"": {
                    ""editorName"": ""coin4-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin4-shop-view_NU2AEq_ver_1""
                },
                ""isActive"": true,
                ""type"": ""bundle"",
                ""properties"": [],
                ""status"": 1,
                ""description"": ""A chest containing 5,500 Coins"",
                ""name"": ""A chest of Coins""
            }
        },
        {
            ""id"": ""bundle-coin5"",
            ""editorName"": ""bundle-coin5"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""values"": {
                ""buy"": {
                    ""diamond"": 4500
                },
                ""status"": 1
            },
            ""description"": ""A treasure chest containing 13,500 Coins"",
            ""buyValueType"": ""fixed"",
            ""sort"": 3,
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""purchaseCurrencyType"": ""single"",
            ""itemId"": ""bundle-coin5"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""name"": ""A treasure chest of Coins"",
            ""hgam"": {
                ""editorName"": ""coin5-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin5-shop-view_dMHzOf_ver_1""
            },
            ""status"": 1,
            ""stackAmount"": 1,
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin5"",
                ""editorName"": ""bundle-coin5"",
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 13500
                        }
                    ]
                },
                ""name"": ""A treasure chest of Coins"",
                ""description"": ""A treasure chest containing 13,500 Coins"",
                ""hgam"": {
                    ""editorName"": ""coin5-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin5-shop-view_dMHzOf_ver_1""
                },
                ""isActive"": true,
                ""type"": ""bundle"",
                ""properties"": [],
                ""status"": 1
            }
        },
        {
            ""id"": ""bundle-coin6"",
            ""editorName"": ""bundle-coin6"",
            ""quantity"": 1,
            ""isUnlimitedQuantity"": false,
            ""values"": {
                ""buy"": {
                    ""diamond"": 9000
                },
                ""status"": 1
            },
            ""description"": ""A treasure trove containing 27,000 Coins"",
            ""buyValueType"": ""fixed"",
            ""sort"": 3,
            ""tags"": [
                ""bundle"",
                ""bundle-coin"",
                ""coincash""
            ],
            ""purchaseCurrencyType"": ""single"",
            ""itemId"": ""bundle-coin6"",
            ""purchaseConditions"": {
                ""minimumLevel"": 0
            },
            ""name"": ""A treasure trove of Coins"",
            ""hgam"": {
                ""editorName"": ""coin6-shop-view"",
                ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin6-shop-view_AkxxTJ_ver_1""
            },
            ""status"": 1,
            ""stackAmount"": 1,
            ""itemInfo"": {
                ""tags"": [
                    ""bundle"",
                    ""coin"",
                    ""coincash""
                ],
                ""id"": ""bundle-coin6"",
                ""editorName"": ""bundle-coin6"",
                ""bundleInfo"": {
                    ""contents"": [
                        {
                            ""itemId"": ""currency-gold"",
                            ""amount"": 27000
                        }
                    ]
                },
                ""name"": ""A treasure trove of Coins"",
                ""description"": ""A treasure trove containing 27,000 Coins"",
                ""hgam"": {
                    ""editorName"": ""coin6-shop-view"",
                    ""url"": ""https://dev-img.tinylittle.me/tiny-little-fly/uploads/Asset/Shop/Coins/coin6-shop-view_AkxxTJ_ver_1""
                },
                ""isActive"": true,
                ""type"": ""bundle"",
                ""properties"": [],
                ""status"": 1
            }
        }
    ],
    ""message"": null,
    ""code"": null
}"
vyTGEGT2,lekcja12 baza danych,drakon-firestone,SQL,Monday 31st of July 2023 12:06:58 AM CDT,"CREATE TABLE users(
 	id int,
    username varchar(255),
    password varchar(255)
);

insert into users values 
(1, ""Jan"", ""kowalsky""),
(2, ""Pixel"", ""qwerty""),
(3, ""Teodor"", ""123456""),
(4, ""Hiper"", ""japko""),
(5, ""Oli"", ""haslo1""),
(6, ""Pierniczek"", ""password""),
(7, ""Demo"", ""pass"");"
SDkikPci,ÐÐµÐ¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾ ÑÑÐ¸ÑÐ°ÐµÑÑÑ Z-value,AnnaCh1971,Python,Sunday 30th of July 2023 11:55:51 PM CDT,"# Ð½ÐµÐ¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾ ÑÑÐ¸ÑÐ°ÐµÑÑÑ p-value
# ÑÐ¾ ÐµÑÑÑ Ð½ÐµÐ¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾ ÑÑÐ¸ÑÐ°ÐµÑÑÑ Z-value, Ð¿Ð¾ÑÐ¾Ð¼Ñ ÑÑÐ¾ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²Ð¸Ðµ p-value Ð¸ z-value Ñ Ð¿ÑÐ¾Ð²ÐµÑÐ¸Ð»Ð°
from scipy import stats as st
import numpy as np
import math as mth

alpha = 0.05  # ÐºÑÐ¸ÑÐ¸ÑÐµÑÐºÐ¸Ð¹ ÑÑÐ¾Ð²ÐµÐ½Ñ ÑÑÐ°ÑÐ¸ÑÑÐ¸ÑÐµÑÐºÐ¾Ð¹ Ð·Ð½Ð°ÑÐ¸Ð¼Ð¾ÑÑÐ¸

purchases = np.array([100, 100])
leads = np.array([400, 500])

# Ð²Ð°Ñ ÐºÐ¾Ð´
# Ð¿ÑÐ¾ÑÐµÐ½ÑÐ¾Ð² Ð·Ð°ÐºÐ°Ð·Ð¾Ð² Ð² Ð³ÑÑÐ¿Ð¿Ðµ, Ð³Ð´Ðµ Ð±ÑÐ»Ð¸ Ð¿ÑÐµÐ´Ð»Ð¾Ð¶ÐµÐ½Ñ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½ÑÐµ Ð¾Ð¿ÑÐ¸Ð¸ (ÐºÐ°Ðº Ð½Ð°Ð·ÑÐ²Ð°ÐµÑÑÑ ÑÑÐ° Ð³ÑÑÐ¿Ð¿Ð°?)
p1  = purchases[0]/leads[0]

#Ð¿ÑÐ¾ÑÐµÐ½Ñ Ð·Ð°ÐºÐ°Ð·Ð¾Ð² Ð² ÐºÐ¾Ð½ÑÑÐ¾Ð»ÑÐ½Ð¾Ð¹ Ð³ÑÑÐ¿Ð¿Ðµ
p2  = purchases[1]/leads[1]


# Ð² ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹ ÑÐ°Ð· Ð¼Ð¾Ð¶Ð½Ð¾ ÑÑÐ¸ÑÐ°ÑÑ Ð½Ð°Ð¿ÑÑÐ¼ÑÑ difference Ð¸Ð· purchses Ð¸ leads, Ð±ÐµÐ· ÑÐ°ÑÑÐµÑÐ° p1 Ð¸ p2 Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½ÑÑ ÑÐ¾ÑÐ¼ÑÐ»Ð°Ñ
difference = p1-p2
p_combined = (purchases[0] + purchases[1])/(leads[0] + leads[1])

z_value = difference / mth.sqrt(p_combined * (1 - p_combined) * (1/purchases[0] + 1/purchases[1]))

# Ð²Ð°Ñ ÐºÐ¾Ð´
distr = st.norm(0,1)


p_value = (1 - distr.cdf(abs(z_value))) * 2

if p_value < alpha:
    print('ÐÑÐ²ÐµÑÐ³Ð°ÐµÐ¼ Ð½ÑÐ»ÐµÐ²ÑÑ Ð³Ð¸Ð¿Ð¾ÑÐµÐ·Ñ: Ð¼ÐµÐ¶Ð´Ñ Ð´Ð¾Ð»ÑÐ¼Ð¸ ÐµÑÑÑ Ð·Ð½Ð°ÑÐ¸Ð¼Ð°Ñ ÑÐ°Ð·Ð½Ð¸ÑÐ°')
else:
    print('ÐÐµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¾ÑÑ Ð¾ÑÐ²ÐµÑÐ³Ð½ÑÑÑ Ð½ÑÐ»ÐµÐ²ÑÑ Ð³Ð¸Ð¿Ð¾ÑÐµÐ·Ñ, Ð½ÐµÑ Ð¾ÑÐ½Ð¾Ð²Ð°Ð½Ð¸Ð¹ ÑÑÐ¸ÑÐ°ÑÑ Ð´Ð¾Ð»Ð¸ ÑÐ°Ð·Ð½ÑÐ¼Ð¸'
    ) "
6pUYYaXD,Nigerian scammers [31-7-1/2023],bombaires,HTML,Sunday 30th of July 2023 11:49:30 PM CDT,"<a href=""mailto:peter_alexandel@yahoo.co.jp"">peter_alexandel@yahoo.co.jp</a>
<a href=""mailto:pa028820@gmail.com"">pa028820@gmail.com</a>
<a href=""mailto:pa.02882.0@gmail.com"">pa.02882.0@gmail.com</a>
<a href=""mailto:pa.02.8.8.20@gmail.com"">pa.02.8.8.20@gmail.com</a>
<a href=""mailto:pa0.28820@gmail.com"">pa0.28820@gmail.com</a>
<a href=""mailto:pa.0288.2.0@gmail.com"">pa.0288.2.0@gmail.com</a>
<a href=""mailto:pa02.88.2.0@gmail.com"">pa02.88.2.0@gmail.com</a>
<a href=""mailto:pa.0.2.8.820@gmail.com"">pa.0.2.8.820@gmail.com</a>
<a href=""mailto:p.a.0.2.88.20@gmail.com"">p.a.0.2.88.20@gmail.com</a>
<a href=""mailto:p.a.0288.20@gmail.com"">p.a.0288.20@gmail.com</a>
<a href=""mailto:pa02.88.20@gmail.com"">pa02.88.20@gmail.com</a>
<a href=""mailto:p.a.0.28820@gmail.com"">p.a.0.28820@gmail.com</a>
<a href=""mailto:pa.02.88.20@gmail.com"">pa.02.88.20@gmail.com</a>
<a href=""mailto:p.a.028.82.0@gmail.com"">p.a.028.82.0@gmail.com</a>
<a href=""mailto:p.a.0.28.8.2.0@gmail.com"">p.a.0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a0.288.2.0@gmail.com"">p.a0.288.2.0@gmail.com</a>
<a href=""mailto:p.a02.88.2.0@gmail.com"">p.a02.88.2.0@gmail.com</a>
<a href=""mailto:p.a.0288.2.0@gmail.com"">p.a.0288.2.0@gmail.com</a>
<a href=""mailto:pa028.8.2.0@gmail.com"">pa028.8.2.0@gmail.com</a>
<a href=""mailto:p.a02.88.20@gmail.com"">p.a02.88.20@gmail.com</a>
<a href=""mailto:p.a.0.288.20@gmail.com"">p.a.0.288.20@gmail.com</a>
<a href=""mailto:p.a.02882.0@gmail.com"">p.a.02882.0@gmail.com</a>
<a href=""mailto:p.a.0.2882.0@gmail.com"">p.a.0.2882.0@gmail.com</a>
<a href=""mailto:p.a.02.88.20@gmail.com"">p.a.02.88.20@gmail.com</a>
<a href=""mailto:p.a.02.8820@gmail.com"">p.a.02.8820@gmail.com</a>
<a href=""mailto:p.a0.28.82.0@gmail.com"">p.a0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.2.8.820@gmail.com"">pa0.2.8.820@gmail.com</a>
<a href=""mailto:pa028.8.20@gmail.com"">pa028.8.20@gmail.com</a>
<a href=""mailto:p.a0.28.820@gmail.com"">p.a0.28.820@gmail.com</a>
<a href=""mailto:pa.0.2.8.82.0@gmail.com"">pa.0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a.0.28.8.20@gmail.com"">p.a.0.28.8.20@gmail.com</a>
<a href=""mailto:pa0.28.8.20@gmail.com"">pa0.28.8.20@gmail.com</a>
<a href=""mailto:pa0.288.20@gmail.com"">pa0.288.20@gmail.com</a>
<a href=""mailto:pa0288.20@gmail.com"">pa0288.20@gmail.com</a>
<a href=""mailto:pa.0.28.8.2.0@gmail.com"">pa.0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a.0.288.2.0@gmail.com"">p.a.0.288.2.0@gmail.com</a>
<a href=""mailto:p.a02.8.82.0@gmail.com"">p.a02.8.82.0@gmail.com</a>
<a href=""mailto:p.a0.28.8.20@gmail.com"">p.a0.28.8.20@gmail.com</a>
<a href=""mailto:p.a.02.88.2.0@gmail.com"">p.a.02.88.2.0@gmail.com</a>
<a href=""mailto:pa028.82.0@gmail.com"">pa028.82.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.82.0@gmail.com"">p.a.0.2.8.82.0@gmail.com</a>
<a href=""mailto:pa.0.2.88.20@gmail.com"">pa.0.2.88.20@gmail.com</a>
<a href=""mailto:p.a02.8.820@gmail.com"">p.a02.8.820@gmail.com</a>
<a href=""mailto:p.a0.28820@gmail.com"">p.a0.28820@gmail.com</a>
<a href=""mailto:p.a02882.0@gmail.com"">p.a02882.0@gmail.com</a>
<a href=""mailto:pa02.8.8.20@gmail.com"">pa02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0288.20@gmail.com"">p.a0288.20@gmail.com</a>
<a href=""mailto:pa.02.88.2.0@gmail.com"">pa.02.88.2.0@gmail.com</a>
<a href=""mailto:pa.02.8.82.0@gmail.com"">pa.02.8.82.0@gmail.com</a>
<a href=""mailto:pa.0.28.8.20@gmail.com"">pa.0.28.8.20@gmail.com</a>
<a href=""mailto:pa.0.28820@gmail.com"">pa.0.28820@gmail.com</a>
<a href=""mailto:p.a.02.8.820@gmail.com"">p.a.02.8.820@gmail.com</a>
<a href=""mailto:p.a0.2.8.820@gmail.com"">p.a0.2.8.820@gmail.com</a>
<a href=""mailto:pa.0.2.8.8.20@gmail.com"">pa.0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa0.2.8.82.0@gmail.com"">pa0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a0288.2.0@gmail.com"">p.a0288.2.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.820@gmail.com"">p.a.0.2.8.820@gmail.com</a>
<a href=""mailto:pa.028.820@gmail.com"">pa.028.820@gmail.com</a>
<a href=""mailto:pa0.2.88.20@gmail.com"">pa0.2.88.20@gmail.com</a>
<a href=""mailto:pa.02.8.820@gmail.com"">pa.02.8.820@gmail.com</a>
<a href=""mailto:p.a.02.8.8.2.0@gmail.com"">p.a.02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a028.8.20@gmail.com"">p.a028.8.20@gmail.com</a>
<a href=""mailto:p.a.028820@gmail.com"">p.a.028820@gmail.com</a>
<a href=""mailto:pa02882.0@gmail.com"">pa02882.0@gmail.com</a>
<a href=""mailto:p.a0.2.8.82.0@gmail.com"">p.a0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.8.2.0@gmail.com"">p.a.0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa.028.82.0@gmail.com"">pa.028.82.0@gmail.com</a>
<a href=""mailto:p.a0.2.8820@gmail.com"">p.a0.2.8820@gmail.com</a>
<a href=""mailto:pa0.2.88.2.0@gmail.com"">pa0.2.88.2.0@gmail.com</a>
<a href=""mailto:p.a.02.8.82.0@gmail.com"">p.a.02.8.82.0@gmail.com</a>
<a href=""mailto:pa0.2.8.8.20@gmail.com"">pa0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa.0.2.8820@gmail.com"">pa.0.2.8820@gmail.com</a>
<a href=""mailto:pa.028.8.20@gmail.com"">pa.028.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.8.8.2.0@gmail.com"">p.a0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa.02.8.8.2.0@gmail.com"">pa.02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a0.2.88.2.0@gmail.com"">p.a0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa.0.2882.0@gmail.com"">pa.0.2882.0@gmail.com</a>
<a href=""mailto:p.a028.82.0@gmail.com"">p.a028.82.0@gmail.com</a>
<a href=""mailto:pa028820@gmail.com"">pa028820@gmail.com</a>
<a href=""mailto:p.a02.8.8.20@gmail.com"">p.a02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.88.20@gmail.com"">p.a0.2.88.20@gmail.com</a>
<a href=""mailto:pa.0288.20@gmail.com"">pa.0288.20@gmail.com</a>
<a href=""mailto:p.a.02.8.8.20@gmail.com"">p.a.02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0.2882.0@gmail.com"">p.a0.2882.0@gmail.com</a>
<a href=""mailto:p.a.0.28.82.0@gmail.com"">p.a.0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.28.82.0@gmail.com"">pa0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.2.882.0@gmail.com"">pa0.2.882.0@gmail.com</a>
<a href=""mailto:p.a02.8820@gmail.com"">p.a02.8820@gmail.com</a>
<a href=""mailto:p.a028.820@gmail.com"">p.a028.820@gmail.com</a>
<a href=""mailto:p.a.0.2.8.8.20@gmail.com"">p.a.0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa.028.8.2.0@gmail.com"">pa.028.8.2.0@gmail.com</a>
<a href=""mailto:pa.02.8820@gmail.com"">pa.02.8820@gmail.com</a>
<a href=""mailto:p.a028820@gmail.com"">p.a028820@gmail.com</a>
<a href=""mailto:pa02.882.0@gmail.com"">pa02.882.0@gmail.com</a>
<a href=""mailto:p.a02.882.0@gmail.com"">p.a02.882.0@gmail.com</a>
<a href=""mailto:p.a.0.28.820@gmail.com"">p.a.0.28.820@gmail.com</a>
<a href=""mailto:pa.0.2.882.0@gmail.com"">pa.0.2.882.0@gmail.com</a>
<a href=""mailto:p.a028.8.2.0@gmail.com"">p.a028.8.2.0@gmail.com</a>
<a href=""mailto:pa0288.2.0@gmail.com"">pa0288.2.0@gmail.com</a>
<a href=""mailto:p.a.028.8.20@gmail.com"">p.a.028.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.8.8.20@gmail.com"">p.a0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa0.2.8.8.2.0@gmail.com"">pa0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa0.28.8.2.0@gmail.com"">pa0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a.0.2.88.2.0@gmail.com"">p.a.0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa02.8.820@gmail.com"">pa02.8.820@gmail.com</a>
<a href=""mailto:pa.0.2.88.2.0@gmail.com"">pa.0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa0.2.8820@gmail.com"">pa0.2.8820@gmail.com</a>
<a href=""mailto:pa.0.28.820@gmail.com"">pa.0.28.820@gmail.com</a>
<a href=""mailto:pa0.2882.0@gmail.com"">pa0.2882.0@gmail.com</a>
<a href=""mailto:p.a.028.820@gmail.com"">p.a.028.820@gmail.com</a>
<a href=""mailto:p.a0.288.20@gmail.com"">p.a0.288.20@gmail.com</a>
<a href=""mailto:p.a.0.2.882.0@gmail.com"">p.a.0.2.882.0@gmail.com</a>
<a href=""mailto:pa.0.288.20@gmail.com"">pa.0.288.20@gmail.com</a>
<a href=""mailto:pa02.8.82.0@gmail.com"">pa02.8.82.0@gmail.com</a>
<a href=""mailto:pa02.8820@gmail.com"">pa02.8820@gmail.com</a>
<a href=""mailto:pa.0.28.82.0@gmail.com"">pa.0.28.82.0@gmail.com</a>
<a href=""mailto:pa.028820@gmail.com"">pa.028820@gmail.com</a>
<a href=""mailto:p.a0.2.882.0@gmail.com"">p.a0.2.882.0@gmail.com</a>
<a href=""mailto:pa.0.2.8.8.2.0@gmail.com"">pa.0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a.02.882.0@gmail.com"">p.a.02.882.0@gmail.com</a>
<a href=""mailto:pa02.8.8.2.0@gmail.com"">pa02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a.028.8.2.0@gmail.com"">p.a.028.8.2.0@gmail.com</a>
<a href=""mailto:p.a02.8.8.2.0@gmail.com"">p.a02.8.8.2.0@gmail.com</a>
<a href=""mailto:pa0.288.2.0@gmail.com"">pa0.288.2.0@gmail.com</a>
<a href=""mailto:pa028.820@gmail.com"">pa028.820@gmail.com</a>
<a href=""mailto:p.a.0.2.8820@gmail.com"">p.a.0.2.8820@gmail.com</a>
<a href=""mailto:pa.02.882.0@gmail.com"">pa.02.882.0@gmail.com</a>
<a href=""mailto:pa0.28.820@gmail.com"">pa0.28.820@gmail.com</a>
<a href=""mailto:pa.0.288.2.0@gmail.com"">pa.0.288.2.0@gmail.com</a>
<a href=""mailto:p.a0.28.8.2.0@gmail.com"">p.a0.28.8.2.0@gmail.com</a>
<a href=""mailto:egobiablessing25@gmail.com"">egobiablessing25@gmail.com</a>
<a href=""mailto:egobi.ab.les.s.i.ng.25@gmail.com"">egobi.ab.les.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.gobiab.les.s.i.n.g.2.5@gmail.com"">e.gobiab.les.s.i.n.g.2.5@gmail.com</a>
<a href=""mailto:egob.iabl.ess.i.ng25@gmail.com"">egob.iabl.ess.i.ng25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.lessing.25@gmail.com"">eg.o.b.ia.b.lessing.25@gmail.com</a>
<a href=""mailto:egob.iab.lessing.2.5@gmail.com"">egob.iab.lessing.2.5@gmail.com</a>
<a href=""mailto:e.g.obi.abl.es.sin.g.25@gmail.com"">e.g.obi.abl.es.sin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.ab.less.i.ng.25@gmail.com"">ego.b.i.ab.less.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obiable.s.sin.g.25@gmail.com"">eg.obiable.s.sin.g.25@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.l.ess.ing25@gmail.com"">e.g.o.bia.b.l.ess.ing25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.essin.g.25@gmail.com"">e.gobi.a.b.l.essin.g.25@gmail.com</a>
<a href=""mailto:egobi.a.bl.es.s.in.g.2.5@gmail.com"">egobi.a.bl.es.s.in.g.2.5@gmail.com</a>
<a href=""mailto:ego.bi.a.b.le.ss.in.g.2.5@gmail.com"">ego.bi.a.b.le.ss.in.g.2.5@gmail.com</a>
<a href=""mailto:e.go.b.iabl.e.ssin.g.2.5@gmail.com"">e.go.b.iabl.e.ssin.g.2.5@gmail.com</a>
<a href=""mailto:e.go.b.ia.bl.e.ssing25@gmail.com"">e.go.b.ia.bl.e.ssing25@gmail.com</a>
<a href=""mailto:egob.i.ablessin.g25@gmail.com"">egob.i.ablessin.g25@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.ble.ssi.ng25@gmail.com"">e.g.o.b.ia.ble.ssi.ng25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.ess.i.ng2.5@gmail.com"">e.gobi.a.b.l.ess.i.ng2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.le.s.sin.g2.5@gmail.com"">e.gob.i.a.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:eg.obia.bl.e.s.s.i.n.g.25@gmail.com"">eg.obia.bl.e.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.bi.a.ble.ssi.n.g2.5@gmail.com"">ego.bi.a.ble.ssi.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.iab.le.ssin.g.25@gmail.com"">e.go.b.iab.le.ssin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.b.less.i.n.g.25@gmail.com"">ego.b.i.a.b.less.i.n.g.25@gmail.com</a>
<a href=""mailto:e.go.b.iabl.e.ssi.n.g.25@gmail.com"">e.go.b.iabl.e.ssi.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.ab.l.es.s.in.g25@gmail.com"">ego.b.i.ab.l.es.s.in.g25@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.b.le.ss.ing2.5@gmail.com"">eg.o.b.i.a.b.le.ss.ing2.5@gmail.com</a>
<a href=""mailto:egob.iabl.e.s.sin.g2.5@gmail.com"">egob.iabl.e.s.sin.g2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.bl.es.s.ing2.5@gmail.com"">e.g.ob.ia.bl.es.s.ing2.5@gmail.com</a>
<a href=""mailto:egob.i.a.b.l.e.ssi.n.g.2.5@gmail.com"">egob.i.a.b.l.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gob.iab.les.s.i.ng.25@gmail.com"">e.gob.iab.les.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.gob.iabless.i.n.g2.5@gmail.com"">e.gob.iabless.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.i.ab.l.essing.25@gmail.com"">e.go.b.i.ab.l.essing.25@gmail.com</a>
<a href=""mailto:e.go.b.iab.le.s.si.n.g.2.5@gmail.com"">e.go.b.iab.le.s.si.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.l.ess.i.n.g2.5@gmail.com"">eg.o.b.ia.b.l.ess.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.bl.e.ss.i.ng.2.5@gmail.com"">e.g.o.b.ia.bl.e.ss.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.obi.ab.l.es.s.ing25@gmail.com"">eg.obi.ab.l.es.s.ing25@gmail.com</a>
<a href=""mailto:eg.ob.iab.le.ss.i.ng2.5@gmail.com"">eg.ob.iab.le.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:egobi.a.bl.e.ssin.g2.5@gmail.com"">egobi.a.bl.e.ssin.g2.5@gmail.com</a>
<a href=""mailto:ego.b.i.abl.es.si.n.g25@gmail.com"">ego.b.i.abl.es.si.n.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.ables.s.ing.25@gmail.com"">eg.o.bi.ables.s.ing.25@gmail.com</a>
<a href=""mailto:e.go.b.ia.b.les.sing.2.5@gmail.com"">e.go.b.ia.b.les.sing.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.b.les.sin.g2.5@gmail.com"">eg.o.b.i.a.b.les.sin.g2.5@gmail.com</a>
<a href=""mailto:ego.biable.ssi.ng.25@gmail.com"">ego.biable.ssi.ng.25@gmail.com</a>
<a href=""mailto:e.gob.ia.bl.ess.i.ng2.5@gmail.com"">e.gob.ia.bl.ess.i.ng2.5@gmail.com</a>
<a href=""mailto:ego.b.i.abl.e.s.s.in.g2.5@gmail.com"">ego.b.i.abl.e.s.s.in.g2.5@gmail.com</a>
<a href=""mailto:egob.iab.l.e.ss.i.ng25@gmail.com"">egob.iab.l.e.ss.i.ng25@gmail.com</a>
<a href=""mailto:egob.iab.l.e.ss.ing25@gmail.com"">egob.iab.l.e.ss.ing25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ab.l.essin.g.25@gmail.com"">eg.o.b.i.ab.l.essin.g.25@gmail.com</a>
<a href=""mailto:egobia.bl.essing.25@gmail.com"">egobia.bl.essing.25@gmail.com</a>
<a href=""mailto:ego.b.i.able.ssing2.5@gmail.com"">ego.b.i.able.ssing2.5@gmail.com</a>
<a href=""mailto:eg.o.b.iable.ss.i.ng.25@gmail.com"">eg.o.b.iable.ss.i.ng.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.lessi.ng.25@gmail.com"">eg.ob.i.ab.lessi.ng.25@gmail.com</a>
<a href=""mailto:e.go.bi.abl.es.sin.g25@gmail.com"">e.go.bi.abl.es.sin.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.less.i.ng.25@gmail.com"">e.g.o.bi.a.b.less.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.e.s.s.in.g25@gmail.com"">eg.o.bi.abl.e.s.s.in.g25@gmail.com</a>
<a href=""mailto:eg.ob.i.abless.ing.2.5@gmail.com"">eg.ob.i.abless.ing.2.5@gmail.com</a>
<a href=""mailto:egob.ia.bl.essi.ng25@gmail.com"">egob.ia.bl.essi.ng25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ab.l.es.s.i.n.g.25@gmail.com"">eg.o.b.i.ab.l.es.s.i.n.g.25@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.ng.25@gmail.com"">e.go.bi.ab.l.e.ssi.ng.25@gmail.com</a>
<a href=""mailto:e.g.o.biab.les.sin.g.25@gmail.com"">e.g.o.biab.les.sin.g.25@gmail.com</a>
<a href=""mailto:eg.obi.a.b.l.e.s.s.i.ng.25@gmail.com"">eg.obi.a.b.l.e.s.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.g.obi.a.b.le.s.sin.g2.5@gmail.com"">e.g.obi.a.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:egobi.abl.ess.i.n.g.2.5@gmail.com"">egobi.abl.ess.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.ab.les.s.ing.25@gmail.com"">e.g.ob.i.ab.les.s.ing.25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.les.s.i.n.g25@gmail.com"">e.gobi.a.b.les.s.i.n.g25@gmail.com</a>
<a href=""mailto:e.gobiables.s.in.g25@gmail.com"">e.gobiables.s.in.g25@gmail.com</a>
<a href=""mailto:eg.obia.b.l.e.s.s.in.g2.5@gmail.com"">eg.obia.b.l.e.s.s.in.g2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.abl.ess.in.g.25@gmail.com"">eg.o.b.i.abl.ess.in.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.a.ble.s.sin.g.2.5@gmail.com"">eg.ob.i.a.ble.s.sin.g.2.5@gmail.com</a>
<a href=""mailto:eg.obiab.l.ess.i.n.g.25@gmail.com"">eg.obiab.l.ess.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.biabl.essing25@gmail.com"">ego.biabl.essing25@gmail.com</a>
<a href=""mailto:eg.obi.abless.ing2.5@gmail.com"">eg.obi.abless.ing2.5@gmail.com</a>
<a href=""mailto:egobi.ab.le.s.sin.g.25@gmail.com"">egobi.ab.le.s.sin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.bless.i.n.g.25@gmail.com"">ego.b.i.a.bless.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.ia.b.l.e.ssing2.5@gmail.com"">ego.b.ia.b.l.e.ssing2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.bles.s.i.ng.25@gmail.com"">e.g.ob.i.a.bles.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.bia.b.les.si.n.g2.5@gmail.com"">eg.o.bia.b.les.si.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.ng25@gmail.com"">e.go.bi.ab.l.e.ssi.ng25@gmail.com</a>
<a href=""mailto:eg.ob.ia.b.l.essi.n.g25@gmail.com"">eg.ob.ia.b.l.essi.n.g25@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.n.g.25@gmail.com"">e.go.bi.ab.l.e.ssi.n.g.25@gmail.com</a>
<a href=""mailto:e.g.ob.i.abl.e.ssi.ng25@gmail.com"">e.g.ob.i.abl.e.ssi.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.lessin.g.25@gmail.com"">e.g.o.bia.b.lessin.g.25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.ess.ing2.5@gmail.com"">e.gobi.a.b.l.ess.ing2.5@gmail.com</a>
<a href=""mailto:eg.ob.ia.bles.si.ng2.5@gmail.com"">eg.ob.ia.bles.si.ng2.5@gmail.com</a>
<a href=""mailto:ego.bi.ab.le.s.s.in.g.2.5@gmail.com"">ego.bi.ab.le.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.obi.able.ss.i.ng2.5@gmail.com"">e.g.obi.able.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:egobi.ab.l.essing25@gmail.com"">egobi.ab.l.essing25@gmail.com</a>
<a href=""mailto:e.go.b.i.ab.l.e.ssi.n.g2.5@gmail.com"">e.go.b.i.ab.l.e.ssi.n.g2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.abl.ess.i.n.g.2.5@gmail.com"">e.g.ob.i.abl.ess.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gobia.b.le.s.si.ng.25@gmail.com"">e.gobia.b.le.s.si.ng.25@gmail.com</a>
<a href=""mailto:ego.b.ia.bl.es.si.n.g.25@gmail.com"">ego.b.ia.bl.es.si.n.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.le.ssi.ng2.5@gmail.com"">eg.ob.i.ab.le.ssi.ng2.5@gmail.com</a>
<a href=""mailto:ego.b.iab.le.ssi.ng.2.5@gmail.com"">ego.b.iab.le.ssi.ng.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.b.le.s.sin.g2.5@gmail.com"">e.g.ob.ia.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:e.go.bia.b.l.e.s.s.i.ng.25@gmail.com"">e.go.bia.b.l.e.s.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.ble.ss.i.ng25@gmail.com"">e.g.ob.i.a.ble.ss.i.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bi.abl.e.s.s.in.g.2.5@gmail.com"">e.g.o.bi.abl.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.iab.l.e.s.s.i.ng2.5@gmail.com"">e.g.o.b.iab.l.e.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:egobia.ble.ssin.g25@gmail.com"">egobia.ble.ssin.g25@gmail.com</a>
<a href=""mailto:egob.i.ab.l.es.si.ng.2.5@gmail.com"">egob.i.ab.l.es.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.g.o.bi.ab.l.e.ssi.n.g25@gmail.com"">e.g.o.bi.ab.l.e.ssi.n.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.abl.e.ssi.n.g.2.5@gmail.com"">e.g.o.bi.abl.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.obia.b.lessi.ng.2.5@gmail.com"">e.g.obia.b.lessi.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.ables.s.i.ng.25@gmail.com"">eg.o.b.i.ables.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obiabless.in.g.2.5@gmail.com"">eg.obiabless.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.iables.si.ng.2.5@gmail.com"">e.g.o.b.iables.si.ng.2.5@gmail.com</a>
<a href=""mailto:ego.b.i.ab.l.e.ssi.n.g.2.5@gmail.com"">ego.b.i.ab.l.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:egobiabl.es.s.ing.25@gmail.com"">egobiabl.es.s.ing.25@gmail.com</a>
<a href=""mailto:e.go.b.i.a.bl.es.s.i.ng.2.5@gmail.com"">e.go.b.i.a.bl.es.s.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bless.ing.25@gmail.com"">eg.ob.i.a.bless.ing.25@gmail.com</a>
<a href=""mailto:e.gobi.a.bl.e.ssin.g25@gmail.com"">e.gobi.a.bl.e.ssin.g25@gmail.com</a>
<a href=""mailto:egobi.a.bl.ess.ing2.5@gmail.com"">egobi.a.bl.ess.ing2.5@gmail.com</a>
<a href=""mailto:e.go.bi.a.ble.ss.i.ng2.5@gmail.com"">e.go.bi.a.ble.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.le.ss.in.g.2.5@gmail.com"">e.g.o.bia.b.le.ss.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.abless.i.ng2.5@gmail.com"">e.g.ob.i.abless.i.ng2.5@gmail.com</a>
<a href=""mailto:eg.obi.able.s.s.ing.2.5@gmail.com"">eg.obi.able.s.s.ing.2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.bl.es.si.ng.2.5@gmail.com"">e.gob.i.a.bl.es.si.ng.2.5@gmail.com</a>
<a href=""mailto:egobiablessi.n.g2.5@gmail.com"">egobiablessi.n.g2.5@gmail.com</a>
<a href=""mailto:e.gob.i.able.s.si.n.g25@gmail.com"">e.gob.i.able.s.si.n.g25@gmail.com</a>
<a href=""mailto:eg.obi.ab.l.ess.in.g2.5@gmail.com"">eg.obi.ab.l.ess.in.g2.5@gmail.com</a>
<a href=""mailto:ego.biab.les.s.in.g25@gmail.com"">ego.biab.les.s.in.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.ab.l.es.sin.g.2.5@gmail.com"">eg.o.bi.ab.l.es.sin.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.essin.g25@gmail.com"">eg.o.bi.abl.essin.g25@gmail.com</a>
<a href=""mailto:ego.biab.l.e.s.si.ng.2.5@gmail.com"">ego.biab.l.e.s.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.l.es.si.n.g2.5@gmail.com"">e.gob.i.a.b.l.es.si.n.g2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.a.ble.s.si.n.g25@gmail.com"">eg.o.bi.a.ble.s.si.n.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.le.ss.ing25@gmail.com"">e.g.o.bi.a.b.le.ss.ing25@gmail.com</a>
<a href=""mailto:e.g.o.biablessing.2.5@gmail.com"">e.g.o.biablessing.2.5@gmail.com</a>
<a href=""mailto:egobi.abless.i.ng25@gmail.com"">egobi.abless.i.ng25@gmail.com</a>
<a href=""mailto:eg.o.bi.ables.s.ing.2.5@gmail.com"">eg.o.bi.ables.s.ing.2.5@gmail.com</a>
<a href=""mailto:e.gobi.abl.essing25@gmail.com"">e.gobi.abl.essing25@gmail.com</a>
<a href=""mailto:e.gobia.b.l.e.ssi.ng.25@gmail.com"">e.gobia.b.l.e.ssi.ng.25@gmail.com</a>
<a href=""mailto:ego.b.iable.s.s.i.n.g.25@gmail.com"">ego.b.iable.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.iab.less.i.n.g.2.5@gmail.com"">ego.b.iab.less.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.i.able.ssin.g.25@gmail.com"">e.g.o.b.i.able.ssin.g.25@gmail.com</a>
<a href=""mailto:eg.o.bi.a.bl.es.si.n.g2.5@gmail.com"">eg.o.bi.a.bl.es.si.n.g2.5@gmail.com</a>
<a href=""mailto:eg.obiabl.e.ssin.g.25@gmail.com"">eg.obiabl.e.ssin.g.25@gmail.com</a>
<a href=""mailto:eg.ob.ia.b.le.ss.in.g2.5@gmail.com"">eg.ob.ia.b.le.ss.in.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.ia.bl.e.s.s.i.n.g2.5@gmail.com"">e.go.b.ia.bl.e.s.s.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.e.ss.i.n.g.25@gmail.com"">e.gobi.a.b.l.e.ss.i.n.g.25@gmail.com</a>
<a href=""mailto:egobi.abl.e.ss.i.n.g.2.5@gmail.com"">egobi.abl.e.ss.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gobi.abl.e.ssin.g.2.5@gmail.com"">e.gobi.abl.e.ssin.g.2.5@gmail.com</a>
<a href=""mailto:e.gob.iab.les.sing.25@gmail.com"">e.gob.iab.les.sing.25@gmail.com</a>
<a href=""mailto:eg.obia.ble.ssi.n.g25@gmail.com"">eg.obia.ble.ssi.n.g25@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bl.e.s.si.n.g.25@gmail.com"">eg.ob.i.a.bl.e.s.si.n.g.25@gmail.com</a>
<a href=""mailto:ego.bi.ab.l.e.s.s.ing25@gmail.com"">ego.bi.ab.l.e.s.s.ing25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.b.le.s.sin.g.25@gmail.com"">e.g.ob.i.a.b.le.s.sin.g.25@gmail.com</a>
<a href=""mailto:e.gob.i.a.ble.ss.i.n.g25@gmail.com"">e.gob.i.a.ble.ss.i.n.g25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.l.e.s.s.ing25@gmail.com"">eg.o.b.ia.b.l.e.s.s.ing25@gmail.com</a>
<a href=""mailto:e.g.obi.a.bles.sing25@gmail.com"">e.g.obi.a.bles.sing25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ablessi.n.g2.5@gmail.com"">eg.o.b.i.ablessi.n.g2.5@gmail.com</a>
<a href=""mailto:egob.i.a.b.l.e.ss.i.ng.25@gmail.com"">egob.i.a.b.l.e.ss.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.bl.e.ss.in.g.25@gmail.com"">eg.o.b.ia.bl.e.ss.in.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.l.e.s.s.in.g.25@gmail.com"">eg.ob.i.ab.l.e.s.s.in.g.25@gmail.com</a>
<a href=""mailto:ego.b.iab.le.ss.i.n.g.2.5@gmail.com"">ego.b.iab.le.ss.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.go.bi.a.b.l.e.s.sing.2.5@gmail.com"">e.go.bi.a.b.l.e.s.sing.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.iable.s.s.i.n.g25@gmail.com"">e.g.ob.iable.s.s.i.n.g25@gmail.com</a>
<a href=""mailto:eg.ob.iablessin.g.2.5@gmail.com"">eg.ob.iablessin.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.biables.s.i.ng25@gmail.com"">eg.o.biables.s.i.ng25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.b.le.s.si.ng.2.5@gmail.com"">e.g.ob.i.a.b.le.s.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.gobi.a.ble.s.s.i.ng2.5@gmail.com"">e.gobi.a.ble.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:e.g.obi.ab.l.essi.ng2.5@gmail.com"">e.g.obi.ab.l.essi.ng2.5@gmail.com</a>
<a href=""mailto:e.g.obiables.s.i.ng.25@gmail.com"">e.g.obiables.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obi.a.b.le.s.sing.25@gmail.com"">eg.obi.a.b.le.s.sing.25@gmail.com</a>
<a href=""mailto:e.go.biable.s.s.i.n.g.2.5@gmail.com"">e.go.biable.s.s.i.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.biabl.e.s.s.i.ng.2.5@gmail.com"">eg.o.biabl.e.s.s.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.biable.s.sing25@gmail.com"">eg.o.biable.s.sing25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.less.ing.2.5@gmail.com"">e.gobi.a.b.less.ing.2.5@gmail.com</a>
<a href=""mailto:ego.b.i.a.bl.ess.in.g2.5@gmail.com"">ego.b.i.a.bl.ess.in.g2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.ab.le.s.s.i.n.g25@gmail.com"">eg.o.bi.ab.le.s.s.i.n.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.able.ssi.n.g.2.5@gmail.com"">eg.o.bi.able.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.iabless.i.ng.2.5@gmail.com"">eg.ob.iabless.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.bl.essin.g25@gmail.com"">eg.o.b.i.a.bl.essin.g25@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.le.s.s.i.ng2.5@gmail.com"">e.gob.i.a.b.le.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.e.s.sin.g2.5@gmail.com"">eg.o.bi.abl.e.s.sin.g2.5@gmail.com</a>
<a href=""mailto:egob.i.a.blessi.ng25@gmail.com"">egob.i.a.blessi.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.l.e.s.si.n.g.2.5@gmail.com"">e.g.o.bi.a.b.l.e.s.si.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bl.e.s.s.i.n.g.25@gmail.com"">eg.ob.i.a.bl.e.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.l.ess.i.ng.25@gmail.com"">e.gob.i.a.b.l.ess.i.ng.25@gmail.com</a>
<a href=""mailto:egob.ia.ble.s.sing.2.5@gmail.com"">egob.ia.ble.s.sing.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.b.l.es.sing2.5@gmail.com"">e.g.ob.ia.b.l.es.sing2.5@gmail.com</a>
<a href=""mailto:eg.o.biab.le.ss.ing25@gmail.com"">eg.o.biab.le.ss.ing25@gmail.com</a>
<a href=""mailto:ego.b.ia.bl.e.ss.in.g.25@gmail.com"">ego.b.ia.bl.e.ss.in.g.25@gmail.com</a>
<a href=""mailto:e.g.ob.iab.l.e.ss.i.ng.25@gmail.com"">e.g.ob.iab.l.e.ss.i.ng.25@gmail.com</a>
<a href=""mailto:ego.biabl.es.s.in.g.25@gmail.com"">ego.biabl.es.s.in.g.25@gmail.com</a>
<a href=""mailto:eg.o.biab.l.e.ss.ing25@gmail.com"">eg.o.biab.l.e.ss.ing25@gmail.com</a>
<a href=""mailto:egob.i.ab.lessi.n.g.2.5@gmail.com"">egob.i.ab.lessi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.ab.les.s.i.n.g2.5@gmail.com"">e.g.ob.i.ab.les.s.i.n.g2.5@gmail.com</a>
<a href=""mailto:egobi.ablessi.n.g.2.5@gmail.com"">egobi.ablessi.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.bia.blessi.n.g.2.5@gmail.com"">eg.o.bia.blessi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.go.biab.les.si.n.g25@gmail.com"">e.go.biab.les.si.n.g25@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.bles.s.i.n.g25@gmail.com"">eg.o.b.i.a.bles.s.i.n.g25@gmail.com</a>
<a href=""mailto:e.go.biablessin.g.25@gmail.com"">e.go.biablessin.g.25@gmail.com</a>
<a href=""mailto:egob.ia.b.le.ssi.ng.25@gmail.com"">egob.ia.b.le.ssi.ng.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.b.l.e.s.s.in.g.2.5@gmail.com"">ego.b.i.a.b.l.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.iab.le.ssing.2.5@gmail.com"">eg.ob.iab.le.ssing.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.bl.es.s.i.ng.25@gmail.com"">e.g.o.b.ia.bl.es.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.le.s.sing25@gmail.com"">eg.ob.i.ab.le.s.sing25@gmail.com</a>
<a href=""mailto:egobi.a.b.lessin.g2.5@gmail.com"">egobi.a.b.lessin.g2.5@gmail.com</a>
<a href=""mailto:e.g.o.bi.ab.l.e.s.s.in.g.2.5@gmail.com"">e.g.o.bi.ab.l.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:ego.bi.a.ble.s.s.ing25@gmail.com"">ego.bi.a.ble.s.s.ing25@gmail.com</a>"
pniaL4Q6,change netip.Net to netip.Prefix hooks,yerden,Diff,Sunday 30th of July 2023 11:49:22 PM CDT,"diff --git a/config/config.go b/config/config.go
index c7cd0b1..095ba6b 100644
--- a/config/config.go
+++ b/config/config.go
@@ -5,6 +5,7 @@ import (
        ""encoding""
        ""errors""
        ""fmt""
+       ""net/netip""
        ""reflect""
        ""regexp""
        ""time""
@@ -375,7 +376,7 @@ func (cfg *Config) Read(v *viper.Viper) error {
        hook := mapstructure.ComposeDecodeHookFunc(
                mapstructure.StringToTimeDurationHookFunc(),
                mapstructure.StringToSliceHookFunc("",""),
-               mapstructure.StringToIPNetHookFunc(),
+               StringToIPNetHookFunc(),
                TextUnmarshallerHookFunc(),
                EthdevPortHookFunc(),
                CPUSetHookFunc(),
@@ -386,6 +387,25 @@ func (cfg *Config) Read(v *viper.Viper) error {
        return v.Unmarshal(cfg, viper.DecodeHook(hook))
 }

+// StringToIPNetHookFunc returns a DecodeHookFunc that converts
+// strings to net.IPNet
+func StringToIPNetHookFunc() mapstructure.DecodeHookFunc {
+       return func(
+               f reflect.Type,
+               t reflect.Type,
+               data interface{}) (interface{}, error) {
+               if f.Kind() != reflect.String {
+                       return data, nil
+               }
+               if t != reflect.TypeOf(netip.Prefix{}) {
+                       return data, nil
+               }
+
+               // Convert it by parsing
+               return netip.ParsePrefix(data.(string))
+       }
+}
+
 // MakeEthdevSourceConfig collects all RX lcores and maps
 // EthdevSourceConfig to each of them.
 func (cfg *Config) MakeEthdevSourceConfig() map[uint]*network.EthdevSourceConfig {
"
zd5zcsH8,Untitled,Mysoft,FreeBasic,Sunday 30th of July 2023 10:21:42 PM CDT,"enum ViewAreaType
  ' areas of the window/separated windows 
  vatNull          = 0
  vatTopLeft       '\                              
  vatTopRight      '| both ID and group marker     
  vatMiddleRight   '|                              
  vatBottomLeft    '| so below you see group items 
  vatBottomRight   '/                              
  ' types that goes in each area 
  vatScreen        = vatTopLeft     *16
  vatDisasm        = vatTopRight    *16
  vatRegsGeneric   = vatMiddleRight *16
  vatInfo          = vatBottomLeft  *16
  vatMemory        = vatBottomRight *16
  vatBlocks
  VatPalette
end enum
"
sLyeZQzG,Random Wallpaper Downloader,nitestryker,Bash,Sunday 30th of July 2023 09:50:19 PM CDT,"#!/bin/bash

# Store the directory where wallpapers will be stored
WALLPAPER_DIR=""/home/nitestryker/Pictures""

# Function to download the wallpaper
download_wallpaper() {
    # Generate a unique filename based on the current timestamp
    UNIQUE_FILENAME=""wallpaper_$(date +'%Y%m%d%H%M%S').jpg""

    # Download a random image from Unsplash and save it to the wallpaper directory
    # Use curl to fetch the image URL and store it in a variable
    IMAGE_URL=$(curl -Ls -w %{url_effective} -o /dev/null https://source.unsplash.com/random/1920x1080)

    # Save the image to the wallpaper directory with the unique filename
    curl -Lf ""$IMAGE_URL"" > ""$WALLPAPER_DIR/$UNIQUE_FILENAME""

    # Increment the downloaded wallpaper counter
    ((DOWNLOADED_WALLPAPERS++))
}

# Function to show countdown timer
show_countdown() {
    for ((i = SLEEP_DURATION * 60; i >= 0; i--)); do
        printf ""\rDownloading wallpaper %d of %d... Time left: %02d:%02d "" ""$DOWNLOADED_WALLPAPERS"" ""$MAX_WALLPAPERS"" $((i / 60)) $((i % 60))
        sleep 1
    done
    echo """"
}

# Create the directory if it doesn't exist
if [ ! -d ""$WALLPAPER_DIR"" ]; then
    mkdir ""$WALLPAPER_DIR""
fi

# Set the initial value of the downloaded wallpaper counter to 0
DOWNLOADED_WALLPAPERS=0

# Ask the user to input the maximum number of wallpapers to download
read -p ""Enter the maximum number of wallpapers to download (default: 100): "" MAX_WALLPAPERS

# If the user didn't enter any value, set the default value to 100
MAX_WALLPAPERS=${MAX_WALLPAPERS:-100}

# Ask the user to input the sleep duration in minutes
read -p ""Enter the sleep duration in minutes between downloading wallpapers (default: 5): "" SLEEP_DURATION

# If the user didn't enter any value, set the default value to 5 minutes
SLEEP_DURATION=${SLEEP_DURATION:-5}

while [ ""$DOWNLOADED_WALLPAPERS"" -lt ""$MAX_WALLPAPERS"" ]; do
    # Download the wallpaper
    download_wallpaper

    # Show a notice and countdown before sleeping
    echo ""Downloading wallpaper $DOWNLOADED_WALLPAPERS of $MAX_WALLPAPERS...""
    show_countdown
done

# Exit the script once the maximum number of wallpapers is downloaded
echo ""Maximum number of wallpapers ($MAX_WALLPAPERS) downloaded. Exiting...""
"
XR6GN8xP,Websocket example test script,Weesals,C#,Sunday 30th of July 2023 08:57:33 PM CDT,"using System;
using System.Net.WebSockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using UnityEngine;

// To test:
// - Place this component on an object in the scene
// - Visit https://socketsbay.com/test-websockets and click Connect
// - Press play in Unity
// - Wait for the name prompt on the socketsbay website
// - Enter a name and click Send
// - Wait for response greeting
public class Connection : MonoBehaviour
{
    ClientWebSocket websocket;
    
    async void Start()
    {
        websocket = new ClientWebSocket();
        await websocket.ConnectAsync(new Uri(""wss://socketsbay.com/wss/v2/1/demo/""), CancellationToken.None);

		// Begin routine
        TestRoutine();
    }

    public async void TestRoutine()
    {
        // Greeting
        SendWebSocketMessage(""Hello, what is your name?"");
        // Wait for response
        string name = await ReceiveWebSocketMessage();
        // Response
        SendWebSocketMessage(""Hello "" + name);
    }

    public void SendWebSocketMessage(string msg)
    {
        websocket.SendAsync(Encoding.UTF8.GetBytes(msg), WebSocketMessageType.Text, true, CancellationToken.None);
    }
    public async Task<string> ReceiveWebSocketMessage()
    {
        var recvBuffer = new byte[1024];
        var result = await websocket.ReceiveAsync(recvBuffer, CancellationToken.None);
        return Encoding.UTF8.GetString(recvBuffer, 0, result.Count);
    }
    void OnApplicationQuit()
    {
        websocket.CloseAsync(WebSocketCloseStatus.Empty, """", CancellationToken.None);
    }

}
"
1Z5aMs0r,mending finder,Sascha_T,Lua,Sunday 30th of July 2023 08:29:39 PM CDT,"local per = peripheral.wrap(""top"")
local enchantName = ""minecraft:mending 1""

local iterations = 0
function checkTrades()
  for i, trade in ipairs(per.getTrades()) do
    if trade.result[""minecraft:enchanted_book""] ~= nil then
      if trade.result[""minecraft:enchanted_book""][""enchants""][1] == enchantName then
        return true
      end
      print(""Passing by "".. trade.result[""minecraft:enchanted_book""][""enchants""][1])
    end
  end
  return false
end

print(""Searching for ""..enchantName)
while true do
  if checkTrades() then
    print(""Finished after "" .. iterations .. "" iterations"")
    return
  end
  per.cycleTrades()
  iterations = iterations + 1
  sleep(0.01)
end"
