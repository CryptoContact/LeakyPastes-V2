id,title,username,language,date,content
5QXahRiX,SCAN disc scheduling simulation,Saboten758,C,Sunday 26th of November 2023 12:03:08 AM CDT,"#include<stdio.h>
#include<stdlib.h>
int tracks=0;
float sys_time=0;
void service(int*,int,float,float,int);
void sort(int*,int);
void elapsed_counter(int,float);
int main(){
    system(""clear||cls"");
    printf(""Welcome to SCAN disc scheduling simulation!\n"");
    printf(""Enter the number of tracks present:"");
    scanf(""%d"",&tracks);
    int head=0,buff,ind=0;
    float seek_time=0,disc_lat=0;
    while(1){
        printf(""Enter the start position of the read-write head:"");
        scanf(""%d"",&head);
        if(head>tracks) printf(""\nHead can't be ahead of the number of tracks!\nTry again!\n"");
        else break;
    }
    printf(""Read-write head is moving in left to right direction!\n"");
    printf(""Enter the seek time(in ms):"");
    scanf(""%f"",&seek_time);
    printf(""Enter the disc latency(in ms):"");
    scanf(""%f"",&disc_lat);
    printf(""Enter the requests(10 at max)\n"");
    int * req=malloc(sizeof(int*)*10);
    while(1){
        printf(""Enter the track requested:(-1 to exit):"");
        scanf(""%d"",&buff);
        if(buff==-1 || ind==10) break;
        if(buff>tracks)printf(""Error in taking the request!\n"");
        else{
            req[ind++]=buff;
        }    
    }
    sort(req,ind);
    service(req,ind,disc_lat,seek_time,head);

}
void sort(int*ar,int len){
    int temp;
    for(int i=0;i<len;i++){
        for(int j=i+1;j<len;j++){
            if(ar[i]>ar[j]){
                temp=ar[i];
                ar[i]=ar[j];
                ar[j]=temp;
            }
        }
    }
}
void service(int* req,int len,float lat,float seek_lat,int head){
    int diff=0;
    for(int i=0;i<len;i++){ //forward scan
        if(req[i]==head) diff=0;
        else if(req[i]>head) diff=req[i]-head;
        if(req[i]>=head) {
            float time=(diff*seek_lat)+lat;
            printf(""\n\nService given to the request for %d  track!"",req[i]);
            head=req[i];
            req[i]=-1;
            printf(""\nRead-write moved to %d track!"",head);
            elapsed_counter(diff,time);
        }
    }
    diff=tracks-head;
    head=tracks; //moving head till the end

    for(int i=len-1;i>=0;i--){  //backward scan
        if(req[i]!=-1){ 
            if(req[i]==head) diff+=0;
            else if(req[i]<head)  diff=(head-req[i])+diff;
            if(req[i]<=head ) {
                float time=(diff*seek_lat)+lat;
                printf(""\n\nService given to the request for %d  track!"",req[i]);
                head=req[i];
                req[i]=-1;
                printf(""\nRead-write moved to %d track!"",head);
                elapsed_counter(diff,time);
                diff=0;
            }
        }
    }
    
}
void elapsed_counter(int seeks,float time){
    printf(""\nTotal seeks made:%d\n"",seeks);
    printf(""Total time last operation took:%.2f ms\n"",time);
    sys_time+=time;
    printf(""Total time elapsed from scheduling started:%.2f ms\n"",sys_time);
    printf(""*********************\n"");
}"
fREbVWVk,CSCAN disc scheduling simulation,Saboten758,C,Sunday 26th of November 2023 12:02:36 AM CDT,"#include<stdio.h>
#include<stdlib.h>
float system_time=0; //for storing the system time since the algorithm started
float serve=0; //global static variable serve for storing the service time of a data from a particular track (disc latency)
int tracks=0;

void elapsed_counter(float time,int head){
    printf(""\nTime Elapsed (in ms) for last operation:%.2f ms"",time);
    system_time+=time;
    printf(""\nTotal time elapsed until the start of scheduling:%.2f ms"",system_time);
    printf(""\nCurrent read-write head position:%d track\n"",head);
    printf(""\n*************\n"");
}

void service(int* req,int len,int head,float seek_lat){
    int diff=0;
    for(int i=0;i<len;i++){
        if(req[i]==head){
            diff=0;
        }
        else if(req[i]>head){
            diff=req[i]-head;
        }
        if(req[i]>=head){
            printf(""\nService was given for the request made to %d track!"",req[i]);
            printf(""\nread-write head made a seek of %d seeks!"",diff);
            head=req[i];
            req[i]=-1;
            float time=(diff*seek_lat)+serve;
            elapsed_counter(time,head);
        }
    }
    diff=tracks-head;
    head=0;
    for(int i=0;i<len;i++){
        if(req[i]==head){
            diff+=0;
        }
        else if(req[i]>head){
            diff+=(req[i]-head);
        }
        if(req[i]>=head){
            printf(""\nService was given for the request made to %d track!"",req[i]);
            printf(""\nread-write head made a seek of %d seeks!"",diff);
            head=req[i];
            req[i]=-1;
            float time=(diff*seek_lat)+serve;
            elapsed_counter(time,head);
            diff=0;
        }
    }
}
void sort(int*arr,int len){ //SIMPLE ASCENDING ORDER (TODO: OPTIMIZE!)
    for(int i=0;i<len;i++){
        for(int j=i+1;j<len;j++){
            if(arr[j]<arr[i]){
                int temp=arr[j];
                arr[j]=arr[i];
                arr[i]=temp;
            }
        }
    }
}
int main(){
    system(""clear"");
    printf(""Welcome to CSCAN disc scheduling simulation!\n""); //the readwrite head moves in circular manner while the tracks are considered to be arraged in the form of a cylinder
    int head;
    
    printf(""The read-write head is moving in right\n"");
    printf(""Enter the max number of tracks:"");
    scanf(""%d"",&tracks);
    while(1){
        printf(""\nEnter the initial position of the read-write head:"");
        scanf(""%d"",&head);
        if(head<=tracks) break;
        else printf(""\nThe initial head pos can't be ahead of the number of tracks!\n"");
    }
    
    float lat;

    printf(""Enter the seek latency(in ms):""); //time taken by the read-write head to move from one track to another
    scanf(""%f"",&lat);

    printf(""\nEnter the disc latency(in ms):""); //time taken to access a data from a sector in a certain track
    scanf(""%f"",&serve);
    int * req=malloc(10*sizeof(int*));

    int ind=0,buff;
    while (1){
        printf(""Enter the requested track number(-1 to exit):"");
        scanf(""%d"",&buff);
        if(buff==-1 || ind==9) break;
        if(buff<=tracks){
            req[ind]=buff;
            ind+=1;
        }
        else printf(""Error taking request!"");
    } 
    sort(req,ind);
    service(req,ind,head,lat);
    // for (int i=0;i<ind;i++){
    //     printf(""%d\n"",req[i]);
    // }
    
    printf(""Thanks for using!"");
}"
T42fKtw6,FCFS disc scheduling simulation,Saboten758,C,Sunday 26th of November 2023 12:02:00 AM CDT,"#include<stdio.h>
#include<stdlib.h>
float system_time=0; //for storing the system time since the algorithm started
float serve=0; //global static variable serve for storing the service time of a data from a particular track (disc latency)
void elapsed_counter(float time,int head){
    printf(""\nTime Elapsed (in ms) for last operation:%.2f"",time);
    system_time+=time;
    printf(""\nTotal time elapsed until the start of scheduling:%.2f"",system_time);
    printf(""\nCurrent read-write head position:%d track\n"",head);
    printf(""\n*************\n"");
}

void handle_fault(int req,int head,float lat){
    int diff;
    if(head<req)  diff=req-head;
    else diff=head-req;
    printf(""\nRead write head moved back by %d tracks!"",diff);
    float seek=diff*lat;
    
    printf(""\nService was given to %d !"",req);
    elapsed_counter(seek+serve,req);
}

int service(int req,int head,float lat){
    if(head==req){
        printf(""\nService was given to %d !"",req);
        elapsed_counter(0+serve,req);
    }
    else{
        handle_fault(req,head,lat);
    }
    return req;
}

int main(){
    system(""clear"");
    printf(""Welcome to FCFS disc scheduling simulation!\n"");
    int head,req=0;
    printf(""\nEnter the initial position of the read write head:"");
    scanf(""%d"",&head);

    float lat;
    printf(""Enter the seek latency(in ms):""); //time taken by the read-write head to move from one track to another
    scanf(""%f"",&lat);

    printf(""\nEnter the disc latency(in ms):""); //time taken to access a data from a sector in a certain track
    scanf(""%f"",&serve);

    while (1){
        printf(""Enter the requested track number(-1 to exit):"");
        scanf(""%d"",&req);
        if(req==-1) break;
        head=service(req,head,lat);
    }
    printf(""Thanks for using!"");
}"
4tsLY3Uz,394. Decode String,monkeypaste,Java,Saturday 25th of November 2023 11:46:38 PM CDT,"class Solution {
    // whenever we see a n[str]
    // get the number, resolve the string by calling recursively
    // and repeat n times
    
    int i = 0; 
    int len;
    
    StringBuilder helper(String s){
        StringBuilder temp = new StringBuilder();
        
        // temp string ends either at last index or ]
        while(i < len && s.charAt(i) != ']'){
            // add non-digits
            if(!Character.isDigit(s.charAt(i))) 
                temp.append(s.charAt(i++));

            // now that we've found an integer, 
            // the format of string ahead of us is n[str]
            else{
                // get the number
                int n = 0;
                while(Character.isDigit(s.charAt(i)))
                    n = (n * 10) + (s.charAt(i++) - '0');

                // now we got [str]
                i++; // skip [
                StringBuilder str = helper(s);
                i++; // skip ]

                // repeat
                while(n--> 0) temp.append(str);
            }
        }
        return temp;
    }
    public String decodeString(String s) {
        len = s.length();
        return helper(s).toString();
    }
}"
9ELWyQEg,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 25th of November 2023 11:34:07 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-870515"
inwkBWtW,Number 5,SenpaiZero,Python,Saturday 25th of November 2023 11:20:18 PM CDT,"# Number 5
import random

random_list = []
index = 0

for x in range(20):
    random_list.append(random.randint(1, 1000))
    
random_list.sort()

closest_diff = float('inf')
closest_pair = None

index = 0
while index < len(random_list) - 1:
    diff = random_list[index + 1] - random_list[index]
    if diff < closest_diff:
        closest_diff = diff
        closest_pair = (random_list[index], random_list[index + 1])
    index += 1

print(""Random List:"", random_list)
print(""Closest Pair:"", closest_pair)
"
y0V3yXSr,Number 4,SenpaiZero,Python,Saturday 25th of November 2023 11:15:13 PM CDT,"# Number 4
import random

random_list = []
for i in range(100):
    random_list.append(random.randint(100, 100000))

print(""Random List:"", random_list)
print(""Minimum Value:"", min(random_list))
print(""Maximum Value:"", max(random_list))
"
KK6cqJze,Num3,SenpaiZero,Python,Saturday 25th of November 2023 11:12:39 PM CDT,"# Number 3
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

count = 0
number = 1000000000  
while count < 25:
    if is_prime(number):
        print(""#"", (count+1), "": "", number)
        count += 1
    number += 1
"
vDFivAvQ,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 25th of November 2023 11:06:30 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
gamax1:CUJbMv on 212.224.93.130
You can connect via SSH.
Regards"
iNcTSGJd,num2,SenpaiZero,Python,Saturday 25th of November 2023 10:56:20 PM CDT,"# Number 2
numbers = []
for i in range(25):
    num = int(input(f""Enter integer {i+1}: ""))
    numbers.append(num)

ascending_order = sorted(numbers)
print(""Sorted List (Ascending Order):"", ascending_order)

descending_order = sorted(numbers, reverse=True)
print(""Sorted List (Descending Order):"", descending_order)
"
gGpRJ32y,num1,SenpaiZero,Python,Saturday 25th of November 2023 10:54:07 PM CDT,"# Number 1
numbers = []
for i in range(25):
    num = int(input(f""Enter integer {i+1}: ""))
    numbers.append(num)

for i in range(len(numbers)):
    for j in range(len(numbers) - 1):
        if numbers[j] > numbers[j + 1]:
            numbers[j], numbers[j + 1] = numbers[j + 1], numbers[j]

print(""Sorted List (Ascending Order):"", numbers)

descending_order = []
while numbers:
    max_num = max(numbers)
    descending_order.append(max_num)
    numbers.remove(max_num)
print(""Sorted List (Descending Order):"", descending_order)

"
mJTSemfG,Number1,SenpaiZero,Python,Saturday 25th of November 2023 10:50:34 PM CDT,"# Number 1
numbers = []
for i in range(25):
    num = int(input(f""Enter integer {i+1}: ""))
    numbers.append(num)

for i in range(len(numbers)):
    for j in range(len(numbers) - 1):
        if numbers[j] > numbers[j + 1]:
            numbers[j], numbers[j + 1] = numbers[j + 1], numbers[j]

print(""Sorted List (Ascending Order):"", numbers)

descending_order = numbers[::-1]
print(""Sorted List (Descending Order):"", descending_order)
"
Uv9ics0w,Hot to get proxies,DooD13Z,Python,Saturday 25th of November 2023 10:43:53 PM CDT,"import redis
from django.conf import settings
redis_client = redis.Redis(host=settings.REDIS_HOST, port=settings.REDIS_PORT)
redis_client.get(f""proxies_TicketMasterRabbitMQ"")
"
CPmeHrCV,run_scraoy sample,DooD13Z,Python,Saturday 25th of November 2023 10:40:22 PM CDT,"from ticketsmgmt.core.utils import split_list_to_chunks_by_n
from ticketsmgmt.event.models import Event
import json
import logging
from constance import config
from datetime import datetime
from django.conf import settings
from django.db.models import Q
from django.utils import timezone
from ticketsmgmt.event.tasks import schedule_spider


logger = logging.getLogger(""ticketsmgmt.event.tasks"")
start = datetime.now()
every = ""30""
period = ""seconds""
now = timezone.now()
events = Event.objects.filter(
    periodic_interval__every=every,
    periodic_interval__period=period,
    is_archived=False,
    event_scraper_name='TicketMaster'
)
events = events.filter(
    Q(event_date_time__isnull=True) | Q(event_date_time__gte=now)
)
events = events.filter(Q(paused_until__isnull=True) | Q(paused_until__lte=now))


def run_scrapy(
    events, force_event_details_update=False, via_rabbitmq=False, is_tasks4=False
):
    """"""
    Currently TM is the only spider that supports multi url scrape. After other
    scrapers will have this feature it will be the same method for all scrapers.
    """"""
    logger.debug(""START"")
    scheduling_data_tm = []
    scheduled_events_ids = []
    for event in events:
        if not event.is_scrape_allowed():
            continue
        scheduling_data_tm.append(
            {
                ""url"": event.event_url,
                ""tixt_event_id"": event.id,
                ""discovery_id"": event.tm_discovery_id,
                ""force_event_details_update"": force_event_details_update,
            }
        )
        logger.debug(
            ""TM event %s was queued for scraping, discovery ID - %s"",
            event.event_url,
            event.tm_discovery_id,
        )

    # TM schedule multi event
    schedule_chunks = split_list_to_chunks_by_n(scheduling_data_tm, chunk_size=50)
    max_scrapy_id = len(settings.SCRAPYD_SERVERS.copy())
    scrapy_id = 0
    spider = ""TicketMaster""
    if via_rabbitmq:
        spider = ""TicketMasterRabbitMQ""
    servers = settings.SCRAPYD_SERVERS.copy()
    for chunk in schedule_chunks:
        if chunk:
            scrapyd_server = servers[scrapy_id]
            if is_tasks4:
                scrapyd_server = ""http://192.168.50.38:6800""
            try:
                schedule_spider(
                    scrapyd_server,
                    settings.SCRAPYD_PROJECT,
                    spider,
                    events=json.dumps(chunk),
                    filter_out_offers_by_name=config.TM_FILTER_OUT_OFFERS_BY_NAME,
                )
                logger.debug(
                    ""Scheduled bulk of %s TM events, server - %s."",
                    len(chunk),
                    scrapyd_server,
                )
            except Exception as e:
                logger.error(
                    f""Could not schedule TM spider chunk on the server {scrapyd_server}"",
                    exc_info=True,
                )
            scrapy_id += 1
            if scrapy_id >= max_scrapy_id:
                scrapy_id = 0
    print(len(scheduling_data_tm))


run_scrapy(events, via_rabbitmq=True, is_tasks4=True)
"
5xshBnn2,CF 1901A,shawon_majid,C,Saturday 25th of November 2023 10:30:55 PM CDT,"#include <stdio.h>
#include <stdlib.h>
int main(void){
    int t, n, x, *arr, arr2[1050], i, j;
    scanf(""%d"", &t);
    for(i = 0; i < t; i++){
        scanf(""%d"", &n);
        scanf(""%d"", &x);
        arr = (int *) malloc(sizeof(int) * (n + 2));
        arr[0] = 0;
        for(j = 1; j <= n; j++){
            scanf(""%d"", &arr[j]);
        }

        arr[j] = arr[j - 1] + (2 * (x - arr[j - 1]));

        int d = 0;      

        for(j = 1; j <= n + 1; j++){
            if((arr[j] - arr[j - 1]) > d){
                d = arr[j] - arr[j - 1];
            }    
        }
        printf(""%d\n"", d);
    }

    free(arr);
    return 0;
}"
YRwSNB1g,gaoqing,Damonwei,JSON,Saturday 25th of November 2023 10:15:42 PM CDT,"{
""author"":""Dwei-1126"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://gaoqing.la/"",
""cateNode"": ""//ul[contains(@id,'w1')]/li/a[not(contains(@href,'pic'))]"",
""cateName"": ""/text()"",
""cateId"": ""/@href"",
""cateIdR"": ""/id/(\\w+).html"",
""cateManual"": {},
""cateManual"": {""1080P"": ""1080p"",""720P"": ""720p"",""推荐"": ""recommend"",""蓝光原盘"": ""bluray"",""WEB-DL"": ""webdl""},
""homeVodNode"": ""//ul[@id='post_container']/li/div"",
""homeVodName"": ""[substring-before([substring-after(//h2/a/text(),'年')],'高清')]"",
""homeVodId"": ""/div/a/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/div/a/img/@src"",
""homeVodImgR"": """",
""homeVodMark"": ""/div/span/text()"",
""cateUrl"": ""https://gaoqing.la/{cateId}/page/{catePg}/"",
""cateVodNode"": ""//ul[@id='post_container']/li/div"",
""cateVodName"": ""[substring-before([substring-after(//h2/a/text(),'年')],'高清')]"",
""cateVodId"": ""/div/a/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div/a/img/@src"",
""cateVodImgR"": """",
""cateVodMark"": ""/div/span/text()"",
""dtUrl"":""{vid}"",
""dtNode"": ""//div[@id='content']"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@id='post_content']/p/a/img/@src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""[substring-after(//div[@id='post_content']//span[contains(text(),'类　　别　')]/descendant-or-self::*//text(),'类　　别　')]"",
""dtCateR"": """",
""dtYear"": ""[substring-after(//div[@id='post_content']//span[contains(text(),'年　　代　')]/descendant-or-self::*//text(),'年　　代　')]"",
""dtYearR"": """",
""dtArea"": ""[substring-after(//div[@id='post_content']//span[contains(text(),'产　　地　')]/descendant-or-self::*//text(),'产　　地　')]"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""[substring-after(//div[@id='post_content']//span[contains(text(),'导　　演')]/descendant-or-self::*//text(),'导　　演　')]"",
""dtDirectorR"": """",
""dtActor"": ""concat(//div[@id='post_content']//span[contains(text(),'演　　员')]/following-sibling::*//text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，有些线路存在广告请勿相信！！！简介：',//div[@id='post_content']//span[contains(text(),'简　　介')]/following-sibling::*//text())"",
""dtFromNode"": ""//div[@id='post_content']"",
""dtFromName"":  ""'DweiTV'"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@id='post_content']/p[contains(.//@href,'magnet:')]/span"",
""dtUrlSubNode"": ""/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""{playUrl}"",
""searchUrl"":""https://gaoqing.la/?s={wd}"",
""scVodNode"":""//ul[@id='post_container']/li/div"",
""scVodName"":""[substring-before([substring-after(//h2/a/text(),'年')],'高清')]"",
""scVodId"":""/div/a/@href"",
""scVodIdR"": """",
""scVodImg"":""/div/a/img/@src"",
""scVodImgR"":"""",
""scVodMark"":""/a/div/span/text()""
}"
BUZdiFVQ,enviar e exibir imagens em thumbnails (2),MizunoBrasil,PHP,Saturday 25th of November 2023 09:38:02 PM CDT,"Lembre-se de substituir 'sua_senha_correta' pela senha real que deseja utilizar. Importante antes de permitir a exclusão da imagem.



<!DOCTYPE html>
<html>
<head>
    <title>Formulário de Envio de Imagem</title>
    <!-- Adicionando Bootstrap -->
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"">
</head>
<body>
    <div class=""container"">
        <h1>Formulário de Envio de Imagem</h1>
        <?php
        // Definindo o caminho da pasta de imagens
        $caminho = ""imagens/"";

        // Verificando se a pasta existe. Se não existir, cria a pasta
        if (!file_exists($caminho)) {
            mkdir($caminho);
        }

        // Verificando se o formulário foi submetido para exclusão
        if(isset($_POST['senha']) && isset($_POST['imagem'])){
            $senhaDigitada = $_POST['senha'];
            $imagem = $_POST['imagem'];

            // Verifique a senha (substitua 'sua_senha_correta' pela senha real)
            $senhaCorreta = 'sua_senha_correta';

            if ($senhaDigitada == $senhaCorreta) {
                // Senha correta, então exclua a imagem
                if(file_exists($caminho.$imagem)){
                    unlink($caminho.$imagem);
                }
            } else {
                // Senha incorreta, informe ao usuário
                echo ""<p class='text-danger'>Senha incorreta. A imagem não foi apagada.</p>"";
            }
        }

        // Verificando se o formulário foi submetido para upload
        if(isset($_FILES['imagem'])){
            $arquivo = $_FILES['imagem'];

            // Verificando se o arquivo é uma imagem
            if($arquivo['type'] == ""image/jpeg"" || $arquivo['type'] == ""image/png""){
                // Movendo o arquivo para a pasta de imagens
                move_uploaded_file($arquivo['tmp_name'], $caminho.$arquivo['name']);
            }
        }
        ?>

        <form action=""<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>"" method=""post"" enctype=""multipart/form-data"">
            <div class=""form-group"">
                <label for=""imagem"">Selecione a imagem:</label>
                <input type=""file"" name=""imagem"" class=""form-control-file"" id=""imagem"">
            </div>
            <input type=""submit"" value=""Enviar Imagem"" class=""btn btn-primary"">
        </form>
        <br>
        <hr>  

        <p><h4>Imagens enviadas:</h4></p>

        <div class=""row"">
            <?php
            // Listando as imagens na pasta
            $imagens = scandir($caminho);
            foreach($imagens as $imagem){
                if($imagem !== '.' && $imagem !== '..'){
                    // Exibindo a imagem em formato thumbnail
                    echo ""<div class='col-md-3'>"";
                    echo ""<a href='"" . $caminho . $imagem . ""' target='_blank'><img src='"" . $caminho . $imagem . ""' class='img-thumbnail'></a>"";
                    echo ""<p>"" . $imagem . ""</p>"";
                    
                    // Botão de apagar imagem com campo de senha
                    echo ""<form action='"" . htmlspecialchars($_SERVER['PHP_SELF']) . ""' method='post'>"";
                    echo ""<input type='hidden' name='imagem' value='"" . $imagem . ""'>"";
                    echo ""<div class='form-group'>"";
                    echo ""<label for='senha'>Digite a senha:</label>"";
                    echo ""<input type='password' name='senha' class='form-control' required>"";
                    echo ""</div>"";
                    echo ""<input type='submit' value='Apagar' class='btn btn-danger'>"";
                    echo ""</form>"";

                    echo ""</div>"";
                }
            }
            ?>
        </div>
    </div>

    <!-- Adicionando os scripts do Bootstrap -->
    <script src=""https://code.jquery.com/jquery-3.2.1.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>

</body>
</html>
"
WVVD4F6f,Placer,Robear9992,Lua,Saturday 25th of November 2023 09:37:58 PM CDT,"--cc:Tweaked: Placer
--pastebin get WVVD4F6f placer.lua
--placer

local sides = require(""sides"")
local inventory = require(""inventory"")
local timer = require(""timer"")

------------------ Main Routines

print(""Insert item to place in FIRST slot"")
print()
print(""Press enter when ready"")
io.read()

local plant = turtle.getItemDetail(1).name

print(""Placing  ""..plant.."" ..."")

timer.start()
while true
do
    turtle.items.select(plant)
    repeat until turtle.place()
end

turtle.dig()
print(""Finished in "".. timer.format())"
hn9wpSN1,Harvester,Robear9992,Lua,Saturday 25th of November 2023 09:08:24 PM CDT,"--cc:Tweaked: Fast Farmer
--pastebin get hn9wpSN1 harvest.lua
--harvest

local sides = require(""sides"")
local inventory = require(""inventory"")
local timer = require(""timer"")

------------------ Main Routines

print(""Ensure item to harvest is IN FRONT of the turtle"")
print()
print(""Press enter when ready"")
io.read()

local _,plant = turtle.inspect()
plant = plant.name

print(""Harvesting  ""..plant..""... "")

timer.start()
while true
do
	turtle.dig()

	repeat 
		_,growing = turtle.inspect()
	until (growing.name == plant and (growing.state.age == nil or growing.state.age == 7))
end

turtle.dig()
print(""Finished in "".. timer.format())"
7zYMV6vP,Untitled,lethargicwaldo,JavaScript,Saturday 25th of November 2023 09:05:07 PM CDT,"// Generate a random number between 1 and 15
const randomNumber = Math.floor(Math.random() * 15) + 1;

// Check if the random number is above 6
const result = randomNumber > 6 ? 'BIG' : 'SMOL';

// Print the result
return result;"
YuDC4eSX,Count Beautiful Substrings I,jayati,C++,Saturday 25th of November 2023 09:03:50 PM CDT,"class Solution {
public:
    int beautifulSubstrings(string s, int k) {
          int n = s.length();
        std::unordered_set<char> vowels = {'a', 'e', 'i', 'o', 'u'};
        int count = 0;

        for (int i = 0; i < n; ++i) {
            int vowelCount = 0, consonantCount = 0;

      
            for (int j = i; j < n; ++j) {
                if (vowels.count(tolower(s[j])))
                    vowelCount++;
                else
                    consonantCount++;


                if (vowelCount == consonantCount && (vowelCount * consonantCount) % k == 0)
                    count++;
            }
        }

        return count;
        
    }
};"
Qffzpt82,Matrix Similarity After Cyclic Shifts,jayati,C++,Saturday 25th of November 2023 08:49:06 PM CDT,"class Solution {
public:
    bool areSimilar(vector<vector<int>>& mat, int k) {
    int m = mat.size();
    int n = mat[0].size();

    std::vector<std::vector<int>> original = mat;

    for (int i = 0; i < m; ++i) {
        if (i % 2 == 0) {
            rotate(mat[i].begin(), mat[i].begin() + k % n, mat[i].end());
        } else {
            rotate(mat[i].rbegin(), mat[i].rbegin() + k % n, mat[i].rend());
        }
    }

    return mat == original;
}
};"
gJf631dG,BWR - Changelog 25/11/23,SSilver,Diff,Saturday 25th of November 2023 08:41:37 PM CDT,"Sydney Sleeper
+ Fixed rescoping not matching firing speed increase
Making sure the weapon actually benefits from the firing speed bonus to mark people in-scope faster.
 
Wrangler
+ Increased shield resistance to 40% (was 33%)
Wrangler was seen as potentially needing a bit more strength, this amount more comfortably able to block an extra grenade or rocket.
 
Quick-Fix
+ Removed blast damage taken when mirroring blast jumps
- Added +100% fall damage vulnerability on wearer
The direct damage taken from teammates was not completely implemented and was a sore sticking point in feedback. This version still increases the risk to the medic jumping but can allow him to avoid the damage with smarter movement.
 
Scorch Shot
+ Removed -15% damage penalty
+ Changed surface bouncing, retaining more horizontal momentum and falling slightly faster
- Reduced afterburn duration on splash by 33% (7.5s->5s)
The bouncing flare was revamped to have more potential utility, able to clear more corners for creative area denial. Damage was also improved for greater impact due to otherwise lacking in utility. Afterburn was however removed on splash damage to make spamming it less effective.
 
The Detonator
- Reduced afterburn duration on splash by 33% (7.5s->5s)
A similar nerf on splash damage spamming to the detonator for consistency.
 
Short Circuit
+ Reverted alt-fire firing speed penalty
+ Reduced alt-fire metal cost to 50 (was 65)
The nerf to firing speed was seen as excessive with the shortened lifespan. In addition the cost for deleting up close or jumping was seen as not as worth it. These changes hope to make both a little more worthwhile."
7MNyPuY5,glorious-nosebleed,CameronPersonett,Lua,Saturday 25th of November 2023 08:25:17 PM CDT,"function add(sample, note, instrument)
    table.insert(song.samples[sample].noteEvents, { note = note, instrument = instrument })
end

b='bass'
g='guitar'
f='flute'
e='bell'
a='bassDrum'
l='lowFloorTom'
h='highFloorTom'
o='lowTom'
m='lowMidTom'
d='highMidTom'
i='highTom'
s='snare'
t='hat'
u='unkown'

aa='F#1'
ab='G1'
ac='G#1'
ad='A1'
ae='A#1'
af='B1'
ag='C2'
ah='C#2'
ai='D2'
aj='D#2'
ak='E2'
al='F2'
am='F#2'
an='G2'
ao='G#2'
ap='A2'
aq='A#2'
ar='B2'
as='C3'
at='C#3'
au='D3'
av='D#3'
aw='E3'
ax='F3'
ay='F#3'
az='G3'
ba='G#3'
bb='A3'
bc='A#3'
bd='B3'
be='C4'
bf='C#4'
bg='D4'
bh='D#4'
bi='E4'
bj='F4'
bk='F#4'
bl='G4'
bm='G#4'
bn='A4'
bo='A#4'
bp='B4'
bq='C5'
br='C#5'
bs='D5'
bt='D#5'
bu='E5'
bv='F5'
bw='F#5'
bx='G5'
by='G#5'
bz='A5'
ca='A#5'
cb='B5'
cc='C6'
cd='C#6'
ce='D6'
cf='D#6'
cg='E6'
ch='F6'
ci='F#6'
cj='G6'
ck='G#6'
cl='A6'
cm='A#6'
cn='B6'
co='C7'
cp='C#7'
cq='D7'
cr='D#7'
cs='E7'
ct='F7'
cu='F#7'

song = {}
song.name = 'Glorious Nosebleed'
song.samples = {}

for i = 1, 2728, 1 do
    song.samples[i] = {}
    song.samples[i].noteEvents = {}
end

add(1, aq, g)
add(1, aj, b)
add(1, aq, t)
add(1, ag, a)
add(5, at, g)
add(9, ax, g)
add(9, aj, b)
add(13, bf, g)
add(13, ag, a)
add(18, bc, g)
add(18, aj, b)
add(18, am, t)
add(26, ba, g)
add(26, aj, b)
add(26, ai, s)
add(35, bc, g)
add(35, aj, b)
add(35, am, t)
add(39, ag, a)
add(44, ao, g)
add(44, aj, b)
add(44, ag, a)
add(48, av, g)
add(52, ao, g)
add(52, aj, b)
add(52, am, t)
add(57, aq, g)
add(57, ag, a)
add(61, at, g)
add(65, ax, g)
add(70, at, g)
add(70, aq, t)
add(70, ai, s)
add(78, aq, g)
add(78, ag, a)
add(83, at, g)
add(87, ax, g)
add(87, am, t)
add(91, bf, g)
add(91, ag, a)
add(95, bc, g)
add(104, ba, g)
add(104, am, t)
add(104, ai, s)
add(113, bc, g)
add(117, ag, a)
add(121, ao, g)
add(121, am, t)
add(121, ag, a)
add(126, av, g)
add(130, ao, g)
add(134, aq, g)
add(134, ag, a)
add(139, at, g)
add(139, am, t)
add(143, ax, g)
add(147, at, g)
add(147, ai, s)
add(152, am, t)
add(154, am, t)
add(156, ca, f)
add(156, bv, f)
add(156, bq, f)
add(156, aq, t)
add(165, aq, g)
add(165, aq, g)
add(165, ae, b)
add(165, at, t)
add(165, ag, a)
add(169, at, g)
add(169, at, g)
add(169, ae, b)
add(173, ax, g)
add(173, aq, g)
add(173, am, t)
add(173, ag, a)
add(177, bf, g)
add(177, ba, g)
add(177, aj, b)
add(177, ai, s)
add(182, bc, g)
add(182, ax, g)
add(182, al, b)
add(182, am, t)
add(186, ba, g)
add(186, ao, g)
add(190, ba, g)
add(190, ax, g)
add(190, al, b)
add(190, am, t)
add(190, ag, a)
add(199, bc, g)
add(199, ao, g)
add(199, am, t)
add(199, ag, a)
add(203, aq, g)
add(203, ai, s)
add(208, ao, g)
add(208, aj, b)
add(208, aq, t)
add(208, ag, a)
add(212, av, g)
add(216, ao, g)
add(216, am, t)
add(221, aq, g)
add(221, aj, b)
add(221, ai, s)
add(225, at, g)
add(225, am, t)
add(229, ax, g)
add(229, ah, b)
add(229, ag, a)
add(234, at, g)
add(234, ap, o)
add(234, ai, s)
add(242, aq, g)
add(242, aq, g)
add(242, ae, b)
add(242, bb, t)
add(242, ag, a)
add(247, at, g)
add(247, at, g)
add(247, ae, b)
add(251, ax, g)
add(251, aq, g)
add(251, am, t)
add(251, ag, a)
add(255, bf, g)
add(255, ba, g)
add(255, aj, b)
add(255, ai, s)
add(259, bc, g)
add(259, ax, g)
add(259, al, b)
add(259, am, t)
add(264, ba, g)
add(264, ao, g)
add(264, ag, a)
add(268, ba, g)
add(268, ax, g)
add(268, al, b)
add(268, ap, o)
add(268, ai, s)
add(272, as, d)
add(277, bc, g)
add(277, ao, g)
add(277, ap, o)
add(281, aq, g)
add(281, ap, o)
add(285, ao, g)
add(285, aj, b)
add(285, at, t)
add(285, ag, a)
add(290, av, g)
add(294, ao, g)
add(294, am, t)
add(294, ag, a)
add(298, aq, g)
add(298, aj, b)
add(298, ai, s)
add(303, at, g)
add(303, am, t)
add(307, ax, g)
add(307, ah, b)
add(307, ag, a)
add(311, at, g)
add(311, aq, t)
add(311, ai, s)
add(320, aq, g)
add(320, ba, g)
add(320, ae, b)
add(320, at, t)
add(320, ag, a)
add(324, at, g)
add(324, bc, g)
add(324, ae, b)
add(329, ax, g)
add(329, bc, g)
add(329, am, t)
add(329, ag, a)
add(333, bf, g)
add(333, aj, b)
add(333, ai, s)
add(337, bc, g)
add(337, bc, g)
add(337, al, b)
add(337, am, t)
add(342, ao, g)
add(346, ba, g)
add(346, bc, g)
add(346, al, b)
add(346, am, t)
add(346, ag, a)
add(354, bc, g)
add(354, bc, g)
add(354, ao, g)
add(354, am, t)
add(354, ag, a)
add(359, aq, g)
add(359, ai, s)
add(363, ao, g)
add(363, bc, g)
add(363, aj, b)
add(363, aq, t)
add(363, ag, a)
add(367, av, g)
add(372, ao, g)
add(372, ba, g)
add(372, am, t)
add(376, aq, g)
add(376, aj, b)
add(376, ai, s)
add(380, at, g)
add(380, ba, g)
add(380, al, b)
add(380, am, t)
add(385, ax, g)
add(385, ah, b)
add(385, ag, a)
add(389, at, g)
add(389, ba, g)
add(389, ap, o)
add(389, ai, s)
add(398, aq, g)
add(398, ba, g)
add(398, ae, b)
add(398, bb, t)
add(398, ag, a)
add(402, at, g)
add(402, bc, g)
add(402, ae, b)
add(406, ax, g)
add(406, bc, g)
add(406, am, t)
add(406, ag, a)
add(411, bf, g)
add(411, aj, b)
add(411, ai, s)
add(415, bc, g)
add(415, bc, g)
add(415, al, b)
add(415, am, t)
add(419, ao, g)
add(419, ag, a)
add(424, ba, g)
add(424, bc, g)
add(424, al, b)
add(424, bb, t)
add(424, ai, s)
add(432, bc, g)
add(432, bc, g)
add(432, ao, g)
add(432, ap, o)
add(432, ag, a)
add(436, aq, g)
add(436, ap, o)
add(441, ao, g)
add(441, bc, g)
add(441, aj, b)
add(441, at, t)
add(441, ag, a)
add(445, av, g)
add(449, ao, g)
add(449, ba, g)
add(449, aq, t)
add(454, aq, g)
add(454, aj, b)
add(454, ai, s)
add(458, at, g)
add(458, ba, g)
add(458, aq, t)
add(462, ax, g)
add(462, ah, b)
add(462, ag, a)
add(467, at, g)
add(467, ba, g)
add(467, ap, o)
add(467, ai, s)
add(471, ag, a)
add(475, br, f)
add(475, bm, f)
add(475, ba, g)
add(475, aq, t)
add(475, ai, s)
add(480, ag, a)
add(484, av, g)
add(484, ae, b)
add(484, at, t)
add(484, bb, t)
add(484, ag, a)
add(488, ax, g)
add(493, ba, g)
add(493, ae, b)
add(493, at, t)
add(493, ag, a)
add(497, ax, g)
add(497, bh, g)
add(497, av, g)
add(497, ah, b)
add(497, ai, s)
add(501, bj, g)
add(501, ax, g)
add(501, bd, t)
add(506, ba, g)
add(506, bh, g)
add(506, av, g)
add(506, ah, b)
add(506, ag, a)
add(510, ax, g)
add(510, bj, g)
add(510, ax, g)
add(510, ac, b)
add(510, bd, t)
add(510, ag, a)
add(518, ba, g)
add(518, ac, b)
add(518, bd, t)
add(523, ax, g)
add(523, ae, b)
add(523, ag, a)
add(527, bd, t)
add(531, ba, g)
add(531, ae, b)
add(531, ag, a)
add(536, ax, g)
add(536, bf, g)
add(536, at, g)
add(536, ah, b)
add(536, bd, t)
add(536, ai, s)
add(536, ag, a)
add(540, bh, g)
add(540, av, g)
add(544, ba, g)
add(544, bf, g)
add(544, at, g)
add(544, ah, b)
add(544, bd, t)
add(549, ax, g)
add(549, bf, g)
add(549, ba, g)
add(549, at, g)
add(549, aa, b)
add(549, ai, s)
add(553, bd, t)
add(557, ba, g)
add(557, bc, g)
add(557, ax, g)
add(557, aq, g)
add(557, aa, b)
add(557, ag, a)
add(562, ax, g)
add(562, bf, g)
add(562, ba, g)
add(562, at, g)
add(562, u, u)
add(562, at, t)
add(562, bb, t)
add(562, ag, a)
add(570, ba, g)
add(570, u, u)
add(570, bd, t)
add(570, ai, s)
add(575, ax, g)
add(575, u, u)
add(575, ag, a)
add(579, av, g)
add(579, ae, b)
add(579, aq, t)
add(579, bb, t)
add(579, ag, a)
add(583, ax, g)
add(583, ae, b)
add(588, ba, g)
add(588, ae, b)
add(588, bd, t)
add(588, ai, s)
add(592, ax, g)
add(592, bh, g)
add(592, av, g)
add(592, ae, b)
add(592, ag, a)
add(596, bj, g)
add(596, ax, g)
add(596, ae, b)
add(596, bd, t)
add(600, ba, g)
add(600, bh, g)
add(600, av, g)
add(600, ae, b)
add(600, ag, a)
add(605, ax, g)
add(605, bj, g)
add(605, ax, g)
add(605, ae, b)
add(605, bd, t)
add(605, ai, s)
add(609, ae, b)
add(613, ba, g)
add(613, ae, b)
add(613, bd, t)
add(613, ag, a)
add(618, ax, g)
add(618, ae, b)
add(618, ag, a)
add(622, ae, b)
add(622, bd, t)
add(622, ai, s)
add(626, ba, g)
add(626, ae, b)
add(626, ag, a)
add(631, ax, g)
add(631, bf, g)
add(631, ba, g)
add(631, at, g)
add(631, ae, b)
add(631, bd, t)
add(631, ag, a)
add(635, ae, b)
add(639, ba, g)
add(639, ae, b)
add(639, bd, t)
add(639, ai, s)
add(644, ax, g)
add(644, bh, g)
add(644, bc, g)
add(644, av, g)
add(644, ae, b)
add(648, ae, b)
add(648, bd, t)
add(652, ba, g)
add(652, ae, b)
add(652, ag, a)
add(657, ax, g)
add(657, bc, g)
add(657, ax, g)
add(657, aq, g)
add(657, al, b)
add(657, at, t)
add(657, bb, t)
add(657, ai, s)
add(657, ag, a)
add(661, aj, b)
add(665, ba, g)
add(665, aj, b)
add(665, bd, t)
add(665, ag, a)
add(670, ax, g)
add(670, al, b)
add(670, ag, a)
add(674, bc, g)
add(674, ah, b)
add(674, bb, t)
add(674, ai, s)
add(678, bf, g)
add(678, ah, b)
add(683, bc, g)
add(683, ah, b)
add(683, bd, t)
add(683, ag, a)
add(687, bh, g)
add(687, av, g)
add(687, ah, b)
add(687, ai, s)
add(691, bf, g)
add(691, bj, g)
add(691, ax, g)
add(691, ah, b)
add(691, bd, t)
add(695, bh, g)
add(695, av, g)
add(695, ah, b)
add(695, ag, a)
add(700, bc, g)
add(700, bj, g)
add(700, ax, g)
add(700, ah, b)
add(700, at, t)
add(700, ag, a)
add(704, bf, g)
add(704, ah, b)
add(708, bc, g)
add(708, ah, b)
add(708, bd, t)
add(708, ag, a)
add(713, ah, b)
add(713, ai, s)
add(717, bf, g)
add(717, ah, b)
add(717, bd, t)
add(721, ah, b)
add(721, ag, a)
add(726, bc, g)
add(726, bm, f)
add(726, ba, g)
add(726, ah, b)
add(726, bb, t)
add(726, ai, s)
add(726, ag, a)
add(730, bf, g)
add(730, bo, f)
add(730, bc, g)
add(730, ah, b)
add(734, bc, g)
add(734, ah, b)
add(734, bb, t)
add(734, ag, a)
add(739, bo, f)
add(739, bc, g)
add(739, ah, b)
add(739, ai, s)
add(741, ai, s)
add(743, bf, g)
add(743, ah, b)
add(743, ai, s)
add(745, ar, m)
add(747, bm, f)
add(747, ba, g)
add(747, ah, b)
add(747, ar, m)
add(749, ar, m)
add(752, bc, g)
add(752, bj, g)
add(752, be, g)
add(752, ax, g)
add(752, ah, b)
add(752, at, t)
add(752, ag, a)
add(756, bf, g)
add(756, ag, b)
add(760, bc, g)
add(760, ag, b)
add(760, bd, t)
add(760, ai, s)
add(765, ah, b)
add(765, ag, a)
add(769, bq, f)
add(769, ae, b)
add(769, at, t)
add(769, bb, t)
add(769, ag, a)
add(773, ae, b)
add(777, bq, f)
add(777, ae, b)
add(777, bd, t)
add(777, ag, a)
add(782, bq, f)
add(782, bh, g)
add(782, av, g)
add(782, ae, b)
add(782, ai, s)
add(786, bj, g)
add(786, ax, g)
add(786, ae, b)
add(786, bd, t)
add(790, bq, f)
add(790, bh, g)
add(790, av, g)
add(790, ae, b)
add(790, ag, a)
add(795, bq, f)
add(795, bj, g)
add(795, ax, g)
add(795, ae, b)
add(795, bd, t)
add(795, ai, s)
add(799, ae, b)
add(799, ai, s)
add(803, bq, f)
add(803, ae, b)
add(803, bd, t)
add(803, al, l)
add(803, ag, a)
add(808, bq, f)
add(808, ae, b)
add(808, ai, s)
add(812, ae, b)
add(812, bd, t)
add(816, bq, f)
add(816, ae, b)
add(816, ag, a)
add(821, bq, f)
add(821, bf, g)
add(821, ba, g)
add(821, at, g)
add(821, ae, b)
add(821, at, t)
add(821, bb, t)
add(821, ag, a)
add(825, ae, b)
add(829, bq, f)
add(829, ae, b)
add(829, bd, t)
add(829, ag, a)
add(834, bq, f)
add(834, bh, g)
add(834, bc, g)
add(834, av, g)
add(834, ae, b)
add(834, ai, s)
add(834, ag, a)
add(838, ae, b)
add(838, bd, t)
add(842, bq, f)
add(842, ae, b)
add(842, ag, a)
add(847, br, f)
add(847, bc, g)
add(847, ax, g)
add(847, aq, g)
add(847, al, b)
add(847, bb, t)
add(847, ai, s)
add(851, aj, b)
add(851, ag, a)
add(853, ap, o)
add(855, aj, b)
add(855, ar, m)
add(859, al, b)
add(859, ag, a)
add(864, bq, f)
add(864, ao, g)
add(864, ah, b)
add(864, bb, t)
add(864, ag, a)
add(868, aq, g)
add(872, ah, t)
add(881, ah, t)
add(885, ag, a)
add(890, ah, t)
add(890, ai, s)
add(898, ah, t)
add(903, aq, t)
add(907, ah, t)
add(911, ag, a)
add(916, bc, g)
add(916, ah, t)
add(916, ag, a)
add(920, bf, g)
add(924, bc, g)
add(924, ah, t)
add(929, bj, g)
add(929, am, t)
add(931, am, t)
add(933, ah, t)
add(937, ag, a)
add(941, ah, t)
add(941, ai, s)
add(946, ai, s)
add(950, ah, t)
add(959, ah, t)
add(963, ag, a)
add(967, ba, g)
add(967, ax, g)
add(967, ba, g)
add(967, ae, b)
add(967, at, t)
add(967, ah, t)
add(967, ag, a)
add(972, be, g)
add(976, ba, g)
add(976, ah, t)
add(980, bj, g)
add(985, ah, t)
add(989, ag, a)
add(993, ah, t)
add(993, ai, s)
add(1002, ah, t)
add(1006, aq, t)
add(1011, ah, t)
add(1015, ag, a)
add(1019, ba, g)
add(1019, ae, b)
add(1019, ah, t)
add(1019, ag, a)
add(1024, be, g)
add(1028, ba, g)
add(1028, ah, t)
add(1032, bj, g)
add(1032, am, t)
add(1034, am, t)
add(1036, ah, t)
add(1041, ag, a)
add(1045, al, b)
add(1045, ai, s)
add(1049, aj, b)
add(1049, ai, s)
add(1054, aj, b)
add(1054, ah, t)
add(1058, al, b)
add(1058, ap, o)
add(1062, ai, s)
add(1067, ag, a)
add(1071, bc, g)
add(1071, at, g)
add(1071, aq, g)
add(1071, bc, g)
add(1071, ah, b)
add(1071, bb, t)
add(1071, ag, a)
add(1075, bf, g)
add(1080, bc, g)
add(1080, ah, t)
add(1084, bj, g)
add(1088, ah, t)
add(1093, ag, a)
add(1097, ah, t)
add(1097, ai, s)
add(1106, ah, t)
add(1110, aq, t)
add(1114, ah, t)
add(1118, ag, a)
add(1123, bc, g)
add(1123, ah, t)
add(1123, ag, a)
add(1127, bf, g)
add(1131, bc, g)
add(1131, ah, t)
add(1136, bj, g)
add(1136, am, t)
add(1138, am, t)
add(1140, al, b)
add(1140, ah, t)
add(1144, aj, b)
add(1144, ag, a)
add(1149, al, b)
add(1149, ah, t)
add(1149, ai, s)
add(1153, ai, s)
add(1157, ae, b)
add(1157, ah, t)
add(1166, ah, t)
add(1170, ag, a)
add(1175, bh, g)
add(1175, be, g)
add(1175, ba, g)
add(1175, ba, g)
add(1175, at, t)
add(1175, ah, t)
add(1175, ag, a)
add(1179, be, g)
add(1179, u, u)
add(1183, ba, g)
add(1183, ac, b)
add(1183, ah, t)
add(1188, bj, g)
add(1192, ah, t)
add(1196, ag, a)
add(1200, ah, t)
add(1200, ai, s)
add(1209, ah, t)
add(1213, aq, t)
add(1218, ah, t)
add(1222, ag, a)
add(1226, ba, g)
add(1226, ah, t)
add(1226, ag, a)
add(1231, be, g)
add(1235, ba, g)
add(1235, ah, t)
add(1239, bj, g)
add(1239, am, t)
add(1241, am, t)
add(1244, ai, s)
add(1246, ai, s)
add(1248, ai, s)
add(1250, ai, s)
add(1252, ai, s)
add(1265, ag, a)
add(1270, ap, o)
add(1270, ai, s)
add(1274, ag, a)
add(1278, bc, g)
add(1278, ax, g)
add(1278, aq, g)
add(1278, bc, g)
add(1278, bb, t)
add(1278, ag, a)
add(1282, bf, g)
add(1282, aa, b)
add(1287, bc, g)
add(1287, ah, t)
add(1291, ax, g)
add(1291, aa, b)
add(1295, ah, t)
add(1300, ag, a)
add(1304, ah, t)
add(1304, ai, s)
add(1308, aa, b)
add(1313, ah, t)
add(1317, aa, b)
add(1317, aq, t)
add(1321, ah, t)
add(1326, ag, a)
add(1330, bc, g)
add(1330, ah, t)
add(1330, ag, a)
add(1334, bf, g)
add(1334, u, u)
add(1339, bc, g)
add(1339, ah, t)
add(1343, ax, g)
add(1343, u, u)
add(1343, am, t)
add(1345, am, t)
add(1347, ah, t)
add(1352, ag, a)
add(1356, ah, t)
add(1356, ai, s)
add(1360, u, u)
add(1360, ai, s)
add(1365, ah, t)
add(1369, u, u)
add(1373, ah, t)
add(1377, ag, a)
add(1382, bh, g)
add(1382, be, g)
add(1382, ba, g)
add(1382, ba, g)
add(1382, at, t)
add(1382, ah, t)
add(1382, ag, a)
add(1386, be, g)
add(1386, ae, b)
add(1390, ba, g)
add(1390, ah, t)
add(1395, ax, g)
add(1395, ae, b)
add(1399, ah, t)
add(1403, ag, a)
add(1408, ah, t)
add(1408, ai, s)
add(1412, ae, b)
add(1416, ah, t)
add(1421, ae, b)
add(1421, aq, t)
add(1425, ah, t)
add(1429, ag, a)
add(1434, ba, g)
add(1434, ah, t)
add(1434, ag, a)
add(1438, be, g)
add(1438, ae, b)
add(1442, ba, g)
add(1442, ah, t)
add(1447, ax, g)
add(1447, ae, b)
add(1447, am, t)
add(1449, am, t)
add(1451, ah, t)
add(1455, ag, a)
add(1459, ai, s)
add(1464, ae, b)
add(1464, ag, a)
add(1468, ar, m)
add(1472, ae, b)
add(1472, ag, a)
add(1477, an, h)
add(1481, ag, a)
add(1485, aq, g)
add(1485, bc, g)
add(1485, bb, t)
add(1485, ag, a)
add(1490, bf, g)
add(1490, ag, b)
add(1494, bc, g)
add(1494, ah, t)
add(1498, ax, g)
add(1498, ax, g)
add(1498, ag, b)
add(1503, av, g)
add(1503, ah, t)
add(1507, ba, g)
add(1507, ag, a)
add(1511, bc, g)
add(1511, ah, t)
add(1511, ai, s)
add(1516, bo, f)
add(1516, ag, b)
add(1520, bj, g)
add(1520, ah, t)
add(1524, bo, f)
add(1524, ag, b)
add(1524, aq, t)
add(1529, bj, g)
add(1529, ah, t)
add(1533, ag, a)
add(1537, aq, g)
add(1537, bc, g)
add(1537, ah, t)
add(1537, ag, a)
add(1541, bf, g)
add(1541, aa, b)
add(1546, bc, g)
add(1546, ah, t)
add(1550, ax, g)
add(1550, ax, g)
add(1550, aa, b)
add(1550, am, t)
add(1552, am, t)
add(1554, av, g)
add(1554, ah, t)
add(1559, ba, g)
add(1559, ag, a)
add(1563, bc, g)
add(1563, ah, t)
add(1563, ai, s)
add(1567, bo, f)
add(1567, aa, b)
add(1567, ai, s)
add(1572, bj, g)
add(1572, ah, t)
add(1576, bo, f)
add(1576, aa, b)
add(1580, bj, g)
add(1580, ah, t)
add(1585, ag, a)
add(1589, at, g)
add(1589, ba, g)
add(1589, ae, b)
add(1589, at, t)
add(1589, ah, t)
add(1589, ag, a)
add(1593, be, g)
add(1598, ba, g)
add(1598, ae, b)
add(1598, ah, t)
add(1602, ax, g)
add(1602, ax, g)
add(1602, ah, b)
add(1606, av, g)
add(1606, ah, t)
add(1611, ba, g)
add(1611, ah, b)
add(1611, ag, a)
add(1615, bc, g)
add(1615, ac, b)
add(1615, ah, t)
add(1615, ai, s)
add(1619, bo, f)
add(1623, bj, g)
add(1623, ac, b)
add(1623, ah, t)
add(1628, bo, f)
add(1628, ae, b)
add(1628, aq, t)
add(1632, bj, g)
add(1632, ah, t)
add(1636, ae, b)
add(1636, ag, a)
add(1641, at, g)
add(1641, ba, g)
add(1641, ah, b)
add(1641, ah, t)
add(1641, ag, a)
add(1645, be, g)
add(1649, ba, g)
add(1649, ah, b)
add(1649, ah, t)
add(1654, ax, g)
add(1654, ax, g)
add(1654, aa, b)
add(1654, am, t)
add(1656, am, t)
add(1658, av, g)
add(1658, ah, t)
add(1662, ba, g)
add(1662, aa, b)
add(1662, ag, a)
add(1667, bc, g)
add(1667, ah, t)
add(1667, ai, s)
add(1671, bo, f)
add(1671, ai, s)
add(1675, bj, g)
add(1675, u, u)
add(1675, ar, m)
add(1675, an, h)
add(1680, bo, f)
add(1680, ag, a)
add(1684, bf, g)
add(1684, u, u)
add(1684, aq, t)
add(1684, ah, t)
add(1688, u, u)
add(1688, ag, a)
add(1693, aq, g)
add(1693, bc, g)
add(1693, bb, t)
add(1693, ag, a)
add(1697, bf, g)
add(1697, ag, b)
add(1701, bc, g)
add(1701, ah, t)
add(1706, ax, g)
add(1706, ax, g)
add(1706, ag, b)
add(1710, av, g)
add(1710, ah, t)
add(1714, ba, g)
add(1714, ag, a)
add(1718, bc, g)
add(1718, ah, t)
add(1718, ai, s)
add(1723, bo, f)
add(1723, ag, b)
add(1727, bj, g)
add(1727, ah, t)
add(1731, bo, f)
add(1731, ag, b)
add(1731, aq, t)
add(1736, bj, g)
add(1736, ah, t)
add(1740, ag, a)
add(1744, aq, g)
add(1744, bc, g)
add(1744, ah, t)
add(1744, ag, a)
add(1749, bf, g)
add(1749, aa, b)
add(1753, bc, g)
add(1753, ah, t)
add(1757, ax, g)
add(1757, ax, g)
add(1757, aa, b)
add(1757, am, t)
add(1759, am, t)
add(1762, av, g)
add(1762, ah, t)
add(1766, ba, g)
add(1766, ag, a)
add(1770, bc, g)
add(1770, ah, t)
add(1770, ai, s)
add(1775, bo, f)
add(1775, aa, b)
add(1775, ai, s)
add(1779, bj, g)
add(1779, ah, t)
add(1783, bo, f)
add(1783, aa, b)
add(1788, bj, g)
add(1788, ah, t)
add(1792, ag, a)
add(1796, at, g)
add(1796, ba, g)
add(1796, ac, b)
add(1796, at, t)
add(1796, ah, t)
add(1796, ag, a)
add(1800, be, g)
add(1800, ae, b)
add(1805, ba, g)
add(1805, ah, t)
add(1809, ax, g)
add(1809, ax, g)
add(1813, av, g)
add(1813, ah, t)
add(1818, ba, g)
add(1818, ag, a)
add(1822, bc, g)
add(1822, ah, t)
add(1822, ai, s)
add(1826, bo, f)
add(1831, bj, g)
add(1831, ah, t)
add(1835, bo, f)
add(1835, aq, t)
add(1839, bf, g)
add(1839, ah, t)
add(1844, ag, a)
add(1848, at, g)
add(1848, ba, g)
add(1848, ah, t)
add(1848, ag, a)
add(1852, be, g)
add(1857, ba, g)
add(1857, ah, t)
add(1861, ax, g)
add(1861, ax, g)
add(1861, am, t)
add(1863, am, t)
add(1865, av, g)
add(1865, ah, t)
add(1870, ba, g)
add(1870, ag, a)
add(1874, bc, g)
add(1874, ah, t)
add(1874, ai, s)
add(1878, bo, f)
add(1878, ai, s)
add(1882, bj, g)
add(1882, ah, t)
add(1887, bo, f)
add(1891, bf, g)
add(1891, ah, t)
add(1900, bq, f)
add(1900, bo, f)
add(1900, bj, g)
add(1900, bc, g)
add(1900, ar, m)
add(1900, an, h)
add(1908, bq, f)
add(1908, bo, f)
add(1908, bj, g)
add(1908, bc, g)
add(1921, bq, f)
add(1921, bo, f)
add(1921, bj, g)
add(1921, bc, g)
add(1930, bq, f)
add(1930, bo, f)
add(1930, bj, g)
add(1930, bc, g)
add(1939, bq, f)
add(1939, bo, f)
add(1939, bj, g)
add(1939, bc, g)
add(1941, bq, f)
add(1941, bo, f)
add(1941, bj, g)
add(1941, bc, g)
add(1943, bj, g)
add(1943, be, g)
add(1943, ax, g)
add(1943, bq, f)
add(1943, bo, f)
add(1943, bj, g)
add(1943, bc, g)
add(1943, ae, b)
add(1943, bb, t)
add(1943, ai, s)
add(1947, ag, a)
add(1952, bj, g)
add(1952, be, g)
add(1952, ax, g)
add(1952, bq, f)
add(1952, bo, f)
add(1952, bj, g)
add(1952, bc, g)
add(1952, ae, b)
add(1952, at, t)
add(1952, ai, s)
add(1960, aj, b)
add(1960, aq, t)
add(1960, ag, a)
add(1964, bj, g)
add(1964, be, g)
add(1964, ax, g)
add(1964, bq, f)
add(1964, bo, f)
add(1964, bj, g)
add(1964, bc, g)
add(1964, ae, b)
add(1964, ai, s)
add(1969, bm, f)
add(1969, bh, g)
add(1969, ba, g)
add(1969, aq, t)
add(1969, ag, a)
add(1973, bm, f)
add(1973, bh, g)
add(1973, ba, g)
add(1973, br, f)
add(1973, bo, f)
add(1973, bj, g)
add(1973, bc, g)
add(1973, ae, b)
add(1973, ag, a)
add(1977, bm, f)
add(1977, bh, g)
add(1977, ba, g)
add(1977, aq, t)
add(1982, bq, f)
add(1982, bo, f)
add(1982, bj, g)
add(1982, bc, g)
add(1982, ag, a)
add(1984, bq, f)
add(1984, bo, f)
add(1984, bj, g)
add(1984, bc, g)
add(1986, bj, g)
add(1986, be, g)
add(1986, ax, g)
add(1986, bm, f)
add(1986, bj, g)
add(1986, bf, g)
add(1986, ay, g)
add(1986, aa, b)
add(1986, at, t)
add(1986, ai, s)
add(1986, ag, a)
add(1990, ar, m)
add(1993, ai, s)
add(1995, bj, g)
add(1995, be, g)
add(1995, ax, g)
add(1995, bm, f)
add(1995, bj, g)
add(1995, bf, g)
add(1995, ay, g)
add(1995, aa, b)
add(1995, bb, t)
add(1995, ag, a)
add(2003, aj, b)
add(2003, aq, t)
add(2003, ag, a)
add(2008, bj, g)
add(2008, be, g)
add(2008, ax, g)
add(2008, bm, f)
add(2008, bj, g)
add(2008, bf, g)
add(2008, ay, g)
add(2008, aa, b)
add(2008, ai, s)
add(2012, bh, g)
add(2012, bc, g)
add(2012, av, g)
add(2012, aq, t)
add(2012, ag, a)
add(2016, bj, g)
add(2016, be, g)
add(2016, ax, g)
add(2016, bm, f)
add(2016, bj, g)
add(2016, bf, g)
add(2016, ay, g)
add(2016, aa, b)
add(2016, ag, a)
add(2021, aq, t)
add(2025, aj, b)
add(2025, bm, f)
add(2025, bj, g)
add(2025, bf, g)
add(2025, ay, g)
add(2025, ag, a)
add(2027, bm, f)
add(2027, bj, g)
add(2027, bf, g)
add(2027, ay, g)
add(2029, bh, g)
add(2029, bc, g)
add(2029, av, g)
add(2029, bm, f)
add(2029, bj, g)
add(2029, be, g)
add(2029, ax, g)
add(2029, u, u)
add(2029, at, t)
add(2029, ai, s)
add(2034, ag, a)
add(2038, bh, g)
add(2038, bc, g)
add(2038, av, g)
add(2038, bm, f)
add(2038, bj, g)
add(2038, be, g)
add(2038, ax, g)
add(2038, u, u)
add(2038, bb, t)
add(2038, ai, s)
add(2042, ag, a)
add(2047, aj, b)
add(2047, aq, t)
add(2051, bj, g)
add(2051, be, g)
add(2051, ax, g)
add(2051, bm, f)
add(2051, bj, g)
add(2051, be, g)
add(2051, ax, g)
add(2051, u, u)
add(2051, ai, s)
add(2055, bh, g)
add(2055, bc, g)
add(2055, av, g)
add(2055, aq, t)
add(2055, ag, a)
add(2059, bj, g)
add(2059, be, g)
add(2059, ax, g)
add(2059, bm, f)
add(2059, bj, g)
add(2059, be, g)
add(2059, ax, g)
add(2059, u, u)
add(2059, ag, a)
add(2064, aq, t)
add(2068, aj, b)
add(2068, bm, f)
add(2068, bj, g)
add(2068, be, g)
add(2068, ax, g)
add(2068, ag, a)
add(2070, bm, f)
add(2070, bj, g)
add(2070, be, g)
add(2070, ax, g)
add(2072, bj, g)
add(2072, be, g)
add(2072, ax, g)
add(2072, bq, f)
add(2072, bo, f)
add(2072, bj, g)
add(2072, bc, g)
add(2072, ae, b)
add(2072, at, t)
add(2072, ai, s)
add(2077, bj, g)
add(2077, be, g)
add(2077, ax, g)
add(2077, ag, a)
add(2081, bj, g)
add(2081, be, g)
add(2081, ax, g)
add(2081, bq, f)
add(2081, bo, f)
add(2081, bj, g)
add(2081, bc, g)
add(2081, ae, b)
add(2081, bb, t)
add(2081, ai, s)
add(2085, ag, a)
add(2090, aj, b)
add(2090, aq, t)
add(2094, bj, g)
add(2094, be, g)
add(2094, ax, g)
add(2094, bq, f)
add(2094, bo, f)
add(2094, bj, g)
add(2094, bc, g)
add(2094, ae, b)
add(2094, ai, s)
add(2098, bh, g)
add(2098, bc, g)
add(2098, av, g)
add(2098, aq, t)
add(2098, ag, a)
add(2103, bj, g)
add(2103, be, g)
add(2103, ax, g)
add(2103, bq, f)
add(2103, bo, f)
add(2103, bj, g)
add(2103, bc, g)
add(2103, ae, b)
add(2103, ag, a)
add(2107, aq, t)
add(2111, bj, g)
add(2111, be, g)
add(2111, ax, g)
add(2111, bq, f)
add(2111, bo, f)
add(2111, bj, g)
add(2111, bc, g)
add(2111, ag, a)
add(2113, bj, g)
add(2113, be, g)
add(2113, ax, g)
add(2113, bq, f)
add(2113, bo, f)
add(2113, bj, g)
add(2113, bc, g)
add(2116, bj, g)
add(2116, be, g)
add(2116, ax, g)
add(2116, bq, f)
add(2116, bo, f)
add(2116, bj, g)
add(2116, bc, g)
add(2116, ae, b)
add(2116, at, t)
add(2116, ai, s)
add(2120, bj, g)
add(2120, be, g)
add(2120, ax, g)
add(2120, ai, s)
add(2122, bj, g)
add(2122, be, g)
add(2122, ax, g)
add(2122, ai, s)
add(2124, bj, g)
add(2124, be, g)
add(2124, ax, g)
add(2124, bq, f)
add(2124, bo, f)
add(2124, bj, g)
add(2124, bc, g)
add(2124, ae, b)
add(2124, bb, t)
add(2124, ag, a)
add(2133, aj, b)
add(2133, aq, t)
add(2133, ag, a)
add(2137, bj, g)
add(2137, be, g)
add(2137, ax, g)
add(2137, bq, f)
add(2137, bo, f)
add(2137, bj, g)
add(2137, bc, g)
add(2137, ae, b)
add(2137, ai, s)
add(2141, bm, f)
add(2141, bh, g)
add(2141, ba, g)
add(2141, aq, t)
add(2141, ag, a)
add(2146, bm, f)
add(2146, bh, g)
add(2146, ba, g)
add(2146, br, f)
add(2146, bo, f)
add(2146, bj, g)
add(2146, bc, g)
add(2146, ae, b)
add(2146, ag, a)
add(2150, bm, f)
add(2150, bh, g)
add(2150, ba, g)
add(2150, aq, t)
add(2154, bq, f)
add(2154, bo, f)
add(2154, bj, g)
add(2154, bc, g)
add(2154, ag, a)
add(2157, bq, f)
add(2157, bo, f)
add(2157, bj, g)
add(2157, bc, g)
add(2159, bo, f)
add(2159, bj, g)
add(2159, bc, g)
add(2159, bq, f)
add(2159, bo, f)
add(2159, bj, g)
add(2159, bc, g)
add(2159, ag, b)
add(2159, at, t)
add(2159, ai, s)
add(2163, ag, a)
add(2167, bo, f)
add(2167, bj, g)
add(2167, bc, g)
add(2167, bq, f)
add(2167, bo, f)
add(2167, bj, g)
add(2167, bc, g)
add(2167, ag, b)
add(2167, bb, t)
add(2167, ai, s)
add(2172, ag, a)
add(2176, aj, b)
add(2176, aq, t)
add(2180, bo, f)
add(2180, bj, g)
add(2180, bc, g)
add(2180, bq, f)
add(2180, bo, f)
add(2180, bj, g)
add(2180, bc, g)
add(2180, ag, b)
add(2180, ai, s)
add(2185, aq, t)
add(2185, ag, a)
add(2189, bo, f)
add(2189, bj, g)
add(2189, bc, g)
add(2189, bq, f)
add(2189, bo, f)
add(2189, bj, g)
add(2189, bc, g)
add(2189, ag, b)
add(2189, ag, a)
add(2193, aq, t)
add(2198, br, f)
add(2198, bm, f)
add(2198, bf, g)
add(2198, bq, f)
add(2198, bo, f)
add(2198, bj, g)
add(2198, bc, g)
add(2198, ag, a)
add(2200, br, f)
add(2200, bm, f)
add(2200, bf, g)
add(2200, bq, f)
add(2200, bo, f)
add(2200, bj, g)
add(2200, bc, g)
add(2202, br, f)
add(2202, u, g)
add(2202, bf, g)
add(2202, bq, f)
add(2202, bo, f)
add(2202, bj, g)
add(2202, bc, g)
add(2202, aa, b)
add(2202, at, t)
add(2202, ai, s)
add(2206, br, f)
add(2206, bm, f)
add(2206, bf, g)
add(2206, ai, s)
add(2208, br, f)
add(2208, bm, f)
add(2208, bf, g)
add(2208, ai, s)
add(2211, br, f)
add(2211, u, g)
add(2211, bf, g)
add(2211, bq, f)
add(2211, bo, f)
add(2211, bj, g)
add(2211, bc, g)
add(2211, aa, b)
add(2211, bb, t)
add(2211, ag, a)
add(2219, br, f)
add(2219, bm, f)
add(2219, bf, g)
add(2219, aq, t)
add(2219, ag, a)
add(2223, br, f)
add(2223, bm, f)
add(2223, bf, g)
add(2223, bq, f)
add(2223, bo, f)
add(2223, bj, g)
add(2223, bc, g)
add(2223, aa, b)
add(2223, ai, s)
add(2228, aq, t)
add(2228, ag, a)
add(2232, br, f)
add(2232, bm, f)
add(2232, bf, g)
add(2232, br, f)
add(2232, bo, f)
add(2232, bj, g)
add(2232, bc, g)
add(2232, aa, b)
add(2232, ag, a)
add(2236, aq, t)
add(2241, br, f)
add(2241, bf, g)
add(2241, bq, f)
add(2241, bo, f)
add(2241, bj, g)
add(2241, bc, g)
add(2241, ag, a)
add(2243, bq, f)
add(2243, bo, f)
add(2243, bj, g)
add(2243, bc, g)
add(2245, av, g)
add(2245, ae, b)
add(2245, at, t)
add(2245, bb, t)
add(2245, ag, a)
add(2249, ax, g)
add(2254, ba, g)
add(2254, ae, b)
add(2254, at, t)
add(2254, ag, a)
add(2258, ax, g)
add(2258, bh, g)
add(2258, av, g)
add(2258, ah, b)
add(2258, ai, s)
add(2262, bj, g)
add(2262, ax, g)
add(2262, bd, t)
add(2267, ba, g)
add(2267, bh, g)
add(2267, av, g)
add(2267, ah, b)
add(2267, ag, a)
add(2271, ax, g)
add(2271, bj, g)
add(2271, ax, g)
add(2271, ac, b)
add(2271, bd, t)
add(2271, ag, a)
add(2280, ba, g)
add(2280, ac, b)
add(2280, bd, t)
add(2284, ax, g)
add(2284, ae, b)
add(2284, ag, a)
add(2288, bd, t)
add(2293, ba, g)
add(2293, ae, b)
add(2293, ag, a)
add(2297, ax, g)
add(2297, bf, g)
add(2297, at, g)
add(2297, ah, b)
add(2297, bd, t)
add(2297, ai, s)
add(2297, ag, a)
add(2301, bh, g)
add(2301, av, g)
add(2305, ba, g)
add(2305, bf, g)
add(2305, at, g)
add(2305, ah, b)
add(2305, bd, t)
add(2310, ax, g)
add(2310, bf, g)
add(2310, ba, g)
add(2310, at, g)
add(2310, aa, b)
add(2310, ai, s)
add(2314, bd, t)
add(2318, ba, g)
add(2318, bc, g)
add(2318, ax, g)
add(2318, aq, g)
add(2318, aa, b)
add(2318, ag, a)
add(2323, ax, g)
add(2323, bf, g)
add(2323, ba, g)
add(2323, at, g)
add(2323, u, u)
add(2323, at, t)
add(2323, bb, t)
add(2323, ag, a)
add(2331, ba, g)
add(2331, u, u)
add(2331, bd, t)
add(2331, ai, s)
add(2336, ax, g)
add(2336, u, u)
add(2336, ag, a)
add(2340, av, g)
add(2340, ae, b)
add(2340, aq, t)
add(2340, bb, t)
add(2340, ag, a)
add(2344, ax, g)
add(2349, ba, g)
add(2349, ae, b)
add(2349, bd, t)
add(2349, ai, s)
add(2353, ax, g)
add(2353, bh, g)
add(2353, av, g)
add(2353, ah, b)
add(2353, ag, a)
add(2357, bj, g)
add(2357, ax, g)
add(2357, bd, t)
add(2362, ba, g)
add(2362, bh, g)
add(2362, av, g)
add(2362, ah, b)
add(2362, ag, a)
add(2366, ax, g)
add(2366, bj, g)
add(2366, ax, g)
add(2366, ac, b)
add(2366, bd, t)
add(2366, ai, s)
add(2375, ba, g)
add(2375, ac, b)
add(2375, bd, t)
add(2375, ag, a)
add(2379, ax, g)
add(2379, ae, b)
add(2379, ag, a)
add(2383, bd, t)
add(2383, ai, s)
add(2388, ba, g)
add(2388, ae, b)
add(2388, ag, a)
add(2392, ax, g)
add(2392, bf, g)
add(2392, ba, g)
add(2392, at, g)
add(2392, ah, b)
add(2392, bd, t)
add(2392, ag, a)
add(2400, ba, g)
add(2400, ah, b)
add(2400, bd, t)
add(2400, ai, s)
add(2405, ax, g)
add(2405, bh, g)
add(2405, bc, g)
add(2405, av, g)
add(2405, aa, b)
add(2409, bd, t)
add(2413, ba, g)
add(2413, aa, b)
add(2413, ag, a)
add(2418, ax, g)
add(2418, bc, g)
add(2418, ax, g)
add(2418, aq, g)
add(2418, al, b)
add(2418, at, t)
add(2418, bb, t)
add(2418, ai, s)
add(2418, ag, a)
add(2422, aj, b)
add(2426, ba, g)
add(2426, al, b)
add(2426, bd, t)
add(2426, ag, a)
add(2431, ax, g)
add(2431, ag, a)
add(2435, bc, g)
add(2435, ah, b)
add(2435, bb, t)
add(2435, ai, s)
add(2439, bf, g)
add(2444, bc, g)
add(2444, ah, b)
add(2444, bd, t)
add(2444, ag, a)
add(2448, bh, g)
add(2448, av, g)
add(2448, ae, b)
add(2448, ai, s)
add(2452, bf, g)
add(2452, bj, g)
add(2452, ax, g)
add(2452, bd, t)
add(2457, bh, g)
add(2457, av, g)
add(2457, ae, b)
add(2457, ag, a)
add(2461, bc, g)
add(2461, bj, g)
add(2461, ax, g)
add(2461, ac, b)
add(2461, at, t)
add(2461, ag, a)
add(2465, bf, g)
add(2470, bc, g)
add(2470, ac, b)
add(2470, bd, t)
add(2470, ag, a)
add(2474, ae, b)
add(2474, ai, s)
add(2478, bf, g)
add(2478, bd, t)
add(2482, ae, b)
add(2482, ag, a)
add(2487, bc, g)
add(2487, bm, f)
add(2487, ba, g)
add(2487, ah, b)
add(2487, bb, t)
add(2487, ai, s)
add(2487, ag, a)
add(2491, bf, g)
add(2491, bo, f)
add(2491, bc, g)
add(2495, bc, g)
add(2495, ah, b)
add(2495, bb, t)
add(2495, ag, a)
add(2500, bo, f)
add(2500, bc, g)
add(2500, aa, b)
add(2500, ai, s)
add(2502, ai, s)
add(2504, bf, g)
add(2504, ai, s)
add(2506, ar, m)
add(2508, bm, f)
add(2508, ba, g)
add(2508, aa, b)
add(2508, ar, m)
add(2511, ar, m)
add(2513, bc, g)
add(2513, bj, g)
add(2513, be, g)
add(2513, ax, g)
add(2513, ah, b)
add(2513, at, t)
add(2513, ag, a)
add(2517, bf, g)
add(2517, ag, b)
add(2521, bc, g)
add(2521, ah, b)
add(2521, bd, t)
add(2521, ai, s)
add(2526, ag, a)
add(2530, bq, f)
add(2530, ae, b)
add(2530, at, t)
add(2530, bb, t)
add(2530, ag, a)
add(2539, bq, f)
add(2539, ae, b)
add(2539, bd, t)
add(2539, ag, a)
add(2543, bq, f)
add(2543, bh, g)
add(2543, av, g)
add(2543, ah, b)
add(2543, ai, s)
add(2547, bj, g)
add(2547, ax, g)
add(2547, bd, t)
add(2552, bq, f)
add(2552, bh, g)
add(2552, av, g)
add(2552, ah, b)
add(2552, ag, a)
add(2556, bq, f)
add(2556, bj, g)
add(2556, ax, g)
add(2556, ac, b)
add(2556, bd, t)
add(2556, ai, s)
add(2560, ai, s)
add(2564, bq, f)
add(2564, ac, b)
add(2564, bd, t)
add(2564, al, l)
add(2564, ag, a)
add(2569, bq, f)
add(2569, ae, b)
add(2569, ai, s)
add(2573, bd, t)
add(2577, bq, f)
add(2577, ae, b)
add(2577, ag, a)
add(2582, bq, f)
add(2582, bf, g)
add(2582, ba, g)
add(2582, at, g)
add(2582, ah, b)
add(2582, at, t)
add(2582, bb, t)
add(2582, ag, a)
add(2590, bq, f)
add(2590, ah, b)
add(2590, bd, t)
add(2590, ag, a)
add(2595, bq, f)
add(2595, bh, g)
add(2595, bc, g)
add(2595, av, g)
add(2595, aa, b)
add(2595, ai, s)
add(2595, ag, a)
add(2599, bd, t)
add(2603, bq, f)
add(2603, aa, b)
add(2603, ag, a)
add(2608, br, f)
add(2608, bc, g)
add(2608, ax, g)
add(2608, aq, g)
add(2608, al, b)
add(2608, bb, t)
add(2608, ai, s)
add(2612, aj, b)
add(2612, ag, a)
add(2614, ap, o)
add(2616, aj, b)
add(2616, ar, m)
add(2621, al, b)
add(2621, ag, a)
add(2625, bf, g)
add(2625, br, f)
add(2625, at, g)
add(2625, bq, f)
add(2625, ae, b)
add(2625, at, t)
add(2625, bb, t)
add(2625, ag, a)

packet = {}
packet.command = 'queue'
packet.song = song
rednet.broadcast(packet, 'JBPP')"
qBtb9FmU,AutoTrain 1.3.0 Tb,Vorlord747,Lua,Saturday 25th of November 2023 07:19:26 PM CDT,"
local component = require(""component"")
IR = component.entity_link.getAPI(""immersiverailroading:locomotivediesel"")
Input = ...

-- Initialize constants
RATE_OF_ACCELERATION        = 0
BRAKE_RATE                  = 0 
MAX_ACCELERATION            = 0
MIN_ACCELERATION            = 0
THROTTLE_INCREMENT          = 0
BRAKE_INCREMENT             = 0
HORN_LENGTH                 = 0
DEFAULT_SPEED               = 0
STATION_ACCURACY            = 0 
TARGET_SPEED                = 0
STOPPING_GRADIENT           = 0
STOPPING_ACCELERATION_GAIN  = 5
STOPPING_RESET_AREA_SIZE    = 12
PROP_TO_ACC_DIFF_GAIN       = 12
PROP_TO_SPEED_DIFF_GAIN     = 0.25
DEBUG_MODE                  = false
COMPUTER_LOOP_SPEED         = 0.1

-- Initialize variables
StartingSpeed               = 0
CurrentSpeed                = 0
PreviousSpeed               = StartingSpeed
Acceleration                = 0
CentrePoint                 = 0
TargetAcceleration          = 0
CurveInvert                 = 0 
CurvePeak                   = 0
BrakeOutput                 = 0
ThrottleOutput              = 0
StoppingTriggerSpeed        = 0
StoppingDistance            = 0
PropToAccDiff               = 0
MultipliedBrakeOutput       = 0
Stopping                    = false
Station                     = 1
PreviousStation             = -1
StationsArray               = {}
SpeedLimits                 = {}
EnteredStoppingResetArea    = false
Reverser                    = 1 
PastStation                 = false
PreviousStoppingDistance    = 0
BackingToStation            = false 
NumberOfStations            = 0
    


function SplitString(inputstr, sep)
    if sep == nil then
        sep = ""%s""
    end
    local t={}
    for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
        table.insert(t, str)
    end
    return t
end



function ReadLine(Filename)
    File = io.open(Filename, ""r"")
    CurrentSection = nil
    for line in io.lines(Filename) do
        Str1 = line
        if Str1:sub(1,1) == ""#"" or Str1 == """" then
            -- Skip line --
        elseif Str1 == ""CONSTANTS"" then
            CurrentSection = Str1
        elseif Str1 == ""SPEED LIMITS"" then
            CurrentSection = Str1
        elseif Str1 == ""STOPS"" then
            CurrentSection = Str1
        elseif Str1 == ""SIGNALS"" then
            CurrentSection = Str1
        elseif Str1 == ""SWITCHES"" then
            CurrentSection = Str1
        else
            if CurrentSection == ""CONSTANTS"" then
                List                = SplitString(Str1)
                RATE_OF_ACCELERATION= tonumber(List[1])
                BRAKE_RATE          = tonumber(List[2])
                MAX_ACCELERATION    = tonumber(List[3])
                MIN_ACCELERATION    = tonumber(List[4])
                THROTTLE_INCREMENT  = tonumber(List[5])
                BRAKE_INCREMENT     = tonumber(List[6])
                HORN_LENGTH         = tonumber(List[7])
                DEFAULT_SPEED       = tonumber(List[8])
                STATION_ACCURACY    = tonumber(List[9])
                STOPPING_GRADIENT   = tonumber(List[10])
            elseif CurrentSection == ""SPEED LIMITS"" then
                List                = SplitString(Str1)
                table.insert(SpeedLimits, List)
            elseif CurrentSection == ""STOPS"" then
                List                = SplitString(Str1)
                table.insert(List, false)
                table.insert(StationsArray, List)
            elseif CurrentSection == ""SIGNALS"" then
                -- Placeholder --
            elseif CurrentSection == ""SWITCHES"" then
                -- Placeholder --
            else
                print(""ERROR CODE #02"")
            end
        end

    end
    File:close()

    for _, Item in ipairs(StationsArray) do
        NumberOfStations = NumberOfStations + 1
    end

end



function Stopped() 
    PastStation = false
    BackingToStation = false
    Stopping = false
    Station = Station + 1
    if Station > NumberOfStations then Station = 1 end
    print(""Station = ""..Station)
    component.ir_remote_control.setReverser(1)
    Reverser = 1
    for _, Item in ipairs(StationsArray) do
        Item[5] = false
    end
    StationsArray[Station][5] = true
    os.sleep(tonumber(StationsArray[Station][4]))
end



function GetStoppingDistance()
    PreviousStoppingDistance = StoppingDistance
    if Station ~= PreviousStation then
        PreviousStation = Station
    end
    TargetX = tonumber(StationsArray[Station][1])
    TargetZ = tonumber(StationsArray[Station][2])
    DistanceX = TargetX - CurrentX
    if DistanceX < 0 then DistanceX = DistanceX * -1 end
    DistanceZ = TargetZ - CurrentZ
    if DistanceZ < 0 then DistanceZ = DistanceZ * -1 end
    if DistanceX > DistanceZ then
        StoppingDistance = DistanceX
    else
        StoppingDistance = DistanceZ
    end
    return StoppingDistance
end



function GetStoppingTriggerSpeed()
    StoppingTriggerSpeed = STOPPING_GRADIENT * StoppingDistance
    if StoppingTriggerSpeed < 0 then StoppingTriggerSpeed = StoppingTriggerSpeed * -1 end
    if StoppingTriggerSpeed < 0.5 then StoppingTriggerSpeed = 0.5 end   -- Trying minimum StoppingTriggerSpeed 
    if NewCloseToTargetCheck() then
        StoppingTriggerSpeed = 0
    end
end



function GetStoppingAcceleration() 
    if CurrentSpeed > StoppingTriggerSpeed then 
        if StoppingDistance ~= 0 then
            if StoppingDistance < 0 then
                TargetAcceleration = ((CurrentSpeed/(StoppingDistance*-1))*-1) * STOPPING_ACCELERATION_GAIN
            else
                TargetAcceleration = ((CurrentSpeed/StoppingDistance)*-1) * STOPPING_ACCELERATION_GAIN
            end
        else
            TargetAcceleration = 0.5
        end
    else
        if CurrentSpeed == 0 then
            TargetAcceleration = 0.5
        end
    end
end



function MatchStoppingAcceleration() 
    BrakeOutput = IR.getAirBrakeLevel()
    PropToAccDiff = (Acceleration - TargetAcceleration) * PROP_TO_ACC_DIFF_GAIN
    if PropToAccDiff < 0 then PropToAccDiff = PropToAccDiff * -1 end
    PropToSpeedDiff = (CurrentSpeed/50) * PROP_TO_SPEED_DIFF_GAIN
    if PropToSpeedDiff < 0 then PropToSpeedDiff = PropToSpeedDiff * -1 end
    if Acceleration < TargetAcceleration then
        if BrakeOutput ~= 0 then
            if CurrentSpeed == 0 then
                BrakeOutput = 0
            else
                BrakeOutput = BrakeOutput - (BRAKE_INCREMENT * PropToAccDiff)
                MultipliedBrakeOutput = BrakeOutput * PropToSpeedDiff
                if BrakeOutput < 0 then BrakeOutput = 0 end
                if MultipliedBrakeOutput < 0 then MultipliedBrakeOutput = 0 end
            end
        else
            -- GETTING STUCK HERE, TRAIN NOT MOVING 
            Debug4 = (THROTTLE_INCREMENT.."" * ""..PropToAccDiff)
            ThrottleOutput = ThrottleOutput + (THROTTLE_INCREMENT * PropToAccDiff)
            if ThrottleOutput > 1 then ThrottleOutput = 1 end
        end

    else
        if ThrottleOutput ~= 0 then
            ThrottleOutput = ThrottleOutput - (THROTTLE_INCREMENT * PropToAccDiff)
            if ThrottleOutput < 0 then ThrottleOutput = 0 end
        else
            BrakeOutput = BrakeOutput + (BRAKE_INCREMENT * PropToAccDiff)
            MultipliedBrakeOutput = BrakeOutput * PropToSpeedDiff
            if BrakeOutput > 1 then BrakeOutput = 1 end
            if MultipliedBrakeOutput > 1 then MultipliedBrakeOutput = 1 end 
        end
    end
    IR.setThrottleLevel(ThrottleOutput)
    IR.setAirBrakeLevel(MultipliedBrakeOutput)
end



function NewCloseToTargetCheck() 
    TargetX = tonumber(StationsArray[Station][1])
    TargetZ = tonumber(StationsArray[Station][2])
    if  CurrentX < (TargetX + STATION_ACCURACY) and 
        CurrentX > (TargetX - STATION_ACCURACY) and
        CurrentZ < (TargetZ + STATION_ACCURACY) and
        CurrentZ > (TargetZ - STATION_ACCURACY) then
        return true
    end
end


function NewStoppingTrain()
    if StoppingDistance < 50 or PastStation == true then
        Debug1 = ""StoppingDistance < 50""
        if StoppingDistance > PreviousStoppingDistance or PastStation == true then
            Debug2 = ""StoppingDistance > PreviousStoppingDistance""
            PastStation = true
            if CurrentSpeed ~= 0 then
                DebugNum = ""Halt train 1""
                IR.setThrottleLevel(0)
                IR.setAirBrakeLevel(1)
            else
                DebugNum = ""Change reverser""
                Reverser = Reverser * -1
                component.ir_remote_control.setReverser(Reverser)
                PastStation = false
            end
        else
            if CurrentSpeed < 0.1 and CurrentSpeed > 0.1 and NewCloseToTargetCheck() then
                DebugNum = ""Train stopped 2""
                Stopped()
            else
                if AtStationCheck() then
                    DebugNum = ""Halt train 2""
                    IR.setThrottleLevel(0)
                    IR.setAirBrakeLevel(1)
                else
                    DebugNum = ""Move train 2""
                    MatchStoppingAcceleration()
                end
            end
        end

    else
        if CurrentSpeed < 0.1 and CurrentSpeed > 0.1 and NewCloseToTargetCheck() then
            DebugNum = ""Train stopped 1""
            Stopped()
        else
            DebugNum = ""Move train 1""
            MatchStoppingAcceleration()
        end
    end
end



function OldStoppingTrain()
    if StoppingDistance <= PreviousStoppingDistance then    -- if getting closer 
        if PastStation == false then
            if CurrentSpeed == 0 then
                if NewCloseToTargetCheck() then
                    Stopped()
                else
                    GetStoppingAcceleration()
                    MatchStoppingAcceleration()
                end
            else
                GetStoppingAcceleration()
                MatchStoppingAcceleration()
            end
        else
            if CurrentSpeed == 0 then
                if NewCloseToTargetCheck() then
                    Stopped()
                else
                    GetStoppingAcceleration()
                    MatchStoppingAcceleration()
                end
            else
                IR.setAirBrakeLevel(1)
                IR.setThrottleLevel(0)
                component.ir_remote_control.setReverser(1)
                Reverser = 1
                BackingToStation = false
            end
        end
    else
        PastStation = true
        if BackingToStation == true then
            if CurrentSpeed == 0 then
                if NewCloseToTargetCheck() then
                    DebugNum = ""#5""
                    Stopped()
                else
                    DebugNum = ""#3""
                    component.ir_remote_control.setReverser(-1)
                    Reverser = -1
                    GetStoppingAcceleration()
                    MatchStoppingAcceleration()
                end
            else
                DebugNum = ""#4""
                GetStoppingAcceleration()
                MatchStoppingAcceleration()
            end
        else
            if CurrentSpeed ~= 0 then
                DebugNum = ""#1""
                IR.setAirBrakeLevel(1)
                IR.setThrottleLevel(0)
            else
                DebugNum = ""#2""
                BackingToStation = true
            end
        end
    end
end



function InStoppingAreaCheck()
    Count = 0
    for _, stop in ipairs(StationsArray) do
        Count = Count + 1
        if     stop[3] == 'N' then      -- -Z
            if (CurrentX == tonumber(stop[1])) and (CurrentZ >= tonumber(stop[2])) then
                Station = Count
            end
        elseif stop[3] == 'E' then      -- +X
            if (CurrentZ == tonumber(stop[2])) and (CurrentX <= tonumber(stop[1])) then
                Station = Count
            end
        elseif stop[3] == 'S' then      -- +Z
            if (CurrentX == tonumber(stop[1])) and (CurrentZ <= tonumber(stop[2])) then
                Station = Count
            end
        elseif stop[3] == 'W' then      -- -X
            if (CurrentZ == tonumber(stop[2])) and (CurrentX >= tonumber(stop[1])) then
                Station = Count
            end
        else 
            print(""INVALID STATION DIRECTION"")
        end
    end
    return Station
end



function AtStationCheck()
    if StationsArray[Station][3] == 'N' or StationsArray[Station][3] == 'S' then
        if CurrentZ < TargetZ + STATION_ACCURACY and CurrentZ > TargetZ - STATION_ACCURACY then
            return true
        else
            return false 
        end
    elseif StationsArray[Station][3] == 'E' or StationsArray[Station][3] == 'W' then
        if CurrentX < TargetX + STATION_ACCURACY and CurrentX > TargetX - STATION_ACCURACY then
            return true
        else
            return false
        end
    else
        print(""ERROR CODE #2"")
        return false
    end
end



function NewInStoppingResetAreaCheck()
    TargetX = tonumber(StationsArray[Station][1])
    TargetZ = tonumber(StationsArray[Station][2])
    if  CurrentX >= TargetX - STOPPING_RESET_AREA_SIZE and 
        CurrentX <= TargetX + STOPPING_RESET_AREA_SIZE and 
        CurrentZ >= TargetZ - STOPPING_RESET_AREA_SIZE and 
        CurrentZ <= TargetZ + STOPPING_RESET_AREA_SIZE then
        return true
    else
        return false
    end
end



function InStoppingResetAreaCheck()
    if     StationsArray[Station][3] == 'N' then    --  -Z
        if CurrentZ <= (tonumber(StationsArray[Station][2]) - STATION_ACCURACY) and CurrentZ >= tonumber(StationsArray[Station][2]) - 8 then
            return true
        else
            return false
        end
    elseif StationsArray[Station][3] == 'E' then    --  +X
        if CurrentX >= (tonumber(StationsArray[Station][1]) + STATION_ACCURACY) and CurrentX <= tonumber(StationsArray[Station][1]) + 8 then
            return true
        else
            return false
        end
    elseif StationsArray[Station][3] == 'S' then    --  +Z
        if CurrentZ >= (tonumber(StationsArray[Station][2]) + STATION_ACCURACY) and CurrentZ <= tonumber(StationsArray[Station][2]) + 8 then
            return true
        else
            return false
        end
    elseif StationsArray[Station][3] == 'W' then    --  -X
        if CurrentX <= (tonumber(StationsArray[Station][1]) - STATION_ACCURACY) and CurrentX >= tonumber(StationsArray[Station][1]) - 8 then
            return true
        else
            return false
        end
    else
        print(""ERROR CODE #03"")
        return false
    end
end



function StoppingResetCheck()
    if Station ~= 0 and InStoppingResetAreaCheck() and StationsArray[Station][5] == true then
        StationsArray[Station][5] = false
        EnteredStoppingResetArea = false
    end
end



function ChangeSpeedLimitCheck()
    SpeedSignMargin = CurrentSpeed/10
    for i, SpeedSign in ipairs(SpeedLimits) do
        if CurrentX < (SpeedSign[1]+SpeedSignMargin) and CurrentX > (SpeedSign[1]-SpeedSignMargin) and CurrentZ < (SpeedSign[2]+SpeedSignMargin) and CurrentZ > (SpeedSign[2]-SpeedSignMargin) then
            TARGET_SPEED = tonumber(SpeedSign[3])
        end
    end
end



function NewCheckCoords()
    if (StationsArray[Station][5] == false) then
        GetStoppingTriggerSpeed()
        if (CurrentSpeed > StoppingTriggerSpeed or Stopping == true) then
            if CurrentSpeed == 0 and AtStationCheck() then
                Stopped()
            else
                Stopping = true
                --OldStoppingTrain()
                NewStoppingTrain()
            end
        end
    else
        Stopping = false
    end
    ChangeSpeedLimitCheck()
end



function GetTargetAcceleration()
    CentrePoint = ((TARGET_SPEED-StartingSpeed)/2)+StartingSpeed
    if StartingSpeed > TARGET_SPEED then
        CurveInvert = -1
        if CurrentSpeed < CentrePoint then CurvePeak = TARGET_SPEED
        else CurvePeak = StartingSpeed end 
    else
        CurveInvert = 1
        if CurrentSpeed < CentrePoint then CurvePeak = StartingSpeed
        else CurvePeak = TARGET_SPEED end
    end
    TargetAcceleration = (RATE_OF_ACCELERATION * (CurrentSpeed - CurvePeak)^2)*CurveInvert
    if CurveInvert == 1 then
        if CurrentSpeed < CentrePoint then            
            if TargetAcceleration < MIN_ACCELERATION then TargetAcceleration = MIN_ACCELERATION end
        end
    else
        if CurrentSpeed > CentrePoint then     
            if TargetAcceleration > (MIN_ACCELERATION*-1) then TargetAcceleration = (MIN_ACCELERATION*-1) end
        end
    end
    if CurveInvert == 1 then
        if TargetAcceleration > MAX_ACCELERATION then TargetAcceleration = MAX_ACCELERATION end
    else
        if TargetAcceleration < (MAX_ACCELERATION*-1) then TargetAcceleration = (MAX_ACCELERATION*-1) end
    end
    if CurveInvert == 1 then
        if CurrentSpeed > TARGET_SPEED then
            TargetAcceleration = TargetAcceleration * -1
        end
    else
        if CurrentSpeed < TARGET_SPEED then
            TargetAcceleration = TargetAcceleration * -1
        end
    end
end



function ReachSpeed()
    BrakeOutput = IR.getAirBrakeLevel()
    GetTargetAcceleration()
    OverspeedReactivity = 4
    if Acceleration < TargetAcceleration then
        if BrakeOutput ~= 0 then
            BrakeOutput = BrakeOutput - BRAKE_INCREMENT
            if BrakeOutput < 0 then BrakeOutput = 0 end
        else
            ThrottleOutput = ThrottleOutput + THROTTLE_INCREMENT
            if ThrottleOutput > 1 then ThrottleOutput = 1 end
        end
    else
        if ThrottleOutput ~= 0 then
            if (CurrentSpeed > (TARGET_SPEED+OverspeedReactivity)) then
                ThrottleOutput = 0
            else
                ThrottleOutput = ThrottleOutput - THROTTLE_INCREMENT
                if ThrottleOutput < 0 then 
                    ThrottleOutput = 0 
                end
            end
        else
            BrakeOutput = BrakeOutput + BRAKE_INCREMENT
            if BrakeOutput > 1 then BrakeOutput = 1 end
        end
    end
    IR.setThrottleLevel(ThrottleOutput)
    IR.setAirBrakeLevel(BrakeOutput)
end



function GetAcceleration()
    Acceleration = CurrentSpeed - PreviousSpeed
    PreviousSpeed = CurrentSpeed
    return Acceleration
end



function FileExists(Input)
    local f=io.open(Input,""r"")
    if f~=nil then 
        io.close(f) 
        return true
    else 
        return false
    end
end



function Debug()
    DebugSpeed = tonumber(string.format(""%.2f"", CurrentSpeed))
    DebugAcceleration = tonumber(string.format(""%.2f"", Acceleration))
    DebugTargetAcceleration = tonumber(string.format(""%.2f"", TargetAcceleration))
    DebugDistanceToNextStop = StoppingDistance
    DebugNextStop = Station
    DebugCoords = CurrentX.."" ""..CurrentZ
    DebugThrottle = tonumber(string.format(""%.2f"", IR.getThrottleLevel()))
    DebugBrake = tonumber(string.format(""%.2f"", IR.getAirBrakeLevel()))
    DebugReverser = Reverser
    DebugPreviousStoppingDistance = PreviousStoppingDistance
    DebugStoppingTriggerSpeed = StoppingTriggerSpeed

    DebugPastStation = tostring(PastStation)
    DebugBackingToStation = tostring(BackingToStation)

    os.execute(""cls"")
    print(""StoppingTriggerSpeed:    ""..DebugStoppingTriggerSpeed)
    print(""Speed:                   ""..DebugSpeed)
    print(""Acceleration:            ""..DebugAcceleration)
    print(""Target Acceleration:     ""..DebugTargetAcceleration)
    print(""Distance to next stop:   ""..DebugDistanceToNextStop)
    print(""PreviousStoppingDistance:""..DebugPreviousStoppingDistance)
    print(""Next stop:               ""..DebugNextStop)
    print(""Coords:                  ""..DebugCoords)
    print(""Throttle:                ""..DebugThrottle)
    print(""Brake:                   ""..DebugBrake)
    print(""Reverser:                ""..DebugReverser)
    print(""PastStation:             ""..DebugPastStation)
    print(""BackingToStation:        ""..DebugBackingToStation)

    print(DebugNum)
    print(Debug1)
    print(Debug2)
    print(Debug3)
    print(Debug4)

end



function RunLine()
    DebugNum = ""NA""
    Debug1 = ""NA""
    Debug2 = ""NA""
    Debug3 = ""NA""
    Debug4 = ""NA""

    ReadLine(Filename)
    TARGET_SPEED = DEFAULT_SPEED
    while true do
        CurrentSpeed = IR.getCurrentSpeed()
        if Reverser == -1 then CurrentSpeed = CurrentSpeed * -1 end
        Acceleration = GetAcceleration()
        ThrottleOutput = IR.getThrottleLevel()
        CurrentX = IR.getLocation().getX()
        CurrentZ = IR.getLocation().getZ()
        TargetX = tonumber(StationsArray[Station][1])
        TargetZ = tonumber(StationsArray[Station][2])
        GetStoppingDistance()
        GetStoppingTriggerSpeed()
        GetStoppingAcceleration()

        if CurrentSpeed > StoppingTriggerSpeed then
            Debug3 = ""Stopping""
            Stopping = true
            NewStoppingTrain()
        else
            if AtStationCheck() then
                Debug3 = ""Stopping (AtStation)""
                NewStoppingTrain()
            elseif PastStation and CurrentSpeed == 0 then
                Debug3 = ""Stopping (0 speed)""
                NewStoppingTrain()
            else
                Debug3 = ""Reaching speed""
                Stopping = false
                ReachSpeed()
            end
        end

        -- if CurrentSpeed > StoppingTriggerSpeed then
        --     Stopping = true
        --     NewStoppingTrain()
        -- elseif AtStationCheck() then
        --     if CurrentSpeed == 0 then
        --         Stopped()
        --     else
        --         Stopping = true
        --         --OldStoppingTrain()
        --         NewStoppingTrain()
        --     end
        -- else
        --     Debug3 = ""SNOT OPPING""
        --     Stopping = false
        --     ReachSpeed()
        -- end

        if TARGET_SPEED ~= PreviousTargetSpeed then
            StartingSpeed = CurrentSpeed
        end
        PreviousTargetSpeed = TARGET_SPEED
        Debug()
        os.sleep(COMPUTER_LOOP_SPEED)
    end
end



function CreateNewLine()
    os.execute(""cls"")
    print(""Line name: "")
    Input = io.read()
    while FileExists(Input) do
        print(""Error: A file already exists with that name"")
        print(""Line name: "")
        Input = io.read()
    end
    File = io.open(Input, ""w"")
    os.execute(""cls"")
    File:write(""CONSTANTS\n"")
    print(""Leave blank for default (0.015)\nRate of acceleration: "")
    Input = io.read()
    if Input == """" then Input = 0.015 end
    File:write(Input.."" "")
    print(""Leave blank for default (0.25)\nBrake rate: "")
    Input = io.read()
    if Input == """" then Input = 0.25 end
    File:write(Input.."" "")
    print(""Leave blank for default (2)\nMaximum acceleration: "")
    Input = io.read()
    if Input == """" then Input = 2 end
    File:write(Input.."" "")
    print(""Leave blank for default (0.5)\nMinimum acceleration: "")
    Input = io.read()
    if Input == """" then Input = 0.5 end
    File:write(Input.."" "")
    print(""Leave blank for default (0.025)\nThrottle increment: "")
    Input = io.read()
    if Input == """" then Input = 0.025 end
    File:write(Input.."" "")
    print(""Leave blank for default (0.05)\nBrake increment: "")
    Input = io.read()
    if Input == """" then Input = 0.05 end
    File:write(Input.."" "")
    print(""Leave blank for default (1)\nHorn length: "")
    Input = io.read()
    if Input == """" then Input = 1 end
    File:write(Input.."" "")
    print(""Leave blank for default (50)\nDefault speed: "")
    Input = io.read()
    if Input == """" then Input = 50 end
    File:write(Input.."" "")
    print(""Leave blank for default (1)\nStation Accuracy: "")
    Input = io.read()
    if Input == """" then Input = 1 end
    File:write(Input.."" "")
    print(""Leave blank for default (0.2)\nRate of deceleration when stopping: "")
    Input = io.read()
    if Input == """" then Input = 0.2 end
    File:write(Input..""\n"")
    os.execute(""cls"")
    File:write(""SPEED LIMITS\n"")
    Input = """"
    while Input ~= ""n"" do
        print(""Add a speed limit change? [y/n]"")
        Input = io.read()
        if Input == ""y"" then
            print(""X coordinate: "")
            Input = io.read()
            File:write(Input.."" "")
            print(""Z coordinate: "")
            Input = io.read()
            File:write(Input.."" "")
            print(""Speed: "")
            Input = io.read()
            File:write(Input..""\n"")
        end
    end
    os.execute(""cls"")
    File:write(""STOPS\n"")
    Input = """"
    while Input ~= ""n"" do
        print(""Add a stop? [y/n]"")
        Input = io.read()
        if Input == ""y"" then
            print(""X coordinate: "")
            Input = io.read()
            File:write(Input.."" "")
            print(""Z coordinate: "")
            Input = io.read()
            File:write(Input.."" "")
            print(""Direction (N, S, E, or W): "")
            Input = io.read()
            File:write(Input.."" "")
            print(""Wait time: "")
            Input = io.read()
            File:write(Input..""\n"")
        end
    end
    File:close()
    Input = """"
end



function Help()
    os.execute(""cls"")
    print(""Sorry, this function has not been added yet.\nYou can contact me on discord @vorlord\n[Press enter to go back]"")
    Input = io.read()
    Input = """"
end



function EditLine()
    os.execute(""cls"")
    print(""Sorry, this function has not been added yet.\nYou will have to edit the file manually.\n[Press enter to go back]"")
    Input = io.read()
    Input = """"
end



function Menu()
    os.execute(""cls"")
    print(""Enter 'Create' to create a new line \nEnter 'Help' or '?' for more info on how to use the program \nEnter the name of an existing line to run it \nEnter 'Edit' to edit an existing line"")
    Input = io.read()
end


-- Program starts --
while true do
    if Input == nil or Input == """" then
        Menu()
    elseif Input == ""Create"" then
        CreateNewLine()
    elseif Input == ""Edit"" then     -- Why is this never detected?
        if FileExists(Input) then
            EditLine()
        else
            print(""That line does not exist\n[Press enter to go back]"")
            Input = io.read()
            Input = """"
        end
    elseif Input == ""Help"" or Input == ""?"" then
        Help()
    else
        if FileExists(Input) then
            Filename = Input
            Input = """"
            print(""Running line ""..Filename)
            RunLine()
        else
            print(""That line does not exist\n[Press enter to go back]"")
            Input = io.read()
            Input = """"
        end
    end
end
"
3rC3PiWx,Polygon circumference/radius ratio.,alansam,C++,Saturday 25th of November 2023 06:49:45 PM CDT,"#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cmath>
#if defined(__cpp_lib_math_constants)
# include <numbers>
#endif

//  π(n) = n . sin(180 / n)

#define FUNCTIONAL_

#if defined(__cpp_lib_math_constants)
constexpr
double pi = std::numbers::pi_v<double>;
#elif defined(M_PI)
constexpr
double pi = M_PI;
#else
constexpr
double pi = 2.0 * std::acos(0.0);
#endif

auto to_radian = [](double angle) { return angle * (pi / 180.0); };
auto poly_pi_l = [](long sides) {
  return (1.0 * sides) * std::sin(to_radian(180.0) / (1.0 * sides));
};
auto poly_pi = [](long sides) { return (1.0 * sides) * std::sin(pi / (1.0 * sides)); };

int main() {
  std::cout << ""C++ Version: "" << __cplusplus << '\n';
#if defined(__cpp_lib_math_constants)
  std::cout << ""C++ Math Constants Version: "" << __cpp_lib_math_constants << '\n';
#endif

  std::cout << std::fixed << std::setprecision(12);
  std::cout << ""π: "" << pi << '\n';

  auto polygons = { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 50, 100, 200, 500,
                         1'000,      5'000,
                        10'000,     20'000,
                       100'000,    200'000,
                       200'000,    400'000,
                     1'000'000,  2'000'000,  3'000'000,
                     4'000'000,  4'100'000,  4'200'000,
                    10'000'000, 20'000'000, 25'000'000, };

#ifndef FUNCTIONAL_
  std::cout << std::string(60, '=') << std::endl;

  for (auto side : polygons) {
    std::cout << std::setw(12) << side << "" : ""
              << std::setw(15) << poly_pi(side)
              << "" - ""
              << std::setw(15) << poly_pi_l(side)
              << '\n';
  }
#else
  std::cout << std::string(60, '.') << std::endl;

  std::for_each(polygons.begin(), polygons.end(), [](auto const side) {
    std::cout << std::setw(12) << side << "" : ""
              << std::setw(15) << poly_pi(side)
              << "" - ""
              << std::setw(15) << poly_pi_l(side)
              << '\n';
  });
#endif

  return 0;
}
"
KZAhc1R1,2023-11-25_stats.json,rdp_snitch,JSON,Saturday 25th of November 2023 06:18:34 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 9,
    ""194.165.17.21"": 57,
    ""45.227.254.55"": 6,
    ""89.248.170.88"": 3,
    ""40.76.100.17"": 3,
    ""198.235.24.84"": 9,
    ""45.227.254.49"": 6,
    ""62.204.41.132"": 18,
    ""185.170.144.3"": 6,
    ""94.142.51.154"": 27,
    ""67.217.59.233"": 3,
    ""147.78.47.51"": 15,
    ""51.75.160.42"": 24,
    ""205.210.31.104"": 9,
    ""179.60.147.148"": 6,
    ""85.209.11.111"": 33,
    ""36.91.222.100"": 6,
    ""212.70.149.146"": 9,
    ""45.227.254.54"": 6,
    ""172.233.198.57"": 12,
    ""139.177.185.107"": 18,
    ""179.60.147.5"": 3,
    ""13.48.10.28"": 3,
    ""139.59.253.68"": 12,
    ""152.32.158.69"": 3,
    ""198.235.24.164"": 9,
    ""58.218.204.183"": 9,
    ""45.227.254.48"": 6,
    ""194.165.16.73"": 6,
    ""205.210.31.71"": 9,
    ""167.94.146.60"": 3,
    ""62.204.61.207"": 3
  },
  ""asn"": {
    ""AS208091"": 9,
    ""AS48721"": 63,
    ""AS267784"": 24,
    ""AS202425"": 3,
    ""AS8075"": 3,
    ""AS396982"": 36,
    ""AS59425"": 18,
    ""AS197414"": 6,
    ""AS48832"": 27,
    ""AS19318"": 3,
    ""AS209588"": 24,
    ""AS16276"": 24,
    ""AS57523"": 33,
    ""AS7713"": 6,
    ""AS204428"": 9,
    ""AS63949"": 30,
    ""AS16509"": 3,
    ""AS14061"": 12,
    ""AS135377"": 3,
    ""AS4134"": 9,
    ""AS398705"": 3,
    ""AS34412"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 15,
    ""Flyservers S.A."": 111,
    ""IP Volume inc"": 3,
    ""Microsoft Corporation"": 3,
    ""Google LLC"": 36,
    ""Horizon LLC"": 18,
    ""Zain Jordan"": 27,
    ""Interserver, Inc"": 3,
    ""OVH SAS"": 24,
    ""Chang Way Technologies Co. Limited"": 33,
    ""PT Telekomunikasi Indonesia"": 6,
    ""SS-Net"": 9,
    ""Akamai Technologies, Inc."": 30,
    ""Amazon Technologies Inc."": 3,
    ""DigitalOcean, LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet"": 9,
    ""Censys, Inc."": 3,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 9,
    ""Flyservers S.A"": 78,
    ""UAB Host Baltic"": 24,
    ""Quasi Networks LTD."": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 18,
    ""Xhostis"": 6,
    ""Unknown"": 27,
    ""Host Department NJ, LLC"": 3,
    ""OVH Ltd"": 24,
    ""Cloud Solutions S.A"": 9,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Telekomunikasi Indonesia"": 6,
    ""4Media Ltd"": 9,
    ""Akamai Technologies, Inc."": 12,
    ""Linode"": 18,
    ""AWS EC2 (eu-north-1)"": 3,
    ""Digital Ocean"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet JS"": 9,
    ""Censys, Inc."": 3,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 3
  },
  ""regionName"": {
    ""North Holland"": 33,
    ""Kaunas"": 63,
    ""Vilnius"": 24,
    ""Virginia"": 15,
    ""California"": 36,
    ""Moscow"": 51,
    ""Zarqa"": 27,
    ""New Jersey"": 3,
    ""England"": 24,
    ""Distrito Federal"": 9,
    ""Jakarta"": 6,
    ""Plovdiv"": 9,
    ""North West"": 18,
    ""Stockholm"": 3,
    ""South West"": 12,
    ""Maharashtra"": 3,
    ""Jiangsu"": 9,
    ""Hesse"": 3,
    ""Tehran"": 3
  },
  ""country"": {
    ""Netherlands"": 15,
    ""Lithuania"": 87,
    ""The Netherlands"": 18,
    ""United States"": 54,
    ""Russia"": 51,
    ""Jordan"": 27,
    ""United Kingdom"": 24,
    ""Venezuela"": 9,
    ""Indonesia"": 6,
    ""Bulgaria"": 9,
    ""Singapore"": 30,
    ""Sweden"": 3,
    ""India"": 3,
    ""China"": 9,
    ""Germany"": 3,
    ""Iran"": 3
  },
  ""account"": {
    ""Administr"": 81,
    ""hello"": 144,
    ""Test"": 69,
    ""lkxBDWCtL"": 3,
    ""LzpWhb"": 3,
    ""BsvAKf"": 3,
    ""oOdDfkTiH"": 3,
    ""vRdQzl"": 3,
    ""iSKdDZ"": 3,
    ""Domain"": 12,
    ""Administrator"": 3,
    ""oLozGLice"": 3,
    ""KqKdSF"": 3,
    ""TDbdvy"": 3,
    ""VsRHxJfRE"": 3,
    ""rXeWBo"": 3,
    ""eCiBRB"": 3,
    ""(empty)"": 6
  },
  ""keyboard"": {
    ""Unknown"": 351
  },
  ""client_build"": {
    ""Unknown"": 351
  },
  ""client_name"": {
    ""Unknown"": 351
  },
  ""ip_type"": {
    ""Unknown"": 219,
    ""hosting"": 96,
    ""proxy"": 18,
    ""hosting & proxy"": 18
  }
}"
WXDHUsJ9,2023-11-25_stats.json,rdp_snitch,JSON,Saturday 25th of November 2023 06:16:17 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 6,
    ""194.165.17.21"": 38,
    ""45.227.254.55"": 4,
    ""89.248.170.88"": 2,
    ""40.76.100.17"": 2,
    ""198.235.24.84"": 6,
    ""45.227.254.49"": 4,
    ""62.204.41.132"": 12,
    ""185.170.144.3"": 4,
    ""94.142.51.154"": 18,
    ""67.217.59.233"": 2,
    ""147.78.47.51"": 10,
    ""51.75.160.42"": 16,
    ""205.210.31.104"": 6,
    ""179.60.147.148"": 4,
    ""85.209.11.111"": 22,
    ""36.91.222.100"": 4,
    ""212.70.149.146"": 6,
    ""45.227.254.54"": 4,
    ""172.233.198.57"": 8,
    ""139.177.185.107"": 12,
    ""179.60.147.5"": 2,
    ""13.48.10.28"": 2,
    ""139.59.253.68"": 8,
    ""152.32.158.69"": 2,
    ""198.235.24.164"": 6,
    ""58.218.204.183"": 6,
    ""45.227.254.48"": 4,
    ""194.165.16.73"": 4,
    ""205.210.31.71"": 6,
    ""167.94.146.60"": 2,
    ""62.204.61.207"": 2
  },
  ""asn"": {
    ""AS208091"": 6,
    ""AS48721"": 42,
    ""AS267784"": 16,
    ""AS202425"": 2,
    ""AS8075"": 2,
    ""AS396982"": 24,
    ""AS59425"": 12,
    ""AS197414"": 4,
    ""AS48832"": 18,
    ""AS19318"": 2,
    ""AS209588"": 16,
    ""AS16276"": 16,
    ""AS57523"": 22,
    ""AS7713"": 4,
    ""AS204428"": 6,
    ""AS63949"": 20,
    ""AS16509"": 2,
    ""AS14061"": 8,
    ""AS135377"": 2,
    ""AS4134"": 6,
    ""AS398705"": 2,
    ""AS34412"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 10,
    ""Flyservers S.A."": 74,
    ""IP Volume inc"": 2,
    ""Microsoft Corporation"": 2,
    ""Google LLC"": 24,
    ""Horizon LLC"": 12,
    ""Zain Jordan"": 18,
    ""Interserver, Inc"": 2,
    ""OVH SAS"": 16,
    ""Chang Way Technologies Co. Limited"": 22,
    ""PT Telekomunikasi Indonesia"": 4,
    ""SS-Net"": 6,
    ""Akamai Technologies, Inc."": 20,
    ""Amazon Technologies Inc."": 2,
    ""DigitalOcean, LLC"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet"": 6,
    ""Censys, Inc."": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2
  },
  ""org"": {
    ""Xhost Internet Solutions"": 6,
    ""Flyservers S.A"": 52,
    ""UAB Host Baltic"": 16,
    ""Quasi Networks LTD."": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 12,
    ""Xhostis"": 4,
    ""Unknown"": 18,
    ""Host Department NJ, LLC"": 2,
    ""OVH Ltd"": 16,
    ""Cloud Solutions S.A"": 6,
    ""Chang Way Technologies Co. Limited"": 22,
    ""Telekomunikasi Indonesia"": 4,
    ""4Media Ltd"": 6,
    ""Akamai Technologies, Inc."": 8,
    ""Linode"": 12,
    ""AWS EC2 (eu-north-1)"": 2,
    ""Digital Ocean"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet JS"": 6,
    ""Censys, Inc."": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2
  },
  ""regionName"": {
    ""North Holland"": 22,
    ""Kaunas"": 42,
    ""Vilnius"": 16,
    ""Virginia"": 10,
    ""California"": 24,
    ""Moscow"": 34,
    ""Zarqa"": 18,
    ""New Jersey"": 2,
    ""England"": 16,
    ""Distrito Federal"": 6,
    ""Jakarta"": 4,
    ""Plovdiv"": 6,
    ""North West"": 12,
    ""Stockholm"": 2,
    ""South West"": 8,
    ""Maharashtra"": 2,
    ""Jiangsu"": 6,
    ""Hesse"": 2,
    ""Tehran"": 2
  },
  ""country"": {
    ""Netherlands"": 10,
    ""Lithuania"": 58,
    ""The Netherlands"": 12,
    ""United States"": 36,
    ""Russia"": 34,
    ""Jordan"": 18,
    ""United Kingdom"": 16,
    ""Venezuela"": 6,
    ""Indonesia"": 4,
    ""Bulgaria"": 6,
    ""Singapore"": 20,
    ""Sweden"": 2,
    ""India"": 2,
    ""China"": 6,
    ""Germany"": 2,
    ""Iran"": 2
  },
  ""account"": {
    ""Administr"": 54,
    ""hello"": 96,
    ""Test"": 46,
    ""lkxBDWCtL"": 2,
    ""LzpWhb"": 2,
    ""BsvAKf"": 2,
    ""oOdDfkTiH"": 2,
    ""vRdQzl"": 2,
    ""iSKdDZ"": 2,
    ""Domain"": 8,
    ""Administrator"": 2,
    ""oLozGLice"": 2,
    ""KqKdSF"": 2,
    ""TDbdvy"": 2,
    ""VsRHxJfRE"": 2,
    ""rXeWBo"": 2,
    ""eCiBRB"": 2,
    ""(empty)"": 4
  },
  ""keyboard"": {
    ""Unknown"": 234
  },
  ""client_build"": {
    ""Unknown"": 234
  },
  ""client_name"": {
    ""Unknown"": 234
  },
  ""ip_type"": {
    ""Unknown"": 146,
    ""hosting"": 64,
    ""proxy"": 12,
    ""hosting & proxy"": 12
  }
}"
37gXnjaY,2023-11-25_stats.json,rdp_snitch,JSON,Saturday 25th of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 3,
    ""194.165.17.21"": 19,
    ""45.227.254.55"": 2,
    ""89.248.170.88"": 1,
    ""40.76.100.17"": 1,
    ""198.235.24.84"": 3,
    ""45.227.254.49"": 2,
    ""62.204.41.132"": 6,
    ""185.170.144.3"": 2,
    ""94.142.51.154"": 9,
    ""67.217.59.233"": 1,
    ""147.78.47.51"": 5,
    ""51.75.160.42"": 8,
    ""205.210.31.104"": 3,
    ""179.60.147.148"": 2,
    ""85.209.11.111"": 11,
    ""36.91.222.100"": 2,
    ""212.70.149.146"": 3,
    ""45.227.254.54"": 2,
    ""172.233.198.57"": 4,
    ""139.177.185.107"": 6,
    ""179.60.147.5"": 1,
    ""13.48.10.28"": 1,
    ""139.59.253.68"": 4,
    ""152.32.158.69"": 1,
    ""198.235.24.164"": 3,
    ""58.218.204.183"": 3,
    ""45.227.254.48"": 2,
    ""194.165.16.73"": 2,
    ""205.210.31.71"": 3,
    ""167.94.146.60"": 1,
    ""62.204.61.207"": 1
  },
  ""asn"": {
    ""AS208091"": 3,
    ""AS48721"": 21,
    ""AS267784"": 8,
    ""AS202425"": 1,
    ""AS8075"": 1,
    ""AS396982"": 12,
    ""AS59425"": 6,
    ""AS197414"": 2,
    ""AS48832"": 9,
    ""AS19318"": 1,
    ""AS209588"": 8,
    ""AS16276"": 8,
    ""AS57523"": 11,
    ""AS7713"": 2,
    ""AS204428"": 3,
    ""AS63949"": 10,
    ""AS16509"": 1,
    ""AS14061"": 4,
    ""AS135377"": 1,
    ""AS4134"": 3,
    ""AS398705"": 1,
    ""AS34412"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 5,
    ""Flyservers S.A."": 37,
    ""IP Volume inc"": 1,
    ""Microsoft Corporation"": 1,
    ""Google LLC"": 12,
    ""Horizon LLC"": 6,
    ""Zain Jordan"": 9,
    ""Interserver, Inc"": 1,
    ""OVH SAS"": 8,
    ""Chang Way Technologies Co. Limited"": 11,
    ""PT Telekomunikasi Indonesia"": 2,
    ""SS-Net"": 3,
    ""Akamai Technologies, Inc."": 10,
    ""Amazon Technologies Inc."": 1,
    ""DigitalOcean, LLC"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet"": 3,
    ""Censys, Inc."": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1
  },
  ""org"": {
    ""Xhost Internet Solutions"": 3,
    ""Flyservers S.A"": 26,
    ""UAB Host Baltic"": 8,
    ""Quasi Networks LTD."": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 6,
    ""Xhostis"": 2,
    ""Unknown"": 9,
    ""Host Department NJ, LLC"": 1,
    ""OVH Ltd"": 8,
    ""Cloud Solutions S.A"": 3,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Telekomunikasi Indonesia"": 2,
    ""4Media Ltd"": 3,
    ""Akamai Technologies, Inc."": 4,
    ""Linode"": 6,
    ""AWS EC2 (eu-north-1)"": 1,
    ""Digital Ocean"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet JS"": 3,
    ""Censys, Inc."": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1
  },
  ""regionName"": {
    ""North Holland"": 11,
    ""Kaunas"": 21,
    ""Vilnius"": 8,
    ""Virginia"": 5,
    ""California"": 12,
    ""Moscow"": 17,
    ""Zarqa"": 9,
    ""New Jersey"": 1,
    ""England"": 8,
    ""Distrito Federal"": 3,
    ""Jakarta"": 2,
    ""Plovdiv"": 3,
    ""North West"": 6,
    ""Stockholm"": 1,
    ""South West"": 4,
    ""Maharashtra"": 1,
    ""Jiangsu"": 3,
    ""Hesse"": 1,
    ""Tehran"": 1
  },
  ""country"": {
    ""Netherlands"": 5,
    ""Lithuania"": 29,
    ""The Netherlands"": 6,
    ""United States"": 18,
    ""Russia"": 17,
    ""Jordan"": 9,
    ""United Kingdom"": 8,
    ""Venezuela"": 3,
    ""Indonesia"": 2,
    ""Bulgaria"": 3,
    ""Singapore"": 10,
    ""Sweden"": 1,
    ""India"": 1,
    ""China"": 3,
    ""Germany"": 1,
    ""Iran"": 1
  },
  ""account"": {
    ""Administr"": 27,
    ""hello"": 48,
    ""Test"": 23,
    ""lkxBDWCtL"": 1,
    ""LzpWhb"": 1,
    ""BsvAKf"": 1,
    ""oOdDfkTiH"": 1,
    ""vRdQzl"": 1,
    ""iSKdDZ"": 1,
    ""Domain"": 4,
    ""Administrator"": 1,
    ""oLozGLice"": 1,
    ""KqKdSF"": 1,
    ""TDbdvy"": 1,
    ""VsRHxJfRE"": 1,
    ""rXeWBo"": 1,
    ""eCiBRB"": 1,
    ""(empty)"": 2
  },
  ""keyboard"": {
    ""Unknown"": 117
  },
  ""client_build"": {
    ""Unknown"": 117
  },
  ""client_name"": {
    ""Unknown"": 117
  },
  ""ip_type"": {
    ""Unknown"": 73,
    ""hosting"": 32,
    ""proxy"": 6,
    ""hosting & proxy"": 6
  }
}"
3t0fBp22,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:14:35 PM CDT,"file = open(""10A.txt"")
A = list(map(int, file.readlines()))
Max = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 2 == 1:
            Max = max(Max, A[i] + A[j])
print(Max)"
j5ThDeWA,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:11:09 PM CDT,"file = open(""9A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if A[i] + A[j] == 2000:
            count += 1
print(count)"
W3V7zq27,Github,kylekincer,Lua,Saturday 25th of November 2023 06:09:35 PM CDT,"-- Define the function to download a file
function download(url, path)
    local response = http.get(url)
    if response then
        local content = response.readAll()
        response.close()
        local file = fs.open(path, ""w"")
        file.write(content)
        file.close()
    else
        print(""Failed to download "" .. url)
    end
end

-- Define the function to clone a repository
function clone(repo, dest)
    -- If no destination is provided, use the repository name
    if not dest then
        dest = fs.getName(repo)
    end

    local repo_api_url = ""https://api.github.com/repos/"" .. repo .. ""/git/trees/main?recursive=1""
    print(""Cloning "" .. repo .. "" to "" .. dest)
    print(""Getting file list from "" .. repo_api_url)
    local response = http.get(repo_api_url)
    print(response)
    if response then
        local data = textutils.unserializeJSON(response.readAll())
        response.close()
        for _, file in ipairs(data.tree) do
            if file.type == ""blob"" then
                local file_url = ""https://raw.githubusercontent.com/"" .. repo .. ""/main/"" .. file.path
                local dest_path = fs.combine(dest, file.path)
                download(file_url, dest_path)
            end
        end
    else
        print(""Failed to clone "" .. repo)
    end
end

-- Check if a repository was provided
if arg[1] then
    -- Use the clone function with the provided repository and optional destination
    clone(arg[1], arg[2])
else
    print(""Please provide a repository to clone."")
end"
yfr6x2DP,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:08:51 PM CDT,"file = open(""8A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 80 == 0 and (A[i] > 50000 or A[j] > 50000):
            count += 1
print(count)"
Jd9jHRSK,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:05:31 PM CDT,"file = open(""7A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if abs(A[i] - A[j]) % 69 == 0:
            count += 1
print(count)"
bEq1ctjd,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:02:59 PM CDT,"file = open(""6A.txt"")
A = list(map(int, file.readlines()))
count = 0 
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 131 == 0:
            count += 1
print(count)"
HNYLD8tw,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 06:00:11 PM CDT,"file = open(""5A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            if A[i] % 19 == 0 and A[j] % 19 == 0 and A[k] % 19 == 0:
                count += 1
print(count)"
EYrFb8Hk,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:54:52 PM CDT,"file = open(""4A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 5 == 0 and (A[i] + A[j]) % 2 == 1:
            count += 1
print(count)"
8Rzgz0Z4,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:51:44 PM CDT,"file = open(""3A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 65 == 0:
            count += 1
print(count)"
JGtb2s8w,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:48:57 PM CDT,"file = open(""2A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 7 == 0:
            count += 1
print(count)"
e6sD6XNE,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:48:43 PM CDT,"ile = open(""2A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 7 == 0:
            count += 1
print(count)"
hZLgf96w,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:45:22 PM CDT,"file = open(""1A.txt"")
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 2 == 0:
            count += 1
print(count)"
A1CinsH6,Auto Mouse Clicker,182days,Python,Saturday 25th of November 2023 05:38:04 PM CDT,"import pyautogui
import time
import random
import keyboard

time.sleep(2)
pyautogui.hotkey('win', 'd')

while True:
    MouseX = random.randint(0, 1300)
    MouseY = random.randint(0, 700)
    MouseSleep = random.randint(1, 5)
    pyautogui.moveTo(MouseX, MouseY, duration=1)
    pyautogui.click()
    time.sleep(MouseSleep)"
ijYFe9L0,Print Mouse Position,182days,Python,Saturday 25th of November 2023 05:24:43 PM CDT,"import pyautogui
import time

while True:
    # Get the current mouse coordinates
    x, y = pyautogui.position()

    # Print the coordinates
    print(f""Mouse coordinates: x = {x}, y = {y}"")
    time.sleep(2)"
jzKSBhEi,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:24:04 PM CDT,"def f(a, m):
    if a >= 30:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(a+1, m-1), f(a*2, m-1)]
    return any(h) if (m-1) % 2 == 0 else all(h)
print([s for s in range(1, 30) if f(s, 4)])"
YttNU7Hn,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:21:28 PM CDT,"def f(a, m):
    if a >= 30:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(a+1, m-1), f(a*2, m-1)]
    return any(h) if (m-1) % 2 == 0 else any(h)
print([s for s in range(1, 30) if not f(s, 2)])"
0wh8x6fk,Untitled,Farz0l1x,Python,Saturday 25th of November 2023 05:17:25 PM CDT,"def f(a, m):
    if a >= 30:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(a+1, m-1), f(a*2, m-1)]
    return any(h) if (m-1) % 2 == 0 else any(h)
print([s for s in range(1, 30) if f(s, 3)])"
XATii1qK,Create EXE from .py script,182days,Python,Saturday 25th of November 2023 04:35:04 PM CDT,"Create EXE from .py script

pip install pyinstaller

[from script directory]
pyinstaller --onefile your_script.py

EXE is found in dist directory"
BzER9aT4,Untitled,LordAben,Lua,Saturday 25th of November 2023 04:25:07 PM CDT,"local CRYSTAL_SLOT = 11
local ESSENCE_SLOTS = { 7, 10, 12, 15}

local CRYSTAL = ""mysticalagriculture:master_infusion_crystal""

local INFIRUM = ""mysticalagriculture:inferium_essence""
local INFIRUM_AMOUNT = 256;

function organize_inventory()
    print(""Organizing"")
    for slot_a=1, 16 do
        turtle.select(slot_a)
        local details_a = turtle.getItemDetail(slot_a)
        if details_a ~= nil then
            for slot_b=1, slot_a-1 do
                local details_b = turtle.getItemDetail(slot_b, true)
                if details_b == nil then
                    turtle.transferTo(slot_b)
                    break
                elseif details_a.name== details_b.name and details_b.count < details_b.maxCount then
                    turtle.transferTo(slot_b, details_b.maxCount - details_b.count)
                    if details_a.count - (details_b.maxCount - details_b.count) <= 0 then
                        break
                    end
                end
            end
        end
    end
end

function find_crystal_and_move()
    print(""Crystal Check"")
    for slot_num=1, 16 do
        local prospective_crystal = turtle.getItemDetail(slot_num)
        if prospective_crystal ~= nil and prospective_crystal.name == CRYSTAL then
            turtle.select(slot_num)
            turtle.transferTo(CRYSTAL_SLOT)
            return true
        end
    end
    return false
end

function find_move_infirium()
    print(""Infirum Move"")
    local counted_infirium = 0
    for slot_num=1, 16 do
        local details = turtle.getItemDetail(slot_num)
        if details ~= nil and details[""name""] == INFIRUM  then
            counted_infirium = counted_infirium + details[""count""]
        end
    end

    if counted_infirium < INFIRUM_AMOUNT then
        return false
    end
    local infirum_moved = 0

    for slot_num=1, 16 do
        local details = turtle.getItemDetail(slot_num)
        if details ~= nil and details[""name""] == INFIRUM then
            turtle.select(slot_num)
            local essence_slot_num = math.floor(infirum_moved/64) + 1
            turtle.transferTo(ESSENCE_SLOTS[essence_slot_num])
            infirum_moved = infirum_moved + details[""count""]
            if infirum_moved>=INFIRUM_AMOUNT then
                break
            end
        end
    end
    return true
end

function check_for_crafting_preconditions()
    local has_crystal = find_crystal_and_move()
    if not has_crystal then
        return has_crystal
    end
    local has_essence = find_move_infirium()
    
    if has_essence then
        turtle.select(ESSENCE_SLOTS[1])
        turtle.craft()
        return true
    end
    return false
end

function upgrade_essence()
    turtle.select(ESSENCE_SLOTS[1])
    local details = turtle.getItemDetail(slot_num)
    local num_items = details[""count""]

    for slot_num=2, #ESSENCE_SLOTS do
        turtle.transferTo(ESSENCE_SLOTS[slot_num], num_items/4)
    end
    turtle.craft()
end

while true do
    local event, key = os.pullEvent(""turtle_inventory"")
    organize_inventory()
    local preconditions = check_for_crafting_preconditions()
    if preconditions then
        upgrade_essence() -- Dark Green
        upgrade_essence() -- Orange
        upgrade_essence() -- Blue
        upgrade_essence() -- Red
        print(""Crafted Supremium"")
        turtle.select(ESSENCE_SLOTS[1])
        turtle.dropDown()
        turtle.select(CRYSTAL_SLOT)
        turtle.dropDown()
    end
end"
wZtjz3w4,Print all files in subdirectories sorted by modification date,Tritonio,Bash,Saturday 25th of November 2023 03:44:55 PM CDT,find . -type f -print0 | xargs -0 ls -lrt --time-style=full-iso
EdLx9JnP,Untitled,p_vasilevss,JavaScript,Saturday 25th of November 2023 03:39:30 PM CDT,"const buildOptions = (data) => {
    const options = {};

    if (data) {
        options.headers = {
            'content-type': 'application/json'
        };
        options.body = JSON.stringify(data);
    };

    const token = localStorage.getItem('accessToken');

    if (token) {
        options.headers = {
            ...options.headers,
            'X-Authorization':  {token},
        };
    }
    return options;
} 
 
const request = async (method, url, data) => {
    const response = await fetch(url, { //тук гърми на url
        ...buildOptions(data),
        method,
    });

    if (response.status === 204) {
        return {};
    }

    const result = await response.json();

    if (!response.ok) {
        throw result;
    } 

    return result;
};

export const get = request.bind(null, 'GET');
export const post = request.bind(null, 'POST');
export const put = request.bind(null, 'PUT');
export const patch = request.bind(null, 'PATCH');
export const del = request.bind(null, 'DELETE');"
