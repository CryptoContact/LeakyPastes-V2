id,title,username,language,date,content
gJfFcRgY,2023-12-23_stats.json,rdp_snitch,JSON,Saturday 23rd of December 2023 06:16:11 PM CDT,"{
  ""ip"": {
    ""194.165.16.10"": 4,
    ""13.68.209.94"": 2,
    ""110.86.3.66"": 4,
    ""198.235.24.41"": 6,
    ""87.251.75.145"": 6,
    ""43.156.60.84"": 2,
    ""62.204.41.208"": 12,
    ""87.251.75.64"": 2,
    ""185.170.144.3"": 4,
    ""45.227.254.49"": 4,
    ""80.66.76.92"": 4,
    ""198.235.24.111"": 6,
    ""87.251.75.89"": 2,
    ""220.248.76.186"": 2,
    ""202.189.8.34"": 4,
    ""43.134.88.153"": 2,
    ""96.126.110.130"": 8,
    ""185.170.144.113"": 6,
    ""167.71.159.152"": 2,
    ""181.30.39.44"": 2,
    ""118.193.65.209"": 2,
    ""198.235.24.6"": 6,
    ""103.188.243.118"": 4,
    ""194.165.16.73"": 4,
    ""103.68.109.207"": 2,
    ""198.235.24.99"": 6
  },
  ""asn"": {
    ""AS48721"": 8,
    ""AS8075"": 2,
    ""AS4134"": 4,
    ""AS396982"": 24,
    ""AS208091"": 14,
    ""AS132203"": 4,
    ""AS59425"": 12,
    ""AS197414"": 10,
    ""AS267784"": 4,
    ""AS17621"": 2,
    ""AS139180"": 4,
    ""AS63949"": 8,
    ""AS14061"": 2,
    ""AS7303"": 2,
    ""AS135377"": 2,
    ""AS135967"": 4,
    ""AS136557"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""Microsoft Corporation"": 2,
    ""Chinanet"": 4,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 24,
    ""Shenzhen Tencent Computer Systems Company Limited"": 4,
    ""Horizon LLC"": 12,
    ""China Unicom CncNet"": 2,
    ""Shandong eshinton Network Technology Co., Ltd."": 4,
    ""Akamai Technologies, Inc."": 8,
    ""DigitalOcean, LLC"": 2,
    ""Telecom Argentina S.A"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""BSSVIET"": 4,
    ""Zappie Host LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 8,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Chinanet FJ"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 14,
    ""Tencent Cloud Computing"": 4,
    ""Horizon LLC"": 12,
    ""Xhostis"": 10,
    ""UAB Host Baltic"": 4,
    ""Unknown"": 4,
    ""Shandong eshinton Network Technology Co., Ltd."": 4,
    ""Linode"": 8,
    ""DigitalOcean, LLC"": 2,
    ""Fibertel"": 2,
    ""Ucloud Information Technology"": 2,
    ""BSS Management Consultant Company Limited"": 4
  },
  ""regionName"": {
    ""Kaunas"": 8,
    ""Virginia"": 2,
    ""Fujian"": 4,
    ""California"": 26,
    ""North Holland"": 20,
    ""North West"": 6,
    ""Moscow"": 12,
    ""Vilnius"": 4,
    ""England"": 6,
    ""Shanghai"": 2,
    ""Rio Grande do Sul"": 4,
    ""New Jersey"": 8,
    ""Buenos Aires F.D."": 2,
    ""Da Nang"": 4
  },
  ""country"": {
    ""Lithuania"": 12,
    ""United States"": 36,
    ""China"": 6,
    ""The Netherlands"": 20,
    ""Singapore"": 6,
    ""Russia"": 12,
    ""United Kingdom"": 6,
    ""Brazil"": 4,
    ""Argentina"": 2,
    ""Vietnam"": 4
  },
  ""account"": {
    ""Test"": 24,
    ""hello"": 14,
    ""(empty)"": 4,
    ""CcfNtFVoP"": 2,
    ""EkbiSF"": 2,
    ""jPartY"": 2,
    ""Administr"": 16,
    ""pXNnrAWBX"": 2,
    ""kxtcSQ"": 2,
    ""MdNYbF"": 2,
    ""Domain"": 14,
    ""5vrzly1g"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""STTEVfQdE"": 2,
    ""TxRUyW"": 2,
    ""xgWkSh"": 2,
    ""UOUuMVoig"": 2,
    ""pNmbbZ"": 2,
    ""sBSGCz"": 2
  },
  ""keyboard"": {
    ""Unknown"": 108
  },
  ""client_build"": {
    ""Unknown"": 108
  },
  ""client_name"": {
    ""Unknown"": 108
  },
  ""ip_type"": {
    ""Unknown"": 60,
    ""hosting"": 36,
    ""mobile"": 4,
    ""hosting & proxy"": 8
  }
}"
tWkfM4rG,2023-12-23_stats.json,rdp_snitch,JSON,Saturday 23rd of December 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.10"": 2,
    ""13.68.209.94"": 1,
    ""110.86.3.66"": 2,
    ""198.235.24.41"": 3,
    ""87.251.75.145"": 3,
    ""43.156.60.84"": 1,
    ""62.204.41.208"": 6,
    ""87.251.75.64"": 1,
    ""185.170.144.3"": 2,
    ""45.227.254.49"": 2,
    ""80.66.76.92"": 2,
    ""198.235.24.111"": 3,
    ""87.251.75.89"": 1,
    ""220.248.76.186"": 1,
    ""202.189.8.34"": 2,
    ""43.134.88.153"": 1,
    ""96.126.110.130"": 4,
    ""185.170.144.113"": 3,
    ""167.71.159.152"": 1,
    ""181.30.39.44"": 1,
    ""118.193.65.209"": 1,
    ""198.235.24.6"": 3,
    ""103.188.243.118"": 2,
    ""194.165.16.73"": 2,
    ""103.68.109.207"": 1,
    ""198.235.24.99"": 3
  },
  ""asn"": {
    ""AS48721"": 4,
    ""AS8075"": 1,
    ""AS4134"": 2,
    ""AS396982"": 12,
    ""AS208091"": 7,
    ""AS132203"": 2,
    ""AS59425"": 6,
    ""AS197414"": 5,
    ""AS267784"": 2,
    ""AS17621"": 1,
    ""AS139180"": 2,
    ""AS63949"": 4,
    ""AS14061"": 1,
    ""AS7303"": 1,
    ""AS135377"": 1,
    ""AS135967"": 2,
    ""AS136557"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 6,
    ""Microsoft Corporation"": 1,
    ""Chinanet"": 2,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 12,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Horizon LLC"": 6,
    ""China Unicom CncNet"": 1,
    ""Shandong eshinton Network Technology Co., Ltd."": 2,
    ""Akamai Technologies, Inc."": 4,
    ""DigitalOcean, LLC"": 1,
    ""Telecom Argentina S.A"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""BSSVIET"": 2,
    ""Zappie Host LLC"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 4,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Chinanet FJ"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 7,
    ""Tencent Cloud Computing"": 2,
    ""Horizon LLC"": 6,
    ""Xhostis"": 5,
    ""UAB Host Baltic"": 2,
    ""Unknown"": 2,
    ""Shandong eshinton Network Technology Co., Ltd."": 2,
    ""Linode"": 4,
    ""DigitalOcean, LLC"": 1,
    ""Fibertel"": 1,
    ""Ucloud Information Technology"": 1,
    ""BSS Management Consultant Company Limited"": 2
  },
  ""regionName"": {
    ""Kaunas"": 4,
    ""Virginia"": 1,
    ""Fujian"": 2,
    ""California"": 13,
    ""North Holland"": 10,
    ""North West"": 3,
    ""Moscow"": 6,
    ""Vilnius"": 2,
    ""England"": 3,
    ""Shanghai"": 1,
    ""Rio Grande do Sul"": 2,
    ""New Jersey"": 4,
    ""Buenos Aires F.D."": 1,
    ""Da Nang"": 2
  },
  ""country"": {
    ""Lithuania"": 6,
    ""United States"": 18,
    ""China"": 3,
    ""The Netherlands"": 10,
    ""Singapore"": 3,
    ""Russia"": 6,
    ""United Kingdom"": 3,
    ""Brazil"": 2,
    ""Argentina"": 1,
    ""Vietnam"": 2
  },
  ""account"": {
    ""Test"": 12,
    ""hello"": 7,
    ""(empty)"": 2,
    ""CcfNtFVoP"": 1,
    ""EkbiSF"": 1,
    ""jPartY"": 1,
    ""Administr"": 8,
    ""pXNnrAWBX"": 1,
    ""kxtcSQ"": 1,
    ""MdNYbF"": 1,
    ""Domain"": 7,
    ""5vrzly1g"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""STTEVfQdE"": 1,
    ""TxRUyW"": 1,
    ""xgWkSh"": 1,
    ""UOUuMVoig"": 1,
    ""pNmbbZ"": 1,
    ""sBSGCz"": 1
  },
  ""keyboard"": {
    ""Unknown"": 54
  },
  ""client_build"": {
    ""Unknown"": 54
  },
  ""client_name"": {
    ""Unknown"": 54
  },
  ""ip_type"": {
    ""Unknown"": 30,
    ""hosting"": 18,
    ""mobile"": 2,
    ""hosting & proxy"": 4
  }
}"
hjQCit6k,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Saturday 23rd of December 2023 06:13:00 PM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1AKxSk9vs38aBF7GEDJxf8mNi-_NVRLQ9/view#g2a_refund_exploit.pdf

Working as of 
22 December 2023

515374"
q9bMsAq0,Advent of code 2023 day 23,hhoppe,Python,Saturday 23rd of December 2023 05:46:13 PM CDT,"def day23_graph(s, part2):
  grid = np.array([list(line) for line in s.splitlines()])
  start_yx, target_yx = (0, 1), (grid.shape[0] - 1, grid.shape[1] - 2)

  def neighbors(yx):
    y, x = yx
    results = []
    for dy, dx, ch in ((0, 1, '<'), (0, -1, '>'), (1, 0, '^'), (-1, 0, 'v')):
      if part2 or grid[yx] != ch:
        y2, x2 = y + dy, x + dx
        if 0 <= y2 < len(grid) and grid[y2, x2] != '#':
          results.append((y2, x2))
    return results

  nodes = {yx for yx, ch in np.ndenumerate(grid) if ch != '#' and len(neighbors(yx)) > 2}
  nodes |= {start_yx, target_yx}

  def get_paths(yx):
    paths = {}
    for yx2 in neighbors(yx):
      path = [yx]
      while yx2 not in nodes:
        path.append(yx2)
        candidates = [yx3 for yx3 in neighbors(yx2) if yx3 != path[-2]]
        (yx2,) = candidates if candidates else (yx,)  # We use yx to signal no legal path.
      if yx2 != yx:
        paths[yx2] = path[1:] + [yx2]
    return paths

  graph_yx = {yx: get_paths(yx) for yx in nodes}
  ordered = sorted(graph_yx)
  graph = [
      [(ordered.index(yx2), len(path)) for yx2, path in graph_yx[yx].items()]
      for i, yx in enumerate(ordered)
  ]
  start, target = ordered.index(start_yx), ordered.index(target_yx)
  return graph, start, target


@numba.njit
def day23_length_of_longest_path(graph_array, start, target):
  stack = [(start, 0, {start})]
  max_length = 0

  while stack:
    node, length, visited = stack.pop()
    if node == target:
      max_length = max(max_length, length)
      continue
    for node2, dist in graph_array[node]:
      if node2 >= 0 and node2 not in visited:
        stack.append((node2, length + dist, visited | {node2}))

  return max_length


def day23(s, *, part2=False):
  graph, start, target = day23_graph(s, part2)
  graph_array = np.full((len(graph), 4, 2), -1)  # np.int16 is no faster.
  for index, index2_paths in enumerate(graph):
    if index2_paths:
      graph_array[index, : len(index2_paths)] = index2_paths
  return day23_length_of_longest_path(graph_array, start, target)"
L1trkYhR,ef_l.gleisbild.txt,OttoTe,Lua,Saturday 23rd of December 2023 05:41:27 PM CDT,"











                                                                 -<|---9---->>--<<
                                                                / P9
                                                             16---<|---8---->>--<<
                                                              /   P8
                                                           15-----<|---7---->>--<<
                                                            /     P7
                                              ----| |--| 12-------<|---6---->>--<<
                                             /    | |  7  / 13    P6
    Abzw Heimbach Hst                     |---->--| |---<---------<|---5---->>--<<
                                        1   3    5| | /  11/      P5[=============
<<--|>---------<|-----------<|----|>-->---<---->--| |-------------<|---4---->>--<<
   100    \    9            13    AA     \  4   / | |89   14      P4
<<--|>-----\---<|-----------|>----|>--------------| |-------------<|---3->-->>--<<
    10   \  \  90           12    A      2 /   6  10cd\           P3[=============
          \  --<|-->>         <<--|>-------       |-->-\----------<|---2---->>--<<
           \   11  n.SFS          C                     \10ab     P2
            ---<|-->>                                    ---------<|---1---->>--<<
               110                                                P1[============="
UFtPQVp9,Testing Telpoert,Malachoni,Lua,Saturday 23rd of December 2023 05:37:01 PM CDT,"local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local HRP = Character:WaitForChild(""HumanoidRootPart"")

for i,v in pairs(workspace.Herbs2:GetDescendants()) do
HRP.CFrame = v.CFrame
fireproximityprompt(v:FindFirstChildOfClass(""ProximityPrompt""))
task.wait(.5)
end
end"
FNNwAY1W,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 23rd of December 2023 04:59:19 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-788335"
EXZhC55W,Untitled,den4ik2003,C++,Saturday 23rd of December 2023 04:42:42 PM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <string.h>
 
namespace constants {
const int alphabet_size = 53;
}
 
int char_converse(char symbol) {
  if (symbol == '#') return 0;
  if (symbol >= 'A' and symbol <= 'Z') {
    return symbol - 'A' + 1;
  }
  return symbol - 'a' + 1;
}
 
int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
 
  std::string s;
  long long k_inp;
  std::cin >> s >> k_inp;
  s += '#';
  int n = s.size();
  std::vector<long long> p(n);
  std::vector<long long> symbols_counter(std::max(n, constants::alphabet_size), 0);
  std::vector<long long> eq_classes(n);
  std::vector<long long> lcp(n);
  std::vector<long long> pos(n);
 
  // zero-step
  for (char symbol : s) {
    ++symbols_counter[char_converse(symbol)];
  }
  for (int i = 1; i < constants::alphabet_size; ++i) {
    symbols_counter[i] += symbols_counter[i - 1];
  }
  for (int i = n - 1; i >= 0; --i) {
    p[--symbols_counter[char_converse(s[i])]] = i;
  }
 
  eq_classes[p[0]] = 0;
  for (int i = 1; i < n; ++i) {
    eq_classes[p[i]] = eq_classes[p[i - 1]];
    if (s[p[i]] != s[p[i - 1]]) {
      ++eq_classes[p[i]];
    }
  }
 
  // k-step
  for (int k = 0; (1 << k) < n; ++k) { // TODO: k здесь от одного или нет?
    std::vector<int> p_new(n);
    for (int i = 0; i < n; ++i) {
      p_new[i] = p[i] - (1 << k);
      if (p_new[i] < 0) {
        p_new[i] += n;
      }
    }
    symbols_counter.assign(symbols_counter.size(), 0);
//     memset(&symbols_counter, 0, sizeof(symbols_counter));
    for (int i = 0; i < n; ++i) {
      ++symbols_counter[eq_classes[i]];
    }
    for (int i = 1; i < n; ++i) {
      symbols_counter[i] += symbols_counter[i - 1];
    }
    for (int i = n - 1; i >= 0; --i) {
      p[--symbols_counter[eq_classes[p_new[i]]]] = p_new[i];
    }
    std::vector<long long> new_eq(n);
    new_eq[p[0]] = 0;
    for (int i = 1; i < n; ++i) {
      new_eq[p[i]] = new_eq[p[i - 1]];
      if (eq_classes[p[i]] != eq_classes[p[i - 1]]) {
        ++new_eq[p[i]];
      } else if (eq_classes[(p[i] + (1 << k)) % n] != eq_classes[(p[i - 1] + (1 << k)) % n]) {
        ++new_eq[p[i]];
      }
    }
    eq_classes = new_eq;
  }
 
  for (int i = 0; i < n; ++i) {
    pos[p[i]] = i;
  }
 
  int l = 0;
  for (int i = 0; i < n; i++) {
    l = std::max(l - 1, 0);
    if (pos[i] == n - 1) {
      continue;
    }
    int j = p[pos[i] + 1];
    while (s[i + l] == s[j + l]) {
      ++l;
    }
    lcp[pos[i]] = l;
  }
 
  long long cmpval = n - p[0] - 1;
  for (int i = 1; i < n; ++i) {
    cmpval += (n - p[i] - 1 - lcp[i - 1]);
  }
 
  if (k_inp < cmpval) {
    long long cumsumma = 0, i = -1;
    while (cumsumma < k_inp) {
      ++i;
      cumsumma += n - p[i] - lcp[i - 1] - 1;
      if (i == 0) {
        cumsumma += lcp[i - 1];
      }
    }
    int ll;
    for (int j = p[i]; j < (n - 1) - cumsumma + k_inp; ++j) {
      std::cout << s[j];
    }
//    std::cout << ""\n"";
  } else {
    for (int j = p[n - 1]; j <= n - 2; ++j) {
      std::cout << s[j];
    }
//    std::cout << ""\n"";
  }
}"
y78VWbDq,Untitled,den4ik2003,C++,Saturday 23rd of December 2023 04:42:00 PM CDT,"#include <iostream>
#include <vector>
#include <string>
 
namespace constants {
  const int alphabet_size = 27;
}
 
int char_converse(char symbol) {
  if (symbol == '#') return 0;
  return symbol - 'a' + 1;
}
 
int main() {
  std::string string;
  std::cin >> string;
  string += '#';
  int n = string.size();
  std::vector<int> p(n);
  std::vector<int> symbols_counter(std::max(n, constants::alphabet_size), 0);
  std::vector<int> eq_classes(n);
 
  // zero-step
  for (char symbol : string) {
    ++symbols_counter[char_converse(symbol)];
  }
  for (int i = 1; i < constants::alphabet_size; ++i) {
    symbols_counter[i] += symbols_counter[i - 1];
  }
  for (int i = n - 1; i >= 0; --i) {
    p[--symbols_counter[char_converse(string[i])]] = i;
  }
 
   eq_classes[p[0]] = 0;
   for (int i = 1; i < n; ++i) {
     eq_classes[p[i]] = eq_classes[p[i - 1]];
     if (string[p[i]] != string[p[i - 1]]) {
       ++eq_classes[p[i]];
     }
   }
 
   // k-step
   for (int k = 0; (1 << k) < n; ++k) {
     std::vector<int> p_new(n);
     for (int i = 0; i < n; ++i) {
       p_new[i] = p[i] - (1 << k);
       if (p_new[i] < 0) {
         p_new[i] += n;
       }
     }
     symbols_counter.assign(symbols_counter.size(), 0);
     for (int i = 0; i < n; ++i) {
       ++symbols_counter[eq_classes[i]];
     }
     for (int i = 1; i < n; ++i) {
       symbols_counter[i] += symbols_counter[i - 1];
     }
     for (int i = n - 1; i >= 0; --i) {
       p[--symbols_counter[eq_classes[p_new[i]]]] = p_new[i];
     }
     std::vector<int> new_eq(n);
     new_eq[p[0]] = 0;
     for (int i = 1; i < n; ++i) {
       new_eq[p[i]] = new_eq[p[i - 1]];
       if (eq_classes[p[i]] != eq_classes[p[i - 1]]) {
         ++new_eq[p[i]];
       } else if (eq_classes[(p[i] + (1 << k)) % n] != eq_classes[(p[i - 1] + (1 << k)) % n]) {
         ++new_eq[p[i]];
       }
     }
     eq_classes = new_eq;
   }
 
   for (int i = 1; i < n; ++i) {
     std::cout << p[i] + 1 << "" "";
   }
}"
0tCkGWFW,testttt,AhmadXploit,Dart,Saturday 23rd of December 2023 03:52:58 PM CDT,"{
  ""contacts"": [
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1689585330/Contact%20Cover/user1_sxhzij.jpg"",
      ""name"": ""Ahmat Ramadana"",
      ""onlineStatus"": ""online"",
	  ""lastChat"": ""✓✓ Bye"",
      ""detailPage"": {
        ""pageTitle"": ""Chat1"",
        ""messages"": [
          {
            ""sender"": ""receiver1"",
            ""text"": ""Hi, Ismael. How are you?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Hi, Jack. I'm OK but I've got loads of homework.""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""Me too, but would you like to come with us to the cinema tonight?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Who's 'us'?""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""Me, Jamie, Nicola and Selina.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""OK, and what's the film?""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""We don't know. We can't decide. There's that new horror film, 'Light and Dark'.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""No, no, no! I don't like horror films.""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""OK, well, there's a comedy about a school.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Oh, no more school, please! What about a romcom?""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""Romcom?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""You know, romantic comedy, boy meets girl ...""
          },
		  {
            ""sender"": ""receiver1"",
            ""text"": ""What? Really? No, I hate romantic films. I like action.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Well, there's a new science fiction film, 'Alien attacks'.""
          },
		  {
            ""sender"": ""receiver1"",
            ""text"": ""OK, I like science fiction. Let's see that.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""OK, I'll ask the others if they like""
          },
		  {
            ""sender"": ""receiver1"",
            ""text"": ""What time is the film?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""At 8 o'clock. Let’s meet at 7:30 outside the cinema.""
          },
		  {
            ""sender"": ""receiver1"",
            ""text"": ""OK. See you later.""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Bye""
          }
        ]
      }
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1689585329/Contact%20Cover/user2_op1xab.jpg"",
      ""name"": ""Receptionist"",
      ""onlineStatus"": ""online"",
	  ""lastChat"": ""Thanks, Dan. That’s a busy day!"",
      ""detailPage"": {
        ""pageTitle"": ""Chat2"",
        ""messages"": [
          {
            ""sender"": ""receiver1"",
            ""text"": ""Hello, Dan""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Hi""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""Can you tell me about a typical day in your life for the school magazine?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Yeah, sure""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""So, what time do you get up?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Oh, I get up very early. I get up every day at 5 o’clock and go to the pool. Then I swim from 6 o’clock to 8 o’clock.""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""You get up at 5 o’clock? Wow, that’s early!""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Yeah. Then at 8 o’clock I have a shower, I get dressed and I have breakfast. I have a big breakfast: cereals, toast, bacon and eggs and orange juice.""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""What do you do after breakfast?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""At 11 o’clock I go to university. I’m studying sports science and I have classes from 11 o’clock to 4 o’clock.""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""When do you have lunch?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""I have lunch at about 2 o’clock at the university""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""What do you do after classes?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""Sometimes I go to the gym and sometimes I meet my friends at a café""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""What time do you have dinner?""
          },
          {
            ""sender"": ""sender1"",
            ""text"": ""I have dinner at 7 o’clock, then I watch TV or go online and I usually go to bed at 10 o’clock""
          },
          {
            ""sender"": ""receiver1"",
            ""text"": ""Thanks, Dan. That’s a busy day!""
          }
        ]
      }
    }
  ]
}"
dgFQbBZe,Nigerian scammers [23-12-1/2023],bombaires,AIMMS,Saturday 23rd of December 2023 03:29:18 PM CDT,"<a href=""mailto:franknewman890@gmail.com"">franknewman890@gmail.com</a>
<a href=""mailto:f.r.a.n.k.ne.w.ma.n.890@gmail.com"">f.r.a.n.k.ne.w.ma.n.890@gmail.com</a>
<a href=""mailto:fr.a.n.kn.e.w.m.a.n8.90@gmail.com"">fr.a.n.kn.e.w.m.a.n8.90@gmail.com</a>
<a href=""mailto:f.r.an.kn.ewm.a.n89.0@gmail.com"">f.r.an.kn.ewm.a.n89.0@gmail.com</a>
<a href=""mailto:fra.n.k.n.e.w.m.an.89.0@gmail.com"">fra.n.k.n.e.w.m.an.89.0@gmail.com</a>
<a href=""mailto:fra.nk.n.ew.m.a.n8.90@gmail.com"">fra.nk.n.ew.m.a.n8.90@gmail.com</a>
<a href=""mailto:f.r.an.k.n.ew.m.a.n8.90@gmail.com"">f.r.an.k.n.ew.m.a.n8.90@gmail.com</a>
<a href=""mailto:fr.a.nk.n.ew.m.an89.0@gmail.com"">fr.a.nk.n.ew.m.an89.0@gmail.com</a>
<a href=""mailto:f.ran.k.n.e.wm.an8.90@gmail.com"">f.ran.k.n.e.wm.an8.90@gmail.com</a>
<a href=""mailto:frankn.ewm.a.n89.0@gmail.com"">frankn.ewm.a.n89.0@gmail.com</a>
<a href=""mailto:f.ran.kn.e.w.ma.n.89.0@gmail.com"">f.ran.kn.e.w.ma.n.89.0@gmail.com</a>
<a href=""mailto:f.ra.nkn.e.w.m.a.n8.9.0@gmail.com"">f.ra.nkn.e.w.m.a.n8.9.0@gmail.com</a>
<a href=""mailto:fr.a.n.kn.e.wma.n.890@gmail.com"">fr.a.n.kn.e.wma.n.890@gmail.com</a>
<a href=""mailto:fr.a.n.kne.wm.an890@gmail.com"">fr.a.n.kne.wm.an890@gmail.com</a>
<a href=""mailto:f.ran.knew.man8.90@gmail.com"">f.ran.knew.man8.90@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.e.wman.89.0@gmail.com"">fr.a.n.k.n.e.wman.89.0@gmail.com</a>
<a href=""mailto:fr.ankn.ew.m.an89.0@gmail.com"">fr.ankn.ew.m.an89.0@gmail.com</a>
<a href=""mailto:f.r.an.kne.w.ma.n89.0@gmail.com"">f.r.an.kne.w.ma.n89.0@gmail.com</a>
<a href=""mailto:fr.an.k.n.e.w.ma.n.89.0@gmail.com"">fr.an.k.n.e.w.ma.n.89.0@gmail.com</a>
<a href=""mailto:fr.ankn.e.wman.890@gmail.com"">fr.ankn.e.wman.890@gmail.com</a>
<a href=""mailto:fra.nk.n.e.w.ma.n.8.9.0@gmail.com"">fra.nk.n.e.w.ma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.kn.e.wma.n.8.90@gmail.com"">f.r.an.kn.e.wma.n.8.90@gmail.com</a>
<a href=""mailto:fr.an.knew.m.an.890@gmail.com"">fr.an.knew.m.an.890@gmail.com</a>
<a href=""mailto:fra.nk.n.ew.ma.n890@gmail.com"">fra.nk.n.ew.ma.n890@gmail.com</a>
<a href=""mailto:fra.n.k.newm.a.n890@gmail.com"">fra.n.k.newm.a.n890@gmail.com</a>
<a href=""mailto:f.ran.k.newm.an8.9.0@gmail.com"">f.ran.k.newm.an8.9.0@gmail.com</a>
<a href=""mailto:fra.nk.ne.wman890@gmail.com"">fra.nk.ne.wman890@gmail.com</a>
<a href=""mailto:f.r.ankn.e.w.m.an890@gmail.com"">f.r.ankn.e.w.m.an890@gmail.com</a>
<a href=""mailto:f.ra.n.kne.w.m.an890@gmail.com"">f.ra.n.kne.w.m.an890@gmail.com</a>
<a href=""mailto:f.r.a.n.knewm.a.n89.0@gmail.com"">f.r.a.n.knewm.a.n89.0@gmail.com</a>
<a href=""mailto:f.r.a.nkn.e.wm.an.89.0@gmail.com"">f.r.a.nkn.e.wm.an.89.0@gmail.com</a>
<a href=""mailto:fr.a.n.k.ne.wm.a.n.89.0@gmail.com"">fr.a.n.k.ne.wm.a.n.89.0@gmail.com</a>
<a href=""mailto:fr.ankn.e.wman.89.0@gmail.com"">fr.ankn.e.wman.89.0@gmail.com</a>
<a href=""mailto:fra.nkn.e.w.man.8.9.0@gmail.com"">fra.nkn.e.w.man.8.9.0@gmail.com</a>
<a href=""mailto:fr.ankn.ew.ma.n.8.9.0@gmail.com"">fr.ankn.ew.ma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.ra.n.kn.ewm.a.n8.90@gmail.com"">f.ra.n.kn.ewm.a.n8.90@gmail.com</a>
<a href=""mailto:f.r.ank.ne.wm.a.n.8.90@gmail.com"">f.r.ank.ne.wm.a.n.8.90@gmail.com</a>
<a href=""mailto:fr.ank.n.e.wm.an8.9.0@gmail.com"">fr.ank.n.e.wm.an8.9.0@gmail.com</a>
<a href=""mailto:f.ra.n.k.n.ew.ma.n.890@gmail.com"">f.ra.n.k.n.ew.ma.n.890@gmail.com</a>
<a href=""mailto:fr.a.n.kn.e.w.ma.n890@gmail.com"">fr.a.n.kn.e.w.ma.n890@gmail.com</a>
<a href=""mailto:fran.kn.ewm.an89.0@gmail.com"">fran.kn.ewm.an89.0@gmail.com</a>
<a href=""mailto:fr.an.kn.e.wman89.0@gmail.com"">fr.an.kn.e.wman89.0@gmail.com</a>
<a href=""mailto:f.ra.n.k.newm.an.8.90@gmail.com"">f.ra.n.k.newm.an.8.90@gmail.com</a>
<a href=""mailto:f.ra.n.kn.ewma.n8.9.0@gmail.com"">f.ra.n.kn.ewma.n8.9.0@gmail.com</a>
<a href=""mailto:fr.a.nkn.ewma.n8.9.0@gmail.com"">fr.a.nkn.ewma.n8.9.0@gmail.com</a>
<a href=""mailto:fr.ank.n.e.wman.890@gmail.com"">fr.ank.n.e.wman.890@gmail.com</a>
<a href=""mailto:f.r.a.n.kne.wm.an.890@gmail.com"">f.r.a.n.kne.wm.an.890@gmail.com</a>
<a href=""mailto:f.rank.new.m.a.n.890@gmail.com"">f.rank.new.m.a.n.890@gmail.com</a>
<a href=""mailto:f.rank.n.e.wm.an.89.0@gmail.com"">f.rank.n.e.wm.an.89.0@gmail.com</a>
<a href=""mailto:f.ra.n.kn.ew.m.a.n89.0@gmail.com"">f.ra.n.kn.ew.m.a.n89.0@gmail.com</a>
<a href=""mailto:fra.nk.new.m.an.8.90@gmail.com"">fra.nk.new.m.an.8.90@gmail.com</a>
<a href=""mailto:fr.ank.ne.wman89.0@gmail.com"">fr.ank.ne.wman89.0@gmail.com</a>
<a href=""mailto:fr.ankne.wm.an890@gmail.com"">fr.ankne.wm.an890@gmail.com</a>
<a href=""mailto:fran.knewma.n.8.9.0@gmail.com"">fran.knewma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.k.n.ewm.an.89.0@gmail.com"">f.r.an.k.n.ewm.an.89.0@gmail.com</a>
<a href=""mailto:fran.k.n.ewm.an8.9.0@gmail.com"">fran.k.n.ewm.an8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.k.ne.w.m.an.8.9.0@gmail.com"">f.r.an.k.ne.w.m.an.8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.n.kn.ew.ma.n.8.9.0@gmail.com"">f.r.a.n.kn.ew.ma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.rank.new.m.a.n.8.90@gmail.com"">f.rank.new.m.a.n.8.90@gmail.com</a>
<a href=""mailto:f.r.ank.new.man89.0@gmail.com"">f.r.ank.new.man89.0@gmail.com</a>
<a href=""mailto:f.ra.nkn.ewma.n.890@gmail.com"">f.ra.nkn.ewma.n.890@gmail.com</a>
<a href=""mailto:fra.n.k.new.ma.n.89.0@gmail.com"">fra.n.k.new.ma.n.89.0@gmail.com</a>
<a href=""mailto:f.ran.knewm.a.n89.0@gmail.com"">f.ran.knewm.a.n89.0@gmail.com</a>
<a href=""mailto:f.ra.nk.n.ewm.an8.90@gmail.com"">f.ra.nk.n.ewm.an8.90@gmail.com</a>
<a href=""mailto:fra.nk.ne.wm.an.8.90@gmail.com"">fra.nk.ne.wm.an.8.90@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.ew.m.a.n8.9.0@gmail.com"">fr.a.n.k.n.ew.m.a.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.k.ne.wman8.9.0@gmail.com"">f.r.an.k.ne.wman8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.nk.newm.an890@gmail.com"">f.r.a.nk.newm.an890@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.ew.m.an890@gmail.com"">fr.a.n.k.n.ew.m.an890@gmail.com</a>
<a href=""mailto:fra.n.kne.w.m.an8.9.0@gmail.com"">fra.n.kne.w.m.an8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.nk.newma.n.89.0@gmail.com"">f.r.a.nk.newma.n.89.0@gmail.com</a>
<a href=""mailto:f.r.an.k.n.ew.m.an.8.9.0@gmail.com"">f.r.an.k.n.ew.m.an.8.9.0@gmail.com</a>
<a href=""mailto:fran.knew.m.a.n.8.90@gmail.com"">fran.knew.m.a.n.8.90@gmail.com</a>
<a href=""mailto:f.ran.knewm.a.n.890@gmail.com"">f.ran.knewm.a.n.890@gmail.com</a>
<a href=""mailto:fran.k.newm.a.n.89.0@gmail.com"">fran.k.newm.a.n.89.0@gmail.com</a>
<a href=""mailto:frank.n.ewman89.0@gmail.com"">frank.n.ewman89.0@gmail.com</a>
<a href=""mailto:f.r.an.kn.e.wman.890@gmail.com"">f.r.an.kn.e.wman.890@gmail.com</a>
<a href=""mailto:f.r.a.nkne.w.m.a.n8.9.0@gmail.com"">f.r.a.nkne.w.m.a.n8.9.0@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.ewm.an.8.90@gmail.com"">fr.a.n.k.n.ewm.an.8.90@gmail.com</a>
<a href=""mailto:fr.a.nk.n.ewman8.9.0@gmail.com"">fr.a.nk.n.ewman8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.n.k.newma.n.890@gmail.com"">f.r.a.n.k.newma.n.890@gmail.com</a>
<a href=""mailto:fr.ankn.e.wm.a.n8.9.0@gmail.com"">fr.ankn.e.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:fran.kne.wman.89.0@gmail.com"">fran.kne.wman.89.0@gmail.com</a>
<a href=""mailto:fr.an.k.newman.89.0@gmail.com"">fr.an.k.newman.89.0@gmail.com</a>
<a href=""mailto:f.r.a.n.knewm.an.8.90@gmail.com"">f.r.a.n.knewm.an.8.90@gmail.com</a>
<a href=""mailto:f.ra.n.knewm.an.8.90@gmail.com"">f.ra.n.knewm.an.8.90@gmail.com</a>
<a href=""mailto:fra.n.k.ne.w.m.an.89.0@gmail.com"">fra.n.k.ne.w.m.an.89.0@gmail.com</a>
<a href=""mailto:fra.n.knewm.an.8.9.0@gmail.com"">fra.n.knewm.an.8.9.0@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.e.w.man.8.9.0@gmail.com"">fr.a.n.k.n.e.w.man.8.9.0@gmail.com</a>
<a href=""mailto:fr.a.nk.n.e.w.m.a.n.89.0@gmail.com"">fr.a.nk.n.e.w.m.a.n.89.0@gmail.com</a>
<a href=""mailto:fr.an.k.n.e.wm.a.n.8.9.0@gmail.com"">fr.an.k.n.e.wm.a.n.8.9.0@gmail.com</a>
<a href=""mailto:fr.a.n.knew.ma.n8.90@gmail.com"">fr.a.n.knew.ma.n8.90@gmail.com</a>
<a href=""mailto:f.rank.n.ew.m.a.n.8.90@gmail.com"">f.rank.n.ew.m.a.n.8.90@gmail.com</a>
<a href=""mailto:fr.a.nkn.e.w.m.a.n890@gmail.com"">fr.a.nkn.e.w.m.a.n890@gmail.com</a>
<a href=""mailto:f.ra.n.k.n.ew.ma.n890@gmail.com"">f.ra.n.k.n.ew.ma.n890@gmail.com</a>
<a href=""mailto:f.r.ank.new.m.an8.9.0@gmail.com"">f.r.ank.new.m.an8.9.0@gmail.com</a>
<a href=""mailto:f.ran.k.n.e.wma.n890@gmail.com"">f.ran.k.n.e.wma.n890@gmail.com</a>
<a href=""mailto:f.r.a.nknew.m.an890@gmail.com"">f.r.a.nknew.m.an890@gmail.com</a>
<a href=""mailto:fr.a.n.kne.wm.a.n8.9.0@gmail.com"">fr.a.n.kne.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.ankn.ew.man.8.90@gmail.com"">f.r.ankn.ew.man.8.90@gmail.com</a>
<a href=""mailto:f.ra.nkne.w.m.an.890@gmail.com"">f.ra.nkne.w.m.an.890@gmail.com</a>
<a href=""mailto:f.rank.ne.w.man89.0@gmail.com"">f.rank.ne.w.man89.0@gmail.com</a>
<a href=""mailto:f.r.a.nk.new.ma.n8.90@gmail.com"">f.r.a.nk.new.ma.n8.90@gmail.com</a>
<a href=""mailto:fr.a.nkn.ewm.an.8.9.0@gmail.com"">fr.a.nkn.ewm.an.8.9.0@gmail.com</a>
<a href=""mailto:fr.a.nkn.e.w.ma.n8.90@gmail.com"">fr.a.nkn.e.w.ma.n8.90@gmail.com</a>
<a href=""mailto:fran.kn.ew.ma.n890@gmail.com"">fran.kn.ew.ma.n890@gmail.com</a>
<a href=""mailto:f.r.ankne.w.m.a.n890@gmail.com"">f.r.ankne.w.m.a.n890@gmail.com</a>
<a href=""mailto:frank.ne.w.m.an8.90@gmail.com"">frank.ne.w.m.an8.90@gmail.com</a>
<a href=""mailto:f.ran.k.newma.n8.90@gmail.com"">f.ran.k.newma.n8.90@gmail.com</a>
<a href=""mailto:fr.ank.n.e.wm.an.890@gmail.com"">fr.ank.n.e.wm.an.890@gmail.com</a>
<a href=""mailto:f.ra.n.kn.e.w.ma.n8.9.0@gmail.com"">f.ra.n.kn.e.w.ma.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.kn.ew.ma.n890@gmail.com"">f.r.an.kn.ew.ma.n890@gmail.com</a>
<a href=""mailto:f.r.a.n.kn.ew.man8.90@gmail.com"">f.r.a.n.kn.ew.man8.90@gmail.com</a>
<a href=""mailto:fran.kn.ewman.8.9.0@gmail.com"">fran.kn.ewman.8.9.0@gmail.com</a>
<a href=""mailto:fra.n.kn.ew.ma.n8.9.0@gmail.com"">fra.n.kn.ew.ma.n8.9.0@gmail.com</a>
<a href=""mailto:frankn.e.w.m.a.n.8.90@gmail.com"">frankn.e.w.m.a.n.8.90@gmail.com</a>
<a href=""mailto:f.ra.n.kn.e.w.man890@gmail.com"">f.ra.n.kn.e.w.man890@gmail.com</a>
<a href=""mailto:fr.a.n.knewm.an.89.0@gmail.com"">fr.a.n.knewm.an.89.0@gmail.com</a>
<a href=""mailto:f.ra.nkn.e.wm.a.n8.9.0@gmail.com"">f.ra.nkn.e.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.knew.ma.n8.90@gmail.com"">f.r.an.knew.ma.n8.90@gmail.com</a>
<a href=""mailto:f.ra.nknew.man.890@gmail.com"">f.ra.nknew.man.890@gmail.com</a>
<a href=""mailto:fra.n.k.ne.w.ma.n8.9.0@gmail.com"">fra.n.k.ne.w.ma.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.kn.e.wman890@gmail.com"">f.r.an.kn.e.wman890@gmail.com</a>
<a href=""mailto:fr.an.k.ne.w.man8.9.0@gmail.com"">fr.an.k.ne.w.man8.9.0@gmail.com</a>
<a href=""mailto:f.r.ank.n.e.w.m.an.8.90@gmail.com"">f.r.ank.n.e.w.m.an.8.90@gmail.com</a>
<a href=""mailto:fr.ank.n.e.wm.a.n890@gmail.com"">fr.ank.n.e.wm.a.n890@gmail.com</a>
<a href=""mailto:fran.kn.e.w.man.8.90@gmail.com"">fran.kn.e.w.man.8.90@gmail.com</a>
<a href=""mailto:f.r.an.knew.m.a.n.8.9.0@gmail.com"">f.r.an.knew.m.a.n.8.9.0@gmail.com</a>
<a href=""mailto:f.r.ank.newm.a.n.8.9.0@gmail.com"">f.r.ank.newm.a.n.8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.nk.new.m.a.n8.9.0@gmail.com"">f.r.a.nk.new.m.a.n8.9.0@gmail.com</a>
<a href=""mailto:frankn.e.w.m.a.n8.90@gmail.com"">frankn.e.w.m.a.n8.90@gmail.com</a>
<a href=""mailto:f.ra.nk.n.e.w.ma.n8.90@gmail.com"">f.ra.nk.n.e.w.ma.n8.90@gmail.com</a>
<a href=""mailto:f.rankn.ewm.a.n.8.90@gmail.com"">f.rankn.ewm.a.n.8.90@gmail.com</a>
<a href=""mailto:f.ran.kne.wm.a.n.890@gmail.com"">f.ran.kne.wm.a.n.890@gmail.com</a>
<a href=""mailto:fran.knewma.n89.0@gmail.com"">fran.knewma.n89.0@gmail.com</a>
<a href=""mailto:f.ra.nknew.ma.n.8.9.0@gmail.com"">f.ra.nknew.ma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.r.ankne.w.man.89.0@gmail.com"">f.r.ankne.w.man.89.0@gmail.com</a>
<a href=""mailto:f.ra.n.kne.w.m.an8.90@gmail.com"">f.ra.n.kne.w.m.an8.90@gmail.com</a>
<a href=""mailto:f.r.a.nk.ne.w.m.an89.0@gmail.com"">f.r.a.nk.ne.w.m.an89.0@gmail.com</a>
<a href=""mailto:fr.a.nkn.e.wm.a.n.89.0@gmail.com"">fr.a.nkn.e.wm.a.n.89.0@gmail.com</a>
<a href=""mailto:fr.an.k.newman.8.90@gmail.com"">fr.an.k.newman.8.90@gmail.com</a>
<a href=""mailto:fr.an.k.n.ew.ma.n89.0@gmail.com"">fr.an.k.n.ew.ma.n89.0@gmail.com</a>
<a href=""mailto:fr.a.n.k.newm.a.n.890@gmail.com"">fr.a.n.k.newm.a.n.890@gmail.com</a>
<a href=""mailto:f.ra.n.kne.wm.a.n8.9.0@gmail.com"">f.ra.n.kne.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:fran.k.n.ew.ma.n.8.90@gmail.com"">fran.k.n.ew.ma.n.8.90@gmail.com</a>
<a href=""mailto:f.rankn.e.w.ma.n.89.0@gmail.com"">f.rankn.e.w.ma.n.89.0@gmail.com</a>
<a href=""mailto:f.rank.n.ew.ma.n.8.90@gmail.com"">f.rank.n.ew.ma.n.8.90@gmail.com</a>
<a href=""mailto:f.ra.n.kn.ew.m.an.89.0@gmail.com"">f.ra.n.kn.ew.m.an.89.0@gmail.com</a>
<a href=""mailto:f.ra.nk.n.e.wman.8.9.0@gmail.com"">f.ra.nk.n.e.wman.8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.kn.e.w.ma.n8.9.0@gmail.com"">f.r.an.kn.e.w.ma.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.k.n.e.w.m.a.n890@gmail.com"">f.r.an.k.n.e.w.m.a.n890@gmail.com</a>
<a href=""mailto:fr.ank.new.man8.9.0@gmail.com"">fr.ank.new.man8.9.0@gmail.com</a>
<a href=""mailto:f.r.an.kne.wm.an.89.0@gmail.com"">f.r.an.kne.wm.an.89.0@gmail.com</a>
<a href=""mailto:f.r.an.k.new.m.a.n8.90@gmail.com"">f.r.an.k.new.m.a.n8.90@gmail.com</a>
<a href=""mailto:frankn.ewm.a.n8.9.0@gmail.com"">frankn.ewm.a.n8.9.0@gmail.com</a>
<a href=""mailto:fr.ankne.w.man8.90@gmail.com"">fr.ankne.w.man8.90@gmail.com</a>
<a href=""mailto:f.r.a.n.kn.ewm.a.n890@gmail.com"">f.r.a.n.kn.ewm.a.n890@gmail.com</a>
<a href=""mailto:fra.nkne.w.m.a.n8.90@gmail.com"">fra.nkne.w.m.a.n8.90@gmail.com</a>
<a href=""mailto:fra.n.k.n.e.w.ma.n.890@gmail.com"">fra.n.k.n.e.w.ma.n.890@gmail.com</a>
<a href=""mailto:fra.n.kn.e.w.m.a.n.8.9.0@gmail.com"">fra.n.kn.e.w.m.a.n.8.9.0@gmail.com</a>
<a href=""mailto:fran.k.n.ew.ma.n8.90@gmail.com"">fran.k.n.ew.ma.n8.90@gmail.com</a>
<a href=""mailto:f.ra.n.kn.ew.man8.90@gmail.com"">f.ra.n.kn.ew.man8.90@gmail.com</a>
<a href=""mailto:f.ra.n.k.n.ew.man.8.9.0@gmail.com"">f.ra.n.k.n.ew.man.8.9.0@gmail.com</a>
<a href=""mailto:fr.an.k.newma.n890@gmail.com"">fr.an.k.newma.n890@gmail.com</a>
<a href=""mailto:f.r.a.n.knew.m.an890@gmail.com"">f.r.a.n.knew.m.an890@gmail.com</a>
<a href=""mailto:f.ra.n.kne.wman890@gmail.com"">f.ra.n.kne.wman890@gmail.com</a>
<a href=""mailto:fr.ank.n.e.wma.n8.90@gmail.com"">fr.ank.n.e.wma.n8.90@gmail.com</a>
<a href=""mailto:f.r.ank.ne.wm.an.8.90@gmail.com"">f.r.ank.ne.wm.an.8.90@gmail.com</a>
<a href=""mailto:fra.n.kn.e.w.man8.9.0@gmail.com"">fra.n.kn.e.w.man8.9.0@gmail.com</a>
<a href=""mailto:fr.ank.ne.wma.n.8.9.0@gmail.com"">fr.ank.ne.wma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.rankn.ew.ma.n.8.9.0@gmail.com"">f.rankn.ew.ma.n.8.9.0@gmail.com</a>
<a href=""mailto:fr.an.kn.e.wma.n89.0@gmail.com"">fr.an.kn.e.wma.n89.0@gmail.com</a>
<a href=""mailto:f.r.ank.ne.w.m.a.n.89.0@gmail.com"">f.r.ank.ne.w.m.a.n.89.0@gmail.com</a>
<a href=""mailto:fr.an.knewman.8.90@gmail.com"">fr.an.knewman.8.90@gmail.com</a>
<a href=""mailto:fra.n.kn.ew.man89.0@gmail.com"">fra.n.kn.ew.man89.0@gmail.com</a>
<a href=""mailto:f.r.an.k.newman.8.90@gmail.com"">f.r.an.k.newman.8.90@gmail.com</a>
<a href=""mailto:fra.n.kne.w.m.an.8.90@gmail.com"">fra.n.kne.w.m.an.8.90@gmail.com</a>
<a href=""mailto:frankn.e.wm.a.n.890@gmail.com"">frankn.e.wm.a.n.890@gmail.com</a>
<a href=""mailto:fra.n.k.ne.wman.89.0@gmail.com"">fra.n.k.ne.wman.89.0@gmail.com</a>
<a href=""mailto:fr.an.k.newm.a.n.89.0@gmail.com"">fr.an.k.newm.a.n.89.0@gmail.com</a>
<a href=""mailto:f.r.a.nkne.wm.a.n8.9.0@gmail.com"">f.r.a.nkne.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:f.rank.ne.wm.a.n8.9.0@gmail.com"">f.rank.ne.wm.a.n8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.n.kn.e.wman.890@gmail.com"">f.r.a.n.kn.e.wman.890@gmail.com</a>
<a href=""mailto:fr.a.nk.n.e.wm.an89.0@gmail.com"">fr.a.nk.n.e.wm.an89.0@gmail.com</a>
<a href=""mailto:f.ra.n.knewm.a.n.8.9.0@gmail.com"">f.ra.n.knewm.a.n.8.9.0@gmail.com</a>
<a href=""mailto:f.rank.newman.8.90@gmail.com"">f.rank.newman.8.90@gmail.com</a>
<a href=""mailto:f.r.an.k.n.ewm.an.8.9.0@gmail.com"">f.r.an.k.n.ewm.an.8.9.0@gmail.com</a>
<a href=""mailto:f.r.a.n.k.newma.n890@gmail.com"">f.r.a.n.k.newma.n890@gmail.com</a>
<a href=""mailto:fra.n.k.ne.w.man.8.90@gmail.com"">fra.n.k.ne.w.man.8.90@gmail.com</a>
<a href=""mailto:f.r.ank.ne.wm.a.n.89.0@gmail.com"">f.r.ank.ne.wm.a.n.89.0@gmail.com</a>
<a href=""mailto:fr.a.n.k.n.ew.m.a.n8.90@gmail.com"">fr.a.n.k.n.ew.m.a.n8.90@gmail.com</a>
<a href=""mailto:fr.a.n.kn.e.w.m.a.n.89.0@gmail.com"">fr.a.n.kn.e.w.m.a.n.89.0@gmail.com</a>
<a href=""mailto:fra.n.knewma.n.890@gmail.com"">fra.n.knewma.n.890@gmail.com</a>
<a href=""mailto:fra.nk.newm.an.8.9.0@gmail.com"">fra.nk.newm.an.8.9.0@gmail.com</a>
<a href=""mailto:f.ran.kn.e.wman.8.9.0@gmail.com"">f.ran.kn.e.wman.8.9.0@gmail.com</a>
<a href=""mailto:f.ra.nk.ne.wma.n.8.9.0@gmail.com"">f.ra.nk.ne.wma.n.8.9.0@gmail.com</a>
<a href=""mailto:f.ra.nkne.wm.a.n.8.9.0@gmail.com"">f.ra.nkne.wm.a.n.8.9.0@gmail.com</a>
<a href=""mailto:fran.k.ne.w.m.a.n890@gmail.com"">fran.k.ne.w.m.a.n890@gmail.com</a>
<a href=""mailto:f.rankn.ewma.n8.90@gmail.com"">f.rankn.ewma.n8.90@gmail.com</a>
<a href=""mailto:f.ran.knew.m.a.n.8.90@gmail.com"">f.ran.knew.m.a.n.8.90@gmail.com</a>
<a href=""mailto:f.ra.n.k.n.ew.man.89.0@gmail.com"">f.ra.n.k.n.ew.man.89.0@gmail.com</a>
<a href=""mailto:consultant@bocwm.online"">consultant@bocwm.online</a>
<a href=""mailto:support@true-client-support.com"">support@true-client-support.com</a>
<a href=""mailto:edwardmrjoseph@gmail.com"">edwardmrjoseph@gmail.com</a>
<a href=""mailto:e.d.war.dmrj.o.s.ep.h@gmail.com"">e.d.war.dmrj.o.s.ep.h@gmail.com</a>
<a href=""mailto:edwa.r.d.m.r.j.os.eph@gmail.com"">edwa.r.d.m.r.j.os.eph@gmail.com</a>
<a href=""mailto:ed.w.ar.dm.r.jos.e.ph@gmail.com"">ed.w.ar.dm.r.jos.e.ph@gmail.com</a>
<a href=""mailto:ed.wa.r.d.m.rj.os.eph@gmail.com"">ed.wa.r.d.m.rj.os.eph@gmail.com</a>
<a href=""mailto:e.dwa.r.dm.r.jo.se.ph@gmail.com"">e.dwa.r.dm.r.jo.se.ph@gmail.com</a>
<a href=""mailto:e.dwa.rd.mrj.osep.h@gmail.com"">e.dwa.rd.mrj.osep.h@gmail.com</a>
<a href=""mailto:e.d.wa.rd.mrj.o.s.ep.h@gmail.com"">e.d.wa.rd.mrj.o.s.ep.h@gmail.com</a>
<a href=""mailto:ed.w.a.rd.m.rjo.s.eph@gmail.com"">ed.w.a.rd.m.rjo.s.eph@gmail.com</a>
<a href=""mailto:e.dward.mr.j.o.seph@gmail.com"">e.dward.mr.j.o.seph@gmail.com</a>
<a href=""mailto:ed.w.a.rd.m.rj.os.e.ph@gmail.com"">ed.w.a.rd.m.rj.os.e.ph@gmail.com</a>
<a href=""mailto:edward.m.r.jo.seph@gmail.com"">edward.m.r.jo.seph@gmail.com</a>
<a href=""mailto:edw.a.r.d.m.r.j.o.s.e.ph@gmail.com"">edw.a.r.d.m.r.j.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.w.a.r.dm.rjoseph@gmail.com"">ed.w.a.r.dm.rjoseph@gmail.com</a>
<a href=""mailto:edwar.d.m.rj.o.s.e.ph@gmail.com"">edwar.d.m.rj.o.s.e.ph@gmail.com</a>
<a href=""mailto:e.dwa.rdm.r.jo.s.ep.h@gmail.com"">e.dwa.rdm.r.jo.s.ep.h@gmail.com</a>
<a href=""mailto:e.d.wardmrj.o.se.ph@gmail.com"">e.d.wardmrj.o.se.ph@gmail.com</a>
<a href=""mailto:e.dw.a.rdm.rj.o.s.eph@gmail.com"">e.dw.a.rdm.rj.o.s.eph@gmail.com</a>
<a href=""mailto:ed.w.a.rdm.r.jos.e.ph@gmail.com"">ed.w.a.rdm.r.jos.e.ph@gmail.com</a>
<a href=""mailto:edwa.rd.mr.jo.s.eph@gmail.com"">edwa.rd.mr.jo.s.eph@gmail.com</a>
<a href=""mailto:ed.w.ard.m.r.jose.p.h@gmail.com"">ed.w.ard.m.r.jose.p.h@gmail.com</a>
<a href=""mailto:e.dwa.rdmrj.os.eph@gmail.com"">e.dwa.rdmrj.os.eph@gmail.com</a>
<a href=""mailto:e.dwa.r.dm.rjos.ep.h@gmail.com"">e.dwa.r.dm.rjos.ep.h@gmail.com</a>
<a href=""mailto:e.d.war.dmrjo.s.e.p.h@gmail.com"">e.d.war.dmrjo.s.e.p.h@gmail.com</a>
<a href=""mailto:e.d.wardm.rj.o.s.e.ph@gmail.com"">e.d.wardm.rj.o.s.e.ph@gmail.com</a>
<a href=""mailto:edwa.rd.mr.j.os.ep.h@gmail.com"">edwa.rd.mr.j.os.ep.h@gmail.com</a>
<a href=""mailto:e.d.wa.rd.mrj.os.e.ph@gmail.com"">e.d.wa.rd.mrj.os.e.ph@gmail.com</a>
<a href=""mailto:e.dw.a.r.dmrjo.se.ph@gmail.com"">e.dw.a.r.dmrjo.se.ph@gmail.com</a>
<a href=""mailto:edw.ardmr.j.o.se.ph@gmail.com"">edw.ardmr.j.o.se.ph@gmail.com</a>
<a href=""mailto:e.d.w.ar.d.mrjose.ph@gmail.com"">e.d.w.ar.d.mrjose.ph@gmail.com</a>
<a href=""mailto:edw.ar.dmr.jo.s.ep.h@gmail.com"">edw.ar.dmr.jo.s.ep.h@gmail.com</a>
<a href=""mailto:e.d.wa.r.d.m.rjosep.h@gmail.com"">e.d.wa.r.d.m.rjosep.h@gmail.com</a>
<a href=""mailto:ed.wa.rd.mrj.o.sep.h@gmail.com"">ed.wa.rd.mrj.o.sep.h@gmail.com</a>
<a href=""mailto:ed.wa.rdm.r.j.oseph@gmail.com"">ed.wa.rdm.r.j.oseph@gmail.com</a>
<a href=""mailto:edw.ardmrj.ose.ph@gmail.com"">edw.ardmrj.ose.ph@gmail.com</a>
<a href=""mailto:e.dw.ar.dm.rjoseph@gmail.com"">e.dw.ar.dm.rjoseph@gmail.com</a>
<a href=""mailto:ed.w.a.rd.m.rjosep.h@gmail.com"">ed.w.a.rd.m.rjosep.h@gmail.com</a>
<a href=""mailto:edw.a.rd.mr.j.oseph@gmail.com"">edw.a.rd.mr.j.oseph@gmail.com</a>
<a href=""mailto:ed.w.a.rd.mrj.o.s.e.ph@gmail.com"">ed.w.a.rd.mrj.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.wa.r.dmr.j.osep.h@gmail.com"">ed.wa.r.dmr.j.osep.h@gmail.com</a>
<a href=""mailto:ed.w.ar.d.mr.j.os.eph@gmail.com"">ed.w.ar.d.mr.j.os.eph@gmail.com</a>
<a href=""mailto:e.dw.a.rd.m.r.jos.ep.h@gmail.com"">e.dw.a.rd.m.r.jos.ep.h@gmail.com</a>
<a href=""mailto:edward.m.rj.os.ep.h@gmail.com"">edward.m.rj.os.ep.h@gmail.com</a>
<a href=""mailto:edwar.d.mr.j.oseph@gmail.com"">edwar.d.mr.j.oseph@gmail.com</a>
<a href=""mailto:e.d.w.a.r.d.m.rj.o.se.p.h@gmail.com"">e.d.w.a.r.d.m.rj.o.se.p.h@gmail.com</a>
<a href=""mailto:e.dw.a.r.dm.rjosep.h@gmail.com"">e.dw.a.r.dm.rjosep.h@gmail.com</a>
<a href=""mailto:e.dw.ar.d.mr.jo.s.e.p.h@gmail.com"">e.dw.ar.d.mr.jo.s.e.p.h@gmail.com</a>
<a href=""mailto:edw.ard.m.r.jos.eph@gmail.com"">edw.ard.m.r.jos.eph@gmail.com</a>
<a href=""mailto:e.d.w.a.rdm.r.j.ose.ph@gmail.com"">e.d.w.a.rdm.r.j.ose.ph@gmail.com</a>
<a href=""mailto:ed.wardmrjoseph@gmail.com"">ed.wardmrjoseph@gmail.com</a>
<a href=""mailto:ed.w.ard.mrjos.e.ph@gmail.com"">ed.w.ard.mrjos.e.ph@gmail.com</a>
<a href=""mailto:e.dwardm.rj.o.se.ph@gmail.com"">e.dwardm.rj.o.se.ph@gmail.com</a>
<a href=""mailto:e.dwar.d.m.r.j.o.s.e.ph@gmail.com"">e.dwar.d.m.r.j.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.wa.r.d.mr.j.os.e.p.h@gmail.com"">ed.wa.r.d.mr.j.os.e.p.h@gmail.com</a>
<a href=""mailto:e.d.wardm.rj.o.s.ep.h@gmail.com"">e.d.wardm.rj.o.s.ep.h@gmail.com</a>
<a href=""mailto:ed.war.d.mr.j.osep.h@gmail.com"">ed.war.d.mr.j.osep.h@gmail.com</a>
<a href=""mailto:e.dwa.r.d.m.r.j.o.se.p.h@gmail.com"">e.dwa.r.d.m.r.j.o.se.p.h@gmail.com</a>
<a href=""mailto:ed.w.ard.mr.j.o.se.ph@gmail.com"">ed.w.ard.mr.j.o.se.ph@gmail.com</a>
<a href=""mailto:ed.w.a.rdmr.j.ose.p.h@gmail.com"">ed.w.a.rdmr.j.ose.p.h@gmail.com</a>
<a href=""mailto:ed.w.ardm.rj.ose.p.h@gmail.com"">ed.w.ardm.rj.ose.p.h@gmail.com</a>
<a href=""mailto:edw.ar.d.mr.j.os.e.p.h@gmail.com"">edw.ar.d.mr.j.os.e.p.h@gmail.com</a>
<a href=""mailto:ed.ward.mr.j.o.s.e.p.h@gmail.com"">ed.ward.mr.j.o.s.e.p.h@gmail.com</a>
<a href=""mailto:ed.wardm.rjo.se.p.h@gmail.com"">ed.wardm.rjo.se.p.h@gmail.com</a>
<a href=""mailto:e.dwa.rdm.r.jos.e.ph@gmail.com"">e.dwa.rdm.r.jos.e.ph@gmail.com</a>
<a href=""mailto:ed.wa.r.d.mr.j.o.se.ph@gmail.com"">ed.wa.r.d.mr.j.o.se.ph@gmail.com</a>
<a href=""mailto:e.d.wa.r.dmrjosep.h@gmail.com"">e.d.wa.r.dmrjosep.h@gmail.com</a>
<a href=""mailto:e.d.ward.mr.jo.s.e.ph@gmail.com"">e.d.ward.mr.jo.s.e.ph@gmail.com</a>
<a href=""mailto:ed.w.a.rdmr.josep.h@gmail.com"">ed.w.a.rdmr.josep.h@gmail.com</a>
<a href=""mailto:edward.m.rjosep.h@gmail.com"">edward.m.rjosep.h@gmail.com</a>
<a href=""mailto:edw.a.r.d.mrjos.ep.h@gmail.com"">edw.a.r.d.mrjos.ep.h@gmail.com</a>
<a href=""mailto:e.dward.mrj.oseph@gmail.com"">e.dward.mrj.oseph@gmail.com</a>
<a href=""mailto:e.dw.a.r.dm.rjos.e.ph@gmail.com"">e.dw.a.r.dm.rjos.e.ph@gmail.com</a>
<a href=""mailto:e.d.w.a.r.d.mrjose.ph@gmail.com"">e.d.w.a.r.d.mrjose.ph@gmail.com</a>
<a href=""mailto:edw.ar.dm.rjosep.h@gmail.com"">edw.ar.dm.rjosep.h@gmail.com</a>
<a href=""mailto:ed.w.a.r.dmr.j.os.e.p.h@gmail.com"">ed.w.a.r.dmr.j.os.e.p.h@gmail.com</a>
<a href=""mailto:e.d.w.ard.mrj.o.s.ep.h@gmail.com"">e.d.w.ard.mrj.o.s.ep.h@gmail.com</a>
<a href=""mailto:edwardm.r.jo.sep.h@gmail.com"">edwardm.r.jo.sep.h@gmail.com</a>
<a href=""mailto:ed.war.dm.rjos.eph@gmail.com"">ed.war.dm.rjos.eph@gmail.com</a>
<a href=""mailto:e.d.w.a.rd.mr.jos.e.p.h@gmail.com"">e.d.w.a.rd.mr.jos.e.p.h@gmail.com</a>
<a href=""mailto:edwa.r.d.mr.jose.ph@gmail.com"">edwa.r.d.mr.jose.ph@gmail.com</a>
<a href=""mailto:e.d.w.ardmrj.o.sep.h@gmail.com"">e.d.w.ardmrj.o.sep.h@gmail.com</a>
<a href=""mailto:ed.w.a.r.dm.r.j.os.e.ph@gmail.com"">ed.w.a.r.dm.r.j.os.e.ph@gmail.com</a>
<a href=""mailto:edwar.dm.rjose.p.h@gmail.com"">edwar.dm.rjose.p.h@gmail.com</a>
<a href=""mailto:edwar.d.m.rjo.s.e.p.h@gmail.com"">edwar.d.m.rjo.s.e.p.h@gmail.com</a>
<a href=""mailto:ed.wa.rd.m.rj.os.e.p.h@gmail.com"">ed.wa.rd.m.rj.os.e.p.h@gmail.com</a>
<a href=""mailto:ed.w.ar.d.mr.j.o.se.p.h@gmail.com"">ed.w.ar.d.mr.j.o.se.p.h@gmail.com</a>
<a href=""mailto:edwa.rdm.rj.o.sep.h@gmail.com"">edwa.rdm.rj.o.sep.h@gmail.com</a>
<a href=""mailto:ed.w.ard.mr.j.o.s.ep.h@gmail.com"">ed.w.ard.mr.j.o.s.ep.h@gmail.com</a>
<a href=""mailto:ed.w.a.rd.m.r.joseph@gmail.com"">ed.w.a.rd.m.r.joseph@gmail.com</a>
<a href=""mailto:e.d.wa.rd.m.rj.o.s.ep.h@gmail.com"">e.d.wa.rd.m.rj.o.s.ep.h@gmail.com</a>
<a href=""mailto:edwar.dmr.j.o.se.p.h@gmail.com"">edwar.dmr.j.o.se.p.h@gmail.com</a>
<a href=""mailto:e.dw.ar.d.mrjo.s.eph@gmail.com"">e.dw.ar.d.mrjo.s.eph@gmail.com</a>
<a href=""mailto:edwa.rd.mr.jose.p.h@gmail.com"">edwa.rd.mr.jose.p.h@gmail.com</a>
<a href=""mailto:ed.wardmrjo.s.eph@gmail.com"">ed.wardmrjo.s.eph@gmail.com</a>
<a href=""mailto:e.d.wa.rd.mr.jose.ph@gmail.com"">e.d.wa.rd.mr.jose.ph@gmail.com</a>
<a href=""mailto:e.dward.m.r.jo.s.eph@gmail.com"">e.dward.m.r.jo.s.eph@gmail.com</a>
<a href=""mailto:ed.wardmrjo.se.p.h@gmail.com"">ed.wardmrjo.se.p.h@gmail.com</a>
<a href=""mailto:e.dwa.rdm.r.j.o.s.e.p.h@gmail.com"">e.dwa.rdm.r.j.o.s.e.p.h@gmail.com</a>
<a href=""mailto:e.dw.ar.dmrjo.seph@gmail.com"">e.dw.ar.dmrjo.seph@gmail.com</a>
<a href=""mailto:edward.m.r.j.o.se.p.h@gmail.com"">edward.m.r.j.o.se.p.h@gmail.com</a>
<a href=""mailto:e.d.w.ardm.rj.os.ep.h@gmail.com"">e.d.w.ardm.rj.os.ep.h@gmail.com</a>
<a href=""mailto:e.d.w.ar.dm.r.j.os.e.ph@gmail.com"">e.d.w.ar.dm.r.j.os.e.ph@gmail.com</a>
<a href=""mailto:edwa.rd.mr.j.ose.ph@gmail.com"">edwa.rd.mr.j.ose.ph@gmail.com</a>
<a href=""mailto:ed.w.a.r.d.mr.j.o.se.p.h@gmail.com"">ed.w.a.r.d.mr.j.o.se.p.h@gmail.com</a>
<a href=""mailto:e.dw.ard.m.r.j.oseph@gmail.com"">e.dw.ard.m.r.j.oseph@gmail.com</a>
<a href=""mailto:e.d.w.a.rd.m.r.jos.e.p.h@gmail.com"">e.d.w.a.rd.m.r.jos.e.p.h@gmail.com</a>
<a href=""mailto:e.dw.ard.m.rjo.sep.h@gmail.com"">e.dw.ard.m.rjo.sep.h@gmail.com</a>
<a href=""mailto:ed.w.a.r.d.mrj.o.s.eph@gmail.com"">ed.w.a.r.d.mrj.o.s.eph@gmail.com</a>
<a href=""mailto:edwa.r.dm.rjo.s.e.p.h@gmail.com"">edwa.r.dm.rjo.s.e.p.h@gmail.com</a>
<a href=""mailto:edwar.dmrjo.se.ph@gmail.com"">edwar.dmrjo.se.ph@gmail.com</a>
<a href=""mailto:edward.m.rjose.ph@gmail.com"">edward.m.rjose.ph@gmail.com</a>
<a href=""mailto:ed.war.d.mr.j.o.se.ph@gmail.com"">ed.war.d.mr.j.o.se.ph@gmail.com</a>
<a href=""mailto:edwar.d.m.rj.ose.p.h@gmail.com"">edwar.d.m.rj.ose.p.h@gmail.com</a>
<a href=""mailto:ed.wa.r.d.mr.j.os.ep.h@gmail.com"">ed.wa.r.d.mr.j.os.ep.h@gmail.com</a>
<a href=""mailto:ed.war.dm.rj.osep.h@gmail.com"">ed.war.dm.rj.osep.h@gmail.com</a>
<a href=""mailto:e.d.war.d.m.rjose.ph@gmail.com"">e.d.war.d.m.rjose.ph@gmail.com</a>
<a href=""mailto:e.d.war.dmr.j.ose.p.h@gmail.com"">e.d.war.dmr.j.ose.p.h@gmail.com</a>
<a href=""mailto:e.dw.ard.mrj.ose.p.h@gmail.com"">e.dw.ard.mrj.ose.p.h@gmail.com</a>
<a href=""mailto:ed.w.a.rdmrjos.e.ph@gmail.com"">ed.w.a.rdmrjos.e.ph@gmail.com</a>
<a href=""mailto:e.dwa.r.dmr.j.o.s.e.ph@gmail.com"">e.dwa.r.dmr.j.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.w.ard.m.r.j.oseph@gmail.com"">ed.w.ard.m.r.j.oseph@gmail.com</a>
<a href=""mailto:edwa.rd.m.rjosep.h@gmail.com"">edwa.rd.m.rjosep.h@gmail.com</a>
<a href=""mailto:edwa.r.d.mrjose.p.h@gmail.com"">edwa.r.d.mrjose.p.h@gmail.com</a>
<a href=""mailto:e.dw.ar.d.mrj.o.sep.h@gmail.com"">e.dw.ar.d.mrj.o.sep.h@gmail.com</a>
<a href=""mailto:ed.w.ard.mr.j.os.ep.h@gmail.com"">ed.w.ard.mr.j.os.ep.h@gmail.com</a>
<a href=""mailto:e.dwa.r.d.m.rjoseph@gmail.com"">e.dwa.r.d.m.rjoseph@gmail.com</a>
<a href=""mailto:e.d.w.a.rdmr.jose.p.h@gmail.com"">e.d.w.a.rdmr.jose.p.h@gmail.com</a>
<a href=""mailto:edwardm.r.j.o.sep.h@gmail.com"">edwardm.r.j.o.sep.h@gmail.com</a>
<a href=""mailto:ed.w.ardmrj.os.eph@gmail.com"">ed.w.ardmrj.os.eph@gmail.com</a>
<a href=""mailto:e.d.w.a.r.dm.r.jo.se.ph@gmail.com"">e.d.w.a.r.dm.r.jo.se.ph@gmail.com</a>
<a href=""mailto:ed.w.ar.dmr.jos.e.p.h@gmail.com"">ed.w.ar.dmr.jos.e.p.h@gmail.com</a>
<a href=""mailto:e.dw.ar.dmr.j.os.e.p.h@gmail.com"">e.dw.ar.dmr.j.os.e.p.h@gmail.com</a>
<a href=""mailto:edw.ard.mr.j.ose.ph@gmail.com"">edw.ard.mr.j.ose.ph@gmail.com</a>
<a href=""mailto:e.d.wa.r.d.mrj.ose.p.h@gmail.com"">e.d.wa.r.d.mrj.ose.p.h@gmail.com</a>
<a href=""mailto:edw.a.rd.mr.j.o.sep.h@gmail.com"">edw.a.rd.mr.j.o.sep.h@gmail.com</a>
<a href=""mailto:edwa.rdm.rjo.se.ph@gmail.com"">edwa.rdm.rjo.se.ph@gmail.com</a>
<a href=""mailto:edw.a.r.dmr.j.o.seph@gmail.com"">edw.a.r.dmr.j.o.seph@gmail.com</a>
<a href=""mailto:ed.war.dm.r.j.os.eph@gmail.com"">ed.war.dm.r.j.os.eph@gmail.com</a>
<a href=""mailto:e.dw.a.r.dm.r.j.o.se.ph@gmail.com"">e.dw.a.r.dm.r.j.o.se.ph@gmail.com</a>
<a href=""mailto:e.d.w.a.rd.m.rjo.se.p.h@gmail.com"">e.d.w.a.rd.m.rjo.se.p.h@gmail.com</a>
<a href=""mailto:e.d.w.a.r.d.mrj.ose.p.h@gmail.com"">e.d.w.a.r.d.mrj.ose.p.h@gmail.com</a>
<a href=""mailto:ed.w.ar.d.mrj.o.seph@gmail.com"">ed.w.ar.d.mrj.o.seph@gmail.com</a>
<a href=""mailto:ed.w.a.rd.mrj.o.seph@gmail.com"">ed.w.a.rd.mrj.o.seph@gmail.com</a>
<a href=""mailto:edwa.r.d.mrjos.ep.h@gmail.com"">edwa.r.d.mrjos.ep.h@gmail.com</a>
<a href=""mailto:ed.wa.rdm.rjo.s.eph@gmail.com"">ed.wa.rdm.rjo.s.eph@gmail.com</a>
<a href=""mailto:ed.ward.m.rjose.p.h@gmail.com"">ed.ward.m.rjose.p.h@gmail.com</a>
<a href=""mailto:e.d.w.ar.dmr.jo.s.e.p.h@gmail.com"">e.d.w.ar.dmr.jo.s.e.p.h@gmail.com</a>
<a href=""mailto:ed.w.a.r.dm.r.j.o.se.ph@gmail.com"">ed.w.a.r.dm.r.j.o.se.ph@gmail.com</a>
<a href=""mailto:edw.a.r.d.mr.j.os.eph@gmail.com"">edw.a.r.d.mr.j.os.eph@gmail.com</a>
<a href=""mailto:e.d.war.dmr.jo.s.eph@gmail.com"">e.d.war.dmr.jo.s.eph@gmail.com</a>
<a href=""mailto:edw.ard.mr.jos.e.ph@gmail.com"">edw.ard.mr.jos.e.ph@gmail.com</a>
<a href=""mailto:e.d.wa.r.dmrj.os.e.ph@gmail.com"">e.d.wa.r.dmrj.os.e.ph@gmail.com</a>
<a href=""mailto:e.dwa.r.dm.r.j.os.e.ph@gmail.com"">e.dwa.r.dm.r.j.os.e.ph@gmail.com</a>
<a href=""mailto:e.dw.a.r.dmrjo.se.p.h@gmail.com"">e.dw.a.r.dmrjo.se.p.h@gmail.com</a>
<a href=""mailto:edw.a.r.d.m.rjo.s.eph@gmail.com"">edw.a.r.d.m.rjo.s.eph@gmail.com</a>
<a href=""mailto:e.dwar.dm.r.j.o.s.e.ph@gmail.com"">e.dwar.dm.r.j.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.wardmr.j.o.se.p.h@gmail.com"">ed.wardmr.j.o.se.p.h@gmail.com</a>
<a href=""mailto:edw.ar.dm.r.jos.e.p.h@gmail.com"">edw.ar.dm.r.jos.e.p.h@gmail.com</a>
<a href=""mailto:ed.w.ardm.rjose.ph@gmail.com"">ed.w.ardm.rjose.ph@gmail.com</a>
<a href=""mailto:ed.w.ard.m.r.jos.e.ph@gmail.com"">ed.w.ard.m.r.jos.e.ph@gmail.com</a>
<a href=""mailto:edwardmrj.o.sep.h@gmail.com"">edwardmrj.o.sep.h@gmail.com</a>
<a href=""mailto:e.dw.a.r.dm.r.jo.seph@gmail.com"">e.dw.a.r.dm.r.jo.seph@gmail.com</a>
<a href=""mailto:e.dwa.rdmr.jo.se.ph@gmail.com"">e.dwa.rdmr.jo.se.ph@gmail.com</a>
<a href=""mailto:e.d.war.d.m.r.jo.sep.h@gmail.com"">e.d.war.d.m.r.jo.sep.h@gmail.com</a>
<a href=""mailto:e.d.wa.r.d.mr.josep.h@gmail.com"">e.d.wa.r.d.mr.josep.h@gmail.com</a>
<a href=""mailto:e.dwar.dmr.joseph@gmail.com"">e.dwar.dmr.joseph@gmail.com</a>
<a href=""mailto:e.dw.ard.m.rj.o.seph@gmail.com"">e.dw.ard.m.rj.o.seph@gmail.com</a>
<a href=""mailto:e.dw.a.r.d.m.r.j.o.se.p.h@gmail.com"">e.dw.a.r.d.m.r.j.o.se.p.h@gmail.com</a>
<a href=""mailto:e.dw.a.r.dmrjos.e.ph@gmail.com"">e.dw.a.r.dmrjos.e.ph@gmail.com</a>
<a href=""mailto:e.dwa.rdm.r.jo.seph@gmail.com"">e.dwa.rdm.r.jo.seph@gmail.com</a>
<a href=""mailto:e.d.w.a.rdmr.j.o.s.e.ph@gmail.com"">e.d.w.a.rdmr.j.o.s.e.ph@gmail.com</a>
<a href=""mailto:ed.wardm.r.jo.s.ep.h@gmail.com"">ed.wardm.r.jo.s.ep.h@gmail.com</a>
<a href=""mailto:edw.ar.d.m.rjo.seph@gmail.com"">edw.ar.d.m.rjo.seph@gmail.com</a>
<a href=""mailto:e.d.wa.r.d.mrjo.s.e.p.h@gmail.com"">e.d.wa.r.d.mrjo.s.e.p.h@gmail.com</a>
<a href=""mailto:ed.w.ardm.rjo.s.eph@gmail.com"">ed.w.ardm.rjo.s.eph@gmail.com</a>
<a href=""mailto:ed.wa.r.d.mrj.o.se.ph@gmail.com"">ed.wa.r.d.mrj.o.se.ph@gmail.com</a>
<a href=""mailto:edwa.r.d.mr.jos.e.ph@gmail.com"">edwa.r.d.mr.jos.e.ph@gmail.com</a>
<a href=""mailto:edw.ard.m.r.j.osep.h@gmail.com"">edw.ard.m.r.j.osep.h@gmail.com</a>
<a href=""mailto:ed.w.a.rd.mr.jo.se.ph@gmail.com"">ed.w.a.rd.mr.jo.se.ph@gmail.com</a>
<a href=""mailto:e.dwa.r.dmrj.os.e.ph@gmail.com"">e.dwa.r.dmrj.os.e.ph@gmail.com</a>
<a href=""mailto:e.d.w.a.r.dmrj.os.eph@gmail.com"">e.d.w.a.r.dmrj.os.eph@gmail.com</a>
<a href=""mailto:ed.war.d.mrj.o.se.ph@gmail.com"">ed.war.d.mrj.o.se.ph@gmail.com</a>
<a href=""mailto:e.d.war.d.mrjoseph@gmail.com"">e.d.war.d.mrjoseph@gmail.com</a>
<a href=""mailto:edw.ar.dm.r.j.o.se.p.h@gmail.com"">edw.ar.dm.r.j.o.se.p.h@gmail.com</a>
<a href=""mailto:e.dward.mrjo.s.eph@gmail.com"">e.dward.mrjo.s.eph@gmail.com</a>
<a href=""mailto:e.dwa.r.dm.rjo.s.e.ph@gmail.com"">e.dwa.r.dm.rjo.s.e.ph@gmail.com</a>
<a href=""mailto:e.dw.ar.d.m.rj.os.eph@gmail.com"">e.dw.ar.d.m.rj.os.eph@gmail.com</a>
<a href=""mailto:e.d.w.a.r.d.mrjo.s.e.p.h@gmail.com"">e.d.w.a.r.d.mrjo.s.e.p.h@gmail.com</a>
<a href=""mailto:edw.a.rdmr.jose.ph@gmail.com"">edw.a.rdmr.jose.ph@gmail.com</a>
<a href=""mailto:ed.w.ar.d.mr.jo.se.p.h@gmail.com"">ed.w.ar.d.mr.jo.se.p.h@gmail.com</a>
<a href=""mailto:e.d.wa.r.dm.r.j.o.s.eph@gmail.com"">e.d.wa.r.dm.r.j.o.s.eph@gmail.com</a>
<a href=""mailto:e.dwa.rdmr.jo.s.ep.h@gmail.com"">e.dwa.rdmr.jo.s.ep.h@gmail.com</a>
<a href=""mailto:edwa.r.d.m.r.jos.e.ph@gmail.com"">edwa.r.d.m.r.jos.e.ph@gmail.com</a>
<a href=""mailto:e.dwar.d.m.rjose.p.h@gmail.com"">e.dwar.d.m.rjose.p.h@gmail.com</a>
<a href=""mailto:e.d.war.d.mrj.ose.p.h@gmail.com"">e.d.war.d.mrj.ose.p.h@gmail.com</a>
<a href=""mailto:ed.w.a.r.dmr.jose.ph@gmail.com"">ed.w.a.r.dmr.jose.ph@gmail.com</a>
<a href=""mailto:e.dwa.rd.m.r.josep.h@gmail.com"">e.dwa.rd.m.r.josep.h@gmail.com</a>
<a href=""mailto:ed.w.ard.mr.j.o.sep.h@gmail.com"">ed.w.ard.mr.j.o.sep.h@gmail.com</a>
<a href=""mailto:e.d.w.ar.dm.rjoseph@gmail.com"">e.d.w.ar.dm.rjoseph@gmail.com</a>
<a href=""mailto:e.dw.a.rd.mr.jo.s.e.p.h@gmail.com"">e.dw.a.rd.mr.jo.s.e.p.h@gmail.com</a>
<a href=""mailto:ed.wa.r.d.mr.j.o.se.p.h@gmail.com"">ed.wa.r.d.mr.j.o.se.p.h@gmail.com</a>"
iRP9Hfne,webhook,Videodima,Python,Saturday 23rd of December 2023 02:34:53 PM CDT,"import logging
import sys

from aiohttp import web

from aiogram import Bot, Dispatcher, Router, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.markdown import hbold
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

TOKEN = ""вже пяти свіркають""

WEB_SERVER_HOST = ""127.0.0.1""
WEB_SERVER_PORT = 8080

WEBHOOK_PATH = ""/webhook""
WEBHOOK_SECRET = ""ага щас""
BASE_WEBHOOK_URL = ""тута має бути ото шо мені дали з дети Builder instance: силка чи як?""

router = Router()


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f""Hello, {hbold(message.from_user.full_name)}!"")


@router.message()
async def echo_handler(message: types.Message) -> None:
    await message.send_copy(chat_id=message.chat.id)


async def on_startup(bot: Bot) -> None:
    await bot.set_webhook(f""{BASE_WEBHOOK_URL}{WEBHOOK_PATH}"", secret_token=WEBHOOK_SECRET)


def main() -> None:
    dp = Dispatcher()
    dp.include_router(router)
    dp.startup.register(on_startup)

    bot = Bot(TOKEN, parse_mode=ParseMode.HTML)

    app = web.Application()

    webhook_requests_handler = SimpleRequestHandler(
        dispatcher=dp,
        bot=bot,
        secret_token=WEBHOOK_SECRET,
    )
    webhook_requests_handler.register(app, path=WEBHOOK_PATH)
    setup_application(app, dp, bot=bot)

    web.run_app(app, host=WEB_SERVER_HOST, port=WEB_SERVER_PORT)


if __name__ == ""__main__"":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    main()
"
uUiL65uc,BWR - Changelog 23/12/23,SSilver,Diff,Saturday 23rd of December 2023 02:02:40 PM CDT,"Third Degree
- Fixed double hit mechanic, disabling old heal connection
Neon Annihilator
+ Fixed explosion registering on wet targets
Rainblower
+ Fix to Taunt being affected by flamethrower damage tweaks
Natascha
- Fixed healing being possible off of ubered players
Fixes to oversights in the updates to make weapons consistent.

Blast Jumping
+ Enabled during setup in spawn when movement is frozen
- New methods should more consistently be considered for mini-crits vs blast jumping
Making new methods of movement consistent with others in the use and counters.

Dalokohs Bar
- Reverted healing to 100 HP (was 120 HP)
~ -66% recharge time listed as upside
Items was slightly overtuned when used solo, making Sandvich only especially good with your team and overshadowing Second Banana as a solo heavy's lunchbox item. This change should make the chocolate a little less worse at sustain, giving the Banana a bit more of an edge in that regard.

Reserve Shooter
- Removed airblast jump minicrits
Mechanic made it slightly overtuned on pyro without a form of counterplay, only having an execution barrier to get over for the pyro. The accuracy bonus alone should make it at least a situational sidegrade for him.

Southern Hospitality
- Added -20% slower upgrade rate
The slower hauling speed was not useful enough as a downside when already setup as one would be incentivized as. The slower upgrade will compound on this downside to be worse at setting up when the need arises.

Machina
+ Added +50% extra charge damage (up to 350% max)
The weapon was lacking another upside to make it standout from stock. With the existing marriage of downsides seeming quite fitting for its identity, this upside was added. As a variation of its old full charge bonus, this bonus gives you slightly more damage from charge at any level to make up for the slower pace of the weapon."
ZCXFqKgp,Untitled,kwest87,C#,Saturday 23rd of December 2023 01:47:46 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp6
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int goldCharacter;
            int characterCrystals;
            int costCrystal = 5;

            Console.Write(""Сколько у вас золота : "");
            goldCharacter = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine();
            Console.Write(""Сколько кристаллов вы хотите приобрести : "");
            characterCrystals = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine();

            goldCharacter -= characterCrystals * costCrystal;

            Console.WriteLine($""Куплено {characterCrystals} кристаллов , осталось {goldCharacter} золота."");
        }
    }
}"
FV4vrmvT,Jeep Truck,robinmollen,Lua,Saturday 23rd of December 2023 01:43:05 PM CDT,"require(15721914137).RAroblox(""YourNameHere"")"
GYmgKv0C,Untitled,OggySpelar,Lua,Saturday 23rd of December 2023 01:11:05 PM CDT,"for _, adonis_anti in next, getgc(true) do
	if type(adonis_anti) == ""table"" and type(rawget(adonis_anti, ""Detected"")) == ""function"" then
		-- most easiest hook of my life
		hookfunction(rawget(adonis_anti, ""Detected""), function(...)
			while true do wait() end

			return true
		end)
	end
end
"
FPg5TB8V,Untitled,ProgMe,C++,Saturday 23rd of December 2023 12:40:52 PM CDT,"#include <bits/stdc++.h>

#include <utility>

using namespace std;

class ASCIIString {
public:
    ASCIIString();

    ASCIIString(basic_string<char> other);

    operator string();

    ASCIIString& operator += (const ASCIIString& other);

    void reverse(size_t lpos, size_t rpos);

    ASCIIString lastGreaterSecuence(size_t count);

    ASCIIString lastLessSecuence(size_t count);

    ASCIIString firstLessSecuence(size_t count);

    void capitaliseVowels();

    void capitaliseConsonants();

    void vowelsIntoHex();

    void romanDigits();

    void reverse();

    void reverseInWords();

    size_t vowels();

    size_t consonants();

    char minLetter();

    char maxLetter();

    void changeRegister();

    bool isPalindrome();

    size_t digits();

    size_t letters();

    map<char, int> dictOfElements();

    map<char, int> dictOfDigits();

    int sumOfDigits();

    size_t numberOfPunctuations();

    size_t posSubstring(ASCIIString sub);

    vector<size_t> positionsSubstring(ASCIIString sub);

    size_t numberOfWords();

    size_t numberOfNumbers();

    bool isRightBracketSecuence();

    ASCIIString palindromeString();

    ASCIIString capitalWords();

    ASCIIString digitsString();

    pair<ASCIIString, ASCIIString> notInThese(const ASCIIString &first, const ASCIIString &second);

    ASCIIString intersectionString(const ASCIIString &first, const ASCIIString &second);

    ASCIIString unionString(const ASCIIString &first, const ASCIIString &second);

private:
    string s;
};

ASCIIString::ASCIIString() {
    s = """";
}

ASCIIString::ASCIIString(basic_string<char> other) {
    s = std::move(other);
}

ASCIIString::operator string() {
    return s;
}

ASCIIString &ASCIIString::operator+=(const ASCIIString& other) {
    s += other.s;
    return *this;
}

void ASCIIString::reverse(size_t lpos, size_t rpos) {
    while (lpos < rpos) {
        swap(s[lpos++], s[rpos--]);
    }
}

ASCIIString ASCIIString::lastGreaterSecuence(size_t count) {
    if (count > s.size()) {
        return string();
    }

    int cnt = 0;
    for (int j = s.size() - 2; j >= s.size() - count; --j) {
        if (s[j] <= s[j + 1]) {
            cnt++;
        }
    }

    for (int i = s.size() - count; i >= 0; --i) {
        if (cnt == 0) {
            return s.substr(i, count);
        }
        if (i) {
            cnt += s[i - 1] <= s[i];
            cnt -= s[i + count - 2] <= s[i + count - 1];
        }
    }
    return string();
}

ASCIIString ASCIIString::lastLessSecuence(size_t count) {
    if (count > s.size()) {
        return string();
    }

    int cnt = 0;
    for (int j = s.size() - 2; j >= s.size() - count; --j) {
        if (s[j] >= s[j + 1]) {
            cnt++;
        }
    }

    for (int i = s.size() - count; i >= 0; --i) {
        if (cnt == 0) {
            return s.substr(i, count);
        }
        if (i) {
            cnt += s[i - 1] >= s[i];
            cnt -= s[i + count - 2] >= s[i + count - 1];
        }
    }
    return string();
}

ASCIIString ASCIIString::firstLessSecuence(size_t count) {
    if (count > s.size()) {
        return string();
    }

    int cnt = 0;
    for (int j = 0; j + 1 < count; ++j) {
        if (s[j] >= s[j + 1]) {
            cnt++;
        }
    }

    for (int i = 0; i + count - 1 < s.size(); ++i) {
        if (cnt == 0) {
            return s.substr(i, count);
        }
        if (i + count < s.size()) {
            cnt += s[i + count] >= s[i + count - 1];
            cnt -= s[i] >= s[i - 1];
        }
    }
    return string();
}

void ASCIIString::capitaliseVowels() {
    for (auto &i : s) {
        if (isalpha(i)) {
            i = static_cast<char>(toupper(i));
        }
    }
}

void ASCIIString::capitaliseConsonants() {
    for (auto &i : s) {
        if (isalpha(i)) {
            i = static_cast<char>(tolower(i));
        }
    }
}

string hex(char c) {
    std::stringstream sstream;
    sstream << std::hex << static_cast<int>(c);

    return sstream.str();
}

void ASCIIString::vowelsIntoHex() {
    string upd;

    for (auto &i : s) {
        char cur = tolower(i);
        set<int> vowels = {'a', 'e', 'y', 'i', 'o', 'u'};
        if (vowels.find(cur) != vowels.end()) {
            upd += hex(i);
        } else {
            upd += i;
        }
    }

    s = std::move(upd);
}

string roman(char c) {
    int cur = c - '0';

    switch (cur) {
        case 1:
            return ""1"";
        case 2:
            return ""11"";
        case 3:
            return ""111"";
        case 4:
            return ""15"";
        case 5:
            return ""5"";
        case 6:
            return ""51"";
        case 7:
            return ""511"";
        case 8:
            return ""5111"";
        case 9:
            return ""110"";
    }
}

void ASCIIString::romanDigits() {
    string upd;

    for (auto &i : s) {
        if (isdigit(i) && i != '0') {
            upd += roman(i);
        } else {
            upd += i;
        }
    }

    s = std::move(upd);
}

void ASCIIString::reverse() {
    reverse(0, s.size() - 1);
}

void ASCIIString::reverseInWords() {
    int lb = 0, rb = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isalpha(s[rb])) {
            ++rb;
        }
        reverse(lb, rb - 1);
        lb = rb;
    }
}

size_t ASCIIString::vowels() {
    set<int> vowels = {'a', 'e', 'i', 'o', 'u', 'y'};

    int cnt = 0;
    for (auto i : s) {
        i = tolower(i);
        if (vowels.count(i)) {
            ++cnt;
        }
    }
    return cnt;
}

size_t ASCIIString::consonants() {
    set<int> consonants = {'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z'};

    int cnt = 0;
    for (auto i : s) {
        i = toupper(i);
        if (consonants.count(i)) {
            ++cnt;
        }
    }
    return cnt;
}

char ASCIIString::minLetter() {
    char ans = numeric_limits<char>::max();
    for (auto i : s) {
        ans = min(ans, i);
    }
    return ans;
}

char ASCIIString::maxLetter() {
    char ans = 0;
    for (auto i : s) {
        ans = max(ans, i);
    }
    return ans;
}

void ASCIIString::changeRegister() {
    for (auto &i : s) {
        if (islower(i)) {
            i = toupper(i);
        } else if (isupper(i)) {
            i = tolower(i);
        }
    }
}

bool ASCIIString::isPalindrome() {
    for (int i = 0; i < s.size(); ++i) {
        if (s[i] != s[s.size() - i - 1]) {
            return false;
        }
    }
    return true;
}

size_t ASCIIString::digits() {
    int cnt = 0;
    for (auto i : s) {
        if (isdigit(i)) {
            ++cnt;
        }
    }
    return cnt;
}

size_t ASCIIString::letters() {
    int cnt = 0;
    for (auto i : s) {
        if (isalpha(i)) {
            ++cnt;
        }
    }
    return cnt;
}

map<char, int> ASCIIString::dictOfElements() {
    map<char, int> cnt;

    for (auto i : s) {
        ++cnt[i];
    }

    return cnt;
}

map<char, int> ASCIIString::dictOfDigits() {
    map<char, int> cnt;

    for (auto i : s) {
        if (isdigit(i)) {
            ++cnt[i];
        }
    }

    return cnt;
}

int ASCIIString::sumOfDigits() {
    int sum = 0;

    for (auto i : s) {
        if (isdigit(i)) {
            sum += i;
        }
    }

    return sum;
}

size_t ASCIIString::numberOfPunctuations() {
    size_t cnt = 0;

    for (auto i : s) {
        if (i == ',' || i == '.' || i == '?' || i == '!') {
            ++cnt;
        }
    }

    return cnt;
}

vector<size_t> ASCIIString::positionsSubstring(ASCIIString sub) {
    string cur = sub.s + '#' + s;

    vector<int> z (cur.size());
    for (int i = 1, l = 0, r = 0; i < cur.size(); ++i) {
        if (i <= r) {
            z[i] = min(r - i + 1, z[i - l]);
        }
        while (i+z[i] < cur.size() && cur[z[i]] == cur[i+z[i]]) {
            ++z[i];
        }
        if (i+z[i]-1 > r) {
            l = i, r = i + z[i] - 1;
        }
    }

    vector<size_t> ans;
    for (int i = 0; i + sub.s.size() + 1 < cur.size(); ++i) {
        if (z[i + sub.s.size() + 1] == sub.s.size()) {
            ans.push_back(i);
        }
    }
    return ans;
}

size_t ASCIIString::posSubstring(ASCIIString sub) {
    auto ans = positionsSubstring(sub);
    return ans.empty() ? -1 : ans[0];
}

size_t ASCIIString::numberOfWords() {
    int lb = 0, rb = 0, cnt = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isalpha(s[rb])) {
            ++rb;
        }
        lb = rb;
        ++cnt;
    }
    return cnt;
}

bool ASCIIString::isRightBracketSecuence() {
    int bln = 0;

    for (auto i : s) {
        if (i == '(') {
            ++bln;
        } else if (i == ')') {
            --bln;
        }
        if (bln < 0) {
            return false;
        }
    }
    return bln == 0;
}

size_t ASCIIString::numberOfNumbers() {
    int lb = 0, rb = 0, cnt = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isdigit(s[rb])) {
            ++rb;
        }
        lb = rb;
        ++cnt;
    }
    return cnt;
}

ASCIIString ASCIIString::palindromeString() {
    ASCIIString ans;

    int lb = 0, rb = 0, cnt = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isalpha(s[rb])) {
            ++rb;
        }
        if (ASCIIString(s.substr(lb, rb - 1)).isPalindrome()) {
            ans += s.substr(lb, rb - 1);
        }

        lb = rb;
        ++cnt;
    }

    return ans;
}

ASCIIString ASCIIString::capitalWords() {
    ASCIIString ans;

    int lb = 0, rb = 0, cnt = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isalpha(s[rb])) {
            ++rb;
        }
        if (lb < rb && isupper(s[lb])) {
            ans += s.substr(lb, rb - 1);
        }

        lb = rb;
        ++cnt;
    }

    return ans;
}

ASCIIString ASCIIString::digitsString() {
    ASCIIString ans;

    int lb = 0, rb = 0, cnt = 0;

    while (lb < s.size()) {
        while (rb < s.size() && isdigit(s[rb])) {
            ++rb;
        }
        if (lb < rb) {
            ans += s.substr(lb, rb - 1);
        }

        lb = rb;
        ++cnt;
    }

    return ans;
}

pair<ASCIIString, ASCIIString> ASCIIString::notInThese(const ASCIIString &first, const ASCIIString &second) {
    ASCIIString f_ans, s_ans;

    for (char c = 0; c <= numeric_limits<char>::max(); ++c) {
        if (!first.s.contains(c)) {
            f_ans += string(&"""" [c]);
        }
    }

    for (char c = 0; c <= numeric_limits<char>::max(); ++c) {
        if (!second.s.contains(c)) {
            s_ans += string(&"""" [c]);
        }
    }

    return {f_ans, s_ans};
}

ASCIIString ASCIIString::intersectionString(const ASCIIString &first, const ASCIIString &second) {
    map<char, int> cl, cr;

    for (auto i : first.s) {
        ++cl[i];
    }
    for (auto i : second.s) {
        ++cr[i];
    }

    ASCIIString ans;
    for (auto i : cl) {
        if (cr[i.first]) {
            ans += string(&"""" [ i.first]);
        }
    }
    return ans;
}

ASCIIString ASCIIString::unionString(const ASCIIString &first, const ASCIIString &second) {
    map<char, int> cl, cr;

    for (auto i : first.s) {
        ++cl[i];
    }
    for (auto i : second.s) {
        ++cr[i];
    }

    ASCIIString ans;
    for (auto i : cl) {
        ans += string(&"""" [ i.first]);
    }
    for (auto i : cr) {
        if (!cl[i.first]) {
            ans += string(&""""[i.first]);
        }
    }
    return ans;
}

int32_t main() {
    ASCIIString lol (""dc"");
}
"
TcD6SVdr,Untitled,kwest87,C#,Saturday 23rd of December 2023 10:53:10 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp6
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int goldCharacter;
            int crystalCharacter;
            int costCrystal = 5;
            int userInput;

            Console.Write(""Сколько у вас золота : "");
            goldCharacter = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine();
            Console.Write(""Сколько кристаллов вы хотите приобрести : "");
            userInput = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine();

            crystalCharacter = userInput;
            goldCharacter -= userInput * costCrystal;

            Console.WriteLine($""Куплено {crystalCharacter} кристаллов , осталось {goldCharacter} золота."");
        }
    }
}"
Vf4mueN6,Untitled,misterFanta,JavaScript,Saturday 23rd of December 2023 09:58:53 AM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Copy To Clipboard</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
    </style>
</head>
<body><button onclick=""copyRandomNumber()"">Copy ExpNo to clipboard memory</button>
<table>
    <?php for($i=0;$i<4;$i++): ?>
    <tr>
        <th>The number is: <?=$i; ?></th>
        <td>
            <p id='p1-$x'>Test<?=$i;?></p>
            <button onclick='copyToClipboard(""<?=$i;?>"")'>Copy <?=$i; ?></button>
        </td>
    </tr>
    <?php endfor; ?>
</table>
<script>
    let numbersToCopy = [0, 1, 2, 3];
 
    const copyToClipboard = async (text) => {
        try {
            await navigator.clipboard.writeText(text);
            console.log('Text copied to clipboard');
        } catch (err) {
            console.error('Failed to copy text: ', err);
        }
    };
 
    const copyRandomNumber = () => {
        if (!numbersToCopy.length) {
            numbersToCopy = [0, 1, 2, 3];
        }
        const randomIndex = Math.floor(Math.random() * numbersToCopy.length);
        copyToClipboard(numbersToCopy.splice(randomIndex, 1)[0]);
    };
</script>
 
</body>
</html>"
TA4R8kkr,flake.lock,charmonium,JSON,Saturday 23rd of December 2023 09:06:49 AM CDT,"{
  ""nodes"": {
    ""home-manager"": {
      ""inputs"": {
        ""nixpkgs"": ""nixpkgs""
      },
      ""locked"": {
        ""lastModified"": 1703265279,
        ""narHash"": ""sha256-5jVtOwyMH1FzclxHrsFWzBdB+VyjUUSu1wyZhZlR6WU="",
        ""owner"": ""nix-community"",
        ""repo"": ""home-manager"",
        ""rev"": ""07c322a7cff03267fd881adae1afe63367c5d608"",
        ""type"": ""github""
      },
      ""original"": {
        ""id"": ""home-manager"",
        ""type"": ""indirect""
      }
    },
    ""nixpkgs"": {
      ""locked"": {
        ""lastModified"": 1703013332,
        ""narHash"": ""sha256-+tFNwMvlXLbJZXiMHqYq77z/RfmpfpiI3yjL6o/Zo9M="",
        ""owner"": ""NixOS"",
        ""repo"": ""nixpkgs"",
        ""rev"": ""54aac082a4d9bb5bbc5c4e899603abfb76a3f6d6"",
        ""type"": ""github""
      },
      ""original"": {
        ""owner"": ""NixOS"",
        ""ref"": ""nixos-unstable"",
        ""repo"": ""nixpkgs"",
        ""type"": ""github""
      }
    },
    ""nixpkgs_2"": {
      ""locked"": {
        ""lastModified"": 1703013332,
        ""narHash"": ""sha256-+tFNwMvlXLbJZXiMHqYq77z/RfmpfpiI3yjL6o/Zo9M="",
        ""owner"": ""nixos"",
        ""repo"": ""nixpkgs"",
        ""rev"": ""54aac082a4d9bb5bbc5c4e899603abfb76a3f6d6"",
        ""type"": ""github""
      },
      ""original"": {
        ""owner"": ""nixos"",
        ""ref"": ""nixos-unstable"",
        ""repo"": ""nixpkgs"",
        ""type"": ""github""
      }
    },
    ""root"": {
      ""inputs"": {
        ""home-manager"": ""home-manager"",
        ""nixpkgs"": ""nixpkgs_2""
      }
    }
  },
  ""root"": ""root"",
  ""version"": 7
}
"
2Da50y7b,Save_image_to_delete,TonyR0XX,Lua,Saturday 23rd of December 2023 09:04:42 AM CDT,"--lua

-- Set Name for save image 
IMAGE_NAME = "" ITEM ""



-- Start
msg(""Move Mouse to item and press Enter or Space"")
wait(200)
local x, y = mouse_pos(""abs"")
CAPTURE_SIZE = 16
if x >= CAPTURE_SIZE and y >= CAPTURE_SIZE then
    local startX = x - (CAPTURE_SIZE / 2)
    local startY = y - (CAPTURE_SIZE / 2)
    local address = getimage(startX, startY, startX + CAPTURE_SIZE, startY + CAPTURE_SIZE, ""abs"")
    local filePath = [[Images\items\]] .. IMAGE_NAME .. "".bmp""
    saveimage(address, filePath)
    msg(""Done!"")
    deleteimage(address)
else
    msg(""Error"")
end"
5Q73s54z,Untitled,skaram,C++,Saturday 23rd of December 2023 08:45:43 AM CDT,"/// @author s_k_a_r_a

#include <bits/stdc++.h>

#ifndef Local
#define debug(...) 1337
#define endl '\n'
#endif

using namespace std;

#define int long long

typedef long long ll;
typedef long double ld;

using str = string;
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define sz(x) (int)(x).size()
template <typename T, typename U>
bool smin(T& a, U b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <typename T, typename U>
bool smax(T& a, U b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

#define type int

const double eps = 1e-7;

type sqr(type x) {
    return x * x;
}

int sign(double a, double b = 0) {
    if (a - b > eps)
        return 1;
    if (b - a > eps)
        return -1;
    return 0;
}

struct point {
    type x = 0, y = 0;

    point() = default;

    point(type x, type y) : x(x), y(y) {}

    point operator-(point t) const {
        return {x - t.x, y - t.y};
    }

    point operator+(point t) const {
        return {x + t.x, y + t.y};
    }

    type operator*(point t) const {
        return x * t.x + y * t.y;
    }

    type operator%(point t) const {
        return x * t.y - y * t.x;
    }

    point operator*(type t) const {
        return {x * t, y * t};
    }

    type dist2(point t) const {
        return sqr(x - t.x) + sqr(y - t.y);
    }

    double dist(point t) const {
        return sqrt(dist2(t));
    }

    type len2() const {
        return dist2({0, 0});
    }

    double len() const {
        return sqrt(len2());
    }
};

pair<double, double> lineToLine(point a, point da, point b, point db) {
    double n = (double)((b - a) % db) / (double)(da % db);
    double m = (double)((b - a) % db) / (double)(da % db);
    return {n, m};
}

vector<point> graham(vector<point> v) {
    point s = *min_element(all(v), [](auto a, auto b) { return sign(a.y, b.y) == -1 || (!sign(a.y, b.y) && sign(a.x, b.x) == -1); });
    sort(all(v), [&](auto a, auto b) {
        point sa = a - s;
        point sb = b - s;
        return sign(sa % sb) == 1 || (!sign(sa % sb) && sa.len2() < sb.len2());
    });
    vector<point> hull;
    for (int i = 0; i < sz(v); ++i) {
        point t = v[i];
        while (sz(hull) >= 2) {
            point c = t - hull.back();
            point p = hull.back() - hull[sz(hull) - 2];
            if (sign(p % c) != 1)
                hull.pop_back();
            else
                break;
        }
        hull.push_back(t);
    }
    return hull;
}

struct Line {
    type a = 0, b = 0, c = 0;

    Line() = default;

    Line(type a, type b, type c) : a(a), b(b), c(c) {}
};

bool lessByAngle(point a, point b) {
    if (sign(a.y) * sign(b.y) == 1 || (sign(a.y) * sign(b.y) == 0 && sign(a.x) * sign(b.y) != -1)) {
        if (a % b == 0 && sign(a.x) * sign(b.x) == -1)
            return a.x > b.x;
        return a % b > 0;
    }
    if (sign(b.y) == -1)
        return true;
    return false;
}

void solve() {
    int n, m;
    cin >> n >> m;
    vector<Line> lns(n);
    for (auto& [a, b, c] : lns)
        cin >> a >> b >> c;
    vector<point> h(m);
    for (auto& [x, y] : h)
        cin >> x >> y;
    h = graham(h);
    vector<int> ans;
    for (int t = 1; auto& [a, b, c] : lns) {
        int i = 0, j = 0;
        if (sz(h) != 1) {
            if (sz(h) == 2)
                j = 1;
            else {
                if (lessByAngle(h[1] - h[0], {-b, a})) {
                    int l = 0;
                    i = sz(h) - 1;
                    while (i - l > 1) {
                        int mid = (l + i) / 2;
                        if (lessByAngle(h[mid + 1] - h[mid], {-b, a}) && (h[mid + 1] - h[mid]) % point(-b, a) != 0)
                            l = mid;
                        else
                            i = mid;
                    }
                }
                j = 0;
                if (lessByAngle(h[1] - h[0], {b, -a})) {
                    int l = 0;
                    j = sz(h) - 1;
                    while (j - l > 1) {
                        int mid = (l + j) / 2;
                        if (lessByAngle(h[mid + 1] - h[mid], {b, -a}) && (h[mid + 1] - h[mid]) % point(b, -a) != 0)
                            l = mid;
                        else
                            j = mid;
                    }
                }
            }
        }
        if (sign(a * h[i].x + b * h[i].y + c) * sign(a * h[j].x + b * h[j].y + c) <= 0)
            ans.push_back(t);
        ++t;
    }
    cout << sz(ans) << endl;
    for (auto& i : ans)
        cout << i << ' ';
    cout << endl;
}

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int tt = 1;
    //    cin >> tt;
    while (tt--)
        solve();

    return 0;
}"
Hyd6NDmb,crontab,Legion_D,Bash,Saturday 23rd of December 2023 07:59:15 AM CDT,"0 3 * * * /mnt/MC/mc_reboot.sh
@reboot sleep 60 && /mnt/MC/tmux_minecraft.sh
"
xKmUdBWd,mc_reboot.sh,Legion_D,Bash,Saturday 23rd of December 2023 07:57:05 AM CDT,tmux send-keys -t MCS:1.1 'stop' Enter
7jNsqphZ,Untitled,BC99168,Python,Saturday 23rd of December 2023 07:55:39 AM CDT,"import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
import keras 
from keras.models import Sequential
from keras.layers import LSTM
from keras.layers import Dense
from keras.layers import Dropout
from sklearn.model_selection import train_test_split
import numpy as np
import csv
import os

def kaggle_error(y_true, y_pred):
    ans = 0.0
    for i in range(len(y_true)):
        ans += 3*abs(y_true[i][0]-y_pred[i][0])*(abs(y_true[i][0]-1/3)+abs(y_true[i][0]-2/3))
    ans /= float(len(y_true))
    return ans

def compute_file_amount(arrtest):
    totalfile = 0
    name1 = """"
    name2 = """"
    for subname in range(1001, 19092):  # for each station 1001, 19092
        if subname < 10000:
            name1 = ""5001"" + ""0"" + str(subname) + "".npy""
            name2 = ""5001"" + ""0"" + str(subname) + ""_label.npy""
        else:
            name1 = ""5001"" + str(subname) + "".npy""
            name2 = ""5001"" + str(subname) + ""_label.npy""
        if(os.path.isfile(name1) == True) and (os.path.isfile(name2) == True):
            if(need_file(arrtest, subname) == True):
                totalfile += 1
    return totalfile

def init_csvarr(csvarr, totalfile):
    for i in range(totalfile):
        for j in range(8):
            for k in range(72):
                csvarr[i][j][k] = 1

def init_namearr(arrtest):
    idx = 0
    name1 = """"
    name2 = """"
    for subname in range(1001, 19092):  # for each station 1001, 19092
        if subname < 10000:
            name1 = ""5001"" + ""0"" + str(subname) + "".npy""
            name2 = ""5001"" + ""0"" + str(subname) + ""_label.npy""
        else:
            name1 = ""5001"" + str(subname) + "".npy""
            name2 = ""5001"" + str(subname) + ""_label.npy""
        if(os.path.isfile(name1) == True) and (os.path.isfile(name2) == True):
            if(need_file(arrtest, subname) == True):
                namearr[idx] = subname
                idx += 1

def need_file(arrtest, subname):
    for i in arrtest:
        stest = str((int)(i-500100000))
        if stest == str((int)(subname)):
            return True
    return False

def init_x_y(arr1, arr2, len1, x,y):
    for i in range(len1):
        x[i][0] = arr1[i][1]/10
        day = (int)(arr1[i][0])
        if day == 0:
            day = 7
        x[i][day] = 1
        x[i][8] = (1 if x[i][6] == 1 or x[i][7] == 1 else 0)
        y[i] = arr2[i]/arr1[i][2]

def init_x_y_train(x_train, y_train, n_steps, train_len):
    for i in range(n_steps,train_len):
        for j in range(i-n_steps, i):
            x_train[i-n_steps][j-i+n_steps] = x[j]
        y_train[i-n_steps] = y[i]

def init_predict_x(n_steps, predict_x):
    for i in range(1,8):
        for j in range(72):
            t_x = np.zeros(9)
            t_x[0] = j*20/60/10
            t_x[i] = 1
            t_x[8] = (1 if i == 6 or i == 7 else 0)  # I ignore holiday after 11/20 here :)
            for k in range(n_steps):
                predict_x[((i-1)*72+j+1+k)%504][n_steps-1-k] = t_x

def output_to_csv(arrtest, totalfile, namearr, csvarr):
    dayarr = [6,7,1,2,1,2,3,4,5,6,7]
    datearr = [""1021"",""1022"",""1023"",""1024"",""1211"",""1212"",""1213"",""1214"",""1215"",""1216"",""1217""]
    minarr = [""00"",""20"",""40""]
    with open('output.csv', 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow([""id"",""sbi""])
        for dayid in range(11):
            for id in range(totalfile):
                found = False
                for i in arrtest:
                    stest = str((int)(i-500100000))
                    if stest == str((int)(namearr[id])):
                        found = True
                        break
                if found == False:
                    continue
                #print(""day=10/"",datearr[dayid],"", id="",id)
                for min20 in range(72):
                    s = ""2023""+datearr[dayid]+""_5001""
                    if(namearr[id] < 10000):
                        s = s+""0""
                    s = s+str((int)(namearr[id]))+""_""
                    hour = (int)(min20/3)
                    minute = min20%3
                    if(hour < 10):
                        s = s+""0""
                    s = s+str(hour)+"":""+minarr[minute]
                    writer.writerow([s,csvarr[id][dayarr[dayid]][min20]])    



# main
arrtest = np.loadtxt(""sno_test_set.txt"")
totalfile = compute_file_amount(arrtest)
csvarr = np.zeros([totalfile, 8, 72])  # file amount: totalfile, Monday to Sunday: [1~7], 20minutes: min20
namearr = np.zeros(totalfile)
init_csvarr(csvarr, totalfile)
init_namearr(arrtest)

csvcnt = 0
for subname in range(1001, 1003):  # for each station 1001, 19092
    name1 = """"
    name2 = """"
    if subname < 10000:
        name1 = ""5001"" + ""0"" + str(subname) + "".npy""
        name2 = ""5001"" + ""0"" + str(subname) + ""_label.npy""
    else:
        name1 = ""5001"" + str(subname) + "".npy""
        name2 = ""5001"" + str(subname) + ""_label.npy""
    if (os.path.isfile(name1) and os.path.isfile(name2)) == False:
        if (need_file(arrtest, subname) == False):
            continue
    print(""exist subname = "",subname)

    # pre-process
    arr1 = np.load(name1)
    arr2 = np.load(name2)
    len1 = len(arr1) #56775 = 757 * 75
    len2 = len(arr2)
    x = np.zeros([len1,9])  # hour(per minute)/10, Monday to Sunday(1~7), holiday(10/09, 10/10, [6,7])
    y = np.zeros(len1)
    init_x_y(arr1, arr2, len1, x,y)
    
    # Adding LSTM layer
    n_steps = 20
    n_features = 9
    model = Sequential()
    model.add(LSTM(256,return_sequences=False,input_shape=(n_steps,n_features)))
    model.add(Dense(1, activation=""linear""))
    optimizer = tf.keras.optimizers.Adam(clipvalue=1.0)
    model.compile(optimizer=optimizer,loss=kaggle_error,metrics=[kaggle_error])
    
    # train
    train_len = 12000
    x_train = np.zeros([train_len-n_steps,n_steps,n_features])
    y_train = np.zeros([train_len-n_steps])
    init_x_y_train(x_train, y_train, n_steps, train_len)
    (X_train, X_test, Y_train, Y_test) = train_test_split(x_train, y_train, test_size=0.1, random_state=1126)
    history = model.fit(X_train,Y_train, validation_data=(X_test, Y_test),batch_size=64,epochs=3) # can be change like 64,50
 
    # predict
    predict_x = np.zeros([504, n_steps, n_features])  # there are 504 20minutes in one week
    init_predict_x(n_steps, predict_x)
    result = model.predict(predict_x)
    # re-predict if the result is a piace of shit
    repeat_time = 0

    # if there is nan, then adjust result = 1
    for i in range(len(result)):
        if np.isnan(result[i]):
            for tmptmp in result:
                tmptmp = 1
            break

    # store and adjust result
    id_r = 0
    for i in range(1,8):
        for j in range(72):
            if result[id_r] > 1:
                result[id_r] = 1
            if result[id_r] < 0:
                result[id_r] = 0
            csvarr[csvcnt][i][j] = arr1[2][2] * result[id_r]
            id_r += 1
    csvcnt += 1

#print(csvarr[0])


#testcsv
output_to_csv(arrtest, totalfile, namearr, csvarr)"
hN8XaPBD,tmux_minecraft.sh,Legion_D,Bash,Saturday 23rd of December 2023 07:54:06 AM CDT,"tmux new -s MCS -d

tmux rename-window Cerber_MC
tmux send-keys -t MCS:1.1 'cd /mnt/MC/GT_New_Horizons_2.5.1_Server_Java_17-21/ && ./startserver-java9.sh' Enter
tmux split-window -h -t MCS:1.1
tmux send-keys -t MCS:1.2 'nmon' Enter 'mndct'"
kru9ZRqF,main.cpp,Piotoru,C++,Saturday 23rd of December 2023 07:30:34 AM CDT,"#include ""SFML/Graphics.hpp""
#include ""SFML/Window.hpp""

struct Scene
{
  sf::RectangleShape body;
  sf::CircleShape tire[2];
  sf::ConvexShape roof;
};

/*
+--------------------------->
|           __________                 proporcje
|          /         |     ^              0.3
|    +----/----------+     |
|    |               |     |  carHeight   0.5
|    +---------------+     |
|       O        O         V              0.2
|    <--------------->
|        carLength
|
V
*/

Scene createScene()
{
  Scene s;

  int xpos = 200;
  int ypos = 100;

  int carLength = 150;
  int carHeight = 50;

  float rP = 0.3;
  float bP = 0.5;
  float tP = 0.2;

  s.body.setSize( sf::Vector2f(carLength, bP*carHeight));
  s.body.setPosition({static_cast<float>(xpos), ypos+rP*carHeight});

  s.tire[0].setRadius(tP/2 * carHeight);
  s.tire[1].setRadius(tP/2 * carHeight);

  s.tire[0].setPosition({static_cast<float>(xpos + 0.2*carLength), ypos + (rP+bP)*carHeight });
  s.tire[1].setPosition({static_cast<float>(xpos + 0.7*carLength), ypos + (rP+bP)*carHeight});

  s.roof.setPointCount(4);
  s.roof.setPoint(0, sf::Vector2f(xpos+0.4*carLength, ypos + rP*carHeight));
  s.roof.setPoint(1, sf::Vector2f(xpos+0.5*carLength, ypos ));
  s.roof.setPoint(2, sf::Vector2f(xpos+carLength, ypos ));
  s.roof.setPoint(3, sf::Vector2f(xpos+carLength, ypos + rP*carHeight));


  return s;
}

void drawScene(sf::RenderWindow & win, const Scene & scene)
{
  win.draw(scene.body);
  win.draw(scene.tire[0]);
  win.draw(scene.tire[1]);
  win.draw(scene.roof);
}

int main() {
  sf::RenderWindow window(sf::VideoMode(sf::Vector2u(200, 200)), ""SFML works!"");
  sf::CircleShape shape(100.f);
  shape.setFillColor(sf::Color::Green);

  while (window.isOpen()) {
    sf::Event event;
    while (window.pollEvent(event)) {
      if (event.type == sf::Event::Closed) {
        window.close();
      }
    }
    window.clear();
    window.draw(shape);
    window.display();
  }
  return 0;
}
"
3UxPSijq,eichenberg links,OttoTe,Lua,Saturday 23rd of December 2023 07:29:50 AM CDT,"local SIGNAL_HP = ""hp""
local SIGNAL_HPA = ""hpa""
local SIGNAL_SH = ""sh""
local SIGNAL_ERS = ""ers""
local SIGNAL_ZA = ""za""
local WEICHE_GERADE = 0
local WEICHE_ABZW = 1


signale = {
    -- Heimbach
	[""9""]    = {x = 16,  y = 23, richtung = ""l"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 0},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 1},
    },
	[""90""]    = {x = 16,  y = 25, richtung = ""l"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 2},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 3},
    },
	[""11""]    = {x = 16,  y = 27, richtung = ""l"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 4},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 5},
    },
	[""110""]    = {x = 16,  y = 29, richtung = ""l"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 6},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 7},
    },
	[""10""]    = {x = 5,  y = 25, richtung = ""r"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 8},
        stelle_hpa  = {pc = ""heimbach"", au = ""left"", fb = 0},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 9},
    },
	[""100""]   = {x = 5,  y = 23, richtung = ""r"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 10},
        stelle_hpa  = {pc = ""heimbach"", au = ""left"", fb = 1},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 11},
    },
	-- Pottingen
	[""13""]    = {x = 29,  y = 23, richtung = ""l"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 12},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 13},
    },
	[""12""]   = {x = 29,  y = 25, richtung = ""r"",
        stelle_hp  = {pc = ""heimbach"", au = ""right"", fb = 14},
        stelle_ers  = {pc = ""heimbach"", au = ""right"", fb = 15},
    },


	-- Esigs
	[""A""]    = {x = 35,  y = 25, richtung = ""r"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 9},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 9},
        haltAbschnitte = {""012""},
    },
	[""AA""]    = {x = 35,  y = 23, richtung = ""r"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 10},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 10},
        haltAbschnitte = {""012""},
    },
	[""C""]    = {x = 35,  y = 27, richtung = ""r"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 11},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 11},
        haltAbschnitte = {""012""},
    },
	
	
	-- Asigs
	[""P1""]    = {x = 67,  y = 29, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 0},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 0},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 0},
    },
	[""P2""]    = {x = 67,  y = 27, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 1},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 1},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 1},
    },
	[""P3""]    = {x = 67,  y = 25, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 2},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 2},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 2},
    },
	[""P4""]    = {x = 67,  y = 23, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 3},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 3},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 3},
    },
	[""P5""]    = {x = 67,  y = 21, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 4},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 4},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 4},
    },
	[""P6""]    = {x = 67,  y = 19, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 5},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 5},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 5},
    },
	[""P7""]    = {x = 67,  y = 17, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 6},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 6},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 6},
    },
	[""P8""]    = {x = 67,  y = 15, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 7},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 7},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 7},
    },
	[""P9""]    = {x = 67,  y = 13, richtung = ""l"",
        stelle_hp  = {pc = ""signale"", au = ""left"", fb = 8},
        stelle_ers  = {pc = ""signale"", au = ""front"", fb = 8},
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 8},
    },
	
	
	-- Zustimmungen
	[""N1""]    = {x = 81,  y = 29, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 0},
    },
	[""N2""]    = {x = 81,  y = 27, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 1},
    },
	[""N3""]    = {x = 81,  y = 25, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 2},
    },
	[""N4""]    = {x = 81,  y = 23, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 3},
    },
	[""N5""]    = {x = 81,  y = 21, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 4},
    },
	[""N6""]    = {x = 81,  y = 19, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 5},
    },
	[""N7""]    = {x = 81,  y = 17, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 6},
    },
	[""N8""]    = {x = 81,  y = 15, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 7},
    },
	[""N9""]    = {x = 81,  y = 13, richtung = ""l"",
        stelle_za  = {pc = ""signale"", au = ""right"", fb = 8},
    },
	

	-- Sperrsignale
	[""3II""]    = {x = 74,  y = 25, richtung = ""r"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 9},
    },
	[""41II""]    = {x = 39,  y = 23, richtung = ""r"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 10},
    },
	[""42I""]    = {x = 43,  y = 23, richtung = ""l"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 11},
    },
	[""42II""]    = {x = 48,  y = 23, richtung = ""r"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 12},
    },
	[""52II""]    = {x = 48,  y = 21, richtung = ""r"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 13},
    },
	[""53I""]    = {x = 57,  y = 21, richtung = ""l"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 14},
    },
	[""23II""]    = {x = 54,  y = 27, richtung = ""r"",
        stelle_sh  = {pc = ""signale"", au = ""back"", fb = 15},
    },
}
bahnuebergaenge = {
	-- Heimbach
   [""BUE""] = {pc = ""heimbach"", au = ""left"", fb = 15, x = 51, y = 18, hoehe = 7},
}

weichen = {
	--Heimbach
    [""W101L""]   = {pc = ""heimbach"", au = ""front"", fb = 0},
    [""W101R""]   = {pc = ""heimbach"", au = ""front"", fb = 1},
    [""W102R""]   = {pc = ""heimbach"", au = ""front"", fb = 2},
    [""W102L""]   = {pc = ""heimbach"", au = ""front"", fb = 3},
    [""KrI""]   = {pc = ""heimbach"", au = ""back"", fb = 0},

	-- Bahnübergänge
    [""BUE""]   = {pc = ""signale"", au = ""right"", fb = 10},
	
	-- Eichenberg
    [""W1L""]   = {pc = ""weiche"", au = ""right"", fb = 0},
    [""W2L""]   = {pc = ""weiche"", au = ""right"", fb = 1},
    [""W4R""]   = {pc = ""weiche"", au = ""right"", fb = 2},
    [""W5R""]   = {pc = ""weiche"", au = ""right"", fb = 3},
    [""W6R""]   = {pc = ""weiche"", au = ""right"", fb = 4},
    [""W7R""]   = {pc = ""weiche"", au = ""right"", fb = 5},
    [""W8R""]   = {pc = ""weiche"", au = ""right"", fb = 6},
    [""W9L""]   = {pc = ""weiche"", au = ""right"", fb = 7},
    [""W10G""]   = {pc = ""weiche"", au = ""right"", fb = 8},
    [""W11R""]   = {pc = ""weiche"", au = ""right"", fb = 9},
    [""W12L""]   = {pc = ""weiche"", au = ""right"", fb = 10},
    [""W13R""]   = {pc = ""weiche"", au = ""right"", fb = 11},
    [""W14R""]   = {pc = ""weiche"", au = ""right"", fb = 12},
    [""W15L""]   = {pc = ""weiche"", au = ""right"", fb = 13},
    [""W16L""]   = {pc = ""weiche"", au = ""right"", fb = 14},
    [""W17L""]   = {pc = ""weiche"", au = ""right"", fb = 15},
	
	[""W1R""]   = {pc = ""weiche"", au = ""front"", fb = 0},
    [""W2R""]   = {pc = ""weiche"", au = ""front"", fb = 1},
    [""W4L""]   = {pc = ""weiche"", au = ""front"", fb = 2},
    [""W5L""]   = {pc = ""weiche"", au = ""front"", fb = 3},
    [""W6L""]   = {pc = ""weiche"", au = ""front"", fb = 4},
    [""W7L""]   = {pc = ""weiche"", au = ""front"", fb = 5},
    [""W8L""]   = {pc = ""weiche"", au = ""front"", fb = 6},
    [""W9R""]   = {pc = ""weiche"", au = ""front"", fb = 7},
    [""W10A""]   = {pc = ""weiche"", au = ""front"", fb = 8},
    [""W11L""]   = {pc = ""weiche"", au = ""front"", fb = 9},
    [""W12R""]   = {pc = ""weiche"", au = ""front"", fb = 10},
    [""W13L""]   = {pc = ""weiche"", au = ""front"", fb = 11},
    [""W14L""]   = {pc = ""weiche"", au = ""front"", fb = 12},
    [""W15R""]   = {pc = ""weiche"", au = ""front"", fb = 13},
    [""W16R""]   = {pc = ""weiche"", au = ""front"", fb = 14},
    [""W17R""]   = {pc = ""weiche"", au = ""front"", fb = 15},
}

fsZiele = {
	-- Heimbach
    [""NGO""]  = {x = 01, y = 23, laenge = 2},
    [""NGOG""]  = {x = 01, y = 25, laenge = 2},
    
	-- Eichenberg FAPpening
    [""S9""]  = {x = 77, y = 13, laenge = 2},
    [""S8""]  = {x = 77, y = 15, laenge = 2},
    [""S7""]  = {x = 77, y = 17, laenge = 2},
    [""S6""]  = {x = 77, y = 19, laenge = 2},
    [""S5""]  = {x = 77, y = 21, laenge = 2},
    [""S4""]  = {x = 77, y = 23, laenge = 2},
    [""S3""]  = {x = 77, y = 25, laenge = 2},
    [""S2""]  = {x = 77, y = 27, laenge = 2},
    [""S1""]  = {x = 77, y = 29, laenge = 2},
}

gleise = {
	-- Heimbach
	[""9""]   = {x = 18, y = 23, pc = ""heimbach"", au = ""front"", fb = 4, text = ""-----------""},--1500
	[""90""]   = {x = 18, y = 25, pc = ""heimbach"", au = ""front"", fb = 5, text = ""-----------""},--1501
	[""10""]   = {x = 1, y = 25, pc = ""heimbach"", au = ""front"", fb = 6, text = ""<<--""},
	[""100""]   = {x = 1, y = 23, pc = ""heimbach"", au = ""front"", fb = 7, text = ""<<--""},
	[""W101S""]   = {x = 7, y = 25, pc = ""heimbach"", au = ""front"", fb = 8, text = ""--""},
	[""W101L""]   = {x = 9, y = 25, pc = ""heimbach"", au = ""front"", fb = 9, text = ""--""},
	[""W102S""]   = {x = 7, y = 23, pc = ""heimbach"", au = ""front"", fb = 10, text = ""----""},
	[""W102L""]   = {x = 11, y = 23, pc = ""heimbach"", au = ""front"", fb = 11, text = ""-----""},
	[""KrI1""]   = {x = 11, y = 25, pc = ""heimbach"", au = ""front"", fb = 12, text = ""-""},
	[""KrI3""]   = {x = 13, y = 25, pc = ""heimbach"", au = ""front"", fb = 12, text = ""---""},
	[""KrI2""]   = {x = 12, y = 25, pc = ""heimbach"", au = ""front"", fb = 13, text = ""\\""},
	[""13""]   = {x = 31, y = 23, pc = ""heimbach"", au = ""front"", fb = 14, text = ""----""},
	[""12""]   = {x = 31, y = 25, pc = ""heimbach"", au = ""front"", fb = 15, text = ""----""},

}
fsAufloeser = {
	-- Heimbach
	[""9""] = {pc = ""heimbach"", au = ""left"", fb = 2}, --1513
	[""90""] = {pc = ""heimbach"", au = ""left"", fb = 3}, --1514
	[""10""] = {pc = ""heimbach"", au = ""left"", fb = 4}, --1512
	[""100""] = {pc = ""heimbach"", au = ""left"", fb = 5}, --1515
	[""12""] = {pc = ""heimbach"", au = ""front"", fb = 15}, --1510
	[""13""] = {pc = ""heimbach"", au = ""front"", fb = 14}, --1511
}
fahrstrassen = {
	-- Heimbach
    [""10.12""] = {
		gleise = {""90"",""W101L"",""W101S"",""KrI1"",""KrI3""},
		signale = {
			[""10""] = SIGNAL_HP
		},
		haltAbschnitte = {""W101L""},
		aufloeseAbschn = ""90"",
		fsTeile = {""90"",""W101L"",""W101S"",""KrI1"",""KrI3""},
		weichen = {""W101L"",""W102L""},
		anstoss = {pc = ""heimbach"", au = ""front"",  fb = 6},
	},
    [""9.NGO""] = {
		gleise = {""W102L"",""W102S"",""100""},
		signale = {
			[""9""] = SIGNAL_HP
		},
		haltAbschnitte = {""W102S""},
		aufloeseAbschn = ""100"",
		fsTeile = {""100"",""W102L"",""W102S""},
		weichen = {""W101L"",""W102L""},
		anstoss = {pc = ""heimbach"", au = ""front"",  fb = 4},
	},
    [""90.NGOG""] = {
		gleise = {""W101L"",""W101S"",""KrI1"",""10""},
		signale = {
			[""90""] = SIGNAL_HP
		},
		haltAbschnitte = {""W101L""},
		aufloeseAbschn = ""10"",
		fsTeile = {""W101L"",""W101S"",""KrI1"",""KrI3"",""10""},
		weichen = {""W101L"",""W102L""},
	},
    [""100.AA""] = {
		gleise = {""W102L"",""W102S"",""9"",""13""},
		signale = {
			[""100""] = SIGNAL_HP
		},
		haltAbschnitte = {""W102S""},
		aufloeseAbschn = ""13"",
		fsTeile = {""W102L"",""W102S"",""9"",""13""},
		weichen = {""W101L"",""W102L""},
	},
	
	[""13.9""] = {
		gleise = {""9""},
		signale = {
			[""13""] = SIGNAL_HP
		},
		haltAbschnitte = {""9""},
		aufloeseAbschn = ""13"",
		fsTeile = {""9""},
		anstoss = {pc = ""heimbach"", au = ""front"",  fb = 14},
	},
	[""12.A""] = {
		gleise = {""12""},
		signale = {
			[""12""] = SIGNAL_HP
		},
		haltAbschnitte = {""12""},
		aufloeseAbschn = ""12"",
		fsTeile = {""12""},
		anstoss = {pc = ""heimbach"", au = ""front"",  fb = 5},
	},
	
	-- Einfahrten
	[""A.S1""] = {
		gleise = {""G1"",""A""},
		signale = {
			[""A""] = SIGNAL_HP
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G1"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W9R"",""W10G""},
		fsTeile = {""G1"",""A""},
	},
	[""A.S2""] = {
		gleise = {""G2"",""A""},
		signale = {
			[""A""] = SIGNAL_HP
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W9R"",""W10A""},
		fsTeile = {""G2"",""A""},
	},
	[""A.S3""] = {
		gleise = {""G3"",""A""},
		signale = {
			[""A""] = SIGNAL_HP
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W9L""},
		fsTeile = {""G3"",""A""},
	},
	[""A.3II""] = {
		gleise = {""G3"",""A""},
		signale = {
            [""A""] = SIGNAL_HPA
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W9L""},
		fsTeile = {""G3"",""A""},
	},
	[""A.S4""] = {
		gleise = {""G4"",""A""},
		signale = {
			[""A""] = SIGNAL_HP
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G4"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5L"",""W6L"",""W7R"",""W8R"",""W13R"",""W14R""},
		fsTeile = {""G4"",""A""},
	},
	[""A.S5""] = {
		gleise = {""G5"",""A""},
		signale = {
			[""A""] = SIGNAL_HP
		},
		haltAbschnitte = {""W2S""},
		aufloeseAbschn = ""G5"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5L"",""W6L"",""W7R"",""W8R"",""W11L"",""W13L"",""W14L""},
		fsTeile = {""G5"",""A""},
	},
	-- Gegengleis
		[""AA.S1""] = {
		gleise = {""G1"",""AA""},
		signale = {
			[""AA""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G1"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9R"",""W10G""},
		fsTeile = {""G1"",""A""},
	},
	[""AA.S2""] = {
		gleise = {""G2"",""AA""},
		signale = {
			[""AA""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9R"",""W10A""},
		fsTeile = {""G2"",""AA""},
	},
	[""AA.S3""] = {
		gleise = {""G3"",""AA""},
		signale = {
			[""AA""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9L""},
		fsTeile = {""G3"",""AA""},
	},
	[""AA.S4""] = {
		gleise = {""G4"",""AA""},
		signale = {
			[""AA""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G4"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W7R"",""W8R"",""W13R"",""W14R""},
		fsTeile = {""G4"",""AA""},
	},
	[""AA.S5""] = {
		gleise = {""G5"",""AA""},
		signale = {
			[""AA""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G5"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W7R"",""W8R"",""W11L"",""W13L"",""W14L""},
		fsTeile = {""G5"",""AA""},
	},
	-- Ausfahrten
		[""P1.13""] = {
		gleise = {""G1"",""AA""},
		signale = {
			[""P1""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G1"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9R"",""W10G""},
		fsTeile = {""G1"",""A""},
	},
	[""P2.13""] = {
		gleise = {""G2"",""AA""},
		signale = {
			[""P2""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9R"",""W10A""},
		fsTeile = {""G2"",""AA""},
	},
	[""P3.13""] = {
		gleise = {""G3"",""AA""},
		signale = {
			[""P3""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G2"",
		weichen = {""W1R"",""W2R"",""W4R"",""W5R"",""W6R"",""W9L""},
		fsTeile = {""G3"",""AA""},
	},
	[""P4.13""] = {
		gleise = {""G4"",""AA""},
		signale = {
			[""P4""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G4"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W7R"",""W8R"",""W13R"",""W14R""},
		fsTeile = {""G4"",""AA""},
	},
	[""P5.13""] = {
		gleise = {""G5"",""AA""},
		signale = {
			[""P5""] = SIGNAL_HP
		},
		haltAbschnitte = {""W1L""},
		aufloeseAbschn = ""G5"",
		weichen = {""W1L"",""W2L"",""W4R"",""W5R"",""W6R"",""W7R"",""W8R"",""W11L"",""W13L"",""W14L""},
		fsTeile = {""G5"",""AA""},
	},
}
gleisbildDatei = ""gleisbild.txt""
stellwerkName = ""Eichenberg_links""
bildschirm = ""top""
modem = ""bottom""

speichereFahrstrassen = false
"
LTetHWsb,command bot WA,ghiwar,C,Saturday 23rd of December 2023 07:25:38 AM CDT,"Halo Lee 👋, Kenalin aku Sansekai.

Sansekai merupakan layanan Chatbot Whatsapp sederhana yang dapat membantu kamu.

Follow channel whatsapp Sansekai Info untuk mendapat update terbaru
https://whatsapp.com/channel/0029VaDxwA5FHWpvvm5uay0Y

• Jumlah user aktif hari ini: 184

Info Bot Commands
.menu
.donasi
.owner
.rules
.ping
.speedtest
.getsschat
.listgrup
.limit
.infopremium

AI Commands
.animedif prompt
.stabledif prompt
.imagine prompt
.dalle prompt
.chatgpt query
.img2prompt
.audio2text
.jadiwebtoon
.jadianime
.jaditua
.jadidisney
.jadichibi
.jadihoror
.jadizombie
.jadicomic
.femalehair
.malehair
.ai-emoji
.warnain
.remini
.ocr
.removebg
.random-ai (send images made by AI)

Downloader & Search Commands
.whatsong reply audio
.ytmp4 link yt
.ytmp3 link yt
.ig link ig
.igstalk @username
.igstory link ig
.tiktok link tiktok
.douyin link douyin
.ttmp3 link tiktok
.twitter link twitter
.fb link fb
.image query
.google query
.pddikti nama atau nim mahasiswa
.playmp3 judul lagu
.pinterest query
.pindl link pinterest
.pixivdl link pixiv
.ytsearch query
.gifsearch query
.caristicker query
.lirik query
.shortlink linkweb
.linesticker link line sticker only
.jadwalsholat nama kota

Fun, Primbon, Random & Analyzer Commands
.gaycek nama
.lesbicek nama
.qrreader
.meme
.memeindo
.pantun
.katabijak
.quotes
.motivasi
.renungan
.fckmylife
.ramalpasangan nama1 dan nama2
.artinama nama kamu
.jodoh namamu dan nama pasanganmu
.tebakgender nama
.cekzodiak nama tgl-bulan-tahun

Sticker Commands
.sticker
.stickernobg
.circlesticker
.memesticker teks bawah | teks atas
.stickerwm teks | teks
.remakewm teks | teks
.emojimix emoji+emoji
.stickerfire
.triggeredsticker
.ripsticker
.qc teks
.attp teks
.ttp teks

Weebs Commands
.animeinfo judul anime
.mangainfo judul manga
.kusonime judul anime
.whatanime
.sauce
.nhentai code
.randomwaifu
.randommilf  
.randomfurry 
.randomyaoi 
.randomyuri 
.randomhusbu
.randomhentai 
.randomvtuber
.hololive

Maker & Media Commands
.storyin
.toimg
.tomp3
.8daudio
.8daudio2
.tomp4
.tourl
.qrmaker teks
.mememaker teks atas | teks bawah
.mememaker2 teks
.ssweb link web
.mascot teks
.blackpink teks
.wetglass teks
.logogaming teks
.logoff teks
.goldplaybutton teks
.grafiti teks
.neon teks
.thunder teks
.matrix teks
.colorful teks
.comic teks
.hackertext teks
.googletext teks
.bloodtext teks
.phub teks | teks

Image Effect Commands
.grayscaleimage
.fisheye
.distort
.pixel
.negativeimage
.spread
.equalize
.motionblurimage
.kamui level
.emboss
.contrast
.oilpainting
.sketch

Education, Information, Tools Commands
.beritahariini
.infogempa
.cekresi ekspedisi nomor_resi
.toromaji reply chat
.translate kode bhs reply chat  
.kodebahasa  
.nulis
.cuaca nama kota
.wikipedia query
.kbbi query
.readmore teks1|teks2
.tts kodebahasa teks
.my

Group Commands
.warn @tagmember
.delwarn @tagmember
.lihat reply pesan sekali lihat
.linkgrup
.afk reason
.mute
.unmute
.closegrup
.opengrup
.nsfw on/off
.tagall
.del"
FXVKALP6,fahrstrassenDatei,OttoTe,Lua,Saturday 23rd of December 2023 07:22:04 AM CDT,"local dateiname = ""fahrstrassen.tmp""

leseFahrstrassen = function()
    if not fs.exists(dateiname) then
        return {}
    end
    local datei = fs.open(dateiname, ""r"")
    local fsArray = {}
    
    repeat
        local line = datei.readLine()
        if line ~= nil then
            table.insert(fsArray, line)
        end
    until line == nil
    
    datei.close()
    return fsArray
end

findeFahrstrasse = function(name)
    if not fs.exists(dateiname) then
        return {}
    end
    local datei = fs.open(dateiname, ""r"")
    
    repeat
        local line = datei.readLine()
        if line == name then
            datei.close()
            return true
        end
    until line == nil
    
    datei.close()
    return false
end

speichereFahrstrasse = function(name)
    if findeFahrstrasse(name) then
        return
    end

    local datei = fs.open(dateiname, ""a"")
    datei.writeLine(name)
    datei.close()
end

loescheFahrstrasse = function(name)
    local fahrstrassen = leseFahrstrassen()
    local datei = fs.open(dateiname, ""w"")
    for i, fahrstrasse in ipairs(fahrstrassen) do
        if fahrstrasse ~= name then
            datei.writeLine(fahrstrasse)
        end
    end
    datei.close()
end

leereDatei = function()
    local datei = fs.open(dateiname, ""w"")
    datei.write("""")
    datei.close()
end
"
HXd5Ci4G,events,OttoTe,Lua,Saturday 23rd of December 2023 07:21:41 AM CDT,"local eventData = {}

local function listenForCharPressed()
    local event, character = os.pullEvent(""char"")
    eventData = {
        event = event,
        char = character
    }
end
local function listenForRednetReceive()
    local id, msg, proto = rednet.receive()
	if msg == ""reset"" then
		os.reboot()
	end
    eventData = {
        id = id,
        msg = msg,
        protocol = proto
    }
end
local function listenForMonitorTouch()
    local event, side, x, y = os.pullEvent(""monitor_touch"")
    eventData = {
        event = event,
        size = size,
        x = x,
        y = y,
    }
end
local function listenForTimerEvent()
    local event, id = os.pullEvent(""timer"")
    eventData = {
        event = event,
        id = id,
    }
end
local function listenForRedstoneChange()
    local event = os.pullEvent(""redstone"")
    eventData = {
        event = event,
    }
end

listen = function(handlers)
    repeat
        local eventNumber = parallel.waitForAny(
            listenForCharPressed,
            listenForRednetReceive,
            listenForMonitorTouch,
            listenForTimerEvent,
            listenForRedstoneChange
        )
        
        if type(handlers.beforeHook) == ""function"" then
            handlers.beforeHook()
        end
        
        if eventNumber == 1 and type(handlers.onCharEvent) == ""function"" then
            handlers.onCharEvent(eventData)
        elseif eventNumber == 2 and type(handlers.onRednetReceive) == ""function"" then
            handlers.onRednetReceive(eventData)
        elseif eventNumber == 3 and type(handlers.onMonitorTouch) == ""function"" then
            handlers.onMonitorTouch(eventData)
        elseif eventNumber == 4 and type(handlers.onTimerEvent) == ""function"" then
            handlers.onTimerEvent(eventData)
        elseif eventNumber == 5 and type(handlers.onRedstoneChange) == ""function"" then
            handlers.onRedstoneChange(eventData)
        end
        
        if type(handlers.afterHook) == ""function"" then
            handlers.afterHook()
        end
    until eventNumber == 1 and eventData.char == ""x""
end"
3jtRi5JX,client.lua,OttoTe,Lua,Saturday 23rd of December 2023 07:21:22 AM CDT,"os.loadAPI(""bin/tools"")

local log = tools.loadAPI(""log.lua"", ""bin"")
log.start(""client"", ""log"", log.LEVEL_DEBUG)

local kommunikation = tools.loadAPI(""kommunikation.lua"", ""bin"")
local events = tools.loadAPI(""events.lua"", ""bin"")

-- load configuration
local config = tools.loadAPI(""config.lua"")

-- test config
local configTests = {
    modem = type(config.modem) == ""string"",
    stellwerkName = type(config.stellwerkName) == ""string"",
    role = type(config.role) == ""string"",
    sides = type(config.sides) == ""table"",
    [""sides.left""]   = config.sides and (config.sides.left   == nil or config.sides.left   == true),
    [""sides.right""]  = config.sides and (config.sides.right  == nil or config.sides.right  == true),
    [""sides.top""]    = config.sides and (config.sides.top    == nil or config.sides.top    == true),
    [""sides.bottom""] = config.sides and (config.sides.bottom == nil or config.sides.bottom == true),
    [""sides.front""]  = config.sides and (config.sides.front  == nil or config.sides.front  == true),
    [""sides.back""]   = config.sides and (config.sides.back   == nil or config.sides.back   == true),
}

for name, test in pairs(configTests) do
    if not test then
        log.error(""Config fuer ""..name.."" falsch formatiert"")
        return
    end
end

log.info(""Starte client, Rolle ""..config.role)

local redstoneStates = {}

redstoneHasChanged = function()
    for side, use in pairs(config.sides) do
        local newState = redstone.getBundledInput(side)
        local oldState = (redstoneStates[side] or 0)
        
        if newState ~= oldState then
            for i = 0, 15 do
                local index = (2 ^ i)
                local oldBit = bit.band(index, oldState)
                local newBit = bit.band(index, newState)
                if newBit ~= oldBit then
                    log.debug(""Redstone geaendert: "", {side = side, index = index, newBit = newBit})
                    kommunikation.sendRedstoneChangeClient(side, index, newBit)
                end
            end
            redstoneStates[side] = newState
        end
    end
end

function onRegister()
    redstoneStates = {}
    redstoneHasChanged()
end

function onChange(side, color, state)
    if not config.sides[side] then
        log.warn(""onChange: Seite ""..side.."" nicht verbunden"")
        return
    end
    if state == ""ON"" then
        local newColors = colors.combine(redstone.getBundledOutput(side), color)
        redstone.setBundledOutput(side, newColors)
    else
        local newColors = colors.subtract(redstone.getBundledOutput(side), color)
        redstone.setBundledOutput(side, newColors)
    end
end

local protocol = ""ESTW "" .. config.stellwerkName

local serverGefunden = kommunikation.init(protocol, config.modem, tostring(config.role), log)

if serverGefunden then
    redstoneHasChanged()
end

events.listen({
    onRednetReceive = function(eventData)
        kommunikation.rednetMessageReceivedClient(eventData.id, eventData.msg, onRegister, onChange, log)
    end,
    onRedstoneChange = function(eventData)
        redstoneHasChanged()
    end,
    onCharEvent = function(eventData)
        if eventData.char == ""i"" then
            log.info(""Status:"")
            log.info(""  Role: ""..config.role)
            log.info(""  Server: ""..kommunikation.getServerId())
            log.info(""  RedstoneState: ""..(#redstoneStates).."" Einträge"", redstoneStates)
            log.info(""----"")
        end
    end,
    onTimerEvent = function(eventData)
        kommunikation.behandleTimer(eventData.id)
    end,
})

kommunikation.deinit()
"
T9YAdHzE,bildschirm,OttoTe,Lua,Saturday 23rd of December 2023 07:21:06 AM CDT,"local monitor = nil

init = function(seite)
    monitor = peripheral.wrap(seite)
    monitor.clear()
    monitor.setCursorPos(1,1)
end

hoehe = function()
    if monitor == nil then
        print(""Monitor ist nicht initialisiert"")
        return
    end
    local w, h = monitor.getSize()
    return h
end
breite = function()
    if monitor == nil then
        print(""Monitor ist nicht initialisiert"")
        return
    end
    local w, h = monitor.getSize()
    return w
end

leeren = function()
    if monitor == nil then
        print(""Monitor ist nicht initialisiert"")
        return
    end
    monitor.clear()
end

zeichne = function(x, y, farbe, text)
    if monitor == nil then
        print(""Monitor ist nicht initialisiert"")
        return
    end
    if x == nil then
        print(""zeichne: x ist nil ""..text)
        return
    end
    if y == nil then
        print(""zeichne: y ist nil"")
        return
    end
    if farbe == nil then
        print(""zeichne: farbe ist nil"")
        return
    end
    if text == nil then
        print(""zeichne: text ist nil"")
        return
    end
    monitor.setTextColor(farbe)
    monitor.setCursorPos(x, y)
    monitor.write(text)
end

zeichneElement = function(position, farbe, text, offsetX, offsetY)
    if offsetX == nil then
        offsetX = 0
    end
    if offsetY == nil then
        offsetY = 0
    end
    zeichne(position.x + offsetX, position.y + offsetY, farbe, text)
end
"
w98YqXBw,anzeigetafel,OttoTe,Lua,Saturday 23rd of December 2023 07:20:42 AM CDT,"local configFile = ""config""

-- load configuration
if not fs.exists(configFile) then
    print(""Config not found"")
    return
end

os.loadAPI(configFile)

if type(config.textFile) ~= ""string"" then
    print(""Config: no textFile"")
    return
end
if type(config.monitorSide) ~= ""string"" then
    print(""Config: no monitorSide"")
    return
end

-- load text
if not fs.exists(config.textFile) then
    print(""Datei ""..config.textFile.."" nicht gefunden"")
    return
end

local mon = peripheral.wrap(config.monitorSide)
mon.clear()
mon.setCursorPos(1,1)
w, h = mon.getSize()

if type(config.textColor) == ""number"" and config.textColor >= 0 and config.textColor < 16 then
    mon.setTextColor(config.textColor)
end
if type(config.backgroundColor) == ""number"" and config.backgroundColor >= 0 and config.backgroundColor < 65536 then
    mon.setBackgroundColor(config.backgroundColor)
end
if type(config.scale) == ""number"" and config.scale >= 0 and config.scale < 16 then
    mon.setTextScale(config.scale)
end

print(""Startup, Bildschirm "" .. w .. ""x"" .. h)

local function paintText(x, y, text)
    mon.setCursorPos(x, y)
    mon.write(text)
end

-- background
local emptyLine = """"
for j = 1, w do
    emptyLine = emptyLine .. "" ""
end

for i = 1, h do
    paintText(1, i, emptyLine)
end

local fileHandle = fs.open(config.textFile, ""r"")

for i = 1, h do
    local line = fileHandle.readLine()
    if line == nil then
        break
    end
    if #line > w then
        print(""Zeile ""..i.."" zu lang"")
    else
        paintText(1, i, line)
    end
end

fileHandle.close()
"
7Y2fSzwa,kommunikation,OttoTe,Lua,Saturday 23rd of December 2023 07:20:18 AM CDT,"local local_protocol = nil
local local_modem = nil
local local_role = nil
local ownName = nil

local SERVER = ""Server""

local laufendeTimer = {}
local clientIds = {}
local clientNames = {}
local serverId = nil

local version = 2
local log = {
    error = function() end,
    warn = function() end,
    info = function() end,
    debug = function() end,
}

if not tools then
    os.loadAPI(""bin/tools"")
end

-- Hilfsfunktionen
splitString = function(inputstr)
    if inputstr == nil then
        return nil
    end
    local tbl = {}
    local i = 1
    local matches = inputstr:gmatch(""([^ ]+)"")
    for part in matches do
        tbl[i] = part
        i = i + 1
    end
    return tbl
end
setzteTimer = function(zeit, callback, ...)
    log.debug(""setzteTimer(""..zeit.."")"")
    local id = os.startTimer(zeit)
    laufendeTimer[id] = {
        callback = callback,
        params = arg,
    }
end
behandleTimer = function(id)
    local timerData = laufendeTimer[id]
    if timerData == nil then
        return false
    end
    if timerData.callback == nil or timerData.params == nil then
        return false
    end
    timerData.callback(unpack(timerData.params))
    return true
end
local function send(id, message)
    log.debug(""SENDTO ""..id.."": ""..(message or ""nil""))
    rednet.send(id, message, local_protocol)
end
local function sendHello(id)
    local seed = math.random(0, 100)
    send(id, ""HELLO IAM "" .. (local_role or SERVER) .. "" "" .. seed)
    return seed
end

local function getMessage(packet, id)
    log.debug(""Nachricht id=""..id.."" packet=""..tools.dump(packet))
    
    local message = """"
    if type(packet) == ""table"" then
        message = splitString(packet[1])
    elseif type(packet) == ""string"" then
        message = splitString(packet)
    else
        log.warn(""Falscher Typ für Paket: id=""..id.."", packet=""..type(packet))
        return nil
    end
    
    if message == nil then
        return nil
    end
    
    return message
end

-- Server-Funktionen
rednetMessageReceivedServer = function(id, packet, onchange)
    local message = getMessage(packet, id)
    
    if message == nil then
        return false
    end
    
    local command = message[1]
    
    -- HELLO IAM <clientName>
    if #message >= 3 and command == ""HELLO"" and message[3] ~= ownName then
        clientIds[message[3]] = id
        clientNames[id] = message[3]
        log.info(""Neuer Client: id=""..id.."", name=""..message[3].."", seed=""..(message[4] or ""none""))
    end
    
    -- REDSTONE <side> <color> <ON|OFF>
    if #message >= 5 and command == ""REDSTONE"" then
        local side, color, state = message[3], message[4], message[5]
        
        if tonumber(message[4]) == nil then
            log.error(""Farbe ist keine Zahl: ""..(message[4] or ""nil""))
            return false
        end
        local colorIndex = math.log(color) / math.log(2)
        local pc = clientNames[id]
        if pc == nil then
            log.warn(""PC nicht registriert: id=""..id)
            return false
        end
        pc = tostring(pc)
        
        onchange(pc, side, colorIndex, state)
    end
    
    return true
end
sendRestoneMessageServer = function(clientName, side, colorIndex, bit)
    local index = 2 ^ colorIndex
    clientName = tostring(clientName)
    if clientIds[clientName] == nil then
        log.warn(""sendRestoneMessageServer: Kein Client fuer "" .. (clientName or ""nil"") .. "" verbunden"", clientIds)
        return
    end

    local message = ""REDSTONE "" .. ownName .. "" "" .. side
    
    message = message .. "" "" .. index
    
    if bit then
        message = message .. "" ON""
    else
        message = message .. "" OFF""
    end
    
    send(clientIds[clientName], message)
end
sendRedstoneImpulseServer = function(clientName, side, colorIndex)
    sendRestoneMessageServer(clientName, side, colorIndex, true)
    local resetRedstone = function(clientName, side, colorIndex)
        sendRestoneMessageServer(clientName, side, colorIndex, false)
    end
    setzteTimer(0.2, resetRedstone, clientName, side, colorIndex)
end

-- Client-Funktionen
sendRedstoneChangeClient = function(side, index, bit)
    local message = ""REDSTONE "" .. local_role .. "" "" .. side
    
    message = message .. "" "" .. index
    
    if bit > 0 then
        message = message .. "" ON""
    else
        message = message .. "" OFF""
    end
    
    if serverId ~= nil then
        send(serverId, message)
    end
end
rednetMessageReceivedClient = function(id, packet, onRegister, onChange)
    local message = getMessage(packet, id)
    
    if message == nil then
        return false
	elseif message == ""reset"" then
		os.reboot()
    end
    
    local command = message[1]
    
    -- HELLO IAM Server
    if #message >= 3 and command == ""HELLO"" and message[3] == SERVER then
        serverId = id
        local seed = sendHello(serverId)
        log.info(""Neuer Server: id=""..serverId.."", seed=""..(message[4] or ""none"").."", antwortSeed=""..seed)
        onRegister()
    end
    
    -- REDSTONE <side> <ON|OFF>
    if #message >= 5 and command == ""REDSTONE"" then
        local side, color, state = message[3], tonumber(message[4]), message[5]
        onChange(side, color, state)
    end
end
local function findeServer(versuche)
    serverId = rednet.lookup(local_protocol, SERVER)
    if serverId then
        local seed = sendHello(serverId)
        log.info(""Server gefunden id="" .. serverId .. "", seed="" .. seed)
        return true
    else
        log.warn(""Kein Server gefunden, Client ""..local_role)
        if versuche > 0 then
            setzteTimer(2, findeServer, versuche - 1)
        end
        return false
    end
end

init = function(protocol, modem, role, logger)
    log = logger
    
    local_protocol = protocol .. "" v"" .. version
    local_modem = modem
    local_role = role
    
    log.debug(""Verbinde: local_protocol=""..local_protocol)
    
    rednet.open(local_modem)
    
    if role == nil then
        ownName = SERVER
        log.debug(""Registriere ""..ownName.."" auf ""..local_protocol)
        rednet.host(local_protocol, ownName)
        
        foundClients = {rednet.lookup(local_protocol)}
        if type(foundClients) == ""table"" then
            for i, foundClient in ipairs(foundClients) do
                local seed = sendHello(foundClient)
                log.debug(""Frage Client ""..foundClient.."", seed=""..seed)
            end
        else
            log.debug(""Keine Clients gefunden"")
        end
    else
        ownName = ""Client ""..role
        log.debug(""Registriere ""..ownName.."" auf ""..local_protocol)
        ---rednet.host(local_protocol, ownName)

        return findeServer(2)
    end
end
deinit = function()
    if ownName == ownName then
        rednet.unhost(local_protocol, ownName)
    end
    rednet.close(local_modem)
end

getProtocol = function()
    return local_protocol
end
getServerId = function()
    return serverId
end"
RDhmvDwQ,log,OttoTe,Lua,Saturday 23rd of December 2023 07:19:33 AM CDT,"local local_path = nil
local local_logName = nil
local local_folder = nil
local loglevel = LEVEL_NONE
local maxRotate = 10

LEVEL_NONE = 0
LEVEL_ERROR = 1
LEVEL_WARN = 2
LEVEL_INFO = 3
LEVEL_DEBUG = 4

local levelTransl = {
    [LEVEL_ERROR] = ""FEHLER: "",
    [LEVEL_WARN] = ""WARNUNG: "",
    [LEVEL_INFO] = ""INFO: "",
    [LEVEL_DEBUG] = ""DEBUG: "",
}

local function dump(o)
    if type(o) ~= 'table' then
        return tostring(o)
    end
    
    local s = '{'
    for k,v in pairs(o) do
        if type(k) ~= 'number' then
            k = '""'..k..'""'
        end
        s = s .. '['..k..']=' .. dump(v) .. ','
    end
    -- letztes Komma entfernen
    if s:len() >= 1 then
        s = s:sub(0, s:len() - 1)
    end
    return s .. '}'
end

local function getPath(logName, folder, index)
    local pfad = logName
    
    if index ~= nil then
        pfad = pfad .. ""."" .. index
    end
    
    pfad = pfad .. "".log""
    
    if folder ~= nil then
        pfad = folder .. ""/"" .. pfad
    end
    return pfad
end

local function rotate(logName, folder, index)
    local pfadAlt = getPath(logName, folder, index)
    if not fs.exists(pfadAlt) then
        return pfadAlt
    end
    if index == nil then
        index = 0
    end
    if index >= maxRotate - 1 then
        fs.delete(pfadAlt)
        return pfadAlt
    end
    
    local pfadNeu = rotate(logName, folder, index + 1)
    fs.move(pfadAlt, pfadNeu)
    
    return pfadAlt
end

local function initFile(logName, folder)
    if logName ~= nil then
        local_logName = logName
    end
    if local_logName == nil then
        print(""log.lua: Tried to (re)init but no logName set"")
    end
    if folder ~= nil then
        local_folder = folder
    end
    if local_folder ~= nil and not fs.isDir(local_folder) then
        fs.makeDir(local_folder)
    end
    
    local_path = rotate(local_logName, local_folder)
end

local function writeLog(level, text, objects)
    if loglevel < level then
        return
    end
    if level <= LEVEL_INFO then
        local printText = text
        printText = printText:gsub(""ä"", ""ae"")
        printText = printText:gsub(""ö"", ""oe"")
        printText = printText:gsub(""ü"", ""ue"")
        printText = printText:gsub(""Ä"", ""Ae"")
        printText = printText:gsub(""Ö"", ""Oe"")
        printText = printText:gsub(""Ü"", ""Ue"")
        printText = printText:gsub(""ß"", ""ss"")
        print(printText)
    end
    if local_path == nil then
        print(""log.lua: Path not set, did you forget start()?"")
        return
    end
    
    local timeStamp = ""["" .. os.day() .. "" "" .. os.time() .. ""] ""
    local translLevel = levelTransl[level] or """"
    local line = timeStamp .. translLevel .. text
    
    if not fs.exists(local_path) then
        -- reinit if file was moved/deleted/etc
        initFile()
    end
    
    local datei = fs.open(local_path, ""a"")
    if datei == nil then
        print(""log.lua: Cannot open file ""..local_path)
        return
    end
    
    datei.writeLine(line)
    
    if objects ~= nil then
        for i, object in ipairs(objects) do
            datei.writeLine(dump(object))
        end
    end
    
    datei.close()
end

start = function(logName, folder, level)
    initFile(logName, folder)
    loglevel = (level or ""info"")
end

error = function(text, ...)
    writeLog(LEVEL_ERROR, tostring(text), arg)
end
warn = function(text, ...)
    writeLog(LEVEL_WARN, tostring(text), arg)
end
info = function(text, ...)
    writeLog(LEVEL_INFO, tostring(text), arg)
end
debug = function(text, ...)
    writeLog(LEVEL_DEBUG, tostring(text), arg)
end

"
MCQqq5FG,tools,OttoTe,Lua,Saturday 23rd of December 2023 07:19:11 AM CDT,"dump = function(o)
    if type(o) ~= 'table' then
        return tostring(o)
    end
    
    local s = '{'
    for k,v in pairs(o) do
        if type(k) ~= 'number' then
            k = '""'..k..'""'
        end
        s = s .. '['..k..']=' .. dump(v) .. ','
    end
    -- letztes Komma entfernen
    if s:len() >= 1 then
        s = s:sub(0, s:len() - 1)
    end
    return s .. '}'
end

loadAPI = function(fileName, path)
    if fileName == nil then
        print(""Bibliotheksname ist nil -> ungueltig"")
    end
    
    if _G[fileName] then
        return _G[fileName]
    end
    
    local filePath = fileName
    fileName = fileName:gsub("".*/"", """")
    
    if path ~= nil then
        filePath = path .. ""/"" .. filePath
    end
    
    if not fs.exists(filePath) then
        print(""Bibliothek ""..filePath.."" nicht gefunden"")
        return
    end
    
    os.loadAPI(filePath)
    return _G[fileName]
end
"
5d3AkNwQ,stellwerk.lua,OttoTe,Lua,Saturday 23rd of December 2023 07:18:21 AM CDT,"os.loadAPI(""bin/tools"")

local projektierungsModus = false
local log = tools.loadAPI(""log"", ""bin"")
log.start(""server"", ""log"", log.LEVEL_DEBUG)

local kommunikation = tools.loadAPI(""kommunikation"", ""bin"")
local bildschirm = tools.loadAPI(""bildschirm"", ""bin"")
local events = tools.loadAPI(""events"", ""bin"")
local fahrstrassenDatei = tools.loadAPI(""fahrstrassenDatei"", ""bin"")

-- load configuration
local config = tools.loadAPI(""config"")

local configContents = {
    gleisbildDatei = ""string"",
    bildschirm = ""string"",
    modem = ""string"",
    stellwerkName = ""string"",
}

for name, typ in pairs(configContents) do
    if type(config[name]) ~= typ then
        log.error(""Config: ""..name.."" fehlt oder hat den falschen Typ (soll ""..typ.."", ist ""..type(config[name]).."")"")
        return
    end
end

-- load text
if not fs.exists(config.gleisbildDatei) then
    log.error(""Datei "" .. config.gleisbildDatei .. "" nicht gefunden"")
    return
end

-- Status: 0 = Halt, 1 = Fahrt, 2 = Rangierfahrt
local signale = config.signale
local fsZiele = config.fsZiele
local fsAufloeser = config.fsAufloeser
local bahnuebergaenge = config.bahnuebergaenge
-- Status: 0 = Frei, 1 = Besetzt
local gleise = config.gleise
local weichen = config.weichen
local fahrstrassenteile = config.fahrstrassenteile
-- Status: 0 = Nichts, 1 = Wird eingestellt, 2 = Festgelegt, 3 = Signalfreigabe, 4 = Wird aufgelöst
local fahrstrassen = config.fahrstrassen
local speichereFahrstrassen = config.speichereFahrstrassen or false

local eingabe = """"
local eingabeModus = """"
local nachricht = """"
local position = nil

local protocol = ""ESTW "" .. config.stellwerkName

local SIGNAL_HALT = ""halt""
local SIGNAL_HP = ""hp""
local SIGNAL_HPA = ""hpa""
local SIGNAL_SH = ""sh""
local SIGNAL_ERS = ""ers""
local SIGNAL_ZA = ""za""

local SIGNAL_ART_HP = ""hp""
local SIGNAL_ART_HPA = ""hpa""
local SIGNAL_ART_SH = ""sh""
local SIGNAL_ART_ZA = ""za""

bildschirm.init(config.bildschirm)
local hoehe = bildschirm.hoehe()

log.info(""Starte Server, Bildschirm "" .. bildschirm.breite() .. ""x"" .. hoehe)

local fileHandle = fs.open(config.gleisbildDatei, ""r"")

local gleisbild = {}
for i = 1, hoehe do
    local line = fileHandle.readLine()
    if line == nil then
        break
    end
    gleisbild[i] = line
end

fileHandle.close()

-- Stellbild
local function zeichneSignal(signal, art)
    local farbeOben = colors.red
    local farbeUnten = colors.red
    
    if signal.status == SIGNAL_HP or signal.status == SIGNAL_HPA then
        farbeOben = colors.lime
        farbeUnten = colors.lime
    elseif signal.status == SIGNAL_SH then
        farbeOben = colors.yellow
        farbeUnten = colors.yellow
    elseif signal.status == SIGNAL_ERS then
        farbeUnten = colors.yellow
    elseif signal.status == SIGNAL_ZA then
        farbeUnten = colors.orange
        farbeOben = colors.orange
    end

    if signal.richtung == ""r"" then
        if art == SIGNAL_ART_HP or art == SIGNAL_ART_HPA then
            bildschirm.zeichneElement(signal, farbeUnten, ""|"")
            bildschirm.zeichneElement(signal, farbeOben, "">"", 1)
        elseif art == SIGNAL_ART_SH then
            bildschirm.zeichneElement(signal, farbeOben, "">"")
        elseif art == SIGNAL_ART_ZA then
            bildschirm.zeichneElement(signal, farbeUnten, "">"")
            bildschirm.zeichneElement(signal, farbeOben, "">"", 1)
        end
    else
        bildschirm.zeichneElement(signal, farbeOben, ""<"")
        if art == SIGNAL_ART_HP or art == SIGNAL_ART_HPA then
            bildschirm.zeichneElement(signal, farbeUnten, ""|"", 1)
        elseif art == SIGNAL_ART_ZA then
            bildschirm.zeichneElement(signal, farbeUnten, ""<"", 1)
        end
    end
end
local function zeichneGleis(gleis, farbe)
    if gleis.text then
        bildschirm.zeichneElement(gleis, farbe, gleis.text)
    elseif type(gleis.abschnitte) == ""table"" then
        for j, abschnitt in ipairs(gleis.abschnitte) do
            bildschirm.zeichne(abschnitt.x, abschnitt.y, farbe, abschnitt.text)
        end
    end
end
local function zeichneFSTeile(fahrstr, farbe)
    if fahrstr.status and fahrstr.status > 0 and type(fahrstr.fsTeile) == ""table"" then
        for i, item in ipairs(fahrstr.fsTeile) do
            -- fuehre fahrstrassenteile und gleise zusammen
            local alleTeile = {}
            
            if type(fahrstrassenteile) == ""table"" then
                alleTeile = fahrstrassenteile
            end
            
            if type(gleise) == ""table"" then
                for gName, gleis in pairs(gleise) do
                    alleTeile[gName] = gleis
                end
            end
            
            local fsTeil
            if alleTeile[item] then
                fsTeil = alleTeile[item]
                bildschirm.zeichneElement(fsTeil, farbe, fsTeil.text)
            end
            if alleTeile[item..""/1""] then
                fsTeil = alleTeile[item..""/1""]
                bildschirm.zeichneElement(fsTeil, farbe, fsTeil.text)
            end
            if alleTeile[item..""/2""] then
                fsTeil = alleTeile[item..""/2""]
                bildschirm.zeichneElement(fsTeil, farbe, fsTeil.text)
            end
            if alleTeile[item..""/3""] then
                fsTeil = alleTeile[item..""/3""]
                bildschirm.zeichneElement(fsTeil, farbe, fsTeil.text)
            end
        end
    end
end
local function zeichneBahnuebergang(name, bue)
    local farbe = colors.yellow
    if bue.status == 1 then
        farbe = colors.lime
    end
    
    bildschirm.zeichne(bue.x, bue.y, farbe, name)
    for i = 1, bue.hoehe do
        bildschirm.zeichne(bue.x, bue.y + i, farbe, ""| |"")
    end
end

local function pruefeWeichenstatusFuerGleis(gleis, gName)
    if type(gleis.weiche) ~= ""table"" or type(weichen) ~= ""table"" then
        return true
    end
    if type(gleis.weiche[1]) ~= ""string"" or type(gleis.weiche[2]) ~= ""number"" then
        log.error(""Weiche fuer Gleis ""..gName.."" falsch projektiert"")
        return true
    end
    local weiche = weichen[gleis.weiche[1]]
    
    if type(weiche) ~= ""table"" then
        log.error(""Weiche fuer Gleis ""..gName.."" nicht gefunden"")
        return true
    end
    return (weiche.status == 1) == (gleis.weiche[2] == 1)
end
local function neuzeichnen()
    -- Hintergrundbild
    bildschirm.leeren()
    local hoehe = bildschirm.hoehe()
    
    for i, item in pairs(gleisbild) do
        if type(item) == ""string"" then
            bildschirm.zeichne(1, i, colors.white, item)
        elseif type(item) == ""table"" then
            local offset = 1
            for j, teil in ipairs(item) do
                bildschirm.zeichne(offset, i, colors.white, teil)
                offset = offset + string.len(teil)
            end
        end
    end
    
    -- zeichen Fahrstrassenteile
    if projektierungsModus and type(fahrstrassenteile) == ""table"" then
        for i, fsTeil in pairs(fahrstrassenteile) do
            bildschirm.zeichneElement(fsTeil, colors.orange, fsTeil.text)
        end
    end
    
    -- zeichne Signale
    if type(signale) == ""table"" then
        for sName, signal in pairs(signale) do
            if signal.hp ~= nil or signal.stelle_hp ~= nil then
                zeichneSignal(signal, SIGNAL_ART_HP)
            elseif signal.hpa ~= nil or signal.stelle_hpa ~= nil then
                zeichneSignal(signal, SIGNAL_ART_HPA)
            elseif signal.za ~= nil or signal.stelle_za ~= nil then
                zeichneSignal(signal, SIGNAL_ART_ZA)
            else
                zeichneSignal(signal, SIGNAL_ART_SH)
            end
        end
    end
    
    -- zeichne Gleise
    if type(gleise) == ""table"" then
        for gName, gleis in pairs(gleise) do
            zeichneGleis(gleis, colors.yellow)
        end
    end
    
    -- zeichne Fahrstrassen
    if type(fahrstrassen) == ""table"" then
        for fName, fahrstr in pairs(fahrstrassen) do
            local fsFarbe = colors.lime
            if fahrstr.rangieren then
                fsFarbe = colors.blue
            end
            zeichneFSTeile(fahrstr, fsFarbe)
        end
    end
    
    -- zeichne besetzte Gleise
    if type(gleise) == ""table"" then
        for gName, gleis in pairs(gleise) do
            if gleis.status == 1 and pruefeWeichenstatusFuerGleis(gleis, gName) then
                zeichneGleis(gleis, colors.red)
            end
        end
    end
    
    -- zeichne Bahnuebergaenge
    if type(bahnuebergaenge) == ""table"" then
        for name, bue in pairs(bahnuebergaenge) do
            zeichneBahnuebergang(name, bue)
        end
    end
    
    -- Textzeilen
    bildschirm.zeichne(1, hoehe-2, colors.white, ""LOE    AUFL   HALT   ERS   RESET"")
    
    bildschirm.zeichne(1, hoehe-1, colors.white, ""EIN:"")
    if eingabe then
        bildschirm.zeichne(6, hoehe-1, colors.white, eingabeModus.."" ""..eingabe)
    end
    
    bildschirm.zeichne(1, hoehe, colors.white, ""VQ:"")
    if nachricht then
        bildschirm.zeichne(6, hoehe, colors.white, nachricht)
    end
    if projektierungsModus and position then
        local x = position.x
        local y = position.y
        bildschirm.zeichne(1, 1, colors.white, x..""x""..y)
        bildschirm.zeichne(x, y, colors.lightBlue, ""X"")
    end
end

-- Callback
local function fehler(text)
    nachricht = text
    log.error(text)
end
local function erfolg(mitNachricht, text)
    if mitNachricht then
        nachricht = text
    end
    log.debug(text)
end

local function stelleWeiche(name, abzweigend, mitNachricht)
    if type(weichen) ~= ""table"" then
        return fehler(""Keine Weichen projektiert"")
    end
    local weiche = weichen[name]
    if weiche == nil then
        return fehler(""Weiche ""..name.."" nicht projektiert"")
    end
    
    kommunikation.sendRestoneMessageServer(weiche.pc, weiche.au, weiche.fb, abzweigend)
    
    local lage = ""gerade""
    if abzweigend then
        lage = ""abzweigend""
    end
    
    erfolg(mitNachricht, ""Weiche "" .. name .. "" umgestellt auf "" .. lage)
end
local function aktiviereSignalbild(signal, signalbild, aktiv)
    if type(signal) ~= ""table"" then
        return fehler(""Signalbild ""..(signalbild or ""nil"").."" nicht projektiert"")
    end
    local cnf = signal[""stelle_""..signalbild]
    if cnf ~= nil then
        kommunikation.sendRestoneMessageServer(cnf.pc, cnf.au, cnf.fb, aktiv)
    end
end
local function stelleSignal(name, signalbild, mitNachricht)
    if type(signale) ~= ""table"" then
        return fehler(""Keine Signale projektiert"")
    end
    local signal = signale[name]
    if signal == nil then
        return fehler(""Signal ""..name.."" nicht projektiert"")
    end
    
    if signal[signalbild] ~= nil then
        kommunikation.sendRedstoneImpulseServer(signal[signalbild].pc, signal[signalbild].au, signal[signalbild].fb)
    else
        aktiviereSignalbild(signal, SIGNAL_HP, false)
        aktiviereSignalbild(signal, SIGNAL_HPA, false)
        aktiviereSignalbild(signal, SIGNAL_SH, false)
        aktiviereSignalbild(signal, SIGNAL_ZA, false)
        aktiviereSignalbild(signal, SIGNAL_ERS, false)
        
        if signalbild ~= SIGNAL_HALT then
            aktiviereSignalbild(signal, signalbild, true)
        end
    end
    
    erfolg(mitNachricht, ""Signal "" .. name .. "" auf "" .. signalbild .. "" gestellt"")
end
local function signalHaltfall(gleisName)
    if type(signale) ~= ""table"" then
        return fehler(""Keine Signale projektiert"")
    end
    for sName, signal in pairs(signale) do
        if type(signal.haltAbschnitte) == ""table"" then
            for haName, haltAbschnitt in ipairs(signal.haltAbschnitte) do
                if gleisName == haltAbschnitt then
                    stelleSignal(sName, SIGNAL_HALT)
                end
            end
        end
    end
    if type(fahrstrassen) == ""table"" then
        for fName, fahrstrasse in pairs(fahrstrassen) do
            if type(fahrstrasse.haltAbschnitte) == ""table"" then
                for i, haltAbschnitt in ipairs(fahrstrasse.haltAbschnitte) do
                    if gleisName == haltAbschnitt and type(fahrstrasse.signale) == ""table"" then
                        for sName, bild in pairs(fahrstrasse.signale) do
                            stelleSignal(sName, SIGNAL_HALT)
                        end
                    end
                end
            end
        end
    end
end

local function kollidierendeFahrstrasse(fahrstr)
    if type(fahrstr.fsTeile) == ""table"" then
        for i, fsTeil in ipairs(fahrstr.fsTeile) do
            for fName, andereFs in pairs(fahrstrassen) do
                if andereFs.status ~= nil and andereFs.status > 0 and type(andereFs.fsTeile) == ""table"" then
                    for j, anderesFsTeil in ipairs(andereFs.fsTeile) do
                        if fsTeil == anderesFsTeil then
                            return ""Konflikt FS ""..fName
                        end
                    end
                end
            end
        end
    end
    
    if type(fahrstr.gleise) == ""table"" then
        for i, gName in ipairs(fahrstr.gleise) do
            if gleise[gName] and gleise[gName].status and gleise[gName].status == 1 then
                return ""Gleisbelegung ""..gName
            end
        end
    end
    return nil
end
local function stelleFahrstrasse(name, mitNachricht, istReset)
    if type(fahrstrassen) ~= ""table"" then
        return fehler(""Keine Fahrstrassen projektiert"")
    end
    local rueckmeldung = """"
    local fahrstr = fahrstrassen[name]
    if fahrstr == nil then
        return fehler(""Fahrstrasse ""..name.."" nicht projektiert"")
    end
    
    if fahrstr.steller ~= nil then
        kommunikation.sendRedstoneImpulseServer(fahrstr.steller.pc, fahrstr.steller.au, fahrstr.steller.fb)
    elseif type(fahrstr.signale) == ""table"" then
        -- Kollisionserkennung
        local kollision = kollidierendeFahrstrasse(fahrstr)
        if kollision ~= nil then
            return fehler(""FS "" .. name .. "" nicht einstellbar: "" .. kollision)
        end
        
        fahrstrassen[name].status = 1
        
        if type(fahrstr.weichen) == ""table"" then
            for i, weiche in pairs(fahrstr.weichen) do
                stelleWeiche(weiche, true)
            end
        end
        
        fahrstrassen[name].status = 2
        
        -- Gleisbelegung prüfen
        
        if not istReset and speichereFahrstrassen then
            fahrstrassenDatei.speichereFahrstrasse(name)
        end
        
        fahrstrassen[name].status = 3
        
        for signal, signalbild in pairs(fahrstr.signale) do
            stelleSignal(signal, signalbild)
        end
    else
        return fehler(""Fahrstrasse "" .. name .. "" nicht richtig projektiert (keine Aktion)"")
    end
    
    erfolg(mitNachricht, ""Fahrstrasse "" .. name .. "" eingestellt"")
end
local function loeseFSauf(name, mitNachricht)
    if type(fahrstrassen) ~= ""table"" then
        return fehler(""Keine Fahrstrassen projektiert"")
    end
    local rueckmeldung = """"
    local fahrstr = fahrstrassen[name]
    if fahrstr == nil then
        return fehler(""Fahrstrasse ""..name.."" nicht projektiert"")
    end
    
    if type(fahrstr.aufloeser) == ""table"" then
        kommunikation.sendRedstoneImpulseServer(fahrstr.aufloeser.pc, fahrstr.aufloeser.au, fahrstr.aufloeser.fb)
    elseif type(fahrstr.signale) == ""table"" then
        for signal, signalbild in pairs(fahrstr.signale) do
            stelleSignal(signal, SIGNAL_HALT)
        end
        
        fahrstrassen[name].status = 4
        
        if speichereFahrstrassen then
            fahrstrassenDatei.loescheFahrstrasse(name)
        end
        
        if type(fahrstr.weichen) == ""table"" then
            for i, weiche in pairs(fahrstr.weichen) do
                stelleWeiche(weiche, false)
            end
        end
        
        fahrstrassen[name].status = 0
    else
       return fehler(""Fahrstrasse "" .. name .. "" nicht richtig projektiert (keine Aktion)"")
    end
    
    erfolg(mitNachricht, ""Fahrstrasse "" .. name .. "" aufgeloest"")
end

-- setzt alle Ausgänge zurück
local function reset(auchFS)
    log.debug(""Reset auchFS=""..(auchFS and ""true"" or ""false""))
    if type(signale) == ""table"" then
        for name, signal in pairs(signale) do
            stelleSignal(name, SIGNAL_HALT)
        end
    end
    
    if type(weichen) == ""table"" then
        for name, weiche in pairs(weichen) do
            stelleWeiche(name, false)
        end
    end
    
    if auchFS and type(fahrstrassen) == ""table"" then
        for name, fahrstrasse in pairs(fahrstrassen) do
            loeseFSauf(name, false)
        end
    elseif speichereFahrstrassen then
        local alteFahrstrassen = fahrstrassenDatei.leseFahrstrassen()
        for i, fahrstrasse in ipairs(alteFahrstrassen) do
            stelleFahrstrasse(fahrstrasse, false, true)
        end
    end
    
    nachricht = """"
    log.info(""Reset beendet"")
end

local function puefeElement(x, y, eName, element, groesse, toleranz)
    if toleranz == nil then
        toleranz = 0
    end
    if (x >= element.x - toleranz and x <= element.x + groesse + toleranz) and y == element.y then
        if eingabe == """" then
            if eingabeModus == ""HALT"" then
                stelleSignal(eName, SIGNAL_HALT, true)
            elseif eingabeModus == ""ERS"" then
                stelleSignal(eName, SIGNAL_ERS, true)
            else
                eingabe = eName
                return true
            end
        elseif type(fahrstrassen) == ""table"" then
            local fsName
            if fahrstrassen[eingabe .. ""."" .. eName] then
                fsName = eingabe .. ""."" .. eName
                if eingabeModus == """" then
                    stelleFahrstrasse(fsName, true)
                elseif eingabeModus == ""AUFL"" then
                    loeseFSauf(fsName, true)
                end
            elseif fahrstrassen[eingabe .. ""-"" .. eName] then
                fsName = eingabe .. ""-"" .. eName
                if eingabeModus == """" then
                    stelleFahrstrasse(fsName, true)
                elseif eingabeModus == ""AUFL"" then
                    loeseFSauf(fsName, true)
                end
            else
                fehler(""Keine Fahrstrasse von "" .. eingabe .. "" nach "" .. eName .. "" gefunden"")
            end
        end
        eingabe = """"
        eingabeModus = """"
        return true
    end
    return false
end

local function behandleKlick(x, y)
    nachricht = """"
    
    if type(signale) == ""table"" then
        for name, signal in pairs(signale) do
            if puefeElement(x, y, name, signal, 1, 1) then
                break
            end
        end
    end
    if type(fsZiele) == ""table"" then
        for name, ziel in pairs(fsZiele) do
            if puefeElement(x, y, name, ziel, ziel.laenge) then
                break
            end
        end
    end
    if projektierungsModus and type(fahrstrassenteile) == ""table"" then
        for name, fsTeil in pairs(fahrstrassenteile) do
            local x1 = fsTeil.x
            local x2 = x1 + string.len(fsTeil.text)
            if x >= x1 and x < x2 and y == fsTeil.y then
                eingabe = eingabe .. "" fst."" .. name
                break
            end
        end
    end
    
    local hoehe = bildschirm.hoehe()
    
    -- Loeschen
    if (x >= 1 and x <= 4) and y == (hoehe-2) then
        eingabe = """"
        nachricht = """"
        eingabeModus = """"
    end
    
    -- Aktionen
    if (x >= 7 and x <= 12) and y == (hoehe-2) then
        eingabeModus = ""AUFL""
    elseif (x >= 14 and x <= 19) and y == (hoehe-2) then
        if eingabe ~= """" then
            stelleSignal(eingabe, SIGNAL_HALT, true)
            eingabe = """"
            eingabeModus = """"
        else
            eingabeModus = ""HALT""
        end
    elseif (x >= 21 and x <= 25) and y == (hoehe-2) then
        if eingabe == nil or eingabe == """" then
            eingabeModus = ""ERS""
        elseif type(signale) == ""table"" and signale[eingabe] ~= nil then
            stelleSignal(eingabe, SIGNAL_ERS, true)
            eingabe = """"
            eingabeModus = """"
        else
            eingabe = """"
            eingabeModus = """"
            nachricht = eingabe.."" ist kein Signal""
        end
    elseif (x >= 27 and x <= 34) and y == (hoehe-2) then
        shell.run(""reboot"")
    end
    
    log.debug(""EIN: "" .. eingabe)
    log.debug(""VQ: "" .. nachricht)
    if projektierungsModus then
        position = {x = x, y = y}
    end
end

-- Kommunikation
local function pruefeAenderungSignalStellung(sName, signalConfig, signalbild, pc, side, color, state)
    if signalConfig == nil
        or tostring(signalConfig.pc) ~= pc
        or tostring(signalConfig.au) ~= side
        or signalConfig.fb ~= color
    then
        return
    end
    
    if state == ""ON"" then
        log.debug(""onRedstoneChange: Signalstatus ""..sName.."" auf ""..signalbild)
        signale[sName].status = signalbild
    elseif signale[sName].status == signalbild then
        log.debug(""onRedstoneChange: Signalstatus ""..sName.."" von ""..signalbild.."" auf halt"")
        signale[sName].status = SIGNAL_HALT
    end
end
local function onRedstoneChange(pc, side, color, state)
    -- Signale
    if type(signale) == ""table"" then
        for sName, signal in pairs(signale) do
            pruefeAenderungSignalStellung(sName, (signal.hp  or signal.stelle_hp ), SIGNAL_HP,  pc, side, color, state)
            pruefeAenderungSignalStellung(sName, (signal.hpa  or signal.stelle_hpa ), SIGNAL_HPA,  pc, side, color, state)
            pruefeAenderungSignalStellung(sName, (signal.sh  or signal.stelle_sh ), SIGNAL_SH,  pc, side, color, state)
            pruefeAenderungSignalStellung(sName, (signal.za  or signal.stelle_za ), SIGNAL_ZA,  pc, side, color, state)
            pruefeAenderungSignalStellung(sName, (signal.ers or signal.stelle_ers), SIGNAL_ERS, pc, side, color, state)
        end
    end
    
    -- Weichen
    if type(weichen) == ""table"" then
        for wName, weiche in pairs(weichen) do
            if tostring(weiche.pc) == pc and tostring(weiche.au) == side
                    and weiche.fb == color then
                log.debug(""onRedstoneChange: Weichenlage ""..wName)
                if state == ""ON"" and weiche.status ~= 1 then
                    weiche.status = 1
                elseif weiche.status ~= 0 then
                    weiche.status = 0
                end
            end
        end
    end
    
    -- Gleise
    if type(gleise) == ""table"" then
        for gName, gleis in pairs(gleise) do
            if tostring(gleis.pc) == pc and tostring(gleis.au) == side
                    and gleis.fb == color then
                log.debug(""onRedstoneChange: Gleisstatus ""..gName)
                if state == ""ON"" and gleis.status ~= 1 then
                    gleis.status = 1
                    log.debug(""onRedstoneChange: Signalhaltfall ""..gName)
                    signalHaltfall(gName)
                elseif gleis.status ~= 0 then
                    gleis.status = 0
                end
            end
        end
    end
    
    -- Fahrstrassen
    if type(fahrstrassen) == ""table"" then
        for fName, fahrstrasse in pairs(fahrstrassen) do
            if fahrstrasse.melder and tostring(fahrstrasse.melder.pc) == tostring(pc) and tostring(fahrstrasse.melder.au) == side
                    and fahrstrasse.melder.fb == color then
                log.debug(""onRedstoneChange: Fahrstrassenstatus ""..fName.."" ""..state)
                if state == ""ON"" then
                    fahrstrasse.status = 3
                else
                    fahrstrasse.status = 0
                end
            end
            if fahrstrasse.anstoss and tostring(fahrstrasse.anstoss.pc) == tostring(pc) and tostring(fahrstrasse.anstoss.au) == side
                    and fahrstrasse.anstoss.fb == color then
                if state == ""ON"" then
                    log.debug(""onRedstoneChange: Fahrstrassenanstoss ""..fName)
                    stelleFahrstrasse(fName)
                end
            end
        end
    end
    
    -- Auflösung
    if type(fsAufloeser) == ""table"" then
        for aName, abschn in pairs(fsAufloeser) do
            if abschn.pc == tostring(pc) and tostring(abschn.au) == side and abschn.fb == color and state == ""ON"" and type(fahrstrassen) == ""table"" then
                log.debug(""onRedstoneChange: Auflösekontakt ""..aName)
                for fName, fahrstrasse in pairs(fahrstrassen) do
                    if fahrstrasse.status ~= nil and fahrstrasse.status > 0 and fahrstrasse.aufloeseAbschn == aName then
                        loeseFSauf(fName)
                    end
                end
            end
        end
    end
end

log.debug(""Init Kommunikation"")
kommunikation.init(protocol, config.modem, nil, log)

log.debug(""Starte Timer für Reset"")
nachricht = ""Verbinde...""
rednet.broadcast(""reset"")
neuzeichnen()

-- warte 5 Sekunden, damit die Clients starten können.
kommunikation.setzteTimer(5, reset)

log.debug(""Start Event-Handling"")
events.listen({
    onRednetReceive = function(eventData)
        if kommunikation.rednetMessageReceivedServer(eventData.id, eventData.msg, onRedstoneChange) then
            neuzeichnen()
        end
    end,
    onMonitorTouch = function(eventData)
        behandleKlick(eventData.x, eventData.y)
        neuzeichnen()
    end,
    onTimerEvent = function(eventData)
        if kommunikation.behandleTimer(eventData.id) then
            neuzeichnen()
        end
    end,
    onCharEvent = function(eventData)
        if eventData.char == ""p"" then
            projektierungsModus = not projektierungsModus
            log.warn(""Projektierungs-Modus ""..(projektierungsModus and ""ein"" or ""aus""))
        end
    end,
})

log.info(""Ende"")
kommunikation.deinit()
"
eZg8uYrw,D2 set to max,VMaksimoski008,C++,Saturday 23rd of December 2023 07:09:58 AM CDT,"#include <bits/stdc++.h>

#define pb push_back
#define eb emplace_back
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define uniq(x) x.erase(unique(all(x)), x.end())
#define rall(x) x.rbegin(), x.rend()
//#define int long long

using namespace std;

using ll = long long;
using ull = unsigned long long;
using ld = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

const int mod = 1e9 + 7;
const int LOG = 20;
const int maxn = 1e5 + 5;
const double eps = 1e-9;

void setIO() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
}

struct SegTree {
    int n;
    vector<vector<pii> > tree;
    vector<int> v;

    SegTree(vector<int> &_v) {
        v = _v;
        n = sz(v);
        tree.resize(4*n+5);
        build(1, 0, n-1);
    }

    void build(int u, int tl, int tr) {
        if(tl == tr) {
            tree[u] = {{v[tl], tl}};
        } else {
            int tm = (tl + tr) / 2;
            build(2*u, tl, tm);
            build(2*u+1, tm+1, tr);
            merge(all(tree[2*u]), all(tree[2*u+1]), back_inserter(tree[u]));
        }
    }

    int findRight(int u, int tl, int tr, int l, int r, int val) {
        if(tl > tr || l > tr || tl > r) return 1e9;

        if(l <= tl && tr <= r) {
            auto p = lower_bound(all(tree[u]), pii{val, 0});
            if(p == tree[u].end()) return 1e9;
            pii x = *p;
            if(x.first != val) return 1e9;
            return x.second;
        }

        int tm = (tl + tr) / 2;
        return min(
            findRight(2*u, tl, tm, l, r, val),
            findRight(2*u+1, tm+1, tr, l, r, val)
        );
    }

    int findRight(int l, int r, int val) {
        return findRight(1, 0, n-1, l, r, val);
    }

    int findLeft(int u, int tl, int tr, int l, int r, int val) {
        if(tl > tr || l > tr || tl > r) return -1;

        if(l <= tl && tr <= r) {
            int l=0, r=sz(tree[u])-1;
            bool ok = 0;
            int pos = 0;

            while(l <= r) {
                int mid = (l + r) / 2;
                if(tree[u][mid].first > val) pos = mid, r = mid - 1, ok = 1;
                else l = mid + 1;
            }
            
            if(!ok) {
                if(tree[u].back().first == val) return tree[u].back().second;
                return -1;
            } else {
                if(pos == 0) return -1;
                if(tree[u][pos-1].first == val) return tree[u][pos-1].second;
            }

            return -1;
        }

        int tm = (tl + tr) / 2;
        return max(
            findLeft(2*u, tl, tm, l, r, val),
            findLeft(2*u+1, tm+1, tr, l, r, val)
        );
    }

    int findLeft(int l, int r, int val) {
        return findLeft(1, 0, n-1, l, r, val);
    }
};

void solve() {
    int n;
    cin >> n;
    vector<int> a(n), b(n);
    for(int &x : a) cin >> x;
    for(int &x : b) cin >> x;

    for(int i=0; i<n; i++) {
        if(a[i] > b[i]) {
            cout << ""NO\n"";
            return ;
        } 
    }

    vector<vector<int> > table(n+1, vector<int>(20, 1e9));
    vector<int> log_dp(n+1, 0);
    log_dp[1] = 0;
    for(int i=2; i<=n; i++) log_dp[i] = log_dp[i/2] + 1;

    for(int i=0; i<n; i++) table[i][0] = b[i];

    for(int k=1; k<20; k++)
        for(int i=0; i+(1<<k)-1<n; i++)
            table[i][k] = min(table[i][k-1], table[i+(1<<(k-1))][k-1]);

    auto query = [&](int l, int r) {
        int k = log_dp[r-l+1];
        return min(
            table[l][k],
            table[r-(1<<k)+1][k]
        );
    };

    SegTree tree(a);
    //cout << tree.findLeft(0, 2, 1) << '\n';
    for(int i=0; i<n; i++) {
        if(a[i] == b[i]) continue;
        bool ok = 0;

        int j = tree.findRight(i, n-1, b[i]);
        if(j != 1e9) {
            if(query(i, j) >= b[i]) {
                ok = 1;
            }
        }

        j = tree.findLeft(0, i, b[i]);
        if(j != -1) {
            if(query(j, i) >= b[i]) {
                ok = 1;
            }
        }
 
        if(!ok) {
            cout << ""NO\n"";
            return;
        }
    }

    cout << ""YES\n"";
}

int32_t main() {
    setIO();

    int t = 1;
    cin >> t;
    
    while(t--)
        solve();

    return 0;
}"
2uP0JyEY,controller/Logout.php,suhupokemon,PHP,Saturday 23rd of December 2023 07:07:03 AM CDT,"<?php

class Logout
{
    public function index()
    {
        session_start();
        session_destroy();
        header('location: ' . base_url . '/login');
    }
}
"
TAShhAq7,views/login/login.php,suhupokemon,HTML 5,Saturday 23rd of December 2023 07:06:34 AM CDT,"<!DOCTYPE html>
<html>

<head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>Bukita | Login</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

    <!-- Font Awesome -->
    <link rel=""stylesheet"" href=""<?= base_url; ?>/plugins/fontawesome-free/css/all.min.css"">
    <!-- Ionicons -->
    <link rel=""stylesheet"" href=""https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css"">
    <!-- icheck bootstrap -->
    <link rel=""stylesheet"" href=""<?= base_url; ?>/plugins/icheck-bootstrap/icheckbootstrap.min.css"">
    <!-- Theme style -->
    <link rel=""stylesheet"" href=""<?= base_url; ?>/dist/css/adminlte.min.css"">
    <!-- Google Font: Source Sans Pro -->
    <link href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"" rel=""stylesheet"">
</head>

<body class=""hold-transition login-page"">
    <div class=""login-box"">
        <div class=""login-logo"">
            <b>Bu</b>Kita
        </div>
        <!-- /.login-logo -->
        <div class=""card"">
            <div class=""card-body login-card-body"">
                <p class=""login-box-msg"">Silakan login terlebih dahulu.</p>
                <form action=""<?= base_url; ?>/login/prosesLogin"" method=""post"">
                    <div class=""input-group mb-3"">
                        <input type=""text"" class=""form-control"" placeholder=""ketikkan username.."" name=""username"">
                        <div class=""input-group-append"">
                            <div class=""input-group-text"">
                                <span class=""fas fa-user""></span>
                            </div>
                        </div>
                    </div>
                    <div class=""input-group mb-3"">
                        <input type=""password"" class=""form-control"" placeholder=""ketikkan password.."" name=""password"">
                        <div class=""input-group-append"">
                            <div class=""input-group-text"">
                                <span class=""fas fa-lock""></span>
                            </div>
                        </div>
                    </div>
                    <div class=""row"">
                        <!-- /.col -->
                        <div class=""col-4"">
                            <button type=""submit"" class=""btn btn-primary btn-block"">Sign In</button>
                        </div>
                        <!-- /.col -->
                    </div>
                </form>
            </div>
            <!-- /.login-card-body -->
        </div>
        <div class=""row"">
            <div class=""col-sm-12"">
                <?php
                Flasher::Message();
                ?>
            </div>
        </div>
    </div>
    <!-- /.login-box -->

    <!-- jQuery -->
    <script src=""<?= base_url; ?>/plugins/jquery/jquery.min.js""></script>
    <!-- Bootstrap 4 -->
    <script src=""<?= base_url; ?>/plugins/bootstrap/js/bootstrap.bundle.min.js""></script>
    <!-- AdminLTE App -->
    <script src=""<?= base_url; ?>/dist/js/adminlte.min.js""></script>
</body>

</html>"
3VLkUwzR,model/LoginModel.php,suhupokemon,PHP,Saturday 23rd of December 2023 07:06:01 AM CDT,"<?php

class LoginModel
{
    private $table = 'user';
    private $db;

    public function __construct()
    {
        $this->db = new Database;
    }

    public function checkLogin($data)
    {
        $query = ""SELECT * FROM "" . $this->table . "" WHERE username = :username AND password = :password"";
        $this->db->query($query);
        $this->db->bind('username', $data['username']);
        $this->db->bind('password', md5($data['password']));
        $data =  $this->db->single();

        return $data;
    }
}
"
xBHFYHiz,controller/Login.php,suhupokemon,PHP,Saturday 23rd of December 2023 07:05:04 AM CDT,"<?php

class Login extends Controller
{
    public function index()
    {
        $data['title'] = 'Halaman Login';
        $this->view('login/login', $data);
    }

    public function prosesLogin()
    {
        if ($row = $this->model('LoginModel')->checkLogin($_POST) > 0) {
            $_SESSION['username'] = $row['username'];
            $_SESSION['nama'] = $row['nama'];
            $_SESSION['session_login'] = 'sudah_login';
            header('location: ' . base_url . '/home');
        } else {
            Flasher::setMessage('Username / Password', 'salah.', 'danger');
            header('location: ' . base_url . '/login');
            exit;
        }
    }
}
"
2e77BgeY,views/templates/footer.php,suhupokemon,PHP,Saturday 23rd of December 2023 07:00:48 AM CDT,"    <footer class=""main-footer"">
        <b>Bukita 2023</b> All rights reserved.
    </footer>

    <!-- Control Sidebar -->
    <aside class=""control-sidebar control-sidebar-dark"">
        <!-- Control sidebar content goes here -->
    </aside>
    <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->

    <!-- jQuery -->
    <script src=""<?= base_url; ?>/plugins/jquery/jquery.min.js""></script>
    <!-- Bootstrap 4 -->
    <script src=""<?= base_url; ?>/plugins/bootstrap/js/bootstrap.bundle.min.js""></script>
    <!-- AdminLTE App -->
    <script src=""<?= base_url; ?>/dist/js/adminlte.min.js""></script>
    <!-- AdminLTE for demo purposes -->
    <script src=""<?= base_url; ?>/dist/js/demo.js""></script>
    </body>

    </html>"
Xe2pVBkf,views/templates/header.php,suhupokemon,PHP,Saturday 23rd of December 2023 07:00:16 AM CDT,"<!DOCTYPE html>
<html>

<head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>Bukita</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

    <!-- Font Awesome -->
    <link rel=""stylesheet"" href=""<?= base_url; ?>/plugins/fontawesome-free/css/all.min.css"">
    <!-- Ionicons -->
    <link rel=""stylesheet"" href=""https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css"">
    <!-- overlayScrollbars -->
    <link rel=""stylesheet"" href=""<?= base_url; ?>/dist/css/adminlte.min.css"">
    <!-- Google Font: Source Sans Pro -->
    <link href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"" rel=""stylesheet"">
</head>

<body class=""hold-transition sidebar-mini"">
    <!-- Site wrapper -->
    <div class=""wrapper"">
        <!-- Navbar -->
        <nav class=""main-header navbar navbar-expand navbar-white navbar-light"">
            <ul class=""navbar-nav"">
                <li class=""nav-item"">
                    <a class=""nav-link"" data-widget=""pushmenu"" href=""#""><i class=""fas fa-bars""></i></a>
                </li>
            </ul>
            <!-- Right navbar links -->
            <ul class=""navbar-nav ml-auto"">
                <li class=""nav-item d-none d-sm-inline-block"">
                    <a href=""<?= base_url; ?>/logout"" class=""nav-link"">Logout</a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->"
fc78UJwT,Tycoon Faction Perks,glitchdetector,Lua,Saturday 23rd of December 2023 06:59:51 AM CDT,"PURCHASEABLE_PERKS = {
    {item = ""parachute"", limit = 5, name = ""Parachute"", data = {}, price = 50 * 10^6, options = {}, info = ""Allows players to obtain a parachute""},
    {item = ""garage"", limit = 4, name = ""Garage"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows spawning of vehicles""},
    {item = ""water_garage"", limit = 4, name = ""Watercraft Garage"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows spawning of boats""},
    {item = ""atm"", limit = 2, name = ""ATM"", data = {}, price = 8 * 10^6, options = {}},
    {item = ""hangar"", limit = 2, name = ""Hangar"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows spawning of planes<br/>NOTE: Planes must only be used in areas designed for planes, normal flight and ATC rules apply.</br>Prop Runways can be used, just keep them away from roads and other players.""},
    {item = ""helipad"", limit = 2, name = ""Helipad"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows spawning of helicopters""},
    {item = ""market"", limit = 6, name = ""Market (General Store)"", data = {market = ""General Store""}, price = 8 * 10^6, options = {}, datafunc = function(data) return ""Type: "" .. data.market end},
    {item = ""market"", limit = 6, name = ""Market (Gas Station)"", data = {market = ""Gas Station""}, price = 8 * 10^6, options = {}},
    {item = ""market"", limit = 6, name = ""Market (Traffic Permits)"", data = {market = ""Traffic Permits""}, price = 8 * 10^6, options = {}},
    {item = ""market"", limit = 6, name = ""Market (Fishing / Diving)"", data = {market = ""Fishing / Diving""}, price = 8 * 10^6, options = {}},
    {item = ""market"", limit = 6, name = ""Market (Medical Center)"", data = {market = ""Medical Center""}, price = 12 * 10^6, options = {}},
    {item = ""market"", limit = 6, name = ""Market (Equipment)"", data = {market = ""Equipment""}, price = 12 * 10^6, options = {}},
    {item = ""carwash"", limit = 1, name = ""Car Wash"", data = {}, price = 8 * 10^6, options = {}},
    {item = ""repair"", limit = 5, name = ""Repair Shop"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows repair of vehicles""},
    {item = ""repair_instant"", limit = 5, name = ""Instant Repair Shop"", data = {}, price = 1500 * 10^6, options = {}, info = ""Instantly repairs your vehicle""},
    {item = ""fuel"", limit = 5, name = ""Fuel Station"", data = {}, price = 25 * 10^6, options = {}, info = ""Contains all fuel types""},
    {item = ""jobcenter"", limit = 1, name = ""Job Center"", data = {}, price = 35 * 10^6, options = {}, info = ""Gives access to most jobs""},
    {item = ""spawn"", limit = 1, name = ""Spawn Point"", data = {}, price = 75 * 10^6, options = {}},
    {item = ""speedtrap"", limit = 5, name = ""Speed Trap"", data = {tickets = 0, earnings = 0, highscore = 0}, price = 20 * 10^6, options = {}, info = ""Places a speed trap camera.<br/>All speeding tickets generated by this trap goes directly into the factions credit balance"", datafunc = function(data) return ""Tickets: "" .. data.tickets .. ""<br/>Total Fees: "" .. data.earnings .. ""<br/>Fastest Recorded Speed: "" .. data.highscore end},
    {item = ""self_storage"", limit = 1, name = ""Self Storage"", data = {size = 50000, permissions = {}}, price = 750 * 10^6, options = {}, info = ""Capacity: 500 000kg<br/>Free to use""},
    {item = ""warp_a"", limit = 1, name = ""Warp A"", data = {}, price = 10 * 10^6, options = {}, info = ""Allows you to warp to and from Warp B<br/>Direction is based on your current direction)""},
    {item = ""warp_b"", limit = 1, name = ""Warp B"", data = {}, price = 10 * 10^6, options = {}, info = ""Allows you to warp to and from Warp A<br/>Direction is based on your current direction)""},
    {item = ""warp_c"", limit = 1, name = ""Warp C"", data = {}, price = 50 * 10^6, options = {}, info = ""Allows you to warp to and from Warp D<br/>Direction is based on your current direction)""},
    {item = ""warp_d"", limit = 1, name = ""Warp D"", data = {}, price = 50 * 10^6, options = {}, info = ""Allows you to warp to and from Warp C<br/>Direction is based on your current direction)""},
    {item = ""warp_e"", limit = 1, name = ""Warp E"", data = {}, price = 150 * 10^6, options = {}, info = ""Allows you to warp to and from Warp F<br/>Direction is based on your current direction)""},
    {item = ""warp_f"", limit = 1, name = ""Warp F"", data = {}, price = 150 * 10^6, options = {}, info = ""Allows you to warp to and from Warp E<br/>Direction is based on your current direction)""},
    {item = ""warp_g"", limit = 1, name = ""Warp G"", data = {}, price = 300 * 10^6, options = {}, info = ""Allows you to warp to and from Warp H<br/>Direction is based on your current direction)""},
    {item = ""warp_h"", limit = 1, name = ""Warp H"", data = {}, price = 300 * 10^6, options = {}, info = ""Allows you to warp to and from Warp G<br/>Direction is based on your current direction)""},
    -- {item = ""veh_warp_a"", limit = 1, name = ""Vehicle Warp A"", data = {}, price = 25 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp B<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_b"", limit = 1, name = ""Vehicle Warp B"", data = {}, price = 25 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp A<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_c"", limit = 1, name = ""Vehicle Warp C"", data = {}, price = 100 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp D<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_d"", limit = 1, name = ""Vehicle Warp D"", data = {}, price = 100 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp C<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_e"", limit = 1, name = ""Vehicle Warp E"", data = {}, price = 300 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp F<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_f"", limit = 1, name = ""Vehicle Warp F"", data = {}, price = 300 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp E<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_g"", limit = 1, name = ""Vehicle Warp G"", data = {}, price = 500 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp H<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    -- {item = ""veh_warp_h"", limit = 1, name = ""Vehicle Warp H"", data = {}, price = 500 * 10^6, options = {}, info = ""Allows you to warp to and from Vehicle Warp G<br/>Allows vehicles to also be warped<br/>Direction is based on your current direction!""},
    {item = ""biz_collection"", limit = 1, name = ""Business Collector"", data = {}, price = 750 * 10^6, options = {}, info = ""Allows collection of all business bonuses at once""},
    -- {item = ""marketplace"", limit = 1, name = ""Marketplace"", data = {}, price = 35 * 10^6, options = {}, info = ""Access point for the marketplace""},
    {item = ""skinshop"", limit = 1, name = ""Clothing Store"", data = {}, price = 15 * 10^6, options = {}, info = ""Allows changing of clothes""},
    {item = ""wardrobe"", limit = 1, name = ""Wardrobe"", data = {}, price = 35 * 10^6, options = {}, info = ""Allows saving and loading of outfits""},
    {item = ""bonus_exp_5"", limit = 1, name = ""5% EXP Bonus"", data = {}, price = 250 * 10^6, options = {}, info = ""Permanent 5% EXP bonus for members"", permanent = true},
    {item = ""bonus_range"", limit = 1, name = ""200m HQ Range Bonus"", data = {}, price = 1000 * 10^6, options = {}, info = ""Permanent 200m HQ range increase<br/>Increases the total HQ range to 550m"", permanent = true},
    -- {item = ""casino"", limit = 1, name = ""Slot Machine"", data = {}, price = 35 * 10^6, options = {}, info = ""Allows you to gamble all your life savings.""},
    {item = ""lsc"", limit = 5, name = ""Los Santos Customs"", data = {}, price = 120 * 10^6, options = {}, info = ""Allows vehicle customization""},
    {item = ""vehicle_dealership"", limit = 1, name = ""Vehicle Dealership"", data = {}, price = 120 * 10^6, options = {}, info = ""Allows vehicles to be bought""},
    {item = ""aircraft_dealership"", limit = 1, name = ""Aircraft Dealership"", data = {}, price = 120 * 10^6, options = {}, info = ""Allows Aircraft to be bought""},
    {item = ""boat_dealership"", limit = 1, name = ""Boat Dealership"", data = {}, price = 120 * 10^6, options = {}, info = ""Allows Boats to be bought""},

    -- {item = ""membercap"", limit = 20, name = ""Member Limit +5"", data = {}, price = 25 * 10^6, options = {}, info = ""Increases the maximum faction member limit by 1"", permanent = true},
    -- {item = ""range"", limit = 10, name = ""Range Limit +50m"", data = {}, price = 50 * 10^6, options = {}, info = ""Increases the faction HQ range by 50m (25m in each direction)"", permanent = true},
    {item = ""prop"", limit = 0, name = ""Prop / Object"", data = {}, price = 0 * 10^6, options = {}, info = ""A placed object"", hidden = true, datafunc = function(data) return ""Type: "" .. data.propName end},

    {item = ""boost_tickspeed"", limit = 1, name = ""Extra Crafting Speed"", data = {}, price = 2000 * 10^6, options = {}, info = ""Any crafting done within 30 meters will have a 25% speed increase""},
    {item = ""boost_vehicleperf"", limit = 1, name = ""Garage Speed Boost"", data = {}, price = 2000 * 10^6, options = {}, info = ""Garages within 30 meters have a 10% speed boost applied to spawned vehicles""},
    {item = ""boost_exp"", limit = 1, name = ""5% EXP Boost Zone"", data = {}, price = 2000 * 10^6, options = {}, info = ""Players within a 30 meter zone will have a 5% EXP Boost""},

    {item = ""pickup_engine"", limit = 5, name = ""Engine Swapper"", data = {}, price = 2000 * 10^6, options = {}, info = ""Adds an Engine Swap location, allowing you to swap engine audio""},

    {item = ""pickup_perf15"", limit = 10, name = ""15% Vehicle Boost Vendor"", data = {}, price = 1500 * 10^6, options = {}, info = ""You can temporarily boost vehicles with a 15% boost here. It's not free though""},
    {item = ""pickup_perf25"", limit = 10, name = ""25% Vehicle Boost Vendor"", data = {}, price = 3500 * 10^6, options = {}, info = ""You can temporarily boost vehicles with a 25% boost here. It's not free though""},
}"
YAjiVruy,23 с изб и с огр,nq1s788,Python,Saturday 23rd of December 2023 06:48:16 AM CDT,"a = [0] * 22
a[1] = 1
for i in range(2, 11):
    a[i] += a[i - 1]
    if i % 2 == 0:
        a[i] += a[i // 2]
for i in range(11, 22):
    if i == 17:
        continue
    a[i] += a[i - 1]
    if i % 2 == 0 and i // 2 >= 10:
        a[i] += a[i // 2]
print(a[21])"
7yg11n8v,views/templates/sidebar.php,suhupokemon,PHP,Saturday 23rd of December 2023 06:47:35 AM CDT,"    <!-- Main Sidebar Container -->
    <aside class=""main-sidebar sidebar-dark-primary elevation-4"">
        <!-- Brand Logo -->
        <a href=""#"" class=""brand-link"">
            <span class=""brand-text font-weight-light"">Buku Kita</span>
        </a>

        <!-- Sidebar -->
        <div class=""sidebar"">
            <!-- Sidebar user (optional) -->
            <div class=""user-panel mt-3 pb-3 mb-3 d-flex"">
                <div class=""info"">
                    <a href=""#"" class=""d-block"">@edyarosadi</a>
                </div>
            </div>

            <!-- Sidebar Menu -->
            <nav class=""mt-2"">
                <ul class=""nav nav-pills nav-sidebar flex-column"" data-widget=""treeview"" role=""menu"" data-accordion=""false"">
                    <!-- Add icons to the links using the .nav-icon class with font-awesome or any other icon font library -->
                    <li class=""nav-item"">
                        <a href=""<?= base_url; ?>/home"" class=""nav-link"">
                            <i class=""nav-icon fas fa-tachometer-alt""></i>
                            <p>
                                Dashboard
                            </p>
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""<?= base_url; ?>/kategori"" class=""nav-link"">
                            <i class=""nav-icon fas fa-copy""></i>
                            <p>
                                Kategori
                            </p>
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""<?= base_url; ?>/buku"" class=""nav-link"">
                            <i class=""nav-icon fas fa-book""></i>
                            <p>
                                Buku
                            </p>
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""<?= base_url; ?>/user"" class=""nav-link"">
                            <i class=""nav-icon fas fa-users""></i>
                            <p>
                                User
                            </p>
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""<?= base_url; ?>/about"" class=""nav-link"">
                            <i class=""nav-icon fas fa-user""></i>
                            <p>
                                About Me
                            </p>
                        </a>
                    </li>
                </ul>
            </nav>
            <!-- /.sidebar-menu -->
        </div>
        <!-- /.sidebar -->
    </aside>"
3hCzPyrA,Valid  Phone Number,Thomas_Shelbyyy,C++,Saturday 23rd of December 2023 06:46:27 AM CDT,"// Bismillahir Rahmanir Rahim
/*

string author;
author = Hafiz_Sakib;

*/
#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef unsigned long long ull;

typedef vector<ll> vi;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<char> vc;
typedef vector<vector<ll>> vvi;
typedef vector<pair<ll, ll>> vpii;
typedef vector<pair<string, ll>> vpsi;
typedef pair<ll, ll> pii;
typedef map<ll, ll> mii;
typedef map<string, ll> msi;
typedef set<ll> si;
typedef set<char> sc;
typedef set<string> ss;

#define pb push_back
#define mp make_pair
#define in insert
#define fi first
#define se second
#define space ' '
#define endl ""\n""
#define yes cout << ""YES\n""
#define no cout << ""NO\n""

#define b() begin()
#define e() end()
#define all(data) data.begin(), data.end()
#define rall(data) data.rbegin(), data.rend()
#define vecMax(data) *max_element(data.begin(), data.end())
#define vecMin(data) *min_element(data.begin(), data.end())
#define vecSum(data) accumulate(data.begin(), data.end(), 0)

#define ignore cin.ignore(numeric_limits<streamsize>::max(), '\n')
#define stringLower(data) transform(data.begin(), data.end(), data.begin(), ::tolower)
#define stringUpper(data) transform(data.begin(), data.end(), data.begin(), ::toupper)

#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define mod 1000000007
const int mx = 1e8 + 123;
const double eps = 1e-12;

#define debug(x) cerr << x << endl;
#define here fprintf(stderr, ""====I am Here====\n"");

#define Boost                         \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)

void Boom()
{
    string s;
    cin >> s;

    if (s.size() != 14 || (s[0] != '+' || s[1] != '8' || s[2] != '8' || s[3] != '0' || s[4] != '1') || !(s[5] >= '2' && s[5] <= '9'))
    {
        no;
    }
    else
    {
        for (int i = 6; i < s.size(); i++)
        {
            if (s[i] == '+')
            {
                no;
                return;
            }
        }
        yes;
    }
}

int main()
{
    Boost;

    int t = 1;
    cin >> t;
    while (t--)
    {
        Boom();
    }

    return 0;
}
"
Q53EEnSm,tabel user,suhupokemon,MySQL,Saturday 23rd of December 2023 06:42:09 AM CDT,"CREATE TABLE `buku_kita`.`user` (`id` INT NOT NULL AUTO_INCREMENT , `nama` VARCHAR(50) NULL DEFAULT NULL , `username` VARCHAR(25) NOT NULL , `password` VARCHAR(255) NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB;"
