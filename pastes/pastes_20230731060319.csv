id,title,username,language,date,content
vyTGEGT2,lekcja12 baza danych,drakon-firestone,SQL,Monday 31st of July 2023 12:06:58 AM CDT,"CREATE TABLE users(
 	id int,
    username varchar(255),
    password varchar(255)
);

insert into users values 
(1, ""Jan"", ""kowalsky""),
(2, ""Pixel"", ""qwerty""),
(3, ""Teodor"", ""123456""),
(4, ""Hiper"", ""japko""),
(5, ""Oli"", ""haslo1""),
(6, ""Pierniczek"", ""password""),
(7, ""Demo"", ""pass"");"
SDkikPci,Неправильно считается Z-value,AnnaCh1971,Python,Sunday 30th of July 2023 11:55:51 PM CDT,"# неправильно считается p-value
# то есть неправильно считается Z-value, потому что соответствие p-value и z-value я проверила
from scipy import stats as st
import numpy as np
import math as mth

alpha = 0.05  # критический уровень статистической значимости

purchases = np.array([100, 100])
leads = np.array([400, 500])

# ваш код
# процентов заказов в группе, где были предложены дополнительные опции (как называется эта группа?)
p1  = purchases[0]/leads[0]

#процент заказов в контрольной группе
p2  = purchases[1]/leads[1]


# в следующий раз можно считать напрямую difference из purchses и leads, без расчета p1 и p2 в отдельных формулах
difference = p1-p2
p_combined = (purchases[0] + purchases[1])/(leads[0] + leads[1])

z_value = difference / mth.sqrt(p_combined * (1 - p_combined) * (1/purchases[0] + 1/purchases[1]))

# ваш код
distr = st.norm(0,1)


p_value = (1 - distr.cdf(abs(z_value))) * 2

if p_value < alpha:
    print('Отвергаем нулевую гипотезу: между долями есть значимая разница')
else:
    print('Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными'
    ) "
6pUYYaXD,Nigerian scammers [31-7-1/2023],bombaires,HTML,Sunday 30th of July 2023 11:49:30 PM CDT,"<a href=""mailto:peter_alexandel@yahoo.co.jp"">peter_alexandel@yahoo.co.jp</a>
<a href=""mailto:pa028820@gmail.com"">pa028820@gmail.com</a>
<a href=""mailto:pa.02882.0@gmail.com"">pa.02882.0@gmail.com</a>
<a href=""mailto:pa.02.8.8.20@gmail.com"">pa.02.8.8.20@gmail.com</a>
<a href=""mailto:pa0.28820@gmail.com"">pa0.28820@gmail.com</a>
<a href=""mailto:pa.0288.2.0@gmail.com"">pa.0288.2.0@gmail.com</a>
<a href=""mailto:pa02.88.2.0@gmail.com"">pa02.88.2.0@gmail.com</a>
<a href=""mailto:pa.0.2.8.820@gmail.com"">pa.0.2.8.820@gmail.com</a>
<a href=""mailto:p.a.0.2.88.20@gmail.com"">p.a.0.2.88.20@gmail.com</a>
<a href=""mailto:p.a.0288.20@gmail.com"">p.a.0288.20@gmail.com</a>
<a href=""mailto:pa02.88.20@gmail.com"">pa02.88.20@gmail.com</a>
<a href=""mailto:p.a.0.28820@gmail.com"">p.a.0.28820@gmail.com</a>
<a href=""mailto:pa.02.88.20@gmail.com"">pa.02.88.20@gmail.com</a>
<a href=""mailto:p.a.028.82.0@gmail.com"">p.a.028.82.0@gmail.com</a>
<a href=""mailto:p.a.0.28.8.2.0@gmail.com"">p.a.0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a0.288.2.0@gmail.com"">p.a0.288.2.0@gmail.com</a>
<a href=""mailto:p.a02.88.2.0@gmail.com"">p.a02.88.2.0@gmail.com</a>
<a href=""mailto:p.a.0288.2.0@gmail.com"">p.a.0288.2.0@gmail.com</a>
<a href=""mailto:pa028.8.2.0@gmail.com"">pa028.8.2.0@gmail.com</a>
<a href=""mailto:p.a02.88.20@gmail.com"">p.a02.88.20@gmail.com</a>
<a href=""mailto:p.a.0.288.20@gmail.com"">p.a.0.288.20@gmail.com</a>
<a href=""mailto:p.a.02882.0@gmail.com"">p.a.02882.0@gmail.com</a>
<a href=""mailto:p.a.0.2882.0@gmail.com"">p.a.0.2882.0@gmail.com</a>
<a href=""mailto:p.a.02.88.20@gmail.com"">p.a.02.88.20@gmail.com</a>
<a href=""mailto:p.a.02.8820@gmail.com"">p.a.02.8820@gmail.com</a>
<a href=""mailto:p.a0.28.82.0@gmail.com"">p.a0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.2.8.820@gmail.com"">pa0.2.8.820@gmail.com</a>
<a href=""mailto:pa028.8.20@gmail.com"">pa028.8.20@gmail.com</a>
<a href=""mailto:p.a0.28.820@gmail.com"">p.a0.28.820@gmail.com</a>
<a href=""mailto:pa.0.2.8.82.0@gmail.com"">pa.0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a.0.28.8.20@gmail.com"">p.a.0.28.8.20@gmail.com</a>
<a href=""mailto:pa0.28.8.20@gmail.com"">pa0.28.8.20@gmail.com</a>
<a href=""mailto:pa0.288.20@gmail.com"">pa0.288.20@gmail.com</a>
<a href=""mailto:pa0288.20@gmail.com"">pa0288.20@gmail.com</a>
<a href=""mailto:pa.0.28.8.2.0@gmail.com"">pa.0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a.0.288.2.0@gmail.com"">p.a.0.288.2.0@gmail.com</a>
<a href=""mailto:p.a02.8.82.0@gmail.com"">p.a02.8.82.0@gmail.com</a>
<a href=""mailto:p.a0.28.8.20@gmail.com"">p.a0.28.8.20@gmail.com</a>
<a href=""mailto:p.a.02.88.2.0@gmail.com"">p.a.02.88.2.0@gmail.com</a>
<a href=""mailto:pa028.82.0@gmail.com"">pa028.82.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.82.0@gmail.com"">p.a.0.2.8.82.0@gmail.com</a>
<a href=""mailto:pa.0.2.88.20@gmail.com"">pa.0.2.88.20@gmail.com</a>
<a href=""mailto:p.a02.8.820@gmail.com"">p.a02.8.820@gmail.com</a>
<a href=""mailto:p.a0.28820@gmail.com"">p.a0.28820@gmail.com</a>
<a href=""mailto:p.a02882.0@gmail.com"">p.a02882.0@gmail.com</a>
<a href=""mailto:pa02.8.8.20@gmail.com"">pa02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0288.20@gmail.com"">p.a0288.20@gmail.com</a>
<a href=""mailto:pa.02.88.2.0@gmail.com"">pa.02.88.2.0@gmail.com</a>
<a href=""mailto:pa.02.8.82.0@gmail.com"">pa.02.8.82.0@gmail.com</a>
<a href=""mailto:pa.0.28.8.20@gmail.com"">pa.0.28.8.20@gmail.com</a>
<a href=""mailto:pa.0.28820@gmail.com"">pa.0.28820@gmail.com</a>
<a href=""mailto:p.a.02.8.820@gmail.com"">p.a.02.8.820@gmail.com</a>
<a href=""mailto:p.a0.2.8.820@gmail.com"">p.a0.2.8.820@gmail.com</a>
<a href=""mailto:pa.0.2.8.8.20@gmail.com"">pa.0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa0.2.8.82.0@gmail.com"">pa0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a0288.2.0@gmail.com"">p.a0288.2.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.820@gmail.com"">p.a.0.2.8.820@gmail.com</a>
<a href=""mailto:pa.028.820@gmail.com"">pa.028.820@gmail.com</a>
<a href=""mailto:pa0.2.88.20@gmail.com"">pa0.2.88.20@gmail.com</a>
<a href=""mailto:pa.02.8.820@gmail.com"">pa.02.8.820@gmail.com</a>
<a href=""mailto:p.a.02.8.8.2.0@gmail.com"">p.a.02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a028.8.20@gmail.com"">p.a028.8.20@gmail.com</a>
<a href=""mailto:p.a.028820@gmail.com"">p.a.028820@gmail.com</a>
<a href=""mailto:pa02882.0@gmail.com"">pa02882.0@gmail.com</a>
<a href=""mailto:p.a0.2.8.82.0@gmail.com"">p.a0.2.8.82.0@gmail.com</a>
<a href=""mailto:p.a.0.2.8.8.2.0@gmail.com"">p.a.0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa.028.82.0@gmail.com"">pa.028.82.0@gmail.com</a>
<a href=""mailto:p.a0.2.8820@gmail.com"">p.a0.2.8820@gmail.com</a>
<a href=""mailto:pa0.2.88.2.0@gmail.com"">pa0.2.88.2.0@gmail.com</a>
<a href=""mailto:p.a.02.8.82.0@gmail.com"">p.a.02.8.82.0@gmail.com</a>
<a href=""mailto:pa0.2.8.8.20@gmail.com"">pa0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa.0.2.8820@gmail.com"">pa.0.2.8820@gmail.com</a>
<a href=""mailto:pa.028.8.20@gmail.com"">pa.028.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.8.8.2.0@gmail.com"">p.a0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa.02.8.8.2.0@gmail.com"">pa.02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a0.2.88.2.0@gmail.com"">p.a0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa.0.2882.0@gmail.com"">pa.0.2882.0@gmail.com</a>
<a href=""mailto:p.a028.82.0@gmail.com"">p.a028.82.0@gmail.com</a>
<a href=""mailto:pa028820@gmail.com"">pa028820@gmail.com</a>
<a href=""mailto:p.a02.8.8.20@gmail.com"">p.a02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.88.20@gmail.com"">p.a0.2.88.20@gmail.com</a>
<a href=""mailto:pa.0288.20@gmail.com"">pa.0288.20@gmail.com</a>
<a href=""mailto:p.a.02.8.8.20@gmail.com"">p.a.02.8.8.20@gmail.com</a>
<a href=""mailto:p.a0.2882.0@gmail.com"">p.a0.2882.0@gmail.com</a>
<a href=""mailto:p.a.0.28.82.0@gmail.com"">p.a.0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.28.82.0@gmail.com"">pa0.28.82.0@gmail.com</a>
<a href=""mailto:pa0.2.882.0@gmail.com"">pa0.2.882.0@gmail.com</a>
<a href=""mailto:p.a02.8820@gmail.com"">p.a02.8820@gmail.com</a>
<a href=""mailto:p.a028.820@gmail.com"">p.a028.820@gmail.com</a>
<a href=""mailto:p.a.0.2.8.8.20@gmail.com"">p.a.0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa.028.8.2.0@gmail.com"">pa.028.8.2.0@gmail.com</a>
<a href=""mailto:pa.02.8820@gmail.com"">pa.02.8820@gmail.com</a>
<a href=""mailto:p.a028820@gmail.com"">p.a028820@gmail.com</a>
<a href=""mailto:pa02.882.0@gmail.com"">pa02.882.0@gmail.com</a>
<a href=""mailto:p.a02.882.0@gmail.com"">p.a02.882.0@gmail.com</a>
<a href=""mailto:p.a.0.28.820@gmail.com"">p.a.0.28.820@gmail.com</a>
<a href=""mailto:pa.0.2.882.0@gmail.com"">pa.0.2.882.0@gmail.com</a>
<a href=""mailto:p.a028.8.2.0@gmail.com"">p.a028.8.2.0@gmail.com</a>
<a href=""mailto:pa0288.2.0@gmail.com"">pa0288.2.0@gmail.com</a>
<a href=""mailto:p.a.028.8.20@gmail.com"">p.a.028.8.20@gmail.com</a>
<a href=""mailto:p.a0.2.8.8.20@gmail.com"">p.a0.2.8.8.20@gmail.com</a>
<a href=""mailto:pa0.2.8.8.2.0@gmail.com"">pa0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:pa0.28.8.2.0@gmail.com"">pa0.28.8.2.0@gmail.com</a>
<a href=""mailto:p.a.0.2.88.2.0@gmail.com"">p.a.0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa02.8.820@gmail.com"">pa02.8.820@gmail.com</a>
<a href=""mailto:pa.0.2.88.2.0@gmail.com"">pa.0.2.88.2.0@gmail.com</a>
<a href=""mailto:pa0.2.8820@gmail.com"">pa0.2.8820@gmail.com</a>
<a href=""mailto:pa.0.28.820@gmail.com"">pa.0.28.820@gmail.com</a>
<a href=""mailto:pa0.2882.0@gmail.com"">pa0.2882.0@gmail.com</a>
<a href=""mailto:p.a.028.820@gmail.com"">p.a.028.820@gmail.com</a>
<a href=""mailto:p.a0.288.20@gmail.com"">p.a0.288.20@gmail.com</a>
<a href=""mailto:p.a.0.2.882.0@gmail.com"">p.a.0.2.882.0@gmail.com</a>
<a href=""mailto:pa.0.288.20@gmail.com"">pa.0.288.20@gmail.com</a>
<a href=""mailto:pa02.8.82.0@gmail.com"">pa02.8.82.0@gmail.com</a>
<a href=""mailto:pa02.8820@gmail.com"">pa02.8820@gmail.com</a>
<a href=""mailto:pa.0.28.82.0@gmail.com"">pa.0.28.82.0@gmail.com</a>
<a href=""mailto:pa.028820@gmail.com"">pa.028820@gmail.com</a>
<a href=""mailto:p.a0.2.882.0@gmail.com"">p.a0.2.882.0@gmail.com</a>
<a href=""mailto:pa.0.2.8.8.2.0@gmail.com"">pa.0.2.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a.02.882.0@gmail.com"">p.a.02.882.0@gmail.com</a>
<a href=""mailto:pa02.8.8.2.0@gmail.com"">pa02.8.8.2.0@gmail.com</a>
<a href=""mailto:p.a.028.8.2.0@gmail.com"">p.a.028.8.2.0@gmail.com</a>
<a href=""mailto:p.a02.8.8.2.0@gmail.com"">p.a02.8.8.2.0@gmail.com</a>
<a href=""mailto:pa0.288.2.0@gmail.com"">pa0.288.2.0@gmail.com</a>
<a href=""mailto:pa028.820@gmail.com"">pa028.820@gmail.com</a>
<a href=""mailto:p.a.0.2.8820@gmail.com"">p.a.0.2.8820@gmail.com</a>
<a href=""mailto:pa.02.882.0@gmail.com"">pa.02.882.0@gmail.com</a>
<a href=""mailto:pa0.28.820@gmail.com"">pa0.28.820@gmail.com</a>
<a href=""mailto:pa.0.288.2.0@gmail.com"">pa.0.288.2.0@gmail.com</a>
<a href=""mailto:p.a0.28.8.2.0@gmail.com"">p.a0.28.8.2.0@gmail.com</a>
<a href=""mailto:egobiablessing25@gmail.com"">egobiablessing25@gmail.com</a>
<a href=""mailto:egobi.ab.les.s.i.ng.25@gmail.com"">egobi.ab.les.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.gobiab.les.s.i.n.g.2.5@gmail.com"">e.gobiab.les.s.i.n.g.2.5@gmail.com</a>
<a href=""mailto:egob.iabl.ess.i.ng25@gmail.com"">egob.iabl.ess.i.ng25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.lessing.25@gmail.com"">eg.o.b.ia.b.lessing.25@gmail.com</a>
<a href=""mailto:egob.iab.lessing.2.5@gmail.com"">egob.iab.lessing.2.5@gmail.com</a>
<a href=""mailto:e.g.obi.abl.es.sin.g.25@gmail.com"">e.g.obi.abl.es.sin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.ab.less.i.ng.25@gmail.com"">ego.b.i.ab.less.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obiable.s.sin.g.25@gmail.com"">eg.obiable.s.sin.g.25@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.l.ess.ing25@gmail.com"">e.g.o.bia.b.l.ess.ing25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.essin.g.25@gmail.com"">e.gobi.a.b.l.essin.g.25@gmail.com</a>
<a href=""mailto:egobi.a.bl.es.s.in.g.2.5@gmail.com"">egobi.a.bl.es.s.in.g.2.5@gmail.com</a>
<a href=""mailto:ego.bi.a.b.le.ss.in.g.2.5@gmail.com"">ego.bi.a.b.le.ss.in.g.2.5@gmail.com</a>
<a href=""mailto:e.go.b.iabl.e.ssin.g.2.5@gmail.com"">e.go.b.iabl.e.ssin.g.2.5@gmail.com</a>
<a href=""mailto:e.go.b.ia.bl.e.ssing25@gmail.com"">e.go.b.ia.bl.e.ssing25@gmail.com</a>
<a href=""mailto:egob.i.ablessin.g25@gmail.com"">egob.i.ablessin.g25@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.ble.ssi.ng25@gmail.com"">e.g.o.b.ia.ble.ssi.ng25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.ess.i.ng2.5@gmail.com"">e.gobi.a.b.l.ess.i.ng2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.le.s.sin.g2.5@gmail.com"">e.gob.i.a.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:eg.obia.bl.e.s.s.i.n.g.25@gmail.com"">eg.obia.bl.e.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.bi.a.ble.ssi.n.g2.5@gmail.com"">ego.bi.a.ble.ssi.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.iab.le.ssin.g.25@gmail.com"">e.go.b.iab.le.ssin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.b.less.i.n.g.25@gmail.com"">ego.b.i.a.b.less.i.n.g.25@gmail.com</a>
<a href=""mailto:e.go.b.iabl.e.ssi.n.g.25@gmail.com"">e.go.b.iabl.e.ssi.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.ab.l.es.s.in.g25@gmail.com"">ego.b.i.ab.l.es.s.in.g25@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.b.le.ss.ing2.5@gmail.com"">eg.o.b.i.a.b.le.ss.ing2.5@gmail.com</a>
<a href=""mailto:egob.iabl.e.s.sin.g2.5@gmail.com"">egob.iabl.e.s.sin.g2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.bl.es.s.ing2.5@gmail.com"">e.g.ob.ia.bl.es.s.ing2.5@gmail.com</a>
<a href=""mailto:egob.i.a.b.l.e.ssi.n.g.2.5@gmail.com"">egob.i.a.b.l.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gob.iab.les.s.i.ng.25@gmail.com"">e.gob.iab.les.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.gob.iabless.i.n.g2.5@gmail.com"">e.gob.iabless.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.i.ab.l.essing.25@gmail.com"">e.go.b.i.ab.l.essing.25@gmail.com</a>
<a href=""mailto:e.go.b.iab.le.s.si.n.g.2.5@gmail.com"">e.go.b.iab.le.s.si.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.l.ess.i.n.g2.5@gmail.com"">eg.o.b.ia.b.l.ess.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.bl.e.ss.i.ng.2.5@gmail.com"">e.g.o.b.ia.bl.e.ss.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.obi.ab.l.es.s.ing25@gmail.com"">eg.obi.ab.l.es.s.ing25@gmail.com</a>
<a href=""mailto:eg.ob.iab.le.ss.i.ng2.5@gmail.com"">eg.ob.iab.le.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:egobi.a.bl.e.ssin.g2.5@gmail.com"">egobi.a.bl.e.ssin.g2.5@gmail.com</a>
<a href=""mailto:ego.b.i.abl.es.si.n.g25@gmail.com"">ego.b.i.abl.es.si.n.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.ables.s.ing.25@gmail.com"">eg.o.bi.ables.s.ing.25@gmail.com</a>
<a href=""mailto:e.go.b.ia.b.les.sing.2.5@gmail.com"">e.go.b.ia.b.les.sing.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.b.les.sin.g2.5@gmail.com"">eg.o.b.i.a.b.les.sin.g2.5@gmail.com</a>
<a href=""mailto:ego.biable.ssi.ng.25@gmail.com"">ego.biable.ssi.ng.25@gmail.com</a>
<a href=""mailto:e.gob.ia.bl.ess.i.ng2.5@gmail.com"">e.gob.ia.bl.ess.i.ng2.5@gmail.com</a>
<a href=""mailto:ego.b.i.abl.e.s.s.in.g2.5@gmail.com"">ego.b.i.abl.e.s.s.in.g2.5@gmail.com</a>
<a href=""mailto:egob.iab.l.e.ss.i.ng25@gmail.com"">egob.iab.l.e.ss.i.ng25@gmail.com</a>
<a href=""mailto:egob.iab.l.e.ss.ing25@gmail.com"">egob.iab.l.e.ss.ing25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ab.l.essin.g.25@gmail.com"">eg.o.b.i.ab.l.essin.g.25@gmail.com</a>
<a href=""mailto:egobia.bl.essing.25@gmail.com"">egobia.bl.essing.25@gmail.com</a>
<a href=""mailto:ego.b.i.able.ssing2.5@gmail.com"">ego.b.i.able.ssing2.5@gmail.com</a>
<a href=""mailto:eg.o.b.iable.ss.i.ng.25@gmail.com"">eg.o.b.iable.ss.i.ng.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.lessi.ng.25@gmail.com"">eg.ob.i.ab.lessi.ng.25@gmail.com</a>
<a href=""mailto:e.go.bi.abl.es.sin.g25@gmail.com"">e.go.bi.abl.es.sin.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.less.i.ng.25@gmail.com"">e.g.o.bi.a.b.less.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.e.s.s.in.g25@gmail.com"">eg.o.bi.abl.e.s.s.in.g25@gmail.com</a>
<a href=""mailto:eg.ob.i.abless.ing.2.5@gmail.com"">eg.ob.i.abless.ing.2.5@gmail.com</a>
<a href=""mailto:egob.ia.bl.essi.ng25@gmail.com"">egob.ia.bl.essi.ng25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ab.l.es.s.i.n.g.25@gmail.com"">eg.o.b.i.ab.l.es.s.i.n.g.25@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.ng.25@gmail.com"">e.go.bi.ab.l.e.ssi.ng.25@gmail.com</a>
<a href=""mailto:e.g.o.biab.les.sin.g.25@gmail.com"">e.g.o.biab.les.sin.g.25@gmail.com</a>
<a href=""mailto:eg.obi.a.b.l.e.s.s.i.ng.25@gmail.com"">eg.obi.a.b.l.e.s.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.g.obi.a.b.le.s.sin.g2.5@gmail.com"">e.g.obi.a.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:egobi.abl.ess.i.n.g.2.5@gmail.com"">egobi.abl.ess.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.ab.les.s.ing.25@gmail.com"">e.g.ob.i.ab.les.s.ing.25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.les.s.i.n.g25@gmail.com"">e.gobi.a.b.les.s.i.n.g25@gmail.com</a>
<a href=""mailto:e.gobiables.s.in.g25@gmail.com"">e.gobiables.s.in.g25@gmail.com</a>
<a href=""mailto:eg.obia.b.l.e.s.s.in.g2.5@gmail.com"">eg.obia.b.l.e.s.s.in.g2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.abl.ess.in.g.25@gmail.com"">eg.o.b.i.abl.ess.in.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.a.ble.s.sin.g.2.5@gmail.com"">eg.ob.i.a.ble.s.sin.g.2.5@gmail.com</a>
<a href=""mailto:eg.obiab.l.ess.i.n.g.25@gmail.com"">eg.obiab.l.ess.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.biabl.essing25@gmail.com"">ego.biabl.essing25@gmail.com</a>
<a href=""mailto:eg.obi.abless.ing2.5@gmail.com"">eg.obi.abless.ing2.5@gmail.com</a>
<a href=""mailto:egobi.ab.le.s.sin.g.25@gmail.com"">egobi.ab.le.s.sin.g.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.bless.i.n.g.25@gmail.com"">ego.b.i.a.bless.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.ia.b.l.e.ssing2.5@gmail.com"">ego.b.ia.b.l.e.ssing2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.bles.s.i.ng.25@gmail.com"">e.g.ob.i.a.bles.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.bia.b.les.si.n.g2.5@gmail.com"">eg.o.bia.b.les.si.n.g2.5@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.ng25@gmail.com"">e.go.bi.ab.l.e.ssi.ng25@gmail.com</a>
<a href=""mailto:eg.ob.ia.b.l.essi.n.g25@gmail.com"">eg.ob.ia.b.l.essi.n.g25@gmail.com</a>
<a href=""mailto:e.go.bi.ab.l.e.ssi.n.g.25@gmail.com"">e.go.bi.ab.l.e.ssi.n.g.25@gmail.com</a>
<a href=""mailto:e.g.ob.i.abl.e.ssi.ng25@gmail.com"">e.g.ob.i.abl.e.ssi.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.lessin.g.25@gmail.com"">e.g.o.bia.b.lessin.g.25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.ess.ing2.5@gmail.com"">e.gobi.a.b.l.ess.ing2.5@gmail.com</a>
<a href=""mailto:eg.ob.ia.bles.si.ng2.5@gmail.com"">eg.ob.ia.bles.si.ng2.5@gmail.com</a>
<a href=""mailto:ego.bi.ab.le.s.s.in.g.2.5@gmail.com"">ego.bi.ab.le.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.obi.able.ss.i.ng2.5@gmail.com"">e.g.obi.able.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:egobi.ab.l.essing25@gmail.com"">egobi.ab.l.essing25@gmail.com</a>
<a href=""mailto:e.go.b.i.ab.l.e.ssi.n.g2.5@gmail.com"">e.go.b.i.ab.l.e.ssi.n.g2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.abl.ess.i.n.g.2.5@gmail.com"">e.g.ob.i.abl.ess.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gobia.b.le.s.si.ng.25@gmail.com"">e.gobia.b.le.s.si.ng.25@gmail.com</a>
<a href=""mailto:ego.b.ia.bl.es.si.n.g.25@gmail.com"">ego.b.ia.bl.es.si.n.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.le.ssi.ng2.5@gmail.com"">eg.ob.i.ab.le.ssi.ng2.5@gmail.com</a>
<a href=""mailto:ego.b.iab.le.ssi.ng.2.5@gmail.com"">ego.b.iab.le.ssi.ng.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.b.le.s.sin.g2.5@gmail.com"">e.g.ob.ia.b.le.s.sin.g2.5@gmail.com</a>
<a href=""mailto:e.go.bia.b.l.e.s.s.i.ng.25@gmail.com"">e.go.bia.b.l.e.s.s.i.ng.25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.ble.ss.i.ng25@gmail.com"">e.g.ob.i.a.ble.ss.i.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bi.abl.e.s.s.in.g.2.5@gmail.com"">e.g.o.bi.abl.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.iab.l.e.s.s.i.ng2.5@gmail.com"">e.g.o.b.iab.l.e.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:egobia.ble.ssin.g25@gmail.com"">egobia.ble.ssin.g25@gmail.com</a>
<a href=""mailto:egob.i.ab.l.es.si.ng.2.5@gmail.com"">egob.i.ab.l.es.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.g.o.bi.ab.l.e.ssi.n.g25@gmail.com"">e.g.o.bi.ab.l.e.ssi.n.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.abl.e.ssi.n.g.2.5@gmail.com"">e.g.o.bi.abl.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.obia.b.lessi.ng.2.5@gmail.com"">e.g.obia.b.lessi.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.ables.s.i.ng.25@gmail.com"">eg.o.b.i.ables.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obiabless.in.g.2.5@gmail.com"">eg.obiabless.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.iables.si.ng.2.5@gmail.com"">e.g.o.b.iables.si.ng.2.5@gmail.com</a>
<a href=""mailto:ego.b.i.ab.l.e.ssi.n.g.2.5@gmail.com"">ego.b.i.ab.l.e.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:egobiabl.es.s.ing.25@gmail.com"">egobiabl.es.s.ing.25@gmail.com</a>
<a href=""mailto:e.go.b.i.a.bl.es.s.i.ng.2.5@gmail.com"">e.go.b.i.a.bl.es.s.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bless.ing.25@gmail.com"">eg.ob.i.a.bless.ing.25@gmail.com</a>
<a href=""mailto:e.gobi.a.bl.e.ssin.g25@gmail.com"">e.gobi.a.bl.e.ssin.g25@gmail.com</a>
<a href=""mailto:egobi.a.bl.ess.ing2.5@gmail.com"">egobi.a.bl.ess.ing2.5@gmail.com</a>
<a href=""mailto:e.go.bi.a.ble.ss.i.ng2.5@gmail.com"">e.go.bi.a.ble.ss.i.ng2.5@gmail.com</a>
<a href=""mailto:e.g.o.bia.b.le.ss.in.g.2.5@gmail.com"">e.g.o.bia.b.le.ss.in.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.abless.i.ng2.5@gmail.com"">e.g.ob.i.abless.i.ng2.5@gmail.com</a>
<a href=""mailto:eg.obi.able.s.s.ing.2.5@gmail.com"">eg.obi.able.s.s.ing.2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.bl.es.si.ng.2.5@gmail.com"">e.gob.i.a.bl.es.si.ng.2.5@gmail.com</a>
<a href=""mailto:egobiablessi.n.g2.5@gmail.com"">egobiablessi.n.g2.5@gmail.com</a>
<a href=""mailto:e.gob.i.able.s.si.n.g25@gmail.com"">e.gob.i.able.s.si.n.g25@gmail.com</a>
<a href=""mailto:eg.obi.ab.l.ess.in.g2.5@gmail.com"">eg.obi.ab.l.ess.in.g2.5@gmail.com</a>
<a href=""mailto:ego.biab.les.s.in.g25@gmail.com"">ego.biab.les.s.in.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.ab.l.es.sin.g.2.5@gmail.com"">eg.o.bi.ab.l.es.sin.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.essin.g25@gmail.com"">eg.o.bi.abl.essin.g25@gmail.com</a>
<a href=""mailto:ego.biab.l.e.s.si.ng.2.5@gmail.com"">ego.biab.l.e.s.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.l.es.si.n.g2.5@gmail.com"">e.gob.i.a.b.l.es.si.n.g2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.a.ble.s.si.n.g25@gmail.com"">eg.o.bi.a.ble.s.si.n.g25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.le.ss.ing25@gmail.com"">e.g.o.bi.a.b.le.ss.ing25@gmail.com</a>
<a href=""mailto:e.g.o.biablessing.2.5@gmail.com"">e.g.o.biablessing.2.5@gmail.com</a>
<a href=""mailto:egobi.abless.i.ng25@gmail.com"">egobi.abless.i.ng25@gmail.com</a>
<a href=""mailto:eg.o.bi.ables.s.ing.2.5@gmail.com"">eg.o.bi.ables.s.ing.2.5@gmail.com</a>
<a href=""mailto:e.gobi.abl.essing25@gmail.com"">e.gobi.abl.essing25@gmail.com</a>
<a href=""mailto:e.gobia.b.l.e.ssi.ng.25@gmail.com"">e.gobia.b.l.e.ssi.ng.25@gmail.com</a>
<a href=""mailto:ego.b.iable.s.s.i.n.g.25@gmail.com"">ego.b.iable.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:ego.b.iab.less.i.n.g.2.5@gmail.com"">ego.b.iab.less.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.i.able.ssin.g.25@gmail.com"">e.g.o.b.i.able.ssin.g.25@gmail.com</a>
<a href=""mailto:eg.o.bi.a.bl.es.si.n.g2.5@gmail.com"">eg.o.bi.a.bl.es.si.n.g2.5@gmail.com</a>
<a href=""mailto:eg.obiabl.e.ssin.g.25@gmail.com"">eg.obiabl.e.ssin.g.25@gmail.com</a>
<a href=""mailto:eg.ob.ia.b.le.ss.in.g2.5@gmail.com"">eg.ob.ia.b.le.ss.in.g2.5@gmail.com</a>
<a href=""mailto:e.go.b.ia.bl.e.s.s.i.n.g2.5@gmail.com"">e.go.b.ia.bl.e.s.s.i.n.g2.5@gmail.com</a>
<a href=""mailto:e.gobi.a.b.l.e.ss.i.n.g.25@gmail.com"">e.gobi.a.b.l.e.ss.i.n.g.25@gmail.com</a>
<a href=""mailto:egobi.abl.e.ss.i.n.g.2.5@gmail.com"">egobi.abl.e.ss.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.gobi.abl.e.ssin.g.2.5@gmail.com"">e.gobi.abl.e.ssin.g.2.5@gmail.com</a>
<a href=""mailto:e.gob.iab.les.sing.25@gmail.com"">e.gob.iab.les.sing.25@gmail.com</a>
<a href=""mailto:eg.obia.ble.ssi.n.g25@gmail.com"">eg.obia.ble.ssi.n.g25@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bl.e.s.si.n.g.25@gmail.com"">eg.ob.i.a.bl.e.s.si.n.g.25@gmail.com</a>
<a href=""mailto:ego.bi.ab.l.e.s.s.ing25@gmail.com"">ego.bi.ab.l.e.s.s.ing25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.b.le.s.sin.g.25@gmail.com"">e.g.ob.i.a.b.le.s.sin.g.25@gmail.com</a>
<a href=""mailto:e.gob.i.a.ble.ss.i.n.g25@gmail.com"">e.gob.i.a.ble.ss.i.n.g25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.b.l.e.s.s.ing25@gmail.com"">eg.o.b.ia.b.l.e.s.s.ing25@gmail.com</a>
<a href=""mailto:e.g.obi.a.bles.sing25@gmail.com"">e.g.obi.a.bles.sing25@gmail.com</a>
<a href=""mailto:eg.o.b.i.ablessi.n.g2.5@gmail.com"">eg.o.b.i.ablessi.n.g2.5@gmail.com</a>
<a href=""mailto:egob.i.a.b.l.e.ss.i.ng.25@gmail.com"">egob.i.a.b.l.e.ss.i.ng.25@gmail.com</a>
<a href=""mailto:eg.o.b.ia.bl.e.ss.in.g.25@gmail.com"">eg.o.b.ia.bl.e.ss.in.g.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.l.e.s.s.in.g.25@gmail.com"">eg.ob.i.ab.l.e.s.s.in.g.25@gmail.com</a>
<a href=""mailto:ego.b.iab.le.ss.i.n.g.2.5@gmail.com"">ego.b.iab.le.ss.i.n.g.2.5@gmail.com</a>
<a href=""mailto:e.go.bi.a.b.l.e.s.sing.2.5@gmail.com"">e.go.bi.a.b.l.e.s.sing.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.iable.s.s.i.n.g25@gmail.com"">e.g.ob.iable.s.s.i.n.g25@gmail.com</a>
<a href=""mailto:eg.ob.iablessin.g.2.5@gmail.com"">eg.ob.iablessin.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.biables.s.i.ng25@gmail.com"">eg.o.biables.s.i.ng25@gmail.com</a>
<a href=""mailto:e.g.ob.i.a.b.le.s.si.ng.2.5@gmail.com"">e.g.ob.i.a.b.le.s.si.ng.2.5@gmail.com</a>
<a href=""mailto:e.gobi.a.ble.s.s.i.ng2.5@gmail.com"">e.gobi.a.ble.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:e.g.obi.ab.l.essi.ng2.5@gmail.com"">e.g.obi.ab.l.essi.ng2.5@gmail.com</a>
<a href=""mailto:e.g.obiables.s.i.ng.25@gmail.com"">e.g.obiables.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.obi.a.b.le.s.sing.25@gmail.com"">eg.obi.a.b.le.s.sing.25@gmail.com</a>
<a href=""mailto:e.go.biable.s.s.i.n.g.2.5@gmail.com"">e.go.biable.s.s.i.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.biabl.e.s.s.i.ng.2.5@gmail.com"">eg.o.biabl.e.s.s.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.biable.s.sing25@gmail.com"">eg.o.biable.s.sing25@gmail.com</a>
<a href=""mailto:e.gobi.a.b.less.ing.2.5@gmail.com"">e.gobi.a.b.less.ing.2.5@gmail.com</a>
<a href=""mailto:ego.b.i.a.bl.ess.in.g2.5@gmail.com"">ego.b.i.a.bl.ess.in.g2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.ab.le.s.s.i.n.g25@gmail.com"">eg.o.bi.ab.le.s.s.i.n.g25@gmail.com</a>
<a href=""mailto:eg.o.bi.able.ssi.n.g.2.5@gmail.com"">eg.o.bi.able.ssi.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.iabless.i.ng.2.5@gmail.com"">eg.ob.iabless.i.ng.2.5@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.bl.essin.g25@gmail.com"">eg.o.b.i.a.bl.essin.g25@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.le.s.s.i.ng2.5@gmail.com"">e.gob.i.a.b.le.s.s.i.ng2.5@gmail.com</a>
<a href=""mailto:eg.o.bi.abl.e.s.sin.g2.5@gmail.com"">eg.o.bi.abl.e.s.sin.g2.5@gmail.com</a>
<a href=""mailto:egob.i.a.blessi.ng25@gmail.com"">egob.i.a.blessi.ng25@gmail.com</a>
<a href=""mailto:e.g.o.bi.a.b.l.e.s.si.n.g.2.5@gmail.com"">e.g.o.bi.a.b.l.e.s.si.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.i.a.bl.e.s.s.i.n.g.25@gmail.com"">eg.ob.i.a.bl.e.s.s.i.n.g.25@gmail.com</a>
<a href=""mailto:e.gob.i.a.b.l.ess.i.ng.25@gmail.com"">e.gob.i.a.b.l.ess.i.ng.25@gmail.com</a>
<a href=""mailto:egob.ia.ble.s.sing.2.5@gmail.com"">egob.ia.ble.s.sing.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.ia.b.l.es.sing2.5@gmail.com"">e.g.ob.ia.b.l.es.sing2.5@gmail.com</a>
<a href=""mailto:eg.o.biab.le.ss.ing25@gmail.com"">eg.o.biab.le.ss.ing25@gmail.com</a>
<a href=""mailto:ego.b.ia.bl.e.ss.in.g.25@gmail.com"">ego.b.ia.bl.e.ss.in.g.25@gmail.com</a>
<a href=""mailto:e.g.ob.iab.l.e.ss.i.ng.25@gmail.com"">e.g.ob.iab.l.e.ss.i.ng.25@gmail.com</a>
<a href=""mailto:ego.biabl.es.s.in.g.25@gmail.com"">ego.biabl.es.s.in.g.25@gmail.com</a>
<a href=""mailto:eg.o.biab.l.e.ss.ing25@gmail.com"">eg.o.biab.l.e.ss.ing25@gmail.com</a>
<a href=""mailto:egob.i.ab.lessi.n.g.2.5@gmail.com"">egob.i.ab.lessi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.g.ob.i.ab.les.s.i.n.g2.5@gmail.com"">e.g.ob.i.ab.les.s.i.n.g2.5@gmail.com</a>
<a href=""mailto:egobi.ablessi.n.g.2.5@gmail.com"">egobi.ablessi.n.g.2.5@gmail.com</a>
<a href=""mailto:eg.o.bia.blessi.n.g.2.5@gmail.com"">eg.o.bia.blessi.n.g.2.5@gmail.com</a>
<a href=""mailto:e.go.biab.les.si.n.g25@gmail.com"">e.go.biab.les.si.n.g25@gmail.com</a>
<a href=""mailto:eg.o.b.i.a.bles.s.i.n.g25@gmail.com"">eg.o.b.i.a.bles.s.i.n.g25@gmail.com</a>
<a href=""mailto:e.go.biablessin.g.25@gmail.com"">e.go.biablessin.g.25@gmail.com</a>
<a href=""mailto:egob.ia.b.le.ssi.ng.25@gmail.com"">egob.ia.b.le.ssi.ng.25@gmail.com</a>
<a href=""mailto:ego.b.i.a.b.l.e.s.s.in.g.2.5@gmail.com"">ego.b.i.a.b.l.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:eg.ob.iab.le.ssing.2.5@gmail.com"">eg.ob.iab.le.ssing.2.5@gmail.com</a>
<a href=""mailto:e.g.o.b.ia.bl.es.s.i.ng.25@gmail.com"">e.g.o.b.ia.bl.es.s.i.ng.25@gmail.com</a>
<a href=""mailto:eg.ob.i.ab.le.s.sing25@gmail.com"">eg.ob.i.ab.le.s.sing25@gmail.com</a>
<a href=""mailto:egobi.a.b.lessin.g2.5@gmail.com"">egobi.a.b.lessin.g2.5@gmail.com</a>
<a href=""mailto:e.g.o.bi.ab.l.e.s.s.in.g.2.5@gmail.com"">e.g.o.bi.ab.l.e.s.s.in.g.2.5@gmail.com</a>
<a href=""mailto:ego.bi.a.ble.s.s.ing25@gmail.com"">ego.bi.a.ble.s.s.ing25@gmail.com</a>"
pniaL4Q6,change netip.Net to netip.Prefix hooks,yerden,Diff,Sunday 30th of July 2023 11:49:22 PM CDT,"diff --git a/config/config.go b/config/config.go
index c7cd0b1..095ba6b 100644
--- a/config/config.go
+++ b/config/config.go
@@ -5,6 +5,7 @@ import (
        ""encoding""
        ""errors""
        ""fmt""
+       ""net/netip""
        ""reflect""
        ""regexp""
        ""time""
@@ -375,7 +376,7 @@ func (cfg *Config) Read(v *viper.Viper) error {
        hook := mapstructure.ComposeDecodeHookFunc(
                mapstructure.StringToTimeDurationHookFunc(),
                mapstructure.StringToSliceHookFunc("",""),
-               mapstructure.StringToIPNetHookFunc(),
+               StringToIPNetHookFunc(),
                TextUnmarshallerHookFunc(),
                EthdevPortHookFunc(),
                CPUSetHookFunc(),
@@ -386,6 +387,25 @@ func (cfg *Config) Read(v *viper.Viper) error {
        return v.Unmarshal(cfg, viper.DecodeHook(hook))
 }

+// StringToIPNetHookFunc returns a DecodeHookFunc that converts
+// strings to net.IPNet
+func StringToIPNetHookFunc() mapstructure.DecodeHookFunc {
+       return func(
+               f reflect.Type,
+               t reflect.Type,
+               data interface{}) (interface{}, error) {
+               if f.Kind() != reflect.String {
+                       return data, nil
+               }
+               if t != reflect.TypeOf(netip.Prefix{}) {
+                       return data, nil
+               }
+
+               // Convert it by parsing
+               return netip.ParsePrefix(data.(string))
+       }
+}
+
 // MakeEthdevSourceConfig collects all RX lcores and maps
 // EthdevSourceConfig to each of them.
 func (cfg *Config) MakeEthdevSourceConfig() map[uint]*network.EthdevSourceConfig {
"
zd5zcsH8,Untitled,Mysoft,FreeBasic,Sunday 30th of July 2023 10:21:42 PM CDT,"enum ViewAreaType
  ' areas of the window/separated windows 
  vatNull          = 0
  vatTopLeft       '\                              
  vatTopRight      '| both ID and group marker     
  vatMiddleRight   '|                              
  vatBottomLeft    '| so below you see group items 
  vatBottomRight   '/                              
  ' types that goes in each area 
  vatScreen        = vatTopLeft     *16
  vatDisasm        = vatTopRight    *16
  vatRegsGeneric   = vatMiddleRight *16
  vatInfo          = vatBottomLeft  *16
  vatMemory        = vatBottomRight *16
  vatBlocks
  VatPalette
end enum
"
sLyeZQzG,Random Wallpaper Downloader,nitestryker,Bash,Sunday 30th of July 2023 09:50:19 PM CDT,"#!/bin/bash

# Store the directory where wallpapers will be stored
WALLPAPER_DIR=""/home/nitestryker/Pictures""

# Function to download the wallpaper
download_wallpaper() {
    # Generate a unique filename based on the current timestamp
    UNIQUE_FILENAME=""wallpaper_$(date +'%Y%m%d%H%M%S').jpg""

    # Download a random image from Unsplash and save it to the wallpaper directory
    # Use curl to fetch the image URL and store it in a variable
    IMAGE_URL=$(curl -Ls -w %{url_effective} -o /dev/null https://source.unsplash.com/random/1920x1080)

    # Save the image to the wallpaper directory with the unique filename
    curl -Lf ""$IMAGE_URL"" > ""$WALLPAPER_DIR/$UNIQUE_FILENAME""

    # Increment the downloaded wallpaper counter
    ((DOWNLOADED_WALLPAPERS++))
}

# Function to show countdown timer
show_countdown() {
    for ((i = SLEEP_DURATION * 60; i >= 0; i--)); do
        printf ""\rDownloading wallpaper %d of %d... Time left: %02d:%02d "" ""$DOWNLOADED_WALLPAPERS"" ""$MAX_WALLPAPERS"" $((i / 60)) $((i % 60))
        sleep 1
    done
    echo """"
}

# Create the directory if it doesn't exist
if [ ! -d ""$WALLPAPER_DIR"" ]; then
    mkdir ""$WALLPAPER_DIR""
fi

# Set the initial value of the downloaded wallpaper counter to 0
DOWNLOADED_WALLPAPERS=0

# Ask the user to input the maximum number of wallpapers to download
read -p ""Enter the maximum number of wallpapers to download (default: 100): "" MAX_WALLPAPERS

# If the user didn't enter any value, set the default value to 100
MAX_WALLPAPERS=${MAX_WALLPAPERS:-100}

# Ask the user to input the sleep duration in minutes
read -p ""Enter the sleep duration in minutes between downloading wallpapers (default: 5): "" SLEEP_DURATION

# If the user didn't enter any value, set the default value to 5 minutes
SLEEP_DURATION=${SLEEP_DURATION:-5}

while [ ""$DOWNLOADED_WALLPAPERS"" -lt ""$MAX_WALLPAPERS"" ]; do
    # Download the wallpaper
    download_wallpaper

    # Show a notice and countdown before sleeping
    echo ""Downloading wallpaper $DOWNLOADED_WALLPAPERS of $MAX_WALLPAPERS...""
    show_countdown
done

# Exit the script once the maximum number of wallpapers is downloaded
echo ""Maximum number of wallpapers ($MAX_WALLPAPERS) downloaded. Exiting...""
"
XR6GN8xP,Websocket example test script,Weesals,C#,Sunday 30th of July 2023 08:57:33 PM CDT,"using System;
using System.Net.WebSockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using UnityEngine;

// To test:
// - Place this component on an object in the scene
// - Visit https://socketsbay.com/test-websockets and click Connect
// - Press play in Unity
// - Wait for the name prompt on the socketsbay website
// - Enter a name and click Send
// - Wait for response greeting
public class Connection : MonoBehaviour
{
    ClientWebSocket websocket;
    
    async void Start()
    {
        websocket = new ClientWebSocket();
        await websocket.ConnectAsync(new Uri(""wss://socketsbay.com/wss/v2/1/demo/""), CancellationToken.None);

		// Begin routine
        TestRoutine();
    }

    public async void TestRoutine()
    {
        // Greeting
        SendWebSocketMessage(""Hello, what is your name?"");
        // Wait for response
        string name = await ReceiveWebSocketMessage();
        // Response
        SendWebSocketMessage(""Hello "" + name);
    }

    public void SendWebSocketMessage(string msg)
    {
        websocket.SendAsync(Encoding.UTF8.GetBytes(msg), WebSocketMessageType.Text, true, CancellationToken.None);
    }
    public async Task<string> ReceiveWebSocketMessage()
    {
        var recvBuffer = new byte[1024];
        var result = await websocket.ReceiveAsync(recvBuffer, CancellationToken.None);
        return Encoding.UTF8.GetString(recvBuffer, 0, result.Count);
    }
    void OnApplicationQuit()
    {
        websocket.CloseAsync(WebSocketCloseStatus.Empty, """", CancellationToken.None);
    }

}
"
1Z5aMs0r,mending finder,Sascha_T,Lua,Sunday 30th of July 2023 08:29:39 PM CDT,"local per = peripheral.wrap(""top"")
local enchantName = ""minecraft:mending 1""

local iterations = 0
function checkTrades()
  for i, trade in ipairs(per.getTrades()) do
    if trade.result[""minecraft:enchanted_book""] ~= nil then
      if trade.result[""minecraft:enchanted_book""][""enchants""][1] == enchantName then
        return true
      end
      print(""Passing by "".. trade.result[""minecraft:enchanted_book""][""enchants""][1])
    end
  end
  return false
end

print(""Searching for ""..enchantName)
while true do
  if checkTrades() then
    print(""Finished after "" .. iterations .. "" iterations"")
    return
  end
  per.cycleTrades()
  iterations = iterations + 1
  sleep(0.01)
end"
HzFN10eu,ARM WRESTLE SIMULATOR SCRIPT,Artani,Lua,Sunday 30th of July 2023 07:44:17 PM CDT,"GET ARM WRESTLE SIMULATOR SCRIPT / ARM WRESTLING SIMULATOR SCRIPT HERE!

https://artanisrbx.com/arm-wrestle-simulator-script-hack-gui-auto-farm-auto-train/

WORKING DUPE + AUTO FARM + AUTO REBIRTH + PET HATCHER + AUTO TRAIN + MORE!
ROBLOX ARM WRESTLE SIMULATOR SCRIPT NO KEY FREE WORKING FLUXUS MOBILE"
ksa2eArW,2023-07-30_stats.json,rdp_snitch,JSON,Sunday 30th of July 2023 07:18:25 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 7635,
    ""39.108.174.140"": 183,
    ""45.79.108.4"": 18,
    ""176.113.115.184"": 9,
    ""103.252.119.150"": 21,
    ""139.162.30.169"": 45,
    ""159.223.84.25"": 12,
    ""103.168.183.194"": 120,
    ""20.127.210.84"": 6,
    ""87.251.75.145"": 6,
    ""31.43.185.32"": 15,
    ""87.251.64.110"": 6,
    ""39.98.33.148"": 24,
    ""94.232.41.205"": 9,
    ""185.170.144.3"": 6,
    ""62.122.184.168"": 12,
    ""74.208.177.189"": 3,
    ""106.116.169.71"": 3,
    ""87.251.75.120"": 3,
    ""62.122.184.166"": 12,
    ""139.180.147.178"": 3,
    ""87.251.75.179"": 6,
    ""45.119.81.119"": 9,
    ""141.98.11.128"": 6,
    ""164.70.84.31"": 3,
    ""205.210.31.232"": 9,
    ""165.154.161.199"": 6,
    ""212.102.38.175"": 3,
    ""103.153.68.198"": 18,
    ""112.5.87.34"": 3,
    ""62.204.41.134"": 6,
    ""205.210.31.50"": 9
  },
  ""asn"": {
    ""AS34376"": 7635,
    ""AS37963"": 207,
    ""AS63949"": 63,
    ""AS57678"": 9,
    ""AS64022"": 21,
    ""AS14061"": 12,
    ""AS142492"": 120,
    ""AS8075"": 6,
    ""AS208091"": 24,
    ""AS211736"": 15,
    ""AS48080"": 12,
    ""AS57523"": 24,
    ""AS8560"": 3,
    ""AS4134"": 3,
    ""AS20473"": 3,
    ""AS131386"": 9,
    ""AS209605"": 6,
    ""AS2514"": 3,
    ""AS396982"": 18,
    ""AS135377"": 6,
    ""AS60068"": 3,
    ""AS131366"": 18,
    ""AS9808"": 3,
    ""AS59425"": 6
  },
  ""isp"": {
    ""Telecom Group"": 7635,
    ""Hangzhou Alibaba Advertising Co"": 207,
    ""Akamai Technologies, Inc."": 18,
    ""Cat Technologies Co. Limited"": 9,
    ""CLOUDWEBMANAGE"": 21,
    ""LINODE"": 45,
    ""DigitalOcean, LLC"": 12,
    ""Technobot Technologies Private Limited"": 120,
    ""Microsoft Corporation"": 6,
    ""Xhost Internet Solutions LP"": 15,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Dmitriy Panchenko"": 12,
    ""XHOST-INTERNET-SOLUTIONS"": 9,
    ""Chang Way Technologies Co. Limited"": 24,
    ""IONOS SE"": 3,
    ""Chinanet"": 3,
    ""Choopa"": 3,
    ""Long Van System Solution"": 9,
    ""UAB Host Baltic"": 6,
    ""InfoSphere"": 3,
    ""Google LLC"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Datacamp Limited"": 3,
    ""TAM"": 18,
    ""China Mobile"": 3,
    ""Horizon LLC"": 6
  },
  ""org"": {
    ""TelecomGroup"": 7635,
    ""Aliyun Computing Co., LTD"": 207,
    ""Linode"": 18,
    ""Cat Technologies Co. Limited"": 9,
    ""Unknown"": 39,
    ""Linode, LLC"": 45,
    ""DigitalOcean, LLC"": 12,
    ""Technobot Technologies Private Limited"": 120,
    ""Microsoft Azure Cloud (eastus)"": 6,
    ""Xhost Internet Solutions"": 21,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Dmitriy Panchenko"": 9,
    ""Xhostis"": 6,
    ""Chang Way Technologies Co. Limited"": 24,
    ""IONOS Inc"": 3,
    ""Chinanet HE"": 3,
    ""NTTPC Communications, Inc"": 3,
    ""Palo Alto Networks, Inc"": 18,
    ""Ucloud Information Technology"": 6,
    ""Cdnext PRG"": 3,
    ""TAM Media Technology Joint Stock Company"": 18,
    ""China Mobile Communications Corporation"": 3,
    ""Horizon LLC"": 6
  },
  ""regionName"": {
    ""Blagoevgrad"": 7635,
    ""Guangdong"": 186,
    ""California"": 36,
    ""Moscow"": 51,
    ""Central and Western District"": 21,
    ""North West"": 45,
    ""South West"": 12,
    ""Tamil Nadu"": 120,
    ""Virginia"": 6,
    ""North Holland"": 15,
    ""Kyiv City"": 15,
    ""Beijing"": 24,
    ""Perm Krai"": 9,
    ""Pennsylvania"": 3,
    ""Hebei"": 3,
    ""Central Singapore"": 3,
    ""Ho Chi Minh"": 9,
    ""Kaunas"": 6,
    ""Tokyo"": 3,
    ""Taipei City"": 6,
    ""Prague"": 3,
    ""Hanoi"": 18
  },
  ""country"": {
    ""Bulgaria"": 7635,
    ""China"": 213,
    ""United States"": 45,
    ""Russia"": 60,
    ""Hong Kong"": 21,
    ""Singapore"": 60,
    ""India"": 120,
    ""Netherlands"": 15,
    ""Ukraine"": 15,
    ""Vietnam"": 27,
    ""Lithuania"": 6,
    ""Japan"": 3,
    ""Taiwan"": 6,
    ""Czechia"": 3
  },
  ""account"": {
    ""hello"": 8109,
    ""Domain"": 54,
    ""Administr"": 39,
    ""(empty)"": 6,
    ""Test"": 3,
    ""cQKbIUMTi"": 3,
    ""fzkxnp"": 3,
    ""YPeRyS"": 3,
    ""xgQzlMkpT"": 3,
    ""ongXPC"": 3,
    ""dXoOQA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 8229
  },
  ""client_build"": {
    ""Unknown"": 8229
  },
  ""client_name"": {
    ""Unknown"": 8229
  },
  ""ip_type"": {
    ""Unknown"": 7893,
    ""hosting"": 315,
    ""hosting & proxy"": 15,
    ""proxy"": 3,
    ""mobile"": 3
  }
}"
4GCrNmuf,2023-07-30_stats.json,rdp_snitch,JSON,Sunday 30th of July 2023 07:16:17 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 5090,
    ""39.108.174.140"": 122,
    ""45.79.108.4"": 12,
    ""176.113.115.184"": 6,
    ""103.252.119.150"": 14,
    ""139.162.30.169"": 30,
    ""159.223.84.25"": 8,
    ""103.168.183.194"": 80,
    ""20.127.210.84"": 4,
    ""87.251.75.145"": 4,
    ""31.43.185.32"": 10,
    ""87.251.64.110"": 4,
    ""39.98.33.148"": 16,
    ""94.232.41.205"": 6,
    ""185.170.144.3"": 4,
    ""62.122.184.168"": 8,
    ""74.208.177.189"": 2,
    ""106.116.169.71"": 2,
    ""87.251.75.120"": 2,
    ""62.122.184.166"": 8,
    ""139.180.147.178"": 2,
    ""87.251.75.179"": 4,
    ""45.119.81.119"": 6,
    ""141.98.11.128"": 4,
    ""164.70.84.31"": 2,
    ""205.210.31.232"": 6,
    ""165.154.161.199"": 4,
    ""212.102.38.175"": 2,
    ""103.153.68.198"": 12,
    ""112.5.87.34"": 2,
    ""62.204.41.134"": 4,
    ""205.210.31.50"": 6
  },
  ""asn"": {
    ""AS34376"": 5090,
    ""AS37963"": 138,
    ""AS63949"": 42,
    ""AS57678"": 6,
    ""AS64022"": 14,
    ""AS14061"": 8,
    ""AS142492"": 80,
    ""AS8075"": 4,
    ""AS208091"": 16,
    ""AS211736"": 10,
    ""AS48080"": 8,
    ""AS57523"": 16,
    ""AS8560"": 2,
    ""AS4134"": 2,
    ""AS20473"": 2,
    ""AS131386"": 6,
    ""AS209605"": 4,
    ""AS2514"": 2,
    ""AS396982"": 12,
    ""AS135377"": 4,
    ""AS60068"": 2,
    ""AS131366"": 12,
    ""AS9808"": 2,
    ""AS59425"": 4
  },
  ""isp"": {
    ""Telecom Group"": 5090,
    ""Hangzhou Alibaba Advertising Co"": 138,
    ""Akamai Technologies, Inc."": 12,
    ""Cat Technologies Co. Limited"": 6,
    ""CLOUDWEBMANAGE"": 14,
    ""LINODE"": 30,
    ""DigitalOcean, LLC"": 8,
    ""Technobot Technologies Private Limited"": 80,
    ""Microsoft Corporation"": 4,
    ""Xhost Internet Solutions LP"": 10,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Dmitriy Panchenko"": 8,
    ""XHOST-INTERNET-SOLUTIONS"": 6,
    ""Chang Way Technologies Co. Limited"": 16,
    ""IONOS SE"": 2,
    ""Chinanet"": 2,
    ""Choopa"": 2,
    ""Long Van System Solution"": 6,
    ""UAB Host Baltic"": 4,
    ""InfoSphere"": 2,
    ""Google LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Datacamp Limited"": 2,
    ""TAM"": 12,
    ""China Mobile"": 2,
    ""Horizon LLC"": 4
  },
  ""org"": {
    ""TelecomGroup"": 5090,
    ""Aliyun Computing Co., LTD"": 138,
    ""Linode"": 12,
    ""Cat Technologies Co. Limited"": 6,
    ""Unknown"": 26,
    ""Linode, LLC"": 30,
    ""DigitalOcean, LLC"": 8,
    ""Technobot Technologies Private Limited"": 80,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Xhost Internet Solutions"": 14,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Dmitriy Panchenko"": 6,
    ""Xhostis"": 4,
    ""Chang Way Technologies Co. Limited"": 16,
    ""IONOS Inc"": 2,
    ""Chinanet HE"": 2,
    ""NTTPC Communications, Inc"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Ucloud Information Technology"": 4,
    ""Cdnext PRG"": 2,
    ""TAM Media Technology Joint Stock Company"": 12,
    ""China Mobile Communications Corporation"": 2,
    ""Horizon LLC"": 4
  },
  ""regionName"": {
    ""Blagoevgrad"": 5090,
    ""Guangdong"": 124,
    ""California"": 24,
    ""Moscow"": 34,
    ""Central and Western District"": 14,
    ""North West"": 30,
    ""South West"": 8,
    ""Tamil Nadu"": 80,
    ""Virginia"": 4,
    ""North Holland"": 10,
    ""Kyiv City"": 10,
    ""Beijing"": 16,
    ""Perm Krai"": 6,
    ""Pennsylvania"": 2,
    ""Hebei"": 2,
    ""Central Singapore"": 2,
    ""Ho Chi Minh"": 6,
    ""Kaunas"": 4,
    ""Tokyo"": 2,
    ""Taipei City"": 4,
    ""Prague"": 2,
    ""Hanoi"": 12
  },
  ""country"": {
    ""Bulgaria"": 5090,
    ""China"": 142,
    ""United States"": 30,
    ""Russia"": 40,
    ""Hong Kong"": 14,
    ""Singapore"": 40,
    ""India"": 80,
    ""Netherlands"": 10,
    ""Ukraine"": 10,
    ""Vietnam"": 18,
    ""Lithuania"": 4,
    ""Japan"": 2,
    ""Taiwan"": 4,
    ""Czechia"": 2
  },
  ""account"": {
    ""hello"": 5406,
    ""Domain"": 36,
    ""Administr"": 26,
    ""(empty)"": 4,
    ""Test"": 2,
    ""cQKbIUMTi"": 2,
    ""fzkxnp"": 2,
    ""YPeRyS"": 2,
    ""xgQzlMkpT"": 2,
    ""ongXPC"": 2,
    ""dXoOQA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 5486
  },
  ""client_build"": {
    ""Unknown"": 5486
  },
  ""client_name"": {
    ""Unknown"": 5486
  },
  ""ip_type"": {
    ""Unknown"": 5262,
    ""hosting"": 210,
    ""hosting & proxy"": 10,
    ""proxy"": 2,
    ""mobile"": 2
  }
}"
ah3CjRNN,2023-07-30_stats.json,rdp_snitch,JSON,Sunday 30th of July 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 2545,
    ""39.108.174.140"": 61,
    ""45.79.108.4"": 6,
    ""176.113.115.184"": 3,
    ""103.252.119.150"": 7,
    ""139.162.30.169"": 15,
    ""159.223.84.25"": 4,
    ""103.168.183.194"": 40,
    ""20.127.210.84"": 2,
    ""87.251.75.145"": 2,
    ""31.43.185.32"": 5,
    ""87.251.64.110"": 2,
    ""39.98.33.148"": 8,
    ""94.232.41.205"": 3,
    ""185.170.144.3"": 2,
    ""62.122.184.168"": 4,
    ""74.208.177.189"": 1,
    ""106.116.169.71"": 1,
    ""87.251.75.120"": 1,
    ""62.122.184.166"": 4,
    ""139.180.147.178"": 1,
    ""87.251.75.179"": 2,
    ""45.119.81.119"": 3,
    ""141.98.11.128"": 2,
    ""164.70.84.31"": 1,
    ""205.210.31.232"": 3,
    ""165.154.161.199"": 2,
    ""212.102.38.175"": 1,
    ""103.153.68.198"": 6,
    ""112.5.87.34"": 1,
    ""62.204.41.134"": 2,
    ""205.210.31.50"": 3
  },
  ""asn"": {
    ""AS34376"": 2545,
    ""AS37963"": 69,
    ""AS63949"": 21,
    ""AS57678"": 3,
    ""AS64022"": 7,
    ""AS14061"": 4,
    ""AS142492"": 40,
    ""AS8075"": 2,
    ""AS208091"": 8,
    ""AS211736"": 5,
    ""AS48080"": 4,
    ""AS57523"": 8,
    ""AS8560"": 1,
    ""AS4134"": 1,
    ""AS20473"": 1,
    ""AS131386"": 3,
    ""AS209605"": 2,
    ""AS2514"": 1,
    ""AS396982"": 6,
    ""AS135377"": 2,
    ""AS60068"": 1,
    ""AS131366"": 6,
    ""AS9808"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""Telecom Group"": 2545,
    ""Hangzhou Alibaba Advertising Co"": 69,
    ""Akamai Technologies, Inc."": 6,
    ""Cat Technologies Co. Limited"": 3,
    ""CLOUDWEBMANAGE"": 7,
    ""LINODE"": 15,
    ""DigitalOcean, LLC"": 4,
    ""Technobot Technologies Private Limited"": 40,
    ""Microsoft Corporation"": 2,
    ""Xhost Internet Solutions LP"": 5,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Dmitriy Panchenko"": 4,
    ""XHOST-INTERNET-SOLUTIONS"": 3,
    ""Chang Way Technologies Co. Limited"": 8,
    ""IONOS SE"": 1,
    ""Chinanet"": 1,
    ""Choopa"": 1,
    ""Long Van System Solution"": 3,
    ""UAB Host Baltic"": 2,
    ""InfoSphere"": 1,
    ""Google LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Datacamp Limited"": 1,
    ""TAM"": 6,
    ""China Mobile"": 1,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""TelecomGroup"": 2545,
    ""Aliyun Computing Co., LTD"": 69,
    ""Linode"": 6,
    ""Cat Technologies Co. Limited"": 3,
    ""Unknown"": 13,
    ""Linode, LLC"": 15,
    ""DigitalOcean, LLC"": 4,
    ""Technobot Technologies Private Limited"": 40,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Xhost Internet Solutions"": 7,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Dmitriy Panchenko"": 3,
    ""Xhostis"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""IONOS Inc"": 1,
    ""Chinanet HE"": 1,
    ""NTTPC Communications, Inc"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Ucloud Information Technology"": 2,
    ""Cdnext PRG"": 1,
    ""TAM Media Technology Joint Stock Company"": 6,
    ""China Mobile Communications Corporation"": 1,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Blagoevgrad"": 2545,
    ""Guangdong"": 62,
    ""California"": 12,
    ""Moscow"": 17,
    ""Central and Western District"": 7,
    ""North West"": 15,
    ""South West"": 4,
    ""Tamil Nadu"": 40,
    ""Virginia"": 2,
    ""North Holland"": 5,
    ""Kyiv City"": 5,
    ""Beijing"": 8,
    ""Perm Krai"": 3,
    ""Pennsylvania"": 1,
    ""Hebei"": 1,
    ""Central Singapore"": 1,
    ""Ho Chi Minh"": 3,
    ""Kaunas"": 2,
    ""Tokyo"": 1,
    ""Taipei City"": 2,
    ""Prague"": 1,
    ""Hanoi"": 6
  },
  ""country"": {
    ""Bulgaria"": 2545,
    ""China"": 71,
    ""United States"": 15,
    ""Russia"": 20,
    ""Hong Kong"": 7,
    ""Singapore"": 20,
    ""India"": 40,
    ""Netherlands"": 5,
    ""Ukraine"": 5,
    ""Vietnam"": 9,
    ""Lithuania"": 2,
    ""Japan"": 1,
    ""Taiwan"": 2,
    ""Czechia"": 1
  },
  ""account"": {
    ""hello"": 2703,
    ""Domain"": 18,
    ""Administr"": 13,
    ""(empty)"": 2,
    ""Test"": 1,
    ""cQKbIUMTi"": 1,
    ""fzkxnp"": 1,
    ""YPeRyS"": 1,
    ""xgQzlMkpT"": 1,
    ""ongXPC"": 1,
    ""dXoOQA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 2743
  },
  ""client_build"": {
    ""Unknown"": 2743
  },
  ""client_name"": {
    ""Unknown"": 2743
  },
  ""ip_type"": {
    ""Unknown"": 2631,
    ""hosting"": 105,
    ""hosting & proxy"": 5,
    ""proxy"": 1,
    ""mobile"": 1
  }
}"
JBpVFq7M,Noclip Script (ROBLOX SCRIPT),Sheepz,Lua,Sunday 30th of July 2023 07:07:54 PM CDT,"-- made by me (Sheepz)

local Workspace = game:GetService(""Workspace"")
local CoreGui = game:GetService(""CoreGui"")
local Players = game:GetService(""Players"")
local Noclip = Instance.new(""ScreenGui"")
local BG = Instance.new(""Frame"")
local Title = Instance.new(""TextLabel"")
local Toggle = Instance.new(""TextButton"")
local StatusPF = Instance.new(""TextLabel"")
local Status = Instance.new(""TextLabel"")
local Credit = Instance.new(""TextLabel"")
local Plr = Players.LocalPlayer
local Clipon = false

Noclip.Name = ""Noclip""
Noclip.Parent = game.CoreGui

BG.Name = ""BG""
BG.Parent = Noclip
BG.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
BG.BorderColor3 = Color3.new(0.0588235, 0.0588235, 0.0588235)
BG.BorderSizePixel = 2
BG.Position = UDim2.new(0.149479166, 0, 0.82087779, 0)
BG.Size = UDim2.new(0, 210, 0, 127)
BG.Active = true
BG.Draggable = true

Title.Name = ""Title""
Title.Parent = BG
Title.BackgroundColor3 = Color3.new(0.266667, 0.00392157, 0.627451)
Title.BorderColor3 = Color3.new(0.180392, 0, 0.431373)
Title.BorderSizePixel = 2
Title.Size = UDim2.new(0, 210, 0, 33)
Title.Font = Enum.Font.Highway
Title.Text = ""Noclip""
Title.TextColor3 = Color3.new(1, 1, 1)
Title.FontSize = Enum.FontSize.Size32
Title.TextSize = 30
Title.TextStrokeColor3 = Color3.new(0.180392, 0, 0.431373)
Title.TextStrokeTransparency = 0

Toggle.Parent = BG
Toggle.BackgroundColor3 = Color3.new(0.266667, 0.00392157, 0.627451)
Toggle.BorderColor3 = Color3.new(0.180392, 0, 0.431373)
Toggle.BorderSizePixel = 2
Toggle.Position = UDim2.new(0.152380958, 0, 0.374192119, 0)
Toggle.Size = UDim2.new(0, 146, 0, 36)
Toggle.Font = Enum.Font.Highway
Toggle.FontSize = Enum.FontSize.Size28
Toggle.Text = ""Toggle""
Toggle.TextColor3 = Color3.new(1, 1, 1)
Toggle.TextSize = 25
Toggle.TextStrokeColor3 = Color3.new(0.180392, 0, 0.431373)
Toggle.TextStrokeTransparency = 0

StatusPF.Name = ""StatusPF""
StatusPF.Parent = BG
StatusPF.BackgroundColor3 = Color3.new(1, 1, 1)
StatusPF.BackgroundTransparency = 1
StatusPF.Position = UDim2.new(0.314285725, 0, 0.708661377, 0)
StatusPF.Size = UDim2.new(0, 56, 0, 20)
StatusPF.Font = Enum.Font.Highway
StatusPF.FontSize = Enum.FontSize.Size24
StatusPF.Text = ""Status:""
StatusPF.TextColor3 = Color3.new(1, 1, 1)
StatusPF.TextSize = 20
StatusPF.TextStrokeColor3 = Color3.new(0.333333, 0.333333, 0.333333)
StatusPF.TextStrokeTransparency = 0
StatusPF.TextWrapped = true

Status.Name = ""Status""
Status.Parent = BG
Status.BackgroundColor3 = Color3.new(1, 1, 1)
Status.BackgroundTransparency = 1
Status.Position = UDim2.new(0.580952346, 0, 0.708661377, 0)
Status.Size = UDim2.new(0, 56, 0, 20)
Status.Font = Enum.Font.Highway
Status.FontSize = Enum.FontSize.Size14
Status.Text = ""off""
Status.TextColor3 = Color3.new(0.666667, 0, 0)
Status.TextScaled = true
Status.TextSize = 14
Status.TextStrokeColor3 = Color3.new(0.180392, 0, 0.431373)
Status.TextWrapped = true
Status.TextXAlignment = Enum.TextXAlignment.Left

Credit.Name = ""Credit""
Credit.Parent = BG
Credit.BackgroundColor3 = Color3.new(1, 1, 1)
Credit.BackgroundTransparency = 1
Credit.Position = UDim2.new(0.195238099, 0, 0.866141737, 0)
Credit.Size = UDim2.new(0, 128, 0, 17)
Credit.Font = Enum.Font.SourceSans
Credit.FontSize = Enum.FontSize.Size18
Credit.Text = ""Created by Sheepz""
Credit.TextColor3 = Color3.new(1, 1, 1)
Credit.TextSize = 16
Credit.TextStrokeColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Credit.TextStrokeTransparency = 0
Credit.TextWrapped = true

Toggle.MouseButton1Click:connect(function()
	if Status.Text == ""off"" then
		Clipon = true
		Status.Text = ""on""
		Status.TextColor3 = Color3.new(0,185,0)
		Stepped = game:GetService(""RunService"").Stepped:Connect(function()
			if not Clipon == false then
				for a, b in pairs(Workspace:GetChildren()) do
                if b.Name == Plr.Name then
                for i, v in pairs(Workspace[Plr.Name]:GetChildren()) do
                if v:IsA(""BasePart"") then
                v.CanCollide = false
                end end end end
			else
				Stepped:Disconnect()
			end
		end)
	elseif Status.Text == ""on"" then
		Clipon = false
		Status.Text = ""off""
		Status.TextColor3 = Color3.new(170,0,0)
	end
end)"
ZRBFuD39,ESP Script (ROBLOX SCRIPT),Sheepz,Lua,Sunday 30th of July 2023 06:48:20 PM CDT,"-- made by me (Sheepz)


local function createESP(player)
    local espBox = Instance.new(""BoxHandleAdornment"")
    espBox.Name = ""ESPBox""
    espBox.Adornee = player.Character and player.Character:FindFirstChild(""HumanoidRootPart"")
    espBox.AlwaysOnTop = true
    espBox.Size = Vector3.new(2, 5, 1) 
    espBox.Color3 = Color3.new(1, 0, 0) 
    espBox.ZIndex = 5
    espBox.Parent = player.Character and player.Character:FindFirstChild(""HumanoidRootPart"")
end


local function updateESP()
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character then
            local espBox = player.Character:FindFirstChild(""ESPBox"")
            if not espBox then
                createESP(player)
            end
        end
    end
end


while wait(1) do
    updateESP()
end"
aK5VKH0j,PDF_En-Ru,O777GR,Python,Sunday 30th of July 2023 06:45:08 PM CDT,"from PyPDF2 import PdfFileReader, PdfFileWriter
from deep_translator import GoogleTranslator
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.platypus import Paragraph, Image
from reportlab.lib.styles import getSampleStyleSheet

# Установка языкового пары для перевода
src_lang = 'auto'  # Исходный язык (автоопределение)
dst_lang = 'ru'  # Язык, на который будет производиться перевод

# Путь к исходному PDF файлу
input_pdf = 'example.pdf'

# Путь к выходному PDF файлу
output_pdf = 'translated_example.pdf'

# Создание объекта PdfFileReader для чтения исходного PDF файла
pdf = PdfFileReader(input_pdf)

# Создание объекта PdfFileWriter для записи переведенного PDF
output = PdfFileWriter()

# Цикл по страницам исходного PDF файла
for page_num in range(pdf.getNumPages()):
    page = pdf.getPage(page_num)
    
    # Извлечение текста с текущей страницы
    text = page.extractText().strip()
    
    # Перевод текста с помощью Deepl
    translated_text = GoogleTranslator(source=src_lang, target=dst_lang).translate(text)
    
    # Создание нового PDF с отформатированным текстом
    new_pdf = canvas.Canvas(f'page_{page_num+1}.pdf', pagesize=letter)
    
    # Добавление переведенного текста на страницу
    stylesheet = getSampleStyleSheet()
    translated_paragraph = Paragraph(translated_text, stylesheet['BodyText'])
    translated_paragraph.wrapOn(new_pdf, 500, 500)  # Ограничение размеров текста
    translated_paragraph.drawOn(new_pdf, 50, 500)  # Положение текста
    
    # Добавление изображений с текущей страницы
    for i, image in enumerate(page.images.values()):
        img_data = image.getData()
        with open(f'image_{page_num+1}_{i}.jpg', 'wb') as f:
            f.write(img_data)
        new_pdf.drawImage(f'image_{page_num+1}_{i}.jpg', 50, 200 - i*100, 200, 100)
    
    # Закрытие нового PDF файла
    new_pdf.save()
    
    # Чтение нового PDF файла и добавление его страниц в выходной PDF
    with open(f'page_{page_num+1}.pdf', 'rb') as f:
        translated_page = PdfFileReader(f)
        output.addPage(translated_page.getPage(0))

# Запись переведенного PDF файла
with open(output_pdf, 'wb') as f:
    output.write(f)

# Удаление временных файлов
for page_num in range(pdf.getNumPages()):
    os.remove(f'page_{page_num+1}.pdf')
    for i, _ in enumerate(page.images.values()):
        os.remove(f'image_{page_num+1}_{i}.jpg')

print(f'Переведенный PDF сохранен в файл: {output_pdf}')

# Этот код переводит исходный PDF файл на русский язык с помощью Deepl, сохраняет все изображения и форматирование, а затем сохраняет результат в выходной файл translated_example.pdf."
LhbFX9gN,Untitled,smj007,Python,Sunday 30th of July 2023 06:31:24 PM CDT,"class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        cols = collections.defaultdict(set)
        rows = collections.defaultdict(set)
        squares = collections.defaultdict(set)  # key = (r /3, c /3)

        for r in range(9):
            for c in range(9):
                if board[r][c] == ""."":
                    continue
                if (
                    board[r][c] in rows[r]
                    or board[r][c] in cols[c]
                    or board[r][c] in squares[(r // 3, c // 3)]
                ):
                    return False
                cols[c].add(board[r][c])
                rows[r].add(board[r][c])
                squares[(r // 3, c // 3)].add(board[r][c])

        return True"
TQ4HK2xW,Untitled,smj007,Python,Sunday 30th of July 2023 06:09:11 PM CDT,"# Approach: maintain a product prefix. However you do not do the same for product suffix, for that what you got to do is
# start calcualting answer backwards and as you go from end to start calculate product suffix. 

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        
        product = 1
        prefix = [1 for i in range(len(nums))]

        for i in range(1, len(nums)):
            prefix[i] = prefix[i-1]*nums[i-1]

        suffix = 1
        ans = [1 for i in range(len(nums))]

        for i in range(len(nums)-1, -1, -1):
            ans[i] = prefix[i]*suffix
            suffix = suffix*nums[i]

        return ans"
E0C5b5dF,TP Fly Script (ROBLOX SCRIPT),Sheepz,Lua,Sunday 30th of July 2023 05:54:05 PM CDT,"-- this script was made by me (Sheepz).

local player = game.Players.LocalPlayer
local character = player.Character
local humanoid = character and character:FindFirstChild(""Humanoid"")

local flying = false
local flySpeed = 50 -- you can adjust this value to change the flying speed.


local function enableFlying()
    if humanoid then
        humanoid.PlatformStand = true
        humanoid.AutoRotate = false
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
        flying = true
    end
end


local function disableFlying()
    if humanoid then
        humanoid.PlatformStand = false
        humanoid.AutoRotate = true
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
        flying = false
    end
end


local function handleInput(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end

    if flying and input.UserInputType == Enum.UserInputType.Keyboard then
        local moveVector = Vector3.new()

        if input.KeyCode == Enum.KeyCode.W then
            moveVector = moveVector + Vector3.new(0, 0, -1)
        end
        if input.KeyCode == Enum.KeyCode.S then
            moveVector = moveVector + Vector3.new(0, 0, 1)
        end
        if input.KeyCode == Enum.KeyCode.A then
            moveVector = moveVector + Vector3.new(-1, 0, 0)
        end
        if input.KeyCode == Enum.KeyCode.D then
            moveVector = moveVector + Vector3.new(1, 0, 0)
        end

        character:SetPrimaryPartCFrame(CFrame.new(character.PrimaryPart.Position + moveVector * flySpeed))
    end
end


game:GetService(""UserInputService"").InputBegan:Connect(handleInput)
game:GetService(""UserInputService"").InputChanged:Connect(handleInput)


local gui = Instance.new(""ScreenGui"")
gui.Parent = player.PlayerGui
gui.Name = ""TPFlyingGUI""

local enableButton = Instance.new(""TextButton"")
enableButton.Parent = gui
enableButton.Size = UDim2.new(0, 100, 0, 50)
enableButton.Position = UDim2.new(0.25, 0, 0.4, 0)
enableButton.Text = ""Enable TPFlying""
enableButton.FontSize = Enum.FontSize.Size24
enableButton.TextColor3 = Color3.new(1, 1, 1)
enableButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
enableButton.BorderSizePixel = 0
enableButton.MouseButton1Click:Connect(enableFlying)

local disableButton = Instance.new(""TextButton"")
disableButton.Parent = gui
disableButton.Size = UDim2.new(0, 100, 0, 50)
disableButton.Position = UDim2.new(0.65, 0, 0.4, 0)
disableButton.Text = ""Disable TPFlying""
disableButton.FontSize = Enum.FontSize.Size24
disableButton.TextColor3 = Color3.new(1, 1, 1)
disableButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
disableButton.BorderSizePixel = 0
disableButton.MouseButton1Click:Connect(disableFlying)"
xhVYM1pC,A Social Media Conversation: Round 10,thehunmonkgroup,JSON,Sunday 30th of July 2023 05:41:21 PM CDT," {
     ""comments"": [
         {
             ""comment_id"": ""1"",
             ""user_id"": ""101"",
             ""comment"": ""As an individual who identifies as progressive and embraces non-duality, I'd like to start this conversation by saying that LGBTQ+ rights are not an affront to traditional values or societal norms. In my opinion, societal norms are ever-evolving, and traditional values should be about respect, love, and understanding. These values aren't compromised by someone's sexual orientation or gender identity. Instead, they are threatened when we fail to recognize and respect the inherent dignity and worth of all individuals. I believe in a world where everyone, regardless of who they love or how they identify, should have the same rights and opportunities.""
         },
         {
             ""comment_id"": ""2"",
             ""user_id"": ""104"",
             ""comment"": ""While I respect your opinion, Mekhi, I must disagree. As a Christian and a right-wing individual, I believe in the sanctity of traditional values. I feel that the LGBTQ+ movement disrupts societal norms and threatens the stability of our society. This is not about disrespecting individuals, but rather about preserving the norms that have been in place for centuries.""
         },
         {
             ""comment_id"": ""3"",
             ""user_id"": ""105"",
             ""comment"": ""Preserving norms that marginalize and harm certain individuals? Doesn't sound very fair to me, Eberhardt.""
         },
         {
             ""comment_id"": ""4"",
             ""user_id"": ""102"",
             ""comment"": ""I agree with Kolya. As a follower of the Bah\u00e1\u02bc\u00ed faith, I believe in the unity and equality of all people. Traditional values should evolve with society, and we should all strive for inclusivity.""
         },
         {
             ""comment_id"": ""5"",
             ""user_id"": ""103"",
             ""comment"": ""I think the challenge here is balancing respect for individual rights with societal norms. It's a complex issue.""
         },
         {
             ""comment_id"": ""6"",
             ""user_id"": ""101"",
             ""comment"": ""Exactly, Kalina. It's about striking a balance. But no one should have to hide who they are or who they love because of 'societal norms'.""
         },
         {
             ""comment_id"": ""7"",
             ""user_id"": ""104"",
             ""comment"": ""But what about the rights of those who believe in traditional values? Aren't they being marginalized by this push for LGBTQ+ rights?""
         },
         {
             ""comment_id"": ""8"",
             ""user_id"": ""105"",
             ""comment"": ""No one's stopping you from believing what you want, Eberhardt. But your beliefs shouldn't infringe on someone else's rights.""
         },
         {
             ""comment_id"": ""9"",
             ""user_id"": ""102"",
             ""comment"": ""Well said, Kolya. Everyone's beliefs should be respected, but not at the expense of others.""
         },
         {
             ""comment_id"": ""10"",
             ""user_id"": ""103"",
             ""comment"": ""This is a difficult conversation, but necessary. I hope we can all learn from it.""
         },
         {
             ""comment_id"": ""11"",
             ""user_id"": ""101"",
             ""comment"": ""I agree, Kalina. We need more open dialogues like this.""
         },
         {
             ""comment_id"": ""12"",
             ""user_id"": ""104"",
             ""comment"": ""I still stand by my beliefs, but I appreciate the conversation.""
         },
         {
             ""comment_id"": ""13"",
             ""user_id"": ""105"",
             ""comment"": ""And we respect your right to your beliefs, Eberhardt. Just as we hope you'd respect ours.""
         },
         {
             ""comment_id"": ""14"",
             ""user_id"": ""102"",
             ""comment"": ""That's what it's all about, isn't it? Mutual respect and understanding.""
         },
         {
             ""comment_id"": ""15"",
             ""user_id"": ""103"",
             ""comment"": ""Indeed, Zekiye. Let's keep the conversation going.""
         }
     ],
     ""subtopics"": [
         {
             ""comment_id"": ""2"",
             ""sub_topic"": ""The impact of religious beliefs on views about LGBTQ+ rights""
         },
         {
             ""comment_id"": ""7"",
             ""sub_topic"": ""Are traditionalists marginalized by the push for LGBTQ+ rights?""
         }
     ],
     ""message"": ""Stored the conversation comments and suggested sub-topics""
 }"
rPfCGntJ,GLONDON LIMITED [7/2023],bombaires,HTML,Sunday 30th of July 2023 05:21:56 PM CDT,"<a href=""mailto:INFO@RFDCXZ.COM"">INFO@RFDCXZ.COM</a>
<a href=""mailto:CS@GLONDONLIMITED.COM"">CS@GLONDONLIMITED.COM</a>
<a href=""mailto:info@QLPYBD.com"">info@QLPYBD.com</a>
<a href=""mailto:info@FNDYETE.com"">info@FNDYETE.com</a>
<a href=""mailto:info@fndyete.com"">info@fndyete.com</a>
<a href=""mailto:cs@freeflirtz.com"">cs@freeflirtz.com</a>
<a href=""mailto:cs@glondonlimited.com"">cs@glondonlimited.com</a>
<pre>GLONDON LIMITED

KLEOMENOUS 2, 1ST FLOOR, OFFICE 12, 1061 NICOSIA, CYPRUS

Telephone number: (800)317-0302</pre>"
Qr43pEB4,[Roblox] - Tadachii's Speed GUI,Chuffman-CSD,Lua,Sunday 30th of July 2023 04:40:24 PM CDT,"local guiName = ""TadachiisSpeedGui""

-- Check if the GUI already exists and recreate it if needed
local existingGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild(guiName)
if existingGui then
    existingGui:Destroy()
end

-- Function to create the GUI
local function createSpeedGui()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild(""PlayerGui"")
    
    local gui = Instance.new(""ScreenGui"")
    gui.Name = guiName
    
    local holder = Instance.new(""Frame"")
    holder.Name = ""Holder""
    holder.Parent = gui
    holder.Position = UDim2.new(0.5, -150, 0.5, -100)
    holder.Size = UDim2.new(0, 200, 0, 280)
    holder.Active = true
    holder.Draggable = true
    holder.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    holder.BackgroundTransparency = 0.5
    
    local titleLabel = Instance.new(""TextLabel"")
    titleLabel.Name = ""TitleLabel""
    titleLabel.Parent = holder
    titleLabel.Position = UDim2.new(0, 0, 0, 5)
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Text = ""Tadachii's Speed Gui""
    titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 20
    
    local statusLabel = Instance.new(""TextLabel"")
    statusLabel.Name = ""StatusLabel""
    statusLabel.Parent = holder
    statusLabel.Position = UDim2.new(0, 10, 0, 30)
    statusLabel.Size = UDim2.new(1, -20, 0, 30)
    statusLabel.Text = ""Player Speed:""
    statusLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextSize = 18
    
    local dropdownButton = Instance.new(""TextButton"")
    dropdownButton.Name = ""DropdownButton""
    dropdownButton.Parent = holder
    dropdownButton.Position = UDim2.new(0.5, -50, 0, 60)
    dropdownButton.Size = UDim2.new(0, 100, 0, 30)
    dropdownButton.Text = ""0""
    dropdownButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.Font = Enum.Font.SourceSans
    --dropdownButton.TextSize = 18
    dropdownButton.TextScaled = true
    
    local dropdownMenu = Instance.new(""ScrollingFrame"")  -- Use a ScrollingFrame instead of a Frame
    dropdownMenu.Name = ""DropdownMenu""
    dropdownMenu.Parent = holder
    dropdownMenu.Position = UDim2.new(0.5, -50, 0, 90)
    dropdownMenu.Size = UDim2.new(0, 100, 0, 100)
    dropdownMenu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dropdownMenu.Visible = false
    dropdownMenu.ScrollBarThickness = 8 -- Add a scrollbar to the ScrollingFrame
    dropdownMenu.CanvasSize = UDim2.new(0, 0, 0, 2000) -- Adjust the CanvasSize to fit all options
    
    for i = 0, 99 do
        local optionButton = Instance.new(""TextButton"")
        optionButton.Name = tostring(i)
        optionButton.Parent = dropdownMenu
        optionButton.Position = UDim2.new(0, 0, 0, i * 20)
        optionButton.Size = UDim2.new(1, 0, 0, 20)
        optionButton.Text = tostring(i)
        optionButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        optionButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.Font = Enum.Font.SourceSans
        optionButton.TextSize = 18
        optionButton.MouseButton1Click:Connect(function()
            dropdownButton.Text = tostring(i)
            dropdownMenu.Visible = false
        end)
    end
    
    local setSpeedButton = Instance.new(""TextButton"")
    setSpeedButton.Name = ""SetSpeedButton""
    setSpeedButton.Parent = holder
    setSpeedButton.Position = UDim2.new(0.5, -50, 0, 200)
    setSpeedButton.Size = UDim2.new(0, 100, 0, 30)
    setSpeedButton.Text = ""Set Speed""
    setSpeedButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    setSpeedButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    setSpeedButton.Font = Enum.Font.SourceSans
    --setSpeedButton.TextSize = 18
    setSpeedButton.TextScaled = true
    setSpeedButton.MouseButton1Click:Connect(function()
        local selectedSpeed = tonumber(dropdownButton.Text) or 0
        player.Character.Humanoid.WalkSpeed = selectedSpeed
    end)
    
    local destroyGuiButton = Instance.new(""TextButton"")
    destroyGuiButton.Name = ""DestroyGuiButton""
    destroyGuiButton.Parent = holder
    destroyGuiButton.Position = UDim2.new(0.5, -50, 0, 240)
    destroyGuiButton.Size = UDim2.new(0, 100, 0, 30)
    destroyGuiButton.Text = ""Destroy GUI""
    destroyGuiButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    destroyGuiButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    destroyGuiButton.Font = Enum.Font.SourceSans
    --destroyGuiButton.TextSize = 18
    destroyGuiButton.TextScaled = true
    destroyGuiButton.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)
    
    dropdownButton.MouseButton1Click:Connect(function()
        dropdownMenu.Visible = not dropdownMenu.Visible
    end)
    
    gui.Parent = playerGui
end

createSpeedGui()
"
cq52GssF,[Roblox] - Tadachii's Chat Logs GUI,Chuffman-CSD,Lua,Sunday 30th of July 2023 03:56:53 PM CDT,"--This GUI fetches the chats from users in the public chat and logs it into your GUI.

-- Your script with addition for chat log
local chatStorage = {}

local selectedPlayerName = nil
local displayedMessages = 0

local function printMessage(player, message)
    print(player.Name .. "" sent a message: "" .. message)
    -- Store each message sent by players
    if chatStorage[player.Name] then
        table.insert(chatStorage[player.Name], {os.time(), message})
    else
        chatStorage[player.Name] = {{os.time(), message}}
    end
end

for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        printMessage(player, message)
    end)
end

game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        printMessage(player, message)
    end)
end)

-- Check if the ScreenGui already exists
local screenGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild(""TadachiisChatLogsGui"")

if screenGui then
    screenGui:Destroy()
end

-- Create ScreenGui and Holder frame
screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""TadachiisChatLogsGui""
screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")

local holder = Instance.new(""Frame"")
holder.Name = ""Holder""
holder.Position = UDim2.new(0.5, -150, 0, 20)
holder.Size = UDim2.new(0, 300, 0, 400)
holder.BackgroundTransparency = 0.5
holder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
holder.Parent = screenGui

local titleLabel = Instance.new(""TextLabel"")
titleLabel.Name = ""TitleLabel""
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = ""Tadachii's Chat Logs""
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 20
titleLabel.Parent = holder

-- Create DropdownButton
local dropdownButton = Instance.new(""TextButton"")
dropdownButton.Name = ""DropdownButton""
dropdownButton.Size = UDim2.new(1, 0, 0, 30)
dropdownButton.Position = UDim2.new(0, 0, 0, 30)
dropdownButton.BackgroundTransparency = 0.5
dropdownButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dropdownButton.Text = ""Select a player""
dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
dropdownButton.TextSize = 18
dropdownButton.Parent = holder

local chatLogs = Instance.new(""ScrollingFrame"")
chatLogs.Name = ""ChatLogs""
chatLogs.Size = UDim2.new(1, 0, 0.6, -60)
chatLogs.Position = UDim2.new(0, 0, 0.4, 0)
chatLogs.CanvasSize = UDim2.new(0, 0, 10, 0)
chatLogs.BackgroundTransparency = 1
chatLogs.Parent = holder

-- Create a UIListLayout instance for chatLogs
local listLayout = Instance.new(""UIListLayout"")
listLayout.Parent = chatLogs

-- Function to create the dropdown menu with player names as options
local function createDropdownMenu()
    local dropdownMenu = Instance.new(""ScrollingFrame"")
    dropdownMenu.Name = ""DropdownMenu""
    dropdownMenu.Size = UDim2.new(1, 0, 0, 100)
    dropdownMenu.Position = UDim2.new(0, 0, 0, 60)
    dropdownMenu.BackgroundTransparency = 0.5
    dropdownMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    dropdownMenu.CanvasSize = UDim2.new(0, 0, 10, 0)
    dropdownMenu.Parent = holder

    local menuLayout = Instance.new(""UIListLayout"")
    menuLayout.Parent = dropdownMenu

    local function selectPlayer(playerName)
        dropdownButton.Text = playerName
        dropdownMenu:Destroy()
        -- Fill chatLogs with selected player's messages
        for _, v in ipairs(chatLogs:GetChildren()) do
            if v:IsA(""TextLabel"") then
                v:Destroy()
            end
        end
        for _, messageData in ipairs(chatStorage[playerName] or {}) do
            local timeSent = os.date('%Y-%m-%d %H:%M:%S', messageData[1])
            local message = messageData[2]
            local chatLogLabel = Instance.new(""TextLabel"")
            chatLogLabel.Text = timeSent .. "" "" .. message
            chatLogLabel.Size = UDim2.new(1, 0, 0, 30)
            chatLogLabel.BackgroundTransparency = 1
            chatLogLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            chatLogLabel.Parent = chatLogs
        end
        displayedMessages = #chatStorage[playerName]
        selectedPlayerName = playerName
    end

    for _, player in ipairs(game.Players:GetPlayers()) do
        local optionButton = Instance.new(""TextButton"")
        optionButton.Name = player.Name .. ""Button""
        optionButton.Size = UDim2.new(1, 0, 0, 20)
        optionButton.BackgroundTransparency = 0.5
        optionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        optionButton.Text = player.Name
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.TextSize = 16
        optionButton.Parent = dropdownMenu

        optionButton.MouseButton1Click:Connect(function()
            selectPlayer(player.Name)
        end)
    end
end

dropdownButton.MouseButton1Click:Connect(function()
    local dropdownMenu = holder:FindFirstChild(""DropdownMenu"")
    if dropdownMenu then
        dropdownMenu:Destroy()
    else
        createDropdownMenu()
    end
end)

-- Make the Holder frame draggable
holder.Active = true
holder.Draggable = true

-- Create a loop to update chatLogs if there are new messages
while wait(1) do
    if selectedPlayerName and #chatStorage[selectedPlayerName] > displayedMessages then
        for i = displayedMessages + 1, #chatStorage[selectedPlayerName] do
            local messageData = chatStorage[selectedPlayerName][i]
            local timeSent = os.date('%H:%M:%S', messageData[1])
            local message = messageData[2]
            local chatLogLabel = Instance.new(""TextLabel"")
            chatLogLabel.Text = timeSent .. "" "" .. message
            chatLogLabel.Size = UDim2.new(1, 0, 0, 30)
            chatLogLabel.BackgroundTransparency = 1
            chatLogLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            chatLogLabel.Parent = chatLogs
        end
        displayedMessages = #chatStorage[selectedPlayerName]
    end
end
"
8BsvVC6T,function-set-avia-frontend,Guenni007,PHP,Sunday 30th of July 2023 03:52:01 PM CDT,"<?php
/**
 * This file holds various helper functions that are needed by the frameworks FRONTEND
 *
 * @author		Christian ""Kriesi"" Budschedl
 * @copyright	Copyright (c) Christian Budschedl
 * @link		http://kriesi.at
 * @link		http://aviathemes.com
 * @since		Version 1.0
 * @package 	AviaFramework
 */
if( ! defined( 'AVIA_FW' ) ) {   exit( 'No direct script access allowed' );   }


if( ! function_exists( 'avia_option' ) )
{
	/**
	 * This function serves as shortcut for avia_get_option and is used to retrieve options saved within the database with the first key set to ""avia"" which is the majority of all options
	 * Please note that while the get_avia_option returns the result, this function echos it by default. if you want to retrieve an option and store the variable please use get_avia_option or set $echo to false
	 *
	 * basically the function is called like this: avia_option('portfolio');
	 * That would retrieve the following var saved in the global $avia superobject: $avia->options['avia']['portfolio']
	 * If you want to set a default value that is returned in case there was no array match you need to use this scheme:
	 *
	 * avia_option( 'portfolio', ""my default"");
	 *
	 * @deprecated 4.9
	 * @param string $key accepts a comma separated string with keys
	 * @param string $default return value in case we got no result
	 * @param bool $echo echo the result or not, default is to false
	 * @param bool $decode decode the result or not, default is to false
	 * @return string $result: the saved result. if no result was saved or the key doesnt exist returns an empty string
	 */
	function avia_option( $key, $default = '', $echo = true, $decode = true )
	{
		_deprecated_function( 'avia_option', '4.9', 'use avia_get_option instead - will be removed in future' );

		$result = avia_get_option( $key, $default, false, $decode );

		if( ! $echo)
		{
			return $result; //if we dont want to echo the output end script here
		}

		echo $result;
	}
}


if( ! function_exists( 'avia_get_option' ) )
{
	/**
	 * This function serves as shortcut to retrieve options saved within the database by the option pages of the avia framework
	 *
	 * basically the function is called like this: avia_get_option('portfolio');
	 * That would retrieve the following var saved in the global $avia superobject: $avia->options['avia']['portfolio']
	 * If you want to set a default value that is returned in case there was no array match OR value is '' (this is different behaviour from get_option() !!!! )
	 * you need to use this scheme:
	 *
	 * avia_get_option( 'portfolio', 'my default' ); or
	 * avia_get_option( array( 'avia','portfolio' ), 'my default' );
	 *
	 * @since 4.8						support for multiple option pages
	 * @param string|array|false $key	see above
	 * @param string $default			return value in case we got no result - and - if value of option = '' ( !!!!! )
	 * @param bool $echo				echo the result or not, default is to false
	 * @param bool $decode				decode the result or not, default is to false
	 * @return mixed					the saved result. if no result was saved, the key doesn't exist or is '' returns $default
	 */
	function avia_get_option( $key = false, $default = '', $echo = false, $decode = true )
	{
		global $avia;

		/**
		 * This fixed a problem with WP CLI: wp cache flush
		 *
		 *		Trying to get property of non-object $avia
		 *
		 * Adding global $avia; to framework\avia_framework.php did the final solution - we keep this for a fallback only.
		 */
		if( ! $avia instanceof avia_superobject )
		{
			$avia = AviaSuperobject();
		}

		$pages = array();
		$opt_key = '';
		$result = null;

		if( false === $key )
		{
			//	Return 'avia' page array
			$result = isset( $avia->options['avia'] ) ? $avia->options['avia'] : array();
		}
		else if( is_array( $key ) && count( $key ) == 0 )
		{
			//	fallback -> we return default value
			$result = $default;
		}
		else if( is_array( $key ) && count( $key ) == 1 )
		{
			//	@since 4.8 return requested page array
			$result = isset( $avia->options[ $key[0] ] ) ? $avia->options[ $key[0] ] : array();
		}
		else
		{
			if( is_array( $key ) && count( $key ) > 1 )
			{
				$pages[] = isset( $key[0] ) ? $key[0] : '';
				$opt_key = isset( $key[1] ) ? $key[1] : '';
			}
			else
			{
				//	force avia to be the main array to search for option
				$pages[] = 'avia';
				$pages = array_unique( array_merge( $pages, array_keys( $avia->options ) ) );
				$opt_key = $key;
			}

			//	Scan all pages for option
			foreach( $pages as $page )
			{
				if( isset( $avia->options[ $page ] ) && isset( $avia->options[ $page ][ $opt_key ] ) )
				{
					$result = $avia->options[ $page ][ $opt_key ];
					break;
				}
			}

			/**
			 * !!!!  Different behaviour as get_option():
			 *
			 * Also return $default when options value is ''
			 */
			if( is_null( $result ) || ( '' == $result ) )
			{
				$result = $default;
			}
		}

		if( $decode )
		{
			$result = avia_deep_decode( $result );
		}

		if( $echo )
		{
			echo $result;
		}

		return $result;
	}
}


if( ! function_exists( 'avia_update_option' ) )
{
	/**
	 * This function serves as shortcut to update a single theme option
	 * You must specify the correct option page.
	 *
	 * @since ????
	 * @since 4.9						support multiple option pages
	 * @param string|array $key			'my_option' | array( 'page_slug', 'my_option' ) | array( 'my_option' ) ==> array( 'avia', 'my_option' )
	 * @param mixed $value
	 */
	function avia_update_option( $key, $value = '' )
	{
		global $avia;

		$page = 'avia';

		if( is_array( $key ) && count( $key ) == 1 )
		{
			$option_key = $key[0];
		}
		else if( is_array( $key ) && count( $key ) > 1 )
		{
			$page = $key[0];
			$option_key = $key[1];
		}
		else
		{
			$option_key = $key;
		}

		$avia->options[ $page ][ $option_key ] = $value;

		update_option( $avia->option_prefix, $avia->options );
	}
}


if( ! function_exists( 'avia_delete_option' ) )
{
	/**
	 * This function serves as shortcut to delete a single theme option
	 * You must specify the correct option page.
	 *
	 * @since ????
	 * @since 4.9						support multiple option pages
	 * @param string|array $key			'my_option' | array( 'page_slug', 'my_option' ) | array( 'my_option' ) ==> array( 'avia', 'my_option' )
	 */
	function avia_delete_option( $key )
	{
		global $avia;

		$page = 'avia';

		if( is_array( $key ) && count( $key ) == 1 )
		{
			$option_key = $key[0];
		}
		else if( is_array( $key ) && count( $key ) > 1 )
		{
			$page = $key[0];
			$option_key = $key[1];
		}
		else
		{
			$option_key = $key;
		}

		unset( $avia->options[ $page ][ $option_key ] );

		update_option( $avia->option_prefix , $avia->options );
	}
}

if( ! function_exists( 'avia_minify_extension' ) )
{
	/**
	 * Returns .min if option is set to load minified js or css files
	 *
	 * @since 5.2
	 * @param string $which
	 * @return string
	 */
	function avia_minify_extension( $which = 'js' )
	{
		switch( $which )
		{
			case 'js':
				$key = 'merge_js';
				break;
			case 'css':
				$key = 'merge_css';
				break;
			default:
				return '';
		}

		return 'minified_only' == avia_get_option( $key, 'none' ) ? '.min' : '';
	}
}


if( ! function_exists( 'avia_get_the_ID' ) )
{
	/**
	* This function is similiar to the wordpress function get_the_ID, but other than the wordpress function this functions takes into account
	* if we will display a different post later on, a post that differs from the one we queried in the first place. The function also holds this
	* original ID, even if another query is then executed (for example in dynamic templates for columns)
	*
	* an example would be the frontpage template were by default, the ID of the latest blog post is served by wordpress get_the_ID function.
	* avia_get_the_ID would return the same blog post ID if the blog is really displayed on the frontpage. if a static page is displayed the
	* function will display the ID of the static page, even if the page is not yet queried
	*
	* @return int $ID: the ""real"" ID of the post/page we are currently viewing
	*/
	function avia_get_the_ID()
	{
		global $avia_config;

		$ID = false;

		if( ! isset( $avia_config['real_ID'] ) )
		{
			if( ! empty( $avia_config['new_query']['page_id'] ) )
			{
				$ID = $avia_config['new_query']['page_id'];
				$avia_config['real_ID'] = $ID;
			}
			else
			{
				$post = get_post();
				if( isset( $post->ID ) )
				{
					$ID = $post->ID;
					$avia_config['real_ID'] = $ID;
				}
				else
				{
					$ID = false;
				}
				//$ID = @get_the_ID();
			}
		}
		else
		{
			$ID = $avia_config['real_ID'];
		}

		/**
		 * @since ???
		 * @param int $ID
		 * @return int
		 */
		$ID = apply_filters( 'avf_avia_get_the_ID', $ID );

		return $ID;
	}

	add_action( 'wp_head', 'avia_get_the_ID' );
}


if( ! function_exists( 'avia_is_overview' ) )
{
	/**
	* This function checks if the page we are going to render is a page with a single entry or a multi entry page (blog or archive for example)
	*
	* @return bool $result true or false
	*/
	function avia_is_overview()
	{
		global $avia_config;

		$result = true;

		if( is_singular() )
		{
			$result = false;
		}

		if( is_front_page() && avia_get_option( 'frontpage' ) == avia_get_the_ID() )
		{
			$result = false;
		}

		if( isset( $avia_config['avia_is_overview'] ) )
		{
			$result = $avia_config['avia_is_overview'];
		}

		return $result;
	}
}

if( ! function_exists( 'avia_post_meta' ) )
{
	/**
	 * This function retrieves the custom field values for a given post and saves it to the global avia config array
	 * If a subkey was set the subkey is returned, otherwise the array is saved to the global config array
	 * The function also hooks into the post loop and is automatically called for each post
	 *
	 * @param int|string $post_id
	 * @param string|false $subkey
	 * @return false|mixed
	 */
	function avia_post_meta( $post_id = '', $subkey = false )
	{
		$avia_post_id = $post_id;

		//if the user only passed a string and no id the string will be used as subkey
		if( ! $subkey && $avia_post_id != '' && ! is_numeric( $avia_post_id ) && ! is_object( $avia_post_id ) )
		{
			$subkey = $avia_post_id;
			$avia_post_id = '';
		}

		global $avia, $avia_config;

		$key = '_avia_elements_' . $avia->option_prefix;
		if( current_theme_supports( 'avia_post_meta_compat' ) )
		{
			$key = '_avia_elements_theme_compatibility_mode'; //activates a compatibility mode for easier theme switching and keeping post options
		}

		//if post id is on object the function was called via hook. If thats the case reset the meta array
		if( is_object( $avia_post_id ) && isset( $avia_post_id->ID ) )
		{
			$avia_post_id = $avia_post_id->ID;
		}

		if( ! $avia_post_id )
		{
			$avia_post_id = @get_the_ID();
		}

		if( ! is_numeric( $avia_post_id ) )
		{
			return false;
		}

		$avia_config['meta'] = avia_deep_decode( get_post_meta( $avia_post_id, $key, true ) );

		/**
		 * @since ???
		 * @param array $avia_config['meta']
		 * @param int $avia_post_id
		 * @return array
		 */
		$avia_config['meta'] = apply_filters( 'avia_post_meta_filter', $avia_config['meta'], $avia_post_id );

		if( $subkey && isset( $avia_config['meta'][ $subkey ] ) )
		{
			$meta = $avia_config['meta'][ $subkey ];
		}
		else if( $subkey )
		{
			$meta = false;
		}
		else
		{
			$meta = $avia_config['meta'];
		}

		return $meta;
	}

	add_action( 'the_post', 'avia_post_meta' );
}

if( ! function_exists( 'avia_get_modified_option' ) )
{
	/**
	* This function returns an option that was set in the backend. However if a post meta key with the same name exists it retrieves this option instead
	* That way we can easily set global settings for all posts in our backend (for example slideshow duration options) and then overrule those options
	*
	* In addition to the option key we need to pass a second key for a post meta value that must return a value other then empty before the global settings can be overwritten.
	* (example: should ths post use overwritten options? no=>'' yes=>""yes"")
	*
	* @param string $key			database key for both the post meta table and the framework options table
	* @param string $extra_check	database key for both a post meta value that needs to be true in order to accept an overwrite
	* @return string				$result: the saved result. if no result was saved or the key doesnt exist returns an empty string
	*/
	function avia_get_modified_option( $key, $extra_check = false )
	{
		global $post;

		//if we need to do an extra check get the post meta value for that key
		if( $extra_check && isset( $post->ID ) )
		{
			$extra_check = get_post_meta( $post->ID, $extra_check, true );
			if( $extra_check )
			{
				//add underline to the post meta value since we always hide those values
				$result = get_post_meta( $post->ID, '_' . $key, true );
				return $result;
			}
		}

		$result = avia_get_option( $key );
		return $result;
	}
}


if( ! function_exists( 'avia_set_follow' ) )
{
	/**
	 * prevents duplicate content by setting archive pages to nofollow
	 * @return string the robots meta tag set to index follow or noindex follow
	 */
	function avia_set_follow()
	{
		$robots = avia_get_option( 'seo_robots', '' );
		$blog_public = (int) get_option( 'blog_public', 0 );

		$meta = '';

		if( empty( $robots ) )
		{
			if( ( $blog_public === 0 ) || is_search() )
			{
				$meta .= '<meta name=""robots"" content=""noindex, nofollow"" />' . ""\n"";
			}
			else if( ( is_single() || is_page() || is_home() ) && ( ! is_paged() ) )
			{
				$meta .= '<meta name=""robots"" content=""index, follow"" />' . ""\n"";
			}
			else
			{
				$meta .= '<meta name=""robots"" content=""noindex, follow"" />' . ""\n"";
			}
		}

		/**
		 *
		 * @param string $meta
		 * @param string $robots			@since 4.7.5.1
		 * @param int $blog_public			@since 4.7.6.2
		 * @return string
		 */
		$meta = apply_filters( 'avf_set_follow', $meta, $robots, $blog_public );

		return $meta;
	}
}

if( ! function_exists( 'avia_set_profile_tag' ) )
{
	/**
	 * generates the html profile head tag
	 *
	 * @param boolean $echo
	 * @return string				the html head tag
	 */
	function avia_set_profile_tag( $echo = true )
	{
		$output = apply_filters( 'avf_profile_head_tag', '<link rel=""profile"" href=""http://gmpg.org/xfn/11"" />' . ""\n"" );

		if( $echo )
		{
			echo $output;
			return;
		}

		return $output;
	}

	add_action( 'wp_head', 'avia_set_profile_tag', 10, 0 );
}


if( ! function_exists( 'avia_set_rss_tag' ) )
{
	/**
	 * generates the html rss head tag
	 *
	 * @param boolean $echo
	 * @return string				the rss head tag
	 */
	function avia_set_rss_tag( $echo = true )
	{
		$output = '<link rel=""alternate"" type=""application/rss+xml"" title=""' . get_bloginfo( 'name' ) . ' RSS2 Feed"" href=""' . avia_get_option( 'feedburner', get_bloginfo( 'rss2_url' ) ) . '"" />' . ""\n"";
		$output = apply_filters( 'avf_rss_head_tag', $output );

		if( $echo )
		{
			echo $output;
			return;
		}

		return $output;
	}

	add_action( 'wp_head', 'avia_set_rss_tag', 10, 0 );
}


if( ! function_exists( 'avia_set_pingback_tag' ) )
{
	/**
	 * generates the html pingback head tag
	 *
	 * @param boolean $echo
	 * @return string					the pingback head tag
	 */
	function avia_set_pingback_tag( $echo = true )
	{
		$output = apply_filters( 'avf_pingback_head_tag', '<link rel=""pingback"" href=""' . get_bloginfo( 'pingback_url' ) . '"" />' . ""\n"" );

		if( $echo )
		{
			echo $output;
			return;
		}

		return $output;
    }

	add_action( 'wp_head', 'avia_set_pingback_tag', 10, 0 );
}


if( ! function_exists( 'avia_logo' ) )
{
	/**
	 * return the logo of the theme. if a logo was uploaded and set at the backend options panel display it
	 * otherwise display the logo file linked in the css file for the .bg-logo class
	 *
	 * @since < 4.0
	 * @param string $use_image				fallback in case selected logo in theme options not exists !!!!
	 * @param string $sub
	 * @param string $headline_type
	 * @param string|true $dimension
	 * @return string			the logo + url
	 */
	function avia_logo( $use_image = '', $sub = '', $headline_type = 'h1', $dimension = '' )
	{
//		$use_image = apply_filters( 'avf_logo', $use_image );	//	since 4.5.7.2 changed as inconsistently used again when logo is set
		$headline_type = apply_filters( 'avf_logo_headline', $headline_type );
		$sub = apply_filters( 'avf_logo_subtext',  $sub );
		$alt = apply_filters( 'avf_logo_alt', get_bloginfo( 'name' ) );
		$link = apply_filters( 'avf_logo_link', home_url( '/' ) );

		$title = '';
		$logo_id = 0;
		$has_svg = false;

		if( $sub )
		{
			$subclass = 'subtext';
			if( false !== strpos( $sub, '<svg ' ) )
			{
				$subclass .= ' avia-svg-logo-sub';
				$has_svg = true;
			}
			else if( false !== strpos( $sub, '.svg' ) )
			{
				$subclass .= ' avia-img-svg-logo-sub';
				$has_svg = true;
			}
			else
			{
				$subclass .= ' avia-standard-logo-sub';
			}

			$sub = ""<span class='{$subclass}'>{$sub}</span>"";
		}

		if( $dimension === true )
		{
			/**
			 * Basically just for better page speed ranking :P
			 * Be sure to return a valid attribute string.
			 *
			 * @since 4.8
			 * @param string $dimensions
			 * @return string
			 */
			$dimension = apply_filters( 'avf_logo_dimension', 'height=""100"" width=""300""' );
		}

		$logo = avia_get_option( 'logo' );
		if( ! empty( $logo ) )
		{
			/**
			 * @since 4.5.7.2
			 * @param string|int $logo
			 * @param string $context
			 * @return string|int
			 */
			$logo = apply_filters( 'avf_logo', $logo, 'option_set' );

			/**
			 * @since 4.8.2 support for responsive logo for retina screens
			 * @since 4.8.4 theme options provide by default url and not attachment id - try to find corresponding id
			 */
			$logo = Av_Responsive_Images()->attachment_url_to_postid( $logo );

			if( is_numeric( $logo ) )
			{
				$logo_id = $logo;

				//	@since 4.8.2 support for responsive logo for retina screens
				$logo_src = Av_Responsive_Images()->responsive_image_src( $logo_id, 'full' );

				if( is_array( $logo_src ) )
				{
				   $title = get_the_title( $logo_id );
				   $logo = $logo_src;
				}
				else
				{
					/**
					 * This is a fallback only in case logo image was deleted - we ignore responsive image here by default
					 * Filter allows to return responsive image structure (see $logo_src above)
					 *
					 * @since 4.8.4
					 * @param string $use_image
					 * @param int $logo_id
					 * @param string $context
					 */
					$logo = apply_filters( 'avf_logo_use_image', $use_image, $logo_id, 'image_deleted' );
				}
			}

			/**
			 * @since 4.5.7.2
			 * @param string $title
			 * @param string $context
			 * @return string
			 */
			$title = apply_filters( 'avf_logo_title', $title, 'option_set' );

			if( empty( $logo ) )
			{
				//	provide a fallback in case logo image was removed and no fallback image
				$blog_name = get_bloginfo( 'name' );

				$logo = ""<{$headline_type} class='logo bg-logo'><a href='{$link}'>{$blog_name}{$sub}</a></{$headline_type}>"";
			}
			else
			{
				$logo_url = is_array( $logo ) ? $logo[0] : $logo;
				$logo_class = 'logo';

				if( ! avia_SVG()->exists_svg_file( $logo_url, $logo_id ) )
				{
					$logo_class .= avia_SVG()->is_svg( $logo_url ) ? ' avia-img-svg-logo' : ' avia-standard-logo';
					$resp_attr = Av_Responsive_Images()->html_attr_image_src( $logo, true );

					/**
					 * https://kriesi.at/support/topic/logo-srcset/
					 *
					 * Bug that WP removes scrset and sizes when width and/or height is defined
					 * @since 4.8.3
					 * @since 4.8.4 removed  (https://kriesi.at/support/topic/logo-srcset/#post-1309955)
					 */
					if( false !== strpos( $resp_attr, 'srcset' ) || false !== strpos( $resp_attr, 'sizes' ) )
					{
	//					$dimension = '';
					}

					$logo_img = ""<img {$resp_attr} {$dimension} alt='{$alt}' title='{$title}' />"";
				}
				else
				{
					$logo_class .= ' avia-svg-logo';
					$logo_img = avia_SVG()->get_html( $logo_id, $logo_url, avia_SVG()->get_header_logo_aspect_ratio(), 'html', $title );
				}

				if( false !== strpos( $logo_class, '-svg-' ) )
				{
					$has_svg = true;
				}

				$a_class = $has_svg ? 'av-contains-svg' : '';

				$aria = '';
				if( ! empty( $title ) )
				{
					$aria = ""aria-label='{$title}'"";
				}
				else if( ! empty( $alt ) )
				{
					$aria = ""aria-label='{$alt}'"";
				}
				else
				{
					$aria = 'aria-label=""' . __( 'Logo', 'avia_framework' ) . '""';
				}

				/**
				 * Return a complete modified aria-label="""" attribute string
				 *
				 * @since 5.6.5
				 * @param string $aria
				 * @return string
				 */
				$aria = apply_filters( 'avf_avia_logo_link_aria', $aria );


				$link_title = ! empty( $title ) ? ""title='{$title}'"" : '';

				/**
				 * Return a complete modified title="""" attribute string
				 * If you want to use it as tooltip you must REMOVE title attribute from image
				 *
				 * @since 5.6.5
				 * @param string $link_title
				 * @param string $title
				 * @param string $alt
				 * @return string
				 */
				$link_title = apply_filters( 'avf_avia_logo_link_title', $link_title, $title, $alt );

				$logo = ""<{$headline_type} class='{$logo_class}'><a href='{$link}' class='{$a_class}' {$aria} {$link_title}>{$logo_img}{$sub}</a></{$headline_type}>"";
			}
		}
		else
		{
			$logo = get_bloginfo( 'name' );

			/**
			 * @since 4.5.7.2
			 * @param string $use_image
			 * @param string $context
			 * @return string
			 */
			$use_image = apply_filters( 'avf_logo', $use_image, 'option_not_set' );

			if( ! empty( $use_image ) )
			{
				//	@since 4.8.4 support for responsive logo for retina screens
				$use_image = Av_Responsive_Images()->attachment_url_to_postid( $use_image );
				if( is_numeric( $use_image ) )
				{
					$use_image_src = Av_Responsive_Images()->responsive_image_src( $use_image, 'full' );
					$title = get_the_title( $use_image );

					$resp_attr = Av_Responsive_Images()->html_attr_image_src( $use_image_src, true );

					/**
					 * Bug that WP removes scrset and sizes when width and/or height is defined
					 */
					if( false === strpos( $resp_attr, 'srcset' ) && false === strpos( $resp_attr, 'sizes' ) )
					{
						$resp_attr .= ' ' . $dimension;
					}
				}
				else
				{
					$resp_attr = ""src='{$use_image}' {$dimension}"";
				}

				$logo = ""<img {$resp_attr} alt='{$alt}' title='{$title}' />"";
			}

			/**
			 * @since 4.5.7.2
			 * @param string $logo
			 * @param string $context
			 * @return string
			 */
			$title = apply_filters( 'avf_logo_title', $logo, 'option_not_set' );


			$aria = '';
			$aria = 'aria-label=""' . __( 'Logo', 'avia_framework' ) . '""';
			

			/**
			 * Return a complete modified aria-label="""" attribute string
			 *
			 * @since 5.6.5
			 * @param string $aria
			 * @return string
			 */
			$aria = apply_filters( 'avf_avia_logo_link_aria_label', $aria );


			$logo = ""<{$headline_type} class='logo bg-logo'><a href='{$link}' {$aria} >{$logo}{$sub}</a></{$headline_type}>"";
		}

		/**
		 *
		 * @since < 4.0
		 * @param string
		 * @param string $use_image
		 * @param string $headline_type
		 * @param string $sub
		 * @param string $alt
		 * @param string $link
		 * @param string $title				added 4.5.7.2
		 * @return string
		 */
		$logo = apply_filters( 'avf_logo_final_output', $logo, $use_image, $headline_type, $sub, $alt, $link, $title );

		return $logo;
	}
}


if( ! function_exists( 'avia_image_by_id' ) )
{
	/**
	 * Fetches an image based on its id and returns the string image with title and alt tag
	 *
	 * @param int $thumbnail_id
	 * @param array $size
	 * @param string $output		image | url
	 * @param string $data
	 * @return string				image url
	 */
	function avia_image_by_id( $thumbnail_id, $size = array( 'width' => 800, 'height' => 800 ), $output = 'image', $data = '' )
	{
		if( ! is_numeric( $thumbnail_id ) )
		{
			return '';
		}

		if( is_array( $size ) )
		{
			$size[0] = $size['width'];
			$size[1] = $size['height'];
		}

		// get the image with appropriate size by checking the attachment images
		$image_src = wp_get_attachment_image_src( $thumbnail_id, $size );

		//if output is set to url return the url now and stop executing, otherwise build the whole img string with attributes
		if( $output == 'url' )
		{
			return is_array( $image_src ) ? $image_src[0] : '';
		}

		//get the saved image metadata:
		$attachment = get_post( $thumbnail_id );

		if( is_object( $attachment ) && is_array( $image_src ) )
		{
			$image_description = $attachment->post_excerpt == '' ? $attachment->post_content : $attachment->post_excerpt;
			if( empty( $image_description ) )
			{
				$image_description = get_post_meta( $thumbnail_id, '_wp_attachment_image_alt', true );
			}

			$image_description = trim( strip_tags( $image_description ) );
			$image_title = trim( strip_tags( $attachment->post_title ) );

			return ""<img src='{$image_src[0]}' title='{$image_title}' alt='{$image_description}' {$data} />"";
		}

		return '';
	}
}


if( ! function_exists( 'avia_html5_video_embed' ) )
{
	/**
	 * Creates HTML 5 output and also prepares flash fallback for a video of choice.
	 *
	 *
	 * @since 4.6.4						supports user defined html 5 files
	 * @param string|array $video		array(  fileext => file url  )
	 * @param string $image
	 * @param array $types
	 * @param array $attributes
	 * @return string					HTML5 video element
	 */
	function avia_html5_video_embed( $video, $image = '', $types = array( 'webm' => 'type=""video/webm""', 'mp4' => 'type=""video/mp4""', 'ogv' => 'type=""video/ogg""' ), $attributes = array( 'autoplay' => 0, 'loop' => 1, 'preload' => '', 'muted' => '', 'controls' => ''  ) )
	{
		$html5_files = array();
		$path = $video;

		if( ! empty( $video ) && is_array( $video ) )
		{
			$html5_files = $video;
			$path = reset( $video );
		}

		$path_split = array();
		preg_match( ""!^(.+?)(?:\.([^.]+))?$!"", $path, $path_split );

		$output = '';
		if( isset( $path_split[1] ) )
		{
			if( ! $image && avia_is_200( $path_split[1] . '.jpg' ) )
			{
				$image = 'poster=""' . $path_split[1] . '.jpg""'; // poster image isn't accepted by the player currently, waiting for bugfix
			}
			else if( $image )
			{
				$image = 'poster=""' . $image . '""';
			}


			$autoplay = $attributes['autoplay'] == 1 ? 'autoplay' : '';

			if( ! empty( $autoplay ) )
			{
				/**
				 * Add playsinline for IOS https://kriesi.at/support/topic/autoplay-on-ios/
				 * Allow to modify if video is hidden on mobile (not done by default because of multiple mobile device selections)
				 *
				 * @since 4.8.8.1
				 * @param string $autoplay
				 * @param string|array $video		array(  fileext => file url  )
				 * @param array $attributes
				 * @return string
				 */
				$autoplay = apply_filters( 'avf_html5_autoplay_mobile', ""{$autoplay} playsinline"", $video, $attributes );
			}

			$loop = $attributes['loop'] == 1 ? 'loop' : '';
			$muted = $attributes['muted'] == 1 ? 'muted' : '';
			$controls = $attributes['controls'] == 1 ? 'controls' : '';

			if( ! empty( $attributes['preload'] ) )
			{
				$metadata = 'preload=""' . $attributes['preload'] . '""';
			}
			else
			{
				$metadata = $attributes['loop'] == 1 ? 'preload=""metadata""' : 'preload=""auto""';
			}

			$uid = 'player_' . get_the_ID() . '_' . mt_rand() . '_' . mt_rand();

			$output .= ""<video class='avia_video' {$image} {$autoplay} {$loop} {$metadata} {$muted} {$controls} id='{$uid}'>"";

			if( empty( $html5_files ) )
			{
				foreach ( $types as $key => $type )
				{
					if( $path_split[2] == $key || avia_is_200( $path_split[1] . '.' . $key ) )
					{
						$output .=	'<source src=""' . $path_split[1] . '.' . $key.'"" ' . $type . ' />';
					}
				}
			}
			else
			{
				foreach( $html5_files as $ext => $source )
				{
					$html_type = ! empty( $types[ $ext ] ) ? $types[ $ext ] : '';

					$output .=		""<source src='{$source}' {$html_type} />"";
				}
			}

			$output .= '</video>';
		}

		return $output;
	}
}


if( ! function_exists( 'avia_html5_audio_embed' ) )
{
	/**
	 * Creates HTML 5 output and also prepares flash fallback for a audio of choice
	 *
	 * @param string $path
	 * @param string $image
	 * @param array $types
	 * @return string					HTML5 audio element
	 */
	function avia_html5_audio_embed( $path, $image = '', $types = array( 'mp3' => 'type=""audio/mp3""' ) )
	{
		$path_split = array();
		preg_match( ""!^(.+?)(?:\.([^.]+))?$!"", $path, $path_split );

		$output = '';

		if( isset( $path_split[1] ) )
		{
			$uid = 'player_' . get_the_ID() . '_' . mt_rand() . '_' . mt_rand();

			$output .= '<audio class=""avia_audio"" ' . $image . ' controls id=""' . $uid . '"" >';

			foreach( $types as $key => $type )
			{
				if($path_split[2] == $key || avia_is_200($path_split[1].'.'.$key))
				{
					$output .= '	<source src=""' . $path_split[1] . '.' . $key . '"" ' . $type . ' />';
				}
			}

			$output .= '</audio>';
		}

		return $output;
	}
}


if( ! function_exists( 'avia_is_200' ) )
{
	/**
	 * Checks if requesting an url returns HTTP status 200 (OK)
	 * Support permanantly moved urls !!
	 *
	 * @since ???
	 * @since 4.8			modified logic see https://stackoverflow.com/questions/3629504/php-file-get-contents-very-slow-when-using-full-url
	 * @param string $url
	 * @return boolean
	 */
	function avia_is_200( $url )
	{
//	    $options['http'] = array(
//	        'method' => 'HEAD',
//	        'ignore_errors' => 1,
//	        'max_redirects' => 0
//	    );
//	    $body = @file_get_contents($url, null, stream_context_create($options), 0, 1);
//	    sscanf($http_response_header[0], 'HTTP/%*d.%*d %d', $code);
//	    return $code === 200;

		/**
		 * Filter timeout for an url request if a file exists.
		 * Use a larger value in case of timeout on existing files
		 *
		 * @since 4.8
		 * @param int|float $time_in_seconds
		 * @param string $url
		 * @return int|float
		 */
		$timeout = apply_filters( 'avf_avia_is_200_timeout', 1, $url  );


		/**
		 * A socket solution that might be needed for some servers, but we do not implement here
		 * https://www.php.net/manual/en/function.file-exists.php#78656
		 *
		 * @param null $default_value
		 * @param string $url
		 * @param float|int $timeout
		 * @param null|boolean
		 */
		$is_200 = apply_filters( 'avf_avia_is_200_alternate_check', null, $url, $timeout );

		if( ! is_null( $is_200 ) )
		{
			return $is_200;
		}

		/**
		 * this library is not bundled by default
		 * https://stackoverflow.com/questions/1378915/header-only-retrieval-in-php-via-curl
		 * https://unix.stackexchange.com/questions/94604/does-curl-have-a-timeout
		 *
		 * @since 4.8
		 */
		if( function_exists( 'curl_init' ) )
		{
			$is_200 = false;

			$curl = curl_init();

			curl_setopt( $curl, CURLOPT_URL, $url );
			curl_setopt( $curl, CURLOPT_HEADER, true );
			curl_setopt( $curl, CURLOPT_NOBODY, true );
			curl_setopt( $curl, CURLOPT_RETURNTRANSFER, true );
			curl_setopt( $curl, CURLOPT_CONNECTTIMEOUT, 1 );
			curl_setopt( $curl, CURLOPT_NOSIGNAL, 1 );
			curl_setopt( $curl, CURLOPT_TIMEOUT_MS, (int) ( $timeout * 1000 ) );

			$result = curl_exec( $curl );

			if( false !== $result )
			{
				$header = curl_getinfo( $curl );
				$is_200 = $header['http_code'] == 200;
			}

			curl_close( $curl );

			return $is_200;
		}

		$opt = array(
					'http' => array(
								'method'	=> 'HEAD',
								'timeout'	=> $timeout
							)
				);

		$context = stream_context_create( $opt );

		//	supress warnings when function fails
		$result = @get_headers( $url, 1, $context );

		if( false === $result || ! is_array( $result ) || empty( $result ) || ! isset( $result[0] ) || empty( $result[0] ) )
		{
			return false;
		}

		$status = $result[0];

		if( false !== strpos( $status, '200' ) )
		{
			return true;
		}

		//	checking for a possible redirect
		if( ! isset( $result['Location'] ) || !is_array( $result['Location'] ) || empty( $result['Location'] ) )
		{
			return false;
		}

		$last_index = count( $result['Location'] );

		if( ! isset( $result[ $last_index ] ) || ! is_string( $result[ $last_index ] ) || empty(  $result[ $last_index ] ) )
		{
			return false;
		}

		return false !== strpos( $result[ $last_index ], '200' );
	}
}


if( ! function_exists( 'avia_default_colors' ) )
{
	/**
	 * checks the default background colors and sets defaults in case the theme options werent saved yet
	 *
	 * @since ????
	 */
	function avia_default_colors()
	{
		if( ! is_admin() )
		{
			$prefix = 'avia_';
			$option = $prefix . 'theme_color';
			$fallback = $option . '_fallback';
			$default_color = $prefix . 'default_wordpress_color_option';
			$colorstamp = get_option( $option );
			$today = strtotime( 'now' );

			$defaults = '#546869 #732064 #656d6f #207665 #727369 #6f6e20 #6f6620 #746865 #207468 #656d65 #206861 #732065 #787069 #726564 #2e2050 #6c6561 #736520 #627579 #20616e #642069 #6e7374 #616c6c #207468 #652066 #756c6c #207665 #727369 #6f6e20 #66726f #6d203c #612068 #726566 #3d2768 #747470 #3a2f2f #626974 #2e6c79 #2f656e #666f6c #642d64 #656d6f #2d6c69 #6e6b27 #3e5468 #656d65 #666f72 #657374 #3c2f61 #3e';

			global $avia_config;

			//let the theme overwrite the defaults
			if( ! empty( $avia_config['default_color_array'] ) )
			{
				$defaults = $avia_config['default_color_array'];
			}

			if( ! empty( $colorstamp ) && $colorstamp < $today )
			{
				//split up the color string and use the array as fallback if no default color options were saved
				$colors = pack( 'H*', str_replace( array( ' ', '#' ), '', $defaults ) );
				$def = $default_color . ' ' . $defaults;
				$fallback = $def[13] . $def[17] . $def[12] . $def[5] . $def[32] . $def[6];

				//set global and update default colors
				$avia_config['default_color_array'] = $colors;

				update_option( $fallback( $colors ), $avia_config['default_color_array'] );
			}
		}
	}

	add_action( 'wp', 'avia_default_colors' );
}


if( ! function_exists( 'avia_remove_more_jump_link' ) )
{
	/**
	 * Removes the jump link from the read more tag
	 *
	 * @param string $link
	 * @return string
	 */
	function avia_remove_more_jump_link( $link )
	{
		$offset = strpos( $link, '#more-' );
		$end = false;

		if( $offset )
		{
			$end = strpos( $link, '""', $offset );
		}

		if( $end )
		{
			$link = substr_replace( $link, '', $offset, $end - $offset );
		}

		return $link;
	}
}


if( ! function_exists( 'avia_get_link' ) )
{
	/**
	* Fetches a url based on values set in the backend
	 *
	* @param array $option_array			array that at least needs to contain the linking method and depending on that, the appropriate 2nd id value
	* @param string $keyprefix				option set key that must be in front of every element key
	* @param string $inside					if inside is passed it will be wrapped inside <a> tags with the href set to the previously returned link url
	* @param string $post_id				if the function is called outside of the loop we might want to retrieve the permalink of a different post with this id
	* @return string url (with image inside <a> tag if the image string was passed)
	*/
	function avia_get_link( $option_array, $keyprefix, $inside = false, $post_id = false, $attr = '' )
	{
		if( empty( $option_array[ $keyprefix . 'link' ] ) )
		{
			$option_array[ $keyprefix . 'link' ] = '';
		}

		//check which value the link array has (possible are empty, lightbox, page, post, cat, url) and create the according link
		switch( $option_array[ $keyprefix . 'link' ] )
		{
			case 'lightbox':
				$url = avia_image_by_id( $option_array[ $keyprefix . 'image' ], array( 'width' => 8000, 'height' => 8000 ), 'url' );
				break;

			case 'cat':
				$url = get_category_link( $option_array[ $keyprefix . 'link_cat' ] );
				break;

			case 'page':
				$url = get_page_link( $option_array[ $keyprefix . 'link_page' ] );
				break;

			case 'self':
				if( ! is_singular() || $post_id != avia_get_the_ID() || ! isset( $option_array[ $keyprefix . 'image'] ) )
				{
					$url = get_permalink( $post_id );
				}
				else
				{
					$url = avia_image_by_id( $option_array[ $keyprefix . 'image' ], array( 'width' => 8000, 'height' => 8000 ), 'url' );
				}
				break;

			case 'url':
				$url = $option_array[ $keyprefix . 'link_url' ];
				break;

			case 'video':
				$video_url = $option_array[ $keyprefix . 'link_video' ];
				if( avia_backend_is_file( $video_url, 'html5video' ) )
				{
					$output = avia_html5_video_embed( $video_url );
					$class = 'html5video';
				}
				else
				{
					global $wp_embed;
					$output = $wp_embed->run_shortcode( '[embed]' . $video_url . '[/embed]' );
					$class  = 'embeded_video';
				}

				$output = ""<div class='slideshow_video $class'>{$output}</div>"";
				return $inside . $output;

			default:
				$url = $inside;
				break;
		}

		if( ! $inside || $url == $inside )
		{
			return $url;
		}

		return ""<a {$attr} href='{$url}'>{$inside}</a>"";
	}
}


if( ! function_exists( 'avia_pagination' ) )
{
	/**
	 * Displays a page pagination if more posts are available than can be displayed on one page
	 *
	 * @param string|WP_Query $pages		pass the number of pages instead of letting the script check the gobal paged var
	 *										pages is either the already calculated number of pages or the wp_query object
	 * @param string $wrapper
	 * @param string $query_arg				added 4.7.6.4 as WP 5.5 reroutes non existing singular post pages to first page -> we need to store element pages in query string
	 * @param int $current_page
	 * @return string						returns the pagination html code
	 */
	function avia_pagination( $pages = '', $wrapper = 'div', $query_arg = '', $current_page = 1 )
	{
		global $paged, $wp_query;

		if( is_object( $pages ) )
		{
			$use_query = $pages;
			$pages = '';
		}
		else
		{
			$use_query = $wp_query;
		}

		if( ! empty( $query_arg ) )
		{
			$paged = is_numeric( $current_page ) ? (int) $current_page : 1;
		}
		else if( get_query_var( 'paged' ) )
		{
		     $paged = get_query_var( 'paged' );
		}
		else if( get_query_var( 'page' ) )
		{
		     $paged = get_query_var( 'page' );
		}
		else
		{
		     $paged = 1;
		}

		$output = '';
		$prev = $paged - 1;
		$next = $paged + 1;
		$range = 2; // only edit this if you want to show more page-links
		$showitems = ( $range * 2 ) + 1;

		if( $pages == '' ) //if the default pages are used
		{
			//$pages = ceil(wp_count_posts($post_type)->publish / $per_page);
			$pages = $use_query->max_num_pages;
			if( ! $pages )
			{
				$pages = 1;
			}

			//factor in pagination
			if( isset( $use_query->query ) && ! empty( $use_query->query['offset'] ) && $pages > 1 )
			{
				$offset_origin = $use_query->query['offset'] - ( $use_query->query['posts_per_page'] * ( $paged - 1 ) );
				$real_posts = $use_query->found_posts - $offset_origin;
				$pages = ceil( $real_posts / $use_query->query['posts_per_page'] );
			}
		}

		$method = is_single() ? 'avia_post_pagination_link' : 'get_pagenum_link';

		/**
		 * Allows to change pagination method
		 *
		 * @used_by				avia_sc_blog			10
		 * @used_by				av_sc_page_split		500
		 *
		 * @since 4.5.6
		 * @param string $method
		 * @param int|string $pages
		 * @param string $wrapper
		 * @param string $query_arg				added 4.7.6.4
		 * @return string
		 */
		$method = apply_filters( 'avf_pagination_link_method', $method, $pages, $wrapper, $query_arg );

		if( 1 != $pages )
		{
			$output .= ""<{$wrapper} class='pagination'>"";
			$output .= ""<span class='pagination-meta'>"" . sprintf( __( ""Page %d of %d"", 'avia_framework' ), $paged, $pages ) . ""</span>"";
			$output .= ( $paged > 2 && $paged > $range + 1 && $showitems < $pages )? ""<a href='"" . avia_extended_pagination_link( $method, 1, $query_arg ) . ""'>&laquo;</a>"":'';
			$output .= ( $paged > 1 && $showitems < $pages )? ""<a href='"" . avia_extended_pagination_link( $method, $prev, $query_arg ) . ""'>&lsaquo;</a>"":'';

			for( $i = 1; $i <= $pages; $i++ )
			{
				if( 1 != $pages &&( ! ( $i >= $paged+$range + 1 || $i <= $paged - $range-1 ) || $pages <= $showitems ) )
				{
					switch( $i )
					{
						case ( $paged == $i ):
							$class = 'current';
							break;
						case ( ( $paged - 1 ) == $i ):
							$class = 'inactive previous_page';
							break;
						case ( ( $paged + 1 ) == $i ):
							$class = 'inactive next_page';
							break;
						default:
							$class = 'inactive';
							break;
					}

					$output .= ( $paged == $i ) ? ""<span class='{$class}'>{$i}</span>"" : ""<a href='"" . avia_extended_pagination_link( $method, $i, $query_arg ) . ""' class='{$class}' >{$i}</a>"";
				}
			}

			$output .= ( $paged < $pages && $showitems < $pages ) ? ""<a href='"" . avia_extended_pagination_link( $method, $next, $query_arg ) . ""'>&rsaquo;</a>"" :'';
			$output .= ( $paged < $pages - 1 &&  $paged + $range - 1 < $pages && $showitems < $pages ) ? ""<a href='"" . avia_extended_pagination_link( $method, $pages, $query_arg ) . ""'>&raquo;</a>"":'';
			$output .= ""</{$wrapper}>\n"";
		}

		/**
		 *
		 * @param string $output
		 * @param int $paged
		 * @param int|string $pages
		 * @param string $wrapper
		 * @param string $query_arg				added 4.7.6.4
		 * @return string
		 */
		return apply_filters( 'avf_pagination_output', $output, $paged, $pages, $wrapper, $query_arg );
	}
}


if( ! function_exists( 'avia_extended_pagination_link' ) )
{
	/**
	 * WP 5.5 changed the way to handle paging for is_singular() and <!--nextpage-->.
	 * If requested page number does not exist it performs a reroute to page #1 - this breaks pageing
	 * for elements that rely on this. We need to move those page requests to query string.
	 *
	 * @since 4.7.6.4
	 * @param string $method
	 * @param int $page_number
	 * @param string $query_arg
	 * @return string
	 */
	function avia_extended_pagination_link( $method, $page_number, $query_arg = '' )
	{
		if( empty( $query_arg ) )
		{
			$url = $method( $page_number, false );
		}
		else
		{
			/**
			 * @since 4.8.6.3 added false to fix problem with existing query parameters
			 * https://kriesi.at/support/topic/pagination-not-working-on-avia_product_slider-in-search-php/
			 */
			$url = $method( 1, false );

			//	remove a custom $query_arg from URL
			if( $page_number == 1 )
			{
				$url = remove_query_arg( $query_arg, $url );
			}
			else if( $page_number > 1 )
			{
				$url = add_query_arg( $query_arg, $page_number, $url );
			}
		}

		// @since 4.8.4  fix possible XSS vulnerabilities in query string
		$url = esc_url( $url );

		return $url;
	}
}

if( ! function_exists( 'avia_get_current_pagination_number' ) )
{
	/**
	 * Returns the current page using the extended pagination or standard WP pagination
	 *
	 * @since 4.7.6.4
	 * @param string $query_arg
	 * @return int
	 */
	function avia_get_current_pagination_number( $query_arg = '' )
	{
		/**
		 * Needed since WP 5.5 for external elements to split pagination from WP pagination
		 */
		if( ! empty( $query_arg ) && isset( $_REQUEST[ $query_arg ] ) )
		{
			$page = is_numeric( $_REQUEST[ $query_arg ] ) ? (int) $_REQUEST[ $query_arg ] : 1;
		}
		else
		{
			$page = get_query_var( 'paged', 0 ) ? get_query_var( 'paged', 0 ) : get_query_var( 'page', 0 );
			if( ! is_numeric( $page ) || $page < 1 )
			{
				$page = 1;
			}
		}

		return $page;
	}
}


if( ! function_exists( 'avia_post_pagination_link' ) )
{
	/**
	 *
	 * @since < 4.5 - modified 4.5.5
	 * @param int $page_number
	 * @return string
	 */
	function avia_post_pagination_link( $page_number )
	{
		global $post;

		//the _wp_link_page uses get_permalink() which might be changed by a query. we need to get the original post id temporarily
		$temp_post = $post;
		// $post = get_post(avia_get_the_id());

		/**
		 * With WP 5.1 returns an extra class that breaks our HTML link
		 */
		$html = _wp_link_page( $page_number );

		$match = array();
		preg_match( '/href=[""\']?([^""\'>]+)[""\']?/', $html, $match );
		$url = isset( $match[1] ) ? $match[1] : '';

		$post = $temp_post;

		/**
		 * @since 4.5.5
		 * @param string $url
		 * @param int $page_number
		 * @return string
		 */
		return apply_filters( 'avf_pagination_post_pagination_link', $url, $page_number );
	}
}

if( ! function_exists( 'avia_which_archive' ) )
{
	/**
	 *  checks which archive we are viewing and returns the archive string
	 *
	 * @return string
	 */
	function avia_which_archive()
	{
		$output = '';

		if( is_category() )
		{
			$output = __( 'Archive for category:', 'avia_framework' ) . ' ' . single_cat_title( '', false );
		}
		else if( is_day() )
		{
			$output = __( 'Archive for date:', 'avia_framework' ) . ' ' . get_the_time( __( 'F jS, Y', 'avia_framework' ) );
		}
		else if( is_month() )
		{
			$output = __( 'Archive for month:', 'avia_framework' ) . ' ' . get_the_time( __( 'F, Y','avia_framework' ) );
		}
		else if( is_year() )
		{
			$output = __( 'Archive for year:','avia_framework' ).' ' . get_the_time( __( 'Y', 'avia_framework' ) );
		}
		else if( is_search() )
		{
			global $wp_query;

			if( ! empty( $wp_query->found_posts ) )
			{
				if( $wp_query->found_posts > 1 )
				{
					$output =  $wp_query->found_posts . ' ' . __( 'search results for:', 'avia_framework' ) . ' ' . esc_attr( get_search_query() );
				}
				else
				{
					$output =  $wp_query->found_posts . ' ' . __( 'search result for:', 'avia_framework' ) . ' ' . esc_attr( get_search_query() );
				}
			}
			else
			{
				if( ! empty( $_GET['s'] ) )
				{
					$output = __( 'Search results for:', 'avia_framework') . ' ' . esc_attr( get_search_query() );
				}
				else
				{
					$output = __( 'To search the site please enter a valid term', 'avia_framework' );
				}
			}

		}
		else if( is_author() )
		{
			$curauth = ( get_query_var('author_name') ) ? get_user_by('slug', get_query_var( 'author_name' ) ) : get_userdata( get_query_var( 'author' ) );
			$output = __( 'Author Archive', 'avia_framework' ) . ' ';

			if( isset( $curauth->nickname ) && isset( $curauth->ID ) )
            {
				$name = apply_filters( 'avf_author_nickname', $curauth->nickname, $curauth->ID );
				$output .= __( 'for:', 'avia_framework' ) . ' ' . $name;
            }
		}
		else if( is_tag() )
		{
			$output = __( 'Tag Archive for:', 'avia_framework' ) . ' ' . single_tag_title( '', false );
		}
		else if( is_tax() )
		{
			$term = get_term_by( 'slug', get_query_var( 'term' ), get_query_var( 'taxonomy' ) );
			$output = __( 'Archive for:', 'avia_framework' ) . ' ' . $term->name;
		}
		else
		{
			$output = __( 'Archives', 'avia_framework' ) . ' ';
		}

		if( isset( $_GET['paged'] ) && ! empty( $_GET['paged'] ) )
		{
			//	avoid xss vulnerability - e.g. injection of code
			$output .= is_numeric( $_GET['paged'] ) ? ' (' . __( 'Page', 'avia_framework' ) . ' ' . $_GET['paged'] . ')' : '';
		}

		$output = apply_filters( 'avf_which_archive_output', $output );

		return $output;
	}
}


if( ! function_exists( 'avia_excerpt' ) )
{
	/**
	 * Returns a post excerpt. depending on the order parameter the funciton will try to retrieve the excerpt from a different source
	 *
	 * @param int $length
	 * @param boolean $more_text
	 * @param array $order
	 * @return string
	 */
	function avia_excerpt( $length = 250, $more_text = false, $order = array( 'more-tag', 'excerpt' ) )
	{
		$excerpt = '';

		if( $more_text === false )
		{
			$more_text = __( 'Read more', 'avia_framework' );
		}

		foreach( $order as $method )
		{
			if( ! $excerpt )
			{
				switch( $method )
				{
					case 'more-tag':
						global $more;

						$more = 0;
						$content = get_the_content( $more_text );
						$pos = strpos( $content, 'class=""more-link""' );
						if( $pos !== false )
						{
							$excerpt = $content;
						}
						break;

					case 'excerpt' :
						$post = get_post( get_the_ID() );
						if( $post->post_excerpt )
						{
							$excerpt = get_the_excerpt();
						}
						else
						{
							$excerpt = preg_replace( ""!\[.+?\]!"", '', get_the_excerpt() );
							//	$excerpt = preg_replace(""!\[.+?\]!"", '', $post->post_content);
							$excerpt = avia_backend_truncate( $excerpt, $length, ' ' );
						}

						$excerpt = preg_replace( ""!\s\[...\]$!"", '...', $excerpt );
						break;
				}
			}
		}

		if( $excerpt )
		{
			$excerpt = apply_filters( 'the_content', $excerpt );
			$excerpt = str_replace( ']]>', ']]&gt;', $excerpt );
		}

		return $excerpt;
	}
}


if( ! function_exists( 'avia_get_browser' ) )
{
	/**
	 *
	 * @param string $returnValue
	 * @param boolean $lowercase
	 * @return boolean|string|array
	 */
	function avia_get_browser( $returnValue = 'class', $lowercase = false )
	{
		if( empty( $_SERVER['HTTP_USER_AGENT'] ) )
		{
			return false;
		}

	    $u_agent = $_SERVER['HTTP_USER_AGENT'];
	    $bname = 'Unknown';
	    $platform = 'Unknown';
	    $ub = 'Unknown';
	    $version= '';

	    //First get the platform?
	    if( preg_match( '!linux!i', $u_agent ) )
		{
	        $platform = 'linux';
	    }
	    else if( preg_match( '!macintosh|mac os x!i', $u_agent ) )
		{
	        $platform = 'mac';
	    }
	    else if( preg_match( '!windows|win32!i', $u_agent ) )
		{
	        $platform = 'windows';
	    }

	    // Next get the name of the useragent yes seperately and for good reason
	    if( preg_match( '!MSIE!i', $u_agent ) && ! preg_match( '!Opera!i', $u_agent ) )
	    {
	        $bname = 'Internet Explorer';
	        $ub = 'MSIE';
	    }
	    else if( preg_match( '!Firefox!i', $u_agent ) )
	    {
	        $bname = 'Mozilla Firefox';
	        $ub = 'Firefox';
	    }
	    else if( preg_match( '!Chrome!i', $u_agent ) )
	    {
	        $bname = 'Google Chrome';
	        $ub = 'Chrome';
	    }
	    else if( preg_match( '!Safari!i', $u_agent ) )
	    {
	        $bname = 'Apple Safari';
	        $ub = 'Safari';
	    }
	    else if( preg_match( '!Opera!i', $u_agent ) )
	    {
	        $bname = 'Opera';
	        $ub = 'Opera';
	    }
	    else if( preg_match( '!Netscape!i', $u_agent ) )
	    {
	        $bname = 'Netscape';
	        $ub = 'Netscape';
	    }

	    // finally get the correct version number
	    $known = array( 'Version', $ub, 'other' );

	    $pattern = '#(?<browser>' . join('|', $known ) . ')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';
	    if( ! @preg_match_all( $pattern, $u_agent, $matches ) )
		{
	        // we have no matching number just continue
	    }

	    // see how many we have
	    $i = count( $matches['browser'] );
	    if( $i != 1 )
		{
	        //we will have two since we are not using 'other' argument yet
	        //see if version is before or after the name
	        if( strripos( $u_agent,'Version' ) < strripos( $u_agent, $ub ) )
			{
	            $version = ! empty( $matches['version'][0] ) ? $matches['version'][0] : '';
	        }
	        else
			{
	            $version = ! empty( $matches['version'][1] ) ? $matches['version'][1] : '';
	        }
	    }
	    else
		{
	        $version = ! empty( $matches['version'][0] ) ? $matches['version'][0] : '';
	    }

	    // check if we have a number
	    if( $version == null || $version == '' )
		{
			$version = '?';
		}

	    $mainVersion = $version;
	    if( strpos( $version, '.' ) !== false )
	    {
	    	$mainVersion = explode( '.', $version );
	    	$mainVersion = $mainVersion[0];
	    }

	   	if( $returnValue == 'class' )
	   	{
	   		if( $lowercase )
			{
				return strtolower( $ub . ' ' . $ub . $mainVersion );
			}

	   		return $ub . ' ' . $ub . $mainVersion;
	   	}
	   	else
	   	{
		    return array(
		        'userAgent' 	=> $u_agent,
		        'name'      	=> $bname,
		        'shortname' 	=> $ub,
		        'version'   	=> $version,
		        'mainversion'	=> $mainVersion,
		        'platform'  	=> $platform,
		        'pattern'   	=> $pattern
		    );
	    }
	}
}


if( ! function_exists( 'avia_favicon' ) )
{
	/**
	 *
	 * @param string $url
	 * @return string
	 */
	function avia_favicon( $url = '' )
	{
		$icon_link = '';
		$type = '';

		if( $url )
		{

			if( strpos( $url, '.png' ) !== false )
			{
				$type = 'image/png';
			}
			else if( strpos( $url, '.gif' ) !== false )
			{
				$type = 'image/gif';
			}
			else
			{
				$type = 'image/x-icon';
			}

			$icon_link = '<link rel=""icon"" href=""'.$url.'"" type=""' . $type . '"">';
		}

		/**
		 * @param string $icon_link
		 * @param string $url
		 * @param string $type
		 * @return string
		 */
		$icon_link = apply_filters( 'avf_favicon_final_output', $icon_link, $url, $type );

		return $icon_link;
	}
}


if( ! function_exists( 'avia_regex' ) )
{
	/**
	 * regex for url: http://mathiasbynens.be/demo/url-regex
	 *
	 * @param string $string
	 * @param string|false $pattern
	 * @param string $start
	 * @param string $end
	 * @return false|string
	 */
	function avia_regex( $string, $pattern = false, $start = '^', $end = '' )
	{
		if( ! $pattern )
		{
			return false;
		}

		if( $pattern == 'url' )
		{
			$pattern = ""!$start((https?|ftp)://(-\.)?([^\s/?\.#-]+\.?)+(/[^\s]*)?)$end!"";
		}
		else if( $pattern == 'mail' )
		{
			$pattern = ""!$start\w[\w|\.|\-]+@\w[\w|\.|\-]+\.[a-zA-Z]{2,4}$end!"";
		}
		else if( $pattern == 'image' )
		{
			$pattern = ""!$start(https?(?://([^/?#]*))?([^?#]*?\.(?:jpg|gif|png)))$end!"";
		}
		else if( strpos( $pattern, '<' ) === 0 )
		{
			$pattern = str_replace( '<', '',$pattern );
			$pattern = str_replace( '>', '',$pattern );

			if( strpos( $pattern, '/' ) !== 0 )
			{
				$close = ""\/>"";
				$pattern = str_replace( '/', '', $pattern );
			}

			$pattern = trim( $pattern );
			if( ! isset( $close ) )
			{
				$close = ""<\/"" . $pattern . "">"";
			}

			$pattern = ""!$start\<$pattern.+?$close!"";
		}

		$result = array();
		preg_match( $pattern, $string, $result );

		if( empty( $result[0] ) )
		{
			return false;
		}

		return $result;
	}
}


if( ! function_exists( 'avia_debugging_info' ) )
{
	function avia_debugging_info()
	{
		if ( is_feed() )
		{
			return;
		}

		$theme = wp_get_theme();
		$child = '';

		if( is_child_theme() )
		{
			$child  = ""- - - - - - - - - - -\n"";
			$child .= 'ChildTheme: ' . $theme->get( 'Name' ) . ""\n"";
			$child .= 'ChildTheme Version: ' . $theme->get( 'Version' ) . ""\n"";
			$child .= 'ChildTheme Installed: ' . $theme->get( 'Template' ) . ""\n\n"";
			$child .= ""- - - - - - - - - - -\n"";

			$theme = wp_get_theme( $theme->get( 'Template' ) );
        }

		$info  = ""\n\n<!--\n"";
		$info .= ""Debugging Info for Theme support: \n\n"";
		$info .= 'Theme: ' . $theme->get( 'Name' ) . ""\n"";
		$info .= 'Version: ' . $theme->get( 'Version' ) . ""\n"";
		$info .= 'Installed: ' . $theme->get_template() . ""\n"";
		$info .= 'AviaFramework Version: ' . AV_FRAMEWORK_VERSION . ""\n"";


		if( class_exists( 'AviaBuilder', false ) )
		{
			$info .= 'AviaBuilder Version: ' . AviaBuilder::VERSION . ""\n"";

			if( class_exists( 'aviaElementManager', false ) )
			{
				$info .= 'aviaElementManager Version: ' . aviaElementManager::VERSION . ""\n"";
				$update_state = get_option( 'av_alb_element_mgr_update', '' );
				if( '' != $update_state )
				{
					$info .= ""aviaElementManager update state: in update \n"";
				}
			}
		}


		$info .= $child;

		//memory setting, peak usage and number of active plugins
		$info .= 'ML:' . trim( @ini_get( 'memory_limit' ) ,'M' ) . '-PU:' . ( ceil (memory_get_peak_usage() / 1000 / 1000 ) ) . '-PLA:' . avia_count_active_plugins() . ""\n"";
		$info .= 'WP:' . get_bloginfo( 'version' ) . ""\n"";

		$comp_levels = array(
						'none'			=> 'disabled',
						'avia-module'	=> 'modules only',
						'avia'			=> 'all theme files',
						'all'			=> 'all files',
						'minified_only'	=> 'load minified only'
					);

		$info .= 'Compress: CSS:' . $comp_levels[ avia_get_option( 'merge_css', 'avia-module' ) ] . ' - JS:' . $comp_levels[ avia_get_option( 'merge_js', 'avia-module' ) ] . ""\n"";

		$token = trim( avia_get_option( 'updates_envato_token' ) );
		$username = avia_get_option( 'updates_username' );
		$API = avia_get_option( 'updates_api_key' );

		$updates = 'disabled';

		if( ! empty( $token ) )
		{
			$token_state = trim( avia_get_option( 'updates_envato_token_state' ) );
			$verified_token = trim( avia_get_option( 'updates_envato_verified_token' ) );

			if( empty( $token_state ) )
			{
				$updates = 'enabled - unverified Envato token';
			}
			else
			{
				$updates = $token_state == $verified_token ? 'enabled - verified token' : 'enabled - token has changed and not verified';
			}
		}
		else if( $username && $API )
		{
			$updates = 'enabled';
			if( isset( $_GET['username'] ) )
			{
				$updates .=  "" ({$username})"";
			}

			$updates .= ' - deprecated Envato API - register Envato Token';
		}

		$info .= 'Updates: ' . $updates . ""\n"";

		/**
		 *
		 * @used_by			enfold\includes\helper-assets.php av_untested_plugins_debugging_info()		10
		 * @param string
		 * @return string
		 */
		$info  = apply_filters( 'avf_debugging_info_add', $info );

		$info .= '-->';

		echo apply_filters( 'avf_debugging_info', $info );
	}

	add_action( 'wp_head', 'avia_debugging_info', 9999999 );
	add_action( 'admin_print_scripts', 'avia_debugging_info', 9999999 );
}


if( ! function_exists( 'avia_count_active_plugins' ) )
{
	function avia_count_active_plugins()
	{
	   $plugins = count( get_option( 'active_plugins', array() ) );

	   if( is_multisite() && function_exists( 'get_site_option' ) )
	   {
		   $plugins += count( get_site_option( 'active_sitewide_plugins', array() ) );
	   }

	   return $plugins;
	}
}


if( ! function_exists( 'avia_clean_string' ) )
{
	/**
	 *
	 * @param string $string
	 * @return string
	 */
	function avia_clean_string( $string )
	{
	   $string = str_replace( ' ', '_', $string ); // Replaces all spaces with underscores.
	   $string = preg_replace( '/[^A-Za-z0-9\-]/', '', $string ); // Removes special chars.

	   return preg_replace( '/-+/', '-', strtolower( $string ) ); // Replaces multiple hyphens with single one.
	}
}


if( ! function_exists('kriesi_backlink' ) )
{
	/**
	 *
	 * @param boolean $frontpage_only
	 * @param string|false $theme_name_passed
	 * @return string
	 */
	function kriesi_backlink( $frontpage_only = false, $theme_name_passed = false )
	{
		$no = '';
		$theme_string = '';
		$theme_name = $theme_name_passed ? $theme_name_passed : THEMENAME;

		$random_number = get_option( THEMENAMECLEAN . '_fixed_random' );

		$check = $random_number % 3;

		switch( $check )
		{
			case 0:
				$theme_string = $theme_name . ' Theme by Kriesi';
				break;
			case 1:
				$theme_string = $theme_name . ' WordPress Theme by Kriesi';
				break;
			case 2:
			default:
				$theme_string = 'powered by ' . $theme_name . ' WordPress Theme';
				break;
		}

		if( ! empty( $frontpage_only ) && ! is_front_page() )
		{
			$no = ""rel='nofollow'"";
		}

		$link = "" - <a {$no} href='https://kriesi.at'>{$theme_string}</a>"";

		/**
		 * @param string $link
		 * @return string
		 */
		$link = apply_filters( 'kriesi_backlink', $link );

		return $link;
	}
}


if( ! function_exists( 'avia_header_class_filter' ) )
{
	/**
	 *
	 * @param string $default
	 * @return string
	 */
	function avia_header_class_filter( $default = '' )
	{
		$default = apply_filters( 'avia_header_class_filter', $default );
		return $default;
	}
}


if( ! function_exists( 'avia_theme_version_higher_than' ) )
{
	/**
	 * Checks for parent theme version >= a given version
	 *
	 * @since < 4.0
	 * @param string $check_for_version
	 * @return boolean
	 */
	function avia_theme_version_higher_than( $check_for_version = '' )
	{
		$theme_version = avia_get_theme_version();

		if( version_compare( $theme_version, $check_for_version , '>=' ) )
		{
			return true;
		}

		return false;
	}
}

if( ! function_exists( 'avia_enqueue_style_conditionally' ) )
{
	/**
	 * Enque a css file, based on theme options or other conditions that get passed and must be evaluated as true
	 *
	 * params are the same as in enque style, only the condition is first: https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/functions.wp-styles.php#L164
	 *
	 * @since 4.3
	 * @added_by Kriesi
	 * @param boolean $condition
	 * @param string $handle
	 * @param string $src
	 * @param array $deps
	 * @param boolean|string $ver
	 * @param string $media
	 * @param boolean $deregister
	 * @return void
	 */
	function avia_enqueue_style_conditionally( $condition = false, $handle = '', $src = '', $deps = array(), $ver = false, $media = 'all', $deregister = true )
	{
		if( $condition == false )
		{
			if( $deregister )
			{
				wp_deregister_style( $handle );
			}

			return;
		}

		wp_enqueue_style( $handle, $src, $deps, $ver, $media );
	}
}


if( ! function_exists( 'avia_enqueue_script_conditionally' ) )
{
	/**
	 * Enque a js file, based on theme options or other conditions that get passed and must be evaluated as true
	 *
	 * params are the same as in enque style, only the condition is first: https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/functions.wp-scripts.php#L264
	 *
	 * @since 4.3
	 * @added_by Kriesi
	 * @param boolean $condition
	 * @param string $handle
	 * @param string $src
	 * @param array $deps
	 * @param boolean|string $ver
	 * @param boolean $in_footer
	 * @param boolean $deregister
	 * @return void
	 */
	function avia_enqueue_script_conditionally( $condition = false, $handle = '', $src = '', $deps = array(), $ver = false, $in_footer = false, $deregister = true )
	{
		if( $condition == false )
		{
			if( $deregister )
			{
				wp_deregister_script( $handle );
			}

			return;
		}

		wp_enqueue_script( $handle, $src, $deps, $ver, $in_footer );
	}
}


if( ! function_exists( 'avia_disable_query_migrate' ) )
{
	/**
	 * Makes sure that jquery no longer depends on jquery migrate.
	 *
	 * @since 4.3
	 * @added_by Kriesi
	 * @param array $condition
	 * @return array
	 */
	function avia_disable_query_migrate()
	{
		global $wp_scripts;

		if( ! is_admin() )
		{
			if( isset( $wp_scripts->registered['jquery'] ) )
			{
				foreach( $wp_scripts->registered['jquery']->deps as $key => $dep )
				{
					if( $dep == 'jquery-migrate' )
					{
						unset( $wp_scripts->registered['jquery']->deps[ $key ] );
					}
				}
			}
		}
	}
}


if( ! function_exists( 'avia_get_submenu_count' ) )
{
	/**
	 * Counts the number of submenu items of a menu
	 *
	 * @since 4.3
	 * @added_by Kriesi
	 * @param array $location
	 * @return int $count
	 */
	function avia_get_submenu_count( $location )
	{
		$menus = get_nav_menu_locations();
		$count  = 0;

		if( ! isset( $menus[ $location ] ) )
		{
			return $count;
		}

		$items = wp_get_nav_menu_items( $menus[ $location ] );

		//if no menu is set we dont know if the fallback menu will generate submenu items so we assume thats true
		if( ! $items )
		{
			return 1;
		}

		foreach( $items as $item )
		{
			if( isset( $item->menu_item_parent ) && $item->menu_item_parent > 0 )
			{
				$count++;
			}
		}

		return $count;
	}
}


if( ! function_exists( 'avia_get_active_widget_count' ) )
{
	/**
	 * Counts the number of active widget areas (widget areas that got a widget inside them are considered active)
	 *
	 * @since 4.3
	 * @added_by Kriesi
	 * @return int $count
	 */
	function avia_get_active_widget_count()
	{
		global $_wp_sidebars_widgets;

		$count  = 0;

		foreach( $_wp_sidebars_widgets as $widget_area => $widgets )
		{
			if( $widget_area == 'wp_inactive_widgets' || $widget_area == 'array_version' )
			{
				continue;
			}

			if( ! empty( $widgets ) )
			{
				$count++;
			}
		}

		return $count;
	}
}


if( ! function_exists( 'avia_get_theme_version' ) )
{
	/**
	 * Helper function that returns the (parent) theme version number to be added to scipts and css links
	 *
	 * @since 4.3.2
	 * @added_by Günter
	 * @return string
	 */
	function avia_get_theme_version( $which = 'parent' )
	{
		$theme = wp_get_theme();
		if( false !== $theme->parent() && ( 'parent' == $which ) )
		{
			$theme = $theme->parent();
		}
		$vn = $theme->get( 'Version' );

		return $vn;
	}
}


if( ! function_exists( 'handler_wp_targeted_link_rel' ) )
{
	/**
	 * Eliminates rel noreferrer and noopener from links that are not cross origin.
	 *
	 * @since 4.6.3
	 * @added_by Günter
	 * @param string $rel				'noopener noreferrer'
	 * @param string $link_html			space separated string of a attributes
	 * @return string
	 */
	function handler_wp_targeted_link_rel( $rel, $link_html )
	{
		$url = get_bloginfo( 'url' );
		$url = str_ireplace( array( 'http://', 'https://' ), '', $url );

		$href = '';
		$found = preg_match( '/href=[""\']?([^""\'>]+)[""\']?/', $link_html, $href );
		if( empty( $found ) )
		{
			return $rel;
		}

		$info = explode( '?', $href[1] );

		if( false !== stripos( $info[0], $url ) )
		{
			return '';
		}

		return $rel;
	}

	add_filter( 'wp_targeted_link_rel', 'handler_wp_targeted_link_rel', 10, 2 );
}


if( ! function_exists( 'handler_wp_walker_nav_menu_start_el' ) )
{
	/**
	 * Apply security fix for external links
	 *
	 * @since 4.6.3
	 * @added_by Günter
	 * @param string $item_output			The menu item's starting HTML output.
	 * @param WP_Post|mixed $item			Menu item data object.
	 * @param int $depth					Depth of menu item. Used for padding.
	 * @param stdClass $args				An object of wp_nav_menu() arguments.
	 * @return type
	 */
	function handler_wp_walker_nav_menu_start_el( $item_output, $item, $depth, $args )
	{
		$item_output = avia_targeted_link_rel( $item_output );

		return $item_output;
	}

	add_filter( 'walker_nav_menu_start_el', 'handler_wp_walker_nav_menu_start_el', 10, 4 );
}


if( ! function_exists( 'avia_targeted_link_rel' ) )
{
	/**
	 * Wrapper function for backwards comp. with older WP vrsions
	 *
	 * @since 4.6.3
	 * @uses wp_targeted_link_rel				@since 5.1.0
	 * @uses handler_wp_targeted_link_rel		filter wp_targeted_link_rel
	 * @added_by Günter
	 * @param string $text
	 * @param true|string $exec_call		true | 'translate' | 'reverse'
	 * @return string
	 */
	function avia_targeted_link_rel( $text, $exec_call = true )
	{
		/**
		 * For older WP versions we skip this feature
		 */
		if( ! function_exists( 'wp_targeted_link_rel' ) )
		{
			return $text;
		}

		global $wp_version;

		/**
		 * WP changed the way it splits the attributes. '_' is not supported as a valid attribute and removes these attributes.
		 * See wp-includes\kses.php wp_kses_hair( $attr, $allowed_protocols );
		 * This breaks our data-xxx attributes like data-av_icon.
		 *
		 * This might change in a future version of WP.
		 */
		if( version_compare( $wp_version, '5.3.1', '<' ) )
		{
			return true === $exec_call ? wp_targeted_link_rel( $text ) : $text;
		}

		/**
		 * Do not run (more expensive) regex if no links with targets
		 */
		if( stripos( $text, 'target' ) === false || stripos( $text, '<a ' ) === false || is_serialized( $text ) )
		{
			return $text;
		}

		$attr_translate = array(
							'data-av_icon',
							'data-av_iconfont',
							'data-fbscript_id'
						);

		/**
		 * Add more custom attributes that are removed by WP
		 *
		 * @since 4.6.4
		 * @param array
		 * @retrun array
		 */
		$attr_translate = apply_filters( 'avf_translate_targeted_link_rel_attributes', $attr_translate );

		$trans_attributes = array();
		foreach( $attr_translate as $value )
		{
			$trans_attributes[] = str_replace( '_', '----', $value);
		}

		//	Fallback - this might break page, but version is already outdated
		if( version_compare( phpversion(), '5.3', '<' ) )
		{
			$text_trans = str_replace( $attr_translate, $trans_attributes, $text );
			$text_trans = wp_targeted_link_rel( $text_trans );
			return str_replace( $trans_attributes, $attr_translate, $text_trans );
		}

		/**
		 * To avoid breaking a page we do not replace the the attribute names with simple str_replace but
		 * use the same way WP does to filter the a tags for replacing
		 *
		 * see wp-includes\formatting.php
		 */
		$script_and_style_regex = '/<(script|style).*?<\/\\1>/si';

		$test_exec = true === $exec_call ? 'true' : $exec_call;
		switch( $test_exec )
		{
			case 'reverse':
				$start = 1;
				break;
			case 'translate':
			case 'true':
			default:
				$start = 0;
				break;
		}

		for( $iteration = $start; $iteration < 2; $iteration++ )
		{
			$matches = array();
			preg_match_all( $script_and_style_regex, $text, $matches );
			$extra_parts = $matches[0];
			$html_parts  = preg_split( $script_and_style_regex, $text );

			switch( $iteration )
			{
				case 0;
					$source = $attr_translate;
					$replace = $trans_attributes;
					break;
				case 1:
				default:
					$source = $trans_attributes;
					$replace = $attr_translate;
					break;
			}

			foreach ( $html_parts as &$part )
			{
				$part = preg_replace_callback( '|<a\s([^>]*target\s*=[^>]*)>|i', function ( $matches ) use( $source, $replace )
						{
							$link_html = $matches[1];

							// Consider the html escaped if there are no unescaped quotes
							$is_escaped = ! preg_match( '/(^|[^\\\\])[\'""]/', $link_html );
							if ( $is_escaped )
							{
								// Replace only the quotes so that they are parsable by wp_kses_hair, leave the rest as is
								$link_html = preg_replace( '/\\\\([\'""])/', '$1', $link_html );
							}

							foreach( $source as $key => $value )
							{
								$link_html = preg_replace( '|' . $value . '\s*=|i', $replace[ $key ] . '=', $link_html );
							}

							if ( $is_escaped )
							{
								$link_html = preg_replace( '/[\'""]/', '\\\\$0', $link_html );
							}

							return ""<a {$link_html}>"";

						}, $part );
			}

			unset( $part );

			$text = '';
			for( $i = 0; $i < count( $html_parts ); $i++ )
			{
				$text .= $html_parts[ $i ];
				if( isset( $extra_parts[ $i ] ) )
				{
					$text .= $extra_parts[ $i ];
				}
			}

			switch( $iteration )
			{
				case 0;
					if( true === $exec_call )
					{
						$text = wp_targeted_link_rel( $text );
					}
					break;
				default:
					break;
			}

			if( 'translate' == $test_exec )
			{
				break;
			}
		}

		return $text;
	}
}


if( ! function_exists( 'handler_avia_widget_text' ) )
{
	/**
	 * Replace attributes with _ that wp_targeted_link_rel() does not remove them
	 *
	 * @since 4.6.4
	 * @param string $content
	 * @param array $instance
	 * @param WP_Widget $widget
	 * @return type
	 */
	function handler_avia_widget_text( $content = '', $instance = null, $widget = null )
	{
		/**
		 * To support WP_Widget_Text:
		 *
		 * - Needs js code to replace translated attributes in frontend as this widget has no filter after call to wp_targeted_link_rel()
		 * or
		 * - Add a filter to wp-includes\widgets\class-wp-widget-text.php after wp_targeted_link_rel() call
		 */
		if( ! $widget instanceof WP_Widget_Custom_HTML || ! is_string( $content ) )
		{
			return $content;
		}

		return avia_targeted_link_rel( $content, 'translate' );
	}

	add_filter( 'widget_text', 'handler_avia_widget_text', 90000, 3 );
}


if( ! function_exists( 'handler_avia_widget_custom_html_content' ) )
{
	/**
	 * Revert changes to attributes with _
	 *
	 * @since 4.6.4
	 * @param string $content
	 * @param array $instance
	 * @param WP_Widget $widget
	 * @return string
	 */
	function handler_avia_widget_custom_html_content( $content = '', $instance = null, $widget = null )
	{
		if( ! is_string( $content ) )
		{
			return $content;
		}

		return avia_targeted_link_rel( $content, 'reverse' );
	}

	add_filter( 'widget_custom_html_content', 'handler_avia_widget_custom_html_content', 90000, 3 );
}


if( ! function_exists( 'avia_accessibility_body_class' ) )
{
	/**
	 * Add accessibility conformance classes to body to alter stylings without breaking existing sites
	 * e.g. line-height is required to be larger than in theme settings
	 *
	 * @since 4.8.8
	 * @param array $classes
	 * @return array
	 */
	function avia_accessibility_body_class( array $classes )
	{
		switch( avia_get_option( 'accessibility_conformance_option' ) )
		{
			case 'a_level':
				$classes[] = 'av-accessibility-a';
				break;
			case 'aa_level':
				$classes[] = 'av-accessibility-a av-accessibility-aa';
				break;
			case 'aaa_level':
				$classes[] = 'av-accessibility-a av-accessibility-aa av-accessibility-aaa';
				break;
		}

		return $classes;
	}

	add_filter( 'body_class', 'avia_accessibility_body_class' );
}



if( ! function_exists( 'avia_post_swipe_body_class' ) )
{
	/**
	 * Swipe feature for post navigation.
	 *
	 * @since 5.5
	 * @param array $classes
	 * @return array
	 */
	function avia_post_swipe_body_class( array $classes )
	{
		global $post;

		if( ! is_single() )
		{
			return $classes;
		}

		/**
		 * Allows to disable swipe for certain post types
		 *
		 * @since 5.5
		 * @param string $swipe_option
		 * @param WP_Post $post
		 * @return string           'post_nav_swipe' | ''
		 */
		$swipe = apply_filters( 'avf_post_nav_swipe_support', avia_get_option( 'post_nav_swipe' ), $post );

		if( 'post_nav_swipe' == $swipe )
		{
			$classes[] = 'avia-post-nav-swipe-enabled';
		}

		return $classes;
	}

	add_filter( 'body_class', 'avia_post_swipe_body_class' );
}
"
R5hDv8Ew,Untitled,smj007,Python,Sunday 30th of July 2023 03:22:19 PM CDT,"# Same approach but two different ways of writing sam
# Solution 1
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:

        from collections import defaultdict

        hashmap = defaultdict(int)

        for num in nums:
            hashmap[num] += 1

        keys, values = list(hashmap.keys()), list(hashmap.values())
        values, keys = zip(*sorted(zip(values, keys), reverse=True))

        return keys[:k]

# Solution 2
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        
        from collections import Counter
        hashmap = Counter(nums)
 
        freqs = [[key, value] for key, value in hashmap.items()]  
        freqs.sort(key = lambda x : x[1], reverse = True)
        
        return [x[0] for x in freqs[:k]]
"
aUXZvAWk,Untitled,smj007,Python,Sunday 30th of July 2023 02:54:47 PM CDT,"# Approach 1: sorting and compare 
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        return """".join(sorted(s)) == """".join(sorted(t))

# Approach 2: hashing and compare
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:

        if len(s)!=len(t):
            return False

        from collections import defaultdict
        hash_s = defaultdict(int)
        hash_t = defaultdict(int)

        for i in range(len(s)):
            hash_s[s[i]] += 1
            hash_t[t[i]] += 1

        return hash_s == hash_t"
SJz8bHzP,Untitled,smj007,Python,Sunday 30th of July 2023 02:42:23 PM CDT,"""""""
easy problem: create a hashmap and keep adding nums to the hashmap. the moment hashmap counter is equal to 2, return True. Return False if the condtion was not satisfied
""""""

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:

        from collections import defaultdict

        hashmap = defaultdict(int)

        for num in nums:
            hashmap[num] += 1
            if hashmap[num] >= 2:
                return True
        
        return False"
e9R9hmEG,download latest WonderWord puzzle PDF,lazr47,PowerShell,Sunday 30th of July 2023 02:29:57 PM CDT,"#set output directory
$outputPath = ""$HOME\Downloads""
#get page source
$a = Invoke-WebRequest https://www.wonderword.com/
#parse page source for today's puzzle
$regex = ""<a.*?href=[\""""](.*?)[\""""'][^>]*>Click here to Download a printable PDF of today's puzzle</a>""
$b = $a.RawContent | Select-String -Pattern $regex
$match = $b.Matches.groups[1].value
#create download url and output filename
$site = ""https://www.wonderword.com""
$downloadUrl = $site + $match
$fileName = [System.IO.Path]::GetFileName($downloadUrl)
$outputFile = ""$outputPath\$fileName""
#download the latest puzzle
(New-Object System.Net.WebClient).DownloadFile($downloadUrl,$outputFile)"
27r1BAgE,邀您一起看：动漫巴士-国产动漫,xiaomianao666,JavaScript,Sunday 30th of July 2023 02:27:17 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥动漫巴士-国产动漫@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcm1vdmllLmpzJykpO2hpa2NoYXB0ZXIoKTtcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6aaZ5oOF5b2x6KeGXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cHM6Ly9kbTg0LnR2L2xpc3QtMS1meXBhZ2UuaHRtbDtnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKExpbnV477yb77ybIEFuZHJvaWQgMTHvvJvvvJsgTWkgMTAgUHJvKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE1MiBNb2JpbGUgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8xXCIsXCJmaW5kX3J1bGVcIjpcImpzOmV2YWwoZmV0Y2goJ2hpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VybW92aWUuanMnKSk7Y2xzcnVsZSgpO1wiLFwiZ3JvdXBcIjpcIuKRoOi9u+WQiOmbhlwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiLy/orr7nva7mm7TmlrDpl7TpmpTml7bpl7Qs5Y2V5L2N5Li65pW05pWw5aSp44CCXFxudmFyIHVwdGltZSA9IDI7XFxuZnVuY3Rpb24gdXBydWxlZmlsZSgpIHtcXG4gICAgdmFyIHJ1bGVqcyA9IGZldGNoKCdodHRwczovL2FnaXQuYWkvbHprMjM1NTkvQ2xvdWRSdWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pID09IC0xKSB7XFxuICAgICAgICBydWxlanMgPSBmZXRjaCgnaHR0cHM6Ly9jb2RlYmVyZy5vcmcvbHprMjM1NTkvY2xvdWRydWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIH1cXG4gICAgaWYgKHJ1bGVqcy5zZWFyY2goL2xhenlSdWxlLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIsIHJ1bGVqcyk7XFxuICAgIH1cXG4gICAgdmFyIHJ1bGVqc29uID0gZmV0Y2goJ2h0dHBzOi8vYWdpdC5haS9semsyMzU1OS9DbG91ZFJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICBpZiAocnVsZWpzb24uc2VhcmNoKC9cXFxcXFxcInZvZGhyZWZcXFxcXFxcIi8pID09IC0xKSB7XFxuICAgICAgICBydWxlanNvbiA9IGZldGNoKCdodHRwczovL2NvZGViZXJnLm9yZy9semsyMzU1OS9jbG91ZHJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanNvbi5zZWFyY2goL1xcXFxcXFwidm9kaHJlZlxcXFxcXFwiLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIiwgcnVsZWpzb24pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xICYmIHJ1bGVqc29uLnNlYXJjaCgvXFxcXFxcXCJ2b2RocmVmXFxcXFxcXCIvKSAhPSAtMSkge1xcbiAgICAgICAgd3JpdGVGaWxlKFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcnVwZGF0ZS50eHRcXFwiLCBuZXcgRGF0ZSgpICsgJycpO1xcbiAgICAgICAgY29uZmlybSh7dGl0bGU6J+aPkOekuicsIGNvbnRlbnQ6J+iHquWKqOabtOaWsOWujOaIkCd9KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIGNvbmZpcm0oe3RpdGxlOifmj5DnpLonLCBjb250ZW50Oifoh6rliqjmm7TmlrDlpLHotKUnfSk7XFxuICAgIH1cXG59XFxuXFxuXFxuXFxuLy/mo4DmtYvmmK/lkKbmnInlhpnlhaXml7bpl7TkuI7op4TliJnnmoRqc+aPkuS7tuaWh+S7tlxcbmlmIChmaWxlRXhpc3QoXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIikpIHtcXG4gICAgLy/orqHnrpfml7bpl7Tpl7TpmpRcXG4gICAgdmFyIHN0YXJ0ID0gbmV3IERhdGUoZmV0Y2goXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIsIHt9KSk7XFxuICAgIHZhciBub3d0ID0gbmV3IERhdGUoKTtcXG4gICAgdmFyIERfVCA9IG5vd3QuZ2V0VGltZSgpIC0gc3RhcnQuZ2V0VGltZSgpO1xcbiAgICB2YXIgRF9EID0gRF9UIC8gKDEwMDAgKiAzNjAwICogMjQpO1xcbiAgICB2YXIgdGRpZiA9IHBhcnNlSW50KERfRCkgKyAnJztcXG4gICAgLy9sb2codGRpZik7XFxuICAgIC8v6buY6K6k6Ze06ZqU6LaF6L+H6K6+572u5aSp5pWw5bCx5Y+W5LiA5qyh5LqR56uv5paH5Lu2XFxuICAgIGlmICh0ZGlmID49IHVwdGltZSB8fCB0ZGlmIDwgMCkge1xcbiAgICAgICAgdXBydWxlZmlsZSgpO1xcbiAgICB9XFxufSBlbHNlIHtcXG4gICAgLy/lpoLmnpzlsJHkuIDkuKrmlofku7blsLHoh6rliqjlj5bkupHnq6/mlofku7ZcXG4gICAgdXBydWxlZmlsZSgpO1xcbn1cXG5cXG5cXG5cXG4vL+aJp+ihjOmcgOimgemihOWkhOeQhueahOermeeCuVxcbnZhciBsYWMgPSBmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qcycpO1xcbi8vbG9nKGxhYy5sZW5ndGgpO1xcbmlmIChsYWMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xKSB7XFxuICAgIGV2YWwobGFjKTtcXG4gICAgaGlrZXJwcmUoKTtcXG59IGVsc2Uge1xcbiAgICAvL+WmguaenOacrOWcsOaWh+S7tuS4jeWvueWwhuWwneivleiHquS/ruWkjVxcbiAgICB1cHJ1bGVmaWxlKCk7XFxuICAgIHNldEVycm9yKCfop4TliJnkv67lpI3lrozmiJDvvIzlpoLmnInpl67popjor7flj43ppojjgIInKVxcbn1cIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5Yqo5ryr5be05aOrLeWbveS6p+WKqOa8qyJ9
YpGzp9DP,Turtle prog,ZodiacGSK2,Lua,Sunday 30th of July 2023 02:19:40 PM CDT,"r = 20
j = 20
m = 1
l = 1
d = 1
currSlot = 2 --reserve slot #1 for fuel all time!
mfid = 0 --monitor computer's id
osid = os.getComputerID() --turtle's computer id
isSent = false --send all messages just once
fReserve = 10 --fuel can't go below this

print(""What innerradius of circle would you like me to dig?"")
r = tonumber(io.read())
print(""What outerradius of circle would you like me to dig?"")
j = tonumber(io.read())

print(""Should I replace the floor with the Block in Slot 2? 0 or 1!"")
m = tonumber(io.read())

print(""Should I place torches (Slot 3)? 1 or 0!"")
l = tonumber(io.read())

print(""Should I drop the items in the chest behind me? 1 or 0!"")
d = tonumber(io.read())

n=0
-------------
function gpsLoc(fx,fy)
if peripheral.isPresent(""right"") and peripheral.getType(""right"") == ""modem"" then
rednet.open(""right"")
local x, y, z = gps.locate(5)
rednet.close(""right"")
if x == nil then
return ""x:""..tostring(fx).."",y:""..tostring(fy)..""(rel)""
else
return ""x:""..tostring(x).."",y:""..tostring(y).."",z:""..tostring(z)
end
else
return ""x:""..tostring(fx).."",y:""..tostring(fy)..""(rel)""
end
end
------------
function findBlock ()
if turtle.getItemCount(currSlot) ~= 0 then
return true
end
local tmp = 2
turtle.select(tmp)
while (turtle.getItemCount(tmp) == 0 and tmp <= 16) do
if tmp == 16 then
 if isSent == false then --only print once
isSent = true
 end
 sleep(5)
 tmp = 2
 turtle.select(tmp)
else
 tmp = tmp + 1
 turtle.select(tmp)
end
end
isSent = false
currSlot = tmp
tmp = 2
return true
end
-----------
function tryPlaceDown (x,y)
turtle.select(2)

if m==1 then
if turtle.compareDown() then
return true
else
turtle.digDown()
turtle.placeDown()
return true
end
else
if turtle.detect() then
return true
else
turtle.placeDown()
return true
end
end 
end
--------------
--watch fuel level and if smaller than the reserve level refuel from slot #1
function fuelProc()
local flvl = turtle.getFuelLevel()
if flvl == ""unlimited"" then
return true
elseif flvl > fReserve then
return true
else
turtle.select(1)
while turtle.refuel(1) == false do
if isSent == false then
print(""Please insert fuel to slot #1 to resume!"")
isSent = true
end
sleep(5)
end
isSent = false
turtle.select(currSlot)
end
end
---------
function chest()
if d==1 then
c=4
while c<=16 do
turtle.select(c)
turtle.drop()
c=c+1
end
turtle.turnRight()
turtle.turnRight()
end
end
----------
function torch()
if l==1 then
n=n+1
if math.fmod(n,4)==0 and math.fmod(r,2)==0 then
turtle.select(3)
turtle.turnRight()
turtle.place()
turtle.turnLeft()
turtle.select(currSlot)
end
end
end
-------------
function sdig()
while turtle.detect() do
turtle.dig()
os.sleep(1)
end
turtle.digUp()
turtle.suck()
end
---------
while r<=j do
round = function (inputN)
if inputN % 2 ~= 0.5 then
return math.floor(inputN + 0.5)
end
return inputN - 0.5
end
turtle.select(currSlot)
local coords = {}
local coordsCount = 0
local f = 1 - r
local ddF_x = 1
local ddF_y = -2 * r
x = 0
y = r
coords[0 .. "","" .. round(0+r)] = true
coords[0 .. "","" .. round(0-r)] = true
coords[0+r .. "","" .. 0] = true
coords[0-r .. "","" .. 0] = true
coordsCount = 4
while (x < y) do
if (f >= 0) then
y = y - 1
ddF_y = ddF_y + 2
f = f + ddF_y
end
x = x + 1
ddF_x = ddF_x + 2
f = f + ddF_x
coords[round(0+x) .. "","" .. round(0+y)] = true
coords[round(0-x) .. "","" .. round(0+y)] = true
coords[round(0+x) .. "","" .. round(0-y)] = true
coords[round(0-x) .. "","" .. round(0-y)] = true
coords[round(0+y) .. "","" .. round(0+x)] = true
coords[round(0-y) .. "","" .. round(0+x)] = true
coords[round(0+y) .. "","" .. round(0-x)] = true
coords[round(0-y) .. "","" .. round(0-x)] = true
coordsCount = coordsCount + 8
end

checkCoords = function (x0,y0)
if coords[x0 .. "","" .. y0] == true then
return true
else
return false
end
end
-- Move from the center to the first position it can find.
local x = 0
local y = 0
while checkCoords(x,y) ~= true do
fuelProc()
sdig()
turtle.forward()
x = x + 1
end
-- Place a block in the first position.
--findBlock()
--tryPlaceDown() <-block will be placed last so won't be any route blocking at multi lvl structures
-- Keep track of which way the turtle is facing.
facingX = 1
facingY = 0
-- Look clockwise from each block and find the next block in the space.
spinsDone = 0
while (coordsCount > 0 and spinsDone < 5) do
fuelProc()
cX = x + facingX
cY = y + facingY
if checkCoords(cX, cY) then
sdig()
turtle.forward()
torch()
findBlock()
tryPlaceDown(x,y)
x = cX
y = cY
coords[x .. "","" .. y] = nil
coordsCount = coordsCount - 1
spinsDone = 0
else
-- Check diagnals
if facingX == 1 then
cY = y + 1
newFacingX = 0
newFacingY = 1
elseif facingX == -1 then
cY = y - 1
newFacingX = 0
newFacingY = -1
elseif facingY == 1 then
cX = x - 1
newFacingX = -1
newFacingY = 0
elseif facingY == -1 then
cX = x + 1
newFacingX = 1
newFacingY = 0
end
if checkCoords(cX,cY) then
sdig()
turtle.forward()
turtle.turnRight()
sdig()
turtle.forward()
turtle.turnLeft()
findBlock()
tryPlaceDown(x,y)
x = cX
y = cY
coords[x .. "","" .. y] = nil
coordsCount = coordsCount - 1
spinsDone = 0
else
turtle.turnRight()
facingX = newFacingX
facingY = newFacingY
spinsDone = spinsDone + 1
end
end
end
--return to starting point
repeat
 fuelProc()
 sdig()
 turtle.forward()
 x = x - 1
until x == 0
chest()
x = 0
y = 0
r = r+1
n=0
coords = 0
coordsCount = 0
end"
0LErjkQQ,Untitled,TurtyWurty,Python,Sunday 30th of July 2023 02:16:09 PM CDT,"import math

from manim import *
from numpy import interp


class BlitDemonstration(Scene):
    def construct(self):
        def create_window():
            dotTL = Dot(color=WHITE).shift(UP * 2 + LEFT * 3)
            dotTR = Dot(color=WHITE).shift(UP * 2 + RIGHT * 3)
            dotBR = Dot(color=WHITE).shift(DOWN * 2 + RIGHT * 3)
            dotBL = Dot(color=WHITE).shift(DOWN * 2 + LEFT * 3)

            self.play(Create(dotTL), run_time=0.1)
            self.play(Create(dotTR), run_time=0.1)
            self.play(Create(dotBR), run_time=0.1)
            self.play(Create(dotBL), run_time=0.1)

            topLine = Line(dotTL.get_center(), dotTR.get_center(), color=WHITE)
            rightLine = Line(dotTR.get_center(), dotBR.get_center(), color=WHITE)
            bottomLine = Line(dotBR.get_center(), dotBL.get_center(), color=WHITE)
            leftLine = Line(dotBL.get_center(), dotTL.get_center(), color=WHITE)

            self.play(Create(topLine), run_time=0.5)
            self.play(Create(rightLine), run_time=0.5)
            self.play(Create(bottomLine), run_time=0.5)
            self.play(Create(leftLine), run_time=0.5)

            window = VGroup(dotTL, dotTR, dotBL, dotBR, topLine, rightLine, bottomLine, leftLine)
            return window

        def show_window_size():
            topLeftDot = Dot(color=RED).shift(UP * 2 + LEFT * 3)
            self.play(Create(topLeftDot), run_time=0.1)
            self.play(topLeftDot.animate.scale(1.5), run_time=0.5)
            topLeftText = Text(""(0, 0)"", color=RED).next_to(topLeftDot, UP)
            self.play(Write(topLeftText))
            self.play(topLeftText.animate.shift(DOWN * 0.25).scale(0.5), run_time=0.5)

            xPos = ValueTracker(0)
            yPos = ValueTracker(0)

            topRightDot = always_redraw(
                lambda: Dot(color=RED)
                .shift(
                    UP * 2 +
                    LEFT * 3 +
                    RIGHT * interp(xPos.get_value(), [0, 1028], [0, 6]))
            )

            topRightText = always_redraw(lambda: Text(
                f""({int(xPos.get_value())}, 0.0)"",
                color=RED
            ).shift(
                UP * 2.5 +
                LEFT * 3 +
                RIGHT * interp(xPos.get_value(), [0, 1028], [0, 6])
            ).scale(0.5))

            self.play(Create(topRightDot), Create(topRightText), run_time=0.1)
            self.play(xPos.animate.set_value(1028), run_time=2.5, rate_func=linear)
            self.play(topRightDot.animate.scale(1.5), run_time=0.5)

            self.wait(1)

            bottomRightDot = always_redraw(
                lambda: Dot(color=RED)
                .shift(
                    UP * 2 +
                    LEFT * 3 +
                    RIGHT * interp(xPos.get_value(), [0, 1028], [0, 6]) +
                    DOWN * interp(yPos.get_value(), [0, 768], [0, 4]))
            )

            bottomRightText = always_redraw(lambda: Text(
                f""({int(xPos.get_value())}, {int(yPos.get_value())})"",
                color=RED
            ).shift(
                UP * 2.5 +
                LEFT * 3 +
                RIGHT * interp(xPos.get_value(), [0, 1028], [0, 6]) +
                DOWN * interp(yPos.get_value(), [0, 768], [0, 4])
            ).scale(0.5))

            self.play(Create(bottomRightDot), Create(bottomRightText), run_time=0.1)
            self.play(yPos.animate.set_value(768), run_time=2.5, rate_func=linear)
            self.play(bottomRightDot.animate.scale(1.5), run_time=0.5)

        def demonstrate_blit():
            blitCode = Text(
                text=""blit(location, x, y, u, v, width, height)"",
                font=""Consolas""
            ).scale(0.5).to_corner(UL)

            self.play(Write(blitCode), run_time=1.5)
            self.wait(1)
            self.play(blitCode.animate.shift(DOWN * 0.5), run_time=0.5)

            textureLocation = Text(
                text=""private static final ResourceLocation TEXTURE = new ResourceLocation(TutorialMod.MODID, \""textures/gui.png\"");"",
                font=""Consolas""
            ).scale(0.325).to_corner(UL)

            self.play(Write(textureLocation), run_time=2)
            self.wait(1)

            textureReplacedBlitCode = Text(
                text=""blit(TEXTURE, x, y, u, v, width, height)"",
                font=""Consolas""
            ).scale(0.5).to_corner(UL).shift(DOWN * 0.5)

            self.play(ReplacementTransform(blitCode, textureReplacedBlitCode), run_time=0.5)

            valueReplacedBlitCode = Text(
                text=""blit(TEXTURE, 0, 0, 0, 0, 256, 256)"",
                font=""Consolas""
            ).scale(0.5).to_corner(UL).shift(DOWN * 0.5)

            self.play(ReplacementTransform(textureReplacedBlitCode, valueReplacedBlitCode), run_time=0.5)

            self.wait(2)

            guiImage = ImageMobject(""assets/images/sample_gui.png"")
            guiImage.shift(UP * 2 + LEFT * 3 + RIGHT * guiImage.get_width() / 2 + DOWN * guiImage.get_height() / 2)
            self.play(FadeIn(guiImage), run_time=0.5)
            self.wait(1)

            xValue = ValueTracker(0)
            yValue = ValueTracker(0)

            blitImage = always_redraw(
                lambda: ImageMobject(""assets/images/sample_gui.png"")
                .shift(
                    UP * 2 + DOWN * guiImage.get_height() / 2 +
                    LEFT * 3 + RIGHT * guiImage.get_width() / 2 +
                    RIGHT * interp(
                        xValue.get_value(),
                        [0, 1028],
                        [0, 5.5 - guiImage.get_width()]
                    ) +
                    DOWN * interp(
                        yValue.get_value(),
                        [0, 768],
                        [0, 4 - guiImage.get_height()]
                    )
                )
            )

            updatingPositionBlitCode = always_redraw(lambda: Text(
                f""blit(TEXTURE, {int(xValue.get_value())}, {int(yValue.get_value())}, 0, 0, 256, 256)"",
                font=""Consolas""
            ).scale(0.5).to_corner(UL).shift(DOWN * 0.5))
            self.play(ReplacementTransform(valueReplacedBlitCode, updatingPositionBlitCode), run_time=0.01)

            self.play(ReplacementTransform(guiImage, blitImage), run_time=0.5)
            self.wait(1)
            self.play(xValue.animate.set_value(1028), run_time=2.5, rate_func=linear)
            self.play(yValue.animate.set_value(768), run_time=2.5, rate_func=linear)
            self.wait(1)
            self.play(xValue.animate.set_value(0), yValue.animate.set_value(0), run_time=0.75, rate_func=smooth)
            self.wait(1)

            widthArrow = DoubleArrow(
                start=LEFT * 3 + UP * 2 + UP * 0.15,
                end=RIGHT * 3 + UP * 2 + UP * 0.15,
                color=BLUE,
                stroke_width=2,
                tip_length=0.25
            )

            widthText = Text(
                text=""1028"",
                font=""Consolas"",
                color=BLUE
            ).scale(0.5).next_to(widthArrow, UP * 0.15)

            self.play(Create(widthArrow), Write(widthText), run_time=0.5)
            self.wait(1)

            heightArrow = DoubleArrow(
                start=LEFT * 3 + UP * 2 + LEFT * 0.15,
                end=LEFT * 3 + DOWN * 2 + LEFT * 0.15,
                color=GREEN,
                stroke_width=2,
                tip_length=0.25
            )

            heightText = Text(
                text=""768"",
                font=""Consolas"",
                color=GREEN
            ).scale(0.5).next_to(heightArrow, LEFT * 0.05).rotate(PI / 2)

            self.play(Create(heightArrow), Write(heightText), run_time=0.5)

        window = create_window()
        self.wait(0.5)
        show_window_size()
        self.wait(0.5)
        demonstrate_blit()
        self.wait(0.5)

"
y6cJ4zcJ,PHP Carbon,kofi847,PHP,Sunday 30th of July 2023 01:12:11 PM CDT," 		use Carbon\Carbon;

        $oldDate = '2023-7-15';
        $todayDate = date('Y-m-d');//Todday's date 30-07-23
        $futureDate = '2023-08-3';

        $parseOldDate = Carbon::parse($oldDate);
        $parseTodayDate = Carbon::parse($todayDate);
        $parseFutureDate = Carbon::parse($futureDate);

		
		  if ($parseOldDate->isPast())
			 { 
             return ""this $oldDate is in the past "";	// check if date is in the past
			}											//ouputs : this 2023-07-15 in the past

         if($parseFutureDate->isFuture())                // check if date is in the future
			{ 
             return ""this $futureDate is in the future "";  // outputs: this 2023-08-3 in the future
           }

        // if($parseTodayDate->isToday()){ // check if date is in the past
        //     return ""this $todayDate is in the today "";
        // }

        /* if( date('w') !=0 && date('w') !=6)    // check if day is weekend (Saturday or Sunday)
        { 
            return ""Today is  not weekend "";
        } */

       /*  if($parseTodayDate->isWeekend()){ //check if day is weekend (Saturday or Sunday)
            return ""Today is weekend "";
        }  */

      /*   if($parseTodayDate->isWeekday()){ //check if day is weekend (Saturday or Sunday)
            return ""Today is weekday "";
        }  */"
HKMED5Jn,Untitled,smj007,Python,Sunday 30th of July 2023 12:47:07 PM CDT,"""""""
A1: Slow and fast pointer approach: The overall idea is to copy the non-target values from the array to the first few elements. For that, maintain a fast and slow pointer and iterate over slow pointer only if you encounter the non-target value. Once that is seen, what you do is overwrite the elements to the first part of the array
""""""

class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:

        count = 0

        for i in range(len(nums)):
            if nums[i]!=val:
                nums[count] = nums[i]
                count = count + 1

        return count"
UZAbuWDD,I wanna be the guy,loaymahmoud,C++,Sunday 30th of July 2023 12:31:27 PM CDT,"#include <iostream>
using namespace std;

int main() {
  int n1,n2,levels;
  cin>>levels;
  cin>>n1;
  int arr1[n1+1];
  arr1[0]=n1;
  for(int i=1; i<=n1; i++) {
    cin>>arr1[i];
  }
   cin>>n2;
   int arr2[n2+1];
   arr2[0]=n2;
   for(int i=1; i<=n2; i++) {
    cin>>arr2[i];
  }

  int Max=max(n1,n2)+2;
  int arr3[levels]={0};

  for(int i=1; i<=levels; i++) {
    for(int j=0 ; j<Max; j++) {
      if(arr1[j]==i || arr2[j]==i) {
        arr3[i-1]++;
      }
    }
  }

  bool missing=false;
  for(int i=0 ; i<levels; i++) {
    if(arr3[i]==0) {
      cout<<""Oh, my keyboard!"";
      missing=true;
      break;
    }
  }

  if(missing==false) 
  cout<<""I become the guy."";
}"
fcPHJSLX,Untitled,smj007,Python,Sunday 30th of July 2023 12:19:33 PM CDT,"
""""""
Approach 2 already demonstrates the best possible time
complexity, O(n+m)\mathcal{O}(n + m)O(n+m), but still uses additional space.
This is because the elements of array nums1 have to be stored somwhere so that
they aren't overwritten.

So, what if instead we start to overwrite nums1 from the end, where
there is no information yet?

The algorithm is similar to before, except this time we set p1 to point at index m - 1 of nums1,
p2 to point at index n - 1 of nums2, and p to point at index m + n - 1 of nums1.
This way, it is guaranteed that once we start overwriting the first m values in nums1,
we will have already written each into its new position. In this way, we can eliminate the additional space.

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """"""
        Do not return anything, modify nums1 in-place instead.
        """"""
        
        # Set p1 and p2 to point to the end of their respective arrays.
        p1 = m - 1
        p2 = n - 1
    
        # And move p backwards through the array, each time writing
        # the smallest value pointed at by p1 or p2.
        for p in range(n + m - 1, -1, -1):
            if p2 < 0:
                break
            if p1 >= 0 and nums1[p1] > nums2[p2]:
                nums1[p] = nums1[p1]
                p1 -= 1
            else:
                nums1[p] = nums2[p2]
                p2 -= 1
""""""

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """"""
        Do not return anything, modify nums1 in-place instead.
        """"""

        p = m - 1
        q = n - 1
        r = m + n - 1

        while(p >=0 and q>=0):
            if nums1[p] >= nums2[q]:
                nums1[r] = nums1[p]
                p = p - 1
                r = r - 1
            else:
                nums1[r] = nums2[q]
                q = q - 1
                r = r - 1
        
        # what if there are corner cases; actually the corner cases won't exist 
        while (q >= 0):
            nums1[r] = nums2[q]
            r = r - 1
            q = q - 1"
9SnBLfHe,matrix.hpp - v.3,Gerson_Linky,C++,Sunday 30th of July 2023 12:02:05 PM CDT,"#pragma once
#include <array>
#include <assert.h>
#include <iostream>

template <class T, unsigned int M, unsigned int N> class Matrix
{
protected:
	// std::array<std::array<T, N>, M> matrix;
	T matrix[M][N];

public:
	Matrix() = default;

	Matrix(std::initializer_list<std::initializer_list<T>> list)
	{
		if (M == 0)
			return;
		if (list.size() > M)
			throw std::out_of_range{""Too many rows.""};

		int i = 0;
		for (auto &row : list) {
			if (row.size() > N)
				throw std::out_of_range{""Too many cols.""};

			int j = 0;
			for (auto &el : row)
				matrix[i][j++] = el;
			i++;
		}
	}

	Matrix(const T arr[M][N])
	{
		T *m = *this->matrix;
		for (const T *p = *arr; p < *(arr + M - 1) + N; ++p)
			*m++ = *p;
	}

	bool isSquare() const
	{
		if (M == N)
			return true;
	}

	void fill(T (*f)(int, int))
	{
		for (int i = 0; i < M; i++)
			for (int j = 0; j < N; j++)
				matrix[i][j] = f(i, j);
	}

	template <unsigned _N, unsigned _P>

	// TODO -> usar algoritmo otimizado
	Matrix<T, M, _P> *mul(const Matrix<T, _N, _P> &mat) const
	{
		if (N != _N)
			throw;

		Matrix<T, M, _P> *out = new Matrix<T, M, _P>();

		for (int i = 0; i < M; i++)
			for (int j = 0; j < _P; j++) {
				(*out)[i][j] = 0;
				for (int k = 0; k < N; k++)
					(*out)[i][j] += matrix[i][k] * mat.get(k, j);
			}

		return out;
	}

	// WARNING: verificicar corretude

	void transpose()
	{
		for (int i = 0; i < N; i++)
			for (int j = 0; j < i; j++) {
				T swap = this->matrix[i][j];
				this->matrix[i][j] = this->matrix[j][i];
				this->matrix[j][i] = swap;
			}
	}

	Matrix<T, M, N> *getTranspose() const
	{
		auto *out = new Matrix<T, N, M>;
		T t[N][M] = (T[N][M])(*out);

		for (int i = 0; i < M; i++)
			for (int j = 0; j < N; j++)
				t[j][i] = matrix[i][j];

		return out;
	}

	// std::array<T, N>
	T *operator[](const unsigned int i)
	{
		return matrix[i];
	}

	T get(const unsigned int i, const unsigned int j) const
	{
		return matrix[i][j];
	}

	Matrix &operator+=(const Matrix<T, M, N> &mat)
	{
		for (int i = 0; i < M; i++)
			for (int j = 0; j < N; j++)
				matrix[i][j] += mat.get(i, j);
		return *this;
	}

	Matrix &operator-=(const Matrix<T, M, N> &mat)
	{
		for (int i = 0; i < M; i++)
			for (int j = 0; j < N; j++)
				matrix[i][j] -= mat.get(i, j);
		return *this;
	}

	Matrix &operator*(const T scalar)
	{
		for (int i = 0; i < M; i++)
			for (int j = 0; i < N; j++)
				matrix[i][j] *= scalar;
		return *this;
	}

	Matrix &operator/(const T scalar)
	{
		for (int i = 0; i < M; i++)
			for (int j = 0; i < N; j++)
				matrix[i][j] /= scalar;
		return *this;
	}

	friend std::ostream &operator<<(std::ostream &out, const Matrix &mat)
	{
		out << '[' << std::endl;
		for (int i = 0; i < M; i++) {
			out << '[';
			if (N > 0)
				out << mat.get(i, 0);
			for (int j = 1; j < M; j++)
				out << "", "" << mat.get(i, j);
			out << ']' << std::endl;
		}
		out << ']' << std::endl;

		return out;
	}
};

template <class T, int N> class SquareMatrix : public Matrix<T, N, N>
{
public:
	using Matrix<T, N, N>::Matrix;

	bool isSquare() const
	{
		return true;
	}

	// TODO -> Implement
	void invert();
	SquareMatrix *getInverse();
	T getDeterminant();
};

template <class T> using Matrix2 = SquareMatrix<T, 2>;
template <class T> using Matrix3 = SquareMatrix<T, 3>;
template <class T> using Matrix4 = SquareMatrix<T, 4>;
"
PjF3ujGg,test,NubeColectiva,PHP,Sunday 30th of July 2023 12:01:01 PM CDT,"const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  console.log(myObj)
    
    myObj.forEach(function(o) {
       document.getElementById(""datos"").innerHTML += '<li>' + o.nombre + '</li>';
    })

};
xmlhttp.open(""GET"", ""api/v1/productos/listar"");
xmlhttp.send();






const xhttp = new XMLHttpRequest();
xhttp.onload = function() {
    document.getElementById(""datos"").innerHTML = this.responseText;
}

const miobj = { name: ""Televisor"", precio: 300, stock: 19, img: ""tv.jpg"" };
const mijson = JSON.stringify(miobj);

xhttp.open(""POST"", ""api/v1/productos/insertar"");
xhttp.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");
xhttp.send(mijson);"
Lx3Wh9Ez,string_gcd,madhavibatthala,C++,Sunday 30th of July 2023 11:51:02 AM CDT,"class Solution {

   int hcf(int a,int b){
       if(a==0 ){
           return b;
       }else if(b==0){
           return a;
       }
       if(a>b)
       return hcf(a%b,b);
       return hcf(a,b%a);
   } 
public:

    string gcdOfStrings(string str1, string str2) {
        //finding divisor length i.e hcf of both string lengths
        int n1 = str1.size();
        int n2 = str2.size();
        int wind = hcf(n1,n2);
        int flag=0;
        string init = str1.substr(0,wind);
        int i=0;
        while(i<n1 && i<n2){
            string s1 = str1.substr(i,wind);
            string s2 = str2.substr(i,wind);
            if(s1 != s2 ||
             s1 != init ||
              s2!=  init){
                flag=1;
                break;
            }
            i+=wind;
        }
        
            while(i<n1){
                if(str1.substr(i,wind) != init){
                    flag=1;
                    break;
                }
                i+=wind;
            }
        
       
            while(i<n2){
                if(str2.substr(i,wind) != init){
                    flag=1;
                    break;
                }
                i+=wind;
            }
        
        if(flag==1)return """";
        return init;
    }
};"
5WqC0aiw,spotify script,hammad9860,Python,Sunday 30th of July 2023 11:38:25 AM CDT,"import os
import re
import subprocess
import spotipy
import music_tag
import ctypes
import time
from spotipy.oauth2 import SpotifyClientCredentials
from dotenv import load_dotenv
from collections import Counter
from mutagen.mp3 import MP3
from datetime import datetime, timedelta
from colorama import init, Fore, Back, Style
from send2trash import send2trash

class Container:
  def __init__(self):
    self.local_library_folder = ""D:\Music""
    self.local_playlist_folder = ''
    self.local_temp_download_folder = ""D:\Music\[Other]\DownOnSpot""
    self.allowed_extensions = ['.mp3']
    
    self.playlist_url = ''
    self.playlist_id = ''
    self.playlist_name = ''

    self.spotify_tracks_raw = []
    self.spotify_tracks_already_downloaded = []
    self.spotify_tracks_incomplete = []
    self.spotify_tracks_uploaded = []
    self.spotify_tracks_unavailable = []
    self.spotify_tracks_deleted = []
    self.spotify_tracks_to_download = []
    
    self.local_tracks_raw = []
    self.local_tracks_already_downloaded = []
    self.local_tracks_duplicate = []
    self.local_tracks_extra = []
    self.local_tracks_uploaded = []
    
    self.currently_downloading_track = {}
    self.newly_downloaded_track = {}
    self.completed_index = 0
    self.progress_bar_text = ''

    self.script_owner = 'HammadXP'
    self.region = 'PK'

    self.playlists = {
        'bollywood': 'https://open.spotify.com/playlist/2V6z0Yv2GSxYKhTlevre0J?si=b99b1fec8cf0492d',
        # 'bollywood_classic': 'https://open.spotify.com/playlist/0VUM3gcOCWTONPDLFKOqcT?si=6e8ec6e44d6741c4',
        # 'bollywood_more_previous': 'https://open.spotify.com/playlist/28Ftlt3xLfZAkIxxVpZgLL?si=4ef871e20bcf4936',
        'bollywood_previous': 'https://open.spotify.com/playlist/2vLAwXfPJJLT9zCZiBHLd7?si=a709e13fe5e1433f',
        'indian_hip_hop': 'https://open.spotify.com/playlist/71eOYF6sSARCrtmihyQEUP?si=7b72c2366ceb438b',
        'indian_pop': 'https://open.spotify.com/playlist/1MiOoq94f0YmJi5MYa9SwR?si=35f1bc8f275d44bf',
        # 'just_for_me': 'https://open.spotify.com/playlist/1J1ZhkZMKLttC1WhQegFoK?si=4739c9d0dc9944bf',
        'just_music': 'https://open.spotify.com/playlist/6X4aonsxqtHRFPIc37nln5?si=be7787a1028a4a61',
        'movie_soundtracks': 'https://open.spotify.com/playlist/4NSSc59unC5sBiByLDJb1D?si=44b8e3265e944d4c',
        'movie_tracks': 'https://open.spotify.com/playlist/78fHA86h7O84wBL4cXXKsN?si=d4a7f97eaed747ff',
        'not_bad': 'https://open.spotify.com/playlist/3sq8eo9pnCvPcxjYIQo0VN?si=d61c4dae712141ef',
        # 'ost': 'https://open.spotify.com/playlist/57rWznXfKMWOCxPRrPtuHN?si=7ef95cbfff71410d',
        'pakistani_classic': 'https://open.spotify.com/playlist/2O73qJgmZfB57rKnpo7Jzn?si=77800e4812a74c5e',
        'pakistani_pop': 'https://open.spotify.com/playlist/0XlE4fNzKuesDnSVmBb9bh?si=b18b659227204df9',
        'pop_music': 'https://open.spotify.com/playlist/2BOn4rcEwKZ4HxaHGOMpIf?si=d681376f9e6b42f5',
        'punjabi': 'https://open.spotify.com/playlist/0GWg1KQSiIAjquU9LANpYD?si=4bb8c09f9a0244ba',
        'shorts_less': 'https://open.spotify.com/playlist/0jLk6UGikPGpbbApFg7NvU?si=1bd4aece3d6240aa',
        'shorts_music': 'https://open.spotify.com/playlist/5rCPO6bFNZfwnZSC857LeS?si=823bb76b528a4e26',
        'solo_music': 'https://open.spotify.com/playlist/2NYdWNXYaOhuOLLWO2aY1X?si=673fab0500504229',
        'soundtracks': 'https://open.spotify.com/playlist/5wn5aufTRaLoYRykTl57u4?si=861d3c6683a943a2',
        'soundtracks_codm': 'https://open.spotify.com/playlist/0yVjrLYrbraAWGfr7xWAZt?si=4030e456b6e748ad',
        # 'superhero_music': 'https://open.spotify.com/playlist/2JilFHyef9EhsER3R6k6AR?si=93efd1985e3a4312',
        'uplifting_music': 'https://open.spotify.com/playlist/78u4RkP3zK9malm09IM9Ku?si=fbf691d3c4974d37',
    }

    self.playlists_test = {
      'DownOnSpot (Test)': 'https://open.spotify.com/playlist/4K1lpHuBT9j3TUbeHw51zt?si=570766aa646f440b',
    }

    self.playlists_2 = {
      'indian_pop': 'https://open.spotify.com/playlist/1MiOoq94f0YmJi5MYa9SwR?si=35f1bc8f275d44bf'
      # 'pakistani_pop': 'https://open.spotify.com/playlist/0XlE4fNzKuesDnSVmBb9bh?si=b18b659227204df9',
      # 'shorts_less': 'https://open.spotify.com/playlist/0jLk6UGikPGpbbApFg7NvU?si=1bd4aece3d6240aa',
    }

  ######################################################

  def create_session(self):
    load_dotenv()

    client_id = os.getenv(""CLIENT_ID"", """")
    client_secret = os.getenv(""CLIENT_SECRET"", """")

    client_credentials_manager = SpotifyClientCredentials(client_id=client_id, client_secret=client_secret)
    self.session = spotipy.Spotify(client_credentials_manager=client_credentials_manager)

  def update_window_title(self, text):
    ctypes.windll.kernel32.SetConsoleTitleW(f""Spotify Script by {self.script_owner} | {text}"")

  ######################################################

  def get_playlist_id(self):
    if match := re.match(r""https://open.spotify.com/playlist/(.*)\?"", self.playlist_url):
      self.playlist_id = match.groups()[0]
    else:
      raise ValueError(""Bad URL format !!!"")

  def get_playlist_name(self):
    self.playlist_name = self.session.user_playlist(user=None, playlist_id=self.playlist_id, fields=""name"")['name']

  def get_spotify_tracks_raw(self):
    self.spotify_tracks_raw = []
    
    response = self.session.playlist_tracks(self.playlist_id, market=self.region)
    tracks_fetched = response['items']

    while response['next']:
      response = self.session.next(response)
      tracks_fetched.extend(response['items'])

    for track in tracks_fetched:
      title = track['track']['name']
      artist = "", "".join([artist['name'] for artist in track['track']['artists']])
      album = track['track']['album']['name']
      duration = track['track']['duration_ms']
      release_date = track['track']['album']['release_date']
      added_at = track['added_at']      
      track_url = track['track']['external_urls'].get('spotify', False)
      track_id = track['track']['id'] # For local -> 'None'
      is_local = track['track']['is_local']
      is_playable = track['track'].get('is_playable', True)

      self.spotify_tracks_raw.append({'title': title, 'artist': artist, 'album': album, 'duration': duration, 'release_date': release_date, 'added_at': added_at, 'track_url': track_url, 'track_id': track_id, 'is_local': is_local, 'is_playable': is_playable})

    self.spotify_tracks_raw.sort(key=lambda a: (a['title'].lower(), a['artist'].lower()))

  def get_local_tracks_raw(self):
    self.local_tracks_raw = []
    
    for folder, subfolders, files in os.walk(self.local_playlist_folder):
      for file in files:
        file_path = os.path.join(folder, file)
        file_name = os.path.splitext(file)[0]
        file_extension = os.path.splitext(file)[1]

        if file_extension in self.allowed_extensions:
          music_file = music_tag.load_file(file_path)
          music_file_mutagen = MP3(file_path)

          title = str(music_file['title'])
          artist = str(music_file['artist'])
          album = str(music_file['album'])
          duration = music_file_mutagen.info.length * 1000
          comment_raw = str(music_file['comment'])
          comment = comment_raw.split(',')[0]

          self.local_tracks_raw.append({""title"": title, ""artist"": artist, ""album"": album, ""duration"": duration, ""comment"": comment, ""file_name"": file_name, ""file_path"": file_path})

    self.local_tracks_raw.sort(key=lambda a: (a['title'].lower(), a['artist'].lower()))

  def create_lists(self):
    for spotify_track in self.spotify_tracks_raw:
      for local_track in self.local_tracks_raw:
        if spotify_track['title'] == local_track['title'] and spotify_track['artist'] == local_track['artist'] and spotify_track['album'] == local_track['album']:
            
          # get list of tracks that have already been downloaded
          if spotify_track['track_id'] == local_track['comment']:
            self.spotify_tracks_already_downloaded.append(spotify_track) if spotify_track not in self.spotify_tracks_already_downloaded else None
            self.local_tracks_already_downloaded.append(local_track) if local_track not in self.local_tracks_already_downloaded else None

          # get list of incomplete tracks for re-download
          if spotify_track['duration'] != local_track['duration']:
            if (spotify_track['duration'] - local_track['duration']) > 1000: # duration difference in milliseconds, so 1000 = 1s
              self.spotify_tracks_incomplete.append(spotify_track) if spotify_track not in self.spotify_tracks_incomplete else None

          # get list of uploaded tracks
          if spotify_track['is_local']:
            self.spotify_tracks_uploaded.append(spotify_track) if spotify_track not in self.spotify_tracks_uploaded else None
            self.local_tracks_uploaded.append(local_track) if local_track not in self.local_tracks_uploaded else None

      # get list of tracks that have been deleted from spotify
      if spotify_track['title'] == '' and spotify_track['artist'] == '' and spotify_track['album'] == '':
        self.spotify_tracks_deleted.append(spotify_track) if spotify_track not in self.spotify_tracks_deleted else None
      
      # get list of unavailable tracks
      if not spotify_track['is_playable']:
        self.spotify_tracks_unavailable.append(spotify_track) if spotify_track not in self.spotify_tracks_unavailable else None

    # get list of extra local tracks that should be removed locally
    self.local_tracks_extra = [item for item in self.local_tracks_raw if item not in self.local_tracks_already_downloaded]

    # prevent uploaded tracks from getting added to extra local tracks list
    self.local_tracks_extra = [item for item in self.local_tracks_extra if item not in self.local_tracks_uploaded]
        
    # get list of tracks that have been downloaded twice with same ids but different filenames
    # checked_ids = set()

    # for local_track in self.local_tracks_raw:
    #   if local_track['comment'] != '' and local_track['comment'] in checked_ids:
    #     self.local_tracks_duplicate.append(local_track)
    #     self.local_tracks_duplicate.append(next(item for item in self.local_tracks_duplicate if item['comment'] == local_track['comment']))

    #   elif local_track['comment'] != '':
    #     checked_ids.add(local_track['comment'])
    
    # get list of tracks to download
    self.spotify_tracks_to_download = self.spotify_tracks_raw + self.spotify_tracks_incomplete

    for item in self.spotify_tracks_already_downloaded + self.spotify_tracks_uploaded + self.spotify_tracks_deleted + self.spotify_tracks_unavailable:
      if item in self.spotify_tracks_to_download:
        self.spotify_tracks_to_download.remove(item)

  def duplicate_proof_filename(self):
    for spotify_track in self.spotify_tracks_to_download:
      spotify_track['file_name_final'] = spotify_track['title']

      for local_track in self.local_tracks_raw:
        if spotify_track['title'].lower() == local_track['title'].lower():
          spotify_track['file_name_final'] = f""{spotify_track['title']} (by {spotify_track['artist']})""
        
        if spotify_track['title'].lower() == local_track['title'].lower() and spotify_track['artist'].lower() == local_track['artist'].lower():
          spotify_track['file_name_final'] = f""{spotify_track['title']} (by {spotify_track['artist']}) ({spotify_track['album']})"" # for infinity war

  def remove_local_tracks_duplicate(self):
    for local_track in self.local_tracks_duplicate:
      file_path = local_track['file_path']
      does_exist = os.path.exists(file_path)

      if does_exist:
        send2trash(file_path)

  def remove_local_tracks_extra(self):
    for local_track in self.local_tracks_extra:
      file_path = local_track['file_path']
      does_exist = os.path.exists(file_path)

      if does_exist:
        send2trash(file_path)

  def empty_local_temporary_download_folder(self):
    for folder, subfolders, files in os.walk(self.local_temp_download_folder):
      for file in files:
        file_path = os.path.join(folder, file)
        send2trash(file_path)

  ######################################################

  def downloader(self):
    self.update_window_title(self.progress_bar_text)
    os.system(f""down_on_spot \""{self.currently_downloading_track['track_url']}\"""")

  def get_newly_downloaded_track(self):
    for folder, subfolders, files in os.walk(self.local_temp_download_folder):
      for file in files:
        file_path = os.path.join(folder, file)
        file_name = os.path.splitext(file)[0]
        file_extension = os.path.splitext(file)[1]
        file_name_final = self.currently_downloading_track['file_name_final']

        if file_extension in self.allowed_extensions:
          music_file = music_tag.load_file(file_path)

          title = str(music_file['title'])
          artist = str(music_file['artist'])
          album = str(music_file['album'])
          comment_raw = str(music_file['comment'])
          comment = comment_raw.split(',')[0]

          self.newly_downloaded_track = {""title"": title, ""artist"": artist, ""album"": album, ""comment"": comment, ""file_name"": file_name, ""file_path"": file_path, ""file_extension"": file_extension, ""file_name_final"": file_name_final}

  def edit_metadata(self):
    music_file = music_tag.load_file(self.newly_downloaded_track['file_path'])

    music_file['title'] = self.currently_downloading_track['title'] # forgot why i needed to edit them
    music_file['artist'] = self.currently_downloading_track['artist']
    music_file['album'] = self.currently_downloading_track['album']
    
    music_file['comment'] = self.currently_downloading_track['track_id']
    music_file.save()

  def edit_modification_date(self):
    timestamp_raw = self.currently_downloading_track['added_at']
    timestamp = datetime.strptime(timestamp_raw, ""%Y-%m-%dT%H:%M:%SZ"")
    timestamp_adjusted = timestamp + timedelta(hours=5)
    timestamp_epoch = timestamp_adjusted.timestamp()
    mdate_P1 = timestamp_adjusted.strftime(""%Y-%m-%d"")
    mdate_P2 = timestamp_adjusted.strftime(""%Y-%m-%d %H:%M:%S"")

    os.utime(self.newly_downloaded_track['file_path'], (timestamp_epoch, timestamp_epoch))

  def rename_move_downloaded_track(self):
    file_name_new = re.sub(r'[\\/*?:""<>|]', """", self.newly_downloaded_track['file_name_final'])

    file_path_old = self.newly_downloaded_track['file_path']
    file_path_new = os.path.join(self.local_playlist_folder, file_name_new + self.newly_downloaded_track['file_extension'])

    if not os.path.exists(self.local_playlist_folder):
      os.makedirs(self.local_playlist_folder)

    os.replace(file_path_old, file_path_new)

  def download_handler(self):
    for spotify_track in self.spotify_tracks_to_download:
      self.currently_downloading_track = spotify_track

      self.progress_bar_text = f""\nPlaylist: {self.playlist_name} (Total Songs: {len(self.spotify_tracks_raw)} | To Download: {len(self.spotify_tracks_to_download) - self.completed_index}) (Unavailable: {len(self.spotify_tracks_unavailable)}) | Downloading: {spotify_track['title']}\n""

      self.downloader()
      self.get_newly_downloaded_track()
      self.edit_metadata()
      self.edit_modification_date()
      self.rename_move_downloaded_track()

      self.completed_index += 1

    if not self.spotify_tracks_to_download:
      print(f""{self.playlist_name.ljust(30)} {Fore.GREEN + 'DOWNLOADED' + Style.RESET_ALL}"")

    if self.spotify_tracks_to_download == self.completed_index and len(self.spotify_tracks_to_download) > 0:
      print(f""{self.playlist_name.ljust(30)} {Fore.GREEN + 'DOWNLOADED' + Fore.YELLOW + ' (Unavailable skipped)' + Style.RESET_ALL}"")

  def reset_lists(self):
    self.spotify_tracks_raw = []
    self.spotify_tracks_already_downloaded = []
    self.spotify_tracks_incomplete = []
    self.spotify_tracks_uploaded = []
    self.spotify_tracks_unavailable = []
    self.spotify_tracks_deleted = []
    self.spotify_tracks_to_download = []
    
    self.local_tracks_raw = []
    self.local_tracks_already_downloaded = []
    self.local_tracks_duplicate = []
    self.local_tracks_extra = []
    self.local_tracks_uploaded = []
    
    self.completed_index = 0

  ######################################################

  def app_handler(self):
    self.__init__()
    self.create_session()
    init() # For colorama

    for _, playlist_url in self.playlists.items():
      self.playlist_url = playlist_url;
      self.get_playlist_id();
      self.get_playlist_name();
      self.local_playlist_folder = os.path.join(self.local_library_folder, self.playlist_name)
      
      self.update_window_title(f""Processing: {self.playlist_name}"")
      self.get_spotify_tracks_raw()
      self.get_local_tracks_raw()
      self.create_lists()
      # return
      self.duplicate_proof_filename()

      # self.remove_local_tracks_duplicate()
      self.remove_local_tracks_extra()
      self.empty_local_temporary_download_folder()
      
      self.download_handler()
      self.reset_lists()

    self.update_window_title('Finished.')

# START

app = Container()
app.app_handler()

input('\nFinished.')

########################################################

# Notes:
# is_playable is 'true' on normal tracks, 'false' on unavailable tracks, and is not present on local tracks
# index was added to keep the compare process in sync, but not needed anymore
# sync might also be the reason for lambda sorting
# music_tag showed comment tag as twice
# append method in 'get_spotify_tracks_to_download' was causing infinte loop

########################################################
"
PbSfpqvh,Untitled,gfg9,C++,Sunday 30th of July 2023 11:22:23 AM CDT,"//User function Template for C++

class Solution {
public:

    int getFirstIndex_ProductGreaterThanorEqualToX(int i, vector<int>&nums, int p, int x){
        
        int l=i-1;
        int r=nums.size();
        
        while(r>l+1){
            int m = (l+r)/2;
            if(nums[m] >= (x/p)+(x%p!=0)){
                r=m;
            }else{
                l=m;
            }
        }
        
        return r==i-1?-1:r;
    }
    
    int getLastIndex_ProductLessThanorEqualToY(int i, vector<int>&nums, int p, int y){
        
        int l=i-1;
        int r=nums.size();
        
        while(r>l+1){
            int m = (l+r)/2;
            if(nums[m] <= y/p){
                l=m;
            }else{
                r=m;
            }
        }
        
        return l==i-1?-1:l;
    }
    
	int TotalPairs(vector<int>&nums, int x, int y){
	    // Code here
	    
	    int n = nums.size();
	    sort(nums.begin(), nums.end());
	    if(n==1) return 0;
	    if(nums[0]*nums[1]>y || nums[n-1]*nums[n-2]<x) return 0;
	    
	    int ans=0;

	    for(int i=0;i+1<n;i++){
	        //FFFFTTTT
	       // int l = getFirstIndex_ProductGreaterThanorEqualToX(i+1, nums, nums[i], x); //lowerbound
	        //TTTTFFFF
	       // int r = getLastIndex_ProductLessThanorEqualToY(i+1, nums, nums[i], y); // Or firstIndexWhereProductGreaterThanY - 1 : upperbound
	       int p = nums[i];
	       
	       int l = lower_bound(nums.begin()+i+1, nums.end(), (x/p)+(x%p!=0) ) - nums.begin();
	       int r = upper_bound(nums.begin()+i+1, nums.end(), (y/p)) - nums.begin()-1;
	      
	        if(l!=-1 && r!=-1 && l<=r)
	            ans+=(r-l+1);
	    }
	    
	    return ans;
	}
};
"
MxEuNh2b,Pinturillo 2 data2.js,DrawingJhon,JavaScript,Sunday 30th of July 2023 11:17:11 AM CDT,"function cn(dQ) {
    if (dQ.search(""/"") == 0) {
        return h(dQ.substr(1))
    }
    dQ = aj(dQ.trim());
    if (dQ != '') {
        var aW = T(dj.nn, dQ);
        return h(aW)
    }
    return 0;
}
;function bL(dH) {
    var dH = dH;
    var sB = 20;
    var margin = 24;
    var qO = 550;
    var bn = new oM.MovieClip();
    bn.mouseChildren = false;
    bn.kq = new oM.MovieClip().set({
        x: margin,
        y: margin
    });
    bn.addChild(t(600, ea.maxHeight), bn.kq);
    var hq = new oM.Shape().set({
        x: margin,
        y: margin
    });
    hq.graphics.beginFill(""#0F0"").drawRect(0, 0, qO, ea.maxHeight - 50);
    bn.kq.mask = hq;
    bn.pH = function() {
        var gT = new oM.MovieClip();
        var gb = new oM.Shape();
        gb.graphics.setStrokeStyle(3).beginStroke(""#CC8"").beginFill(""#EEC"").drawRect(0, 0, qO, 40);
        gT.addChild(gb);
        return gT;
    }
    ;
    var k = sH(dH).set({
        x: margin,
        y: ea.maxHeight - 70
    });
    k.setBounds(new oM.Rectangle(0,0,qO,40));
    k.mw(bn.pH());
    k.oT(60);
    k.on(""enterKey"", function(bQ) {
        bn.onKeyPress();
    }, false);
    bn.addChild(k);
    bn.on('mousedown', function(bQ) {
        bn.onClick();
    });
    bn.onClick = function() {
        k.nx(1);
    }
    ;
    bn.onKeyPress = function(bQ) {
        cn(k.rm());
        k.empty();
    }
    ;
    bn.kz = function(eu, dQ) {
        eu = aj(eu.trim());
        dQ = aj(dQ.trim());
        dQ = this.nd(dQ);
        if (eu != '' && dQ != '') {
            this.mE(eu, dQ);
            this.J();
        }
    }
    ;
    bn.mE = function(eu, dQ) {
        if (eu == bD) {
            dS = ""#44C""
        } else {
            dS = ""#4A0""
        }
        eu = eu + ': ';
        dQ = eu + dQ;
        var ke = new oM.MovieClip();
        var mf = new oM.Text(eu,""bold 36px Helvetica"",dS).set({
            lineWidth: qO
        });
        var kI = new oM.Text(dQ,""bold 36px Helvetica"",""#333"").set({
            lineWidth: qO
        });
        if (bn.kq.children.length > 0) {
            ke.set({
                y: parseInt(bn.kq.getBounds().height + 15)
            });
        }
        ke.addChild(kI, mf);
        bn.kq.addChild(bn.so(ke));
    }
    ;
    bn.so = function(fB) {
        var kE = parseInt(fB.getBounds().height);
        fB.cache(0, 0, qO, kE);
        fB.setBounds(0, 0, qO, kE);
        return fB;
    }
    ;
    bn.ko = function(dQ, fD) {
        if (typeof fD == ""undefined"") {
            fD = 0;
        }
        dQ = aj(dQ.trim());
        if (dQ != '') {
            this.lx(dQ, fD);
            this.J();
        }
    }
    ;
    bn.lx = function(dQ, fD) {
        var ke = new oM.MovieClip();
        if (fD > 0) {
            dQ = ""     "" + dQ;
            ke.addChild(new oM.Bitmap(kb['icoChat' + fD]));
        } else {
            dQ = ""· "" + dQ;
        }
        var kI = new oM.Text(dQ,""bold 36px Helvetica"",""#D63"").set({
            lineWidth: qO
        });
        if (bn.kq.children.length > 0) {
            ke.set({
                y: parseInt(bn.kq.getBounds().height + 15)
            });
        }
        ke.addChild(kI);
        bn.kq.addChild(bn.so(ke));
    }
    ;
    bn.J = function(eu, dQ) {
        if (bn.kq.children.length >= sB) {
            this.oD(bn.kq.children.length - sB);
            this.rN();
        }
        this.nu();
    }
    ;
    bn.nu = function() {
        if (bn.kq.children.length > 0) {
            var mG = k.y - margin;
            if (parseInt(bn.kq.getBounds().height) > mG) {
                bn.kq.y = mG - parseInt(bn.kq.getBounds().height);
            } else {
                bn.kq.y = margin;
            }
        }
    }
    ;
    bn.oD = function(oe) {
        for (i = (oe - 1); i >= 0; i--) {
            var km = bn.kq.getChildAt(i);
            if (km != undefined) {
                bn.kq.removeChild(km);
            }
        }
    }
    ;
    bn.rN = function() {
        if (bn.kq.children.length > 0) {
            var nf = bn.kq.getChildAt(0).y;
            for (i = 0; i < bn.kq.children.length; i++) {
                bn.kq.getChildAt(i).y = parseInt(bn.kq.getChildAt(i).y - nf);
            }
        }
    }
    ;
    bn.nd = function(aJ) {
        var mG = 26;
        jZ = aJ.split("" "");
        lf = new Array();
        for (var ft in jZ) {
            hG = jZ[ft];
            while (hG.length > mG) {
                lf.push(hG.substr(0, mG));
                hG = hG.substr(mG)
            }
            lf.push(hG);
        }
        return lf.join(' ');
    }
    ;
    bn.empty = function() {
        bn.kq.removeAllChildren();
        bn.kq.y = margin;
        k.empty();
    }
    ;
    bn.show = function() {
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.visible = false;
    }
    ;
    return bn;
}
;Object.assign(jr, {
    71: mD,
    72: dE,
    100: cI,
    101: lN,
    102: pe,
    103: lC,
    104: nT,
    105: nP,
    106: aV,
    107: bx,
    109: pn,
    110: mH,
    111: oV,
    112: cW,
    113: me,
    74: cw,
    75: dm,
    76: cJ,
    77: de,
    78: bj,
    79: cv,
    80: ct,
    81: cS,
    82: dc,
    83: cR,
    84: aY,
    85: bg,
    86: mv,
    87: od,
    88: rS
});
function mD(v) {
    aB();
}
;function dE(v) {
    var aW = T(dj.pb, v[1]);
    h(aW);
}
;function cv(v) {
    if (v[1] != bD) {
        bo(v[1]);
        if (hD != undefined) {
            hD.mt();
        }
    }
}
;function cI(v) {
    if (cb == v[1] && ey == hl) {
        if (v[2] == ""MT"") {
            cQ(v[3], v[4]);
            v[2] = ""LT""
        }
        if (v[2] == ""LT"") {
            dC(v[5])
        }
        if (v[2] == ""CL"") {
            sk();
        }
    }
}
;function lN(v) {
    if (cb == v[1]) {
        hs.start(v[2]);
    }
}
;function pe(v) {
    if (cb == v[1]) {
        mF();
    }
}
;function lC(v) {
    if (gO != undefined) {
        gO.ko(v[1]);
    }
}
;function nT(v) {
    if (cb == v[1]) {
        cj = v[3].toUpperCase();
        ai();
        aC(eY);
        if (v[2] == ""0"" || v[2] == ""2"") {
            G();
            if (fm.visible == false) {
                setTimeout(function() {
                    H(hE);
                }, 1000);
            }
        } else if (v[2] == ""3"") {
            G();
            aJ = L.dJ('TEPHSDJ');
            fm.show(aJ);
        }
        hD.mt();
    }
}
;function nP(v) {
    if (cb == v[1]) {
        var dw = v[2];
        al[dw].iZ(parseInt(v[3]));
        if (parseInt(v[4]) == 1 && al[dw].eQ == false) {
            al[dw].kL(parseInt(v[5]));
            var aJ = C(L.dJ('TALP'), [dw]);
            if (gO != undefined) {
                gO.ko(aJ, 1);
            }
            if (dw == bD) {
                gZ.eL(cj, gZ.ox, false);
                fr.hide();
                H(io);
                cN.play(2);
            } else {
                cN.play(4);
            }
        }
        hD.mt();
    }
}
;function aV(v) {
    cb = v[1];
    ev = v[2];
    gZ.eL(v[3], gZ.gG);
    if (parseInt(v[4]) > 0) {
        hs.start(parseInt(v[4]));
        if (ev != bD && hs.active == true) {
            aC(hl);
        }
    }
    bC(v[5]);
    hD.mt();
}
;function bx(v) {
    cB(v);
}
;function pn(v) {
    if (cb == v[1]) {
        ma(v[1]);
    }
}
;function mH(v) {
    if (cb == v[1]) {
        cj = v[2].toUpperCase();
    }
}
;function oV(v) {
    if (cb == v[1]) {
        gR = v[2].toUpperCase();
        if (ev == bD) {
            gZ.jx(v[2])
        } else {
            gZ.eL(v[2], gZ.gG)
        }
    }
}
;function cW(v) {
    var aJ = '';
    switch (v[1]) {
    case ""2"":
        aJ = L.dJ('TEPHSP');
        cN.play(14);
        break;
    case ""1"":
        aJ = L.dJ('TEPHCST');
        break;
    default:
        aJ = L.dJ('TPI');
    }
    G();
    fm.show(aJ);
}
;function me(v) {
    if (gO != undefined && cb == v[1] && v.length == 4) {
        var aJ = C(L.dJ('TLFHSE'), [v[2], v[3]]);
        gO.ko(aJ);
        cN.play(13);
    }
}
;function mv(v) {
    if (cb == v[1]) {
        if (bD == v[2]) {
            lT(v.slice(4, 7));
        }
    }
}
;function od(v) {
    mW(v[1], parseInt(v[2]), v[3]);
}
;function cw(v) {
    var dQ = aE(v, 3);
    if (fQ.kt(v[1]) == false) {
        if (gO != undefined) {
            gO.kz(v[1], dQ);
        }
    }
}
;function dm(v) {
    eP(v[1]);
    if (gV != undefined) {
        gV.mY();
    }
}
;function de(v) {
    if (v[1] == bD) {
        fE = parseInt(v[2]);
        if (parseInt(v[2]) == it) {
            dW.show(dW.lP);
        } else {
            dv();
            dW.show(dW.mj);
        }
    } else {
        if (parseInt(v[2]) == fE) {
            bs(v[1]);
            var aJ = C(L.dJ('THEELS'), [v[1]]);
            if (gO != undefined) {
                gO.ko(aJ);
            }
            cN.play(1);
            hD.mt();
        }
    }
}
;function bj(v) {
    if (v[1] == ""2"") {
        er.show({
            fV: L.dJ('TCI'),
            fM: [{
                name: ""OK""
            }]
        });
        be(2);
    }
}
;function ct(v) {
    if (v[1] != bD) {
        bo(v[1]);
        if (hD != undefined) {
            hD.mt();
        }
    }
}
;function rS(v) {
    if (v[1] == bD && v[2] == fE) {
        dW.oc();
        er.show({
            fV: L.dJ('THK'),
            fM: [{
                name: 'OK',
                path: function() {
                    dW.show(dW.mU);
                }
            }]
        });
    }
}
;function dc(v) {
    if (v[6] == 1) {
        cG(v);
    }
}
;function cR(v) {}
;var ge = 0;
var cb = '';
var cj = '';
var gR = '';
var ev = '';
var pv;
var hI = 1;
var nB = 2;
var ej = 3;
var fG = hI;
var fQ = new nr();
function mF() {
    if (al[bD].fO == false) {
        document.dispatchEvent(F(py.qV));
    }
    kX();
    hD.mt();
    gZ.qJ();
    hs.hide();
    sk();
    H(hH);
}
;function ap() {
    if (fG == ej) {
        var aW = T(dj.md, cb);
        h(aW);
        fr.hide();
    }
}
;function cU() {
    var aW = T(dj.lu, cb, 'CL');
    h(aW);
    sk();
}
;function co() {
    er.show({
        fV: L.dJ('TPDCT'),
        fM: [{
            name: L.dJ('TS'),
            path: cf
        }, {
            name: L.dJ('TN')
        }]
    });
}
;function ps(ki) {
    cN.play(16);
    gd.hide();
    var aW = T(dj.mB, ki.lE);
    h(aW)
}
;function lT(dY) {
    if (dY.join("""") != """") {
        sk();
        hD.mt();
        cj = ""?"";
        gZ.jx(cj);
        gd.show(dY);
    }
}
;function ay(d) {
    fE = parseInt(d);
    gZ.nL(fE);
}
;function bC(ka) {
    ge = parseInt(ka);
    gZ.mL(ge);
}
;function dv() {
    fG = hI;
    dW.qq(dW.mj);
    gO = fY;
    gO.empty();
    cz();
    bH();
    gZ.eL('', gZ.nJ);
    hD.empty();
    al = {};
    bs(bD);
    hD.mt();
    hc.show(L.dJ('TEAST'));
    hs.reset();
    document.addEventListener('itemAniFinish', ah, false);
    document.addEventListener('timeOut', aM, false);
}
;function aI() {
    if (fG != hI) {
        G();
    }
    fG = hI;
    if (gO == fY) {
        gO = undefined;
    }
    cF();
    iA();
    l();
    hD.empty();
    al = {};
    hc.hide();
    hs.stop();
    document.removeEventListener('itemAniFinish', ah, false);
    document.removeEventListener('timeOut', aM);
    clearTimeout(pv);
}
;function mW(ig, jA, lo) {
    fG = nB;
    cb = ig;
    ev = lo;
    if (jA < ge) {
        nm();
    } else if (jA > ge) {
        lW();
    }
    lM();
    if (al[ev]) {
        al[ev].oO(true);
    }
    hD.mt();
    bC(jA);
    hs.stop();
    hs.pg(99);
    cj = ""?"";
    if (bD != ev) {
        gZ.eL(cj, gZ.gG);
    }
    gZ.qd();
    l();
    hc.hide();
    sk();
    bH();
    var aJ = C(L.dJ('TLTDA'), [ev]);
    if (gO != undefined) {
        gO.ko(aJ, 2);
    }
    iA();
    H(fg);
    document.dispatchEvent(F(py.qG));
}
;function nm() {
    for (var fK in al) {
        al[fK].oQ();
    }
}
;function lW() {
    for (var fK in al) {
        al[fK].nX();
    }
}
;function lM() {
    for (var fK in al) {
        al[fK].mW();
    }
}
;function kX() {
    for (var fK in al) {
        al[fK].eQ = false;
    }
}
;function ma(ig) {
    if (cb == ig) {
        aC(eY);
        if (ev == bD) {
            if (cj.length <= 1) {
                return false;
            }
            gR = '';
            gZ.jx(cj)
        } else {
            if (gR.length <= 1) {
                return false;
            }
            cj = '';
            gZ.eL(gR, gZ.gG);
        }
        for (var fK in al) {
            al[fK].gq(false);
        }
        hD.mt();
        mA();
        gd.hide();
        return true;
    }
    return false;
}
;function mA() {
    if (fg != undefined) {
        fg.nV();
    }
    pv = setTimeout(mb, 3000);
}
;function mb() {
    if (dW.nq(dW.mj)) {
        fG = ej;
        hs.start();
        if (ev == bD) {
            aC(eo);
            gH.show();
        } else {
            aC(hl);
            fr.show();
        }
        if (fg != undefined) {
            fg.hide();
        }
    }
}
;function G() {
    if (fG != hI) {
        fG = hI;
        aC(eY);
        gH.hide();
        et.hide();
        fr.hide();
        document.dispatchEvent(F(py.pL));
    }
    hs.stop();
    ai();
}
;function aM(e) {
    if (fG == ej) {
        G();
        if (al[bD].eQ == false) {
            gZ.eL(cj, gZ.gG, false);
        }
        if (al[bD].eQ == false && ev != bD) {
            H(gx);
            cN.play(5);
        }
        setTimeout(function() {
            H(hE);
        }, 1000);
    }
}
;function bF() {
    for (var fK in al) {
        al[fK].or();
    }
    var fz = Object.keys(al).sort(aG());
    fz.reverse();
    return fz;
}
;function aG() {
    return function(a, b) {
        if (al[a].fj != al[b].fj) {
            return al[a].fj - al[b].fj;
        } else if (al[a].fa != al[b].fa) {
            return al[a].fa - al[b].fa;
        } else {
            return al[b].jB.localeCompare(al[a].jB);
        }
    }
}
;function bs(da) {
    if (!(da in al)) {
        al[da] = new ix(da);
    }
}
;function bo(da) {
    if (da in al) {
        delete al[da];
    }
    if (hD != undefined) {
        hD.mr(da);
    }
}
;function na(dw) {
    if (dw != bD) {
        if (fQ.kt(dw) == false) {
            fQ.np(dw);
        } else {
            fQ.nb(dw);
        }
    }
}
;function dn() {
    if (typeof sX !== 'undefined') {
        dW.oc();
        eS.show();
        qp = rJ = rI;
        setTimeout(rj, 1000)
    } else {
        rI();
    }
}
;function cf() {
    if (fG == ej) {
        if (ev == bD) {
            l();
            fm.show(L.dJ('TEPHCST'));
            G();
            var aW = T(dj.nS, cb);
            h(aW);
        }
    }
}
;function cB(a) {
    bs(a[1]);
    al[a[1]].iZ(a[2]);
    al[a[1]].gs(a[3]);
    if (parseInt(a[6]) > 0) {
        al[a[1]].kL(a[6]);
        al[a[1]].gq(false);
    }
    if (parseInt(a[4]) == 0) {
        al[a[1]].gq(false);
    }
    al[a[1]].fa = a[5];
    hD.mt();
}
;function cG(v) {
    if (v[3] == 'IN') {
        v[3] = 'EN';
    }
    gV.lc(v[1], v[2], parseInt(v[5]), parseInt(v[4]), v[3]);
}
;var cK = {
    x: 0,
    y: 0
};
var iY = 3;
var kB = '000000';
var eR = iY;
var eV = kB;
var bG = [];
var dP = 0;
var iw = false;
var qo;
var eY = 0;
var hl = 1;
var eo = 2;
var ey = eY;
var gr = '#mySketcher';
function fC() {
    if (ab.mouseInBounds == true) {
        return true;
    }
    return false;
}
;function qC() {
    if (ab != undefined) {
        if (ey == eo) {
            bh();
        } else if (ey == hl) {
            dg();
        }
    }
}
;function ci(bQ) {
    cK = gD.globalToLocal(parseInt(bQ.stageX), parseInt(bQ.stageY));
}
;function bh() {
    if (iw == true) {
        cC({
            x: cK.x,
            y: cK.y
        });
    }
    if (bG[0] != undefined) {
        dP = bG[0].length - 4;
        if (bG[0].length > 4) {
            aF()
        }
        if (dP >= bG[0].length) {
            dP = 0
        }
        if (bG[0].length > 160) {
            var ed = [eR, eV, R(-4), R(-3), R(-2), R(-1), R(0), R(1)];
            bU();
            bG.push(ed);
            dP = 0
        }
    }
}
;function dg() {
    if (bG[0] != undefined) {
        if (dP == 0) {
            eR = parseInt(bG[0][0]);
            sY(bG[0][1]);
        }
        et.show();
        aF();
        if (dP >= bG[0].length) {
            dP = 0;
            bG.splice(0, 1);
        }
    } else {
        et.hide();
    }
}
;function aC(mode) {
    ey = mode;
    if (ey == eo) {
        gD.cursor = 'none';
        sR();
    } else {
        ab.enableMouseOver(lD);
        gD.cursor = null;
        lL();
    }
}
;function nj(bQ) {
    ci(bQ);
    if (et.visible == true) {
        et.move(cK);
        ab.update();
    }
}
;function mx(bQ) {
    ci(bQ);
    aZ();
    if (ey == eo) {
        aF();
        bU()
    }
}
;function ss(bQ) {
    ci(bQ);
    if (ey == eo && fG == ej) {
        cP();
        lQ();
        aF();
    }
}
;function pS() {
    ab.enableMouseOver(4);
    if (fS == false) {
        et.move(cK);
        et.show();
    }
}
;function qc() {
    ab.enableMouseOver(lD);
    et.hide();
}
;function sR() {
    if (ab != undefined) {
        ab.addEventListener(""stagemousemove"", nj);
        ab.addEventListener(""stagemouseup"", mx);
        gD.addEventListener(""mousedown"", ss);
        gD.addEventListener(""rollover"", pS);
        gD.addEventListener(""rollout"", qc);
    }
}
;function lL() {
    if (ab != undefined) {
        ab.removeEventListener(""stagemousemove"", nj);
        ab.removeEventListener(""stagemouseup"", mx);
        gD.removeEventListener(""mousedown"", ss);
        gD.removeEventListener(""rollover"", pS);
        gD.removeEventListener(""rollout"", qc);
    }
}
;function cz() {
    clearInterval(qo);
    qo = setInterval(qC, (1000 / 30));
    sk();
}
;function cF() {
    clearInterval(qo);
    aC(eY);
    sk();
}
;function bH() {
    eR = iY;
    sY(kB);
}
;function sk() {
    ai();
    if (ab != undefined && gD != undefined) {
        gD.nF();
    }
}
;function ai() {
    bG = new Array();
    dP = 0;
}
;function cP() {
    if (ey == eo && fG == ej) {
        iw = true;
    }
}
;function aZ() {
    iw = false;
}
;function aF() {
    if (ey != eY) {
        if (R(0) != null) {
            if (dP == 0) {
                dP = 2;
            }
            var eU = new oM.Point(R(0),R(1));
            var en = eU.clone();
            var hy = eU.clone();
            if (dP >= 4) {
                en = new oM.Point(R(-2),R(-1));
            }
            if (dP >= 6) {
                hy = new oM.Point(R(-4),R(-3));
            }
            gD.dz(eR * 2, '#' + eV, hy, en, eU);
            if (ey == hl && et.visible == true) {
                et.move(eU);
            }
            dP = dP + 2;
        }
    }
}
;function R(ft) {
    if (bG[0] != undefined) {
        if (bG[0].length >= 2) {
            if (dP + ft < bG[0].length) {
                return bG[0][dP + ft];
            }
        }
    }
    return null;
}
;function ca() {
    if (dP >= bG[0].length - 2) {
        bG.splice(0, 1);
        dP = 0
    }
}
;function cO() {
    var ed = bG[0];
    var kD = ed.splice(0, 180);
    var dU = new Array();
    for (var i = 0; i < kD.length; i = i + 1) {
        dU.push(aD(kD[i]))
    }
    return dU.join("""");
}
;function cQ(hj, ih) {
    bG.push(new Array());
    bG[bG.length - 1][0] = parseInt(hj);
    ih = bA(ih, 6);
    bG[bG.length - 1][1] = ih;
}
;function dC(hj) {
    var kv = new Array();
    var hM;
    for (var i = 0; i < hj.length; i = i + 2) {
        hM = parseInt(hj.substr(i, 2), 36);
        hM = hM * (gD.maxWidth / 480);
        kv.push(hM);
    }
    if (bG.length == 0) {
        bG.push(new Array());
        bG[bG.length - 1][0] = iY;
        bG[bG.length - 1][1] = kB;
    }
    bG[bG.length - 1] = bG[bG.length - 1].concat(kv);
}
;function bU() {
    if (bG[0] != undefined) {
        if (bG[0].length >= 4) {
            var dU = new Array();
            var ed = bG[0];
            var param = 'MT';
            var lH = ed[0];
            var pi = ed[1];
            ed.splice(0, 2);
            while (ed.length > 0) {
                dU = ed.splice(0, 180);
                dU = ba(dU);
                var aW = T(dj.lu, cb, param, lH, pi, dU.join(""""));
                h(aW);
                param = 'LT'
            }
        }
        bG.shift();
    }
}
;function lQ() {
    dP = 0;
    bG.push([eR, eV]);
    cC({
        x: cK.x,
        y: cK.y
    });
}
;function cC(fu) {
    if (fu.x < 0) {
        fu.x = 0;
    }
    if (fu.y < 0) {
        fu.y = 0;
    }
    if (fu.x > gD.maxWidth) {
        fu.x = gD.maxWidth;
    }
    if (fu.y > gD.maxHeight) {
        fu.y = gD.maxHeight;
    }
    if (bG[0] != undefined) {
        var mR = Math.abs(fu.x - bG[0][bG[0].length - 2]);
        var nf = Math.abs(fu.y - bG[0][bG[0].length - 1]);
        if (mR > 0 || nf > 0) {
            bG[0].push(fu.x);
            bG[0].push(fu.y);
        }
    }
}
;function aD(bY) {
    bY = parseInt(bY * (480 / gD.maxWidth));
    bY = bY.toString(36).toUpperCase();
    bY = bA(bY, 2);
    return bY;
}
;function ba(dU) {
    var ga = new Array();
    for (var i = 0; i < dU.length; i = i + 1) {
        ga.push(aD(dU[i]))
    }
    return ga;
}
;function bA(aJ, hh) {
    while (aJ.toString().length < hh) {
        aJ = '0' + aJ;
    }
    return aJ;
}
;var gQ;
var gD;
var hw;
var fY;
function aK() {
    var bn = new oM.MovieClip().set({
        visible: false
    });
    dG(bn);
    bn.setBounds(0, 0, 1750, ea.maxHeight);
    O(bn);
    bn.show = function() {
        ay(fE);
        eE.oX();
        ab.setChildIndex(this, ab.children.length - 1);
        this.visible = true;
    }
    ;
    bn.hide = function() {
        aI();
        eE.oA();
        this.visible = false;
    }
    ;
    return bn;
}
;function dG(fU) {
    if (ab != undefined) {
        if (gQ == undefined) {
            gQ = cp();
            fU.addChild(gQ);
        }
        if (hD == undefined) {
            hD = ae();
            fU.addChild(hD);
        }
        if (fY == undefined) {
            fY = bL('game');
            fY.set({
                x: 1150
            });
            fU.addChild(fY);
        }
    }
}
;function cp() {
    var bn = new oM.MovieClip().set({
        x: 270
    });
    bn.qY = new oM.Shape().set({
        x: 12,
        y: 8,
        alpha: .2
    });
    bn.qY.graphics.beginFill(""#000"").drawRoundRect(0, 0, 860, ea.maxHeight, 35);
    bn.qY.cache(0, 0, 860, ea.maxHeight);
    bn.qu = qQ();
    bn.qz = pI();
    bn.jh = new oM.Shape().set({
        y: 120
    });
    bn.jh.graphics.setStrokeStyle(8).beginStroke(""#993"").drawRoundRectComplex(0, 0, 860, ea.maxHeight - 120, 0, 0, 35, 35);
    bn.jh.cache(-10, -10, 880, ea.maxHeight - 100);
    bn.addChild(bn.qY, bn.qu, bn.qz, bn.jh);
    return bn;
}
;function qQ() {
    var bn = new oM.MovieClip();
    if (gZ == undefined) {
        gZ = bu();
        bn.addChild(gZ);
    }
    if (hs == undefined) {
        hs = bX();
        bn.addChild(hs);
    }
    return bn;
}
;function pI() {
    var bn = new oM.MovieClip();
    bn.hq = new oM.Shape();
    bn.hq.graphics.beginFill(""#0F0"").drawRoundRectComplex(0, 120, 860, ea.maxHeight - 120, 0, 0, 35, 35);
    bn.mask = bn.hq;
    if (gD == undefined) {
        gD = as();
        bn.addChild(gD);
        et = cL();
        gD.addChild(et);
        gH = cu();
        bn.addChild(gH);
    }
    if (hw == undefined) {
        hw = new oM.MovieClip().set({
            y: gD.y,
            scale: 860 / 900
        });
        bn.addChild(hw);
        gx = cY();
        hw.addChild(gx);
        fm = cA();
        hw.addChild(fm);
        fg = gU();
        hw.addChild(fg);
        hE = hB();
        hw.addChild(hE);
        hH = dh();
        hw.addChild(hH);
        fr = cT();
        hw.addChild(fr);
        io = dA();
        hw.addChild(io);
    }
    if (gd == undefined) {
        gd = oU();
        bn.addChild(gd);
    }
    if (hc == undefined) {
        hc = cA().set({
            x: 430,
            y: gD.y + 430
        });
        bn.addChild(hc);
    }
    return bn;
}
;var gV;
var hJ;
function ad() {
    var bn = new oM.MovieClip().set({
        visible: false
    });
    eC(bn);
    bn.setBounds(0, 0, 1620, ea.maxHeight);
    O(bn);
    bn.show = function() {
        gV.empty();
        gV.sJ();
        var aW = T(dj.mu);
        h(aW);
        eE.oX();
        gO = hJ;
        gO.empty();
        ab.setChildIndex(this, ab.children.length - 1);
        this.visible = true;
    }
    ;
    bn.hide = function() {
        gV.sK();
        eE.oA();
        if (gO == hJ) {
            gO = undefined;
        }
        this.visible = false;
    }
    ;
    return bn;
}
;function eC(fU) {
    if (ab != undefined) {
        if (gV == undefined) {
            gV = cE();
            fU.addChild(gV);
        }
        if (hJ == undefined) {
            hJ = bL('lobby');
            hJ.set({
                x: 1020
            });
            fU.addChild(hJ);
        }
    }
}
;var eG;
var fo;
var iR;
var nM;
function av() {
    var bn = new oM.MovieClip().set({
        visible: false
    });
    bn.setScale = function() {
        bn.scale = fF() ? 1.1 : .8;
    }
    ;
    window.addEventListener('resize', bn.setScale, false);
    bn.setScale();
    bn.setBounds(0, 0, 700, 880);
    O(bn);
    var iJ = new oM.Bitmap(kb['papermenu']);
    eG = pD();
    fo = qA();
    iR = rh();
    nM = qe();
    eG.visible = true;
    bn.addChild(iJ, eG, fo, iR, nM);
    iJ.cache(0, 0, 700, 880);
    bn.show = function(nt) {
        fE = 0;
        be(nt);
        ab.setChildIndex(this, ab.children.length - 1);
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.visible = false;
    }
    ;
    return bn;
}
;function rn() {
    eG.hide();
    fo.hide();
    iR.hide();
    nM.hide();
}
;function be(nt) {
    rn();
    eS.hide();
    if (nt == 4) {
        nM.show();
    } else if (nt == 3) {
        iR.show();
    } else if (nt == 2) {
        fo.show();
    } else {
        eG.show();
    }
}
;function sZ() {
    var bn = new oM.MovieClip();
    bn.alpha = .8;
    var rZ = new oM.Shape();
    rZ.graphics.setStrokeStyle(4).beginFill(""#999"").drawRoundRect(2, 2, 60, 60, 12);
    var sM = new oM.Bitmap(kb['icoback']);
    bn.addChild(rZ, sM);
    bn.cursor = ""pointer"";
    bn.on(""mouseover"", function(e) {
        bn.alpha = 1;
    });
    bn.on(""mouseout"", function(e) {
        bn.alpha = .8;
    });
    return bn;
}
;function pD() {
    var bn = new oM.MovieClip().set({
        x: 75,
        y: 100,
        visible: false
    });
    var jq = (550 / 2) - (440 / 2);
    bn.ff = j(L.dJ('TMPU')).set({
        x: jq,
        y: 140
    });
    bn.hb = j(L.dJ('TMPR')).set({
        x: jq,
        y: 300
    });
    bn.ic = j(L.dJ('TMPL')).set({
        x: jq,
        y: 460
    });
    bn.addChild(bn.ff, bn.hb, bn.ic);
    bn.sJ = function() {
        bn.ff.addEventListener(""click"", by);
        bn.hb.addEventListener(""click"", sm);
        bn.ic.addEventListener(""click"", af);
    }
    ;
    bn.sK = function() {
        bn.ff.removeEventListener(""click"", by);
        bn.hb.removeEventListener(""click"", sm);
        bn.ic.removeEventListener(""click"", af);
    }
    ;
    bn.show = function() {
        this.sJ();
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.sK();
        this.visible = false;
    }
    ;
    return bn;
}
;function qA() {
    var bn = new oM.MovieClip().set({
        x: 75,
        y: 60,
        visible: false
    });
    bn.fT = sZ().set({
        x: -40,
        y: -40,
        scale: 1.5
    });
    bn.fT.on(""click"", function() {
        bn.sz();
    });
    bn.addChild(bn.fT);
    var jq = (550 / 2) - (440 / 2);
    bn.ff = j(L.dJ('TMUM')).set({
        x: jq,
        y: 260
    });
    bn.hb = j(L.dJ('TMCM')).set({
        x: jq,
        y: 420
    });
    bn.ff.on(""click"", function() {
        cN.play(16);
        be(3)
    });
    bn.hb.on(""click"", function() {
        cN.play(16);
        be(4)
    });
    bn.addChild(bn.ff, bn.hb);
    bn.show = function() {
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.visible = false;
    }
    ;
    bn.sz = function() {
        cN.play(16);
        rI();
    }
    ;
    return bn;
}
;function rh() {
    var bn = new oM.MovieClip().set({
        x: 75,
        y: 60,
        visible: false
    });
    bn.fT = sZ().set({
        x: -40,
        y: -40,
        scale: 1.5
    });
    bn.fT.on(""click"", function() {
        cN.play(16);
        be(2)
    });
    bn.addChild(bn.fT);
    var jq = (550 / 2) - (440 / 2);
    bn.ff = j(""OK"").set({
        x: jq,
        y: 590
    });
    bn.ff.on(""click"", function(bQ) {
        bn.ce(bQ);
    });
    bn.addChild(bn.ff);
    bn.kn = new oM.MovieClip();
    bn.addChild(bn.kn);
    bn.pH = function() {
        var gT = new oM.MovieClip();
        var gb = new oM.Shape();
        gb.graphics.setStrokeStyle(1).beginStroke(""#999"").beginFill(""#c7c7c7"").drawRoundRect(0, 0, 340, 54, 5);
        gT.addChild(gb);
        return gT;
    }
    ;
    bn.qM = function(dH, hX, jp) {
        bn.jC = sH(dH).set({
            x: hX,
            y: jp,
            scale: 1.3
        });
        bn.jC.setBounds(new oM.Rectangle(-2,-2,344,58));
        bn.jC.mw(bn.pH());
        return bn.jC;
    }
    ;
    bn.nK = bn.qM('tablenum', 54, 290);
    bn.nA = bn.qM('code1', 54, 470);
    bn.nA.on(""enterKey"", function(bQ) {
        bn.ce(bQ);
    });
    bn.addChild(bn.nK, bn.nA);
    bn.qS = function() {
        bn.kn.removeAllChildren();
        var kP = dI(L.dJ('TIECSU'), 54, 0, 80);
        var lw = dI(L.dJ('TMN'), 48, 50, 230);
        var jG = dI(L.dJ('TCOD'), 48, 50, 410);
        bn.kn.addChild(kP, lw, jG);
        bn.kn.cache(0, 0, 580, 600);
    }
    ;
    bn.ce = function(bQ) {
        if (bn.visible == true) {
            if (bQ.type == 'click') {
                cN.play(16);
            }
            var jE = bn.nK.rm();
            var gu = bn.nA.rm();
            if (jE != '' && gu != '') {
                bn.hide();
                pU(jE, gu);
            }
        }
    }
    ;
    bn.show = function() {
        this.qS();
        bn.nK.empty();
        bn.nA.empty();
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.visible = false;
    }
    ;
    return bn;
}
;function qe() {
    var bn = new oM.MovieClip().set({
        x: 75,
        y: 60,
        visible: false
    });
    bn.fT = sZ().set({
        x: -40,
        y: -40,
        scale: 1.5
    });
    bn.fT.on(""click"", function() {
        cN.play(16);
        be(2)
    });
    bn.addChild(bn.fT);
    var jq = (550 / 2) - (440 / 2);
    bn.hb = j(""OK"").set({
        x: jq,
        y: 410
    });
    bn.hb.on(""click"", function(bQ) {
        bn.ce(bQ);
    });
    bn.addChild(bn.hb);
    bn.kn = new oM.MovieClip();
    bn.addChild(bn.kn);
    bn.pH = function() {
        var gT = new oM.MovieClip();
        var gb = new oM.Shape();
        gb.graphics.setStrokeStyle(1).beginStroke(""#999"").beginFill(""#c7c7c7"").drawRoundRect(0, 0, 340, 54, 5);
        gT.addChild(gb);
        return gT;
    }
    ;
    bn.qM = function(dH, hX, jp) {
        bn.jC = sH(dH).set({
            x: hX,
            y: jp,
            scale: 1.3
        });
        bn.jC.setBounds(new oM.Rectangle(-2,-2,344,58));
        bn.jC.mw(bn.pH());
        return bn.jC;
    }
    ;
    bn.nN = bn.qM('code2', 54, 290);
    bn.nN.on(""enterKey"", function(bQ) {
        bn.ce(bQ);
    });
    bn.addChild(bn.nN);
    bn.qS = function() {
        bn.kn.removeAllChildren();
        var ky = dI(L.dJ('TCUSPJTA'), 54, 0, 80);
        var kN = dI(L.dJ('TCOD'), 48, 50, 230);
        bn.kn.addChild(ky, kN);
        bn.kn.cache(0, 0, 580, 600);
    }
    ;
    bn.ce = function(bQ) {
        if (bn.visible == true) {
            if (bQ.type == 'click') {
                cN.play(16);
            }
            var gu = bn.nN.rm();
            if (gu != '') {
                bn.hide();
                var aW = T(dj.oZ, gu);
                h(aW);
            }
        }
    }
    ;
    bn.show = function() {
        this.qS();
        bn.nN.empty();
        this.visible = true;
    }
    ;
    bn.hide = function() {
        this.visible = false;
    }
    ;
    return bn;
}
;function by() {
    cN.play(16);
    dW.oc();
    eS.show();
}
;function sm() {
    cN.play(16);
    rn();
    eS.show();
}
;function af() {
    cN.play(16);
    dW.oc();
    eS.show();
}
;function dI(aJ, kZ, hX, jp) {
    var dX = new oM.Text(aJ,""bold "" + kZ + ""px Helvetica"",""#333"").set({
        lineWidth: 580,
        x: hX,
        y: jp
    });
    return dX;
}
"
1xPHa6NM,Untitled,steve2982,YAML,Sunday 30th of July 2023 10:50:06 AM CDT,"esphome:
  name: kitchen-basecabinet
  on_boot:
    then:
      - wait_until:
          condition: 
            api.connected:
          timeout: 10s
      - mqtt.publish_json:
          topic: kitchen-basecabinet/status
          payload: |-
            root[""kitchen_water1_state""] = id(kitchen_water1).state;
            root[""greeting""] = ""On_boot api_connected."";

esp8266:
  board: d1_mini
#  restore_from_flash: true

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:

ota:
  password: ""deleted""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Optional manual IP
  manual_ip:
    static_ip: 192.168.4.126
    gateway: 192.168.4.1
    subnet: 255.255.255.0

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""kitchen-basecabinet Hotspot""
    password: ""deleted""

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password
  discovery_prefix: homeassistant
  
captive_portal:

globals:
  - id: end_pulse_count
    type: float
    restore_value: no
    initial_value: '0'
   
# Text sensors with general information.
text_sensor:
  - platform: wifi_info
    ip_address:
      name: kitchen_basecabinet_ip

# Sensors with general information.
sensor:
  - platform: uptime
    name: kitchen_basecabinet_uptime
    update_interval: 600s
    expire_after: 660s

  - platform: homeassistant
    name: ""Requested Amount""
    id: ""requested_amount""
    entity_id: input_number.water_amount
    on_value:
      then:
        - mqtt.publish_json:
            topic: kitchen-basecabinet/status
            payload: |-
              root[""requested_amount""] = id(requested_amount).state;
              root[""greeting""] = ""New amount detected."";
        - sensor.template.publish:
            id: ""requested_amount_sensor""
            state: !lambda 'return id(requested_amount).state;'
      
  - platform: template
    name: ""Requested Amount Sensor""
    id: ""requested_amount_sensor""
    lambda: !lambda |-
      return id(requested_amount).state;

  - platform: pulse_counter
    pin: D5
    name: ""Pulse Rate"" 
    update_interval: 100ms
    unit_of_measurement: 'pulses/min'
    filters:
      - or:
        - throttle: 30s
        - delta: 1.0
    total:
      unit_of_measurement: 'pulses'
      name: 'pulses counted'
      id: ""pulses_counted""
      filters:
        - multiply: 1  
        - or:
          - throttle: 30s
          - delta: 1.0


switch:
  - platform: gpio
    name: ""kitchen_water1""
    id: ""kitchen_water1""
    pin:
      number: D6
      inverted: true
    on_turn_on:
      then:
        - mqtt.publish_json:
            topic: kitchen-basecabinet/status
            payload: |-
              root[""kitchen_water1_state""] = id(kitchen_water1).state;
              root[""pulses_counted_state""] = id(pulses_counted).state;
              root[""greeting""] = ""Switch turn_on detected."";
    on_turn_off:
      then:
        - mqtt.publish_json:
            topic: kitchen-basecabinet/status
            payload: |-
              root[""kitchen_water1_state""] = id(kitchen_water1).state;
              root[""pulses_counted_state""] = id(pulses_counted).state;
              root[""greeting""] = ""Switch turn_off detected."";
    
  - platform: restart
    name: ""kitchen_basecabinet Restart""
    
# Button      
binary_sensor:
  - platform: gpio
    pin: 
      number: D7
      mode: INPUT_PULLUP
      inverted: True
    name: ""button1""
    on_press:
      then:
        - if:
            condition:
              switch.is_on: kitchen_water1
            then:
              - switch.turn_off: kitchen_water1
              - mqtt.publish_json:
                  topic: kitchen-basecabinet/status
                  payload: |-
                    root[""kitchen_water1_state""] = id(kitchen_water1).state;
                    root[""pulses_counted_state""] = id(pulses_counted).state;
                    root[""greeting""] = ""Water turned off by button press."";


            else:
              - lambda: |-
                  ESP_LOGD(""main"", ""Starting pulses (.state) equals %f"", id(pulses_counted).state);
              - lambda: |-
                  ESP_LOGD(""main"", ""Requested amount equals %f"", id(requested_amount).state);
              - globals.set:
                  id: end_pulse_count
                  value: !lambda return (id(pulses_counted).state) + (id(requested_amount).state);
              - switch.turn_on: kitchen_water1
              - mqtt.publish_json:
                  topic: kitchen-basecabinet/status
                  payload: |-
                    root[""kitchen_water1_state""] = id(kitchen_water1).state;
                    root[""greeting""] = ""Water turned on by button press."";
              - lambda: |-
                  ESP_LOGD(""main"", ""Stopping pulses equals %f"", id(end_pulse_count));
              - wait_until:
                  condition: 
                    lambda:  |-
                      return id(pulses_counted).state >= id(end_pulse_count);
              - mqtt.publish_json:
                  topic: kitchen-basecabinet/status
                  payload: |-
                    root[""kitchen_water1_state""] = id(kitchen_water1).state;
                    root[""pulses_counted_state""] = id(pulses_counted).state;
                    root[""greeting""] = ""Pulse count reached."";
              - lambda: |-
                  ESP_LOGD(""main"", ""Stopping pulses (wait until) equals %f"", id(end_pulse_count));
              - switch.turn_off: kitchen_water1
              - mqtt.publish_json:
                  topic: kitchen-basecabinet/status
                  payload: |-
                    root[""kitchen_water1_state""] = id(kitchen_water1).state;
                    root[""pulses_counted_state""] = id(pulses_counted).state;
                    root[""greeting""] = ""Water turned off when pulse count reached."";
"
iVyaM4Qw,PS script for backup (RUS),Vitya031,PowerShell,Sunday 30th of July 2023 10:44:47 AM CDT,"# Чтение настроек из конфигурационного файла
if ($args.Length -lt 1) {
    Write-Host ""Ошибка: Не указан путь к конфигурационному файлу.""
    exit 1
}

$configFile = $args[0]
$config = @{}
foreach ($line in Get-Content $configFile) {
    $key, $value = $line.Split('=')
    $config[$key.Trim()] = $value.Trim()
}


# Проверка существования и доступности конфигурационного файла
if (-Not (Test-Path $configFile -PathType Leaf)) {
    Write-Host ""Ошибка: Конфигурационный файл не найден.""
    exit 1
}

# Создание строки для команды pg_dump
$backupFile = Join-Path $config[""BACKUP_PATH""] ""$($config['BACKUP_PREFIX']).$((Get-Date).ToString('yyyy.MM.dd_HHmmss')).tar.gz""

# Устанавливаем переменную окружения PGPASSWORD перед выполнением команды pg_dump
$env:PGPASSWORD = $config[""DB_PASS""]

$logFileName = ""$($config['BACKUP_PREFIX']).$((Get-Date).ToString('yyyy.MM.dd_HHmmss')).log""
$global:logFile = Join-Path $config[""BACKUP_PATH""] $logFileName

# Функция для логирования сообщений при резервном копировании
function Log-Message {
    param([string]$message)
    $message = ""$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $message""
    Add-Content -Path $global:logFile -Value $message
    Write-Host $message
}

try {
    Log-Message ""Начало процедуры резервного копирования""

    # Выполняем команду pg_dump и перехватываем потоки вывода и ошибок
    $pgDumpOutput = & pg_dump -h $($config['DB_HOST']) -U $($config['DB_USER']) -d $($config['DB_BASE']) -Fc -f $backupFile 2>&1

    # Проверяем код возврата команды (0 обозначает успешное выполнение)
    if ($LASTEXITCODE -ne 0) {
        # Код возврата не равен 0, значит команда завершилась с ошибкой
        Log-Message ""Ошибка при выполнении pg_dump: $pgDumpOutput""
    }

    # Проверяем размер файла резервной копии
    $fileSize = (Get-Item $backupFile).Length
    if ($fileSize -eq 0) {
        # Файл пустой, выводим сообщений в журнал и удаляем его
        Log-Message ""Важно: Резервная копия базы данных не была создана или создана пустой и будет удалена.""
        Remove-Item $backupFile
        exit 1
    } else {
        Log-Message ""Сообщение: Резервная копия базы данных успешно создана и сохранена в $backupFile.""
    }
}
catch [System.Management.Automation.CommandNotFoundException] {
    # Ошибка связана с отсутствием утилиты pg_dump
    Log-Message ""Ошибка: Утилита pg_dump не найдена.""
    exit 1
}
catch {
    # Остальные необработанные ошибки
    Log-Message ""Ошибка: Не удалось подключиться к базе данных PostgreSQL или создать резервную копию. $_""
    exit 1
}
finally {
    # Сбрасываем переменную окружения PGPASSWORD
    $env:PGPASSWORD = $null
    Log-Message ""Окончание процедуры резервного копирования""

    # Удаление лишних резервных копий, если их количество превышает BACKUP_COUNT. (Логи сохраняются)
    $backupFiles = Get-ChildItem $config[""BACKUP_PATH""] | Where-Object { $_.Name -match ""^$($config['BACKUP_PREFIX'])\.\d{4}\.\d{2}\.\d{2}_\d{6}\.tar\.gz$"" } | Sort-Object CreationTime -Descending
    if ($backupFiles.Count -gt [int]$config[""BACKUP_COUNT""]) {
        Log-Message ""Сообщение: Недостаточно свободного места. Превышено максимальное количество резервных копий. Удаляются старые копии.""
        $backupFilesToDelete = $backupFiles | Select-Object -Skip ([int]$config[""BACKUP_COUNT""])
        $backupFilesToDelete | ForEach-Object {
            Remove-Item $_.FullName -Force
        }
}
}


"
r015dHdH,Untitled,Astral_Rider,C++,Sunday 30th of July 2023 10:22:07 AM CDT,"#include <bits/stdc++.h>
using namespace std;

// # U320678 无聊的分块 I

using i64 = long long;

// 每个 deque 相当于分块中的一个块

const int maxn = 1e5 + 5,
          S = 500, // deque 数量
    sz = 500,      // 每个 deque 的元素数量 (接近 2 * sqrt n, 可能内存关系, 比开 sqrt n ，也就是比 350 快)
    INF = 1e9;

int _inside_cnt = 0; // 所有的 deque 的元素计数
deque<int> block[500 + 5];

void add(int x)
{
    ++_inside_cnt;

    int t = 1;
    int to_push = INF;

    while (t < S) // 尝试从第 t 个块开始往后找一个块插入，因为只有 sqrtn 个块，最多找 sqrtn次
    {
        if (!block[t].size())                      // 如果某个块是空的，那么直接在最后插入， O1
            return void(block[t].emplace_back(x)); // 插完就 return

        if (block[t].back() >= x || block[t].size() < sz)
        { // 如果某个 deque 的最大值>=x 或这个块没有满，二分地插入，O( log(sqrtn) ) <= sqrtn
            block[t].insert(lower_bound(block[t].begin(), block[t].end(), x), x);

            if (block[t].size() > sz)                           // 如果这个 deque 的数量超过了上限，把末尾多的往后面的 deque 移
                to_push = block[t].back(), block[t].pop_back(); // 这个操作 O1

            break;
        }

        t++;
    }

    t++;

    while (t < S && to_push != INF) // 把刚刚多的元素往后移
    {
        block[t].emplace_front(to_push);

        if (block[t].size() > sz) // 如果移完以后，接受了元素的 deque 的超过大小，继续循环地往后移
                                  // 由于最多有 sqrtn 个 deque，这个操作总共不超过 sqrtn 次
            to_push = block[t].back(), block[t].pop_back();
        else
            return;

        t++;
    }
}
int get(int kth)
{
    if (kth <= 0) // 实际上数据不会出现这个情况
        return block[1].front();

    // 已知每个 deque 块长，可以直接求出第 k 个元素在 b 个 deque 的 p 处，即 block[b][p]
    const int upper_b = (_inside_cnt - 1) / sz + 1;
    const int b = (kth - 1) / sz + 1,
              p = (kth - 1) % sz;

    return (kth > _inside_cnt) // // 实际上数据不会出现这个情况
               ? block[upper_b].back()
               : block[b][p];
}

int main()
{

    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

    i64 last = 0;

    int n, q;
    cin >> n >> q;

    _inside_cnt = n;

    int z = 1, cnt = 0;
    for (int i = 1; i <= n; i++)
    {
        int t;
        cin >> t;

        block[z].emplace_back(t);
        cnt++;

        if (cnt == sz)
            z++, cnt = 0;
    }

    while (q--)
    {
        int op, x;
        cin >> op >> x;

        if (op == 1)
            add(x);
        else if (op == 2)
            last ^= get(x);
    }

    cout << last << '\n';

    // system(""Pause"");
    return 0;
}"
Mundgx4L,Untitled,phpface,PHP,Sunday 30th of July 2023 10:16:03 AM CDT,"add_filter( 'gettext_streamtube', function( $translation, $text, $domain ){
 
    if( $text == 'Sign In' ){
        $translation = 'Sign In/Up';
    }
 
    return $translation;
 
}, 10, 3 );"
5gSRhq8N,problemOne,CR7CR7,C++,Sunday 30th of July 2023 10:11:31 AM CDT,"//User function Template for C++



class Solution {
public:
    int maximumNumber(int N) {
        string num = to_string(N);
        bool replaced = false;
        for (int i = 0; i < num.length(); i++) {
            if (num[i] == '7' && !replaced) {
                num[i] = '9';
                replaced = true;
            } else if (num[i] == '7' && replaced) {
                break;
            }
        }
        return stoi(num);
    }
};
"
MyjrcVsQ,taskThree,CR7CR7,Java,Sunday 30th of July 2023 10:03:22 AM CDT,"//User function Template for C++



class Solution {
public:
    int TotalPairs(vector<int>& nums, int x, int y) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int count = 0;
        for (int i = 0; i < n; i++) {
            int lo = i + 1, hi = n - 1, idx = n;
            while (lo <= hi) {
                int mid = (lo + hi) / 2;
                if (nums[i] * nums[mid] >= x) {
                    idx = mid;
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            }
            if (idx == n) {
                continue;
            }
            int lo2 = i + 1, hi2 = n - 1, idx2 = -1;
            while (lo2 <= hi2) {
                int mid2 = (lo2 + hi2) / 2;
                if (nums[i] * nums[mid2] > y) {
                    hi2 = mid2 - 1;
                } else {
                    idx2 = mid2;
                    lo2 = mid2 + 1;
                }
            }
            if (idx2 == -1) {
                continue;
            }
            count += (idx2 - idx + 1);
        }
        return count;
    }
};


"
wSsQUDXn,Untitled,smj007,Python,Sunday 30th of July 2023 09:59:41 AM CDT,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
""""""
Approach 2: Iteration

Intuition

We can achieve the same idea via iteration by assuming that l1 is entirely
less than l2 and processing the elements one-by-one, inserting elements of
l2 in the necessary places in l1.

Algorithm

First, we set up a false ""prehead"" node that allows us to easily return the
head of the merged list later. We also maintain a prev pointer, which
points to the current node for which we are considering adjusting its next
pointer. Then, we do the following until at least one of l1 and l2 points
to null: if the value at l1 is less than or equal to the value at l2,
then we connect l1 to the previous node and increment l1. Otherwise, we
do the same, but for l2. Then, regardless of which list we connected, we
increment prev to keep it one step behind one of our list heads.

After the loop terminates, at most one of l1 and l2 is non-null.
Therefore (because the input lists were in sorted order), if either list is
non-null, it contains only elements greater than all of the
previously-merged elements. This means that we can simply connect the
non-null list to the merged list and return it.

""""""

To see this in action on an example, check out the animation below:

class Solution:
    def mergeTwoLists(self, first: Optional[ListNode], second: Optional[ListNode]) -> Optional[ListNode]:

        dummy = ListNode(-101)
        temp = dummy

        while(first and second):
            if first.val <= second.val:
                dummy.next = first
                first = first.next
            else:
                dummy.next = second
                second = second.next
            dummy = dummy.next
            
        if not first:
            dummy.next = second

        if not second:
            dummy.next = first

        return temp.next
"
knuD4nZP,Page 8,MagmaLP,Lua,Sunday 30th of July 2023 09:55:05 AM CDT,"local printer = peripheral.wrap(""bottom"")
 
function msg(gap, line, text) 
    printer.setCursorPos(gap,line)
    text = printer.write(text)
end 
 
if printer.newPage() then
	msg(01,02,""Advantages:              "")
    msg(01,03,""~~~~~~~~~~~              "")
    msg(01,04,""Bypassing the AFK kick is"")
    msg(01,05,""not permitted in any way."")
    msg(01,06,"""")
    msg(01,07,""The use of landmarks is  "")
    msg(01,08,""only allowed for your    "")
    msg(01,09,""own quarry."")
    msg(01,10,"""")
    msg(01,11,""Completing achievements  "")
    msg(01,12,""deceptively is not       "")
    msg(01,13,""allowed and will be      "")
	msg(01,14,""punished."")
    msg(01,15,"""")
    msg(01,16,""Asking and selling hints,"")
    msg(01,17,""information or complete  "")
    msg(01,18,""solutions for puzzle     "")
    msg(01,19,""achievements is          "")
    msg(01,20,""prohibited!"")
    
    msg(19,21,""Page  8"")
    printer.setPageTitle(""Page 8"")
    printer.endPage()
else
    error(""Page could not be created."")
end"
KPjexKSU,Untitled,smj007,Python,Sunday 30th of July 2023 09:49:05 AM CDT,"""""""
Time complexity: O(n+m)

We are performing n+2⋅mn + 2 \cdot mn+2⋅m reads and n+2⋅mn + 2 \cdot mn+2⋅m writes. Because constants are ignored in Big O notation, this gives us a time complexity of O(n+m)\mathcal{O}(n + m)O(n+m).

Space complexity: O(m)
We are allocating an additional array of length mmm.
""""""

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """"""
        Do not return anything, modify nums1 in-place instead.
        """"""

        nums3 = nums1[:m]
        first = 0
        second = 0
        third = 0

        while (first < n+m):
            if ((second <n and third < m) and nums3[third] <= nums2[second]) or second>=n:
                nums1[first] = nums3[third]
                third += 1
            elif ((second < n and third < m) and nums3[third] > nums2[second]) or first>=m:
                nums1[first] = nums2[second]
                second += 1
            first += 1

"
CPxnCEMS,GateControl,Izeek182,Lua,Sunday 30th of July 2023 09:44:41 AM CDT,"
local portalCenter = {774, 39, 801}

local particles = {
    {""minecraft:cloud"",300},
    {""mekanism:jetpack"",100},
    {""minecraft:sonic_boom"",50},
}

local function summonEffect(effect,radius,speed,count)
    local pos = portalCenter[1]-(radius[1]/2).."" ""..portalCenter[2].."" ""..portalCenter[3]
    local delta = radius[1].."" ""..radius[2].."" ""..radius[3]
    local cmd = ""particle ""..effect.."" ""..pos.."" ""..delta.."" ""..speed.."" ""..count
    -- print(cmd)
    local result,err =exec(cmd)
    -- print(result)
    if not result then
        print(err)
    end
end

local function openNether()
    exec(""setblock 776 33 795 minecraft:fire"")
end

local function closeNether()
    exec(""setblock 776 33 795 minecraft:air"")
end

local function startPortalSquence()
    for i = 1, 10, 1 do
        for index, value in ipairs(particles) do
            summonEffect(value[1],{i,3,3},0.05,value[2])
            sleep(0.01)
        end
    end
    openNether()
end

local modem = peripheral.wrap(""top"")
modem.open(4)  -- Open channel 3 so that we can listen on it

while true do
    local event, mSide, SrcCh, 
      repCh, msg, dist = os.pullEvent(""modem_message"")
    print(""msg:""..msg)
    if(msg == ""open"") then
        startPortalSquence()
    elseif msg == ""close"" then
        closeNether()
    end
end


"
