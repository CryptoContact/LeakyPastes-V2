id,title,username,language,date,content
PzdD1LwT,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Saturday 17th of February 2024 11:40:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_278590.pdf
 
Working as of
17 February 2024"
3ZAMV4ii,While solutions,LEGEND2004,C++,Saturday 17th of February 2024 11:27:59 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    // A
    /*
    int a , b;
    cin >> a >> b;
    int i = a;
    while(i <= b){
        cout << i << "" "";
        i++;
    }
    */
    // B
    /*
    int n , cnt = 0;
    cin >> n;
    if(n == 0){
        cout << 1;
        return 0;
    }
    while(n){
        cnt++;
        n /= 10;
    }
    cout << cnt;
    */
    // C
    /*
    int n , sum = 0;
    cin >> n;
    n = abs(n);
    while(n){
        sum += n % 10;
        n /= 10;
    }
    cout << sum;
    */
    // D
    /*
    long long n , odd = 0;
    cin >> n;
    while(n){
        odd += n % 2;
        n /= 10;
    }
    cout << odd;
    */
    // E
    /*
    int n , p = 1;
    cin >> n;
    while(n){
        if(n % 10)
            p *= n % 10;
        n /= 10;
    }
    cout << p;
    */
    // F
    /*
    int n , p = 1;
    cin >> n;
    n = abs(n);
    if(n == 0){
        cout << 0;
        return 0;
    }
    while(n){
        if(n % 2 == 0)
            p *= n % 10;
        n /= 10;
    }
    if(p == 1)
        cout << ""-1"";
    else
        cout << p;
    */
    // G
    /*
    int n , mx = 0;
    cin >> n;
    while(n != 0){
        mx = max(mx , n % 10);
        n /= 10;
    }
    cout << mx;
    */
    // H
    /*int n , mx = 0;
    cin >> n;
    int old = n;
    while(n != 0){
        mx = max(mx , n % 10);
        n /= 10;
    }
    n = old;
    int cnt = 0;
    while(n){
        if(n % 10 == mx)
            cnt++;
        n /= 10;
    }
    cout << cnt;
    */
    // H
    /*
    int n , mx = 0 , cnt = 0;
    cin >> n;
    while(n){
        int d = n % 10;
        if(mx < d){
            mx = d;
            cnt = 0;
        }
        if(mx == d)
            cnt++;
        n /= 10;
    }
    cout << cnt;
    */
}

"
zUnB45Sk,Untitled,D3ENNY,HTML,Saturday 17th of February 2024 11:27:51 AM CDT,"

<div id=""default-carousel"" class=""relative w-full carousel border border-blue-700"" data-carousel=""slide"">
    <!-- Carousel wrapper -->
    <div class=""relative h-56 overflow-hidden rounded-lg md:h-96"">
         <!-- Item 1 -->
        <div class=""hidden duration-700 ease-in-out"" data-carousel-item>
            <img src=""../../../assets/img/uliveto.png"" class=""absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"" alt=""..."">
        </div>
        <!-- Item 2 -->
        <div class=""hidden duration-700 ease-in-out"" data-carousel-item>
            <img src=""../../../assets/img/uliveto2.jpeg"" class=""absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"" alt=""..."">
        </div>
        <!-- Item 3 -->
        <div class=""hidden duration-700 ease-in-out"" data-carousel-item>
            <img src=""../../../assets/img/uliveto2.jpeg"" class=""absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"" alt=""..."">
        </div>
        <!-- Item 4 -->
        <div class=""hidden duration-700 ease-in-out"" data-carousel-item>
            <img src=""../../../assets/img/uliveto2.jpeg"" class=""absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"" alt=""..."">
        </div>
        <!-- Item 5 -->
        <div class=""hidden duration-700 ease-in-out"" data-carousel-item>
            <img src=""../../../assets/img/uliveto2.jpeg"" class=""absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"" alt=""..."">
        </div>
    </div>
    <!-- Slider controls -->
    <button type=""button"" class=""absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"" data-carousel-prev>
        <span class=""inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"">
            <svg class=""w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"" aria-hidden=""true"" xmlns=""http://www.w3.org/2000/svg"" fill=""none"" viewBox=""0 0 6 10"">
                <path stroke=""currentColor"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 1 1 5l4 4""/>
            </svg>
            <span class=""sr-only"">Previous</span>
        </span>
    </button>
    
    <button type=""button"" class=""absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"" data-carousel-next>
        <span class=""inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"">
            <svg class=""w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"" aria-hidden=""true"" xmlns=""http://www.w3.org/2000/svg"" fill=""none"" viewBox=""0 0 6 10"">
                <path stroke=""currentColor"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""m1 9 4-4-4-4""/>
            </svg>
            <span class=""sr-only"">Next</span>
        </span>
    </button>
</div>
"
MxbfxNbT,Symmetric Reverse Pyramid,treasure363,Python,Saturday 17th of February 2024 11:19:00 AM CDT,"''' Print the following pattern
1*2*3*4*17*18*19*20
  5*6*7*14*15*16
    8*9*12*13
      10*11
'''
n = 8
arr = [[0]*n for i in range(n//2)] # 4x8 matrix
ct = 1

for i in range(n//2):
    for j in range(n//2):
        if j >= i:
            arr[i][j] = ct
            ct += 1

for i in range(n//2-1, -1, -1):
    for j in range(n//2, n, 1):
        if i+j <= 7:
            arr[i-4][j] = ct
            ct += 1

for i in range(n//2):
    s = """"
    for j in arr[i]:
        s += (str(j)+""*"" if j else '  ')
    print(s.rstrip(""* ""))
"
i8GFD1F6,1Month ไอ้ต้าว อ้วน,jamezaa1188,AutoIt,Saturday 17th of February 2024 11:15:52 AM CDT,639DB027-481D-1B2D-3A92-E9E05BBF8CC4
KjMfCp4y,Untitled,Agent74,Python,Saturday 17th of February 2024 11:03:14 AM CDT,"from flask import Flask

app = Flask(__name__)

@app.route(""/"")
def hello_world():
    return ""<p>Hello, World!</p>""
"
F0WYPzXt,Jet's R3D Apple Resigner Source Code,xzlui,Batch,Saturday 17th of February 2024 10:31:14 AM CDT,"REM This tool was created by Jet for the purpose of decompiling/recompiling EBOOT.BIN/.ELF files for PlayStation 3 games. 
REM I am releasing this code with full authorization for the purpose of education.

@shift /0
@shift
@echo off
call data\config
setlocal enabledelayedexpansion
::pushd %temp%
color 0c
set mode=%fw%
title R3D Apple Resigner 2.1.1 [%mode% Mode]
goto globals

:globals
cls
set sid=%random%
set user=%usr%
set curdir=%cd%
set selfctrlflags=4000000000000000000000000000000000000000000000000000000000000002
set selfcapflags=00000000000000000000000000000000000000000000003B0000000100040000
set output=4xxstd
set outputmsg=[4.XX STD]
set elfsdk=41
set keyrev=1C
set fwver=0004002000000000
set ctrlflagswitch=FALSE
set capflagswitch=FALSE
set compress=TRUE
set compressmsg=[ON]
goto init

:init
cls
set selfctrlflags=4000000000000000000000000000000000000000000000000000000000000002
set selfcapflags=00000000000000000000000000000000000000000000003B0000000100040000
set output=4xxstd
set outputmsg=[4.XX STD]
set elfsdk=41
set keyrev=1C
set fwver=0004002000000000
set ctrlflagswitch=FALSE
set capflagswitch=FALSE
set compress=TRUE
set compressmsg=[ON]
goto default_mode

:default_mode
cls
if %mode%==DEX goto dex_menu
if %mode%==CEX goto cex_menu

:dex_menu
if %mode%==CEX goto cex_menu
set mode=DEX
title R3D Apple Resigner 2.1.1 [%mode% Mode]
set opt=NULL
cls
echo WARNING: Be sure that your BIN/ELF is in %cd%
echo.
echo Mode: %mode% // Output: %outputmsg%
echo Type ""/cex"" to change to CEX mode.
echo.
echo ^+================================^+
::echo ^|    R3D Apple Resigner 2.1.1    ^|
echo ^|                 .:'            ^|
echo ^|             __ :'__            ^|
echo ^|          .'^`__^`-'__^`^`.         ^|
echo ^|         ^:____R3D___.-'         ^|
echo ^|         ^:__Apple__:            ^|
echo ^|          ^:__2.1.1__`-;         ^|
echo ^|           ^`.__.-.__.'          ^|
echo ^+================================^+
echo ^|    [1] - Decrypt BIN to ELF    ^|
echo ^|    [2] - Resign NON-DRM        ^|
echo ^|    [3] - Output Option         ^|
echo ^|    [4] - Credits               ^|
echo ^|    [5] - About R3D Apple       ^|
echo ^|    [6] - Exit R3D Apple        ^|
echo ^+================================^+
echo.
set /p opt= %user%@%sid%: 
if %opt%==1 (goto d_dex)
if %opt%==2 (goto disc_dex)
if %opt%==3 (goto outputoption)
if %opt%==4 (goto credits)
if %opt%==5 (goto about)
if %opt%==6 exit
if %opt%==/dex goto error
if %opt%==/DEX goto error
if %opt%==/cex goto change_mode
if %opt%==/CEX goto change_mode
if not %opt%==1 goto error
if not %opt%==2 goto error
if not %opt%==3 goto error
if not %opt%==4 goto error
if not %opt%==5 goto error
if not %opt%==6 goto error
if not %opt%==/cex goto error
if not %opt%==/CEX goto error

:cex_menu
if %mode%==DEX goto dex_menu
set mode=CEX
title R3D Apple Resigner 2.1.1 [%mode% Mode]
set opt=NULL
cls
echo WARNING: Be sure that your BIN/ELF is in %cd%
echo.
echo Mode: %mode% // Output: %outputmsg%
echo Type ""/dex"" to change to DEX mode.
echo.
echo ^+================================^+
::echo ^|    R3D Apple Resigner 2.1.1    ^|
echo ^|                 .:'            ^|
echo ^|             __ :'__            ^|
echo ^|          .'^`__^`-'__^`^`.         ^|
echo ^|         ^:____R3D___.-'         ^|
echo ^|         ^:__Apple__:            ^|
echo ^|          ^:__2.1.1__`-;         ^|
echo ^|           ^`.__.-.__.'          ^|
echo ^+================================^+
echo ^|    [1] - Decrypt BIN to ELF    ^|
echo ^|    [2] - Resign NON-DRM        ^|
echo ^|    [3] - Output Option         ^|
echo ^|    [4] - Credits               ^|
echo ^|    [5] - About R3D Apple       ^|
echo ^|    [6] - Exit R3D Apple        ^|
echo ^+================================^+
echo.
set /p opt= %user%@%sid%: 
if %opt%==1 (goto d_cex)
if %opt%==2 (goto disc_cex)
if %opt%==3 (goto outputoption)
if %opt%==4 (goto credits)
if %opt%==5 (goto about)
if %opt%==6 exit
if %opt%==/cex goto error
if %opt%==/CEX goto error
if %opt%==/dex goto change_mode
if %opt%==/DEX goto change_mode
if not %opt%==1 goto error
if not %opt%==2 goto error
if not %opt%==3 goto error
if not %opt%==4 goto error
if not %opt%==5 goto error
if not %opt%==6 goto error
if not %opt%==/dex goto error
if not %opt%==/DEX goto error
if %opt%==NULL (goto cex_menu)

:d_cex
data\sfk.exe list . .bin>data\list.txt
cls
set /a count=0
for /f %%f in (data\list.txt) do (
set /a count+=1
set a!count!=%%f
if count NEQ 0 (echo  [!count!] %%f )
)
) else (echo Could not find .BINs to list.)
set filesel=NONE
echo.
echo Type ""/q"" to quit decryption.
echo.
set /p filesel=[^^!] Enter # to File: 
echo.
if %filesel%==/q (goto cex_menu)
if %filesel%==/Q (goto cex_menu)
if %filesel% GTR !count! (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto d_cex
)
if %filesel% LSS 1 (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto d_cex
)
set filename=!a%filesel%!
set file=%filename:~0,-4%

if exist %file%.ELF (del %file%.ELF)
echo [*] Decrypting %file%.BIN...
data\scetool.exe --decrypt ""%curdir%\%file%.BIN"" ""%curdir%\%file%.ELF"">nul
if exist %file%.ELF (
echo [*] Decrypted to %file%.ELF
) else (
echo [^^!] Decryption failed.
)
if exist data\list.txt (del data\list.txt)
ping localhost -n 3 >nul
goto cex_menu


:disc_cex
data\sfk.exe list -file .elf>data\list.txt
cls
set /a count=0
for /f %%f in (data\list.txt) do (
set /a count+=1
set a!count!=%%f
if count NEQ 0 (echo  [!count!] %%f )
)
) else (echo Could not find .ELFs to list.)
set filesel=NONE
echo.
echo Type ""/q"" to quit encryption.
echo.
set /p filesel=[^^!] Enter # to File: 
echo.
if %filesel%==/Q (goto cex_menu)
if %filesel%==/q (goto cex_menu)
if %filesel% GTR !count! (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
if %filesel% LSS 1 (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
set filename=!a%filesel%!
set file=%filename:~0,-4%

set CID=
FOR /F ""tokens=1,2 delims= "" %%A IN ('data\scetool.exe -i ""%curdir%\%file%.BIN""') DO (
if [%%A]==[ContentID] set CID=%%B
)
data\FixELF.exe %file%.ELF %elfsdk%
if [%CID%]==[] (
data\scetool.exe -v --sce-type=SELF --compress-data=FALSE --skip-sections=TRUE --key-revision=%keyrev% --self-auth-id=1010000001000003 --self-vendor-id=01000002 --self-type=APP --self-app-version=0001000000000000 --self-fw-version=%fwver% --encrypt ""%curdir%\%file%.ELF"" ""%curdir%\%file%.BIN"" >nul
echo [*] Encrypted to %file%.BIN. ) ELSE (
echo ContentID = %CID%
data\scetool.exe -v --sce-type=SELF --compress-data=FALSE --skip-sections=TRUE --key-revision=%keyrev% --self-auth-id=1010000001000003 --self-add-shdrs=TRUE --self-vendor-id=01000002 --self-type=NPDRM --self-app-version=0001000000000000 --self-fw-version=%fwver% --np-license-type=FREE --np-content-id=%CID% --np-app-type=EXEC --np-real-file=%file%.BIN --encrypt ""%curdir%\%file%.ELF"" ""%curdir%\%file%.BIN"" >nul
echo [*] Encrypted to %file%.BIN. )
::del ""%curdir%\%file%.BIN.BAK"">nul
ping localhost -n 3 >nul
goto cex_menu

:d_dex
data\sfk.exe list -file .bin>data\list.txt
cls
set /a count=0
for /f %%f in (data\list.txt) do (
set /a count+=1
set a!count!=%%f
if count NEQ 0 (echo  [!count!] %%f )
)
) else (echo Could not find .ELFs to list.)
set filesel=NONE
echo.
echo Type ""/q"" to quit decryption.
echo.
set /p filesel=[^^!] Enter # to File: 
echo.
if %filesel%==/Q (goto dex_menu)
if %filesel%==/q (goto dex_menu)
if %filesel% GTR !count! (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
if %filesel% LSS 1 (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
set filename=!a%filesel%!
set file=%filename:~0,-4%

if not exist %file%.BIN (
echo [^^!] %file%.BIN can't be found.
ping localhost -n 3 >nul
goto dex_menu
)
if exist %file%.ELF (del %file%.ELF)
echo [*] Decrypting %file%.BIN...
data\unfself ""%curdir%\%file%.BIN"" ""%curdir%\%file%.ELF"">nul
if exist %file%.ELF (
echo [*] Decrypted to %file%.ELF
) else (
echo [^^!] Decryption failed.
)
ping localhost -n 3 >nul
goto dex_menu

:disc_dex
data\sfk.exe list -file .elf>data\list.txt
cls
set /a count=0
for /f %%f in (data\list.txt) do (
set /a count+=1
set a!count!=%%f
if count NEQ 0 (echo  [!count!] %%f )
)
) else (echo Could not find .ELFs to list.)
set filesel=NONE
echo.
echo Type ""/q"" to quit encryption.
echo.
set /p filesel=[^^!] Enter # to File: 
echo.
if %filesel%==/Q (goto dex_menu)
if %filesel%==/q (goto dex_menu)
if %filesel% GTR !count! (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
if %filesel% LSS 1 (
echo [^^!] Invalid Input.
ping localhost -n 3 >nul
goto disc_cex
)
set filename=!a%filesel%!
set file=%filename:~0,-4%

set autoresign=FALSE
if not exist %file%.BIN (
if not exist %file%.ELF (
echo [^^!] %file%.BIN/ELF can't be found.
ping localhost -n 3 >nul
goto dex_menu
)
)
if not exist %file%.ELF (
echo [*] Decrypting %file%.BIN...
data\scetool.exe --decrypt ""%curdir%\%file%.BIN"" ""%curdir%\%file%.ELF"">nul
set autoresign=TRUE
)
if not exist %file%.ELF (
echo [^^!] Decryption failed.
ping localhost -n 3 >nul
goto dex_menu
)
if exist %file%.BIN (
if exist %file%.BIN.BAK (del %file%.BIN.BAK)
ren %file%.BIN %file%.BIN.BAK
)
echo [*] Patching %file%.ELF...
data\FixELF ""%curdir%\%file%.ELF""
echo [*] Encrypting %file%.ELF...
data\make_fself ""%curdir%\%file%.ELF"" ""%curdir%\%file%.BIN"">nul
if %autoresign%==TRUE (del %file%.ELF)
echo [*] Encrypted to %file%.BIN
del %file%.BIN.BAK>nul
ping localhost -n 3 >nul
goto dex_menu

:outputoption
if %output%==4xxstd (
set output=4xxalt
set outputmsg=[4.XX ALT]
set elfsdk=41
set keyrev=1C
set fwver=0004002000000000
set ctrlflagswitch=TRUE
set capflagswitch=FALSE
echo.
echo [*] Output set to 4.XX ALT.
ping localhost -n 2 >nul
goto default_mode
)
if %output%==4xxalt (
set output=4xxode
set outputmsg=[4.XX ODE]
set elfsdk=33
set keyrev=0A
set fwver=0003005500000000
set ctrlflagswitch=FALSE
set capflagswitch=TRUE
echo.
echo [*] Output set to 4.XX ODE.
ping localhost -n 2 >nul
goto default_mode
)
if %output%==4xxode (
set output=3xxstd
set outputmsg=[3.XX STD]
set elfsdk=33
set keyrev=04
set fwver=0003004000000000
set ctrlflagswitch=FALSE
set capflagswitch=FALSE
echo.
echo [*] Output set to 3.XX STD.
ping localhost -n 2 >nul
goto default_mode
)
if %output%==3xxstd (
set output=3xxalt
set outputmsg=[3.XX ALT]
set elfsdk=33
set keyrev=04
set fwver=0003004000000000
set ctrlflagswitch=TRUE
set capflagswitch=FALSE
echo [*] Output set to 3.XX ALT.
echo.
ping localhost -n 2 >nul
goto default_mode
)
if %output%==3xxalt (
set output=4xxstd
set outputmsg=[4.XX STD]
set elfsdk=41
set keyrev=1C
set fwver=0004002000000000
set ctrlflagswitch=FALSE
set capflagswitch=FALSE
echo.
echo [*] Output set to 4.XX STD.
ping localhost -n 2 >nul
goto default_mode
)

:change_mode
if %opt%==/cex goto set_cex
if %opt%==/CEX goto set_cex
if %opt%==/dex goto set_dex
if %opt%==/DEX goto set_dex
:set_cex
set mode=CEX
echo.
echo CEX mode enabled.
ping localhost -n 2 >nul
goto cex_menu
:set_dex
set mode=DEX
echo.
echo DEX mode enabled.
ping localhost -n 2 >nul
goto dex_menu

:error
echo.
if %opt%==/cex goto fw_error
if %opt%==/CEX goto fw_error
if %opt%==/dex goto fw_error
if %opt%==/DEX echo fw_error
if %mode%==CEX echo [^^!] ""%opt%"" is not a valid option.
if %mode%==DEX echo [^^!] ""%opt%"" is not a valid option.
ping localhost -n 3 >nul
goto default_mode
:fw_error
if %opt%==/cex echo [^^!] CEX mode is already enabled.
if %opt%==/CEX echo [^^!] CEX mode is already enabled.
if %opt%==/dex echo [^^!] DEX mode is already enabled.
if %opt%==/DEX echo [^^!] DEX mode is already enabled.
ping localhost -n 3 >nul
goto default_mode

:about
echo.
echo R3D Apple is a resigning tool developed to quickly and simply encrypt/decrypt EBOOTs.
echo.
echo Waiting on %user%...
pause >nul
goto default_mode

:credits
cls
echo R3D Apple Resigner developed by Jet
echo Released Sept. 22, 2016
echo NGU: TrippinOnACID
echo RG: Jet
echo.
echo Shout out to Trojan and Krank
echo.
echo Waiting on %user%...
pause >nul
goto default_mode
"
C4xUCTsD,1M,jamezaa1188,AutoIt,Saturday 17th of February 2024 10:23:34 AM CDT,0B3EC139-0B41-D8A2-4EFB-83CC89EE21C6
5UXjH4YD,Skinusonline,Shiko5303,Lua,Saturday 17th of February 2024 10:22:16 AM CDT,"if (gg.PACKAGE == 'com.gg.oobe') then else
gg.alert(""Only GG OOBE"")
os.exit()
end
ebal_rot = {'0','1','2','3','4','5','6','7','8','9','10','11'}

if gg.isPackageInstalled(""com.gg.oobe"") then else
os.exit()
end
gg.clearResults(true)
if gg.getTargetPackage() == ""com.rexetstudio.blockstrike"" then else 
gg.alert(""error process"")
os.exit()
end

function skin2() gg.toast(""update ~ 17.02.2024 ~"")
 gg.setRanges(gg.REGION_ANONYMOUS)
 gg.clearResults(true)
  SKAS = gg.choice({
    ""Set Skin"",
    ""Credits"",
	""Exit"",
  }, nil, ""Script By Shinden | 7.7.9 |"")
  if SKAS == 1 then skinplayer() end
  if SKAS == 2 then credit() end
  if SKAS == 3 then gg.clearResults(true) exit()
  end
 end

function exit()
os.exit()
end

function skinplayer() gg.toast(""syntax: 0/217..\n172/217.."")
gg.sleep(900)
 filst5 = gg.choice({
""Red"", -- -2
""Blue"", -- -1
""Atlas"", --0
""Hyper"", --1
""Dredd"", --2
""Alan"", --4
""Zombie 001"", --5
""Zombie 002"", --6
""Zombie 003"", --7
""Zombie 004"", --8
""Atlas red"", --9
""Hyper red"", --10
""Dredd red"", --11
""White red"", --12
""Alan red"", --13
""Fan men"", --14
""Lana"", --15
""Bella"", --16
""Tom"", --17
""Tom red"", --18
""Yoba cola"", --19
""Circle"", --20
""Triangle"", --21
""Square"", --22
""Zombie 005"", --23
""Zombie 006"", --24
""Coffin"", --25
""Barrel"", --26
""Brian"", --27
""Brian red"", --28
""Zombie 007"", --29
""Joe"", --30
""Joe red"", --31
""T-1337"", --32
""Box men"", --33
""Zombie 008"", --34
""Bob"", --35
""Bob red"", --36
""Fire ghost"", --37
""Microvawe Men"", --38
""My Team"", --39
""Snowman"", --40
""Present"", --41
""Danny"", --42
""Danny red"", --43
""Christmas Tree"", --44
""Zombie 009"", --45
""Minenoob"", --46
""Default Christmas"", --47
""Default Christmas red"", --48
""Old 7 year"", --49
""Old 7 year red"", --50
""7 year"", --51
""Barrel Christmas"", --52
""Ghost"", --53
""Ghost red"", --54
""Ghost2"", --55
""Santa Claus"", --56
""Christmas Toy"", --57
""Christmas Candle"", --58
""Zombie 009-1"", --59
""Zombie 000-1"", --60
""Bottle"", --61
""Physicist"", --62
""Green Skull"", --63
""Boombox Men"", --64
""Emma"", --65
""Agnes red"", --66
""Zombie 010"", --67
""Devil Guy"", --68
""Footballer Blue"", --69
""Footballer red"", --70
""Oliver"", --71
""Oliver red"", --72
""Harry"", --73
""Harry red"", --74
""Alice"", --75
""Alice red"", --76
""Morgen"", --77
""Morgen red"", --78
""Teen ninja"", --79
""Captain Pete"", --80
""Samurai"", --81
""Zombie 011"", --82
""Agent Team 1"", --83
""Agent Team 1 red"", --84
""Mary"", --85
""Mary red"", --86
""Crazy Men"", --87
""Shadow"", --88
""Electricity"", --89
""Sally"", --90
""Agent Team 2"", --91
""Agent Team 2 red"", --92
""Agent Team 3"", --93
""Agent Team 3 red"", --94
""Ninja"", --95
""Fire Men"", --96
""Ice Men"", --97
""Bubble"", --98
""Chief"", --99
""Securiti"", --100
""Securiti red"", --101
""Patrick"", --102
""Patrick red"", --103
""Cowboy"", --104
""Gardener"", --105
""Grandpa Harvey"", --106
""Mikhail"", --107
""Petrovich"", --108
""Zubenko"", --109
""Scout"", --110
""Scout red"", --111
""Fermer"", --112
""Ghost Legacy"", --113
""Ghost Legacy2"", --114
""Ghost Legacy red"", --115
""Ghost Legacy zombie"", --116
""Agent Team 4"", --117
""Agent Team 4 red"", --118
""Eliminater red"", --119
""Eliminater"", --120
""Clown"", --121
""Toxic Zombie"", --122
""Fake zombie"", --123
""Fake zombie red"", --124
""Chemistry Teacher"", --125
""Fan women"", --126+++++++++
""Sprunk"",--127
""Cameraman"",--128
""Juggernaut"",--129
""Prime 2023"",--130
""Prime 2023 girl"",--131
""Speakerman"",--132
""TVman"",--133
""Plunger Cameraman"",--134
""Skibidi Toilet"",--135
""Camerawoman"",--136
""TVwoman"",--137
""Player Legacy"",--138
""Player Legacy red"",--139
""Player Legacy#2"",--140
""Player Legacy#2 red"",--141
""Player Legacy#3"",--142
""Player Legacy#3 red"",--143
""Player Legacy#4"",--144
""Player Legacy#4 ref"",--145
""Player Legacy#5"",--146
""Player Legacy#5 red"",--147
""Player Legacy#6"",--148
""Player Legacy#6 red"",--149
""Zombie Legacy"",--150
""Slender"",--151
""Y0BA"",--152
""Negative"",--153
""Negative red"",--154
""Jason"",--155
""Clown Dave"",--156
""Ghostbusters"",--157
""Myers"",--158
""Nuke Soldier red"",--159
""Nuke Soldier"",--160
""Witch"",--161
""Scarecrow"",--162
""Skeleton"",--163
""Player № 028"",--164
""Player № 067"",--165
""Player № 228"",--166
""Player № 1337"",--167
""Player № 007"",--168
""Crying Girl"",--169
""Zombie Yoba Cola"",--170
""Zombie Barrel"",--171
""Saw"",--172
""Craftplay"",--173
""Old 8 year red"",--174
""Old 8 year"",--175
""8 year"",--176
""Anonymous"",--177
""Death skull v1"",--178
""Death skull v2"",--179
""Death skull v3 red"",--180
""Ghost Universal zombie"",--181
""Ghost Universal red"",--182
""Ghost Universal blue"",--183
""Ghost Universal"",--184
""No Face"",--185
""No Face red"",--186
""Thomas"",--187
""Thomas red"",--188
""Jack"",--189
""Jack red"",--190
""Agent Team 4"",--191
""Agent Team 4 blue"",--192
""Agent Team 4 red"",--193
""Soldier"",--194
""Soldier red"",--195
""Cookie Man"",--196
""Cookie Man red"",--197
""Ghost Alpha"",--198
""Ghost Alpha blue"",--199
""Ghost Alpha red"",--200
""New Year Elf"",--201
""Eskimos red"",--202
""Eskimos"",--203
""Snowmen"",--204
""Zombie 012"",--205
""Cold Player"",--206
""Zombie Cold"",--207
""Charley"",--208
""Irma"",--209
""Sweater"",--210
""Sweater red"",--211
""Santa Yoba"",--212
""Anti Yoba"",--213
""VIP team"",--214
""ʙᴀᴄᴋ"",
  }, nil, ""Select Skin Player"")
  
  --h 00 00 00 00 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00 C8 C5 B9 68
  
  if filst5 == 1 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""-2X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""-2X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.toast(""Skin loaded"")
gg.clearResults(true)
end
if filst5 == 2 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""-1X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""-1X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.toast(""Skin loaded"")
gg.clearResults(true)
end

if filst5 == 3 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""0X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""0X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 4 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""1X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""1X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 5 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""2X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""2X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 6 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""4X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""4X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 7 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""5X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""5X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 8 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""6X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""6X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 9 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""7X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""7X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 10 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""8X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""8X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 11 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""9X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""9X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 12 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""10X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""10X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 13 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""11X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""11X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 14 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""12X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""12X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 15 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""13X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""13X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 16 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""14X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""14X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 17 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""15X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""15X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 18 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""16X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""16X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 19 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""17X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""17X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 20 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""18X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""18X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 21 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""19X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""19X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 22 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""20X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""20X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 23 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""21X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""21X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 24 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""22X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""22X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 25 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""23X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""23X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 26 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""24X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""24X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 27 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""25X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""25X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 28 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""26X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""26X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 29 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""27X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""27X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 30 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""28X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""28X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 31 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""29X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""29X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 32 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""30X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""30X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 33 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""31X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""31X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 34 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""32X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""32X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 35 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""33X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""33X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 36 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""34X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""34X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 37 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""35X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""35X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 38 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""36X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""36X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 39 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""37X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""37X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 40 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""38X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""38X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 41 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""39X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""39X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 42 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""40X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""40X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 43 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""41X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""41X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 44 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""42X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""42X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 45 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""43X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""43X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 46 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""44X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""44X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 47 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""45X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""45X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 48 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""46X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""46X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 49 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""47X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""47X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 50 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""49X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""48X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 51 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""49X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""49X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 52 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""50X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""50X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 53 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""51X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""51X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 54 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""52X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""52X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 55 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""53X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""52X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 56 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""54X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""54X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 57 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""55X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""55X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 58 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""56X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""56X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 59 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""57X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""57X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 60 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""58X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""58X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 61 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""59X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""59X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 62 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""60X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""60X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 63 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""61X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""61X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 64 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""62X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""62X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 65 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""63X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""63X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 66 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""64X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""64X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 67 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""65X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""65X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 68 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""66X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""66X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 69 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""67X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""67X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 70 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""68X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""68X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 71 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""69X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""69X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 72 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""70X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""70X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 73 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""71X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""71X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 74 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""72X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""72X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 75 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""73X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""73X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 76 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""74X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""74X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 77 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""75X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""75X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 78 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""76X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""76X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 79 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""77X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""77X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 80 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""78X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""78X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 81 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""79X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""79X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 82 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""80X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""80X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 83 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""81X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""81X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 84 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""82X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""82X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 85 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""83X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""83X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 86 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""84X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""84X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 87 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""85X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""85X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 88 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""86X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""86X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 89 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""87X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""87X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 90 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""88X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""88X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 91 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""89X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""89X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 92 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""90X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""90X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 93 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""91X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""91X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 94 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""92X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""92X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 95 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""93X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""93X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 96 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""94X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""94X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 97 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""95X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""95X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 98 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""96X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""96X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 99 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""97X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""97X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 100 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""98X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""98X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 101 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""99X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""99X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 102 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""100X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""100X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 103 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""101X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""101X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 104 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""102X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""102X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 105 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""103X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""103X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 106 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""104X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""104X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 107 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""105X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""105X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 108 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""106X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""106X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 109 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""107X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""107X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 110 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""108X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""108X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 111 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""109X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""109X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 112 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""110X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""110X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 113 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""111X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""111X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 114 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""112X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""112X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 115 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""113X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""113X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 116 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""114X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""114X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 117 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""115X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""115X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 118 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""116X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""116X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 119 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""117X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""117X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 120 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""118X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""118X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 121 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""119X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""119X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 122 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""120X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""120X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 123 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""121X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""121X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 124 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""122X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""122X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 125 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""123X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""123X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 126 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""124X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""124X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 127 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""125X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""125X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 128 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""126X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""126X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 129 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""127X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""127X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 130 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""128X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""128X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 131 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""129X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""129X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 132 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""130X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""130X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 133 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""131X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""131X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 134 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""132X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""132X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 135 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""133X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""133X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 136 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""134X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""134X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 137 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""135X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""135X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 138 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""136X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""136X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 139 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""137X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""137X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 140 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""138X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""138X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 141 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""139X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""139X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 142 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""140X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""140X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 143 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""141X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""141X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 144 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""142X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""142X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 145 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""143X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""143X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 146 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""144X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""144X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 147 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""145X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""145X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 148 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""146X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""146X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 149 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""147X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""147X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 150 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""148X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""148X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 151 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""149X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""149X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 152 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""150X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""150X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 153 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""151X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""151X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 154 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""152X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""152X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 155 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""153X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""153X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 156 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""154X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""154X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 157 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""155X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""155X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 158 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""156X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""156X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 159 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""157X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""157X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 160 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""158X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""158X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 161 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""159X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""159X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 162 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""160X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""160X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 163 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""161X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""161X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 164 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""162X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""162X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 165 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""163X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""163X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 166 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""164X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""164X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 167 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""165X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""165X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 168 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""166X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""166X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 169 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""167X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""167X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 170 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""168X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""168X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 171 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""169X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""169X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 172 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""170X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""170X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 173 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""171X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""171X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 174 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""172X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""172X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 175 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""173X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""173X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 176 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""174X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""174X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 177 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""175X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""175X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 178 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""176X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""176X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 179 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""177X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""177X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 180 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""178X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""178X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 181 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""179X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""179X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 182 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""180X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""180X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 183 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""181X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""181X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 184 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""182X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""182X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 185 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""183X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""183X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 186 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""184X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""184X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 187 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""185X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""185X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 188 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""186X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""186X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 189 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""187X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""187X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 190 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""188X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""188X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 191 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""189X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""189X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 192 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""190X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""190X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 193 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""191X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""191X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 194 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""192X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""192X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 195 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""193X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""193X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 196 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""194X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""194X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 197 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""195X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""195X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 198 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""196X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""196X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 199 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""197X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""197X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 200 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""198X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""198X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 201 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""199X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""199X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 202 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""200X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""200X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 203 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""201X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""201X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 204 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""202X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""202X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 205 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""203X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""203X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 206 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""204X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""204X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 207 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""205X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""205X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 208 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""206X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""206X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 209 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""207X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""207X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 210 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""208X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""208X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 211 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""209X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""209X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 212 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""210X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""210X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 213 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""211X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""211X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end


if filst5 == 214 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""212X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""212X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end




if filst5 == 215 then 
gg.clearResults(true)
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber(""0;0;0;0;3;0;0;2;1;0::37"", gg.TYPE_DWORD)
gg.refineNumber(""3"",gg.TYPE_DWORD)
n = gg.getResults(1)
for i, v in ipairs(n) do
n = v.address
end
t = {}

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 25 else
t[2].address = n - 0x64 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""213X4""
gg.setValues(t)

t[2] = {} 
if not gg.getTargetInfo().x64 then
t[2].address = n - 13 else
t[2].address = n - 0x34 end
t[2].flags = gg.TYPE_DWORD
t[2].value = ""213X4""
gg.setValues(t)
gg.toast(""Skin loaded"")
gg.clearResults(true)
end    

if filst5 == 216 then 
gg.clearResults(true)
gg.toast(""skin not load"")
gg.alert(""try using this:\n18/02/2024"")
end

if filst5 == 217 then gg.clearResults(true) skin2()
  end
 end
 
 function credit()
local menu = gg.alert('Shinden Menu V1', 'Discord', 'More', 'Back')
if menu == 1 then gg.copyText('https://discord.com/invite/Fdsh7x4V8K') end
if menu == 2 then snak() end
if menu == 3 then skin2() end
end
 
 function snak()
 gg.alert[[
 Menu Shinden:
 Over 220 skins to choose from. The script is very stable. Remember to enable anything showing the player's skin first. requirements:
-Android 
-Root 
-GG OBE 
-Player skin
 ]]
 end
 
 while(true)
do
menuend = 0
if gg.isVisible(true) then gg.setVisible(false)
menuend = 1 end
if menuend == 1 then skin2() end end

"
JpSFtL0e,Brewery v3.1.1,C4BR3R4,YAML,Saturday 17th of February 2024 10:19:49 AM CDT,"[Brewery] Task #44135 for Brewery v3.1.1 generated an exception
java.lang.NullPointerException: Cannot invoke ""net.minecraft.server.network.PlayerConnection.b(net.minecraft.network.protocol.Packet)"" because ""this.c"" is null
	at net.minecraft.server.level.ServerPlayer.onEffectAdded(ServerPlayer.java:1953) ~[?:?]
	at net.minecraft.world.entity.LivingEntity.addEffect(LivingEntity.java:1173) ~[?:?]
	at net.minecraft.world.entity.LivingEntity.addEffect(LivingEntity.java:1139) ~[?:?]
	at net.minecraft.world.entity.LivingEntity.addEffect(LivingEntity.java:1130) ~[?:?]
	at org.bukkit.craftbukkit.v1_20_R3.entity.CraftLivingEntity.addPotionEffect(CraftLivingEntity.java:505) ~[paper-1.20.4.jar:git-Paper-423]
	at org.bukkit.craftbukkit.v1_20_R3.entity.CraftLivingEntity.addPotionEffect(CraftLivingEntity.java:499) ~[paper-1.20.4.jar:git-Paper-423]
	at org.bukkit.potion.PotionEffect.apply(PotionEffect.java:234) ~[paper-api-1.20.4-R0.1-SNAPSHOT.jar:?]
	at com.dre.brewery.utility.BUtil.reapplyPotionEffect(BUtil.java:151) ~[Brewery-3.1.1.jar:?]
	at com.dre.brewery.BPlayer.hangoverEffects(BPlayer.java:769) ~[Brewery-3.1.1.jar:?]
	at com.dre.brewery.BPlayer.login(BPlayer.java:482) ~[Brewery-3.1.1.jar:?]
	at com.dre.brewery.BPlayer.lambda$join$4(BPlayer.java:470) ~[Brewery-3.1.1.jar:?]
	at org.bukkit.craftbukkit.v1_20_R3.scheduler.CraftTask.run(CraftTask.java:101) ~[paper-1.20.4.jar:git-Paper-423]
	at org.bukkit.craftbukkit.v1_20_R3.scheduler.CraftScheduler.mainThreadHeartbeat(CraftScheduler.java:482) ~[paper-1.20.4.jar:git-Paper-423]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1636) ~[paper-1.20.4.jar:git-Paper-423]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:447) ~[paper-1.20.4.jar:git-Paper-423]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1515) ~[paper-1.20.4.jar:git-Paper-423]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1216) ~[paper-1.20.4.jar:git-Paper-423]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:319) ~[paper-1.20.4.jar:git-Paper-423]
	at java.lang.Thread.run(Unknown Source) ~[?:?]"
m9FGc1pQ,Untitled,Mysoft,FreeBasic,Saturday 17th of February 2024 10:16:23 AM CDT,"#include ""fbgfx.bi""
#include ""crt.bi""

extern __fb_gl(5) alias ""__fb_gl"" as any ptr 

dim shared GlViewPortOrg as sub (lt as long,tp as long,rt as long,bt as long)
sub MyGlViewPort(lt as long,tp as long,rt as long,bt as long)
  printf(!""viewport! %f\n"",timer)
  GlViewPortOrg(lt,tp,rt,bt)
end sub

screencontrol(fb.SET_GL_2D_MODE,fb.OGL_2D_AUTO_SYNC)
screencontrol(fb.SET_GL_SCALE,2)
screenres 320,240,8,,fb.GFX_OPENGL

GlViewPortOrg = __fb_gl(5)
__fb_gl(5) = @MyGlViewPort

sleep"
3tdqwtNd,Bot Grezzo QTA Azionario NKE,Maurizio-Ciullo,JavaScript,Saturday 17th of February 2024 09:51:48 AM CDT,"										// Bot Grezzo QTA Azionario NKE //

// Questa strategia è stata trovata da Damiano Dotto QTA su internet. Spulciarla per bene e lavorarci sopra.
// tutti i dettagli e la spiegazione della strategia si possono trovare nello screeshot della cartella Bot Utenti.

if dayofmonth(date) = 24 then
	buy next bar at market;

if dayofmonth(date) = 5 then
	sellshort next bar at market;

if marketposition = 1 and barsinceentry = 14 then
	sell next bar at market;

if marketposition = -1 and barsinceentry = 1 then
	buytocover next bar at market;"
MaAZrdC3,D,LEGEND2004,C++,Saturday 17th of February 2024 09:43:23 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
#define F first
#define S second

signed main()
{

    int n , k;
    cin >> n >> k;
    int a[n + 5];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    int l = 0;
    multiset<int> ms;
    int ans = 0;
    for(int r = 0; r < n; r++){
        ms.insert(a[r]);
        while(*ms.rbegin() - *ms.begin() > k){
            ms.erase(ms.find(a[l]));
            l++;
        }
        ans += (r - l + 1);
    }
    cout << ans << '\n';
}


/*

ms.erase(x); // butun x lari silir
ms.erase(ms.find(x)) // bir x silir

3  1  2  6  4

1  2  3  1  2

1 2 3 3 6
*/
"
YBxfq9yF,C#,Old_But_Gold,C#,Saturday 17th of February 2024 09:30:28 AM CDT,"using System.Collections;

class SinglyLinkedList<T> : IEnumerable<T>
{
    Node<T>? _head; 
    Node<T>? _tail; 
    public int Count { get; private set; }

    public SinglyLinkedList() { }
    public SinglyLinkedList(T data) => AddLast(data);
    public SinglyLinkedList(params IEnumerable<T>[] collections)
    {
        foreach (IEnumerable<T> collection in collections)
            foreach (T item in collection)
                AddLast(item);
    }
    
    public void Reverse()
    {
        if (_head is null) return;
        Node<T> tail = _head;
        Node<T>? temp = _head.Next;
        _head!.Next = null;
        while (temp != null)
        {
            Node<T> next = new (temp.Data) { Next = _head };
            temp = temp.Next;
            _head = next;
        }
        _tail = tail;
    }

    public void AddLast(T data)
    {
        Node<T> node = new(data);
 
        if (_head == null)
            _head = node;
        else
            _tail!.Next = node;
        _tail = node;
        Count++;
    }
    
    public bool Remove(T data)
    {
        Node<T>? current = _head;
        Node<T>? previous = null;
 
        while (current != null)
        {
            if (EqualityComparer<T>.Default.Equals(data, current.Data))
            {
                if (previous != null)
                {
                    previous.Next = current.Next;
                    if (current.Next == null) _tail = previous;
                }
                else
                {
                    _head = _head?.Next;
                    if (_head == null) _tail = null;
                }
                Count--;
                return true;
            }
            previous = current;
            current = current.Next;
        }
        return false;
    }
    
    public void DeleteFirst()
    {
        if (_head != null)
        {
            _head = _head.Next;

            if (_head == null)
                _tail = null;
            Count--;
        }
    }

    public void DeleteLast()
    {
        if (_head == null) return;

        if (_head == _tail)
            (_head, _tail) = (null, null);
        else
        {
            Node<T>? current = _head;

            while (current?.Next != _tail)
                current = current?.Next;

            current!.Next = null;
            _tail = current;
        }
        Count--;
    }
    
    public bool IsEmpty => Count == 0;

    public void Clear() => (_head, _tail, Count) = (null, null, 0);
    
    public bool Contains(T data)
    {
        Node<T>? current = _head;
        while (current != null)
        {
            if (EqualityComparer<T>.Default.Equals(data, current.Data)) return true;
            current = current.Next;
        }
        return false;
    }

    public Node<T>? Find(T data)
    {
        Node<T>? current = _head;

        while (current != null)
        {
            if (EqualityComparer<T>.Default.Equals(data, current.Data))
                return current;

            current = current.Next;
        }

        return null;
    }
    
    public void AddBefore(T existingData, T newData)
    {
        Node<T>? current = _head;
        Node<T>? previous = null;

        while (current != null)
        {
            if (EqualityComparer<T>.Default.Equals(existingData, current.Data))
            {
                Node<T> newNode = new(newData) { Next = current };

                if (previous != null)
                    previous.Next = newNode;
                else
                    _head = newNode;

                Count++;
                return;
            }

            previous = current;
            current = current.Next;
        }
    }

    public void AddAfter(T existingData, T newData)
    {
        Node<T>? current = _head;

        while (current != null)
        {
            if (EqualityComparer<T>.Default.Equals(existingData, current.Data))
            {
                Node<T> newNode = new(newData) { Next = current.Next };
                current.Next = newNode;

                if (current == _tail)
                    _tail = newNode;

                Count++;
                return;
            }

            current = current.Next;
        }
    }

    public void AddBefore(Node<T> existingNode, T newData)
    {
        if (existingNode == null)
            throw new ArgumentNullException(nameof(existingNode), ""Existing node cannot be null."");

        Node<T>? current = _head;
        Node<T>? previous = null;

        while (current != null)
        {
            if (ReferenceEquals(existingNode, current))
            {
                Node<T> newNode = new(newData) { Next = current };

                if (previous != null)
                    previous.Next = newNode;
                else
                    _head = newNode;

                Count++;
                return;
            }

            previous = current;
            current = current.Next;
        }

        throw new InvalidOperationException(""Existing node not found in the list."");
    }

    public void AddAfter(Node<T> existingNode, T newData)
    {
        if (existingNode == null)
            throw new ArgumentNullException(nameof(existingNode), ""Existing node cannot be null."");

        Node<T>? current = _head;

        while (current != null)
        {
            if (ReferenceEquals(existingNode, current))
            {
                Node<T> newNode = new(newData) { Next = current.Next };
                current.Next = newNode;

                if (current == _tail)
                    _tail = newNode;

                Count++;
                return;
            }

            current = current.Next;
        }

        throw new InvalidOperationException(""Existing node not found in the list."");
    }


    public void AppendFirst(T data)
    {
        Node<T> node = new(data) { Next = _head };
        _head = node;
        if (Count == 0)
            _tail = _head;
        Count++;
    }

    public IEnumerator<T> GetEnumerator()
    {
        Node<T>? current = _head;
        while (current != null)
        {
            yield return current.Data;
            current = current.Next;
        }
    }
    
    public T[] ToArray()
    {
        T[] array = new T[Count];
        int index = 0;

        foreach (T item in this)
            array[index++] = item;

        return array;
    }
    
    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}"
E6zA02wG,installer_nether_start_maker,Zeehao,Lua,Saturday 17th of February 2024 09:25:25 AM CDT,"local component = require(""component"")
local sides = require(""sides"")
local ic = require(""inventory_controller"")
local JobService= require(""craft_job"").JobService

local elements = {
    sn = {name = ""minechem:minechemElement"", label = ""element.Sn""},
    fm = {name = ""minechem:minechemElement"", label = ""element.Fm""},
    mg = {name = ""minechem:minechemElement"", label = ""element.Mg""},
    h = {name = ""minechem:minechemElement"", label = ""element.H""},
    he = {name = ""minechem:minechemElement"", label = ""element.He""}
}

local maker = {
    transposer                  = component.transposer,
    crafted                     = 0,
    required                    = 0,
    reset                       = false,
    inventory_top_side          = nil,
    inventory_export_a_side     = nil,
    inventory_export_b_side     = nil,
    inventroy_trashcan_side     = nil,
} 

local function search_and_set_inventories(maker) 
    local inventory_set_counter = 0;
    local trashcan_name = ""tile.extrautils:trashcan"";
    for side = 0, #sides do
        local invtentory_name = maker.transposer.getInventoryName(side)
        if invtentory_name then
            print(sides[side], invtentory_name)
            local item = ic.find_first_item_slot(maker.transposer, side)
            if invtentory_name == trashcan_name then 
                maker.inventroy_trashcan_side = side
            elseif not item and not maker.inventory_export_a_side then
                maker.inventory_export_a_side = side
                inventory_set_counter = inventory_set_counter + 1
            elseif not item and not maker.inventory_export_b_side then
                maker.inventory_export_b_side = side
                inventory_set_counter = inventory_set_counter + 1
            elseif item then
                maker.inventory_top_side = side
                inventory_set_counter = inventory_set_counter + 1
            end
        end
    end
    if inventory_set_counter == 3 then
        print(""failed to find inventories, only "" .. inventory_set_counter .."" found,"" .. ""need 3 inventories"" )
        return false
    else
        return true
    end
end

local function start(amount) 
    for i = amount, amount, -1 do
        maker.required = amount
        print(""transfing Sn"")
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.sn.name, elements.sn.label, maker.inventory_export_a_side, 16)
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.sn.name, elements.sn.label, maker.inventory_export_b_side, 16)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_a_side)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_b_side)
        print(""transfing H"")
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.h.name, elements.h.label, maker.inventory_export_a_side, 1)
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.h.name, elements.h.label, maker.inventory_export_b_side, 1)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_a_side)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_b_side)
        print(""get Fm and He"")
        local redstone = component.redstone
        redstone.setOutput(sides.down, 10)
        ic.wait_util_item_arrived(maker.transposer, maker.inventory_top_side, elements.fm.name, elements.fm.label, 16)
        local he_slots, _ = ic.wait_util_item_arrived(maker.transposer, maker.inventory_top_side, elements.he.name, elements.he.label, 1)
        redstone.setOutput(sides.down, 0)
        ic.transfer_item_to_first_empty_slot(maker.transposer, maker.inventory_top_side, maker.inventroy_trashcan_side, 1, he_slots[1])

        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.fm.name, elements.fm.label, maker.inventory_export_a_side, 16)
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.mg.name, elements.mg.label, maker.inventory_export_b_side, 16)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_a_side)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_b_side)
        print(""transfing H"")
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.h.name, elements.h.label, maker.inventory_export_a_side, 1)
        ic.transfer_item(maker.transposer, maker.inventory_top_side, elements.h.name, elements.h.label, maker.inventory_export_b_side, 1)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_a_side)
        ic.wait_until_chest_empty(maker.transposer, maker.inventory_export_b_side)
        redstone.setOutput(sides.down, 10)
        he_slots, _ = ic.wait_util_item_arrived(maker.transposer, maker.inventory_top_side, elements.he.name, elements.he.label, 1)
        redstone.setOutput(sides.down, 0)
        ic.transfer_item_to_first_empty_slot(maker.transposer, maker.inventory_top_side, maker.inventroy_trashcan_side, 1, he_slots[1])
        if maker.reset == true then
            maker.reset = false
            return nil
        end
    end
end

local function init() 
    search_and_set_inventories(maker)
end

local function reset() 
    maker.reset = true
    maker.crafted = 0
    maker.required = 0
end

local function status() 
    return maker.required, maker.crafted
end

local service = JobService:new(
    ""Nether Star"", 
    ""Use to create Nether Star"", 
    init, 
    status, 
    start, 
    reset
)

return service"
nukJY8zp,B,LEGEND2004,C++,Saturday 17th of February 2024 09:22:41 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
#define F first
#define S second

signed main()
{

    int t , n;
    string s;
    int ans = 0;
    cin >> t;
    while(t--){
        cin >> s;
        map<char , int> cnt;
        for(int i = 0; i < s.size(); i++){
            cnt[s[i]]++;
        }
        int x = 0;
        for(char i = 'a'; i <= 'z'; i++){
            if(cnt[i] % 2 == 0)
                x++;
        }
        if(x == 26)
            ans++;
    }
    cout << ans << '\n';

    // birinci + ikinci
    // 1 sayi + 0
    // 0 sayi + 1
}


/*
4 2 1 3

*/
"
Fg23TR9W,job_carft_job,Zeehao,Lua,Saturday 17th of February 2024 09:18:00 AM CDT,"local dbc = require(""kv_p_database_client"")
local component = require(""component"")
local event = require(""event"")
local serializer = require(""serialization"")
local thread = require(""thread"")

local MODEM = ""modem""

local TABLE_NAME = ""jobs_services""

local ACTIONS = {
    START = 0,
    STATUS = 1,
    RESET = 2
}

local job_request_serialized = serializer.serialize({
    name = """", 
    action="""", 
    amount = 0
})

local job_service_stats_serialized = serializer.serialize({
    name = """",
    description = """",
    status = """",
    progress = """"
})

local JobClient = {}

local JobService = {}

function JobService:new(name, description, init_callback, status_callback, start_callback, reset_callback)
    local obj = {
        name = name, 
        description = description,
        init_callback = init_callback,
        status_callback = status_callback,
        start_callback = start_callback,
        reset_callback = reset_callback,
        job_thread = nil,
    }
    setmetatable(obj, self)
    self.__index = self
    return obj
end

local function wait_for_request() 
    local  _, _, addr, _, _, message = event.pull(5, MODEM)
    print(message)
    local request = serializer.unserialize(message)
    return addr, request
end

function JobService:listen(self) 
    while true do 
        local addr, request = wait_for_request();
        if request and request.action == ACTIONS.START then
            if self.job_thread and self.job_thread.status() == ""running"" then goto continues end
            self.job_thread = thread.create(self.start_callback, request.amount)            
        elseif request and request.action == ACTIONS.STATUS then
            goto continues
        elseif request and request.action == ACTIONS.RESET then
            if not self.job_thread or self.job_thread.status() == ""dead"" then goto continues end
            self.job_thread.kill()
            self.reset_callback()
        end

        -- update_database
        ::continues::
        local status = ""running""
        if not self.job_thread or self.job_thread.status() == ""dead"" then status=""standby"" end
        local total_amount, completed_amount = self.status_callback()
        local progress = completed_amount .. ""/"" .. total_amount
        dbc.put(TABLE_NAME, component.modem.address, {
            name = self.name,
            description = self.description,
            status = status,
            progress = progress,
        })
    end
end

function JobService:init() 
    dbc.init();
    dbc.create_table(TABLE_NAME)
    self.init_callback();
end

return {ACTIONS=ACTIONS, JobService=JobService, JobClient=JobClient}"
axdBacFp,Vec.js from 偶弦,YTMango,JavaScript,Saturday 17th of February 2024 09:10:52 AM CDT,"/**
 * @typedef {Object} UnitVec
 * @property {number} dx
 * @property {number} dy
 * @property {number} dz
 */

/**
 * 获取单位向量物件
 * @param {number} dx
 * @param {number} dy
 * @param {number} dz
 * @returns {UnitVec}
 */
function UnitVec(dx, dy, dz) {
  return {
    dx: dx,
    dy: dy,
    dz: dz,
  };
}

/**
 * @typedef {Object} YawPitch
 * @property {number} yaw
 * @property {number} pitch
 */

/**
 * 获取偏航角和俯仰角物件
 * @param {number} yaw
 * @param {number} pitch
 * @returns {YawPitch}
 */
function YawPitch(yaw, pitch) {
  return {
    yaw: yaw,
    pitch: pitch,
  };
}

function Distance(x, y, z) {
  return Math.sqrt(x * x + y * y + z * z);
}

/**
 * 获取玩家视线向量的单位向量
 * @param {Internal.Entity_} entity
 * @returns {UnitVec}
 */
function getUnitLookingVec(entity) {
  let tx = -Math.sin((entity.yaw / 180) * Math.PI);
  let ty = -Math.sin((entity.pitch / 180) * Math.PI);
  let tz = Math.cos((entity.yaw / 180) * Math.PI);

  let distance = Distance(tx, ty, tz);

  return UnitVec(tx / distance, ty / distance, tz / distance);
}

/**
 * 通过向量获取偏航角和俯仰角
 * @param {UnitVec} Vec
 * @returns {YawPitch}
 */
function getVecYaw(Vec) {
  let tyaw = (-Math.atan2(Vec.dx, Vec.dz) * 180) / Math.PI;
  let tpitch = (Math.asin(-Vec.dy) * 180) / Math.PI;

  return YawPitch(tyaw, tpitch);
}

/**
 * 获取规定向量向左旋转一定角度的向量的单位向量
 * @param {UnitVec} Vec
 * @param {number} angle
 * @returns {UnitVec}
 */
function getUnitLeftVec(Vec, angle) {
  let angles = getVecYaw(Vec);
  let leftVec = getLookUnitLeftVec(angles, angle);

  return UnitVec(leftVec.dx, leftVec.dy, leftVec.dz);
}

/**
 * 获取规定向量向右旋转一定角度的向量的单位向量
 * @param {UnitVec} Vec
 * @param {number} angle
 * @returns {UnitVec}
 */
function getUnitRightVec(Vec, angle) {
  let angles = getVecYaw(Vec);
  let rightVec = getLookUnitRightVec(angles, angle);

  return UnitVec(rightVec.dx, rightVec.dy, rightVec.dz);
}

/**
 * 获取视线向量向左旋转一定角度的向量的单位向量
 * @param {Internal.Entity_} entity
 * @param {number} angle
 * @returns {UnitVec}
 */
function getLookUnitLeftVec(entity, angle) {
  let x = -Math.sin(((entity.yaw - angle) / 180) * Math.PI);
  let y = -Math.sin((entity.pitch / 180) * Math.PI);
  let z = Math.cos(((entity.yaw - angle) / 180) * Math.PI);

  let distance = Distance(x, y, z);

  return UnitVec(x / distance, y / distance, z / distance);
}

/**
 * 获取视线向量向右旋转一定角度的向量的单位向量
 * @param {Internal.Entity_} entity
 * @param {number} angle
 * @returns {UnitVec}
 */
function getLookUnitRightVec(entity, angle) {
  let x = -Math.sin(((entity.yaw + angle) / 180) * Math.PI);
  let y = -Math.sin((entity.pitch / 180) * Math.PI);
  let z = Math.cos(((entity.yaw + angle) / 180) * Math.PI);

  let distance = Distance(x, y, z);

  return UnitVec(x / distance, y / distance, z / distance);
}

/**
 * 获取两个实体之间的单位向量
 * @param {Internal.Entity_} entity1
 * @param {Internal.Entity_} entity2
 * @returns {UnitVec}
 */
function getUnitVec(entity1, entity2) {
  let x = entity1.x - entity2.x;
  let y = entity1.y - entity2.y;
  let z = entity1.z - entity2.z;

  let distance = Distance(x, y, z);

  return UnitVec(x / distance, y / distance, z / distance);
}"
ShBBkZLe,Untitled,sandino,C++,Saturday 17th of February 2024 08:46:47 AM CDT,"#include <iostream>
#include <set>
#include <vector>

using namespace std;

template <typename Container>
void Print(ostream& out, const Container& container) {
    bool is_first = true;
    for (const auto & element : container) {
        if (!is_first) {
            out << "", ""s;
        }
        is_first = false;
        out << element;
    }
}

template <typename Element>
ostream& operator<<(ostream& out, const vector<Element>& container) {
    Print(out, container);
    return out;
}

template <typename Element>
ostream & operator<<(ostream& out, const set<Element>& container) {
    Print(out, container);
    return out;
}

int main() {
    const set<string> cats = {""Мурка""s, ""Белка""s, ""Георгий""s, ""Рюрик""s};
    cout << cats << endl;
    const vector<int> ages = {10, 5, 2, 12};
    cout << ages << endl;
}"
f7YJxtkD,Nigerian scammers [17-2-1/2024],bombaires,AIMMS,Saturday 17th of February 2024 08:46:00 AM CDT,"<a href=""mailto:mrjohnslosharr@gmail.com"">mrjohnslosharr@gmail.com</a>
<a href=""mailto:mrjo.h.n.s.losha.r.r@gmail.com"">mrjo.h.n.s.losha.r.r@gmail.com</a>
<a href=""mailto:m.rjoh.n.s.lo.sh.arr@gmail.com"">m.rjoh.n.s.lo.sh.arr@gmail.com</a>
<a href=""mailto:m.r.j.o.hn.s.l.o.s.harr@gmail.com"">m.r.j.o.hn.s.l.o.s.harr@gmail.com</a>
<a href=""mailto:mrj.oh.nsl.os.h.ar.r@gmail.com"">mrj.oh.nsl.os.h.ar.r@gmail.com</a>
<a href=""mailto:m.rj.o.h.n.s.lo.sh.ar.r@gmail.com"">m.rj.o.h.n.s.lo.sh.ar.r@gmail.com</a>
<a href=""mailto:m.rjo.h.n.s.l.o.sh.arr@gmail.com"">m.rjo.h.n.s.l.o.sh.arr@gmail.com</a>
<a href=""mailto:mrjo.hnsl.o.sh.a.r.r@gmail.com"">mrjo.hnsl.o.sh.a.r.r@gmail.com</a>
<a href=""mailto:mr.john.sl.osha.r.r@gmail.com"">mr.john.sl.osha.r.r@gmail.com</a>
<a href=""mailto:mrj.ohn.s.losh.a.r.r@gmail.com"">mrj.ohn.s.losh.a.r.r@gmail.com</a>
<a href=""mailto:mr.j.ohns.lo.sh.a.rr@gmail.com"">mr.j.ohns.lo.sh.a.rr@gmail.com</a>
<a href=""mailto:m.rjoh.nsl.osh.ar.r@gmail.com"">m.rjoh.nsl.osh.ar.r@gmail.com</a>
<a href=""mailto:mr.jo.h.nsl.osha.rr@gmail.com"">mr.jo.h.nsl.osha.rr@gmail.com</a>
<a href=""mailto:m.rj.o.hn.sl.os.h.a.r.r@gmail.com"">m.rj.o.hn.sl.os.h.a.r.r@gmail.com</a>
<a href=""mailto:mr.j.oh.nslo.shar.r@gmail.com"">mr.j.oh.nslo.shar.r@gmail.com</a>
<a href=""mailto:m.r.joh.n.s.l.o.s.harr@gmail.com"">m.r.joh.n.s.l.o.s.harr@gmail.com</a>
<a href=""mailto:m.rjo.h.ns.l.osharr@gmail.com"">m.rjo.h.ns.l.osharr@gmail.com</a>
<a href=""mailto:mrj.ohn.s.l.os.h.arr@gmail.com"">mrj.ohn.s.l.os.h.arr@gmail.com</a>
<a href=""mailto:m.rj.oh.ns.losh.a.r.r@gmail.com"">m.rj.oh.ns.losh.a.r.r@gmail.com</a>
<a href=""mailto:m.rjoh.nsl.os.h.a.rr@gmail.com"">m.rjoh.nsl.os.h.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.o.h.ns.l.osharr@gmail.com"">m.r.j.o.h.ns.l.osharr@gmail.com</a>
<a href=""mailto:mr.john.sl.osh.a.rr@gmail.com"">mr.john.sl.osh.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.ohns.losha.r.r@gmail.com"">m.r.j.ohns.losha.r.r@gmail.com</a>
<a href=""mailto:mrj.o.h.n.slo.s.ha.rr@gmail.com"">mrj.o.h.n.slo.s.ha.rr@gmail.com</a>
<a href=""mailto:mr.jo.h.n.sloshar.r@gmail.com"">mr.jo.h.n.sloshar.r@gmail.com</a>
<a href=""mailto:mrjo.hns.l.osh.a.r.r@gmail.com"">mrjo.hns.l.osh.a.r.r@gmail.com</a>
<a href=""mailto:m.rj.o.hnsl.osh.ar.r@gmail.com"">m.rj.o.hnsl.osh.ar.r@gmail.com</a>
<a href=""mailto:mrj.oh.ns.lo.s.har.r@gmail.com"">mrj.oh.ns.lo.s.har.r@gmail.com</a>
<a href=""mailto:mr.j.o.hnsl.o.s.ha.r.r@gmail.com"">mr.j.o.hnsl.o.s.ha.r.r@gmail.com</a>
<a href=""mailto:mr.j.o.h.ns.l.osharr@gmail.com"">mr.j.o.h.ns.l.osharr@gmail.com</a>
<a href=""mailto:m.rj.o.h.nslos.harr@gmail.com"">m.rj.o.h.nslos.harr@gmail.com</a>
<a href=""mailto:m.rjo.hn.slosh.a.r.r@gmail.com"">m.rjo.hn.slosh.a.r.r@gmail.com</a>
<a href=""mailto:mrj.o.h.n.slosha.rr@gmail.com"">mrj.o.h.n.slosha.rr@gmail.com</a>
<a href=""mailto:m.r.johnslos.harr@gmail.com"">m.r.johnslos.harr@gmail.com</a>
<a href=""mailto:mrj.o.hn.slos.h.arr@gmail.com"">mrj.o.hn.slos.h.arr@gmail.com</a>
<a href=""mailto:m.r.j.o.h.n.s.l.os.ha.r.r@gmail.com"">m.r.j.o.h.n.s.l.os.ha.r.r@gmail.com</a>
<a href=""mailto:m.r.jo.hns.lo.shar.r@gmail.com"">m.r.jo.hns.lo.shar.r@gmail.com</a>
<a href=""mailto:m.rjohn.s.l.oshar.r@gmail.com"">m.rjohn.s.l.oshar.r@gmail.com</a>
<a href=""mailto:m.r.jo.hn.sl.os.har.r@gmail.com"">m.r.jo.hn.sl.os.har.r@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.slo.s.h.a.r.r@gmail.com"">m.r.j.oh.n.slo.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mr.j.ohnslo.sh.a.r.r@gmail.com"">mr.j.ohnslo.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.r.john.s.losha.r.r@gmail.com"">m.r.john.s.losha.r.r@gmail.com</a>
<a href=""mailto:m.rjo.hn.s.l.o.sh.a.r.r@gmail.com"">m.rjo.hn.s.l.o.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.r.j.ohns.lo.sh.arr@gmail.com"">m.r.j.ohns.lo.sh.arr@gmail.com</a>
<a href=""mailto:mr.joh.n.s.l.o.s.har.r@gmail.com"">mr.joh.n.s.l.o.s.har.r@gmail.com</a>
<a href=""mailto:m.rjo.hns.lo.s.ha.r.r@gmail.com"">m.rjo.hns.lo.s.ha.r.r@gmail.com</a>
<a href=""mailto:m.rjohnsl.o.sh.arr@gmail.com"">m.rjohnsl.o.sh.arr@gmail.com</a>
<a href=""mailto:m.rjo.h.nsl.osh.ar.r@gmail.com"">m.rjo.h.nsl.osh.ar.r@gmail.com</a>
<a href=""mailto:m.r.joh.n.slo.sh.arr@gmail.com"">m.r.joh.n.slo.sh.arr@gmail.com</a>
<a href=""mailto:m.r.j.o.h.ns.los.h.a.r.r@gmail.com"">m.r.j.o.h.ns.los.h.a.r.r@gmail.com</a>
<a href=""mailto:m.r.j.ohn.s.lo.sharr@gmail.com"">m.r.j.ohn.s.lo.sharr@gmail.com</a>
<a href=""mailto:mrjoh.n.s.lo.shar.r@gmail.com"">mrjoh.n.s.lo.shar.r@gmail.com</a>
<a href=""mailto:m.rjoh.ns.l.o.s.ha.r.r@gmail.com"">m.rjoh.ns.l.o.s.ha.r.r@gmail.com</a>
<a href=""mailto:mrj.ohn.slos.h.ar.r@gmail.com"">mrj.ohn.slos.h.ar.r@gmail.com</a>
<a href=""mailto:m.r.joh.nslosh.a.rr@gmail.com"">m.r.joh.nslosh.a.rr@gmail.com</a>
<a href=""mailto:mr.j.o.h.ns.l.o.sha.r.r@gmail.com"">mr.j.o.h.ns.l.o.sha.r.r@gmail.com</a>
<a href=""mailto:m.r.jo.hn.s.los.ha.r.r@gmail.com"">m.r.jo.hn.s.los.ha.r.r@gmail.com</a>
<a href=""mailto:m.r.j.ohns.l.o.sha.r.r@gmail.com"">m.r.j.ohns.l.o.sha.r.r@gmail.com</a>
<a href=""mailto:mrjo.h.ns.los.ha.rr@gmail.com"">mrjo.h.ns.los.ha.rr@gmail.com</a>
<a href=""mailto:mr.joh.n.s.losh.a.rr@gmail.com"">mr.joh.n.s.losh.a.rr@gmail.com</a>
<a href=""mailto:m.r.joh.n.s.lo.s.harr@gmail.com"">m.r.joh.n.s.lo.s.harr@gmail.com</a>
<a href=""mailto:mrj.oh.ns.l.osha.r.r@gmail.com"">mrj.oh.ns.l.osha.r.r@gmail.com</a>
<a href=""mailto:mr.jo.hn.sl.o.sha.r.r@gmail.com"">mr.jo.hn.sl.o.sha.r.r@gmail.com</a>
<a href=""mailto:m.rjohn.sl.o.s.ha.r.r@gmail.com"">m.rjohn.sl.o.s.ha.r.r@gmail.com</a>
<a href=""mailto:mrj.oh.n.s.l.os.h.arr@gmail.com"">mrj.oh.n.s.l.os.h.arr@gmail.com</a>
<a href=""mailto:mrjo.h.n.slo.sh.arr@gmail.com"">mrjo.h.n.slo.sh.arr@gmail.com</a>
<a href=""mailto:mr.jo.hns.los.har.r@gmail.com"">mr.jo.hns.los.har.r@gmail.com</a>
<a href=""mailto:mr.j.o.hnsl.osh.a.rr@gmail.com"">mr.j.o.hnsl.osh.a.rr@gmail.com</a>
<a href=""mailto:mrjo.h.n.slos.ha.rr@gmail.com"">mrjo.h.n.slos.ha.rr@gmail.com</a>
<a href=""mailto:m.rj.ohn.sl.os.h.a.rr@gmail.com"">m.rj.ohn.sl.os.h.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.ohnsl.os.h.arr@gmail.com"">m.r.j.ohnsl.os.h.arr@gmail.com</a>
<a href=""mailto:mr.jo.hn.s.lo.s.har.r@gmail.com"">mr.jo.hn.s.lo.s.har.r@gmail.com</a>
<a href=""mailto:m.r.jo.h.n.s.lo.s.harr@gmail.com"">m.r.jo.h.n.s.lo.s.harr@gmail.com</a>
<a href=""mailto:m.rjohnsl.os.h.arr@gmail.com"">m.rjohnsl.os.h.arr@gmail.com</a>
<a href=""mailto:m.rjoh.n.s.lo.sharr@gmail.com"">m.rjoh.n.s.lo.sharr@gmail.com</a>
<a href=""mailto:m.rj.ohn.sl.o.s.h.a.r.r@gmail.com"">m.rj.ohn.sl.o.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mrj.ohn.s.lo.s.h.a.r.r@gmail.com"">mrj.ohn.s.lo.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mr.john.slo.sharr@gmail.com"">mr.john.slo.sharr@gmail.com</a>
<a href=""mailto:mr.jo.h.n.sl.os.har.r@gmail.com"">mr.jo.h.n.sl.os.har.r@gmail.com</a>
<a href=""mailto:m.r.j.o.hn.slosha.r.r@gmail.com"">m.r.j.o.hn.slosha.r.r@gmail.com</a>
<a href=""mailto:mr.jo.hnslosh.a.r.r@gmail.com"">mr.jo.hnslosh.a.r.r@gmail.com</a>
<a href=""mailto:mrjoh.ns.losharr@gmail.com"">mrjoh.ns.losharr@gmail.com</a>
<a href=""mailto:m.rj.o.h.n.slo.s.harr@gmail.com"">m.rj.o.h.n.slo.s.harr@gmail.com</a>
<a href=""mailto:mrjo.h.nsl.os.h.a.r.r@gmail.com"">mrjo.h.nsl.os.h.a.r.r@gmail.com</a>
<a href=""mailto:mrj.o.hnslo.sh.ar.r@gmail.com"">mrj.o.hnslo.sh.ar.r@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.s.lo.s.ha.r.r@gmail.com"">m.r.j.oh.n.s.lo.s.ha.r.r@gmail.com</a>
<a href=""mailto:m.rj.o.h.n.s.l.o.s.h.a.r.r@gmail.com"">m.rj.o.h.n.s.l.o.s.h.a.r.r@gmail.com</a>
<a href=""mailto:m.r.j.ohn.sl.o.s.h.arr@gmail.com"">m.r.j.ohn.sl.o.s.h.arr@gmail.com</a>
<a href=""mailto:m.r.j.ohnsl.o.s.ha.rr@gmail.com"">m.r.j.ohnsl.o.s.ha.rr@gmail.com</a>
<a href=""mailto:mr.jo.h.n.slo.s.h.a.r.r@gmail.com"">mr.jo.h.n.slo.s.h.a.r.r@gmail.com</a>
<a href=""mailto:m.r.joh.n.sl.os.h.arr@gmail.com"">m.r.joh.n.sl.os.h.arr@gmail.com</a>
<a href=""mailto:mr.j.oh.ns.lo.sh.ar.r@gmail.com"">mr.j.oh.ns.lo.sh.ar.r@gmail.com</a>
<a href=""mailto:mr.j.oh.ns.losha.r.r@gmail.com"">mr.j.oh.ns.losha.r.r@gmail.com</a>
<a href=""mailto:m.rj.o.hns.l.os.har.r@gmail.com"">m.rj.o.hns.l.os.har.r@gmail.com</a>
<a href=""mailto:m.r.jo.h.n.sl.o.s.h.arr@gmail.com"">m.r.jo.h.n.sl.o.s.h.arr@gmail.com</a>
<a href=""mailto:m.rjoh.ns.los.h.ar.r@gmail.com"">m.rjoh.ns.los.h.ar.r@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.s.lo.sharr@gmail.com"">m.r.j.oh.n.s.lo.sharr@gmail.com</a>
<a href=""mailto:m.rj.ohn.sl.o.shar.r@gmail.com"">m.rj.ohn.sl.o.shar.r@gmail.com</a>
<a href=""mailto:m.r.john.s.l.o.s.h.a.rr@gmail.com"">m.r.john.s.l.o.s.h.a.rr@gmail.com</a>
<a href=""mailto:m.rj.ohnslo.sh.ar.r@gmail.com"">m.rj.ohnslo.sh.ar.r@gmail.com</a>
<a href=""mailto:mrjo.h.nslos.ha.rr@gmail.com"">mrjo.h.nslos.ha.rr@gmail.com</a>
<a href=""mailto:m.r.jo.h.ns.l.o.s.h.ar.r@gmail.com"">m.r.jo.h.ns.l.o.s.h.ar.r@gmail.com</a>
<a href=""mailto:m.rjo.h.nslos.h.a.rr@gmail.com"">m.rjo.h.nslos.h.a.rr@gmail.com</a>
<a href=""mailto:m.rj.o.h.ns.l.osh.a.rr@gmail.com"">m.rj.o.h.ns.l.osh.a.rr@gmail.com</a>
<a href=""mailto:m.rjo.h.n.s.lo.s.ha.r.r@gmail.com"">m.rjo.h.n.s.lo.s.ha.r.r@gmail.com</a>
<a href=""mailto:mr.jo.hn.s.los.h.ar.r@gmail.com"">mr.jo.hn.s.los.h.ar.r@gmail.com</a>
<a href=""mailto:mrjohn.sl.o.s.ha.r.r@gmail.com"">mrjohn.sl.o.s.ha.r.r@gmail.com</a>
<a href=""mailto:m.rj.ohn.sl.o.sh.arr@gmail.com"">m.rj.ohn.sl.o.sh.arr@gmail.com</a>
<a href=""mailto:mrj.o.hn.slo.s.ha.rr@gmail.com"">mrj.o.hn.slo.s.ha.rr@gmail.com</a>
<a href=""mailto:mrjo.h.n.s.l.osh.arr@gmail.com"">mrjo.h.n.s.l.osh.arr@gmail.com</a>
<a href=""mailto:mrj.ohns.l.oshar.r@gmail.com"">mrj.ohns.l.oshar.r@gmail.com</a>
<a href=""mailto:mr.j.o.h.nsl.osha.rr@gmail.com"">mr.j.o.h.nsl.osha.rr@gmail.com</a>
<a href=""mailto:m.r.j.oh.nsl.o.sh.a.r.r@gmail.com"">m.r.j.oh.nsl.o.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.rj.oh.n.sl.o.shar.r@gmail.com"">m.rj.oh.n.sl.o.shar.r@gmail.com</a>
<a href=""mailto:mrjoh.n.sloshar.r@gmail.com"">mrjoh.n.sloshar.r@gmail.com</a>
<a href=""mailto:mrj.ohns.losha.rr@gmail.com"">mrj.ohns.losha.rr@gmail.com</a>
<a href=""mailto:mr.j.o.hn.s.lo.sh.ar.r@gmail.com"">mr.j.o.hn.s.lo.sh.ar.r@gmail.com</a>
<a href=""mailto:mr.j.oh.ns.l.o.sh.a.r.r@gmail.com"">mr.j.oh.ns.l.o.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.rj.oh.nslo.sh.arr@gmail.com"">m.rj.oh.nslo.sh.arr@gmail.com</a>
<a href=""mailto:mrj.o.h.nsl.o.sharr@gmail.com"">mrj.o.h.nsl.o.sharr@gmail.com</a>
<a href=""mailto:m.rj.o.h.nsl.o.sh.ar.r@gmail.com"">m.rj.o.h.nsl.o.sh.ar.r@gmail.com</a>
<a href=""mailto:m.r.j.o.h.nslo.sh.a.r.r@gmail.com"">m.r.j.o.h.nslo.sh.a.r.r@gmail.com</a>
<a href=""mailto:mrjoh.n.s.l.osha.r.r@gmail.com"">mrjoh.n.s.l.osha.r.r@gmail.com</a>
<a href=""mailto:mr.jo.h.n.sl.o.sharr@gmail.com"">mr.jo.h.n.sl.o.sharr@gmail.com</a>
<a href=""mailto:m.rj.oh.nslo.sh.ar.r@gmail.com"">m.rj.oh.nslo.sh.ar.r@gmail.com</a>
<a href=""mailto:mrjo.hn.s.l.osh.arr@gmail.com"">mrjo.hn.s.l.osh.arr@gmail.com</a>
<a href=""mailto:m.r.jo.hn.slosh.arr@gmail.com"">m.r.jo.hn.slosh.arr@gmail.com</a>
<a href=""mailto:m.rj.oh.ns.losh.arr@gmail.com"">m.rj.oh.ns.losh.arr@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.s.l.o.sha.r.r@gmail.com"">m.r.j.oh.n.s.l.o.sha.r.r@gmail.com</a>
<a href=""mailto:m.rj.oh.n.s.los.harr@gmail.com"">m.rj.oh.n.s.los.harr@gmail.com</a>
<a href=""mailto:mrjohn.sl.osh.a.rr@gmail.com"">mrjohn.sl.osh.a.rr@gmail.com</a>
<a href=""mailto:mrj.o.h.n.slo.sha.r.r@gmail.com"">mrj.o.h.n.slo.sha.r.r@gmail.com</a>
<a href=""mailto:mrjohn.s.l.o.sharr@gmail.com"">mrjohn.s.l.o.sharr@gmail.com</a>
<a href=""mailto:mrjo.hns.l.osharr@gmail.com"">mrjo.hns.l.osharr@gmail.com</a>
<a href=""mailto:m.rjo.hn.s.l.o.s.h.a.rr@gmail.com"">m.rjo.hn.s.l.o.s.h.a.rr@gmail.com</a>
<a href=""mailto:m.rjo.h.nslos.har.r@gmail.com"">m.rjo.h.nslos.har.r@gmail.com</a>
<a href=""mailto:m.r.j.o.hns.lo.sh.a.r.r@gmail.com"">m.r.j.o.hns.lo.sh.a.r.r@gmail.com</a>
<a href=""mailto:mr.j.ohns.los.harr@gmail.com"">mr.j.ohns.los.harr@gmail.com</a>
<a href=""mailto:mr.john.sl.os.har.r@gmail.com"">mr.john.sl.os.har.r@gmail.com</a>
<a href=""mailto:mr.joh.nsl.osh.a.rr@gmail.com"">mr.joh.nsl.osh.a.rr@gmail.com</a>
<a href=""mailto:mrjoh.nsl.os.h.arr@gmail.com"">mrjoh.nsl.os.h.arr@gmail.com</a>
<a href=""mailto:mrj.oh.ns.l.os.har.r@gmail.com"">mrj.oh.ns.l.os.har.r@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.slo.sharr@gmail.com"">m.r.j.oh.n.slo.sharr@gmail.com</a>
<a href=""mailto:m.rj.oh.ns.l.o.sha.rr@gmail.com"">m.rj.oh.ns.l.o.sha.rr@gmail.com</a>
<a href=""mailto:m.rjo.h.n.s.l.os.ha.rr@gmail.com"">m.rjo.h.n.s.l.os.ha.rr@gmail.com</a>
<a href=""mailto:m.rjo.hn.slo.shar.r@gmail.com"">m.rjo.hn.slo.shar.r@gmail.com</a>
<a href=""mailto:m.r.jo.hn.sl.osh.a.r.r@gmail.com"">m.r.jo.hn.sl.osh.a.r.r@gmail.com</a>
<a href=""mailto:mr.joh.n.s.lo.s.h.ar.r@gmail.com"">mr.joh.n.s.lo.s.h.ar.r@gmail.com</a>
<a href=""mailto:m.rj.o.hn.sl.os.ha.r.r@gmail.com"">m.rj.o.hn.sl.os.ha.r.r@gmail.com</a>
<a href=""mailto:m.rjo.h.nslo.s.h.a.rr@gmail.com"">m.rjo.h.nslo.s.h.a.rr@gmail.com</a>
<a href=""mailto:m.rj.o.hns.lo.s.h.arr@gmail.com"">m.rj.o.hns.lo.s.h.arr@gmail.com</a>
<a href=""mailto:mr.j.o.h.ns.l.o.sh.arr@gmail.com"">mr.j.o.h.ns.l.o.sh.arr@gmail.com</a>
<a href=""mailto:m.r.j.oh.ns.los.har.r@gmail.com"">m.r.j.oh.ns.los.har.r@gmail.com</a>
<a href=""mailto:m.rjoh.n.sl.o.s.ha.rr@gmail.com"">m.rjoh.n.sl.o.s.ha.rr@gmail.com</a>
<a href=""mailto:m.rjoh.nslo.sh.a.rr@gmail.com"">m.rjoh.nslo.sh.a.rr@gmail.com</a>
<a href=""mailto:mrjoh.ns.lo.s.harr@gmail.com"">mrjoh.ns.lo.s.harr@gmail.com</a>
<a href=""mailto:mr.j.oh.n.slo.sh.ar.r@gmail.com"">mr.j.oh.n.slo.sh.ar.r@gmail.com</a>
<a href=""mailto:mrj.o.h.n.sl.os.har.r@gmail.com"">mrj.o.h.n.sl.os.har.r@gmail.com</a>
<a href=""mailto:m.r.joh.n.slo.s.h.a.rr@gmail.com"">m.r.joh.n.slo.s.h.a.rr@gmail.com</a>
<a href=""mailto:m.rj.ohns.lo.sh.a.r.r@gmail.com"">m.rj.ohns.lo.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.r.jo.h.ns.l.os.ha.rr@gmail.com"">m.r.jo.h.ns.l.os.ha.rr@gmail.com</a>
<a href=""mailto:mr.jo.hn.sl.o.s.h.a.r.r@gmail.com"">mr.jo.hn.sl.o.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mr.j.o.h.n.s.lo.s.h.a.rr@gmail.com"">mr.j.o.h.n.s.lo.s.h.a.rr@gmail.com</a>
<a href=""mailto:mr.j.o.hns.lo.s.h.a.r.r@gmail.com"">mr.j.o.hns.lo.s.h.a.r.r@gmail.com</a>
<a href=""mailto:m.rj.o.h.n.sl.o.s.h.a.r.r@gmail.com"">m.rj.o.h.n.sl.o.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mrjohn.slo.s.h.arr@gmail.com"">mrjohn.slo.s.h.arr@gmail.com</a>
<a href=""mailto:mrj.oh.ns.l.osh.a.r.r@gmail.com"">mrj.oh.ns.l.osh.a.r.r@gmail.com</a>
<a href=""mailto:mrjo.hn.s.l.o.s.h.a.r.r@gmail.com"">mrjo.hn.s.l.o.s.h.a.r.r@gmail.com</a>
<a href=""mailto:mrj.oh.ns.losh.ar.r@gmail.com"">mrj.oh.ns.losh.ar.r@gmail.com</a>
<a href=""mailto:mrj.o.h.n.sloshar.r@gmail.com"">mrj.o.h.n.sloshar.r@gmail.com</a>
<a href=""mailto:m.rj.ohn.slosh.a.r.r@gmail.com"">m.rj.ohn.slosh.a.r.r@gmail.com</a>
<a href=""mailto:mrjoh.nsl.osha.rr@gmail.com"">mrjoh.nsl.osha.rr@gmail.com</a>
<a href=""mailto:m.r.joh.n.slos.h.ar.r@gmail.com"">m.r.joh.n.slos.h.ar.r@gmail.com</a>
<a href=""mailto:mr.joh.ns.l.os.ha.r.r@gmail.com"">mr.joh.ns.l.os.ha.r.r@gmail.com</a>
<a href=""mailto:m.r.john.s.lo.sh.a.rr@gmail.com"">m.r.john.s.lo.sh.a.rr@gmail.com</a>
<a href=""mailto:m.r.jo.h.nslo.sh.ar.r@gmail.com"">m.r.jo.h.nslo.sh.ar.r@gmail.com</a>
<a href=""mailto:mrj.o.hn.s.lo.sh.a.rr@gmail.com"">mrj.o.hn.s.lo.sh.a.rr@gmail.com</a>
<a href=""mailto:mrjoh.n.slos.h.a.rr@gmail.com"">mrjoh.n.slos.h.a.rr@gmail.com</a>
<a href=""mailto:m.r.joh.nsl.osh.a.rr@gmail.com"">m.r.joh.nsl.osh.a.rr@gmail.com</a>
<a href=""mailto:mrj.o.hn.sl.o.sh.ar.r@gmail.com"">mrj.o.hn.sl.o.sh.ar.r@gmail.com</a>
<a href=""mailto:mr.j.o.h.nslos.h.arr@gmail.com"">mr.j.o.h.nslos.h.arr@gmail.com</a>
<a href=""mailto:mr.j.ohnsl.o.sh.ar.r@gmail.com"">mr.j.ohnsl.o.sh.ar.r@gmail.com</a>
<a href=""mailto:m.rjo.h.n.slo.sh.ar.r@gmail.com"">m.rjo.h.n.slo.sh.ar.r@gmail.com</a>
<a href=""mailto:m.rjo.h.ns.l.o.sh.a.rr@gmail.com"">m.rjo.h.ns.l.o.sh.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.oh.n.sl.osh.a.rr@gmail.com"">m.r.j.oh.n.sl.osh.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.o.h.nsl.os.h.a.rr@gmail.com"">m.r.j.o.h.nsl.os.h.a.rr@gmail.com</a>
<a href=""mailto:m.r.j.oh.nsl.os.ha.r.r@gmail.com"">m.r.j.oh.nsl.os.ha.r.r@gmail.com</a>
<a href=""mailto:mrj.oh.ns.lo.sh.a.rr@gmail.com"">mrj.oh.ns.lo.sh.a.rr@gmail.com</a>
<a href=""mailto:m.rjo.h.n.slo.sh.a.r.r@gmail.com"">m.rjo.h.n.slo.sh.a.r.r@gmail.com</a>
<a href=""mailto:m.rj.o.h.ns.l.osharr@gmail.com"">m.rj.o.h.ns.l.osharr@gmail.com</a>
<a href=""mailto:m.rj.o.h.ns.lo.sh.arr@gmail.com"">m.rj.o.h.ns.lo.sh.arr@gmail.com</a>
<a href=""mailto:mrjohn.s.los.ha.rr@gmail.com"">mrjohn.s.los.ha.rr@gmail.com</a>
<a href=""mailto:mrjoh.ns.lo.s.h.ar.r@gmail.com"">mrjoh.ns.lo.s.h.ar.r@gmail.com</a>
<a href=""mailto:mrjohns.lo.sharr@gmail.com"">mrjohns.lo.sharr@gmail.com</a>
<a href=""mailto:mrjo.h.nsl.osh.arr@gmail.com"">mrjo.h.nsl.osh.arr@gmail.com</a>
<a href=""mailto:mrj.ohn.s.l.o.shar.r@gmail.com"">mrj.ohn.s.l.o.shar.r@gmail.com</a>
<a href=""mailto:m.r.j.o.hns.l.os.h.a.r.r@gmail.com"">m.r.j.o.hns.l.os.h.a.r.r@gmail.com</a>
<a href=""mailto:mrjoh.nslo.shar.r@gmail.com"">mrjoh.nslo.shar.r@gmail.com</a>
<a href=""mailto:mr.j.o.h.n.slo.sha.r.r@gmail.com"">mr.j.o.h.n.slo.sha.r.r@gmail.com</a>
<a href=""mailto:m.r.johnslosharr@gmail.com"">m.r.johnslosharr@gmail.com</a>
<a href=""mailto:m.r.jo.h.n.s.l.o.s.h.a.rr@gmail.com"">m.r.jo.h.n.s.l.o.s.h.a.rr@gmail.com</a>
<a href=""mailto:bankof545@gmail.com"">bankof545@gmail.com</a>
<a href=""mailto:b.a.n.ko.f5.4.5@gmail.com"">b.a.n.ko.f5.4.5@gmail.com</a>
<a href=""mailto:bank.o.f5.45@gmail.com"">bank.o.f5.45@gmail.com</a>
<a href=""mailto:bank.o.f.5.4.5@gmail.com"">bank.o.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.545@gmail.com"">ba.n.k.o.f.545@gmail.com</a>
<a href=""mailto:b.an.ko.f.54.5@gmail.com"">b.an.ko.f.54.5@gmail.com</a>
<a href=""mailto:ba.nkof.5.45@gmail.com"">ba.nkof.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.5.4.5@gmail.com"">ba.n.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.ankof.5.45@gmail.com"">b.ankof.5.45@gmail.com</a>
<a href=""mailto:ba.nk.of5.45@gmail.com"">ba.nk.of5.45@gmail.com</a>
<a href=""mailto:ban.k.of.5.4.5@gmail.com"">ban.k.of.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.of.5.4.5@gmail.com"">b.a.nk.of.5.4.5@gmail.com</a>
<a href=""mailto:ba.nko.f.54.5@gmail.com"">ba.nko.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f545@gmail.com"">b.a.nk.o.f545@gmail.com</a>
<a href=""mailto:b.ank.o.f.54.5@gmail.com"">b.ank.o.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.of545@gmail.com"">b.a.nk.of545@gmail.com</a>
<a href=""mailto:banko.f5.45@gmail.com"">banko.f5.45@gmail.com</a>
<a href=""mailto:b.a.nko.f.545@gmail.com"">b.a.nko.f.545@gmail.com</a>
<a href=""mailto:ba.nk.of.5.45@gmail.com"">ba.nk.of.5.45@gmail.com</a>
<a href=""mailto:ban.k.of545@gmail.com"">ban.k.of545@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.54.5@gmail.com"">b.a.nk.o.f.54.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f545@gmail.com"">b.a.n.ko.f545@gmail.com</a>
<a href=""mailto:b.a.nkof.5.4.5@gmail.com"">b.a.nkof.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nkof.545@gmail.com"">b.a.nkof.545@gmail.com</a>
<a href=""mailto:b.a.n.ko.f54.5@gmail.com"">b.a.n.ko.f54.5@gmail.com</a>
<a href=""mailto:ban.k.of5.4.5@gmail.com"">ban.k.of5.4.5@gmail.com</a>
<a href=""mailto:b.a.nkof5.45@gmail.com"">b.a.nkof5.45@gmail.com</a>
<a href=""mailto:ba.nk.o.f54.5@gmail.com"">ba.nk.o.f54.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f5.4.5@gmail.com"">ba.n.k.o.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.54.5@gmail.com"">b.a.n.ko.f.54.5@gmail.com</a>
<a href=""mailto:ba.nk.of5.4.5@gmail.com"">ba.nk.of5.4.5@gmail.com</a>
<a href=""mailto:bank.of.5.4.5@gmail.com"">bank.of.5.4.5@gmail.com</a>
<a href=""mailto:bank.o.f.5.45@gmail.com"">bank.o.f.5.45@gmail.com</a>
<a href=""mailto:b.a.nkof545@gmail.com"">b.a.nkof545@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f545@gmail.com"">b.a.n.k.o.f545@gmail.com</a>
<a href=""mailto:ba.nko.f.5.45@gmail.com"">ba.nko.f.5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f5.4.5@gmail.com"">b.a.n.k.o.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.nko.f.5.45@gmail.com"">b.a.nko.f.5.45@gmail.com</a>
<a href=""mailto:ba.nko.f5.45@gmail.com"">ba.nko.f5.45@gmail.com</a>
<a href=""mailto:b.an.kof5.45@gmail.com"">b.an.kof5.45@gmail.com</a>
<a href=""mailto:b.ankof.545@gmail.com"">b.ankof.545@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.545@gmail.com"">b.a.n.ko.f.545@gmail.com</a>
<a href=""mailto:b.a.nk.o.f5.4.5@gmail.com"">b.a.nk.o.f5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.of545@gmail.com"">ba.n.k.of545@gmail.com</a>
<a href=""mailto:b.a.n.kof545@gmail.com"">b.a.n.kof545@gmail.com</a>
<a href=""mailto:b.a.nko.f5.4.5@gmail.com"">b.a.nko.f5.4.5@gmail.com</a>
<a href=""mailto:ban.k.o.f.54.5@gmail.com"">ban.k.o.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.of.54.5@gmail.com"">b.a.nk.of.54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f54.5@gmail.com"">b.an.ko.f54.5@gmail.com</a>
<a href=""mailto:ban.kof54.5@gmail.com"">ban.kof54.5@gmail.com</a>
<a href=""mailto:b.a.nk.of.545@gmail.com"">b.a.nk.of.545@gmail.com</a>
<a href=""mailto:ba.n.k.of.54.5@gmail.com"">ba.n.k.of.54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f54.5@gmail.com"">b.a.n.k.o.f54.5@gmail.com</a>
<a href=""mailto:ba.nkof.54.5@gmail.com"">ba.nkof.54.5@gmail.com</a>
<a href=""mailto:ban.kof.5.4.5@gmail.com"">ban.kof.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.5.45@gmail.com"">b.a.nk.o.f.5.45@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.5.4.5@gmail.com"">b.a.n.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.nko.f.545@gmail.com"">ba.nko.f.545@gmail.com</a>
<a href=""mailto:banko.f.54.5@gmail.com"">banko.f.54.5@gmail.com</a>
<a href=""mailto:ban.k.o.f.5.45@gmail.com"">ban.k.o.f.5.45@gmail.com</a>
<a href=""mailto:bank.of545@gmail.com"">bank.of545@gmail.com</a>
<a href=""mailto:b.a.nkof5.4.5@gmail.com"">b.a.nkof5.4.5@gmail.com</a>
<a href=""mailto:b.an.kof.5.45@gmail.com"">b.an.kof.5.45@gmail.com</a>
<a href=""mailto:b.an.ko.f5.4.5@gmail.com"">b.an.ko.f5.4.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f.5.4.5@gmail.com"">ba.n.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.an.k.o.f545@gmail.com"">b.an.k.o.f545@gmail.com</a>
<a href=""mailto:ba.n.ko.f.54.5@gmail.com"">ba.n.ko.f.54.5@gmail.com</a>
<a href=""mailto:b.a.n.kof54.5@gmail.com"">b.a.n.kof54.5@gmail.com</a>
<a href=""mailto:ba.nkof5.45@gmail.com"">ba.nkof5.45@gmail.com</a>
<a href=""mailto:b.an.k.o.f.545@gmail.com"">b.an.k.o.f.545@gmail.com</a>
<a href=""mailto:b.an.k.of54.5@gmail.com"">b.an.k.of54.5@gmail.com</a>
<a href=""mailto:b.an.k.o.f5.45@gmail.com"">b.an.k.o.f5.45@gmail.com</a>
<a href=""mailto:b.ank.of5.45@gmail.com"">b.ank.of5.45@gmail.com</a>
<a href=""mailto:bank.of5.45@gmail.com"">bank.of5.45@gmail.com</a>
<a href=""mailto:ba.n.kof5.4.5@gmail.com"">ba.n.kof5.4.5@gmail.com</a>
<a href=""mailto:b.ank.o.f.545@gmail.com"">b.ank.o.f.545@gmail.com</a>
<a href=""mailto:ba.n.ko.f.5.45@gmail.com"">ba.n.ko.f.5.45@gmail.com</a>
<a href=""mailto:bankof5.45@gmail.com"">bankof5.45@gmail.com</a>
<a href=""mailto:bankof.54.5@gmail.com"">bankof.54.5@gmail.com</a>
<a href=""mailto:ba.nko.f.5.4.5@gmail.com"">ba.nko.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.5.45@gmail.com"">ba.n.k.o.f.5.45@gmail.com</a>
<a href=""mailto:b.anko.f545@gmail.com"">b.anko.f545@gmail.com</a>
<a href=""mailto:ba.n.k.of.5.4.5@gmail.com"">ba.n.k.of.5.4.5@gmail.com</a>
<a href=""mailto:ban.k.o.f54.5@gmail.com"">ban.k.o.f54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f54.5@gmail.com"">b.a.nk.o.f54.5@gmail.com</a>
<a href=""mailto:b.ank.of545@gmail.com"">b.ank.of545@gmail.com</a>
<a href=""mailto:ba.n.k.o.f545@gmail.com"">ba.n.k.o.f545@gmail.com</a>
<a href=""mailto:b.an.ko.f5.45@gmail.com"">b.an.ko.f5.45@gmail.com</a>
<a href=""mailto:bankof.545@gmail.com"">bankof.545@gmail.com</a>
<a href=""mailto:b.an.kof54.5@gmail.com"">b.an.kof54.5@gmail.com</a>
<a href=""mailto:ba.nkof.5.4.5@gmail.com"">ba.nkof.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f5.45@gmail.com"">b.a.nk.o.f5.45@gmail.com</a>
<a href=""mailto:ba.n.kof.545@gmail.com"">ba.n.kof.545@gmail.com</a>
<a href=""mailto:b.anko.f5.4.5@gmail.com"">b.anko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.545@gmail.com"">b.a.nk.o.f.545@gmail.com</a>
<a href=""mailto:b.a.nko.f545@gmail.com"">b.a.nko.f545@gmail.com</a>
<a href=""mailto:b.an.ko.f.5.4.5@gmail.com"">b.an.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.ank.o.f54.5@gmail.com"">b.ank.o.f54.5@gmail.com</a>
<a href=""mailto:ba.nkof54.5@gmail.com"">ba.nkof54.5@gmail.com</a>
<a href=""mailto:b.ankof5.45@gmail.com"">b.ankof5.45@gmail.com</a>
<a href=""mailto:ban.ko.f.5.4.5@gmail.com"">ban.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of.5.4.5@gmail.com"">b.a.n.k.of.5.4.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f.545@gmail.com"">ba.n.ko.f.545@gmail.com</a>
<a href=""mailto:ba.nk.of.5.4.5@gmail.com"">ba.nk.of.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f5.45@gmail.com"">b.a.n.k.o.f5.45@gmail.com</a>
<a href=""mailto:ban.ko.f5.45@gmail.com"">ban.ko.f5.45@gmail.com</a>
<a href=""mailto:bank.o.f54.5@gmail.com"">bank.o.f54.5@gmail.com</a>
<a href=""mailto:ban.kof545@gmail.com"">ban.kof545@gmail.com</a>
<a href=""mailto:ba.nk.of54.5@gmail.com"">ba.nk.of54.5@gmail.com</a>
<a href=""mailto:b.an.k.of.54.5@gmail.com"">b.an.k.of.54.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f54.5@gmail.com"">ba.n.k.o.f54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of545@gmail.com"">b.a.n.k.of545@gmail.com</a>
<a href=""mailto:b.an.kof5.4.5@gmail.com"">b.an.kof5.4.5@gmail.com</a>
<a href=""mailto:banko.f5.4.5@gmail.com"">banko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.nkof.5.45@gmail.com"">b.a.nkof.5.45@gmail.com</a>
<a href=""mailto:banko.f545@gmail.com"">banko.f545@gmail.com</a>
<a href=""mailto:b.a.nk.of.5.45@gmail.com"">b.a.nk.of.5.45@gmail.com</a>
<a href=""mailto:b.an.kof545@gmail.com"">b.an.kof545@gmail.com</a>
<a href=""mailto:b.an.k.of.5.45@gmail.com"">b.an.k.of.5.45@gmail.com</a>
<a href=""mailto:b.ank.o.f5.45@gmail.com"">b.ank.o.f5.45@gmail.com</a>
<a href=""mailto:ba.nk.o.f5.45@gmail.com"">ba.nk.o.f5.45@gmail.com</a>
<a href=""mailto:b.a.nk.of5.45@gmail.com"">b.a.nk.of5.45@gmail.com</a>
<a href=""mailto:b.an.k.of5.45@gmail.com"">b.an.k.of5.45@gmail.com</a>
<a href=""mailto:b.anko.f.5.45@gmail.com"">b.anko.f.5.45@gmail.com</a>
<a href=""mailto:ba.nk.o.f.5.45@gmail.com"">ba.nk.o.f.5.45@gmail.com</a>
<a href=""mailto:ba.nk.o.f545@gmail.com"">ba.nk.o.f545@gmail.com</a>
<a href=""mailto:ba.nk.of.545@gmail.com"">ba.nk.of.545@gmail.com</a>
<a href=""mailto:b.ank.of.54.5@gmail.com"">b.ank.of.54.5@gmail.com</a>
<a href=""mailto:b.a.nko.f54.5@gmail.com"">b.a.nko.f54.5@gmail.com</a>
<a href=""mailto:b.ank.of.545@gmail.com"">b.ank.of.545@gmail.com</a>
<a href=""mailto:ban.k.o.f5.45@gmail.com"">ban.k.o.f5.45@gmail.com</a>
<a href=""mailto:b.a.nk.of54.5@gmail.com"">b.a.nk.of54.5@gmail.com</a>
<a href=""mailto:bankof54.5@gmail.com"">bankof54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.545@gmail.com"">b.a.n.k.o.f.545@gmail.com</a>
<a href=""mailto:ban.kof.5.45@gmail.com"">ban.kof.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.of54.5@gmail.com"">ba.n.k.of54.5@gmail.com</a>
<a href=""mailto:bank.of5.4.5@gmail.com"">bank.of5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.of5.4.5@gmail.com"">ba.n.k.of5.4.5@gmail.com</a>
<a href=""mailto:ban.k.of.5.45@gmail.com"">ban.k.of.5.45@gmail.com</a>
<a href=""mailto:banko.f54.5@gmail.com"">banko.f54.5@gmail.com</a>
<a href=""mailto:b.an.k.of.5.4.5@gmail.com"">b.an.k.of.5.4.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f5.45@gmail.com"">ba.n.ko.f5.45@gmail.com</a>
<a href=""mailto:ban.k.of.54.5@gmail.com"">ban.k.of.54.5@gmail.com</a>
<a href=""mailto:b.ankof.5.4.5@gmail.com"">b.ankof.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.5.4.5@gmail.com"">b.a.nk.o.f.5.4.5@gmail.com</a>
<a href=""mailto:banko.f.545@gmail.com"">banko.f.545@gmail.com</a>
<a href=""mailto:b.an.kof.54.5@gmail.com"">b.an.kof.54.5@gmail.com</a>
<a href=""mailto:banko.f.5.4.5@gmail.com"">banko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.ank.of.5.45@gmail.com"">b.ank.of.5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.of.545@gmail.com"">b.a.n.k.of.545@gmail.com</a>
<a href=""mailto:b.an.ko.f.5.45@gmail.com"">b.an.ko.f.5.45@gmail.com</a>
<a href=""mailto:ba.n.kof.5.4.5@gmail.com"">ba.n.kof.5.4.5@gmail.com</a>
<a href=""mailto:bankof5.4.5@gmail.com"">bankof5.4.5@gmail.com</a>
<a href=""mailto:ban.kof5.4.5@gmail.com"">ban.kof5.4.5@gmail.com</a>
<a href=""mailto:b.ankof545@gmail.com"">b.ankof545@gmail.com</a>
<a href=""mailto:b.a.n.k.of54.5@gmail.com"">b.a.n.k.of54.5@gmail.com</a>
<a href=""mailto:bank.o.f5.4.5@gmail.com"">bank.o.f5.4.5@gmail.com</a>
<a href=""mailto:bankof545@gmail.com"">bankof545@gmail.com</a>
<a href=""mailto:ban.k.of.545@gmail.com"">ban.k.of.545@gmail.com</a>
<a href=""mailto:b.an.k.o.f54.5@gmail.com"">b.an.k.o.f54.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f545@gmail.com"">ba.n.ko.f545@gmail.com</a>
<a href=""mailto:b.ank.o.f.5.45@gmail.com"">b.ank.o.f.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.o.f5.45@gmail.com"">ba.n.k.o.f5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.of5.4.5@gmail.com"">b.a.n.k.of5.4.5@gmail.com</a>
<a href=""mailto:ban.k.of5.45@gmail.com"">ban.k.of5.45@gmail.com</a>
<a href=""mailto:b.an.k.of5.4.5@gmail.com"">b.an.k.of5.4.5@gmail.com</a>
<a href=""mailto:b.anko.f.545@gmail.com"">b.anko.f.545@gmail.com</a>
<a href=""mailto:ba.nk.o.f.54.5@gmail.com"">ba.nk.o.f.54.5@gmail.com</a>
<a href=""mailto:ban.ko.f.5.45@gmail.com"">ban.ko.f.5.45@gmail.com</a>
<a href=""mailto:b.ank.of54.5@gmail.com"">b.ank.of54.5@gmail.com</a>
<a href=""mailto:b.a.n.kof.5.45@gmail.com"">b.a.n.kof.5.45@gmail.com</a>
<a href=""mailto:bank.o.f.54.5@gmail.com"">bank.o.f.54.5@gmail.com</a>
<a href=""mailto:ban.ko.f54.5@gmail.com"">ban.ko.f54.5@gmail.com</a>
<a href=""mailto:ban.kof5.45@gmail.com"">ban.kof5.45@gmail.com</a>
<a href=""mailto:b.an.k.o.f.5.45@gmail.com"">b.an.k.o.f.5.45@gmail.com</a>
<a href=""mailto:b.a.nko.f5.45@gmail.com"">b.a.nko.f5.45@gmail.com</a>
<a href=""mailto:ban.ko.f.54.5@gmail.com"">ban.ko.f.54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f545@gmail.com"">b.an.ko.f545@gmail.com</a>
<a href=""mailto:b.ank.o.f5.4.5@gmail.com"">b.ank.o.f5.4.5@gmail.com</a>
<a href=""mailto:ban.ko.f545@gmail.com"">ban.ko.f545@gmail.com</a>
<a href=""mailto:b.an.k.o.f.5.4.5@gmail.com"">b.an.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.kof5.45@gmail.com"">b.a.n.kof5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.45@gmail.com"">b.a.n.k.o.f.5.45@gmail.com</a>
<a href=""mailto:b.ank.o.f.5.4.5@gmail.com"">b.ank.o.f.5.4.5@gmail.com</a>
<a href=""mailto:ban.ko.f.545@gmail.com"">ban.ko.f.545@gmail.com</a>
<a href=""mailto:b.ankof5.4.5@gmail.com"">b.ankof5.4.5@gmail.com</a>
<a href=""mailto:bankof.5.45@gmail.com"">bankof.5.45@gmail.com</a>
<a href=""mailto:b.an.k.of.545@gmail.com"">b.an.k.of.545@gmail.com</a>
<a href=""mailto:b.an.kof.545@gmail.com"">b.an.kof.545@gmail.com</a>
<a href=""mailto:b.ank.of5.4.5@gmail.com"">b.ank.of5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of5.45@gmail.com"">b.a.n.k.of5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.4.5@gmail.com"">b.a.n.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.54.5@gmail.com"">b.a.n.k.o.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.of5.4.5@gmail.com"">b.a.nk.of5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof5.4.5@gmail.com"">ba.nkof5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof.545@gmail.com"">ba.nkof.545@gmail.com</a>
<a href=""mailto:ba.n.kof.54.5@gmail.com"">ba.n.kof.54.5@gmail.com</a>
<a href=""mailto:ba.nk.of545@gmail.com"">ba.nk.of545@gmail.com</a>
<a href=""mailto:bank.o.f545@gmail.com"">bank.o.f545@gmail.com</a>
<a href=""mailto:bank.of54.5@gmail.com"">bank.of54.5@gmail.com</a>
<a href=""mailto:b.anko.f5.45@gmail.com"">b.anko.f5.45@gmail.com</a>
<a href=""mailto:adesolak865@gmail.com"">adesolak865@gmail.com</a>
<a href=""mailto:ad.e.s.o.l.a.k8.6.5@gmail.com"">ad.e.s.o.l.a.k8.6.5@gmail.com</a>
<a href=""mailto:a.de.s.ol.ak.8.65@gmail.com"">a.de.s.ol.ak.8.65@gmail.com</a>
<a href=""mailto:a.d.e.so.l.a.k8.65@gmail.com"">a.d.e.so.l.a.k8.65@gmail.com</a>
<a href=""mailto:ade.s.o.l.ak86.5@gmail.com"">ade.s.o.l.ak86.5@gmail.com</a>
<a href=""mailto:a.de.so.l.ak8.6.5@gmail.com"">a.de.so.l.ak8.6.5@gmail.com</a>
<a href=""mailto:adesol.ak86.5@gmail.com"">adesol.ak86.5@gmail.com</a>
<a href=""mailto:a.des.olak86.5@gmail.com"">a.des.olak86.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.l.a.k.8.65@gmail.com"">ad.e.s.o.l.a.k.8.65@gmail.com</a>
<a href=""mailto:ad.e.so.l.a.k.8.6.5@gmail.com"">ad.e.so.l.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.d.es.o.l.ak.8.6.5@gmail.com"">a.d.es.o.l.ak.8.6.5@gmail.com</a>
<a href=""mailto:adesol.a.k.8.6.5@gmail.com"">adesol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.lak.8.6.5@gmail.com"">ad.e.s.o.lak.8.6.5@gmail.com</a>
<a href=""mailto:a.desolak8.6.5@gmail.com"">a.desolak8.6.5@gmail.com</a>
<a href=""mailto:a.desola.k86.5@gmail.com"">a.desola.k86.5@gmail.com</a>
<a href=""mailto:a.des.ol.ak865@gmail.com"">a.des.ol.ak865@gmail.com</a>
<a href=""mailto:ades.ola.k.8.65@gmail.com"">ades.ola.k.8.65@gmail.com</a>
<a href=""mailto:ade.s.olak86.5@gmail.com"">ade.s.olak86.5@gmail.com</a>
<a href=""mailto:a.d.e.s.o.l.a.k.865@gmail.com"">a.d.e.s.o.l.a.k.865@gmail.com</a>
<a href=""mailto:ade.s.o.lak.8.65@gmail.com"">ade.s.o.lak.8.65@gmail.com</a>
<a href=""mailto:ade.so.lak.8.6.5@gmail.com"">ade.so.lak.8.6.5@gmail.com</a>
<a href=""mailto:a.d.e.so.l.ak86.5@gmail.com"">a.d.e.so.l.ak86.5@gmail.com</a>
<a href=""mailto:a.d.es.ol.a.k.8.6.5@gmail.com"">a.d.es.ol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.d.eso.lak8.6.5@gmail.com"">a.d.eso.lak8.6.5@gmail.com</a>
<a href=""mailto:ad.es.ol.ak865@gmail.com"">ad.es.ol.ak865@gmail.com</a>
<a href=""mailto:a.de.s.o.l.a.k865@gmail.com"">a.de.s.o.l.a.k865@gmail.com</a>
<a href=""mailto:a.de.s.olak.8.65@gmail.com"">a.de.s.olak.8.65@gmail.com</a>
<a href=""mailto:a.d.e.so.lak.8.65@gmail.com"">a.d.e.so.lak.8.65@gmail.com</a>
<a href=""mailto:a.d.e.so.lak86.5@gmail.com"">a.d.e.so.lak86.5@gmail.com</a>
<a href=""mailto:a.des.ol.a.k8.6.5@gmail.com"">a.des.ol.a.k8.6.5@gmail.com</a>
<a href=""mailto:a.des.ol.ak8.65@gmail.com"">a.des.ol.ak8.65@gmail.com</a>
<a href=""mailto:ade.so.lak865@gmail.com"">ade.so.lak865@gmail.com</a>
<a href=""mailto:a.de.so.la.k.8.6.5@gmail.com"">a.de.so.la.k.8.6.5@gmail.com</a>
<a href=""mailto:adesola.k86.5@gmail.com"">adesola.k86.5@gmail.com</a>
<a href=""mailto:ades.olak8.65@gmail.com"">ades.olak8.65@gmail.com</a>
<a href=""mailto:ad.e.s.ola.k.865@gmail.com"">ad.e.s.ola.k.865@gmail.com</a>
<a href=""mailto:ade.solak.865@gmail.com"">ade.solak.865@gmail.com</a>
<a href=""mailto:a.de.s.o.la.k865@gmail.com"">a.de.s.o.la.k865@gmail.com</a>
<a href=""mailto:a.de.solak8.6.5@gmail.com"">a.de.solak8.6.5@gmail.com</a>
<a href=""mailto:a.d.e.so.lak.86.5@gmail.com"">a.d.e.so.lak.86.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.la.k8.65@gmail.com"">ad.e.s.o.la.k8.65@gmail.com</a>
<a href=""mailto:a.de.s.ol.ak86.5@gmail.com"">a.de.s.ol.ak86.5@gmail.com</a>
<a href=""mailto:a.d.es.o.l.a.k86.5@gmail.com"">a.d.es.o.l.a.k86.5@gmail.com</a>
<a href=""mailto:ad.e.sol.ak.86.5@gmail.com"">ad.e.sol.ak.86.5@gmail.com</a>
<a href=""mailto:adeso.l.ak86.5@gmail.com"">adeso.l.ak86.5@gmail.com</a>
<a href=""mailto:a.des.o.lak86.5@gmail.com"">a.des.o.lak86.5@gmail.com</a>
<a href=""mailto:a.d.es.ol.a.k86.5@gmail.com"">a.d.es.ol.a.k86.5@gmail.com</a>
<a href=""mailto:ades.o.lak.86.5@gmail.com"">ades.o.lak.86.5@gmail.com</a>
<a href=""mailto:a.de.s.ol.a.k.8.65@gmail.com"">a.de.s.ol.a.k.8.65@gmail.com</a>
<a href=""mailto:a.d.e.so.lak.865@gmail.com"">a.d.e.so.lak.865@gmail.com</a>
<a href=""mailto:ad.eso.lak.8.65@gmail.com"">ad.eso.lak.8.65@gmail.com</a>
<a href=""mailto:ade.so.l.ak.86.5@gmail.com"">ade.so.l.ak.86.5@gmail.com</a>
<a href=""mailto:a.des.ol.a.k86.5@gmail.com"">a.des.ol.a.k86.5@gmail.com</a>
<a href=""mailto:ade.s.ol.ak.8.6.5@gmail.com"">ade.s.ol.ak.8.6.5@gmail.com</a>
<a href=""mailto:ade.so.l.a.k86.5@gmail.com"">ade.so.l.a.k86.5@gmail.com</a>
<a href=""mailto:ad.e.so.l.ak86.5@gmail.com"">ad.e.so.l.ak86.5@gmail.com</a>
<a href=""mailto:ad.es.ola.k.8.65@gmail.com"">ad.es.ola.k.8.65@gmail.com</a>
<a href=""mailto:a.d.es.o.l.ak8.6.5@gmail.com"">a.d.es.o.l.ak8.6.5@gmail.com</a>
<a href=""mailto:a.de.sola.k8.6.5@gmail.com"">a.de.sola.k8.6.5@gmail.com</a>
<a href=""mailto:ade.solak.86.5@gmail.com"">ade.solak.86.5@gmail.com</a>
<a href=""mailto:a.de.solak.8.6.5@gmail.com"">a.de.solak.8.6.5@gmail.com</a>
<a href=""mailto:a.de.s.ola.k865@gmail.com"">a.de.s.ola.k865@gmail.com</a>
<a href=""mailto:a.des.o.lak.86.5@gmail.com"">a.des.o.lak.86.5@gmail.com</a>
<a href=""mailto:a.des.o.lak8.65@gmail.com"">a.des.o.lak8.65@gmail.com</a>
<a href=""mailto:a.des.o.lak.865@gmail.com"">a.des.o.lak.865@gmail.com</a>
<a href=""mailto:ad.e.s.olak.86.5@gmail.com"">ad.e.s.olak.86.5@gmail.com</a>
<a href=""mailto:a.deso.la.k86.5@gmail.com"">a.deso.la.k86.5@gmail.com</a>
<a href=""mailto:a.de.s.olak8.65@gmail.com"">a.de.s.olak8.65@gmail.com</a>
<a href=""mailto:a.d.e.so.l.ak.8.6.5@gmail.com"">a.d.e.so.l.ak.8.6.5@gmail.com</a>
<a href=""mailto:ade.s.o.l.ak8.65@gmail.com"">ade.s.o.l.ak8.65@gmail.com</a>
<a href=""mailto:a.deso.l.ak.8.6.5@gmail.com"">a.deso.l.ak.8.6.5@gmail.com</a>
<a href=""mailto:ad.es.o.l.ak.86.5@gmail.com"">ad.es.o.l.ak.86.5@gmail.com</a>
<a href=""mailto:ades.ol.ak86.5@gmail.com"">ades.ol.ak86.5@gmail.com</a>
<a href=""mailto:ade.s.o.l.ak.8.65@gmail.com"">ade.s.o.l.ak.8.65@gmail.com</a>
<a href=""mailto:ad.esol.ak.86.5@gmail.com"">ad.esol.ak.86.5@gmail.com</a>
<a href=""mailto:a.d.e.s.o.l.ak.8.65@gmail.com"">a.d.e.s.o.l.ak.8.65@gmail.com</a>
<a href=""mailto:ad.e.s.o.lak.86.5@gmail.com"">ad.e.s.o.lak.86.5@gmail.com</a>
<a href=""mailto:a.d.es.o.l.a.k865@gmail.com"">a.d.es.o.l.a.k865@gmail.com</a>
<a href=""mailto:a.de.s.o.la.k8.6.5@gmail.com"">a.de.s.o.la.k8.6.5@gmail.com</a>
<a href=""mailto:a.deso.l.ak8.6.5@gmail.com"">a.deso.l.ak8.6.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.l.a.k8.65@gmail.com"">ad.e.s.o.l.a.k8.65@gmail.com</a>
<a href=""mailto:ad.e.so.l.a.k8.6.5@gmail.com"">ad.e.so.l.a.k8.6.5@gmail.com</a>
<a href=""mailto:ade.so.l.a.k8.6.5@gmail.com"">ade.so.l.a.k8.6.5@gmail.com</a>
<a href=""mailto:ad.e.sol.a.k.8.6.5@gmail.com"">ad.e.sol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.d.esol.a.k.8.6.5@gmail.com"">a.d.esol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.d.e.s.o.l.a.k.8.6.5@gmail.com"">a.d.e.s.o.l.a.k.8.6.5@gmail.com</a>
<a href=""mailto:ad.es.o.lak.865@gmail.com"">ad.es.o.lak.865@gmail.com</a>
<a href=""mailto:a.desolak.8.6.5@gmail.com"">a.desolak.8.6.5@gmail.com</a>
<a href=""mailto:a.d.es.o.lak8.6.5@gmail.com"">a.d.es.o.lak8.6.5@gmail.com</a>
<a href=""mailto:a.d.eso.l.ak865@gmail.com"">a.d.eso.l.ak865@gmail.com</a>
<a href=""mailto:a.d.e.s.o.lak86.5@gmail.com"">a.d.e.s.o.lak86.5@gmail.com</a>
<a href=""mailto:a.desol.a.k.8.6.5@gmail.com"">a.desol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:ade.s.ol.ak8.65@gmail.com"">ade.s.ol.ak8.65@gmail.com</a>
<a href=""mailto:a.desol.a.k8.6.5@gmail.com"">a.desol.a.k8.6.5@gmail.com</a>
<a href=""mailto:ade.s.ol.a.k8.65@gmail.com"">ade.s.ol.a.k8.65@gmail.com</a>
<a href=""mailto:ades.ol.a.k86.5@gmail.com"">ades.ol.a.k86.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.lak86.5@gmail.com"">ad.e.s.o.lak86.5@gmail.com</a>
<a href=""mailto:a.d.e.s.ol.a.k.8.65@gmail.com"">a.d.e.s.ol.a.k.8.65@gmail.com</a>
<a href=""mailto:ades.o.la.k86.5@gmail.com"">ades.o.la.k86.5@gmail.com</a>
<a href=""mailto:a.de.so.l.ak.865@gmail.com"">a.de.so.l.ak.865@gmail.com</a>
<a href=""mailto:ad.e.s.ol.a.k.8.65@gmail.com"">ad.e.s.ol.a.k.8.65@gmail.com</a>
<a href=""mailto:ad.eso.la.k86.5@gmail.com"">ad.eso.la.k86.5@gmail.com</a>
<a href=""mailto:a.d.esol.ak8.6.5@gmail.com"">a.d.esol.ak8.6.5@gmail.com</a>
<a href=""mailto:adeso.lak.86.5@gmail.com"">adeso.lak.86.5@gmail.com</a>
<a href=""mailto:a.de.sola.k.865@gmail.com"">a.de.sola.k.865@gmail.com</a>
<a href=""mailto:ad.es.o.l.ak.8.6.5@gmail.com"">ad.es.o.l.ak.8.6.5@gmail.com</a>
<a href=""mailto:ad.es.o.la.k.86.5@gmail.com"">ad.es.o.la.k.86.5@gmail.com</a>
<a href=""mailto:a.de.so.l.a.k.8.6.5@gmail.com"">a.de.so.l.a.k.8.6.5@gmail.com</a>
<a href=""mailto:adesola.k8.65@gmail.com"">adesola.k8.65@gmail.com</a>
<a href=""mailto:ad.eso.lak.8.6.5@gmail.com"">ad.eso.lak.8.6.5@gmail.com</a>
<a href=""mailto:a.d.e.s.o.lak.8.65@gmail.com"">a.d.e.s.o.lak.8.65@gmail.com</a>
<a href=""mailto:ade.so.l.ak86.5@gmail.com"">ade.so.l.ak86.5@gmail.com</a>
<a href=""mailto:a.de.s.ol.a.k.86.5@gmail.com"">a.de.s.ol.a.k.86.5@gmail.com</a>
<a href=""mailto:adeso.l.a.k.8.65@gmail.com"">adeso.l.a.k.8.65@gmail.com</a>
<a href=""mailto:a.d.e.s.olak.865@gmail.com"">a.d.e.s.olak.865@gmail.com</a>
<a href=""mailto:a.des.o.l.a.k8.6.5@gmail.com"">a.des.o.l.a.k8.6.5@gmail.com</a>
<a href=""mailto:a.deso.lak86.5@gmail.com"">a.deso.lak86.5@gmail.com</a>
<a href=""mailto:a.de.sol.ak.8.6.5@gmail.com"">a.de.sol.ak.8.6.5@gmail.com</a>
<a href=""mailto:ade.s.o.la.k8.6.5@gmail.com"">ade.s.o.la.k8.6.5@gmail.com</a>
<a href=""mailto:ade.s.o.la.k.8.65@gmail.com"">ade.s.o.la.k.8.65@gmail.com</a>
<a href=""mailto:ad.es.o.l.a.k865@gmail.com"">ad.es.o.l.a.k865@gmail.com</a>
<a href=""mailto:a.de.s.o.l.a.k.86.5@gmail.com"">a.de.s.o.l.a.k.86.5@gmail.com</a>
<a href=""mailto:a.d.e.s.ol.ak.865@gmail.com"">a.d.e.s.ol.ak.865@gmail.com</a>
<a href=""mailto:a.de.s.ol.a.k.865@gmail.com"">a.de.s.ol.a.k.865@gmail.com</a>
<a href=""mailto:adesol.a.k865@gmail.com"">adesol.a.k865@gmail.com</a>
<a href=""mailto:ad.e.solak86.5@gmail.com"">ad.e.solak86.5@gmail.com</a>
<a href=""mailto:a.d.es.olak8.65@gmail.com"">a.d.es.olak8.65@gmail.com</a>
<a href=""mailto:a.des.o.l.a.k865@gmail.com"">a.des.o.l.a.k865@gmail.com</a>
<a href=""mailto:adesol.ak.8.6.5@gmail.com"">adesol.ak.8.6.5@gmail.com</a>
<a href=""mailto:ad.eso.lak8.6.5@gmail.com"">ad.eso.lak8.6.5@gmail.com</a>
<a href=""mailto:a.d.eso.la.k.8.6.5@gmail.com"">a.d.eso.la.k.8.6.5@gmail.com</a>
<a href=""mailto:ad.es.ol.ak.8.65@gmail.com"">ad.es.ol.ak.8.65@gmail.com</a>
<a href=""mailto:a.deso.la.k8.65@gmail.com"">a.deso.la.k8.65@gmail.com</a>
<a href=""mailto:adeso.l.ak8.6.5@gmail.com"">adeso.l.ak8.6.5@gmail.com</a>
<a href=""mailto:a.d.e.so.l.ak.865@gmail.com"">a.d.e.so.l.ak.865@gmail.com</a>
<a href=""mailto:a.d.e.sola.k.86.5@gmail.com"">a.d.e.sola.k.86.5@gmail.com</a>
<a href=""mailto:ade.s.olak.86.5@gmail.com"">ade.s.olak.86.5@gmail.com</a>
<a href=""mailto:ades.o.l.a.k.8.65@gmail.com"">ades.o.l.a.k.8.65@gmail.com</a>
<a href=""mailto:a.deso.la.k.86.5@gmail.com"">a.deso.la.k.86.5@gmail.com</a>
<a href=""mailto:ade.sol.ak.8.65@gmail.com"">ade.sol.ak.8.65@gmail.com</a>
<a href=""mailto:a.d.es.o.lak.8.6.5@gmail.com"">a.d.es.o.lak.8.6.5@gmail.com</a>
<a href=""mailto:ades.o.l.ak865@gmail.com"">ades.o.l.ak865@gmail.com</a>
<a href=""mailto:a.de.sol.ak865@gmail.com"">a.de.sol.ak865@gmail.com</a>
<a href=""mailto:ade.so.la.k86.5@gmail.com"">ade.so.la.k86.5@gmail.com</a>
<a href=""mailto:ad.es.ol.ak.8.6.5@gmail.com"">ad.es.ol.ak.8.6.5@gmail.com</a>
<a href=""mailto:a.de.s.ol.ak8.6.5@gmail.com"">a.de.s.ol.ak8.6.5@gmail.com</a>
<a href=""mailto:ad.e.sol.ak86.5@gmail.com"">ad.e.sol.ak86.5@gmail.com</a>
<a href=""mailto:ad.esolak8.65@gmail.com"">ad.esolak8.65@gmail.com</a>
<a href=""mailto:ad.e.sola.k.8.65@gmail.com"">ad.e.sola.k.8.65@gmail.com</a>
<a href=""mailto:a.de.sol.ak8.65@gmail.com"">a.de.sol.ak8.65@gmail.com</a>
<a href=""mailto:a.de.sol.a.k.8.6.5@gmail.com"">a.de.sol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.des.ola.k865@gmail.com"">a.des.ola.k865@gmail.com</a>
<a href=""mailto:a.d.e.s.olak865@gmail.com"">a.d.e.s.olak865@gmail.com</a>
<a href=""mailto:a.de.sol.ak.86.5@gmail.com"">a.de.sol.ak.86.5@gmail.com</a>
<a href=""mailto:a.desol.a.k.86.5@gmail.com"">a.desol.a.k.86.5@gmail.com</a>
<a href=""mailto:ade.sol.ak865@gmail.com"">ade.sol.ak865@gmail.com</a>
<a href=""mailto:a.d.eso.lak.86.5@gmail.com"">a.d.eso.lak.86.5@gmail.com</a>
<a href=""mailto:a.d.es.ol.ak8.65@gmail.com"">a.d.es.ol.ak8.65@gmail.com</a>
<a href=""mailto:a.d.es.o.la.k.865@gmail.com"">a.d.es.o.la.k.865@gmail.com</a>
<a href=""mailto:a.de.so.lak.8.65@gmail.com"">a.de.so.lak.8.65@gmail.com</a>
<a href=""mailto:ad.es.o.l.a.k.865@gmail.com"">ad.es.o.l.a.k.865@gmail.com</a>
<a href=""mailto:adeso.la.k865@gmail.com"">adeso.la.k865@gmail.com</a>
<a href=""mailto:ad.e.sola.k86.5@gmail.com"">ad.e.sola.k86.5@gmail.com</a>
<a href=""mailto:a.d.e.s.o.lak8.6.5@gmail.com"">a.d.e.s.o.lak8.6.5@gmail.com</a>
<a href=""mailto:a.d.es.olak.86.5@gmail.com"">a.d.es.olak.86.5@gmail.com</a>
<a href=""mailto:ade.s.o.lak.865@gmail.com"">ade.s.o.lak.865@gmail.com</a>
<a href=""mailto:ad.eso.l.ak.86.5@gmail.com"">ad.eso.l.ak.86.5@gmail.com</a>
<a href=""mailto:ad.e.sola.k8.6.5@gmail.com"">ad.e.sola.k8.6.5@gmail.com</a>
<a href=""mailto:ad.e.sol.a.k.8.65@gmail.com"">ad.e.sol.a.k.8.65@gmail.com</a>
<a href=""mailto:a.des.o.l.a.k.865@gmail.com"">a.des.o.l.a.k.865@gmail.com</a>
<a href=""mailto:ade.sol.a.k.86.5@gmail.com"">ade.sol.a.k.86.5@gmail.com</a>
<a href=""mailto:ad.esol.a.k.8.6.5@gmail.com"">ad.esol.a.k.8.6.5@gmail.com</a>
<a href=""mailto:ad.es.olak86.5@gmail.com"">ad.es.olak86.5@gmail.com</a>
<a href=""mailto:ad.e.s.ol.ak865@gmail.com"">ad.e.s.ol.ak865@gmail.com</a>
<a href=""mailto:ad.es.o.l.a.k.8.6.5@gmail.com"">ad.es.o.l.a.k.8.6.5@gmail.com</a>
<a href=""mailto:a.de.so.lak8.65@gmail.com"">a.de.so.lak8.65@gmail.com</a>
<a href=""mailto:a.deso.l.a.k8.65@gmail.com"">a.deso.l.a.k8.65@gmail.com</a>
<a href=""mailto:a.d.e.s.ola.k865@gmail.com"">a.d.e.s.ola.k865@gmail.com</a>
<a href=""mailto:a.d.e.sol.a.k8.65@gmail.com"">a.d.e.sol.a.k8.65@gmail.com</a>
<a href=""mailto:ades.ol.ak.8.6.5@gmail.com"">ades.ol.ak.8.6.5@gmail.com</a>
<a href=""mailto:a.d.esol.a.k8.6.5@gmail.com"">a.d.esol.a.k8.6.5@gmail.com</a>
<a href=""mailto:ad.e.s.ola.k.86.5@gmail.com"">ad.e.s.ola.k.86.5@gmail.com</a>
<a href=""mailto:a.deso.l.ak.865@gmail.com"">a.deso.l.ak.865@gmail.com</a>
<a href=""mailto:a.desola.k.8.65@gmail.com"">a.desola.k.8.65@gmail.com</a>
<a href=""mailto:ade.s.ol.ak86.5@gmail.com"">ade.s.ol.ak86.5@gmail.com</a>
<a href=""mailto:ad.eso.l.ak.865@gmail.com"">ad.eso.l.ak.865@gmail.com</a>
<a href=""mailto:ad.e.s.o.la.k86.5@gmail.com"">ad.e.s.o.la.k86.5@gmail.com</a>
<a href=""mailto:a.d.e.so.lak8.65@gmail.com"">a.d.e.so.lak8.65@gmail.com</a>
<a href=""mailto:ade.s.o.la.k86.5@gmail.com"">ade.s.o.la.k86.5@gmail.com</a>
<a href=""mailto:ade.solak86.5@gmail.com"">ade.solak86.5@gmail.com</a>
<a href=""mailto:a.desol.a.k.8.65@gmail.com"">a.desol.a.k.8.65@gmail.com</a>
<a href=""mailto:ade.s.ol.a.k86.5@gmail.com"">ade.s.ol.a.k86.5@gmail.com</a>
<a href=""mailto:a.d.eso.la.k.86.5@gmail.com"">a.d.eso.la.k.86.5@gmail.com</a>
<a href=""mailto:ad.e.s.o.l.a.k.865@gmail.com"">ad.e.s.o.l.a.k.865@gmail.com</a>
<a href=""mailto:adesol.a.k86.5@gmail.com"">adesol.a.k86.5@gmail.com</a>
<a href=""mailto:adesola.k865@gmail.com"">adesola.k865@gmail.com</a>
<a href=""mailto:ad.e.solak8.6.5@gmail.com"">ad.e.solak8.6.5@gmail.com</a>
<a href=""mailto:ad.es.olak.8.65@gmail.com"">ad.es.olak.8.65@gmail.com</a>
<a href=""mailto:a.de.sola.k.8.65@gmail.com"">a.de.sola.k.8.65@gmail.com</a>
<a href=""mailto:ad.e.solak8.65@gmail.com"">ad.e.solak8.65@gmail.com</a>
<a href=""mailto:a.de.sol.ak.8.65@gmail.com"">a.de.sol.ak.8.65@gmail.com</a>
<a href=""mailto:bankof0009@gmail.com"">bankof0009@gmail.com</a>
<a href=""mailto:bankof0.0.0.9@gmail.com"">bankof0.0.0.9@gmail.com</a>
<a href=""mailto:bank.of0.009@gmail.com"">bank.of0.009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.0.9@gmail.com"">b.a.n.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.ko.f0.0.09@gmail.com"">b.an.ko.f0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.o.f0009@gmail.com"">ba.n.k.o.f0009@gmail.com</a>
<a href=""mailto:banko.f00.09@gmail.com"">banko.f00.09@gmail.com</a>
<a href=""mailto:b.an.kof0.0.09@gmail.com"">b.an.kof0.0.09@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0.00.9@gmail.com"">b.a.nk.o.f.0.00.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.0.0.9@gmail.com"">ban.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:bank.of.0.009@gmail.com"">bank.of.0.009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f00.09@gmail.com"">b.a.nk.o.f00.09@gmail.com</a>
<a href=""mailto:b.a.nkof0.0.09@gmail.com"">b.a.nkof0.0.09@gmail.com</a>
<a href=""mailto:ba.n.kof.0.0.0.9@gmail.com"">ba.n.kof.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.kof0.0.09@gmail.com"">ba.n.kof0.0.09@gmail.com</a>
<a href=""mailto:ba.nkof0009@gmail.com"">ba.nkof0009@gmail.com</a>
<a href=""mailto:b.anko.f.000.9@gmail.com"">b.anko.f.000.9@gmail.com</a>
<a href=""mailto:b.an.k.of00.09@gmail.com"">b.an.k.of00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f0.0.0.9@gmail.com"">b.an.k.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.of.0.009@gmail.com"">b.ank.of.0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.of.000.9@gmail.com"">b.a.n.k.of.000.9@gmail.com</a>
<a href=""mailto:ba.nko.f.0.009@gmail.com"">ba.nko.f.0.009@gmail.com</a>
<a href=""mailto:ba.nk.o.f000.9@gmail.com"">ba.nk.o.f000.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.00.0.9@gmail.com"">b.ank.o.f.00.0.9@gmail.com</a>
<a href=""mailto:ba.nk.of0.00.9@gmail.com"">ba.nk.of0.00.9@gmail.com</a>
<a href=""mailto:ban.kof000.9@gmail.com"">ban.kof000.9@gmail.com</a>
<a href=""mailto:ba.nko.f.0.0.09@gmail.com"">ba.nko.f.0.0.09@gmail.com</a>
<a href=""mailto:ban.kof.0.00.9@gmail.com"">ban.kof.0.00.9@gmail.com</a>
<a href=""mailto:ban.k.o.f0.009@gmail.com"">ban.k.o.f0.009@gmail.com</a>
<a href=""mailto:b.ank.of0.0.09@gmail.com"">b.ank.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.ko.f0.0.09@gmail.com"">b.a.n.ko.f0.0.09@gmail.com</a>
<a href=""mailto:b.a.nkof.0009@gmail.com"">b.a.nkof.0009@gmail.com</a>
<a href=""mailto:ba.nk.o.f.0.0.09@gmail.com"">ba.nk.o.f.0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.0.0.09@gmail.com"">b.a.n.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.00.09@gmail.com"">ba.n.k.of.00.09@gmail.com</a>
<a href=""mailto:b.anko.f.0.00.9@gmail.com"">b.anko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.kof.0.0.09@gmail.com"">b.a.n.kof.0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.of00.0.9@gmail.com"">b.a.n.k.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of00.09@gmail.com"">b.a.n.k.of00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.0.0.09@gmail.com"">ba.n.k.of.0.0.09@gmail.com</a>
<a href=""mailto:ba.nko.f00.09@gmail.com"">ba.nko.f00.09@gmail.com</a>
<a href=""mailto:bankof.0.0.0.9@gmail.com"">bankof.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.nko.f000.9@gmail.com"">b.a.nko.f000.9@gmail.com</a>
<a href=""mailto:ba.nk.of.000.9@gmail.com"">ba.nk.of.000.9@gmail.com</a>
<a href=""mailto:bankof0.0.09@gmail.com"">bankof0.0.09@gmail.com</a>
<a href=""mailto:banko.f.0009@gmail.com"">banko.f.0009@gmail.com</a>
<a href=""mailto:ba.nkof.0009@gmail.com"">ba.nkof.0009@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f0.00.9@gmail.com"">b.a.n.k.o.f0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.0.0.09@gmail.com"">b.an.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:banko.f0.0.0.9@gmail.com"">banko.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.0.0.0.9@gmail.com"">b.a.n.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:bankof0.00.9@gmail.com"">bankof0.00.9@gmail.com</a>
<a href=""mailto:bankof.0.00.9@gmail.com"">bankof.0.00.9@gmail.com</a>
<a href=""mailto:bankof.0.009@gmail.com"">bankof.0.009@gmail.com</a>
<a href=""mailto:b.an.k.of0.0.09@gmail.com"">b.an.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.an.k.of000.9@gmail.com"">b.an.k.of000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f0.00.9@gmail.com"">b.a.nko.f0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.0.09@gmail.com"">b.a.n.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.nk.of.0.0.09@gmail.com"">b.a.nk.of.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.009@gmail.com"">ba.n.ko.f.0.009@gmail.com</a>
<a href=""mailto:b.anko.f000.9@gmail.com"">b.anko.f000.9@gmail.com</a>
<a href=""mailto:b.ank.of.00.09@gmail.com"">b.ank.of.00.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.0.09@gmail.com"">ba.n.ko.f0.0.09@gmail.com</a>
<a href=""mailto:ba.nk.o.f00.09@gmail.com"">ba.nk.o.f00.09@gmail.com</a>
<a href=""mailto:b.a.nk.of000.9@gmail.com"">b.a.nk.of000.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f00.0.9@gmail.com"">ba.n.k.o.f00.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.00.9@gmail.com"">ba.n.ko.f0.00.9@gmail.com</a>
<a href=""mailto:ba.n.kof.0.009@gmail.com"">ba.n.kof.0.009@gmail.com</a>
<a href=""mailto:ban.kof0.009@gmail.com"">ban.kof0.009@gmail.com</a>
<a href=""mailto:b.a.nko.f.000.9@gmail.com"">b.a.nko.f.000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.00.0.9@gmail.com"">b.a.nko.f.00.0.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.0.0.0.9@gmail.com"">b.an.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f0.0.0.9@gmail.com"">b.ank.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.00.9@gmail.com"">b.a.n.k.of0.00.9@gmail.com</a>
<a href=""mailto:ban.k.o.f0.0.0.9@gmail.com"">ban.k.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.0.0.0.9@gmail.com"">b.a.nko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f0.009@gmail.com"">b.ank.o.f0.009@gmail.com</a>
<a href=""mailto:bank.of.000.9@gmail.com"">bank.of.000.9@gmail.com</a>
<a href=""mailto:b.an.k.of0.00.9@gmail.com"">b.an.k.of0.00.9@gmail.com</a>
<a href=""mailto:bankof0009@gmail.com"">bankof0009@gmail.com</a>
<a href=""mailto:bank.o.f00.0.9@gmail.com"">bank.o.f00.0.9@gmail.com</a>
<a href=""mailto:b.an.kof.0009@gmail.com"">b.an.kof.0009@gmail.com</a>
<a href=""mailto:ba.nk.of.0.009@gmail.com"">ba.nk.of.0.009@gmail.com</a>
<a href=""mailto:ba.n.k.of0.0.09@gmail.com"">ba.n.k.of0.0.09@gmail.com</a>
<a href=""mailto:bank.of000.9@gmail.com"">bank.of000.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f0009@gmail.com"">b.an.k.o.f0009@gmail.com</a>
<a href=""mailto:ba.n.kof00.0.9@gmail.com"">ba.n.kof00.0.9@gmail.com</a>
<a href=""mailto:banko.f.00.0.9@gmail.com"">banko.f.00.0.9@gmail.com</a>
<a href=""mailto:b.an.kof.00.09@gmail.com"">b.an.kof.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.o.f0.009@gmail.com"">ba.n.k.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.n.kof.00.0.9@gmail.com"">b.a.n.kof.00.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.009@gmail.com"">ba.n.ko.f0.009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.009@gmail.com"">b.a.n.ko.f.0.009@gmail.com</a>
<a href=""mailto:b.an.k.of00.0.9@gmail.com"">b.an.k.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.nk.of00.0.9@gmail.com"">b.a.nk.of00.0.9@gmail.com</a>
<a href=""mailto:bank.of.0009@gmail.com"">bank.of.0009@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.000.9@gmail.com"">ba.n.k.o.f.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of.000.9@gmail.com"">b.a.nk.of.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.0.9@gmail.com"">b.a.nk.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:bank.of.00.09@gmail.com"">bank.of.00.09@gmail.com</a>
<a href=""mailto:bankof000.9@gmail.com"">bankof000.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f0.00.9@gmail.com"">b.an.k.o.f0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.kof0.009@gmail.com"">b.a.n.kof0.009@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.09@gmail.com"">ba.n.ko.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.nko.f.0.0.0.9@gmail.com"">ba.nko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nkof.0.0.09@gmail.com"">ba.nkof.0.0.09@gmail.com</a>
<a href=""mailto:ban.k.of.0009@gmail.com"">ban.k.of.0009@gmail.com</a>
<a href=""mailto:ba.nkof.000.9@gmail.com"">ba.nkof.000.9@gmail.com</a>
<a href=""mailto:bank.of.0.0.09@gmail.com"">bank.of.0.0.09@gmail.com</a>
<a href=""mailto:ban.kof0.0.0.9@gmail.com"">ban.kof0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.00.0.9@gmail.com"">b.a.n.ko.f.00.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f000.9@gmail.com"">b.ank.o.f000.9@gmail.com</a>
<a href=""mailto:ban.kof.00.09@gmail.com"">ban.kof.00.09@gmail.com</a>
<a href=""mailto:ba.nk.of.00.09@gmail.com"">ba.nk.of.00.09@gmail.com</a>
<a href=""mailto:b.an.kof.000.9@gmail.com"">b.an.kof.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0009@gmail.com"">b.a.nk.o.f.0009@gmail.com</a>
<a href=""mailto:ban.k.o.f.00.09@gmail.com"">ban.k.o.f.00.09@gmail.com</a>
<a href=""mailto:ban.k.of0009@gmail.com"">ban.k.of0009@gmail.com</a>
<a href=""mailto:bankof.00.0.9@gmail.com"">bankof.00.0.9@gmail.com</a>
<a href=""mailto:ba.nkof0.0.0.9@gmail.com"">ba.nkof0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0.00.9@gmail.com"">ba.n.k.o.f.0.00.9@gmail.com</a>
<a href=""mailto:ba.nk.of.0.00.9@gmail.com"">ba.nk.of.0.00.9@gmail.com</a>
<a href=""mailto:ba.nko.f0.00.9@gmail.com"">ba.nko.f0.00.9@gmail.com</a>
<a href=""mailto:b.ank.of0.009@gmail.com"">b.ank.of0.009@gmail.com</a>
<a href=""mailto:ban.k.o.f0.00.9@gmail.com"">ban.k.o.f0.00.9@gmail.com</a>
<a href=""mailto:ba.nk.of0009@gmail.com"">ba.nk.of0009@gmail.com</a>
<a href=""mailto:ba.nkof.00.09@gmail.com"">ba.nkof.00.09@gmail.com</a>
<a href=""mailto:b.a.n.kof.0.00.9@gmail.com"">b.a.n.kof.0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f.0.009@gmail.com"">b.anko.f.0.009@gmail.com</a>
<a href=""mailto:ba.nk.o.f0.009@gmail.com"">ba.nk.o.f0.009@gmail.com</a>
<a href=""mailto:b.anko.f0.0.09@gmail.com"">b.anko.f0.0.09@gmail.com</a>
<a href=""mailto:ba.nko.f0.0.09@gmail.com"">ba.nko.f0.0.09@gmail.com</a>
<a href=""mailto:ban.ko.f.000.9@gmail.com"">ban.ko.f.000.9@gmail.com</a>
<a href=""mailto:ba.nko.f.0.00.9@gmail.com"">ba.nko.f.0.00.9@gmail.com</a>
<a href=""mailto:banko.f.0.0.0.9@gmail.com"">banko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.0.0.9@gmail.com"">b.ank.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f00.09@gmail.com"">ba.n.ko.f00.09@gmail.com</a>
<a href=""mailto:b.a.nkof.00.09@gmail.com"">b.a.nkof.00.09@gmail.com</a>
<a href=""mailto:ba.nkof.0.00.9@gmail.com"">ba.nkof.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.o.f00.0.9@gmail.com"">b.ank.o.f00.0.9@gmail.com</a>
<a href=""mailto:bank.o.f.0.009@gmail.com"">bank.o.f.0.009@gmail.com</a>
<a href=""mailto:ban.kof.000.9@gmail.com"">ban.kof.000.9@gmail.com</a>
<a href=""mailto:ba.nkof00.09@gmail.com"">ba.nkof00.09@gmail.com</a>
<a href=""mailto:ba.nko.f0.009@gmail.com"">ba.nko.f0.009@gmail.com</a>
<a href=""mailto:ban.ko.f0009@gmail.com"">ban.ko.f0009@gmail.com</a>
<a href=""mailto:bank.of0.0.0.9@gmail.com"">bank.of0.0.0.9@gmail.com</a>
<a href=""mailto:ban.ko.f0.009@gmail.com"">ban.ko.f0.009@gmail.com</a>
<a href=""mailto:ba.n.ko.f0009@gmail.com"">ba.n.ko.f0009@gmail.com</a>
<a href=""mailto:b.ankof.000.9@gmail.com"">b.ankof.000.9@gmail.com</a>
<a href=""mailto:bank.o.f.0.0.09@gmail.com"">bank.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.nko.f0009@gmail.com"">ba.nko.f0009@gmail.com</a>
<a href=""mailto:ba.n.k.o.f000.9@gmail.com"">ba.n.k.o.f000.9@gmail.com</a>
<a href=""mailto:ban.ko.f.0.0.0.9@gmail.com"">ban.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.00.9@gmail.com"">b.a.n.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f0.009@gmail.com"">b.an.k.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.nk.of0.009@gmail.com"">b.a.nk.of0.009@gmail.com</a>
<a href=""mailto:bank.of00.0.9@gmail.com"">bank.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.nkof0.00.9@gmail.com"">b.a.nkof0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.000.9@gmail.com"">b.an.k.o.f.000.9@gmail.com</a>
<a href=""mailto:ban.k.of.000.9@gmail.com"">ban.k.of.000.9@gmail.com</a>
<a href=""mailto:b.ank.of0.00.9@gmail.com"">b.ank.of0.00.9@gmail.com</a>
<a href=""mailto:b.an.ko.f000.9@gmail.com"">b.an.ko.f000.9@gmail.com</a>
<a href=""mailto:b.ank.of.000.9@gmail.com"">b.ank.of.000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.0009@gmail.com"">b.a.nko.f.0009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0.0.09@gmail.com"">b.a.nk.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.nk.of00.0.9@gmail.com"">ba.nk.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.nko.f00.0.9@gmail.com"">b.a.nko.f00.0.9@gmail.com</a>
<a href=""mailto:ba.nkof.00.0.9@gmail.com"">ba.nkof.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.o.f0.0.09@gmail.com"">ban.k.o.f0.0.09@gmail.com</a>
<a href=""mailto:ban.kof0.0.09@gmail.com"">ban.kof0.0.09@gmail.com</a>
<a href=""mailto:b.an.ko.f.0.0.0.9@gmail.com"">b.an.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ankof0.00.9@gmail.com"">b.ankof0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.kof0.00.9@gmail.com"">b.a.n.kof0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.of0009@gmail.com"">b.an.k.of0009@gmail.com</a>
<a href=""mailto:b.a.nko.f0009@gmail.com"">b.a.nko.f0009@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0.0.09@gmail.com"">ba.n.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.nk.o.f00.0.9@gmail.com"">ba.nk.o.f00.0.9@gmail.com</a>
<a href=""mailto:banko.f0009@gmail.com"">banko.f0009@gmail.com</a>
<a href=""mailto:b.an.kof0.0.0.9@gmail.com"">b.an.kof0.0.0.9@gmail.com</a>
<a href=""mailto:b.ankof.0009@gmail.com"">b.ankof.0009@gmail.com</a>
<a href=""mailto:bank.of0.0.09@gmail.com"">bank.of0.0.09@gmail.com</a>
<a href=""mailto:ban.k.of0.009@gmail.com"">ban.k.of0.009@gmail.com</a>
<a href=""mailto:ban.kof0009@gmail.com"">ban.kof0009@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.009@gmail.com"">b.a.n.k.of0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.009@gmail.com"">b.a.n.k.of.0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.0.0.9@gmail.com"">b.a.n.k.of.0.0.0.9@gmail.com</a>
<a href=""mailto:bank.o.f.00.0.9@gmail.com"">bank.o.f.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.of0.0.09@gmail.com"">ban.k.of0.0.09@gmail.com</a>
<a href=""mailto:bank.of.0.00.9@gmail.com"">bank.of.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f00.09@gmail.com"">b.a.n.ko.f00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f.00.09@gmail.com"">b.an.k.o.f.00.09@gmail.com</a>
<a href=""mailto:ba.nko.f.00.0.9@gmail.com"">ba.nko.f.00.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.09@gmail.com"">b.a.n.ko.f.0.0.09@gmail.com</a>
<a href=""mailto:b.anko.f0.0.0.9@gmail.com"">b.anko.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.k.of0.0.0.9@gmail.com"">b.an.k.of0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f0.00.9@gmail.com"">b.a.n.ko.f0.00.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f0.00.9@gmail.com"">b.a.nk.o.f0.00.9@gmail.com</a>
<a href=""mailto:bank.o.f.0.0.0.9@gmail.com"">bank.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0009@gmail.com"">ba.n.k.o.f.0009@gmail.com</a>
<a href=""mailto:b.an.k.o.f.00.0.9@gmail.com"">b.an.k.o.f.00.0.9@gmail.com</a>
<a href=""mailto:ban.kof0.00.9@gmail.com"">ban.kof0.00.9@gmail.com</a>
<a href=""mailto:infornotice02@gmail.com"">infornotice02@gmail.com</a>
<a href=""mailto:i.nfo.rno.t.ice.0.2@gmail.com"">i.nfo.rno.t.ice.0.2@gmail.com</a>
<a href=""mailto:inf.o.rno.t.i.c.e.0.2@gmail.com"">inf.o.rno.t.i.c.e.0.2@gmail.com</a>
<a href=""mailto:info.r.noti.ce.02@gmail.com"">info.r.noti.ce.02@gmail.com</a>
<a href=""mailto:infor.n.ot.ic.e.0.2@gmail.com"">infor.n.ot.ic.e.0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.oti.ce02@gmail.com"">i.nf.o.r.n.oti.ce02@gmail.com</a>
<a href=""mailto:in.for.no.ti.ce02@gmail.com"">in.for.no.ti.ce02@gmail.com</a>
<a href=""mailto:i.n.for.notic.e0.2@gmail.com"">i.n.for.notic.e0.2@gmail.com</a>
<a href=""mailto:i.n.fo.rn.ot.ice.0.2@gmail.com"">i.n.fo.rn.ot.ice.0.2@gmail.com</a>
<a href=""mailto:in.f.o.r.n.ot.i.ce.02@gmail.com"">in.f.o.r.n.ot.i.ce.02@gmail.com</a>
<a href=""mailto:in.f.or.n.oti.c.e.0.2@gmail.com"">in.f.or.n.oti.c.e.0.2@gmail.com</a>
<a href=""mailto:i.nforno.t.ic.e.0.2@gmail.com"">i.nforno.t.ic.e.0.2@gmail.com</a>
<a href=""mailto:in.f.o.r.n.ot.i.c.e.02@gmail.com"">in.f.o.r.n.ot.i.c.e.02@gmail.com</a>
<a href=""mailto:i.nforn.o.tice02@gmail.com"">i.nforn.o.tice02@gmail.com</a>
<a href=""mailto:i.n.f.ornotice.0.2@gmail.com"">i.n.f.ornotice.0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.not.ice.0.2@gmail.com"">i.nf.o.r.not.ice.0.2@gmail.com</a>
<a href=""mailto:i.nfo.r.n.oti.ce02@gmail.com"">i.nfo.r.n.oti.ce02@gmail.com</a>
<a href=""mailto:in.for.n.o.tice.02@gmail.com"">in.for.n.o.tice.02@gmail.com</a>
<a href=""mailto:in.f.orn.otice02@gmail.com"">in.f.orn.otice02@gmail.com</a>
<a href=""mailto:i.n.f.o.rn.o.tic.e.02@gmail.com"">i.n.f.o.rn.o.tic.e.02@gmail.com</a>
<a href=""mailto:in.fo.r.n.o.t.i.c.e0.2@gmail.com"">in.fo.r.n.o.t.i.c.e0.2@gmail.com</a>
<a href=""mailto:inf.or.n.otic.e0.2@gmail.com"">inf.or.n.otic.e0.2@gmail.com</a>
<a href=""mailto:in.f.o.rno.t.ice0.2@gmail.com"">in.f.o.rno.t.ice0.2@gmail.com</a>
<a href=""mailto:i.nfo.r.n.o.tic.e.0.2@gmail.com"">i.nfo.r.n.o.tic.e.0.2@gmail.com</a>
<a href=""mailto:inf.o.rno.t.i.c.e0.2@gmail.com"">inf.o.rno.t.i.c.e0.2@gmail.com</a>
<a href=""mailto:i.n.fornotic.e02@gmail.com"">i.n.fornotic.e02@gmail.com</a>
<a href=""mailto:i.n.fo.rn.o.ti.ce.02@gmail.com"">i.n.fo.rn.o.ti.ce.02@gmail.com</a>
<a href=""mailto:i.n.f.or.n.ot.i.c.e0.2@gmail.com"">i.n.f.or.n.ot.i.c.e0.2@gmail.com</a>
<a href=""mailto:i.nfo.rn.o.ti.ce0.2@gmail.com"">i.nfo.rn.o.ti.ce0.2@gmail.com</a>
<a href=""mailto:i.nf.orn.oti.ce.02@gmail.com"">i.nf.orn.oti.ce.02@gmail.com</a>
<a href=""mailto:in.f.orn.ot.ic.e.0.2@gmail.com"">in.f.orn.ot.ic.e.0.2@gmail.com</a>
<a href=""mailto:in.fo.r.not.i.ce.0.2@gmail.com"">in.fo.r.not.i.ce.0.2@gmail.com</a>
<a href=""mailto:i.nforn.ot.ic.e.02@gmail.com"">i.nforn.ot.ic.e.02@gmail.com</a>
<a href=""mailto:i.n.forn.oti.ce02@gmail.com"">i.n.forn.oti.ce02@gmail.com</a>
<a href=""mailto:in.for.n.otice0.2@gmail.com"">in.for.n.otice0.2@gmail.com</a>
<a href=""mailto:inf.orn.oti.c.e0.2@gmail.com"">inf.orn.oti.c.e0.2@gmail.com</a>
<a href=""mailto:in.fo.r.n.otic.e.0.2@gmail.com"">in.fo.r.n.otic.e.0.2@gmail.com</a>
<a href=""mailto:inf.o.rn.ot.ic.e.0.2@gmail.com"">inf.o.rn.ot.ic.e.0.2@gmail.com</a>
<a href=""mailto:i.n.f.o.r.n.ot.i.c.e02@gmail.com"">i.n.f.o.r.n.ot.i.c.e02@gmail.com</a>
<a href=""mailto:i.nforn.o.t.ice0.2@gmail.com"">i.nforn.o.t.ice0.2@gmail.com</a>
<a href=""mailto:inf.o.r.notic.e02@gmail.com"">inf.o.r.notic.e02@gmail.com</a>
<a href=""mailto:i.nfor.n.o.t.i.c.e.0.2@gmail.com"">i.nfor.n.o.t.i.c.e.0.2@gmail.com</a>
<a href=""mailto:i.nfo.r.n.o.t.ic.e.0.2@gmail.com"">i.nfo.r.n.o.t.ic.e.0.2@gmail.com</a>
<a href=""mailto:i.n.forn.o.t.ice.02@gmail.com"">i.n.forn.o.t.ice.02@gmail.com</a>
<a href=""mailto:i.n.fo.r.noti.ce.02@gmail.com"">i.n.fo.r.noti.ce.02@gmail.com</a>
<a href=""mailto:i.nfo.rn.otice02@gmail.com"">i.nfo.rn.otice02@gmail.com</a>
<a href=""mailto:i.nf.o.rn.o.t.i.ce.02@gmail.com"">i.nf.o.rn.o.t.i.ce.02@gmail.com</a>
<a href=""mailto:in.fo.rn.otic.e.0.2@gmail.com"">in.fo.rn.otic.e.0.2@gmail.com</a>
<a href=""mailto:info.rn.oti.c.e.02@gmail.com"">info.rn.oti.c.e.02@gmail.com</a>
<a href=""mailto:i.nf.or.no.tice.0.2@gmail.com"">i.nf.or.no.tice.0.2@gmail.com</a>
<a href=""mailto:i.n.f.or.not.i.ce02@gmail.com"">i.n.f.or.not.i.ce02@gmail.com</a>
<a href=""mailto:info.rn.oti.ce02@gmail.com"">info.rn.oti.ce02@gmail.com</a>
<a href=""mailto:inforn.ot.ice0.2@gmail.com"">inforn.ot.ice0.2@gmail.com</a>
<a href=""mailto:in.f.o.rn.oti.ce0.2@gmail.com"">in.f.o.rn.oti.ce0.2@gmail.com</a>
<a href=""mailto:i.nfo.rn.o.tice.02@gmail.com"">i.nfo.rn.o.tice.02@gmail.com</a>
<a href=""mailto:in.forn.otic.e.0.2@gmail.com"">in.forn.otic.e.0.2@gmail.com</a>
<a href=""mailto:i.nf.ornot.i.ce.0.2@gmail.com"">i.nf.ornot.i.ce.0.2@gmail.com</a>
<a href=""mailto:info.rn.oti.c.e02@gmail.com"">info.rn.oti.c.e02@gmail.com</a>
<a href=""mailto:in.f.o.rn.ot.i.ce02@gmail.com"">in.f.o.rn.ot.i.ce02@gmail.com</a>
<a href=""mailto:i.n.f.o.rno.t.ice02@gmail.com"">i.n.f.o.rno.t.ice02@gmail.com</a>
<a href=""mailto:i.n.for.not.ic.e.02@gmail.com"">i.n.for.not.ic.e.02@gmail.com</a>
<a href=""mailto:in.for.n.o.ti.c.e.02@gmail.com"">in.for.n.o.ti.c.e.02@gmail.com</a>
<a href=""mailto:in.f.o.r.n.ot.i.c.e0.2@gmail.com"">in.f.o.r.n.ot.i.c.e0.2@gmail.com</a>
<a href=""mailto:i.nfor.notic.e0.2@gmail.com"">i.nfor.notic.e0.2@gmail.com</a>
<a href=""mailto:i.nf.or.no.t.ice0.2@gmail.com"">i.nf.or.no.t.ice0.2@gmail.com</a>
<a href=""mailto:i.nforn.o.tic.e.02@gmail.com"">i.nforn.o.tic.e.02@gmail.com</a>
<a href=""mailto:i.nfo.rn.o.ti.c.e.0.2@gmail.com"">i.nfo.rn.o.ti.c.e.0.2@gmail.com</a>
<a href=""mailto:infor.n.otic.e.02@gmail.com"">infor.n.otic.e.02@gmail.com</a>
<a href=""mailto:i.n.fornot.i.ce.02@gmail.com"">i.n.fornot.i.ce.02@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.ot.i.ce02@gmail.com"">i.nf.o.r.n.ot.i.ce02@gmail.com</a>
<a href=""mailto:in.for.n.oti.c.e0.2@gmail.com"">in.for.n.oti.c.e0.2@gmail.com</a>
<a href=""mailto:in.for.n.oti.ce.02@gmail.com"">in.for.n.oti.ce.02@gmail.com</a>
<a href=""mailto:inf.o.rn.o.t.i.c.e.02@gmail.com"">inf.o.rn.o.t.i.c.e.02@gmail.com</a>
<a href=""mailto:info.r.notic.e02@gmail.com"">info.r.notic.e02@gmail.com</a>
<a href=""mailto:i.n.f.or.no.tic.e0.2@gmail.com"">i.n.f.or.no.tic.e0.2@gmail.com</a>
<a href=""mailto:infor.n.o.t.ic.e0.2@gmail.com"">infor.n.o.t.ic.e0.2@gmail.com</a>
<a href=""mailto:in.f.orno.ti.ce.0.2@gmail.com"">in.f.orno.ti.ce.0.2@gmail.com</a>
<a href=""mailto:inf.or.no.tic.e.02@gmail.com"">inf.or.no.tic.e.02@gmail.com</a>
<a href=""mailto:in.fo.r.no.t.ic.e.02@gmail.com"">in.fo.r.no.t.ic.e.02@gmail.com</a>
<a href=""mailto:i.nfo.r.not.i.c.e.02@gmail.com"">i.nfo.r.not.i.c.e.02@gmail.com</a>
<a href=""mailto:info.rn.o.t.ic.e02@gmail.com"">info.rn.o.t.ic.e02@gmail.com</a>
<a href=""mailto:in.fo.rn.otice.0.2@gmail.com"">in.fo.rn.otice.0.2@gmail.com</a>
<a href=""mailto:in.fo.r.n.oti.c.e.02@gmail.com"">in.fo.r.n.oti.c.e.02@gmail.com</a>
<a href=""mailto:i.n.forno.ti.ce.0.2@gmail.com"">i.n.forno.ti.ce.0.2@gmail.com</a>
<a href=""mailto:in.f.or.n.oti.c.e02@gmail.com"">in.f.or.n.oti.c.e02@gmail.com</a>
<a href=""mailto:i.n.f.o.rno.tic.e02@gmail.com"">i.n.f.o.rno.tic.e02@gmail.com</a>
<a href=""mailto:i.nfo.rn.oti.c.e.0.2@gmail.com"">i.nfo.rn.oti.c.e.0.2@gmail.com</a>
<a href=""mailto:inforno.t.i.c.e.02@gmail.com"">inforno.t.i.c.e.02@gmail.com</a>
<a href=""mailto:i.nf.or.notice.02@gmail.com"">i.nf.or.notice.02@gmail.com</a>
<a href=""mailto:i.n.forn.o.t.i.ce.0.2@gmail.com"">i.n.forn.o.t.i.ce.0.2@gmail.com</a>
<a href=""mailto:inf.or.noti.c.e02@gmail.com"">inf.or.noti.c.e02@gmail.com</a>
<a href=""mailto:inf.or.n.o.t.i.c.e.02@gmail.com"">inf.or.n.o.t.i.c.e.02@gmail.com</a>
<a href=""mailto:i.n.fo.r.no.tice.02@gmail.com"">i.n.fo.r.no.tice.02@gmail.com</a>
<a href=""mailto:i.nfor.no.t.i.ce.02@gmail.com"">i.nfor.no.t.i.ce.02@gmail.com</a>
<a href=""mailto:i.n.fo.r.no.ti.c.e02@gmail.com"">i.n.fo.r.no.ti.c.e02@gmail.com</a>
<a href=""mailto:in.fo.rn.ot.i.c.e0.2@gmail.com"">in.fo.rn.ot.i.c.e0.2@gmail.com</a>
<a href=""mailto:in.f.o.rn.oti.ce.0.2@gmail.com"">in.f.o.rn.oti.ce.0.2@gmail.com</a>
<a href=""mailto:i.n.f.ornotice02@gmail.com"">i.n.f.ornotice02@gmail.com</a>
<a href=""mailto:i.nfor.no.ti.ce02@gmail.com"">i.nfor.no.ti.ce02@gmail.com</a>
<a href=""mailto:i.n.forn.o.ti.ce.02@gmail.com"">i.n.forn.o.ti.ce.02@gmail.com</a>
<a href=""mailto:i.nfo.rnot.ic.e.02@gmail.com"">i.nfo.rnot.ic.e.02@gmail.com</a>
<a href=""mailto:i.n.f.ornot.i.ce02@gmail.com"">i.n.f.ornot.i.ce02@gmail.com</a>
<a href=""mailto:i.n.f.or.no.t.ic.e02@gmail.com"">i.n.f.or.no.t.ic.e02@gmail.com</a>
<a href=""mailto:info.rn.o.tice0.2@gmail.com"">info.rn.o.tice0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.ot.i.ce.02@gmail.com"">i.nf.o.r.n.ot.i.ce.02@gmail.com</a>
<a href=""mailto:i.nf.or.not.i.ce.0.2@gmail.com"">i.nf.or.not.i.ce.0.2@gmail.com</a>
<a href=""mailto:i.nfor.n.o.t.i.ce02@gmail.com"">i.nfor.n.o.t.i.ce02@gmail.com</a>
<a href=""mailto:inf.or.n.o.t.i.c.e.0.2@gmail.com"">inf.or.n.o.t.i.c.e.0.2@gmail.com</a>
<a href=""mailto:infor.n.o.tic.e02@gmail.com"">infor.n.o.tic.e02@gmail.com</a>
<a href=""mailto:i.n.fornoti.c.e.0.2@gmail.com"">i.n.fornoti.c.e.0.2@gmail.com</a>
<a href=""mailto:i.n.f.o.r.no.t.ic.e0.2@gmail.com"">i.n.f.o.r.no.t.ic.e0.2@gmail.com</a>
<a href=""mailto:i.nfo.rnoti.ce0.2@gmail.com"">i.nfo.rnoti.ce0.2@gmail.com</a>
<a href=""mailto:i.nf.or.no.ti.c.e.02@gmail.com"">i.nf.or.no.ti.c.e.02@gmail.com</a>
<a href=""mailto:inf.o.r.no.t.ice0.2@gmail.com"">inf.o.r.no.t.ice0.2@gmail.com</a>
<a href=""mailto:in.fo.rn.o.tice.02@gmail.com"">in.fo.rn.o.tice.02@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.o.t.ic.e.02@gmail.com"">i.nf.o.r.n.o.t.ic.e.02@gmail.com</a>
<a href=""mailto:in.forn.o.tic.e.02@gmail.com"">in.forn.o.tic.e.02@gmail.com</a>
<a href=""mailto:inf.or.n.ot.ice.02@gmail.com"">inf.or.n.ot.ice.02@gmail.com</a>
<a href=""mailto:in.for.n.ot.ice.02@gmail.com"">in.for.n.ot.ice.02@gmail.com</a>
<a href=""mailto:i.nf.o.rn.o.tice.0.2@gmail.com"">i.nf.o.rn.o.tice.0.2@gmail.com</a>
<a href=""mailto:i.n.f.or.n.o.ti.c.e02@gmail.com"">i.n.f.or.n.o.ti.c.e02@gmail.com</a>
<a href=""mailto:i.n.for.noti.c.e0.2@gmail.com"">i.n.for.noti.c.e0.2@gmail.com</a>
<a href=""mailto:in.f.or.notic.e0.2@gmail.com"">in.f.or.notic.e0.2@gmail.com</a>
<a href=""mailto:i.nf.orn.o.tic.e02@gmail.com"">i.nf.orn.o.tic.e02@gmail.com</a>
<a href=""mailto:i.nf.or.n.otice02@gmail.com"">i.nf.or.n.otice02@gmail.com</a>
<a href=""mailto:in.fornoti.ce0.2@gmail.com"">in.fornoti.ce0.2@gmail.com</a>
<a href=""mailto:i.n.fo.r.n.o.t.i.ce.02@gmail.com"">i.n.fo.r.n.o.t.i.ce.02@gmail.com</a>
<a href=""mailto:i.nf.o.r.no.tic.e02@gmail.com"">i.nf.o.r.no.tic.e02@gmail.com</a>
<a href=""mailto:i.nfo.r.not.ice0.2@gmail.com"">i.nfo.r.not.ice0.2@gmail.com</a>
<a href=""mailto:info.r.no.tic.e02@gmail.com"">info.r.no.tic.e02@gmail.com</a>
<a href=""mailto:i.n.forno.t.i.c.e.0.2@gmail.com"">i.n.forno.t.i.c.e.0.2@gmail.com</a>
<a href=""mailto:inf.o.rnoti.ce0.2@gmail.com"">inf.o.rnoti.ce0.2@gmail.com</a>
<a href=""mailto:i.nf.orn.o.t.ice0.2@gmail.com"">i.nf.orn.o.t.ice0.2@gmail.com</a>
<a href=""mailto:inf.o.r.not.ice02@gmail.com"">inf.o.r.not.ice02@gmail.com</a>
<a href=""mailto:i.nf.o.rno.tice02@gmail.com"">i.nf.o.rno.tice02@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.ot.i.c.e02@gmail.com"">i.nf.o.r.n.ot.i.c.e02@gmail.com</a>
<a href=""mailto:in.fo.r.no.tic.e02@gmail.com"">in.fo.r.no.tic.e02@gmail.com</a>
<a href=""mailto:i.nforn.o.tice.0.2@gmail.com"">i.nforn.o.tice.0.2@gmail.com</a>
<a href=""mailto:in.fo.r.n.ot.i.ce.02@gmail.com"">in.fo.r.n.ot.i.ce.02@gmail.com</a>
<a href=""mailto:i.nfornot.ice02@gmail.com"">i.nfornot.ice02@gmail.com</a>
<a href=""mailto:i.n.fo.rn.ot.i.ce.02@gmail.com"">i.n.fo.rn.ot.i.ce.02@gmail.com</a>
<a href=""mailto:i.n.f.o.rn.oti.c.e0.2@gmail.com"">i.n.f.o.rn.oti.c.e0.2@gmail.com</a>
<a href=""mailto:in.f.o.r.not.i.c.e02@gmail.com"">in.f.o.r.not.i.c.e02@gmail.com</a>
<a href=""mailto:in.fo.r.n.otic.e02@gmail.com"">in.fo.r.n.otic.e02@gmail.com</a>
<a href=""mailto:inf.o.r.n.ot.i.ce.0.2@gmail.com"">inf.o.r.n.ot.i.ce.0.2@gmail.com</a>
<a href=""mailto:i.n.fo.r.no.ti.c.e.0.2@gmail.com"">i.n.fo.r.no.ti.c.e.0.2@gmail.com</a>
<a href=""mailto:i.n.f.or.n.oti.ce.02@gmail.com"">i.n.f.or.n.oti.ce.02@gmail.com</a>
<a href=""mailto:i.nf.ornot.i.c.e0.2@gmail.com"">i.nf.ornot.i.c.e0.2@gmail.com</a>
<a href=""mailto:info.rnotic.e02@gmail.com"">info.rnotic.e02@gmail.com</a>
<a href=""mailto:i.nfor.n.o.tice.0.2@gmail.com"">i.nfor.n.o.tice.0.2@gmail.com</a>
<a href=""mailto:i.n.f.o.rn.oti.ce.0.2@gmail.com"">i.n.f.o.rn.oti.ce.0.2@gmail.com</a>
<a href=""mailto:i.n.f.o.r.no.t.ice.02@gmail.com"">i.n.f.o.r.no.t.ice.02@gmail.com</a>
<a href=""mailto:i.nfo.rn.ot.ice.0.2@gmail.com"">i.nfo.rn.ot.ice.0.2@gmail.com</a>
<a href=""mailto:i.n.fo.rn.o.tice0.2@gmail.com"">i.n.fo.rn.o.tice0.2@gmail.com</a>
<a href=""mailto:i.n.f.or.n.o.ti.ce0.2@gmail.com"">i.n.f.or.n.o.ti.ce0.2@gmail.com</a>
<a href=""mailto:i.nfo.rnot.ice.02@gmail.com"">i.nfo.rnot.ice.02@gmail.com</a>
<a href=""mailto:i.n.f.orn.otic.e.02@gmail.com"">i.n.f.orn.otic.e.02@gmail.com</a>
<a href=""mailto:inf.or.n.o.ti.c.e.02@gmail.com"">inf.or.n.o.ti.c.e.02@gmail.com</a>
<a href=""mailto:in.f.orn.o.t.ice02@gmail.com"">in.f.orn.o.t.ice02@gmail.com</a>
<a href=""mailto:in.f.o.r.n.o.tic.e0.2@gmail.com"">in.f.o.r.n.o.tic.e0.2@gmail.com</a>
<a href=""mailto:inf.o.rno.t.ic.e.02@gmail.com"">inf.o.rno.t.ic.e.02@gmail.com</a>
<a href=""mailto:i.n.f.o.rn.oti.ce.02@gmail.com"">i.n.f.o.rn.oti.ce.02@gmail.com</a>
<a href=""mailto:in.f.or.no.ti.ce.0.2@gmail.com"">in.f.or.no.ti.ce.0.2@gmail.com</a>
<a href=""mailto:i.nf.or.no.tice0.2@gmail.com"">i.nf.or.no.tice0.2@gmail.com</a>
<a href=""mailto:in.f.o.rno.tic.e02@gmail.com"">in.f.o.rno.tic.e02@gmail.com</a>
<a href=""mailto:i.n.f.o.rnot.i.ce02@gmail.com"">i.n.f.o.rnot.i.ce02@gmail.com</a>
<a href=""mailto:i.nf.or.n.o.t.ic.e0.2@gmail.com"">i.nf.or.n.o.t.ic.e0.2@gmail.com</a>
<a href=""mailto:in.f.o.rn.o.ti.c.e.0.2@gmail.com"">in.f.o.rn.o.ti.c.e.0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.no.tice0.2@gmail.com"">i.nf.o.r.no.tice0.2@gmail.com</a>
<a href=""mailto:i.nf.or.n.otic.e.0.2@gmail.com"">i.nf.or.n.otic.e.0.2@gmail.com</a>
<a href=""mailto:i.n.f.orno.tic.e02@gmail.com"">i.n.f.orno.tic.e02@gmail.com</a>
<a href=""mailto:i.n.forn.oti.ce.02@gmail.com"">i.n.forn.oti.ce.02@gmail.com</a>
<a href=""mailto:inf.o.rnot.i.c.e0.2@gmail.com"">inf.o.rnot.i.c.e0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.ot.i.c.e.0.2@gmail.com"">i.nf.o.r.n.ot.i.c.e.0.2@gmail.com</a>
<a href=""mailto:i.n.forno.ti.c.e0.2@gmail.com"">i.n.forno.ti.c.e0.2@gmail.com</a>
<a href=""mailto:in.for.n.o.tice0.2@gmail.com"">in.for.n.o.tice0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.no.t.i.c.e0.2@gmail.com"">i.nf.o.r.no.t.i.c.e0.2@gmail.com</a>
<a href=""mailto:i.nf.o.rn.ot.i.c.e0.2@gmail.com"">i.nf.o.rn.ot.i.c.e0.2@gmail.com</a>
<a href=""mailto:inf.o.r.no.t.i.c.e02@gmail.com"">inf.o.r.no.t.i.c.e02@gmail.com</a>
<a href=""mailto:info.rn.o.tice.0.2@gmail.com"">info.rn.o.tice.0.2@gmail.com</a>
<a href=""mailto:inf.o.r.n.ot.ic.e.02@gmail.com"">inf.o.r.n.ot.ic.e.02@gmail.com</a>
<a href=""mailto:in.fo.rno.t.ice.02@gmail.com"">in.fo.rno.t.ice.02@gmail.com</a>
<a href=""mailto:i.n.f.o.rno.ti.ce0.2@gmail.com"">i.n.f.o.rno.ti.ce0.2@gmail.com</a>
<a href=""mailto:i.n.forn.o.t.ic.e.02@gmail.com"">i.n.forn.o.t.ic.e.02@gmail.com</a>
<a href=""mailto:in.f.o.rn.ot.ice.0.2@gmail.com"">in.f.o.rn.ot.ice.0.2@gmail.com</a>
<a href=""mailto:in.f.or.not.ic.e.0.2@gmail.com"">in.f.or.not.ic.e.0.2@gmail.com</a>
<a href=""mailto:i.n.f.or.n.otice0.2@gmail.com"">i.n.f.or.n.otice0.2@gmail.com</a>
<a href=""mailto:info.r.not.ic.e02@gmail.com"">info.r.not.ic.e02@gmail.com</a>
<a href=""mailto:infor.n.o.t.i.c.e0.2@gmail.com"">infor.n.o.t.i.c.e0.2@gmail.com</a>
<a href=""mailto:in.forn.ot.i.c.e.0.2@gmail.com"">in.forn.ot.i.c.e.0.2@gmail.com</a>
<a href=""mailto:info.r.notice.0.2@gmail.com"">info.r.notice.0.2@gmail.com</a>
<a href=""mailto:i.n.for.notic.e02@gmail.com"">i.n.for.notic.e02@gmail.com</a>
<a href=""mailto:i.n.fo.r.notic.e.0.2@gmail.com"">i.n.fo.r.notic.e.0.2@gmail.com</a>
<a href=""mailto:in.for.n.o.ti.ce.0.2@gmail.com"">in.for.n.o.ti.ce.0.2@gmail.com</a>
<a href=""mailto:infor.no.t.ice0.2@gmail.com"">infor.no.t.ice0.2@gmail.com</a>
<a href=""mailto:i.n.fornot.ic.e0.2@gmail.com"">i.n.fornot.ic.e0.2@gmail.com</a>
<a href=""mailto:i.n.forn.otic.e.0.2@gmail.com"">i.n.forn.otic.e.0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.oti.ce0.2@gmail.com"">i.nf.o.r.n.oti.ce0.2@gmail.com</a>
<a href=""mailto:i.nf.o.r.n.ot.ic.e02@gmail.com"">i.nf.o.r.n.ot.ic.e02@gmail.com</a>
<a href=""mailto:i.nforn.ot.i.ce.02@gmail.com"">i.nforn.ot.i.ce.02@gmail.com</a>
<a href=""mailto:in.f.or.noti.c.e.0.2@gmail.com"">in.f.or.noti.c.e.0.2@gmail.com</a>"
ydk08Wrr,Vibe Korea - Interkult - Performing Arts - Tanzfestival - Vienna Ballet - Scam - Spam [2/2024],bombaires,HTML,Saturday 17th of February 2024 08:19:26 AM CDT,"<h1>Performing Arts Inter-Kult</h1>
<pre>
<a href=""tel:+8223655401"">02-236-55401</a>
Min-Sook Lim
Soojung Nam
Daehyungdong 56-57, 401 (Seodaemungu)
Seoul 03600

Finkengasse 13
2230 Gänserndorf - Österreich
<a href=""tel:+436766243363"">+43 676 6243363</a>

<a href=""mailto:vibe.korea@hanmail.net"">vibe.korea@hanmail.net</a>
<a href=""mailto:office.korea@vibe.international"">office.korea@vibe.international</a>
<a href=""mailto:vibe.korea@hanmail.net"">vibe.korea@hanmail.net</a>
<a href=""mailto:office@vibe.international"">office@vibe.international</a>
<a href=""mailto:schreibjun@daum.net"">schreibjun@daum.net</a>
<a href=""mailto:interkult@hanmail.net"">interkult@hanmail.net</a>
<a href=""mailto:interkul@hanmail.net"">interkul@hanmail.net</a>
<a href=""mailto:esangdance@hanmail.net"">schreibjun@daum.net</a>
<a href=""mailto:mailmail25@daum.net"">mailmail25@daum.net</a>
<a href=""mailto:iinntteerrkkulltt@hanmail.net"">iinntteerrkkulltt@hanmail.net</a>
<a href=""mailto:jayoun999@daum.net"">jayoun999@daum.net</a>
<a href=""mailto:iinntteerrkkuulltt@hanmail.net"">iinntteerrkkuulltt@hanmail.net</a>
<a href=""mailto:dancemusic33@naver.com"">dancemusic33@naver.com</a>
<a href=""mailto:interkult@naver.com"">interkult@naver.com</a>
<a href=""mailto:schreibmal6@daum.net"">schreibmal6@daum.net</a>
</pre>"
LUEYknSb,02. Fishes(!?!),Spocoman,C++,Saturday 17th of February 2024 08:05:14 AM CDT,"#include <iostream>
#include <string>
#include <map>
#include <vector>

using namespace std;

bool is_find(vector<string>& v, string el) {
    return find(v.begin(), v.end(), el) != v.end();
}

vector<string> string_split(string& str) {
    vector<string> v;
    string el = """";
    for (int i = 0; i < str.size(); i++) {
        if (str[i] == ' ') {
            if (!el.empty()) {
                if (v.empty()) {
                    v.push_back(el);
                    v.push_back("""");
                }
                else {
                    v[1] += el + "" "";
                    
                }
                el = """";
            }
        }
        else {
            el += str[i];
        }
    }
    v[1] += el;
    return v;
}

void print_join(vector<string>& v, string sep) {
    if (v.empty()) {
        cout << ""<empty>\n"";
    }
    else {
        for (int i = 0; i < v.size() - 1; i++) {
            cout << v[i] << sep;
        }
        cout << v.back() << endl;
    }
}

int main() {
    map<int, vector<string>> fishBags;

    map<string, int> fishCount;

    string command;

    getline(cin, command);

    while (command != ""END"") {
        vector<string> tokens = string_split(command);
        int n = stoi(tokens[0]);
        string fish = tokens[1];

        if (fish == ""THROW"") {
            if (!fishBags[n].empty()) {
                fish = fishBags[n].back();
                fishCount[fish]--;
                if (fishCount[fish] == 0) {
                    fishCount.erase(fish);
                }
                fishBags[n].pop_back();
            }
        }
        else {
            fishBags[n].push_back(fish);
            fishCount[fish]++;
        }
       
        getline(cin, command);
    }

    for (auto& b : fishBags) {
        cout << b.first << "": "";
        print_join(b.second, "", "");
    }

    vector<string> restaurantFish;

    getline(cin, command);

    while (command != ""END"") {
        if (fishCount.find(command) != fishCount.end()) {
            restaurantFish.push_back(command);
        }
        getline(cin, command);
    }

    cout << ""Restaurant: "";
    if (restaurantFish.empty()) {
        cout << ""<nothing>\n"";
    }
    else {
        for (auto& f : restaurantFish) {
            cout << f << "": "" << fishCount[f];
            fishCount.erase(f.c_str());
            if (f != restaurantFish.back()) {
                cout << "", "";
            }
        }
        cout << endl;
    }
    
    cout << ""Pate: "";
    if (fishCount.empty()) {
        cout << ""<nothing>\n"";
    }
    else {
        for (auto& f : fishCount) {
            cout << f.first << "": "" << f.second;
            if (f.first != fishCount.rbegin()->first) {
                cout << "", "";
            }
        }
        cout << endl;
    }
    
    return 0;
}"
nSMKdft0,netherite scaner test,Serzh120412_Official,Lua,Saturday 17th of February 2024 07:57:59 AM CDT,"scanner = peripheral.wrap(""back"")

while true do
term.clear()
term.setCursorPos(1, 1)
blocks, err = scanner.scan(16)
found = false

for id, block in pairs(blocks) do
	if block[""name""] == ""minecraft:ancient_debris"" then
	found = true
	term.setTextColor(color.green)
	term.write(block[""name""])
	term.setTextColor(color.white)
	term.write("" at "")
	term.setTextColor(color.blue)
	print(string.format(""x:%d z:%d y:%d"", block[""x""], block[""z""], block[""y""]))
end
end
if not found then
print(""Nothing found"")
end
sleep(5)
end"
CUgsQ7Fy,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 07:55:53 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
using namespace std;


int main()
{
    string niza;
    cin>>niza;
    int counter=0;
    for(int i=0; i<niza.size(); i++){
        if(niza[i]=='Y'){
            for(int j=i; j<niza.size(); j += i + 1){
                    if(niza[j]=='Y'){
                        niza[j]='N';
                    }
                    else if(niza[j]=='N'){
                        niza[j]='Y';
                    }
                
            }
            counter++;
        }
    }
    cout<<counter;
    return 0;
}
"
vdEnfFaK,Untitled,sandino,C++,Saturday 17th of February 2024 07:51:03 AM CDT,"#include <cmath>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

template <typename Documents, typename Term>
vector<double> ComputeTfIdfs(const Documents& documents, const Term& term) {
    vector<double> result;
    result.reserve(documents.size());
    double tf, idf;
    int docs_with_term = count_if(documents.begin(), documents.end(), [term](const auto & document) {
        return any_of(document.begin(), document.end(), [term](const auto & word) { return term == word; });
    });
    idf = log(1.0 * documents.size() / docs_with_term);

    for (const auto & document : documents) {
        tf = 1.0 * count(document.begin(), document.end(), term) / document.size();
        result.push_back(tf * idf);
    }
    return result;
}

int main() {
    const vector<vector<string>> documents = {
            {""белый""s, ""кот""s, ""и""s, ""модный""s, ""ошейник""s},
            {""пушистый""s, ""кот""s, ""пушистый""s, ""хвост""s},
            {""ухоженный""s, ""пёс""s, ""выразительные""s, ""глаза""s},
    };
    const auto& tf_idfs = ComputeTfIdfs(documents, ""кот""s);
    for (const double tf_idf : tf_idfs) {
        cout << tf_idf << "" ""s;
    }
    cout << endl;
    return 0;
}"
8Vn74ASX,PlayerWallet,FlyingFrog,C#,Saturday 17th of February 2024 07:48:23 AM CDT,"using System;
using UnityEngine;

public class PlayerWallet : MonoBehaviour
{
    private const string COINS_COUNT = ""CoinsCount"";
    private int _coinsCount = 15;

    public int CoinsCount => _coinsCount;

    public Action CoinsAdded;

    private void Start()
    {
        if (PlayerPrefs.HasKey(COINS_COUNT))
        {
            _coinsCount = PlayerPrefs.GetInt(COINS_COUNT);
            CoinsAdded?.Invoke();
        }
    }

    public bool TrySpendMoney(int spendAmount)
    {
        if (_coinsCount >= spendAmount)
        {
            _coinsCount -= spendAmount;
            PlayerPrefs.SetInt(COINS_COUNT, _coinsCount);
            PlayerPrefs.Save();
            CoinsAdded?.Invoke();
            return true;
        }
        else
        {
            return false;
        }
    }

    public void AddMoney(int addAmount)
    {
        if (addAmount > 0)
        {
            _coinsCount += addAmount;
            PlayerPrefs.SetInt(COINS_COUNT, _coinsCount);
            PlayerPrefs.Save();
            CoinsAdded?.Invoke();
        }
    }
}"
EeFiJ9ZZ,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 07:28:49 AM CDT,"#include <iostream>
#include <cmath>
#include <queue>
#include <cstring>
using namespace std;
const int maxn = 50005;
vector<pair<int, int> > graph[maxn];
int imp[maxn];
int cnt[maxn];
int n;
void bfs(int S) {
    queue<int> q;
    q.push(S);
    q.push(0);
    vector<int> parent(maxn, -1);
    vector<bool> visited(n, false);
    visited[S] = true;
    int max_dist = 0, F = 0;
    while(!q.empty()) {
        int c = q.front();
        q.pop();
        int dist = q.front();
        q.pop();
        if(imp[c]) {
            if(max_dist < dist) {
                max_dist = dist;
                F = c;
            }
        }
        for(int i = 0; i < (int) graph[c].size(); i++) {
            int neighbour = graph[c][i].first;
            int weight = graph[c][i].second;
            if(!visited[neighbour]) {
                visited[neighbour] = true;
                q.push(neighbour);
                q.push(dist + weight);
                parent[neighbour] = c;
            }
        }
    }
//    cout << max_dist <<"" "" << F <<  endl;
    
    int A = S, B = F;
    while(B != A){
        cnt[B]++;
        B = parent[B];
    }
    cnt[A]++;
    
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n;
    
    for(int i = 1; i < n; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    int k;
    cin >> k;
    memset(imp, false, sizeof imp);
    for(int i = 0; i < k; i++) {
        int x;
        cin >> x;
        imp[x] = true;
    }
    for(int i = 0; i < n; i++) {
        if(imp[i]) {
            bfs(i);
        }
    }
    int res = 0, saved = 0;
    for(int i = 0; i < n; i++) {
        if(cnt[i] > res) {
            res = cnt[i];
            
        }
    }
    for(int i = 0; i < n; i++) {
        
        if(cnt[i] == res) {
            saved++;
//            cout << i << endl;
        }
    }
    
    cout << res << "" "" << saved << endl;
    
    return 0;
                
}
// NNNNNNNNaN
"
gHZV8SLc,Roblox classes,RomashkaHEHE,Lua,Saturday 17th of February 2024 07:24:09 AM CDT,"return {
	[""Accessory""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AttachmentForward"",
		[5] = ""AttachmentPoint"",
		[6] = ""AttachmentPos"",
		[7] = ""AttachmentRight"",
		[8] = ""AttachmentUp""
	},
	[""Accoutrement""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AttachmentForward"",
		[5] = ""AttachmentPoint"",
		[6] = ""AttachmentPos"",
		[7] = ""AttachmentRight"",
		[8] = ""AttachmentUp""
	},
	[""AdService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""AdvancedDragger""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""AlignOrientation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""MaxAngularVelocity"",
		[10] = ""MaxTorque"",
		[11] = ""PrimaryAxisOnly"",
		[12] = ""ReactionTorqueEnabled"",
		[13] = ""Responsiveness"",
		[14] = ""RigidityEnabled""
	},
	[""AlignPosition""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ApplyAtCenterOfMass"",
		[10] = ""MaxForce"",
		[11] = ""MaxVelocity"",
		[12] = ""ReactionForceEnabled"",
		[13] = ""Responsiveness"",
		[14] = ""RigidityEnabled""
	},
	[""AnalysticsSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""AnalyticsService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Animation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AnimationId""
	},
	[""AnimationController""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""AnimationTrack""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Looped"",
		[5] = ""Priority"",
		[6] = ""TimePosition""
	},
	[""Animator""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ArcHandles""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""Axes""
	},
	[""AssetService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Attachment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Axis"",
		[5] = ""CFrame"",
		[6] = ""Orientation"",
		[7] = ""Position"",
		[8] = ""Rotation"",
		[9] = ""SecondaryAxis"",
		[10] = ""Visible""
	},
	[""Backpack""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BackpackItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""TextureId""
	},
	[""BadgeService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BallSocketConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""LimitsEnabled"",
		[10] = ""Radius"",
		[11] = ""Restitution"",
		[12] = ""TwistLimitsEnabled"",
		[13] = ""TwistLowerAngle"",
		[14] = ""TwistUpperAngle"",
		[15] = ""UpperAngle""
	},
	[""BasePart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity""
	},
	[""BasePlayerGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BaseScript""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Disabled"",
		[5] = ""LinkedSource""
	},
	[""Beam""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""CurveSize0"",
		[8] = ""CurveSize1"",
		[9] = ""Enabled"",
		[10] = ""FaceCamera"",
		[11] = ""LightEmission"",
		[12] = ""LightInfluence"",
		[13] = ""Segments"",
		[14] = ""Texture"",
		[15] = ""TextureLength"",
		[16] = ""TextureMode"",
		[17] = ""TextureSpeed"",
		[18] = ""Transparency"",
		[19] = ""Width0"",
		[20] = ""Width1"",
		[21] = ""ZOffset""
	},
	[""BevelMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor""
	},
	[""BillboardGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""Active"",
		[10] = ""Adornee"",
		[11] = ""AlwaysOnTop"",
		[12] = ""ClipsDescendants"",
		[13] = ""ExtentsOffset"",
		[14] = ""ExtentsOffsetWorldSpace"",
		[15] = ""LightInfluence"",
		[16] = ""MaxDistance"",
		[17] = ""PlayerToHideFrom"",
		[18] = ""Size"",
		[19] = ""SizeOffset"",
		[20] = ""StudsOffset"",
		[21] = ""StudsOffsetWorldSpace""
	},
	[""BinaryStringValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BindableEvent""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BindableFunction""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BlockMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor""
	},
	[""BloomEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Intensity"",
		[6] = ""Size"",
		[7] = ""Threshold""
	},
	[""BlurEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Size""
	},
	[""BodyAngularVelocity""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AngularVelocity"",
		[5] = ""MaxTorque"",
		[6] = ""P""
	},
	[""BodyColors""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""HeadColor"",
		[5] = ""HeadColor3"",
		[6] = ""LeftArmColor"",
		[7] = ""LeftArmColor3"",
		[8] = ""LeftLegColor"",
		[9] = ""LeftLegColor3"",
		[10] = ""RightArmColor"",
		[11] = ""RightArmColor3"",
		[12] = ""RightLegColor"",
		[13] = ""RightLegColor3"",
		[14] = ""TorsoColor"",
		[15] = ""TorsoColor3""
	},
	[""BodyForce""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Force""
	},
	[""BodyGyro""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CFrame"",
		[5] = ""D"",
		[6] = ""MaxTorque"",
		[7] = ""P""
	},
	[""BodyMover""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""BodyPosition""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""D"",
		[5] = ""MaxForce"",
		[6] = ""P"",
		[7] = ""Position""
	},
	[""BodyThrust""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Force"",
		[5] = ""Location""
	},
	[""BodyVelocity""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""MaxForce"",
		[5] = ""P"",
		[6] = ""Velocity""
	},
	[""BoolValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""BoxHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Size""
	},
	[""BrickColorValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""Button""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ClickableWhenViewportHidden"",
		[5] = ""Enabled"",
		[6] = ""Icon""
	},
	[""ButtonBindingWidget""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CFrameValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""CSGDictionaryService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CacheableContentProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Camera""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CFrame"",
		[5] = ""CameraSubject"",
		[6] = ""CameraType"",
		[7] = ""FieldOfView"",
		[8] = ""Focus"",
		[9] = ""HeadLocked"",
		[10] = ""HeadScale""
	},
	[""ChangeHistoryService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CharacterAppearance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CharacterMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""BaseTextureId"",
		[5] = ""BodyPart"",
		[6] = ""MeshId"",
		[7] = ""OverlayTextureId""
	},
	[""Chat""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ChorusSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Depth"",
		[7] = ""Mix"",
		[8] = ""Rate""
	},
	[""ClickDetector""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CursorIcon"",
		[5] = ""MaxActivationDistance""
	},
	[""ClientReplicator""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Clothing""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ClusterPacketCache""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CollectionService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Color3Value""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""ColorCorrectionEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Brightness"",
		[6] = ""Contrast"",
		[7] = ""Saturation"",
		[8] = ""TintColor""
	},
	[""CompressorSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Attack"",
		[7] = ""GainMakeup"",
		[8] = ""Ratio"",
		[9] = ""Release"",
		[10] = ""SideChain"",
		[11] = ""Threshold""
	},
	[""ConeHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Height"",
		[13] = ""Radius""
	},
	[""Configuration""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Constraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible""
	},
	[""ContentProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ContextActionService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Controller""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ControllerService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CookiesService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CoreGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CorePackages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CoreScript""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Disabled"",
		[5] = ""LinkedSource""
	},
	[""CornerWedgePart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity""
	},
	[""CustomEvent""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""CustomEventReceiver""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Source""
	},
	[""CylinderHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Height"",
		[13] = ""Radius""
	},
	[""CylinderMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor""
	},
	[""CylindricalConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ActuatorType"",
		[10] = ""LimitsEnabled"",
		[11] = ""LowerLimit"",
		[12] = ""MotorMaxAcceleration"",
		[13] = ""MotorMaxForce"",
		[14] = ""Restitution"",
		[15] = ""ServoMaxForce"",
		[16] = ""Size"",
		[17] = ""Speed"",
		[18] = ""TargetPosition"",
		[19] = ""UpperLimit"",
		[20] = ""Velocity"",
		[21] = ""AngularActuatorType"",
		[22] = ""AngularLimitsEnabled"",
		[23] = ""AngularRestitution"",
		[24] = ""AngularSpeed"",
		[25] = ""AngularVelocity"",
		[26] = ""InclinationAngle"",
		[27] = ""LowerAngle"",
		[28] = ""MotorMaxAngularAcceleration"",
		[29] = ""MotorMaxTorque"",
		[30] = ""RotationAxisVisible"",
		[31] = ""ServoMaxTorque"",
		[32] = ""TargetAngle"",
		[33] = ""UpperAngle""
	},
	[""DataModel""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""DataModelMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor""
	},
	[""DataStorePages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""DataStoreService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Debris""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""DebugSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ErrorReporting"",
		[5] = ""IsFmodProfilingEnabled"",
		[6] = ""IsScriptStackTracingEnabled"",
		[7] = ""LuaRamLimit"",
		[8] = ""ReportSoundWarnings"",
		[9] = ""TickCountPreciseOverride""
	},
	[""DebuggerBreakpoint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Condition"",
		[5] = ""IsEnabled""
	},
	[""DebuggerManager""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""DebuggerWatch""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Expression""
	},
	[""Decal""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Face"",
		[5] = ""Color3"",
		[6] = ""Texture"",
		[7] = ""Transparency""
	},
	[""Dialog""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""BehaviorType"",
		[5] = ""ConversationDistance"",
		[6] = ""GoodbyeChoiceActive"",
		[7] = ""GoodbyeDialog"",
		[8] = ""InUse"",
		[9] = ""InitialPrompt"",
		[10] = ""Purpose"",
		[11] = ""Tone"",
		[12] = ""TriggerDistance"",
		[13] = ""TriggerOffset""
	},
	[""DialogChoice""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""GoodbyeChoiceActive"",
		[5] = ""GoodbyeDialog"",
		[6] = ""ResponseDialog"",
		[7] = ""UserDialog""
	},
	[""DistortionSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Level""
	},
	[""DockWidgetPluginGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""Title""
	},
	[""DoubleConstrainedValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""MaxValue"",
		[5] = ""MinValue"",
		[6] = ""Value""
	},
	[""Dragger""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""DynamicRotate""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""BaseAngle""
	},
	[""EchoSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Delay"",
		[7] = ""DryLevel"",
		[8] = ""Feedback"",
		[9] = ""WetLevel""
	},
	[""EqualizerSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""HighGain"",
		[7] = ""LowGain"",
		[8] = ""MidGain""
	},
	[""Explosion""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""BlastPressure"",
		[5] = ""BlastRadius"",
		[6] = ""DestroyJointRadiusPercent"",
		[7] = ""ExplosionType"",
		[8] = ""Position"",
		[9] = ""Visible""
	},
	[""FaceInstance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Face""
	},
	[""Feature""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FaceId"",
		[5] = ""InOut"",
		[6] = ""LeftRight"",
		[7] = ""TopBottom""
	},
	[""FileMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor"",
		[7] = ""MeshId"",
		[8] = ""TextureId""
	},
	[""Fire""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color"",
		[5] = ""Enabled"",
		[6] = ""Heat"",
		[7] = ""SecondaryColor"",
		[8] = ""Size""
	},
	[""Flag""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""TextureId"",
		[5] = ""CanBeDropped"",
		[6] = ""Enabled"",
		[7] = ""Grip"",
		[8] = ""GripForward"",
		[9] = ""GripPos"",
		[10] = ""GripRight"",
		[11] = ""GripUp"",
		[12] = ""ManualActivationOnly"",
		[13] = ""RequiresHandle"",
		[14] = ""ToolTip"",
		[15] = ""TeamColor""
	},
	[""FlagStand""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape"",
		[46] = ""TeamColor""
	},
	[""FlagStandService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""FlangeSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Depth"",
		[7] = ""Mix"",
		[8] = ""Rate""
	},
	[""FloorWire""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""CycleOffset"",
		[8] = ""From"",
		[9] = ""StudsBetweenTextures"",
		[10] = ""Texture"",
		[11] = ""TextureSize"",
		[12] = ""To"",
		[13] = ""Velocity"",
		[14] = ""WireRadius""
	},
	[""FlyweightService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Folder""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ForceField""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Visible""
	},
	[""FormFactorPart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity""
	},
	[""Frame""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""Style""
	},
	[""FriendPages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""FriendService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""FunctionalTest""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Description""
	},
	[""GamePassService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GameSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AdditionalCoreIncludeDirs"",
		[5] = ""BubbleChatLifetime"",
		[6] = ""BubbleChatMaxBubbles"",
		[7] = ""ChatHistory"",
		[8] = ""ChatScrollLength"",
		[9] = ""HardwareMouse"",
		[10] = ""OverrideStarterScript"",
		[11] = ""ReportAbuseChatHistory"",
		[12] = ""SoftwareSound"",
		[13] = ""VideoCaptureEnabled"",
		[14] = ""VideoQuality""
	},
	[""GamepadService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GenericSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Geometry""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GlobalDataStore""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GlobalSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Glue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""F0"",
		[9] = ""F1"",
		[10] = ""F2"",
		[11] = ""F3""
	},
	[""GoogleAnalyticsConfiguration""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GroupService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GuiBase""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GuiBase2d""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable""
	},
	[""GuiBase3d""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible""
	},
	[""GuiButton""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""AutoButtonColor"",
		[27] = ""Modal"",
		[28] = ""Selected"",
		[29] = ""Style""
	},
	[""GuiItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GuiLabel""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex""
	},
	[""GuiMain""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""DisplayOrder"",
		[10] = ""IgnoreGuiInset""
	},
	[""GuiObject""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex""
	},
	[""GuiRoot""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""GuiService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoSelectGuiEnabled"",
		[5] = ""CoreGuiNavigationEnabled"",
		[6] = ""GuiNavigationEnabled"",
		[7] = ""SelectedObject""
	},
	[""GuidRegistryService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""HandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex""
	},
	[""Handles""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""Faces"",
		[9] = ""Style""
	},
	[""HandlesBase""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee""
	},
	[""HapticService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Hat""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AttachmentForward"",
		[5] = ""AttachmentPoint"",
		[6] = ""AttachmentPos"",
		[7] = ""AttachmentRight"",
		[8] = ""AttachmentUp""
	},
	[""HingeConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ActuatorType"",
		[10] = ""AngularSpeed"",
		[11] = ""AngularVelocity"",
		[12] = ""LimitsEnabled"",
		[13] = ""LowerAngle"",
		[14] = ""MotorMaxAcceleration"",
		[15] = ""MotorMaxTorque"",
		[16] = ""Radius"",
		[17] = ""Restitution"",
		[18] = ""ServoMaxTorque"",
		[19] = ""TargetAngle"",
		[20] = ""UpperAngle""
	},
	[""Hint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Text""
	},
	[""Hole""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FaceId"",
		[5] = ""InOut"",
		[6] = ""LeftRight"",
		[7] = ""TopBottom""
	},
	[""Hopper""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""HopperBin""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""TextureId"",
		[5] = ""Active"",
		[6] = ""BinType""
	},
	[""HttpRbxApiService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""HttpRequest""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""HttpService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Humanoid""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoJumpEnabled"",
		[5] = ""AutoRotate"",
		[6] = ""AutomaticScalingEnabled"",
		[7] = ""CameraOffset"",
		[8] = ""DisplayDistanceType"",
		[9] = ""Health"",
		[10] = ""HealthDisplayDistance"",
		[11] = ""HealthDisplayType"",
		[12] = ""HipHeight"",
		[13] = ""Jump"",
		[14] = ""JumpPower"",
		[15] = ""MaxHealth"",
		[16] = ""MaxSlopeAngle"",
		[17] = ""NameDisplayDistance"",
		[18] = ""NameOcclusion"",
		[19] = ""PlatformStand"",
		[20] = ""RigType"",
		[21] = ""Sit"",
		[22] = ""TargetPoint"",
		[23] = ""WalkSpeed"",
		[24] = ""WalkToPart"",
		[25] = ""WalkToPoint""
	},
	[""HumanoidController""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ImageButton""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""AutoButtonColor"",
		[27] = ""Modal"",
		[28] = ""Selected"",
		[29] = ""Style"",
		[30] = ""HoverImage"",
		[31] = ""Image"",
		[32] = ""ImageColor3"",
		[33] = ""ImageRectOffset"",
		[34] = ""ImageRectSize"",
		[35] = ""ImageTransparency"",
		[36] = ""PressedImage"",
		[37] = ""ScaleType"",
		[38] = ""SliceCenter"",
		[39] = ""SliceScale"",
		[40] = ""TileSize""
	},
	[""ImageHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Image"",
		[13] = ""Size""
	},
	[""ImageLabel""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""Image"",
		[27] = ""ImageColor3"",
		[28] = ""ImageRectOffset"",
		[29] = ""ImageRectSize"",
		[30] = ""ImageTransparency"",
		[31] = ""ScaleType"",
		[32] = ""SliceCenter"",
		[33] = ""SliceScale"",
		[34] = ""TileSize""
	},
	[""InputObject""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Delta"",
		[5] = ""KeyCode"",
		[6] = ""Position"",
		[7] = ""UserInputState"",
		[8] = ""UserInputType""
	},
	[""InsertService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Instance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""InstancePacketCache""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""IntConstrainedValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""MaxValue"",
		[5] = ""MinValue"",
		[6] = ""Value""
	},
	[""IntValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""InventoryPages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""JointInstance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""JointsService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""KeyboardService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Keyframe""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Time""
	},
	[""KeyframeSequence""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Loop"",
		[5] = ""Priority""
	},
	[""KeyframeSequenceProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""LayerCollector""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior""
	},
	[""Light""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Brightness"",
		[5] = ""Color"",
		[6] = ""Enabled"",
		[7] = ""Shadows""
	},
	[""Lighting""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Ambient"",
		[5] = ""Brightness"",
		[6] = ""ClockTime"",
		[7] = ""ColorShift_Bottom"",
		[8] = ""ColorShift_Top"",
		[9] = ""ExposureCompensation"",
		[10] = ""FogColor"",
		[11] = ""FogEnd"",
		[12] = ""FogStart"",
		[13] = ""GeographicLatitude"",
		[14] = ""GlobalShadows"",
		[15] = ""OutdoorAmbient"",
		[16] = ""Outlines"",
		[17] = ""TimeOfDay""
	},
	[""LineForce""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ApplyAtCenterOfMass"",
		[10] = ""InverseSquareLaw"",
		[11] = ""Magnitude"",
		[12] = ""MaxForce"",
		[13] = ""ReactionForceEnabled""
	},
	[""LineHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Length"",
		[13] = ""Thickness""
	},
	[""LocalScript""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Disabled"",
		[5] = ""LinkedSource""
	},
	[""LocalizationService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""LocalizationTable""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""SourceLocaleId""
	},
	[""LogService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""LoginService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""LuaSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AreScriptStartsReported"",
		[5] = ""DefaultWaitTime"",
		[6] = ""GcFrequency"",
		[7] = ""GcLimit"",
		[8] = ""GcPause"",
		[9] = ""GcStepMul"",
		[10] = ""WaitingThreadsBudget""
	},
	[""LuaSourceContainer""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""LuaWebService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ManualGlue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""ManualSurfaceJointInstance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""ManualWeld""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""MarketplaceService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""MeshContentProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""MeshPart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""TextureID"",
--		[46] = 'MeshId'
	},
	[""Message""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Text""
	},
	[""Model""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""PrimaryPart""
	},
	[""ModuleScript""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""LinkedSource""
	},
	[""Motor""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""CurrentAngle"",
		[9] = ""DesiredAngle"",
		[10] = ""MaxVelocity""
	},
	[""Motor6D""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""CurrentAngle"",
		[9] = ""DesiredAngle"",
		[10] = ""MaxVelocity""
	},
	[""MotorFeature""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FaceId"",
		[5] = ""InOut"",
		[6] = ""LeftRight"",
		[7] = ""TopBottom""
	},
	[""Mouse""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Icon"",
		[5] = ""TargetFilter""
	},
	[""MouseService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NegateOperation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""UsePartColor""
	},
	[""NetworkClient""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Ticket""
	},
	[""NetworkMarker""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NetworkPeer""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NetworkReplicator""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NetworkServer""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NetworkSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ArePhysicsRejectionsReported"",
		[5] = ""ClientPhysicsSendRate"",
		[6] = ""DataGCRate"",
		[7] = ""DataMtuAdjust"",
		[8] = ""DataSendRate"",
		[9] = ""IncommingReplicationLag"",
		[10] = ""IsQueueErrorComputed"",
		[11] = ""NetworkOwnerRate"",
		[12] = ""PhysicsMtuAdjust"",
		[13] = ""PhysicsSendRate"",
		[14] = ""PreferredClientPort"",
		[15] = ""PrintBits"",
		[16] = ""PrintEvents"",
		[17] = ""PrintFilters"",
		[18] = ""PrintInstances"",
		[19] = ""PrintPhysicsErrors"",
		[20] = ""PrintProperties"",
		[21] = ""PrintSplitMessage"",
		[22] = ""PrintStreamInstanceQuota"",
		[23] = ""PrintTouches"",
		[24] = ""ReceiveRate"",
		[25] = ""RenderStreamedRegions"",
		[26] = ""ShowActiveAnimationAsset"",
		[27] = ""TouchSendRate"",
		[28] = ""TrackDataTypes"",
		[29] = ""TrackPhysicsDetails"",
		[30] = ""UseInstancePacketCache"",
		[31] = ""UsePhysicsPacketCache""
	},
	[""NonReplicatedCSGDictionaryService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NotificationService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""NumberValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""ObjectValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""OrderedDataStore""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PVAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee""
	},
	[""PVInstance""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PackageLink""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Pages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Pants""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""PantsTemplate""
	},
	[""ParabolaAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee""
	},
	[""Part""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape""
	},
	[""PartAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee""
	},
	[""PartOperation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""UsePartColor""
	},
	[""PartOperationAsset""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ParticleEmitter""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Acceleration"",
		[5] = ""Color"",
		[6] = ""Drag"",
		[7] = ""EmissionDirection"",
		[8] = ""Enabled"",
		[9] = ""Lifetime"",
		[10] = ""LightEmission"",
		[11] = ""LightInfluence"",
		[12] = ""LockedToPart"",
		[13] = ""Rate"",
		[14] = ""RotSpeed"",
		[15] = ""Rotation"",
		[16] = ""Size"",
		[17] = ""Speed"",
		[18] = ""SpreadAngle"",
		[19] = ""Texture"",
		[20] = ""Transparency"",
		[21] = ""VelocityInheritance"",
		[22] = ""ZOffset""
	},
	[""Path""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PathfindingService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PhysicsPacketCache""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PhysicsService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PhysicsSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AllowSleep"",
		[5] = ""AreAnchorsShown"",
		[6] = ""AreAssembliesShown"",
		[7] = ""AreAwakePartsHighlighted"",
		[8] = ""AreBodyTypesShown"",
		[9] = ""AreContactIslandsShown"",
		[10] = ""AreContactPointsShown"",
		[11] = ""AreJointCoordinatesShown"",
		[12] = ""AreMechanismsShown"",
		[13] = ""AreModelCoordsShown"",
		[14] = ""AreOwnersShown"",
		[15] = ""ArePartCoordsShown"",
		[16] = ""AreRegionsShown"",
		[17] = ""AreUnalignedPartsShown"",
		[18] = ""AreWorldCoordsShown"",
		[19] = ""DisableCSGv2"",
		[20] = ""IsReceiveAgeShown"",
		[21] = ""IsTreeShown"",
		[22] = ""PhysicsEnvironmentalThrottle"",
		[23] = ""ShowDecompositionGeometry"",
		[24] = ""ThrottleAdjustTime"",
		[25] = ""UseCSGv2""
	},
	[""PitchShiftSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Octave""
	},
	[""Platform""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape""
	},
	[""Player""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoJumpEnabled"",
		[5] = ""CameraMaxZoomDistance"",
		[6] = ""CameraMinZoomDistance"",
		[7] = ""CameraMode"",
		[8] = ""CanLoadCharacterAppearance"",
		[9] = ""Character"",
		[10] = ""CharacterAppearanceId"",
		[11] = ""DevCameraOcclusionMode"",
		[12] = ""DevComputerCameraMode"",
		[13] = ""DevComputerMovementMode"",
		[14] = ""DevEnableMouseLock"",
		[15] = ""DevTouchCameraMode"",
		[16] = ""DevTouchMovementMode"",
		[17] = ""HealthDisplayDistance"",
		[18] = ""NameDisplayDistance"",
		[19] = ""Neutral"",
		[20] = ""ReplicationFocus"",
		[21] = ""RespawnLocation"",
		[22] = ""Team"",
		[23] = ""TeamColor"",
		[24] = ""UserId""
	},
	[""PlayerGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ScreenOrientation"",
		[5] = ""SelectionImageObject""
	},
	[""PlayerMouse""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Icon"",
		[5] = ""TargetFilter""
	},
	[""PlayerScripts""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Players""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CharacterAutoLoads""
	},
	[""Plugin""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PluginAction""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PluginGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""Title""
	},
	[""PluginGuiService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PluginManager""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""PluginMouse""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Icon"",
		[5] = ""TargetFilter""
	},
	[""PointLight""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Brightness"",
		[5] = ""Color"",
		[6] = ""Enabled"",
		[7] = ""Shadows"",
		[8] = ""Range""
	},
	[""PointsService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Pose""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CFrame"",
		[5] = ""EasingDirection"",
		[6] = ""EasingStyle"",
		[7] = ""Weight""
	},
	[""PostEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled""
	},
	[""PrismaticConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ActuatorType"",
		[10] = ""LimitsEnabled"",
		[11] = ""LowerLimit"",
		[12] = ""MotorMaxAcceleration"",
		[13] = ""MotorMaxForce"",
		[14] = ""Restitution"",
		[15] = ""ServoMaxForce"",
		[16] = ""Size"",
		[17] = ""Speed"",
		[18] = ""TargetPosition"",
		[19] = ""UpperLimit"",
		[20] = ""Velocity""
	},
	[""QWidgetPluginGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""Title""
	},
	[""RayValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""ReflectionMetadata""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataCallbacks""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataClass""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Browsable"",
		[5] = ""ClassCategory"",
		[6] = ""Constraint"",
		[7] = ""Deprecated"",
		[8] = ""EditingDisabled"",
		[9] = ""IsBackend"",
		[10] = ""ScriptContext"",
		[11] = ""UIMaximum"",
		[12] = ""UIMinimum"",
		[13] = ""UINumTicks"",
		[14] = ""summary"",
		[15] = ""ExplorerImageIndex"",
		[16] = ""ExplorerOrder"",
		[17] = ""Insertable"",
		[18] = ""PreferredParent"",
		[19] = ""PreferredParents""
	},
	[""ReflectionMetadataClasses""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataEnum""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Browsable"",
		[5] = ""ClassCategory"",
		[6] = ""Constraint"",
		[7] = ""Deprecated"",
		[8] = ""EditingDisabled"",
		[9] = ""IsBackend"",
		[10] = ""ScriptContext"",
		[11] = ""UIMaximum"",
		[12] = ""UIMinimum"",
		[13] = ""UINumTicks"",
		[14] = ""summary""
	},
	[""ReflectionMetadataEnumItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Browsable"",
		[5] = ""ClassCategory"",
		[6] = ""Constraint"",
		[7] = ""Deprecated"",
		[8] = ""EditingDisabled"",
		[9] = ""IsBackend"",
		[10] = ""ScriptContext"",
		[11] = ""UIMaximum"",
		[12] = ""UIMinimum"",
		[13] = ""UINumTicks"",
		[14] = ""summary""
	},
	[""ReflectionMetadataEnums""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataEvents""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataFunctions""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Browsable"",
		[5] = ""ClassCategory"",
		[6] = ""Constraint"",
		[7] = ""Deprecated"",
		[8] = ""EditingDisabled"",
		[9] = ""IsBackend"",
		[10] = ""ScriptContext"",
		[11] = ""UIMaximum"",
		[12] = ""UIMinimum"",
		[13] = ""UINumTicks"",
		[14] = ""summary""
	},
	[""ReflectionMetadataMember""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Browsable"",
		[5] = ""ClassCategory"",
		[6] = ""Constraint"",
		[7] = ""Deprecated"",
		[8] = ""EditingDisabled"",
		[9] = ""IsBackend"",
		[10] = ""ScriptContext"",
		[11] = ""UIMaximum"",
		[12] = ""UIMinimum"",
		[13] = ""UINumTicks"",
		[14] = ""summary""
	},
	[""ReflectionMetadataProperties""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReflectionMetadataYieldFunctions""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RemoteEvent""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RemoteFunction""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RenderSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoFRMLevel"",
		[5] = ""EagerBulkExecution"",
		[6] = ""EditQualityLevel"",
		[7] = ""ExportMergeByMaterial"",
		[8] = ""FrameRateManager"",
		[9] = ""GraphicsMode"",
		[10] = ""MeshCacheSize"",
		[11] = ""QualityLevel"",
		[12] = ""ReloadAssets"",
		[13] = ""RenderCSGTrianglesDebug"",
		[14] = ""ShowBoundingBoxes""
	},
	[""RenderingTest""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CFrame"",
		[5] = ""ComparisonDiffThreshold"",
		[6] = ""ComparisonMethod"",
		[7] = ""ComparisonPsnrThreshold"",
		[8] = ""Description"",
		[9] = ""FieldOfView"",
		[10] = ""Orientation"",
		[11] = ""Position"",
		[12] = ""QualityLevel"",
		[13] = ""ShouldSkip"",
		[14] = ""Ticket""
	},
	[""ReplicatedFirst""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReplicatedStorage""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ReverbSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""DecayTime"",
		[7] = ""Density"",
		[8] = ""Diffusion"",
		[9] = ""DryLevel"",
		[10] = ""WetLevel""
	},
	[""RobloxReplicatedStorage""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RocketPropulsion""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CartoonFactor"",
		[5] = ""MaxSpeed"",
		[6] = ""MaxThrust"",
		[7] = ""MaxTorque"",
		[8] = ""Target"",
		[9] = ""TargetOffset"",
		[10] = ""TargetRadius"",
		[11] = ""ThrustD"",
		[12] = ""ThrustP"",
		[13] = ""TurnD"",
		[14] = ""TurnP""
	},
	[""RodConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""Length"",
		[10] = ""Thickness""
	},
	[""RopeConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""Length"",
		[10] = ""Restitution"",
		[11] = ""Thickness""
	},
	[""Rotate""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""RotateP""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""BaseAngle""
	},
	[""RotateV""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""BaseAngle""
	},
	[""RunService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RunningAverageItemDouble""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RunningAverageItemInt""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RunningAverageTimeIntervalItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""RuntimeScriptService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ScreenGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""DisplayOrder"",
		[10] = ""IgnoreGuiInset""
	},
	[""Script""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Disabled"",
		[5] = ""LinkedSource""
	},
	[""ScriptContext""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ScriptDebugger""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ScriptService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ScrollingFrame""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""BottomImage"",
		[27] = ""CanvasPosition"",
		[28] = ""CanvasSize"",
		[29] = ""ElasticBehavior"",
		[30] = ""HorizontalScrollBarInset"",
		[31] = ""MidImage"",
		[32] = ""ScrollBarImageColor3"",
		[33] = ""ScrollBarImageTransparency"",
		[34] = ""ScrollBarThickness"",
		[35] = ""ScrollingDirection"",
		[36] = ""ScrollingEnabled"",
		[37] = ""TopImage"",
		[38] = ""VerticalScrollBarInset"",
		[39] = ""VerticalScrollBarPosition""
	},
	[""Seat""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape"",
		[46] = ""Disabled""
	},
	[""Selection""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""SelectionBox""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""LineThickness"",
		[9] = ""SurfaceColor3"",
		[10] = ""SurfaceTransparency""
	},
	[""SelectionLasso""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Humanoid""
	},
	[""SelectionPartLasso""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Humanoid"",
		[8] = ""Part""
	},
	[""SelectionPointLasso""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Humanoid"",
		[8] = ""Point""
	},
	[""SelectionSphere""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""SurfaceColor3"",
		[9] = ""SurfaceTransparency""
	},
	[""ServerReplicator""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ServerScriptService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ServerStorage""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""ServiceProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Shirt""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ShirtTemplate""
	},
	[""ShirtGraphic""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Graphic""
	},
	[""SkateboardController""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""SkateboardPlatform""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape"",
		[46] = ""Steer"",
		[47] = ""StickyWheels"",
		[48] = ""Throttle""
	},
	[""Skin""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""SkinColor""
	},
	[""Sky""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""CelestialBodiesShown"",
		[5] = ""MoonAngularSize"",
		[6] = ""MoonTextureId"",
		[7] = ""SkyboxBk"",
		[8] = ""SkyboxDn"",
		[9] = ""SkyboxFt"",
		[10] = ""SkyboxLf"",
		[11] = ""SkyboxRt"",
		[12] = ""SkyboxUp"",
		[13] = ""StarCount"",
		[14] = ""SunAngularSize"",
		[15] = ""SunTextureId""
	},
	[""SlidingBallConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ActuatorType"",
		[10] = ""LimitsEnabled"",
		[11] = ""LowerLimit"",
		[12] = ""MotorMaxAcceleration"",
		[13] = ""MotorMaxForce"",
		[14] = ""Restitution"",
		[15] = ""ServoMaxForce"",
		[16] = ""Size"",
		[17] = ""Speed"",
		[18] = ""TargetPosition"",
		[19] = ""UpperLimit"",
		[20] = ""Velocity""
	},
	[""Smoke""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color"",
		[5] = ""Enabled"",
		[6] = ""Opacity"",
		[7] = ""RiseVelocity"",
		[8] = ""Size""
	},
	[""Snap""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""SolidModelContentProvider""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Sound""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""EmitterSize"",
		[5] = ""Looped"",
		[6] = ""MaxDistance"",
		[7] = ""PlayOnRemove"",
		[8] = ""PlaybackSpeed"",
		[9] = ""Playing"",
		[10] = ""RollOffMode"",
		[11] = ""SoundGroup"",
		[12] = ""SoundId"",
		[13] = ""TimePosition"",
		[14] = ""Volume""
	},
	[""SoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority""
	},
	[""SoundGroup""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Volume""
	},
	[""SoundService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AmbientReverb"",
		[5] = ""DistanceFactor"",
		[6] = ""DopplerScale"",
		[7] = ""RespectFilteringEnabled"",
		[8] = ""RolloffScale""
	},
	[""Sparkles""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""SparkleColor""
	},
	[""SpawnLocation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Shape"",
		[46] = ""AllowTeamChangeOnTouch"",
		[47] = ""Duration"",
		[48] = ""Enabled"",
		[49] = ""Neutral"",
		[50] = ""TeamColor""
	},
	[""SpawnerService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""SpecialMesh""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Offset"",
		[5] = ""Scale"",
		[6] = ""VertexColor"",
		[7] = ""MeshId"",
		[8] = ""TextureId"",
		[9] = ""MeshType""
	},
	[""SphereHandleAdornment""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""AlwaysOnTop"",
		[9] = ""CFrame"",
		[10] = ""SizeRelativeOffset"",
		[11] = ""ZIndex"",
		[12] = ""Radius""
	},
	[""SpotLight""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Brightness"",
		[5] = ""Color"",
		[6] = ""Enabled"",
		[7] = ""Shadows"",
		[8] = ""Angle"",
		[9] = ""Face"",
		[10] = ""Range""
	},
	[""SpringConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""Coils"",
		[10] = ""Damping"",
		[11] = ""FreeLength"",
		[12] = ""LimitsEnabled"",
		[13] = ""MaxForce"",
		[14] = ""MaxLength"",
		[15] = ""MinLength"",
		[16] = ""Radius"",
		[17] = ""Stiffness"",
		[18] = ""Thickness""
	},
	[""StandardPages""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""StarterCharacterScripts""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""StarterGear""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""StarterGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ScreenOrientation"",
		[5] = ""ShowDevelopmentGui""
	},
	[""StarterPack""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""StarterPlayer""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoJumpEnabled"",
		[5] = ""CameraMaxZoomDistance"",
		[6] = ""CameraMinZoomDistance"",
		[7] = ""CameraMode"",
		[8] = ""DevCameraOcclusionMode"",
		[9] = ""DevComputerCameraMovementMode"",
		[10] = ""DevComputerMovementMode"",
		[11] = ""DevTouchCameraMovementMode"",
		[12] = ""DevTouchMovementMode"",
		[13] = ""EnableMouseLockOption"",
		[14] = ""HealthDisplayDistance"",
		[15] = ""LoadCharacterAppearance"",
		[16] = ""NameDisplayDistance""
	},
	[""StarterPlayerScripts""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Stats""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""StatsItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Status""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""PrimaryPart""
	},
	[""StringValue""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""SunRaysEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Intensity"",
		[6] = ""Spread""
	},
	[""SurfaceGui""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Enabled"",
		[7] = ""ResetOnSpawn"",
		[8] = ""ZIndexBehavior"",
		[9] = ""Active"",
		[10] = ""Adornee"",
		[11] = ""AlwaysOnTop"",
		[12] = ""CanvasSize"",
		[13] = ""ClipsDescendants"",
		[14] = ""Face"",
		[15] = ""LightInfluence"",
		[16] = ""ToolPunchThroughDistance"",
		[17] = ""ZOffset""
	},
	[""SurfaceLight""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Brightness"",
		[5] = ""Color"",
		[6] = ""Enabled"",
		[7] = ""Shadows"",
		[8] = ""Angle"",
		[9] = ""Face"",
		[10] = ""Range""
	},
	[""SurfaceSelection""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Color3"",
		[5] = ""Transparency"",
		[6] = ""Visible"",
		[7] = ""Adornee"",
		[8] = ""TargetSurface""
	},
	[""TaskScheduler""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ThreadPoolConfig""
	},
	[""Team""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoAssignable"",
		[5] = ""TeamColor""
	},
	[""Teams""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TeleportService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Terrain""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""WaterColor"",
		[46] = ""WaterReflectance"",
		[47] = ""WaterTransparency"",
		[48] = ""WaterWaveSize"",
		[49] = ""WaterWaveSpeed""
	},
	[""TerrainRegion""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TestService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoRuns"",
		[5] = ""Description"",
		[6] = ""ExecuteWithStudioRun"",
		[7] = ""Is30FpsThrottleEnabled"",
		[8] = ""IsPhysicsEnvironmentalThrottled"",
		[9] = ""IsSleepAllowed"",
		[10] = ""NumberOfPlayers"",
		[11] = ""SimulateSecondsLag"",
		[12] = ""Timeout""
	},
	[""TextBox""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""ClearTextOnFocus"",
		[27] = ""Font"",
		[28] = ""LineHeight"",
		[29] = ""MultiLine"",
		[30] = ""PlaceholderColor3"",
		[31] = ""PlaceholderText"",
		[32] = ""ShowNativeInput"",
		[33] = ""Text"",
		[34] = ""TextColor3"",
		[35] = ""TextScaled"",
		[36] = ""TextSize"",
		[37] = ""TextStrokeColor3"",
		[38] = ""TextStrokeTransparency"",
		[39] = ""TextTransparency"",
		[40] = ""TextTruncate"",
		[41] = ""TextWrapped"",
		[42] = ""TextXAlignment"",
		[43] = ""TextYAlignment""
	},
	[""TextButton""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""AutoButtonColor"",
		[27] = ""Modal"",
		[28] = ""Selected"",
		[29] = ""Style"",
		[30] = ""Font"",
		[31] = ""LineHeight"",
		[32] = ""Text"",
		[33] = ""TextColor3"",
		[34] = ""TextScaled"",
		[35] = ""TextSize"",
		[36] = ""TextStrokeColor3"",
		[37] = ""TextStrokeTransparency"",
		[38] = ""TextTransparency"",
		[39] = ""TextTruncate"",
		[40] = ""TextWrapped"",
		[41] = ""TextXAlignment"",
		[42] = ""TextYAlignment""
	},
	[""TextFilterResult""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TextLabel""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AutoLocalize"",
		[5] = ""RootLocalizationTable"",
		[6] = ""Active"",
		[7] = ""AnchorPoint"",
		[8] = ""BackgroundColor3"",
		[9] = ""BackgroundTransparency"",
		[10] = ""BorderColor3"",
		[11] = ""BorderSizePixel"",
		[12] = ""ClipsDescendants"",
		[13] = ""LayoutOrder"",
		[14] = ""NextSelectionDown"",
		[15] = ""NextSelectionLeft"",
		[16] = ""NextSelectionRight"",
		[17] = ""NextSelectionUp"",
		[18] = ""Position"",
		[19] = ""Rotation"",
		[20] = ""Selectable"",
		[21] = ""SelectionImageObject"",
		[22] = ""Size"",
		[23] = ""SizeConstraint"",
		[24] = ""Visible"",
		[25] = ""ZIndex"",
		[26] = ""Font"",
		[27] = ""LineHeight"",
		[28] = ""Text"",
		[29] = ""TextColor3"",
		[30] = ""TextScaled"",
		[31] = ""TextSize"",
		[32] = ""TextStrokeColor3"",
		[33] = ""TextStrokeTransparency"",
		[34] = ""TextTransparency"",
		[35] = ""TextTruncate"",
		[36] = ""TextWrapped"",
		[37] = ""TextXAlignment"",
		[38] = ""TextYAlignment""
	},
	[""TextService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Texture""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Face"",
		[5] = ""Color3"",
		[6] = ""Texture"",
		[7] = ""Transparency"",
		[8] = ""StudsPerTileU"",
		[9] = ""StudsPerTileV""
	},
	[""ThirdPartyUserService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TimerService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Tool""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""TextureId"",
		[5] = ""CanBeDropped"",
		[6] = ""Enabled"",
		[7] = ""Grip"",
		[8] = ""GripForward"",
		[9] = ""GripPos"",
		[10] = ""GripRight"",
		[11] = ""GripUp"",
		[12] = ""ManualActivationOnly"",
		[13] = ""RequiresHandle"",
		[14] = ""ToolTip""
	},
	[""Toolbar""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Torque""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""RelativeTo"",
		[10] = ""Torque""
	},
	[""TotalCountTimeIntervalItem""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TouchInputService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TouchTransmitter""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Trail""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""FaceCamera"",
		[9] = ""Lifetime"",
		[10] = ""LightEmission"",
		[11] = ""LightInfluence"",
		[12] = ""MaxLength"",
		[13] = ""MinLength"",
		[14] = ""Texture"",
		[15] = ""TextureLength"",
		[16] = ""TextureMode"",
		[17] = ""Transparency"",
		[18] = ""WidthScale""
	},
	[""Translator""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TremoloSoundEffect""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Priority"",
		[6] = ""Depth"",
		[7] = ""Duty"",
		[8] = ""Frequency""
	},
	[""TrussPart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Style""
	},
	[""Tween""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TweenBase""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""TweenService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""UIAspectRatioConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""AspectRatio"",
		[5] = ""AspectType"",
		[6] = ""DominantAxis""
	},
	[""UIBase""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""UIComponent""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""UIConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""UIGridLayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FillDirection"",
		[5] = ""HorizontalAlignment"",
		[6] = ""SortOrder"",
		[7] = ""VerticalAlignment"",
		[8] = ""CellPadding"",
		[9] = ""CellSize"",
		[10] = ""FillDirectionMaxCells"",
		[11] = ""StartCorner""
	},
	[""UIGridStyleLayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FillDirection"",
		[5] = ""HorizontalAlignment"",
		[6] = ""SortOrder"",
		[7] = ""VerticalAlignment""
	},
	[""UILayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""UIListLayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FillDirection"",
		[5] = ""HorizontalAlignment"",
		[6] = ""SortOrder"",
		[7] = ""VerticalAlignment"",
		[8] = ""Padding""
	},
	[""UIPadding""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""PaddingBottom"",
		[5] = ""PaddingLeft"",
		[6] = ""PaddingRight"",
		[7] = ""PaddingTop""
	},
	[""UIPageLayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FillDirection"",
		[5] = ""HorizontalAlignment"",
		[6] = ""SortOrder"",
		[7] = ""VerticalAlignment"",
		[8] = ""Animated"",
		[9] = ""Circular"",
		[10] = ""EasingDirection"",
		[11] = ""EasingStyle"",
		[12] = ""GamepadInputEnabled"",
		[13] = ""Padding"",
		[14] = ""ScrollWheelInputEnabled"",
		[15] = ""TouchInputEnabled"",
		[16] = ""TweenTime""
	},
	[""UIScale""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Scale""
	},
	[""UISizeConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""MaxSize"",
		[5] = ""MinSize""
	},
	[""UITableLayout""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""FillDirection"",
		[5] = ""HorizontalAlignment"",
		[6] = ""SortOrder"",
		[7] = ""VerticalAlignment"",
		[8] = ""FillEmptySpaceColumns"",
		[9] = ""FillEmptySpaceRows"",
		[10] = ""MajorAxis"",
		[11] = ""Padding""
	},
	[""UITextSizeConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""MaxTextSize"",
		[5] = ""MinTextSize""
	},
	[""UnionOperation""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""UsePartColor""
	},
	[""UserGameSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ComputerCameraMovementMode"",
		[5] = ""ComputerMovementMode"",
		[6] = ""ControlMode"",
		[7] = ""GamepadCameraSensitivity"",
		[8] = ""MasterVolume"",
		[9] = ""MouseSensitivity"",
		[10] = ""RotationType"",
		[11] = ""SavedQualityLevel"",
		[12] = ""TouchCameraMovementMode"",
		[13] = ""TouchMovementMode""
	},
	[""UserInputService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""ModalEnabled"",
		[5] = ""MouseBehavior"",
		[6] = ""MouseDeltaSensitivity"",
		[7] = ""MouseIconEnabled""
	},
	[""UserSettings""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""VRService""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""GuiInputUserCFrame""
	},
	[""ValueBase""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Vector3Value""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Value""
	},
	[""VectorForce""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Attachment0"",
		[5] = ""Attachment1"",
		[6] = ""Color"",
		[7] = ""Enabled"",
		[8] = ""Visible"",
		[9] = ""ApplyAtCenterOfMass"",
		[10] = ""Force"",
		[11] = ""RelativeTo""
	},
	[""VehicleController""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""VehicleSeat""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity"",
		[45] = ""Disabled"",
		[46] = ""HeadsUpDisplay"",
		[47] = ""MaxSpeed"",
		[48] = ""Steer"",
		[49] = ""SteerFloat"",
		[50] = ""Throttle"",
		[51] = ""ThrottleFloat"",
		[52] = ""Torque"",
		[53] = ""TurnSpeed""
	},
	[""VelocityMotor""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1"",
		[8] = ""CurrentAngle"",
		[9] = ""DesiredAngle"",
		[10] = ""Hole"",
		[11] = ""MaxVelocity""
	},
	[""VirtualInputManager""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""VirtualUser""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""Visit""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent""
	},
	[""WedgePart""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Anchored"",
		[5] = ""BackParamA"",
		[6] = ""BackParamB"",
		[7] = ""BackSurface"",
		[8] = ""BackSurfaceInput"",
		[9] = ""BottomParamA"",
		[10] = ""BottomParamB"",
		[11] = ""BottomSurface"",
		[12] = ""BottomSurfaceInput"",
		[13] = ""BrickColor"",
		[14] = ""CFrame"",
		[15] = ""CanCollide"",
		[16] = ""CollisionGroupId"",
		[17] = ""Color"",
		[18] = ""CustomPhysicalProperties"",
		[19] = ""FrontParamA"",
		[20] = ""FrontParamB"",
		[21] = ""FrontSurface"",
		[22] = ""FrontSurfaceInput"",
		[23] = ""LeftParamA"",
		[24] = ""LeftParamB"",
		[25] = ""LeftSurface"",
		[26] = ""LeftSurfaceInput"",
		[27] = ""Locked"",
		[28] = ""Material"",
		[29] = ""Orientation"",
		[30] = ""Position"",
		[31] = ""Reflectance"",
		[32] = ""RightParamA"",
		[33] = ""RightParamB"",
		[34] = ""RightSurface"",
		[35] = ""RightSurfaceInput"",
		[36] = ""RotVelocity"",
		[37] = ""Rotation"",
		[38] = ""Size"",
		[39] = ""TopParamA"",
		[40] = ""TopParamB"",
		[41] = ""TopSurface"",
		[42] = ""TopSurfaceInput"",
		[43] = ""Transparency"",
		[44] = ""Velocity""
	},
	[""Weld""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""C0"",
		[5] = ""C1"",
		[6] = ""Part0"",
		[7] = ""Part1""
	},
	[""WeldConstraint""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""Enabled"",
		[5] = ""Part0"",
		[6] = ""Part1""
	},
	[""Workspace""] =    {
		[1] = ""Archivable"",
		[2] = ""Name"",
		[3] = ""Parent"",
		[4] = ""PrimaryPart"",
		[5] = ""AllowThirdPartySales"",
		[6] = ""CurrentCamera"",
		[7] = ""DistributedGameTime"",
		[8] = ""Gravity"",
		[9] = ""StreamingEnabled"",
	}
}"
p9404a9Z,xtu 1331密码,deezykiki,C,Saturday 17th of February 2024 07:17:32 AM CDT,"#include<stdio.h>
int main()
{
	int t;
	scanf(""%d"",&t);
	while(t--)
	{
		int n;
		scanf(""%d"",&n);
		long long x[50][5] = {0};
		x[1][1] = 1;
		x[1][2] = 1;
		x[1][3] = 1;
		x[1][4] = 1;
		for(int i = 2;i <= n;i++)
		{
			x[i][1] = x[i-1][2]+x[i-1][3];
			x[i][2] = x[i-1][4]+x[i-1][3]+x[i-1][1];
			x[i][3] = x[i-1][4]+x[i-1][2]+x[i-1][1];
			x[i][4] = x[i-1][2]+x[i-1][3];
		}
		long long sum = x[n][1]+x[n][2]+x[n][3]+x[n][4];
		printf(""%lld\n"",sum);
	}
}"
dGVk5Wph,Untitled,andreluispaulo,XML,Saturday 17th of February 2024 06:48:40 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<types>
  <type name=""AmpouleActaparoxetine"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleActovegin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAdrenalin05"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAdrenalin10"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAdrenalin30"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAlcohol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Farm"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
  </type>
  <type name=""AmpouleAminokaprolSulfat"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAmitriptyline"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleAmoksivan"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleArsenic"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleCarboxyme"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleCylaspen"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleCypermetrin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleDiazinon"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleDiklofenak"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleErytromicyn"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleErytropoenin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleEtamzilat"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleFlemoclav"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleGexobarbital"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleGrimipenem"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleHeptral"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleHihlofos"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleImipenem"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleIrineks"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleKetamin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleKetoprofen"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleKetorol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleMaltofer"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleMeksidol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleMetoclopramid"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleMetralindol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleNeiroks"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleNimesulid"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleNonacogAlpha"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleNovocain"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleOcsacylin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpoulePeklitakcel"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpoulePentacin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpoulePerftoran"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpoulePropanidid"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpoulePropofol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleSodiumOxybutirate"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleTiopental"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleVikasol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleZeftriaxon"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleZerukal"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""AmpouleZivirol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>10</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <usage name=""Medic"" />
  </type>
  <type name=""BakedBeansCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""BandageHemostatic"">
    <nominal>10</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""BrisketSpread_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""CatFoodCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""DogFoodCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""InjectorAmoksivan"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorEpipen"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorErytropoenin"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorKetorol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorNeiroks"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorNovichek"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorPromedol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorRadioprotector"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorTopoizomeraza"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""InjectorZivirol"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>10</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""ItemHomebook"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""tools"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""ItemPDA"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""clothes"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""Lunchmeat_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""MedContainerLarge"">
    <nominal>10</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""tools"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""MedContainerMedium"">
    <nominal>10</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>2</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""tools"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""MedContainerSmall"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>3</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""tools"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""Pajka_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""Pate_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""PeachesCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""PorkCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SalveFinalgon"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SalveKapsikam"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SalveViprosal"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SardinesCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SleepingBag_Blue"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SleepingBag_Woodland"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""SleepingBagPlaced_Blue"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""1"" deloot=""0"" />
    <usage name=""Historical"" />
    <usage name=""Hunting"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Police"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""SleepingBagPlaced_Woodland"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""1"" deloot=""0"" />
    <usage name=""Military"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""SodaCan_MadBull"">
    <nominal>6</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
  </type>
  <type name=""SpaghettiCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""Stethoscope"">
    <nominal>15</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>8</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""tools"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""SurgicalKit"">
    <nominal>50</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>3</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""containers"" />
    <usage name=""Medic"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
  </type>
  <type name=""SyringeEmpty"">
    <nominal>50</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>5</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Farm"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""SyringeFull"">
    <nominal>50</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""TabletsActaparoxetine"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAdepress"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAertal"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAgteminol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAmibaktam"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAmitriptyline"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAmoksiklav"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAmoksivan"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAmpicylin"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsAnalgin"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsB190"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsCharcoal"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsCyprolet"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsCystamine"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsCytramon"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsDycinon"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsEnterofuril"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsErsefuril"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsFtalazol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsHeferol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsIbuprofen"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsIrovit"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsKarbopekt"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsMesalazin"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsMexamine"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsMezimForte"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsMovalis"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsNaiz"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsNifuroksazid"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsNimesil"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsNoopept"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsNurofen"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsParacetamol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsPentalgin"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsPiperacylin"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsPolisorb"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsPotassiumHexacyanoferrate"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsPotassiumIodide"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsSalofalk"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsSorbiferDurulis"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsTardiferon"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsTetracycline"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsTrihopol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsVenlafaxine"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsVikasol"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TabletsZerukal"">
    <nominal>20</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>15</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Medic"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
    <value name=""Tier4"" />
  </type>
  <type name=""TacticalBaconCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""TunaCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
  <type name=""UnknownFoodCan_OpenedRotten"">
    <nominal>5</nominal>
    <lifetime>14400</lifetime>
    <restock>1800</restock>
    <min>1</min>
    <quantmin>-1</quantmin>
    <quantmax>-1</quantmax>
    <cost>100</cost>
    <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0"" />
    <category name=""food"" />
    <usage name=""Coast"" />
    <usage name=""Farm"" />
    <usage name=""Hunting"" />
    <usage name=""Industrial"" />
    <usage name=""Lunapark"" />
    <usage name=""Military"" />
    <usage name=""Office"" />
    <usage name=""School"" />
    <usage name=""Town"" />
    <usage name=""Village"" />
    <tag name=""floor"" />
    <tag name=""ground"" />
    <tag name=""shelves"" />
    <value name=""Tier1"" />
    <value name=""Tier2"" />
    <value name=""Tier3"" />
  </type>
</types>"
yAgyJazF,ex2 kispython ternary,Gamerkin,Python,Saturday 17th of February 2024 06:39:34 AM CDT,"from math import atan, log
 
 
def main(y):
    return (22 * (50 * y ** 3 + 91 + 14 * y) ** 7 -
            (y ** 3 - y - 65 * y ** 2) ** 6 -
            23 * (y ** 2 - 1 - 38 * y) ** 2) if y < 30 else \
           (27 * (59 * y ** 3) ** 5 +
            atan(59 * y - y ** 2 / 94 - 1) ** 4 +
            30 * log(y ** 2, 2) ** 3) if 30 <= y < 72 else (62 * y ** 5 +
                                                            1 + y ** 3 / 39)
 
print(main(20))"
v7jnmA8t,CommentServer.cpp,pavelzep,C++,Saturday 17th of February 2024 06:34:29 AM CDT,"//#include ""comment_server.h""



//#pragma once

#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <utility>
#include <map>
#include <optional>
#include <unordered_set>

// using namespace std;
using std::string;
using std::map;
using std::pair;
using std::vector;
using std::optional;
using std::istream;
using std::ostream;
using std::unordered_set;
using std::istringstream;

pair<string, string> SplitBy(const string& what, const string& by);

struct HttpRequest {
    string method, path, body;
    map<string, string> get_params;
};

struct LastCommentInfo {
    size_t user_id, consecutive_count;
};

struct HttpHeader {
    string name, value;
};

struct ParsedResponse {
    int code;
    vector<HttpHeader> headers;
    string content;
};

enum class HttpCode {
    Ok = 200,
    NotFound = 404,
    Found = 302,
};

class HttpResponse {
public:
    explicit HttpResponse(HttpCode code);

    HttpResponse& AddHeader(string name, string value);
    HttpResponse& SetContent(string a_content);
    HttpResponse& SetCode(HttpCode a_code);

    friend ostream& operator << (ostream& output, const HttpResponse& resp);

private:
    struct Response {
        HttpCode code;
        vector<HttpHeader> headers;
        string content;
    };
    string CodeToString(HttpCode) const;
    Response resp;
};

class CommentServer {
private:
    vector<vector<string>> comments_;
    optional<LastCommentInfo> last_comment;
    unordered_set<size_t> banned_users;
public:
    void ServeRequest(const HttpRequest& req, ostream& os);
    HttpResponse ServeRequest(const HttpRequest& req);
};

ostream& operator<<(ostream& output, const HttpHeader& h);
bool operator==(const HttpHeader& lhs, const HttpHeader& rhs);
istream& operator >>(istream& input, ParsedResponse& r);

//#include ""comment_server.h"" end 



// using std::string;
// using std::map;
// using std::pair;
// using std::vector;
// using std::optional;
// using std::istream;
// using std::ostream;
// using std::unordered_set;
// using std::istringstream;

pair<string, string> SplitBy(const string& what, const string& by) {
    size_t pos = what.find(by);
    if (by.size() < what.size() && pos < what.size() - by.size()) {
        return { what.substr(0, pos), what.substr(pos + by.size()) };
    } else {
        return { what, {} };
    }
}

template<typename T>
T FromString(const string& s) {
    T x;
    istringstream is(s);
    is >> x;
    return x;
}

pair<size_t, string> ParseIdAndContent(const string& body) {
    auto [id_string, content] = SplitBy(body, "" "");
    return { FromString<size_t>(id_string), content };
}

void CommentServer::ServeRequest(const HttpRequest& req, ostream& os) {
    if (req.method == ""POST"") {
        if (req.path == ""/add_user"") {
            comments_.emplace_back();
            auto response = std::to_string(comments_.size() - 1);
            os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: "" << response.size() << ""\n"" << ""\n""
                << response;
        } else if (req.path == ""/add_comment"") {
            auto [user_id, comment] = ParseIdAndContent(req.body);

            if (!last_comment || last_comment->user_id != user_id) {
                last_comment = LastCommentInfo{ user_id, 1 };
            } else if (++last_comment->consecutive_count > 3) {
                banned_users.insert(user_id);
            }

            if (banned_users.count(user_id) == 0) {
                comments_[user_id].push_back(string(comment));
                os << ""HTTP/1.1 200 OK\n\n"";
            } else {
                os << ""HTTP/1.1 302 Found\n"" << ""Location: /captcha\n\n"";
            }

        } else if (req.path == ""/checkcaptcha"") {
            if (auto [id, response] = ParseIdAndContent(req.body); response == ""42"") {
                banned_users.erase(id);
                if (last_comment && last_comment->user_id == id) {
                    last_comment.reset();
                }
                os << ""HTTP/1.1 200 OK\n\n"";
            } else {
                os << ""HTTP/1.1 302 Found\n"" << ""Location: /captcha\n\n"";
            }
        } else {
            os << ""HTTP/1.1 404 Not found\n\n"";
        }
    } else if (req.method == ""GET"") {
        if (req.path == ""/user_comments"") {
            auto user_id = FromString<size_t>(req.get_params.at(""user_id""));
            string response;
            for (const string& c : comments_[user_id]) {
                response += c + '\n';
            }

            os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: "" << response.size() << ""\n"" << ""\n"" << response;
        } else if (req.path == ""/captcha"") {
            os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: 82\n"" << ""\n""
                << ""What's the answer for The Ultimate Question of Life, the Universe, and Everything?"";
        } else {
            os << ""HTTP/1.1 404 Not found\n\n"";
        }
    }
}



ostream& operator<<(ostream& output, const HttpHeader& h) {
    return output << h.name << "": "" << h.value;
}

bool operator==(const HttpHeader& lhs, const HttpHeader& rhs) {
    return lhs.name == rhs.name && lhs.value == rhs.value;
}

istream& operator >>(istream& input, ParsedResponse& r) {
    string line;
    getline(input, line);

    {
        istringstream code_input(line);
        string dummy;
        code_input >> dummy >> r.code;
    }

    size_t content_length = 0;

    r.headers.clear();
    while (getline(input, line) && !line.empty()) {
        if (auto [name, value] = SplitBy(line, "": ""); name == ""Content-Length"") {
            istringstream length_input(value);
            length_input >> content_length;
        } else {
            r.headers.push_back({ std::move(name), std::move(value) });
        }
    }

    r.content.resize(content_length);
    input.read(r.content.data(), r.content.size());
    return input;
}

HttpResponse CommentServer::ServeRequest(const HttpRequest& req) {
    HttpResponse result = HttpResponse(HttpCode::NotFound);
    {
        if (req.method == ""POST"") {
            if (req.path == ""/add_user"") {
                comments_.emplace_back();
                auto response = std::to_string(comments_.size() - 1);
                result.SetCode(HttpCode::Ok).AddHeader(""Content-Length"", std::to_string(response.size())).SetContent(response);

                // os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: "" << response.size() << ""\n"" << ""\n""
                //     << response;
            } else if (req.path == ""/add_comment"") {
                auto [user_id, comment] = ParseIdAndContent(req.body);

                if (!last_comment || last_comment->user_id != user_id) {
                    last_comment = LastCommentInfo{ user_id, 1 };
                } else if (++last_comment->consecutive_count > 3) {
                    banned_users.insert(user_id);
                }

                if (banned_users.count(user_id) == 0) {
                    comments_[user_id].push_back(string(comment));

                    result.SetCode(HttpCode::Ok);
                    // os << ""HTTP/1.1 200 OK\n\n"";
                } else {
                    result.SetCode(HttpCode::Found).AddHeader(""Location"", ""/captcha"");
                }

            } else if (req.path == ""/checkcaptcha"") {
                if (auto [id, response] = ParseIdAndContent(req.body); response == ""42"") {
                    banned_users.erase(id);
                    if (last_comment && last_comment->user_id == id) {
                        last_comment.reset();
                    }
                    result.SetCode(HttpCode::Ok);
                    // os << ""HTTP/1.1 200 OK\n\n"";
                } else {
                    result.SetCode(HttpCode::Found).AddHeader(""Location"", ""/captcha"");
                    // os << ""HTTP/1.1 302 Found\n"" << ""Location: /captcha\n\n"";
                }
            } else {
                result.SetCode(HttpCode::NotFound);
                // os << ""HTTP/1.1 404 Not found\n\n"";
            }
        } else if (req.method == ""GET"") {
            if (req.path == ""/user_comments"") {
                auto user_id = FromString<size_t>(req.get_params.at(""user_id""));
                string response;
                for (const string& c : comments_[user_id]) {
                    response += c + '\n';
                }
                result.SetCode(HttpCode::Ok).AddHeader(""Content-Length"", std::to_string(response.size())).SetContent(response);
                // os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: "" << response.size() << ""\n"" << ""\n"" << response;
            } else if (req.path == ""/captcha"") {
                result.SetCode(HttpCode::Ok).AddHeader(""Content-Length"", ""82"").SetContent(""What's the answer for The Ultimate Question of Life, the Universe, and Everything?"");
                // os << ""HTTP/1.1 200 OK\n"" << ""Content-Length: 82\n"" << ""\n""
                    // << ""What's the answer for The Ultimate Question of Life, the Universe, and Everything?"";
            } else {
                result.SetCode(HttpCode::NotFound);
                // os << ""HTTP/1.1 404 Not found\n\n"";
            }
        }
    }
    return result;
}

HttpResponse::HttpResponse(HttpCode code) {
    this->SetCode(code);
}

HttpResponse& HttpResponse::SetCode(HttpCode a_code) {
    this->resp.code = a_code;
    return *this;
}

string HttpResponse::CodeToString(HttpCode a_code) const {
    switch (a_code) {
        case HttpCode::Ok:
            return ""OK"";
            break;
        case HttpCode::Found:
            return ""Found"";
            break;
        case HttpCode::NotFound:
            return ""Not found"";
            break;

        default:
            return ""Not found"";
            break;
    }
}

HttpResponse& HttpResponse::AddHeader(string name, string value) {
    this->resp.headers.push_back(HttpHeader{ move(name), move(value) });
    return *this;
}

HttpResponse& HttpResponse::SetContent(string a_content) {
    this->resp.content = move(a_content);
    return *this;
}

ostream& operator<<(ostream& output, const HttpResponse& http_resp) {
    output << ""HTTP/1.1 "" << (int)http_resp.resp.code << "" "" << http_resp.CodeToString(http_resp.resp.code) << '\n';
    for (const auto [name, value] : http_resp.resp.headers) {
        output << name << "": "" << value << ""\n"";
    }
    output << ""\n"";
    output << http_resp.resp.content;
    return output;
}
"
wisY1TTg,todoapp.py,DrAungWinHtut,Python,Saturday 17th of February 2024 06:14:25 AM CDT,"import os

todo = [] 

file_read = open('todo.save','r')
lines = file_read.readlines()
#print(lines)
for line in lines:
    line = line.strip()
    todo.append(line)
file_read.close()

#input()

while True:
    os.system('cls')
    print('1-Add a task')
    print('2-Delete a task')
    print('3-List all tasks')
    print('4-Save data')
    print('5-EXIT')
    ans = input('Your choice?:  ')
    if ans == '1':
        print('Adding a task')
        print('==============')
        task = input('Enter a task: ')
        todo.append(task)

    elif ans == '2':
        print('TaskList')
        print('=========')
        count = 0
        for t in todo:
            count = count + 1
            print(f'{count} - {t}')
        d = input('Which one to delete: ')
        d = int(d)
        del todo[d-1]

        print('Updated task list')
        print('==============')
        count = 0
        for t in todo:
            count = count + 1
            print(f'{count} - {t}')
    
    elif ans == '3':
        print('TaskList')
        print('=========')
        count = 0
        for t in todo:
            count = count + 1
            print(f'{count} - {t}')

    elif ans == '4':
        print('Saving Data')
        save_file = open('todo.save','w')
        for item in todo:
            save_file.write(item+'\n')
        save_file.close()
        
    
    elif ans == '5':
        print('Bye')
        print('Saving Data')
        save_file = open('todo.save','w')
        for item in todo:
            save_file.write(item+'\n')
        save_file.close()
        exit(0)
    
    input('Press ENTER to continue...')
"
Xq4AXPzA,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 06:07:08 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;

int main() {
    string product;
    cin >> product;
    double cena;
    cin >> cena;
    
    int n;
    cin >> n;
    double danok = 0.18;
    for(int i = 0; i < n; i++) {
        string s;
        cin >> s;
        if(s == product) {
            danok = 0.05;
        }
    }
    cena += (cena * danok);
    printf(""%.5lf"", cena);
    return 0;
                
}
// NNNNNNNNaN
"
ERTZbVdm,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 06:01:48 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;

int main() {
    string s;
    cin >> s;
    int klikovi = 0;
    for(int i = 0; i < s.size(); i++) {
        if(s[i] == 'Y') {
            for(int j = i; j < s.size(); j += i + 1) {
                if(s[j] == 'Y') {
                    s[j] = 'N';
                }
                else {
                    s[j] = 'Y';
                }
            }
            klikovi++;
        }
    }
    cout << klikovi << endl;
    return 0;
                
}
// NNNNNNNNaN
"
d5CeiWKB,data843,TestGuy1,JSON,Saturday 17th of February 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '622c9c56a493aed490d16f2060f495fca658b950a6695c5bc48f9186fc35f37a6231ae5e3f07356f629a38e6a6b859f93b9c18d9fed90bfe808988d5fc6d0f24985e640ef11b33f3792d36e69f5fcc2593960a773a7a9fa22bd72dda78125788e53f1cbab695da019aaf0afe77b4a70db3f141aecc6a659625f6188b03355d83',
  otherdata: [
    '5be18c6d253eea78e51d56360ced8214',
    '3bd7d06a829fee9c8babbdf2394ce036',
    '8c15e74d0627e483cb537155a7fb141c',
    '50efeff34a89cccf13f89906a3ddf7d7',
    '4701fa0d7b333986069690a04c63648a',
    '757544db5e2159e9df4137a7c3a7d113',
    'fb4aafbe11c812211004d7b7f006bc3e',
    '5031c606118956296d091b8b07a60f87'
  ]
}"
D5jfFeva,Untitled,madhu_fresh,C++,Saturday 17th of February 2024 05:55:06 AM CDT,"#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <math.h>
#include <algorithm>

using namespace std;

template<typename Container, typename Term>
vector<double> ComputeTfIdfs(const Container& documents, Term term) {

    vector<double> res;
    map<int, double> word_to_doc_tf;
    map<int, double> document_to_relevance;

    auto num_docs = documents.size();
    int enters = 0;


    for (int i = 0; i < static_cast<int>(documents.size()); i++) {

        double added = 1.0 / documents[i].size();

        //if (documents[i].count(term) != 0 ) {
        if (count(documents[i].begin(), documents[i].end(), term) > 0) {
            
            ++enters;

            for (auto& word : documents[i]) {

                if (word == term) {
                    word_to_doc_tf[i] += added;
                }
            }
        }
        else {
            word_to_doc_tf[i] = 0;
        }           
    }

    double idf = log(static_cast<double>(num_docs) / enters);

    for (auto& [id, tf] : word_to_doc_tf) {
        res.push_back(tf * idf);
    }    

    return res;
}



int main() {
    const vector<vector<string>> documents = {
        {""белый""s, ""кот""s, ""и""s, ""модный""s, ""ошейник""s},
        {""пушистый""s, ""кот""s, ""пушистый""s, ""хвост""s},
        {""ухоженный""s, ""пёс""s, ""выразительные""s, ""глаза""s},
    };
    const auto& tf_idfs = ComputeTfIdfs(documents, ""кот""s);
    for (const double tf_idf : tf_idfs) {
        cout << tf_idf << "" ""s;
    }
    // cout << endl;
    return 0;
}"
Pi6HbewV,Untitled,Nenogzar,Python,Saturday 17th of February 2024 05:49:16 AM CDT,"def filter_numbers_above_average(numbers, average_sum):
    above_average_list = []

    count = 0
    for number in numbers:
        if number > average_sum:
            above_average_list.append(number)
            count += 1

        if count == 5:
            break

    return above_average_list

def main():
    number_sequence = sorted(map(int, input().split()), reverse=True)
    average_number = sum(number_sequence) / len(number_sequence)

    top_five_greatest_numbers = filter_numbers_above_average(number_sequence, average_number)

    if not top_five_greatest_numbers:
        print(""No"")
    else:
        print(*top_five_greatest_numbers, sep="" "")

if __name__ == ""__main__"":
    main()"
gaCqNawU,06. Number in Range,IvetValcheva,C#,Saturday 17th of February 2024 05:11:06 AM CDT,"
int num = int.Parse(Console.ReadLine());

if (num >= -100 && num <= 100 && num != 0)
{
    Console.WriteLine(""Yes"");
}
else
{
    Console.WriteLine(""No"");
}"
T2T2FVVc,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 04:49:10 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int niza[7];
    for(int i = 0; i < 7; i++) {
        cin >> niza[i];
    }
    int mat[5][6];
    for(int i = 0; i < 5; i++) {
        for(int j = 0; j < 6; j++) {
            cin >> mat[i][j];
        }
    }
    int brojac = 0;
    for(int i = 0; i < 7; i++) {
        int c = niza[i];
        int dali_postoi_brojot = 0;
        for(int x = 0; x < 5; x++) {
            for(int y = 0; y < 6; y++) {
                if(mat[x][y] == c) {
                    dali_postoi_brojot = 1;
                    mat[x][y] = -1;
                    break;
                }
            }
            if(dali_postoi_brojot == 1) {
                break;
            }
        }
        if(dali_postoi_brojot == 1) {
            brojac++;
        }
    }
    if(brojac == 7) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    return 0;
                
}
"
KgcwKpsu,Untitled,Josif_tepe,C++,Saturday 17th of February 2024 04:28:48 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int b, j;
    cin >> b >> j;
    
    int brojac = 0;
    int koren = sqrt(b);
    for(int i = 1; i <= koren; i += 1) {
        if(b % i == 0) {
            if(j % i == 0) {
                brojac += 1;
            }
          
            if(j % (b / i) == 0 and i != b / i) {
                brojac += 1;
            }
        }
    }
    cout << brojac << endl;
    
    return 0;
                
}
"
ZC385Xsp,Untitled,35657,C++,Saturday 17th of February 2024 04:24:48 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

class String {

public:

	String() {
		size_ = 0;
		capacity_ = 15;
		str_ = new char[capacity_];
	}

	String(const int string_capacity) {
		size_ = 0;
		capacity_ = string_capacity;
		str_ = new char[capacity_];
	}

	String(const char* new_string) {
		capacity_ = strlen(new_string) + 1;
		str_ = new char[capacity_];
		strcpy(str_, new_string);
		size_ = capacity_ - 1;
	}

	void set_string(const char* new_string) {
		int new_space = strlen(new_string) + 1;
		if (capacity_ < new_space) {
			delete[] str_;
			capacity_ = new_space;
			str_ = new char[capacity_];
		}
		strcpy(str_, new_string);
		size_ = capacity_ - 1;
	}

	const char* get_string() {
		return str_;
	}

	void set_char(const int index, const char ch) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		str_[index] = ch;
	}

	char get_char(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			// здесь функция возвращает char поэтому выйти по return не получится, использовать abort() можно, но тоже не лучший выход, пока пусть будет так, потом обработаем эту ситуацию с помощью исключений
		}
		return str_[index];
	}

	int size() {
		return size_;
	}

	int capacity() {
		return capacity_;
	}

	~String() {
		delete[] str_;
	}


private:
	char* str_;
	int size_;
	int capacity_;
};


int main() {
	setlocale(LC_ALL, ""ru"");

	String str1;

	String str2(30);

	String str3(""Привет"");

	cout << str3.get_string() << endl;

	str3.set_string(""Новая строка"");

	cout << str3.get_string() << endl;

	str1.set_string(""Еще одна новая строка"");

	cout << str1.get_string() << endl;
}
"
a1f1zwrV,Untitled,sissou123,CSS,Saturday 17th of February 2024 04:17:47 AM CDT,"Advanced CSS and Sass: Flexbox, Grid, Animations and More!
The most advanced and modern CSS course on the internet: master flexbox, CSS Grid, responsive design, and so much more. 
What you'll learn
Tons of modern CSS techniques to create stunning designs and effects
Advanced CSS animations with @keyframes, animation and transition
How CSS works behind the scenes: the cascade, specificity, inheritance, etc. 
for more:https://cuty.io/8kxR3EinO
"
LyqrgtLf,Untitled,sissou123,HTML,Saturday 17th of February 2024 04:12:17 AM CDT,"Build Responsive Real-World Websites with HTML and CSS
Learn modern HTML5, CSS3 and web design by building a stunning website for your portfolio! Includes flexbox and CSS Grid 
What you'll learn
Become a modern and confident HTML and CSS developer, no prior knowledge needed!
Design and build a stunning real-world project for your portfolio from scratch 
for more:https://cuty.io/2e2J87F7
"
e5hesbR2,test,bluebyt,INI file,Saturday 17th of February 2024 04:12:15 AM CDT,"WAYLAND_DEBUG=1 nautilus 2>&1 | kak
https://www.cyberciti.biz/faq/linux-xen-vmware-kvm-intel-vt-amd-v-support/"
UX95PzW9,Untitled,35657,C++,Saturday 17th of February 2024 04:05:02 AM CDT,"#include <iostream>


using namespace std;

class Vector {

public:
	Vector() {
		arr_ = new int[4];
		size_ = 0;
		capacity_ = 4;
	}

	Vector(const int capacity) {
		arr_ = new int[capacity];
		size_ = 0;
		capacity_ = capacity;
	}

	void push_back(const int value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
	}

	void insert(const int index, const int value) {
		if (index < 0 || index > size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		check_capacity();
		for (int i = size_; i > index; i--) {
			arr_[i] = arr_[i - 1];
		}
		arr_[index] = value;
		size_++;
	}

	void erase(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		for (int i = index; i < size_ - 1; i++) {
			arr_[i] = arr_[i + 1];
		}
		size_--;
	}

	void set_value(const int index, const int value) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		arr_[index] = value;
	}

	int get_value(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			// здесь функция возвращает int поэтому выйти по return не получится, использовать abort() можно, но тоже не лучший выход, пока пусть будет так, потом обработаем эту ситуацию с помощью исключений
		}
		return arr_[index]; 
	}

	int size() {
		return size_;
	}

	int capacity() {
		return capacity_;
	}

	void print() {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int* arr_; // хранилище
	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
};

int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;

	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);
	vec1.push_back(22);

	vec1.print();

	vec1.pop_back();
	vec1.print();

	vec1.insert(2, 44);
	vec1.print();

	vec1.erase(2);
	vec1.print();

	vec1.set_value(0, 33);
	cout << vec1.get_value(3) << endl;


	vec1.print();

	cout << vec1.size() << endl;
	cout << vec1.capacity() << endl;
}
"
STfENCuk,Enemy,Abdula_2314124,C#,Saturday 17th of February 2024 03:34:19 AM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace Directory
{
    class Enemy
    {
        public int health = 100;
        public int damage = 50;
        //public void Move()
        //{
        //    Console.WriteLine(""Пошук гравця"");
        //}

        public void TakeDamage(int damage)
        {
            health -= damage;
        }
        public void Death()
        {
            Console.WriteLine(""Ворог Помер"");
        }
    }
}
"
FmPJUrtt,Player,Abdula_2314124,C#,Saturday 17th of February 2024 03:33:51 AM CDT,"using System;

namespace Directory
{
    class Player
    {
        public int health = 100;
        public int armor = 50;
        public int damage = 40;
        //public string[] guns = { ""Gun1"" };

        //public void Move()
        //{
        //    Console.WriteLine(""Я рухаюсь"");
        //}
        //public void Rotate()
        //{
        //    Console.WriteLine(""Повертаю"");
        //}

        public void TakeDamage(int damage)
        {
            health -= damage;
        }
        public void Death()
        {
            Console.WriteLine(""Гравець Вмер"");
        }
    }
}
"
uZBjTuPS,Program,Abdula_2314124,C#,Saturday 17th of February 2024 03:33:10 AM CDT,"using System;
using System.IO;

namespace Directory
{
    class Program
    {
        static void Main(string[] args)
        {
            // public публічна, доступна
            // private приватна, не доступна
            // Random rnd = new Random();
            //Player jumper = new Player();
            //Player melee = new Player();

            //jumper.health = 500;
            //jumper.armor = 100;
            //jumper.Move();
            //jumper.Rotate();

            //melee.health = 20;
            //melee.armor = 1000;
            //melee.Move();

            //Enemy meleeEnemy = new Enemy();

            //Enemy[] enemies = new Enemy[5];

            //for (int i = 0; i < enemies.Length; i++)
            //{
            //    enemies[i] = new Enemy();
            //    enemies[i].Move();
            //}

            //meleeEnemy.health = 15;
            //meleeEnemy.Move();
            //meleeEnemy.Death();
            //melee.guns[0] = ""Ak-47"";

            Random rnd = new Random();
            Player player = new Player();
            Enemy enemy = new Enemy();
            while (true)
            {
                enemy.TakeDamage(player.damage);
                player.TakeDamage(enemy.damage);
                double chance = rnd.NextDouble();
                if(chance >= 0.9)
                {
                    Console.WriteLine(""Create a new Player"");
                    Player player2 = new Player();
                    enemy.TakeDamage(player2.damage);
                }
                if(enemy.health <= 0)
                {
                    enemy.Death();
                    break;
                }
                if(player.health <= 0)
                {
                    player.Death();
                    break;
                }
            }

        }
    }
}
"
tx4bUxVe,Untitled,35657,C++,Saturday 17th of February 2024 03:31:34 AM CDT,"#include <iostream>

using namespace std;

class Class1 {
    int fieldOne;
    int fieldTwo;
public:
    Class1(int param) : fieldOne{ param + 10 }, fieldTwo{ param } {}
    void print() {
        cout << ""fieldOne = "" << fieldOne << '\n' << ""fieldTwo = "" << fieldTwo << '\n';
    }
};

class Class2 {
    int fieldOne;
    int fieldTwo;
public:
    Class2(int param) : fieldTwo{ param }, fieldOne{ fieldTwo + 10 } {}
    void print() {
        cout << ""fieldOne = "" << fieldOne << '\n' << ""fieldTwo = "" << fieldTwo << '\n';
    }
};


int main() {

    cout << ""Class1\n"";
    Class1 t2{ 33 };
    t2.print();

    cout << ""Class2\n"";
    Class2 t1{ 42 };
    t1.print();
}"
