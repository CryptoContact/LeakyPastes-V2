id,title,username,language,date,content
d6e8uLkm,Rayfield Mobile (Test),Peluchecoman,Lua,Monday 14th of August 2023 12:57:04 PM CDT,"--[[

Rayfield Interface Suite
by Sirius

shlex | Designing + Programming
iRay  | Programming

]]



local Release = ""Beta 8""
local NotificationDuration = 6.5
local RayfieldFolder = ""Rayfield""
local ConfigurationFolder = RayfieldFolder..""/Configurations""
local ConfigurationExtension = "".rfld""



local RayfieldLibrary = {
	Flags = {},
	Theme = {
		Default = {
			TextFont = ""Default"", -- Default will use the various font faces used across Rayfield
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(0, 0, 255),
			Topbar = Color3.fromRGB(34, 34, 34),
			Shadow = Color3.fromRGB(20, 20, 20),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(0, 0, 255),
			TabStroke = Color3.fromRGB(0, 128, 0),
			TabBackgroundSelected = Color3.fromRGB(0, 128, 0),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(255, 255, 255),

			ElementBackground = Color3.fromRGB(35, 35, 35),
			ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
			SecondaryElementBackground = Color3.fromRGB(25, 25, 25), -- For labels and paragraphs
			ElementStroke = Color3.fromRGB(50, 50, 50),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

			SliderBackground = Color3.fromRGB(160, 200, 255),
			SliderProgress = Color3.fromRGB(43, 105, 255),
			SliderStroke = Color3.fromRGB(43, 105, 255),

			ToggleBackground = Color3.fromRGB(30, 30, 30),
			ToggleEnabled = Color3.fromRGB(0, 128, 0),
			ToggleDisabled = Color3.fromRGB(255, 0, 0),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),

			InputBackground = Color3.fromRGB(30, 30, 30),
			InputStroke = Color3.fromRGB(65, 65, 65),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		},
		Light = {
			TextFont = ""Gotham"", -- Default will use the various font faces used across Rayfield
			TextColor = Color3.fromRGB(50, 50, 50), -- i need to make all text 240, 240, 240 and base gray on transparency not color to do this

			Background = Color3.fromRGB(255, 255, 255),
			Topbar = Color3.fromRGB(217, 217, 217),
			Shadow = Color3.fromRGB(223, 223, 223),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(220, 220, 220),
			TabStroke = Color3.fromRGB(112, 112, 112),
			TabBackgroundSelected = Color3.fromRGB(0, 142, 208),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

			ElementBackground = Color3.fromRGB(198, 198, 198),
			ElementBackgroundHover = Color3.fromRGB(230, 230, 230),
			SecondaryElementBackground = Color3.fromRGB(136, 136, 136), -- For labels and paragraphs
			ElementStroke = Color3.fromRGB(180, 199, 97),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

			SliderBackground = Color3.fromRGB(31, 159, 71),
			SliderProgress = Color3.fromRGB(31, 159, 71),
			SliderStroke = Color3.fromRGB(42, 216, 94),

			ToggleBackground = Color3.fromRGB(170, 203, 60),
			ToggleEnabled = Color3.fromRGB(32, 214, 29),
			ToggleDisabled = Color3.fromRGB(100, 22, 23),
			ToggleEnabledStroke = Color3.fromRGB(17, 255, 0),
			ToggleDisabledStroke = Color3.fromRGB(65, 8, 8),
			ToggleEnabledOuterStroke = Color3.fromRGB(0, 170, 0),
			ToggleDisabledOuterStroke = Color3.fromRGB(170, 0, 0),

			InputBackground = Color3.fromRGB(31, 159, 71),
			InputStroke = Color3.fromRGB(19, 65, 31),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		}
	}
}



-- Services

local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local HttpService = game:GetService(""HttpService"")
local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")

-- Interface Management
local Rayfield = game:GetObjects(""rbxassetid://10804731440"")[1]

Rayfield.Enabled = false


if gethui then
	Rayfield.Parent = gethui()
elseif syn.protect_gui then 
	syn.protect_gui(Rayfield)
	Rayfield.Parent = CoreGui
elseif CoreGui:FindFirstChild(""RobloxGui"") then
	Rayfield.Parent = CoreGui:FindFirstChild(""RobloxGui"")
else
	Rayfield.Parent = CoreGui
end

if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
			Interface.Enabled = false
			Interface.Name = ""Rayfield-Old""
		end
	end
else
	for _, Interface in ipairs(CoreGui:GetChildren()) do
		if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
			Interface.Enabled = false
			Interface.Name = ""Rayfield-Old""
		end
	end
end

-- Object Variables

local Camera = workspace.CurrentCamera
local Main = Rayfield.Main
local Topbar = Main.Topbar
local Elements = Main.Elements
local LoadingFrame = Main.LoadingFrame
local TabList = Main.TabList

Rayfield.DisplayOrder = 100
LoadingFrame.Version.Text = Release


-- Variables

local request = (syn and syn.request) or (http and http.request) or http_request
local CFileName = nil
local CEnabled = false
local Minimised = false
local Hidden = false
local Debounce = false
local Notifications = Rayfield.Notifications

local SelectedTheme = RayfieldLibrary.Theme.Default

function ChangeTheme(ThemeName)
	SelectedTheme = RayfieldLibrary.Theme[ThemeName]
	for _, obj in ipairs(Rayfield:GetDescendants()) do
		if obj.ClassName == ""TextLabel"" or obj.ClassName == ""TextBox"" or obj.ClassName == ""TextButton"" then
			if SelectedTheme.TextFont ~= ""Default"" then 
				obj.TextColor3 = SelectedTheme.TextColor
				obj.Font = SelectedTheme.TextFont
			end
		end
	end

	Rayfield.Main.BackgroundColor3 = SelectedTheme.Background
	Rayfield.Main.Topbar.BackgroundColor3 = SelectedTheme.Topbar
	Rayfield.Main.Topbar.CornerRepair.BackgroundColor3 = SelectedTheme.Topbar
	Rayfield.Main.Shadow.Image.ImageColor3 = SelectedTheme.Shadow

	Rayfield.Main.Topbar.ChangeSize.ImageColor3 = SelectedTheme.TextColor
	Rayfield.Main.Topbar.Hide.ImageColor3 = SelectedTheme.TextColor
	Rayfield.Main.Topbar.Theme.ImageColor3 = SelectedTheme.TextColor

	for _, TabPage in ipairs(Elements:GetChildren()) do
		for _, Element in ipairs(TabPage:GetChildren()) do
			if Element.ClassName == ""Frame"" and Element.Name ~= ""Placeholder"" and Element.Name ~= ""SectionSpacing"" and Element.Name ~= ""SectionTitle""  then
				Element.BackgroundColor3 = SelectedTheme.ElementBackground
				Element.UIStroke.Color = SelectedTheme.ElementStroke
			end
		end
	end

end

local function AddDraggingFunctionality(DragPoint, Main)
    local UserInputService = game:GetService(""UserInputService"")
    local TouchObject = nil
    local FramePos = Main.Position
    local Delta = Vector2.new()

    DragPoint.TouchStarted:Connect(function(touch)
        TouchObject = touch
        FramePos = Main.Position
        Delta = TouchObject.Position - FramePos.p
    end)

    UserInputService.TouchMoved:Connect(function(touch)
        if touch == TouchObject then
            local newPos = FramePos + UDim2.new(0, Delta.X, 0, Delta.Y) + UDim2.new(0, touch.Position.X, 0, touch.Position.Y) - FramePos.p
            Main.Position = newPos
        end
    end)

    DragPoint.TouchEnded:Connect(function(touch)
        if touch == TouchObject then
            TouchObject = nil
        end
    end)
end

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadConfiguration(Configuration)
	local Data = HttpService:JSONDecode(Configuration)
	for FlagName, FlagValue in next, Data do
		if RayfieldLibrary.Flags[FlagName] then
			spawn(function() 
				if RayfieldLibrary.Flags[FlagName].Type == ""ColorPicker"" then
					RayfieldLibrary.Flags[FlagName]:Set(UnpackColor(FlagValue))
				else
					if RayfieldLibrary.Flags[FlagName].CurrentValue or RayfieldLibrary.Flags[FlagName].CurrentKeybind or RayfieldLibrary.Flags[FlagName].CurrentOption or RayfieldLibrary.Flags[FlagName].Color ~= FlagValue then RayfieldLibrary.Flags[FlagName]:Set(FlagValue) end
				end    
			end)
		else
			RayfieldLibrary:Notify({Title = ""Flag Error"", Content = ""Rayfield was unable to find '""..FlagName.. ""'' in the current script""})
		end
	end
end

local function SaveConfiguration()
	if not CEnabled then return end
	local Data = {}
	for i,v in pairs(RayfieldLibrary.Flags) do
		if v.Type == ""ColorPicker"" then
			Data[i] = PackColor(v.Color)
		else
			Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
		end
	end	
	writefile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension, tostring(HttpService:JSONEncode(Data)))
end

local neon = (function() -- Open sourced neon module
	local module = {}

	do
		local function IsNotNaN(x)
			return x == x
		end
		local continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
		while not continued do
			RunService.RenderStepped:wait()
			continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	local RootParent = Camera
	if getgenv().SecureMode == nil then
		RootParent = Camera
	else
		if not getgenv().SecureMode then
			RootParent = Camera
		else 
			RootParent = nil
		end
	end


	local binds = {}
	local root = Instance.new('Folder', RootParent)
	root.Name = 'neon'


	local GenUid; do
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end

	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2

		function DrawTriangle(v1, v2, v3, p0, p1)
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end

			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para

			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)

			local cf0 = st

			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z

			local ac = CFrame.Angles(0, 0, acos(dot))

			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))

			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)

			if not p0 then
				p0 = Instance.new('Part')
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.Material = 'Glass'
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0

			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1

			return p0, p1
		end

		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end

	function module:BindFrame(frame, properties)
		if RootParent == nil then return end
		if binds[frame] then
			return binds[frame].parts
		end

		local uid = GenUid()
		local parts = {}
		local f = Instance.new('Folder', root)
		f.Name = frame.Name

		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end

		local function UpdateOrientation(fetchProps)
			local zIndex = 1 - 0.05*frame.ZIndex
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				Camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				Camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				Camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				Camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end

		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)

		binds[frame] = {
			uid = uid;
			parts = parts;
		}
		return binds[frame].parts
	end

	function module:Modify(frame, properties)
		local parts = module:GetBoundParts(frame)
		if parts then
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end

	function module:UnbindFrame(frame)
		if RootParent == nil then return end
		local cb = binds[frame]
		if cb then
			RunService:UnbindFromRenderStep(cb.uid)
			for _, v in pairs(cb.parts) do
				v:Destroy()
			end
			binds[frame] = nil
		end
	end

	function module:HasBinding(frame)
		return binds[frame] ~= nil
	end

	function module:GetBoundParts(frame)
		return binds[frame] and binds[frame].parts
	end


	return module

end)()

function RayfieldLibrary:Notify(NotificationSettings)
	spawn(function()
		local ActionCompleted = true
		local Notification = Notifications.Template:Clone()
		Notification.Parent = Notifications
		Notification.Name = NotificationSettings.Title or ""Unknown Title""
		Notification.Visible = true

		local blurlight = nil
		if not getgenv().SecureMode then
			blurlight = Instance.new(""DepthOfFieldEffect"",game:GetService(""Lighting""))
			blurlight.Enabled = true
			blurlight.FarIntensity = 0
			blurlight.FocusDistance = 51.6
			blurlight.InFocusRadius = 50
			blurlight.NearIntensity = 1
			game:GetService(""Debris""):AddItem(script,0)
		end

		Notification.Actions.Template.Visible = false

		if NotificationSettings.Actions then
			for _, Action in pairs(NotificationSettings.Actions) do
				ActionCompleted = false
				local NewAction = Notification.Actions.Template:Clone()
				NewAction.BackgroundColor3 = SelectedTheme.NotificationActionsBackground
				if SelectedTheme ~= RayfieldLibrary.Theme.Default then
					NewAction.TextColor3 = SelectedTheme.TextColor
				end
				NewAction.Name = Action.Name
				NewAction.Visible = true
				NewAction.Parent = Notification.Actions
				NewAction.Text = Action.Name
				NewAction.BackgroundTransparency = 1
				NewAction.TextTransparency = 1
				NewAction.Size = UDim2.new(0, NewAction.TextBounds.X + 27, 0, 36)

				NewAction.MouseButton1Click:Connect(function()
					local Success, Response = pcall(Action.Callback)
					if not Success then
						print(""Rayfield | Action: ""..Action.Name.."" Callback Error "" ..tostring(Response))
					end
					ActionCompleted = true
				end)
			end
		end
		Notification.BackgroundColor3 = SelectedTheme.Background
		Notification.Title.Text = NotificationSettings.Title or ""Unknown""
		Notification.Title.TextTransparency = 1
		Notification.Title.TextColor3 = SelectedTheme.TextColor
		Notification.Description.Text = NotificationSettings.Content or ""Unknown""
		Notification.Description.TextTransparency = 1
		Notification.Description.TextColor3 = SelectedTheme.TextColor
		Notification.Icon.ImageColor3 = SelectedTheme.TextColor
		if NotificationSettings.Image then
			Notification.Icon.Image = ""rbxassetid://""..tostring(NotificationSettings.Image) 
		else
			Notification.Icon.Image = ""rbxassetid://3944680095""
		end

		Notification.Icon.ImageTransparency = 1

		Notification.Parent = Notifications
		Notification.Size = UDim2.new(0, 260, 0, 80)
		Notification.BackgroundTransparency = 1

		TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 91)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.1}):Play()
		Notification:TweenPosition(UDim2.new(0.5,0,0.915,0),'Out','Quint',0.8,true)

		wait(0.3)
		TweenService:Create(Notification.Icon, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
		TweenService:Create(Notification.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
		wait(0.2)



		-- Requires Graphics Level 8-10
		if getgenv().SecureMode == nil then
			TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
		else
			if not getgenv().SecureMode then
				TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
			else 
				TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			end
		end

		if Rayfield.Name == ""Rayfield"" then
			neon:BindFrame(Notification.BlurModule, {
				Transparency = 0.98;
				BrickColor = BrickColor.new(""Institutional white"");
			})
		end

		if not NotificationSettings.Actions then
			wait(NotificationSettings.Duration or NotificationDuration - 0.5)
		else
			wait(0.8)
			TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 132)}):Play()
			wait(0.3)
			for _, Action in ipairs(Notification.Actions:GetChildren()) do
				if Action.ClassName == ""TextButton"" and Action.Name ~= ""Template"" then
					TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.2}):Play()
					TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
					wait(0.05)
				end
			end
		end

		repeat wait(0.001) until ActionCompleted

		for _, Action in ipairs(Notification.Actions:GetChildren()) do
			if Action.ClassName == ""TextButton"" and Action.Name ~= ""Template"" then
				TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			end
		end

		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.47, 0,0.234, 0)}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0.528, 0,0.637, 0)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 280, 0, 83)}):Play()
		TweenService:Create(Notification.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()

		wait(0.3)
		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.4)
		TweenService:Create(Notification, TweenInfo.new(0.9, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 260, 0, 0)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		wait(0.2)
		if not getgenv().SecureMode then
			neon:UnbindFrame(Notification.BlurModule)
			blurlight:Destroy()
		end
		wait(0.9)
		Notification:Destroy()
	end)
end

function Hide()
	Debounce = true
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 400)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 45)}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		end
	end
	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		end
	end
	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end
	wait(0.5)
	Main.Visible = false
	Debounce = false
end

function Unhide()
	Debounce = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Visible = true
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	if Minimised then
		spawn(Maximise)
	end
	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end
	end
	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			end

		end
	end
	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end
	wait(0.5)
	Minimised = false
	Debounce = false
end

function Maximise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..10137941941


	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TabList.Visible = true
	wait(0.2)

	Elements.Visible = true

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end


	wait(0.1)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			end

		end
	end


	wait(0.5)
	Debounce = false
end

function Minimise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..11036884234

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()

	wait(0.3)

	Elements.Visible = false
	TabList.Visible = false

	wait(0.2)
	Debounce = false
end

function RayfieldLibrary:CreateWindow(Settings)
	local Passthrough = false
	Topbar.Title.Text = Settings.Name
	Main.Size = UDim2.new(0, 450, 0, 260)
	Main.Visible = true
	Main.BackgroundTransparency = 1
	LoadingFrame.Title.TextTransparency = 1
	LoadingFrame.Subtitle.TextTransparency = 1
	Main.Shadow.Image.ImageTransparency = 1
	LoadingFrame.Version.TextTransparency = 1
	LoadingFrame.Title.Text = Settings.LoadingTitle or ""Rayfield Interface Suite""
	LoadingFrame.Subtitle.Text = Settings.LoadingSubtitle or ""by Sirius""
	if Settings.LoadingTitle ~= ""Rayfield Interface Suite"" then
		LoadingFrame.Version.Text = ""ElbolisHub UI""
	end
	Topbar.Visible = false
	Elements.Visible = false
	LoadingFrame.Visible = true


	pcall(function()
		if not Settings.ConfigurationSaving.FileName then
			Settings.ConfigurationSaving.FileName = tostring(game.PlaceId)
		end
		if not isfolder(RayfieldFolder..""/""..""Configuration Folders"") then

		end
		if Settings.ConfigurationSaving.Enabled == nil then
			Settings.ConfigurationSaving.Enabled = false
		end
		CFileName = Settings.ConfigurationSaving.FileName
		ConfigurationFolder = Settings.ConfigurationSaving.FolderName or ConfigurationFolder
		CEnabled = Settings.ConfigurationSaving.Enabled

		if Settings.ConfigurationSaving.Enabled then
			if not isfolder(ConfigurationFolder) then
				makefolder(ConfigurationFolder)
			end	
		end
	end)

	AddDraggingFunctionality(Topbar,Main)

	for _, TabButton in ipairs(TabList:GetChildren()) do
		if TabButton.ClassName == ""Frame"" and TabButton.Name ~= ""Placeholder"" then
			TabButton.BackgroundTransparency = 1
			TabButton.Title.TextTransparency = 1
			TabButton.Shadow.ImageTransparency = 1
			TabButton.Image.ImageTransparency = 1
			TabButton.UIStroke.Transparency = 1
		end
	end

	if Settings.Discord then
		if not isfolder(RayfieldFolder..""/Discord Invites"") then
			makefolder(RayfieldFolder..""/Discord Invites"")
		end
		if not isfile(RayfieldFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension) then
			if request then
				request({
					Url = 'http://127.0.0.1:6463/rpc?v=1',
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json',
						Origin = 'https://discord.com'
					},
					Body = HttpService:JSONEncode({
						cmd = 'INVITE_BROWSER',
						nonce = HttpService:GenerateGUID(false),
						args = {code = Settings.Discord.Invite}
					})
				})
			end

			if Settings.Discord.RememberJoins then -- We do logic this way so if the developer changes this setting, the user still won't be prompted, only new users
				writefile(RayfieldFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension,""Rayfield RememberJoins is true for this invite, this invite will not ask you to join again"")
			end
		else

		end
	end

	if Settings.KeySystem then
		if not Settings.KeySettings then
			Passthrough = true
			return
		end

		if not isfolder(RayfieldFolder..""/Key System"") then
			makefolder(RayfieldFolder..""/Key System"")
		end

		if typeof(Settings.KeySettings.Key) == ""string"" then Settings.KeySettings.Key = {Settings.KeySettings.Key} end

		if Settings.KeySettings.GrabKeyFromSite then
			for i, Key in ipairs(Settings.KeySettings.Key) do
				local Success, Response = pcall(function()
					Settings.KeySettings.Key[i] = tostring(game:HttpGet(Key):gsub(""[\n\r]"", "" ""))
					Settings.KeySettings.Key[i] = string.gsub(Settings.KeySettings.Key[i], "" "", """")
				end)
				if not Success then
					print(""Rayfield | ""..Key.."" Error "" ..tostring(Response))
				end
			end
		end

		if not Settings.KeySettings.FileName then
			Settings.KeySettings.FileName = ""No file name specified""
		end

		if isfile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension) then
			for _, MKey in ipairs(Settings.KeySettings.Key) do
				if string.find(readfile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension), MKey) then
					Passthrough = true
				end
			end
		end

		if not Passthrough then
			local AttemptsRemaining = math.random(2,6)
			Rayfield.Enabled = false
			local KeyUI = game:GetObjects(""rbxassetid://11380036235"")[1]

			if gethui then
				KeyUI.Parent = gethui()
			elseif syn.protect_gui then
				syn.protect_gui(Rayfield)
				KeyUI.Parent = CoreGui
			else
				KeyUI.Parent = CoreGui
			end

			if gethui then
				for _, Interface in ipairs(gethui():GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			else
				for _, Interface in ipairs(CoreGui:GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			end

			local KeyMain = KeyUI.Main
			KeyMain.Title.Text = Settings.KeySettings.Title or Settings.Name
			KeyMain.Subtitle.Text = Settings.KeySettings.Subtitle or ""Key System""
			KeyMain.NoteMessage.Text = Settings.KeySettings.Note or ""No instructions""

			KeyMain.Size = UDim2.new(0, 467, 0, 175)
			KeyMain.BackgroundTransparency = 1
			KeyMain.Shadow.Image.ImageTransparency = 1
			KeyMain.Title.TextTransparency = 1
			KeyMain.Subtitle.TextTransparency = 1
			KeyMain.KeyNote.TextTransparency = 1
			KeyMain.Input.BackgroundTransparency = 1
			KeyMain.Input.UIStroke.Transparency = 1
			KeyMain.Input.InputBox.TextTransparency = 1
			KeyMain.NoteTitle.TextTransparency = 1
			KeyMain.NoteMessage.TextTransparency = 1
			KeyMain.Hide.ImageTransparency = 1

			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
			TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.5}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.15)
			TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 0.3}):Play()


			KeyUI.Main.Input.InputBox.FocusLost:Connect(function()
				if #KeyUI.Main.Input.InputBox.Text == 0 then return end
				local KeyFound = false
				local FoundKey = ''
				for _, MKey in ipairs(Settings.KeySettings.Key) do
					if string.find(KeyMain.Input.InputBox.Text, MKey) then
						KeyFound = true
						FoundKey = MKey
					end
				end
				if KeyFound then 
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					wait(0.51)
					Passthrough = true
					if Settings.KeySettings.SaveKey then
						if writefile then
							writefile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension, FoundKey)
						end
						RayfieldLibrary:Notify({Title = ""Key System"", Content = ""The key for this script has been saved successfully""})
					end
				else
					if AttemptsRemaining == 0 then
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						wait(0.45)
						game.Players.LocalPlayer:Kick(""No Attempts Remaining"")
						game:Shutdown()
					end
					KeyMain.Input.InputBox.Text = """"
					AttemptsRemaining = AttemptsRemaining - 1
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.495,0,0.5,0)}):Play()
					wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.505,0,0.5,0)}):Play()
					wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
				end
			end)

			KeyMain.Hide.MouseButton1Click:Connect(function()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
				TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				wait(0.51)
				RayfieldLibrary:Destroy()
				KeyUI:Destroy()
			end)
		else
			Passthrough = true
		end
	end
	if Settings.KeySystem then
		repeat wait() until Passthrough
	end

	Notifications.Template.Visible = false
	Notifications.Visible = true
	Rayfield.Enabled = true
	wait(0.5)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.55}):Play()
	wait(0.1)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.05)
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.05)
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

	Elements.Template.LayoutOrder = 100000
	Elements.Template.Visible = false

	Elements.UIPageLayout.FillDirection = Enum.FillDirection.Horizontal
	TabList.Template.Visible = false

	-- Tab
	local FirstTab = false
	local Window = {}
	function Window:CreateTab(Name,Image)
		local SDone = false
		local TabButton = TabList.Template:Clone()
		TabButton.Name = Name
		TabButton.Title.Text = Name
		TabButton.Parent = TabList
		TabButton.Title.TextWrapped = false
		TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 30, 0, 30)

		if Image then
			TabButton.Title.AnchorPoint = Vector2.new(0, 0.5)
			TabButton.Title.Position = UDim2.new(0, 37, 0.5, 0)
			TabButton.Image.Image = ""rbxassetid://""..Image
			TabButton.Image.Visible = true
			TabButton.Title.TextXAlignment = Enum.TextXAlignment.Left
			TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 46, 0, 30)
		end

		TabButton.BackgroundTransparency = 1
		TabButton.Title.TextTransparency = 1
		TabButton.Shadow.ImageTransparency = 1
		TabButton.Image.ImageTransparency = 1
		TabButton.UIStroke.Transparency = 1

		TabButton.Visible = true

		-- Create Elements Page
		local TabPage = Elements.Template:Clone()
		TabPage.Name = Name
		TabPage.Visible = true

		TabPage.LayoutOrder = #Elements:GetChildren()

		for _, TemplateElement in ipairs(TabPage:GetChildren()) do
			if TemplateElement.ClassName == ""Frame"" and TemplateElement.Name ~= ""Placeholder"" then
				TemplateElement:Destroy()
			end
		end

		TabPage.Parent = Elements
		if not FirstTab then
			Elements.UIPageLayout.Animated = false
			Elements.UIPageLayout:JumpTo(TabPage)
			Elements.UIPageLayout.Animated = true
		end

		if SelectedTheme ~= RayfieldLibrary.Theme.Default then
			TabButton.Shadow.Visible = false
		end
		TabButton.UIStroke.Color = SelectedTheme.TabStroke
		-- Animate
		wait(0.1)
		if FirstTab then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()

			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
		else
			FirstTab = Name
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		end


		TabButton.Interact.MouseButton1Click:Connect(function()
			if Minimised then return end
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackgroundSelected}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()

			for _, OtherTabButton in ipairs(TabList:GetChildren()) do
				if OtherTabButton.Name ~= ""Template"" and OtherTabButton.ClassName == ""Frame"" and OtherTabButton ~= TabButton and OtherTabButton.Name ~= ""Placeholder"" then
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackground}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
			end
			if Elements.UIPageLayout.CurrentPage ~= TabPage then
				TweenService:Create(Elements, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 460,0, 330)}):Play()
				Elements.UIPageLayout:JumpTo(TabPage)
				wait(0.2)
				TweenService:Create(Elements, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 475,0, 366)}):Play()
			end

		end)

		local Tab = {}

		-- Button
		function Tab:CreateButton(ButtonSettings)
			local ButtonValue = {}

			local Button = Elements.Template.Button:Clone()
			Button.Name = ButtonSettings.Name
			Button.Title.Text = ButtonSettings.Name
			Button.Visible = true
			Button.Parent = TabPage

			Button.BackgroundTransparency = 1
			Button.UIStroke.Transparency = 1
			Button.Title.TextTransparency = 1

			TweenService:Create(Button, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Button.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Button.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	


			Button.Interact.MouseButton1Click:Connect(function()
				local Success, Response = pcall(ButtonSettings.Callback)
				if not Success then
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Button.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ButtonSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Button.Title.Text = ButtonSettings.Name
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				else
					SaveConfiguration()
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					wait(0.2)
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
			end)

			Button.MouseEnter:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.7}):Play()
			end)

			Button.MouseLeave:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
			end)

			function ButtonValue:Set(NewButton)
				Button.Title.Text = NewButton
				Button.Name = NewButton
			end

			return ButtonValue
		end

		-- ColorPicker
		function Tab:CreateColorPicker(ColorPickerSettings) -- by Throit
			ColorPickerSettings.Type = ""ColorPicker""
			local ColorPicker = Elements.Template.ColorPicker:Clone()
			local Background = ColorPicker.CPBackground
			local Display = Background.Display
			local Main = Background.MainCP
			local Slider = ColorPicker.ColorSlider
			ColorPicker.ClipsDescendants = true
			ColorPicker.Name = ColorPickerSettings.Name
			ColorPicker.Title.Text = ColorPickerSettings.Name
			ColorPicker.Visible = true
			ColorPicker.Parent = TabPage
			ColorPicker.Size = UDim2.new(1, -10, 0.028, 35)
			Background.Size = UDim2.new(0, 39, 0, 22)
			Display.BackgroundTransparency = 0
			Main.MainPoint.ImageTransparency = 1
			ColorPicker.Interact.Size = UDim2.new(1, 0, 1, 0)
			ColorPicker.Interact.Position = UDim2.new(0.5, 0, 0.5, 0)
			ColorPicker.RGB.Position = UDim2.new(0, 17, 0, 70)
			ColorPicker.HexInput.Position = UDim2.new(0, 17, 0, 90)
			Main.ImageTransparency = 1
			Background.BackgroundTransparency = 1



			local opened = false 
			local mouse = game.Players.LocalPlayer:GetMouse()
			Main.Image = ""http://www.roblox.com/asset/?id=11415645739""
			local mainDragging = false 
			local sliderDragging = false 
			ColorPicker.Interact.MouseButton1Down:Connect(function()
				if not opened then
					opened = true 
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.224, 40)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 173, 0, 86)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.289, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 40)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 73)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0.574, 0, 1, 0)}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0.1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				else
					opened = false
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.028, 35)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 39, 0, 22)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 1, 0)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 70)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 90)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				end
			end)

			game:GetService(""UserInputService"").InputEnded:Connect(function(input, gameProcessed) if input.UserInputType == Enum.UserInputType.MouseButton1 then 
					mainDragging = false
					sliderDragging = false
				end end)
			Main.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Main.MainPoint.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Slider.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			Slider.SliderPoint.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			local h,s,v = ColorPickerSettings.Color:ToHSV()
			local color = Color3.fromHSV(h,s,v) 
			local hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
			ColorPicker.HexInput.InputBox.Text = hex
			local function setDisplay()
				--Main
				Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
				Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
				Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
				Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
				--Slider 
				local x = h * Slider.AbsoluteSize.X
				Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
				Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
				local color = Color3.fromHSV(h,s,v) 
				local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
				ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
				ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
				hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
				ColorPicker.HexInput.InputBox.Text = hex
			end
			setDisplay()
			ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
				if not pcall(function()
						local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, ""^#?(%w%w)(%w%w)(%w%w)$"")
						local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
						h,s,v = rgbColor:ToHSV()
						hex = ColorPicker.HexInput.InputBox.Text
						setDisplay()
						ColorPickerSettings.Color = rgbColor
					end) 
				then 
					ColorPicker.HexInput.InputBox.Text = hex 
				end
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end)
			--RGB
			local function rgbBoxes(box,toChange)
				local value = tonumber(box.Text) 
				local color = Color3.fromHSV(h,s,v) 
				local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				local save 
				if toChange == ""R"" then save = oldR;oldR = value elseif toChange == ""G"" then save = oldG;oldG = value else save = oldB;oldB = value end
				if value then 
					value = math.clamp(value,0,255)
					h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

					setDisplay()
				else 
					box.Text = tostring(save)
				end
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end
			ColorPicker.RGB.RInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.RInput.InputBox,""R"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.GInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.GInput.InputBox,""G"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.BInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.BInput.InputBox,""B"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)

			game:GetService(""RunService"").RenderStepped:connect(function()
				if mainDragging then 
					local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
					local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
					Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
					s = localX / Main.AbsoluteSize.X
					v = 1 - (localY / Main.AbsoluteSize.Y)
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
				if sliderDragging then 
					local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
					h = localX / Slider.AbsoluteSize.X
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
					Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
			end)

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ColorPickerSettings.Flag then
					RayfieldLibrary.Flags[ColorPickerSettings.Flag] = ColorPickerSettings
				end
			end

			function ColorPickerSettings:Set(RGBColor)
				ColorPickerSettings.Color = RGBColor
				h,s,v = ColorPickerSettings.Color:ToHSV()
				color = Color3.fromHSV(h,s,v)
				setDisplay()
			end

			return ColorPickerSettings
		end

		-- Section
		function Tab:CreateSection(SectionName)

			local SectionValue = {}

			if SDone then
				local SectionSpace = Elements.Template.SectionSpacing:Clone()
				SectionSpace.Visible = true
				SectionSpace.Parent = TabPage
			end

			local Section = Elements.Template.SectionTitle:Clone()
			Section.Title.Text = SectionName
			Section.Visible = true
			Section.Parent = TabPage

			Section.Title.TextTransparency = 1
			TweenService:Create(Section.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

			function SectionValue:Set(NewSection)
				Section.Title.Text = NewSection
			end

			SDone = true

			return SectionValue
		end

		-- Label
		function Tab:CreateLabel(LabelText)
			local LabelValue = {}

			local Label = Elements.Template.Label:Clone()
			Label.Title.Text = LabelText
			Label.Visible = true
			Label.Parent = TabPage

			Label.BackgroundTransparency = 1
			Label.UIStroke.Transparency = 1
			Label.Title.TextTransparency = 1

			Label.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Label.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Label, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Label.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Label.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			function LabelValue:Set(NewLabel)
				Label.Title.Text = NewLabel
			end

			return LabelValue
		end

		-- Paragraph
		function Tab:CreateParagraph(ParagraphSettings)
			local ParagraphValue = {}

			local Paragraph = Elements.Template.Paragraph:Clone()
			Paragraph.Title.Text = ParagraphSettings.Title
			Paragraph.Content.Text = ParagraphSettings.Content
			Paragraph.Visible = true
			Paragraph.Parent = TabPage

			Paragraph.Content.Size = UDim2.new(0, 438, 0, Paragraph.Content.TextBounds.Y)
			Paragraph.Content.Position = UDim2.new(1, -10, 0.575,0 )
			Paragraph.Size = UDim2.new(1, -10, 0, Paragraph.Content.TextBounds.Y + 40)

			Paragraph.BackgroundTransparency = 1
			Paragraph.UIStroke.Transparency = 1
			Paragraph.Title.TextTransparency = 1
			Paragraph.Content.TextTransparency = 1

			Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Paragraph, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Paragraph.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Paragraph.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	
			TweenService:Create(Paragraph.Content, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			function ParagraphValue:Set(NewParagraphSettings)
				Paragraph.Title.Text = NewParagraphSettings.Title
				Paragraph.Content.Text = NewParagraphSettings.Content
			end

			return ParagraphValue
		end

		-- Input
		function Tab:CreateInput(InputSettings)
			local Input = Elements.Template.Input:Clone()
			Input.Name = InputSettings.Name
			Input.Title.Text = InputSettings.Name
			Input.Visible = true
			Input.Parent = TabPage

			Input.BackgroundTransparency = 1
			Input.UIStroke.Transparency = 1
			Input.Title.TextTransparency = 1

			Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Input, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Input.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Input.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Input.InputFrame.InputBox.PlaceholderText = InputSettings.PlaceholderText
			Input.InputFrame.Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)

			Input.InputFrame.InputBox.FocusLost:Connect(function()


				local Success, Response = pcall(function()
					InputSettings.Callback(Input.InputFrame.InputBox.Text)
				end)
				if not Success then
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Input.Title.Text = ""Callback Error""
					print(""Rayfield | ""..InputSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Input.Title.Text = InputSettings.Name
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

				if InputSettings.RemoveTextAfterFocusLost then
					Input.InputFrame.InputBox.Text = """"
				end
				SaveConfiguration()
			end)

			Input.MouseEnter:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Input.MouseLeave:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Input.InputFrame.InputBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Input.InputFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)}):Play()
			end)
		end

		-- Dropdown
		function Tab:CreateDropdown(DropdownSettings)
			local Dropdown = Elements.Template.Dropdown:Clone()
			if string.find(DropdownSettings.Name,""closed"") then
				Dropdown.Name = ""Dropdown""
			else
				Dropdown.Name = DropdownSettings.Name
			end
			Dropdown.Title.Text = DropdownSettings.Name
			Dropdown.Visible = true
			Dropdown.Parent = TabPage

			Dropdown.List.Visible = false

			if typeof(DropdownSettings.CurrentOption) == ""string"" then
				DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
			end

			if not DropdownSettings.MultipleOptions then
				DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
			end

			if DropdownSettings.MultipleOptions then
				if #DropdownSettings.CurrentOption == 1 then
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				elseif #DropdownSettings.CurrentOption == 0 then
					Dropdown.Selected.Text = ""None""
				else
					Dropdown.Selected.Text = ""Various""
				end
			else
				Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
			end


			Dropdown.BackgroundTransparency = 1
			Dropdown.UIStroke.Transparency = 1
			Dropdown.Title.TextTransparency = 1

			Dropdown.Size = UDim2.new(1, -10, 0, 45)

			TweenService:Create(Dropdown, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Dropdown.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			for _, ununusedoption in ipairs(Dropdown.List:GetChildren()) do
				if ununusedoption.ClassName == ""Frame"" and ununusedoption.Name ~= ""Placeholder"" then
					ununusedoption:Destroy()
				end
			end

			Dropdown.Toggle.Rotation = 180

			Dropdown.Interact.MouseButton1Click:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				wait(0.1)
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				if Debounce then return end
				if Dropdown.List.Visible then
					Debounce = true
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
					end
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
					wait(0.35)
					Dropdown.List.Visible = false
					Debounce = false
				else
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 180)}):Play()
					Dropdown.List.Visible = true
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 0.7}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 0}):Play()	
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
					end
				end
			end)

			Dropdown.MouseEnter:Connect(function()
				if not Dropdown.List.Visible then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end
			end)

			Dropdown.MouseLeave:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			for _, Option in ipairs(DropdownSettings.Options) do
				local DropdownOption = Elements.Template.Dropdown.List.Template:Clone()
				DropdownOption.Name = Option
				DropdownOption.Title.Text = Option
				DropdownOption.Parent = Dropdown.List
				DropdownOption.Visible = true

				if DropdownSettings.CurrentOption == Option then
					DropdownOption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				end

				DropdownOption.BackgroundTransparency = 1
				DropdownOption.UIStroke.Transparency = 1
				DropdownOption.Title.TextTransparency = 1

				--local Dropdown = Tab:CreateDropdown({
				--	Name = ""Dropdown Example"",
				--	Options = {""Option 1"",""Option 2""},
				--	CurrentOption = {""Option 1""},
				--  MultipleOptions = true,
				--	Flag = ""Dropdown1"",
				--	Callback = function(TableOfOptions)

				--	end,
				--})


				DropdownOption.Interact.ZIndex = 50
				DropdownOption.Interact.MouseButton1Click:Connect(function()
					if not DropdownSettings.MultipleOptions and table.find(DropdownSettings.CurrentOption, Option) then 
						return
					end

					if table.find(DropdownSettings.CurrentOption, Option) then
						table.remove(DropdownSettings.CurrentOption, table.find(DropdownSettings.CurrentOption, Option))
						if DropdownSettings.MultipleOptions then
							if #DropdownSettings.CurrentOption == 1 then
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							elseif #DropdownSettings.CurrentOption == 0 then
								Dropdown.Selected.Text = ""None""
							else
								Dropdown.Selected.Text = ""Various""
							end
						else
							Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
						end
					else
						if not DropdownSettings.MultipleOptions then
							table.clear(DropdownSettings.CurrentOption)
						end
						table.insert(DropdownSettings.CurrentOption, Option)
						if DropdownSettings.MultipleOptions then
							if #DropdownSettings.CurrentOption == 1 then
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							elseif #DropdownSettings.CurrentOption == 0 then
								Dropdown.Selected.Text = ""None""
							else
								Dropdown.Selected.Text = ""Various""
							end
						else
							Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
						end
						TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(DropdownOption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
						Debounce = true
						wait(0.2)
						TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end


					local Success, Response = pcall(function()
						DropdownSettings.Callback(DropdownSettings.CurrentOption)
					end)

					if not Success then
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Dropdown.Title.Text = ""Callback Error""
						print(""Rayfield | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
						wait(0.5)
						Dropdown.Title.Text = DropdownSettings.Name
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end

					for _, droption in ipairs(Dropdown.List:GetChildren()) do
						if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" and not table.find(DropdownSettings.CurrentOption, droption.Name) then
							TweenService:Create(droption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}):Play()
						end
					end
					if not DropdownSettings.MultipleOptions then
						wait(0.1)
						TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
						for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
							if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
								TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							end
						end
						TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
						TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
						wait(0.35)
						Dropdown.List.Visible = false
					end
					Debounce = false	
					SaveConfiguration()
				end)
			end

			for _, droption in ipairs(Dropdown.List:GetChildren()) do
				if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
					if not table.find(DropdownSettings.CurrentOption, droption.Name) then
						droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					else
						droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					end
				end
			end

			function DropdownSettings:Set(NewOption)
				DropdownSettings.CurrentOption = NewOption

				if typeof(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end

				if not DropdownSettings.MultipleOptions then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end

				if DropdownSettings.MultipleOptions then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				end


				local Success, Response = pcall(function()
					DropdownSettings.Callback(NewOption)
				end)
				if not Success then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Dropdown.Title.Text = ""Callback Error""
					print(""Rayfield | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Dropdown.Title.Text = DropdownSettings.Name
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

				for _, droption in ipairs(Dropdown.List:GetChildren()) do
					if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
						else
							droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						end
					end
				end
				--SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and DropdownSettings.Flag then
					RayfieldLibrary.Flags[DropdownSettings.Flag] = DropdownSettings
				end
			end

			return DropdownSettings
		end

		-- Keybind
		function Tab:CreateKeybind(KeybindSettings)
			local CheckingForKey = false
			local Keybind = Elements.Template.Keybind:Clone()
			Keybind.Name = KeybindSettings.Name
			Keybind.Title.Text = KeybindSettings.Name
			Keybind.Visible = true
			Keybind.Parent = TabPage

			Keybind.BackgroundTransparency = 1
			Keybind.UIStroke.Transparency = 1
			Keybind.Title.TextTransparency = 1

			Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Keybind, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Keybind.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
			Keybind.KeybindFrame.Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)

			Keybind.KeybindFrame.KeybindBox.Focused:Connect(function()
				CheckingForKey = true
				Keybind.KeybindFrame.KeybindBox.Text = """"
			end)
			Keybind.KeybindFrame.KeybindBox.FocusLost:Connect(function()
				CheckingForKey = false
				if Keybind.KeybindFrame.KeybindBox.Text == nil or """" then
					Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
					SaveConfiguration()
				end
			end)

			Keybind.MouseEnter:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Keybind.MouseLeave:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			UserInputService.InputBegan:Connect(function(input, processed)

				if CheckingForKey then
					if input.KeyCode ~= Enum.KeyCode.Unknown and input.KeyCode ~= Enum.KeyCode.F then
						local SplitMessage = string.split(tostring(input.KeyCode), ""."")
						local NewKeyNoEnum = SplitMessage[3]
						Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeyNoEnum)
						KeybindSettings.CurrentKeybind = tostring(NewKeyNoEnum)
						Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
						SaveConfiguration()
					end
				elseif KeybindSettings.CurrentKeybind ~= nil and (input.KeyCode == Enum.KeyCode[KeybindSettings.CurrentKeybind] and not processed) then -- Test
					local Held = true
					local Connection
					Connection = input.Changed:Connect(function(prop)
						if prop == ""UserInputState"" then
							Connection:Disconnect()
							Held = false
						end
					end)

					if not KeybindSettings.HoldToInteract then
						local Success, Response = pcall(KeybindSettings.Callback)
						if not Success then
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							Keybind.Title.Text = ""Callback Error""
							print(""Rayfield | ""..KeybindSettings.Name.."" Callback Error "" ..tostring(Response))
							wait(0.5)
							Keybind.Title.Text = KeybindSettings.Name
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
						end
					else
						wait(0.25)
						if Held then
							local Loop; Loop = RunService.Stepped:Connect(function()
								if not Held then
									KeybindSettings.Callback(false) -- maybe pcall this
									Loop:Disconnect()
								else
									KeybindSettings.Callback(true) -- maybe pcall this
								end
							end)	
						end
					end
				end
			end)

			Keybind.KeybindFrame.KeybindBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Keybind.KeybindFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function KeybindSettings:Set(NewKeybind)
				Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeybind)
				KeybindSettings.CurrentKeybind = tostring(NewKeybind)
				Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
				SaveConfiguration()
			end
			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and KeybindSettings.Flag then
					RayfieldLibrary.Flags[KeybindSettings.Flag] = KeybindSettings
				end
			end
			return KeybindSettings
		end

		-- Toggle
		function Tab:CreateToggle(ToggleSettings)
			local ToggleValue = {}

			local Toggle = Elements.Template.Toggle:Clone()
			Toggle.Name = ToggleSettings.Name
			Toggle.Title.Text = ToggleSettings.Name
			Toggle.Visible = true
			Toggle.Parent = TabPage

			Toggle.BackgroundTransparency = 1
			Toggle.UIStroke.Transparency = 1
			Toggle.Title.TextTransparency = 1
			Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

			if SelectedTheme ~= RayfieldLibrary.Theme.Default then
				Toggle.Switch.Shadow.Visible = false
			end

			TweenService:Create(Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Toggle.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			if not ToggleSettings.CurrentValue then
				Toggle.Switch.Indicator.Position = UDim2.new(1, -40, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
			else
				Toggle.Switch.Indicator.Position = UDim2.new(1, -20, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
			end

			Toggle.MouseEnter:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Toggle.MouseLeave:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Toggle.Interact.MouseButton1Click:Connect(function()
				if ToggleSettings.CurrentValue then
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()		
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)
				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end


				SaveConfiguration()
			end)

			function ToggleSettings:Set(NewToggleValue)
				if NewToggleValue then
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(100,100,100)}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(65,65,65)}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				end
				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)
				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
					RayfieldLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
				end
			end

			return ToggleSettings
		end

		-- Slider
		function Tab:CreateSlider(SliderSettings)
			local Dragging = false
			local Slider = Elements.Template.Slider:Clone()
			Slider.Name = SliderSettings.Name
			Slider.Title.Text = SliderSettings.Name
			Slider.Visible = true
			Slider.Parent = TabPage

			Slider.BackgroundTransparency = 1
			Slider.UIStroke.Transparency = 1
			Slider.Title.TextTransparency = 1

			if SelectedTheme ~= RayfieldLibrary.Theme.Default then
				Slider.Main.Shadow.Visible = false
			end

			Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
			Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress

			TweenService:Create(Slider, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Slider.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Slider.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Slider.Main.Progress.Size =	UDim2.new(0, Slider.Main.AbsoluteSize.X * ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

			if not SliderSettings.Suffix then
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue)
			else
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue) .. "" "" .. SliderSettings.Suffix
			end


			Slider.MouseEnter:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Slider.MouseLeave:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Slider.Main.Interact.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
					Dragging = true 
				end 
			end)
			Slider.Main.Interact.InputEnded:Connect(function(Input) 
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
					Dragging = false 
				end 
			end)

			Slider.Main.Interact.MouseButton1Down:Connect(function(X)
				local Current = Slider.Main.Progress.AbsolutePosition.X + Slider.Main.Progress.AbsoluteSize.X
				local Start = Current
				local Location = X
				local Loop; Loop = RunService.Stepped:Connect(function()
					if Dragging then
						Location = UserInputService:GetMouseLocation().X
						Current = Current + 0.025 * (Location - Start)

						if Location < Slider.Main.AbsolutePosition.X then
							Location = Slider.Main.AbsolutePosition.X
						elseif Location > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Location = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current < Slider.Main.AbsolutePosition.X + 5 then
							Current = Slider.Main.AbsolutePosition.X + 5
						elseif Current > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Current = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current <= Location and (Location - Start) < 0 then
							Start = Location
						elseif Current >= Location and (Location - Start) > 0 then
							Start = Location
						end
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Current - Slider.Main.AbsolutePosition.X, 1, 0)}):Play()
						local NewValue = SliderSettings.Range[1] + (Location - Slider.Main.AbsolutePosition.X) / Slider.Main.AbsoluteSize.X * (SliderSettings.Range[2] - SliderSettings.Range[1])

						NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) * (SliderSettings.Increment * 10000000) / 10000000
						if not SliderSettings.Suffix then
							Slider.Main.Information.Text = tostring(NewValue)
						else
							Slider.Main.Information.Text = tostring(NewValue) .. "" "" .. SliderSettings.Suffix
						end

						if SliderSettings.CurrentValue ~= NewValue then
							local Success, Response = pcall(function()
								SliderSettings.Callback(NewValue)
							end)
							if not Success then
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								Slider.Title.Text = ""Callback Error""
								print(""Rayfield | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
								wait(0.5)
								Slider.Title.Text = SliderSettings.Name
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							end

							SliderSettings.CurrentValue = NewValue
							SaveConfiguration()
						end
					else
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Location - Slider.Main.AbsolutePosition.X > 5 and Location - Slider.Main.AbsolutePosition.X or 5, 1, 0)}):Play()
						Loop:Disconnect()
					end
				end)
			end)

			function SliderSettings:Set(NewVal)
				TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Slider.Main.AbsoluteSize.X * ((NewVal + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (NewVal / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)}):Play()
				Slider.Main.Information.Text = tostring(NewVal) .. "" "" .. SliderSettings.Suffix
				local Success, Response = pcall(function()
					SliderSettings.Callback(NewVal)
				end)
				if not Success then
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Slider.Title.Text = ""Callback Error""
					print(""Rayfield | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Slider.Title.Text = SliderSettings.Name
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
				SliderSettings.CurrentValue = NewVal
				SaveConfiguration()
			end
			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and SliderSettings.Flag then
					RayfieldLibrary.Flags[SliderSettings.Flag] = SliderSettings
				end
			end
			return SliderSettings
		end


		return Tab
	end

	Elements.Visible = true

	wait(0.7)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	wait(0.2)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()

	Topbar.BackgroundTransparency = 1
	Topbar.Divider.Size = UDim2.new(0, 0, 0, 1)
	Topbar.CornerRepair.BackgroundTransparency = 1
	Topbar.Title.TextTransparency = 1
	Topbar.Theme.ImageTransparency = 1
	Topbar.ChangeSize.ImageTransparency = 1
	Topbar.Hide.ImageTransparency = 1

	wait(0.5)
	Topbar.Visible = true
	TweenService:Create(Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Divider, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 1)}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Theme, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.1)
	TweenService:Create(Topbar.ChangeSize, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Hide, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.3)

	return Window
end


function RayfieldLibrary:Destroy()
	Rayfield:Destroy()
end

Topbar.ChangeSize.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Minimised then
		Minimised = false
		Maximise()
	else
		Minimised = true
		Minimise()
	end
end)

Topbar.Hide.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Hidden then
		Hidden = false
		Minimised = false
		Unhide()
	else
		Hidden = true
		Hide()
	end
end)

if game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen"") then
	game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen""):Destroy()
end

local existingUI = game:GetService(""CoreGui""):FindFirstChild(""RayfieldToggleScreen"")

if existingUI then
    existingUI:Destroy()
end


local RayfieldScreen   = Instance.new(""ScreenGui"")
local RayfieldToggleUI = Instance.new(""TextButton"")
local RayfieldCornerUI = Instance.new(""UICorner"")
local RayfieldImageUI  = Instance.new(""ImageLabel"")
RayfieldScreen.Name = ""RayfieldToggleScreen""
RayfieldScreen.Parent = game.CoreGui
RayfieldScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

RayfieldToggleUI.Name = ""RayfieldToggleUI""
RayfieldToggleUI.Parent = RayfieldScreen
RayfieldToggleUI.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
RayfieldToggleUI.BorderSizePixel = 0
RayfieldToggleUI.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
RayfieldToggleUI.Size = UDim2.new(0, 50, 0, 50)
RayfieldToggleUI.Font = Enum.Font.SourceSans
RayfieldToggleUI.Text = """"
RayfieldToggleUI.TextColor3 = Color3.fromRGB(0, 0, 0)
RayfieldToggleUI.TextSize = 14.000
RayfieldToggleUI.Draggable = true
RayfieldToggleUI.MouseButton1Click:Connect(function()
    if Debounce then return end
    if Hidden then
        Hidden = false
        Unhide()
    else
        if not SearchHided then
            spawn(CloseSearch)
        end
        Hidden = true
        Hide()
    end
end)

RayfieldCornerUI.Name = ""RayfieldCornerUI""
RayfieldCornerUI.Parent = RayfieldToggleUI
RayfieldImageUI.Name = ""RayfieldImageUI""
RayfieldImageUI.Parent = RayfieldToggleUI
RayfieldImageUI.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
RayfieldImageUI.BackgroundTransparency = 1.000
RayfieldImageUI.BorderSizePixel = 0
RayfieldImageUI.Position = UDim2.new(0.0, 0, 0.0, 0)
RayfieldImageUI.Size = UDim2.new(0, 50, 0, 50)
RayfieldImageUI.Image = ""http://www.roblox.com/asset/?id=14435896466""

UserInputService.InputBegan:Connect(function(input, processed)
	if (input.KeyCode == Enum.KeyCode.F and not processed) then
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		else
			Hidden = true
			Hide()
		end
	end
end)

for _, TopbarButton in ipairs(Topbar:GetChildren()) do
	if TopbarButton.ClassName == ""ImageButton"" then
		TopbarButton.MouseEnter:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
		end)

		TopbarButton.MouseLeave:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end)

		TopbarButton.MouseButton1Click:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end)
	end
end


function RayfieldLibrary:LoadConfiguration()
	if CEnabled then
		pcall(function()
			if isfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension) then
				LoadConfiguration(readfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension))
				RayfieldLibrary:Notify({Title = ""Configuration Loaded"", Content = ""The configuration file for this script has been loaded from a previous session""})
			end
		end)
	end
end

task.delay(3.5, RayfieldLibrary.LoadConfiguration, RayfieldLibrary)

return RayfieldLibrary"
W01sxeJe,Trading Forex with No Deposit Bonus,reviewbrokers,PHP,Monday 14th of August 2023 12:50:35 PM CDT,https://www.reviewbrokers.net/trading-forex-with-no-deposit-bonus/
RmCmDXiJ,Funky Friday Auto Player (ROBLOX SCRIPT),Sheepz,Lua,Monday 14th of August 2023 12:12:22 PM CDT,"-- script isn't made by me

loadstring(game:HttpGet(""https://raw.githubusercontent.com/wally-rblx/funky-friday-autoplay/main/main.lua"",true))()"
ZPub9qqv,asdasd,suramraja1,Lua,Monday 14th of August 2023 12:08:25 PM CDT,"-- hi! feel free to use any of this code for your own projects or use the libary for your projects. i know its a little messy because i rushed it (with no sleep as well 😴) but it works well enough.

local Serverhop = {}; -- init

local API, ServerPages;

local function CreateFiles(FileName, File)
    pcall(function()
        makefolder(""ServerHopper"")
        makefolder(""ServerHopper//"".. game.PlaceId)
        writefile(""ServerHopper//"".. game.PlaceId ..""//"".. FileName .."".json"", File)
    end)
end

function Serverhop:Normal(Logs, Amount)
    if Amount == nil then Amount = tonumber(math.huge) end;
    local JobIDs = {};
    local function FetchJobIDs()
        JobIDs = {os.date(""*t"").hour};
        local _s = tick();
        if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Awaiting for "".. Amount .."" servers to be scraped. \n"") end;
        repeat
            task.wait()
            API = game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games/"".. game.PlaceId ..""/servers/Public?sortOrder=Asc&limit=100"".. (ServerPages and ""&cursor="".. ServerPages or """"))); -- servers api
            for i, v in next, API[""data""] do
                if v[""id""] ~= game.JobId and v[""playing""] ~= v[""maxPlayers""] then
                    if #JobIDs < Amount + 1 then
                        table.insert(JobIDs, v[""id""])
                    end
                end
            end
            ServerPages = API.nextPageCursor
        until not ServerPages or #JobIDs >= Amount + 1
        if Logs then rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Successfully scraped "".. #JobIDs - 1 .."" servers in "".. math.round(tick() - _s) ..""s. \n"") end;
        return true;
    end
    if not isfile(""ServerHopper//"".. game.PlaceId ..""//normal-jobids.json"") then
        FetchJobIDs()
        CreateFiles(""normal-jobids"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    JobIDs = game:GetService(""HttpService""):JSONDecode(readfile(""ServerHopper//"".. game.PlaceId ..""//normal-jobids.json""))
    if JobIDs[1] ~= os.date(""*t"").hour then
        FetchJobIDs()
        writefile(""ServerHopper//"".. game.PlaceId ..""//normal-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    local function RandomJobID()
        return JobIDs[math.random(1, #JobIDs)]
    end
    local SelectedJobID = RandomJobID();
    if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. SelectedJobID .."" finding new server. \n"") end;
            SelectedJobID = RandomJobID();
            if Logs then rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
            game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
        end
    end)
end

function Serverhop:Dynamic(Logs, Amount)
    if Amount == nil then Amount = tonumber(math.huge) end;
    local JobIDs = {};
    local OldJobIDs = {os.date(""*t"").hour};
    local function FetchJobIDs()
        JobIDs = {os.date(""*t"").hour};
        local _s = tick();
        if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Awaiting for "".. Amount .."" servers to be scraped. \n"") end;
        repeat
            task.wait()
            API = game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games/"".. game.PlaceId ..""/servers/Public?sortOrder=Asc&limit=100"".. (ServerPages and ""&cursor="".. ServerPages or """"))); -- servers api
            for i, v in next, API[""data""] do
                if v[""id""] ~= game.JobId and v[""playing""] ~= v[""maxPlayers""] and not table.find(OldJobIDs, v[""id""]) then
                    if #JobIDs < Amount + 1 then
                        table.insert(JobIDs, v[""id""])
                    end
                end
            end
            ServerPages = API.nextPageCursor
        until not ServerPages or #JobIDs >= Amount + 1
        if Logs then rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Successfully scraped "".. #JobIDs - 1 .."" servers in "".. math.round(tick() - _s) ..""s. \n"") end;
        return true;
    end
    if not isfile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json"") then
        CreateFiles(""old_dynamic-jobids"", game:GetService(""HttpService""):JSONEncode(OldJobIDs))
    end
    OldJobIDs = game:GetService(""HttpService""):JSONDecode(readfile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json""))
    if not isfile(""ServerHopper//"".. game.PlaceId ..""//dynamic-jobids.json"") then
        FetchJobIDs()
        CreateFiles(""dynamic-jobids"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    JobIDs = game:GetService(""HttpService""):JSONDecode(readfile(""ServerHopper//"".. game.PlaceId ..""//dynamic-jobids.json""))
    if JobIDs[1] ~= os.date(""*t"").hour or #JobIDs < 2 then
        FetchJobIDs()
        writefile(""ServerHopper//"".. game.PlaceId ..""//dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
        if #JobIDs < 2 then
            writefile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode({os.date(""*t"").hour}))
        end
    end
    if OldJobIDs[1] ~= os.date(""*t"").hour then
        FetchJobIDs()
        writefile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode({os.date(""*t"").hour}))
    end
    local function RandomJobID()
        return JobIDs[math.random(1, #JobIDs)]
    end
    local SelectedJobID = RandomJobID();
    if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
    table.remove(JobIDs, table.find(JobIDs, SelectedJobID))
    table.insert(OldJobIDs, SelectedJobID)
    writefile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode(OldJobIDs))
    writefile(""ServerHopper//"".. game.PlaceId ..""//dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. SelectedJobID .."" finding new server. \n"") end;
            SelectedJobID = RandomJobID();
            if Logs then rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
            table.remove(JobIDs, table.find(JobIDs, SelectedJobID))
            table.insert(OldJobIDs, SelectedJobID)
            writefile(""ServerHopper//"".. game.PlaceId ..""//old_dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode(OldJobIDs))
            writefile(""ServerHopper//"".. game.PlaceId ..""//dynamic-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
            game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
        end
    end)
end

function Serverhop:Rejoin(Logs)
    if Logs then rconsolename(""severhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Rejoining server. \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to rejoin. \n"") end;
        end
    end)
end

function Serverhop:LowPing(Logs, Amount, Ping)
    if Ping == nil then Ping = 450 end;
    if Amount == nil then Amount = tonumber(math.huge) end;
    local JobIDs = {};
    local function FetchJobIDs()
        JobIDs = {os.date(""*t"").hour};
        local _s = tick();
        if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Awaiting for "".. Amount .."" servers to be scraped. \n"") end;
        repeat
            task.wait()
            API = game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games/"".. game.PlaceId ..""/servers/Public?sortOrder=Asc&limit=100"".. (ServerPages and ""&cursor="".. ServerPages or """"))); -- servers api
            for i, v in next, API[""data""] do
                if v[""id""] ~= game.JobId and v[""playing""] ~= v[""maxPlayers""] and v[""ping""] ~= nil and v[""ping""] <= Ping then
                    if #JobIDs < Amount + 1 then
                        table.insert(JobIDs, v[""id""])
                    end
                end
            end
        until not ServerPages or #JobIDs >= Amount + 1
        if Logs then rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Successfully scraped "".. #JobIDs - 1 .."" servers in "".. math.round(tick() - _s) ..""s. \n"") end;
        return true;
    end
    if not isfile(""ServerHopper//"".. game.PlaceId ..""//low_ping-jobids.json"") then
        FetchJobIDs()
        CreateFiles(""low_ping-jobids"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    JobIDs = game:GetService(""HttpService""):JSONDecode(readfile(""ServerHopper//"".. game.PlaceId ..""//low_ping-jobids.json""))
    if JobIDs[1] ~= os.date(""*t"").hour then
        FetchJobIDs()
        writefile(""ServerHopper//"".. game.PlaceId ..""//low_ping-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    local function RandomJobID()
        return JobIDs[math.random(1, #JobIDs)]
    end
    local SelectedJobID = RandomJobID();
    if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. SelectedJobID .."" finding new server. \n"") end;
            SelectedJobID = RandomJobID();
            if Logs then rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
            game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
        end
    end)
end

function Serverhop:LowPlayers(Logs, Amount, Players)
    if Players == nil then for i, v in next, game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games?universeIds="".. game.GameId))[""data""] do Players = tonumber(v[""maxPlayers""]) / 2 end end;
    if Amount == nil then Amount = tonumber(math.huge) end;
    local JobIDs = {};
    local function FetchJobIDs()
        JobIDs = {os.date(""*t"").hour};
        local _s = tick();
        if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Awaiting for "".. Amount .."" servers to be scraped. \n"") end;
        repeat
            task.wait()
            API = game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games/"".. game.PlaceId ..""/servers/Public?sortOrder=Asc&limit=100"".. (ServerPages and ""&cursor="".. ServerPages or """"))); -- servers api
            for i, v in next, API[""data""] do
                if v[""id""] ~= game.JobId and v[""playing""] ~= v[""maxPlayers""] and v[""playing""] <= Players then
                    if #JobIDs < Amount + 1 then
                        table.insert(JobIDs, v[""id""])
                    end
                end
            end
        until not ServerPages or #JobIDs >= Amount + 1
        if Logs then rconsoleprint(""@@CYAN@@"") rconsoleprint(""[!] Successfully scraped "".. #JobIDs - 1 .."" servers in "".. math.round(tick() - _s) ..""s. \n"") end;
        return true;
    end
    if not isfile(""ServerHopper//"".. game.PlaceId ..""//low_players-jobids.json"") then
        FetchJobIDs()
        CreateFiles(""low_players-jobids"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    JobIDs = game:GetService(""HttpService""):JSONDecode(readfile(""ServerHopper//"".. game.PlaceId ..""//low_players-jobids.json""))
    if JobIDs[1] ~= os.date(""*t"").hour then
        FetchJobIDs()
        writefile(""ServerHopper//"".. game.PlaceId ..""//low_players-jobids.json"", game:GetService(""HttpService""):JSONEncode(JobIDs))
    end
    local function RandomJobID()
        return JobIDs[math.random(1, #JobIDs)]
    end
    local SelectedJobID = RandomJobID();
    if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. SelectedJobID .."" finding new server. \n"") end;
            SelectedJobID = RandomJobID();
            if Logs then rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
            game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
        end
    end)
end

function Serverhop:Instant(Logs)
    local JobIDs = {};
    for i, v in next, game:GetService(""HttpService""):JSONDecode(game:HttpGet(""https://games.roblox.com/v1/games/"".. game.PlaceId ..""/servers/Public?sortOrder=Asc&limit=100""))[""data""] do
        if v[""id""] ~= game.PlaceId and v[""playing""] ~= v[""maxPlayers""] then
            table.insert(JobIDs, v[""id""])
        end
    end
    local function RandomJobID()
        return JobIDs[math.random(1, #JobIDs)]
    end
    local SelectedJobID = RandomJobID();
    if Logs then rconsolename(""serverhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then 
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. SelectedJobID .."" finding new server. \n"") end;
            SelectedJobID = RandomJobID();
            if Logs then rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Server hopping to "".. SelectedJobID .."". \n"") end;
            game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, SelectedJobID)
        end
    end)
end

function Serverhop:JoinJobID(Logs, JobID)
    if Logs then rconsolename(""severhop-libary.lua ; seth.#0001 - "".. string.format(""%02i:%02i %s"", ((os.date(""*t"").hour % 24 - 1) % 12) + 1, os.date(""*t"").min, os.date(""*t"").hour % 24 < 12 and ""AM"" or ""PM"")) rconsoleprint(""@@LIGHT_CYAN@@"") rconsoleprint(""[#] Attempting to join "".. JobID .."". \n"") end;
    game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, JobID)
    game:GetService(""Players"").LocalPlayer.OnTeleport:Connect(function(Status)
        if Status == Enum.TeleportState.Failed then 
            if Logs then rconsoleprint(""@@LIGHT_RED@@"") rconsoleprint(""[*] Failed to join "".. JobID .."". \n"") end;
        end
    end)
end

return Serverhop;"
qbJ9JtTW,Keys,Mana42135,Lua,Monday 14th of August 2023 11:54:55 AM CDT,"return {
	""Test"",
	""Beta"",
	""Mana""
}"
81gyqYy0,Nigerian scammers [14-8-1/2023],bombaires,HTML,Monday 14th of August 2023 11:44:11 AM CDT,"<a href=""mailto:keystoneb.jeffwilkinson@gmail.com"">keystoneb.jeffwilkinson@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2526@gmail.com"">keystoneb.jeffwilkinson+2526@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11851@gmail.com"">keystoneb.jeffwilkinson+11851@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25095@gmail.com"">keystoneb.jeffwilkinson+25095@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19632@gmail.com"">keystoneb.jeffwilkinson+19632@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18039@gmail.com"">keystoneb.jeffwilkinson+18039@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31757@gmail.com"">keystoneb.jeffwilkinson+31757@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30675@gmail.com"">keystoneb.jeffwilkinson+30675@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21085@gmail.com"">keystoneb.jeffwilkinson+21085@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6335@gmail.com"">keystoneb.jeffwilkinson+6335@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9631@gmail.com"">keystoneb.jeffwilkinson+9631@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12394@gmail.com"">keystoneb.jeffwilkinson+12394@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3350@gmail.com"">keystoneb.jeffwilkinson+3350@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1671@gmail.com"">keystoneb.jeffwilkinson+1671@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28325@gmail.com"">keystoneb.jeffwilkinson+28325@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9683@gmail.com"">keystoneb.jeffwilkinson+9683@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26552@gmail.com"">keystoneb.jeffwilkinson+26552@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17292@gmail.com"">keystoneb.jeffwilkinson+17292@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1931@gmail.com"">keystoneb.jeffwilkinson+1931@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11796@gmail.com"">keystoneb.jeffwilkinson+11796@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28471@gmail.com"">keystoneb.jeffwilkinson+28471@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12589@gmail.com"">keystoneb.jeffwilkinson+12589@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21967@gmail.com"">keystoneb.jeffwilkinson+21967@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14986@gmail.com"">keystoneb.jeffwilkinson+14986@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2795@gmail.com"">keystoneb.jeffwilkinson+2795@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32052@gmail.com"">keystoneb.jeffwilkinson+32052@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12628@gmail.com"">keystoneb.jeffwilkinson+12628@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29150@gmail.com"">keystoneb.jeffwilkinson+29150@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30680@gmail.com"">keystoneb.jeffwilkinson+30680@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9628@gmail.com"">keystoneb.jeffwilkinson+9628@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18186@gmail.com"">keystoneb.jeffwilkinson+18186@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20907@gmail.com"">keystoneb.jeffwilkinson+20907@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21457@gmail.com"">keystoneb.jeffwilkinson+21457@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17589@gmail.com"">keystoneb.jeffwilkinson+17589@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27380@gmail.com"">keystoneb.jeffwilkinson+27380@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24772@gmail.com"">keystoneb.jeffwilkinson+24772@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25381@gmail.com"">keystoneb.jeffwilkinson+25381@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5176@gmail.com"">keystoneb.jeffwilkinson+5176@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27850@gmail.com"">keystoneb.jeffwilkinson+27850@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7686@gmail.com"">keystoneb.jeffwilkinson+7686@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29805@gmail.com"">keystoneb.jeffwilkinson+29805@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19467@gmail.com"">keystoneb.jeffwilkinson+19467@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32699@gmail.com"">keystoneb.jeffwilkinson+32699@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20656@gmail.com"">keystoneb.jeffwilkinson+20656@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26124@gmail.com"">keystoneb.jeffwilkinson+26124@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13852@gmail.com"">keystoneb.jeffwilkinson+13852@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2556@gmail.com"">keystoneb.jeffwilkinson+2556@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5764@gmail.com"">keystoneb.jeffwilkinson+5764@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1324@gmail.com"">keystoneb.jeffwilkinson+1324@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9817@gmail.com"">keystoneb.jeffwilkinson+9817@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13465@gmail.com"">keystoneb.jeffwilkinson+13465@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25433@gmail.com"">keystoneb.jeffwilkinson+25433@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3932@gmail.com"">keystoneb.jeffwilkinson+3932@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2634@gmail.com"">keystoneb.jeffwilkinson+2634@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+541@gmail.com"">keystoneb.jeffwilkinson+541@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32527@gmail.com"">keystoneb.jeffwilkinson+32527@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14890@gmail.com"">keystoneb.jeffwilkinson+14890@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15728@gmail.com"">keystoneb.jeffwilkinson+15728@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26094@gmail.com"">keystoneb.jeffwilkinson+26094@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5723@gmail.com"">keystoneb.jeffwilkinson+5723@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23099@gmail.com"">keystoneb.jeffwilkinson+23099@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23924@gmail.com"">keystoneb.jeffwilkinson+23924@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6427@gmail.com"">keystoneb.jeffwilkinson+6427@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27761@gmail.com"">keystoneb.jeffwilkinson+27761@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15344@gmail.com"">keystoneb.jeffwilkinson+15344@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3171@gmail.com"">keystoneb.jeffwilkinson+3171@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28590@gmail.com"">keystoneb.jeffwilkinson+28590@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14474@gmail.com"">keystoneb.jeffwilkinson+14474@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4516@gmail.com"">keystoneb.jeffwilkinson+4516@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1711@gmail.com"">keystoneb.jeffwilkinson+1711@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26627@gmail.com"">keystoneb.jeffwilkinson+26627@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27208@gmail.com"">keystoneb.jeffwilkinson+27208@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+779@gmail.com"">keystoneb.jeffwilkinson+779@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13063@gmail.com"">keystoneb.jeffwilkinson+13063@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2139@gmail.com"">keystoneb.jeffwilkinson+2139@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18437@gmail.com"">keystoneb.jeffwilkinson+18437@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11113@gmail.com"">keystoneb.jeffwilkinson+11113@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28440@gmail.com"">keystoneb.jeffwilkinson+28440@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7347@gmail.com"">keystoneb.jeffwilkinson+7347@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5274@gmail.com"">keystoneb.jeffwilkinson+5274@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6930@gmail.com"">keystoneb.jeffwilkinson+6930@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30153@gmail.com"">keystoneb.jeffwilkinson+30153@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25564@gmail.com"">keystoneb.jeffwilkinson+25564@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4901@gmail.com"">keystoneb.jeffwilkinson+4901@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17374@gmail.com"">keystoneb.jeffwilkinson+17374@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10679@gmail.com"">keystoneb.jeffwilkinson+10679@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15510@gmail.com"">keystoneb.jeffwilkinson+15510@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13066@gmail.com"">keystoneb.jeffwilkinson+13066@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23241@gmail.com"">keystoneb.jeffwilkinson+23241@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27966@gmail.com"">keystoneb.jeffwilkinson+27966@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4093@gmail.com"">keystoneb.jeffwilkinson+4093@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28365@gmail.com"">keystoneb.jeffwilkinson+28365@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10571@gmail.com"">keystoneb.jeffwilkinson+10571@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11107@gmail.com"">keystoneb.jeffwilkinson+11107@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1948@gmail.com"">keystoneb.jeffwilkinson+1948@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3761@gmail.com"">keystoneb.jeffwilkinson+3761@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23222@gmail.com"">keystoneb.jeffwilkinson+23222@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23662@gmail.com"">keystoneb.jeffwilkinson+23662@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6356@gmail.com"">keystoneb.jeffwilkinson+6356@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22993@gmail.com"">keystoneb.jeffwilkinson+22993@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4254@gmail.com"">keystoneb.jeffwilkinson+4254@gmail.com</a>
<a href=""mailto:jamiedimon68@hotmail.com"">jamiedimon68@hotmail.com</a>
<a href=""mailto:jamiedimon61@hotmail.com"">jamiedimon61@hotmail.com</a>
<a href=""mailto:jamiedimon63@hotmail.com"">jamiedimon63@hotmail.com</a>
<a href=""mailto:diplomatjlewis@gmail.com"">diplomatjlewis@gmail.com</a>
<a href=""mailto:diplomatjlewis+18496@gmail.com"">diplomatjlewis+18496@gmail.com</a>
<a href=""mailto:diplomatjlewis+31154@gmail.com"">diplomatjlewis+31154@gmail.com</a>
<a href=""mailto:diplomatjlewis+23383@gmail.com"">diplomatjlewis+23383@gmail.com</a>
<a href=""mailto:diplomatjlewis+2893@gmail.com"">diplomatjlewis+2893@gmail.com</a>
<a href=""mailto:diplomatjlewis+3064@gmail.com"">diplomatjlewis+3064@gmail.com</a>
<a href=""mailto:diplomatjlewis+3422@gmail.com"">diplomatjlewis+3422@gmail.com</a>
<a href=""mailto:diplomatjlewis+18569@gmail.com"">diplomatjlewis+18569@gmail.com</a>
<a href=""mailto:diplomatjlewis+22854@gmail.com"">diplomatjlewis+22854@gmail.com</a>
<a href=""mailto:diplomatjlewis+7968@gmail.com"">diplomatjlewis+7968@gmail.com</a>
<a href=""mailto:diplomatjlewis+7690@gmail.com"">diplomatjlewis+7690@gmail.com</a>
<a href=""mailto:diplomatjlewis+1985@gmail.com"">diplomatjlewis+1985@gmail.com</a>
<a href=""mailto:diplomatjlewis+10071@gmail.com"">diplomatjlewis+10071@gmail.com</a>
<a href=""mailto:diplomatjlewis+3291@gmail.com"">diplomatjlewis+3291@gmail.com</a>
<a href=""mailto:diplomatjlewis+4341@gmail.com"">diplomatjlewis+4341@gmail.com</a>
<a href=""mailto:diplomatjlewis+9775@gmail.com"">diplomatjlewis+9775@gmail.com</a>
<a href=""mailto:diplomatjlewis+24647@gmail.com"">diplomatjlewis+24647@gmail.com</a>
<a href=""mailto:diplomatjlewis+22684@gmail.com"">diplomatjlewis+22684@gmail.com</a>
<a href=""mailto:diplomatjlewis+32368@gmail.com"">diplomatjlewis+32368@gmail.com</a>
<a href=""mailto:diplomatjlewis+32184@gmail.com"">diplomatjlewis+32184@gmail.com</a>
<a href=""mailto:diplomatjlewis+25606@gmail.com"">diplomatjlewis+25606@gmail.com</a>
<a href=""mailto:diplomatjlewis+3231@gmail.com"">diplomatjlewis+3231@gmail.com</a>
<a href=""mailto:diplomatjlewis+26783@gmail.com"">diplomatjlewis+26783@gmail.com</a>
<a href=""mailto:diplomatjlewis+24082@gmail.com"">diplomatjlewis+24082@gmail.com</a>
<a href=""mailto:diplomatjlewis+18032@gmail.com"">diplomatjlewis+18032@gmail.com</a>
<a href=""mailto:diplomatjlewis+6901@gmail.com"">diplomatjlewis+6901@gmail.com</a>
<a href=""mailto:diplomatjlewis+13145@gmail.com"">diplomatjlewis+13145@gmail.com</a>
<a href=""mailto:diplomatjlewis+3391@gmail.com"">diplomatjlewis+3391@gmail.com</a>
<a href=""mailto:diplomatjlewis+15685@gmail.com"">diplomatjlewis+15685@gmail.com</a>
<a href=""mailto:diplomatjlewis+25838@gmail.com"">diplomatjlewis+25838@gmail.com</a>
<a href=""mailto:diplomatjlewis+21464@gmail.com"">diplomatjlewis+21464@gmail.com</a>
<a href=""mailto:diplomatjlewis+18502@gmail.com"">diplomatjlewis+18502@gmail.com</a>
<a href=""mailto:diplomatjlewis+22402@gmail.com"">diplomatjlewis+22402@gmail.com</a>
<a href=""mailto:diplomatjlewis+16396@gmail.com"">diplomatjlewis+16396@gmail.com</a>
<a href=""mailto:diplomatjlewis+64@gmail.com"">diplomatjlewis+64@gmail.com</a>
<a href=""mailto:diplomatjlewis+21032@gmail.com"">diplomatjlewis+21032@gmail.com</a>
<a href=""mailto:diplomatjlewis+12697@gmail.com"">diplomatjlewis+12697@gmail.com</a>
<a href=""mailto:diplomatjlewis+28788@gmail.com"">diplomatjlewis+28788@gmail.com</a>
<a href=""mailto:diplomatjlewis+13191@gmail.com"">diplomatjlewis+13191@gmail.com</a>
<a href=""mailto:diplomatjlewis+17082@gmail.com"">diplomatjlewis+17082@gmail.com</a>
<a href=""mailto:diplomatjlewis+30418@gmail.com"">diplomatjlewis+30418@gmail.com</a>
<a href=""mailto:diplomatjlewis+26867@gmail.com"">diplomatjlewis+26867@gmail.com</a>
<a href=""mailto:diplomatjlewis+2609@gmail.com"">diplomatjlewis+2609@gmail.com</a>
<a href=""mailto:diplomatjlewis+19647@gmail.com"">diplomatjlewis+19647@gmail.com</a>
<a href=""mailto:diplomatjlewis+29571@gmail.com"">diplomatjlewis+29571@gmail.com</a>
<a href=""mailto:diplomatjlewis+28097@gmail.com"">diplomatjlewis+28097@gmail.com</a>
<a href=""mailto:diplomatjlewis+407@gmail.com"">diplomatjlewis+407@gmail.com</a>
<a href=""mailto:diplomatjlewis+23568@gmail.com"">diplomatjlewis+23568@gmail.com</a>
<a href=""mailto:diplomatjlewis+835@gmail.com"">diplomatjlewis+835@gmail.com</a>
<a href=""mailto:diplomatjlewis+20968@gmail.com"">diplomatjlewis+20968@gmail.com</a>
<a href=""mailto:diplomatjlewis+20937@gmail.com"">diplomatjlewis+20937@gmail.com</a>
<a href=""mailto:diplomatjlewis+2692@gmail.com"">diplomatjlewis+2692@gmail.com</a>
<a href=""mailto:diplomatjlewis+14356@gmail.com"">diplomatjlewis+14356@gmail.com</a>
<a href=""mailto:diplomatjlewis+25437@gmail.com"">diplomatjlewis+25437@gmail.com</a>
<a href=""mailto:diplomatjlewis+25711@gmail.com"">diplomatjlewis+25711@gmail.com</a>
<a href=""mailto:diplomatjlewis+30996@gmail.com"">diplomatjlewis+30996@gmail.com</a>
<a href=""mailto:diplomatjlewis+26640@gmail.com"">diplomatjlewis+26640@gmail.com</a>
<a href=""mailto:diplomatjlewis+17003@gmail.com"">diplomatjlewis+17003@gmail.com</a>
<a href=""mailto:diplomatjlewis+1477@gmail.com"">diplomatjlewis+1477@gmail.com</a>
<a href=""mailto:diplomatjlewis+1183@gmail.com"">diplomatjlewis+1183@gmail.com</a>
<a href=""mailto:diplomatjlewis+18271@gmail.com"">diplomatjlewis+18271@gmail.com</a>
<a href=""mailto:diplomatjlewis+17868@gmail.com"">diplomatjlewis+17868@gmail.com</a>
<a href=""mailto:diplomatjlewis+8464@gmail.com"">diplomatjlewis+8464@gmail.com</a>
<a href=""mailto:diplomatjlewis+2139@gmail.com"">diplomatjlewis+2139@gmail.com</a>
<a href=""mailto:diplomatjlewis+2677@gmail.com"">diplomatjlewis+2677@gmail.com</a>
<a href=""mailto:diplomatjlewis+31123@gmail.com"">diplomatjlewis+31123@gmail.com</a>
<a href=""mailto:diplomatjlewis+1918@gmail.com"">diplomatjlewis+1918@gmail.com</a>
<a href=""mailto:diplomatjlewis+8629@gmail.com"">diplomatjlewis+8629@gmail.com</a>
<a href=""mailto:diplomatjlewis+15022@gmail.com"">diplomatjlewis+15022@gmail.com</a>
<a href=""mailto:diplomatjlewis+10753@gmail.com"">diplomatjlewis+10753@gmail.com</a>
<a href=""mailto:diplomatjlewis+4805@gmail.com"">diplomatjlewis+4805@gmail.com</a>
<a href=""mailto:diplomatjlewis+26616@gmail.com"">diplomatjlewis+26616@gmail.com</a>
<a href=""mailto:diplomatjlewis+3464@gmail.com"">diplomatjlewis+3464@gmail.com</a>
<a href=""mailto:diplomatjlewis+14420@gmail.com"">diplomatjlewis+14420@gmail.com</a>
<a href=""mailto:diplomatjlewis+12808@gmail.com"">diplomatjlewis+12808@gmail.com</a>
<a href=""mailto:diplomatjlewis+24385@gmail.com"">diplomatjlewis+24385@gmail.com</a>
<a href=""mailto:diplomatjlewis+12835@gmail.com"">diplomatjlewis+12835@gmail.com</a>
<a href=""mailto:diplomatjlewis+6186@gmail.com"">diplomatjlewis+6186@gmail.com</a>
<a href=""mailto:diplomatjlewis+4467@gmail.com"">diplomatjlewis+4467@gmail.com</a>
<a href=""mailto:diplomatjlewis+848@gmail.com"">diplomatjlewis+848@gmail.com</a>
<a href=""mailto:diplomatjlewis+13144@gmail.com"">diplomatjlewis+13144@gmail.com</a>
<a href=""mailto:diplomatjlewis+8636@gmail.com"">diplomatjlewis+8636@gmail.com</a>
<a href=""mailto:diplomatjlewis+27606@gmail.com"">diplomatjlewis+27606@gmail.com</a>
<a href=""mailto:diplomatjlewis+19579@gmail.com"">diplomatjlewis+19579@gmail.com</a>
<a href=""mailto:diplomatjlewis+6737@gmail.com"">diplomatjlewis+6737@gmail.com</a>
<a href=""mailto:diplomatjlewis+12805@gmail.com"">diplomatjlewis+12805@gmail.com</a>
<a href=""mailto:diplomatjlewis+32408@gmail.com"">diplomatjlewis+32408@gmail.com</a>
<a href=""mailto:diplomatjlewis+22960@gmail.com"">diplomatjlewis+22960@gmail.com</a>
<a href=""mailto:diplomatjlewis+8066@gmail.com"">diplomatjlewis+8066@gmail.com</a>
<a href=""mailto:diplomatjlewis+7812@gmail.com"">diplomatjlewis+7812@gmail.com</a>
<a href=""mailto:diplomatjlewis+8302@gmail.com"">diplomatjlewis+8302@gmail.com</a>
<a href=""mailto:diplomatjlewis+2938@gmail.com"">diplomatjlewis+2938@gmail.com</a>
<a href=""mailto:diplomatjlewis+104@gmail.com"">diplomatjlewis+104@gmail.com</a>
<a href=""mailto:diplomatjlewis+25475@gmail.com"">diplomatjlewis+25475@gmail.com</a>
<a href=""mailto:diplomatjlewis+6548@gmail.com"">diplomatjlewis+6548@gmail.com</a>
<a href=""mailto:diplomatjlewis+8292@gmail.com"">diplomatjlewis+8292@gmail.com</a>
<a href=""mailto:diplomatjlewis+6979@gmail.com"">diplomatjlewis+6979@gmail.com</a>
<a href=""mailto:diplomatjlewis+12684@gmail.com"">diplomatjlewis+12684@gmail.com</a>
<a href=""mailto:diplomatjlewis+16271@gmail.com"">diplomatjlewis+16271@gmail.com</a>
<a href=""mailto:diplomatjlewis+8552@gmail.com"">diplomatjlewis+8552@gmail.com</a>
<a href=""mailto:diplomatjlewis+26914@gmail.com"">diplomatjlewis+26914@gmail.com</a>
<a href=""mailto:paymentfillle@gmail.com"">paymentfillle@gmail.com</a>
<a href=""mailto:paymentfillle+27542@gmail.com"">paymentfillle+27542@gmail.com</a>
<a href=""mailto:paymentfillle+7104@gmail.com"">paymentfillle+7104@gmail.com</a>
<a href=""mailto:paymentfillle+6528@gmail.com"">paymentfillle+6528@gmail.com</a>
<a href=""mailto:paymentfillle+14234@gmail.com"">paymentfillle+14234@gmail.com</a>
<a href=""mailto:paymentfillle+7561@gmail.com"">paymentfillle+7561@gmail.com</a>
<a href=""mailto:paymentfillle+15565@gmail.com"">paymentfillle+15565@gmail.com</a>
<a href=""mailto:paymentfillle+6693@gmail.com"">paymentfillle+6693@gmail.com</a>
<a href=""mailto:paymentfillle+27724@gmail.com"">paymentfillle+27724@gmail.com</a>
<a href=""mailto:paymentfillle+9304@gmail.com"">paymentfillle+9304@gmail.com</a>
<a href=""mailto:paymentfillle+8007@gmail.com"">paymentfillle+8007@gmail.com</a>
<a href=""mailto:paymentfillle+5776@gmail.com"">paymentfillle+5776@gmail.com</a>
<a href=""mailto:paymentfillle+19492@gmail.com"">paymentfillle+19492@gmail.com</a>
<a href=""mailto:paymentfillle+19024@gmail.com"">paymentfillle+19024@gmail.com</a>
<a href=""mailto:paymentfillle+2878@gmail.com"">paymentfillle+2878@gmail.com</a>
<a href=""mailto:paymentfillle+10427@gmail.com"">paymentfillle+10427@gmail.com</a>
<a href=""mailto:paymentfillle+2784@gmail.com"">paymentfillle+2784@gmail.com</a>
<a href=""mailto:paymentfillle+2449@gmail.com"">paymentfillle+2449@gmail.com</a>
<a href=""mailto:paymentfillle+13151@gmail.com"">paymentfillle+13151@gmail.com</a>
<a href=""mailto:paymentfillle+24879@gmail.com"">paymentfillle+24879@gmail.com</a>
<a href=""mailto:paymentfillle+3460@gmail.com"">paymentfillle+3460@gmail.com</a>
<a href=""mailto:paymentfillle+24420@gmail.com"">paymentfillle+24420@gmail.com</a>
<a href=""mailto:paymentfillle+23136@gmail.com"">paymentfillle+23136@gmail.com</a>
<a href=""mailto:paymentfillle+18054@gmail.com"">paymentfillle+18054@gmail.com</a>
<a href=""mailto:paymentfillle+14565@gmail.com"">paymentfillle+14565@gmail.com</a>
<a href=""mailto:paymentfillle+3447@gmail.com"">paymentfillle+3447@gmail.com</a>
<a href=""mailto:paymentfillle+24226@gmail.com"">paymentfillle+24226@gmail.com</a>
<a href=""mailto:paymentfillle+17030@gmail.com"">paymentfillle+17030@gmail.com</a>
<a href=""mailto:paymentfillle+20675@gmail.com"">paymentfillle+20675@gmail.com</a>
<a href=""mailto:paymentfillle+26031@gmail.com"">paymentfillle+26031@gmail.com</a>
<a href=""mailto:paymentfillle+31552@gmail.com"">paymentfillle+31552@gmail.com</a>
<a href=""mailto:paymentfillle+627@gmail.com"">paymentfillle+627@gmail.com</a>
<a href=""mailto:paymentfillle+8021@gmail.com"">paymentfillle+8021@gmail.com</a>
<a href=""mailto:paymentfillle+11984@gmail.com"">paymentfillle+11984@gmail.com</a>
<a href=""mailto:paymentfillle+18922@gmail.com"">paymentfillle+18922@gmail.com</a>
<a href=""mailto:paymentfillle+8259@gmail.com"">paymentfillle+8259@gmail.com</a>
<a href=""mailto:paymentfillle+5713@gmail.com"">paymentfillle+5713@gmail.com</a>
<a href=""mailto:paymentfillle+13470@gmail.com"">paymentfillle+13470@gmail.com</a>
<a href=""mailto:paymentfillle+21249@gmail.com"">paymentfillle+21249@gmail.com</a>
<a href=""mailto:paymentfillle+15195@gmail.com"">paymentfillle+15195@gmail.com</a>
<a href=""mailto:paymentfillle+10349@gmail.com"">paymentfillle+10349@gmail.com</a>
<a href=""mailto:paymentfillle+30332@gmail.com"">paymentfillle+30332@gmail.com</a>
<a href=""mailto:paymentfillle+19165@gmail.com"">paymentfillle+19165@gmail.com</a>
<a href=""mailto:paymentfillle+28825@gmail.com"">paymentfillle+28825@gmail.com</a>
<a href=""mailto:paymentfillle+14612@gmail.com"">paymentfillle+14612@gmail.com</a>
<a href=""mailto:paymentfillle+617@gmail.com"">paymentfillle+617@gmail.com</a>
<a href=""mailto:paymentfillle+25097@gmail.com"">paymentfillle+25097@gmail.com</a>
<a href=""mailto:paymentfillle+12044@gmail.com"">paymentfillle+12044@gmail.com</a>
<a href=""mailto:paymentfillle+6414@gmail.com"">paymentfillle+6414@gmail.com</a>
<a href=""mailto:paymentfillle+22956@gmail.com"">paymentfillle+22956@gmail.com</a>
<a href=""mailto:paymentfillle+5888@gmail.com"">paymentfillle+5888@gmail.com</a>
<a href=""mailto:paymentfillle+26729@gmail.com"">paymentfillle+26729@gmail.com</a>
<a href=""mailto:paymentfillle+20031@gmail.com"">paymentfillle+20031@gmail.com</a>
<a href=""mailto:paymentfillle+29248@gmail.com"">paymentfillle+29248@gmail.com</a>
<a href=""mailto:paymentfillle+11729@gmail.com"">paymentfillle+11729@gmail.com</a>
<a href=""mailto:paymentfillle+5267@gmail.com"">paymentfillle+5267@gmail.com</a>
<a href=""mailto:paymentfillle+27546@gmail.com"">paymentfillle+27546@gmail.com</a>
<a href=""mailto:paymentfillle+23446@gmail.com"">paymentfillle+23446@gmail.com</a>
<a href=""mailto:paymentfillle+9180@gmail.com"">paymentfillle+9180@gmail.com</a>
<a href=""mailto:paymentfillle+9820@gmail.com"">paymentfillle+9820@gmail.com</a>
<a href=""mailto:paymentfillle+29807@gmail.com"">paymentfillle+29807@gmail.com</a>
<a href=""mailto:paymentfillle+23348@gmail.com"">paymentfillle+23348@gmail.com</a>
<a href=""mailto:paymentfillle+29451@gmail.com"">paymentfillle+29451@gmail.com</a>
<a href=""mailto:paymentfillle+31570@gmail.com"">paymentfillle+31570@gmail.com</a>
<a href=""mailto:paymentfillle+10990@gmail.com"">paymentfillle+10990@gmail.com</a>
<a href=""mailto:paymentfillle+18446@gmail.com"">paymentfillle+18446@gmail.com</a>
<a href=""mailto:paymentfillle+30600@gmail.com"">paymentfillle+30600@gmail.com</a>
<a href=""mailto:paymentfillle+11099@gmail.com"">paymentfillle+11099@gmail.com</a>
<a href=""mailto:paymentfillle+17077@gmail.com"">paymentfillle+17077@gmail.com</a>
<a href=""mailto:paymentfillle+31850@gmail.com"">paymentfillle+31850@gmail.com</a>
<a href=""mailto:paymentfillle+20610@gmail.com"">paymentfillle+20610@gmail.com</a>
<a href=""mailto:paymentfillle+28094@gmail.com"">paymentfillle+28094@gmail.com</a>
<a href=""mailto:paymentfillle+17638@gmail.com"">paymentfillle+17638@gmail.com</a>
<a href=""mailto:paymentfillle+24380@gmail.com"">paymentfillle+24380@gmail.com</a>
<a href=""mailto:paymentfillle+20710@gmail.com"">paymentfillle+20710@gmail.com</a>
<a href=""mailto:paymentfillle+19067@gmail.com"">paymentfillle+19067@gmail.com</a>
<a href=""mailto:paymentfillle+12579@gmail.com"">paymentfillle+12579@gmail.com</a>
<a href=""mailto:paymentfillle+25365@gmail.com"">paymentfillle+25365@gmail.com</a>
<a href=""mailto:paymentfillle+9540@gmail.com"">paymentfillle+9540@gmail.com</a>
<a href=""mailto:paymentfillle+15830@gmail.com"">paymentfillle+15830@gmail.com</a>
<a href=""mailto:paymentfillle+7769@gmail.com"">paymentfillle+7769@gmail.com</a>
<a href=""mailto:paymentfillle+18286@gmail.com"">paymentfillle+18286@gmail.com</a>
<a href=""mailto:paymentfillle+11329@gmail.com"">paymentfillle+11329@gmail.com</a>
<a href=""mailto:paymentfillle+22996@gmail.com"">paymentfillle+22996@gmail.com</a>
<a href=""mailto:paymentfillle+1949@gmail.com"">paymentfillle+1949@gmail.com</a>
<a href=""mailto:paymentfillle+20623@gmail.com"">paymentfillle+20623@gmail.com</a>
<a href=""mailto:paymentfillle+16996@gmail.com"">paymentfillle+16996@gmail.com</a>
<a href=""mailto:paymentfillle+6568@gmail.com"">paymentfillle+6568@gmail.com</a>
<a href=""mailto:paymentfillle+18202@gmail.com"">paymentfillle+18202@gmail.com</a>
<a href=""mailto:paymentfillle+18656@gmail.com"">paymentfillle+18656@gmail.com</a>
<a href=""mailto:paymentfillle+30203@gmail.com"">paymentfillle+30203@gmail.com</a>
<a href=""mailto:paymentfillle+19177@gmail.com"">paymentfillle+19177@gmail.com</a>
<a href=""mailto:paymentfillle+21171@gmail.com"">paymentfillle+21171@gmail.com</a>
<a href=""mailto:paymentfillle+20353@gmail.com"">paymentfillle+20353@gmail.com</a>
<a href=""mailto:paymentfillle+9135@gmail.com"">paymentfillle+9135@gmail.com</a>
<a href=""mailto:paymentfillle+13339@gmail.com"">paymentfillle+13339@gmail.com</a>
<a href=""mailto:paymentfillle+3826@gmail.com"">paymentfillle+3826@gmail.com</a>
<a href=""mailto:paymentfillle+28601@gmail.com"">paymentfillle+28601@gmail.com</a>
<a href=""mailto:paymentfillle+25464@gmail.com"">paymentfillle+25464@gmail.com</a>
<a href=""mailto:paymentfillle+31078@gmail.com"">paymentfillle+31078@gmail.com</a>
<a href=""mailto:paymentfillle+12739@gmail.com"">paymentfillle+12739@gmail.com</a>
<a href=""mailto:aminumuhammad9800@gmail.com"">aminumuhammad9800@gmail.com</a>
<a href=""mailto:aminumuhammad9800+9736@gmail.com"">aminumuhammad9800+9736@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7506@gmail.com"">aminumuhammad9800+7506@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2564@gmail.com"">aminumuhammad9800+2564@gmail.com</a>
<a href=""mailto:aminumuhammad9800+31196@gmail.com"">aminumuhammad9800+31196@gmail.com</a>
<a href=""mailto:aminumuhammad9800+6743@gmail.com"">aminumuhammad9800+6743@gmail.com</a>
<a href=""mailto:aminumuhammad9800+15881@gmail.com"">aminumuhammad9800+15881@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7963@gmail.com"">aminumuhammad9800+7963@gmail.com</a>
<a href=""mailto:aminumuhammad9800+17572@gmail.com"">aminumuhammad9800+17572@gmail.com</a>
<a href=""mailto:aminumuhammad9800+11863@gmail.com"">aminumuhammad9800+11863@gmail.com</a>
<a href=""mailto:aminumuhammad9800+6408@gmail.com"">aminumuhammad9800+6408@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2226@gmail.com"">aminumuhammad9800+2226@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7691@gmail.com"">aminumuhammad9800+7691@gmail.com</a>
<a href=""mailto:aminumuhammad9800+29831@gmail.com"">aminumuhammad9800+29831@gmail.com</a>
<a href=""mailto:aminumuhammad9800+9368@gmail.com"">aminumuhammad9800+9368@gmail.com</a>
<a href=""mailto:aminumuhammad9800+14754@gmail.com"">aminumuhammad9800+14754@gmail.com</a>
<a href=""mailto:aminumuhammad9800+30219@gmail.com"">aminumuhammad9800+30219@gmail.com</a>
<a href=""mailto:aminumuhammad9800+18763@gmail.com"">aminumuhammad9800+18763@gmail.com</a>
<a href=""mailto:aminumuhammad9800+25196@gmail.com"">aminumuhammad9800+25196@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2316@gmail.com"">aminumuhammad9800+2316@gmail.com</a>
<a href=""mailto:aminumuhammad9800+25433@gmail.com"">aminumuhammad9800+25433@gmail.com</a>
<a href=""mailto:aminumuhammad9800+14916@gmail.com"">aminumuhammad9800+14916@gmail.com</a>
<a href=""mailto:aminumuhammad9800+25211@gmail.com"">aminumuhammad9800+25211@gmail.com</a>
<a href=""mailto:aminumuhammad9800+9050@gmail.com"">aminumuhammad9800+9050@gmail.com</a>
<a href=""mailto:aminumuhammad9800+16181@gmail.com"">aminumuhammad9800+16181@gmail.com</a>
<a href=""mailto:aminumuhammad9800+30196@gmail.com"">aminumuhammad9800+30196@gmail.com</a>
<a href=""mailto:aminumuhammad9800+4231@gmail.com"">aminumuhammad9800+4231@gmail.com</a>
<a href=""mailto:aminumuhammad9800+29874@gmail.com"">aminumuhammad9800+29874@gmail.com</a>
<a href=""mailto:aminumuhammad9800+29322@gmail.com"">aminumuhammad9800+29322@gmail.com</a>
<a href=""mailto:aminumuhammad9800+5150@gmail.com"">aminumuhammad9800+5150@gmail.com</a>
<a href=""mailto:aminumuhammad9800+13675@gmail.com"">aminumuhammad9800+13675@gmail.com</a>
<a href=""mailto:aminumuhammad9800+50@gmail.com"">aminumuhammad9800+50@gmail.com</a>
<a href=""mailto:aminumuhammad9800+12852@gmail.com"">aminumuhammad9800+12852@gmail.com</a>
<a href=""mailto:aminumuhammad9800+25348@gmail.com"">aminumuhammad9800+25348@gmail.com</a>
<a href=""mailto:aminumuhammad9800+15640@gmail.com"">aminumuhammad9800+15640@gmail.com</a>
<a href=""mailto:aminumuhammad9800+21563@gmail.com"">aminumuhammad9800+21563@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2512@gmail.com"">aminumuhammad9800+2512@gmail.com</a>
<a href=""mailto:aminumuhammad9800+32038@gmail.com"">aminumuhammad9800+32038@gmail.com</a>
<a href=""mailto:aminumuhammad9800+15255@gmail.com"">aminumuhammad9800+15255@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2363@gmail.com"">aminumuhammad9800+2363@gmail.com</a>
<a href=""mailto:aminumuhammad9800+18818@gmail.com"">aminumuhammad9800+18818@gmail.com</a>
<a href=""mailto:aminumuhammad9800+32712@gmail.com"">aminumuhammad9800+32712@gmail.com</a>
<a href=""mailto:aminumuhammad9800+19546@gmail.com"">aminumuhammad9800+19546@gmail.com</a>
<a href=""mailto:aminumuhammad9800+24837@gmail.com"">aminumuhammad9800+24837@gmail.com</a>
<a href=""mailto:aminumuhammad9800+9839@gmail.com"">aminumuhammad9800+9839@gmail.com</a>
<a href=""mailto:aminumuhammad9800+22196@gmail.com"">aminumuhammad9800+22196@gmail.com</a>
<a href=""mailto:aminumuhammad9800+17665@gmail.com"">aminumuhammad9800+17665@gmail.com</a>
<a href=""mailto:aminumuhammad9800+20543@gmail.com"">aminumuhammad9800+20543@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7850@gmail.com"">aminumuhammad9800+7850@gmail.com</a>
<a href=""mailto:aminumuhammad9800+24387@gmail.com"">aminumuhammad9800+24387@gmail.com</a>
<a href=""mailto:aminumuhammad9800+22223@gmail.com"">aminumuhammad9800+22223@gmail.com</a>
<a href=""mailto:aminumuhammad9800+30390@gmail.com"">aminumuhammad9800+30390@gmail.com</a>
<a href=""mailto:aminumuhammad9800+19117@gmail.com"">aminumuhammad9800+19117@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7088@gmail.com"">aminumuhammad9800+7088@gmail.com</a>
<a href=""mailto:aminumuhammad9800+14224@gmail.com"">aminumuhammad9800+14224@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7963@gmail.com"">aminumuhammad9800+7963@gmail.com</a>
<a href=""mailto:aminumuhammad9800+938@gmail.com"">aminumuhammad9800+938@gmail.com</a>
<a href=""mailto:aminumuhammad9800+20454@gmail.com"">aminumuhammad9800+20454@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2926@gmail.com"">aminumuhammad9800+2926@gmail.com</a>
<a href=""mailto:aminumuhammad9800+32294@gmail.com"">aminumuhammad9800+32294@gmail.com</a>
<a href=""mailto:aminumuhammad9800+7655@gmail.com"">aminumuhammad9800+7655@gmail.com</a>
<a href=""mailto:aminumuhammad9800+32757@gmail.com"">aminumuhammad9800+32757@gmail.com</a>
<a href=""mailto:aminumuhammad9800+1191@gmail.com"">aminumuhammad9800+1191@gmail.com</a>
<a href=""mailto:aminumuhammad9800+10141@gmail.com"">aminumuhammad9800+10141@gmail.com</a>
<a href=""mailto:aminumuhammad9800+18721@gmail.com"">aminumuhammad9800+18721@gmail.com</a>
<a href=""mailto:aminumuhammad9800+13656@gmail.com"">aminumuhammad9800+13656@gmail.com</a>
<a href=""mailto:aminumuhammad9800+23826@gmail.com"">aminumuhammad9800+23826@gmail.com</a>
<a href=""mailto:aminumuhammad9800+1778@gmail.com"">aminumuhammad9800+1778@gmail.com</a>
<a href=""mailto:aminumuhammad9800+2561@gmail.com"">aminumuhammad9800+2561@gmail.com</a>
<a href=""mailto:aminumuhammad9800+8607@gmail.com"">aminumuhammad9800+8607@gmail.com</a>
<a href=""mailto:aminumuhammad9800+27977@gmail.com"">aminumuhammad9800+27977@gmail.com</a>
<a href=""mailto:aminumuhammad9800+18435@gmail.com"">aminumuhammad9800+18435@gmail.com</a>
<a href=""mailto:aminumuhammad9800+10669@gmail.com"">aminumuhammad9800+10669@gmail.com</a>
<a href=""mailto:aminumuhammad9800+10240@gmail.com"">aminumuhammad9800+10240@gmail.com</a>
<a href=""mailto:aminumuhammad9800+25716@gmail.com"">aminumuhammad9800+25716@gmail.com</a>
<a href=""mailto:aminumuhammad9800+30219@gmail.com"">aminumuhammad9800+30219@gmail.com</a>
<a href=""mailto:aminumuhammad9800+31179@gmail.com"">aminumuhammad9800+31179@gmail.com</a>
<a href=""mailto:aminumuhammad9800+23855@gmail.com"">aminumuhammad9800+23855@gmail.com</a>
<a href=""mailto:aminumuhammad9800+14109@gmail.com"">aminumuhammad9800+14109@gmail.com</a>
<a href=""mailto:aminumuhammad9800+20068@gmail.com"">aminumuhammad9800+20068@gmail.com</a>
<a href=""mailto:aminumuhammad9800+17596@gmail.com"">aminumuhammad9800+17596@gmail.com</a>
<a href=""mailto:aminumuhammad9800+15759@gmail.com"">aminumuhammad9800+15759@gmail.com</a>
<a href=""mailto:aminumuhammad9800+24934@gmail.com"">aminumuhammad9800+24934@gmail.com</a>
<a href=""mailto:aminumuhammad9800+13927@gmail.com"">aminumuhammad9800+13927@gmail.com</a>
<a href=""mailto:aminumuhammad9800+10869@gmail.com"">aminumuhammad9800+10869@gmail.com</a>
<a href=""mailto:aminumuhammad9800+26893@gmail.com"">aminumuhammad9800+26893@gmail.com</a>
<a href=""mailto:aminumuhammad9800+26299@gmail.com"">aminumuhammad9800+26299@gmail.com</a>
<a href=""mailto:aminumuhammad9800+29208@gmail.com"">aminumuhammad9800+29208@gmail.com</a>
<a href=""mailto:aminumuhammad9800+12868@gmail.com"">aminumuhammad9800+12868@gmail.com</a>
<a href=""mailto:aminumuhammad9800+11127@gmail.com"">aminumuhammad9800+11127@gmail.com</a>
<a href=""mailto:aminumuhammad9800+31842@gmail.com"">aminumuhammad9800+31842@gmail.com</a>
<a href=""mailto:aminumuhammad9800+22685@gmail.com"">aminumuhammad9800+22685@gmail.com</a>
<a href=""mailto:aminumuhammad9800+1713@gmail.com"">aminumuhammad9800+1713@gmail.com</a>
<a href=""mailto:aminumuhammad9800+76@gmail.com"">aminumuhammad9800+76@gmail.com</a>
<a href=""mailto:aminumuhammad9800+22336@gmail.com"">aminumuhammad9800+22336@gmail.com</a>
<a href=""mailto:aminumuhammad9800+5379@gmail.com"">aminumuhammad9800+5379@gmail.com</a>
<a href=""mailto:aminumuhammad9800+26008@gmail.com"">aminumuhammad9800+26008@gmail.com</a>
<a href=""mailto:aminumuhammad9800+29729@gmail.com"">aminumuhammad9800+29729@gmail.com</a>
<a href=""mailto:aminumuhammad9800+27980@gmail.com"">aminumuhammad9800+27980@gmail.com</a>
<a href=""mailto:aminumuhammad9800+30689@gmail.com"">aminumuhammad9800+30689@gmail.com</a>
<a href=""mailto:aminumuhammad9800+23204@gmail.com"">aminumuhammad9800+23204@gmail.com</a>
<a href=""mailto:agentvictorokle@gmail.com"">agentvictorokle@gmail.com</a>
<a href=""mailto:agentvictorokle+27391@gmail.com"">agentvictorokle+27391@gmail.com</a>
<a href=""mailto:agentvictorokle+11924@gmail.com"">agentvictorokle+11924@gmail.com</a>
<a href=""mailto:agentvictorokle+25166@gmail.com"">agentvictorokle+25166@gmail.com</a>
<a href=""mailto:agentvictorokle+5073@gmail.com"">agentvictorokle+5073@gmail.com</a>
<a href=""mailto:agentvictorokle+8757@gmail.com"">agentvictorokle+8757@gmail.com</a>
<a href=""mailto:agentvictorokle+30075@gmail.com"">agentvictorokle+30075@gmail.com</a>
<a href=""mailto:agentvictorokle+14548@gmail.com"">agentvictorokle+14548@gmail.com</a>
<a href=""mailto:agentvictorokle+8524@gmail.com"">agentvictorokle+8524@gmail.com</a>
<a href=""mailto:agentvictorokle+569@gmail.com"">agentvictorokle+569@gmail.com</a>
<a href=""mailto:agentvictorokle+22974@gmail.com"">agentvictorokle+22974@gmail.com</a>
<a href=""mailto:agentvictorokle+17452@gmail.com"">agentvictorokle+17452@gmail.com</a>
<a href=""mailto:agentvictorokle+31350@gmail.com"">agentvictorokle+31350@gmail.com</a>
<a href=""mailto:agentvictorokle+14201@gmail.com"">agentvictorokle+14201@gmail.com</a>
<a href=""mailto:agentvictorokle+24260@gmail.com"">agentvictorokle+24260@gmail.com</a>
<a href=""mailto:agentvictorokle+14105@gmail.com"">agentvictorokle+14105@gmail.com</a>
<a href=""mailto:agentvictorokle+25111@gmail.com"">agentvictorokle+25111@gmail.com</a>
<a href=""mailto:agentvictorokle+29142@gmail.com"">agentvictorokle+29142@gmail.com</a>
<a href=""mailto:agentvictorokle+14950@gmail.com"">agentvictorokle+14950@gmail.com</a>
<a href=""mailto:agentvictorokle+27208@gmail.com"">agentvictorokle+27208@gmail.com</a>
<a href=""mailto:agentvictorokle+4551@gmail.com"">agentvictorokle+4551@gmail.com</a>
<a href=""mailto:agentvictorokle+822@gmail.com"">agentvictorokle+822@gmail.com</a>
<a href=""mailto:agentvictorokle+1932@gmail.com"">agentvictorokle+1932@gmail.com</a>
<a href=""mailto:agentvictorokle+32309@gmail.com"">agentvictorokle+32309@gmail.com</a>
<a href=""mailto:agentvictorokle+2667@gmail.com"">agentvictorokle+2667@gmail.com</a>
<a href=""mailto:agentvictorokle+11880@gmail.com"">agentvictorokle+11880@gmail.com</a>
<a href=""mailto:agentvictorokle+30512@gmail.com"">agentvictorokle+30512@gmail.com</a>
<a href=""mailto:agentvictorokle+19052@gmail.com"">agentvictorokle+19052@gmail.com</a>
<a href=""mailto:agentvictorokle+21698@gmail.com"">agentvictorokle+21698@gmail.com</a>
<a href=""mailto:agentvictorokle+286@gmail.com"">agentvictorokle+286@gmail.com</a>
<a href=""mailto:agentvictorokle+29768@gmail.com"">agentvictorokle+29768@gmail.com</a>
<a href=""mailto:agentvictorokle+23877@gmail.com"">agentvictorokle+23877@gmail.com</a>
<a href=""mailto:agentvictorokle+14694@gmail.com"">agentvictorokle+14694@gmail.com</a>
<a href=""mailto:agentvictorokle+15727@gmail.com"">agentvictorokle+15727@gmail.com</a>
<a href=""mailto:agentvictorokle+3397@gmail.com"">agentvictorokle+3397@gmail.com</a>
<a href=""mailto:agentvictorokle+5054@gmail.com"">agentvictorokle+5054@gmail.com</a>
<a href=""mailto:agentvictorokle+9395@gmail.com"">agentvictorokle+9395@gmail.com</a>
<a href=""mailto:agentvictorokle+29014@gmail.com"">agentvictorokle+29014@gmail.com</a>
<a href=""mailto:agentvictorokle+22569@gmail.com"">agentvictorokle+22569@gmail.com</a>
<a href=""mailto:agentvictorokle+6579@gmail.com"">agentvictorokle+6579@gmail.com</a>
<a href=""mailto:agentvictorokle+2229@gmail.com"">agentvictorokle+2229@gmail.com</a>
<a href=""mailto:agentvictorokle+2203@gmail.com"">agentvictorokle+2203@gmail.com</a>
<a href=""mailto:agentvictorokle+818@gmail.com"">agentvictorokle+818@gmail.com</a>
<a href=""mailto:agentvictorokle+6088@gmail.com"">agentvictorokle+6088@gmail.com</a>
<a href=""mailto:agentvictorokle+9584@gmail.com"">agentvictorokle+9584@gmail.com</a>
<a href=""mailto:agentvictorokle+16290@gmail.com"">agentvictorokle+16290@gmail.com</a>
<a href=""mailto:agentvictorokle+7643@gmail.com"">agentvictorokle+7643@gmail.com</a>
<a href=""mailto:agentvictorokle+3264@gmail.com"">agentvictorokle+3264@gmail.com</a>
<a href=""mailto:agentvictorokle+30670@gmail.com"">agentvictorokle+30670@gmail.com</a>
<a href=""mailto:agentvictorokle+15903@gmail.com"">agentvictorokle+15903@gmail.com</a>
<a href=""mailto:agentvictorokle+11398@gmail.com"">agentvictorokle+11398@gmail.com</a>
<a href=""mailto:agentvictorokle+26228@gmail.com"">agentvictorokle+26228@gmail.com</a>
<a href=""mailto:agentvictorokle+19163@gmail.com"">agentvictorokle+19163@gmail.com</a>
<a href=""mailto:agentvictorokle+15152@gmail.com"">agentvictorokle+15152@gmail.com</a>
<a href=""mailto:agentvictorokle+16746@gmail.com"">agentvictorokle+16746@gmail.com</a>
<a href=""mailto:agentvictorokle+14180@gmail.com"">agentvictorokle+14180@gmail.com</a>
<a href=""mailto:agentvictorokle+13770@gmail.com"">agentvictorokle+13770@gmail.com</a>
<a href=""mailto:agentvictorokle+4551@gmail.com"">agentvictorokle+4551@gmail.com</a>
<a href=""mailto:agentvictorokle+24166@gmail.com"">agentvictorokle+24166@gmail.com</a>
<a href=""mailto:agentvictorokle+26295@gmail.com"">agentvictorokle+26295@gmail.com</a>
<a href=""mailto:agentvictorokle+24089@gmail.com"">agentvictorokle+24089@gmail.com</a>
<a href=""mailto:agentvictorokle+31067@gmail.com"">agentvictorokle+31067@gmail.com</a>
<a href=""mailto:agentvictorokle+21213@gmail.com"">agentvictorokle+21213@gmail.com</a>
<a href=""mailto:agentvictorokle+16105@gmail.com"">agentvictorokle+16105@gmail.com</a>
<a href=""mailto:agentvictorokle+5944@gmail.com"">agentvictorokle+5944@gmail.com</a>
<a href=""mailto:agentvictorokle+23390@gmail.com"">agentvictorokle+23390@gmail.com</a>
<a href=""mailto:agentvictorokle+30442@gmail.com"">agentvictorokle+30442@gmail.com</a>
<a href=""mailto:agentvictorokle+2832@gmail.com"">agentvictorokle+2832@gmail.com</a>
<a href=""mailto:agentvictorokle+23584@gmail.com"">agentvictorokle+23584@gmail.com</a>
<a href=""mailto:agentvictorokle+24784@gmail.com"">agentvictorokle+24784@gmail.com</a>
<a href=""mailto:agentvictorokle+25191@gmail.com"">agentvictorokle+25191@gmail.com</a>
<a href=""mailto:agentvictorokle+20817@gmail.com"">agentvictorokle+20817@gmail.com</a>
<a href=""mailto:agentvictorokle+18617@gmail.com"">agentvictorokle+18617@gmail.com</a>
<a href=""mailto:agentvictorokle+15424@gmail.com"">agentvictorokle+15424@gmail.com</a>
<a href=""mailto:agentvictorokle+20725@gmail.com"">agentvictorokle+20725@gmail.com</a>
<a href=""mailto:agentvictorokle+5834@gmail.com"">agentvictorokle+5834@gmail.com</a>
<a href=""mailto:agentvictorokle+20420@gmail.com"">agentvictorokle+20420@gmail.com</a>
<a href=""mailto:agentvictorokle+23444@gmail.com"">agentvictorokle+23444@gmail.com</a>
<a href=""mailto:agentvictorokle+16140@gmail.com"">agentvictorokle+16140@gmail.com</a>
<a href=""mailto:agentvictorokle+7813@gmail.com"">agentvictorokle+7813@gmail.com</a>
<a href=""mailto:agentvictorokle+31656@gmail.com"">agentvictorokle+31656@gmail.com</a>
<a href=""mailto:agentvictorokle+31394@gmail.com"">agentvictorokle+31394@gmail.com</a>
<a href=""mailto:agentvictorokle+28332@gmail.com"">agentvictorokle+28332@gmail.com</a>
<a href=""mailto:agentvictorokle+4835@gmail.com"">agentvictorokle+4835@gmail.com</a>
<a href=""mailto:agentvictorokle+28329@gmail.com"">agentvictorokle+28329@gmail.com</a>
<a href=""mailto:agentvictorokle+30471@gmail.com"">agentvictorokle+30471@gmail.com</a>
<a href=""mailto:agentvictorokle+14214@gmail.com"">agentvictorokle+14214@gmail.com</a>
<a href=""mailto:agentvictorokle+22120@gmail.com"">agentvictorokle+22120@gmail.com</a>
<a href=""mailto:agentvictorokle+29709@gmail.com"">agentvictorokle+29709@gmail.com</a>
<a href=""mailto:agentvictorokle+29885@gmail.com"">agentvictorokle+29885@gmail.com</a>
<a href=""mailto:agentvictorokle+16714@gmail.com"">agentvictorokle+16714@gmail.com</a>
<a href=""mailto:agentvictorokle+6095@gmail.com"">agentvictorokle+6095@gmail.com</a>
<a href=""mailto:agentvictorokle+20856@gmail.com"">agentvictorokle+20856@gmail.com</a>
<a href=""mailto:agentvictorokle+30591@gmail.com"">agentvictorokle+30591@gmail.com</a>
<a href=""mailto:agentvictorokle+31345@gmail.com"">agentvictorokle+31345@gmail.com</a>
<a href=""mailto:agentvictorokle+23854@gmail.com"">agentvictorokle+23854@gmail.com</a>
<a href=""mailto:agentvictorokle+13982@gmail.com"">agentvictorokle+13982@gmail.com</a>
<a href=""mailto:agentvictorokle+2419@gmail.com"">agentvictorokle+2419@gmail.com</a>
<a href=""mailto:agentvictorokle+7575@gmail.com"">agentvictorokle+7575@gmail.com</a>
<a href=""mailto:agentvictorokle+30239@gmail.com"">agentvictorokle+30239@gmail.com</a>
<a href=""mailto:agentvictorokle+25707@gmail.com"">agentvictorokle+25707@gmail.com</a>
<a href=""mailto:revjohnsonibe333@gmail.com"">revjohnsonibe333@gmail.com</a>
<a href=""mailto:revjohnsonibe333+1873@gmail.com"">revjohnsonibe333+1873@gmail.com</a>
<a href=""mailto:revjohnsonibe333+15321@gmail.com"">revjohnsonibe333+15321@gmail.com</a>
<a href=""mailto:revjohnsonibe333+7876@gmail.com"">revjohnsonibe333+7876@gmail.com</a>
<a href=""mailto:revjohnsonibe333+16712@gmail.com"">revjohnsonibe333+16712@gmail.com</a>
<a href=""mailto:revjohnsonibe333+20897@gmail.com"">revjohnsonibe333+20897@gmail.com</a>
<a href=""mailto:revjohnsonibe333+544@gmail.com"">revjohnsonibe333+544@gmail.com</a>
<a href=""mailto:revjohnsonibe333+29184@gmail.com"">revjohnsonibe333+29184@gmail.com</a>
<a href=""mailto:revjohnsonibe333+29924@gmail.com"">revjohnsonibe333+29924@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4708@gmail.com"">revjohnsonibe333+4708@gmail.com</a>
<a href=""mailto:revjohnsonibe333+15147@gmail.com"">revjohnsonibe333+15147@gmail.com</a>
<a href=""mailto:revjohnsonibe333+10203@gmail.com"">revjohnsonibe333+10203@gmail.com</a>
<a href=""mailto:revjohnsonibe333+13147@gmail.com"">revjohnsonibe333+13147@gmail.com</a>
<a href=""mailto:revjohnsonibe333+17874@gmail.com"">revjohnsonibe333+17874@gmail.com</a>
<a href=""mailto:revjohnsonibe333+29821@gmail.com"">revjohnsonibe333+29821@gmail.com</a>
<a href=""mailto:revjohnsonibe333+27668@gmail.com"">revjohnsonibe333+27668@gmail.com</a>
<a href=""mailto:revjohnsonibe333+28799@gmail.com"">revjohnsonibe333+28799@gmail.com</a>
<a href=""mailto:revjohnsonibe333+2071@gmail.com"">revjohnsonibe333+2071@gmail.com</a>
<a href=""mailto:revjohnsonibe333+7572@gmail.com"">revjohnsonibe333+7572@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4297@gmail.com"">revjohnsonibe333+4297@gmail.com</a>
<a href=""mailto:revjohnsonibe333+29684@gmail.com"">revjohnsonibe333+29684@gmail.com</a>
<a href=""mailto:revjohnsonibe333+12775@gmail.com"">revjohnsonibe333+12775@gmail.com</a>
<a href=""mailto:revjohnsonibe333+25922@gmail.com"">revjohnsonibe333+25922@gmail.com</a>
<a href=""mailto:revjohnsonibe333+6922@gmail.com"">revjohnsonibe333+6922@gmail.com</a>
<a href=""mailto:revjohnsonibe333+1642@gmail.com"">revjohnsonibe333+1642@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23932@gmail.com"">revjohnsonibe333+23932@gmail.com</a>
<a href=""mailto:revjohnsonibe333+16081@gmail.com"">revjohnsonibe333+16081@gmail.com</a>
<a href=""mailto:revjohnsonibe333+7866@gmail.com"">revjohnsonibe333+7866@gmail.com</a>
<a href=""mailto:revjohnsonibe333+1126@gmail.com"">revjohnsonibe333+1126@gmail.com</a>
<a href=""mailto:revjohnsonibe333+8339@gmail.com"">revjohnsonibe333+8339@gmail.com</a>
<a href=""mailto:revjohnsonibe333+19816@gmail.com"">revjohnsonibe333+19816@gmail.com</a>
<a href=""mailto:revjohnsonibe333+26639@gmail.com"">revjohnsonibe333+26639@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23600@gmail.com"">revjohnsonibe333+23600@gmail.com</a>
<a href=""mailto:revjohnsonibe333+26528@gmail.com"">revjohnsonibe333+26528@gmail.com</a>
<a href=""mailto:revjohnsonibe333+5890@gmail.com"">revjohnsonibe333+5890@gmail.com</a>
<a href=""mailto:revjohnsonibe333+32199@gmail.com"">revjohnsonibe333+32199@gmail.com</a>
<a href=""mailto:revjohnsonibe333+21768@gmail.com"">revjohnsonibe333+21768@gmail.com</a>
<a href=""mailto:revjohnsonibe333+10111@gmail.com"">revjohnsonibe333+10111@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4889@gmail.com"">revjohnsonibe333+4889@gmail.com</a>
<a href=""mailto:revjohnsonibe333+7974@gmail.com"">revjohnsonibe333+7974@gmail.com</a>
<a href=""mailto:revjohnsonibe333+5724@gmail.com"">revjohnsonibe333+5724@gmail.com</a>
<a href=""mailto:revjohnsonibe333+13372@gmail.com"">revjohnsonibe333+13372@gmail.com</a>
<a href=""mailto:revjohnsonibe333+27158@gmail.com"">revjohnsonibe333+27158@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4482@gmail.com"">revjohnsonibe333+4482@gmail.com</a>
<a href=""mailto:revjohnsonibe333+8055@gmail.com"">revjohnsonibe333+8055@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3663@gmail.com"">revjohnsonibe333+3663@gmail.com</a>
<a href=""mailto:revjohnsonibe333+15463@gmail.com"">revjohnsonibe333+15463@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23263@gmail.com"">revjohnsonibe333+23263@gmail.com</a>
<a href=""mailto:revjohnsonibe333+11946@gmail.com"">revjohnsonibe333+11946@gmail.com</a>
<a href=""mailto:revjohnsonibe333+19632@gmail.com"">revjohnsonibe333+19632@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3274@gmail.com"">revjohnsonibe333+3274@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23799@gmail.com"">revjohnsonibe333+23799@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3225@gmail.com"">revjohnsonibe333+3225@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4393@gmail.com"">revjohnsonibe333+4393@gmail.com</a>
<a href=""mailto:revjohnsonibe333+26339@gmail.com"">revjohnsonibe333+26339@gmail.com</a>
<a href=""mailto:revjohnsonibe333+19161@gmail.com"">revjohnsonibe333+19161@gmail.com</a>
<a href=""mailto:revjohnsonibe333+7762@gmail.com"">revjohnsonibe333+7762@gmail.com</a>
<a href=""mailto:revjohnsonibe333+12559@gmail.com"">revjohnsonibe333+12559@gmail.com</a>
<a href=""mailto:revjohnsonibe333+30472@gmail.com"">revjohnsonibe333+30472@gmail.com</a>
<a href=""mailto:revjohnsonibe333+19305@gmail.com"">revjohnsonibe333+19305@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4102@gmail.com"">revjohnsonibe333+4102@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4908@gmail.com"">revjohnsonibe333+4908@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23735@gmail.com"">revjohnsonibe333+23735@gmail.com</a>
<a href=""mailto:revjohnsonibe333+28280@gmail.com"">revjohnsonibe333+28280@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3697@gmail.com"">revjohnsonibe333+3697@gmail.com</a>
<a href=""mailto:revjohnsonibe333+12017@gmail.com"">revjohnsonibe333+12017@gmail.com</a>
<a href=""mailto:revjohnsonibe333+25648@gmail.com"">revjohnsonibe333+25648@gmail.com</a>
<a href=""mailto:revjohnsonibe333+1432@gmail.com"">revjohnsonibe333+1432@gmail.com</a>
<a href=""mailto:revjohnsonibe333+19277@gmail.com"">revjohnsonibe333+19277@gmail.com</a>
<a href=""mailto:revjohnsonibe333+11344@gmail.com"">revjohnsonibe333+11344@gmail.com</a>
<a href=""mailto:revjohnsonibe333+24859@gmail.com"">revjohnsonibe333+24859@gmail.com</a>
<a href=""mailto:revjohnsonibe333+10119@gmail.com"">revjohnsonibe333+10119@gmail.com</a>
<a href=""mailto:revjohnsonibe333+30446@gmail.com"">revjohnsonibe333+30446@gmail.com</a>
<a href=""mailto:revjohnsonibe333+17214@gmail.com"">revjohnsonibe333+17214@gmail.com</a>
<a href=""mailto:revjohnsonibe333+14866@gmail.com"">revjohnsonibe333+14866@gmail.com</a>
<a href=""mailto:revjohnsonibe333+24888@gmail.com"">revjohnsonibe333+24888@gmail.com</a>
<a href=""mailto:revjohnsonibe333+8954@gmail.com"">revjohnsonibe333+8954@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3539@gmail.com"">revjohnsonibe333+3539@gmail.com</a>
<a href=""mailto:revjohnsonibe333+14009@gmail.com"">revjohnsonibe333+14009@gmail.com</a>
<a href=""mailto:revjohnsonibe333+9639@gmail.com"">revjohnsonibe333+9639@gmail.com</a>
<a href=""mailto:revjohnsonibe333+22861@gmail.com"">revjohnsonibe333+22861@gmail.com</a>
<a href=""mailto:revjohnsonibe333+1004@gmail.com"">revjohnsonibe333+1004@gmail.com</a>
<a href=""mailto:revjohnsonibe333+18030@gmail.com"">revjohnsonibe333+18030@gmail.com</a>
<a href=""mailto:revjohnsonibe333+16649@gmail.com"">revjohnsonibe333+16649@gmail.com</a>
<a href=""mailto:revjohnsonibe333+16915@gmail.com"">revjohnsonibe333+16915@gmail.com</a>
<a href=""mailto:revjohnsonibe333+18214@gmail.com"">revjohnsonibe333+18214@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23494@gmail.com"">revjohnsonibe333+23494@gmail.com</a>
<a href=""mailto:revjohnsonibe333+5948@gmail.com"">revjohnsonibe333+5948@gmail.com</a>
<a href=""mailto:revjohnsonibe333+27868@gmail.com"">revjohnsonibe333+27868@gmail.com</a>
<a href=""mailto:revjohnsonibe333+4463@gmail.com"">revjohnsonibe333+4463@gmail.com</a>
<a href=""mailto:revjohnsonibe333+22054@gmail.com"">revjohnsonibe333+22054@gmail.com</a>
<a href=""mailto:revjohnsonibe333+31113@gmail.com"">revjohnsonibe333+31113@gmail.com</a>
<a href=""mailto:revjohnsonibe333+16815@gmail.com"">revjohnsonibe333+16815@gmail.com</a>
<a href=""mailto:revjohnsonibe333+30197@gmail.com"">revjohnsonibe333+30197@gmail.com</a>
<a href=""mailto:revjohnsonibe333+26094@gmail.com"">revjohnsonibe333+26094@gmail.com</a>
<a href=""mailto:revjohnsonibe333+18202@gmail.com"">revjohnsonibe333+18202@gmail.com</a>
<a href=""mailto:revjohnsonibe333+28805@gmail.com"">revjohnsonibe333+28805@gmail.com</a>
<a href=""mailto:revjohnsonibe333+10605@gmail.com"">revjohnsonibe333+10605@gmail.com</a>
<a href=""mailto:revjohnsonibe333+29236@gmail.com"">revjohnsonibe333+29236@gmail.com</a>
<a href=""mailto:revjohnsonibe333+23822@gmail.com"">revjohnsonibe333+23822@gmail.com</a>
<a href=""mailto:revjohnsonibe333+3226@gmail.com"">revjohnsonibe333+3226@gmail.com</a>"
JneDFxme,NoteBlock,SansRomkicklik,Lua,Monday 14th of August 2023 11:29:08 AM CDT,"local nb = component.note_block
if nb == nil then
    os.execute(""reboot"")
else
	nb.setPitch(1)
    nb.trigger()
    os.sleep(0.3)
       nb.trigger()
    os.sleep(0.3)
    nb.setPitch(3)
        nb.trigger()
    os.sleep(0.3)
        nb.trigger()
    os.sleep(0.3)
        nb.setPitch(5)
        nb.trigger()
    os.sleep(0.3)
        nb.trigger()
    os.sleep(0.3)
	nb.setPitch(7)
	    nb.trigger()
    os.sleep(0.3)
    	    nb.trigger()
    os.sleep(0.3)
    
end"
nCUnGwMp,Untitled,zbx1425,JavaScript,Monday 14th of August 2023 11:19:02 AM CDT,"
function renderTrainParticles(ctx, state, train, trainExt, trainInAir) {
  if (!foundMadParticle) return;

  for (i = 0; i < train.trainCars; i++) {
    zPos = 0;
    if (i == 0 && train.trainCars == 1) {
      zPos = 0;
    } else if (i == 0) {
      zPos = 3;
    } else if (i == train.trainCars - 1) {
      zPos = -3;
    } else {
      zPos = false;
    }

    if (zPos !== false && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, zPos));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, zPos));
    }
    if (i != train.trainCars - 1 && train.trainCars > 1 && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, -5));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, -5));
    }
  }
}

// int targetParticle, SpriteFrom spriteFrom, int lifeTime,
// InheritableBoolean alwaysRender, int amount,
// double px, double py, double pz, double xDiffuse, double yDiffuse, double zDiffuse,
// double vx, double vy, double vz, double vxDiffuse, double vyDiffuse, double vzDiffuse,
// float friction, float gravity, InheritableBoolean collision, int bounceTime,
// double horizontalRelativeCollisionDiffuse, double verticalRelativeCollisionBounce,
// float afterCollisionFriction, float afterCollisionGravity,
// InheritableBoolean interactWithEntity,
// double horizontalInteractFactor, double verticalInteractFactor,
// ParticleRenderTypes renderType, float r, float g, float b,
// float beginAlpha, float endAlpha, ChangeMode alphaMode,
// float beginScale, float endScale, ChangeMode scaleMode,
// boolean haveChild, MadParticleOption child,
// float rollSpeed,
// float xDeflection, float xDeflectionAfterCollision,
// float zDeflection, float zDeflectionAfterCollision,
// float bloomFactor,
// CompoundTag meta

function addEngineParticles(basePose, originOffset) {
  particleOrigin = basePose.transform(originOffset);

  particleDirection = new Vector3f(0, -0.4, 0);
  metaTag2 = new CompoundTag();
  particleOption2 = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:campfire_cosy_smoke"")), SpriteFrom.RANDOM, 60,
    InheritableBoolean.TRUE, 2,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.2, 0.2, 0.2,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.02, 0.04, 0.02,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0.2, 0.2,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1.8, 2.5,
    1, 0.3, ChangeMode.LINEAR,
    2, 9, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    metaTag2
  );
  metaTag1 = new CompoundTag();
  particleOption1 = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:totem_of_undying"")), SpriteFrom.RANDOM, 12,
    InheritableBoolean.TRUE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.3, 0.2, 0.3,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.04, 0.04, 0.04,
    0.98, 0.01, InheritableBoolean.FALSE, 0,
    0.2, 0.2,
    0.6, 1.25,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 0.39, 0,
    1, 1, ChangeMode.LINEAR,
    1, 3, ChangeMode.LINEAR,
    true, particleOption2,
    0,
    0, 0,
    0, 0,
    1,
    metaTag2
  );
  AddParticleHelper.addParticle(particleOption1);

  particleDirection = new Vector3f(0, -0.3, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:flame"")),
    SpriteFrom.RANDOM, 8,
    InheritableBoolean.FALSE, 2,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.1, 0.2, 0.1,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    2, 0, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    1,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

  originOffset.add(0, 6, 0);
  particleOrigin = basePose.transform(originOffset);
  particleDirection = new Vector3f(0, -0.6, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:smoke"")),
    SpriteFrom.RANDOM, 5,
    InheritableBoolean.FALSE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0, 0.2, 0,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    0.1, 2, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

}"
ndrRjfJA,Template Pizza Example,Idanref,TypeScript,Monday 14th of August 2023 11:18:55 AM CDT,"abstract class PizzaTemplate {
  public printRecipe(): void {
    this.createDough();
    this.createSauce();
    this.putSauceOnDough();
    this.putCheeseOnDough();
    this.putAdditionalItems();
  } 
  
  // Can't be overwritten
  private createDough(): void {
    console.log(""Creating the dough..."")
  }

  // Has to be implemented by subclasses.
  protected abstract createSauce(): void;

  // Can't be overwritten by subclasses
  private putSauceOnDough(): void {
    console.log(""Pouring the sauce..."")
  }

  // Can be overwritten by subclasses
  protected putCheeseOnDough(): void { }

  protected putAdditionalItems(): void { }
}

class VeganPizza extends PizzaTemplate {
  protected createSauce(): void {
    console.log(""Creating tomato sauce..."");
  }

  protected putAdditionalItems(): void {
    console.log(""Putting tofu.."")
  }
}

class PestoPizza extends PizzaTemplate {
  protected createSauce(): void {
    console.log(""Creating pesto sauce..."");
  }

  protected putCheeseOnDough(): void {
    console.log(""Putting cheese..."");
  }

  protected putAdditionalItems(): void {
    console.log(""Putting kalamata olives..."");
  }
}

function clientCode(PizzaTemplate: PizzaTemplate) {
  PizzaTemplate.printRecipe();
}

clientCode(new VeganPizza());
console.log(""======================="")
clientCode(new PestoPizza());"
yKw7e4Dh,SLT,ucme316,CSS,Monday 14th of August 2023 11:08:57 AM CDT,"Parent website: https://www.dealerleads.com/
Target product: https://www.lot.net/

-------------------------------------------------
BACKLINKS
Goal: Reassess the viability of backlinks, check the assessments

Parameters
SEO: DA, Linked Domains, Spam score, Backlinks, Monthly Traffic
Distribution: Posting method, special restrictions, paid/free

--------------------------------------------------------------
CONTENT
Goal: Build parameters for review

Areas to explore
- Editorial: Flow, grammar, spelling, English US, 
- SEO: Keywords used, density, long tail
- Tools: To initially assess the above, that are free to use, or a loophole to use for free

"
1LxBGa2S,Every Second You Get +1 WalkSpeed,hellsing_zxc,Lua,Monday 14th of August 2023 11:07:05 AM CDT,"repeat wait(0.1) until game:IsLoaded()

local library = loadstring(Game:HttpGet(""https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard""))()

getgenv().settings = {
    autoFarm = false
}
local path = game.Workspace.Worlds.Worlds
local position = CFrame.new(8769, -2, 15301)

local worldString = {
    ""Earth"",
    ""Moon"",
    ""Lava"",
    ""Ice"",
    ""Flower"",
    ""Snow"",
    ""Dark"",
    ""Void"",
    ""Desert""
}

local function teleportTo(pos)
    game.Players.LocalPlayer.Character:PivotTo(pos)
end

local function autoFarm()
    spawn(function()
        while settings.autoFarm do
            wait()
            if game.Players.LocalPlayer.leaderstats.WalkSpeed.Value >= 200 then
                game.Players.LocalPlayer.Character:PivotTo(position)
            end
        end
    end)
end

local main = library:NewWindow(""Luxury Script"")

local menu = main:NewSection(""Menu"")

local teleports = main:NewSection(""Teleports"")

menu:CreateToggle(""AutoFarm Wins"", function(value)
    settings.autoFarm = value
    if value then
        autoFarm()
    end
end)

teleports:CreateButton(worldString[1], function() teleportTo(path.World1Earth.Baseplate.CFrame) end)
teleports:CreateButton(worldString[2], function() teleportTo(path.World2Moon.Baseplate.CFrame) end)
teleports:CreateButton(worldString[3], function() teleportTo(path.World3Lava.Baseplate.CFrame) end)
teleports:CreateButton(worldString[4], function() teleportTo(path.World4Ice.Baseplate.CFrame) end)
teleports:CreateButton(worldString[5], function() teleportTo(path.World5Ice.Baseplate.CFrame) end)
teleports:CreateButton(worldString[6], function() teleportTo(path.World6Snow.Baseplate.CFrame) end)
teleports:CreateButton(worldString[7], function() teleportTo(path.World7Dark.Baseplate.CFrame) end)
teleports:CreateButton(worldString[8], function() teleportTo(path.World8Dark.Baseplate.CFrame) end)
teleports:CreateButton(worldString[9], function() teleportTo(path.World9Desert.Baseplate.CFrame) end)"
dnajPQgB,News Aug14 23,Newscaster_Ned,Email,Monday 14th of August 2023 10:44:35 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎'‎m‎ ‎a‎l‎i‎v‎e‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎h‎y‎?‎

'‎I‎ ‎J‎u‎s‎t‎ ‎W‎a‎n‎t‎ ‎t‎o‎ ‎F‎i‎n‎d‎'‎ ‎v‎s‎.‎ ‎'‎F‎i‎n‎d‎ ‎M‎e‎ ‎t‎h‎e‎ ‎V‎o‎t‎e‎s‎'‎:‎ ‎I‎n‎d‎i‎c‎t‎m‎e‎n‎t‎ ‎M‎a‎y‎ ‎H‎i‎n‎g‎e‎ ‎o‎n‎ ‎C‎a‎l‎l‎
'‎S‎o‎u‎n‎d‎ ‎o‎f‎ ‎F‎r‎e‎e‎d‎o‎m‎'‎ ‎T‎o‎p‎s‎ ‎'‎I‎n‎d‎i‎a‎n‎a‎ ‎J‎o‎n‎e‎s‎ ‎5‎'‎ ‎a‎t‎ ‎B‎o‎x‎ ‎O‎f‎f‎i‎c‎e‎
C‎l‎a‎r‎e‎n‎c‎e‎ ‎A‎v‎a‎n‎t‎,‎ ‎L‎e‎g‎e‎n‎d‎a‎r‎y‎ ‎M‎u‎s‎i‎c‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎,‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎9‎2‎
W‎a‎r‎n‎i‎n‎g‎ ‎S‎w‎e‎d‎i‎s‎h‎ ‎T‎o‎u‎r‎i‎s‎t‎s‎ ‎M‎a‎y‎ ‎b‎e‎ ‎a‎ ‎T‎e‎r‎r‎o‎r‎ ‎T‎a‎r‎g‎e‎t‎ ‎A‎f‎t‎e‎r‎ ‎Q‎u‎r‎'‎a‎n‎ ‎B‎u‎r‎n‎i‎n‎g‎s‎
F‎i‎t‎c‎h‎ ‎M‎a‎i‎n‎t‎a‎i‎n‎s‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎A‎+‎ ‎C‎r‎e‎d‎i‎t‎ ‎R‎a‎t‎i‎n‎g‎;‎ ‎O‎u‎t‎l‎o‎o‎k‎ ‎'‎S‎t‎a‎b‎l‎e‎'‎
A‎t‎ ‎L‎e‎a‎s‎t‎ ‎2‎3‎ ‎S‎h‎o‎t‎ ‎D‎u‎r‎i‎n‎g‎ ‎W‎e‎e‎k‎e‎n‎d‎ ‎i‎n‎ ‎M‎a‎y‎o‎r‎ ‎B‎r‎a‎n‎d‎o‎n‎ ‎J‎o‎h‎n‎s‎o‎n‎'‎s‎ ‎C‎h‎i‎c‎a‎g‎o‎
A‎i‎r‎ ‎F‎a‎r‎c‎e‎ ‎O‎n‎e‎:‎ ‎G‎e‎r‎m‎a‎n‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎S‎t‎u‎c‎k‎ ‎A‎f‎t‎e‎r‎ ‎G‎o‎v‎ ‎J‎e‎t‎ ‎F‎a‎i‎l‎s‎ ‎A‎g‎a‎i‎n‎
P‎o‎l‎a‎n‎d‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎T‎w‎o‎ ‎o‎n‎ ‎S‎u‎s‎p‎i‎c‎i‎o‎n‎ ‎o‎f‎ ‎W‎a‎g‎n‎e‎r‎ ‎P‎M‎C‎ ‎L‎i‎n‎k‎s‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
R‎e‎p‎o‎r‎t‎:‎ ‎A‎f‎t‎e‎r‎ ‎H‎o‎u‎r‎s‎ ‎o‎n‎ ‎B‎e‎a‎c‎h‎,‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎‘‎N‎o‎ ‎C‎o‎m‎m‎e‎n‎t‎’‎ ‎A‎b‎o‎u‎t‎ ‎R‎i‎s‎i‎n‎g‎ ‎D‎e‎a‎t‎h‎ ‎T‎o‎l‎l‎ ‎i‎n‎ ‎H‎a‎w‎a‎i‎i‎
T‎O‎P‎S‎H‎O‎T‎ ‎-‎ ‎U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎(‎L‎)‎ ‎a‎n‎d‎ ‎U‎S‎ ‎F‎i‎r‎s‎t‎ ‎L‎a‎d‎y‎ ‎J‎i‎l‎l‎ ‎B‎i‎d‎e‎n‎ ‎s‎i‎t‎ ‎u‎n‎d‎e‎r‎ ‎a‎n‎ ‎u‎m‎b‎r‎e‎l‎l‎a‎ ‎i‎n‎ ‎R‎e‎h‎o‎b‎o‎t‎h‎ ‎B‎e‎a‎c‎h‎,‎ ‎D‎e‎l‎a‎w‎a‎r‎e‎,‎ ‎o‎n‎ ‎J‎u‎l‎y‎ ‎3‎0‎,‎ ‎2‎0‎2‎3‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎J‎i‎m‎ ‎W‎A‎T‎S‎O‎N‎ ‎/‎ ‎A‎F‎P‎)‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎J‎I‎M‎ ‎W‎A‎T‎S‎O‎N‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎l‎y‎ ‎s‎a‎i‎d‎ ‎h‎e‎ ‎h‎a‎d‎ ‎“‎n‎o‎ ‎c‎o‎m‎m‎e‎n‎t‎”‎ ‎w‎h‎e‎n‎ ‎a‎s‎k‎e‎d‎ ‎S‎u‎n‎d‎a‎y‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎r‎i‎s‎i‎n‎g‎ ‎d‎e‎a‎t‎h‎ ‎t‎o‎l‎l‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎d‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎ ‎H‎a‎w‎a‎i‎i‎ ‎f‎i‎r‎e‎s‎.‎

M‎o‎r‎r‎i‎s‎:‎ ‎'‎D‎a‎v‎i‎d‎ ‎W‎e‎i‎s‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎R‎e‎c‎u‎s‎e‎ ‎H‎i‎m‎s‎e‎l‎f‎'‎
M‎o‎r‎r‎i‎s‎:‎ ‎'‎D‎a‎v‎i‎d‎ ‎W‎e‎i‎s‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎R‎e‎c‎u‎s‎e‎ ‎H‎i‎m‎s‎e‎l‎f‎'‎
3‎,‎9‎6‎2‎
A‎c‎t‎o‎r‎ ‎T‎y‎r‎e‎s‎e‎ ‎G‎i‎b‎s‎o‎n‎ ‎S‎u‎i‎n‎g‎ ‎H‎o‎m‎e‎ ‎D‎e‎p‎o‎t‎ ‎f‎o‎r‎ ‎$‎1‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎o‎v‎e‎r‎ ‎'‎R‎a‎c‎i‎a‎l‎ ‎P‎r‎o‎f‎i‎l‎i‎n‎g‎'‎
A‎c‎t‎o‎r‎ ‎T‎y‎r‎e‎s‎e‎ ‎G‎i‎b‎s‎o‎n‎ ‎S‎u‎i‎n‎g‎ ‎H‎o‎m‎e‎ ‎D‎e‎p‎o‎t‎ ‎f‎o‎r‎ ‎$‎1‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎o‎v‎e‎r‎ ‎'‎R‎a‎c‎i‎a‎l‎ ‎P‎r‎o‎f‎i‎l‎i‎n‎g‎'‎
1‎,‎0‎1‎2‎
C‎N‎N‎:‎ ‎T‎r‎u‎m‎p‎ ‎L‎a‎w‎y‎e‎r‎s‎ ‎R‎e‎c‎e‎i‎v‎e‎d‎ ‎'‎W‎r‎i‎t‎t‎e‎n‎ ‎I‎n‎v‎i‎t‎a‎t‎i‎o‎n‎'‎ ‎t‎o‎ ‎S‎e‎e‎ ‎G‎A‎ ‎V‎o‎t‎i‎n‎g‎ ‎M‎a‎c‎h‎i‎n‎e‎s‎
C‎N‎N‎:‎ ‎T‎r‎u‎m‎p‎ ‎L‎a‎w‎y‎e‎r‎s‎ ‎R‎e‎c‎e‎i‎v‎e‎d‎ ‎'‎W‎r‎i‎t‎t‎e‎n‎ ‎I‎n‎v‎i‎t‎a‎t‎i‎o‎n‎'‎ ‎t‎o‎ ‎S‎e‎e‎ ‎G‎A‎ ‎V‎o‎t‎i‎n‎g‎ ‎M‎a‎c‎h‎i‎n‎e‎s‎
2‎,‎9‎9‎5‎
E‎n‎g‎l‎i‎s‎h‎ ‎C‎h‎a‎n‎n‎e‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎C‎r‎i‎s‎i‎s‎ ‎t‎o‎ ‎L‎a‎s‎t‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎F‎i‎v‎e‎ ‎Y‎e‎a‎r‎s‎:‎ ‎G‎o‎v‎t‎ ‎D‎o‎c‎
E‎n‎g‎l‎i‎s‎h‎ ‎C‎h‎a‎n‎n‎e‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎C‎r‎i‎s‎i‎s‎ ‎t‎o‎ ‎L‎a‎s‎t‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎F‎i‎v‎e‎ ‎Y‎e‎a‎r‎s‎:‎ ‎G‎o‎v‎t‎ ‎D‎o‎c‎
2‎0‎0‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎-‎-‎ ‎S‎e‎n‎.‎ ‎T‎i‎m‎ ‎S‎c‎o‎t‎t‎:‎ ‎'‎U‎n‎b‎e‎l‎i‎e‎v‎a‎b‎l‎e‎'‎ ‎t‎h‎e‎ ‎D‎O‎J‎ ‎P‎r‎o‎t‎e‎c‎t‎s‎ ‎B‎i‎d‎e‎n‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎-‎-‎ ‎S‎e‎n‎.‎ ‎T‎i‎m‎ ‎S‎c‎o‎t‎t‎:‎ ‎'‎U‎n‎b‎e‎l‎i‎e‎v‎a‎b‎l‎e‎'‎ ‎t‎h‎e‎ ‎D‎O‎J‎ ‎P‎r‎o‎t‎e‎c‎t‎s‎ ‎B‎i‎d‎e‎n‎
3‎,‎2‎2‎4‎
R‎e‎p‎o‎r‎t‎:‎ ‎F‎u‎l‎t‎o‎n‎ ‎C‎o‎.‎ ‎D‎A‎ ‎t‎o‎ ‎P‎r‎e‎s‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎s‎e‎ ‎t‎o‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎N‎e‎x‎t‎ ‎W‎e‎e‎k‎
R‎e‎p‎o‎r‎t‎:‎ ‎F‎u‎l‎t‎o‎n‎ ‎C‎o‎.‎ ‎D‎A‎ ‎t‎o‎ ‎P‎r‎e‎s‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎s‎e‎ ‎t‎o‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎N‎e‎x‎t‎ ‎W‎e‎e‎k‎
9‎,‎8‎0‎1‎
W‎A‎T‎C‎H‎:‎ ‎M‎o‎b‎ ‎R‎a‎n‎s‎a‎c‎k‎s‎ ‎N‎o‎r‎d‎s‎t‎r‎o‎m‎ ‎i‎n‎ ‎T‎o‎p‎a‎n‎g‎a‎ ‎N‎o‎r‎d‎s‎t‎r‎o‎m‎ ‎i‎n‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎
W‎A‎T‎C‎H‎:‎ ‎M‎o‎b‎ ‎R‎a‎n‎s‎a‎c‎k‎s‎ ‎N‎o‎r‎d‎s‎t‎r‎o‎m‎ ‎i‎n‎ ‎T‎o‎p‎a‎n‎g‎a‎ ‎N‎o‎r‎d‎s‎t‎r‎o‎m‎ ‎i‎n‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎
5‎,‎2‎8‎9‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
H‎a‎w‎a‎i‎i‎ ‎m‎o‎u‎r‎n‎s‎ ‎t‎h‎e‎ ‎d‎e‎a‎d‎ ‎i‎n‎ ‎f‎e‎r‎o‎c‎i‎o‎u‎s‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎s‎ ‎w‎h‎i‎l‎e‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎w‎a‎r‎n‎ ‎t‎h‎e‎ ‎f‎u‎l‎l‎ ‎t‎o‎l‎l‎ ‎i‎s‎ ‎n‎o‎t‎ ‎y‎e‎t‎ ‎k‎n‎o‎w‎n‎
6‎4‎
A‎f‎t‎e‎r‎ ‎H‎o‎u‎r‎s‎ ‎o‎n‎ ‎B‎e‎a‎c‎h‎,‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎'‎N‎o‎ ‎C‎o‎m‎m‎e‎n‎t‎'‎ ‎A‎b‎o‎u‎t‎ ‎H‎a‎w‎a‎i‎i‎ ‎D‎e‎a‎t‎h‎s‎
A‎f‎t‎e‎r‎ ‎H‎o‎u‎r‎s‎ ‎o‎n‎ ‎B‎e‎a‎c‎h‎,‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎'‎N‎o‎ ‎C‎o‎m‎m‎e‎n‎t‎'‎ ‎A‎b‎o‎u‎t‎ ‎H‎a‎w‎a‎i‎i‎ ‎D‎e‎a‎t‎h‎s‎
1‎,‎0‎1‎9‎
P‎o‎l‎l‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎A‎g‎e‎ ‎W‎o‎r‎r‎i‎e‎s‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎
P‎o‎l‎l‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎A‎g‎e‎ ‎W‎o‎r‎r‎i‎e‎s‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎

N‎i‎g‎g‎a‎r‎d‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎P‎h‎i‎l‎l‎y‎'‎s‎ ‎L‎o‎v‎e‎ ‎P‎a‎r‎k‎.‎

W‎h‎y‎ ‎d‎o‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎c‎r‎y‎ ‎d‎u‎r‎i‎n‎g‎ ‎s‎e‎x‎?‎.‎.‎.‎.‎.‎.‎ ‎O‎h‎ ‎f‎u‎c‎k‎ ‎i‎t‎.‎


J‎i‎g‎ ‎E‎n‎t‎e‎r‎s‎ ‎P‎l‎e‎a‎ ‎D‎e‎a‎l‎ ‎f‎o‎r‎ ‎T‎r‎i‎p‎l‎e‎ ‎M‎u‎r‎d‎e‎r‎ ‎i‎n‎ ‎O‎a‎k‎l‎a‎n‎d‎.‎


N‎i‎g‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎A‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎R‎o‎b‎ ‎S‎t‎.‎ ‎L‎o‎u‎i‎s‎ ‎S‎t‎o‎r‎e‎.‎


T‎o‎w‎e‎l‎h‎e‎a‎d‎ ‎C‎o‎p‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎G‎u‎n‎n‎i‎n‎g‎ ‎H‎i‎s‎ ‎W‎i‎f‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎F‎a‎c‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎A‎l‎r‎i‎g‎h‎t‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎i‎f‎ ‎i‎t‎'‎s‎ ‎g‎o‎n‎n‎a‎ ‎r‎a‎i‎n‎ ‎f‎o‎r‎ ‎o‎n‎c‎e‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎6‎°‎
/‎7‎7‎°‎
1‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎4‎ ‎|‎ ‎D‎a‎y‎
1‎0‎6‎°‎
1‎%‎
S‎
9‎
 ‎
m‎p‎h‎
S‎u‎n‎s‎h‎i‎n‎e‎ ‎a‎n‎d‎ ‎c‎l‎o‎u‎d‎s‎ ‎m‎i‎x‎e‎d‎.‎ ‎N‎e‎a‎r‎ ‎r‎e‎c‎o‎r‎d‎ ‎h‎i‎g‎h‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎1‎0‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
E‎x‎t‎r‎e‎m‎e‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎7‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎1‎2‎ ‎p‎m‎
M‎o‎n‎ ‎1‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎7‎°‎
3‎%‎
S‎S‎W‎
9‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎7‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
5‎:‎1‎0‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎3‎7‎ ‎p‎m‎
T‎u‎e‎ ‎1‎5‎
S‎u‎n‎n‎y‎
1‎0‎3‎°‎
/‎6‎9‎°‎
1‎%‎
N‎N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎6‎
S‎u‎n‎n‎y‎
1‎0‎4‎°‎
/‎7‎2‎°‎
1‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎7‎
S‎u‎n‎n‎y‎
1‎0‎7‎°‎
/‎7‎4‎°‎
3‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎8‎
S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎4‎°‎
6‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎4‎°‎
/‎7‎4‎°‎
8‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎4‎°‎
/‎7‎6‎°‎
6‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
1‎0‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎2‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎6‎°‎
/‎7‎6‎°‎
4‎7‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎8‎°‎
/‎7‎6‎°‎
2‎2‎%‎
E‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎3‎°‎
/‎7‎7‎°‎
1‎2‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎3‎°‎
/‎7‎7‎°‎
2‎4‎%‎
E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎2‎°‎
/‎7‎7‎°‎
2‎4‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎6‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎G‎l‎o‎b‎a‎l‎ ‎c‎o‎o‎l‎i‎n‎g‎.‎ ‎🌎❄️‎️‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎n‎c‎e‎l‎
I‎n‎c‎e‎l‎ ‎o‎r‎ ‎I‎n‎v‎o‎l‎u‎n‎t‎a‎r‎y‎ ‎C‎e‎l‎i‎b‎a‎c‎y‎ ‎i‎s‎ ‎a‎ ‎f‎i‎c‎t‎i‎t‎i‎o‎u‎s‎ ‎m‎e‎d‎i‎c‎a‎l‎ ‎d‎i‎s‎o‎r‎d‎e‎r‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎m‎a‎d‎e‎ ‎u‎p‎ ‎b‎y‎ ‎u‎g‎l‎y‎ ‎v‎i‎r‎g‎i‎n‎s‎ ‎i‎n‎ ‎a‎n‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎e‎x‎p‎l‎a‎i‎n‎ ‎t‎o‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎w‎h‎y‎ ‎e‎v‎e‎n‎ ‎t‎h‎e‎ ‎f‎i‎l‎t‎h‎i‎e‎s‎t‎ ‎i‎n‎n‎e‎r‎ ‎c‎i‎t‎y‎ ‎c‎r‎a‎c‎k‎w‎h‎o‎r‎e‎s‎ ‎a‎r‎e‎ ‎u‎n‎w‎i‎l‎l‎i‎n‎g‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎s‎e‎x‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎m‎.‎ ‎T‎h‎e‎ ‎t‎e‎r‎m‎ ‎""‎I‎n‎v‎o‎l‎u‎n‎t‎a‎r‎y‎ ‎C‎e‎l‎i‎b‎a‎t‎e‎""‎ ‎i‎s‎ ‎b‎e‎l‎i‎e‎v‎e‎d‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎c‎o‎i‎n‎e‎d‎ ‎i‎n‎ ‎1‎9‎9‎7‎ ‎b‎y‎ ‎a‎ ‎f‎u‎g‎l‎y‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎ ‎c‎h‎i‎c‎k‎ ‎n‎a‎m‎e‎d‎ ‎A‎l‎a‎n‎a‎ ‎a‎f‎t‎e‎r‎ ‎s‎h‎e‎ ‎d‎i‎s‎c‎o‎v‎e‎r‎e‎d‎ ‎t‎h‎a‎t‎ ‎s‎h‎e‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎m‎a‎n‎a‎g‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎l‎a‎i‎d‎ ‎i‎n‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎–‎ ‎w‎h‎i‎c‎h‎ ‎s‎h‎o‎u‎l‎d‎ ‎s‎u‎r‎p‎r‎i‎s‎e‎ ‎a‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎n‎o‎o‎n‎e‎ ‎s‎i‎n‎c‎e‎ ‎o‎n‎l‎y‎ ‎a‎ ‎w‎o‎m‎a‎n‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎c‎a‎p‎a‎b‎l‎e‎ ‎o‎f‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎a‎s‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎s‎t‎u‎p‎i‎d‎ ‎a‎s‎ ‎t‎h‎e‎ ‎i‎n‎c‎e‎l‎ ‎m‎o‎v‎e‎m‎e‎n‎t‎.‎ ‎A‎l‎a‎n‎a‎ ‎l‎a‎t‎e‎r‎ ‎w‎e‎n‎t‎ ‎o‎n‎ ‎t‎o‎ ‎b‎e‎c‎o‎m‎e‎ ‎a‎ ‎s‎e‎l‎f‎-‎p‎r‎o‎c‎l‎a‎i‎m‎e‎d‎ ‎""‎q‎u‎e‎e‎r‎""‎ ‎a‎f‎t‎e‎r‎ ‎r‎e‎a‎l‎i‎z‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎b‎u‎t‎c‎h‎ ‎l‎e‎s‎b‎i‎a‎n‎s‎ ‎h‎a‎v‎e‎ ‎m‎u‎c‎h‎ ‎l‎o‎w‎e‎r‎ ‎s‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎t‎h‎a‎n‎ ‎m‎e‎n‎.‎

T‎h‎e‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎i‎n‎c‎e‎l‎ ‎i‎s‎ ‎a‎ ‎5‎'‎2‎""‎ ‎m‎a‎n‎l‎e‎t‎ ‎w‎i‎t‎h‎ ‎p‎o‎o‎r‎ ‎f‎a‎c‎i‎a‎l‎ ‎s‎y‎m‎m‎e‎t‎r‎y‎ ‎w‎h‎o‎ ‎i‎s‎ ‎e‎x‎t‎r‎e‎m‎e‎l‎y‎ ‎u‎n‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎w‎i‎m‎m‎i‎n‎z‎,‎ ‎a‎n‎d‎ ‎b‎l‎a‎m‎e‎s‎ ‎s‎o‎c‎i‎e‎t‎y‎ ‎f‎o‎r‎ ‎h‎i‎s‎ ‎i‎n‎a‎b‎i‎l‎i‎t‎y‎ ‎t‎o‎ ‎d‎e‎v‎e‎l‎o‎p‎ ‎a‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎c‎e‎ ‎o‎f‎ ‎a‎d‎v‎e‎r‎s‎i‎t‎y‎,‎ ‎l‎i‎k‎e‎ ‎a‎ ‎m‎a‎n‎ ‎w‎o‎u‎l‎d‎.‎ ‎M‎a‎n‎y‎ ‎i‎n‎c‎e‎l‎s‎ ‎a‎d‎v‎o‎c‎a‎t‎e‎ ‎f‎o‎r‎ ‎""‎a‎ ‎r‎e‎t‎u‎r‎n‎ ‎t‎o‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎a‎l‎ ‎v‎a‎l‎u‎e‎s‎""‎ ‎(‎i‎r‎o‎n‎i‎c‎ ‎s‎i‎n‎c‎e‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎a‎l‎l‎y‎,‎ ‎y‎o‎u‎n‎g‎ ‎m‎e‎n‎ ‎h‎a‎d‎ ‎t‎o‎ ‎w‎o‎r‎k‎ ‎a‎n‎d‎ ‎i‎n‎t‎e‎r‎a‎c‎t‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎I‎R‎L‎)‎ ‎e‎n‎f‎o‎r‎c‎e‎d‎ ‎w‎i‎t‎h‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎n‎t‎e‎r‎f‎e‎r‎e‎n‎c‎e‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎l‎i‎v‎e‎s‎ ‎a‎n‎d‎ ‎t‎o‎ ‎b‎e‎ ‎p‎r‎o‎v‎i‎d‎e‎d‎ ‎w‎i‎t‎h‎ ‎g‎i‎r‎l‎f‎r‎i‎e‎n‎d‎s‎.‎ ‎O‎t‎h‎e‎r‎s‎ ‎w‎r‎i‎t‎e‎ ‎s‎e‎x‎u‎a‎l‎l‎y‎-‎r‎e‎p‎r‎e‎s‎s‎e‎d‎ ‎m‎a‎n‎i‎f‎e‎s‎t‎o‎s‎ ‎i‎n‎ ‎o‎n‎l‎i‎n‎e‎ ‎e‎c‎h‎o‎ ‎c‎h‎a‎m‎b‎e‎r‎s‎,‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎n‎g‎ ‎m‎u‎r‎d‎e‎r‎ ‎f‎a‎n‎t‎a‎s‎i‎e‎s‎ ‎a‎n‎d‎ ‎w‎a‎y‎s‎ ‎t‎h‎a‎t‎ ‎w‎o‎m‎e‎n‎ ‎c‎o‎u‎l‎d‎ ‎b‎e‎ ‎r‎e‎-‎e‎n‎s‎l‎a‎v‎e‎d‎ ‎w‎i‎t‎h‎ ‎o‎t‎h‎e‎r‎s‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎y‎ ‎i‎n‎e‎v‎i‎t‎a‎b‎l‎y‎ ‎b‎e‎c‎o‎m‎e‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎a‎t‎ ‎t‎h‎e‎i‎r‎ ‎h‎i‎g‎h‎ ‎s‎c‎h‎o‎o‎l‎.‎

I‎n‎c‎e‎l‎s‎'‎ ‎m‎a‎i‎n‎ ‎g‎r‎i‎e‎v‎a‎n‎c‎e‎ ‎l‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎h‎a‎n‎g‎e‎ ‎o‎f‎ ‎s‎o‎c‎i‎e‎t‎y‎ ‎f‎r‎o‎m‎ ‎b‎e‎i‎n‎g‎ ‎m‎o‎r‎e‎ ‎c‎o‎n‎t‎r‎o‎l‎l‎i‎n‎g‎ ‎o‎f‎ ‎w‎o‎m‎e‎n‎ ‎r‎i‎g‎h‎t‎f‎u‎l‎l‎y‎ ‎s‎h‎a‎m‎i‎n‎g‎ ‎s‎l‎u‎t‎s‎,‎ ‎t‎o‎ ‎t‎h‎e‎ ‎o‎n‎e‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎n‎o‎w‎,‎ ‎p‎o‎s‎t‎-‎s‎e‎x‎u‎a‎l‎ ‎r‎e‎v‎o‎l‎u‎t‎i‎o‎n‎ ‎w‎h‎e‎r‎e‎ ‎a‎ ‎w‎o‎m‎a‎n‎ ‎c‎a‎n‎ ‎p‎r‎o‎v‎e‎ ‎s‎h‎e‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎n‎e‎e‎d‎ ‎n‎o‎ ‎m‎a‎n‎ ‎b‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎2‎5‎ ‎g‎u‎y‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎s‎e‎t‎t‎l‎i‎n‎g‎ ‎d‎o‎w‎n‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎o‎l‎d‎e‎n‎ ‎d‎a‎y‎s‎,‎ ‎w‎h‎e‎n‎ ‎P‎a‎p‎p‎y‎ ‎c‎o‎u‎l‎d‎ ‎b‎u‎y‎ ‎a‎ ‎r‎a‎i‎l‎r‎o‎a‎d‎ ‎f‎o‎r‎ ‎a‎ ‎q‎u‎a‎r‎t‎e‎r‎,‎ ‎m‎a‎r‎r‎i‎a‎g‎e‎s‎ ‎w‎e‎r‎e‎ ‎a‎r‎r‎a‎n‎g‎e‎d‎,‎ ‎s‎o‎ ‎n‎o‎ ‎o‎n‎e‎ ‎m‎i‎s‎s‎e‎d‎ ‎o‎u‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎o‎p‎p‎o‎r‎t‎u‎n‎i‎t‎y‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎n‎o‎r‎m‎a‎l‎,‎ ‎h‎a‎p‎p‎y‎ ‎l‎i‎f‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎i‎r‎ ‎b‎e‎a‎u‎t‎i‎f‎u‎l‎ ‎b‎r‎i‎d‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎g‎r‎e‎w‎ ‎u‎p‎ ‎w‎i‎t‎h‎.‎ ‎E‎v‎e‎n‎ ‎h‎i‎d‎e‎o‎u‎s‎ ‎o‎r‎ ‎d‎e‎f‎o‎r‎m‎e‎d‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎i‎t‎h‎ ‎n‎o‎ ‎m‎o‎n‎e‎y‎,‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎y‎ ‎o‎r‎ ‎f‎u‎t‎u‎r‎e‎ ‎p‎r‎o‎s‎p‎e‎c‎t‎s‎ ‎w‎e‎r‎e‎ ‎m‎a‎t‎c‎h‎e‎d‎ ‎u‎p‎ ‎i‎n‎ ‎t‎h‎e‎s‎e‎ ‎m‎a‎r‎r‎i‎a‎g‎e‎s‎ ‎t‎o‎ ‎w‎o‎m‎e‎n‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎s‎a‎m‎e‎ ‎l‎e‎v‎e‎l‎ ‎w‎h‎o‎ ‎b‎r‎a‎v‎e‎l‎y‎ ‎c‎h‎o‎s‎e‎ ‎t‎o‎ ‎m‎a‎r‎r‎y‎ ‎t‎h‎e‎m‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎s‎t‎a‎r‎v‎i‎n‎g‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎.‎

W‎i‎t‎h‎ ‎t‎h‎e‎ ‎i‎n‎t‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎,‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎h‎a‎d‎ ‎n‎o‎t‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎h‎a‎d‎ ‎m‎u‎c‎h‎ ‎e‎x‎p‎e‎r‎i‎e‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎s‎e‎x‎ ‎s‎u‎d‎d‎e‎n‎l‎y‎ ‎s‎a‎w‎ ‎m‎a‎n‎y‎ ‎w‎o‎m‎e‎n‎ ‎n‎a‎k‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎m‎a‎y‎ ‎n‎e‎v‎e‎r‎ ‎h‎a‎v‎e‎ ‎s‎e‎e‎n‎ ‎b‎e‎f‎o‎r‎e‎.‎ ‎T‎h‎e‎y‎ ‎b‎e‎l‎i‎e‎v‎e‎d‎ ‎t‎h‎i‎s‎ ‎p‎u‎t‎ ‎t‎h‎e‎m‎ ‎o‎n‎ ‎a‎n‎ ‎e‎q‎u‎a‎l‎ ‎p‎l‎a‎t‎f‎o‎r‎m‎ ‎w‎i‎t‎h‎ ‎i‎n‎s‎a‎n‎e‎l‎y‎ ‎h‎o‎t‎ ‎w‎o‎m‎e‎n‎.‎ ‎D‎u‎e‎ ‎t‎o‎ ‎b‎e‎i‎n‎g‎ ‎r‎e‎j‎e‎c‎t‎e‎d‎ ‎b‎y‎ ‎w‎o‎m‎e‎n‎ ‎w‎a‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎l‎e‎a‎g‎u‎e‎,‎ ‎a‎n‎d‎ ‎n‎o‎t‎ ‎b‎e‎i‎n‎g‎ ‎a‎t‎t‎r‎a‎c‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎g‎i‎r‎l‎s‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎g‎e‎t‎,‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎s‎a‎i‎d‎,‎ ‎""‎Y‎o‎u‎'‎r‎e‎ ‎n‎o‎t‎ ‎d‎u‎m‎p‎i‎n‎g‎ ‎m‎e‎,‎ ‎I‎'‎m‎ ‎d‎u‎m‎p‎i‎n‎g‎ ‎Y‎O‎U‎!‎""‎ ‎t‎o‎ ‎t‎h‎e‎ ‎m‎o‎d‎e‎r‎n‎ ‎d‎a‎t‎i‎n‎g‎ ‎c‎u‎l‎t‎u‎r‎e‎.‎ ‎W‎h‎a‎t‎ ‎a‎ ‎s‎h‎a‎m‎e‎.‎

(‎(‎ ‎I‎F‎ ‎Y‎O‎U‎'‎R‎E‎ ‎N‎O‎T‎ ‎M‎O‎R‎E‎ ‎T‎H‎A‎N‎ ‎S‎I‎X‎ ‎F‎E‎E‎T‎ ‎T‎A‎L‎L‎,‎ ‎I‎T‎'‎S‎ ‎O‎V‎E‎R‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎P‎a‎l‎a‎c‎e‎ ‎o‎f‎ ‎A‎s‎s‎e‎m‎b‎l‎y‎ ‎i‎n‎ ‎C‎h‎a‎n‎d‎i‎g‎a‎r‎h‎,‎ ‎I‎n‎d‎i‎a‎,‎ ‎i‎s‎ ‎a‎ ‎l‎e‎g‎i‎s‎l‎a‎t‎i‎v‎e‎ ‎a‎s‎s‎e‎m‎b‎l‎y‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎b‎y‎ ‎m‎o‎d‎e‎r‎n‎i‎s‎t‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎ ‎f‎o‎r‎m‎i‎n‎g‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎C‎o‎m‎p‎l‎e‎x‎—‎a‎ ‎l‎a‎r‎g‎e‎r‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎c‎o‎m‎p‎o‎u‎n‎d‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎o‎t‎h‎e‎r‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎t‎h‎e‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎i‎a‎t‎ ‎a‎n‎d‎ ‎P‎a‎l‎a‎c‎e‎ ‎o‎f‎ ‎J‎u‎s‎t‎i‎c‎e‎.‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎e‎d‎ ‎t‎o‎ ‎s‎e‎r‎v‎e‎ ‎a‎s‎ ‎t‎h‎e‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎c‎a‎p‎i‎t‎a‎l‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎h‎a‎l‎f‎ ‎o‎f‎ ‎t‎h‎e‎ ‎h‎i‎s‎t‎o‎r‎i‎c‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎I‎n‎d‎i‎a‎n‎ ‎P‎u‎n‎j‎a‎b‎ ‎p‎r‎o‎v‎i‎n‎c‎e‎ ‎t‎h‎a‎t‎ ‎r‎e‎m‎a‎i‎n‎e‎d‎ ‎i‎n‎ ‎I‎n‎d‎i‎a‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎1‎9‎4‎7‎ ‎p‎a‎r‎t‎i‎t‎i‎o‎n‎ ‎o‎f‎ ‎I‎n‎d‎i‎a‎,‎ ‎t‎h‎e‎ ‎c‎o‎m‎p‎o‎u‎n‎d‎,‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎s‎i‎x‎t‎e‎e‎n‎ ‎o‎t‎h‎e‎r‎ ‎g‎l‎o‎b‎a‎l‎l‎y‎ ‎s‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎s‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎b‎y‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎,‎ ‎w‎a‎s‎ ‎d‎e‎s‎i‎g‎n‎a‎t‎e‎d‎ ‎a‎ ‎W‎o‎r‎l‎d‎ ‎H‎e‎r‎i‎t‎a‎g‎e‎ ‎S‎i‎t‎e‎ ‎b‎y‎ ‎U‎N‎E‎S‎C‎O‎ ‎i‎n‎ ‎2‎0‎1‎6‎.‎ ‎T‎h‎e‎ ‎P‎a‎l‎a‎c‎e‎ ‎o‎f‎ ‎A‎s‎s‎e‎m‎b‎l‎y‎ ‎h‎o‎u‎s‎e‎s‎ ‎t‎h‎e‎ ‎l‎e‎g‎i‎s‎l‎a‎t‎u‎r‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎e‎n‎t‎-‎d‎a‎y‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎I‎n‎d‎i‎a‎n‎ ‎s‎t‎a‎t‎e‎s‎ ‎o‎f‎ ‎P‎u‎n‎j‎a‎b‎ ‎a‎n‎d‎ ‎H‎a‎r‎y‎a‎n‎a‎.‎

p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎b‎y‎ ‎d‎u‎n‎c‎i‎d‎,‎ ‎r‎e‎t‎o‎u‎c‎h‎e‎d‎ ‎b‎y‎ ‎U‎n‎p‎e‎t‎i‎t‎p‎r‎o‎l‎e‎X‎ ‎a‎n‎d‎ ‎A‎r‎i‎s‎t‎e‎a‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎h‎e‎r‎r‎o‎d‎ ‎D‎e‎G‎r‎i‎p‎p‎o‎'‎s‎ ‎a‎s‎s‎ ‎s‎h‎o‎u‎l‎d‎ ‎w‎i‎n‎ ‎a‎n‎ ‎E‎m‎m‎y‎ ‎f‎o‎r‎ ‎d‎r‎a‎w‎i‎n‎g‎ ‎C‎l‎a‎r‎e‎n‎c‎e‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎j‎e‎r‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎N‎i‎c‎k‎ ‎J‎r‎.‎.‎ ‎B‎y‎e‎.‎"
Ahn3NmhZ,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Monday 14th of August 2023 10:40:00 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 261, in main
    check_comments(comment, market76, fallout76marketplace)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 206, in check_comments
    transfer_karma(comment, submission, fallout76marketplace)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 186, in transfer_karma
    bot_responses.transfer_successful(comment, (our_karma, m76_karma))
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/bot_responses.py"", line 22, in transfer_successful
    reply(comment, comment_body)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/bot_responses.py"", line 12, in reply
    new_comment.mod.lock()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/reddit/mixins/__init__.py"", line 153, in lock
    self.thing._reddit.post(API_PATH[""lock""], data={""id"": self.thing.fullname})
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 842, in post
    return self._objectify_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
qPaKX8Dd,Untitled,shizaero,C++,Monday 14th of August 2023 10:38:14 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>

using namespace std;

// функция выводит элементы контейнера через запятую
template <typename It>
void PrintRangeComma(It range_begin, It range_end) {
    if (range_begin == range_end) {
        return;
    }
    for (auto it = range_begin;;) {
        cout << *it;
        if (it++ == prev(range_end, 1)) {
            break;
        }
        cout << "", ""s;
    }
    cout << endl;
}

template <typename RandomIt>
void MergeSort(RandomIt range_begin, RandomIt range_end) {
    // 1. Если диапазон содержит меньше 2 элементов, выходим из функции
    int range_length = range_end - range_begin;
    if (range_length < 2) {
        return;
    }

    // 2. Создаём вектор, содержащий все элементы текущего диапазона
    vector<typename RandomIt::value_type> elements(range_begin, range_end);

    // 3. Разбиваем вектор на две равные части
    auto mid = elements.begin() + range_length / 2;

    // 4. Вызываем функцию MergeSort от каждой половины вектора
    MergeSort(elements.begin(), mid);
    MergeSort(mid, elements.end());

    // 5. С помощью алгоритма merge сливаем отсортированные половины
    // в исходный диапазон
    // merge -> http://ru.cppreference.com/w/cpp/algorithm/merge
    merge(elements.begin(), mid, mid, elements.end(), range_begin);
}

int main() {
    vector<int> test_vector(10);

    // iota             -> http://ru.cppreference.com/w/cpp/algorithm/iota
    // Заполняет диапазон последовательно возрастающими значениями
    iota(test_vector.begin(), test_vector.end(), 1);

    // random_shuffle   -> https://ru.cppreference.com/w/cpp/algorithm/random_shuffle
    // Перемешивает элементы в случайном порядке
    random_shuffle(test_vector.begin(), test_vector.end());

    // Выводим вектор до сортировки
    PrintRangeComma(test_vector.begin(), test_vector.end());

    // Сортируем вектор с помощью сортировки слиянием
    MergeSort(test_vector.begin(), test_vector.end());

    // Выводим результат
    PrintRangeComma(test_vector.begin(), test_vector.end());

    return 0;
}"
Lw4QV6vR,Template,Idanref,TypeScript,Monday 14th of August 2023 10:07:48 AM CDT,"abstract class AbstractCoffeeTemplate {
  // This is the template method that contains the skeleton of the algorithm.
  prepareCoffee(): void {
    this.boilWater();
    this.brewCoffee();
    this.pourInCup();
    this.addCondiments();
  }

  // These methods are the common steps and are implemented in the superclass.
  boilWater(): void {
    console.log('Boiling water');
  }

  pourInCup(): void {
    console.log('Pouring coffee into cup');
  }

  // These methods are the ""hooks"" or steps that can be customized by subclasses.
  abstract brewCoffee(): void;
  abstract addCondiments(): void;
}

class CoffeeWithSugar extends AbstractCoffeeTemplate {
  brewCoffee(): void {
    console.log('Brewing regular coffee');
  }

  addCondiments(): void {
    console.log('Adding sugar');
  }
}

class CoffeeWithMilk extends AbstractCoffeeTemplate {
  brewCoffee(): void {
    console.log('Brewing regular coffee');
  }

  addCondiments(): void {
    console.log('Adding milk');
  }
}

// Usage
const coffeeWithSugar = new CoffeeWithSugar();
coffeeWithSugar.prepareCoffee(); // Output will include: ""Boiling water"", ""Brewing regular coffee"", ""Pouring coffee into cup"", ""Adding sugar""

const coffeeWithMilk = new CoffeeWithMilk();
coffeeWithMilk.prepareCoffee(); // Output will include: ""Boiling water"", ""Brewing regular coffee"", ""Pouring coffee into cup"", ""Adding milk""
"
eZcRjVqu,actPID,zero96x,Lua,Monday 14th of August 2023 10:02:08 AM CDT,"--------- Connect all Components ---------
--motor FrontLeft
motorFrontLeft = peripheral.wrap(""electric_motor_12"")
--motor FrontRight
motorFrontRight = peripheral.wrap(""electric_motor_19"")
--motor BackLeft
motorBackLeft = peripheral.wrap(""electric_motor_13"")
--motor BackRight
motorBackRight = peripheral.wrap(""electric_motor_14"")
--reader
sR = peripheral.wrap(""top"")
 
 
---------- Initialize Variables ----------
altitude = {p = 0, i = 0, d = 0, itime = 0, lError = 0, integral = 0}
roll = {p, i, d, itime = 0, lError = 0, integral = 0}
pitch = {p, i, d, itime = 0, lError = 0, integral = 1}
 
degProportionalConst = 90
rawRotData = {}
corrRotData = {[""pitch""] = 0, [""roll""] = 0, [""yaw""] = 0}
altData = 0
nError = 0
time = 0
 
 
 
 
--motor speeds
frontLeftRpm = 0
frontRightRpm = 0
backLeftRpm = 0
backRightRpm = 0
baseSpeed = 162
 
 
 
 
--------------- PID Settings ---------------
altitude.p = 0.01
altitude.i = 1
altitude.itime = 60
altitude.d = 0
roll.p = 0.01
roll.i = 1
roll.itime = 60
roll.d = 0
pitch.p = .77
pitch.i = 1
pitch.itime = 60
pitch.d = .705
 
 
desiredYaw = 0
desiredPitch = .5
desiredRoll = 0
desiredAltitude = -20
 
 
 
---------------------- Functions ----------------------
--Get Errors
function getYawError()
    return desiredYaw - corrRotData.yaw
end
 
function getRollError()
    return desiredRoll - corrRotData.roll
end
 
function getPitchError()
    return desiredPitch - corrRotData.pitch
end
 
function getAltitudeError()
    return desiredAltitude - altData
end
 
 
-------- read and transform data --------
function readData() 
    rawData = sR.getRotation()
    corrRotData = getCorrRotData()
    altData = sR.getWorldspacePosition().y
end
 
function getCorrRotData()
    return {
        [""pitch""] = rawData.yaw * degProportionalConst,
        [""roll""] = rawData.pitch * degProportionalConst,
        [""yaw""] = rawData.roll * degProportionalConst
    }
end
 
--PID Function--
function pid(x, err)
    lastErr = x.lError
    x.lError = err
 
    --Proportional--
    correction = x.lError * x.p
 
    --Intergral
    x.integral = (x.integral * (x.itime - 1) * x.lError)/x.itime 
    res = x.integral * x.i
    if res > 2 then
        res = 2
    elseif res < -2 then
        res = -2
    else 
        res = res
    end
    correction = correction + res
 
    --Derivative--
    return correction + (x.lError - lastErr) * x.d 
 
end
 
function printRelevantInfo()
    term.clear()
    term.setCursorPos(1,1)
    print(""Drone 1.0"")
    print(""Desired Altitude: ""..desiredAltitude)
    print(""Desired Pitch: ""..desiredPitch)
    print(""Desired Roll: ""..desiredRoll)
    print(""Desired Yaw: ""..desiredYaw)
    print(""Altitude Error: ""..getAltitudeError())
    print(""Pitch Error: ""..getPitchError())
    print(""RollError: ""..getRollError())
    print(""frontLeftRpm: ""..frontLeftRpm)
    print(""frontRightRpm: ""..frontRightRpm)
    print(""backLeftRpm: ""..backLeftRpm)
    print(""backRightRpm: ""..backRightRpm)
    print(""currentPitch: ""..corrRotData.pitch)
    sleep(.05)
end
 
--worker function
function work1()
    motorFrontLeft.setSpeed(frontLeftRpm)
end

function work2()
    motorBackLeft.setSpeed(backLeftRpm)
end

function calcSpeeds()
    pError = getPitchError()
    frontLeftRpm = baseSpeed + pid(altitude,getAltitudeError()) - pid(pitch,pError) + pid(roll,getRollError()) 
    backLeftRpm = baseSpeed + pid(altitude,getAltitudeError()) + pid(pitch,pError) + pid(roll,getRollError())    
end
 
--Init
function init()
    desiredAltitude = sR.getWorldspacePosition().y
    altData = desiredAltitude
end
 
--Controls
function keyListen()
    local event, key = os.pullEvent()
    if key == 87 then --W
        print(""UP"")
        desiredAltitude = desiredAltitude + 5
    elseif key == 83 then --S
        print(""DOWN"")
        desiredAltitude = desiredAltitude - 5
    end
end
 
--Ticker for parallel api
function tick()
    sleep(.5)
end
 
--Fucntion for motors to get actuated at 3Hz
function wait()
    if time == 0 then
        time = os.clock()
    else
        print(os.clock() - time)
        if os.clock() - time > .34 then
            time = 0
            parallel.waitForAny(work1, work2)
        end
    end
end
 
function wrap()
    readData()
    calcSpeeds()
    printRelevantInfo()
    wait()
end
 
 


--PROGRAM LOOP
init()
while true do
    parallel.waitForAny(wrap,keyListen)
    sleep(.05)
end"
S9Hjx0sS,Untitled,GuilhermeCpp,C++,Monday 14th of August 2023 10:01:42 AM CDT,"#include <bits/stdc++.h>
using namespace std;
 
#define NMAX 100010
#define INF 1000000000
#define fi first
#define se second
 
typedef pair< int, int > pll;
 
pll invalid = {INF, INF};
 
int newId = 0;
 
typedef struct Treap
{
 
	int y, val, me, tam;
 
	bool inv;
 
	Treap *pai, *lef, *rig;
 
	Treap(int pri, int v, bool status = false, Treap *p = NULL, Treap *l = NULL, Treap *r = NULL)
	{
	
		y = pri;
		val = v;
		me = v;
		inv = status;
		tam = 1;
		pai = p;
		lef = l;
		rig = r;
	
	}
 
}Tr;
 
Tr *node[NMAX];
Tr *node2[2 * NMAX];
 
int Size(Tr *root)
{
 
	return (root == NULL) ? 0 : root->tam;
 
}
 
int GetVal(Tr *root)
{
 
	return (root == NULL) ? INF : root->val;
 
}
 
int GetMin(Tr *root)
{
 
	return (root == NULL) ? INF : root->me;
 
} 
 
void UpdatePai(Tr *root, Tr *p)
{
 
	if(root != NULL) root->pai = p;
	
	return;
 
}
 
void ChangeInv(Tr *root)
{
 
	if(root != NULL) root->inv ^= true;
	
	return;
 
}
 
void Lazy(Tr *root)
{
 
	if(root == NULL) return;
 
	if(root->inv == true)
	{
	
		swap(root->lef, root->rig);
	
		ChangeInv(root->lef);
		ChangeInv(root->rig);
	
		root->inv = false;
	
	}
	
	return;
	
}
 
void Recalc(Tr *root, int who)
{
 
	if(root == NULL) return;
	
	if(who == 0) node[root->val] = root;
	if(who == 2) node2[root->val] = root;
		
	root->tam = Size(root->lef) + 1 + Size(root->rig);
	
	UpdatePai(root->lef, root);
	UpdatePai(root->rig, root);
	
	root->me = min(root->val, min(GetMin(root->lef), GetMin(root->rig)));
	
	return;
	
}
 
void Print(Tr *root)
{
 
	Lazy(root);
 
	if(root == NULL) return;
 
	Print(root->lef);
	cout << abs(root->val) << "" "";
	Print(root->rig);
	
	return;
 
}
 
Tr* Merge(Tr* l, Tr* r, int who)
{
	
	Recalc(l, who);
	Recalc(r, who);
	Lazy(l);
	Lazy(r);
 
	if(l == NULL) return r;
	if(r == NULL) return l;
	
	Tr *novo;
	
	if(l->y > r->y)
	{
	
		novo = new Treap(l->y, l->val, l->inv, l->pai, l->lef, Merge(l->rig, r, who));
		
	}else
	{
	
		novo = new Treap(r->y, r->val, r->inv, r->pai, Merge(l, r->lef, who), r->rig);
	
	}
	
	Recalc(novo, who);
	
	return novo;
 
}
 
void Split(Tr* root, int idx, Tr **l, Tr **r, int who)
{
	
	Recalc(root, who);
	Lazy(root);
 
	if(root == NULL)
	{
	
		*l = NULL;
		*r = NULL;
	
		return;
	
	}
	
	Tr *novo;
	
	int tl = Size(root->lef);
	
	if(tl + 1 <= idx)
	{
		
		Split(root->rig, idx - (tl + 1), &novo, r, who);
		
		*l = new Treap(root->y, root->val, root->inv, root->pai, root->lef, novo);
		Recalc(*l, who);
	
	}else
	{
	
		Split(root->lef, idx, l, &novo, who);
		
		*r = new Treap(root->y, root->val, root->inv, root->pai, novo, root->rig);
		Recalc(*r, who);
	
	}
	
	return;
 
}
 
void Add(Tr **rootId, Tr **rootVal, Tr **rootInOut, int pos1, int pos2, int val)
{
	
	Tr *m, *m1, *m2, *l, *r;
	
	m = new Treap(rand() % NMAX, newId);
	Split(*rootId, pos1, &l, &r, 0);
	*rootId = Merge(Merge(l, m, 0), r, 0);
	
	m = new Treap(rand() % NMAX, val);
	Split(*rootVal, pos1, &l, &r, 1);
	*rootVal = Merge(Merge(l, m, 1), r, 1);
	
	m1 = new Treap(rand() % NMAX, newId);
	m2 = new Treap(rand() % NMAX, newId + NMAX);
	m = Merge(m1, m2, 2);
	Split(*rootInOut, pos2, &l, &r, 2);
	*rootInOut = Merge(Merge(l, m, 2), r, 2);
	
	newId++;
	
	return;
 
}
 
void Invert(Tr **root, int a, int b)
{
 
	Tr *l, *r, *m, *aux;
	
	Split(*root, a, &l, &aux, 1);
	Split(aux, b - a + 1, &m, &r, 1);
		
	ChangeInv(m);
	
	*root = Merge(Merge(l, m, 1), r, 1);
	
	return;
 
}
 
int GetPos(Tr *root)
{
 
	if(root->pai == NULL) return 0;
 
	if(root->pai->lef == root)	return GetPos(root->pai);
	else						return GetPos(root->pai) + Size(root->pai->lef) + 1;
 
}
 
int GetPos(int u)
{
 
	return GetPos(node[u]) + Size(node[u]->lef);
 
}
 
int GetPos2(Tr *root)
{
 
	if(root->pai == NULL) return 0;
 
	if(root->pai->lef == root)	return GetPos2(root->pai);
	else						return GetPos2(root->pai) + Size(root->pai->lef) + 1;
 
}
 
int GetPos2(int u)
{
 
	return GetPos2(node2[u]) + Size(node2[u]->lef);
 
}
 
int GetNxt(Tr *root)
{
 
	if(GetMin(root->lef) < NMAX) return GetNxt(root->lef);
	
	if(root->val < NMAX) return Size(root->lef);
	
	return GetNxt(root->rig) + Size(root->lef) + 1;
	
 
}
 
int GetNxt(Tr **root, int u)
{
 
	Tr *before, *after, *l, *m, *r, *aux;
	
	int p = GetPos2(u + NMAX);
 
	Split(*root, p, &before, &after, 2);
	
	p = GetNxt(after);
	
	Split(after, p, &l, &aux, 2);
	Split(aux, 1, &m, &r, 2);
 
	int x = m->val;
	
	*root = Merge(Merge(Merge(before, l, 2), m, 2), r, 2);
	
	return x;
 
}
 
int Solv(Tr *root, int idx)
{
 
	Tr *l, *r, *aux;
 
	Split(root, idx, &l, &aux, 1);
	Split(aux, 1, &l, &r, 1);
	
	return l->val;
 
}
 
int main()
{
 
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	int t, n, op, u, v, val, l, r, p, i, j;
	
	vector< int > resp;
	
	Treap *treapId, *treapVal, *treapInOut;
	
	srand(time(NULL));
 
	treapId = NULL;
	treapVal = NULL;
	treapInOut = NULL;
	
	cin >> val >> n;
	
	Add(&treapId, &treapVal, &treapInOut, 0, 0, 0);
	Add(&treapId, &treapVal, &treapInOut, 0, 0, val);
	
	while(n--)
	{
 
		cin >> op;
		
		if(op == 1)
		{
		
			cin >> u >> val;
			
			v = GetNxt(&treapInOut, u);
			
			Add(&treapId, &treapVal, &treapInOut, GetPos(v), GetPos2(u + NMAX), val);
			
		}
		
		if(op == 2)
		{
		
			cin >> l >> r;
			
			l--;
			r--;
		
			Invert(&treapVal, l, r);
		
		}
		
		if(op == 3)
		{
		
			cin >> u;
		
			resp.push_back(Solv(treapVal, GetPos(u)));
			
		}
		
	}
	
	for(auto cur : resp) cout << cur << endl;	
	
	return 0;
 
} "
J77XGhnr,BT-MaximumPathSum,CR7CR7,Java,Monday 14th of August 2023 09:53:31 AM CDT,"class Solution {
    public int maxPathSum(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        int maxSum = Integer.MIN_VALUE;

        if (root != null) {
            stack.push(root);
        }

        while (!stack.isEmpty()) {
            TreeNode node = stack.pop();

            if (node != null) {
                int currentSum = node.val;

                if (node.left != null) {
                    currentSum += Math.max(node.left.val, 0);
                    stack.push(node.left);
                }

                if (node.right != null) {
                    currentSum += Math.max(node.right.val, 0);
                    stack.push(node.right);
                }

                maxSum = Math.max(maxSum, currentSum);
            }
        }

        return maxSum;
    }
}
"
URYdBsE4,Maximum allowed number of uploads,phpface,PHP,Monday 14th of August 2023 09:39:31 AM CDT,"function streamtube_child_check_limit_uploads( $errors ){

    $max_allowed                = 10;

    $current_user_total_posts   = count_user_posts( get_current_user_id(), 'video' );

    // Check roles ... etc
    
    // This limitation should not apply to administrator and editor, maybe.
    
    if( ! current_user_can( 'administrator' ) ){
        if( $current_user_total_posts > $max_allowed ){
            $errors->add(
                'not_allowed',
                esc_html__( 'You have reached the maximum allowed number of uploads.', 'streamtube-child' )
            );
        }        
    }

    return $errors;

}
add_filter( 'streamtube/core/upload/video/errors', 'streamtube_child_check_limit_uploads', 100, 1 );
add_filter( 'streamtube/core/upload_chunks/video/errors', 'streamtube_child_check_limit_uploads', 100, 1 );
add_filter( 'streamtube/core/post/import_embed/errors', 'streamtube_child_check_limit_uploads', 100, 1 );"
MEZhzgjA,E,Salvens,C++,Monday 14th of August 2023 09:34:56 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

using namespace std;

#define int long long

const int INF = 1e18 + 7;
const int MAXN = 40010;
const int N = 1e5 + 10;
const int B = 666;

array<int, MAXN> a, sum, mini, add, ass;
int n;

void build() {
    add.fill(0);
    ass.fill(-1);
    sum.fill(0);
    mini.fill(INF);

    for (int i = 0; i < n; ++i) {
        sum[i / B] += a[i];
        mini[i / B] = min(mini[i / B], a[i]);
    }
}

inline int get(int i) {
    return (ass[i / B] == -1 ? a[i] : ass[i / B]) + add[i / B];
}

void push(int block) {
    for (int i = block * B; i < min(n, (block + 1) * B); ++i) {
        a[i] = get(i);
    }
    ass[block] = -1;
    add[block] = 0;
}

void recalc(int block) {
    mini[block] = INF;
    for (int i = block * B; i < min(n, (block + 1) * B); ++i) {
        mini[block] = min(mini[block], get(i));
    }
}

inline void addVal(int l, int r, int x) {
    push(l / B);
    push(r / B);

    for (int i = l; i <= r; ) {
        if (i % B == 0 && i + B - 1 <= r) {
            add[i / B] += x;
            mini[i / B] += x;
            sum[i / B] += x * B;
            i += B;
        } else {
            a[i] += x;
            sum[i / B] += x;
            ++i;
        }
    }

    recalc(l / B);
    recalc(r / B);
}


inline void upd(int l, int r, int x) {
    push(l / B);
    push(r / B);

    for (int i = l; i <= r; ) {
        if (i % B == 0 && i + B - 1 <= r) {
            ass[i / B] = x;
            add[i / B] = 0;
            mini[i / B] = x;
            sum[i / B] = x * B;
            i += B;
        } else {
            sum[i / B] -= a[i];
            a[i] = x;
            sum[i / B] += a[i];
            ++i;
        }
    }

    recalc(l / B);
    recalc(r / B);
}


inline int getSum(int l, int r) {
    int ans = 0;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans += sum[l / B];
            l += B;
        } else {
            ans += get(l);
            ++l;
        }
    }
    return ans;
}

inline int getMin(int l, int r) {
    int ans = INF;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = min(ans, mini[l / B]);
            l += B;
        } else {
            ans = min(ans, get(l));
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build();
    int q;
    cin >> q;
    while (q--) {
        string type;
        cin >> type;
        if (type == ""get"") {
            int i;
            cin >> i;
            --i;
            cout << get(i) << '\n';
        } else if (type == ""update"") {
            int l, r, x;
            cin >> l >> r >> x;
            --l, --r;
            upd(l, r, x);
        } else if (type == ""add"") {
            int l, r, x;
            cin >> l >> r >> x;
            --l, --r;
            addVal(l, r, x);
        } else if (type == ""rsq"") {
            int l, r;
            cin >> l >> r;
            --l, --r;
            cout << getSum(l, r) << '\n';
        } else if (type == ""rmq"") {
            int l, r;
            cin >> l >> r;
            --l, --r;
            cout << getMin(l, r) << '\n';
        }
    }
}"
UPPYUqwx,Untitled,phpface,CSS,Monday 14th of August 2023 09:34:55 AM CDT,".header-user__dropdown .user-roles {
    display: none!important;
}"
myAnK3ps,F,Salvens,C++,Monday 14th of August 2023 08:53:24 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 1e5 + 10;
const int N = 1e5 + 10;
const int MAX_VALUE = 1e6 + 1;
const int B = 1000;

struct Query {
    int l, r, i;

    Query() = default;

    Query(int l_, int r_, int i_) : l(l_), r(r_), i(i_) {};
};

bool comp(const Query& lhs, const Query& rhs) {
    return lhs.l / B < rhs.l / B || lhs.l / B == rhs.l / B && lhs.r < rhs.r;
}

int k;
int mp[MAX_VALUE];
int ans = 0;

inline void add(int x) {
    ++mp[x];
    if (mp[x] == k + 1) {
        --ans;
    } else if (mp[x] == k) {
        ++ans;
    }
}

inline void pop(int x) {
    --mp[x];
    if (mp[x] == k - 1) {
        --ans;
    } else if (mp[x] == k) {
        ++ans;
    }
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m, q;
    cin >> n >> m >> q >> k;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    if (k == 0) {
        ans = m;
    }
    vector<Query> ask;
    for (int i = 0; i < q; ++i) {
        int l, r;
        cin >> l >> r;
        ask.emplace_back(l - 1, r - 1, i);
    }
    sort(ask.begin(), ask.end(), comp);
    int left = 0, right = -1;
    vector<int> answer(q);
    for (int i = 0; i < q; ++i) {
        const auto [l, r, pos] = ask[i];
        while (right < r) {
            add(a[++right]);
        }
        while (left > l) {
            add(a[--left]);
        }
        while (right > r) {
            pop(a[right--]);
        }
        while (left < l) {
            pop(a[left++]);
        }
        answer[pos] = ans;
    }

    for (const auto i : answer) {
        cout << i << '\n';
    }
}
"
11NZ16rC,django - upload file - template file,rezamalik15,HTML,Monday 14th of August 2023 08:50:33 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">

    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"" crossorigin=""anonymous"">
    <link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"">
    <title>Django - File Upload</title>
</head>
<body>

    <div class=""container py-5"" style=""height: 100vh"">
    
        <div class=""row"" style=""height: 100%"">

            <div class=""col-10 col-md-8 col-lg-6 mx-auto my-auto shadow"">

                <div class=""row mb-3"">
                    <div class=""col"">
                        <h1 class=""text-center"">Upload File Here</h1>
                    </div>                    
                </div>

                <form class="""" action=""/file/add"" method=""post"" enctype=""multipart/form-data"">
                    {% csrf_token %}
                    <div class=""input-group mb-3"">
                        <input name='file' type=""file"" class=""form-control"" placeholder=""Upload your file here"">
                        <input type=""submit"" class=""btn btn-primary"" value=""Upload"">
                    </div>
                    
                </form>
            </div>
        
        </div>
        
    </div>        

    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"" crossorigin=""anonymous""></script>
</body>
</html>"
xmy7sBpF,Untitled,kjmkj,C++,Monday 14th of August 2023 08:42:53 AM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
#define pb push_back
const int N = 6e5 + 1, INF = 1e9 + 7;
vector<vector<pair<int, int>>> g(N);
vector<pair<int, int>> p(N, {-1, 0});
vector<int> sz(N, 0);
vector<bool> cen(N, false);

void calc_sz(int v, int pr = -1) {
  sz[v] = 1;
  for (auto [it, w] : g[v]) {
    if (it == pr || cen[it]) {
      continue;
    }
    calc_sz(it, v);
    sz[v] += sz[it];
  }
}

int find_cen(int v, int n, int pr = -1) {
  for (auto [it, w] : g[v]) {
    if (it == pr || cen[it]) {
      continue;
    }
    if (sz[it] > n / 2) {
      return find_cen(it, n, v);
    }
  }
  return v;
}

void built(int v, int pr = -1, int len = 0) {
  calc_sz(v);
  int n = sz[v];
  int u = find_cen(v, n);
  cen[u] = true;
  p[u] = {pr, len};
  for (auto [it, w] : g[u]) {
    if (!cen[it] && it != pr) {
      built(it, u, w);
    }
  }
}

int n;
vector<int> logor(4 * N, 0);
vector<int> ord;
vector<int> vh(N);
vector<bool> used(N, false);
vector<int> he(N, 0);
vector<vector<int>> mini(N, vector<int>(22));
vector<vector<int>> ans(N, vector<int>(22));

void dfs(int v) {
  used[v] = true;
  ord.push_back(v);
  vh[v] = ord.size() - 1;
  for (auto [it, w] : g[v]) {
    if (!used[it]) {
      he[it] = he[v] + w;
      dfs(it);
      ord.push_back(v);
    }
  }
}

int logi(int x) {
  if (x == 1 || x == 0) {
    return 0;
  }
  logor[x] = logi(x / 2) + 1;
  return logor[x];
}

void LCA() {
  assert(ord.size() <= N);
  vector<int> a;
  dfs(0);
  for (int i = 2; i <= 4 * n + 1; ++i) {
    logi(i);
  }
  for (int i = 0; i < ord.size(); ++i) {
    a.push_back(he[ord[i]]);
  }
  int n1 = n;
  n = ord.size();
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < logor[n] + 2; ++j) {
      mini[i][j] = 1e9 + 7;
      ans[i][j] = i;
    }
  }
  for (int j = 0; j < logor[n] + 2; ++j) {
    for (int i = 0; i < n; ++i) {
      if (j == 0) {
        mini[i][j] = a[i];
        ans[i][j] = i;
      } else {
        if ((1 << (j - 1)) + i >= n) {
          mini[i][j] = mini[i][j - 1];
          ans[i][j] = ans[i][j - 1];
          continue;
        }
        if (mini[i][j - 1] < mini[i + (1 << (j - 1))][j - 1]) {
          ans[i][j] = ans[i][j - 1];
        } else {
          ans[i][j] = ans[i + (1 << (j - 1))][j - 1];
        }
        mini[i][j] = min(mini[i][j - 1], mini[i + (1 << (j - 1))][j - 1]);
      }
    }
  }
  n = n1;
}

int find_LCA(int u1, int u2) {
  long long sum = 0;
  long long ans1;
  int u = vh[u1], v = vh[u2];
  if (u > v) {
    u = vh[u2];
    v = vh[u1];
  }
  if (mini[u][logor[v - u]] < mini[v - (1 << logor[v - u]) + 1][logor[v - u]]) {
    ans1 = ans[u][logor[v - u]];
  } else {
    ans1 = ans[v - (1 << logor[v - u]) + 1][logor[v - u]];
  }
  return ord[ans1];
}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  cin >> n;
  for (int i = 0; i < n - 1; ++i) {
    int u, v, l;
    cin >> u >> v >> l;
    u--;
    v--;
    g[u].pb({v, l});
    g[v].pb({u, l});
  }
  vector<set<pair<int, int>>> a(n);
  built(0);
  LCA();
  int m;
  cin >> m;
  for (int i = 0; i <= m; ++i) {
    string h;
    if (i == 0) {
      h = ""+"";
    } else {
      cin >> h;
    }
    if (h == ""+"") {
      int v;
      if (i == 0) {
        v = 0;
      } else {
        cin >> v;
        v--;
      }
      int v1 = v;
      while (v1 != -1) {
        int lca = find_LCA(v, v1);
        int sum = 0;
        if (lca == v1) {
          sum = he[v] - he[lca];
        } else if (lca == v) {
          sum = he[v1] - he[lca];
        } else {
          sum = he[v1] + he[v] - 2 * he[lca];
        }
        a[v1].insert({sum, v});
        v1 = p[v1].first;
      }
    } else if (h == ""-"") {
      int v;
      cin >> v;
      v--;
      int v1 = v;
      while (v1 != -1) {
        int lca = find_LCA(v, v1);
        int sum = 0;
        if (lca == v1) {
          sum = he[v] - he[lca];
        } else if (lca == v) {
          sum = he[v1] - he[lca];
        } else {
          sum = he[v1] + he[v] - 2 * he[lca];
        }
        a[v1].erase({sum, v});
        v1 = p[v1].first;
      }
    } else {
      int v;
      cin >> v;
      v--;
      auto it1 = a[v].begin();
      if ((*it1).second == v) {
        cout << 0 << '\n';
        continue;
      }
      int v1 = v;
      int mini1 = INF;
      while (v1 != -1) {
        auto it = a[v1].begin();
        if (it != a[v1].end()) {
          if ((*it).second == v) {
            it++;
          }
          if (it != a[v1].end()) {
            int lca = find_LCA(v, v1);
            int sum = 0;
            if (lca == v1) {
              sum = he[v] - he[lca];
            } else if (lca == v) {
              sum = he[v1] - he[lca];
            } else {
              sum = he[v1] + he[v] - 2 * he[lca];
            }
            mini1 = min(mini1, sum + (*it).first);
          }
        }
        v1 = p[v1].first;
      }
      cout << mini1 << '\n';
    }
  }
  return 0;
}"
gvDrFkc8,MJZ Advanced Cobblestone Generator,Maxwelljonez,Lua,Monday 14th of August 2023 08:24:10 AM CDT,"--{program=""MJZ Cobblegen"",version=""1.0""}
-- WIP !
---------------------------------------
-- 14.8.23   v1.0 initial
---------------------------------------
-- ToDo: 
-- Farm Cobble, fill chest, return values on screen
 
---------------------------------------
---- DESCRIPTION ----------------------
---------------------------------------
--[[
 
A simple but yet expandle cobble generator

--]]

---------------------------------------
---- PARAMETERS -----------------------
---------------------------------------

local cVersion  =""1.0""
local cPrgName  =""MJZ CobbleGen""
local debugging=false
local slotFuel=16   -- where to put fuel
local minFuel=0   -- the minimal amount of fuel required
local sleepTime=5

---------------------------------------
---- VARIABLES ------------------------
---------------------------------------

---------------------------------------
-- BASIC FUNCTIONS FOR TURTLE CONTROL -
---------------------------------------

local function mine()
	if turtle.detect() then
		select(1)
        turtle.dig()
	end
end

local function dropstacks()
	for i=1,16 do
		turtle.select(i)
		turtle.dropUp()
	end
end

---------------------------------------
---- run  -----------------------------
---------------------------------------
while true do
	mine()
	itemcount1 = turtle.getItemCount(1)
	if itemcount1 == 64 then
		print(""| Dropping stacks"")
		print(""| Please wait..."")
		dropstacks()
    end
	itemcount15 = turtle.getItemCount(15)
	if itemcount15 == 64 then
		print(""| Turtle full .. Sleeping "" ..sleepTime.. """")
    end
end"
dyfDFWWR,Untitled,alex116600,Swift,Monday 14th of August 2023 08:07:56 AM CDT,"import AppsFlyerLib
 
let eventValues: [String: Any] = [
    ""af_price"": 9.99,
    ""af_content"": ""Product XYZ"", // имя товара
    ""af_content_id"": ""1234567"", // идентификатр товара
    ""af_content_type"": ""Product"", // категория товара
    ""af_currency"": ""UAH"",
	""af_brand"": ""бренд товару"",
    ""af_quantity"": 1
]
 
AppsFlyerLib.shared().logEvent(af_content_view, withValues: eventValues)"
sh6swAjs,MJZ Simple Cobblestone Generator,Maxwelljonez,Lua,Monday 14th of August 2023 07:56:20 AM CDT,"--{program=""MJZ Cobblefarm"",version=""1.0""}
-- WIP !
---------------------------------------
-- 14.8.23   v1.0 initial
---------------------------------------
-- ToDo: 
-- Farm Cobble, fill chest, return values on screen
 
---------------------------------------
---- DESCRIPTION ----------------------
---------------------------------------
--[[
 
A simple but yet expandle cobble generator

--]]

---------------------------------------
---- PARAMETERS -----------------------
---------------------------------------

local cVersion  =""1.5""
local cPrgName  =""MJZ FarmBot""
local debugging=false
local slotFuel=16   -- where to put fuel
local minFuel=0   -- the minimal amount of fuel required
local sleepTime=5

---------------------------------------
---- VARIABLES ------------------------
---------------------------------------

---------------------------------------
-- BASIC FUNCTIONS FOR TURTLE CONTROL -
---------------------------------------

local function mine()
	if turtle.detect() then
        turtle.dig()
	end
end


---------------------------------------
---- run  -----------------------------
---------------------------------------
while true do
	mine()
	itemcount = turtle.getItemCount(16)
	if itemcount == 64 then
		sleep(sleepTime)
        print(""| Waiting "" ..sleepTime.. """")
    end
end"
pcVSEAhh,Untitled,sl1nky94,Python,Monday 14th of August 2023 07:51:10 AM CDT,"import cv2
from ControllerMapping import Buttons
from Macro import Macro
from ScriptCore import Template, PrintColors

# This is an example script that will be run by the main program.
class Script(Template):
    def __init__(self, controller, report):
        super().__init__(controller, report)

        # Setup a macro
        self.bunny_hop = Macro(controller, [
            [self.controller.release_button, self.map_button(Buttons.BTN_SOUTH)],
            [""wait"", 50],
            [self.controller.press_button, self.map_button(Buttons.BTN_SOUTH)],
            [""wait"", 50],
            [self.controller.release_button, self.map_button(Buttons.BTN_SOUTH)]
        ])
        
    def run(self, frame):
        # Draw some text to the frame
        cv2.putText(frame, ""Bunny Hop Macro Example"", (100, 100), 
                    cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2, cv2.LINE_AA)

        # Start Bunny hop macro when the X/A button is pressed
        if (self.is_actual_button_pressed(Buttons.BTN_SOUTH)):
            self.print(""Bunny Hop Macro running"", PrintColors.COLOR_GREEN)
            self.bunny_hop.run()

        # Cycle the macro, this iterate through he macro actions loop at a time
        self.bunny_hop.cycle()

        return [frame, []]"
8K3CqSCE,Visitor,Idanref,TypeScript,Monday 14th of August 2023 07:11:54 AM CDT,"// Visitor Interface
interface ShapeVisitor {
    void visit(Circle circle);
    void visit(Square square);
    void visit(Triangle triangle);
}

// Concrete Visitor
class DrawVisitor implements ShapeVisitor {
    public void visit(Circle circle) {
        // Code to draw a circle
    }
    public void visit(Square square) {
        // Code to draw a square
    }
    public void visit(Triangle triangle) {
        // Code to draw a triangle
    }
}

// Element Interface
interface Shape {
    void accept(ShapeVisitor visitor);
}

// Concrete Elements
class Circle implements Shape {
    public void accept(ShapeVisitor visitor) {
        visitor.visit(this);
    }
}

class Square implements Shape {
    public void accept(ShapeVisitor visitor) {
        visitor.visit(this);
    }
}

class Triangle implements Shape {
    public void accept(ShapeVisitor visitor) {
        visitor.visit(this);
    }
}

// Using the Visitor
Shape[] shapes = {new Circle(), new Square(), new Triangle()};
ShapeVisitor drawVisitor = new DrawVisitor();

for (Shape shape : shapes) {
    shape.accept(drawVisitor); // Draw each shape
}
"
RVnwVcBQ,10 | Chase #10,CSOfficial,HTML 5,Monday 14th of August 2023 07:00:10 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/f4bb1c30-a1ae-ce09-5890-e34cbc8bc7ad.png"" width=""163.56"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 12px; line-height: 125%;"">
                        
                            <div style=""text-align: center;"">&nbsp;</div>

<div style=""text-align: left;""><span style=""font-size:30px"">Password change required!</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 12px; line-height: 125%;"" valign=""top"">
                        
                            <br>
<span style=""font-size:14px"">Dear sir,</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:14px"">We recently have determined that different computers have logged onto your Chase user profile account, and multiple password failures were present. before the logons. We strongly advice CHANGE YOUR PASSWORD.</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:14px"">If this is not completed by <strong>August, 14, 2023</strong>, we will be forced to suspend your account indefinitely, as it may have been used for fraudulent purposes. Thank you for your cooperation.</span><br>
&nbsp;</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonBlock"" style=""min-width:100%;"">
    <tbody class=""mcnButtonBlockOuter"">
        <tr>
            <td style=""padding-top:0; padding-right:18px; padding-bottom:18px; padding-left:18px;"" valign=""top"" align=""left"" class=""mcnButtonBlockInner"">
                <table border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnButtonContentContainer"" style=""border-collapse: separate !important;border-radius: 0px;background-color: #24A4D6;"">
                    <tbody>
                        <tr>
                            <td align=""center"" valign=""middle"" class=""mcnButtonContent"" style=""font-family: Arial; font-size: 15px; padding: 11px;"">
                                <a class=""mcnButton "" title="" Click here to Change Your Password"" href=""https://www.google.com/"" target=""_blank"" style=""font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;color: #FFFFFF;""> Click here to Change Your Password</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <span style=""font-size:14px"">Thank you for your prompt attention to this matter,</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 125%;"">
                        
                            <span style=""font-size:14px"">We apologize for any inconvenience.<br>
Thank you for using Chase!</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnDividerBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 4px 18px;"">
                <table class=""mcnDividerContent"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <span style=""font-size:14px"">Please do not reply to this e-mail. Mail sent to this address cannot beanswered.</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
6Cge4qrc,10 | Apple #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:51 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table class=""mcnImageBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td style=""padding:9px"" class=""mcnImageBlockInner"" valign=""top"">
                    <table class=""mcnImageContentContainer"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"" valign=""top"">
                                
                                    
                                        <img alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/41cb3c56-6dfe-89cc-0b69-742ceb5ac064.png"" style=""max-width:197px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"" width=""31.52"" align=""right"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 125%;"">
                        
                            Dear client,<br>
<br>
Your Apple ID was used when connected to iCloud and iMessage from an<br>
<br>
iPhone 5s appointed : iPhone Ahmed<br>
<br>
Data : 14 August 2023 a 05:23<br>
<br>
Operating System : iOS 6.1.3<br>
<br>
<span style=""font-size:13px"">If you've recently connected with this unit, you can ignore this email<br>
<br>
if not We're concerned that someone is using your Apple account without your knowledge.<br>
Recent activity from your account seems to have occurred from a suspicious location or<br>
under circumstance that may be different than usual<br>
<br>
<a href=""https://www.google.com/"" target=""_blank""><span style=""color:#3399ff""><u>Please confirm your Billing and change your Password by using this link</u></span></a><br>
<br>
<br>
<br>
TM and copyright ©&nbsp; 2023 Apple Inc</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
StZXVGq5,10 | Amazon #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:48 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/7b59cd61-15ba-7955-f4a6-7fc607b8cfcc.png"" width=""135.35999999999999"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;"">Dear Amazon Customer,<br>
<br>
<span style=""font-size:14px""><strong>YOUR ACCOUNT HAS BEEN LOCKED</strong></span><br>
<br>
Due to suspicious activity including several unusual transactions on your Amazon Account your account is suspended until further notice.<br>
<br>
To validate your identity, unfreeze your Account, and unwarted charges please, call our Security Support Team on the following number <span style=""color:#FF0000""><strong>IMMEDIATELY</strong></span> <strong>and be ready too provide your billing address, username and password :</strong><br>
&nbsp;</div>

<ul>
	<li style=""text-align: justify;"">&nbsp;555-5555<br>
	&nbsp;</li>
</ul>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;"">After youve been verified your Account will be reactivated with in 24 hrs. If we do not here from you in three working days the charges on your Account will be non refundable!<br>
<br>
Regard,<br>
Amazon Customer Service<br>
<a href=""https://www.google.com/"" target=""_blank""><span style=""color:#3366cc""><u>Amazon.com</u></span></a></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
cbZhnCx1,10 | PayPal #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:45 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/c60bffd8-6524-23bd-e256-733970fe05cf.png"" width=""157.92000000000002"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">&nbsp;</div>

<div style=""text-align: left;""><span style=""color:#3399ff""><span style=""font-size:23px"">You can't use PayPal anymore</span></span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">&nbsp;</div>

<div style=""text-align: justify;"">At PayPal, we value a safe community in which all our customers can do business. We noticed activity on your account that's inconsistent with our User Agreement and can no longer offer you PayPal services.<br>
<br>
Any bank accont or credit card details linked to your PayPal account cannot be removed nor can it be used to create a new account. You can still log in and see your account information but you can't send or receive money. Any money in your balance will be held for 180 days, at which point we'll send you an email with instructions about transferring&nbsp;your money.<br>
&nbsp;</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonBlock"" style=""min-width:100%;"">
    <tbody class=""mcnButtonBlockOuter"">
        <tr>
            <td style=""padding-top:0; padding-right:18px; padding-bottom:18px; padding-left:18px;"" valign=""top"" align=""left"" class=""mcnButtonBlockInner"">
                <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonContentContainer"" style=""border-collapse: separate !important;border-radius: 4px;background-color: #1EA2EE;"">
                    <tbody>
                        <tr>
                            <td align=""center"" valign=""middle"" class=""mcnButtonContent"" style=""font-family: Arial; font-size: 14px; padding: 12px;"">
                                <a class=""mcnButton "" title=""Continue"" href=""https://www.google.com/"" target=""_blank"" style=""font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;color: #FFFFFF;"">Continue</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">Reference # PP- ##NUMBER7##</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
x3XkJMWF,10 | Office365 #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:29 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:0px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 0px; padding-left: 0px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/6c213d73-ed91-a38e-5f77-a588a0d24084.png"" width=""180"" style=""max-width:1024px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;""><br>
Your domain's Microsoft Office 365 for business account has been suspended.</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Go to the sig-in page to reactivate your account, https://portal.office.com</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Thank you for choosing to host your iT solutions with Microsoft.</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Sincerely,<br>
The Microsoft Office 365 Team</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:13px"">This is a mandatory service communication. To seet your contact preferences for other<br>
communications.</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
BZ9kzZ6S,data664,TestGuy1,JSON,Monday 14th of August 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a3ce789694542500daea800197e3a6761c0a453a4c720dbb219ab0928678e2b4fc15d29ff6ed22403b9fd5e049c38a6c72a2794357ca4fdfdbcdae274df645bdd71147a90eaff5b7fd5e9520defede4bdc47748620a5e3bf487d7249e3f092ed6615e3c8c69e22ca4b458a73ea12043c83185ab385cff4528ba0c6d1e61557ab',
  otherdata: [
    'ec77f9c6ae314ff7547ad25db9c67813',
    '0f62b449f2a7a0e9f10ba03c0258fe60',
    'c9494324c4cfc8d0ed308e8a36fb215a',
    '2565dc7379c531cb30ed144884dbeb39',
    'cfcb59109c382401211c77edb209b75b',
    'a8981656931da7f081c7fe1fed6b58bb',
    '0395a248ef847ac85b641ffd26aae889',
    'cb383d7d0014a3e7a534732bdaf2246e'
  ]
}"
LVQr4idz,3D MO,Salvens,C++,Monday 14th of August 2023 05:52:36 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>
#include <string>
#include <algorithm>
#include <iomanip>
#include <map>
#include <set>
#include <bitset>
#include <fstream>
#include <unordered_set>
#include <unordered_map>
#include <ext/pb_ds/assoc_container.hpp>
#include <stack>
#include <queue>
#include <complex>


using namespace std;
using namespace __gnu_pbds;



/*#pragma GCC optimize(""Ofast"")
#pragma GCC optimize(""no-stack-protector"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
#pragma GCC optimize(""fast-math"")*/

/*
#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx,tune=native"")
#pragma GCC target(""avx2"")
 #pragma GCC optimize(""Ofast"")
#pragma GCC optimization(""unroll-loops"")
 #pragma GCC optimization(""O3"")
*/

//#define int long long
#define ll long long
//#define int short int
#define eb emplace_back
#define pb push_back
#define ld long double
//#define ld double
#define mp make_pair
#define f first
#define s second
#define gleg(x) return cout << x, 0
#define pii pair <int, int>
#define deb(a) cerr << #a << "" = "" << a << '\n';
//#define sz(x) (int)s.size();
#define fast() {     ios_base::sync_with_stdio(0);     cin.tie(0);     cout << fixed << setprecision(9);     cerr << fixed << setprecision(12); }

template < typename firstType, typename secondType = null_type, class compare = less < firstType > >
struct sett {
    typedef tree <
            firstType,
            secondType,
            compare,
            rb_tree_tag,
            tree_order_statistics_node_update
    > _ ;
};


const int INF = 1e9 + 7;
const ld EPS = 1e-9;
const int MAXI = 350;
const int MOD = 998244353;
const int MOD1 = 1e9 + 7;
const int MAXST = 2000000;
const int P = 31;
const int P1 = 37;
const int N = 5100000;
const ld PI = 3.14159265358979323;
const int bp = 23;
//const int sz = 1 << bp;


ostream &operator<<(ostream &stream, const pair <int, int> &p) {
    stream << p.first << ' ' << p.second << ' ';
    return stream;
}

struct rq{
    int l, r, tm;

    rq(int _l, int _r, int _tm){
        l = _l;
        r = _r;
        tm = _tm;
    }

};

struct u {
    bool f;
    int pos, prx, x;

    u(){
        f = false;
    }

    u(int _pos, int _prx, int _x){
        f = true;
        pos  = _pos;
        prx = _prx;
        x = _x;
    }
};

int k;

bool cmp(rq &a, rq &b){
    if (a.l / k == b.l / k){
        if (a.r / k == b.r / k)
            return a.tm < b.tm;
        return ((a.r * (a.l / k % 2 == 1 ? -1 : 1)) < (b.r * (a.l / k % 2 == 1 ? -1 : 1)));
    }
    return a.l < b.l;
}

int cnt[310000], mx[310000];

void del(int x){
    if (cnt[x] == 1){
        mx[cnt[x]]--;
        cnt[x]--;
    }
    else{
        mx[cnt[x]]--;
        cnt[x]--;
        mx[cnt[x]]++;
    }
}

void add(int x){
    if (cnt[x] == 0){
        cnt[x]++;
        mx[cnt[x]]++;
    }
    else{
        mx[cnt[x]]--;
        cnt[x]++;
        mx[cnt[x]]++;
    }
}

signed main(){
    fast();
    srand(time(0));
    /*#ifdef _LOCAL
        freopen(""input.txt"", ""r"", stdin);
        freopen(""output.txt"", ""w"", stdout);
    #endif*/
    int n, m;
    cin >> n >> m;
    vector <int> a(n);
    unordered_map <int, int> p;

    for (int i = 0; i < n; i++){
        cin >> a[i];
        if (p.find(a[i]) == p.end())
            p[a[i]] = p.size();
        a[i] = p[a[i]];
    }
    vector <int> a1 = a;

    vector <rq> req;
    vector <u> upd(m + 10, u());
    for (int q = 0; q < m; q++){
        int c, l, r;
        cin >> c >> l >> r;

        if (c == 1){
            l--, r--;
            req.eb(rq(l, r, q));
        } else {
            l--;
            if (p.find(r) == p.end())
                p[r] = p.size();

            r = p[r];
            upd[q] = u(l, a1[l], r);
            a1[l] = r;
        }
    }

    k = 3500;

    sort(req.begin(), req.end(), cmp);

    int l = 0, r = -1, t = -1;

    vector <pair <int, int>> ans;
    //sqmex st = sqmex(n + m);


    for (int q = 0; q < (int)req.size(); q++){
        int l1 = req[q].l, r1 = req[q].r, tm = req[q].tm;

        while (r < r1){
            r++;
            add(a[r]);
        }

        while (l > l1){
            l--;
            add(a[l]);
        }

        while (r > r1){
            del(a[r]);
            r--;
        }

        while (l < l1){
            del(a[l]);
            l++;
        }

        while (t < tm) {
            t++;
            if (upd[t].f) {
                if (l <= upd[t].pos && r >= upd[t].pos) {
                    del(a[upd[t].pos]);
                    add(upd[t].x);
                }

                a[upd[t].pos] = upd[t].x;
            }
        }

        while (t > tm) {
            if (upd[t].f) {
                if (l <= upd[t].pos && r >= upd[t].pos){
                    del(a[upd[t].pos]);
                    add(upd[t].prx);
                }

                a[upd[t].pos] = upd[t].prx;
            }

            t--;
        }

        int cur;
        for (int i = 1; i < (int)3e5; i++){
            if (mx[i] == 0) {
                cur = i;
                break;
            }
        }
        ans.pb({req[q].tm, cur});
    }

    sort(ans.begin(), ans.end());

    for (auto i: ans)
        cout << i.s << '\n';

    return 0;
}"
MmAkjx09,Untitled,lawre,JavaScript,Monday 14th of August 2023 05:26:00 AM CDT,"
(function() {
    'use strict';

    function setDefaultValue() {
        var selectElement = document.querySelector('select[name=""formatoOut""]');
        if (selectElement) {
            var options = selectElement.options;
            for (var i = 0; i < options.length; i++) {
                if (options[i].value === ""XLS"") {
                    options[i].selected = true;
                    break;
                }
            }
            // Trigger the ""change"" event to update the Chosen combobox
            var event = new Event('change', { bubbles: true });
            selectElement.dispatchEvent(event);
        }
    }

    // Wait for the page to load
    window.addEventListener('load', function() {
        // Call the function to set the default value
        setDefaultValue();
    });
})();"
eSxvHMpB,JNEWS || Change Truncates Height,fauzanjeg,CSS,Monday 14th of August 2023 05:17:21 AM CDT,"/* Change Truncates Height */
.entry-content .content-truncate.mobile-truncate.content-inner {
    height: 20em;
}"
wPGmwVYk,"修复激光测距采矿，自动停止,手动停止",jaklsfjlsak,Lua,Monday 14th of August 2023 04:05:32 AM CDT,"term.clear()
local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()
local miningActive = false

local function saveZeroLayersCount(count)
  local file = fs.open(""zero_layers.txt"", ""w"")
  file.write(tostring(count))
  file.close()
end

local function getZeroLayersCount()
  if fs.exists(""zero_layers.txt"") then
    local file = fs.open(""zero_layers.txt"", ""r"")
    local count = tonumber(file.readAll())
    file.close()
    return count
  end
  return 0
end

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 and not miningActive then -- 'M' key
    miningActive = true
    local _, laserY, _ = laser.getLocalPosition()
    local targetY = 0
    local consecutiveZeroLayers = getZeroLayersCount() -- Initialize here

    repeat
      laser.emitBeam(0, -1, 0)
      os.sleep(1)
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0

    local mineTarget = laserY - targetY - 1
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end

    -- Periodically check the mining state
    while miningActive do
      os.sleep(1)
      local state, isActive, energy, currentLayer, mined, total = mininglasers[1].state()

      if total == 0 then
        consecutiveZeroLayers = consecutiveZeroLayers + 1
      else
        consecutiveZeroLayers = 0
      end

      saveZeroLayersCount(consecutiveZeroLayers)

      if consecutiveZeroLayers >= 3 then
        print(""3 consecutive layers with 0 total blocks detected. Stopping mining."")
        print("""")
        print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")
        for _, mininglaser in pairs(mininglasers) do
          mininglaser.enable(false)
        end
        fs.delete(""zero_layers.txt"")
        miningActive = false -- Stop the mining loop
        break
      end
    end
  elseif key == 83 then -- 'S' key
    for _, mininglaser in pairs(mininglasers) do
      mininglaser.enable(false)
    end
    miningActive = false
  end
end
"
T8Y0h7vE,Untitled,zbx1425,JavaScript,Monday 14th of August 2023 03:54:48 AM CDT,"function renderTrainParticles(ctx, state, train, trainExt, trainInAir) {
  if (!foundMadParticle) return;

  for (i = 0; i < train.trainCars; i++) {
    zPos = 0;
    if (i == 0 && train.trainCars == 1) {
      zPos = 0;
    } else if (i == 0) {
      zPos = 3;
    } else if (i == train.trainCars - 1) {
      zPos = -3;
    } else {
      zPos = false;
    }

    if (zPos !== false && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, zPos));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, zPos));
    }
    if (i != train.trainCars - 1 && train.trainCars > 1 && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, -5));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, -5));
    }
  }
}

// int targetParticle, SpriteFrom spriteFrom, int lifeTime,
// InheritableBoolean alwaysRender, int amount,
// double px, double py, double pz, double xDiffuse, double yDiffuse, double zDiffuse,
// double vx, double vy, double vz, double vxDiffuse, double vyDiffuse, double vzDiffuse,
// float friction, float gravity, InheritableBoolean collision, int bounceTime,
// double horizontalRelativeCollisionDiffuse, double verticalRelativeCollisionBounce,
// float afterCollisionFriction, float afterCollisionGravity,
// InheritableBoolean interactWithEntity,
// double horizontalInteractFactor, double verticalInteractFactor,
// ParticleRenderTypes renderType, float r, float g, float b,
// float beginAlpha, float endAlpha, ChangeMode alphaMode,
// float beginScale, float endScale, ChangeMode scaleMode,
// boolean haveChild, MadParticleOption child,
// float rollSpeed,
// float xDeflection, float xDeflectionAfterCollision,
// float zDeflection, float zDeflectionAfterCollision,
// float bloomFactor,
// CompoundTag meta

function addEngineParticles(basePose, originOffset) {
  particleOrigin = basePose.transform(originOffset);
  particleDirection = new Vector3f(0, -0.8, 0);

  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:campfire_cosy_smoke"")),
    SpriteFrom.RANDOM, 10,
    InheritableBoolean.TRUE, 16,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.3, 0.5, 0.3,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.2, 0.2, 0.2,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 0.6, ChangeMode.LINEAR,
    6, 12, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

  particleDirection = new Vector3f(0, -0.4, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:flame"")),
    SpriteFrom.RANDOM, 5,
    InheritableBoolean.FALSE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.6, 0.2, 0.6,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    2, 0, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

  originOffset.add(0, 6, 0);
  particleOrigin = basePose.transform(originOffset);
  particleDirection = new Vector3f(0, -0.6, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:smoke"")),
    SpriteFrom.RANDOM, 5,
    InheritableBoolean.FALSE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0, 0.2, 0,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    0.1, 2, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

}"
DYw3Ebdv,dest修复激光测距采矿，自动停止,jaklsfjlsak,Lua,Monday 14th of August 2023 03:49:16 AM CDT,"term.clear()
local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()

local function saveZeroLayersCount(count)
  local file = fs.open(""zero_layers.txt"", ""w"")
  file.write(tostring(count))
  file.close()
end

local function getZeroLayersCount()
  if fs.exists(""zero_layers.txt"") then
    local file = fs.open(""zero_layers.txt"", ""r"")
    local count = tonumber(file.readAll())
    file.close()
    return count
  end
  return 0
end

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 then
    local _, laserY, _ = laser.getLocalPosition()
    local targetY = 0

    repeat
      laser.emitBeam(0, -1, 0)
      os.sleep(1)
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0

    local mineTarget = laserY - targetY - 1
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end

    local consecutiveZeroLayers = getZeroLayersCount()

    -- Periodically check the mining state
    while true do
      os.sleep(1)
      local state, isActive, energy, currentLayer, mined, total = mininglasers[1].state()
      

      -- You'll need to modify the below lines once you understand the structure of 'state'

      if total == 0 then
        consecutiveZeroLayers = consecutiveZeroLayers + 1
      else
        consecutiveZeroLayers = 0
      end

      saveZeroLayersCount(consecutiveZeroLayers)

      if consecutiveZeroLayers >= 3 then
        print(""3 consecutive layers with 0 total blocks detected. Stopping mining."")
        print("""")
        print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")
        for _, mininglaser in pairs(mininglasers) do
          mininglaser.enable(false)
        end
        fs.delete(""zero_layers.txt"")
        break
      end
    end
  end
end"
JfZYR0pi,D,Salvens,C++,Monday 14th of August 2023 03:47:04 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 15e4 + 10;
const int N = 1e5 + 10;

array<int, MAXN> sq, a, add;
const int B = 666;

inline void build(int n) {
    a.fill(0);
    sq.fill(0);
    add.fill(0);
}

inline void put(int l, int r) {
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ++sq[l / B];
            ++add[l / B];
            l += B;
        } else {
            ++a[l];
            sq[l / B] = max(sq[l / B], a[l] + add[l / B]);
            ++l;
        }
    }
}

inline int get(int l, int r) {
    int ans = 0;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = max(ans, sq[l / B]);
            l += B;
        } else {
            ans = max(ans, a[l] + add[l / B]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, k, m;
    cin >> n >> k >> m;
    build(n - 1);
    while (m--) {
        int l, r;
        cin >> l >> r;
        --r;
        if (get(l, r) < k) {
            cout << ""Yes\n"";
            put(l, r);
        } else {
            cout << ""No\n"";
        }
    }
}
"
xgH4vQ66,Callback problem,miraftab,Python,Monday 14th of August 2023 03:36:10 AM CDT,"import logging

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Application, ContextTypes, CommandHandler, ConversationHandler, MessageHandler, filters, \
    CallbackQueryHandler

# Configure logging
log_file = 'telegram_test.log'
logging.basicConfig(
    filename=log_file,
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

START_OVER = 'START_OVER'


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('start...')
    text = 'Select one feature'

    buttons = [['My Profile']]
    reply_keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)

    if not context.user_data.get(START_OVER):
        await update.message.reply_text(text=text, reply_markup=reply_keyboard)
    else:
        await update.callback_query.edit_message_text(text=text)

    context.user_data[START_OVER] = False

    return 'SELECT_LEVEL'


async def select_level(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('select_level...')

    context.user_data['START_OVER'] = False

    in_text = update.message.text
    if 'My Profile' in in_text:
        return await user_profile(update, context)
    else:
        pass


async def user_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('user_profile...')
    text = 'Select option'
    buttons = [[InlineKeyboardButton('back', callback_data='BACK')]]
    keyboard = InlineKeyboardMarkup(buttons)
    if context.user_data.get('START_OVER'):
        await update.callback_query.edit_message_text(text=text, reply_markup=keyboard)
    else:
        await update.message.reply_text(text=text, reply_markup=keyboard)

    context.user_data['START_OVER'] = False
    return 'SELECT_OPTION'


def main():
    app = Application.builder().token('BOT_TOKEN').build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            'SELECT_LEVEL': [MessageHandler(filters.TEXT & ~filters.COMMAND, select_level)],
            'SELECT_OPTION': [
                CallbackQueryHandler(start, pattern='BACK'),
            ]
        },
        fallbacks=[
            CommandHandler('start', start)
        ]
    )

    app.add_handler(conv_handler)

    print('start polling …')
    app.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()
"
HcgaiDbk,C,Salvens,C++,Monday 14th of August 2023 03:31:24 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 15e4 + 10;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(INF);
    for (int i = 0; i < n; ++i) {
        sq[i / B] = min(sq[i / B], a[i]);
    }
}

inline int get(int l, int r) {
    int ans = INF;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = min(ans, sq[l / B]);
            l += B;
        } else {
            ans = min(ans, a[l]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, k;
    cin >> n >> k;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int l = 0, r = k - 1;
    while (r < n) {
        cout << get(l, r) << ' ';
        ++l, ++r;
    }
}
"
N4mZbPUU,Wally ui MODIFIED,DuyOnline101,Lua,Monday 14th of August 2023 03:28:00 AM CDT,"local library = {count = 0, queue = {}, callbacks = {}, rainbowtable = {}, toggled = true, binds = {}};
local defaults; do
    local dragger = {}; do
        local mouse        = game:GetService(""Players"").LocalPlayer:GetMouse();
        local inputService = game:GetService('UserInputService');
        local heartbeat    = game:GetService(""RunService"").Heartbeat;
        -- // credits to Ririchi / Inori for this cute drag function :)
        function dragger.new(frame)
            local s, event = pcall(function()
                return frame.MouseEnter
            end)
    
            if s then
                frame.Active = true;
                
                event:connect(function()
                    local input = frame.InputBegan:connect(function(key)
                        if key.UserInputType == Enum.UserInputType.MouseButton1 then
                            local objectPosition = Vector2.new(mouse.X - frame.AbsolutePosition.X, mouse.Y - frame.AbsolutePosition.Y);
                            while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                pcall(function()
                                    frame:TweenPosition(UDim2.new(0, mouse.X - objectPosition.X + (frame.Size.X.Offset * frame.AnchorPoint.X), 0, mouse.Y - objectPosition.Y + (frame.Size.Y.Offset * frame.AnchorPoint.Y)), 'Out', 'Linear', 0.1, true);
                                end)
                            end
                        end
                    end)
    
                    local leave;
                    leave = frame.MouseLeave:connect(function()
                        input:disconnect();
                        leave:disconnect();
                    end)
                end)
            end
        end

        game:GetService('UserInputService').InputBegan:connect(function(key, gpe)
            if (not gpe) then
                if key.KeyCode == Enum.KeyCode.RightControl then
                    library.toggled = not library.toggled;
                    for i, data in next, library.queue do
                        local pos = (library.toggled and data.p or UDim2.new(-1, 0, -0.5,0))
                        data.w:TweenPosition(pos, (library.toggled and 'Out' or 'In'), 'Quad', 0.15, true)
                        wait();
                    end
                end
            end
        end)
    end
    
    local types = {}; do
        types.__index = types;
        function types.window(name, options)
            library.count = library.count + 1
            local newWindow = library:Create('Frame', {
                Name = name;
                Size = UDim2.new(0, 190, 0, 30);
                BackgroundColor3 = options.topcolor;
                BorderSizePixel = 0;
                Parent = library.container;
                Position = UDim2.new(0, (15 + (200 * library.count) - 200), 0, 0);
                ZIndex = 3;
                library:Create('TextLabel', {
                    Text = name;
                    Size = UDim2.new(1, -10, 1, 0);
                    Position = UDim2.new(0, 5, 0, 0);
                    BackgroundTransparency = 1;
                    Font = Enum.Font.Code;
                    TextSize = options.titlesize;
                    Font = options.titlefont;
                    TextColor3 = options.titletextcolor;
                    TextStrokeTransparency = library.options.titlestroke;
                    TextStrokeColor3 = library.options.titlestrokecolor;
                    ZIndex = 3;
                });
                library:Create(""TextButton"", {
                    Size = UDim2.new(0, 30, 0, 30);
                    Position = UDim2.new(1, -35, 0, 0);
                    BackgroundTransparency = 1;
                    Text = ""-"";
                    TextSize = options.titlesize;
                    Font = options.titlefont;--Enum.Font.Code;
                    Name = 'window_toggle';
                    TextColor3 = options.titletextcolor;
                    TextStrokeTransparency = library.options.titlestroke;
                    TextStrokeColor3 = library.options.titlestrokecolor;
                    ZIndex = 3;
                });
                library:Create(""Frame"", {
                    Name = 'Underline';
                    Size = UDim2.new(1, 0, 0, 2);
                    Position = UDim2.new(0, 0, 1, -2);
                    BackgroundColor3 = (options.underlinecolor ~= ""rainbow"" and options.underlinecolor or Color3.new());
                    BorderSizePixel = 0;
                    ZIndex = 3;
                });
                library:Create('Frame', {
                    Name = 'container';
                    Position = UDim2.new(0, 0, 1, 0);
                    Size = UDim2.new(1, 0, 0, 0);
                    BorderSizePixel = 0;
                    BackgroundColor3 = options.bgcolor;
                    ClipsDescendants = false;
                    library:Create('UIListLayout', {
                        Name = 'List';
                        SortOrder = Enum.SortOrder.LayoutOrder;
                    })
                });
            })
            
            if options.underlinecolor == ""rainbow"" then
                library.rainbowtable[newWindow:FindFirstChild('Underline')] = newWindow:FindFirstChild('Underline')
            end

            local window = setmetatable({
                count = 0;
                object = newWindow;
                container = newWindow.container;
                toggled = true;
                flags   = {};

            }, types)

            table.insert(library.queue, {
                w = window.object;
                p = window.object.Position;
            })

            newWindow:FindFirstChild(""window_toggle"").MouseButton1Click:connect(function()
                window.toggled = not window.toggled;
                newWindow:FindFirstChild(""window_toggle"").Text = (window.toggled and ""+"" or ""-"")
                if (not window.toggled) then
                    window.container.ClipsDescendants = true;
                end
                wait();
                local y = 0;
                for i, v in next, window.container:GetChildren() do
                    if (not v:IsA('UIListLayout')) then
                        y = y + v.AbsoluteSize.Y;
                    end
                end 

                local targetSize = window.toggled and UDim2.new(1, 0, 0, y+5) or UDim2.new(1, 0, 0, 0);
                local targetDirection = window.toggled and ""In"" or ""Out""

                window.container:TweenSize(targetSize, targetDirection, ""Quad"", 0.15, true)
                wait(.15)
                if window.toggled then
                    window.container.ClipsDescendants = false;
                end
            end)

            return window;
        end
        
        function types:Resize()
            local y = 0;
            for i, v in next, self.container:GetChildren() do
                if (not v:IsA('UIListLayout')) then
                    y = y + v.AbsoluteSize.Y;
                end
            end 
            self.container.Size = UDim2.new(1, 0, 0, y+5)
        end
        
        function types:GetOrder() 
            local c = 0;
            for i, v in next, self.container:GetChildren() do
                if (not v:IsA('UIListLayout')) then
                    c = c + 1
                end
            end
            return c
        end
        
        function types:Label(display,rainbow)
            local v = game:GetService'TextService':GetTextSize(display, 18, Enum.Font.SourceSans, Vector2.new(math.huge, math.huge))
            local object = library:Create('Frame', {
                Size = UDim2.new(1, 0, 0, v.Y+5);
                BackgroundTransparency  = 1;
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                
                    Position = UDim2.new(0, 10, 0, 0);
                    Size = UDim2.new(1, 0, 1, 0);
                    TextSize = 18;
                    Font = Enum.Font.SourceSans;
                    TextColor3 = Color3.fromRGB(255, 255, 255);
                    BackgroundTransparency = 1;
                    TextXAlignment = Enum.TextXAlignment.Left;
                    TextWrapped = true;
                    Text = display;
                });
                Parent = self.container;
            })

            self:Resize();
            if rainbow then
                library.rainbowtable[object:FindFirstChild('TextLabel')] = object:FindFirstChild('TextLabel')
            end
            
            return object:FindFirstChild('TextLabel');
        end

        function types:Toggle(name, options, callback)
            options = options or {}
            local default  = options.default or false;
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local callback = callback or function() end;
            
            location[flag] = default;

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    library:Create('TextButton', {
                        
                        Text = (library.options.toggledisplay == 'Check' and (location[flag] and utf8.char(10003) or """") or '');
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Name = 'Checkmark';
                        Size = UDim2.new(0, 20, 0, 20);
                        Position = UDim2.new(1, -25, 0, 4);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = (library.options.toggledisplay == 'Fill' and(location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)) or library.options.bgcolor);
                        BorderColor3 = library.options.bordercolor;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                });
                Parent = self.container;
            });
                
            local function click(t)
                location[flag] = (not location[flag]);
                callback(location[flag])
                if library.options.toggledisplay == 'Check' then
                    check:FindFirstChild(name).Checkmark.Text = location[flag] and utf8.char(10003) or """";
                elseif library.options.toggledisplay == 'Fill' then
                    check:FindFirstChild(name).Checkmark.BackgroundColor3 = location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)
                end
            end

            check:FindFirstChild(name).Checkmark.MouseButton1Click:connect(click)
            library.callbacks[flag] = click;

            if location[flag] == true then
                callback(location[flag])
            end

            self:Resize();
            return {
                Set = function(b)
                    location[flag] = b;
                    callback(location[flag])
                    if library.options.toggledisplay == 'Check' then
                        check:FindFirstChild(name).Checkmark.Text = location[flag] and utf8.char(10003) or """";
                    elseif library.options.toggledisplay == 'Fill' then
                        check:FindFirstChild(name).Checkmark.BackgroundColor3 = location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)
                    end
                end
            }
        end

        function types:TypeBox(name, options, callback)
            options = options or {}
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local default = options.default or """";
            local cleartext = options.cleartext or (options.cleartext == nil and true);
            local callback = callback or function() end;

            location[flag] = default;
    
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextBox', {
                    Text = default;
                    ClearTextOnFocus = cleartext;
                    PlaceholderText = name;
                    PlaceholderColor3 = Color3.fromRGB(60, 60, 60);
                    Size = UDim2.new(1, -10, 0, 20);
                    Position = UDim2.new(0, 5, 0, 4);
                    BackgroundColor3 = library.options.boxcolor;
                    ClipsDescendants = true;
                    TextColor3 = library.options.textcolor;
                    TextXAlignment = Enum.TextXAlignment.Center;
                    TextSize = library.options.fontsize;
                    Name = 'TextBox';
                    Font = library.options.font;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                });
                Parent = self.container;
            });
            local box = check:FindFirstChild('TextBox');
            box:GetPropertyChangedSignal(""Text""):Connect(function()
                if box.TextBounds.X >= box.AbsoluteSize.X then
                    box.TextXAlignment = Enum.TextXAlignment.Right
                else
                    box.TextXAlignment = Enum.TextXAlignment.Center
                end
            end)
            box.FocusLost:connect(function(e)
                local old = location[flag];
                location[flag] = tostring(box.Text)
                callback(location[flag], old, e)
            end)
            self:Resize();
            return box
        end

        function types:Button(name, callback)
            callback = callback or function() end;
            
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextButton', {
                    Name = name;
                    Text = name;
                    BackgroundColor3 = library.options.btncolor;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    BackgroundTransparency = 0.35;
                    TextStrokeColor3 = library.options.strokecolor;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 5);
                    Size     = UDim2.new(1, -10, 0, 20);
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                });
                Parent = self.container;
            });
            
            check:FindFirstChild(name).MouseButton1Click:connect(callback)
            self:Resize();

            return check:WaitForChild(name),{
                Fire = function()
                    callback();
                end
            }
        end
        
        function types:Box(name, options, callback) --type, default, data, location, flag)
            options = options or {}
            local tipe   = options.type or """";
            local default = options.default or """";
            local data = options.data
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local callback = callback or function() end;
            local min      = options.min or 0;
            local max      = options.max or 9e9;

            if tipe == 'number' and tonumber(default) ~= nil then
                location[flag] = default;
            else
                location[flag] = """";
                default = """";
            end

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    library:Create('TextBox', {
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                        Text = tostring(default);
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Name = 'Box';
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 3);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = library.options.boxcolor;
                        BorderColor3 = library.options.bordercolor;
                        PlaceholderColor3 = library.options.placeholdercolor;
                    })
                });
                Parent = self.container;
            });
        
            local box = check:FindFirstChild(name):FindFirstChild('Box');
            box.FocusLost:connect(function(e)
                local old = location[flag];
                if tipe == ""number"" then
                    local num = tonumber(box.Text)
                    if (not num) then
                        box.Text = tonumber(location[flag])
                    else
                        location[flag] = math.clamp(num, min, max)
                        box.Text = tonumber(location[flag])
                    end
                else
                    location[flag] = tostring(box.Text)
                end

                callback(location[flag], old, e)
            end)
            
            if tipe == 'number' then
                box:GetPropertyChangedSignal('Text'):connect(function()
                    box.Text = string.gsub(box.Text, ""[%a+]"", """");
                end)
            end

            local function SetNew(new)
                if tipe == ""number"" then
                    local num = tonumber(new)
                    if (not num) then
                        box.Text = tonumber(location[flag])
                    else
                        location[flag] = math.clamp(num, min, max)
                        box.Text = tonumber(location[flag])
                    end
                else
                    location[flag] = tostring(box.Text)
                end
            end
            
            self:Resize();
            return {
                ['Box'] = box;
                ['SetNew'] = SetNew;
            }
        end
        
        function types:Bind(name, options, callback)
            options = options or {}
            local location     = options.location or self.flags;
            local keyboardOnly = options.kbonly or false
            local flag         = options.flag or """";
            local callback     = callback or function() end;
            local default      = options.default or nil;

            if keyboardOnly and (not tostring(default):find('MouseButton')) then
                location[flag] = default
            end
            
            local banned = {
                Return = true;
                Space = true;
                Tab = true;
                Unknown = true;
            }
            
            local shortNames = {
                RightControl = 'RightCtrl';
                LeftControl = 'LeftCtrl';
                LeftShift = 'LShift';
                RightShift = 'RShift';
                MouseButton1 = ""Mouse1"";
                MouseButton2 = ""Mouse2"";
            }
            
            local allowed = {
                MouseButton1 = true;
                MouseButton2 = true;
            }      

            local nm = (default and (shortNames[default.Name] or default.Name) or ""None"");
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 30);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    BorderColor3     = library.options.bordercolor;
                    BorderSizePixel  = 1;
                    library:Create('TextButton', {
                        Name = 'Keybind';
                        Text = nm;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 5);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = library.options.bgcolor;
                        BorderColor3     = library.options.bordercolor;
                        BorderSizePixel  = 1;
                    })
                });
                Parent = self.container;
            });
                
            local button = check:FindFirstChild(name).Keybind;
            button.MouseButton1Click:connect(function()
                library.binding = true

                button.Text = ""...""
                local a, b = game:GetService('UserInputService').InputBegan:wait();
                local name = tostring(a.KeyCode.Name);
                local typeName = tostring(a.UserInputType.Name);

                if (a.UserInputType ~= Enum.UserInputType.Keyboard and (allowed[a.UserInputType.Name]) and (not keyboardOnly)) or (a.KeyCode and (not banned[a.KeyCode.Name])) then
                    local name = (a.UserInputType ~= Enum.UserInputType.Keyboard and a.UserInputType.Name or a.KeyCode.Name);
                    location[flag] = (a);
                    button.Text = shortNames[name] or name;
                    
                else
                    if (location[flag]) then
                        if (not pcall(function()
                            return location[flag].UserInputType
                        end)) then
                            local name = tostring(location[flag])
                            button.Text = shortNames[name] or name
                        else
                            local name = (location[flag].UserInputType ~= Enum.UserInputType.Keyboard and location[flag].UserInputType.Name or location[flag].KeyCode.Name);
                            button.Text = shortNames[name] or name;
                        end
                    end
                end

                wait(0.1)  
                library.binding = false;
            end)
            
            if location[flag] then
                button.Text = shortNames[tostring(location[flag].Name)] or tostring(location[flag].Name)
            end

            library.binds[flag] = {
                location = location;
                callback = callback;
            };

            self:Resize();
        end
    
        function types:Section(name,rainbow)
            local order = self:GetOrder();
            local determinedSize = UDim2.new(1, 0, 0, 25)
            local determinedPos = UDim2.new(0, 0, 0, 4);
            local secondarySize = UDim2.new(1, 0, 0, 20);
                        
            if order == 0 then
                determinedSize = UDim2.new(1, 0, 0, 21)
                determinedPos = UDim2.new(0, 0, 0, -1);
                secondarySize = nil
            end
            
            local check = library:Create('Frame', {
                Name = 'Section';
                BackgroundTransparency = 1;
                Size = determinedSize;
                BackgroundColor3 = library.options.sectncolor;
                BorderSizePixel = 0;
                LayoutOrder = order;
                library:Create('TextLabel', {
                    Name = 'section_lbl';
                    Text = name;
                    BackgroundTransparency = 1;
                    BorderSizePixel = 0;
                    BackgroundColor3 = library.options.sectncolor;
                    TextColor3 = library.options.textcolor;
                    Position = determinedPos;
                    Size     = (secondarySize or UDim2.new(1, 0, 1, 0));
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                });
                Parent = self.container;
            });
        
            self:Resize();
            if rainbow then
                library.rainbowtable[check:FindFirstChild('section_lbl')] = check:FindFirstChild('section_lbl')
            end
            return check:FindFirstChild('section_lbl');
        end

        function types:Slider(name, options, callback)
            options = options or {}
            local default = options.default or options.min or 0;
            local min     = options.min or 0;
            local max      = options.max or 1;
            local location = options.location or self.flags;
            local precise  = options.precise  or false -- e.g 0, 1 vs 0, 0.1, 0.2, ...
            local flag     = options.flag or """";
            local callback = callback or function() end

            location[flag] = default;

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 2);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    library:Create('Frame', {
                        Name = 'Container';
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 3);
                        BackgroundTransparency = 1;
                        BorderColor3 = library.options.bordercolor;
                        BorderSizePixel = 0;
                        library:Create('TextBox', {
                            Name = 'ValueLabel';
                            Text = default;
                            BackgroundTransparency = 1;
                            TextColor3 = library.options.textcolor;
                            Position = UDim2.new(0, -35, 0, 0);
                            Size     = UDim2.new(0,30,0,20);
                            TextXAlignment = Enum.TextXAlignment.Right;
                            Font = library.options.font;
                            TextSize = library.options.fontsize;
                            TextStrokeTransparency = library.options.textstroke;
                            TextStrokeColor3 = library.options.strokecolor;
                            BackgroundColor3 = library.options.boxcolor;
                            BorderColor3 = library.options.bordercolor;
                            PlaceholderColor3 = library.options.placeholdercolor;
                        });
                        library:Create('TextButton', {
                            Name = 'Button';
                            Size = UDim2.new(0, 5, 1, -2);
                            Position = UDim2.new(0, 0, 0, 1);
                            AutoButtonColor = false;
                            Text = """";
                            BackgroundColor3 = Color3.fromRGB(20, 20, 20);
                            BorderSizePixel = 0;
                            ZIndex = 2;
                            TextStrokeTransparency = library.options.textstroke;
                            TextStrokeColor3 = library.options.strokecolor;
                        });
                        library:Create('Frame', {
                            Name = 'Line';
                            BackgroundTransparency = 0;
                            Position = UDim2.new(0, 0, 0.5, 0);
                            Size     = UDim2.new(1, 0, 0, 1);
                            BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                            BorderSizePixel = 0;
                        });
                    })
                });
                Parent = self.container;
            });

            local overlay = check:FindFirstChild(name);

            local box = overlay:FindFirstChild('Container'):FindFirstChild('ValueLabel');
            box.Focused:connect(function()
                box.BackgroundTransparency = 0
            end)
            box.FocusLost:connect(function(e)
                local old = location[flag];
                local num = tonumber(box.Text)
                box.BackgroundTransparency = 1
                if (not num) then
                    box.Text = tonumber(location[flag])
                else
                    if num < min then
                        num = min
                    elseif num > max then
                        num = max
                    end

                    local percent = 1 - ((max - num) / (max - min))
                    local number  = num 

                    number = tonumber(string.format(""%.2f"", number))
                    if (not precise) then
                        number = math.floor(number)
                    end

                    overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                    box.Text  = number
                    location[flag] = number
                    callback(number)
                end
            end)
            
            box:GetPropertyChangedSignal('Text'):connect(function()
                box.Text = string.gsub(box.Text, ""[%a+]"", """");
            end)

            local renderSteppedConnection;
            local inputBeganConnection;
            local inputEndedConnection;
            local mouseLeaveConnection;
            local mouseDownConnection;
            local mouseUpConnection;

            check:FindFirstChild(name).Container.MouseEnter:connect(function()
                local function update()
                    if renderSteppedConnection then renderSteppedConnection:disconnect() end 
                    

                    renderSteppedConnection = game:GetService('RunService').RenderStepped:connect(function()
                        local mouse = game:GetService(""UserInputService""):GetMouseLocation()
                        local percent = (mouse.X - overlay.Container.AbsolutePosition.X) / (overlay.Container.AbsoluteSize.X)
                        percent = math.clamp(percent, 0, 1)
                        percent = tonumber(string.format(""%.2f"", percent))

                        overlay.Container.Button.Position = UDim2.new(math.clamp(percent, 0, 0.99), 0, 0, 1)
                        
                        local num = min + math.floor((max - min) * percent * 100)/100
                        local value = (precise and num or math.floor(num))

                        box.Text = value;
                        callback(tonumber(value))
                        location[flag] = tonumber(value)
                    end)
                end

                local function disconnect()
                    if renderSteppedConnection then renderSteppedConnection:disconnect() end
                    if inputBeganConnection then inputBeganConnection:disconnect() end
                    if inputEndedConnection then inputEndedConnection:disconnect() end
                    if mouseLeaveConnection then mouseLeaveConnection:disconnect() end
                    if mouseUpConnection then mouseUpConnection:disconnect() end
                end

                inputBeganConnection = check:FindFirstChild(name).Container.InputBegan:connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        update()
                    end
                end)

                inputEndedConnection = check:FindFirstChild(name).Container.InputEnded:connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        disconnect()
                    end
                end)

                mouseDownConnection = check:FindFirstChild(name).Container.Button.MouseButton1Down:connect(update)
                mouseUpConnection   = game:GetService(""UserInputService"").InputEnded:connect(function(a, b)
                    if a.UserInputType == Enum.UserInputType.MouseButton1 and (mouseDownConnection.Connected) then
                        disconnect()
                    end
                end)
            end)    

            if default ~= min then
                if default < min then
                    default = min
                elseif default > max then
                    default = max
                end

                local percent = 1 - ((max - default) / (max - min))
                local number  = default 

                number = tonumber(string.format(""%.2f"", number))
                if (not precise) then
                    number = math.floor(number)
                end

                overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                box.Text  = number
            end

            self:Resize();
            return {
                Set = function(value)
                    if value < min then
                        value = min
                    elseif value > max then
                        value = max
                    end

                    local percent = 1 - ((max - value) / (max - min))
                    local number  = value 

                    number = tonumber(string.format(""%.2f"", number))
                    if (not precise) then
                        number = math.floor(number)
                    end

                    overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                    box.Text  = number
                    location[flag] = number
                    callback(number)
                end
            }
        end 

        function types:SearchBox(text, options, callback)
            options = options or {}
            local list = options.list or {};
            local flag = options.flag or """";
            local location = options.location or self.flags;
            local callback = callback or function() end;

            local busy = false;
            local box = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextBox', {
                    Text = """";
                    PlaceholderText = text;
                    PlaceholderColor3 = Color3.fromRGB(60, 60, 60);
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    Name = 'Box';
                    Size = UDim2.new(1, -10, 0, 20);
                    Position = UDim2.new(0, 5, 0, 4);
                    TextColor3 = library.options.textcolor;
                    BackgroundColor3 = library.options.dropcolor;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    ClipsDescendants = true;
                });
                library:Create('ScrollingFrame', { --Move it here so it doesnt conflict with textbox
                    Position = UDim2.new(0, 0, 1, 1);
                    Name = 'Container';
                    BackgroundColor3 = library.options.btncolor;
                    ScrollBarThickness = 0;
                    BorderSizePixel = 0;
                    BorderColor3 = library.options.bordercolor;
                    ScrollingDirection = Enum.ScrollingDirection.Y;
                    Size = UDim2.new(1, 0, 0, 0);
                    library:Create('UIListLayout', {
                        Name = 'ListLayout';
                        SortOrder = Enum.SortOrder.LayoutOrder;
                    });
                    ZIndex = 2;
                });
                Parent = self.container;
            })

            local function rebuild(text,skip)
                box:FindFirstChild('Container').ScrollBarThickness = 0
                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                    if (not child:IsA('UIListLayout')) then
                        child:Destroy();
                    end
                end

                if #text > 0 or skip then
                    for i, v in next, list do
                        if string.sub(string.lower(v), 1, string.len(text)) == string.lower(text) or v:lower():match(text:lower()) then
                            local button = library:Create('TextButton', {
                                Text = v;
                                Font = library.options.font;
                                TextSize = library.options.fontsize;
                                TextColor3 = library.options.textcolor;
                                BorderColor3 = library.options.bordercolor;
                                TextStrokeTransparency = library.options.textstroke;
                                TextStrokeColor3 = library.options.strokecolor;
                                Parent = box:FindFirstChild('Container');
                                Size = UDim2.new(1, 0, 0, 20);
                                LayoutOrder = i;
                                BackgroundColor3 = library.options.btncolor;
                                ZIndex = 2;
                            })
                            if button.TextBounds.X >= button.AbsoluteSize.X then
                                button.TextScaled = true
                            end
                            button.MouseButton1Down:connect(function()
                                busy = true;
                                box:FindFirstChild('Box').Text = button.Text;

                                location[flag] = button.Text;
                                callback(location[flag])

                                box:FindFirstChild('Container').ScrollBarThickness = 0
                                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                                    if (not child:IsA('UIListLayout')) then
                                        child:Destroy();
                                    end
                                end
                                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, 0), 'Out', 'Quad', 0.25, true)
                            end)
                        end
                    end
                end

                local c = box:FindFirstChild('Container'):GetChildren()
                local ry = (20 * (#c)) - 20

                local y = math.clamp((20 * (#c)) - 20, 0, 100)
                if ry > 100 then
                    box:FindFirstChild('Container').ScrollBarThickness = 5;
                end

                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, y), 'Out', 'Quad', 0.25, true)
                box:FindFirstChild('Container').CanvasSize = UDim2.new(1, 0, 0, (20 * (#c)) - 20)
            end

            local check = box:FindFirstChild('Box');
            check.Focused:connect(function()
                rebuild(box:FindFirstChild('Box').Text,true)
                if box:FindFirstChild('Box').TextBounds.X >= box:FindFirstChild('Box').AbsoluteSize.X then
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Right
                else
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Center
                end
            end)
            check.FocusLost:connect(function(enterboolean)
                task.wait(.12)
                if busy then
                    busy = false;
                    return;
                end
                if check.Text == """" then
                    location[flag] = tostring(check.Text);
                    callback(location[flag])
                elseif enterboolean and box:FindFirstChild('Container'):GetChildren()[2] then
                    check.Text = box:FindFirstChild('Container'):GetChildren()[2].Text;
                    location[flag] =box:FindFirstChild('Container'):GetChildren()[2].Text;
                    callback(location[flag])
                end

                box:FindFirstChild('Container').ScrollBarThickness = 0
                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                    if (not child:IsA('UIListLayout')) then
                        child:Destroy();
                    end
                end
                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, 0), 'Out', 'Quad', 0.25, true)
            end);

            box:FindFirstChild('Box'):GetPropertyChangedSignal('Text'):connect(function()
                if (not busy) then
                    rebuild(box:FindFirstChild('Box').Text)
                end
                if box:FindFirstChild('Box').TextBounds.X >= box:FindFirstChild('Box').AbsoluteSize.X then
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Right
                else
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Center
                end
            end);

            local function refresh(new_list)
                list = new_list;
            end
            local function reload(new_list)
                list = new_list;
                rebuild("""")
            end
            self:Resize();
            return {
                ['Reload'] = reload;
                ['Refresh'] = refresh;
                ['Box'] = box:FindFirstChild('Box');
            }
        end
        
        
        function types:Dropdown(name, options, callback)
            options = options or {}
            local location = options.location or self.flags;
            local flag = options.flag or """";
            local callback = callback or function() end;
            local list = options.list or {};
            local default = options.default or list[1]
            local colors = options.colors or {}

            location[flag] = default or list[1]
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                BackgroundColor3 = Color3.fromRGB(25, 25, 25);
                BorderSizePixel = 0;
                LayoutOrder = self:GetOrder();
                library:Create('Frame', {
                    Name = 'dropdown_lbl';
                    BackgroundTransparency = 0;
                    BackgroundColor3 = library.options.dropcolor;
                    Position = UDim2.new(0, 5, 0, 4);
                    BorderColor3 = library.options.bordercolor;
                    Size     = UDim2.new(1, -10, 0, 20);
                    library:Create('TextLabel', {
                        Name = 'Selection';
                        Size = UDim2.new(1, 0, 1, 0);
                        Text = location[flag];
                        TextColor3 = colors[v] or library.options.textcolor;
                        BackgroundTransparency = 1;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                    library:Create(""TextButton"", {
                        Name = 'drop';
                        BackgroundTransparency = 1;
                        Size = UDim2.new(0, 20, 1, 0);
                        Position = UDim2.new(1, -25, 0, 0);
                        Text = 'v';
                        TextColor3 = library.options.textcolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                });
                Parent = self.container;
            });
            
            local button = check:FindFirstChild('dropdown_lbl').drop;
            local input;
            
            button.MouseButton1Click:connect(function()
                if (input and input.Connected) then
                    return
                end 
                
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = Color3.fromRGB(60, 60, 60);
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text = name;
                local c = 0;
                for i, v in next, list do
                    c = c + 20;
                end

                local size = UDim2.new(1, 0, 0, c)

                local clampedSize;
                local scrollSize = 0;
                if size.Y.Offset > 100 then
                    clampedSize = UDim2.new(1, 0, 0, 100)
                    scrollSize = 5;
                end
                
                local goSize = (clampedSize ~= nil and clampedSize) or size;    
                local container = library:Create('ScrollingFrame', {
                    TopImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png';
                    BottomImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png';
                    Name = 'DropContainer';
                    Parent = check:FindFirstChild('dropdown_lbl');
                    Size = UDim2.new(1, 0, 0, 0);
                    BackgroundColor3 = library.options.bgcolor;
                    BorderColor3 = library.options.bordercolor;
                    Position = UDim2.new(0, 0, 1, 0);
                    ScrollBarThickness = scrollSize;
                    CanvasSize = UDim2.new(0, 0, 0, size.Y.Offset);
                    ZIndex = 5;
                    ClipsDescendants = true;
                    library:Create('UIListLayout', {
                        Name = 'List';
                        SortOrder = Enum.SortOrder.LayoutOrder
                    })
                })

                for i, v in next, list do
                    local btn = library:Create('TextButton', {
                        Size = UDim2.new(1, 0, 0, 20);
                        BackgroundColor3 = library.options.btncolor;
                        BorderColor3 = library.options.bordercolor;
                        Text = v;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        LayoutOrder = i;
                        Parent = container;
                        ZIndex = 5;
                        TextColor3 = colors[v] or library.options.textcolor;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                    
                    btn.MouseButton1Click:connect(function()
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text = btn.Text;

                        location[flag] = tostring(btn.Text);
                        callback(location[flag])

                        game:GetService('Debris'):AddItem(container, 0)
                        input:disconnect();
                    end)
                end
                
                container:TweenSize(goSize, 'Out', 'Quad', 0.15, true)
                
                local function isInGui(frame)
                    local mloc = game:GetService('UserInputService'):GetMouseLocation();
                    local mouse = Vector2.new(mloc.X, mloc.Y - 36);
                    
                    local x1, x2 = frame.AbsolutePosition.X, frame.AbsolutePosition.X + frame.AbsoluteSize.X;
                    local y1, y2 = frame.AbsolutePosition.Y, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y;
                
                    return (mouse.X >= x1 and mouse.X <= x2) and (mouse.Y >= y1 and mouse.Y <= y2)
                end
                
                input = game:GetService('UserInputService').InputBegan:connect(function(a)
                    if a.UserInputType == Enum.UserInputType.MouseButton1 and (not isInGui(container)) then
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text       = location[flag];

                        container:TweenSize(UDim2.new(1, 0, 0, 0), 'In', 'Quad', 0.15, true)
                        wait(0.15)

                        game:GetService('Debris'):AddItem(container, 0)
                        input:disconnect();
                    end
                end)
            end)
            
            self:Resize();
            local function reload(array,default)
                list = array;
                location[flag] = default or array[1];
                pcall(function()
                    input:disconnect()
                end)
                check:WaitForChild('dropdown_lbl').Selection.Text = location[flag]
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                game:GetService('Debris'):AddItem(container, 0)
            end

            return {
                Refresh = reload;
            }
        end
        function types:DropSection(name)
            local check = library:Create('Frame', {
                Name = 'DropSection';
                BackgroundTransparency = 1;
                Size = UDim2.new(1,0,0,25);
                BackgroundColor3 = library.options.sectncolor;
                BorderSizePixel = 0;
                LayoutOrder = self:GetOrder();
        
                library:Create('Frame',{
                    Name = 'SectionFrame';
                    BackgroundTransparency = 1;
                    Position = UDim2.new(0, 5, 0, 4);
                    Size = UDim2.new(1, -10, 0, 20);
                    BackgroundColor3 = library.options.sectncolor;
                    BorderSizePixel = 0;

                    library:Create('TextLabel', {
                        Name = 'section_lbl';
                        Text = name;
                        BackgroundTransparency = 0;
                        BorderSizePixel = 0;
                        BackgroundColor3 = library.options.sectncolor;
                        TextColor3 = library.options.textcolor;
                        Position = UDim2.new();
                        Size     = UDim2.new(1, 0, 1, 0);
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                    library:Create(""TextButton"", {
                        Name = 'drop';
                        BackgroundTransparency = 1;
                        Size = UDim2.new(1, -5, 1, 0);
                        Position = UDim2.new();
                        Text = ""-"";
                        TextColor3 = library.options.textcolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextXAlignment = Enum.TextXAlignment.Right;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                });
                Parent = self.container;
            });
            local Container = library:Create('Frame',{
                Name = 'Container';
                BackgroundTransparency = 0;
                Size = UDim2.new();
                Position = UDim2.new(0,0,0,25);
                BackgroundTransparency = 1;
                BorderSizePixel = 0;
                Visible = false;
                Parent = check;
                library:Create('UIListLayout', {
                    Name = 'List';
                    SortOrder = Enum.SortOrder.LayoutOrder;
                });
            });
            
            local button = check:FindFirstChild('SectionFrame').drop;
            local input;
            local dropped = false
            local dropping = false
            local droptypes = types
            droptypes.__index = droptypes
            local Dropper = setmetatable({
                count = 0;
                object = check;
                container = Container;
                textframe = check.SectionFrame.section_lbl;
                toggled = false;
                flags   = {};
        
            }, droptypes)
        
            
            button.MouseButton1Click:connect(function()
                if dropping == false then
                    dropping = true
                    local newcheck
                    local newcon
                    local newy
                    if dropped == false then
                        dropped = true
                    
                        local c = 0;
                        for i, v in next, Container:GetChildren() do
                            if v:IsA('Frame') then
                                c = c + v.Size.Y.Offset;
                            end
                        end
                        c = c +2
            
                        local size = UDim2.new(1, 0, 0, c)
            
                        local clampedSize;
                        local scrollSize = 0;
                        
                        local goSize = (clampedSize ~= nil and clampedSize) or size;
                        newcheck = goSize+UDim2.new(0,0,0,25)
                        newcon = goSize
            
            
                        newy = UDim2.new(1,0,0,(self.container.Size.Y.Offset+newcon.Y.Offset))
                        self.container:TweenSize(newy,'Out','Quad',0.1,true)
                        check:TweenSize(newcheck, 'Out', 'Quad', 0.15, true)
                        Container:TweenSize(goSize, 'Out', 'Quad', 0.15, true)
                        
                        button.Text = ""+""
                        Container.Visible = true
                        Container.ClipsDescendants = false
                    elseif dropped == true then
                        dropped = false
                        local c = 0;
            
                        local size = UDim2.new(1, 0, 0, c)
            
                        local clampedSize;
                        local scrollSize = 0;
                        
                        local goSize = (clampedSize ~= nil and clampedSize) or size;
                        newcheck = UDim2.new(1,0,0,25)
                        newcon = goSize
                        newy = UDim2.new(1,0,0,(self.container.Size.Y.Offset-Container.Size.Y.Offset))
                        Container.ClipsDescendants = true
                        
                        Container:TweenSize(goSize, 'Out', 'Quad', 0.13, true)
                        check:TweenSize(newcheck, 'Out', 'Quad', 0.14, true)
                        self.container:TweenSize(newy,'Out','Quad',0.15,true)
                        
                        
                        button.Text = ""-""
                        Container.Visible = false
                    end
                    repeat wait() until check.Size == newcheck and Container.Size == newcon
                    dropping = false
                end
            end)
            self:Resize();
            function Dropper:SetText(text)
                self.textframe.Text = (type(text) == ""string"" and text) or """";
            end
            return Dropper
        end
    end
    
    function library:Create(class, data)
        local obj = Instance.new(class);
        for i, v in next, data do
            if i ~= 'Parent' then
                
                if typeof(v) == ""Instance"" then
                    v.Parent = obj;
                else
                    obj[i] = v
                end
            end
        end
        
        obj.Parent = data.Parent;
        return obj
    end
    
    function library:CreateWindow(name, options)
        if (not library.container) then
            library.container = self:Create(""ScreenGui"", {
                self:Create('Frame', {
                    Name = 'Container';
                    Size = UDim2.new(1, -30, 1, 0);
                    Position = UDim2.new(0, 20, 0, 20);
                    BackgroundTransparency = 1;
                    Active = false;
                });
                Parent = game:GetService(""CoreGui"");
            }):FindFirstChild('Container');
        end
        
        if (not library.options) then
            library.options = setmetatable(options or {}, {__index = defaults})
        end
        
        local window = types.window(name, library.options);
        dragger.new(window.object);
        return window
    end
    
    default = {
        topcolor       = Color3.fromRGB(30, 30, 30);
        titlecolor     = Color3.fromRGB(255, 255, 255);
        
        
        underlinecolor = ""rainbow"";
        bgcolor        = Color3.fromRGB(30, 30, 30);    -- Background Color
        boxcolor       = Color3.fromRGB(30, 30, 30);    -- Box Inner Color
        btncolor       = Color3.fromRGB(50, 50, 50);    -- Button Color
        dropcolor      = Color3.fromRGB(30, 30, 30);    -- Dropdown Color
        sectncolor     = Color3.fromRGB(35, 35, 35);    -- Section / Label Colors
        bordercolor    = Color3.fromRGB(60, 60, 60);    -- Borders around boxes, toggles, buttons Color

        font           = Enum.Font.SourceSans;
        titlefont      = Enum.Font.Code;

        fontsize       = 17;
        titlesize      = 18;

        textstroke     = 1;
        titlestroke    = 1;

        strokecolor    = Color3.fromRGB(0, 0, 0);

        textcolor      = Color3.fromRGB(255, 255, 255);
        titletextcolor = Color3.fromRGB(255, 255, 255);

        placeholdercolor = Color3.fromRGB(255, 255, 255);
        titlestrokecolor = Color3.fromRGB(0, 0, 0);

        toggledisplay = 'Check';
    }

    library.options = setmetatable({}, {__index = default})

    spawn(function()
        local props = {
            ['Frame'] = 'BackgroundColor3';
            ['TextLabel'] = 'TextColor3';
            ['TextButton'] = 'TextColor3';	
        }
        while true do
            for i=0, 1, 1 / 300 do              
                for _, obj in next, library.rainbowtable do
                    obj[props[obj.ClassName]] = Color3.fromHSV(i, 1, 1);
                end
                wait()
            end;
        end
    end)

    local function isreallypressed(bind, inp)
        local key = bind
        if typeof(key) == ""Instance"" then
            if key.UserInputType == Enum.UserInputType.Keyboard and inp.KeyCode == key.KeyCode then
                return true;
            elseif tostring(key.UserInputType):find('MouseButton') and inp.UserInputType == key.UserInputType then
                return true
            end
        end
        if tostring(key):find'MouseButton1' then
            return key == inp.UserInputType
        else
            return key == inp.KeyCode
        end
    end

    game:GetService(""UserInputService"").InputBegan:connect(function(input)
        if (not library.binding) then
            for idx, binds in next, library.binds do
                local real_binding = binds.location[idx];
                if real_binding and isreallypressed(real_binding, input) then
                    binds.callback()
                end
            end
        end
    end)
end
return library"
PYzgdMCy,auto medic main,DuyOnline101,Lua,Monday 14th of August 2023 03:26:29 AM CDT,"--Locals
local RS, TW, RF, LPSR = game:GetService(""ReplicatedStorage""), workspace:WaitForChild(""Towers""), game:GetService(""ReplicatedStorage""):WaitForChild(""RemoteFunction""), nil
local Medics, MedicIndex, MedicAbility, MedicMicro, StunnedCount, status, library = {}, 0, false, true, 0, nil,loadstring(game:HttpGet(""https://pastebin.com/N4mZbPUU"", true))()
local AbilityDelay = 2 --Change to 1.5, or 1. Whichever works best
local Debounce = false
local Debug = true
local TowersStunnedBeforeAbility = 8 --Can be changed.
local EngineMode = getgenv().EngineMode or false
local FuncTable 
--Functions
local function prints(v)
    if Debug then
        warn(v)
    end
end
local function getStatus()
    if status then
        return status.Text
    else
        return """"
    end
end
local function setStatus(v)
    if status then
        status.Text = v
    else
        warn(v)
    end
end
local function microTower(tower)
    setStatus(""Microing Medic..."")
    local frame = tower.HumanoidRootPart.CFrame
    local tname = tower.Replicator:GetAttribute(""Type"")
    local upgrade = tower.Replicator:GetAttribute(""Upgrade"")
    --Sell tower
    RF:InvokeServer(""Troops"",""Sell"",{Troop = tower})
    --Place tower
    tower = RF:InvokeServer(""Troops"",""Place"",tname,{Rotation = frame.Rotation,Position = frame.Position})
    --Upgrade tower
    for i = 1, upgrade do
        RF:InvokeServer(""Troops"",""Upgrade"",""Set"",{Troop = tower})
    end
    prints(""Microed tower!"")
    return tower
end

local function checkStun(tower) -- checks stuns of tower
    local repl = tower:FindFirstChild(""Replicator"")
    if not repl then return false end 
    local stuns = repl.Stuns
    for i,v in pairs(stuns:GetAttributes()) do
        if v == true then
            prints(""Detected Stun!"")
            return true
        end
    end
    return false
end
local function refreshStun(medic)
    local st = 0
    for i,v in pairs(workspace.Towers:GetChildren()) do
        if (medic.HumanoidRootPart.Position-v.HumanoidRootPart.Position).Magnitude <= medic.Replicator:GetAttribute(""Range"") and checkStun(v) then
            st = st + 1
        end
    end
    return st
end
local function Medic1()
    if #Medics < 1 then
        return ""Waiting for Medic...""
    end
    MedicIndex = (MedicIndex % #Medics) + 1
    local selectedMedic = Medics[MedicIndex]
    if selectedMedic.Replicator:GetAttribute(""Upgrade"") < 5 then 
        return ""Waiting for lvl 5 medic...""
    elseif StunnedCount < 1 then
        return ""Waiting for stun...""
    end
        -- Use Ability
    if MedicAbility then
        wait(AbilityDelay)
        if #Medics < 1 then return ""You sold your medic ._."" end
        if not selectedMedic then
            MedicIndex = (MedicIndex % #Medics) + 1
            selectedMedic = Medics[MedicIndex]  
        end
        StunnedCount = refreshStun(selectedMedic)
        MedicIndex = MedicIndex + 1
        if selectedMedic.Replicator:GetAttribute(""Upgrade"") < 5 then
            return ""Waiting for lvl 5 medic...""
        elseif StunnedCount < 1 then
            return ""Waiting for stun...""
        end
        local Re = RF:InvokeServer(""Troops"",""Abilities"",""Activate"",{Troop = selectedMedic,Name = ""Cleansing""})
        if not Re then --Ability on cooldown, micro medic
            if MedicMicro then
                if selectedMedic.Replicator:GetAttribute(""Worth"") > LPSR:GetAttribute(""Cash"") then return ""You can't afford to Micro! Waiting..."" end
                selectedMedic = microTower(selectedMedic)
                RF:InvokeServer(""Troops"",""Abilities"",""Activate"",{Troop = selectedMedic,Name = ""Cleansing""})       
                StunnedCount = refreshStun(selectedMedic)
                return ""Used Ability!""
            else
                return ""Ability on cooldown... Waiting...""
            end
        else
            StunnedCount = refreshStun(selectedMedic)
            return ""Used Ability!""
        end
    else
        return ""Medic Ability Not turned on!""
    end
    return ""An error occured...""
end
local function Medic()
    if not Debounce then
        Debounce = true
        local re = Medic1()
        Debounce = false
        return re or ""An error occured...""
    else
        return getStatus()
    end
end

local function monitorTower(tower)
    if tower:FindFirstChild(""Owner"").Value and tower:FindFirstChild(""Owner"").Value == game:GetService(""Players"").LocalPlayer.UserId and tower.Replicator:GetAttribute(""Type"") == ""Medic"" then
        table.insert(Medics,tower)
        prints(""Medic found! Adding to list..."")
        setStatus(Medic())
        if tower.Replicator:GetAttribute(""Upgrade"") < 5 then
            local Temp = nil
            Temp = tower.Replicator:GetAttributeChangedSignal(""Upgrade""):Connect(function()
                if tower.Parent == nil then
                    Temp:Disconnect()
                    return
                end
                if tower.Replicator:GetAttribute(""Upgrade"") == 5 then
                    prints(""Medic maxed!"")
                    setStatus(Medic())
                    Temp:Disconnect()
                end
            end)
        end
    else   
        prints(""Found tower that isn't medic! Monitoring for stun..."") 
        if checkStun(tower) then
            StunnedCount = StunnedCount + 1
            if StunnedCount >= TowersStunnedBeforeAbility then
                setStatus(Medic())
                prints(""Stunned count reached! using abi..."")
            end
        end
        local stuns = tower.Replicator:WaitForChild(""Stuns"")
        stuns.Changed:Connect(function()
            if checkStun(tower) then
                StunnedCount = StunnedCount + 1 --detects stuns, requests medic ability
                if StunnedCount >= TowersStunnedBeforeAbility then
                    setStatus(Medic())
                    prints(""Stunned count reached! using abi..."")
                end
            end
        end)
    end
end

--Initialization
if not game:IsLoaded() then game.Loaded:Wait() end
if getgenv().AlrExec then
	game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Script Already Executed."";
        Duration = 6;
	})
	return
elseif game.PlaceId ~= 5591597781 then
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Not in game! Killing script..."";
        Duration = 6;
    })
    return
else
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Script Executed! Enjoy :)"";
        Duration = 6;
    })
end
getgenv().AlrExec = true
for i,v in pairs(RS.StateReplicators:GetChildren()) do
    if v:GetAttribute(""UserId"") and v:GetAttribute(""UserId"") == game.Players.LocalPlayer.UserId then
        LPSR = v
    end
end
--Main 
if EngineMode then
    FuncTable = {
        Enabled = function(v)
            MedicAbility = v
        end,
        Micro = function(v)
            MedicMicro = v
        end,
        MinStuns = function(v)
            TowersStunnedBeforeAbility = v
        end
    }
else
    local w = library:CreateWindow(""Auto Medic Ability V3"")
    w:Toggle(""Auto Medic Abilities"", {default = true, flag='enabled'}, function() MedicAbility = w.flags.enabled end)
    w:Toggle(""Auto Micro Medics"", {flag='microing'}, function() MedicMicro = w.flags.microing end)
    w:Slider(""Min. Stuns"",{min = 1, max = 20, default=5, precise = false, flag = w.flags.mintower},function(value)
        value = tonumber(value)
        if not value then value = 1 end
        TowersStunnedBeforeAbility = value
    end)
    w:Button(""Delete Gui"",function()
        --w:DestroyGui() --MM IS A NERD
        for i,v in pairs(game:GetService(""CoreGui""):GetDescendants()) do
            if v:IsA(""Frame"") and v.Name == ""Auto Medic Ability V3"" then
                v.Parent.Parent:Destroy()
            end
        end
        getgenv().TowerAddedM:Disconnect()
        getgenv().TowerRemovedM:Disconnect()
        StatusTable = nil
        getgenv().AlrExecMAC = false
    end)
    w:Section('Loading...')
    for i,v in pairs(game:GetService(""CoreGui""):GetDescendants()) do
        if v:IsA(""TextLabel"") and v.Text == ""Loading..."" then
            status = v
        end
    end
end

for i,v in pairs(game:GetService(""Workspace"").Towers:GetChildren()) do
   monitorTower(v)
end

getgenv().TowerAddedM = game:GetService(""Workspace"").Towers.ChildAdded:Connect(function(v)
    wait(.25)
    if not v:FindFirstChild(""Replicator"") then
        repeat wait() until v:FindFirstChild(""Replicator"")
    end
    monitorTower(v)
end)

getgenv().TowerRemovedM = game:GetService(""Workspace"").Towers.ChildRemoved:Connect(function(v)
    if v:FindFirstChild(""Owner"").Value and v:FindFirstChild(""Owner"").Value == game:GetService(""Players"").LocalPlayer.UserId and v.Replicator:GetAttribute(""Type"") == ""Medic"" then
        for i,t in next,Medics do
            if t == v then
                table.remove(Medics,i)
                spawn(function()
                    setStatus(""Medic Removed!"")
                    wait(1)
                    setStatus(Medic())
                end)             
            end
        end
    end
end)
setStatus(Medic())
if EngineMode then return FuncTable end"
TmedGVTe,auto medic engine,DuyOnline101,Lua,Monday 14th of August 2023 03:26:29 AM CDT,"getgenv().EngineMode = true
local AutoMedic = loadstring(game:HttpGet(""https://pastebin.com/raw/PYzgdMCy"",true))()
AutoMedic.Enabled(true) --skip
AutoMedic.Micro(true)
AutoMedic.MinStuns(1)"
XwdW6dn1,B,Salvens,C++,Monday 14th of August 2023 03:22:16 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 1e5 + 1000;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(0);
    for (int i = 0; i < n; ++i) {
        sq[i / B] += (a[i] == 0 ? 1 : 0);
    }
}

inline int get(int l, int r) {
    int ans = 0;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans += sq[l / B];
            l += B;
        } else {
            ans += (a[l] == 0? 1 : 0);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int q;
    cin >> q;
    while (q--) {
        int l, r;
        cin >> l >> r;
        --l, --r;
        cout << get(l, r) << ' ';
    }
}
"
wSchwBzS,A,Salvens,C++,Monday 14th of August 2023 03:19:24 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 1e5 + 1000;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(-INF);
    for (int i = 0; i < n; ++i) {
        sq[i / B] = max(sq[i / B], a[i]);
    }
}

inline int get(int l, int r) {
    int ans = -INF;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = max(ans, sq[l / B]);
            l += B;
        } else {
            ans = max(ans, a[l]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int q;
    cin >> q;
    while (q--) {
        int l, r;
        cin >> l >> r;
        --l, --r;
        cout << get(l, r) << ' ';
    }
}
"
2dT1v09K,compactor.lua,k2green,Lua,Monday 14th of August 2023 03:11:28 AM CDT,"local args = { ... }

local function turnTo(block)
    while true do
        if turtle.detect() then
            local success, data = turtle.inspect()

            if data.name == block then
                break
            end
        end

        turtle.turnLeft()
    end
end

local function fillSlot(slot)
    turtle.select(slot)

    while turtle.getItemCount() < 1 do
        turtle.suck(1)
    end
end

local function craftLoopIteration()
    turnTo(args[1])

    for y = 1, 4, 1 do
        for x = 1, 4, 1 do
            if x ~= 4 and y ~= 4 then
                local slot = (y - 1) * 4 + x
                fillSlot(slot)
            end
        end
    end

    turtle.select(1)
    turtle.craft()

    turnTo(args[2])
    turtle.drop()
end

if type(args[1]) ~= ""string"" or type(args[2]) ~= ""string"" then
    print(""Usage: compactor <source_invenory> <output_inventory>"")
else
    while true do
        craftLoopIteration()
    end
end"
