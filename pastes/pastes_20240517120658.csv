id,title,username,language,date,content
NDrAvP4K,Untitled,yash123321,JSON,Friday 17th of May 2024 06:59:57 AM CDT,"{
  ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
  ""source"": ""DEALER_WEEKLY_SCHEDULE"",
  ""daySlotAvailabilityList"": [
    {
      ""day"": 6,
      ""slotAvailabilityList"": [
        {
          ""startTime"": ""00:15:00"",
          ""endTime"": ""00:45:00"",
          ""isUnavailable"": false
        },
        {
          ""startTime"": ""01:15:00"",
          ""endTime"": ""01:30:00"",
          ""isUnavailable"": true
        }
      ]
    }
  ],
  ""dayLimits"": {
    ""dayToLimitsMap"": {
      ""6"": [
        {
          ""limitPer"": ""DAY"",
          ""limit"": 106
        },
        {
          ""limitPer"": ""SLOT"",
          ""limit"": null
        }
      ]
    }
  }
}"
i42qpUfL,Untitled,yash123321,JSON,Friday 17th of May 2024 06:57:52 AM CDT,"{
  ""dealerUuid"": ""b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35"",
  ""source"": ""DEALER_DATEWISE_SCHEDULE"",
  ""dateLimits"": {
    ""dateToLimitsMap"": {
      ""2024-05-18 00:00:00"": [
        {
          ""limitPer"": ""DAY"",
          ""limit"": 106
        },
        {
          ""limitPer"": ""SLOT"",
          ""limit"": null
        }
      ]
    }
  },
  ""dateSlotAvailabilityList"": [
    {
      ""date"": ""2024-05-18 00:00:00"",
      ""slotAvailabilityList"": [
        {
          ""startTime"": ""00:00:00"",
          ""endTime"": ""00:14:59"",
          ""isUnavailable"": true
        }
      ]
    }
  ]
}"
5skKcvTJ,Review Blaze Markets,fxvnpro,PHP,Friday 17th of May 2024 06:33:57 AM CDT,"https://www.fxvnpro.com/review-blaze-markets/
 
Blaze Markets was born out of the need to have a trading environment that is efficient and beneficial to the trader. Blaze Markets was founded to improve the overall trading experience for investors – one that helps facilitate trading success.



Blaze Markets strives to be the one-stop destination for traders where they can access a superior trading platform and trade CFDs, Forex, Commodities, Indices, Cryptocurrency, and more – all from a single account.



Our mission is to provide a trading environment with competitive pricing and the most advanced tech so you can get in and out of trades fast and efficiently. This means fast execution speeds, reduced slippage, and as low as 0.0 pip spreads.



That which sets us apart from other trading platforms is our deep insight into what our traders need. Traders trade with confidence as we offer them a combination of pricing, cutting-edge platforms, execution speed, wide range of products, market analysis and customer support.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanyBlaze Markets LtdFoundation2020CountrySaint Vincent and the GrenadinesRegulationBlaze Markets Ltd is registered by the Financial Services Authority (FSA) of St. Vincent &amp; the Grenadines asan International Business Company with the registration number 26027 BC 2020.Minimum Initial Deposit$100Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Wire Transfer, Tether Account Withdrawal MethodsVisa, Master Card, Wire Transfer, Tether Live ChatNoEmailsupport@blazemarkets.comCall+1-646-873-6888



ADVANTAGES



Free Demo AccountYesSpreadsFrom 0.0 pipsStop Out Level50%Execution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoPromotionsNoTrading Platforms&nbsp;MetaTrader 4ScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Metals , Indices, Crypto



DISADVANTAGES



RestrictionsBlaze Markets does not accept clients from the U.S., Iraq, Sudan, Syria and North Korea.
"
jJRTtgNC,Review Blaze Markets,reviewbrokers,PHP,Friday 17th of May 2024 06:33:45 AM CDT,"https://www.reviewbrokers.net/review-blaze-markets/
 
Blaze Markets was born out of the need to have a trading environment that is efficient and beneficial to the trader. Blaze Markets was founded to improve the overall trading experience for investors – one that helps facilitate trading success.



Blaze Markets strives to be the one-stop destination for traders where they can access a superior trading platform and trade CFDs, Forex, Commodities, Indices, Cryptocurrency, and more – all from a single account.



Our mission is to provide a trading environment with competitive pricing and the most advanced tech so you can get in and out of trades fast and efficiently. This means fast execution speeds, reduced slippage, and as low as 0.0 pip spreads.



That which sets us apart from other trading platforms is our deep insight into what our traders need. Traders trade with confidence as we offer them a combination of pricing, cutting-edge platforms, execution speed, wide range of products, market analysis and customer support.



Broker Logo &nbsp;







Broker Type-CompanyBlaze Markets LtdFoundation2020CountrySaint Vincent and the GrenadinesRegulationBlaze Markets Ltd is registered by the Financial Services Authority (FSA) of St. Vincent &amp; the Grenadines asan International Business Company with the registration number 26027 BC 2020.The JurisdictionsBlaze Markets does not accept clients from the U.S., Iraq, Sudan, Syria and North Korea.Live ChatNoEmailsupport@blazemarkets.comCall+1-646-873-6888







Free Demo AccountsYesMinimum Initial Deposit$100Multi-Currency AccountUSDSpreadsFrom 0.0 pipsStop Out Level50%Introducing Brokers ProgramYesSwap FreeNoPromotionsNoTrading Platforms&nbsp;MetaTrader 4ScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Wire Transfer, Tether 
"
hT87jAiB,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 17th of May 2024 06:19:37 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_387499.pdf

Working as of:
17 May 2024"
iQQ2M4aU,KDrama (Biram),AhmadXploit,Dart,Friday 17th of May 2024 06:19:02 AM CDT,"{
  ""kdramas"": [
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""title"": ""Peaky Blinders 1"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""oVzVdvGIC7U"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""uIJ07Wg5i0k"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""t5D4-nTAWLY"",
         ""seasons"": ""Season 3"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S3 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S3 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""q7TTegtooUo"",
         ""seasons"": ""Season 4"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S4 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S4 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""Ruyl8_PT_y8"",
         ""seasons"": ""Season 5"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S5 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S5 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""PxZ5gGfPtCQ"",
         ""seasons"": ""Season 6"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S6 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S6 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://s2.lk21static.xyz/wp-content/uploads/2024/03/film-queen-of-tears-2024-lk21-d21.jpg"",
      ""videoId"": ""Gg2D8zrzlOA"",
      ""title"": ""Queen of Tears"",
      ""hashtag"": ""2024 | Drama | Family | Romance"",
      ""synopsis"": ""Kisah cinta ajaib tentang pasangan suami istri yang mengatasi krisis yang memusingkan."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHjr5uMdYadSgCRqk7AlJKCspoCEl0JQ0U_ZoWO-jzap7MkoVMbXk5qJo&s=10"",
         ""videoId"": ""Gg2D8zrzlOA"",
         ""seasons"": ""Season Done"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""E1"",
			  ""urlDownload"": ""https://emturbovid.com/d/k0HMhP45CEe1ChaSjunM""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""E2"",
			  ""urlDownload"": ""https://emturbovid.com/d/2vk7rviKKebgHbzGjlVp""
			},
			{
			  ""episode"": ""Episode 3"",
			  ""se"": ""E3"",
			  ""urlDownload"": ""https://emturbovid.com/d/LcSUk7EUvJS57AWFrfBQ""
			},
			{
			  ""episode"": ""Episode 4"",
			  ""se"": ""E4"",
			  ""urlDownload"": ""https://emturbovid.com/d/qE7aKsztMDH1lYdReviK""
			},
			{
			  ""episode"": ""Episode 5"",
			  ""se"": ""E5"",
			  ""urlDownload"": ""https://emturbovid.com/d/s9n3JRRrWO5xa4wMLPpM""
			},
			{
			  ""episode"": ""Episode 6"",
			  ""se"": ""E6"",
			  ""urlDownload"": ""https://emturbovid.com/d/v6jpKPLfoWBYHMiXXh12""
			},
			{
			  ""episode"": ""Episode 7"",
			  ""se"": ""E7"",
			  ""urlDownload"": ""https://emturbovid.com/d/w0HDRrFO320NxWQChNRo""
			},
			{
			  ""episode"": ""Episode 8"",
			  ""se"": ""E8"",
			  ""urlDownload"": ""https://emturbovid.com/d/KXT9SmZ7XJ1t0O7FS0sK""
			},
			{
			  ""episode"": ""Episode 9"",
			  ""se"": ""E9"",
			  ""urlDownload"": ""https://emturbovid.com/d/03hcPu8lsmkLjbB4npE6""
			},
			{
			  ""episode"": ""Episode 10"",
			  ""se"": ""E10"",
			  ""urlDownload"": ""https://emturbovid.com/d/smhaZfRJF2ujSsMyVd00""
			},
			{
			  ""episode"": ""Episode 11"",
			  ""se"": ""E11"",
			  ""urlDownload"": ""https://emturbovid.com/d/BwkIJGA4lCYWURnlOeHJ""
			},
			{
			  ""episode"": ""Episode 12"",
			  ""se"": ""E12"",
			  ""urlDownload"": ""https://filelions.site/download/l38jn4u9bkv0_n""
			},
			{
			  ""episode"": ""Episode 13"",
			  ""se"": ""E13"",
			  ""urlDownload"": ""https://emturbovid.com/d/NqpTrO3ZTD5hXIPyyiND""
			},
			{
			  ""episode"": ""Episode 14"",
			  ""se"": ""E14"",
			  ""urlDownload"": ""https://emturbovid.com/d/usu1Zm91LRP2E5VHWDlg""
			},
			{
			  ""episode"": ""Episode 15"",
			  ""se"": ""E15"",
			  ""urlDownload"": ""https://emturbovid.com/d/662d3620e087a""
			},
			{
			  ""episode"": ""Episode 16"",
			  ""se"": ""E16"",
			  ""urlDownload"": ""https://emturbovid.com/d/662e84627ec60""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 3"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    },
    {
      ""imgUrl"": ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAN7J_3cOH6eGQlYsIUY4f5qBhL8rqaW7ZVg&usqp=CAU"",
      ""videoId"": ""ONHBaC-pfsk"",
      ""title"": ""Peaky Blinders 4"",
      ""hashtag"": ""2016 | Action | Family | 18+"",
      ""synopsis"": ""Ada seorang prajurit....."",
      ""seasons"": [
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 1"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S1 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S1 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		},
		{
		 ""imgUrl"": ""https://drive.google.com/uc?export=view&id=1Ejunapbyo7fEEK7CtQVj7r5fqg0csVfJ"",
         ""videoId"": ""ONHBaC-pfsk"",
         ""seasons"": ""Season 2"",
         ""eps"": [
			{
			  ""episode"": ""Episode 1"",
			  ""se"": ""S2 E1"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			},
			{
			  ""episode"": ""Episode 2"",
			  ""se"": ""S2 E2"",
			  ""urlDownload"": ""https://drive.usercontent.google.com/download?id=1QHGYVIGdP5Oa69K74xcFeBxJtFOTvyr-&export=download""
			}
		  ]
		}
	  ]
    }
  ]
}"
07DWWX9J,Untitled,nkazakov,JSON,Friday 17th of May 2024 06:18:10 AM CDT,"{""data"":{""Response"":{""entity"":{""baskets"":[{""accountId"":1682351,""basketForm"":{""caption"":""Array"",""disabled"":false,""fields"":[{""defaultValue"":""24485402"",""error"":null,""fieldId"":""8191503"",""fieldName"":""paymentMethod"",""fields"":null,""options"":[{""fields"":null,""text"":""Наличный"",""value"":""24485402""},{""fields"":null,""text"":""Безналичный"",""value"":""24485403""}],""required"":true,""title"":""Способ оплаты"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":""24485404"",""error"":null,""fieldId"":""8191504"",""fieldName"":""shipmentAddress"",""fields"":null,""options"":[{""fields"":null,""text"":""196158, Санкт-Петербург г, Московское ш, дом № 7,  # ТЦ Торговый двор звонить за 30 мин +7 (985) 907-85-35 ТК МАЙЕР"",""value"":""24485404""},{""fields"":null,""text"":""196158, Санкт-Петербург г, Московское ш, дом № 7,  # ТЦ Торговый двор звонить за 30 мин +7 (985) 907-85-35 ИП Мацовкин АА."",""value"":""24485405""}],""required"":true,""title"":""Адреса доставки"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":"""",""error"":null,""fieldId"":""8191505"",""fieldName"":""shipmentDate"",""fields"":null,""options"":[{""fields"":null,""text"":""2024-05-17 (пт)"",""value"":""24485406""},{""fields"":null,""text"":""2024-05-18 (сб)"",""value"":""24485407""},{""fields"":null,""text"":""2024-05-19 (вс)"",""value"":""24485408""},{""fields"":null,""text"":""2024-05-20 (пн)"",""value"":""24485409""},{""fields"":null,""text"":""2024-05-21 (вт)"",""value"":""24485410""},{""fields"":null,""text"":""2024-05-22 (ср)"",""value"":""24485411""},{""fields"":null,""text"":""2024-05-23 (чт)"",""value"":""24485412""},{""fields"":null,""text"":""2024-05-24 (пт)"",""value"":""24485413""},{""fields"":null,""text"":""2024-05-25 (сб)"",""value"":""24485414""},{""fields"":null,""text"":""2024-05-26 (вс)"",""value"":""24485415""}],""required"":true,""title"":""Дата доставки"",""type"":4,""typeName"":""SelectField"",""validation"":null},{""defaultValue"":"""",""error"":null,""fieldId"":""8191506"",""fieldName"":""comment"",""fields"":null,""options"":null,""required"":false,""title"":""Комментарий к заказу"",""type"":3,""typeName"":""TextareaField"",""validation"":null}],""formId"":""1267503"",""formName"":null,""title"":null},""basketId"":""1271748"",""basketItems"":[{""article"":""800720"",""available"":null,""basketItemId"":""19442416"",""brand"":""Sintec"",""delivery"":null,""fields"":null,""orderHash"":""eyJ0aW1lIjoiMTc6MDU6MjAyNCIsImFydGljbGUiOiI4MDA3MjAiLCJicmFuZCI6IlNpbnRlYyIsInRpdGxlIjoiXHUwNDE2XHUwNDM4XHUwNDM0XHUwNDNhXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDRjIFx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQzY1x1MDQzZVx1MDQzN1x1MDQzZFx1MDQzMFx1MDQ0ZiBTaW50ZWMgXHUwNDE0XHUwNDM3XHUwNDM1XHUwNDQwXHUwNDM2XHUwNDM4XHUwNDNkXHUwNDQxXHUwNDNhXHUwNDM4XHUwNDM5IERPVC00IDkxMFx1MDQzMyA4MDA3MjAiLCJ3YXJlaG91c2UiOiJcdTA0MjFcdTA0M2FcdTA0M2JcdTA0MzBcdTA0MzQgXHUwNDMyXHUwNDRiXHUwNDM0XHUwNDMwXHUwNDQ3XHUwNDM4In0="",""price"":""201.7"",""priceTotal"":""201.7"",""quantity"":1,""title"":""Жидкость тормозная Sintec Дзержинский DOT-4 910г 800720"",""warehouse"":""Склад выдачи""}],""hasPartOrder"":true,""vendorId"":""61e309b7-9c6e-45cf-9df6-8467ecc2e585"",""vendorTitle"":""Авторусь (API)""}],""status"":true},""errors"":null,""warnings"":null}},""level"":""debug"",""message"":""response"",""now"":""2024-05-17T11:04:28.740Z"",""timestamp"":""2024-05-17 11:04:28""}"
7BviMc3V,Untitled,evstratbg,Python,Friday 17th of May 2024 06:16:39 AM CDT,"import requests

class APIRequester:
    def get(self, url, params=None, headers=None):
        r""""""
        Sends a GET request.

        Args:
            url (str): The URL to send the GET request to.
            params (dict, optional): The URL parameters to append to the URL. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            response (`requests.Response`): The response of the GET request. See [requests.Response](https://requests.readthedocs.io/en/latest/api/#requests.Response).
        Example:
            ```python
            from api_requester import APIRequester

            requester = APIRequester()
            response = requester.get('https://api.example.com/data', params={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.get(url, params=params, headers=headers)
        return response

    def post(self, url, data=None, json=None, headers=None):
        """"""
        Sends a POST request.

        Args:
            url (str): The URL to send the POST request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the POST request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.post('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.post(url, data=data, json=json, headers=headers)
        return response

    def put(self, url, data=None, json=None, headers=None):
        """"""
        Sends a PUT request.

        Args:
            url (str): The URL to send the PUT request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the PUT request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.put('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.put(url, data=data, json=json, headers=headers)
        return response

    def patch(self, url, data=None, json=None, headers=None):
        """"""
        Sends a PATCH request.

        Args:
            url (str): The URL to send the PATCH request to.
            data (dict or bytes, optional): The form data to send in the body of the request. Defaults to None.
            json (dict, optional): The JSON data to send in the body of the request. Defaults to None.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the PATCH request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.patch('https://api.example.com/data', json={'key': 'value'})
            print(response.status_code)
            ```
        """"""
        response = requests.patch(url, data=data, json=json, headers=headers)
        return response

    def trace(self, url, headers=None):
        """"""
        Sends a TRACE request.

        Args:
            url (str): The URL to send the TRACE request to.
            headers (dict, optional): The headers to send with the request. Defaults to None.

        Returns:
            requests.Response: The response of the TRACE request.

        Example:
            ```python
            requester = APIRequester()
            response = requester.trace('https://api.example.com/trace')
            print(response.status_code)
            ```
        """"""
        response = requests.request('TRACE', url, headers=headers)
        return response
"
zkHQB3G4,Untitled,jevixlugya,Python,Friday 17th of May 2024 06:14:19 AM CDT,"
from kivymd.app import MDApp
from kivy.lang import Builder
from kivy.uix.screenmanager import Screen
from kivy.uix.button import Button
from kivy.uix.recycleview import RecycleView
from kivy.factory import Factory
from kivy.core.audio import SoundLoader

kv = """"""
#:import Factory kivy.factory.Factory

ScreenManager:
    TableOfContentsScreen:
    ContentScreen:
    search:

<PageButton>:
    on_release: self.go_to_page(self.text)
    id:pagebutton
 
<TableOfContentsScreen>:
    name: 'toc'
    GridLayout:
        id: grid
        rows: 4
        cols: 4
<search>:
    name:'search'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            padding:10
            size_hint_y:1/9 
                       
            TextInput:
                multiline:False
                size_hint_y: None
                height: dp(48)
                hint_text:'search hymn'
                on_text:recycle.search_rv(self.text)
        BoxLayout:
            orientation: 'vertical'
            md_bg_color:1,.5,0,.2
            padding: 4
            RV:
                viewclass: 'mybutton'
                data:self.data
                id:recycle
                RecycleBoxLayout:
                    #spacing: 5
                    #padding : 5
                    default_size: None, None
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'


<mybutton@Button>:
    on_press:Factory.PageButton().go_to_page2(self.text)

<ContentScreen>:
    name: 'contents'
    MDBoxLayout:
        orientation: 'vertical'
        #size_hint:self.size
        MDTopAppBar:
            title: 'HYMN'
            #type_height:'large'
            left_action_items: [['arrow-left', lambda x: root.callback()],['sda.png', lambda x: None,]]
            right_action_items: [['magnify',lambda x:root.searchrecycle(),'search']]
            elevation: 1
            md_bg_color:app.theme_cls.accent_color
            specific_text_color:1,1,1,1        

        MDFloatLayout:
            Image:
                id:contim
                source:''
                allow_stretch:True,
                keep_ratio:False


            ScrollView:
                size:self.size
                id:scroll
                effect_cls: 'ScrollEffect'
                size_hint: 1,1
                bar_width:4
                bar_color:app.theme_cls.primary_color
                MDBoxLayout:
                    adaptive_height:True
                    orientation:'vertical'
                    size_hint_y:None
                    height:self.minimum_height
                    width:self.minimum_width
                    cols:1
                    padding:5
                    spacing:20
                    MDLabel:
                        text:""""
                        id:label
                        #font_size:Factory.Settingsscreen().ids.slid.value
                        #color:app.theme_cls.primary_color
                        adaptive_height:True
                        font_style:'H4'
                        #font_name:'fonts/Roboto-BoldItalic.ttf'
                        bold:True

            
            


     
 
""""""
from kivy.animation import Animation 
 
class PageButton(Button):
    hymns = {
        ""Hymn 1"": {
            'tittle':""Gw'oli mutukuvu"",
            'text': ""Ennyimbatext/Gw'oli mutukuvu.txt"",
            'image1':'images/2.jpg',
            'image2':'images/3.jpg',
            'image3':'images/5.jpg'

            },

        'Hymn 2': {
            'text': 'Ennyimbatext/hymn2.txt',
            'image1': 'images/4.jpg',
            'image2':'images/david.jpg',
            'image3':'images/jesus1.jpg' }                              
         }   
    def go_to_page(self,text):

        app = MDApp.get_running_app()
        sm = app.root
        sm.get_screen('contents').ids.label.text = self.get_hymn_text()
        sm.current = 'contents'
        sm.get_screen('contents').ids.contim.source=self.get_image_oftext()#'images/singing angels.jpg'

    def get_hymn_text(self):
        app = MDApp.get_running_app()
        global imageId
        self.imageId=app.root.get_screen('contents').ids.contim 
        self.page=self.text
        self.t=self.page

        #global hymns
        
        with open(self.hymns[f'{self.t}']['text']) as f:
            return f.read()
        
    def get_image_oftext(self):
        self.page=self.text
        image1= self.hymns[f'{self.page}']['image2']
        print(type(image1))
        print(image1)
        return image1

    def get_image2_oftext(self):
        self.page=self.text
        image2= self.hymns[f'{self.page}']['image2']
        print(image2)
        return image2

    def get_image3_oftext(self):
        self.page=self.text
        image3= self.hymns[f'{self.page}']['image3']
        return image3

    def get_images_oftext(self):
        pass
        
#here am trying to animate the images from the dict
    def set_animation(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        anim=Animation(opacity=1,duration=1)   
        anim+=Animation(opacity=1,duration=7) 
        anim+=Animation(opacity=0,duration=7) 
        #self.anim.repeat = True
        anim.start(self.imageId)
        anim.bind(on_complete=self.comp)
        

    def comp(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        anim.bind(on_complete=self.compl)

    def compl(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image2_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        #anim.repeat = True
        anim.bind(on_complete=self.compl2)

    def compl2(self,*args):
        app = MDApp.get_running_app()
        self.imageId=app.root.get_screen('contents').ids.contim
        self.imageId.source=self.get_image3_oftext()
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.imageId)     
        #anim.repeat = True
        self.set_animation() 
        
class TableOfContentsScreen(Screen):
    def on_kv_post(self, base_widget):
        grid = self.ids.grid
        for i in range(1, 17):
            grid.add_widget(PageButton(text=f'Hymn {i}'))
 
class search(Screen):
    pass
class ContentScreen(Screen):

    def on_enter(self):
        Factory.PageButton().set_animation()
        #print(Factory.PageButton().get_image_oftext (self.hymns))

    def callback(self):
        self.manager.current=('toc')

    def play_audio(self):
        print('playing')
        self.sound=SoundLoader.load('10.mp3')
        self.sound.play()
 
class RV(RecycleView):
    def on_kv_post(self, base_widget):
        self.init_data()
 
    def init_data(self):
        # initialize the data for the recycleview
        self.ennyimba=[
            ""Hymn 1"",""hymn 2 "",'hymn 3','hymn 4','hymn 5','hymn 6','hymn 7','hymn 8','hymn 9','hymn 10','hymn 11'    
        ]
        self.data = [{'text': f'{i}'} for i in self.ennyimba]
 
    def search_rv(self, text):
        if not text:
            self.init_data()
        else:
            self.data = [x for x in self.data if text in x['text']]

class HymnApp(MDApp):
    def build(self):
        return Builder.load_string(kv)
 
 
HymnApp().run()"
4miJbwth,trial,coinwalk,JavaScript,Friday 17th of May 2024 06:13:08 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/2400).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24)
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/512)<=(beast))&&((great-beast)>tens)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/192)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/100))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
cZy9JJ5a,Review SmartFX,fxvnpro,PHP,Friday 17th of May 2024 06:11:37 AM CDT,"https://www.fxvnpro.com/review-smartfx/
 
Welcome to SmartFX, an international online Forex and CFDs trading firm offering 24 hours access to a diverse range of trading products including forex currency pairs, commodities, futures, indices and stocks. Through SmartFX and the world renowned&nbsp;MetaTrader 5 trading platform,&nbsp;you can take advantage of high liquidity, low spreads, mobile trading, technical analysis and even more.



We maintain high standards to keep trading environments secure, and offer the best tailor made trading conditions for every client. We help Forex traders to develop the knowledge and skills they need to trade efficiently and responsibly.&nbsp;With our Daily Market analysis,&nbsp;we bring the freshest market insights to our beloved clients every day. Experience it for yourself!



We work in one of the most dynamic and fluid industries in the world. As a result, we need to constantly adapt and evolve. At SmartFX, we believe that there’s nothing better than working with the best and brightest minds, so we’re always on the lookout for talented and industrious people to join our growing team.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanySmart Securities and Commodities LimitedFoundation2018CountryVanuatuRegulation- Smart Securities and Commodities Limited is Regulated by Vanuatu Financial Services Commission (VFSC)and Authorized to deal with securities with providing all kind of financial services to our clients;Registration number - 40491.- SSC Smart FX Ltd (ex Jin Daocheng Ltd) is a Cyprus Investment Firm, authorized and regulated bythe Cyprus Securities and Exchange Commission (CySec) with license number 316/16;registration number HE345787.Minimum Initial Deposit$200Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Skrill, Neteller, Wire TransferAccount Withdrawal MethodsVisa, Master Card, Skrill, Neteller, Wire TransferLive ChatYesEmailsupport@smartfx.comCallVanuatu: +678 7773222Dubai: +9714 4319003



ADVANTAGES



Free Demo AccountYesSpreadsCompetitive From 1.2 pipsExecution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoCopy TradingYesTrading Platforms&nbsp;MetaTrader 5ScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Stocks, Commodities, Indices, Cryptos



DISADVANTAGES



Restrictions- SSC Smart FX Ltd does not offer services to retail&nbsp;clients.- SmartFX does not offer financial services to the following country residents: India, China, N.Korea,United States of America and&nbsp;FATF black listed&nbsp;countries.
"
0LqKysFL,Review SmartFX,reviewbrokers,PHP,Friday 17th of May 2024 06:11:35 AM CDT,"https://www.reviewbrokers.net/review-smartfx/
 
Welcome to SmartFX, an international online Forex and CFDs trading firm offering 24 hours access to a diverse range of trading products including forex currency pairs, commodities, futures, indices and stocks. Through SmartFX and the world renowned&nbsp;MetaTrader 5 trading platform,&nbsp;you can take advantage of high liquidity, low spreads, mobile trading, technical analysis and even more.



We maintain high standards to keep trading environments secure, and offer the best tailor made trading conditions for every client. We help Forex traders to develop the knowledge and skills they need to trade efficiently and responsibly.&nbsp;With our Daily Market analysis,&nbsp;we bring the freshest market insights to our beloved clients every day. Experience it for yourself!



We work in one of the most dynamic and fluid industries in the world. As a result, we need to constantly adapt and evolve. At SmartFX, we believe that there’s nothing better than working with the best and brightest minds, so we’re always on the lookout for talented and industrious people to join our growing team.



Broker Logo &nbsp;







Broker Type-CompanySmart Securities and Commodities LimitedFoundation2018CountryVanuatuRegulation- Smart Securities and Commodities Limited is Regulated by Vanuatu Financial Services Commission (VFSC)and Authorized to deal with securities with providing all kind of financial services to our clients;Registration number - 40491.- SSC Smart FX Ltd (ex Jin Daocheng Ltd) is a Cyprus Investment Firm, authorized and regulated bythe Cyprus Securities and Exchange Commission (CySec) with license number 316/16;registration number HE345787.The Jurisdictions- SSC Smart FX Ltd does not offer services to retail&nbsp;clients.- SmartFX does not offer financial services to the following country residents: India, China, N.Korea,United States of America and&nbsp;FATF black listed&nbsp;countries.Live ChatYesEmailsupport@smartfx.comCallVanuatu: +678 7773222Dubai: +9714 4319003







Free Demo AccountsYesMinimum Initial Deposit$200Multi-Currency AccountUSDSpreadsCompetitive From 1.2 pipsIntroducing Brokers ProgramYesSwap FreeNoCopy TradingYesTrading Platforms&nbsp;MetaTrader 5ScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Skrill, Neteller, Wire Transfer
"
Lj1BZNeD,Untitled,35657,C++,Friday 17th of May 2024 06:04:36 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
class Vector {

public:
    Vector() : size_(0), capacity_(4), arr_(new T[4]) {}

    explicit Vector(const int vector_capacity) : size_(0), capacity_(vector_capacity), arr_(new T[vector_capacity]) {}

    Vector(const Vector& other) : size_(other.size_), capacity_(other.capacity_), arr_(new T[capacity_]) {
        for (int i = 0; i < size_; i++) {
            arr_[i] = other.arr_[i];
        }
        total_number_elements_ += size_;
    } // конструктор копирования

    Vector(const initializer_list<T>& list) : size_(list.size()), capacity_(list.size()), arr_(new T[list.size()]) {
        int i = 0;
        for (const T& element : list) {
            arr_[i] = element;
            i++;
        }
    }

    Vector& operator=(const Vector& other) {
        if (&other != this) { // проверка на самоприсваивание
            total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
            size_ = other.size_;
            capacity_ = other.capacity_;
            delete[] arr_;
            arr_ = new T[capacity_];
            for (int i = 0; i < size_; i++) {
                arr_[i] = other.arr_[i];
            }
        }
        return *this;
    } // копирующий оператор присваивания =

    Vector(Vector&& other) : size_(other.size_), capacity_(other.capacity_), arr_(other.arr_) {
        other.arr_ = nullptr;
        other.size_ = 0;
        other.capacity_ = 0;
    } // конструктор перемещения

    Vector& operator=(Vector&& other) {
        if (&other != this) {
            total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
            size_ = other.size_;
            capacity_ = other.capacity_;
            delete[] arr_;
            arr_ = other.arr_;
            other.arr_ = nullptr;
            other.size_ = 0;
            other.capacity_ = 0;
        }
        return *this;
    } // перемещающий оператор присваивания =

    void push_back(const T& value) {
        check_capacity();
        arr_[size_] = value;
        size_++;
        total_number_elements_++;
    }

    void pop_back() {
        if (size_ == 0) {
            throw runtime_error(""Попытка удаления в пустом контейнере"");
        }
        size_--;
        total_number_elements_--;
    }

    void insert(const int index, const T& value) { // типы ошибок можно разделить
        if (index < 0 || index >= size_) {
            throw logic_error(""Некорректный индекс"");
        }
        check_capacity();
        for (int i = size_; i > index; i--) {
            arr_[i] = arr_[i - 1];
        }
        arr_[index] = value;
        size_++;
        total_number_elements_++;
    }

    void erase(const int index) {
        if (index < 0 || index >= size_) {
            throw logic_error(""Некорректный индекс"");
        }
        for (int i = index; i < size_ - 1; i++) {
            arr_[i] = arr_[i + 1];
        }
        size_--;
        total_number_elements_--;
    }

    T& operator[](const int index) {
        if (index < 0 || index >= size_) {
            throw logic_error(""Некорректный индекс"");
        }
        return arr_[index];
    }

    const T& operator[](const int index) const {
        if (index < 0 || index >= size_) {
            throw logic_error(""Некорректный индекс"");
        }
        return arr_[index];
    }

    int size() const {
        return size_;
    }

    int capacity() const {
        return capacity_;
    }

    bool operator==(const Vector& right) const {
        if (right.size_ != size_) {
            return false;
        }
        for (int i = 0; i < size_; i++) {
            if (arr_[i] != right.arr_[i])
                return false;
        }
        return true;
    }

    bool operator!=(const Vector& right) const {
        return !(*this == right);
    }

    void print() const {
        for (int i = 0; i < size_; i++) {
            cout << arr_[i] << "" "";
        }
        cout << endl;
    }

    static int get_total_number_elements() {
        return total_number_elements_;
    }


    ~Vector() {
        delete[] arr_;
        total_number_elements_ -= size_;
    }

private:

    void check_capacity() {
        if (size_ == capacity_) {
            int* temp = new int[capacity_ * 2];
            for (int i = 0; i < size_; i++) {
                temp[i] = arr_[i];
            }
            delete[] arr_;
            arr_ = temp;
            capacity_ *= 2;
        }
    }

    int size_; // текущее количество элементов
    int capacity_; // емкость хранилища
    T* arr_; // хранилище
    static int total_number_elements_; // общее количество элементов по всем векторам
};

template <typename T>
int Vector<T>::total_number_elements_ = 0;


int main() {
    setlocale(LC_ALL, ""ru"");

    try {

        Vector<int> vec{ 1,2,3,4,5 };

        vec.print();

       // vec.insert(9, 12); 

        vec.print();


        //for (int i = 0; i < 7; i++) {
        //    vec.pop_back();
        //}


        //for (int i = 0; i < 10000000000; i++) {
        //    vec.push_back(i);
        //}
    }
    catch (const runtime_error& ex) { 
        cout << ex.what() << "" 1 "" << endl;
    }
    catch(const logic_error& ex) {
        cout << ex.what() << "" 2 "" << endl;
    }
    catch (const bad_alloc& ex) {
        cout << ex.what() << "" 3 "" << endl;
    }
    catch (...) { // ловим ошибки любого другого типа
        cout << ""Другая ошибка"" << "" 4 "" << endl;
    }
    

    
  
}
"
6KiZRfUm,data929,TestGuy1,JSON,Friday 17th of May 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '023f28911b9a1d588af65fa79ea773bf33f66ffb6b1ac557b0c8cb230ab4f49259bad8fb7123336db202fa9650a7cb585b1a5be6c150f989a7c05948838bde09fcf95ac7c362ca0b7fa72869a47bae9de3c16f5f5054bc64a4d333754e59667b0106ae21c7f96d3df32b8badf0a44e1446eaf5b3d71e3e4b349bc0e61ae01647',
  otherdata: [
    'ca9ddef5086bed8e8c9262a87081a8c9',
    '773f9e0b234f5ac916cf77526a433a6b',
    '56aa204a99a9e79fdd2e4a314cbf895e',
    '43519aa7d0ee784e0db4c3b28aa593ba',
    '6b35ccdd94e6c59cea6b1edf4f288d20',
    '2917780f2119d948dde49a27fe17a56b',
    '951c5c2c11d33162d11d0092345af714',
    'bb536b92665fd6a0126828533871c7cc'
  ]
}"
FMsckvCm,coursework,myloyo,Python,Friday 17th of May 2024 05:53:45 AM CDT,"import nltk
from nltk.tokenize import sent_tokenize, word_tokenize

prim = ""She’s swept the floor. She’s very kind to me.""
tok = sent_tokenize(prim)
print(tok)
for elem in tok:
    temp = word_tokenize(elem)
    print(temp)

nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
# nltk.download()
# СЛОВАРИ

DictWith1Meaning = {
    ""arencha"": ""are not you"",
    ""cuz"": ""because"",
    ""cuppa"": ""cup of"",
    ""dunno"": ""do not know"",
    ""finna"": ""fixing to"",
    ""gimme"": ""give me"",
    ""gonna"": ""going to"",
    ""gotta"": ""got to"",
    ""helluva"": ""hell of a"",
    ""howdy"": ""how do you do"",
    ""hafta"": ""have to"",
    ""Imma"": ""I am going to"",
    ""innit"": ""is not it"",
    ""Ion"": ""I do not"",
    ""kinda"": ""kind of"",
    ""lemme"": ""let me"",
    ""methinks"": ""I think"",
    ""tryna"": ""trying to"",
    ""wanna"": ""want to"",
    ""whatcha"": ""what are you"",
    ""wonnot"": ""will not"",
    ""yessir"": ""yes sir"",
    ""a’ight"": ""alright"",
    ""amn’t"": ""am not"",
    ""’n’"": ""and"",
    ""‘n’"": ""and"",
    ""aren’t"": ""are not"",
    ""’bout"": ""about"",
    ""cap’n"": ""captain"",
    ""can’t"": ""cannot"",
    ""’cause"": ""because"",
    ""’cept"": ""except"",
    ""c’mon"": ""come on"",
    ""could’ve"": ""could have"",
    ""couldn’t"": ""could not"",
    ""couldn’t’ve"": ""could not have"",
    ""daresn’t"": ""dare not"",
    ""dasn’t"": ""dare not"",
    ""didn’t"": ""did not"",
    ""doesn't"": ""does not"",
    ""e’en"": ""even"",
    ""e’er"": ""ever"",
    ""’em"": ""them"",
    ""fo’c’sle"": ""forecastle"",
    ""’gainst"": ""against"",
    ""g’day"": ""good day"",
    ""giv’n"": ""given"",
    ""gi’z"": ""give us"",
    ""gon’t"": ""go not"",
    ""hadn’t"": ""had not"",
    ""had’ve"": ""had have"",
    ""hasn’t"": ""has not"",
    ""haven’t"": ""have not"",
    ""here’s"": ""here is"",
    ""how’re"": ""how are"",
    ""if’n"": ""If and when"",
    ""I'd've"": ""I would have"",
    ""I’m"": ""I am"",
    ""I’m'onna"": ""I am going to"",
    ""I’m’o"": ""I am going to"",
    ""I’m'na"": ""I am going to"",
    ""I’ve"": ""I have"",
    ""isn’t"": ""is not"",
    ""it’d"": ""it would"",
    ""let’s"": ""let us"",
    ""loven’t"": ""love not"",
    ""ma’am"": ""madam"",
    ""mayn’t"": ""may not"",
    ""may’ve"": ""may have"",
    ""mightn’t"": ""might not"",
    ""might’ve"": ""might have"",
    ""mine’s"": ""mine is"",
    ""mustn’t"": ""must not"",
    ""mustn’t’ve"": ""must not have"",
    ""must’ve"": ""must have"",
    ""’neath"": ""beneath"",
    ""needn’t"": ""need not"",
    ""nal"": ""and all"",
    ""ne’er"": ""never"",
    ""o’"": ""of"",
    ""o’clock"": ""of the clock"",
    ""o’er"": ""over"",
    ""ol’"": ""old"",
    ""ought’ve"": ""ought have"",
    ""oughtn’t"": ""ought not"",
    ""oughtn’t’ve"": ""ought not have"",
    ""’round"": ""around"",
    ""shalln’t"": ""shall not"",
    ""shan’"": ""shall not"",
    ""shan’t"": ""shall not"",
    ""should’ve"": ""should have"",
    ""shouldn’t"": ""should not"",
    ""shouldn’t’ve"": ""should not have"",
    ""so’re"": ""so are"",
    ""so’ve"": ""so have"",
    ""that’re"": ""that are"",
    ""there’re"": ""there are"",
    ""these’re"": ""these are"",
    ""these’ve"": ""these have"",
    ""they’ve"": ""they have"",
    ""those’re "": ""those are"",
    ""those’ve"": ""those have"",
    ""’thout"": ""without"",
    ""’til"": ""until"",
    ""’tis"": ""it is"",
    ""’tisn’t"": ""it is not"",
    ""to’ve"": ""to have"",
    ""’twas"": ""it was"",
    ""’tween"": ""between"",
    ""’twere"": ""it were"",
    ""w’all"": ""we all"",
    ""w’at"": ""we at"",
    ""wasn’t"": ""was not"",
    ""we’d’ve"": ""we would have"",
    ""we’re"": ""we are"",
    ""we’ve"": ""we have"",
    ""weren’t"": ""were not"",
    ""what’d"": ""what did"",
    ""what’ve"": ""what have"",
    ""when’d"": ""when did"",
    ""where’d"": ""where did"",
    ""where’re"": ""where are"",
    ""where’ve"": ""where have"",
    ""which’re"": ""which are"",
    ""which’ve"": ""which have"",
    ""who’re"": ""who are"",
    ""who’ve"": ""who have"",
    ""why’d"": ""why did"",
    ""why’re"": ""why are"",
    ""willn’t"": ""will not"",
    ""won’t"": ""will not"",
    ""would’ve"": ""would have"",
    ""wouldn’t"": ""would not"",
    ""wouldn’t’ve"": ""would not have"",
    ""y’at"": ""you at"",
    ""y'ever"": ""have you ever"",
    ""y’know"": ""you know"",
    ""you’re"": ""you are"",
    ""you’ve"": ""you have"",
    ""y’all"": ""you all"",
    ""y’all’d’ve"": ""you all would have"",
    ""y’all’dn't’ve"": ""you all would not have"",
    ""y’all’re"": ""you all are"",
    ""y’all’ren’t"": ""you all are not"",
    ""yes’m"": ""yes madam"",
    ""who’d’ve"": ""who would have"",
    ""yesn’t"": ""yes not""
}

DictOfFormal = {
    ""’re"": ""are"",
    ""’ll"": ""will"",
    ""’ight"": ""alright"",
    ""’t"": ""not"",
    ""’ve"": ""have""
}

# чтение из входного файла текста для обработки
filename = ""in_text_contractions.txt""
arr = []                                                                    # добавить обработку с сохранением абзацных отступов!!!
with open(""in_text_contractions.txt"", ""r"", encoding='utf-8') as file:
    content = file.read()
    # arr.append(content)



#prim = ""You’re very tall.""
#prim1 = ""She’s swept the floor.""
#prim2 = ""She’s very kind to me.""
#tok = word_tokenize(prim1 +"" ""+ prim2)
#print(tok)

# tagged = nltk.pos_tag(tok)

#print(tagged)

#print()


# Сначала обработка неформальных сокращений без апострофа
text = content.split("" "")
for i in range(0, len(text)):
    temp = text[i]
    f = False   # флаг, была ли буква заглавной или нет
    if temp[0].isupper():
        f = True
        temp[0].lower()
    if temp in DictWith1Meaning:
        temp = DictWith1Meaning[temp]
    if f:
        temp[0].upper()
        f = False
    text[i] = temp

z = ' '.join(text)

# Обрабатываем формальные сокращения
sents = sent_tokenize(z)
for i in range(0, len(sents)):
    s = sents[i]
    s = word_tokenize(s)
    for j in range(0, len(s) - 1):
        if s[j] == ""’"":
            if s[j] + s[j + 1] in DictOfFormal:
                s[j] = DictOfFormal[s[j] + s[j + 1]]
                s.remove(s[j + 1])
                j += 1
    # здесь надо создать новую строку из того, что обработалось
    temp = """"
    c = "".’?!:;)]}«„„'""
    for x in range(0, len(s)):
        if s[x] in c:
            temp = temp[:-1]
            temp += s[x]
        elif s[x] == ',' or s[x] == '”' or s[x] == '»':
            temp = temp[:-1]
            temp += s[x] + "" ""
        else:
            temp += s[x] + "" ""
    sents[i] = temp

# Соединяем текст обратно
FullText = """"
for i in range(0, len(sents)):
    FullText += sents[i] + ' '

print(FullText)
"
KbVZeMv3,Review NAGA,fxvnpro,PHP,Friday 17th of May 2024 05:42:00 AM CDT,"https://www.fxvnpro.com/review-naga/
 
At NAGA, we believe that everyone should have&nbsp;easy, fast and free access&nbsp;to the global financial markets.



That’s why we’ve built&nbsp;the most powerful app for finance.



Trade the global markets (Real Stocks, CFDs on Commodities, Forex and CFDs on ETFs). Trade with real-time execution. Enjoy professional tools.



Invest with confidence, follow and copy top financial leaders. Join our social trading platform to connect with global investors who share investment ideas and strategies.



Join NAGA — Your Trusted Trading Partner! Become a member of a global community of traders that choose to trade with NAGA.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanyNAGA Capital LtdFoundation2015CountrySeychellesRegulationNAGA Capital Ltd is authorised and regulated by the Financial Services Authority Seychelles (FSA)under licence No. SD026.Minimum Initial Deposit$250Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Maestro, Diners, Discover, Wire TransferAccount Withdrawal MethodsVisa, Master Card, Maestro, Diners, Discover, Wire TransferWithdrawal Fees:$5 - Iron Account$4 - Bronze Account$3 - Silver Account$2 - Gold Account$1 - Diamond Account$0 - Crystal AccountLive ChatYesEmailsupport@naga.comCallGlobal Support (English)+442035197495+442033228847Dealing Desk: +35725041412South Africa: +27418800412Mexico: +525588694849Peru: +5115102791India: +918009190666Indonesia: +6278033212252Malaysia: +601548770081Thailand: +661800013748New Zealand: +6442807410Vietnam: +842844581370



ADVANTAGES



Free Demo AccountYesSpreadsFrom 0.7 pipsExecution TypeMarket ExecutionIntroducing Brokers ProgramYesAffiliate ProgramYesSwap FreeYes (during the first 10 calendar days after opening a position)PromotionsNoSocial TradingYesTrading PlatformsNAGA Web App, NAGA iOS App, NAGA Android App,MetaTrader 4, MetaTrader 5ScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Stock CFDs, Real Stock, Commodities, ETFs, Futures, Indices, Cryptos



DISADVANTAGES



RestrictionsNAGA Capital Ltd does not provide services for the residents of certain countries, such as Afghanistan, Albania,American Samoa, Anguilla, Australia, Austria, Barbados, Belarus, Belgium, Bermuda, British Indian Ocean Territory,Bulgaria, Burkina Faso, Canada, Cayman Islands, Central African Republic, Christmas Island, Cocos (Keeling) Islands,Congo, The Democratic Republic of the, Croatia, Cyprus, Czech Republic, Denmark, Estonia, Falkland Islands (Malvinas),Finland, France, Germany, Gibraltar, Greece, Guam, Haiti, Heard Island and McDonald Islands, Hungary, Iceland, Iran,Islamic Republic of, Ireland, Isle of Man, Israel, Italy, Jamaica, Japan, Jersey, Korea, Democratic People's Republic of, Latvia, Libyan Arab Jamahiriya, Liechtenstein, Lithuania, Luxembourg, Mali, Malta, Montserrat, Mozambique, Myanmar,Netherlands, New Zealand, Norfolk Island, Norway, Palestinian Territory, Occupied, Pitcairn, Poland, Portugal, Romania,Russian Federation, Saint Helena, Ascension and Tristan Da Cunha, San Marino, Senegal, Serbia, Slovakia, Slovenia,Somalia, South Georgia and the South Sandwich Islands, South Sudan, Spain, Sri Lanka, Sweden, Switzerland,Syrian Arab Republic, Trinidad and Tobago, Tunisia, Turks and Caicos Islands, Uganda, Ukraine, United Kingdom andany other countries where the citizens have British proof of identity (i.e. British Virgin Island, Gibraltar, Isle of Man etc.),United States, U.S. Minor Islands, Vanuatu, Virgin Islands, British, Virgin Islands, U.S., Yemen, and Zimbabwe.
"
ZszkE6mE,Review NAGA,reviewbrokers,PHP,Friday 17th of May 2024 05:41:47 AM CDT,"https://www.reviewbrokers.net/review-naga/
 
At NAGA, we believe that everyone should have&nbsp;easy, fast and free access&nbsp;to the global financial markets.



That’s why we’ve built&nbsp;the most powerful app for finance.



Trade the global markets (Real Stocks, CFDs on Commodities, Forex and CFDs on ETFs). Trade with real-time execution. Enjoy professional tools.



Invest with confidence, follow and copy top financial leaders. Join our social trading platform to connect with global investors who share investment ideas and strategies.



Join NAGA — Your Trusted Trading Partner! Become a member of a global community of traders that choose to trade with NAGA.







Broker Logo &nbsp;







Broker Type-CompanyNAGA Capital LtdFoundation2015CountrySeychellesRegulationNAGA Capital Ltd is authorised and regulated by the Financial Services Authority Seychelles (FSA) underlicence No. SD026.The JurisdictionsNAGA Capital Ltd does not provide services for the residents of certain countries, such as Afghanistan, Albania,American Samoa, Anguilla, Australia, Austria, Barbados, Belarus, Belgium, Bermuda, British Indian Ocean Territory,Bulgaria, Burkina Faso, Canada, Cayman Islands, Central African Republic, Christmas Island, Cocos (Keeling) Islands,Congo, The Democratic Republic of the, Croatia, Cyprus, Czech Republic, Denmark, Estonia, Falkland Islands (Malvinas),Finland, France, Germany, Gibraltar, Greece, Guam, Haiti, Heard Island and McDonald Islands, Hungary, Iceland, Iran,Islamic Republic of, Ireland, Isle of Man, Israel, Italy, Jamaica, Japan, Jersey, Korea, Democratic People's Republic of, Latvia, Libyan Arab Jamahiriya, Liechtenstein, Lithuania, Luxembourg, Mali, Malta, Montserrat, Mozambique, Myanmar,Netherlands, New Zealand, Norfolk Island, Norway, Palestinian Territory, Occupied, Pitcairn, Poland, Portugal, Romania,Russian Federation, Saint Helena, Ascension and Tristan Da Cunha, San Marino, Senegal, Serbia, Slovakia, Slovenia,Somalia, South Georgia and the South Sandwich Islands, South Sudan, Spain, Sri Lanka, Sweden, Switzerland,Syrian Arab Republic, Trinidad and Tobago, Tunisia, Turks and Caicos Islands, Uganda, Ukraine, United Kingdom andany other countries where the citizens have British proof of identity (i.e. British Virgin Island, Gibraltar, Isle of Man etc.),United States, U.S. Minor Islands, Vanuatu, Virgin Islands, British, Virgin Islands, U.S., Yemen, and Zimbabwe.Live ChatYesEmailsupport@naga.comCallGlobal Support (English)+442035197495+442033228847Dealing Desk: +35725041412South Africa: +27418800412Mexico: +525588694849Peru: +5115102791India: +918009190666Indonesia: +6278033212252Malaysia: +601548770081Thailand: +661800013748New Zealand: +6442807410Vietnam: +842844581370







Free Demo AccountsYesMinimum Initial Deposit$250Multi-Currency AccountUSDSpreadsFrom 0.7 pipsIntroducing Brokers ProgramYesAffiliates ProgramYesSwap FreeYes (during the first 10 calendar days after opening a position)PromotionsNoSocial TradingYesTrading PlatformsNAGA Web App, NAGA iOS App, NAGA Android App,MetaTrader 4, MetaTrader 5ScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Maestro, Diners, Discover, Wire TransferWithdrawal Fees$5 - Iron Account$4 - Bronze Account$3 - Silver Account$2 - Gold Account$1 - Diamond Account$0 - Crystal Account
"
axMxT0Vy,GA4 - #2.3 add_payment_info (Dalton Education),paulkoks,JavaScript,Friday 17th of May 2024 05:05:15 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  event: 'add_payment_info',  			// name of the event. In this case, it always must be add_payment_info
  ecommerce: {
    payment_type: 'Credit Card',             // name of payment method            
    items: [{							// an array with all products
      item_name: 'Virtual Classroom Plus Package - Ebook', 			// insert an actual product name
      item_id: 'de-db-vcp',				// insert an actual product ID
      price: 7195,					// insert an actual product price. Number, don't include currency code
      item_brand: 'Dalton Education',			// insert an actual product brand
      item_category: 'Main',			// insert an actual product top-level category
	  item_category2: 'Classroom Package',		// if it is possible to drill down the categories
      item_variant: 'Virtual Classroom Plus Package - Ebook',				// insert an actual product variant
      quantity: 1					// product quantity
    },{
      item_name: 'Textbook Bundle - Textbook Add-on',
      item_id: 'me-pb-edu-addon',
      price: 200,
      item_brand: 'Dalton Education',
      item_category: 'Add-on',
	  item_category2: 'Textbook',
      item_variant: 'Textbook Bundle - Textbook Add-on',
      quantity: 1
    }]
  }
});"
J1u2T2y6,GA4 - #2.2 add_shipping_info (Dalton Education),paulkoks,JavaScript,Friday 17th of May 2024 05:03:51 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  event: 'add_shipping_info',  			// name of the event. In this case, it always must be add_shipping_info
  ecommerce: {
    shipping_tier: 'Ground Delivery',             // name of the delivery method       
    items: [{							// an array with all products
      item_name: 'Virtual Classroom Plus Package - Ebook', 			// insert an actual product name
      item_id: 'de-db-vcp',				// insert an actual product ID
      price: 7195,					// insert an actual product price. Number, don't include currency code
      item_brand: 'Dalton Education',			// insert an actual product brand
      item_category: 'Main',			// insert an actual product top-level category
	  item_category2: 'Classroom Package',		// if it is possible to drill down the categories
      item_variant: 'Virtual Classroom Plus Package - Ebook',				// insert an actual product variant
      quantity: 1					// product quantity
    },{
      item_name: 'Textbook Bundle - Textbook Add-on',
      item_id: 'me-pb-edu-addon',
      price: 200,
      item_brand: 'Dalton Education',
      item_category: 'Add-on',
	  item_category2: 'Textbook',
      item_variant: 'Textbook Bundle - Textbook Add-on',
      quantity: 1
    }]
  }
});"
GNfKmmYY,Example of wrong hint H2077 in Delphi 11.3,D98rolb,Delphi,Friday 17th of May 2024 05:03:07 AM CDT,"unit Unit1;

interface

uses
  Classes;

type
  TPriceKey = class
  public
    PriceTermKeyObj: TObject;
    PriceTermList: TList;
    constructor Create;
    destructor Destroy; override;
  end;

  TPriceKeyList = class(TList)
  private
    function Get(Index: Integer): TPriceKey;
  public
    destructor Destroy; override;
    procedure AddNew(APriceTermKey: TObject; APriceTermList: TList);
    property Items[Index: Integer]: TPriceKey read Get; default;
  end;

  TTest = class
  public
    class procedure PublishKeys(AValidFrom: TDate; AValidTo: TDate);
  end;

implementation

uses
  VCL.Controls,
  Vcl.Dialogs,
  SysUtils;

function TPriceKeyList.Get(Index: Integer): TPriceKey;
begin
  Result := TPriceKey(inherited Get(Index));
end;

constructor TPriceKey.Create;
begin
  PriceTermList := TList.Create;
end;

destructor TPriceKey.Destroy;
begin
  FreeAndNil(PriceTermList);
end;

destructor TPriceKeyList.Destroy;
var
  i: Integer;
begin
  for i := Count - 1 downto 0 do
    FreeAndNil(Items[i]);
  inherited;
end;

procedure TPriceKeyList.AddNew(APriceTermKey: TObject; APriceTermList: TList);
var
  oKey: TPriceKey;
begin
  oKey := TPriceKey.Create;
  oKey.PriceTermKeyObj := APriceTermKey;
  Add(oKey);
end;

class procedure TTest.PublishKeys(AValidFrom: TDate; AValidTo: TDate);
var
  oPriceKey: TPriceKey;
  oPriceTermList: TList;
  oAllTargetPriceTerms: TList;
  oPriceKeyRevision: TObject;
  oPriceRevision, oNewPriceRevision: TObject;
  oCreatedRevisions: TList;
  oAgreementList: TList;
  ResultCount: Integer;
  iConfirmResult: Integer;
  bYesToAll, bAbort: Boolean;
  sOrgname: string;
begin
  if AValidFrom >= AValidTo then
  begin
    WriteLn(Format('Valid from %s must be before Valid to %s', [DateToStr(AValidFrom), DateToStr(AValidTo)]));
    Exit;
  end;

  ResultCount := 0;
  oPriceTermList := TList.Create;
  oAllTargetPriceTerms := TList.Create;
  oCreatedRevisions := TList.Create;
  try
    for oPriceKey in oAllTargetPriceTerms do
    begin
      bYesToAll := False;
      bAbort := False;
      for var oAgreement in oAgreementList do
      begin
        if bAbort then
        begin
          Break;
        end;

        if Assigned(oPriceRevision) then
        begin
          oNewPriceRevision := oPriceRevision;    // Default value

          if oCreatedRevisions.IndexOf(oPriceRevision) > 0 then
          begin
            if not bYesToAll then
            begin
              case iConfirmResult of
                mrYesToAll: bYesToAll := True;
                mrNo:       continue;
                mrAbort:
                begin
                  bAbort := True;
                  break;
                end;
              end;
            end;
          end;


          for var oPriceTerm in oCreatedRevisions do
          begin
            Inc(ResultCount);
          end;
        end;
      end;
    end;
  finally
    FreeAndNil(oPriceTermList);
    FreeAndNil(oAllTargetPriceTerms);
    FreeAndNil(oCreatedRevisions);
  end;
end;

end.
"
emwL7sip,Untitled,35657,C++,Friday 17th of May 2024 05:03:02 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
class Vector {

public:
    Vector() : size_(0), capacity_(4), arr_(new T[4]) {}

    explicit Vector(const int vector_capacity) : size_(0), capacity_(vector_capacity), arr_(new T[vector_capacity]) {}

    Vector(const Vector& other) : size_(other.size_), capacity_(other.capacity_), arr_(new T[capacity_]) {
        for (int i = 0; i < size_; i++) {
            arr_[i] = other.arr_[i];
        }
        total_number_elements_ += size_;
    } // конструктор копирования

    Vector(const initializer_list<T>& list) : size_(list.size()), capacity_(list.size()), arr_(new T[list.size()]) {
        int i = 0;
        for (const T& element : list) {
            arr_[i] = element;
            i++;
        }
    }

    Vector& operator=(const Vector& other) {
        if (&other != this) { // проверка на самоприсваивание
            total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
            size_ = other.size_;
            capacity_ = other.capacity_;
            delete[] arr_;
            arr_ = new T[capacity_];
            for (int i = 0; i < size_; i++) {
                arr_[i] = other.arr_[i];
            }
        }
        return *this;
    } // копирующий оператор присваивания =

    Vector(Vector&& other) : size_(other.size_), capacity_(other.capacity_), arr_(other.arr_) {
        other.arr_ = nullptr;
        other.size_ = 0;
        other.capacity_ = 0;
    } // конструктор перемещения

    Vector& operator=(Vector&& other) {
        if (&other != this) {
            total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
            size_ = other.size_;
            capacity_ = other.capacity_;
            delete[] arr_;
            arr_ = other.arr_;
            other.arr_ = nullptr;
            other.size_ = 0;
            other.capacity_ = 0;
        }
        return *this;
    } // перемещающий оператор присваивания =

    void push_back(const T& value) {
        check_capacity();
        arr_[size_] = value;
        size_++;
        total_number_elements_++;
    }

    void pop_back() {
        if (size_ > 0) {
            size_--;
        }
        total_number_elements_--;
    }

    void insert(const int index, const T& value) { // типы ошибок можно разделить
        if (index < 0) {
            throw invalid_argument(""Индекс не может быть меньше нуля"");
        }
        if (index >= size_) {
            throw out_of_range(""Индекс превышает размер вектора"");
        }
        check_capacity();
        for (int i = size_; i > index; i--) {
            arr_[i] = arr_[i - 1];
        }
        arr_[index] = value;
        size_++;
        total_number_elements_++;
    }

    void erase(const int index) {
        if (index < 0 || index >= size_) {
            cout << ""Некорректный индекс"" << endl;
            return;
        }
        for (int i = index; i < size_ - 1; i++) {
            arr_[i] = arr_[i + 1];
        }
        size_--;
        total_number_elements_--;
    }

    T& operator[](const int index) {
        if (index < 0 || index >= size_) {
            cout << ""Некорректный индекс"" << endl;
        }
        return arr_[index];
    }

    const T& operator[](const int index) const {
        if (index < 0 || index >= size_) {
            cout << ""Некорректный индекс"" << endl;
        }
        return arr_[index];
    }

    int size() const {
        return size_;
    }

    int capacity() const {
        return capacity_;
    }

    bool operator==(const Vector& right) const {
        if (right.size_ != size_) {
            return false;
        }
        for (int i = 0; i < size_; i++) {
            if (arr_[i] != right.arr_[i])
                return false;
        }
        return true;
    }

    bool operator!=(const Vector& right) const {
        return !(*this == right);
    }

    void print() const {
        for (int i = 0; i < size_; i++) {
            cout << arr_[i] << "" "";
        }
        cout << endl;
    }

    static int get_total_number_elements() {
        return total_number_elements_;
    }


    ~Vector() {
        delete[] arr_;
        total_number_elements_ -= size_;
    }

private:

    void check_capacity() {
        if (size_ == capacity_) {
            int* temp = new int[capacity_ * 2];
            for (int i = 0; i < size_; i++) {
                temp[i] = arr_[i];
            }
            delete[] arr_;
            arr_ = temp;
            capacity_ *= 2;
        }
    }

    int size_; // текущее количество элементов
    int capacity_; // емкость хранилища
    T* arr_; // хранилище
    static int total_number_elements_; // общее количество элементов по всем векторам
};

template <typename T>
int Vector<T>::total_number_elements_ = 0;


int main() {
    setlocale(LC_ALL, ""ru"");

    Vector<int> vec{ 1,2,3,4,5 };
  
    vec.print();

    //vec.insert(9, 12); // в блок try оборачиваем функцию (блок кода) где может быть выброшено исключение

    try {
        vec.insert(9, 12); // в блок try оборачиваем функцию (блок кода) где может быть выброшено исключение
    }

    catch (const out_of_range& ex) { // ловим в одном блоке catch конкретный тип ошибки
        cout << ex.what() << endl;
    }
    catch(const logic_error& ex) { // ловим в одном блоке catch любые ошибки разновидности logic_error
        cout << ex.what() << endl;
    }
    catch (...) { // ловим ошибки любого другого типа
        cout << ""Другая ошибка"" << endl;
    }
    

    vec.print();
  
}
"
4rPhfhMw,PARTNER SWAGGER APIs,ilyasbabu,Python,Friday 17th of May 2024 04:59:29 AM CDT,"import sys
import traceback

from django.core.exceptions import ValidationError
from rest_framework.response import Response
from rest_framework.views import APIView

from accounts.services.authentication import CustomBasicAuthentication
from common.mixins import ExceptionHandlerMixin
from common.services import create_log

from ..serializers.partner_enquiry import (
    CRMViewAPISerializer,
    CustomerDetailsAPISerializer,
    FeasibilityCheckAPISerializer,
    InstallationAPISerializer,
    RaiseComplainAPISerializer,
    RechargeAPISerializer,
    SRDetailsGetAPISerializer,
    AdlCustomerCheckAPISerializer,
)
from ..services.partner_enquiry import (
    CustomException,
    decrypt,
    encrypt,
    installation,
    customer_details_get,
)
from drf_yasg.utils import swagger_auto_schema


class InstallationAPI(ExceptionHandlerMixin, APIView):
    """"""After getting the feasibility and payment confirmation from the customer,
    This API is called to confirm that customer is ready to connect further for installation.
    """"""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=InstallationAPISerializer,
        responses={
            200: """"""{
                        ""data"": {""status"": ""Success"", ""viProspectId"": ""ENQ-1""},
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = InstallationAPISerializer(data=decrypt(request.data[""data""]))
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])

            response_data = installation(user, **serializer.validated_data)
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Installation"",
                action_details=f""VI Installation API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                status=406,
                data={""data"": {}, ""message"": {""message"": str(msg), ""code"": code}},
            )


class CustomerDetailsAPI(ExceptionHandlerMixin, APIView):
    """"""Fetch Registered and Closed Customer details based on provided date.""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=CustomerDetailsAPISerializer,
        responses={
            200: """"""{
                        ""data"": [
                                    {
                                        ""MSISDN"": ""8849574265"",
                                        ""AccountNo"": ""1234567"",
                                        ""Status "": ""Registered"",
                                        ""LastStatusDate"": ""21-12-2022 14:00:00"",
                                    },
                                    {
                                        ""MSISDN"": ""8849574364"",
                                        ""AccountNo"": ""1234568"",
                                        ""Status "": ""Closed"",
                                        ""LastStatusDate"": ""01-01-2023 00:00:00"",
                                    },
                                    {
                                        ""MSISDN"": ""8849574367"",
                                        ""AccountNo"": ""1234566"",
                                        ""Status "": ""Closed"",
                                        ""LastStatusDate"": ""02-01-2022 01:00:01"",
                                    },
                                    {
                                        ""MSISDN"": ""8849574364"",
                                        ""AccountNo"": ""1234564"",
                                        ""Status "": ""Registered"",
                                        ""LastStatusDate"": ""02-08-2022 02:02:03"",
                                    },
                                ],
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = CustomerDetailsAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])

            response_data = customer_details_get(user, **serializer.validated_data)
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Customer Detail"",
                action_details=f""VI Customer Detail API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class RechargeAPI(ExceptionHandlerMixin, APIView):
    """"""API to Initiate payment based on given account no, plan poid,
    mast online plan poid, payment  amount and merchant trans id.
    It will return unique YOUBB order Id.""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=RechargeAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                                    ""paymentStatus"": ""SUCCESS"",
                                    ""youBBorderId"": ""10859125"",
                                    ""planPoid"": ""1415188680"",
                                    ""merchantOrderId"": ""1415179779"",
                                },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = RechargeAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])

            response_data = {
                ""paymentStatus"": ""SUCCESS"",
                ""youBBorderId"": ""10859125"",
                ""planPoid"": ""1415188680"",
                ""merchantOrderId"": ""1415179779"",
            }
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Recharge"",
                action_details=f""VI Recharge API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class FeasibilityCheckAPI(ExceptionHandlerMixin, APIView):
    """"""API to check the Feasibility of the lead generated.""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=FeasibilityCheckAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                                    ""prospectId"": ""123456789"",
                                    ""IsFeasible"": ""Y"",
                                    ""message"": ""Lead is generated."",
                                },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = FeasibilityCheckAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])
            response_data = {
                ""prospectId"": ""123456789"",
                ""IsFeasible"": ""Y"",
                ""message"": ""Lead is generated."",
            }
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Feasibility Check"",
                action_details=f""VI Feasibility Check API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class CRMViewAPI(ExceptionHandlerMixin, APIView):
    """"""API to Fetch Customer’s account details who is on convergent plan""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=CRMViewAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                        ""MSISDN"": ""8849574256"",
                        ""IsExistingMember"": ""Y"",
                        ""customerDetails"": {
                            ""customerName"": ""Ravi Kumar"",
                            ""accountNumber"": ""2694963"",
                            ""userId"": """",
                            ""registeredNumber"": ""7016655858"",
                            ""registeredEmailId"": ""ravikumar@gmail.com"",
                            ""installedCity"": """",
                            ""installationAddress"": """",
                            ""dateOfInstallation"": """",
                            ""accountStatus"": """",
                            ""planName"": ""10053/YOU JACKAL/10Mbps-1Mbps/300GB/3Months/Rs1859"",
                            ""planValidity"": ""-90"",
                            ""balance"": {""mbBalance"": ""307200.0"", ""dayBalance"": ""90.0""},
                            ""dateOfLastRenewal"": """",
                            ""framedIPStatus"": """",
                        },
                        ""installationStatus"": {},
                    },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = CRMViewAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])
            response_data = {
                ""MSISDN"": ""8849574256"",
                ""IsExistingMember"": ""Y"",
                ""customerDetails"": {
                    ""customerName"": ""Ravi Kumar"",
                    ""accountNumber"": ""2694963"",
                    ""userId"": """",
                    ""registeredNumber"": ""7016655858"",
                    ""registeredEmailId"": ""ravikumar@gmail.com"",
                    ""installedCity"": """",
                    ""installationAddress"": """",
                    ""dateOfInstallation"": """",
                    ""accountStatus"": """",
                    ""planName"": ""10053/YOU JACKAL/10Mbps-1Mbps/300GB/3Months/Rs1859"",
                    ""planValidity"": ""-90"",
                    ""balance"": {""mbBalance"": ""307200.0"", ""dayBalance"": ""90.0""},
                    ""dateOfLastRenewal"": """",
                    ""framedIPStatus"": """",
                },
                ""installationStatus"": {},
            }
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI CRM View"",
                action_details=f""VI CRM View API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class SRDetailsGetAPI(ExceptionHandlerMixin, APIView):
    """"""API to Fetch Customer’s account details who is on convergent plan""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=SRDetailsGetAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                            ""SRValues"": [
                                {
                                    ""srID"": ""2023060129880"",
                                    ""customerName"": ""SAGAR KHATRI "",
                                    ""subProcessCode"": ""4.K"",
                                    ""description"": ""ViTopazComplaint"",
                                    ""SRStatus"": ""Pending"",
                                    ""SRDate"": ""01-Jun-2023 13:06"",
                                },
                                {
                                    ""srID"": ""2023053129869"",
                                    ""customerName"": ""SAGAR KHATRI "",
                                    ""subProcessCode"": ""2.D"",
                                    ""description"": ""ViTopazComplaint"",
                                    ""SRStatus"": ""Closed"",
                                    ""SRDate"": ""31-May-2023 10:55"",
                                },
                            ]
                        },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = SRDetailsGetAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])
            response_data = {
                ""SRValues"": [
                    {
                        ""srID"": ""2023060129880"",
                        ""customerName"": ""SAGAR KHATRI "",
                        ""subProcessCode"": ""4.K"",
                        ""description"": ""ViTopazComplaint"",
                        ""SRStatus"": ""Pending"",
                        ""SRDate"": ""01-Jun-2023 13:06"",
                    },
                    {
                        ""srID"": ""2023053129869"",
                        ""customerName"": ""SAGAR KHATRI "",
                        ""subProcessCode"": ""2.D"",
                        ""description"": ""ViTopazComplaint"",
                        ""SRStatus"": ""Closed"",
                        ""SRDate"": ""31-May-2023 10:55"",
                    },
                ]
            }
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI SR Details"",
                action_details=f""VI SR Details API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class RaiseComplainAPI(ExceptionHandlerMixin, APIView):
    """"""Convergent customer can raise complaint if facing any issue with Adl Broadband.""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=RaiseComplainAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                            ""outageavail"": ""True"",
                            ""outageval"": {
                                ""outageId"": """",
                                ""downtime"": """",
                                ""city"": """",
                                ""node"": """",
                                ""area"": """",
                                ""comments"": """",
                                ""exp_up_time"": """",
                                ""status"": """",
                                ""act_up_time"": """",
                                ""up_comment"": """",
                                ""down_uid"": """",
                                ""up_uid"": """",
                                ""actdowntime"": """",
                                ""oms_id"": """",
                                ""reason"": """",
                                ""cust_affected"": """",
                                ""hrs"": ""24 "",
                                ""mins"": """",
                            },
                            ""compgenerate"": ""False"",
                            ""complainId"": """",
                            ""message"": ""Outage in Area"",
                        },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = RaiseComplainAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])
            response_data = {
                ""outageavail"": ""True"",
                ""outageval"": {
                    ""outageId"": """",
                    ""downtime"": """",
                    ""city"": """",
                    ""node"": """",
                    ""area"": """",
                    ""comments"": """",
                    ""exp_up_time"": """",
                    ""status"": """",
                    ""act_up_time"": """",
                    ""up_comment"": """",
                    ""down_uid"": """",
                    ""up_uid"": """",
                    ""actdowntime"": """",
                    ""oms_id"": """",
                    ""reason"": """",
                    ""cust_affected"": """",
                    ""hrs"": ""24 "",
                    ""mins"": """",
                },
                ""compgenerate"": ""False"",
                ""complainId"": """",
                ""message"": ""Outage in Area"",
            }
            return Response(
                {
                    ""data"": response_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Raise Complain"",
                action_details=f""VI Raise Complain API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )


class AdlCustomerCheckAPI(ExceptionHandlerMixin, APIView):
    """"""Fetch Customer details of Adl based on given account no,username or mobileno.""""""

    authentication_classes = [CustomBasicAuthentication]

    permission_classes = []

    @swagger_auto_schema(
        request_body=AdlCustomerCheckAPISerializer,
        responses={
            200: """"""{
                        ""data"":{
                            ""MSISDN"": ""8849574256"",
                            ""IsExistingMember"": ""Y"",
                            ""customerDetails"": [
                                {
                                    ""accountNo"": ""2694963"",
                                    ""name"": ""WOLF GREY"",
                                    ""plan"": ""10053/YOU JACKAL/10Mbps-1Mbps/300GB/3Months/Rs1859"",
                                    ""planDescription"": ""YOU JACKAL 300 GB 3 Months"",
                                    ""planValidity"": ""-90"",
                                    ""planMB"": ""2048"",
                                    ""bandwidth"": ""102399"",
                                    ""lowerBandwidth"": ""208"",
                                    ""status"": ""INSERVICE"",
                                    ""rcTag"": ""MBNOCF"",
                                    ""city"": ""SURAT"",
                                    ""suspendedDays"": ""0"",
                                    ""balance"": {
                                        ""mbBalance"": ""307200.0"",
                                        ""hourBalance"": ""0"",
                                        ""dayBalance"": ""90.0"",
                                    },
                                    ""isCurrentPlanRenewable"": ""true"",
                                    ""currentPlanPoid"": ""1412875777"",
                                    ""subscriptionAmt"": ""2500"",
                                    ""RBSQueue"": {},
                                }
                            ],
                        },
                        ""message"": {""message"": """", ""code"": ""Success""},
                    }""""""
        },
    )
    def post(self, request):

        try:
            user = request.user
            if not user or not user.is_authenticated:
                raise CustomException(""FAILED"", ""Unauthorized Access"")

            serializer = AdlCustomerCheckAPISerializer(data=request.data)
            serializer.is_valid()
            if serializer.errors:
                error_list = [
                    f""VALIDATIONERROR! {error}: {serializer.errors[error][0]}""
                    for error in serializer.errors
                ]
                raise CustomException(""RETRY"", error_list[0])
            response_data = {
                ""MSISDN"": ""8849574256"",
                ""IsExistingMember"": ""Y"",
                ""customerDetails"": [
                    {
                        ""accountNo"": ""2694963"",
                        ""name"": ""WOLF GREY"",
                        ""plan"": ""10053/YOU JACKAL/10Mbps-1Mbps/300GB/3Months/Rs1859"",
                        ""planDescription"": ""YOU JACKAL 300 GB 3 Months"",
                        ""planValidity"": ""-90"",
                        ""planMB"": ""2048"",
                        ""bandwidth"": ""102399"",
                        ""lowerBandwidth"": ""208"",
                        ""status"": ""INSERVICE"",
                        ""rcTag"": ""MBNOCF"",
                        ""city"": ""SURAT"",
                        ""suspendedDays"": ""0"",
                        ""balance"": {
                            ""mbBalance"": ""307200.0"",
                            ""hourBalance"": ""0"",
                            ""dayBalance"": ""90.0"",
                        },
                        ""isCurrentPlanRenewable"": ""true"",
                        ""currentPlanPoid"": ""1412875777"",
                        ""subscriptionAmt"": ""2500"",
                        ""RBSQueue"": {},
                    }
                ],
            }
            encrypted_data = encrypt(response_data)
            return Response(
                {
                    ""data"": encrypted_data,
                    ""message"": {""message"": """", ""code"": ""Success""},
                }
            )
        except Exception as e:
            code = ""FAILED""
            msg = ""Something went wrong.Please contact the administrator.""
            error_info = ""\n"".join(traceback.format_exception(*sys.exc_info()))
            print(error_info)
            if isinstance(e, ValidationError):
                error_info = ""\n"".join(e.messages)
                code = ""RETRY""
                msg = error_info
            if isinstance(e, CustomException):
                code = e.args[0]
                msg = e.args[1]
            create_log(
                action=""VI Adl Check"",
                action_details=f""VI Adl Check API ran into the following error.{error_info}"",
                action_by=""Anonymous User"",
                log_type=""ERROR"",
            )
            return Response(
                {""data"": {}, ""message"": {""message"": str(msg), ""code"": code}}
            )
"
rVLiqv3b,Analytics table,jaideep06,JSON,Friday 17th of May 2024 04:39:40 AM CDT,"CREATE TABLE `wp_rank_math_analytics_ga` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `page` varchar(500) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `pageviews` mediumint(6) NOT NULL,
  `visitors` mediumint(6) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;
 
ALTER TABLE `wp_rank_math_analytics_ga`
  ADD PRIMARY KEY (`id`),
  ADD KEY `analytics_object_analytics` (`page`);
 
ALTER TABLE `wp_rank_math_analytics_ga`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1;
COMMIT;"
y6UPWbzn,Untitled,Irina_Spasova,JavaScript,Friday 17th of May 2024 04:38:06 AM CDT,"// 23. Airline Luggage Charges
// Write a console program that calculates luggage charges based on weight and dimensions:

// Work as expected, but not correct:
// function calculateLuggageCharges(weightStart, dimensions) {
//   const totalDimensions = dimensions;
//   let totalFee = 0;
//   let weight = weightStart;
//   const explanations = [];

//   const START_DIMENSION = 159;
//   if (totalDimensions >= START_DIMENSION) {
//     if (
//       totalDimensions > START_DIMENSION + 1 &&
//       totalDimensions <= START_DIMENSION + 20
//     )
//       totalFee += 50; // Slightly oversize fee
//     explanations.push(""Slightly oversize"");
//   }
//   if (
//     totalDimensions > START_DIMENSION + 20 &&
//     totalDimensions <= START_DIMENSION + 50
//   ) {
//     totalFee += 100; // Oversize fee
//     explanations.push(""Oversize"");
//   }
//   if (totalDimensions > START_DIMENSION + 50) {
//     totalFee += 200; // Excessive oversize fee
//     explanations.push(""Excessive oversize"");
//   }

//   if (weight > 50) {
//     totalFee += 100;
//     explanations.push(""Overweight"");
//   }

//   if (weight > 50 && totalDimensions > 158) {
//     totalFee += 50; // Additional handling fee
//     explanations.push(""Handling"");
//   }

// console.log(totalFee);
//   // Construct the final explanation string
//   const explanationString = explanations.join("" + "");

//   return `Total charges: $${totalFee} (${explanationString})`;
// }

// Example usage:
// calculateLuggageCharges(52, 160); // Output: $150 (Overweight + Slightly oversize)
// calculateLuggageCharges(48, 180); // Output: $100 (Oversize)
// calculateLuggageCharges(55, 190); // Output: $250 (Overweight + Oversize + Handling)

// Correct logic, but the output is different:
function calculateLuggageCharges(weightStart, dimensions) {
  const totalDimensions = dimensions;
  let totalFee = 0;
  let weight = weightStart;
  const explanations = [];
  let additionalFee = 0;

  if (weight > 50) {
    totalFee += 100; // Overweight fee
    explanations.push(""Overweight"");
  }

  if (totalDimensions > 158) {
    const oversizeAmount = totalDimensions - 158;
    if (oversizeAmount <= 20) {
      additionalFee += 50; // Slightly oversize fee
      explanations.push(""Slightly oversize"");
    } else if (oversizeAmount <= 50) {
      additionalFee += 100; // Oversize fee
      explanations.push(""Oversize"");
    } else {
      additionalFee += 200; // Excessive oversize fee
      explanations.push(""Excessive oversize"");
    }
  }

  if (weight > 50 && totalDimensions > 158) {
    additionalFee += 50; // Handling fee
    explanations.push(""Handling"");
  }

  if (totalFee === 0 && additionalFee === 0) {
    console.log(""No charges applied."");
    return;
  }

  console.log(
    `Total charges: $${totalFee + additionalFee} (${explanations.join("" + "")})`
  );
}

// Example usage:
calculateLuggageCharges(52, 160); // Output: $150 (Overweight + Slightly oversize)
calculateLuggageCharges(48, 180); // Output: $100 (Oversize)
calculateLuggageCharges(55, 190); // Output: $250 (Overweight + Oversize + Handling)"
8Vae2kk1,Untitled,Irina_Spasova,JavaScript,Friday 17th of May 2024 04:36:07 AM CDT,"
function brewPotion(ingredient1, ingredient2) {
  if (ingredient1 === ""herbs"" || ingredient2 === ""herbs"") {
    if (ingredient1 === ""water"" || ingredient2 === ""water"") {
      return ""Health potion"";
    } else if (ingredient1 === ""oil"" || ingredient2 === ""oil"") {
      return ""Stealth potion"";
    } else {
      return ""Minor stamina potion"";
    }
  } else if (ingredient1 === ""berries"" || ingredient2 === ""berries"") {
    if (ingredient1 === ""sugar"" || ingredient2 === ""sugar"") {
      return ""Speed potion"";
    } else {
      return ""Minor energy potion"";
    }
  } else {
    return ""No potion"";
  }
}

// Example usage:
console.log(brewPotion(""herbs"", ""water"")); // Health potion
console.log(brewPotion(""herbs"", ""oil"")); // Stealth potion
console.log(brewPotion(""herbs"", ""banana"")); // Minor stamina potion
console.log(brewPotion(""berries"", ""sugar"")); // Speed potion
console.log(brewPotion(""berries"", ""banana"")); // Minor energy potion
console.log(brewPotion(""herbs"", ""sugar"")); // Minor stamina potion
console.log(brewPotion(""sugar"", ""salt"")); // No potion"
JuaCwU96,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Friday 17th of May 2024 04:24:59 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
17 May 2024"
NucK85Mm,root@debian-9020:~# journalctl -b -p err | tee /home/dragonserw/journalctl-bperr.log,SerW,Bash,Friday 17th of May 2024 04:14:23 AM CDT,"мая 14 22:06:39 debian-9020 gdm-password][1297]: gkr-pam: unable to locate daemon control file
мая 14 22:06:43 debian-9020 gdm-launch-environment][730]: GLib-GObject: g_object_unref: assertion 'G_IS_OBJECT (object)' failed
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertFreeCRLContext!failed: LastError = 0x57
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:20 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:21 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:21 debian-9020 nmcades[25685]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 08:42:45 debian-9020 nmcades[25685]: sup_lib 08:42:45.520665 support_load_dll:227 p:25685 t:0x0x7f4affaae5d0 support_load_dll(): dlerror() = libisbc_pkcs11_main.so: невозможно открыть разделяемый объектный файл: Нет такого файла или каталога
мая 16 08:42:45 debian-9020 nmcades[25685]: sup_lib 08:42:45.521111 support_load_dll:227 p:25685 t:0x0x7f4affaae5d0 support_load_dll(): dlerror() = libjcPKCS11-2.so: невозможно открыть разделяемый объектный файл: Нет такого файла или каталога
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertFreeCRLContext!failed: LastError = 0x57
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:02 debian-9020 nmcades[35546]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertFreeCRLContext!failed: LastError = 0x57
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:08 debian-9020 nmcades[35558]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertFreeCertificateContext!failed: LastError = 0x57
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertFreeCRLContext!failed: LastError = 0x57
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:12 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:13 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2
мая 16 21:12:13 debian-9020 nmcades[35565]: <capi20>CertOpenStore!failed: LastError = 0x2"
s1HTik1f,hoam,suramraja1,Lua,Friday 17th of May 2024 04:05:38 AM CDT,"repeat task.wait(10) until game:IsLoaded()

loadstring(game:HttpGet('https://zaphub.xyz/Exec'))()
"
kssHnaQw,Untitled,KoctrX,JavaScript,Friday 17th of May 2024 03:58:38 AM CDT,"Ось список значень для всіх полів у форматі JSON, включаючи доповнений список для ""Training Style"":

```json
{
  ""belt"": [
    ""White Belt"",
    ""Blue Belt"",
    ""Purple Belt"",
    ""Brown Belt"",
    ""Black Belt"",
    ""Red/Black Belt (Coral Belt)"",
    ""Red/White Belt (Coral Belt)"",
    ""Red Belt""
  ],
  ""training_style"": [
    ""Gi"",
    ""No-Gi"",
    ""MMA"",
    ""Self-Defense"",
    ""Submission Wrestling"",
    ""Freestyle Wrestling"",
    ""Greco-Roman Wrestling"",
    ""Folkstyle Wrestling"",
    ""Catch Wrestling"",
    ""Judo"",
    ""Sambo"",
    ""Luta Livre""
  ],
  ""weight_division"": [
    ""Rooster weight (up to 57 kg or 125 lbs)"",
    ""Light-feather weight (57 - 64 kg or 125 - 141 lbs)"",
    ""Feather weight (64 - 70 kg or 141 - 154 lbs)"",
    ""Light weight (70 - 77 kg or 154 - 170 lbs)"",
    ""Middle weight (77 - 88 kg or 170 - 194 lbs)"",
    ""Light-heavy weight (88 - 94 kg or 194 - 207 lbs)"",
    ""Heavy weight (94 - 100 kg or 207 - 221 lbs)"",
    ""Super-heavy weight (100 - 108 kg or 221 - 238 lbs)"",
    ""Ultra-heavy weight (108 kg or 238 lbs and above)""
  ],
  ""favorite_style_position"": [
    ""Berimbolo"",
    ""Guard"",
    ""Half Guard"",
    ""Mount"",
    ""Back Control"",
    ""Side Control"",
    ""Turtle"",
    ""De La Riva Guard"",
    ""X-Guard"",
    ""Spider Guard"",
    ""Closed Guard"",
    ""Open Guard""
  ]
}
```"
pqNdrq9W,yes ye har!!! snowybot robo manual,coinwalk,JavaScript,Friday 17th of May 2024 03:48:49 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/240).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24)
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/32)<=(beast))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
hJzT3zA9,Untitled,sissou123,HTML 5,Friday 17th of May 2024 03:42:37 AM CDT,"Learn HTML5 Programming From Scratch
A Complete HTML5 Programming Course for Beginners 
What you'll learn
By the end of the course you will be able to create full fledged HTML5 websites
You will be able to use features like Drag and Drop, Geo location and Web Storage to create an immersible user experience. 
for more:https://cuty.io/aJEfXUDu
"
G05eBEBv,(Eat That Up) It's Good For You (Updated),meromerc,HTML,Friday 17th of May 2024 03:28:42 AM CDT,"<!--

    EAT THAT UP, IT'S GOOD FOR YOU
    by meromercury
    
    created: 05/26/20 // last updated: 05/17/24
    
    Accent color: #5FBBFB
    CTRL+F to change


-->

<div class=""container"">
<div class=""mx-auto"" style=""font-size:14px;max-width:950px;"">

<div class=""row no-gutters"">

<!------- LEFT IMAGE ------->
  <div class=""col-lg-4 col-sm-12 p-1"">
      <!----- image will automatically center & cover - dimensions 610 H x 317 W ----->
	  <!----- replace 'IMAGE URL' with your image url ----->
      <div class=""card w-100"" style=""position:absolute;
          background-image:url(IMAGE URL);
      border-radius:10px;background-size:cover;background-position:center;height:610px;z-index:-1;border: 2px dashed #5FBBFB"">
      </div>
  </div>


<div class=""col-lg-8 col-sm-12 p-1 pl-3 pr-2"">

<!-------- TAB BUTTONS -------->

<ul class=""nav nav-tabs card-header-tabs row px-3 mb-2 align-items-center"">
    <li class=""nav-item col mx-1 btn"" style=""background-color:#5FBBFB; padding:2px"">
        <a class=""nav-link text-white btn h-100 border-0 active show"" data-toggle=""tab"" href=""#tab1"" style=""text-shadow:0px 0px 8px #5FBBFB"">
            <i class=""fas fa-user fa-2x""></i> 
        </a>
    </li>
    <li class=""nav-item col mx-1 btn"" style=""background-color:#5FBBFB; padding:2px"">
        <a class=""nav-link text-white btn h-100 border-0"" data-toggle=""tab"" href=""#tab2"" style=""text-shadow:0px 0px 8px #5FBBFB"">
            <i class=""fad fa-stars fa-2x""></i>
        </a>
    </li>
    <li class=""nav-item col mx-1 btn"" style=""background-color:#5FBBFB; padding:2px"">
        <a class=""nav-link text-white btn h-100 border-0"" data-toggle=""tab"" href=""#tab3"" style=""text-shadow:0px 0px 8px #5FBBFB"">
            <i class=""fad fa-books fa-2x""></i>
        </a>
    </li>
    <li class=""nav-item col mx-1 btn"" style=""background-color:#5FBBFB; padding:2px"">
        <a class=""nav-link text-white btn h-100 border-0"" data-toggle=""tab"" href=""#tab4"" style=""text-shadow:0px 0px 8px #5FBBFB"">
            <i class=""fad fa-user-friends fa-2x""></i>
        </a>
    </li>
</ul>

<div class=""bg-faded p-3 mb-2 h-100"" style=""border-radius:10px;max-height:555px; border:2px dashed #5FBBFB; z-index:1;"">
<div class=""tab-content"">

<!----------- TAB 1 ----------->
<div class=""tab-pane fade active show"" id=""tab1"">
<div class=""row no-gutters container-fluid p-0"" style=""height:520px"">
<div id=""accordion"" class=""w-100"">

    <!------- ABOUT - ACCORDION 1 ------->
    <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab""><a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion1"" style=""color:#5fbbfb; font-size:1.6rem; height:48px;"">
        <span class=""pull-left ml-3"">
            About
        </span>
        <span class=""pull-right mr-3""><i class=""fa-regular fa-chevron-down fa-xs""></i></span>
      </a></div>
  
    <div id=""accordion1"" class=""collapse show"" data-parent=""#accordion"">
    <div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-0 table-responsive container-fluid"" style=""max-height:300px;min-height:300px"">
    
    <p>These sections scroll. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra. In eu arcu semper, efficitur erat efficitur, faucibus mi. Duis varius rutrum arcu, eget blandit tortor convallis at. Etiam diam elit, mattis non leo eu, pharetra mattis urna.</p>
    
    <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare. </p>
    
    <!------- add more paragraphs above this line! don't forget the <p> tags! ------->
    </div></div>
    </div>
  </div>

    <!------- APPEARANCE - ACCORDION 2 ------->
    <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab""><a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion2"" style=""color:#5FBBFB; font-size:1.6rem; height:48px"">
        <span class=""pull-left ml-3"">
            Appearance
        </span>
        <span class=""pull-right mr-3""><i class=""fa-regular fa-chevron-down fa-xs""></i></span>
      </a></div>
  
    <div id=""accordion2"" class=""collapse"" data-parent=""#accordion"">
    <div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-0 table-responsive container-fluid"" style=""max-height:300px;min-height:300px"">
    <p>Maecenas sit amet enim convallis, congue quam non, dapibus ante. Maecenas eleifend sapien at eros efficitur, et laoreet dolor mollis. Praesent aliquam, massa vitae posuere mattis, quam ligula pulvinar leo, vel porttitor ex leo sed erat. Aliquam nec purus vel enim tristique pharetra cursus nec ligula. Fusce ex erat, consequat at imperdiet sit amet, convallis eget quam. Ut finibus dolor dui, non condimentum quam tempor et.</p>
    
    <p>Proin dapibus, ligula id condimentum consequat, arcu lectus ultrices enim, nec ultricies felis augue quis orci. Ut eu neque a dolor posuere rhoncus. Donec nec ex nec risus tincidunt fringilla in vel nunc. Vivamus fermentum pharetra suscipit. Morbi sodales tortor sit amet convallis auctor. Aenean turpis metus, commodo vitae congue eget, rutrum vitae ipsum. Nam augue dolor, sollicitudin commodo tempor vel, tincidunt ut erat.</p>

    <p>Phasellus aliquam quam imperdiet, tempor erat in, pretium nisl. Praesent non magna et nisi dictum ultrices ac id ipsum. Pellentesque id eros sed enim dignissim maximus at non justo. Donec nec maximus mi, eu tincidunt sem. Aliquam turpis sem, efficitur hendrerit sem id, lacinia tempor dolor. Nunc convallis arcu odio, id rutrum leo pharetra a. Morbi dapibus ultrices dolor sed consequat. </p>
    
    <!------- add more paragraphs above this line! don't forget the <p> tags! ------->
    </div></div>
    </div></div>

    <!------- PERSONALITY - ACCORDION 3 ------->
    <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab""><a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion3"" style=""color:#5FBBFB; font-size:1.6rem; height:48px"">
        <span class=""pull-left ml-3"">
            Personality
        </span>
        <span class=""pull-right mr-3""><i class=""fa-regular fa-chevron-down fa-xs""></i></span>
      </a></div>
  
    <div id=""accordion3"" class=""collapse"" data-parent=""#accordion""><div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-0 table-responsive container-fluid"" style=""max-height:295px;min-height:295px"">
    
    <!----- TRAITS LIST ----->
    <div class=""row no-gutters text-center mb-0 font-italic"" style=""font-size:12px;"">
        <div class=""col-lg-4 col-sm-12 text-success"">
            <i class=""fa-solid fa-square-plus""></i>
            positive, positive
        </div>
        
        <div class=""col-lg-4 col-sm-12 text-muted"">
            <i class=""fa-solid fa-square-minus""></i>
            maybe, maybe, maybe
        </div>
        
        <div class=""col-lg-4 col-sm-12 text-danger"">
            <i class=""fa-solid fa-square-xmark""></i>
            negative, negative
        </div>
    </div>
    <hr>
    <!----- end traits list ----->

    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pellentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra.</p>
    
    <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare.</p>
    
    
    <!------- add more paragraphs above this line! don't forget the <p> tags! ------->
    </div></div>
    </div></div>

</div>

</div>
</div>
<!--------- END TAB 1 --------->


<!----------- TAB 2 ----------->
<div class=""tab-pane fade"" id=""tab2"">
<div class=""no-gutters container-fluid table-responsive p-2"" style=""height:520px"">

    <!------- BASICS ------->
    <div class=""card card-block border-0 p-2 mb-3"">
    <div class=""row no-gutters"">
        <div class=""col-sm"">
        <ul class=""list-group list-group-flush"">
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fas fa-user"" style=""color:#5FBBFB""></i>
              Name
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fad fa-id-card"" style=""color:#5FBBFB""></i>
              Pronouns
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""far fa-person-half-dress"" style=""color:#5FBBFB""></i>
              Gender
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fas fa-heart"" style=""color:#5FBBFB""></i>
              Orientation
              </li>
          </ul>
      </div>
      
      <div class=""col-auto p-2 d-lg-block d-none"">
        <div class=""card h-100"" style=""border-width:1px""></div>
      </div>
      <hr class=""w-100 my-0 d-lg-none d-sm-block"">
      
      <div class=""col-sm"">
        <ul class=""list-group list-group-flush"">
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fad fa-clock"" style=""color:#5FBBFB""></i>
              Age
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fad fa-ruler"" style=""color:#5FBBFB""></i>
              Height
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""fad fa-calendar"" style=""color:#5FBBFB""></i>
              Birthday
              </li>
            <li class=""list-group-item d-flex justify-content-between"">
              <i class=""far fa-tint"" style=""color:#5FBBFB""></i>
              Race / Species
              </li>
          </ul>
      </div>
      </div>
    </div>

    <!------- STATS ------->
    <div class=""card card-block border-0 p-3 mb-3 text-center text-muted"" style=""font-size:12px;"">
      
      <!------- you can change the text to whatever you like, by default it's MBTI types ------->
      
      <div class=""row no-gutters align-items-center mb-1"">
          <div class=""col order-lg-1 order-sm-1"">
              Introvert
          </div>
          <div class=""col-lg-8 col order-lg-2 order-sm-3"">
            <!------- to change value, change ""width:%"" to whatever percentage you want. for example: width:25% ------->
              <div class=""progress""><div class=""progress-bar-striped progress-bar-animated"" role=""progressbar"" style=""background-color:#5FBBFB;
                    width:25%
              ;height:10px""></div></div>
          </div>
          <div class=""col order-lg-3 order-sm-2"">
              Extrovert
          </div>
      </div>
      <div class=""row no-gutters align-items-center mb-1"">
          <div class=""col order-lg-1 order-sm-1"">
              Observant
          </div>
          <div class=""col-lg-8 col order-lg-2 order-sm-3"">
            <!------- to change value, change ""width:%"" to whatever percentage you want. for example: width:25% ------->
              <div class=""progress""><div class=""progress-bar-striped progress-bar-animated"" role=""progressbar"" style=""background-color:#5FBBFB;
                    width:50%
              ;height:10px""></div></div>
          </div>
          <div class=""col order-lg-3 order-sm-2"">
              Intuitive
          </div>
      </div>
      <div class=""row no-gutters align-items-center mb-1"">
          <div class=""col order-lg-1 order-sm-1"">
              Thinking
          </div>
          <div class=""col-lg-8 col order-lg-2 order-sm-3"">
            <!------- to change value, change ""width:%"" to whatever percentage you want. for example: width:25% ------->
              <div class=""progress""><div class=""progress-bar-striped progress-bar-animated"" role=""progressbar"" style=""background-color:#5FBBFB;
                    width:75%
              ;height:10px""></div></div>
          </div>
          <div class=""col order-lg-3 order-sm-2"">
              Feeling
          </div>
      </div>
      <div class=""row no-gutters align-items-center"">
          <div class=""col order-lg-1 order-sm-1"">
              Judging
          </div>
          <div class=""col-lg-8 col order-lg-2 order-sm-3"">
            <!------- to change value, change ""width:%"" to whatever percentage you want. for example: width:25% ------->
              <div class=""progress""><div class=""progress-bar-striped progress-bar-animated"" role=""progressbar"" style=""background-color:#5FBBFB;
                    width:100%
              ;height:10px""></div></div>
          </div>
          <div class=""col order-lg-3 order-sm-2"">
              Prospecting
          </div>
      </div>
    </div>

    <!------- LIKES / DISLIKES ------->
    <div class=""row m-0"">
  
        <div class=""col-lg-6 col-sm-12 mb-3 p-0 pr-sm-0 pr-lg-1"">
        <div class=""card border-0 p-2"" style=""font-size:15px"">
            <div class=""card-header bg-faded p-1 justify-content-around mb-1"">
                <span style=""color:#5FBBFB; font-size:1.6rem; font-variant:small-caps"">
                    Likes . . .
                </span></div>
                
          <ul class=""list-group list-group-flush table-responsive"" style=""max-height:190px"">
              <li class=""list-group-item justify-content-between border-0"">
                <i class=""fas fa-check fa-lg""></i>
                Yes
              </li>
              <li class=""list-group-item justify-content-between"">
                <i class=""fas fa-check fa-lg""></i>
                Yes
              </li>
              <li class=""list-group-item justify-content-between"">
                <i class=""fas fa-check fa-lg""></i>
                Yes
              </li>
              <li class=""list-group-item justify-content-between"">
                <i class=""fas fa-check fa-lg""></i>
                Yes
              </li>
          </ul>
        </div>
        </div>
  
        <div class=""col-lg-6 col-sm-12 mb-3 p-0 pl-sm-0 pl-lg-1"">
        <div class=""card border-0 p-2"" style=""font-size:15px"">
            
            <div class=""card-header bg-faded p-1 justify-content-around mb-1"">
                <span style=""color:#5FBBFB; font-size:1.6rem; font-variant:small-caps"">
                    Dislikes . . .
                </span></div>
            
          <ul class=""list-group list-group-flush table-responsive"" style=""max-height:190px"">
              <li class=""list-group-item d-flex justify-content-between border-0"">
                <i class=""fas fa-times fa-lg""></i>
                No
              </li>
              <li class=""list-group-item d-flex justify-content-between"">
                <i class=""fas fa-times fa-lg""></i>
                No
              </li>
              <li class=""list-group-item d-flex justify-content-between"">
                <i class=""fas fa-times fa-lg""></i>
                No
              </li>
              <li class=""list-group-item d-flex justify-content-between"">
                <i class=""fas fa-times fa-lg""></i>
                No
              </li>
          </ul>
        </div>
       </div>
    </div>


    <!------ PLAYLIST ------->
    <div class=""card card-block border-0 p-3"" style=""font-size:16px"">
        <div class=""justify-content-between d-inline-block mx-1"">
            
            <!----- replace ""LINK"" with the link to your song ----->
            
            <a href=""https://www.youtube.com/watch?v=gcmlshqyQ_s"" style=""color:#5FBBFB"" target=_blank><i class=""fa-solid fa-play-pause""></i></a><p class=""pull-right mb-0""><span class=""font-weight-bold"">
                Title 
                </span><span class=""font-italic"">- 
                Artist
            </span><i class=""fa-solid fa-music-note pl-2""></i></p>
            
            <hr class=""my-2"">
            
            <a href=""https://www.youtube.com/watch?v=gcmlshqyQ_s"" style=""color:#5FBBFB"" target=_blank><i class=""fa-solid fa-play-pause""></i></a><p class=""pull-right mb-0""><span class=""font-weight-bold"">
                Title 
                </span><span class=""font-italic"">- 
                Artist
            </span><i class=""fa-solid fa-music-note pl-2""></i></p>
            
            <hr class=""my-2"">
            
            <!---- SONG CODE - copy from here to end to duplicate ---->
            <a href=""https://www.youtube.com/watch?v=gcmlshqyQ_s"" style=""color:#5FBBFB"" target=_blank><i class=""fa-solid fa-play-pause""></i></a><p class=""pull-right mb-0""><span class=""font-weight-bold"">
                Title 
                </span><span class=""font-italic"">- 
                Artist
            </span><i class=""fa-solid fa-music-note pl-2""></i></p>
            <!---- end song code ---->
            
            
            <!-----
            you can add as many songs as you want above this line!
            copy and paste the < hr > part to separate the songs, it goes between the song code
            ----->
        </div>
    </div>

</div>
</div>
<!--------- END TAB 2 --------->


<!----------- TAB 3 ----------->
<div class=""tab-pane fade"" id=""tab3"">

<div class=""row no-gutters container-fluid table-responsive p-2"" style=""height:520px"">

    <!------- QUOTE ------->
  <div class=""row card card-block border-0 container-fluid table-responsive m-0 p-3 mb-3"">
      <div class=""m-0 p-0 container-fluid mh-100"">
        <span class=""pull-left pr-1""><i class=""fas fa-quote-left fa-lg""></i></span>
        <span class=""pull-right pl-1""><i class=""fas fa-quote-right fa-lg""></i></span>
        <h2 style=""color:#5FBBFB;"" class=""text-center font-italic"">
            It's too late, it's too late / You've got another one coming and it's gonna be the same
        </h2>
        </div>
  </div>

    <!------- BIOGRAPHY ------->
  <div class=""card card-block border-0 container-fluid table-responsive m-0 p-3"">
      <h2 style=""color:#5FBBFB;  font-size:24px"" class=""card-header bg-faded text-center px-1 py-2 mb-2 border-0"">
          Biography
      </h2>
    
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra. In eu arcu semper, efficitur erat efficitur, faucibus mi. Duis varius rutrum arcu, eget blandit tortor convallis at. Etiam diam elit, mattis non leo eu, pharetra mattis urna.</p>
        
        <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare.</p>
        
        <!-----
        SUBHEADER START
        copy to end and paste for more subheaders
        You can change the fontawesome icons to whatever you'd like! (just leave the mx-3 part)
        or remove them if you don't want them. that works too!
        ----->
        <div class=""bg-faded rounded my-2 p-1 px-2 text-center"" style=""font-variant:small-caps; color:#5FBBFB; font-size:16px"">
            <i class=""fa-duotone fa-bookmark mx-3""></i>
            Subheader
            <i class=""fa-duotone fa-bookmark mx-3""></i>
        </div>
        <!----- SUBHEADER END ----->
        
        <p>Donec laoreet dui et massa sollicitudin ornare. Integer sed libero sit amet ipsum convallis suscipit. Nullam pretium porta nisi, eget euismod eros tempus et. Vivamus nulla arcu, mattis ac volutpat vel, scelerisque a neque. Sed tincidunt metus quis nunc egestas varius vel et arcu. Vivamus placerat est at efficitur vulputate. Curabitur cursus urna id semper sollicitudin. Maecenas pulvinar varius massa at sollicitudin.</p>
        
        <p>Vivamus pellentesque odio et massa pulvinar luctus. Curabitur ut velit luctus, condimentum dui blandit, efficitur libero. Donec eu nisi sit amet lorem rutrum facilisis ut eget odio. Phasellus tempus ornare eros iaculis sollicitudin. Pellentesque sed posuere magna.</p>
        
        
        <!----- put your text or subheaders above this line! ----->
  </div>


</div>
</div>
<!--------- END TAB 3 --------->


<!----------- TAB 4 ----------->
<div class=""tab-pane fade"" id=""tab4"">
<div class=""container pr-1 pl-1 table-responsive"" style=""height:520px"">


<!------- RELATIONSHIP CODE ------->
<!------- copy from here to end and paste below for more relationships ------->
<div class=""card border-0 mb-3""><div class=""row no-gutters"">
    <div class=""col-md-3 col-sm-12 mb-3"">
         <div class=""card rounded-circle mx-auto mt-3"" style=""background-image:url(https://i.imgur.com/XNO9z5Q.png);background-position:center;background-size:cover;width:110px;height:110px; border:2px solid #5FBBFB""></div>
         <div class=""text-center mx-auto px-3 text-break"" style=""max-height:135px;overflow-y:auto;overflow-x:hidden"">
             
             <!----- replace ""CHARACTER LINK"" with the link to your character - remember the ""QUOTES"" around the link ----->
             <a href=""CHARACTER LINK"" style=""color:#5FBBFB; font-size:1.1rem; font-variant:small-caps"">
                 Name
             </a>
            <p class=""text-muted mb-0 text-lowercase"" style=""font-size:13px"">
                Relationship
            </p>
            
          <!----- you can replace these fontawesome icons with whatever you like! max of 5 icons at most----->
          <span class=""text-center text-muted"" style=""font-size:14px"">
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""far fa-heart""></i>
            <i class=""far fa-heart""></i>
          </span>
         </div>
     </div>
    <div class=""col-md-9 col-sm-12 pl-1 pr-3 pt-3 mb-2 h-100"" style=""max-height:260px;overflow-y:auto;overflow-x:hidden"">
        <div style=""font-size:13px;"">
          
            <p>This card will scroll, but I suggest you keep it short. Maybe a few sentences at most. No long names, either.</p>
            
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vehicula tortor ac urna fringilla eleifend. Ut pellentesque est vel tortor lobortis, quis aliquet eros lobortis. Nulla sit amet commodo velit. Praesent eget nibh diam. Ut a orci sed orci efficitur mollis. Ut lorem dui, tincidunt vitae ultrices eu, ultricies id mauris.</p>
            
            <!----- add more <p> text </p> above this line! ----->
        </div>
    </div>
    </div>
</div>
<!------- END RELATIONSHIP CODE ------->

<!------- RELATIONSHIP CODE ------->
<!------- copy from here to end and paste below for more relationships ------->
<div class=""card border-0 mb-3""><div class=""row no-gutters"">
    <div class=""col-md-3 col-sm-12 mb-3"">
         <div class=""card rounded-circle mx-auto mt-3"" style=""background-image:url(https://i.imgur.com/XNO9z5Q.png);background-position:center;background-size:cover;width:110px;height:110px; border:2px solid #5FBBFB""></div>
         <div class=""text-center mx-auto px-3 text-break"" style=""max-height:135px;overflow-y:auto;overflow-x:hidden"">
             
             <!----- replace ""CHARACTER LINK"" with the link to your character - remember the ""QUOTES"" around the link ----->
             <a href=""CHARACTER LINK"" style=""color:#5FBBFB; font-size:1.1rem; font-variant:small-caps"">
                 Name
             </a>
            <p class=""text-muted mb-0 text-lowercase"" style=""font-size:13px"">
                Relationship
            </p>
            
          <!----- you can replace these fontawesome icons with whatever you like! max of 5 icons at most----->
          <span class=""text-center text-muted"" style=""font-size:14px"">
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""far fa-heart""></i>
            <i class=""far fa-heart""></i>
          </span>
         </div>
     </div>
    <div class=""col-md-9 col-sm-12 pl-1 pr-3 pt-3 mb-2 h-100"" style=""max-height:260px;overflow-y:auto;overflow-x:hidden"">
        <div style=""font-size:13px;"">
          
            <p>This card will scroll, but I suggest you keep it short. Maybe a few sentences at most. No long names, either.</p>
            
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vehicula tortor ac urna fringilla eleifend. Ut pellentesque est vel tortor lobortis, quis aliquet eros lobortis. Nulla sit amet commodo velit. Praesent eget nibh diam. Ut a orci sed orci efficitur mollis. Ut lorem dui, tincidunt vitae ultrices eu, ultricies id mauris.</p>
            
            <!----- add more <p> text </p> above this line! ----->
        </div>
    </div>
    </div>
</div>
<!------- END RELATIONSHIP CODE ------->


<!------- RELATIONSHIP CODE ------->
<!------- copy from here to end and paste below for more relationships ------->
<div class=""card border-0 mb-3""><div class=""row no-gutters"">
    <div class=""col-md-3 col-sm-12 mb-3"">
         <div class=""card rounded-circle mx-auto mt-3"" style=""background-image:url(https://i.imgur.com/XNO9z5Q.png);background-position:center;background-size:cover;width:110px;height:110px; border:2px solid #5FBBFB""></div>
         <div class=""text-center mx-auto px-3 text-break"" style=""max-height:135px;overflow-y:auto;overflow-x:hidden"">
             
             <!----- replace ""CHARACTER LINK"" with the link to your character - remember the ""QUOTES"" around the link ----->
             <a href=""CHARACTER LINK"" style=""color:#5FBBFB; font-size:1.1rem; font-variant:small-caps"">
                 Name
             </a>
            <p class=""text-muted mb-0 text-lowercase"" style=""font-size:13px"">
                Relationship
            </p>
            
          <!----- you can replace these fontawesome icons with whatever you like! max of 5 icons at most----->
          <span class=""text-center text-muted"" style=""font-size:14px"">
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""fas fa-heart""></i>
            <i class=""far fa-heart""></i>
            <i class=""far fa-heart""></i>
          </span>
         </div>
     </div>
    <div class=""col-md-9 col-sm-12 pl-1 pr-3 pt-3 mb-2 h-100"" style=""max-height:260px;overflow-y:auto;overflow-x:hidden"">
        <div style=""font-size:13px;"">
          
            <p>This card will scroll, but I suggest you keep it short. Maybe a few sentences at most. No long names, either.</p>
            
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vehicula tortor ac urna fringilla eleifend. Ut pellentesque est vel tortor lobortis, quis aliquet eros lobortis. Nulla sit amet commodo velit. Praesent eget nibh diam. Ut a orci sed orci efficitur mollis. Ut lorem dui, tincidunt vitae ultrices eu, ultricies id mauris.</p>
            
            <!----- add more <p> text </p> above this line! ----->
        </div>
    </div>
    </div>
</div>
<!------- END RELATIONSHIP CODE ------->



<!------- PASTE RELATIONSHIPS ABOVE THIS LINE ------->

</div>
</div>
<!--------- END TAB 4 --------->

</div>
</div>

</div>
</div>
</div>

<!----- my credit! please don't touch this ----->
<div class=""m-1 text-center text-primary"" style=""font-size:14px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" data-toggle=""tooltip"" title=""code"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div></div>
"
FYqqGDLe,Untitled,sissou123,HTML,Friday 17th of May 2024 03:25:14 AM CDT,"The HTML & CSS Bootcamp 2024 Edition
Brand New Course! Covers Flexbox, CSS Grid, Animations, Responsive Design and More! Tons of Exercises &amp; Projects. 
What you'll learn
Master HTML & CSS and build massive real-world projects, with no prior knowledge needed!
How to write well-structured and semantic HTML documents 
for more:https://cuty.io/fWib6CnkiA9
"
Axr95nS2,KAVO REMIAPE,hacimiks,Lua,Friday 17th of May 2024 03:22:49 AM CDT,"local Library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua""))()
local Window = Library.CreateLib(""RemiAPE"", ""GrapeTheme"")


local Tab = Window:NewTab(""Main"")
local Section = Tab:NewSection(""Auto Farm"")

Section:NewToggle(""Auto Win"", ""Auto Farm Wins"", function(state)
    if state then
        print(""Toggle On"")
    else
        print(""Toggle Off"")
    end
end)

local Section2 = Tab:NewSection(""Other"")

Section2:NewToggle(""Remove Fall Damage"", ""Doesn't Damage Yourself When You Fell"", function(state)
    if state then
        print(""Toggle On"")
    else
        print(""Toggle Off"")
    end
end)

Section2:NewToggle(""Walk On Water"", ""Makes Yourself Walk On Water"", function(state)
    if state then
        print(""Toggle On"")
    else
        print(""Toggle Off"")
    end
end)

Section2:NewButton(""Infinite Jump Gui"", ""Can Jump Infinitely"", function()
    print(""Clicked"")
end)

Section2:NewButton(""Launch Rocket"", ""Only Works On Launch Land Map"", function()
    print(""Clicked"")
end)

Section2:NewButton(""Show Current Disaster"", ""Check The Console (F9) (/console)"", function()
    print(""Clicked"")
end)

Section2:NewButton(""Set Health To Max"", ""Manual (NOT AUTO)"", function()
    print(""Clicked"")
end)

Section2:NewButton(""Remove Sandstorm UI"", ""Removes The Sand On Screen"", function()
    print(""Clicked"")
end)

Section2:NewButton(""Remove Blizzard UI"", ""Removes The Snow On Screen"", function()
    print(""Clicked"")
end)

local Section3 = Tab:NewSection(""Gamepass"")

Section3:NewToggle(""Vote Map (Compass)"", ""Shows The Voting UI"", function(state)
    if state then
        print(""Toggle On"")
    else
        print(""Toggle Off"")
    end
end)

local Section4 = Tab:NewSection(""Teleports"")

Section4:NewButton(""Tower"", ""Teleport To Spawn"", function()
    print(""Clicked"")
end)

Section4:NewButton(""Island"", ""Teleport To Map"", function()
    print(""Clicked"")
end)

local Tab2 = Window:NewTab(""Miscallaenous"")
local Section5 = Tab2:NewSection(""Extras"")

Section5:NewButton(""Fly GUI V3"", ""GUI That Makes Yourself Fly"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Mobile Keyboard"", ""PC Keyboard For Mobile"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Mobile Cursor"", ""PC Cursor For Mobile"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Fling GUI"", ""GUI That Fling People"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Sit Gui"", ""GUI That Forcing Yourself To Sit"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Headless + One Leg"", ""One Leg Only Works On R6"", function()
    print(""Clicked"")
end)

Section5:NewButton(""One Leg"", ""One Leg Only Works On R15"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Korblox + Headless"", ""Korblox Only Works On R15"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Hacker Chat GUI"", ""No Chat Tags"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Outfit Copier"", ""Needs a Player User ID"", function()
    print(""Clicked"")
end)

Section5:NewButton(""Godmode"", ""Not Dying"", function()
    print(""Clicked"")
end)

local Tab3 = Window:NewTab(""FE Scripts"")
local SectionFE = Tab3:NewSection(""FE Scripts"")

SectionFE:NewToggle(""FE Sound Spammer"", ""Sound That Makes Your Eardrum bleed"", function(state)
    if state then
        print(""Toggle On"")
    else
        print(""Toggle Off"")
    end
end)

SectionFE:NewButton(""FE Universal Admin"", ""GUI That Has a Lot Of FE Scripts"", function()
    print(""Clicked"")
end)

SectionFE:NewButton(""FE Character Animations"", ""Custom Animations Only Works On R15"", function()
    print(""Clicked"")
end)

SectionFE:NewButton(""FE Invisible"", ""Makes Yourself Invisible"", function()
    print(""Clicked"")
end)

SectionFE:NewButton(""FE Patchma Hub"", ""GUI That Has a Lot Of FE Scripts"", function()
    print(""Clicked"")
end)

SectionFE:NewButton(""FE Telekenesis V2"", ""Can Control Things"", function()
    print(""Clicked"")
end)

local Tab4 = Window:NewTab(""Settings"")
local Section7 = Tab4:NewSection(""Universal"")

Section7:NewButton(""Lightux ESP"", ""ESP Chams"", function()
    print(""Clicked"")
end)

Section7:NewButton(""Anti AFK"", ""No AFK Detection"", function()
    print(""Clicked"")
end)

Section7:NewButton(""Infinite Yield"", ""Admin Commands"", function()
    print(""Clicked"")
end)

Section7:NewButton(""Dark Dex V3"", ""To Hook Scripts"", function()
    print(""Clicked"")
end)

local Section8 = Tab4:NewSection(""Humanoid"")

Section8:NewSlider(""Walk Speed"", ""Adjust The Player Speed"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section8:NewSlider(""Jump Height"", ""Adjust The Player Jump Height"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

Section8:NewSlider(""Gravity"", ""Adjust The Player Gravity"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Workspace.Gravity = s
end)

Section8:NewSlider(""FOV"", ""Adjust The Player FOV"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Workspace.Camera.FieldOfView = s
end)

local Section10 = Tab4:NewSection(""GUI Settings"")

Section10:NewKeybind(""Set UI Keybind"", ""Change Keybind To Hide GUI"", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)"
nm2W89Xg,OLED-13-I2C-BLU,microrobotics,Arduino,Friday 17th of May 2024 03:15:52 AM CDT,"#include ""U8glib.h""

// Initialize the display with the correct driver
U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE);

void u8g_prepare(void) 
{
  u8g.setFont(u8g_font_6x10);
  u8g.setFontRefHeightExtendedText();
  u8g.setDefaultForegroundColor();
  u8g.setFontPosTop();
}

const unsigned char mybotic[] PROGMEM =
{
   // (Your image data)
};

void picture(uint8_t a)
{
  u8g.drawXBMP(26, 2, 70, 63, mybotic);
}

void intro(uint8_t a)
{
  u8g.setFont(u8g_font_unifont);
  u8g.drawStr(2, 19, ""Welcome"");
  u8g.drawStr(2, 38, ""to"");
  u8g.drawStr(2, 57, ""Mybotic :)"");
}

void u8g_box_frame(uint8_t a) 
{
  u8g.drawStr(2, 0, ""drawBox"");
  u8g.drawBox(5, 10, 20, 10);
  u8g.drawBox(10 + a, 15, 30, 7);
  u8g.drawStr(2, 30, ""drawFrame"");
  u8g.drawFrame(5, 40, 20, 10);
  u8g.drawFrame(10 + a, 45, 30, 7);
}

void u8g_disc_circle(uint8_t a) 
{
  u8g.drawStr(2, 0, ""drawDisc"");
  u8g.drawDisc(11, 18, 9);
  u8g.drawDisc(24 + a, 16, 7);
  u8g.drawStr(2, 30, ""drawCircle"");
  u8g.drawCircle(11, 48, 9);
  u8g.drawCircle(24 + a, 46, 7);
}

void u8g_r_frame(uint8_t a) 
{
  u8g.drawStr(2, 0, ""drawRFrame/Box"");
  u8g.drawRFrame(5, 10, 40, 30, a + 1);
  u8g.drawRBox(50, 10, 25, 40, a + 1);
}

void u8g_string(uint8_t a) 
{
  u8g.drawStr270(30, 31 - a, ""0/360"");
  u8g.drawStr(30 + a, 31, ""90"");
  u8g.drawStr90(30, 31 + a, ""180"");
  u8g.drawStr180(30 - a, 31, ""270"");
}

void u8g_line(uint8_t a) 
{
  u8g.drawStr(2, 0, ""drawLine"");
  u8g.drawLine(7 + a, 10, 40, 55);
  u8g.drawLine(7 + a * 2, 10, 60, 55);
  u8g.drawLine(7 + a * 3, 10, 80, 55);
  u8g.drawLine(7 + a * 4, 10, 100, 55);
}

void u8g_triangle(uint8_t a) 
{
  uint16_t offset = a;
  u8g.drawStr(2, 0, ""drawTriangle"");
  u8g.drawTriangle(14, 7, 45, 30, 10, 40);
  u8g.drawTriangle(10 + offset, 7 - offset, 45 + offset, 30 - offset, 57 + offset, 10 - offset);
  u8g.drawTriangle(53 + offset * 2, 10, 45 + offset * 2, 30, 86 + offset * 2, 53);
  u8g.drawTriangle(7 + offset, 40 + offset, 45 + offset, 30 + offset, 86 + offset, 53 + offset);
}

void u8g_extra_page(uint8_t a)
{
  if (u8g.getMode() == U8G_MODE_HICOLOR || u8g.getMode() == U8G_MODE_R3G3B2) {
    u8g_uint_t r, g, b;
    b = a << 5;
    for (g = 0; g < 64; g++) {
      for (r = 0; r < 64; r++) {
        u8g.setRGB(r << 2, g << 2, b);
        u8g.drawPixel(g, r);
      }
    }
    u8g.setRGB(255, 255, 255);
    u8g.drawStr(66, 0, ""Color Page"");
  } else if (u8g.getMode() == U8G_MODE_GRAY2BIT) {
    u8g.drawStr(66, 0, ""Gray Level"");
    u8g.setColorIndex(1);
    u8g.drawBox(2, 4, 64, 32);
    u8g.drawBox(70, 20, 4, 12);
    u8g.setColorIndex(2);
    u8g.drawBox(2 + 1 * a, 4 + 1 * a, 64 - 2 * a, 32 - 2 * a);
    u8g.drawBox(74, 20, 4, 12);
    u8g.setColorIndex(3);
    u8g.drawBox(2 + 2 * a, 4 + 2 * a, 64 - 4 * a, 32 - 4 * a);
    u8g.drawBox(78, 20, 4, 12);
  } else {
    u8g.drawStr(2, 13, ""setScale2x2"");
    u8g.setScale2x2();
    u8g.drawStr(1, 6 + a, ""setScale2x2"");
    u8g.undoScale();
  }
}

uint8_t draw_state = 2;

void draw(void) 
{
  u8g_prepare();
  switch (draw_state >> 3) {
    case 0: picture(draw_state & 7); break;
    case 1: intro(draw_state & 7); break;
    case 2: u8g_box_frame(draw_state & 7); break;
    case 3: u8g_disc_circle(draw_state & 7); break;
    case 4: u8g_r_frame(draw_state & 7); break;
    case 5: u8g_string(draw_state & 7); break;
    case 6: u8g_line(draw_state & 7); break;
    case 7: u8g_triangle(draw_state & 7); break;
    case 8: u8g_extra_page(draw_state & 7); break;
  }
}

void setup(void) 
{
#if defined(ARDUINO)
  pinMode(13, OUTPUT);           
  digitalWrite(13, HIGH);  
#endif
}

void loop(void) 
{
  u8g.firstPage();  
  do 
  {
    draw();
  } while (u8g.nextPage());
  
  draw_state++;
  if (draw_state >= 9 * 8)
    draw_state = 0;
}
"
ZVBcXuru,Untitled,yash123321,JSON,Friday 17th of May 2024 03:06:23 AM CDT,"{
   ""dealerUuid"": ""cb731d36fd635ddd6ef8dd43500892b0c0249d1c01a46dbcc445a809c0a8e3b2"",
   ""source"": ""INDIVIDUAL_DATEWISE_SCHEDULE"",
   ""dealerAssociateUuid"": ""d0bb92e39fc306ad2155533b0dfe905ee7e72f005858921537a50083df650006"",
   ""dateLimits"": {
       ""dateToLimitsMap"": {
           ""2024-05-21"": [
               {
                   ""limitPer"": ""DAY"",
                   ""limit"": 100
               },
               {
                   ""limitPer"": ""SLOT"",
                   ""limit"": 11
               }
           ],
           ""2024-05-20"": [
               {
                   ""limitPer"": ""DAY"",
                   ""limit"": 100
               },
               {
                   ""limitPer"": ""SLOT"",
                   ""limit"": 11
               }
           ]
       }
   },
   ""dateSlotAvailabilityList"": [
       {
           ""date"": ""2024-05-21"",
           ""slotAvailabilityList"": [
               {
                   ""startTime"": ""07:30:00"",
                   ""endTime"": ""07:40:00"",
                   ""isUnavailable"": true
               }
           ]
       },
       {
           ""date"": ""2024-05-20"",
           ""slotAvailabilityList"": [
               {
                   ""startTime"": ""07:30:00"",
                   ""endTime"": ""07:40:00"",
                   ""isUnavailable"": true
               }
           ]
       }
   ]
}
"
ZTQ2YJb0,Untitled,yash123321,JSON,Friday 17th of May 2024 03:05:01 AM CDT,"{
  ""dealerUuid"": ""cb731d36fd635ddd6ef8dd43500892b0c0249d1c01a46dbcc445a809c0a8e3b2"",
  ""source"": ""INDIVIDUAL_WEEKLY_SCHEDULE"",
  ""dealerAssociateUuid"": ""d0bb92e39fc306ad2155533b0dfe905ee7e72f005858921537a50083df650006"",
  ""addedWeekSchedules"": [
    {
      ""startDate"": null,
      ""weekNo"": 1,
      ""daySlotAvailabilityList"": [
        {
          ""day"": 4,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""07:50:00"",
              ""endTime"": ""08:00:00"",
              ""isUnavailable"": true
            },
            {
              ""startTime"": ""07:40:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            },
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""07:30:00"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 3,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""07:40:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            },
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""07:30:00"",
              ""isUnavailable"": false
            }
          ]
        }
      ],
      ""dayLimits"": {
        ""dayToLimitsMap"": {
          ""4"": [
            {
              ""limitPer"": ""DAY"",
              ""limit"": 100
            },
            {
              ""limitPer"": ""SLOT"",
              ""limit"": 11
            }
          ]
        }
      }
    },
    {
      ""startDate"": null,
      ""weekNo"": 2,
      ""daySlotAvailabilityList"": [
        {
          ""day"": 4,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""07:40:00"",
              ""endTime"": ""07:50:00"",
              ""isUnavailable"": true
            },
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 0,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 1,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 2,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 3,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 5,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""07:30:00"",
              ""isUnavailable"": false
            },
            {
              ""startTime"": ""07:40:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        },
        {
          ""day"": 6,
          ""slotAvailabilityList"": [
            {
              ""startTime"": ""00:00:00"",
              ""endTime"": ""23:59:59"",
              ""isUnavailable"": false
            }
          ]
        }
      ],
      ""dayLimits"": {
        ""dayToLimitsMap"": {
          ""6"": [
            {
              ""limitPer"": ""DAY"",
              ""limit"": 100
            },
            {
              ""limitPer"": ""SLOT"",
              ""limit"": 50
            }
          ]
        }
      }
    }
  ],
  ""deletedWeekSchedules"": null,
  ""deletePreviousSchedule"": null,
  ""startDate"": ""2024-04-28"",
  ""repeatInterval"": 2,
  ""repeatFrequency"": ""WEEKLY""
}

"
M53w6JTY,its ment for sustainability use wisely snowybot 10fold completed,coinwalk,JavaScript,Friday 17th of May 2024 02:48:17 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/240).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24)
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/60)<=(beast))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/60)<=(beast))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/60)<=(beast))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/30)<=(beast))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/30)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/30)<=(beast))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();"
6iTG3EqW,RS485 Communication rev_04,pleasedontcode,Arduino,Friday 17th of May 2024 02:42:39 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RS485 Communication
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 07:41:57

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* 1. Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission on Serial2.  I want to transmit */
	/* number 1 into decimal address 1822 via RS485. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <HardwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF Hardware Serial *****/
HardwareSerial RS485(2); // TX_PIN: D17, RX_PIN: D16

void setup(void)
{
	// put your setup code here, to run once:

	Serial2.begin(9600); // Initialize Serial2 for RS485 communication
	RS485.begin(9600); // Initialize RS485 communication

}

void loop(void)
{
	// put your main code here, to run repeatedly:

	// Transmitting number 1 to decimal address 1822 via RS485
	RS485.write(1);

	delay(1000); // Delay for 1 second

}

/* END CODE */"
G4h5VTBz,RS485 Communication rev_03,pleasedontcode,Arduino,Friday 17th of May 2024 02:40:24 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RS485 Communication
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 07:38:52

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* 1. Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission on Serial2.  I want to transmit */
	/* number 1 into decimal address 1822 via RS485. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <HardwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF Hardware Serial *****/
HardwareSerial RS485(2); // TX_PIN: D17, RX_PIN: D16

void setup(void)
{
	// put your setup code here, to run once:

	Serial2.begin(9600); // Initialize Serial2 for RS485 communication
	RS485.begin(9600); // Initialize RS485 communication

}

void loop(void)
{
	// put your main code here, to run repeatedly:

	// Transmitting number 1 to decimal address 1822 via RS485
	RS485.write(1);

	delay(1000); // Delay for 1 second

}

/* END CODE */"
7rE1dKuc,RS485 Communication rev_02,pleasedontcode,Arduino,Friday 17th of May 2024 02:37:36 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RS485 Communication
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 07:36:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* 1. Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <HardwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF Hardware Serial *****/
HardwareSerial RS485(2);  // TX_PIN: D17, RX_PIN: D16

void setup(void)
{
    // put your setup code here, to run once:
    RS485.begin(9600, SERIAL_8N1, 16, 17);

}

void loop(void)
{
    // put your main code here, to run repeatedly:

}

/* END CODE */"
Rt2eL0fZ,RS485 Communication rev_01,pleasedontcode,Arduino,Friday 17th of May 2024 02:35:38 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RS485 Communication
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 07:32:46

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* 1. Implement RS485 communication protocol using */
	/* Hardware Serial with baud rate 9600bps for data */
	/* transmission. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <HardwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF Hardware Serial *****/
HardwareSerial RS485(2);  // TX_PIN: D17, RX_PIN: D16

void setup(void)
{
    // put your setup code here, to run once:
    RS485.begin(9600, SERIAL_8N1, 16, 17);

}

void loop(void)
{
    // put your main code here, to run repeatedly:

}

/* END CODE */"
zzrftzv4,Untitled,nahidjamalli,C#,Friday 17th of May 2024 02:04:13 AM CDT,"using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Security;
using System.Runtime.ConstrainedExecution;
using System.Security.Cryptography.X509Certificates;
using System.Threading.Channels;

namespace ConsoleApp3
{
    internal class Program
    {
        static readonly CertThumbprintSet verisignCerts =
              new(
              ""1B511ABEAD59C6CE207077C0BF0E0043B1382612"",
              ""DF3C24F9BFD666761B268073FE06D1CC8D4F82A4"",
              ""4eb6d578499b1ccf5f581ead56be3d9b6744a5e5"",
              ""5deb8f339e264c19f6686f5f8f32b54a4c46b476"");
        static void Main(string[] args)
        {
            var request = (HttpWebRequest)WebRequest.Create(""https://twitter.com"");
            request.ServerCertificateValidationCallback = (sender, certificate, chain, errors) =>
            {
                var caCerts = chain.ChainElements.Cast<X509ChainElement>().Skip(1).Select(elem => elem.Certificate);

                foreach (var elem in caCerts)
                    Console.WriteLine(elem.GetCertHashString());

                return errors == SslPolicyErrors.None && caCerts.Any(cert => verisignCerts.Contains(cert.GetCertHashString()));
            };

            WebResponse response = request.GetResponse();
        }

        public class CertThumbprintSet : HashSet<string>
        {
            public CertThumbprintSet(params string[] thumbs) : base(thumbs, StringComparer.OrdinalIgnoreCase) { }
        }
    }
}
"
pCpexPb2,JSON to String -> Redis Value Format,fyulistian,PHP,Friday 17th of May 2024 02:01:59 AM CDT,"<?php
// Online PHP compiler to run PHP program online
// Print ""Try programiz.pro"" message

$jsonString = '{
  ""GO"": {
    ""aos"": {},
    ""customer_types"": {},
    ""price_plans"": {
      ""515658"": true
    }
  },
  ""HOMEFIBER"": {
    ""aos"": {},
    ""customer_types"": {},
    ""price_plans"": {
      ""PID_FTTH_ENT_BIZ_LITE"": true,
      ""PID_FTTH_ENT_BIZ_PRIME"": true,
      ""PID_FTTH_ENT_BIZ_STARTER"": true,
      ""PID_FTTH_ENT_BIZ_ULTI"": true
    }
  },
  ""HOMESATU"": {
    ""aos"": {},
    ""customer_types"": {},
    ""price_plans"": {
      ""PID_FTTH_ENT_BIZ_LITE"": true,
      ""PID_FTTH_ENT_BIZ_PRIME"": true,
      ""PID_FTTH_ENT_BIZ_ULTI"": true,
      ""PID_FTTH_ENT_BIZ_STARTER"": true,
      ""PO_BIZ_FMC_BASIC_NEW_50MB"": true,
      ""PO_BIZ_FMC_STARTER_NEW_100MB"":true,
      ""PO_BIZ_FMC_PRIME_NEW_300MB"":true
    }
  },
  ""PASCABAYAR"": {
    ""aos"": {},
    ""customer_types"": {
      ""C"": true
    },
    ""price_plans"": {
      ""425418"": true,
      ""439591"": true,
      ""439981"": true,
      ""440291"": true,
      ""440521"": true,
      ""440921"": true,
      ""513607802"": true,
      ""513795254"": true,
      ""513796594"": true
    }
  },
  ""PREPAID"": {
    ""aos"": {
      ""4197"": true,
      ""4198"": true,
      ""4199"": true,
      ""3213760"": true,
      ""3213761"": true,
      ""3213762"": true,
      ""3310050"": true,
      ""3310051"": true,
      ""3310052"": true,
      ""3311047"": true,
      ""3311048"": true,
      ""8211503"": true,
      ""8211504"": true,
      ""8211946"": true,
      ""8211947"": true,
      ""8212114"": true,
      ""8212115"": true,
      ""8212197"": true,
      ""8212198"": true
    },
    ""customer_types"": {},
    ""price_plans"": {
      ""369588"": true,
      ""492598"": true,
      ""541988"": true,
      ""559108"": true,
      ""585858"": true
    }
  },
  ""PRIORITAS"": {
    ""aos"": {},
    ""customer_types"": {
      ""C"": true
    },
    ""price_plans"": {
      ""423658"": true,
      ""423718"": true,
      ""423758"": true,
      ""424238"": true,
      ""424248"": true,
      ""461918"": true,
      ""462118"": true,
      ""462888"": true,
      ""463268"": true,
      ""495828"": true,
      ""505858"": true,
      ""505868"": true,
      ""506018"": true,
      ""506908"": true,
      ""507078"": true,
      ""507208"": true,
      ""512158"": true,
      ""512198"": true,
      ""512288"": true,
      ""512428"": true,
      ""512458"": true,
      ""512498"": true,
      ""512578"": true,
      ""512658"": true,
      ""512668"": true,
      ""512848"": true,
      ""512948"": true,
      ""512958"": true,
      ""538068"": true,
      ""540068"": true,
      ""551008"": true,
      ""552258"": true,
      ""552268"": true,
      ""552278"": true,
      ""552288"": true
    }
  }
}';
 
 
echo json_encode($jsonString, true);

?>"
Mt26sF51,Assignment 3 Coding Form 2,JustAnotherEntity,C#,Friday 17th of May 2024 01:31:13 AM CDT,"using System;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using System.Reflection;

namespace Assignment2
{
    public partial class Form2 : Form
    {
        public Form2() => InitializeComponent();

        private void Form2_Load(object sender, EventArgs e)
        {
            int y = 0;
            int dist = 100;
            int spaceBetween = 10;
            foreach (PropertyInfo Prop in Form1.UserSettings.GetType().GetProperties())
            {
                TextBox TB = new TextBox
                {
                    Text = Prop.GetValue(Form1.UserSettings, null).ToString(),
                    Location = new Point(dist, y),
                    Width = 200,
                    Tag = Prop.Name.ToLower()
                };
                TB.TextChanged += (object sender2, EventArgs e2) =>
                {
                    ModifyCurrentSettings();
                    (Owner as Form1).ApplySettings();
                };
                Controls.Add(TB);

                Label LBL = new Label
                {
                    Text = Prop.Name,
                    Location = new Point(0, y),
                    Width = dist,
                    Height = TB.Height,
                    Tag = Prop.Name.ToLower(),
                    TextAlign = ContentAlignment.MiddleCenter,
                    AutoSize = false
                };
                Controls.Add(LBL);

                y += TB.Height + spaceBetween;
            }
        }

        private void Form2_FormClosing(object sender, FormClosingEventArgs e) => ModifyCurrentSettings();

        public void ModifyCurrentSettings()
        {
            Label[] lbls = Controls.OfType<Label>().ToArray();
            TextBox[] tbs = Controls.OfType<TextBox>().ToArray();

            for (int i = 0; i < tbs.Length; i++)
                Form1.UserSettings.GetType().GetProperty(lbls[i].Text).SetValue(Form1.UserSettings, tbs[i].Text == """" ? ""1"" : tbs[i].Text);
        }
    }
}
"
wws7Hjrg,Assignment 3 Coding Form 1,JustAnotherEntity,C#,Friday 17th of May 2024 01:30:38 AM CDT,"using System.Windows.Forms;
using Newtonsoft.Json;
using System.IO;
using System.Linq;
using System.Drawing;
using System.Collections.Generic;
using System;

namespace Assignment2
{
    public partial class Form1 : Form
    {
        private static readonly string UserSettingsPath = Path.Combine(Environment.CurrentDirectory, @""../../UserSettings.json"");
        private static readonly string idcanymore = Path.Combine(Environment.CurrentDirectory, @""../../magic.html"");
        public static Settings UserSettings;

        public Form1() => InitializeComponent();

        private void Form1_Load(object sender, EventArgs e)
        {
            string[] Lines = File.ReadAllLines(UserSettingsPath);
            string AllFileLines = string.Join("""", Lines);
            UserSettings = JsonConvert.DeserializeObject<Settings>(AllFileLines);

            ApplySettings();

            webView21.Source = new Uri(idcanymore);

            foreach (Control Control in GetAllControlsOfType(this, typeof(Label)))
            {
                Label Label = Control as Label;

                Label.MaximumSize = new Size(Label.Parent.Width - 4, 1000);
            }
            foreach (Control Control in GetAllControlsOfType(this, typeof(TextBox)))
            {
                TextBox TextBox = Control as TextBox;

                TextBox.Height = 13 * (TextBox.Text.Split('\n').Length + 1);
                TextBox.MaximumSize = new Size(TextBox.Parent.Width - 4, 1000);
            }
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            JsonSerializer JsonSerializer = new JsonSerializer
            {
                Formatting = Formatting.Indented
            };
            using (StreamWriter SW = new StreamWriter(UserSettingsPath))
            {
                using (JsonWriter Writer = new JsonTextWriter(SW))
                {
                    JsonSerializer.Serialize(Writer, UserSettings);
                }
            }
        }

        private float GetValidValue(string val)
        {
            if (NullEmptyOrWhitespace(val) || val == ""0"")
                return 8f;
            return float.Parse(val);
        }

        private bool NullEmptyOrWhitespace(string str) =>
            str == null || str.Trim() == """";

        public void ApplySettings()
        {
            Font TitleFont = new Font(UserSettings.TitleFontName == """" ? ""Microsoft Sans Serif"" : UserSettings.TitleFontName, GetValidValue(UserSettings.TitleFontSize));
            Font GeneralFont = new Font(UserSettings.GeneralFontName == """" ? ""Microsoft Sans Serif"" : UserSettings.GeneralFontName, GetValidValue(UserSettings.GeneralFontSize));
            Font CodeFont = new Font(UserSettings.CodeFontName == """" ? ""Microsoft Sans Serif"" : UserSettings.CodeFontName, GetValidValue(UserSettings.CodeFontSize));

            foreach (Control Control in GetAllControlsOfType(tabControl1, typeof(Label)))
            {
                Label Label = Control as Label;

                Label.Margin = new Padding(Label.Margin.Left, Label.Margin.Top, Label.Margin.Right, UserSettings.TextBoxMargining == """" ? 10 : int.Parse(UserSettings.TextBoxMargining));
                
                if ((string)Control.Tag == ""title"")
                {
                    Label.Font = TitleFont;
                    Label.ForeColor = Color.FromName(UserSettings.TitleFontColor == """" ? ""black"" : UserSettings.TitleFontColor);
                }
                else if ((string)Control.Tag == ""general"")
                {
                    Label.Font = GeneralFont;
                    Label.ForeColor = Color.FromName(UserSettings.GeneralFontColor == """" ? ""black"" : UserSettings.GeneralFontColor);
                }
            }

            foreach (Control Control in GetAllControlsOfType(tabControl1, typeof(TextBox)))
            {
                TextBox TextBox = Control as TextBox;

                TextBox.Margin = new Padding(TextBox.Margin.Left, TextBox.Margin.Top, TextBox.Margin.Right, UserSettings.TextBoxMargining == """" ? 10 : int.Parse(UserSettings.TextBoxMargining));

                if ((string)Control.Tag == ""code"")
                {
                    TextBox.Font = CodeFont;
                    TextBox.ForeColor = Color.FromName(UserSettings.CodeFontColor == """" ? ""black"" : UserSettings.CodeFontColor);
                }
            }
        }

        public IEnumerable<Control> GetAllControlsOfType(Control Control, Type Type)
        {
            IEnumerable<Control> Controls = Control.Controls.Cast<Control>();

            return Controls
                .SelectMany(Ctrl => GetAllControlsOfType(Ctrl, Type))
                .Concat(Controls)
                .Where(c => c.GetType() == Type);
        }

        public void Alert(object obj) => MessageBox.Show(obj.ToString());

        private void OpenSettings_Click(object sender, EventArgs e)
        {
            Form2 F2 = new Form2
            {
                Owner = this
            };
            F2.Show();
        }
    }

    public class Settings
    {
        public string TextBoxMargining { get; set; }
        public string TitleFontName { get; set; }
        public string TitleFontSize { get; set; }
        public string TitleFontColor { get; set; }
        public string GeneralFontName { get; set; }
        public string GeneralFontSize { get; set; }
        public string GeneralFontColor { get; set; }
        public string CodeFontName { get; set; }
        public string CodeFontSize { get; set; }
        public string CodeFontColor { get; set; }
    }
}
"
2gb01SrH,Untitled,Irina_Spasova,JavaScript,Friday 17th of May 2024 01:19:01 AM CDT,"function identifyClimateZone(latitude, hemisphere) {
  if (hemisphere === ""N"") {
    if (latitude > 66.5 || latitude < -66.5) {
      return ""Arctic Zone"";
    } else if (latitude > 23.5 || latitude < -23.5) {
      return ""Temperate Zone"";
    } else if (latitude === 0) {
      return ""Equator"";
    } else if (latitude >= 0) {
      return ""Tropic Zone"";
    } else {
      return ""Invalid latitude"";
    }
  } else if (hemisphere === ""S"") {
    if (latitude < -66.5 || latitude > 66.5) {
      return ""Arctic Zone"";
    } else if (latitude < -23.5 || latitude > 23.5) {
      return ""Temperate Zone"";
    } else if (latitude === 0) {
      return ""Equator"";
    } else if (latitude >= -23.5 && latitude < 0) {
      return ""Tropic Zone"";
    } else {
      return ""Invalid latitude"";
    }
  } else {
    return ""Invalid hemisphere input"";
  }
}

// Example usage:
console.log(identifyClimateZone(70, ""N"")); // Arctic Zone
console.log(identifyClimateZone(-45, ""S"")); // Temperate Zone
console.log(identifyClimateZone(10, ""N"")); // Tropic Zone
console.log(identifyClimateZone(0, ""N"")); // Equator
console.log(identifyClimateZone(-85, ""S"")); // Arctic Zone
"
GxiEq9V8,gg,Maestro1,C++,Friday 17th of May 2024 01:16:39 AM CDT,"#include <iostream>
#include <string>
#include <map>

#define RUSSIAN 1
#define ENGLISH 2

int languageChoice = RUSSIAN; // Установка русского языка по умолчанию

void outputMessage(const std::string& message_ru, const std::string& message_en) {
    if (languageChoice == RUSSIAN) {
        std::cout << message_ru << std::endl;
    } else if (languageChoice == ENGLISH) {
        std::cout << message_en << std::endl;
    }
}

int main() {
    const int initialBalance = 10000;
    int balance = initialBalance;
    const int maxWithdrawal = 150000;
    std::map<int, int> denominations = { {5000, 100}, {1000, 100}, {500, 100}, {100, 100}, {50, 100} };

    std::string operationChoice;

    std::cout << ""Choose language / Выберите язык:"" << std::endl;
    std::cout << ""1. Русский / Russian"" << std::endl;
    std::cout << ""2. Английский / English"" << std::endl;

    std::cin >> languageChoice;

    while (true) {
        outputMessage(""Ваш текущий баланс: "" + std::to_string(balance) + "" рублей"", ""Your current balance: "" + std::to_string(balance) + "" rubles"");
        outputMessage(""Выберите действие:"", ""Choose an action:"");
        outputMessage(""1. Посмотреть баланс"", ""1. Check balance"");
        outputMessage(""2. Снять деньги"", ""2. Withdraw money"");
        outputMessage(""3. Пополнить баланс"", ""3. Deposit money"");
        outputMessage(""Введите номер действия: "", ""Enter the action number: "");

        std::cin >> operationChoice;

        if (operationChoice == ""1"") {
            outputMessage(""Ваш текущий баланс: "" + std::to_string(balance) + "" рублей"", ""Your current balance: "" + std::to_string(balance) + "" rubles"");
        } else if (operationChoice == ""2"") {
            int amount;
            std::string receiptChoice;

            outputMessage(""Хотите получить чек при снятии денег? (да/нет): "", ""Do you want a receipt when withdrawing money? (yes/no): "");
            std::cin >> receiptChoice;

            if (!(receiptChoice == (languageChoice == RUSSIAN ? ""да"" : ""yes"") || receiptChoice == (languageChoice == RUSSIAN ? ""нет"" : ""no""))) {
                outputMessage(""Выберите 'да' или 'нет'."", ""Choose 'yes' or 'no'."");
                continue;
            }

            outputMessage(""Введите сумму для снятия (не более "" + std::to_string(maxWithdrawal) + "" рублей): "", ""Enter the amount to withdraw (up to "" + std::to_string(maxWithdrawal) + "" rubles): "");
            std::cin >> amount;

            if (amount > 0 && amount <= maxWithdrawal && amount <= balance) {
                if (receiptChoice == (languageChoice == RUSSIAN ? ""да"" : ""yes"")) {
                    outputMessage(""Чек о снятии денег:"", ""Money withdrawal receipt:"");
                }

                for (auto it = denominations.rbegin(); it != denominations.rend(); ++it) {
                    int denom = it->first;
                    int& count = it->second;

                    while (amount >= denom && count > 0) {
                        amount -= denom;
                        balance -= denom;
                        count--;
                        if (receiptChoice == (languageChoice == RUSSIAN ? ""да"" : ""yes"")) {
                            outputMessage(""Выдано: "" + std::to_string(denom) + "" рублей"", ""Dispensed: "" + std::to_string(denom) + "" rubles"");
                        }
                    }
                }

                if (receiptChoice == (languageChoice == RUSSIAN ? ""да"" : ""yes"")) {
                    outputMessage(""Осталось денег на счету: "" + std::to_string(balance) + "" рублей"", ""Remaining balance: "" + std::to_string(balance) + "" rubles"");
                }
            } else {
                outputMessage(""Невозможно выполнить операцию. Проверьте сумму и наличие необходимых средств."", ""Unable to perform the operation. Check the amount and the availability of funds."");
            }

        } else if (operationChoice == ""3"") {
            int amount;
            const int maxDeposit = 200000;

            outputMessage(""Введите сумму для пополнения (не более "" + std::to_string(maxDeposit) + "" рублей): "", ""Enter the amount to deposit (up to "" + std::to_string(maxDeposit) + "" rubles): "");
            std::cin >> amount;

            if (amount > 0 && amount <= maxDeposit) {
                if (balance + amount <= maxDeposit) {
                    balance += amount;
                    outputMessage(""Баланс успешно пополнен. Новый баланс: "" + std::to_string(balance) + "" рублей"", ""Balance successfully deposited. New balance: "" + std::to_string(balance) + "" rubles"");
                } else {
                    outputMessage(""Превышено максимально возможное пополнение. Попробуйте сумму до "" + std::to_string(maxDeposit - balance) + "" рублей."", ""Exceeded maximum deposit amount. Try an amount up to "" + std::to_string(maxDeposit - balance) + "" rubles."");
                }
            } else {
                outputMessage(""Некорректная сумма для пополнения. Проверьте, что вносимая сумма не превышает "" + std::to_string(maxDeposit) + "" рублей."", ""Incorrect deposit amount. Make sure the deposited amount does not exceed "" + std::to_string(maxDeposit) + "" rubles."");
            }
        } else {
            outputMessage(""Некорректный выбор действия. Пожалуйста, выберите снова."", ""Incorrect choice of action. Please choose again."");
        }

        // Для продолжения работы
        std::string continueChoice;
        outputMessage(""Хотите продолжить работу? (да/нет): "", ""Do you want to continue? (yes/no): "");
        std::cin >> continueChoice;

        // Продолжить или завершить работу в зависимости от ввода
        if (continueChoice != (languageChoice == RUSSIAN ? ""да"" : ""yes"")) {
            break;
        }
    }

    return 0;
}"
1mMTmdxA,MC Plus installer,Revector,Lua,Friday 17th of May 2024 12:50:29 AM CDT,"-- pastebin get 1mMTmdxA mc.lua


--WebWyse 1.0 installer by Compys S&N Systems (2022). 
--Configuration zone.

--Name of the product being installed.
local PRODUCTNAME = 'Midday Commander Plus'

--Strings for small background window. nil for disabled. Max 4 lines.
local BACKWINTEXT = {'Midday Commander Plus', '', 'Not Copyright (C) 2015-2016 Zer0Galaxy, Neo, Totoro', '            2020-2022 Compys S&N Systems'}

--The text that will be shown in the console after a successful installation. nil for disabled.
local EXITNOTE = ""Type \""mc\"" to run it""

--License for product. nil to use LICENSEURL or disabled.
local LICENSE = [[For more information go to:
https://github.com/Bs0Dd/OpenCompSoft/blob/master/MiddayCommanderPlus/README.md

------------------------
                 
MIT License

Copyright (c) 2018 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.]]

--URL for license to download from network. nil for disabled.
local LICENSEURL = nil

--Default installation path. nil for empty.
local INSTALLPATH = '/usr/bin/'

--Minimum space (in bytes) required for installation. nil for disable checking.
local MINSPACE = 23552

--Minimal requirements for installation. nil for disable checking.
local MINREQ = {
    CPU = 1, --Minimal CPU tier required for installation. nil for disable checking.
    VIDEO = 1, --Minimal videosystem tier required for installation. nil for disable checking
    RAM = 262144, --Minimum RAM size required for installation. nil for disable checking.
    COMPONENTS = nil --Components required for installation. nil for none.
}

--Colors for Tier 3 Videosystem.
local T3BACKCOL = 0xFFFFFF -- Color for the background.
local T3NORMALCOL = {0xFFFFFF, 0x006DFF} --Text and background colors for the windows.
local T3BUTTCOL = {0xFFFFFF, 0x5A5A5A} --Text and background colors for the buttons.
local T3FORMCOL = {0x000000, 0xE1E1E1} --Text and background colors for the forms (license view, path input).
local T3FSELCOL = {0xFFFFFF, 0x5A5A5A} --Text and background colors for selected item in the form.
local T3ERRCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for the error windows.
local T3REQOKCOL = {0x00FF00, 0x006DFF} --Text and background colors for components that meets minimal requirements.
local T3REQERCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for components that does not meet minimal requirements.
local T3PROGRBLK = 0xFFFFFF -- Color for the blank part of the progress bar.
local T3PROGRFIL = 0x00FF00 -- Color for the filled part of the progress bar.

--Colors for Tier 2 Videosystem.
local T2BACKCOL = 0xFFFFFF -- Color for the background.
local T2NORMALCOL = {0xFFFFFF, 0x006DFF} --Text and background colors for the windows.
local T2BUTTCOL = {0xFFFFFF, 0x3C3C3C} --Text and background colors for the buttons.
local T2FORMCOL = {0x000000, 0xE1E1E1} --Text and background colors for the forms (license view, path input).
local T2FSELCOL = {0xFFFFFF, 0x3C3C3C} --Text and background colors for selected item in the form.
local T2ERRCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for the error windows.
local T2REQOKCOL = {0x00FF00, 0x006DFF} --Text and background colors for components that meets minimal requirements.
local T2REQERCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for components that does not meet minimal requirements.
local T2PROGRBLK = 0xFFFFFF -- Color for the blank part of the progress bar.
local T2PROGRFIL = 0x00FF00 -- Color for the filled part of the progress bar.

--Colors for Tier 1 Videosystem. Not recommended to change.
local T1NORMALCOL = {0x000000, 0xFFFFFF} --Text and background colors for the windows.
local T1BUTTCOL = {0xFFFFFF, 0x000000} --Text and background colors for the buttons.
local T1FORMCOL = {0xFFFFFF, 0x000000} --Text and background colors for the forms (license view, path input).
local T1FSELCOL = {0x000000, 0xFFFFFF} --Text and background colors for selected item in the form.
local T1ERRCOL = {0x000000, 0xFFFFFF} --Text and background colors for the error windows.
local T1REQOKCOL = {0x000000, 0xFFFFFF} --Text and background colors for components that meets minimal requirements.
local T1REQERCOL = {0xFFFFFF, 0x000000} --Text and background colors for components that does not meet minimal requirements.
local T1PROGRBLK = 0x000000 -- Color for the blank part of the progress bar.
local T1PROGRFIL = 0xFFFFFF -- Color for the filled part of the progress bar.

--Basic files to download to your computer.
local FILES = {
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/mc.lua"",
        path = ""mc.lua"",
        absolute = false
    },
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/english.mcl"",
        path = ""/usr/misc/english.mcl"",
        absolute = true
    },
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/standard.mct"",
        path = ""/usr/misc/standard.mct"",
        absolute = true
    }
}

--Additional components to download to your computer.
local ADDITIONAL = {
    {
        name = ""Install Russian language"",
        selected = true,
        size = 2822,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/russian.mcl"",
                    path = ""/usr/misc/russian.mcl"",
                    absolute = true
                 }
        }
    },
    {
        name = ""Install additional themes"",
        selected = true,
        size = 326,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/redstone.mct"",
                    path = ""/usr/misc/redstone.mct"",
                    absolute = true
                 },
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/darkness.mct"",
                    path = ""/usr/misc/darkness.mct"",
                    absolute = true
                 }
                }
    },
    {
        name = ""Install Blyadian language"",
        selected = false,
        size = 2780,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/blyadian.mcl"",
                    path = ""/usr/misc/blyadian.mcl"",
                    absolute = true
                 }
        }
    }
}

---------------------------------------------------------------------------------------------------------------

local a=require('component')local b=require('computer')local c=require('filesystem')local d=require('term')local e=require('event')local f=require('unicode')local g=f.len;local h=f.sub;local i=require('keyboard')local j=a.gpu;if not a.isAvailable('internet')then io.stderr:write(""ERROR: Internet card is not found\n\n"")return end;local k=a.internet;local l,m=j.maxResolution()j.setDepth(j.maxDepth())j.setResolution(l,m)local n,o=1,1;local p=1;local q,r;local s,t;local u,v,w=1,1,1;local x=INSTALLPATH or''local y,z,A,B;local C,D,E,F,G=true,true,true,true;local H,I=1,1;local J,K,L,M,N=0,0,0,0;if j.maxDepth()>1 then n,o=math.ceil((l-50)/2),math.ceil(m/2)-4 end;local O,P,Q,R,S;local T,U,V,W,X;if j.maxDepth()==8 then O=T3NORMALCOL;P=T3BUTTCOL;Q=T3FORMCOL;R=T3FSELCOL;S=T3ERRCOL;T=T3BACKCOL;U=T3REQOKCOL;V=T3REQERCOL;W=T3PROGRBLK;X=T3PROGRFIL elseif j.maxDepth()==4 then O=T2NORMALCOL;P=T2BUTTCOL;Q=T2FORMCOL;R=T2FSELCOL;S=T2ERRCOL;T=T2BACKCOL;U=T2REQOKCOL;V=T2REQERCOL;W=T2PROGRBLK;X=T2PROGRFIL else O=T1NORMALCOL;P=T1BUTTCOL;Q=T1FORMCOL;R=T1FSELCOL;S=T1ERRCOL;T=O[2]U=T1REQOKCOL;V=T1REQERCOL;W=T1PROGRBLK;X=T1PROGRFIL end;local function Y(Z)j.setForeground(Z[1])j.setBackground(Z[2])end;local function _(a0)local a1=0;for a2,a3 in ipairs(a0)do if g(a3)>a1 then a1=g(a3)end end;return a1 end;local function a4(a5)if a5:sub(-1)~=""\n""then a5=a5 ..""\n""end;return a5:gmatch(""(.-)\n"")end;local function a6(a7)local a8={""Kb"",""Mb"",""Gb""}if a7<1024 then return a7 ..""b""end;local a9=0;while a7>=1024 and a9<#a8 do a9=a9+1;a7=a7/1024 end;return math.floor(a7*10)/10 ..a8[a9]end;local function aa(ab,ac,ad,a0,ae)Y(ae)j.set(ab,ac,string.rep(' ',ad+2))for af,a3 in ipairs(a0)do if g(a3)<ad then local ag,ah=(ad-g(a3))/2;if ag%1==0 then ah=ag else ag=math.ceil(ag)ah=ag-1 end;a3=string.rep(' ',ag)..a3 ..string.rep(' ',ah)end;j.set(ab,ac+af,' '..a3 ..' ')end;if j.maxDepth()==1 then return end;j.set(ab,ac+#a0+1,string.rep(' ',ad+2))Y({T,0x000000})j.fill(ab+ad+2,ac+1,1,#a0+1,' ')j.set(ab+2,ac+#a0+2,string.rep('▄',ad+1))end;local function ai()local aj=n+50;Y({T,0x000000})j.fill(aj,o+1,1,15,' ')j.set(n+2,o+16,string.rep('▄',49))end;local function ak()Y(O)j.fill(n,o,50,16,' ')j.fill(n,o,50,16,' ')j.set(n+2,o+13,string.rep('─',46))end;local function al(am)if BACKWINTEXT and j.maxDepth()>1 then if#BACKWINTEXT>4 then while#BACKWINTEXT>4 do table.remove(BACKWINTEXT)end end;local an=_(BACKWINTEXT)local ab,ac=math.ceil((l-an-2)/2),math.ceil(m/10)-1;aa(ab,ac,an,BACKWINTEXT,O)end;if not am then ai()end end;local function ao(ap,aq)table.insert(ap,'')table.insert(ap,'')j.setBackground(T)j.fill(1,1,l,m,' ')local an=_(ap)local ab,ac=math.ceil((l-an)/2),math.ceil(m/2)al(true)aa(ab,ac,an,ap,aq)return ab,ac,an end;local function ar(ap,aq)local ab,ac,an=ao(ap,aq)Y(P)local as=math.ceil(ab+an/2-3)j.set(as,ac+#ap,""   Ok   "")while true do local at,a2,au,av=e.pull()if at==""key_down""and au==13 or at==""touch""and av==ac+#ap and au>=as and au<=as+7 then j.setBackground(T)j.fill(1,1,l,m,' ')al()ak()q[p]()return end end end;local function aw(ap)local ab,ac=ao(ap,S)Y(P)j.set(ab+3,ac+#ap,"" (Y)es  "")j.set(ab+17,ac+#ap,""  (N)o  "")while true do local at,a2,au,av=e.pull()if at==""key_down""then if au==78 or au==110 then al()ak()q[p]()return true elseif au==89 or au==121 then return false end elseif at==""touch""then if av==ac+#ap and au>=ab+3 and au<=ab+10 then return false elseif av==ac+#ap and au>=ab+17 and au<=ab+24 then al()ak()q[p]()return true end end end end;local function ax(ay)if ay then if aw({"" Are you sure you want to "",""abort the installation?""})then return end end;Y({0xFFFFFF,0x000000})d.clear()print(""WebWyse 1.0 - 2022 (c) Compys S&N Systems\n"")if not ay and EXITNOTE then print(EXITNOTE..""\n"")end;os.exit()end;local function az()j.set(n+6,o+1,""Welcome to the WebWyse 1.0 installer!"")j.set(n+7,o+3,""This installer will help to install"")j.set(n+25-g(PRODUCTNAME)/2,o+4,PRODUCTNAME)j.set(n+17,o+5,""on your computer."")j.set(n+6,o+8,""Follow WebWyse instructions to install"")j.set(n+12,o+9,""and configure the software."")j.set(n+10,o+10,""Press \""Next →\"" (→) to continue"")j.set(n+11,o+11,""or \""Cancel\"" (ALT-X) to exit."")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+39,o+14,"" Next → "")end;local function aA()while true do local at,a2,au,av=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==205 then return end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+39 and au<=n+46 then return end end end end;local function aB()j.fill(n+3,o+3,44,10,' ')for aC=0,9 do j.set(n+3,o+aC+3,s[v+aC]and h(s[v+aC],u,u+43)or'')end end;local function aD()Y(Q)s={""Loading from internet...""}aB()local aE=""Failed to get license text: ""local aF,aG=pcall(k.request,LICENSEURL)if not aF then LICENSE=aE..aG.."".""return end;if not aG then LICENSE=aE..""invalid URL-address.""return end;local aH,aI=aG.finishConnect()local aJ=b.uptime()while aH==false do aH,aI=aG.finishConnect()if b.uptime()>aJ+40 then break end end;if aH==nil then LICENSE=aE..(aI==LICENSEURL and""can't get file.""or aI..""."")return end;local aK,aL=aG.response()local aJ=b.uptime()while aK==nil do aK,aL=aG.response()if b.uptime()>aJ+40 then break end end;if aK==nil then LICENSE=aE..""timeout expired.""return elseif aK~=200 then LICENSE=aE..""received code ""..math.floor(aK).."" (""..aL.."").""return end;LICENSE=""""while true do local aM,aI=aG.read(math.huge)if aM then LICENSE=LICENSE..aM else aG:close()if aI then LICENSE=aE..aI.."".""else return end end end end;local function aN()j.set(n+9,o+1,""Do you agree with this license?"")Y(P)j.set(n+3,o+14,""  (N)o  "")j.set(n+30,o+14,"" (B)ack "")j.set(n+39,o+14,"" (Y)es  "")if not s then if not LICENSE and LICENSEURL then aD()end;s={}for aO in a4(LICENSE)do table.insert(s,aO)end;w=_(s)end;t=#s>9 and#s-9 or#s;Y(Q)aB()end;local function aP()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if au==78 or au==110 then ax(true)elseif au==66 or au==98 then p=p-2;return elseif au==89 or au==121 then return elseif av==200 then v=v-1<1 and 1 or v-1;aB()elseif av==208 then v=v+1>t and t or v+1;aB()elseif av==203 then u=u-1<1 and 1 or u-1;aB()elseif av==205 then u=u+1>w-43 and w-43 or u+1;aB()elseif av==199 then u=1;aB()elseif av==207 then u=w-43;aB()elseif av==201 then v=v-10<1 and 1 or v-10;aB()elseif av==209 then v=v+10>t and t or v+10;aB()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return end elseif at==""scroll""then v=v-aQ>t and t or v-aQ<1 and 1 or v-aQ;aB()end end end;local function aR(aS,aT,aU,aV)local ap={}if aS==nil or type(aS)=='table'and#aS==0 then ap[1]=""Required: Not defined""elseif aU==3 then local aW=""Required: ""local aX=""You have: ""for a2,aY in pairs(aS)do if#aW+#aY>49 then table.insert(ap,aW:sub(1,-2))aW=""""end;aW=aW..aY.."", ""end;table.insert(ap,aW:sub(1,-3))for a2,aY in pairs(aT)do if#aX+#aY>49 then table.insert(ap,aX:sub(1,-2))aX=""""end;aX=aX..aY.."", ""end;table.insert(ap,#aT==0 and aX..""<none>""or aX:sub(1,-3))elseif aU==2 then ap[1]=""Required: ""..a6(aS)ap[2]=""You have: ""..a6(aT)else ap[1]=""Required: Tier ""..aS;ap[2]=""You have: Tier ""..aT end;ar(ap,aV and O or S)end;local function aZ()G=true;if MINREQ.CPU and type(MINREQ.CPU)=='number'then local a_=b.getDeviceInfo()for a2,b0 in pairs(a_)do if b0.description==""CPU""or b0.description==""APU""then y=tonumber(b0.product:match('%d'))break end end;C=y>=MINREQ.CPU;if not C then G=false end end;if MINREQ.VIDEO and type(MINREQ.VIDEO)=='number'then local b1=j.maxDepth()z=b1==8 and 3 or b1==4 and 2 or 1;D=z>=MINREQ.VIDEO;if not D then G=false end end;if MINREQ.RAM and type(MINREQ.RAM)=='number'then A=b.totalMemory()E=A>=MINREQ.RAM;if not E then G=false end end;if MINREQ.COMPONENTS and type(MINREQ.COMPONENTS)=='table'then B={}for a2,b2 in pairs(MINREQ.COMPONENTS)do if a.isAvailable(b2)then table.insert(B,b2)end end;F=#B==#MINREQ.COMPONENTS;if not F then G=false end end;if G then j.set(n+12,o+1,""Your computer fully meets"")else j.set(n+11,o+1,""Your computer does not meet"")j.set(n+5,o+3,""Select the desired section for details."")end;j.set(n+12,o+2,""the minimum requirements."")j.set(n+10,o+5,""(P)rocessor   :"")j.set(n+10,o+7,""(M)emory      :"")j.set(n+10,o+9,""(V)ideosystem :"")j.set(n+10,o+11,""(С)omponents  :"")local b3,aC={C,E,D,F},5;for a2,b0 in pairs(b3)do Y(b0 and U or V)j.set(n+26,o+aC,b0 and""Meets""or""Does not meet"")aC=aC+2 end;Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")end;local function b4()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 or au==13 then if G then return elseif not aw({""Are you sure you want to"",""install this software?"","""",""It may not work correctly!""})then al()ak()return end elseif au==112 or au==80 then aR(MINREQ.CPU,y,1,C)elseif au==109 or au==77 then aR(MINREQ.RAM,A,2,E)elseif au==118 or au==86 then aR(MINREQ.VIDEO,z,1,D)elseif au==99 or au==67 then aR(MINREQ.COMPONENTS,B,3,F)end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then if G then return elseif not aw({""Are you sure you want to"",""install this software?"","""",""It may not work correctly!""})then al()ak()return end elseif av==o+5 and au>=n+10 and au<=n+38 then aR(MINREQ.CPU,y,1,C)elseif av==o+7 and au>=n+10 and au<=n+38 then aR(MINREQ.RAM,A,2,E)elseif av==o+9 and au>=n+10 and au<=n+38 then aR(MINREQ.VIDEO,z,1,D)elseif av==o+11 and au>=n+10 and au<=n+38 then aR(MINREQ.COMPONENTS,B,3,F)end end end end;local function b5()j.fill(n+3,o+3,44,10,' ')for aC=0,#ADDITIONAL-I<9 and#ADDITIONAL-I or 9 do if aC+1==H then Y(R)j.fill(n+3,o+aC+3,44,1,"" "")end;j.set(n+6,o+aC+3,g(ADDITIONAL[I+aC].name)>39 and h(ADDITIONAL[I+aC].name,0,39)..""..""or ADDITIONAL[I+aC].name)if ADDITIONAL[I+aC].selected then if j.maxDepth()>1 then j.setForeground(0x00FF00)end;j.set(n+4,o+aC+3,""√"")else if j.maxDepth()>1 then j.setForeground(0xFF0000)end;j.set(n+4,o+aC+3,""╳"")end;if aC+1==H then j.setBackground(Q[2])end;j.setForeground(Q[1])end end;local function b6()if I>1 then I=I-1;b5()else if H>1 then H=H-1;b5()end end end;local function b7()local b8=#ADDITIONAL<10 and#ADDITIONAL or 10;if H+1>b8 then if I+9<#ADDITIONAL then I=I+1;b5()end else H=H+1;b5()end end;local function b9()j.set(n+6,o+1,""You can install additional components:"")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")Y(Q)b5()end;local function ba()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 then return elseif av==200 then b6()elseif av==208 then b7()elseif av==57 or av==28 then ADDITIONAL[H+I-1].selected=not ADDITIONAL[H+I-1].selected;b5()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return elseif av>=o+3 and av<=o+12 and au>=n+3 and au<=n+46 then local bb=av-o-3+I;if#ADDITIONAL>=bb then H=bb-I+1;ADDITIONAL[bb].selected=not ADDITIONAL[bb].selected;b5()end end elseif at==""scroll""then if aQ==1 then b6()else b7()end end end end;local function bc()if x==""""then ar({""Installation path cannot be empty!"",""Please enter the path.""},S)return false end;if not c.exists(x)then local bd,be=c.makeDirectory(x)if not bd then ar({""Failed to make directory:"",be..""."",""Please check if path is correct and try again.""},S)return false end;return true end;local bf=c.get(x)if bf.isReadOnly()then ar({""This disk is write protected!"",""Please unprotect the disk and try again.""},S)return false end;if MINSPACE then local bg=bf.spaceTotal()-bf.spaceUsed()if bg<MINSPACE then ar({""Not enough space for installation!"",""Please free at least ""..a6(MINSPACE-bg),""of space and try again.""},S)return false end end;return true end;local function bh()local bi;if g(x)>43 then bi='..'..h(x,-41)else bi=x end;d.setCursor(n+3+g(bi),o+9)j.fill(n+3,o+9,44,1,' ')j.set(n+3,o+9,bi)end;local function bj()j.set(n+4,o+1,""Select a folder to install program files."")j.set(n+3,o+4,""Be aware that some files (such as libraries)"")j.set(n+8,o+5,""may be installed in system folders."")j.set(n+3,o+8,""Install to:"")local bk=MINSPACE or 0;if ADDITIONAL and#ADDITIONAL>0 then for a2,b0 in pairs(ADDITIONAL)do if b0.selected then bk=bk+b0.size end end end;if bk>0 then j.set(n+3,o+11,""Space required: ""..a6(bk))end;Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")Y(Q)bh()end;local function bl()while true do local at,a2,au,av,aQ=d.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 or au==13 then if bc()then return end elseif au==8 then x=h(x,1,-2)bh()elseif au==0 or au==9 or au==127 then else x=x..f.char(au)bh()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then if bc()then return end end elseif eve==""clipboard""then x=x..au;bh()end end end;local function bm()j.set(n+12,o+1,""WebWyse is ready to install"")j.set(n+25-g(PRODUCTNAME)/2,o+2,PRODUCTNAME)j.set(n+17,o+3,""to your computer."")j.set(n+9,o+6,""Click \""Go\"" to begin installation."")j.set(n+13,o+9,""Or click \""Back\"" to change"")j.set(n+15,o+10,""installation options."")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,""   Go   "")end;local function bn()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif au==13 then return end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return end end end end;local function bo()j.set(n+2,o+5,string.rep("" "",46))j.set(n+2,o+7,string.rep("" "",46))j.setForeground(O[1])local bp=""Downloading file: ""..N;if g(bp)>46 then bp=bp:sub(1,44)..""..""end;j.set(n+25-g(bp)/2,o+5,bp)local bq=""Downloaded data: ""..a6(M)..""/""..a6(L)j.set(n+25-g(bq)/2,o+7,bq)local br=""Downloaded files: ""..K..""/""..J;j.set(n+25-g(br)/2,o+11,br)j.setForeground(W)j.set(n+4,o+6,string.rep(""━"",42))j.set(n+4,o+10,string.rep(""━"",42))j.setForeground(X)if L>0 then local bs=math.ceil(42*M/L)j.set(n+4,o+6,string.rep(""━"",bs))end;local bt=math.ceil(42*K/J)j.set(n+4,o+10,string.rep(""━"",bt))end;local function bu(bv,ap)ar({""Failed to ""..bv.."":"",ap..""."",""The installer will close.""},S)end;local function bw()j.set(n+9,o+1,""WebWyse downloads the necessary"")j.set(n+13,o+2,""files to your computer."")if ADDITIONAL then for a2,b0 in pairs(ADDITIONAL)do if b0.selected then for a2,bx in pairs(b0.files)do table.insert(FILES,bx)end end end end;J=#FILES end;local function by()for a2,bz in pairs(FILES)do N=c.name(bz.path)bo()local bA=bz.absolute and bz.path or c.concat(x,bz.path)if not c.exists(c.path(bA))then local bB,aI=c.makeDirectory(c.path(bA))if not bB then bu(""create directory"",aI)EXITNOTE=nil;ax()end end;local bC,aI=io.open(bA,""w"")if not bC then bu(""create file"",aI)EXITNOTE=nil;ax()end;local aF,aG=pcall(k.request,bz.url)if not aF then bu(""make internet request"",aG)EXITNOTE=nil;ax()end;if not aG then bu(""make internet request"",""invalid URL-address"")EXITNOTE=nil;ax()end;local aH,aI=aG.finishConnect()local aJ=b.uptime()while aH==false do aH,aI=aG.finishConnect()if b.uptime()>aJ+40 then break end end;if aH==nil then bu(""connect"",aI==bz.url and""can't get file""or aI)EXITNOTE=nil;ax()end;local aK,aL,bD=aG.response()local aJ=b.uptime()while aK==nil do aK,aL,bD=aG.response()if b.uptime()>aJ+40 then break end end;if aK==nil then bu(""connect"",""timeout expired"")EXITNOTE=nil;ax()elseif aK~=200 then bu(""connect"",""received code ""..math.floor(aK).."" (""..aL.."")"")EXITNOTE=nil;ax()end;if bD and bD[""Content-Length""]then L=tonumber(bD[""Content-Length""][1])else L=0 end;M=0;bo()while true do local aM,aI=aG.read(math.huge)if aM then M=M+#aM;bC:write(aM)bo()else aG:close()if aI then bu(""get file"",aI)EXITNOTE=nil;ax()else bC:close()break end end end;K=K+1;bo()end end;local function bE()j.set(n+25-g(PRODUCTNAME)/2,o+4,PRODUCTNAME)j.set(n+10,o+5,""has been successfully installed"")j.set(n+17,o+6,""on your computer."")j.set(n+9,o+9,""Click \""Ok\"" to exit the installer."")Y(P)j.set(n+39,o+14,""   Ok   "")end;local function bF()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""and au==13 or at==""touch""and av==o+14 and au>=n+39 and au<=n+46 then return end end end;j.setBackground(T)j.fill(1,1,l,m,' ')al()q={az}r={aA}if LICENSE or LICENSEURL then table.insert(q,aN)table.insert(r,aP)end;if MINREQ and(MINREQ.CPU or MINREQ.VIDEO or MINREQ.RAM or MINREQ.COMPONENTS)then table.insert(q,aZ)table.insert(r,b4)end;if ADDITIONAL and#ADDITIONAL>0 then table.insert(q,b9)table.insert(r,ba)end;table.insert(q,bj)table.insert(r,bl)table.insert(q,bm)table.insert(r,bn)table.insert(q,bw)table.insert(r,by)table.insert(q,bE)table.insert(r,bF)while p<=#q do ak()q[p]()r[p]()p=p+1 end;ax()
"
MkqJeurT,_parse_scene.py as of 2024-05-16,Kitomas,Python,Friday 17th of May 2024 12:17:11 AM CDT,"if __name__ == ""__main__"":
    print(""_parse_scene.py should be used as a module only!"")
    exit(0)
    
_DEBUG = False
_PRINT_LAYERS = False #_DEBUG must be True as well

from os.path import isfile, exists
from pprint import pprint
import xml.etree.ElementTree as ET




obj_data_types = {
     ""u8"",  ""s8"",
    ""u16"", ""s16"",
    ""u24"", ""s24"",
    ""u32"", ""s32"",
    ""u64"", ""s64"",
    ""f32"", ""f64"",
    ""rgb"", ""argb""
}




def printError(s, fatal=True):
    if _DEBUG or fatal: print(""Error: {}"".format(s))
    if fatal: exit(-1)
    else    : return False

def sceneIdToPath(scene_id):
    return ""../scene_{}.tmx"".format(scene_id)
    
#poor man's regex lol
def extractTilesetName(path):
    #will turn something like ""../foo/tileset_collision.tsx"" into ""collision""
    name = path.split(""/"")[-1]
    return ((""_"").join(name.split("".""))).split(""_"")[1]
   
def tryInt(string):
    try:
        return int(string)
    except ValueError:
        return None
    except TypeError:
        return None
        
def tryDict(dict, key):
    try:
        return dict[key]
    except KeyError:
        return None

def keyWarn(properties, name, fatal=False, cat=""property""):
    if tryDict(properties, name) == None:
        #intentionally indented twice
        if    fatal: print(""  Error: {} \""{}\"" doesn't exist!"".format(cat, name)); exit(-1)
        elif _DEBUG: print(""  Warning: {} \""{}\"" doesn't exist!"".format(cat, name))
        return True #key does not exist
    else:
        return False #key exists

#value is a hex quad string of ""#AARRGGBB""
def toRGBA(value):
    alpha = int(value[1:3], 16)
    red   = int(value[3:5], 16)
    blue  = int(value[5:7], 16)
    green = int(value[7:9], 16)
    return (red, green, blue, alpha)

#dataValue should always be of type str
def convertType(dataType, dataValue):
    #(i wish python had switch statements...)
    if   dataType == ""int""    : return int(float(dataValue))
    elif dataType == ""bool""   : return eval(dataValue.capitalize())
    elif dataType == ""float""  : return float(dataValue)
    elif dataType == ""color""  : return toRGBA(dataValue)
    elif dataType == ""object"" : return int(float(dataValue))
    #elif dataType == 'file'  : return dataValue #(redundant)
    else                      : return dataValue

def tryTypeWarn(type_str):
    type_num = tryInt(type_str.split(""_"")[0])
    if type_num != None:
        return type_num
    else:
        if _DEBUG: print(""Warning: type \""{}\"" is invalid"".format(type_str))
        return 0
        
#(mostly) yoinked from stackoverflow lol
def checkForDuplicateIndexes(thelist):
  seen = set()
  for x in thelist:
    if x[0][0] in seen:
        printError(""found duplicate obj data index \""{}\"""".format(x[0][0]))
    seen.add(x[0][0])




def parseObject(obj_in):
    obj_out = { ""data"":[] }
    props_a = obj_in.attrib
    op = ""object property""
    
    if _DEBUG: print("" parsing object \""{}\""..."".format(tryDict(props_a, ""name"") or ""NAMELESS""))
    if keyWarn(props_a, ""name""  , cat=op): obj_out[""name""  ] = ""NAMELESS""
    else                                 : obj_out[""name""  ] = props_a[""name""]
    if keyWarn(props_a, ""x""     , cat=op): obj_out[""x""     ] = 0
    else                                 : obj_out[""x""     ] = convertType(""int"", props_a[""x""])
    if keyWarn(props_a, ""y""     , cat=op): obj_out[""y""     ] = 0
    else                                 : obj_out[""y""     ] = convertType(""int"", props_a[""y""])
    if keyWarn(props_a, ""width"" , cat=op): obj_out[""width"" ] = 0
    else                                 : obj_out[""width"" ] = convertType(""int"", props_a[""width""])
    if keyWarn(props_a, ""height"", cat=op): obj_out[""height""] = 0
    else                                 : obj_out[""height""] = convertType(""int"", props_a[""height""])
    if keyWarn(props_a, ""type""  , cat=op): obj_out[""type""  ] = 0
    else                                 : obj_out[""type""  ] = tryTypeWarn(props_a[""type""])
    
    #this should occur whether or not _DEBUG is True
    if obj_out[""type""] == 0: print(""  Warning: object \""{}\""'s type is equal to 0"".format(obj_out[""name""]))
    
    #hitbox offset is not an intrinsic object property,
     #so they need to be specified with a custom property
    obj_out[""hb_offset_x""] = 0
    obj_out[""hb_offset_y""] = 0


    _props_b = obj_in.find(""properties"")
    props_b  = []
    
    if _props_b != None:
        for prop in _props_b.findall(""property""):
            pName  = prop.attrib[""name"" ].split(""_"")
            pType  = prop.attrib[""type"" ]
            pValue = prop.attrib[""value""]
            if len(pName) < 2: printError(""\""{}\"" isn't a valid obj data property name"".format(pName[0]))
            pIndex = tryInt(pName[0])
            if pIndex == None: printError(""\""{}\"" has an invalid obj data property index"".format(pName[0]))
            pName[0] = pIndex
            props_b.append(  (pName, convertType(pType, pValue))  )
    
        checkForDuplicateIndexes(props_b) #properties can't share the same index
        props_b = sorted(props_b,  key = lambda x: x[0][0]  ) #sort by their indexes
    
    else:
        return obj_out
    
    
    data = []
    for prop in props_b:
        pType  = prop[0][1].lower()
        pName  = (""_"").join(prop[0][2:])
        pValue = prop[1]
        if pType not in obj_data_types:
            printError(""\""{}\"" is not a valid obj data type"".format(pType))
        if pName[0:10] == ""hb_offset_"":
            if pType != ""u8"":
                printError(""hb_offset_<x/y> is not of type u8"")
            if pName != ""hb_offset_x""  and  pName != ""hb_offset_y"":
                printError(""malformed offset name \""{}\"""".format(pName))
            obj_out[pName] = pValue
        else:
            data.append(  (pType, pValue, pName)  )
    
    
    obj_out[""data""] = data

    return obj_out




def printLayer(layers, name):
    if tryDict(layers, name) == None: return
    count = 0
    print(""  {}: ["".format(name), end="""")
    for tile in layers[name]:
        if count%32 == 0: print(""\n    "", end="""")
        print(str(tile).rjust(3), end="","")
        count += 1
    print(""\n  ],"")
    
def printScene(scene, printLayers=_PRINT_LAYERS):
    print(""  --PROPERTIES--:"")
    pprint(scene[""properties""], indent=4)
    
    if printLayers:
        print(""  --LAYERS--"")
        printLayer(scene[""layers""], ""collision"")
        printLayer(scene[""layers""], ""fg""       )
        printLayer(scene[""layers""], ""mg""       )
        
    print(""  --OBJECTS--"")
    pprint(scene[""objs""])

def parseSceneMap(scene_id, announce=True):
    filename = sceneIdToPath(scene_id)
    if not exists(filename): printError(""scene \""{}\"" does not exist"".format(filename))
    if not isfile(filename): printError(""scene \""{}\"" is not a file"".format(filename))
    if _DEBUG or announce: print(""PARSING \""{}\"":"".format(filename))
    tree = ET.parse(filename)
    map  = tree.getroot()
    
    #get map's intrinsic properties
    width       = int(map.attrib[""width""     ]) #should be 32
    height      = int(map.attrib[""height""    ]) #should be 18
    tileWidth  = int(map.attrib[""tilewidth"" ]) #should be 24 (unused)
    tileHeight = int(map.attrib[""tileheight""]) #should be 24 (unused)
    mapLength   = width*height
    
    if width      != 32: printError(""map width is not 32"")
    if height     != 18: printError(""map height is not 18"")
    if tileWidth  != 24: printError(""tile width is not 24"")
    if tileHeight != 24: printError(""tile height is not 24"")
    
    
    
    #get map's custom properties
    props = {}
    for prop in map.find(""properties""):
        pName  = tryDict(prop.attrib, ""name"" ) or ""NAMELESS""
        pType  = tryDict(prop.attrib, ""type"" )
        pValue = tryDict(prop.attrib, ""value"") or ""NOVALUE""
        props[ pName ] = convertType(pType, pValue)

    if  keyWarn(props, ""bmp_bg""    ):  props[""bmp_bg""    ] = 0
    if  keyWarn(props, ""repeat_bg"" ):  props[""repeat_bg"" ] = False #lol
    #if keyWarn(props, ""objs_len""  ):  props[""objs_len""  ] = 0 #(calculated later)
    #if keyWarn(props, ""tileset_a"" ):  props[""tileset_a"" ] = 0 #(calculated later)
    #if keyWarn(props, ""tileset_b"" ):  props[""tileset_b"" ] = 0 #(calculated later)
    if  keyWarn(props, ""edge_n""    ):  props[""edge_n""    ] = 0
    if  keyWarn(props, ""edge_s""    ):  props[""edge_s""    ] = 0
    if  keyWarn(props, ""edge_w""    ):  props[""edge_w""    ] = 0
    if  keyWarn(props, ""edge_e""    ):  props[""edge_e""    ] = 0
    #if keyWarn(props, ""scene""     ):  props[""scene""     ] = 0 #(calculated later)
    if  keyWarn(props, ""music""     ):  props[""music""     ] = 0
    if  keyWarn(props, ""ambience_a""):  props[""ambience_a""] = 0
    if  keyWarn(props, ""ambience_b""):  props[""ambience_b""] = 0
    
    
    
    #calculate tileset boundaries
    _tsets = []
    for tset in map.findall(""tileset""):
        tFirstGID = int(tryDict(tset.attrib, ""firstgid"")) - 1
        tName     = extractTilesetName(tryDict(tset.attrib, ""source""))
        _tsets.append(  ( tFirstGID, tryInt(tName) or 0 )  )
    tsets = sorted(_tsets,  key = lambda x: x[0]  ) #sorted by first element
    
    if   len(tsets) < 3: printError(""map cannot have less than 3 tilesets (including collision)"")
    elif len(tsets) > 3: printError(""map cannot have more than 3 tilesets (including collision)"")
       
     #there should only be 1 tileset that registers as null (the collision's tileset)
    tset_offsets = [0,] * 3
    tset_nulls, tset_valids  =  0, 0
    tset_a,     tset_b       =  0, 0
    for i in range(len(tsets)):
        #collision tileset
        if    tsets[i][1] == 0:  tset_offsets[i] = -1;  tset_nulls  += 1
        #tileset_a
        elif  tset_valids == 0:  tset_a = tsets[i][1];  tset_valids += 1
        #tileset_b
        else                  :  tset_b = tsets[i][1];  tset_offsets[i] = 128
    
    if tset_nulls != 1: printError(""map must have exactly 1 null tileset, reserved for collider map"")

    
    
    #get map's layer data
    layers = {}
    for layer in map.findall(""layer""):
        lName   =      tryDict(layer.attrib,""name""  ) or ""NAMELESS""
        lWidth  = int( tryDict(layer.attrib,""width"" ) or 0 )
        lHeight = int( tryDict(layer.attrib,""height"") or 0 )
        lLength = lWidth*lHeight
        # n-1 to make sure both tile 0 and 1 are treated as transparent
        lData   = [ max(int(n)-1, 0) for n in layer.find(""data"").text.split("","") ] #csv to list
        if lLength != mapLength : valid = printError(""layer dims inconsistent with map dimensions"")
        if lLength != len(lData): valid = printError(""layer dims inconsistent with its attributes"")
        layers[ lName ] = lData
    
    valid = True
    if ""collision"" not in layers: valid = printError(""layer \""collision\"" doesn't exist"", quit=False)
    if ""fg""        not in layers: valid = printError(""layer \""fg\"" doesn't exist"",        quit=False)
    if ""mg""        not in layers: valid = printError(""layer \""mg\"" doesn't exist"",        quit=False)
    if not valid: exit(-1)
    
    for i in range(len(layers[""collision""])):
        #collider info is 6 bits (2^6 = 64),
         #which is a factor of a normal tileset's 7 (2^7 = 128) anyway
        layers[""collision""][i] %= 64
        
    for i in range(len(layers[""fg""])): #(fg & mg should be the same length)
        #fg
        tile = layers[""fg""][i]
        offset = tset_offsets[tile//128] #tile//128 should be between 0 -> 2
        if offset == -1  and  (tile%128) != 0:
            printError(""fg cannot contain collision map tiles"")
        layers[""fg""][i] = (tile%128) + max(offset, 0)
        if layers[""fg""][i] == 128: layers[""fg""][i] = 0 #128 is also transparent
        
        #mg
        tile = layers[""mg""][i]
        offset = tset_offsets[tile//128]
        if offset == -1  and  (tile%128) != 0:
            printError(""mg cannot contain collision map tiles"")
        layers[""mg""][i] = (tile%128) + max(offset, 0)
        if layers[""mg""][i] == 128: layers[""mg""][i] = 0 #128 is also transparent
        
    #check if a given layer's data should be omitted from scene descriptor file
    fg_nonzero = False
    mg_nonzero = False
    for i in range(len(layers[""fg""])): #(fg & mg should be the same length)
        if (layers[""fg""][i]%128) != 0: fg_nonzero = True
        if (layers[""mg""][i]%128) != 0: mg_nonzero = True
        
    if not fg_nonzero  and  not fg_nonzero:
        printError(""fg and mg cannot both be empty"")
    
    
    
    props[""objs_len""  ] = 0
    props[""tileset_a"" ] = tset_a
    props[""tileset_b"" ] = tset_b
    props[""scene""     ] = scene_id
    props[""fg_nonzero""] = fg_nonzero
    props[""mg_nonzero""] = mg_nonzero
    
    #get scene objects
    obj_groups = map.findall(""objectgroup"")
    objs = []
    if len(obj_groups) >  1: printError(""scene cannot have more than 1 object group"")
    if len(obj_groups) == 1:
        #(this loop will not run at all if there are no objects)
        for obj in obj_groups[0].findall(""object""):
            props[""objs_len"" ] += 1
            objs.append(parseObject(obj))



    #automatically mark edge as a loop if that edge is null
    if props[""edge_n""] == 0: props[""edge_n""] = scene_id
    if props[""edge_s""] == 0: props[""edge_s""] = scene_id
    if props[""edge_w""] == 0: props[""edge_w""] = scene_id
    if props[""edge_e""] == 0: props[""edge_e""] = scene_id
    
    #error if all 4 edges make the scene loop
    edges = (scene_id, props[""edge_n""], props[""edge_s""],
                       props[""edge_w""], props[""edge_e""])
    if all(i==edges[0] for i in edges):
        printError(""all 4 edges make scene loop"")


    scene = {}
    scene[""properties""] = props
    scene[""layers""    ] = layers
    scene[""objs""      ] = objs
    
    if _DEBUG: printScene(scene)
    
    return scene"
